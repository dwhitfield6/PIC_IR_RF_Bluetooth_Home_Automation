

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Apr 10 12:43:50 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK2,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    20                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    21                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1
   127                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   137                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   138                           	psect	text111,global,reloc=2,class=CODE,delta=1
   139                           	psect	text112,global,reloc=2,class=CODE,delta=1
   140                           	psect	text113,global,reloc=2,class=CODE,delta=1
   141                           	psect	text114,global,reloc=2,class=CODE,delta=1
   142                           	psect	text115,global,reloc=2,class=CODE,delta=1
   143                           	psect	text116,global,reloc=2,class=CODE,delta=1
   144                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   145                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   146  0000                     
   147                           	psect	idataCOMRAM
   148  009566                     __pidataCOMRAM:
   149                           	opt stack 0
   150                           
   151                           ;initializer for _SN
   152  009566  0001               	dw	1
   153  009568  0000               	dw	0
   154                           
   155                           ;initializer for _IRbitPosition
   156  00956A  20                 	db	32
   157                           
   158                           ;initializer for _IRcodePlace
   159  00956B  01                 	db	1
   160                           
   161                           ;initializer for _RF_IR
   162  00956C  37                 	db	55
   163                           
   164                           ;initializer for _RF_IR_Postscaler
   165  00956D  02                 	db	2
   166                           
   167                           ;initializer for _ReceivingIR
   168  00956E  0D                 	db	13
   169                           
   170                           	psect	idataBANK0
   171  00957C                     __pidataBANK0:
   172                           	opt stack 0
   173                           
   174                           ;initializer for _Sent
   175  00957C  01                 	db	1
   176                           
   177                           	psect	idataBANK2
   178  0091F0                     __pidataBANK2:
   179                           	opt stack 0
   180                           
   181                           ;initializer for _ProductName
   182  0091F0  48                 	db	72
   183  0091F1  6F                 	db	111
   184  0091F2  6D                 	db	109
   185  0091F3  65                 	db	101
   186  0091F4  20                 	db	32
   187  0091F5  41                 	db	65
   188  0091F6  75                 	db	117
   189  0091F7  74                 	db	116
   190  0091F8  6F                 	db	111
   191  0091F9  6D                 	db	109
   192  0091FA  61                 	db	97
   193  0091FB  74                 	db	116
   194  0091FC  69                 	db	105
   195  0091FD  6F                 	db	111
   196  0091FE  6E                 	db	110
   197  0091FF  00                 	db	0
   198  009200  00                 	db	0
   199  009201  00                 	db	0
   200  009202  00                 	db	0
   201  009203  00                 	db	0
   202  009204  00                 	db	0
   203  009205  00                 	db	0
   204  009206  00                 	db	0
   205  009207  00                 	db	0
   206  009208  00                 	db	0
   207  009209  00                 	db	0
   208  00920A  00                 	db	0
   209  00920B  00                 	db	0
   210  00920C  00                 	db	0
   211  00920D  00                 	db	0
   212  00920E  00                 	db	0
   213  00920F  00                 	db	0
   214  009210  00                 	db	0
   215  009211  00                 	db	0
   216  009212  00                 	db	0
   217  009213  00                 	db	0
   218  009214  00                 	db	0
   219  009215  00                 	db	0
   220  009216  00                 	db	0
   221  009217  00                 	db	0
   222  009218  00                 	db	0
   223  009219  00                 	db	0
   224  00921A  00                 	db	0
   225  00921B  00                 	db	0
   226  00921C  00                 	db	0
   227  00921D  00                 	db	0
   228  00921E  00                 	db	0
   229  00921F  00                 	db	0
   230  009220  00                 	db	0
   231  009221  00                 	db	0
   232                           
   233                           ;initializer for _IRtimeout
   234  009222  1389               	dw	5001
   235  009224  0000               	dw	0
   236                           
   237                           	psect	mediumconst
   238  00EE60                     __pmediumconst:
   239                           	opt stack 0
   240  00EE60  00                 	db	0
   241  00EE61                     _dpowers:
   242                           	opt stack 0
   243  00EE61  0001               	dw	1
   244  00EE63  0000               	dw	0
   245  00EE65  000A               	dw	10
   246  00EE67  0000               	dw	0
   247  00EE69  0064               	dw	100
   248  00EE6B  0000               	dw	0
   249  00EE6D  03E8               	dw	1000
   250  00EE6F  0000               	dw	0
   251  00EE71  2710               	dw	10000
   252  00EE73  0000               	dw	0
   253  00EE75  86A0               	dw	34464
   254  00EE77  0001               	dw	1
   255  00EE79  4240               	dw	16960
   256  00EE7B  000F               	dw	15
   257  00EE7D  9680               	dw	38528
   258  00EE7F  0098               	dw	152
   259  00EE81  E100               	dw	57600
   260  00EE83  05F5               	dw	1525
   261  00EE85  CA00               	dw	51712
   262  00EE87  3B9A               	dw	15258
   263  00EE89                     __end_of_dpowers:
   264                           	opt stack 0
   265  00EE89                     __npowers_:
   266                           	opt stack 0
   267  00EE89  00                 	db	0
   268  00EE8A  80                 	db	128
   269  00EE8B  3F                 	db	63
   270  00EE8C  CD                 	db	205
   271  00EE8D  CC                 	db	204
   272  00EE8E  3D                 	db	61
   273  00EE8F  D7                 	db	215
   274  00EE90  23                 	db	35
   275  00EE91  3C                 	db	60
   276  00EE92  12                 	db	18
   277  00EE93  83                 	db	131
   278  00EE94  3A                 	db	58
   279  00EE95  B7                 	db	183
   280  00EE96  D1                 	db	209
   281  00EE97  38                 	db	56
   282  00EE98  C6                 	db	198
   283  00EE99  27                 	db	39
   284  00EE9A  37                 	db	55
   285  00EE9B  38                 	db	56
   286  00EE9C  86                 	db	134
   287  00EE9D  35                 	db	53
   288  00EE9E  C0                 	db	192
   289  00EE9F  D6                 	db	214
   290  00EEA0  33                 	db	51
   291  00EEA1  CC                 	db	204
   292  00EEA2  2B                 	db	43
   293  00EEA3  32                 	db	50
   294  00EEA4  70                 	db	112
   295  00EEA5  89                 	db	137
   296  00EEA6  30                 	db	48
   297  00EEA7  E7                 	db	231
   298  00EEA8  DB                 	db	219
   299  00EEA9  2E                 	db	46
   300  00EEAA  E5                 	db	229
   301  00EEAB  3C                 	db	60
   302  00EEAC  1E                 	db	30
   303  00EEAD  42                 	db	66
   304  00EEAE  A2                 	db	162
   305  00EEAF  0D                 	db	13
   306  00EEB0                     __end_of__npowers_:
   307                           	opt stack 0
   308  00EEB0                     __powers_:
   309                           	opt stack 0
   310  00EEB0  00                 	db	0
   311  00EEB1  80                 	db	128
   312  00EEB2  3F                 	db	63
   313  00EEB3  00                 	db	0
   314  00EEB4  20                 	db	32
   315  00EEB5  41                 	db	65
   316  00EEB6  00                 	db	0
   317  00EEB7  C8                 	db	200
   318  00EEB8  42                 	db	66
   319  00EEB9  00                 	db	0
   320  00EEBA  7A                 	db	122
   321  00EEBB  44                 	db	68
   322  00EEBC  40                 	db	64
   323  00EEBD  1C                 	db	28
   324  00EEBE  46                 	db	70
   325  00EEBF  50                 	db	80
   326  00EEC0  C3                 	db	195
   327  00EEC1  47                 	db	71
   328  00EEC2  24                 	db	36
   329  00EEC3  74                 	db	116
   330  00EEC4  49                 	db	73
   331  00EEC5  97                 	db	151
   332  00EEC6  18                 	db	24
   333  00EEC7  4B                 	db	75
   334  00EEC8  BC                 	db	188
   335  00EEC9  BE                 	db	190
   336  00EECA  4C                 	db	76
   337  00EECB  6B                 	db	107
   338  00EECC  6E                 	db	110
   339  00EECD  4E                 	db	78
   340  00EECE  03                 	db	3
   341  00EECF  15                 	db	21
   342  00EED0  50                 	db	80
   343  00EED1  79                 	db	121
   344  00EED2  AD                 	db	173
   345  00EED3  60                 	db	96
   346  00EED4  F3                 	db	243
   347  00EED5  49                 	db	73
   348  00EED6  71                 	db	113
   349  00EED7                     __end_of__powers_:
   350                           	opt stack 0
   351  00EED7                     _hexpowers:
   352                           	opt stack 0
   353  00EED7  0001               	dw	1
   354  00EED9  0000               	dw	0
   355  00EEDB  0010               	dw	16
   356  00EEDD  0000               	dw	0
   357  00EEDF  0100               	dw	256
   358  00EEE1  0000               	dw	0
   359  00EEE3  1000               	dw	4096
   360  00EEE5  0000               	dw	0
   361  00EEE7  0000               	dw	0
   362  00EEE9  0001               	dw	1
   363  00EEEB  0000               	dw	0
   364  00EEED  0010               	dw	16
   365  00EEEF  0000               	dw	0
   366  00EEF1  0100               	dw	256
   367  00EEF3  0000               	dw	0
   368  00EEF5  1000               	dw	4096
   369  00EEF7                     __end_of_hexpowers:
   370                           	opt stack 0
   371  00EEF7                     _Conf2_ChannelH_1_OFF_STR:
   372                           	opt stack 0
   373  00EEF7  43                 	db	67
   374  00EEF8  6F                 	db	111
   375  00EEF9  6E                 	db	110
   376  00EEFA  66                 	db	102
   377  00EEFB  32                 	db	50
   378  00EEFC  5F                 	db	95
   379  00EEFD  43                 	db	67
   380  00EEFE  68                 	db	104
   381  00EEFF  61                 	db	97
   382  00EF00  6E                 	db	110
   383  00EF01  6E                 	db	110
   384  00EF02  65                 	db	101
   385  00EF03  6C                 	db	108
   386  00EF04  48                 	db	72
   387  00EF05  5F                 	db	95
   388  00EF06  31                 	db	49
   389  00EF07  5F                 	db	95
   390  00EF08  4F                 	db	79
   391  00EF09  46                 	db	70
   392  00EF0A  46                 	db	70
   393  00EF0B  00                 	db	0
   394  00EF0C                     __end_of_Conf2_ChannelH_1_OFF_STR:
   395                           	opt stack 0
   396  00EF0C                     _Conf2_ChannelH_2_OFF_STR:
   397                           	opt stack 0
   398  00EF0C  43                 	db	67
   399  00EF0D  6F                 	db	111
   400  00EF0E  6E                 	db	110
   401  00EF0F  66                 	db	102
   402  00EF10  32                 	db	50
   403  00EF11  5F                 	db	95
   404  00EF12  43                 	db	67
   405  00EF13  68                 	db	104
   406  00EF14  61                 	db	97
   407  00EF15  6E                 	db	110
   408  00EF16  6E                 	db	110
   409  00EF17  65                 	db	101
   410  00EF18  6C                 	db	108
   411  00EF19  48                 	db	72
   412  00EF1A  5F                 	db	95
   413  00EF1B  32                 	db	50
   414  00EF1C  5F                 	db	95
   415  00EF1D  4F                 	db	79
   416  00EF1E  46                 	db	70
   417  00EF1F  46                 	db	70
   418  00EF20  00                 	db	0
   419  00EF21                     __end_of_Conf2_ChannelH_2_OFF_STR:
   420                           	opt stack 0
   421  00EF21                     _Conf2_ChannelH_3_OFF_STR:
   422                           	opt stack 0
   423  00EF21  43                 	db	67
   424  00EF22  6F                 	db	111
   425  00EF23  6E                 	db	110
   426  00EF24  66                 	db	102
   427  00EF25  32                 	db	50
   428  00EF26  5F                 	db	95
   429  00EF27  43                 	db	67
   430  00EF28  68                 	db	104
   431  00EF29  61                 	db	97
   432  00EF2A  6E                 	db	110
   433  00EF2B  6E                 	db	110
   434  00EF2C  65                 	db	101
   435  00EF2D  6C                 	db	108
   436  00EF2E  48                 	db	72
   437  00EF2F  5F                 	db	95
   438  00EF30  33                 	db	51
   439  00EF31  5F                 	db	95
   440  00EF32  4F                 	db	79
   441  00EF33  46                 	db	70
   442  00EF34  46                 	db	70
   443  00EF35  00                 	db	0
   444  00EF36                     __end_of_Conf2_ChannelH_3_OFF_STR:
   445                           	opt stack 0
   446  00EF36                     _Conf2_ChannelH_1_ON_STR:
   447                           	opt stack 0
   448  00EF36  43                 	db	67
   449  00EF37  6F                 	db	111
   450  00EF38  6E                 	db	110
   451  00EF39  66                 	db	102
   452  00EF3A  32                 	db	50
   453  00EF3B  5F                 	db	95
   454  00EF3C  43                 	db	67
   455  00EF3D  68                 	db	104
   456  00EF3E  61                 	db	97
   457  00EF3F  6E                 	db	110
   458  00EF40  6E                 	db	110
   459  00EF41  65                 	db	101
   460  00EF42  6C                 	db	108
   461  00EF43  48                 	db	72
   462  00EF44  5F                 	db	95
   463  00EF45  31                 	db	49
   464  00EF46  5F                 	db	95
   465  00EF47  4F                 	db	79
   466  00EF48  4E                 	db	78
   467  00EF49  00                 	db	0
   468  00EF4A                     __end_of_Conf2_ChannelH_1_ON_STR:
   469                           	opt stack 0
   470  00EF4A                     _Conf2_ChannelH_2_ON_STR:
   471                           	opt stack 0
   472  00EF4A  43                 	db	67
   473  00EF4B  6F                 	db	111
   474  00EF4C  6E                 	db	110
   475  00EF4D  66                 	db	102
   476  00EF4E  32                 	db	50
   477  00EF4F  5F                 	db	95
   478  00EF50  43                 	db	67
   479  00EF51  68                 	db	104
   480  00EF52  61                 	db	97
   481  00EF53  6E                 	db	110
   482  00EF54  6E                 	db	110
   483  00EF55  65                 	db	101
   484  00EF56  6C                 	db	108
   485  00EF57  48                 	db	72
   486  00EF58  5F                 	db	95
   487  00EF59  32                 	db	50
   488  00EF5A  5F                 	db	95
   489  00EF5B  4F                 	db	79
   490  00EF5C  4E                 	db	78
   491  00EF5D  00                 	db	0
   492  00EF5E                     __end_of_Conf2_ChannelH_2_ON_STR:
   493                           	opt stack 0
   494  00EF5E                     _Conf2_ChannelH_3_ON_STR:
   495                           	opt stack 0
   496  00EF5E  43                 	db	67
   497  00EF5F  6F                 	db	111
   498  00EF60  6E                 	db	110
   499  00EF61  66                 	db	102
   500  00EF62  32                 	db	50
   501  00EF63  5F                 	db	95
   502  00EF64  43                 	db	67
   503  00EF65  68                 	db	104
   504  00EF66  61                 	db	97
   505  00EF67  6E                 	db	110
   506  00EF68  6E                 	db	110
   507  00EF69  65                 	db	101
   508  00EF6A  6C                 	db	108
   509  00EF6B  48                 	db	72
   510  00EF6C  5F                 	db	95
   511  00EF6D  33                 	db	51
   512  00EF6E  5F                 	db	95
   513  00EF6F  4F                 	db	79
   514  00EF70  4E                 	db	78
   515  00EF71  00                 	db	0
   516  00EF72                     __end_of_Conf2_ChannelH_3_ON_STR:
   517                           	opt stack 0
   518  00EF72                     _Conf2_ChannelB_OFF_STR:
   519                           	opt stack 0
   520  00EF72  43                 	db	67
   521  00EF73  6F                 	db	111
   522  00EF74  6E                 	db	110
   523  00EF75  66                 	db	102
   524  00EF76  32                 	db	50
   525  00EF77  5F                 	db	95
   526  00EF78  43                 	db	67
   527  00EF79  68                 	db	104
   528  00EF7A  61                 	db	97
   529  00EF7B  6E                 	db	110
   530  00EF7C  6E                 	db	110
   531  00EF7D  65                 	db	101
   532  00EF7E  6C                 	db	108
   533  00EF7F  42                 	db	66
   534  00EF80  5F                 	db	95
   535  00EF81  4F                 	db	79
   536  00EF82  46                 	db	70
   537  00EF83  46                 	db	70
   538  00EF84  00                 	db	0
   539  00EF85                     __end_of_Conf2_ChannelB_OFF_STR:
   540                           	opt stack 0
   541  00EF85                     _Conf2_ChannelD_OFF_STR:
   542                           	opt stack 0
   543  00EF85  43                 	db	67
   544  00EF86  6F                 	db	111
   545  00EF87  6E                 	db	110
   546  00EF88  66                 	db	102
   547  00EF89  32                 	db	50
   548  00EF8A  5F                 	db	95
   549  00EF8B  43                 	db	67
   550  00EF8C  68                 	db	104
   551  00EF8D  61                 	db	97
   552  00EF8E  6E                 	db	110
   553  00EF8F  6E                 	db	110
   554  00EF90  65                 	db	101
   555  00EF91  6C                 	db	108
   556  00EF92  44                 	db	68
   557  00EF93  5F                 	db	95
   558  00EF94  4F                 	db	79
   559  00EF95  46                 	db	70
   560  00EF96  46                 	db	70
   561  00EF97  00                 	db	0
   562  00EF98                     __end_of_Conf2_ChannelD_OFF_STR:
   563                           	opt stack 0
   564  00EF98                     _Conf2_ChannelB_ON_STR:
   565                           	opt stack 0
   566  00EF98  43                 	db	67
   567  00EF99  6F                 	db	111
   568  00EF9A  6E                 	db	110
   569  00EF9B  66                 	db	102
   570  00EF9C  32                 	db	50
   571  00EF9D  5F                 	db	95
   572  00EF9E  43                 	db	67
   573  00EF9F  68                 	db	104
   574  00EFA0  61                 	db	97
   575  00EFA1  6E                 	db	110
   576  00EFA2  6E                 	db	110
   577  00EFA3  65                 	db	101
   578  00EFA4  6C                 	db	108
   579  00EFA5  42                 	db	66
   580  00EFA6  5F                 	db	95
   581  00EFA7  4F                 	db	79
   582  00EFA8  4E                 	db	78
   583  00EFA9  00                 	db	0
   584  00EFAA                     __end_of_Conf2_ChannelB_ON_STR:
   585                           	opt stack 0
   586  00EFAA                     _Conf2_ChannelD_ON_STR:
   587                           	opt stack 0
   588  00EFAA  43                 	db	67
   589  00EFAB  6F                 	db	111
   590  00EFAC  6E                 	db	110
   591  00EFAD  66                 	db	102
   592  00EFAE  32                 	db	50
   593  00EFAF  5F                 	db	95
   594  00EFB0  43                 	db	67
   595  00EFB1  68                 	db	104
   596  00EFB2  61                 	db	97
   597  00EFB3  6E                 	db	110
   598  00EFB4  6E                 	db	110
   599  00EFB5  65                 	db	101
   600  00EFB6  6C                 	db	108
   601  00EFB7  44                 	db	68
   602  00EFB8  5F                 	db	95
   603  00EFB9  4F                 	db	79
   604  00EFBA  4E                 	db	78
   605  00EFBB  00                 	db	0
   606  00EFBC                     __end_of_Conf2_ChannelD_ON_STR:
   607                           	opt stack 0
   608  00EFBC                     _Conf2_ChannelB_OFF:
   609                           	opt stack 0
   610  00EFBC  00                 	db	0
   611  00EFBD  01                 	db	1
   612  00EFBE  01                 	db	1
   613  00EFBF  00                 	db	0
   614  00EFC0  01                 	db	1
   615  00EFC1  00                 	db	0
   616  00EFC2  00                 	db	0
   617  00EFC3  00                 	db	0
   618  00EFC4  00                 	db	0
   619  00EFC5  00                 	db	0
   620  00EFC6  00                 	db	0
   621  00EFC7  01                 	db	1
   622  00EFC8  00                 	db	0
   623  00EFC9  01                 	db	1
   624  00EFCA  00                 	db	0
   625  00EFCB  00                 	db	0
   626  00EFCC                     __end_of_Conf2_ChannelB_OFF:
   627                           	opt stack 0
   628  00EFCC                     _Conf2_ChannelB_ON:
   629                           	opt stack 0
   630  00EFCC  00                 	db	0
   631  00EFCD  01                 	db	1
   632  00EFCE  01                 	db	1
   633  00EFCF  00                 	db	0
   634  00EFD0  01                 	db	1
   635  00EFD1  00                 	db	0
   636  00EFD2  00                 	db	0
   637  00EFD3  00                 	db	0
   638  00EFD4  00                 	db	0
   639  00EFD5  00                 	db	0
   640  00EFD6  01                 	db	1
   641  00EFD7  00                 	db	0
   642  00EFD8  00                 	db	0
   643  00EFD9  01                 	db	1
   644  00EFDA  00                 	db	0
   645  00EFDB  00                 	db	0
   646  00EFDC                     __end_of_Conf2_ChannelB_ON:
   647                           	opt stack 0
   648  00EFDC                     _Conf2_ChannelD_OFF:
   649                           	opt stack 0
   650  00EFDC  00                 	db	0
   651  00EFDD  01                 	db	1
   652  00EFDE  01                 	db	1
   653  00EFDF  00                 	db	0
   654  00EFE0  01                 	db	1
   655  00EFE1  00                 	db	0
   656  00EFE2  00                 	db	0
   657  00EFE3  00                 	db	0
   658  00EFE4  00                 	db	0
   659  00EFE5  00                 	db	0
   660  00EFE6  00                 	db	0
   661  00EFE7  01                 	db	1
   662  00EFE8  00                 	db	0
   663  00EFE9  00                 	db	0
   664  00EFEA  00                 	db	0
   665  00EFEB  01                 	db	1
   666  00EFEC                     __end_of_Conf2_ChannelD_OFF:
   667                           	opt stack 0
   668  00EFEC                     _Conf2_ChannelD_ON:
   669                           	opt stack 0
   670  00EFEC  00                 	db	0
   671  00EFED  01                 	db	1
   672  00EFEE  01                 	db	1
   673  00EFEF  00                 	db	0
   674  00EFF0  01                 	db	1
   675  00EFF1  00                 	db	0
   676  00EFF2  00                 	db	0
   677  00EFF3  00                 	db	0
   678  00EFF4  00                 	db	0
   679  00EFF5  00                 	db	0
   680  00EFF6  01                 	db	1
   681  00EFF7  00                 	db	0
   682  00EFF8  00                 	db	0
   683  00EFF9  00                 	db	0
   684  00EFFA  00                 	db	0
   685  00EFFB  01                 	db	1
   686  00EFFC                     __end_of_Conf2_ChannelD_ON:
   687                           	opt stack 0
   688  00EFFC                     _Conf2_ChannelH_1_OFF:
   689                           	opt stack 0
   690  00EFFC  00                 	db	0
   691  00EFFD  01                 	db	1
   692  00EFFE  01                 	db	1
   693  00EFFF  00                 	db	0
   694  00F000  01                 	db	1
   695  00F001  00                 	db	0
   696  00F002  00                 	db	0
   697  00F003  00                 	db	0
   698  00F004  00                 	db	0
   699  00F005  01                 	db	1
   700  00F006  00                 	db	0
   701  00F007  00                 	db	0
   702  00F008  00                 	db	0
   703  00F009  00                 	db	0
   704  00F00A  00                 	db	0
   705  00F00B  00                 	db	0
   706  00F00C                     __end_of_Conf2_ChannelH_1_OFF:
   707                           	opt stack 0
   708  00F00C                     _Conf2_ChannelH_1_ON:
   709                           	opt stack 0
   710  00F00C  00                 	db	0
   711  00F00D  01                 	db	1
   712  00F00E  01                 	db	1
   713  00F00F  00                 	db	0
   714  00F010  01                 	db	1
   715  00F011  00                 	db	0
   716  00F012  00                 	db	0
   717  00F013  00                 	db	0
   718  00F014  01                 	db	1
   719  00F015  00                 	db	0
   720  00F016  00                 	db	0
   721  00F017  00                 	db	0
   722  00F018  00                 	db	0
   723  00F019  00                 	db	0
   724  00F01A  00                 	db	0
   725  00F01B  00                 	db	0
   726  00F01C                     __end_of_Conf2_ChannelH_1_ON:
   727                           	opt stack 0
   728  00F01C                     _Conf2_ChannelH_2_OFF:
   729                           	opt stack 0
   730  00F01C  00                 	db	0
   731  00F01D  01                 	db	1
   732  00F01E  01                 	db	1
   733  00F01F  00                 	db	0
   734  00F020  01                 	db	1
   735  00F021  00                 	db	0
   736  00F022  00                 	db	0
   737  00F023  00                 	db	0
   738  00F024  00                 	db	0
   739  00F025  00                 	db	0
   740  00F026  00                 	db	0
   741  00F027  01                 	db	1
   742  00F028  00                 	db	0
   743  00F029  00                 	db	0
   744  00F02A  00                 	db	0
   745  00F02B  00                 	db	0
   746  00F02C                     __end_of_Conf2_ChannelH_2_OFF:
   747                           	opt stack 0
   748  00F02C                     _Conf2_ChannelH_2_ON:
   749                           	opt stack 0
   750  00F02C  00                 	db	0
   751  00F02D  01                 	db	1
   752  00F02E  01                 	db	1
   753  00F02F  00                 	db	0
   754  00F030  01                 	db	1
   755  00F031  00                 	db	0
   756  00F032  00                 	db	0
   757  00F033  00                 	db	0
   758  00F034  00                 	db	0
   759  00F035  00                 	db	0
   760  00F036  01                 	db	1
   761  00F037  00                 	db	0
   762  00F038  00                 	db	0
   763  00F039  00                 	db	0
   764  00F03A  00                 	db	0
   765  00F03B  00                 	db	0
   766  00F03C                     __end_of_Conf2_ChannelH_2_ON:
   767                           	opt stack 0
   768  00F03C                     _Conf2_ChannelH_3_OFF:
   769                           	opt stack 0
   770  00F03C  00                 	db	0
   771  00F03D  01                 	db	1
   772  00F03E  01                 	db	1
   773  00F03F  00                 	db	0
   774  00F040  01                 	db	1
   775  00F041  00                 	db	0
   776  00F042  01                 	db	1
   777  00F043  00                 	db	0
   778  00F044  00                 	db	0
   779  00F045  00                 	db	0
   780  00F046  00                 	db	0
   781  00F047  00                 	db	0
   782  00F048  00                 	db	0
   783  00F049  00                 	db	0
   784  00F04A  00                 	db	0
   785  00F04B  00                 	db	0
   786  00F04C                     __end_of_Conf2_ChannelH_3_OFF:
   787                           	opt stack 0
   788  00F04C                     _Conf2_ChannelH_3_ON:
   789                           	opt stack 0
   790  00F04C  00                 	db	0
   791  00F04D  01                 	db	1
   792  00F04E  01                 	db	1
   793  00F04F  00                 	db	0
   794  00F050  01                 	db	1
   795  00F051  00                 	db	0
   796  00F052  00                 	db	0
   797  00F053  01                 	db	1
   798  00F054  00                 	db	0
   799  00F055  00                 	db	0
   800  00F056  00                 	db	0
   801  00F057  00                 	db	0
   802  00F058  00                 	db	0
   803  00F059  00                 	db	0
   804  00F05A  00                 	db	0
   805  00F05B  00                 	db	0
   806  00F05C                     __end_of_Conf2_ChannelH_3_ON:
   807                           	opt stack 0
   808  00F05C                     _Conf1_ChannelD_STR:
   809                           	opt stack 0
   810  00F05C  43                 	db	67
   811  00F05D  6F                 	db	111
   812  00F05E  6E                 	db	110
   813  00F05F  66                 	db	102
   814  00F060  31                 	db	49
   815  00F061  5F                 	db	95
   816  00F062  43                 	db	67
   817  00F063  68                 	db	104
   818  00F064  61                 	db	97
   819  00F065  6E                 	db	110
   820  00F066  6E                 	db	110
   821  00F067  65                 	db	101
   822  00F068  6C                 	db	108
   823  00F069  44                 	db	68
   824  00F06A  00                 	db	0
   825  00F06B                     __end_of_Conf1_ChannelD_STR:
   826                           	opt stack 0
   827  00F06B                     _Conf1_ChannelE_STR:
   828                           	opt stack 0
   829  00F06B  43                 	db	67
   830  00F06C  6F                 	db	111
   831  00F06D  6E                 	db	110
   832  00F06E  66                 	db	102
   833  00F06F  31                 	db	49
   834  00F070  5F                 	db	95
   835  00F071  43                 	db	67
   836  00F072  68                 	db	104
   837  00F073  61                 	db	97
   838  00F074  6E                 	db	110
   839  00F075  6E                 	db	110
   840  00F076  65                 	db	101
   841  00F077  6C                 	db	108
   842  00F078  45                 	db	69
   843  00F079  00                 	db	0
   844  00F07A                     __end_of_Conf1_ChannelE_STR:
   845                           	opt stack 0
   846  00F07A                     _Conf1_ChannelF_STR:
   847                           	opt stack 0
   848  00F07A  43                 	db	67
   849  00F07B  6F                 	db	111
   850  00F07C  6E                 	db	110
   851  00F07D  66                 	db	102
   852  00F07E  31                 	db	49
   853  00F07F  5F                 	db	95
   854  00F080  43                 	db	67
   855  00F081  68                 	db	104
   856  00F082  61                 	db	97
   857  00F083  6E                 	db	110
   858  00F084  6E                 	db	110
   859  00F085  65                 	db	101
   860  00F086  6C                 	db	108
   861  00F087  46                 	db	70
   862  00F088  00                 	db	0
   863  00F089                     __end_of_Conf1_ChannelF_STR:
   864                           	opt stack 0
   865  00F089                     _SYNTAX_ERR:
   866                           	opt stack 0
   867  00F089  45                 	db	69
   868  00F08A  72                 	db	114
   869  00F08B  72                 	db	114
   870  00F08C  6F                 	db	111
   871  00F08D  72                 	db	114
   872  00F08E  3A                 	db	58
   873  00F08F  20                 	db	32
   874  00F090  53                 	db	83
   875  00F091  79                 	db	121
   876  00F092  6E                 	db	110
   877  00F093  74                 	db	116
   878  00F094  61                 	db	97
   879  00F095  78                 	db	120
   880  00F096  00                 	db	0
   881  00F097                     __end_of_SYNTAX_ERR:
   882                           	opt stack 0
   883  00F097                     _Conf1_ChannelD:
   884                           	opt stack 0
   885  00F097  03                 	db	3
   886  00F098  03                 	db	3
   887  00F099  03                 	db	3
   888  00F09A  03                 	db	3
   889  00F09B  03                 	db	3
   890  00F09C  03                 	db	3
   891  00F09D  00                 	db	0
   892  00F09E  00                 	db	0
   893  00F09F  01                 	db	1
   894  00F0A0  00                 	db	0
   895  00F0A1  00                 	db	0
   896  00F0A2  00                 	db	0
   897  00F0A3                     __end_of_Conf1_ChannelD:
   898                           	opt stack 0
   899  00F0A3                     _Conf1_ChannelE:
   900                           	opt stack 0
   901  00F0A3  00                 	db	0
   902  00F0A4  03                 	db	3
   903  00F0A5  03                 	db	3
   904  00F0A6  03                 	db	3
   905  00F0A7  03                 	db	3
   906  00F0A8  03                 	db	3
   907  00F0A9  00                 	db	0
   908  00F0AA  00                 	db	0
   909  00F0AB  01                 	db	1
   910  00F0AC  00                 	db	0
   911  00F0AD  00                 	db	0
   912  00F0AE  00                 	db	0
   913  00F0AF                     __end_of_Conf1_ChannelE:
   914                           	opt stack 0
   915  00F0AF                     _Conf1_ChannelF:
   916                           	opt stack 0
   917  00F0AF  03                 	db	3
   918  00F0B0  00                 	db	0
   919  00F0B1  03                 	db	3
   920  00F0B2  03                 	db	3
   921  00F0B3  03                 	db	3
   922  00F0B4  03                 	db	3
   923  00F0B5  00                 	db	0
   924  00F0B6  00                 	db	0
   925  00F0B7  01                 	db	1
   926  00F0B8  00                 	db	0
   927  00F0B9  00                 	db	0
   928  00F0BA  00                 	db	0
   929  00F0BB                     __end_of_Conf1_ChannelF:
   930                           	opt stack 0
   931  00F0BB                     _FirmVersion:
   932                           	opt stack 0
   933  00F0BB  31                 	db	49
   934  00F0BC  2E                 	db	46
   935  00F0BD  30                 	db	48
   936  00F0BE  5F                 	db	95
   937  00F0BF  44                 	db	68
   938  00F0C0  57                 	db	87
   939  00F0C1  30                 	db	48
   940  00F0C2  62                 	db	98
   941  00F0C3  00                 	db	0
   942  00F0C4                     __end_of_FirmVersion:
   943                           	opt stack 0
   944  00F0C4                     _PCBVersion:
   945                           	opt stack 0
   946  00F0C4  52                 	db	82
   947  00F0C5  65                 	db	101
   948  00F0C6  76                 	db	118
   949  00F0C7  41                 	db	65
   950  00F0C8  00                 	db	0
   951  00F0C9                     __end_of_PCBVersion:
   952                           	opt stack 0
   953  00F0C9                     _Conf1_Channels:
   954                           	opt stack 0
   955  00F0C9  44                 	db	68
   956  00F0CA  45                 	db	69
   957  00F0CB  46                 	db	70
   958  00F0CC  00                 	db	0
   959  00F0CD                     __end_of_Conf1_Channels:
   960                           	opt stack 0
   961  00F0CD                     _Conf2_Channels:
   962                           	opt stack 0
   963  00F0CD  42                 	db	66
   964  00F0CE  44                 	db	68
   965  00F0CF  48                 	db	72
   966  00F0D0  00                 	db	0
   967  00F0D1                     __end_of_Conf2_Channels:
   968                           	opt stack 0
   969  00F0D1                     _CRLN:
   970                           	opt stack 0
   971  00F0D1  0D                 	db	13
   972  00F0D2  0A                 	db	10
   973  00F0D3  00                 	db	0
   974  00F0D4                     __end_of_CRLN:
   975                           	opt stack 0
   976  0000                     _ANSEL	set	3966
   977  0000                     _ANSELH	set	3967
   978  0000                     _IOCBbits	set	3965
   979  0000                     _LATA	set	3977
   980  0000                     _LATB	set	3978
   981  0000                     _LATC	set	3979
   982  0000                     _PORTA	set	3968
   983  0000                     _PORTB	set	3969
   984  0000                     _PORTC	set	3970
   985  0000                     _TRISAbits	set	3986
   986  0000                     _TRISBbits	set	3987
   987  0000                     _TRISCbits	set	3988
   988  0000                     _WPUB	set	3964
   989  0000                     _ADCON0	set	4034
   990  0000                     _ADCON0bits	set	4034
   991  0000                     _ADCON1	set	4033
   992  0000                     _ADCON1bits	set	4033
   993  0000                     _ADCON2	set	4032
   994  0000                     _ADCON2bits	set	4032
   995  0000                     _ADRESH	set	4036
   996  0000                     _ADRESL	set	4035
   997  0000                     _BAUDCONbits	set	4024
   998  0000                     _EEADR	set	4009
   999  0000                     _EEADRH	set	4010
  1000  0000                     _EECON1bits	set	4006
  1001  0000                     _EECON2	set	4007
  1002  0000                     _EEDATA	set	4008
  1003  0000                     _IPR1bits	set	3999
  1004  0000                     _IPR2bits	set	4002
  1005  0000                     _PIE1bits	set	3997
  1006  0000                     _PIE2bits	set	4000
  1007  0000                     _PIR1bits	set	3998
  1008  0000                     _PIR2bits	set	4001
  1009  0000                     _PR2	set	4043
  1010  0000                     _RCONbits	set	4048
  1011  0000                     _RCREG	set	4014
  1012  0000                     _RCSTA	set	4011
  1013  0000                     _RCSTAbits	set	4011
  1014  0000                     _SPBRG	set	4015
  1015  0000                     _SPBRGH	set	4016
  1016  0000                     _T1CONbits	set	4045
  1017  0000                     _T2CONbits	set	4042
  1018  0000                     _T3CONbits	set	4017
  1019  0000                     _TMR1H	set	4047
  1020  0000                     _TMR1L	set	4046
  1021  0000                     _TMR2	set	4044
  1022  0000                     _TMR3H	set	4019
  1023  0000                     _TMR3L	set	4018
  1024  0000                     _TXREG	set	4013
  1025  0000                     _TXSTA	set	4012
  1026  0000                     _TXSTAbits	set	4012
  1027  0000                     _T0CONbits	set	4053
  1028  0000                     _TMR0H	set	4055
  1029  0000                     _TMR0L	set	4054
  1030  0000                     _INTCON2bits	set	4081
  1031  0000                     _INTCONbits	set	4082
  1032  00F0D4                     STR_73:
  1033  00F0D4  4E                 	db	78	;'N'
  1034  00F0D5  45                 	db	69	;'E'
  1035  00F0D6  43                 	db	67	;'C'
  1036  00F0D7  20                 	db	32
  1037  00F0D8  63                 	db	99	;'c'
  1038  00F0D9  6F                 	db	111	;'o'
  1039  00F0DA  64                 	db	100	;'d'
  1040  00F0DB  65                 	db	101	;'e'
  1041  00F0DC  20                 	db	32
  1042  00F0DD  30                 	db	48	;'0'
  1043  00F0DE  78                 	db	120	;'x'
  1044  00F0DF  25                 	db	37
  1045  00F0E0  6C                 	db	108	;'l'
  1046  00F0E1  58                 	db	88	;'X'
  1047  00F0E2  20                 	db	32
  1048  00F0E3  6E                 	db	110	;'n'
  1049  00F0E4  6F                 	db	111	;'o'
  1050  00F0E5  77                 	db	119	;'w'
  1051  00F0E6  20                 	db	32
  1052  00F0E7  74                 	db	116	;'t'
  1053  00F0E8  72                 	db	114	;'r'
  1054  00F0E9  61                 	db	97	;'a'
  1055  00F0EA  6E                 	db	110	;'n'
  1056  00F0EB  73                 	db	115	;'s'
  1057  00F0EC  6D                 	db	109	;'m'
  1058  00F0ED  69                 	db	105	;'i'
  1059  00F0EE  74                 	db	116	;'t'
  1060  00F0EF  73                 	db	115	;'s'
  1061  00F0F0  20                 	db	32
  1062  00F0F1  52                 	db	82	;'R'
  1063  00F0F2  46                 	db	70	;'F'
  1064  00F0F3  20                 	db	32
  1065  00F0F4  63                 	db	99	;'c'
  1066  00F0F5  6F                 	db	111	;'o'
  1067  00F0F6  6E                 	db	110	;'n'
  1068  00F0F7  66                 	db	102	;'f'
  1069  00F0F8  69                 	db	105	;'i'
  1070  00F0F9  67                 	db	103	;'g'
  1071  00F0FA  20                 	db	32
  1072  00F0FB  25                 	db	37
  1073  00F0FC  64                 	db	100	;'d'
  1074  00F0FD  20                 	db	32
  1075  00F0FE  63                 	db	99	;'c'
  1076  00F0FF  68                 	db	104	;'h'
  1077  00F100  61                 	db	97	;'a'
  1078  00F101  6E                 	db	110	;'n'
  1079  00F102  6E                 	db	110	;'n'
  1080  00F103  65                 	db	101	;'e'
  1081  00F104  6C                 	db	108	;'l'
  1082  00F105  20                 	db	32
  1083  00F106  25                 	db	37
  1084  00F107  63                 	db	99	;'c'
  1085  00F108  20                 	db	32
  1086  00F109  64                 	db	100	;'d'
  1087  00F10A  65                 	db	101	;'e'
  1088  00F10B  76                 	db	118	;'v'
  1089  00F10C  69                 	db	105	;'i'
  1090  00F10D  63                 	db	99	;'c'
  1091  00F10E  65                 	db	101	;'e'
  1092  00F10F  20                 	db	32
  1093  00F110  25                 	db	37
  1094  00F111  64                 	db	100	;'d'
  1095  00F112  00                 	db	0
  1096  00F113                     STR_74:
  1097  00F113  4E                 	db	78	;'N'
  1098  00F114  45                 	db	69	;'E'
  1099  00F115  43                 	db	67	;'C'
  1100  00F116  20                 	db	32
  1101  00F117  63                 	db	99	;'c'
  1102  00F118  6F                 	db	111	;'o'
  1103  00F119  64                 	db	100	;'d'
  1104  00F11A  65                 	db	101	;'e'
  1105  00F11B  20                 	db	32
  1106  00F11C  30                 	db	48	;'0'
  1107  00F11D  78                 	db	120	;'x'
  1108  00F11E  25                 	db	37
  1109  00F11F  6C                 	db	108	;'l'
  1110  00F120  58                 	db	88	;'X'
  1111  00F121  20                 	db	32
  1112  00F122  6E                 	db	110	;'n'
  1113  00F123  6F                 	db	111	;'o'
  1114  00F124  77                 	db	119	;'w'
  1115  00F125  20                 	db	32
  1116  00F126  74                 	db	116	;'t'
  1117  00F127  72                 	db	114	;'r'
  1118  00F128  61                 	db	97	;'a'
  1119  00F129  6E                 	db	110	;'n'
  1120  00F12A  73                 	db	115	;'s'
  1121  00F12B  6D                 	db	109	;'m'
  1122  00F12C  69                 	db	105	;'i'
  1123  00F12D  74                 	db	116	;'t'
  1124  00F12E  73                 	db	115	;'s'
  1125  00F12F  20                 	db	32
  1126  00F130  52                 	db	82	;'R'
  1127  00F131  46                 	db	70	;'F'
  1128  00F132  20                 	db	32
  1129  00F133  63                 	db	99	;'c'
  1130  00F134  6F                 	db	111	;'o'
  1131  00F135  6E                 	db	110	;'n'
  1132  00F136  66                 	db	102	;'f'
  1133  00F137  69                 	db	105	;'i'
  1134  00F138  67                 	db	103	;'g'
  1135  00F139  20                 	db	32
  1136  00F13A  25                 	db	37
  1137  00F13B  64                 	db	100	;'d'
  1138  00F13C  20                 	db	32
  1139  00F13D  63                 	db	99	;'c'
  1140  00F13E  68                 	db	104	;'h'
  1141  00F13F  61                 	db	97	;'a'
  1142  00F140  6E                 	db	110	;'n'
  1143  00F141  6E                 	db	110	;'n'
  1144  00F142  65                 	db	101	;'e'
  1145  00F143  6C                 	db	108	;'l'
  1146  00F144  20                 	db	32
  1147  00F145  25                 	db	37
  1148  00F146  63                 	db	99	;'c'
  1149  00F147  20                 	db	32
  1150  00F148  00                 	db	0
  1151  00F149                     STR_75:
  1152  00F149  52                 	db	82	;'R'
  1153  00F14A  46                 	db	70	;'F'
  1154  00F14B  20                 	db	32
  1155  00F14C  63                 	db	99	;'c'
  1156  00F14D  6F                 	db	111	;'o'
  1157  00F14E  6E                 	db	110	;'n'
  1158  00F14F  66                 	db	102	;'f'
  1159  00F150  69                 	db	105	;'i'
  1160  00F151  67                 	db	103	;'g'
  1161  00F152  20                 	db	32
  1162  00F153  25                 	db	37
  1163  00F154  64                 	db	100	;'d'
  1164  00F155  20                 	db	32
  1165  00F156  63                 	db	99	;'c'
  1166  00F157  68                 	db	104	;'h'
  1167  00F158  61                 	db	97	;'a'
  1168  00F159  6E                 	db	110	;'n'
  1169  00F15A  6E                 	db	110	;'n'
  1170  00F15B  65                 	db	101	;'e'
  1171  00F15C  6C                 	db	108	;'l'
  1172  00F15D  20                 	db	32
  1173  00F15E  25                 	db	37
  1174  00F15F  63                 	db	99	;'c'
  1175  00F160  20                 	db	32
  1176  00F161  64                 	db	100	;'d'
  1177  00F162  65                 	db	101	;'e'
  1178  00F163  76                 	db	118	;'v'
  1179  00F164  69                 	db	105	;'i'
  1180  00F165  63                 	db	99	;'c'
  1181  00F166  65                 	db	101	;'e'
  1182  00F167  20                 	db	32
  1183  00F168  25                 	db	37
  1184  00F169  64                 	db	100	;'d'
  1185  00F16A  20                 	db	32
  1186  00F16B  73                 	db	115	;'s'
  1187  00F16C  75                 	db	117	;'u'
  1188  00F16D  63                 	db	99	;'c'
  1189  00F16E  63                 	db	99	;'c'
  1190  00F16F  65                 	db	101	;'e'
  1191  00F170  73                 	db	115	;'s'
  1192  00F171  73                 	db	115	;'s'
  1193  00F172  66                 	db	102	;'f'
  1194  00F173  75                 	db	117	;'u'
  1195  00F174  6C                 	db	108	;'l'
  1196  00F175  6C                 	db	108	;'l'
  1197  00F176  79                 	db	121	;'y'
  1198  00F177  20                 	db	32
  1199  00F178  65                 	db	101	;'e'
  1200  00F179  72                 	db	114	;'r'
  1201  00F17A  61                 	db	97	;'a'
  1202  00F17B  73                 	db	115	;'s'
  1203  00F17C  65                 	db	101	;'e'
  1204  00F17D  64                 	db	100	;'d'
  1205  00F17E  00                 	db	0
  1206  00F17F                     STR_69:
  1207  00F17F  45                 	db	69	;'E'
  1208  00F180  72                 	db	114	;'r'
  1209  00F181  72                 	db	114	;'r'
  1210  00F182  6F                 	db	111	;'o'
  1211  00F183  72                 	db	114	;'r'
  1212  00F184  3A                 	db	58	;':'
  1213  00F185  20                 	db	32
  1214  00F186  4E                 	db	78	;'N'
  1215  00F187  6F                 	db	111	;'o'
  1216  00F188  20                 	db	32
  1217  00F189  52                 	db	82	;'R'
  1218  00F18A  46                 	db	70	;'F'
  1219  00F18B  20                 	db	32
  1220  00F18C  63                 	db	99	;'c'
  1221  00F18D  6F                 	db	111	;'o'
  1222  00F18E  6E                 	db	110	;'n'
  1223  00F18F  66                 	db	102	;'f'
  1224  00F190  69                 	db	105	;'i'
  1225  00F191  67                 	db	103	;'g'
  1226  00F192  20                 	db	32
  1227  00F193  32                 	db	50	;'2'
  1228  00F194  2C                 	db	44
  1229  00F195  20                 	db	32
  1230  00F196  63                 	db	99	;'c'
  1231  00F197  68                 	db	104	;'h'
  1232  00F198  61                 	db	97	;'a'
  1233  00F199  6E                 	db	110	;'n'
  1234  00F19A  6E                 	db	110	;'n'
  1235  00F19B  65                 	db	101	;'e'
  1236  00F19C  6C                 	db	108	;'l'
  1237  00F19D  20                 	db	32
  1238  00F19E  48                 	db	72	;'H'
  1239  00F19F  20                 	db	32
  1240  00F1A0  64                 	db	100	;'d'
  1241  00F1A1  65                 	db	101	;'e'
  1242  00F1A2  76                 	db	118	;'v'
  1243  00F1A3  69                 	db	105	;'i'
  1244  00F1A4  63                 	db	99	;'c'
  1245  00F1A5  65                 	db	101	;'e'
  1246  00F1A6  20                 	db	32
  1247  00F1A7  73                 	db	115	;'s'
  1248  00F1A8  70                 	db	112	;'p'
  1249  00F1A9  65                 	db	101	;'e'
  1250  00F1AA  63                 	db	99	;'c'
  1251  00F1AB  69                 	db	105	;'i'
  1252  00F1AC  66                 	db	102	;'f'
  1253  00F1AD  69                 	db	105	;'i'
  1254  00F1AE  65                 	db	101	;'e'
  1255  00F1AF  64                 	db	100	;'d'
  1256  00F1B0  00                 	db	0
  1257  00F1B1                     STR_70:
  1258  00F1B1  45                 	db	69	;'E'
  1259  00F1B2  72                 	db	114	;'r'
  1260  00F1B3  72                 	db	114	;'r'
  1261  00F1B4  6F                 	db	111	;'o'
  1262  00F1B5  72                 	db	114	;'r'
  1263  00F1B6  3A                 	db	58	;':'
  1264  00F1B7  20                 	db	32
  1265  00F1B8  52                 	db	82	;'R'
  1266  00F1B9  46                 	db	70	;'F'
  1267  00F1BA  20                 	db	32
  1268  00F1BB  63                 	db	99	;'c'
  1269  00F1BC  6F                 	db	111	;'o'
  1270  00F1BD  6E                 	db	110	;'n'
  1271  00F1BE  66                 	db	102	;'f'
  1272  00F1BF  69                 	db	105	;'i'
  1273  00F1C0  67                 	db	103	;'g'
  1274  00F1C1  20                 	db	32
  1275  00F1C2  32                 	db	50	;'2'
  1276  00F1C3  2C                 	db	44
  1277  00F1C4  20                 	db	32
  1278  00F1C5  63                 	db	99	;'c'
  1279  00F1C6  68                 	db	104	;'h'
  1280  00F1C7  61                 	db	97	;'a'
  1281  00F1C8  6E                 	db	110	;'n'
  1282  00F1C9  6E                 	db	110	;'n'
  1283  00F1CA  65                 	db	101	;'e'
  1284  00F1CB  6C                 	db	108	;'l'
  1285  00F1CC  20                 	db	32
  1286  00F1CD  48                 	db	72	;'H'
  1287  00F1CE  20                 	db	32
  1288  00F1CF  64                 	db	100	;'d'
  1289  00F1D0  65                 	db	101	;'e'
  1290  00F1D1  76                 	db	118	;'v'
  1291  00F1D2  69                 	db	105	;'i'
  1292  00F1D3  63                 	db	99	;'c'
  1293  00F1D4  65                 	db	101	;'e'
  1294  00F1D5  20                 	db	32
  1295  00F1D6  6F                 	db	111	;'o'
  1296  00F1D7  75                 	db	117	;'u'
  1297  00F1D8  74                 	db	116	;'t'
  1298  00F1D9  20                 	db	32
  1299  00F1DA  6F                 	db	111	;'o'
  1300  00F1DB  66                 	db	102	;'f'
  1301  00F1DC  20                 	db	32
  1302  00F1DD  72                 	db	114	;'r'
  1303  00F1DE  61                 	db	97	;'a'
  1304  00F1DF  6E                 	db	110	;'n'
  1305  00F1E0  67                 	db	103	;'g'
  1306  00F1E1  65                 	db	101	;'e'
  1307  00F1E2  00                 	db	0
  1308  00F1E3                     STR_113:
  1309  00F1E3  53                 	db	83	;'S'
  1310  00F1E4  65                 	db	101	;'e'
  1311  00F1E5  74                 	db	116	;'t'
  1312  00F1E6  73                 	db	115	;'s'
  1313  00F1E7  20                 	db	32
  1314  00F1E8  52                 	db	82	;'R'
  1315  00F1E9  65                 	db	101	;'e'
  1316  00F1EA  6D                 	db	109	;'m'
  1317  00F1EB  6F                 	db	111	;'o'
  1318  00F1EC  74                 	db	116	;'t'
  1319  00F1ED  65                 	db	101	;'e'
  1320  00F1EE  20                 	db	32
  1321  00F1EF  62                 	db	98	;'b'
  1322  00F1F0  75                 	db	117	;'u'
  1323  00F1F1  74                 	db	116	;'t'
  1324  00F1F2  74                 	db	116	;'t'
  1325  00F1F3  6F                 	db	111	;'o'
  1326  00F1F4  6E                 	db	110	;'n'
  1327  00F1F5  20                 	db	32
  1328  00F1F6  74                 	db	116	;'t'
  1329  00F1F7  6F                 	db	111	;'o'
  1330  00F1F8  20                 	db	32
  1331  00F1F9  73                 	db	115	;'s'
  1332  00F1FA  65                 	db	101	;'e'
  1333  00F1FB  6E                 	db	110	;'n'
  1334  00F1FC  64                 	db	100	;'d'
  1335  00F1FD  20                 	db	32
  1336  00F1FE  52                 	db	82	;'R'
  1337  00F1FF  46                 	db	70	;'F'
  1338  00F200  20                 	db	32
  1339  00F201  43                 	db	67	;'C'
  1340  00F202  6F                 	db	111	;'o'
  1341  00F203  6E                 	db	110	;'n'
  1342  00F204  66                 	db	102	;'f'
  1343  00F205  69                 	db	105	;'i'
  1344  00F206  67                 	db	103	;'g'
  1345  00F207  20                 	db	32
  1346  00F208  32                 	db	50	;'2'
  1347  00F209  20                 	db	32
  1348  00F20A  63                 	db	99	;'c'
  1349  00F20B  68                 	db	104	;'h'
  1350  00F20C  61                 	db	97	;'a'
  1351  00F20D  6E                 	db	110	;'n'
  1352  00F20E  6E                 	db	110	;'n'
  1353  00F20F  65                 	db	101	;'e'
  1354  00F210  6C                 	db	108	;'l'
  1355  00F211  20                 	db	32
  1356  00F212  42                 	db	66	;'B'
  1357  00F213  00                 	db	0
  1358  00F214                     STR_107:
  1359  00F214  53                 	db	83	;'S'
  1360  00F215  65                 	db	101	;'e'
  1361  00F216  74                 	db	116	;'t'
  1362  00F217  73                 	db	115	;'s'
  1363  00F218  20                 	db	32
  1364  00F219  52                 	db	82	;'R'
  1365  00F21A  65                 	db	101	;'e'
  1366  00F21B  6D                 	db	109	;'m'
  1367  00F21C  6F                 	db	111	;'o'
  1368  00F21D  74                 	db	116	;'t'
  1369  00F21E  65                 	db	101	;'e'
  1370  00F21F  20                 	db	32
  1371  00F220  62                 	db	98	;'b'
  1372  00F221  75                 	db	117	;'u'
  1373  00F222  74                 	db	116	;'t'
  1374  00F223  74                 	db	116	;'t'
  1375  00F224  6F                 	db	111	;'o'
  1376  00F225  6E                 	db	110	;'n'
  1377  00F226  20                 	db	32
  1378  00F227  74                 	db	116	;'t'
  1379  00F228  6F                 	db	111	;'o'
  1380  00F229  20                 	db	32
  1381  00F22A  73                 	db	115	;'s'
  1382  00F22B  65                 	db	101	;'e'
  1383  00F22C  6E                 	db	110	;'n'
  1384  00F22D  64                 	db	100	;'d'
  1385  00F22E  20                 	db	32
  1386  00F22F  52                 	db	82	;'R'
  1387  00F230  46                 	db	70	;'F'
  1388  00F231  20                 	db	32
  1389  00F232  43                 	db	67	;'C'
  1390  00F233  6F                 	db	111	;'o'
  1391  00F234  6E                 	db	110	;'n'
  1392  00F235  66                 	db	102	;'f'
  1393  00F236  69                 	db	105	;'i'
  1394  00F237  67                 	db	103	;'g'
  1395  00F238  20                 	db	32
  1396  00F239  31                 	db	49	;'1'
  1397  00F23A  20                 	db	32
  1398  00F23B  63                 	db	99	;'c'
  1399  00F23C  68                 	db	104	;'h'
  1400  00F23D  61                 	db	97	;'a'
  1401  00F23E  6E                 	db	110	;'n'
  1402  00F23F  6E                 	db	110	;'n'
  1403  00F240  65                 	db	101	;'e'
  1404  00F241  6C                 	db	108	;'l'
  1405  00F242  20                 	db	32
  1406  00F243  44                 	db	68	;'D'
  1407  00F244  00                 	db	0
  1408  00F245                     STR_115:
  1409  00F245  53                 	db	83	;'S'
  1410  00F246  65                 	db	101	;'e'
  1411  00F247  74                 	db	116	;'t'
  1412  00F248  73                 	db	115	;'s'
  1413  00F249  20                 	db	32
  1414  00F24A  52                 	db	82	;'R'
  1415  00F24B  65                 	db	101	;'e'
  1416  00F24C  6D                 	db	109	;'m'
  1417  00F24D  6F                 	db	111	;'o'
  1418  00F24E  74                 	db	116	;'t'
  1419  00F24F  65                 	db	101	;'e'
  1420  00F250  20                 	db	32
  1421  00F251  62                 	db	98	;'b'
  1422  00F252  75                 	db	117	;'u'
  1423  00F253  74                 	db	116	;'t'
  1424  00F254  74                 	db	116	;'t'
  1425  00F255  6F                 	db	111	;'o'
  1426  00F256  6E                 	db	110	;'n'
  1427  00F257  20                 	db	32
  1428  00F258  74                 	db	116	;'t'
  1429  00F259  6F                 	db	111	;'o'
  1430  00F25A  20                 	db	32
  1431  00F25B  73                 	db	115	;'s'
  1432  00F25C  65                 	db	101	;'e'
  1433  00F25D  6E                 	db	110	;'n'
  1434  00F25E  64                 	db	100	;'d'
  1435  00F25F  20                 	db	32
  1436  00F260  52                 	db	82	;'R'
  1437  00F261  46                 	db	70	;'F'
  1438  00F262  20                 	db	32
  1439  00F263  43                 	db	67	;'C'
  1440  00F264  6F                 	db	111	;'o'
  1441  00F265  6E                 	db	110	;'n'
  1442  00F266  66                 	db	102	;'f'
  1443  00F267  69                 	db	105	;'i'
  1444  00F268  67                 	db	103	;'g'
  1445  00F269  20                 	db	32
  1446  00F26A  32                 	db	50	;'2'
  1447  00F26B  20                 	db	32
  1448  00F26C  63                 	db	99	;'c'
  1449  00F26D  68                 	db	104	;'h'
  1450  00F26E  61                 	db	97	;'a'
  1451  00F26F  6E                 	db	110	;'n'
  1452  00F270  6E                 	db	110	;'n'
  1453  00F271  65                 	db	101	;'e'
  1454  00F272  6C                 	db	108	;'l'
  1455  00F273  20                 	db	32
  1456  00F274  44                 	db	68	;'D'
  1457  00F275  00                 	db	0
  1458  00F276                     STR_109:
  1459  00F276  53                 	db	83	;'S'
  1460  00F277  65                 	db	101	;'e'
  1461  00F278  74                 	db	116	;'t'
  1462  00F279  73                 	db	115	;'s'
  1463  00F27A  20                 	db	32
  1464  00F27B  52                 	db	82	;'R'
  1465  00F27C  65                 	db	101	;'e'
  1466  00F27D  6D                 	db	109	;'m'
  1467  00F27E  6F                 	db	111	;'o'
  1468  00F27F  74                 	db	116	;'t'
  1469  00F280  65                 	db	101	;'e'
  1470  00F281  20                 	db	32
  1471  00F282  62                 	db	98	;'b'
  1472  00F283  75                 	db	117	;'u'
  1473  00F284  74                 	db	116	;'t'
  1474  00F285  74                 	db	116	;'t'
  1475  00F286  6F                 	db	111	;'o'
  1476  00F287  6E                 	db	110	;'n'
  1477  00F288  20                 	db	32
  1478  00F289  74                 	db	116	;'t'
  1479  00F28A  6F                 	db	111	;'o'
  1480  00F28B  20                 	db	32
  1481  00F28C  73                 	db	115	;'s'
  1482  00F28D  65                 	db	101	;'e'
  1483  00F28E  6E                 	db	110	;'n'
  1484  00F28F  64                 	db	100	;'d'
  1485  00F290  20                 	db	32
  1486  00F291  52                 	db	82	;'R'
  1487  00F292  46                 	db	70	;'F'
  1488  00F293  20                 	db	32
  1489  00F294  43                 	db	67	;'C'
  1490  00F295  6F                 	db	111	;'o'
  1491  00F296  6E                 	db	110	;'n'
  1492  00F297  66                 	db	102	;'f'
  1493  00F298  69                 	db	105	;'i'
  1494  00F299  67                 	db	103	;'g'
  1495  00F29A  20                 	db	32
  1496  00F29B  31                 	db	49	;'1'
  1497  00F29C  20                 	db	32
  1498  00F29D  63                 	db	99	;'c'
  1499  00F29E  68                 	db	104	;'h'
  1500  00F29F  61                 	db	97	;'a'
  1501  00F2A0  6E                 	db	110	;'n'
  1502  00F2A1  6E                 	db	110	;'n'
  1503  00F2A2  65                 	db	101	;'e'
  1504  00F2A3  6C                 	db	108	;'l'
  1505  00F2A4  20                 	db	32
  1506  00F2A5  45                 	db	69	;'E'
  1507  00F2A6  00                 	db	0
  1508  00F2A7                     STR_111:
  1509  00F2A7  53                 	db	83	;'S'
  1510  00F2A8  65                 	db	101	;'e'
  1511  00F2A9  74                 	db	116	;'t'
  1512  00F2AA  73                 	db	115	;'s'
  1513  00F2AB  20                 	db	32
  1514  00F2AC  52                 	db	82	;'R'
  1515  00F2AD  65                 	db	101	;'e'
  1516  00F2AE  6D                 	db	109	;'m'
  1517  00F2AF  6F                 	db	111	;'o'
  1518  00F2B0  74                 	db	116	;'t'
  1519  00F2B1  65                 	db	101	;'e'
  1520  00F2B2  20                 	db	32
  1521  00F2B3  62                 	db	98	;'b'
  1522  00F2B4  75                 	db	117	;'u'
  1523  00F2B5  74                 	db	116	;'t'
  1524  00F2B6  74                 	db	116	;'t'
  1525  00F2B7  6F                 	db	111	;'o'
  1526  00F2B8  6E                 	db	110	;'n'
  1527  00F2B9  20                 	db	32
  1528  00F2BA  74                 	db	116	;'t'
  1529  00F2BB  6F                 	db	111	;'o'
  1530  00F2BC  20                 	db	32
  1531  00F2BD  73                 	db	115	;'s'
  1532  00F2BE  65                 	db	101	;'e'
  1533  00F2BF  6E                 	db	110	;'n'
  1534  00F2C0  64                 	db	100	;'d'
  1535  00F2C1  20                 	db	32
  1536  00F2C2  52                 	db	82	;'R'
  1537  00F2C3  46                 	db	70	;'F'
  1538  00F2C4  20                 	db	32
  1539  00F2C5  43                 	db	67	;'C'
  1540  00F2C6  6F                 	db	111	;'o'
  1541  00F2C7  6E                 	db	110	;'n'
  1542  00F2C8  66                 	db	102	;'f'
  1543  00F2C9  69                 	db	105	;'i'
  1544  00F2CA  67                 	db	103	;'g'
  1545  00F2CB  20                 	db	32
  1546  00F2CC  31                 	db	49	;'1'
  1547  00F2CD  20                 	db	32
  1548  00F2CE  63                 	db	99	;'c'
  1549  00F2CF  68                 	db	104	;'h'
  1550  00F2D0  61                 	db	97	;'a'
  1551  00F2D1  6E                 	db	110	;'n'
  1552  00F2D2  6E                 	db	110	;'n'
  1553  00F2D3  65                 	db	101	;'e'
  1554  00F2D4  6C                 	db	108	;'l'
  1555  00F2D5  20                 	db	32
  1556  00F2D6  46                 	db	70	;'F'
  1557  00F2D7  00                 	db	0
  1558  00F2D8                     STR_117:
  1559  00F2D8  53                 	db	83	;'S'
  1560  00F2D9  65                 	db	101	;'e'
  1561  00F2DA  74                 	db	116	;'t'
  1562  00F2DB  73                 	db	115	;'s'
  1563  00F2DC  20                 	db	32
  1564  00F2DD  52                 	db	82	;'R'
  1565  00F2DE  65                 	db	101	;'e'
  1566  00F2DF  6D                 	db	109	;'m'
  1567  00F2E0  6F                 	db	111	;'o'
  1568  00F2E1  74                 	db	116	;'t'
  1569  00F2E2  65                 	db	101	;'e'
  1570  00F2E3  20                 	db	32
  1571  00F2E4  62                 	db	98	;'b'
  1572  00F2E5  75                 	db	117	;'u'
  1573  00F2E6  74                 	db	116	;'t'
  1574  00F2E7  74                 	db	116	;'t'
  1575  00F2E8  6F                 	db	111	;'o'
  1576  00F2E9  6E                 	db	110	;'n'
  1577  00F2EA  20                 	db	32
  1578  00F2EB  74                 	db	116	;'t'
  1579  00F2EC  6F                 	db	111	;'o'
  1580  00F2ED  20                 	db	32
  1581  00F2EE  73                 	db	115	;'s'
  1582  00F2EF  65                 	db	101	;'e'
  1583  00F2F0  6E                 	db	110	;'n'
  1584  00F2F1  64                 	db	100	;'d'
  1585  00F2F2  20                 	db	32
  1586  00F2F3  52                 	db	82	;'R'
  1587  00F2F4  46                 	db	70	;'F'
  1588  00F2F5  20                 	db	32
  1589  00F2F6  43                 	db	67	;'C'
  1590  00F2F7  6F                 	db	111	;'o'
  1591  00F2F8  6E                 	db	110	;'n'
  1592  00F2F9  66                 	db	102	;'f'
  1593  00F2FA  69                 	db	105	;'i'
  1594  00F2FB  67                 	db	103	;'g'
  1595  00F2FC  20                 	db	32
  1596  00F2FD  32                 	db	50	;'2'
  1597  00F2FE  20                 	db	32
  1598  00F2FF  63                 	db	99	;'c'
  1599  00F300  68                 	db	104	;'h'
  1600  00F301  61                 	db	97	;'a'
  1601  00F302  6E                 	db	110	;'n'
  1602  00F303  6E                 	db	110	;'n'
  1603  00F304  65                 	db	101	;'e'
  1604  00F305  6C                 	db	108	;'l'
  1605  00F306  20                 	db	32
  1606  00F307  48                 	db	72	;'H'
  1607  00F308  00                 	db	0
  1608  00F309                     STR_49:
  1609  00F309  45                 	db	69	;'E'
  1610  00F30A  72                 	db	114	;'r'
  1611  00F30B  72                 	db	114	;'r'
  1612  00F30C  6F                 	db	111	;'o'
  1613  00F30D  72                 	db	114	;'r'
  1614  00F30E  3A                 	db	58	;':'
  1615  00F30F  20                 	db	32
  1616  00F310  4E                 	db	78	;'N'
  1617  00F311  6F                 	db	111	;'o'
  1618  00F312  20                 	db	32
  1619  00F313  4E                 	db	78	;'N'
  1620  00F314  45                 	db	69	;'E'
  1621  00F315  43                 	db	67	;'C'
  1622  00F316  20                 	db	32
  1623  00F317  63                 	db	99	;'c'
  1624  00F318  6F                 	db	111	;'o'
  1625  00F319  64                 	db	100	;'d'
  1626  00F31A  65                 	db	101	;'e'
  1627  00F31B  20                 	db	32
  1628  00F31C  73                 	db	115	;'s'
  1629  00F31D  61                 	db	97	;'a'
  1630  00F31E  76                 	db	118	;'v'
  1631  00F31F  65                 	db	101	;'e'
  1632  00F320  64                 	db	100	;'d'
  1633  00F321  20                 	db	32
  1634  00F322  66                 	db	102	;'f'
  1635  00F323  6F                 	db	111	;'o'
  1636  00F324  72                 	db	114	;'r'
  1637  00F325  20                 	db	32
  1638  00F326  73                 	db	115	;'s'
  1639  00F327  70                 	db	112	;'p'
  1640  00F328  65                 	db	101	;'e'
  1641  00F329  63                 	db	99	;'c'
  1642  00F32A  69                 	db	105	;'i'
  1643  00F32B  66                 	db	102	;'f'
  1644  00F32C  69                 	db	105	;'i'
  1645  00F32D  65                 	db	101	;'e'
  1646  00F32E  64                 	db	100	;'d'
  1647  00F32F  20                 	db	32
  1648  00F330  63                 	db	99	;'c'
  1649  00F331  6F                 	db	111	;'o'
  1650  00F332  6D                 	db	109	;'m'
  1651  00F333  6D                 	db	109	;'m'
  1652  00F334  61                 	db	97	;'a'
  1653  00F335  6E                 	db	110	;'n'
  1654  00F336  64                 	db	100	;'d'
  1655  00F337  00                 	db	0
  1656  00F338                     STR_50:
  1657  00F338  52                 	db	82	;'R'
  1658  00F339  65                 	db	101	;'e'
  1659  00F33A  6D                 	db	109	;'m'
  1660  00F33B  6F                 	db	111	;'o'
  1661  00F33C  74                 	db	116	;'t'
  1662  00F33D  65                 	db	101	;'e'
  1663  00F33E  42                 	db	66	;'B'
  1664  00F33F  75                 	db	117	;'u'
  1665  00F340  74                 	db	116	;'t'
  1666  00F341  74                 	db	116	;'t'
  1667  00F342  6F                 	db	111	;'o'
  1668  00F343  6E                 	db	110	;'n'
  1669  00F344  25                 	db	37
  1670  00F345  6C                 	db	108	;'l'
  1671  00F346  64                 	db	100	;'d'
  1672  00F347  20                 	db	32
  1673  00F348  6E                 	db	110	;'n'
  1674  00F349  6F                 	db	111	;'o'
  1675  00F34A  77                 	db	119	;'w'
  1676  00F34B  20                 	db	32
  1677  00F34C  74                 	db	116	;'t'
  1678  00F34D  72                 	db	114	;'r'
  1679  00F34E  61                 	db	97	;'a'
  1680  00F34F  6E                 	db	110	;'n'
  1681  00F350  73                 	db	115	;'s'
  1682  00F351  6D                 	db	109	;'m'
  1683  00F352  69                 	db	105	;'i'
  1684  00F353  74                 	db	116	;'t'
  1685  00F354  73                 	db	115	;'s'
  1686  00F355  20                 	db	32
  1687  00F356  4E                 	db	78	;'N'
  1688  00F357  45                 	db	69	;'E'
  1689  00F358  43                 	db	67	;'C'
  1690  00F359  20                 	db	32
  1691  00F35A  63                 	db	99	;'c'
  1692  00F35B  6F                 	db	111	;'o'
  1693  00F35C  64                 	db	100	;'d'
  1694  00F35D  65                 	db	101	;'e'
  1695  00F35E  20                 	db	32
  1696  00F35F  30                 	db	48	;'0'
  1697  00F360  78                 	db	120	;'x'
  1698  00F361  25                 	db	37
  1699  00F362  6C                 	db	108	;'l'
  1700  00F363  58                 	db	88	;'X'
  1701  00F364  20                 	db	32
  1702  00F365  00                 	db	0
  1703  00F366                     STR_125:
  1704  00F366  43                 	db	67	;'C'
  1705  00F367  6C                 	db	108	;'l'
  1706  00F368  65                 	db	101	;'e'
  1707  00F369  61                 	db	97	;'a'
  1708  00F36A  72                 	db	114	;'r'
  1709  00F36B  73                 	db	115	;'s'
  1710  00F36C  20                 	db	32
  1711  00F36D  73                 	db	115	;'s'
  1712  00F36E  61                 	db	97	;'a'
  1713  00F36F  76                 	db	118	;'v'
  1714  00F370  65                 	db	101	;'e'
  1715  00F371  64                 	db	100	;'d'
  1716  00F372  20                 	db	32
  1717  00F373  42                 	db	66	;'B'
  1718  00F374  75                 	db	117	;'u'
  1719  00F375  74                 	db	116	;'t'
  1720  00F376  74                 	db	116	;'t'
  1721  00F377  6F                 	db	111	;'o'
  1722  00F378  6E                 	db	110	;'n'
  1723  00F379  20                 	db	32
  1724  00F37A  66                 	db	102	;'f'
  1725  00F37B  6F                 	db	111	;'o'
  1726  00F37C  72                 	db	114	;'r'
  1727  00F37D  20                 	db	32
  1728  00F37E  52                 	db	82	;'R'
  1729  00F37F  46                 	db	70	;'F'
  1730  00F380  20                 	db	32
  1731  00F381  43                 	db	67	;'C'
  1732  00F382  6F                 	db	111	;'o'
  1733  00F383  6E                 	db	110	;'n'
  1734  00F384  66                 	db	102	;'f'
  1735  00F385  69                 	db	105	;'i'
  1736  00F386  67                 	db	103	;'g'
  1737  00F387  20                 	db	32
  1738  00F388  32                 	db	50	;'2'
  1739  00F389  20                 	db	32
  1740  00F38A  63                 	db	99	;'c'
  1741  00F38B  68                 	db	104	;'h'
  1742  00F38C  61                 	db	97	;'a'
  1743  00F38D  6E                 	db	110	;'n'
  1744  00F38E  6E                 	db	110	;'n'
  1745  00F38F  65                 	db	101	;'e'
  1746  00F390  6C                 	db	108	;'l'
  1747  00F391  20                 	db	32
  1748  00F392  42                 	db	66	;'B'
  1749  00F393  00                 	db	0
  1750  00F394                     STR_119:
  1751  00F394  43                 	db	67	;'C'
  1752  00F395  6C                 	db	108	;'l'
  1753  00F396  65                 	db	101	;'e'
  1754  00F397  61                 	db	97	;'a'
  1755  00F398  72                 	db	114	;'r'
  1756  00F399  73                 	db	115	;'s'
  1757  00F39A  20                 	db	32
  1758  00F39B  73                 	db	115	;'s'
  1759  00F39C  61                 	db	97	;'a'
  1760  00F39D  76                 	db	118	;'v'
  1761  00F39E  65                 	db	101	;'e'
  1762  00F39F  64                 	db	100	;'d'
  1763  00F3A0  20                 	db	32
  1764  00F3A1  42                 	db	66	;'B'
  1765  00F3A2  75                 	db	117	;'u'
  1766  00F3A3  74                 	db	116	;'t'
  1767  00F3A4  74                 	db	116	;'t'
  1768  00F3A5  6F                 	db	111	;'o'
  1769  00F3A6  6E                 	db	110	;'n'
  1770  00F3A7  20                 	db	32
  1771  00F3A8  66                 	db	102	;'f'
  1772  00F3A9  6F                 	db	111	;'o'
  1773  00F3AA  72                 	db	114	;'r'
  1774  00F3AB  20                 	db	32
  1775  00F3AC  52                 	db	82	;'R'
  1776  00F3AD  46                 	db	70	;'F'
  1777  00F3AE  20                 	db	32
  1778  00F3AF  43                 	db	67	;'C'
  1779  00F3B0  6F                 	db	111	;'o'
  1780  00F3B1  6E                 	db	110	;'n'
  1781  00F3B2  66                 	db	102	;'f'
  1782  00F3B3  69                 	db	105	;'i'
  1783  00F3B4  67                 	db	103	;'g'
  1784  00F3B5  20                 	db	32
  1785  00F3B6  31                 	db	49	;'1'
  1786  00F3B7  20                 	db	32
  1787  00F3B8  63                 	db	99	;'c'
  1788  00F3B9  68                 	db	104	;'h'
  1789  00F3BA  61                 	db	97	;'a'
  1790  00F3BB  6E                 	db	110	;'n'
  1791  00F3BC  6E                 	db	110	;'n'
  1792  00F3BD  65                 	db	101	;'e'
  1793  00F3BE  6C                 	db	108	;'l'
  1794  00F3BF  20                 	db	32
  1795  00F3C0  44                 	db	68	;'D'
  1796  00F3C1  00                 	db	0
  1797  00F3C2                     STR_127:
  1798  00F3C2  43                 	db	67	;'C'
  1799  00F3C3  6C                 	db	108	;'l'
  1800  00F3C4  65                 	db	101	;'e'
  1801  00F3C5  61                 	db	97	;'a'
  1802  00F3C6  72                 	db	114	;'r'
  1803  00F3C7  73                 	db	115	;'s'
  1804  00F3C8  20                 	db	32
  1805  00F3C9  73                 	db	115	;'s'
  1806  00F3CA  61                 	db	97	;'a'
  1807  00F3CB  76                 	db	118	;'v'
  1808  00F3CC  65                 	db	101	;'e'
  1809  00F3CD  64                 	db	100	;'d'
  1810  00F3CE  20                 	db	32
  1811  00F3CF  42                 	db	66	;'B'
  1812  00F3D0  75                 	db	117	;'u'
  1813  00F3D1  74                 	db	116	;'t'
  1814  00F3D2  74                 	db	116	;'t'
  1815  00F3D3  6F                 	db	111	;'o'
  1816  00F3D4  6E                 	db	110	;'n'
  1817  00F3D5  20                 	db	32
  1818  00F3D6  66                 	db	102	;'f'
  1819  00F3D7  6F                 	db	111	;'o'
  1820  00F3D8  72                 	db	114	;'r'
  1821  00F3D9  20                 	db	32
  1822  00F3DA  52                 	db	82	;'R'
  1823  00F3DB  46                 	db	70	;'F'
  1824  00F3DC  20                 	db	32
  1825  00F3DD  43                 	db	67	;'C'
  1826  00F3DE  6F                 	db	111	;'o'
  1827  00F3DF  6E                 	db	110	;'n'
  1828  00F3E0  66                 	db	102	;'f'
  1829  00F3E1  69                 	db	105	;'i'
  1830  00F3E2  67                 	db	103	;'g'
  1831  00F3E3  20                 	db	32
  1832  00F3E4  32                 	db	50	;'2'
  1833  00F3E5  20                 	db	32
  1834  00F3E6  63                 	db	99	;'c'
  1835  00F3E7  68                 	db	104	;'h'
  1836  00F3E8  61                 	db	97	;'a'
  1837  00F3E9  6E                 	db	110	;'n'
  1838  00F3EA  6E                 	db	110	;'n'
  1839  00F3EB  65                 	db	101	;'e'
  1840  00F3EC  6C                 	db	108	;'l'
  1841  00F3ED  20                 	db	32
  1842  00F3EE  44                 	db	68	;'D'
  1843  00F3EF  00                 	db	0
  1844  00F3F0                     STR_121:
  1845  00F3F0  43                 	db	67	;'C'
  1846  00F3F1  6C                 	db	108	;'l'
  1847  00F3F2  65                 	db	101	;'e'
  1848  00F3F3  61                 	db	97	;'a'
  1849  00F3F4  72                 	db	114	;'r'
  1850  00F3F5  73                 	db	115	;'s'
  1851  00F3F6  20                 	db	32
  1852  00F3F7  73                 	db	115	;'s'
  1853  00F3F8  61                 	db	97	;'a'
  1854  00F3F9  76                 	db	118	;'v'
  1855  00F3FA  65                 	db	101	;'e'
  1856  00F3FB  64                 	db	100	;'d'
  1857  00F3FC  20                 	db	32
  1858  00F3FD  42                 	db	66	;'B'
  1859  00F3FE  75                 	db	117	;'u'
  1860  00F3FF  74                 	db	116	;'t'
  1861  00F400  74                 	db	116	;'t'
  1862  00F401  6F                 	db	111	;'o'
  1863  00F402  6E                 	db	110	;'n'
  1864  00F403  20                 	db	32
  1865  00F404  66                 	db	102	;'f'
  1866  00F405  6F                 	db	111	;'o'
  1867  00F406  72                 	db	114	;'r'
  1868  00F407  20                 	db	32
  1869  00F408  52                 	db	82	;'R'
  1870  00F409  46                 	db	70	;'F'
  1871  00F40A  20                 	db	32
  1872  00F40B  43                 	db	67	;'C'
  1873  00F40C  6F                 	db	111	;'o'
  1874  00F40D  6E                 	db	110	;'n'
  1875  00F40E  66                 	db	102	;'f'
  1876  00F40F  69                 	db	105	;'i'
  1877  00F410  67                 	db	103	;'g'
  1878  00F411  20                 	db	32
  1879  00F412  31                 	db	49	;'1'
  1880  00F413  20                 	db	32
  1881  00F414  63                 	db	99	;'c'
  1882  00F415  68                 	db	104	;'h'
  1883  00F416  61                 	db	97	;'a'
  1884  00F417  6E                 	db	110	;'n'
  1885  00F418  6E                 	db	110	;'n'
  1886  00F419  65                 	db	101	;'e'
  1887  00F41A  6C                 	db	108	;'l'
  1888  00F41B  20                 	db	32
  1889  00F41C  45                 	db	69	;'E'
  1890  00F41D  00                 	db	0
  1891  00F41E                     STR_123:
  1892  00F41E  43                 	db	67	;'C'
  1893  00F41F  6C                 	db	108	;'l'
  1894  00F420  65                 	db	101	;'e'
  1895  00F421  61                 	db	97	;'a'
  1896  00F422  72                 	db	114	;'r'
  1897  00F423  73                 	db	115	;'s'
  1898  00F424  20                 	db	32
  1899  00F425  73                 	db	115	;'s'
  1900  00F426  61                 	db	97	;'a'
  1901  00F427  76                 	db	118	;'v'
  1902  00F428  65                 	db	101	;'e'
  1903  00F429  64                 	db	100	;'d'
  1904  00F42A  20                 	db	32
  1905  00F42B  42                 	db	66	;'B'
  1906  00F42C  75                 	db	117	;'u'
  1907  00F42D  74                 	db	116	;'t'
  1908  00F42E  74                 	db	116	;'t'
  1909  00F42F  6F                 	db	111	;'o'
  1910  00F430  6E                 	db	110	;'n'
  1911  00F431  20                 	db	32
  1912  00F432  66                 	db	102	;'f'
  1913  00F433  6F                 	db	111	;'o'
  1914  00F434  72                 	db	114	;'r'
  1915  00F435  20                 	db	32
  1916  00F436  52                 	db	82	;'R'
  1917  00F437  46                 	db	70	;'F'
  1918  00F438  20                 	db	32
  1919  00F439  43                 	db	67	;'C'
  1920  00F43A  6F                 	db	111	;'o'
  1921  00F43B  6E                 	db	110	;'n'
  1922  00F43C  66                 	db	102	;'f'
  1923  00F43D  69                 	db	105	;'i'
  1924  00F43E  67                 	db	103	;'g'
  1925  00F43F  20                 	db	32
  1926  00F440  31                 	db	49	;'1'
  1927  00F441  20                 	db	32
  1928  00F442  63                 	db	99	;'c'
  1929  00F443  68                 	db	104	;'h'
  1930  00F444  61                 	db	97	;'a'
  1931  00F445  6E                 	db	110	;'n'
  1932  00F446  6E                 	db	110	;'n'
  1933  00F447  65                 	db	101	;'e'
  1934  00F448  6C                 	db	108	;'l'
  1935  00F449  20                 	db	32
  1936  00F44A  46                 	db	70	;'F'
  1937  00F44B  00                 	db	0
  1938  00F44C                     STR_129:
  1939  00F44C  43                 	db	67	;'C'
  1940  00F44D  6C                 	db	108	;'l'
  1941  00F44E  65                 	db	101	;'e'
  1942  00F44F  61                 	db	97	;'a'
  1943  00F450  72                 	db	114	;'r'
  1944  00F451  73                 	db	115	;'s'
  1945  00F452  20                 	db	32
  1946  00F453  73                 	db	115	;'s'
  1947  00F454  61                 	db	97	;'a'
  1948  00F455  76                 	db	118	;'v'
  1949  00F456  65                 	db	101	;'e'
  1950  00F457  64                 	db	100	;'d'
  1951  00F458  20                 	db	32
  1952  00F459  42                 	db	66	;'B'
  1953  00F45A  75                 	db	117	;'u'
  1954  00F45B  74                 	db	116	;'t'
  1955  00F45C  74                 	db	116	;'t'
  1956  00F45D  6F                 	db	111	;'o'
  1957  00F45E  6E                 	db	110	;'n'
  1958  00F45F  20                 	db	32
  1959  00F460  66                 	db	102	;'f'
  1960  00F461  6F                 	db	111	;'o'
  1961  00F462  72                 	db	114	;'r'
  1962  00F463  20                 	db	32
  1963  00F464  52                 	db	82	;'R'
  1964  00F465  46                 	db	70	;'F'
  1965  00F466  20                 	db	32
  1966  00F467  43                 	db	67	;'C'
  1967  00F468  6F                 	db	111	;'o'
  1968  00F469  6E                 	db	110	;'n'
  1969  00F46A  66                 	db	102	;'f'
  1970  00F46B  69                 	db	105	;'i'
  1971  00F46C  67                 	db	103	;'g'
  1972  00F46D  20                 	db	32
  1973  00F46E  32                 	db	50	;'2'
  1974  00F46F  20                 	db	32
  1975  00F470  63                 	db	99	;'c'
  1976  00F471  68                 	db	104	;'h'
  1977  00F472  61                 	db	97	;'a'
  1978  00F473  6E                 	db	110	;'n'
  1979  00F474  6E                 	db	110	;'n'
  1980  00F475  65                 	db	101	;'e'
  1981  00F476  6C                 	db	108	;'l'
  1982  00F477  20                 	db	32
  1983  00F478  48                 	db	72	;'H'
  1984  00F479  00                 	db	0
  1985  00F47A                     STR_72:
  1986  00F47A  45                 	db	69	;'E'
  1987  00F47B  72                 	db	114	;'r'
  1988  00F47C  72                 	db	114	;'r'
  1989  00F47D  6F                 	db	111	;'o'
  1990  00F47E  72                 	db	114	;'r'
  1991  00F47F  3A                 	db	58	;':'
  1992  00F480  20                 	db	32
  1993  00F481  4E                 	db	78	;'N'
  1994  00F482  45                 	db	69	;'E'
  1995  00F483  43                 	db	67	;'C'
  1996  00F484  20                 	db	32
  1997  00F485  63                 	db	99	;'c'
  1998  00F486  6F                 	db	111	;'o'
  1999  00F487  64                 	db	100	;'d'
  2000  00F488  65                 	db	101	;'e'
  2001  00F489  20                 	db	32
  2002  00F48A  61                 	db	97	;'a'
  2003  00F48B  6C                 	db	108	;'l'
  2004  00F48C  72                 	db	114	;'r'
  2005  00F48D  65                 	db	101	;'e'
  2006  00F48E  61                 	db	97	;'a'
  2007  00F48F  64                 	db	100	;'d'
  2008  00F490  79                 	db	121	;'y'
  2009  00F491  20                 	db	32
  2010  00F492  73                 	db	115	;'s'
  2011  00F493  61                 	db	97	;'a'
  2012  00F494  76                 	db	118	;'v'
  2013  00F495  65                 	db	101	;'e'
  2014  00F496  64                 	db	100	;'d'
  2015  00F497  20                 	db	32
  2016  00F498  74                 	db	116	;'t'
  2017  00F499  6F                 	db	111	;'o'
  2018  00F49A  20                 	db	32
  2019  00F49B  74                 	db	116	;'t'
  2020  00F49C  68                 	db	104	;'h'
  2021  00F49D  69                 	db	105	;'i'
  2022  00F49E  73                 	db	115	;'s'
  2023  00F49F  20                 	db	32
  2024  00F4A0  52                 	db	82	;'R'
  2025  00F4A1  46                 	db	70	;'F'
  2026  00F4A2  20                 	db	32
  2027  00F4A3  63                 	db	99	;'c'
  2028  00F4A4  6F                 	db	111	;'o'
  2029  00F4A5  64                 	db	100	;'d'
  2030  00F4A6  65                 	db	101	;'e'
  2031  00F4A7  00                 	db	0
  2032  00F4A8                     STR_48:
  2033  00F4A8  4E                 	db	78	;'N'
  2034  00F4A9  45                 	db	69	;'E'
  2035  00F4AA  43                 	db	67	;'C'
  2036  00F4AB  20                 	db	32
  2037  00F4AC  43                 	db	67	;'C'
  2038  00F4AD  6F                 	db	111	;'o'
  2039  00F4AE  64                 	db	100	;'d'
  2040  00F4AF  65                 	db	101	;'e'
  2041  00F4B0  20                 	db	32
  2042  00F4B1  61                 	db	97	;'a'
  2043  00F4B2  64                 	db	100	;'d'
  2044  00F4B3  64                 	db	100	;'d'
  2045  00F4B4  72                 	db	114	;'r'
  2046  00F4B5  65                 	db	101	;'e'
  2047  00F4B6  73                 	db	115	;'s'
  2048  00F4B7  73                 	db	115	;'s'
  2049  00F4B8  3A                 	db	58	;':'
  2050  00F4B9  20                 	db	32
  2051  00F4BA  30                 	db	48	;'0'
  2052  00F4BB  78                 	db	120	;'x'
  2053  00F4BC  25                 	db	37
  2054  00F4BD  30                 	db	48	;'0'
  2055  00F4BE  32                 	db	50	;'2'
  2056  00F4BF  58                 	db	88	;'X'
  2057  00F4C0  20                 	db	32
  2058  00F4C1  2C                 	db	44
  2059  00F4C2  20                 	db	32
  2060  00F4C3  63                 	db	99	;'c'
  2061  00F4C4  6F                 	db	111	;'o'
  2062  00F4C5  6D                 	db	109	;'m'
  2063  00F4C6  6D                 	db	109	;'m'
  2064  00F4C7  61                 	db	97	;'a'
  2065  00F4C8  6E                 	db	110	;'n'
  2066  00F4C9  64                 	db	100	;'d'
  2067  00F4CA  3A                 	db	58	;':'
  2068  00F4CB  20                 	db	32
  2069  00F4CC  30                 	db	48	;'0'
  2070  00F4CD  78                 	db	120	;'x'
  2071  00F4CE  25                 	db	37
  2072  00F4CF  30                 	db	48	;'0'
  2073  00F4D0  32                 	db	50	;'2'
  2074  00F4D1  58                 	db	88	;'X'
  2075  00F4D2  20                 	db	32
  2076  00F4D3  00                 	db	0
  2077  00F4D4                     STR_76:
  2078  00F4D4  52                 	db	82	;'R'
  2079  00F4D5  46                 	db	70	;'F'
  2080  00F4D6  20                 	db	32
  2081  00F4D7  63                 	db	99	;'c'
  2082  00F4D8  6F                 	db	111	;'o'
  2083  00F4D9  6E                 	db	110	;'n'
  2084  00F4DA  66                 	db	102	;'f'
  2085  00F4DB  69                 	db	105	;'i'
  2086  00F4DC  67                 	db	103	;'g'
  2087  00F4DD  20                 	db	32
  2088  00F4DE  25                 	db	37
  2089  00F4DF  64                 	db	100	;'d'
  2090  00F4E0  20                 	db	32
  2091  00F4E1  63                 	db	99	;'c'
  2092  00F4E2  68                 	db	104	;'h'
  2093  00F4E3  61                 	db	97	;'a'
  2094  00F4E4  6E                 	db	110	;'n'
  2095  00F4E5  6E                 	db	110	;'n'
  2096  00F4E6  65                 	db	101	;'e'
  2097  00F4E7  6C                 	db	108	;'l'
  2098  00F4E8  20                 	db	32
  2099  00F4E9  25                 	db	37
  2100  00F4EA  63                 	db	99	;'c'
  2101  00F4EB  20                 	db	32
  2102  00F4EC  73                 	db	115	;'s'
  2103  00F4ED  75                 	db	117	;'u'
  2104  00F4EE  63                 	db	99	;'c'
  2105  00F4EF  63                 	db	99	;'c'
  2106  00F4F0  65                 	db	101	;'e'
  2107  00F4F1  73                 	db	115	;'s'
  2108  00F4F2  73                 	db	115	;'s'
  2109  00F4F3  66                 	db	102	;'f'
  2110  00F4F4  75                 	db	117	;'u'
  2111  00F4F5  6C                 	db	108	;'l'
  2112  00F4F6  6C                 	db	108	;'l'
  2113  00F4F7  79                 	db	121	;'y'
  2114  00F4F8  20                 	db	32
  2115  00F4F9  65                 	db	101	;'e'
  2116  00F4FA  72                 	db	114	;'r'
  2117  00F4FB  61                 	db	97	;'a'
  2118  00F4FC  73                 	db	115	;'s'
  2119  00F4FD  65                 	db	101	;'e'
  2120  00F4FE  64                 	db	100	;'d'
  2121  00F4FF  00                 	db	0
  2122  00F500                     STR_77:
  2123  00F500  45                 	db	69	;'E'
  2124  00F501  72                 	db	114	;'r'
  2125  00F502  72                 	db	114	;'r'
  2126  00F503  6F                 	db	111	;'o'
  2127  00F504  72                 	db	114	;'r'
  2128  00F505  3A                 	db	58	;':'
  2129  00F506  20                 	db	32
  2130  00F507  52                 	db	82	;'R'
  2131  00F508  46                 	db	70	;'F'
  2132  00F509  20                 	db	32
  2133  00F50A  63                 	db	99	;'c'
  2134  00F50B  68                 	db	104	;'h'
  2135  00F50C  61                 	db	97	;'a'
  2136  00F50D  6E                 	db	110	;'n'
  2137  00F50E  6E                 	db	110	;'n'
  2138  00F50F  65                 	db	101	;'e'
  2139  00F510  6C                 	db	108	;'l'
  2140  00F511  20                 	db	32
  2141  00F512  6E                 	db	110	;'n'
  2142  00F513  65                 	db	101	;'e'
  2143  00F514  65                 	db	101	;'e'
  2144  00F515  64                 	db	100	;'d'
  2145  00F516  73                 	db	115	;'s'
  2146  00F517  20                 	db	32
  2147  00F518  74                 	db	116	;'t'
  2148  00F519  6F                 	db	111	;'o'
  2149  00F51A  20                 	db	32
  2150  00F51B  62                 	db	98	;'b'
  2151  00F51C  65                 	db	101	;'e'
  2152  00F51D  20                 	db	32
  2153  00F51E  6F                 	db	111	;'o'
  2154  00F51F  6E                 	db	110	;'n'
  2155  00F520  65                 	db	101	;'e'
  2156  00F521  20                 	db	32
  2157  00F522  63                 	db	99	;'c'
  2158  00F523  68                 	db	104	;'h'
  2159  00F524  61                 	db	97	;'a'
  2160  00F525  72                 	db	114	;'r'
  2161  00F526  61                 	db	97	;'a'
  2162  00F527  63                 	db	99	;'c'
  2163  00F528  74                 	db	116	;'t'
  2164  00F529  65                 	db	101	;'e'
  2165  00F52A  72                 	db	114	;'r'
  2166  00F52B  00                 	db	0
  2167  00F52C                     STR_71:
  2168  00F52C  45                 	db	69	;'E'
  2169  00F52D  72                 	db	114	;'r'
  2170  00F52E  72                 	db	114	;'r'
  2171  00F52F  6F                 	db	111	;'o'
  2172  00F530  72                 	db	114	;'r'
  2173  00F531  3A                 	db	58	;':'
  2174  00F532  20                 	db	32
  2175  00F533  4E                 	db	78	;'N'
  2176  00F534  6F                 	db	111	;'o'
  2177  00F535  20                 	db	32
  2178  00F536  73                 	db	115	;'s'
  2179  00F537  70                 	db	112	;'p'
  2180  00F538  61                 	db	97	;'a'
  2181  00F539  63                 	db	99	;'c'
  2182  00F53A  65                 	db	101	;'e'
  2183  00F53B  20                 	db	32
  2184  00F53C  61                 	db	97	;'a'
  2185  00F53D  76                 	db	118	;'v'
  2186  00F53E  61                 	db	97	;'a'
  2187  00F53F  69                 	db	105	;'i'
  2188  00F540  6C                 	db	108	;'l'
  2189  00F541  61                 	db	97	;'a'
  2190  00F542  62                 	db	98	;'b'
  2191  00F543  6C                 	db	108	;'l'
  2192  00F544  65                 	db	101	;'e'
  2193  00F545  20                 	db	32
  2194  00F546  74                 	db	116	;'t'
  2195  00F547  6F                 	db	111	;'o'
  2196  00F548  20                 	db	32
  2197  00F549  74                 	db	116	;'t'
  2198  00F54A  68                 	db	104	;'h'
  2199  00F54B  69                 	db	105	;'i'
  2200  00F54C  73                 	db	115	;'s'
  2201  00F54D  20                 	db	32
  2202  00F54E  52                 	db	82	;'R'
  2203  00F54F  46                 	db	70	;'F'
  2204  00F550  20                 	db	32
  2205  00F551  63                 	db	99	;'c'
  2206  00F552  6F                 	db	111	;'o'
  2207  00F553  64                 	db	100	;'d'
  2208  00F554  65                 	db	101	;'e'
  2209  00F555  00                 	db	0
  2210  00F556                     STR_131:
  2211  00F556  4E                 	db	78	;'N'
  2212  00F557  45                 	db	69	;'E'
  2213  00F558  43                 	db	67	;'C'
  2214  00F559  20                 	db	32
  2215  00F55A  64                 	db	100	;'d'
  2216  00F55B  65                 	db	101	;'e'
  2217  00F55C  73                 	db	115	;'s'
  2218  00F55D  63                 	db	99	;'c'
  2219  00F55E  72                 	db	114	;'r'
  2220  00F55F  69                 	db	105	;'i'
  2221  00F560  70                 	db	112	;'p'
  2222  00F561  74                 	db	116	;'t'
  2223  00F562  69                 	db	105	;'i'
  2224  00F563  6F                 	db	111	;'o'
  2225  00F564  6E                 	db	110	;'n'
  2226  00F565  20                 	db	32
  2227  00F566  66                 	db	102	;'f'
  2228  00F567  6F                 	db	111	;'o'
  2229  00F568  72                 	db	114	;'r'
  2230  00F569  20                 	db	32
  2231  00F56A  41                 	db	65	;'A'
  2232  00F56B  72                 	db	114	;'r'
  2233  00F56C  62                 	db	98	;'b'
  2234  00F56D  69                 	db	105	;'i'
  2235  00F56E  74                 	db	116	;'t'
  2236  00F56F  72                 	db	114	;'r'
  2237  00F570  61                 	db	97	;'a'
  2238  00F571  72                 	db	114	;'r'
  2239  00F572  79                 	db	121	;'y'
  2240  00F573  20                 	db	32
  2241  00F574  63                 	db	99	;'c'
  2242  00F575  6F                 	db	111	;'o'
  2243  00F576  64                 	db	100	;'d'
  2244  00F577  65                 	db	101	;'e'
  2245  00F578  20                 	db	32
  2246  00F579  73                 	db	115	;'s'
  2247  00F57A  65                 	db	101	;'e'
  2248  00F57B  6E                 	db	110	;'n'
  2249  00F57C  64                 	db	100	;'d'
  2250  00F57D  00                 	db	0
  2251  00F57E                     STR_63:
  2252  00F57E  45                 	db	69	;'E'
  2253  00F57F  72                 	db	114	;'r'
  2254  00F580  72                 	db	114	;'r'
  2255  00F581  6F                 	db	111	;'o'
  2256  00F582  72                 	db	114	;'r'
  2257  00F583  3A                 	db	58	;':'
  2258  00F584  20                 	db	32
  2259  00F585  4E                 	db	78	;'N'
  2260  00F586  6F                 	db	111	;'o'
  2261  00F587  20                 	db	32
  2262  00F588  52                 	db	82	;'R'
  2263  00F589  46                 	db	70	;'F'
  2264  00F58A  20                 	db	32
  2265  00F58B  63                 	db	99	;'c'
  2266  00F58C  6F                 	db	111	;'o'
  2267  00F58D  6E                 	db	110	;'n'
  2268  00F58E  66                 	db	102	;'f'
  2269  00F58F  69                 	db	105	;'i'
  2270  00F590  67                 	db	103	;'g'
  2271  00F591  75                 	db	117	;'u'
  2272  00F592  72                 	db	114	;'r'
  2273  00F593  61                 	db	97	;'a'
  2274  00F594  74                 	db	116	;'t'
  2275  00F595  69                 	db	105	;'i'
  2276  00F596  6F                 	db	111	;'o'
  2277  00F597  6E                 	db	110	;'n'
  2278  00F598  20                 	db	32
  2279  00F599  73                 	db	115	;'s'
  2280  00F59A  70                 	db	112	;'p'
  2281  00F59B  65                 	db	101	;'e'
  2282  00F59C  63                 	db	99	;'c'
  2283  00F59D  69                 	db	105	;'i'
  2284  00F59E  66                 	db	102	;'f'
  2285  00F59F  69                 	db	105	;'i'
  2286  00F5A0  65                 	db	101	;'e'
  2287  00F5A1  64                 	db	100	;'d'
  2288  00F5A2  00                 	db	0
  2289  00F5A3                     STR_65:
  2290  00F5A3  45                 	db	69	;'E'
  2291  00F5A4  72                 	db	114	;'r'
  2292  00F5A5  72                 	db	114	;'r'
  2293  00F5A6  6F                 	db	111	;'o'
  2294  00F5A7  72                 	db	114	;'r'
  2295  00F5A8  3A                 	db	58	;':'
  2296  00F5A9  20                 	db	32
  2297  00F5AA  52                 	db	82	;'R'
  2298  00F5AB  46                 	db	70	;'F'
  2299  00F5AC  20                 	db	32
  2300  00F5AD  63                 	db	99	;'c'
  2301  00F5AE  6F                 	db	111	;'o'
  2302  00F5AF  6E                 	db	110	;'n'
  2303  00F5B0  66                 	db	102	;'f'
  2304  00F5B1  69                 	db	105	;'i'
  2305  00F5B2  67                 	db	103	;'g'
  2306  00F5B3  75                 	db	117	;'u'
  2307  00F5B4  72                 	db	114	;'r'
  2308  00F5B5  61                 	db	97	;'a'
  2309  00F5B6  74                 	db	116	;'t'
  2310  00F5B7  69                 	db	105	;'i'
  2311  00F5B8  6F                 	db	111	;'o'
  2312  00F5B9  6E                 	db	110	;'n'
  2313  00F5BA  20                 	db	32
  2314  00F5BB  6F                 	db	111	;'o'
  2315  00F5BC  75                 	db	117	;'u'
  2316  00F5BD  74                 	db	116	;'t'
  2317  00F5BE  20                 	db	32
  2318  00F5BF  6F                 	db	111	;'o'
  2319  00F5C0  66                 	db	102	;'f'
  2320  00F5C1  20                 	db	32
  2321  00F5C2  72                 	db	114	;'r'
  2322  00F5C3  61                 	db	97	;'a'
  2323  00F5C4  6E                 	db	110	;'n'
  2324  00F5C5  67                 	db	103	;'g'
  2325  00F5C6  65                 	db	101	;'e'
  2326  00F5C7  00                 	db	0
  2327  00F5C8                     STR_52:
  2328  00F5C8  45                 	db	69	;'E'
  2329  00F5C9  72                 	db	114	;'r'
  2330  00F5CA  72                 	db	114	;'r'
  2331  00F5CB  6F                 	db	111	;'o'
  2332  00F5CC  72                 	db	114	;'r'
  2333  00F5CD  3A                 	db	58	;':'
  2334  00F5CE  20                 	db	32
  2335  00F5CF  52                 	db	82	;'R'
  2336  00F5D0  65                 	db	101	;'e'
  2337  00F5D1  6D                 	db	109	;'m'
  2338  00F5D2  6F                 	db	111	;'o'
  2339  00F5D3  74                 	db	116	;'t'
  2340  00F5D4  65                 	db	101	;'e'
  2341  00F5D5  20                 	db	32
  2342  00F5D6  62                 	db	98	;'b'
  2343  00F5D7  75                 	db	117	;'u'
  2344  00F5D8  74                 	db	116	;'t'
  2345  00F5D9  74                 	db	116	;'t'
  2346  00F5DA  6F                 	db	111	;'o'
  2347  00F5DB  6E                 	db	110	;'n'
  2348  00F5DC  20                 	db	32
  2349  00F5DD  6E                 	db	110	;'n'
  2350  00F5DE  75                 	db	117	;'u'
  2351  00F5DF  6D                 	db	109	;'m'
  2352  00F5E0  62                 	db	98	;'b'
  2353  00F5E1  65                 	db	101	;'e'
  2354  00F5E2  72                 	db	114	;'r'
  2355  00F5E3  20                 	db	32
  2356  00F5E4  74                 	db	116	;'t'
  2357  00F5E5  6F                 	db	111	;'o'
  2358  00F5E6  6F                 	db	111	;'o'
  2359  00F5E7  20                 	db	32
  2360  00F5E8  68                 	db	104	;'h'
  2361  00F5E9  69                 	db	105	;'i'
  2362  00F5EA  67                 	db	103	;'g'
  2363  00F5EB  68                 	db	104	;'h'
  2364  00F5EC  00                 	db	0
  2365  00F5ED                     STR_148:
  2366  00F5ED  45                 	db	69	;'E'
  2367  00F5EE  72                 	db	114	;'r'
  2368  00F5EF  72                 	db	114	;'r'
  2369  00F5F0  6F                 	db	111	;'o'
  2370  00F5F1  72                 	db	114	;'r'
  2371  00F5F2  3A                 	db	58	;':'
  2372  00F5F3  20                 	db	32
  2373  00F5F4  4E                 	db	78	;'N'
  2374  00F5F5  6F                 	db	111	;'o'
  2375  00F5F6  20                 	db	32
  2376  00F5F7  72                 	db	114	;'r'
  2377  00F5F8  65                 	db	101	;'e'
  2378  00F5F9  6D                 	db	109	;'m'
  2379  00F5FA  6F                 	db	111	;'o'
  2380  00F5FB  74                 	db	116	;'t'
  2381  00F5FC  65                 	db	101	;'e'
  2382  00F5FD  20                 	db	32
  2383  00F5FE  62                 	db	98	;'b'
  2384  00F5FF  75                 	db	117	;'u'
  2385  00F600  74                 	db	116	;'t'
  2386  00F601  74                 	db	116	;'t'
  2387  00F602  6F                 	db	111	;'o'
  2388  00F603  6E                 	db	110	;'n'
  2389  00F604  20                 	db	32
  2390  00F605  77                 	db	119	;'w'
  2391  00F606  61                 	db	97	;'a'
  2392  00F607  73                 	db	115	;'s'
  2393  00F608  20                 	db	32
  2394  00F609  70                 	db	112	;'p'
  2395  00F60A  72                 	db	114	;'r'
  2396  00F60B  65                 	db	101	;'e'
  2397  00F60C  73                 	db	115	;'s'
  2398  00F60D  73                 	db	115	;'s'
  2399  00F60E  65                 	db	101	;'e'
  2400  00F60F  64                 	db	100	;'d'
  2401  00F610  00                 	db	0
  2402  00F611                     STR_53:
  2403  00F611  45                 	db	69	;'E'
  2404  00F612  72                 	db	114	;'r'
  2405  00F613  72                 	db	114	;'r'
  2406  00F614  6F                 	db	111	;'o'
  2407  00F615  72                 	db	114	;'r'
  2408  00F616  3A                 	db	58	;':'
  2409  00F617  20                 	db	32
  2410  00F618  52                 	db	82	;'R'
  2411  00F619  65                 	db	101	;'e'
  2412  00F61A  6D                 	db	109	;'m'
  2413  00F61B  6F                 	db	111	;'o'
  2414  00F61C  74                 	db	116	;'t'
  2415  00F61D  65                 	db	101	;'e'
  2416  00F61E  20                 	db	32
  2417  00F61F  62                 	db	98	;'b'
  2418  00F620  75                 	db	117	;'u'
  2419  00F621  74                 	db	116	;'t'
  2420  00F622  74                 	db	116	;'t'
  2421  00F623  6F                 	db	111	;'o'
  2422  00F624  6E                 	db	110	;'n'
  2423  00F625  20                 	db	32
  2424  00F626  6E                 	db	110	;'n'
  2425  00F627  6F                 	db	111	;'o'
  2426  00F628  74                 	db	116	;'t'
  2427  00F629  20                 	db	32
  2428  00F62A  73                 	db	115	;'s'
  2429  00F62B  70                 	db	112	;'p'
  2430  00F62C  65                 	db	101	;'e'
  2431  00F62D  63                 	db	99	;'c'
  2432  00F62E  69                 	db	105	;'i'
  2433  00F62F  66                 	db	102	;'f'
  2434  00F630  69                 	db	105	;'i'
  2435  00F631  65                 	db	101	;'e'
  2436  00F632  64                 	db	100	;'d'
  2437  00F633  00                 	db	0
  2438  00F634                     STR_34:
  2439  00F634  45                 	db	69	;'E'
  2440  00F635  72                 	db	114	;'r'
  2441  00F636  72                 	db	114	;'r'
  2442  00F637  6F                 	db	111	;'o'
  2443  00F638  72                 	db	114	;'r'
  2444  00F639  3A                 	db	58	;':'
  2445  00F63A  20                 	db	32
  2446  00F63B  63                 	db	99	;'c'
  2447  00F63C  6F                 	db	111	;'o'
  2448  00F63D  75                 	db	117	;'u'
  2449  00F63E  6C                 	db	108	;'l'
  2450  00F63F  64                 	db	100	;'d'
  2451  00F640  20                 	db	32
  2452  00F641  6E                 	db	110	;'n'
  2453  00F642  6F                 	db	111	;'o'
  2454  00F643  74                 	db	116	;'t'
  2455  00F644  20                 	db	32
  2456  00F645  64                 	db	100	;'d'
  2457  00F646  65                 	db	101	;'e'
  2458  00F647  63                 	db	99	;'c'
  2459  00F648  6F                 	db	111	;'o'
  2460  00F649  64                 	db	100	;'d'
  2461  00F64A  65                 	db	101	;'e'
  2462  00F64B  20                 	db	32
  2463  00F64C  4E                 	db	78	;'N'
  2464  00F64D  45                 	db	69	;'E'
  2465  00F64E  43                 	db	67	;'C'
  2466  00F64F  20                 	db	32
  2467  00F650  63                 	db	99	;'c'
  2468  00F651  6F                 	db	111	;'o'
  2469  00F652  64                 	db	100	;'d'
  2470  00F653  65                 	db	101	;'e'
  2471  00F654  00                 	db	0
  2472  00F655                     STR_141:
  2473  00F655  52                 	db	82	;'R'
  2474  00F656  43                 	db	67	;'C'
  2475  00F657  2D                 	db	45
  2476  00F658  30                 	db	48	;'0'
  2477  00F659  31                 	db	49	;'1'
  2478  00F65A  35                 	db	53	;'5'
  2479  00F65B  2A                 	db	42
  2480  00F65C  33                 	db	51	;'3'
  2481  00F65D  20                 	db	32
  2482  00F65E  43                 	db	67	;'C'
  2483  00F65F  68                 	db	104	;'h'
  2484  00F660  61                 	db	97	;'a'
  2485  00F661  6E                 	db	110	;'n'
  2486  00F662  6E                 	db	110	;'n'
  2487  00F663  65                 	db	101	;'e'
  2488  00F664  6C                 	db	108	;'l'
  2489  00F665  20                 	db	32
  2490  00F666  48                 	db	72	;'H'
  2491  00F667  20                 	db	32
  2492  00F668  64                 	db	100	;'d'
  2493  00F669  65                 	db	101	;'e'
  2494  00F66A  76                 	db	118	;'v'
  2495  00F66B  69                 	db	105	;'i'
  2496  00F66C  63                 	db	99	;'c'
  2497  00F66D  65                 	db	101	;'e'
  2498  00F66E  20                 	db	32
  2499  00F66F  31                 	db	49	;'1'
  2500  00F670  20                 	db	32
  2501  00F671  4F                 	db	79	;'O'
  2502  00F672  46                 	db	70	;'F'
  2503  00F673  46                 	db	70	;'F'
  2504  00F674  00                 	db	0
  2505  00F675                     STR_143:
  2506  00F675  52                 	db	82	;'R'
  2507  00F676  43                 	db	67	;'C'
  2508  00F677  2D                 	db	45
  2509  00F678  30                 	db	48	;'0'
  2510  00F679  31                 	db	49	;'1'
  2511  00F67A  35                 	db	53	;'5'
  2512  00F67B  2A                 	db	42
  2513  00F67C  33                 	db	51	;'3'
  2514  00F67D  20                 	db	32
  2515  00F67E  43                 	db	67	;'C'
  2516  00F67F  68                 	db	104	;'h'
  2517  00F680  61                 	db	97	;'a'
  2518  00F681  6E                 	db	110	;'n'
  2519  00F682  6E                 	db	110	;'n'
  2520  00F683  65                 	db	101	;'e'
  2521  00F684  6C                 	db	108	;'l'
  2522  00F685  20                 	db	32
  2523  00F686  48                 	db	72	;'H'
  2524  00F687  20                 	db	32
  2525  00F688  64                 	db	100	;'d'
  2526  00F689  65                 	db	101	;'e'
  2527  00F68A  76                 	db	118	;'v'
  2528  00F68B  69                 	db	105	;'i'
  2529  00F68C  63                 	db	99	;'c'
  2530  00F68D  65                 	db	101	;'e'
  2531  00F68E  20                 	db	32
  2532  00F68F  32                 	db	50	;'2'
  2533  00F690  20                 	db	32
  2534  00F691  4F                 	db	79	;'O'
  2535  00F692  46                 	db	70	;'F'
  2536  00F693  46                 	db	70	;'F'
  2537  00F694  00                 	db	0
  2538  00F695                     STR_145:
  2539  00F695  52                 	db	82	;'R'
  2540  00F696  43                 	db	67	;'C'
  2541  00F697  2D                 	db	45
  2542  00F698  30                 	db	48	;'0'
  2543  00F699  31                 	db	49	;'1'
  2544  00F69A  35                 	db	53	;'5'
  2545  00F69B  2A                 	db	42
  2546  00F69C  33                 	db	51	;'3'
  2547  00F69D  20                 	db	32
  2548  00F69E  43                 	db	67	;'C'
  2549  00F69F  68                 	db	104	;'h'
  2550  00F6A0  61                 	db	97	;'a'
  2551  00F6A1  6E                 	db	110	;'n'
  2552  00F6A2  6E                 	db	110	;'n'
  2553  00F6A3  65                 	db	101	;'e'
  2554  00F6A4  6C                 	db	108	;'l'
  2555  00F6A5  20                 	db	32
  2556  00F6A6  48                 	db	72	;'H'
  2557  00F6A7  20                 	db	32
  2558  00F6A8  64                 	db	100	;'d'
  2559  00F6A9  65                 	db	101	;'e'
  2560  00F6AA  76                 	db	118	;'v'
  2561  00F6AB  69                 	db	105	;'i'
  2562  00F6AC  63                 	db	99	;'c'
  2563  00F6AD  65                 	db	101	;'e'
  2564  00F6AE  20                 	db	32
  2565  00F6AF  33                 	db	51	;'3'
  2566  00F6B0  20                 	db	32
  2567  00F6B1  4F                 	db	79	;'O'
  2568  00F6B2  46                 	db	70	;'F'
  2569  00F6B3  46                 	db	70	;'F'
  2570  00F6B4  00                 	db	0
  2571  00F6B5                     STR_95:
  2572  00F6B5  43                 	db	67	;'C'
  2573  00F6B6  6C                 	db	108	;'l'
  2574  00F6B7  65                 	db	101	;'e'
  2575  00F6B8  61                 	db	97	;'a'
  2576  00F6B9  72                 	db	114	;'r'
  2577  00F6BA  73                 	db	115	;'s'
  2578  00F6BB  20                 	db	32
  2579  00F6BC  6D                 	db	109	;'m'
  2580  00F6BD  65                 	db	101	;'e'
  2581  00F6BE  6D                 	db	109	;'m'
  2582  00F6BF  6F                 	db	111	;'o'
  2583  00F6C0  72                 	db	114	;'r'
  2584  00F6C1  79                 	db	121	;'y'
  2585  00F6C2  20                 	db	32
  2586  00F6C3  61                 	db	97	;'a'
  2587  00F6C4  6E                 	db	110	;'n'
  2588  00F6C5  64                 	db	100	;'d'
  2589  00F6C6  20                 	db	32
  2590  00F6C7  72                 	db	114	;'r'
  2591  00F6C8  65                 	db	101	;'e'
  2592  00F6C9  73                 	db	115	;'s'
  2593  00F6CA  65                 	db	101	;'e'
  2594  00F6CB  74                 	db	116	;'t'
  2595  00F6CC  73                 	db	115	;'s'
  2596  00F6CD  20                 	db	32
  2597  00F6CE  64                 	db	100	;'d'
  2598  00F6CF  65                 	db	101	;'e'
  2599  00F6D0  76                 	db	118	;'v'
  2600  00F6D1  69                 	db	105	;'i'
  2601  00F6D2  63                 	db	99	;'c'
  2602  00F6D3  65                 	db	101	;'e'
  2603  00F6D4  00                 	db	0
  2604  00F6D5                     STR_79:
  2605  00F6D5  45                 	db	69	;'E'
  2606  00F6D6  6E                 	db	110	;'n'
  2607  00F6D7  74                 	db	116	;'t'
  2608  00F6D8  65                 	db	101	;'e'
  2609  00F6D9  72                 	db	114	;'r'
  2610  00F6DA  20                 	db	32
  2611  00F6DB  59                 	db	89	;'Y'
  2612  00F6DC  20                 	db	32
  2613  00F6DD  74                 	db	116	;'t'
  2614  00F6DE  6F                 	db	111	;'o'
  2615  00F6DF  20                 	db	32
  2616  00F6E0  72                 	db	114	;'r'
  2617  00F6E1  65                 	db	101	;'e'
  2618  00F6E2  73                 	db	115	;'s'
  2619  00F6E3  65                 	db	101	;'e'
  2620  00F6E4  74                 	db	116	;'t'
  2621  00F6E5  20                 	db	32
  2622  00F6E6  6F                 	db	111	;'o'
  2623  00F6E7  72                 	db	114	;'r'
  2624  00F6E8  20                 	db	32
  2625  00F6E9  4E                 	db	78	;'N'
  2626  00F6EA  20                 	db	32
  2627  00F6EB  74                 	db	116	;'t'
  2628  00F6EC  6F                 	db	111	;'o'
  2629  00F6ED  20                 	db	32
  2630  00F6EE  63                 	db	99	;'c'
  2631  00F6EF  61                 	db	97	;'a'
  2632  00F6F0  6E                 	db	110	;'n'
  2633  00F6F1  63                 	db	99	;'c'
  2634  00F6F2  65                 	db	101	;'e'
  2635  00F6F3  6C                 	db	108	;'l'
  2636  00F6F4  00                 	db	0
  2637  00F6F5                     STR_30:
  2638  00F6F5  45                 	db	69	;'E'
  2639  00F6F6  72                 	db	114	;'r'
  2640  00F6F7  72                 	db	114	;'r'
  2641  00F6F8  6F                 	db	111	;'o'
  2642  00F6F9  72                 	db	114	;'r'
  2643  00F6FA  3A                 	db	58	;':'
  2644  00F6FB  20                 	db	32
  2645  00F6FC  63                 	db	99	;'c'
  2646  00F6FD  6F                 	db	111	;'o'
  2647  00F6FE  75                 	db	117	;'u'
  2648  00F6FF  6C                 	db	108	;'l'
  2649  00F700  64                 	db	100	;'d'
  2650  00F701  20                 	db	32
  2651  00F702  6E                 	db	110	;'n'
  2652  00F703  6F                 	db	111	;'o'
  2653  00F704  74                 	db	116	;'t'
  2654  00F705  20                 	db	32
  2655  00F706  64                 	db	100	;'d'
  2656  00F707  65                 	db	101	;'e'
  2657  00F708  63                 	db	99	;'c'
  2658  00F709  6F                 	db	111	;'o'
  2659  00F70A  64                 	db	100	;'d'
  2660  00F70B  65                 	db	101	;'e'
  2661  00F70C  20                 	db	32
  2662  00F70D  41                 	db	65	;'A'
  2663  00F70E  64                 	db	100	;'d'
  2664  00F70F  64                 	db	100	;'d'
  2665  00F710  72                 	db	114	;'r'
  2666  00F711  65                 	db	101	;'e'
  2667  00F712  73                 	db	115	;'s'
  2668  00F713  73                 	db	115	;'s'
  2669  00F714  00                 	db	0
  2670  00F715                     STR_25:
  2671  00F715  45                 	db	69	;'E'
  2672  00F716  72                 	db	114	;'r'
  2673  00F717  72                 	db	114	;'r'
  2674  00F718  6F                 	db	111	;'o'
  2675  00F719  72                 	db	114	;'r'
  2676  00F71A  3A                 	db	58	;':'
  2677  00F71B  20                 	db	32
  2678  00F71C  43                 	db	67	;'C'
  2679  00F71D  6F                 	db	111	;'o'
  2680  00F71E  6D                 	db	109	;'m'
  2681  00F71F  6D                 	db	109	;'m'
  2682  00F720  61                 	db	97	;'a'
  2683  00F721  6E                 	db	110	;'n'
  2684  00F722  64                 	db	100	;'d'
  2685  00F723  20                 	db	32
  2686  00F724  6C                 	db	108	;'l'
  2687  00F725  61                 	db	97	;'a'
  2688  00F726  72                 	db	114	;'r'
  2689  00F727  67                 	db	103	;'g'
  2690  00F728  65                 	db	101	;'e'
  2691  00F729  72                 	db	114	;'r'
  2692  00F72A  20                 	db	32
  2693  00F72B  74                 	db	116	;'t'
  2694  00F72C  68                 	db	104	;'h'
  2695  00F72D  61                 	db	97	;'a'
  2696  00F72E  74                 	db	116	;'t'
  2697  00F72F  20                 	db	32
  2698  00F730  32                 	db	50	;'2'
  2699  00F731  35                 	db	53	;'5'
  2700  00F732  35                 	db	53	;'5'
  2701  00F733  00                 	db	0
  2702  00F734                     STR_26:
  2703  00F734  45                 	db	69	;'E'
  2704  00F735  72                 	db	114	;'r'
  2705  00F736  72                 	db	114	;'r'
  2706  00F737  6F                 	db	111	;'o'
  2707  00F738  72                 	db	114	;'r'
  2708  00F739  3A                 	db	58	;':'
  2709  00F73A  20                 	db	32
  2710  00F73B  41                 	db	65	;'A'
  2711  00F73C  64                 	db	100	;'d'
  2712  00F73D  64                 	db	100	;'d'
  2713  00F73E  72                 	db	114	;'r'
  2714  00F73F  65                 	db	101	;'e'
  2715  00F740  73                 	db	115	;'s'
  2716  00F741  73                 	db	115	;'s'
  2717  00F742  20                 	db	32
  2718  00F743  6C                 	db	108	;'l'
  2719  00F744  61                 	db	97	;'a'
  2720  00F745  72                 	db	114	;'r'
  2721  00F746  67                 	db	103	;'g'
  2722  00F747  65                 	db	101	;'e'
  2723  00F748  72                 	db	114	;'r'
  2724  00F749  20                 	db	32
  2725  00F74A  74                 	db	116	;'t'
  2726  00F74B  68                 	db	104	;'h'
  2727  00F74C  61                 	db	97	;'a'
  2728  00F74D  74                 	db	116	;'t'
  2729  00F74E  20                 	db	32
  2730  00F74F  32                 	db	50	;'2'
  2731  00F750  35                 	db	53	;'5'
  2732  00F751  35                 	db	53	;'5'
  2733  00F752  00                 	db	0
  2734  00F753                     STR_140:
  2735  00F753  52                 	db	82	;'R'
  2736  00F754  43                 	db	67	;'C'
  2737  00F755  2D                 	db	45
  2738  00F756  30                 	db	48	;'0'
  2739  00F757  31                 	db	49	;'1'
  2740  00F758  35                 	db	53	;'5'
  2741  00F759  2A                 	db	42
  2742  00F75A  33                 	db	51	;'3'
  2743  00F75B  20                 	db	32
  2744  00F75C  43                 	db	67	;'C'
  2745  00F75D  68                 	db	104	;'h'
  2746  00F75E  61                 	db	97	;'a'
  2747  00F75F  6E                 	db	110	;'n'
  2748  00F760  6E                 	db	110	;'n'
  2749  00F761  65                 	db	101	;'e'
  2750  00F762  6C                 	db	108	;'l'
  2751  00F763  20                 	db	32
  2752  00F764  48                 	db	72	;'H'
  2753  00F765  20                 	db	32
  2754  00F766  64                 	db	100	;'d'
  2755  00F767  65                 	db	101	;'e'
  2756  00F768  76                 	db	118	;'v'
  2757  00F769  69                 	db	105	;'i'
  2758  00F76A  63                 	db	99	;'c'
  2759  00F76B  65                 	db	101	;'e'
  2760  00F76C  20                 	db	32
  2761  00F76D  31                 	db	49	;'1'
  2762  00F76E  20                 	db	32
  2763  00F76F  4F                 	db	79	;'O'
  2764  00F770  4E                 	db	78	;'N'
  2765  00F771  00                 	db	0
  2766  00F772                     STR_142:
  2767  00F772  52                 	db	82	;'R'
  2768  00F773  43                 	db	67	;'C'
  2769  00F774  2D                 	db	45
  2770  00F775  30                 	db	48	;'0'
  2771  00F776  31                 	db	49	;'1'
  2772  00F777  35                 	db	53	;'5'
  2773  00F778  2A                 	db	42
  2774  00F779  33                 	db	51	;'3'
  2775  00F77A  20                 	db	32
  2776  00F77B  43                 	db	67	;'C'
  2777  00F77C  68                 	db	104	;'h'
  2778  00F77D  61                 	db	97	;'a'
  2779  00F77E  6E                 	db	110	;'n'
  2780  00F77F  6E                 	db	110	;'n'
  2781  00F780  65                 	db	101	;'e'
  2782  00F781  6C                 	db	108	;'l'
  2783  00F782  20                 	db	32
  2784  00F783  48                 	db	72	;'H'
  2785  00F784  20                 	db	32
  2786  00F785  64                 	db	100	;'d'
  2787  00F786  65                 	db	101	;'e'
  2788  00F787  76                 	db	118	;'v'
  2789  00F788  69                 	db	105	;'i'
  2790  00F789  63                 	db	99	;'c'
  2791  00F78A  65                 	db	101	;'e'
  2792  00F78B  20                 	db	32
  2793  00F78C  32                 	db	50	;'2'
  2794  00F78D  20                 	db	32
  2795  00F78E  4F                 	db	79	;'O'
  2796  00F78F  4E                 	db	78	;'N'
  2797  00F790  00                 	db	0
  2798  00F791                     STR_144:
  2799  00F791  52                 	db	82	;'R'
  2800  00F792  43                 	db	67	;'C'
  2801  00F793  2D                 	db	45
  2802  00F794  30                 	db	48	;'0'
  2803  00F795  31                 	db	49	;'1'
  2804  00F796  35                 	db	53	;'5'
  2805  00F797  2A                 	db	42
  2806  00F798  33                 	db	51	;'3'
  2807  00F799  20                 	db	32
  2808  00F79A  43                 	db	67	;'C'
  2809  00F79B  68                 	db	104	;'h'
  2810  00F79C  61                 	db	97	;'a'
  2811  00F79D  6E                 	db	110	;'n'
  2812  00F79E  6E                 	db	110	;'n'
  2813  00F79F  65                 	db	101	;'e'
  2814  00F7A0  6C                 	db	108	;'l'
  2815  00F7A1  20                 	db	32
  2816  00F7A2  48                 	db	72	;'H'
  2817  00F7A3  20                 	db	32
  2818  00F7A4  64                 	db	100	;'d'
  2819  00F7A5  65                 	db	101	;'e'
  2820  00F7A6  76                 	db	118	;'v'
  2821  00F7A7  69                 	db	105	;'i'
  2822  00F7A8  63                 	db	99	;'c'
  2823  00F7A9  65                 	db	101	;'e'
  2824  00F7AA  20                 	db	32
  2825  00F7AB  33                 	db	51	;'3'
  2826  00F7AC  20                 	db	32
  2827  00F7AD  4F                 	db	79	;'O'
  2828  00F7AE  4E                 	db	78	;'N'
  2829  00F7AF  00                 	db	0
  2830  00F7B0                     STR_66:
  2831  00F7B0  45                 	db	69	;'E'
  2832  00F7B1  72                 	db	114	;'r'
  2833  00F7B2  72                 	db	114	;'r'
  2834  00F7B3  6F                 	db	111	;'o'
  2835  00F7B4  72                 	db	114	;'r'
  2836  00F7B5  3A                 	db	58	;':'
  2837  00F7B6  20                 	db	32
  2838  00F7B7  4E                 	db	78	;'N'
  2839  00F7B8  6F                 	db	111	;'o'
  2840  00F7B9  20                 	db	32
  2841  00F7BA  52                 	db	82	;'R'
  2842  00F7BB  46                 	db	70	;'F'
  2843  00F7BC  20                 	db	32
  2844  00F7BD  63                 	db	99	;'c'
  2845  00F7BE  68                 	db	104	;'h'
  2846  00F7BF  61                 	db	97	;'a'
  2847  00F7C0  6E                 	db	110	;'n'
  2848  00F7C1  6E                 	db	110	;'n'
  2849  00F7C2  65                 	db	101	;'e'
  2850  00F7C3  6C                 	db	108	;'l'
  2851  00F7C4  20                 	db	32
  2852  00F7C5  73                 	db	115	;'s'
  2853  00F7C6  70                 	db	112	;'p'
  2854  00F7C7  65                 	db	101	;'e'
  2855  00F7C8  63                 	db	99	;'c'
  2856  00F7C9  69                 	db	105	;'i'
  2857  00F7CA  66                 	db	102	;'f'
  2858  00F7CB  69                 	db	105	;'i'
  2859  00F7CC  65                 	db	101	;'e'
  2860  00F7CD  64                 	db	100	;'d'
  2861  00F7CE  00                 	db	0
  2862  00F7CF                     STR_67:
  2863  00F7CF  45                 	db	69	;'E'
  2864  00F7D0  72                 	db	114	;'r'
  2865  00F7D1  72                 	db	114	;'r'
  2866  00F7D2  6F                 	db	111	;'o'
  2867  00F7D3  72                 	db	114	;'r'
  2868  00F7D4  3A                 	db	58	;':'
  2869  00F7D5  20                 	db	32
  2870  00F7D6  52                 	db	82	;'R'
  2871  00F7D7  46                 	db	70	;'F'
  2872  00F7D8  20                 	db	32
  2873  00F7D9  63                 	db	99	;'c'
  2874  00F7DA  68                 	db	104	;'h'
  2875  00F7DB  61                 	db	97	;'a'
  2876  00F7DC  6E                 	db	110	;'n'
  2877  00F7DD  6E                 	db	110	;'n'
  2878  00F7DE  65                 	db	101	;'e'
  2879  00F7DF  6C                 	db	108	;'l'
  2880  00F7E0  20                 	db	32
  2881  00F7E1  6F                 	db	111	;'o'
  2882  00F7E2  75                 	db	117	;'u'
  2883  00F7E3  74                 	db	116	;'t'
  2884  00F7E4  20                 	db	32
  2885  00F7E5  6F                 	db	111	;'o'
  2886  00F7E6  66                 	db	102	;'f'
  2887  00F7E7  20                 	db	32
  2888  00F7E8  72                 	db	114	;'r'
  2889  00F7E9  61                 	db	97	;'a'
  2890  00F7EA  6E                 	db	110	;'n'
  2891  00F7EB  67                 	db	103	;'g'
  2892  00F7EC  65                 	db	101	;'e'
  2893  00F7ED  00                 	db	0
  2894  00F7EE                     STR_36:
  2895  00F7EE  4E                 	db	78	;'N'
  2896  00F7EF  45                 	db	69	;'E'
  2897  00F7F0  43                 	db	67	;'C'
  2898  00F7F1  20                 	db	32
  2899  00F7F2  63                 	db	99	;'c'
  2900  00F7F3  6F                 	db	111	;'o'
  2901  00F7F4  64                 	db	100	;'d'
  2902  00F7F5  65                 	db	101	;'e'
  2903  00F7F6  20                 	db	32
  2904  00F7F7  6E                 	db	110	;'n'
  2905  00F7F8  6F                 	db	111	;'o'
  2906  00F7F9  74                 	db	116	;'t'
  2907  00F7FA  20                 	db	32
  2908  00F7FB  65                 	db	101	;'e'
  2909  00F7FC  6E                 	db	110	;'n'
  2910  00F7FD  74                 	db	116	;'t'
  2911  00F7FE  65                 	db	101	;'e'
  2912  00F7FF  72                 	db	114	;'r'
  2913  00F800  65                 	db	101	;'e'
  2914  00F801  64                 	db	100	;'d'
  2915  00F802  20                 	db	32
  2916  00F803  63                 	db	99	;'c'
  2917  00F804  6F                 	db	111	;'o'
  2918  00F805  72                 	db	114	;'r'
  2919  00F806  72                 	db	114	;'r'
  2920  00F807  65                 	db	101	;'e'
  2921  00F808  63                 	db	99	;'c'
  2922  00F809  74                 	db	116	;'t'
  2923  00F80A  6C                 	db	108	;'l'
  2924  00F80B  79                 	db	121	;'y'
  2925  00F80C  00                 	db	0
  2926  00F80D                     STR_80:
  2927  00F80D  44                 	db	68	;'D'
  2928  00F80E  65                 	db	101	;'e'
  2929  00F80F  76                 	db	118	;'v'
  2930  00F810  69                 	db	105	;'i'
  2931  00F811  63                 	db	99	;'c'
  2932  00F812  65                 	db	101	;'e'
  2933  00F813  20                 	db	32
  2934  00F814  72                 	db	114	;'r'
  2935  00F815  65                 	db	101	;'e'
  2936  00F816  73                 	db	115	;'s'
  2937  00F817  75                 	db	117	;'u'
  2938  00F818  6D                 	db	109	;'m'
  2939  00F819  65                 	db	101	;'e'
  2940  00F81A  73                 	db	115	;'s'
  2941  00F81B  20                 	db	32
  2942  00F81C  77                 	db	119	;'w'
  2943  00F81D  69                 	db	105	;'i'
  2944  00F81E  74                 	db	116	;'t'
  2945  00F81F  68                 	db	104	;'h'
  2946  00F820  6F                 	db	111	;'o'
  2947  00F821  75                 	db	117	;'u'
  2948  00F822  74                 	db	116	;'t'
  2949  00F823  20                 	db	32
  2950  00F824  72                 	db	114	;'r'
  2951  00F825  65                 	db	101	;'e'
  2952  00F826  73                 	db	115	;'s'
  2953  00F827  65                 	db	101	;'e'
  2954  00F828  74                 	db	116	;'t'
  2955  00F829  00                 	db	0
  2956  00F82A                     STR_21:
  2957  00F82A  43                 	db	67	;'C'
  2958  00F82B  6F                 	db	111	;'o'
  2959  00F82C  6E                 	db	110	;'n'
  2960  00F82D  66                 	db	102	;'f'
  2961  00F82E  69                 	db	105	;'i'
  2962  00F82F  67                 	db	103	;'g'
  2963  00F830  75                 	db	117	;'u'
  2964  00F831  72                 	db	114	;'r'
  2965  00F832  61                 	db	97	;'a'
  2966  00F833  74                 	db	116	;'t'
  2967  00F834  69                 	db	105	;'i'
  2968  00F835  6F                 	db	111	;'o'
  2969  00F836  6E                 	db	110	;'n'
  2970  00F837  20                 	db	32
  2971  00F838  31                 	db	49	;'1'
  2972  00F839  20                 	db	32
  2973  00F83A  52                 	db	82	;'R'
  2974  00F83B  46                 	db	70	;'F'
  2975  00F83C  20                 	db	32
  2976  00F83D  63                 	db	99	;'c'
  2977  00F83E  6F                 	db	111	;'o'
  2978  00F83F  64                 	db	100	;'d'
  2979  00F840  65                 	db	101	;'e'
  2980  00F841  20                 	db	32
  2981  00F842  73                 	db	115	;'s'
  2982  00F843  65                 	db	101	;'e'
  2983  00F844  6E                 	db	110	;'n'
  2984  00F845  74                 	db	116	;'t'
  2985  00F846  00                 	db	0
  2986  00F847                     STR_23:
  2987  00F847  43                 	db	67	;'C'
  2988  00F848  6F                 	db	111	;'o'
  2989  00F849  6E                 	db	110	;'n'
  2990  00F84A  66                 	db	102	;'f'
  2991  00F84B  69                 	db	105	;'i'
  2992  00F84C  67                 	db	103	;'g'
  2993  00F84D  75                 	db	117	;'u'
  2994  00F84E  72                 	db	114	;'r'
  2995  00F84F  61                 	db	97	;'a'
  2996  00F850  74                 	db	116	;'t'
  2997  00F851  69                 	db	105	;'i'
  2998  00F852  6F                 	db	111	;'o'
  2999  00F853  6E                 	db	110	;'n'
  3000  00F854  20                 	db	32
  3001  00F855  32                 	db	50	;'2'
  3002  00F856  20                 	db	32
  3003  00F857  52                 	db	82	;'R'
  3004  00F858  46                 	db	70	;'F'
  3005  00F859  20                 	db	32
  3006  00F85A  63                 	db	99	;'c'
  3007  00F85B  6F                 	db	111	;'o'
  3008  00F85C  64                 	db	100	;'d'
  3009  00F85D  65                 	db	101	;'e'
  3010  00F85E  20                 	db	32
  3011  00F85F  73                 	db	115	;'s'
  3012  00F860  65                 	db	101	;'e'
  3013  00F861  6E                 	db	110	;'n'
  3014  00F862  74                 	db	116	;'t'
  3015  00F863  00                 	db	0
  3016  00F864                     STR_88:
  3017  00F864  50                 	db	80	;'P'
  3018  00F865  43                 	db	67	;'C'
  3019  00F866  42                 	db	66	;'B'
  3020  00F867  20                 	db	32
  3021  00F868  68                 	db	104	;'h'
  3022  00F869  61                 	db	97	;'a'
  3023  00F86A  73                 	db	115	;'s'
  3024  00F86B  20                 	db	32
  3025  00F86C  42                 	db	66	;'B'
  3026  00F86D  6C                 	db	108	;'l'
  3027  00F86E  75                 	db	117	;'u'
  3028  00F86F  65                 	db	101	;'e'
  3029  00F870  74                 	db	116	;'t'
  3030  00F871  6F                 	db	111	;'o'
  3031  00F872  6F                 	db	111	;'o'
  3032  00F873  74                 	db	116	;'t'
  3033  00F874  68                 	db	104	;'h'
  3034  00F875  20                 	db	32
  3035  00F876  63                 	db	99	;'c'
  3036  00F877  61                 	db	97	;'a'
  3037  00F878  70                 	db	112	;'p'
  3038  00F879  61                 	db	97	;'a'
  3039  00F87A  62                 	db	98	;'b'
  3040  00F87B  69                 	db	105	;'i'
  3041  00F87C  6C                 	db	108	;'l'
  3042  00F87D  69                 	db	105	;'i'
  3043  00F87E  74                 	db	116	;'t'
  3044  00F87F  79                 	db	121	;'y'
  3045  00F880  00                 	db	0
  3046  00F881                     STR_17:
  3047  00F881  42                 	db	66	;'B'
  3048  00F882  54                 	db	84	;'T'
  3049  00F883  4E                 	db	78	;'N'
  3050  00F884  61                 	db	97	;'a'
  3051  00F885  6D                 	db	109	;'m'
  3052  00F886  65                 	db	101	;'e'
  3053  00F887  3D                 	db	61	;'='
  3054  00F888  48                 	db	72	;'H'
  3055  00F889  6F                 	db	111	;'o'
  3056  00F88A  6D                 	db	109	;'m'
  3057  00F88B  65                 	db	101	;'e'
  3058  00F88C  20                 	db	32
  3059  00F88D  41                 	db	65	;'A'
  3060  00F88E  75                 	db	117	;'u'
  3061  00F88F  74                 	db	116	;'t'
  3062  00F890  6F                 	db	111	;'o'
  3063  00F891  6D                 	db	109	;'m'
  3064  00F892  61                 	db	97	;'a'
  3065  00F893  74                 	db	116	;'t'
  3066  00F894  69                 	db	105	;'i'
  3067  00F895  6F                 	db	111	;'o'
  3068  00F896  6E                 	db	110	;'n'
  3069  00F897  20                 	db	32
  3070  00F898  25                 	db	37
  3071  00F899  6C                 	db	108	;'l'
  3072  00F89A  64                 	db	100	;'d'
  3073  00F89B  0D                 	db	13
  3074  00F89C  00                 	db	0
  3075  00F89D                     STR_100:
  3076  00F89D  44                 	db	68	;'D'
  3077  00F89E  69                 	db	105	;'i'
  3078  00F89F  73                 	db	115	;'s'
  3079  00F8A0  70                 	db	112	;'p'
  3080  00F8A1  6C                 	db	108	;'l'
  3081  00F8A2  61                 	db	97	;'a'
  3082  00F8A3  79                 	db	121	;'y'
  3083  00F8A4  73                 	db	115	;'s'
  3084  00F8A5  20                 	db	32
  3085  00F8A6  74                 	db	116	;'t'
  3086  00F8A7  68                 	db	104	;'h'
  3087  00F8A8  65                 	db	101	;'e'
  3088  00F8A9  20                 	db	32
  3089  00F8AA  73                 	db	115	;'s'
  3090  00F8AB  75                 	db	117	;'u'
  3091  00F8AC  70                 	db	112	;'p'
  3092  00F8AD  70                 	db	112	;'p'
  3093  00F8AE  6C                 	db	108	;'l'
  3094  00F8AF  79                 	db	121	;'y'
  3095  00F8B0  20                 	db	32
  3096  00F8B1  76                 	db	118	;'v'
  3097  00F8B2  6F                 	db	111	;'o'
  3098  00F8B3  6C                 	db	108	;'l'
  3099  00F8B4  74                 	db	116	;'t'
  3100  00F8B5  61                 	db	97	;'a'
  3101  00F8B6  67                 	db	103	;'g'
  3102  00F8B7  65                 	db	101	;'e'
  3103  00F8B8  00                 	db	0
  3104  00F8B9                     STR_147:
  3105  00F8B9  50                 	db	80	;'P'
  3106  00F8BA  72                 	db	114	;'r'
  3107  00F8BB  65                 	db	101	;'e'
  3108  00F8BC  73                 	db	115	;'s'
  3109  00F8BD  73                 	db	115	;'s'
  3110  00F8BE  20                 	db	32
  3111  00F8BF  52                 	db	82	;'R'
  3112  00F8C0  65                 	db	101	;'e'
  3113  00F8C1  6D                 	db	109	;'m'
  3114  00F8C2  6F                 	db	111	;'o'
  3115  00F8C3  74                 	db	116	;'t'
  3116  00F8C4  65                 	db	101	;'e'
  3117  00F8C5  20                 	db	32
  3118  00F8C6  43                 	db	67	;'C'
  3119  00F8C7  6F                 	db	111	;'o'
  3120  00F8C8  6E                 	db	110	;'n'
  3121  00F8C9  74                 	db	116	;'t'
  3122  00F8CA  72                 	db	114	;'r'
  3123  00F8CB  6F                 	db	111	;'o'
  3124  00F8CC  6C                 	db	108	;'l'
  3125  00F8CD  20                 	db	32
  3126  00F8CE  62                 	db	98	;'b'
  3127  00F8CF  75                 	db	117	;'u'
  3128  00F8D0  74                 	db	116	;'t'
  3129  00F8D1  74                 	db	116	;'t'
  3130  00F8D2  6F                 	db	111	;'o'
  3131  00F8D3  6E                 	db	110	;'n'
  3132  00F8D4  00                 	db	0
  3133  00F8D5                     STR_146:
  3134  00F8D5  45                 	db	69	;'E'
  3135  00F8D6  6E                 	db	110	;'n'
  3136  00F8D7  74                 	db	116	;'t'
  3137  00F8D8  65                 	db	101	;'e'
  3138  00F8D9  72                 	db	114	;'r'
  3139  00F8DA  20                 	db	32
  3140  00F8DB  3F                 	db	63	;'?'
  3141  00F8DC  3F                 	db	63	;'?'
  3142  00F8DD  3F                 	db	63	;'?'
  3143  00F8DE  20                 	db	32
  3144  00F8DF  66                 	db	102	;'f'
  3145  00F8E0  6F                 	db	111	;'o'
  3146  00F8E1  72                 	db	114	;'r'
  3147  00F8E2  20                 	db	32
  3148  00F8E3  43                 	db	67	;'C'
  3149  00F8E4  6F                 	db	111	;'o'
  3150  00F8E5  6D                 	db	109	;'m'
  3151  00F8E6  6D                 	db	109	;'m'
  3152  00F8E7  61                 	db	97	;'a'
  3153  00F8E8  6E                 	db	110	;'n'
  3154  00F8E9  64                 	db	100	;'d'
  3155  00F8EA  20                 	db	32
  3156  00F8EB  4D                 	db	77	;'M'
  3157  00F8EC  65                 	db	101	;'e'
  3158  00F8ED  6E                 	db	110	;'n'
  3159  00F8EE  75                 	db	117	;'u'
  3160  00F8EF  00                 	db	0
  3161  00F8F0                     STR_97:
  3162  00F8F0  44                 	db	68	;'D'
  3163  00F8F1  69                 	db	105	;'i'
  3164  00F8F2  73                 	db	115	;'s'
  3165  00F8F3  70                 	db	112	;'p'
  3166  00F8F4  6C                 	db	108	;'l'
  3167  00F8F5  61                 	db	97	;'a'
  3168  00F8F6  79                 	db	121	;'y'
  3169  00F8F7  73                 	db	115	;'s'
  3170  00F8F8  20                 	db	32
  3171  00F8F9  46                 	db	70	;'F'
  3172  00F8FA  69                 	db	105	;'i'
  3173  00F8FB  72                 	db	114	;'r'
  3174  00F8FC  6D                 	db	109	;'m'
  3175  00F8FD  77                 	db	119	;'w'
  3176  00F8FE  61                 	db	97	;'a'
  3177  00F8FF  72                 	db	114	;'r'
  3178  00F900  65                 	db	101	;'e'
  3179  00F901  20                 	db	32
  3180  00F902  56                 	db	86	;'V'
  3181  00F903  65                 	db	101	;'e'
  3182  00F904  72                 	db	114	;'r'
  3183  00F905  73                 	db	115	;'s'
  3184  00F906  69                 	db	105	;'i'
  3185  00F907  6F                 	db	111	;'o'
  3186  00F908  6E                 	db	110	;'n'
  3187  00F909  00                 	db	0
  3188  00F90A                     STR_103:
  3189  00F90A  54                 	db	84	;'T'
  3190  00F90B  72                 	db	114	;'r'
  3191  00F90C  61                 	db	97	;'a'
  3192  00F90D  6E                 	db	110	;'n'
  3193  00F90E  73                 	db	115	;'s'
  3194  00F90F  6D                 	db	109	;'m'
  3195  00F910  69                 	db	105	;'i'
  3196  00F911  74                 	db	116	;'t'
  3197  00F912  73                 	db	115	;'s'
  3198  00F913  20                 	db	32
  3199  00F914  73                 	db	115	;'s'
  3200  00F915  61                 	db	97	;'a'
  3201  00F916  76                 	db	118	;'v'
  3202  00F917  65                 	db	101	;'e'
  3203  00F918  64                 	db	100	;'d'
  3204  00F919  20                 	db	32
  3205  00F91A  4E                 	db	78	;'N'
  3206  00F91B  45                 	db	69	;'E'
  3207  00F91C  43                 	db	67	;'C'
  3208  00F91D  20                 	db	32
  3209  00F91E  63                 	db	99	;'c'
  3210  00F91F  6F                 	db	111	;'o'
  3211  00F920  64                 	db	100	;'d'
  3212  00F921  65                 	db	101	;'e'
  3213  00F922  00                 	db	0
  3214  00F923                     STR_4:
  3215  00F923  53                 	db	83	;'S'
  3216  00F924  4E                 	db	78	;'N'
  3217  00F925  2C                 	db	44
  3218  00F926  48                 	db	72	;'H'
  3219  00F927  6F                 	db	111	;'o'
  3220  00F928  6D                 	db	109	;'m'
  3221  00F929  65                 	db	101	;'e'
  3222  00F92A  20                 	db	32
  3223  00F92B  41                 	db	65	;'A'
  3224  00F92C  75                 	db	117	;'u'
  3225  00F92D  74                 	db	116	;'t'
  3226  00F92E  6F                 	db	111	;'o'
  3227  00F92F  6D                 	db	109	;'m'
  3228  00F930  61                 	db	97	;'a'
  3229  00F931  74                 	db	116	;'t'
  3230  00F932  69                 	db	105	;'i'
  3231  00F933  6F                 	db	111	;'o'
  3232  00F934  6E                 	db	110	;'n'
  3233  00F935  20                 	db	32
  3234  00F936  25                 	db	37
  3235  00F937  6C                 	db	108	;'l'
  3236  00F938  64                 	db	100	;'d'
  3237  00F939  0D                 	db	13
  3238  00F93A  00                 	db	0
  3239  00F93B                     STR_105:
  3240  00F93B  41                 	db	65	;'A'
  3241  00F93C  6C                 	db	108	;'l'
  3242  00F93D  6C                 	db	108	;'l'
  3243  00F93E  6F                 	db	111	;'o'
  3244  00F93F  77                 	db	119	;'w'
  3245  00F940  73                 	db	115	;'s'
  3246  00F941  20                 	db	32
  3247  00F942  73                 	db	115	;'s'
  3248  00F943  61                 	db	97	;'a'
  3249  00F944  76                 	db	118	;'v'
  3250  00F945  69                 	db	105	;'i'
  3251  00F946  6E                 	db	110	;'n'
  3252  00F947  67                 	db	103	;'g'
  3253  00F948  20                 	db	32
  3254  00F949  4E                 	db	78	;'N'
  3255  00F94A  45                 	db	69	;'E'
  3256  00F94B  43                 	db	67	;'C'
  3257  00F94C  20                 	db	32
  3258  00F94D  63                 	db	99	;'c'
  3259  00F94E  6F                 	db	111	;'o'
  3260  00F94F  64                 	db	100	;'d'
  3261  00F950  65                 	db	101	;'e'
  3262  00F951  73                 	db	115	;'s'
  3263  00F952  00                 	db	0
  3264  00F953                     STR_29:
  3265  00F953  53                 	db	83	;'S'
  3266  00F954  65                 	db	101	;'e'
  3267  00F955  6E                 	db	110	;'n'
  3268  00F956  74                 	db	116	;'t'
  3269  00F957  20                 	db	32
  3270  00F958  4E                 	db	78	;'N'
  3271  00F959  45                 	db	69	;'E'
  3272  00F95A  43                 	db	67	;'C'
  3273  00F95B  20                 	db	32
  3274  00F95C  63                 	db	99	;'c'
  3275  00F95D  6F                 	db	111	;'o'
  3276  00F95E  64                 	db	100	;'d'
  3277  00F95F  65                 	db	101	;'e'
  3278  00F960  20                 	db	32
  3279  00F961  3D                 	db	61	;'='
  3280  00F962  20                 	db	32
  3281  00F963  30                 	db	48	;'0'
  3282  00F964  78                 	db	120	;'x'
  3283  00F965  25                 	db	37
  3284  00F966  6C                 	db	108	;'l'
  3285  00F967  58                 	db	88	;'X'
  3286  00F968  20                 	db	32
  3287  00F969  00                 	db	0
  3288  00F96A                     STR_137:
  3289  00F96A  52                 	db	82	;'R'
  3290  00F96B  46                 	db	70	;'F'
  3291  00F96C  4B                 	db	75	;'K'
  3292  00F96D  33                 	db	51	;'3'
  3293  00F96E  30                 	db	48	;'0'
  3294  00F96F  36                 	db	54	;'6'
  3295  00F970  4C                 	db	76	;'L'
  3296  00F971  43                 	db	67	;'C'
  3297  00F972  20                 	db	32
  3298  00F973  43                 	db	67	;'C'
  3299  00F974  68                 	db	104	;'h'
  3300  00F975  61                 	db	97	;'a'
  3301  00F976  6E                 	db	110	;'n'
  3302  00F977  6E                 	db	110	;'n'
  3303  00F978  65                 	db	101	;'e'
  3304  00F979  6C                 	db	108	;'l'
  3305  00F97A  20                 	db	32
  3306  00F97B  42                 	db	66	;'B'
  3307  00F97C  20                 	db	32
  3308  00F97D  4F                 	db	79	;'O'
  3309  00F97E  46                 	db	70	;'F'
  3310  00F97F  46                 	db	70	;'F'
  3311  00F980  00                 	db	0
  3312  00F981                     STR_136:
  3313  00F981  52                 	db	82	;'R'
  3314  00F982  46                 	db	70	;'F'
  3315  00F983  4B                 	db	75	;'K'
  3316  00F984  33                 	db	51	;'3'
  3317  00F985  30                 	db	48	;'0'
  3318  00F986  36                 	db	54	;'6'
  3319  00F987  4C                 	db	76	;'L'
  3320  00F988  43                 	db	67	;'C'
  3321  00F989  20                 	db	32
  3322  00F98A  43                 	db	67	;'C'
  3323  00F98B  68                 	db	104	;'h'
  3324  00F98C  61                 	db	97	;'a'
  3325  00F98D  6E                 	db	110	;'n'
  3326  00F98E  6E                 	db	110	;'n'
  3327  00F98F  65                 	db	101	;'e'
  3328  00F990  6C                 	db	108	;'l'
  3329  00F991  20                 	db	32
  3330  00F992  42                 	db	66	;'B'
  3331  00F993  20                 	db	32
  3332  00F994  4F                 	db	79	;'O'
  3333  00F995  4E                 	db	78	;'N'
  3334  00F996  00                 	db	0
  3335  00F997                     STR_40:
  3336  00F997  4E                 	db	78	;'N'
  3337  00F998  45                 	db	69	;'E'
  3338  00F999  43                 	db	67	;'C'
  3339  00F99A  20                 	db	32
  3340  00F99B  3D                 	db	61	;'='
  3341  00F99C  20                 	db	32
  3342  00F99D  61                 	db	97	;'a'
  3343  00F99E  64                 	db	100	;'d'
  3344  00F99F  64                 	db	100	;'d'
  3345  00F9A0  72                 	db	114	;'r'
  3346  00F9A1  65                 	db	101	;'e'
  3347  00F9A2  73                 	db	115	;'s'
  3348  00F9A3  73                 	db	115	;'s'
  3349  00F9A4  2C                 	db	44
  3350  00F9A5  63                 	db	99	;'c'
  3351  00F9A6  6F                 	db	111	;'o'
  3352  00F9A7  6D                 	db	109	;'m'
  3353  00F9A8  6D                 	db	109	;'m'
  3354  00F9A9  61                 	db	97	;'a'
  3355  00F9AA  6E                 	db	110	;'n'
  3356  00F9AB  64                 	db	100	;'d'
  3357  00F9AC  00                 	db	0
  3358  00F9AD                     STR_8:
  3359  00F9AD  53                 	db	83	;'S'
  3360  00F9AE  53                 	db	83	;'S'
  3361  00F9AF  2C                 	db	44
  3362  00F9B0  20                 	db	32
  3363  00F9B1  48                 	db	72	;'H'
  3364  00F9B2  6F                 	db	111	;'o'
  3365  00F9B3  6D                 	db	109	;'m'
  3366  00F9B4  65                 	db	101	;'e'
  3367  00F9B5  20                 	db	32
  3368  00F9B6  41                 	db	65	;'A'
  3369  00F9B7  75                 	db	117	;'u'
  3370  00F9B8  74                 	db	116	;'t'
  3371  00F9B9  6F                 	db	111	;'o'
  3372  00F9BA  6D                 	db	109	;'m'
  3373  00F9BB  61                 	db	97	;'a'
  3374  00F9BC  74                 	db	116	;'t'
  3375  00F9BD  69                 	db	105	;'i'
  3376  00F9BE  6F                 	db	111	;'o'
  3377  00F9BF  6E                 	db	110	;'n'
  3378  00F9C0  0D                 	db	13
  3379  00F9C1  00                 	db	0
  3380  00F9C2                     STR_28:
  3381  00F9C2  4E                 	db	78	;'N'
  3382  00F9C3  45                 	db	69	;'E'
  3383  00F9C4  43                 	db	67	;'C'
  3384  00F9C5  20                 	db	32
  3385  00F9C6  63                 	db	99	;'c'
  3386  00F9C7  6F                 	db	111	;'o'
  3387  00F9C8  6D                 	db	109	;'m'
  3388  00F9C9  6D                 	db	109	;'m'
  3389  00F9CA  61                 	db	97	;'a'
  3390  00F9CB  6E                 	db	110	;'n'
  3391  00F9CC  64                 	db	100	;'d'
  3392  00F9CD  3A                 	db	58	;':'
  3393  00F9CE  20                 	db	32
  3394  00F9CF  30                 	db	48	;'0'
  3395  00F9D0  78                 	db	120	;'x'
  3396  00F9D1  25                 	db	37
  3397  00F9D2  30                 	db	48	;'0'
  3398  00F9D3  32                 	db	50	;'2'
  3399  00F9D4  58                 	db	88	;'X'
  3400  00F9D5  20                 	db	32
  3401  00F9D6  00                 	db	0
  3402  00F9D7                     STR_27:
  3403  00F9D7  4E                 	db	78	;'N'
  3404  00F9D8  45                 	db	69	;'E'
  3405  00F9D9  43                 	db	67	;'C'
  3406  00F9DA  20                 	db	32
  3407  00F9DB  61                 	db	97	;'a'
  3408  00F9DC  64                 	db	100	;'d'
  3409  00F9DD  64                 	db	100	;'d'
  3410  00F9DE  72                 	db	114	;'r'
  3411  00F9DF  65                 	db	101	;'e'
  3412  00F9E0  73                 	db	115	;'s'
  3413  00F9E1  73                 	db	115	;'s'
  3414  00F9E2  3A                 	db	58	;':'
  3415  00F9E3  20                 	db	32
  3416  00F9E4  30                 	db	48	;'0'
  3417  00F9E5  78                 	db	120	;'x'
  3418  00F9E6  25                 	db	37
  3419  00F9E7  30                 	db	48	;'0'
  3420  00F9E8  32                 	db	50	;'2'
  3421  00F9E9  58                 	db	88	;'X'
  3422  00F9EA  20                 	db	32
  3423  00F9EB  00                 	db	0
  3424  00F9EC                     STR_47:
  3425  00F9EC  53                 	db	83	;'S'
  3426  00F9ED  65                 	db	101	;'e'
  3427  00F9EE  6E                 	db	110	;'n'
  3428  00F9EF  74                 	db	116	;'t'
  3429  00F9F0  20                 	db	32
  3430  00F9F1  4E                 	db	78	;'N'
  3431  00F9F2  45                 	db	69	;'E'
  3432  00F9F3  43                 	db	67	;'C'
  3433  00F9F4  20                 	db	32
  3434  00F9F5  63                 	db	99	;'c'
  3435  00F9F6  6F                 	db	111	;'o'
  3436  00F9F7  64                 	db	100	;'d'
  3437  00F9F8  65                 	db	101	;'e'
  3438  00F9F9  20                 	db	32
  3439  00F9FA  30                 	db	48	;'0'
  3440  00F9FB  78                 	db	120	;'x'
  3441  00F9FC  25                 	db	37
  3442  00F9FD  6C                 	db	108	;'l'
  3443  00F9FE  58                 	db	88	;'X'
  3444  00F9FF  20                 	db	32
  3445  00FA00  00                 	db	0
  3446  00FA01                     STR_98:
  3447  00FA01  44                 	db	68	;'D'
  3448  00FA02  69                 	db	105	;'i'
  3449  00FA03  61                 	db	97	;'a'
  3450  00FA04  67                 	db	103	;'g'
  3451  00FA05  6E                 	db	110	;'n'
  3452  00FA06  6F                 	db	111	;'o'
  3453  00FA07  73                 	db	115	;'s'
  3454  00FA08  74                 	db	116	;'t'
  3455  00FA09  69                 	db	105	;'i'
  3456  00FA0A  63                 	db	99	;'c'
  3457  00FA0B  20                 	db	32
  3458  00FA0C  43                 	db	67	;'C'
  3459  00FA0D  6F                 	db	111	;'o'
  3460  00FA0E  6D                 	db	109	;'m'
  3461  00FA0F  6D                 	db	109	;'m'
  3462  00FA10  61                 	db	97	;'a'
  3463  00FA11  6E                 	db	110	;'n'
  3464  00FA12  64                 	db	100	;'d'
  3465  00FA13  73                 	db	115	;'s'
  3466  00FA14  3A                 	db	58	;':'
  3467  00FA15  00                 	db	0
  3468  00FA16                     STR_86:
  3469  00FA16  46                 	db	70	;'F'
  3470  00FA17  69                 	db	105	;'i'
  3471  00FA18  72                 	db	114	;'r'
  3472  00FA19  6D                 	db	109	;'m'
  3473  00FA1A  77                 	db	119	;'w'
  3474  00FA1B  61                 	db	97	;'a'
  3475  00FA1C  72                 	db	114	;'r'
  3476  00FA1D  65                 	db	101	;'e'
  3477  00FA1E  20                 	db	32
  3478  00FA1F  56                 	db	86	;'V'
  3479  00FA20  65                 	db	101	;'e'
  3480  00FA21  72                 	db	114	;'r'
  3481  00FA22  73                 	db	115	;'s'
  3482  00FA23  69                 	db	105	;'i'
  3483  00FA24  6F                 	db	111	;'o'
  3484  00FA25  6E                 	db	110	;'n'
  3485  00FA26  3A                 	db	58	;':'
  3486  00FA27  20                 	db	32
  3487  00FA28  25                 	db	37
  3488  00FA29  73                 	db	115	;'s'
  3489  00FA2A  00                 	db	0
  3490  00FA2B                     STR_38:
  3491  00FA2B  4E                 	db	78	;'N'
  3492  00FA2C  45                 	db	69	;'E'
  3493  00FA2D  43                 	db	67	;'C'
  3494  00FA2E  20                 	db	32
  3495  00FA2F  3D                 	db	61	;'='
  3496  00FA30  20                 	db	32
  3497  00FA31  28                 	db	40
  3498  00FA32  33                 	db	51	;'3'
  3499  00FA33  32                 	db	50	;'2'
  3500  00FA34  20                 	db	32
  3501  00FA35  62                 	db	98	;'b'
  3502  00FA36  69                 	db	105	;'i'
  3503  00FA37  74                 	db	116	;'t'
  3504  00FA38  20                 	db	32
  3505  00FA39  63                 	db	99	;'c'
  3506  00FA3A  6F                 	db	111	;'o'
  3507  00FA3B  64                 	db	100	;'d'
  3508  00FA3C  65                 	db	101	;'e'
  3509  00FA3D  29                 	db	41
  3510  00FA3E  00                 	db	0
  3511  00FA3F                     STR_139:
  3512  00FA3F  54                 	db	84	;'T'
  3513  00FA40  52                 	db	82	;'R'
  3514  00FA41  30                 	db	48	;'0'
  3515  00FA42  30                 	db	48	;'0'
  3516  00FA43  39                 	db	57	;'9'
  3517  00FA44  20                 	db	32
  3518  00FA45  43                 	db	67	;'C'
  3519  00FA46  68                 	db	104	;'h'
  3520  00FA47  61                 	db	97	;'a'
  3521  00FA48  6E                 	db	110	;'n'
  3522  00FA49  6E                 	db	110	;'n'
  3523  00FA4A  65                 	db	101	;'e'
  3524  00FA4B  6C                 	db	108	;'l'
  3525  00FA4C  20                 	db	32
  3526  00FA4D  44                 	db	68	;'D'
  3527  00FA4E  20                 	db	32
  3528  00FA4F  4F                 	db	79	;'O'
  3529  00FA50  46                 	db	70	;'F'
  3530  00FA51  46                 	db	70	;'F'
  3531  00FA52  00                 	db	0
  3532  00FA53                     STR_31:
  3533  00FA53  73                 	db	115	;'s'
  3534  00FA54  65                 	db	101	;'e'
  3535  00FA55  6E                 	db	110	;'n'
  3536  00FA56  74                 	db	116	;'t'
  3537  00FA57  20                 	db	32
  3538  00FA58  4E                 	db	78	;'N'
  3539  00FA59  45                 	db	69	;'E'
  3540  00FA5A  43                 	db	67	;'C'
  3541  00FA5B  20                 	db	32
  3542  00FA5C  63                 	db	99	;'c'
  3543  00FA5D  6F                 	db	111	;'o'
  3544  00FA5E  64                 	db	100	;'d'
  3545  00FA5F  65                 	db	101	;'e'
  3546  00FA60  20                 	db	32
  3547  00FA61  30                 	db	48	;'0'
  3548  00FA62  78                 	db	120	;'x'
  3549  00FA63  25                 	db	37
  3550  00FA64  6C                 	db	108	;'l'
  3551  00FA65  58                 	db	88	;'X'
  3552  00FA66  00                 	db	0
  3553  00FA67                     STR_84:
  3554  00FA67  53                 	db	83	;'S'
  3555  00FA68  75                 	db	117	;'u'
  3556  00FA69  70                 	db	112	;'p'
  3557  00FA6A  70                 	db	112	;'p'
  3558  00FA6B  6C                 	db	108	;'l'
  3559  00FA6C  79                 	db	121	;'y'
  3560  00FA6D  20                 	db	32
  3561  00FA6E  56                 	db	86	;'V'
  3562  00FA6F  6F                 	db	111	;'o'
  3563  00FA70  6C                 	db	108	;'l'
  3564  00FA71  74                 	db	116	;'t'
  3565  00FA72  61                 	db	97	;'a'
  3566  00FA73  67                 	db	103	;'g'
  3567  00FA74  65                 	db	101	;'e'
  3568  00FA75  20                 	db	32
  3569  00FA76  3D                 	db	61	;'='
  3570  00FA77  20                 	db	32
  3571  00FA78  25                 	db	37
  3572  00FA79  66                 	db	102	;'f'
  3573  00FA7A  00                 	db	0
  3574  00FA7B                     STR_56:
  3575  00FA7B  52                 	db	82	;'R'
  3576  00FA7C  65                 	db	101	;'e'
  3577  00FA7D  6D                 	db	109	;'m'
  3578  00FA7E  6F                 	db	111	;'o'
  3579  00FA7F  74                 	db	116	;'t'
  3580  00FA80  65                 	db	101	;'e'
  3581  00FA81  42                 	db	66	;'B'
  3582  00FA82  75                 	db	117	;'u'
  3583  00FA83  74                 	db	116	;'t'
  3584  00FA84  74                 	db	116	;'t'
  3585  00FA85  6F                 	db	111	;'o'
  3586  00FA86  6E                 	db	110	;'n'
  3587  00FA87  27                 	db	39
  3588  00FA88  78                 	db	120	;'x'
  3589  00FA89  27                 	db	39
  3590  00FA8A  20                 	db	32
  3591  00FA8B  73                 	db	115	;'s'
  3592  00FA8C  65                 	db	101	;'e'
  3593  00FA8D  74                 	db	116	;'t'
  3594  00FA8E  00                 	db	0
  3595  00FA8F                     STR_133:
  3596  00FA8F  52                 	db	82	;'R'
  3597  00FA90  46                 	db	70	;'F'
  3598  00FA91  4B                 	db	75	;'K'
  3599  00FA92  31                 	db	49	;'1'
  3600  00FA93  30                 	db	48	;'0'
  3601  00FA94  30                 	db	48	;'0'
  3602  00FA95  4C                 	db	76	;'L'
  3603  00FA96  43                 	db	67	;'C'
  3604  00FA97  20                 	db	32
  3605  00FA98  43                 	db	67	;'C'
  3606  00FA99  68                 	db	104	;'h'
  3607  00FA9A  61                 	db	97	;'a'
  3608  00FA9B  6E                 	db	110	;'n'
  3609  00FA9C  6E                 	db	110	;'n'
  3610  00FA9D  65                 	db	101	;'e'
  3611  00FA9E  6C                 	db	108	;'l'
  3612  00FA9F  20                 	db	32
  3613  00FAA0  44                 	db	68	;'D'
  3614  00FAA1  00                 	db	0
  3615  00FAA2                     STR_134:
  3616  00FAA2  52                 	db	82	;'R'
  3617  00FAA3  46                 	db	70	;'F'
  3618  00FAA4  4B                 	db	75	;'K'
  3619  00FAA5  31                 	db	49	;'1'
  3620  00FAA6  30                 	db	48	;'0'
  3621  00FAA7  30                 	db	48	;'0'
  3622  00FAA8  4C                 	db	76	;'L'
  3623  00FAA9  43                 	db	67	;'C'
  3624  00FAAA  20                 	db	32
  3625  00FAAB  43                 	db	67	;'C'
  3626  00FAAC  68                 	db	104	;'h'
  3627  00FAAD  61                 	db	97	;'a'
  3628  00FAAE  6E                 	db	110	;'n'
  3629  00FAAF  6E                 	db	110	;'n'
  3630  00FAB0  65                 	db	101	;'e'
  3631  00FAB1  6C                 	db	108	;'l'
  3632  00FAB2  20                 	db	32
  3633  00FAB3  45                 	db	69	;'E'
  3634  00FAB4  00                 	db	0
  3635  00FAB5                     STR_135:
  3636  00FAB5  52                 	db	82	;'R'
  3637  00FAB6  46                 	db	70	;'F'
  3638  00FAB7  4B                 	db	75	;'K'
  3639  00FAB8  31                 	db	49	;'1'
  3640  00FAB9  30                 	db	48	;'0'
  3641  00FABA  30                 	db	48	;'0'
  3642  00FABB  4C                 	db	76	;'L'
  3643  00FABC  43                 	db	67	;'C'
  3644  00FABD  20                 	db	32
  3645  00FABE  43                 	db	67	;'C'
  3646  00FABF  68                 	db	104	;'h'
  3647  00FAC0  61                 	db	97	;'a'
  3648  00FAC1  6E                 	db	110	;'n'
  3649  00FAC2  6E                 	db	110	;'n'
  3650  00FAC3  65                 	db	101	;'e'
  3651  00FAC4  6C                 	db	108	;'l'
  3652  00FAC5  20                 	db	32
  3653  00FAC6  46                 	db	70	;'F'
  3654  00FAC7  00                 	db	0
  3655  00FAC8                     STR_138:
  3656  00FAC8  54                 	db	84	;'T'
  3657  00FAC9  52                 	db	82	;'R'
  3658  00FACA  30                 	db	48	;'0'
  3659  00FACB  30                 	db	48	;'0'
  3660  00FACC  39                 	db	57	;'9'
  3661  00FACD  20                 	db	32
  3662  00FACE  43                 	db	67	;'C'
  3663  00FACF  68                 	db	104	;'h'
  3664  00FAD0  61                 	db	97	;'a'
  3665  00FAD1  6E                 	db	110	;'n'
  3666  00FAD2  6E                 	db	110	;'n'
  3667  00FAD3  65                 	db	101	;'e'
  3668  00FAD4  6C                 	db	108	;'l'
  3669  00FAD5  20                 	db	32
  3670  00FAD6  44                 	db	68	;'D'
  3671  00FAD7  20                 	db	32
  3672  00FAD8  4F                 	db	79	;'O'
  3673  00FAD9  4E                 	db	78	;'N'
  3674  00FADA  00                 	db	0
  3675  00FADB                     STR_104:
  3676  00FADB  52                 	db	82	;'R'
  3677  00FADC  65                 	db	101	;'e'
  3678  00FADD  6D                 	db	109	;'m'
  3679  00FADE  6F                 	db	111	;'o'
  3680  00FADF  74                 	db	116	;'t'
  3681  00FAE0  65                 	db	101	;'e'
  3682  00FAE1  42                 	db	66	;'B'
  3683  00FAE2  75                 	db	117	;'u'
  3684  00FAE3  74                 	db	116	;'t'
  3685  00FAE4  74                 	db	116	;'t'
  3686  00FAE5  6F                 	db	111	;'o'
  3687  00FAE6  6E                 	db	110	;'n'
  3688  00FAE7  25                 	db	37
  3689  00FAE8  64                 	db	100	;'d'
  3690  00FAE9  20                 	db	32
  3691  00FAEA  73                 	db	115	;'s'
  3692  00FAEB  65                 	db	101	;'e'
  3693  00FAEC  74                 	db	116	;'t'
  3694  00FAED  00                 	db	0
  3695  00FAEE                     STR_42:
  3696  00FAEE  4E                 	db	78	;'N'
  3697  00FAEF  45                 	db	69	;'E'
  3698  00FAF0  43                 	db	67	;'C'
  3699  00FAF1  20                 	db	32
  3700  00FAF2  3D                 	db	61	;'='
  3701  00FAF3  20                 	db	32
  3702  00FAF4  30                 	db	48	;'0'
  3703  00FAF5  78                 	db	120	;'x'
  3704  00FAF6  31                 	db	49	;'1'
  3705  00FAF7  43                 	db	67	;'C'
  3706  00FAF8  45                 	db	69	;'E'
  3707  00FAF9  33                 	db	51	;'3'
  3708  00FAFA  35                 	db	53	;'5'
  3709  00FAFB  30                 	db	48	;'0'
  3710  00FAFC  41                 	db	65	;'A'
  3711  00FAFD  46                 	db	70	;'F'
  3712  00FAFE  20                 	db	32
  3713  00FAFF  00                 	db	0
  3714  00FB00                     STR_59:
  3715  00FB00  52                 	db	82	;'R'
  3716  00FB01  65                 	db	101	;'e'
  3717  00FB02  6D                 	db	109	;'m'
  3718  00FB03  6F                 	db	111	;'o'
  3719  00FB04  74                 	db	116	;'t'
  3720  00FB05  65                 	db	101	;'e'
  3721  00FB06  42                 	db	66	;'B'
  3722  00FB07  75                 	db	117	;'u'
  3723  00FB08  74                 	db	116	;'t'
  3724  00FB09  74                 	db	116	;'t'
  3725  00FB0A  6F                 	db	111	;'o'
  3726  00FB0B  6E                 	db	110	;'n'
  3727  00FB0C  31                 	db	49	;'1'
  3728  00FB0D  20                 	db	32
  3729  00FB0E  73                 	db	115	;'s'
  3730  00FB0F  65                 	db	101	;'e'
  3731  00FB10  74                 	db	116	;'t'
  3732  00FB11  00                 	db	0
  3733  00FB12                     STR_81:
  3734  00FB12  53                 	db	83	;'S'
  3735  00FB13  79                 	db	121	;'y'
  3736  00FB14  73                 	db	115	;'s'
  3737  00FB15  74                 	db	116	;'t'
  3738  00FB16  65                 	db	101	;'e'
  3739  00FB17  6D                 	db	109	;'m'
  3740  00FB18  20                 	db	32
  3741  00FB19  77                 	db	119	;'w'
  3742  00FB1A  69                 	db	105	;'i'
  3743  00FB1B  6C                 	db	108	;'l'
  3744  00FB1C  6C                 	db	108	;'l'
  3745  00FB1D  20                 	db	32
  3746  00FB1E  72                 	db	114	;'r'
  3747  00FB1F  65                 	db	101	;'e'
  3748  00FB20  73                 	db	115	;'s'
  3749  00FB21  65                 	db	101	;'e'
  3750  00FB22  74                 	db	116	;'t'
  3751  00FB23  00                 	db	0
  3752  00FB24                     STR_150:
  3753  00FB24  30                 	db	48	;'0'
  3754  00FB25  31                 	db	49	;'1'
  3755  00FB26  32                 	db	50	;'2'
  3756  00FB27  33                 	db	51	;'3'
  3757  00FB28  34                 	db	52	;'4'
  3758  00FB29  35                 	db	53	;'5'
  3759  00FB2A  36                 	db	54	;'6'
  3760  00FB2B  37                 	db	55	;'7'
  3761  00FB2C  38                 	db	56	;'8'
  3762  00FB2D  39                 	db	57	;'9'
  3763  00FB2E  41                 	db	65	;'A'
  3764  00FB2F  42                 	db	66	;'B'
  3765  00FB30  43                 	db	67	;'C'
  3766  00FB31  44                 	db	68	;'D'
  3767  00FB32  45                 	db	69	;'E'
  3768  00FB33  46                 	db	70	;'F'
  3769  00FB34  00                 	db	0
  3770  00FB35                     STR_91:
  3771  00FB35  53                 	db	83	;'S'
  3772  00FB36  79                 	db	121	;'y'
  3773  00FB37  73                 	db	115	;'s'
  3774  00FB38  74                 	db	116	;'t'
  3775  00FB39  65                 	db	101	;'e'
  3776  00FB3A  6D                 	db	109	;'m'
  3777  00FB3B  20                 	db	32
  3778  00FB3C  63                 	db	99	;'c'
  3779  00FB3D  6F                 	db	111	;'o'
  3780  00FB3E  6D                 	db	109	;'m'
  3781  00FB3F  6D                 	db	109	;'m'
  3782  00FB40  61                 	db	97	;'a'
  3783  00FB41  6E                 	db	110	;'n'
  3784  00FB42  64                 	db	100	;'d'
  3785  00FB43  73                 	db	115	;'s'
  3786  00FB44  3A                 	db	58	;':'
  3787  00FB45  00                 	db	0
  3788  00FB46                     STR_44:
  3789  00FB46  4E                 	db	78	;'N'
  3790  00FB47  45                 	db	69	;'E'
  3791  00FB48  43                 	db	67	;'C'
  3792  00FB49  20                 	db	32
  3793  00FB4A  3D                 	db	61	;'='
  3794  00FB4B  20                 	db	32
  3795  00FB4C  30                 	db	48	;'0'
  3796  00FB4D  78                 	db	120	;'x'
  3797  00FB4E  33                 	db	51	;'3'
  3798  00FB4F  38                 	db	56	;'8'
  3799  00FB50  2C                 	db	44
  3800  00FB51  20                 	db	32
  3801  00FB52  30                 	db	48	;'0'
  3802  00FB53  78                 	db	120	;'x'
  3803  00FB54  30                 	db	48	;'0'
  3804  00FB55  41                 	db	65	;'A'
  3805  00FB56  00                 	db	0
  3806  00FB57                     STR_55:
  3807  00FB57  52                 	db	82	;'R'
  3808  00FB58  65                 	db	101	;'e'
  3809  00FB59  6D                 	db	109	;'m'
  3810  00FB5A  6F                 	db	111	;'o'
  3811  00FB5B  74                 	db	116	;'t'
  3812  00FB5C  65                 	db	101	;'e'
  3813  00FB5D  42                 	db	66	;'B'
  3814  00FB5E  75                 	db	117	;'u'
  3815  00FB5F  74                 	db	116	;'t'
  3816  00FB60  74                 	db	116	;'t'
  3817  00FB61  6F                 	db	111	;'o'
  3818  00FB62  6E                 	db	110	;'n'
  3819  00FB63  27                 	db	39
  3820  00FB64  78                 	db	120	;'x'
  3821  00FB65  27                 	db	39
  3822  00FB66  00                 	db	0
  3823  00FB67                     STR_87:
  3824  00FB67  50                 	db	80	;'P'
  3825  00FB68  43                 	db	67	;'C'
  3826  00FB69  42                 	db	66	;'B'
  3827  00FB6A  20                 	db	32
  3828  00FB6B  56                 	db	86	;'V'
  3829  00FB6C  65                 	db	101	;'e'
  3830  00FB6D  72                 	db	114	;'r'
  3831  00FB6E  73                 	db	115	;'s'
  3832  00FB6F  69                 	db	105	;'i'
  3833  00FB70  6F                 	db	111	;'o'
  3834  00FB71  6E                 	db	110	;'n'
  3835  00FB72  3A                 	db	58	;':'
  3836  00FB73  20                 	db	32
  3837  00FB74  25                 	db	37
  3838  00FB75  73                 	db	115	;'s'
  3839  00FB76  00                 	db	0
  3840  00FB77                     STR_1:
  3841  00FB77  42                 	db	66	;'B'
  3842  00FB78  75                 	db	117	;'u'
  3843  00FB79  66                 	db	102	;'f'
  3844  00FB7A  66                 	db	102	;'f'
  3845  00FB7B  65                 	db	101	;'e'
  3846  00FB7C  72                 	db	114	;'r'
  3847  00FB7D  20                 	db	32
  3848  00FB7E  4F                 	db	79	;'O'
  3849  00FB7F  76                 	db	118	;'v'
  3850  00FB80  65                 	db	101	;'e'
  3851  00FB81  72                 	db	114	;'r'
  3852  00FB82  66                 	db	102	;'f'
  3853  00FB83  6C                 	db	108	;'l'
  3854  00FB84  6F                 	db	111	;'o'
  3855  00FB85  77                 	db	119	;'w'
  3856  00FB86  00                 	db	0
  3857  00FB87                     STR_102:
  3858  00FB87  52                 	db	82	;'R'
  3859  00FB88  65                 	db	101	;'e'
  3860  00FB89  6D                 	db	109	;'m'
  3861  00FB8A  6F                 	db	111	;'o'
  3862  00FB8B  74                 	db	116	;'t'
  3863  00FB8C  65                 	db	101	;'e'
  3864  00FB8D  42                 	db	66	;'B'
  3865  00FB8E  75                 	db	117	;'u'
  3866  00FB8F  74                 	db	116	;'t'
  3867  00FB90  74                 	db	116	;'t'
  3868  00FB91  6F                 	db	111	;'o'
  3869  00FB92  6E                 	db	110	;'n'
  3870  00FB93  25                 	db	37
  3871  00FB94  64                 	db	100	;'d'
  3872  00FB95  00                 	db	0
  3873  00FB96                     STR_58:
  3874  00FB96  52                 	db	82	;'R'
  3875  00FB97  65                 	db	101	;'e'
  3876  00FB98  6D                 	db	109	;'m'
  3877  00FB99  6F                 	db	111	;'o'
  3878  00FB9A  74                 	db	116	;'t'
  3879  00FB9B  65                 	db	101	;'e'
  3880  00FB9C  42                 	db	66	;'B'
  3881  00FB9D  75                 	db	117	;'u'
  3882  00FB9E  74                 	db	116	;'t'
  3883  00FB9F  74                 	db	116	;'t'
  3884  00FBA0  6F                 	db	111	;'o'
  3885  00FBA1  6E                 	db	110	;'n'
  3886  00FBA2  31                 	db	49	;'1'
  3887  00FBA3  00                 	db	0
  3888  00FBA4                     STR_68:
  3889  00FBA4  57                 	db	87	;'W'
  3890  00FBA5  68                 	db	104	;'h'
  3891  00FBA6  69                 	db	105	;'i'
  3892  00FBA7  63                 	db	99	;'c'
  3893  00FBA8  68                 	db	104	;'h'
  3894  00FBA9  20                 	db	32
  3895  00FBAA  64                 	db	100	;'d'
  3896  00FBAB  65                 	db	101	;'e'
  3897  00FBAC  76                 	db	118	;'v'
  3898  00FBAD  69                 	db	105	;'i'
  3899  00FBAE  63                 	db	99	;'c'
  3900  00FBAF  65                 	db	101	;'e'
  3901  00FBB0  3F                 	db	63	;'?'
  3902  00FBB1  00                 	db	0
  3903  00FBB2                     STR_132:
  3904  00FBB2  52                 	db	82	;'R'
  3905  00FBB3  46                 	db	70	;'F'
  3906  00FBB4  20                 	db	32
  3907  00FBB5  63                 	db	99	;'c'
  3908  00FBB6  6F                 	db	111	;'o'
  3909  00FBB7  6D                 	db	109	;'m'
  3910  00FBB8  6D                 	db	109	;'m'
  3911  00FBB9  61                 	db	97	;'a'
  3912  00FBBA  6E                 	db	110	;'n'
  3913  00FBBB  64                 	db	100	;'d'
  3914  00FBBC  73                 	db	115	;'s'
  3915  00FBBD  3A                 	db	58	;':'
  3916  00FBBE  00                 	db	0
  3917  00FBBF                     STR_101:
  3918  00FBBF  49                 	db	73	;'I'
  3919  00FBC0  52                 	db	82	;'R'
  3920  00FBC1  20                 	db	32
  3921  00FBC2  63                 	db	99	;'c'
  3922  00FBC3  6F                 	db	111	;'o'
  3923  00FBC4  6D                 	db	109	;'m'
  3924  00FBC5  6D                 	db	109	;'m'
  3925  00FBC6  61                 	db	97	;'a'
  3926  00FBC7  6E                 	db	110	;'n'
  3927  00FBC8  64                 	db	100	;'d'
  3928  00FBC9  73                 	db	115	;'s'
  3929  00FBCA  3A                 	db	58	;':'
  3930  00FBCB  00                 	db	0
  3931  00FBCC                     STR_124:
  3932  00FBCC  52                 	db	82	;'R'
  3933  00FBCD  46                 	db	70	;'F'
  3934  00FBCE  20                 	db	32
  3935  00FBCF  63                 	db	99	;'c'
  3936  00FBD0  6C                 	db	108	;'l'
  3937  00FBD1  65                 	db	101	;'e'
  3938  00FBD2  61                 	db	97	;'a'
  3939  00FBD3  72                 	db	114	;'r'
  3940  00FBD4  20                 	db	32
  3941  00FBD5  32                 	db	50	;'2'
  3942  00FBD6  2C                 	db	44
  3943  00FBD7  42                 	db	66	;'B'
  3944  00FBD8  00                 	db	0
  3945  00FBD9                     STR_118:
  3946  00FBD9  52                 	db	82	;'R'
  3947  00FBDA  46                 	db	70	;'F'
  3948  00FBDB  20                 	db	32
  3949  00FBDC  63                 	db	99	;'c'
  3950  00FBDD  6C                 	db	108	;'l'
  3951  00FBDE  65                 	db	101	;'e'
  3952  00FBDF  61                 	db	97	;'a'
  3953  00FBE0  72                 	db	114	;'r'
  3954  00FBE1  20                 	db	32
  3955  00FBE2  31                 	db	49	;'1'
  3956  00FBE3  2C                 	db	44
  3957  00FBE4  44                 	db	68	;'D'
  3958  00FBE5  00                 	db	0
  3959  00FBE6                     STR_126:
  3960  00FBE6  52                 	db	82	;'R'
  3961  00FBE7  46                 	db	70	;'F'
  3962  00FBE8  20                 	db	32
  3963  00FBE9  63                 	db	99	;'c'
  3964  00FBEA  6C                 	db	108	;'l'
  3965  00FBEB  65                 	db	101	;'e'
  3966  00FBEC  61                 	db	97	;'a'
  3967  00FBED  72                 	db	114	;'r'
  3968  00FBEE  20                 	db	32
  3969  00FBEF  32                 	db	50	;'2'
  3970  00FBF0  2C                 	db	44
  3971  00FBF1  44                 	db	68	;'D'
  3972  00FBF2  00                 	db	0
  3973  00FBF3                     STR_120:
  3974  00FBF3  52                 	db	82	;'R'
  3975  00FBF4  46                 	db	70	;'F'
  3976  00FBF5  20                 	db	32
  3977  00FBF6  63                 	db	99	;'c'
  3978  00FBF7  6C                 	db	108	;'l'
  3979  00FBF8  65                 	db	101	;'e'
  3980  00FBF9  61                 	db	97	;'a'
  3981  00FBFA  72                 	db	114	;'r'
  3982  00FBFB  20                 	db	32
  3983  00FBFC  31                 	db	49	;'1'
  3984  00FBFD  2C                 	db	44
  3985  00FBFE  45                 	db	69	;'E'
  3986  00FBFF  00                 	db	0
  3987  00FC00                     STR_122:
  3988  00FC00  52                 	db	82	;'R'
  3989  00FC01  46                 	db	70	;'F'
  3990  00FC02  20                 	db	32
  3991  00FC03  63                 	db	99	;'c'
  3992  00FC04  6C                 	db	108	;'l'
  3993  00FC05  65                 	db	101	;'e'
  3994  00FC06  61                 	db	97	;'a'
  3995  00FC07  72                 	db	114	;'r'
  3996  00FC08  20                 	db	32
  3997  00FC09  31                 	db	49	;'1'
  3998  00FC0A  2C                 	db	44
  3999  00FC0B  46                 	db	70	;'F'
  4000  00FC0C  00                 	db	0
  4001  00FC0D                     STR_128:
  4002  00FC0D  52                 	db	82	;'R'
  4003  00FC0E  46                 	db	70	;'F'
  4004  00FC0F  20                 	db	32
  4005  00FC10  63                 	db	99	;'c'
  4006  00FC11  6C                 	db	108	;'l'
  4007  00FC12  65                 	db	101	;'e'
  4008  00FC13  61                 	db	97	;'a'
  4009  00FC14  72                 	db	114	;'r'
  4010  00FC15  20                 	db	32
  4011  00FC16  32                 	db	50	;'2'
  4012  00FC17  2C                 	db	44
  4013  00FC18  48                 	db	72	;'H'
  4014  00FC19  00                 	db	0
  4015  00FC1A                     STR_45:
  4016  00FC1A  52                 	db	82	;'R'
  4017  00FC1B  65                 	db	101	;'e'
  4018  00FC1C  6D                 	db	109	;'m'
  4019  00FC1D  6F                 	db	111	;'o'
  4020  00FC1E  74                 	db	116	;'t'
  4021  00FC1F  65                 	db	101	;'e'
  4022  00FC20  42                 	db	66	;'B'
  4023  00FC21  75                 	db	117	;'u'
  4024  00FC22  74                 	db	116	;'t'
  4025  00FC23  74                 	db	116	;'t'
  4026  00FC24  6F                 	db	111	;'o'
  4027  00FC25  6E                 	db	110	;'n'
  4028  00FC26  00                 	db	0
  4029  00FC27                     STR_112:
  4030  00FC27  52                 	db	82	;'R'
  4031  00FC28  46                 	db	70	;'F'
  4032  00FC29  20                 	db	32
  4033  00FC2A  73                 	db	115	;'s'
  4034  00FC2B  65                 	db	101	;'e'
  4035  00FC2C  74                 	db	116	;'t'
  4036  00FC2D  20                 	db	32
  4037  00FC2E  32                 	db	50	;'2'
  4038  00FC2F  2C                 	db	44
  4039  00FC30  42                 	db	66	;'B'
  4040  00FC31  00                 	db	0
  4041  00FC32                     STR_106:
  4042  00FC32  52                 	db	82	;'R'
  4043  00FC33  46                 	db	70	;'F'
  4044  00FC34  20                 	db	32
  4045  00FC35  73                 	db	115	;'s'
  4046  00FC36  65                 	db	101	;'e'
  4047  00FC37  74                 	db	116	;'t'
  4048  00FC38  20                 	db	32
  4049  00FC39  31                 	db	49	;'1'
  4050  00FC3A  2C                 	db	44
  4051  00FC3B  44                 	db	68	;'D'
  4052  00FC3C  00                 	db	0
  4053  00FC3D                     STR_114:
  4054  00FC3D  52                 	db	82	;'R'
  4055  00FC3E  46                 	db	70	;'F'
  4056  00FC3F  20                 	db	32
  4057  00FC40  73                 	db	115	;'s'
  4058  00FC41  65                 	db	101	;'e'
  4059  00FC42  74                 	db	116	;'t'
  4060  00FC43  20                 	db	32
  4061  00FC44  32                 	db	50	;'2'
  4062  00FC45  2C                 	db	44
  4063  00FC46  44                 	db	68	;'D'
  4064  00FC47  00                 	db	0
  4065  00FC48                     STR_108:
  4066  00FC48  52                 	db	82	;'R'
  4067  00FC49  46                 	db	70	;'F'
  4068  00FC4A  20                 	db	32
  4069  00FC4B  73                 	db	115	;'s'
  4070  00FC4C  65                 	db	101	;'e'
  4071  00FC4D  74                 	db	116	;'t'
  4072  00FC4E  20                 	db	32
  4073  00FC4F  31                 	db	49	;'1'
  4074  00FC50  2C                 	db	44
  4075  00FC51  45                 	db	69	;'E'
  4076  00FC52  00                 	db	0
  4077  00FC53                     STR_110:
  4078  00FC53  52                 	db	82	;'R'
  4079  00FC54  46                 	db	70	;'F'
  4080  00FC55  20                 	db	32
  4081  00FC56  73                 	db	115	;'s'
  4082  00FC57  65                 	db	101	;'e'
  4083  00FC58  74                 	db	116	;'t'
  4084  00FC59  20                 	db	32
  4085  00FC5A  31                 	db	49	;'1'
  4086  00FC5B  2C                 	db	44
  4087  00FC5C  46                 	db	70	;'F'
  4088  00FC5D  00                 	db	0
  4089  00FC5E                     STR_116:
  4090  00FC5E  52                 	db	82	;'R'
  4091  00FC5F  46                 	db	70	;'F'
  4092  00FC60  20                 	db	32
  4093  00FC61  73                 	db	115	;'s'
  4094  00FC62  65                 	db	101	;'e'
  4095  00FC63  74                 	db	116	;'t'
  4096  00FC64  20                 	db	32
  4097  00FC65  32                 	db	50	;'2'
  4098  00FC66  2C                 	db	44
  4099  00FC67  48                 	db	72	;'H'
  4100  00FC68  00                 	db	0
  4101  00FC69                     STR_39:
  4102  00FC69  20                 	db	32
  4103  00FC6A  20                 	db	32
  4104  00FC6B  20                 	db	32
  4105  00FC6C  20                 	db	32
  4106  00FC6D  20                 	db	32
  4107  00FC6E  20                 	db	32
  4108  00FC6F  20                 	db	32
  4109  00FC70  20                 	db	32
  4110  00FC71  6F                 	db	111	;'o'
  4111  00FC72  72                 	db	114	;'r'
  4112  00FC73  00                 	db	0
  4113  00FC74                     STR_6:
  4114  00FC74  53                 	db	83	;'S'
  4115  00FC75  55                 	db	85	;'U'
  4116  00FC76  2C                 	db	44
  4117  00FC77  20                 	db	32
  4118  00FC78  31                 	db	49	;'1'
  4119  00FC79  31                 	db	49	;'1'
  4120  00FC7A  35                 	db	53	;'5'
  4121  00FC7B  4B                 	db	75	;'K'
  4122  00FC7C  0D                 	db	13
  4123  00FC7D  00                 	db	0
  4124  00FC7E                     STR_93:
  4125  00FC7E  48                 	db	72	;'H'
  4126  00FC7F  65                 	db	101	;'e'
  4127  00FC80  6C                 	db	108	;'l'
  4128  00FC81  70                 	db	112	;'p'
  4129  00FC82  20                 	db	32
  4130  00FC83  4D                 	db	77	;'M'
  4131  00FC84  65                 	db	101	;'e'
  4132  00FC85  6E                 	db	110	;'n'
  4133  00FC86  75                 	db	117	;'u'
  4134  00FC87  00                 	db	0
  4135  00FC88                     STR_10:
  4136  00FC88  53                 	db	83	;'S'
  4137  00FC89  59                 	db	89	;'Y'
  4138  00FC8A  2C                 	db	44
  4139  00FC8B  30                 	db	48	;'0'
  4140  00FC8C  30                 	db	48	;'0'
  4141  00FC8D  31                 	db	49	;'1'
  4142  00FC8E  30                 	db	48	;'0'
  4143  00FC8F  0D                 	db	13
  4144  00FC90  00                 	db	0
  4145  00FC91                     STR_41:
  4146  00FC91  45                 	db	69	;'E'
  4147  00FC92  78                 	db	120	;'x'
  4148  00FC93  61                 	db	97	;'a'
  4149  00FC94  6D                 	db	109	;'m'
  4150  00FC95  70                 	db	112	;'p'
  4151  00FC96  6C                 	db	108	;'l'
  4152  00FC97  65                 	db	101	;'e'
  4153  00FC98  3A                 	db	58	;':'
  4154  00FC99  00                 	db	0
  4155  00FC9A                     STR_61:
  4156  00FC9A  52                 	db	82	;'R'
  4157  00FC9B  46                 	db	70	;'F'
  4158  00FC9C  20                 	db	32
  4159  00FC9D  63                 	db	99	;'c'
  4160  00FC9E  6C                 	db	108	;'l'
  4161  00FC9F  65                 	db	101	;'e'
  4162  00FCA0  61                 	db	97	;'a'
  4163  00FCA1  72                 	db	114	;'r'
  4164  00FCA2  00                 	db	0
  4165  00FCA3                     STR_83:
  4166  00FCA3  56                 	db	86	;'V'
  4167  00FCA4  6F                 	db	111	;'o'
  4168  00FCA5  6C                 	db	108	;'l'
  4169  00FCA6  74                 	db	116	;'t'
  4170  00FCA7  61                 	db	97	;'a'
  4171  00FCA8  67                 	db	103	;'g'
  4172  00FCA9  65                 	db	101	;'e'
  4173  00FCAA  00                 	db	0
  4174  00FCAB                     STR_149:
  4175  00FCAB  28                 	db	40
  4176  00FCAC  6E                 	db	110	;'n'
  4177  00FCAD  75                 	db	117	;'u'
  4178  00FCAE  6C                 	db	108	;'l'
  4179  00FCAF  6C                 	db	108	;'l'
  4180  00FCB0  29                 	db	41
  4181  00FCB1  00                 	db	0
  4182  00FCB2                     STR_37:
  4183  00FCB2  55                 	db	85	;'U'
  4184  00FCB3  73                 	db	115	;'s'
  4185  00FCB4  61                 	db	97	;'a'
  4186  00FCB5  67                 	db	103	;'g'
  4187  00FCB6  65                 	db	101	;'e'
  4188  00FCB7  3A                 	db	58	;':'
  4189  00FCB8  00                 	db	0
  4190  00FCB9                     STR_60:
  4191  00FCB9  52                 	db	82	;'R'
  4192  00FCBA  46                 	db	70	;'F'
  4193  00FCBB  20                 	db	32
  4194  00FCBC  73                 	db	115	;'s'
  4195  00FCBD  65                 	db	101	;'e'
  4196  00FCBE  74                 	db	116	;'t'
  4197  00FCBF  00                 	db	0
  4198  00FCC0                     STR_12:
  4199  00FCC0  53                 	db	83	;'S'
  4200  00FCC1  7E                 	db	126
  4201  00FCC2  2C                 	db	44
  4202  00FCC3  30                 	db	48	;'0'
  4203  00FCC4  0D                 	db	13
  4204  00FCC5  00                 	db	0
  4205  00FCC6                     STR_20:
  4206  00FCC6  43                 	db	67	;'C'
  4207  00FCC7  6F                 	db	111	;'o'
  4208  00FCC8  6E                 	db	110	;'n'
  4209  00FCC9  66                 	db	102	;'f'
  4210  00FCCA  31                 	db	49	;'1'
  4211  00FCCB  00                 	db	0
  4212  00FCCC                     STR_22:
  4213  00FCCC  43                 	db	67	;'C'
  4214  00FCCD  6F                 	db	111	;'o'
  4215  00FCCE  6E                 	db	110	;'n'
  4216  00FCCF  66                 	db	102	;'f'
  4217  00FCD0  32                 	db	50	;'2'
  4218  00FCD1  00                 	db	0
  4219  00FCD2                     STR_78:
  4220  00FCD2  52                 	db	82	;'R'
  4221  00FCD3  65                 	db	101	;'e'
  4222  00FCD4  73                 	db	115	;'s'
  4223  00FCD5  65                 	db	101	;'e'
  4224  00FCD6  74                 	db	116	;'t'
  4225  00FCD7  00                 	db	0
  4226  00FCD8                     STR_18:
  4227  00FCD8  2D                 	db	45
  4228  00FCD9  2D                 	db	45
  4229  00FCDA  2D                 	db	45
  4230  00FCDB  0D                 	db	13
  4231  00FCDC  00                 	db	0
  4232  00FCDD                     STR_16:
  4233  00FCDD  44                 	db	68	;'D'
  4234  00FCDE  2C                 	db	44
  4235  00FCDF  30                 	db	48	;'0'
  4236  00FCE0  0D                 	db	13
  4237  00FCE1  00                 	db	0
  4238  00FCE2                     STR_130:
  4239  00FCE2  4E                 	db	78	;'N'
  4240  00FCE3  45                 	db	69	;'E'
  4241  00FCE4  43                 	db	67	;'C'
  4242  00FCE5  3F                 	db	63	;'?'
  4243  00FCE6  00                 	db	0
  4244  00FCE7                     STR_2:
  4245  00FCE7  24                 	db	36
  4246  00FCE8  24                 	db	36
  4247  00FCE9  24                 	db	36
  4248  00FCEA  00                 	db	0
  4249  00FCEB                     STR_89:
  4250  00FCEB  3F                 	db	63	;'?'
  4251  00FCEC  3F                 	db	63	;'?'
  4252  00FCED  3F                 	db	63	;'?'
  4253  00FCEE  00                 	db	0
  4254  00FCEF                     STR_24:
  4255  00FCEF  4E                 	db	78	;'N'
  4256  00FCF0  45                 	db	69	;'E'
  4257  00FCF1  43                 	db	67	;'C'
  4258  00FCF2  00                 	db	0
  4259  00FCF3                     STR_3:
  4260  00FCF3  43                 	db	67	;'C'
  4261  00FCF4  4D                 	db	77	;'M'
  4262  00FCF5  44                 	db	68	;'D'
  4263  00FCF6  00                 	db	0
  4264  00FCF7                     STR_19:
  4265  00FCF7  45                 	db	69	;'E'
  4266  00FCF8  4E                 	db	78	;'N'
  4267  00FCF9  44                 	db	68	;'D'
  4268  00FCFA  00                 	db	0
  4269  00FCFB                     STR_5:
  4270  00FCFB  41                 	db	65	;'A'
  4271  00FCFC  4F                 	db	79	;'O'
  4272  00FCFD  4B                 	db	75	;'K'
  4273  00FCFE  00                 	db	0
  4274  0000                     
  4275                           ; #config settings
  4276  00FCFF  00                 	db	0	; dummy byte at the end
  4277  0000                     
  4278                           	psect	cinit
  4279  007F80                     __pcinit:
  4280                           	opt stack 0
  4281  007F80                     start_initialization:
  4282                           	opt stack 0
  4283  007F80                     __initialization:
  4284                           	opt stack 0
  4285                           
  4286                           ; Clear objects allocated to BANK7 (200 bytes)
  4287  007F80  EE07  F000         	lfsr	0,__pbssBANK7
  4288  007F84  0EC8               	movlw	200
  4289  007F86                     clear_0:
  4290  007F86  6AEE               	clrf	postinc0,c
  4291  007F88  06E8               	decf	wreg,f,c
  4292  007F8A  E1FD               	bnz	clear_0
  4293                           
  4294                           ; Clear objects allocated to BANK6 (255 bytes)
  4295  007F8C  EE06  F000         	lfsr	0,__pbssBANK6
  4296  007F90  EE10 F0FF          	lfsr	1,255
  4297  007F94                     clear_1:
  4298  007F94  6AEE               	clrf	postinc0,c
  4299  007F96  50E5               	movf	postdec1,w,c
  4300  007F98  50E1               	movf	fsr1l,w,c
  4301  007F9A  E1FC               	bnz	clear_1
  4302  007F9C  50E2               	movf	fsr1h,w,c
  4303  007F9E  E1FA               	bnz	clear_1
  4304                           
  4305                           ; Clear objects allocated to BANK5 (255 bytes)
  4306  007FA0  EE05  F000         	lfsr	0,__pbssBANK5
  4307  007FA4  EE10 F0FF          	lfsr	1,255
  4308  007FA8                     clear_2:
  4309  007FA8  6AEE               	clrf	postinc0,c
  4310  007FAA  50E5               	movf	postdec1,w,c
  4311  007FAC  50E1               	movf	fsr1l,w,c
  4312  007FAE  E1FC               	bnz	clear_2
  4313  007FB0  50E2               	movf	fsr1h,w,c
  4314  007FB2  E1FA               	bnz	clear_2
  4315                           
  4316                           ; Clear objects allocated to BANK4 (136 bytes)
  4317  007FB4  EE04  F000         	lfsr	0,__pbssBANK4
  4318  007FB8  0E88               	movlw	136
  4319  007FBA                     clear_3:
  4320  007FBA  6AEE               	clrf	postinc0,c
  4321  007FBC  06E8               	decf	wreg,f,c
  4322  007FBE  E1FD               	bnz	clear_3
  4323                           
  4324                           ; Clear objects allocated to BANK2 (24 bytes)
  4325  007FC0  EE02  F0CE         	lfsr	0,__pbssBANK2
  4326  007FC4  0E18               	movlw	24
  4327  007FC6                     clear_4:
  4328  007FC6  6AEE               	clrf	postinc0,c
  4329  007FC8  06E8               	decf	wreg,f,c
  4330  007FCA  E1FD               	bnz	clear_4
  4331                           
  4332                           ; Clear objects allocated to BANK1 (1 bytes)
  4333  007FCC  0101               	movlb	1
  4334  007FCE  6BFF               	clrf	__pbssBANK1& (0+255),b
  4335                           
  4336                           ; Clear objects allocated to BANK0 (11 bytes)
  4337  007FD0  EE00  F0DB         	lfsr	0,__pbssBANK0
  4338  007FD4  0E0B               	movlw	11
  4339  007FD6                     clear_5:
  4340  007FD6  6AEE               	clrf	postinc0,c
  4341  007FD8  06E8               	decf	wreg,f,c
  4342  007FDA  E1FD               	bnz	clear_5
  4343                           
  4344                           ; Clear objects allocated to COMRAM (22 bytes)
  4345  007FDC  EE00  F026         	lfsr	0,__pbssCOMRAM
  4346  007FE0  0E16               	movlw	22
  4347  007FE2                     clear_6:
  4348  007FE2  6AEE               	clrf	postinc0,c
  4349  007FE4  06E8               	decf	wreg,f,c
  4350  007FE6  E1FD               	bnz	clear_6
  4351                           
  4352                           ; Initialize objects allocated to BANK2 (54 bytes)
  4353                           ; load TBLPTR registers with __pidataBANK2
  4354  007FE8  0EF0               	movlw	low __pidataBANK2
  4355  007FEA  6EF6               	movwf	tblptrl,c
  4356  007FEC  0E91               	movlw	high __pidataBANK2
  4357  007FEE  6EF7               	movwf	tblptrh,c
  4358  007FF0  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4359  007FF2  6EF8               	movwf	tblptru,c
  4360  007FF4  EE02  F098         	lfsr	0,__pdataBANK2
  4361  007FF8  EE10 F036          	lfsr	1,54
  4362  007FFC                     copy_data0:
  4363  007FFC  0009               	tblrd		*+
  4364  007FFE  CFF5 FFEE          	movff	tablat,postinc0
  4365  008002  50E5               	movf	postdec1,w,c
  4366  008004  50E1               	movf	fsr1l,w,c
  4367  008006  E1FA               	bnz	copy_data0
  4368                           
  4369                           ; Initialize objects allocated to BANK0 (1 bytes)
  4370                           ; load TBLPTR registers with __pidataBANK0
  4371  008008  0E7C               	movlw	low __pidataBANK0
  4372  00800A  6EF6               	movwf	tblptrl,c
  4373  00800C  0E95               	movlw	high __pidataBANK0
  4374  00800E  6EF7               	movwf	tblptrh,c
  4375  008010  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  4376  008012  6EF8               	movwf	tblptru,c
  4377  008014  0009               	tblrd		*+	;fetch initializer
  4378  008016  CFF5 F0E6          	movff	tablat,__pdataBANK0
  4379                           
  4380                           ; Initialize objects allocated to COMRAM (9 bytes)
  4381                           ; load TBLPTR registers with __pidataCOMRAM
  4382  00801A  0E66               	movlw	low __pidataCOMRAM
  4383  00801C  6EF6               	movwf	tblptrl,c
  4384  00801E  0E95               	movlw	high __pidataCOMRAM
  4385  008020  6EF7               	movwf	tblptrh,c
  4386  008022  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  4387  008024  6EF8               	movwf	tblptru,c
  4388  008026  EE00  F03C         	lfsr	0,__pdataCOMRAM
  4389  00802A  EE10 F009          	lfsr	1,9
  4390  00802E                     copy_data1:
  4391  00802E  0009               	tblrd		*+
  4392  008030  CFF5 FFEE          	movff	tablat,postinc0
  4393  008034  50E5               	movf	postdec1,w,c
  4394  008036  50E1               	movf	fsr1l,w,c
  4395  008038  E1FA               	bnz	copy_data1
  4396  00803A                     end_of_initialization:
  4397                           	opt stack 0
  4398  00803A                     __end_of__initialization:
  4399                           	opt stack 0
  4400  00803A  0100               	movlb	0
  4401  00803C  EF4F  F02A         	goto	_main	;jump to C main() function
  4402                           tblptru	equ	0xFF8
  4403                           tblptrh	equ	0xFF7
  4404                           tblptrl	equ	0xFF6
  4405                           tablat	equ	0xFF5
  4406                           postinc0	equ	0xFEE
  4407                           wreg	equ	0xFE8
  4408                           postdec1	equ	0xFE5
  4409                           fsr1h	equ	0xFE2
  4410                           fsr1l	equ	0xFE1
  4411                           
  4412                           	psect	bssCOMRAM
  4413  000026                     __pbssCOMRAM:
  4414                           	opt stack 0
  4415  000026                     _CommandStringPos:
  4416                           	opt stack 0
  4417  000026                     	ds	1
  4418  000027                     _Conf2_ChannelB_Status:
  4419                           	opt stack 0
  4420  000027                     	ds	1
  4421  000028                     _Conf2_ChannelD_Status:
  4422                           	opt stack 0
  4423  000028                     	ds	1
  4424  000029                     _Conf2_ChannelH_1_Status:
  4425                           	opt stack 0
  4426  000029                     	ds	1
  4427  00002A                     _Conf2_ChannelH_2_Status:
  4428                           	opt stack 0
  4429  00002A                     	ds	1
  4430  00002B                     _Conf2_ChannelH_3_Status:
  4431                           	opt stack 0
  4432  00002B                     	ds	1
  4433  00002C                     _IRbit:
  4434                           	opt stack 0
  4435  00002C                     	ds	1
  4436  00002D                     _IRcodeBit:
  4437                           	opt stack 0
  4438  00002D                     	ds	1
  4439  00002E                     _IRpinOLD:
  4440                           	opt stack 0
  4441  00002E                     	ds	1
  4442  00002F                     _IRrawCodeNum:
  4443                           	opt stack 0
  4444  00002F                     	ds	1
  4445  000030                     _IRrepeatAmount:
  4446                           	opt stack 0
  4447  000030                     	ds	1
  4448  000031                     _IRrepeatflag:
  4449                           	opt stack 0
  4450  000031                     	ds	1
  4451  000032                     _IRsendFlag:
  4452                           	opt stack 0
  4453  000032                     	ds	1
  4454  000033                     _RFConfig:
  4455                           	opt stack 0
  4456  000033                     	ds	1
  4457  000034                     _RFcodeBit:
  4458                           	opt stack 0
  4459  000034                     	ds	1
  4460  000035                     _RFcodePlace:
  4461                           	opt stack 0
  4462  000035                     	ds	1
  4463  000036                     _RFsendFlag:
  4464                           	opt stack 0
  4465  000036                     	ds	1
  4466  000037                     _Sendcount:
  4467                           	opt stack 0
  4468  000037                     	ds	1
  4469  000038                     _Timer1_Postscaler:
  4470                           	opt stack 0
  4471  000038                     	ds	1
  4472  000039                     _Timer2_Postscaler:
  4473                           	opt stack 0
  4474  000039                     	ds	1
  4475  00003A                     _Timer3_Postscaler:
  4476                           	opt stack 0
  4477  00003A                     	ds	1
  4478  00003B                     _IRcommand:
  4479                           	opt stack 0
  4480  00003B                     	ds	1
  4481                           tblptru	equ	0xFF8
  4482                           tblptrh	equ	0xFF7
  4483                           tblptrl	equ	0xFF6
  4484                           tablat	equ	0xFF5
  4485                           postinc0	equ	0xFEE
  4486                           wreg	equ	0xFE8
  4487                           postdec1	equ	0xFE5
  4488                           fsr1h	equ	0xFE2
  4489                           fsr1l	equ	0xFE1
  4490                           
  4491                           	psect	dataCOMRAM
  4492  00003C                     __pdataCOMRAM:
  4493                           	opt stack 0
  4494  00003C                     _SN:
  4495                           	opt stack 0
  4496  00003C                     	ds	4
  4497  000040                     _IRbitPosition:
  4498                           	opt stack 0
  4499  000040                     	ds	1
  4500  000041                     _IRcodePlace:
  4501                           	opt stack 0
  4502  000041                     	ds	1
  4503  000042                     _RF_IR:
  4504                           	opt stack 0
  4505  000042                     	ds	1
  4506  000043                     _RF_IR_Postscaler:
  4507                           	opt stack 0
  4508  000043                     	ds	1
  4509  000044                     _ReceivingIR:
  4510                           	opt stack 0
  4511  000044                     	ds	1
  4512                           tblptru	equ	0xFF8
  4513                           tblptrh	equ	0xFF7
  4514                           tblptrl	equ	0xFF6
  4515                           tablat	equ	0xFF5
  4516                           postinc0	equ	0xFEE
  4517                           wreg	equ	0xFE8
  4518                           postdec1	equ	0xFE5
  4519                           fsr1h	equ	0xFE2
  4520                           fsr1l	equ	0xFE1
  4521                           
  4522                           	psect	bssBANK0
  4523  0000DB                     __pbssBANK0:
  4524                           	opt stack 0
  4525  0000DB                     _BatteryVoltage:
  4526                           	opt stack 0
  4527  0000DB                     	ds	3
  4528  0000DE                     _IRmod:
  4529                           	opt stack 0
  4530  0000DE                     	ds	1
  4531  0000DF                     _NewReceivedString:
  4532                           	opt stack 0
  4533  0000DF                     	ds	1
  4534  0000E0                     _ReceivedStringPos:
  4535                           	opt stack 0
  4536  0000E0                     	ds	1
  4537  0000E1                     _IR_NEC:
  4538                           	opt stack 0
  4539  0000E1                     	ds	4
  4540  0000E5                     _IR_New_Code:
  4541                           	opt stack 0
  4542  0000E5                     	ds	1
  4543                           tblptru	equ	0xFF8
  4544                           tblptrh	equ	0xFF7
  4545                           tblptrl	equ	0xFF6
  4546                           tablat	equ	0xFF5
  4547                           postinc0	equ	0xFEE
  4548                           wreg	equ	0xFE8
  4549                           postdec1	equ	0xFE5
  4550                           fsr1h	equ	0xFE2
  4551                           fsr1l	equ	0xFE1
  4552                           
  4553                           	psect	dataBANK0
  4554  0000E6                     __pdataBANK0:
  4555                           	opt stack 0
  4556  0000E6                     _Sent:
  4557                           	opt stack 0
  4558  0000E6                     	ds	1
  4559                           tblptru	equ	0xFF8
  4560                           tblptrh	equ	0xFF7
  4561                           tblptrl	equ	0xFF6
  4562                           tablat	equ	0xFF5
  4563                           postinc0	equ	0xFEE
  4564                           wreg	equ	0xFE8
  4565                           postdec1	equ	0xFE5
  4566                           fsr1h	equ	0xFE2
  4567                           fsr1l	equ	0xFE1
  4568                           
  4569                           	psect	bssBANK1
  4570  0001FF                     __pbssBANK1:
  4571                           	opt stack 0
  4572  0001FF                     _IRaddress:
  4573                           	opt stack 0
  4574  0001FF                     	ds	1
  4575                           tblptru	equ	0xFF8
  4576                           tblptrh	equ	0xFF7
  4577                           tblptrl	equ	0xFF6
  4578                           tablat	equ	0xFF5
  4579                           postinc0	equ	0xFEE
  4580                           wreg	equ	0xFE8
  4581                           postdec1	equ	0xFE5
  4582                           fsr1h	equ	0xFE2
  4583                           fsr1l	equ	0xFE1
  4584                           
  4585                           	psect	bssBANK2
  4586  0002CE                     __pbssBANK2:
  4587                           	opt stack 0
  4588  0002CE                     _RFsendCode:
  4589                           	opt stack 0
  4590  0002CE                     	ds	20
  4591  0002E2                     _IRsendCode:
  4592                           	opt stack 0
  4593  0002E2                     	ds	4
  4594                           tblptru	equ	0xFF8
  4595                           tblptrh	equ	0xFF7
  4596                           tblptrl	equ	0xFF6
  4597                           tablat	equ	0xFF5
  4598                           postinc0	equ	0xFEE
  4599                           wreg	equ	0xFE8
  4600                           postdec1	equ	0xFE5
  4601                           fsr1h	equ	0xFE2
  4602                           fsr1l	equ	0xFE1
  4603                           
  4604                           	psect	dataBANK2
  4605  000298                     __pdataBANK2:
  4606                           	opt stack 0
  4607  000298                     _ProductName:
  4608                           	opt stack 0
  4609  000298                     	ds	50
  4610  0002CA                     _IRtimeout:
  4611                           	opt stack 0
  4612  0002CA                     	ds	4
  4613                           tblptru	equ	0xFF8
  4614                           tblptrh	equ	0xFF7
  4615                           tblptrl	equ	0xFF6
  4616                           tablat	equ	0xFF5
  4617                           postinc0	equ	0xFEE
  4618                           wreg	equ	0xFE8
  4619                           postdec1	equ	0xFE5
  4620                           fsr1h	equ	0xFE2
  4621                           fsr1l	equ	0xFE1
  4622                           
  4623                           	psect	bssBANK4
  4624  000400                     __pbssBANK4:
  4625                           	opt stack 0
  4626  000400                     _Global:
  4627                           	opt stack 0
  4628  000400                     	ds	136
  4629                           tblptru	equ	0xFF8
  4630                           tblptrh	equ	0xFF7
  4631                           tblptrl	equ	0xFF6
  4632                           tablat	equ	0xFF5
  4633                           postinc0	equ	0xFEE
  4634                           wreg	equ	0xFE8
  4635                           postdec1	equ	0xFE5
  4636                           fsr1h	equ	0xFE2
  4637                           fsr1l	equ	0xFE1
  4638                           
  4639                           	psect	bssBANK5
  4640  000500                     __pbssBANK5:
  4641                           	opt stack 0
  4642  000500                     _CommandString:
  4643                           	opt stack 0
  4644  000500                     	ds	255
  4645                           tblptru	equ	0xFF8
  4646                           tblptrh	equ	0xFF7
  4647                           tblptrl	equ	0xFF6
  4648                           tablat	equ	0xFF5
  4649                           postinc0	equ	0xFEE
  4650                           wreg	equ	0xFE8
  4651                           postdec1	equ	0xFE5
  4652                           fsr1h	equ	0xFE2
  4653                           fsr1l	equ	0xFE1
  4654                           
  4655                           	psect	bssBANK6
  4656  000600                     __pbssBANK6:
  4657                           	opt stack 0
  4658  000600                     _ReceivedString:
  4659                           	opt stack 0
  4660  000600                     	ds	255
  4661                           tblptru	equ	0xFF8
  4662                           tblptrh	equ	0xFF7
  4663                           tblptrl	equ	0xFF6
  4664                           tablat	equ	0xFF5
  4665                           postinc0	equ	0xFEE
  4666                           wreg	equ	0xFE8
  4667                           postdec1	equ	0xFE5
  4668                           fsr1h	equ	0xFE2
  4669                           fsr1l	equ	0xFE1
  4670                           
  4671                           	psect	bssBANK7
  4672  000700                     __pbssBANK7:
  4673                           	opt stack 0
  4674  000700                     _IRRawCode:
  4675                           	opt stack 0
  4676  000700                     	ds	200
  4677                           tblptru	equ	0xFF8
  4678                           tblptrh	equ	0xFF7
  4679                           tblptrl	equ	0xFF6
  4680                           tablat	equ	0xFF5
  4681                           postinc0	equ	0xFEE
  4682                           wreg	equ	0xFE8
  4683                           postdec1	equ	0xFE5
  4684                           fsr1h	equ	0xFE2
  4685                           fsr1l	equ	0xFE1
  4686                           
  4687                           	psect	cstackBANK3
  4688  000300                     __pcstackBANK3:
  4689                           	opt stack 0
  4690  000300                     main@BluetoothString:
  4691                           	opt stack 0
  4692                           
  4693                           ; 255 bytes @ 0x0
  4694  000300                     	ds	255
  4695                           tblptru	equ	0xFF8
  4696                           tblptrh	equ	0xFF7
  4697                           tblptrl	equ	0xFF6
  4698                           tablat	equ	0xFF5
  4699                           postinc0	equ	0xFEE
  4700                           wreg	equ	0xFE8
  4701                           postdec1	equ	0xFE5
  4702                           fsr1h	equ	0xFE2
  4703                           fsr1l	equ	0xFE1
  4704                           
  4705                           	psect	cstackBANK2
  4706  000200                     __pcstackBANK2:
  4707                           	opt stack 0
  4708  000200                     UseBluetooth@String:
  4709                           	opt stack 0
  4710                           
  4711                           ; 2 bytes @ 0x0
  4712  000200                     	ds	2
  4713  000202                     UseBluetooth@StringPos:
  4714                           	opt stack 0
  4715                           
  4716                           ; 1 bytes @ 0x2
  4717  000202                     	ds	1
  4718  000203                     ??_UseBluetooth:
  4719                           
  4720                           ; 0 bytes @ 0x3
  4721  000203                     	ds	12
  4722  00020F                     UseBluetooth@buf:
  4723                           	opt stack 0
  4724                           
  4725                           ; 100 bytes @ 0xF
  4726  00020F                     	ds	100
  4727  000273                     UseBluetooth@rfchannelSTR:
  4728                           	opt stack 0
  4729                           
  4730                           ; 10 bytes @ 0x73
  4731  000273                     	ds	10
  4732  00027D                     UseBluetooth@set:
  4733                           	opt stack 0
  4734                           
  4735                           ; 1 bytes @ 0x7D
  4736  00027D                     	ds	1
  4737  00027E                     UseBluetooth@tempNec:
  4738                           	opt stack 0
  4739                           
  4740                           ; 4 bytes @ 0x7E
  4741  00027E                     	ds	4
  4742  000282                     UseBluetooth@timeout:
  4743                           	opt stack 0
  4744                           
  4745                           ; 1 bytes @ 0x82
  4746  000282                     	ds	1
  4747  000283                     UseBluetooth@EmptyPlace:
  4748                           	opt stack 0
  4749                           
  4750                           ; 1 bytes @ 0x83
  4751  000283                     	ds	1
  4752  000284                     UseBluetooth@device:
  4753                           	opt stack 0
  4754                           
  4755                           ; 1 bytes @ 0x84
  4756  000284                     	ds	1
  4757  000285                     UseBluetooth@EnteredNEC:
  4758                           	opt stack 0
  4759                           
  4760                           ; 4 bytes @ 0x85
  4761  000285                     	ds	4
  4762  000289                     UseBluetooth@ok:
  4763                           	opt stack 0
  4764                           
  4765                           ; 1 bytes @ 0x89
  4766  000289                     	ds	1
  4767  00028A                     UseBluetooth@tempRFArray:
  4768                           	opt stack 0
  4769                           
  4770                           ; 1 bytes @ 0x8A
  4771  00028A                     	ds	1
  4772  00028B                     UseBluetooth@rfconf:
  4773                           	opt stack 0
  4774                           
  4775                           ; 1 bytes @ 0x8B
  4776  00028B                     	ds	1
  4777  00028C                     UseBluetooth@NecAddress:
  4778                           	opt stack 0
  4779                           
  4780                           ; 1 bytes @ 0x8C
  4781  00028C                     	ds	1
  4782  00028D                     UseBluetooth@NecCommand:
  4783                           	opt stack 0
  4784                           
  4785                           ; 1 bytes @ 0x8D
  4786  00028D                     	ds	1
  4787  00028E                     UseBluetooth@temp:
  4788                           	opt stack 0
  4789                           
  4790                           ; 4 bytes @ 0x8E
  4791  00028E                     	ds	4
  4792  000292                     UseBluetooth@i:
  4793                           	opt stack 0
  4794                           
  4795                           ; 1 bytes @ 0x92
  4796  000292                     	ds	1
  4797  000293                     main@IRtask:
  4798                           	opt stack 0
  4799                           
  4800                           ; 1 bytes @ 0x93
  4801  000293                     	ds	1
  4802  000294                     main@Bluetoothtask:
  4803                           	opt stack 0
  4804                           
  4805                           ; 1 bytes @ 0x94
  4806  000294                     	ds	1
  4807  000295                     main@BluetoothStringPos:
  4808                           	opt stack 0
  4809                           
  4810                           ; 1 bytes @ 0x95
  4811  000295                     	ds	1
  4812  000296                     main@VoltageStatus:
  4813                           	opt stack 0
  4814                           
  4815                           ; 1 bytes @ 0x96
  4816  000296                     	ds	1
  4817  000297                     main@i:
  4818                           	opt stack 0
  4819                           
  4820                           ; 1 bytes @ 0x97
  4821  000297                     	ds	1
  4822                           tblptru	equ	0xFF8
  4823                           tblptrh	equ	0xFF7
  4824                           tblptrl	equ	0xFF6
  4825                           tablat	equ	0xFF5
  4826                           postinc0	equ	0xFEE
  4827                           wreg	equ	0xFE8
  4828                           postdec1	equ	0xFE5
  4829                           fsr1h	equ	0xFE2
  4830                           fsr1l	equ	0xFE1
  4831                           
  4832                           	psect	cstackBANK1
  4833  000100                     __pcstackBANK1:
  4834                           	opt stack 0
  4835  000100                     ?_SetEEPROM:
  4836                           	opt stack 0
  4837  000100                     SyncEEPROMToGlobal@k:
  4838                           	opt stack 0
  4839  000100                     _InitUART$3798:
  4840                           	opt stack 0
  4841  000100                     _sprintf$3802:
  4842                           	opt stack 0
  4843  000100                     SetEEPROM@Temp:
  4844                           	opt stack 0
  4845  000100                     StringAddEqual@temp:
  4846                           	opt stack 0
  4847                           
  4848                           ; 255 bytes @ 0x0
  4849  000100                     	ds	1
  4850  000101                     SyncEEPROMToGlobal@i:
  4851                           	opt stack 0
  4852                           
  4853                           ; 1 bytes @ 0x1
  4854  000101                     	ds	1
  4855  000102                     SyncEEPROMToGlobal@j:
  4856                           	opt stack 0
  4857                           
  4858                           ; 1 bytes @ 0x2
  4859  000102                     	ds	1
  4860  000103                     sprintf@idx:
  4861                           	opt stack 0
  4862  000103                     InitUART@spbrg:
  4863                           	opt stack 0
  4864  000103                     SyncEEPROMToGlobal@Temp:
  4865                           	opt stack 0
  4866                           
  4867                           ; 136 bytes @ 0x3
  4868  000103                     	ds	1
  4869  000104                     sprintf@cp:
  4870                           	opt stack 0
  4871                           
  4872                           ; 2 bytes @ 0x4
  4873  000104                     	ds	1
  4874  000105                     InitUART@config:
  4875                           	opt stack 0
  4876                           
  4877                           ; 1 bytes @ 0x5
  4878  000105                     	ds	1
  4879  000106                     sprintf@len:
  4880                           	opt stack 0
  4881  000106                     InitUART@temp:
  4882                           	opt stack 0
  4883                           
  4884                           ; 4 bytes @ 0x6
  4885  000106                     	ds	2
  4886  000108                     sprintf@ap:
  4887                           	opt stack 0
  4888                           
  4889                           ; 2 bytes @ 0x8
  4890  000108                     	ds	2
  4891  00010A                     sprintf@prec:
  4892                           	opt stack 0
  4893                           
  4894                           ; 2 bytes @ 0xA
  4895  00010A                     	ds	2
  4896  00010C                     sprintf@tmpval:
  4897                           	opt stack 0
  4898                           
  4899                           ; 4 bytes @ 0xC
  4900  00010C                     	ds	4
  4901  000110                     sprintf@exp:
  4902                           	opt stack 0
  4903                           
  4904                           ; 2 bytes @ 0x10
  4905  000110                     	ds	2
  4906  000112                     sprintf@val:
  4907                           	opt stack 0
  4908                           
  4909                           ; 4 bytes @ 0x12
  4910  000112                     	ds	4
  4911  000116                     sprintf@fval:
  4912                           	opt stack 0
  4913                           
  4914                           ; 3 bytes @ 0x16
  4915  000116                     	ds	3
  4916  000119                     sprintf@width:
  4917                           	opt stack 0
  4918                           
  4919                           ; 2 bytes @ 0x19
  4920  000119                     	ds	2
  4921  00011B                     sprintf@flag:
  4922                           	opt stack 0
  4923                           
  4924                           ; 2 bytes @ 0x1B
  4925  00011B                     	ds	2
  4926  00011D                     sprintf@c:
  4927                           	opt stack 0
  4928                           
  4929                           ; 1 bytes @ 0x1D
  4930  00011D                     	ds	1
  4931  00011E                     BluetoothInitialSetup@RFchannel:
  4932                           	opt stack 0
  4933                           
  4934                           ; 10 bytes @ 0x1E
  4935  00011E                     	ds	10
  4936  000128                     BluetoothInitialSetup@buf:
  4937                           	opt stack 0
  4938                           
  4939                           ; 50 bytes @ 0x28
  4940  000128                     	ds	50
  4941  00015A                     BluetoothInitialSetup@ok:
  4942                           	opt stack 0
  4943                           
  4944                           ; 1 bytes @ 0x5A
  4945  00015A                     	ds	46
  4946  000188                     SetEEPROM@burn:
  4947                           	opt stack 0
  4948                           
  4949                           ; 4 bytes @ 0x88
  4950  000188                     	ds	119
  4951                           tblptru	equ	0xFF8
  4952                           tblptrh	equ	0xFF7
  4953                           tblptrl	equ	0xFF6
  4954                           tablat	equ	0xFF5
  4955                           postinc0	equ	0xFEE
  4956                           wreg	equ	0xFE8
  4957                           postdec1	equ	0xFE5
  4958                           fsr1h	equ	0xFE2
  4959                           fsr1l	equ	0xFE1
  4960                           
  4961                           	psect	cstackBANK0
  4962  000060                     __pcstackBANK0:
  4963                           	opt stack 0
  4964  000060                     IRrawToNEC@NECtemp:
  4965                           	opt stack 0
  4966                           
  4967                           ; 4 bytes @ 0x0
  4968  000060                     	ds	4
  4969  000064                     IRrawToNEC@first:
  4970                           	opt stack 0
  4971                           
  4972                           ; 1 bytes @ 0x4
  4973  000064                     	ds	1
  4974  000065                     IRrawToNEC@i:
  4975                           	opt stack 0
  4976                           
  4977                           ; 1 bytes @ 0x5
  4978  000065                     	ds	1
  4979  000066                     IRrawToNEC@StartBit:
  4980                           	opt stack 0
  4981                           
  4982                           ; 1 bytes @ 0x6
  4983  000066                     	ds	1
  4984  000067                     ??_high_isr:
  4985                           
  4986                           ; 0 bytes @ 0x7
  4987  000067                     	ds	18
  4988  000079                     ??_isdigit:
  4989  000079                     ??_Reverse_Byte:
  4990  000079                     ?_ReadEEPROM_1Byte:
  4991                           	opt stack 0
  4992  000079                     ?___awmod:
  4993                           	opt stack 0
  4994  000079                     ?___ftpack:
  4995                           	opt stack 0
  4996  000079                     ?___ftneg:
  4997                           	opt stack 0
  4998  000079                     ?__tdiv_to_l_:
  4999                           	opt stack 0
  5000  000079                     ?__div_to_l_:
  5001                           	opt stack 0
  5002  000079                     ?_Reverse_4Byte:
  5003                           	opt stack 0
  5004  000079                     ?___lmul:
  5005                           	opt stack 0
  5006  000079                     ?___lldiv:
  5007                           	opt stack 0
  5008  000079                     IsLetter@data:
  5009                           	opt stack 0
  5010  000079                     UARTchar@data:
  5011                           	opt stack 0
  5012  000079                     ReadUSART@data:
  5013                           	opt stack 0
  5014  000079                     cleanBuffer@data:
  5015                           	opt stack 0
  5016  000079                     cleanBuffer16bit@data:
  5017                           	opt stack 0
  5018  000079                     StringMatch@This:
  5019                           	opt stack 0
  5020  000079                     StringContains@This:
  5021                           	opt stack 0
  5022  000079                     lowercaseString@Input:
  5023                           	opt stack 0
  5024  000079                     lowercaseChar@Input:
  5025                           	opt stack 0
  5026  000079                     GetStringAfterComma@This:
  5027                           	opt stack 0
  5028  000079                     OpenUSART@spbrg:
  5029                           	opt stack 0
  5030  000079                     ReadEEPROM_1Byte@address:
  5031                           	opt stack 0
  5032  000079                     WriteEEPROM_1Byte@address:
  5033                           	opt stack 0
  5034  000079                     SendRF@Code:
  5035                           	opt stack 0
  5036  000079                     ___awmod@dividend:
  5037                           	opt stack 0
  5038  000079                     __div_to_l_@f1:
  5039                           	opt stack 0
  5040  000079                     ___ftpack@arg:
  5041                           	opt stack 0
  5042  000079                     __tdiv_to_l_@f1:
  5043                           	opt stack 0
  5044  000079                     ___ftge@ff1:
  5045                           	opt stack 0
  5046  000079                     ___ftneg@f1:
  5047                           	opt stack 0
  5048  000079                     delayUS@US:
  5049                           	opt stack 0
  5050  000079                     Reverse_4Byte@This:
  5051                           	opt stack 0
  5052  000079                     ___lmul@multiplier:
  5053                           	opt stack 0
  5054  000079                     ___lldiv@dividend:
  5055                           	opt stack 0
  5056                           
  5057                           ; 4 bytes @ 0x19
  5058  000079                     	ds	1
  5059  00007A                     _isdigit$3475:
  5060                           	opt stack 0
  5061  00007A                     UARTstring@data:
  5062                           	opt stack 0
  5063                           
  5064                           ; 2 bytes @ 0x1A
  5065  00007A                     	ds	1
  5066  00007B                     Reverse_Byte@temp:
  5067                           	opt stack 0
  5068  00007B                     GetStringAfterComma@CommaNumber:
  5069                           	opt stack 0
  5070  00007B                     OpenUSART@config:
  5071                           	opt stack 0
  5072  00007B                     ReadEEPROM_1Byte@GIEstatus:
  5073                           	opt stack 0
  5074  00007B                     WriteEEPROM_1Byte@data:
  5075                           	opt stack 0
  5076  00007B                     SendRF@Config:
  5077                           	opt stack 0
  5078  00007B                     isdigit@c:
  5079                           	opt stack 0
  5080  00007B                     cleanBuffer@count:
  5081                           	opt stack 0
  5082  00007B                     cleanBuffer16bit@count:
  5083                           	opt stack 0
  5084  00007B                     StringMatch@That:
  5085                           	opt stack 0
  5086  00007B                     StringContains@That:
  5087                           	opt stack 0
  5088  00007B                     ___awmod@divisor:
  5089                           	opt stack 0
  5090                           
  5091                           ; 2 bytes @ 0x1B
  5092  00007B                     	ds	1
  5093  00007C                     Reverse_Byte@This:
  5094                           	opt stack 0
  5095  00007C                     ReadEEPROM_1Byte@PEIEstatus:
  5096                           	opt stack 0
  5097  00007C                     WriteEEPROM_1Byte@GIEstatus:
  5098                           	opt stack 0
  5099  00007C                     SendRF@size:
  5100                           	opt stack 0
  5101  00007C                     ___ftpack@exp:
  5102                           	opt stack 0
  5103  00007C                     StringMatchCaseInsensitive@This:
  5104                           	opt stack 0
  5105  00007C                     StringContainsCaseInsensitive@This:
  5106                           	opt stack 0
  5107  00007C                     GetStringAfterComma@result:
  5108                           	opt stack 0
  5109  00007C                     UARTstringCRLN@data:
  5110                           	opt stack 0
  5111  00007C                     UARTcommandMenu@Command:
  5112                           	opt stack 0
  5113  00007C                     __div_to_l_@f2:
  5114                           	opt stack 0
  5115  00007C                     __tdiv_to_l_@f2:
  5116                           	opt stack 0
  5117  00007C                     ___ftge@ff2:
  5118                           	opt stack 0
  5119                           
  5120                           ; 3 bytes @ 0x1C
  5121  00007C                     	ds	1
  5122  00007D                     ??_delayUS:
  5123  00007D                     ??_cleanBuffer:
  5124  00007D                     ??_cleanBuffer16bit:
  5125  00007D                     ??_StringMatch:
  5126  00007D                     ??_StringContains:
  5127  00007D                     ??_Reverse_4Byte:
  5128  00007D                     ?_GetMemoryChar:
  5129                           	opt stack 0
  5130  00007D                     ?_GetMemoryLong:
  5131                           	opt stack 0
  5132  00007D                     ?_EncodeNEC:
  5133                           	opt stack 0
  5134  00007D                     WriteEEPROM_1Byte@PEIEstatus:
  5135                           	opt stack 0
  5136  00007D                     EncodeNEC@command:
  5137                           	opt stack 0
  5138  00007D                     SendRF@RepeatAmount:
  5139                           	opt stack 0
  5140  00007D                     ___awmod@counter:
  5141                           	opt stack 0
  5142  00007D                     ___ftpack@sign:
  5143                           	opt stack 0
  5144  00007D                     DecodeNEC@Nec:
  5145                           	opt stack 0
  5146  00007D                     ___lmul@multiplicand:
  5147                           	opt stack 0
  5148  00007D                     ___lldiv@divisor:
  5149                           	opt stack 0
  5150                           
  5151                           ; 4 bytes @ 0x1D
  5152  00007D                     	ds	1
  5153  00007E                     ??___ftpack:
  5154  00007E                     ??_SendRF:
  5155  00007E                     StringContains@begin:
  5156                           	opt stack 0
  5157  00007E                     ___awmod@sign:
  5158                           	opt stack 0
  5159  00007E                     StringMatchCaseInsensitive@That:
  5160                           	opt stack 0
  5161  00007E                     StringContainsCaseInsensitive@That:
  5162                           	opt stack 0
  5163  00007E                     UARTcommandMenu@Desc:
  5164                           	opt stack 0
  5165  00007E                     delayUS@i:
  5166                           	opt stack 0
  5167                           
  5168                           ; 4 bytes @ 0x1E
  5169  00007E                     	ds	1
  5170  00007F                     ??__tdiv_to_l_:
  5171  00007F                     ??___ftge:
  5172  00007F                     ?___awdiv:
  5173                           	opt stack 0
  5174  00007F                     GetStringAfterComma@tempCommaNumber:
  5175                           	opt stack 0
  5176  00007F                     ___awdiv@dividend:
  5177                           	opt stack 0
  5178  00007F                     __div_to_l_@quot:
  5179                           	opt stack 0
  5180                           
  5181                           ; 4 bytes @ 0x1F
  5182  00007F                     	ds	1
  5183  000080                     ??_UARTcommandMenu:
  5184  000080                     cleanBuffer@i:
  5185                           	opt stack 0
  5186  000080                     cleanBuffer16bit@i:
  5187                           	opt stack 0
  5188  000080                     StringMatchCaseInsensitive@tempThis:
  5189                           	opt stack 0
  5190  000080                     StringContainsCaseInsensitive@begin:
  5191                           	opt stack 0
  5192  000080                     GetStringAfterComma@count:
  5193                           	opt stack 0
  5194  000080                     SendRF@i:
  5195                           	opt stack 0
  5196                           
  5197                           ; 1 bytes @ 0x20
  5198  000080                     	ds	1
  5199  000081                     ??_GetMemoryLong:
  5200  000081                     ??_EncodeNEC:
  5201  000081                     ?___altoft:
  5202                           	opt stack 0
  5203  000081                     ?___lltoft:
  5204                           	opt stack 0
  5205  000081                     ?___lwtoft:
  5206                           	opt stack 0
  5207  000081                     StringMatchCaseInsensitive@tempThat:
  5208                           	opt stack 0
  5209  000081                     StringContainsCaseInsensitive@tempThis:
  5210                           	opt stack 0
  5211  000081                     GetMemoryChar@AddressFirst:
  5212                           	opt stack 0
  5213  000081                     BufferCopy@from:
  5214                           	opt stack 0
  5215  000081                     DecodeNEC@address:
  5216                           	opt stack 0
  5217  000081                     SendRF_wait@Code:
  5218                           	opt stack 0
  5219  000081                     ___awdiv@divisor:
  5220                           	opt stack 0
  5221  000081                     ___lwtoft@c:
  5222                           	opt stack 0
  5223  000081                     ___lmul@product:
  5224                           	opt stack 0
  5225  000081                     ___altoft@c:
  5226                           	opt stack 0
  5227  000081                     ___lldiv@quotient:
  5228                           	opt stack 0
  5229  000081                     ___lltoft@c:
  5230                           	opt stack 0
  5231                           
  5232                           ; 4 bytes @ 0x21
  5233  000081                     	ds	1
  5234  000082                     StringContainsCaseInsensitive@tempThat:
  5235                           	opt stack 0
  5236  000082                     GetMemoryChar@H:
  5237                           	opt stack 0
  5238  000082                     ReadCodeButtons@temp:
  5239                           	opt stack 0
  5240  000082                     EnterCommandMode@count:
  5241                           	opt stack 0
  5242  000082                     WaitForIRsignal@timeout:
  5243                           	opt stack 0
  5244  000082                     InternalADC_Read@ADCcounts:
  5245                           	opt stack 0
  5246  000082                     __tdiv_to_l_@quot:
  5247                           	opt stack 0
  5248                           
  5249                           ; 4 bytes @ 0x22
  5250  000082                     	ds	1
  5251  000083                     SetMemoryChar@AddressFirst:
  5252                           	opt stack 0
  5253  000083                     SendRF_wait@Config:
  5254                           	opt stack 0
  5255  000083                     ___awdiv@counter:
  5256                           	opt stack 0
  5257  000083                     __div_to_l_@cntr:
  5258                           	opt stack 0
  5259  000083                     BufferCopy@to:
  5260                           	opt stack 0
  5261  000083                     DecodeNEC@command:
  5262                           	opt stack 0
  5263                           
  5264                           ; 2 bytes @ 0x23
  5265  000083                     	ds	1
  5266  000084                     ??_InternalADC_Read:
  5267  000084                     ?___ftdiv:
  5268                           	opt stack 0
  5269  000084                     SetMemoryChar@Test:
  5270                           	opt stack 0
  5271  000084                     SendRF_wait@size:
  5272                           	opt stack 0
  5273  000084                     ___awdiv@sign:
  5274                           	opt stack 0
  5275  000084                     __div_to_l_@exp1:
  5276                           	opt stack 0
  5277  000084                     ___ftdiv@f1:
  5278                           	opt stack 0
  5279                           
  5280                           ; 3 bytes @ 0x24
  5281  000084                     	ds	1
  5282  000085                     ??_DecodeNEC:
  5283  000085                     ??___altoft:
  5284  000085                     ??___lltoft:
  5285  000085                     BufferCopy@count:
  5286                           	opt stack 0
  5287  000085                     UARTcommandMenu@i:
  5288                           	opt stack 0
  5289  000085                     SetMemoryChar@Data:
  5290                           	opt stack 0
  5291  000085                     SendRF_wait@amount:
  5292                           	opt stack 0
  5293  000085                     ___lldiv@counter:
  5294                           	opt stack 0
  5295  000085                     GetNumber@This:
  5296                           	opt stack 0
  5297  000085                     ___awdiv@quotient:
  5298                           	opt stack 0
  5299  000085                     Reverse_4Byte@temp:
  5300                           	opt stack 0
  5301                           
  5302                           ; 4 bytes @ 0x25
  5303  000085                     	ds	1
  5304  000086                     ?___llmod:
  5305                           	opt stack 0
  5306  000086                     BufferCopy@shift:
  5307                           	opt stack 0
  5308  000086                     UARTcommandMenu@place:
  5309                           	opt stack 0
  5310  000086                     InternalADC_Read@AnaChanSel:
  5311                           	opt stack 0
  5312  000086                     SendRF_Channel@channel:
  5313                           	opt stack 0
  5314  000086                     __tdiv_to_l_@cntr:
  5315                           	opt stack 0
  5316  000086                     ___llmod@dividend:
  5317                           	opt stack 0
  5318                           
  5319                           ; 4 bytes @ 0x26
  5320  000086                     	ds	1
  5321  000087                     ?___wmul:
  5322                           	opt stack 0
  5323  000087                     BufferCopy@i:
  5324                           	opt stack 0
  5325  000087                     GetNumber@CommaNumber:
  5326                           	opt stack 0
  5327  000087                     InternalADC_Read@channel:
  5328                           	opt stack 0
  5329  000087                     __tdiv_to_l_@exp1:
  5330                           	opt stack 0
  5331  000087                     ___wmul@multiplier:
  5332                           	opt stack 0
  5333  000087                     ___ftdiv@f2:
  5334                           	opt stack 0
  5335                           
  5336                           ; 3 bytes @ 0x27
  5337  000087                     	ds	1
  5338  000088                     GetNumber@result:
  5339                           	opt stack 0
  5340  000088                     StringAddEqual@Input:
  5341                           	opt stack 0
  5342                           
  5343                           ; 2 bytes @ 0x28
  5344  000088                     	ds	1
  5345  000089                     DecodeNEC@temp2:
  5346                           	opt stack 0
  5347  000089                     ___altoft@exp:
  5348                           	opt stack 0
  5349  000089                     ___lltoft@exp:
  5350                           	opt stack 0
  5351  000089                     ___wmul@multiplicand:
  5352                           	opt stack 0
  5353  000089                     SendNEC_bytes@code:
  5354                           	opt stack 0
  5355                           
  5356                           ; 4 bytes @ 0x29
  5357  000089                     	ds	1
  5358  00008A                     ??___ftdiv:
  5359  00008A                     ??_GetNumber:
  5360  00008A                     ??_StringAddEqual:
  5361  00008A                     DecodeNEC@temp3:
  5362                           	opt stack 0
  5363  00008A                     ___altoft@sign:
  5364                           	opt stack 0
  5365  00008A                     ___llmod@divisor:
  5366                           	opt stack 0
  5367                           
  5368                           ; 4 bytes @ 0x2A
  5369  00008A                     	ds	1
  5370  00008B                     DecodeNEC@temp1:
  5371                           	opt stack 0
  5372  00008B                     ___wmul@product:
  5373                           	opt stack 0
  5374                           
  5375                           ; 2 bytes @ 0x2B
  5376  00008B                     	ds	1
  5377  00008C                     StringAddEqual@NullPosition:
  5378                           	opt stack 0
  5379                           
  5380                           ; 1 bytes @ 0x2C
  5381  00008C                     	ds	1
  5382  00008D                     StringAddEqual@firstnumber:
  5383                           	opt stack 0
  5384  00008D                     SendNEC_bytes@RepeatAmount:
  5385                           	opt stack 0
  5386  00008D                     ___ftdiv@cntr:
  5387                           	opt stack 0
  5388                           
  5389                           ; 1 bytes @ 0x2D
  5390  00008D                     	ds	1
  5391  00008E                     StringAddEqual@i:
  5392                           	opt stack 0
  5393  00008E                     ___llmod@counter:
  5394                           	opt stack 0
  5395  00008E                     ___ftdiv@f3:
  5396                           	opt stack 0
  5397  00008E                     SendNEC_wait@code:
  5398                           	opt stack 0
  5399                           
  5400                           ; 4 bytes @ 0x2E
  5401  00008E                     	ds	1
  5402  00008F                     GetNumber@tempCommaNumber:
  5403                           	opt stack 0
  5404  00008F                     StringAddEqual@j:
  5405                           	opt stack 0
  5406                           
  5407                           ; 1 bytes @ 0x2F
  5408  00008F                     	ds	1
  5409  000090                     GetNumber@negative:
  5410                           	opt stack 0
  5411                           
  5412                           ; 1 bytes @ 0x30
  5413  000090                     	ds	1
  5414  000091                     GetNumber@count:
  5415                           	opt stack 0
  5416  000091                     ___ftdiv@exp:
  5417                           	opt stack 0
  5418                           
  5419                           ; 1 bytes @ 0x31
  5420  000091                     	ds	1
  5421  000092                     GetNumber@Hex:
  5422                           	opt stack 0
  5423  000092                     SendNEC_wait@RepeatAmount:
  5424                           	opt stack 0
  5425  000092                     ___ftdiv@sign:
  5426                           	opt stack 0
  5427                           
  5428                           ; 1 bytes @ 0x32
  5429  000092                     	ds	1
  5430  000093                     ?___ftmul:
  5431                           	opt stack 0
  5432  000093                     GetNumber@i:
  5433                           	opt stack 0
  5434  000093                     SendNEC_wait@toggle:
  5435                           	opt stack 0
  5436  000093                     ___ftmul@f1:
  5437                           	opt stack 0
  5438                           
  5439                           ; 3 bytes @ 0x33
  5440  000093                     	ds	1
  5441  000094                     GetNumber@tempThis:
  5442                           	opt stack 0
  5443                           
  5444                           ; 1 bytes @ 0x34
  5445  000094                     	ds	1
  5446  000095                     GetNumber@temp:
  5447                           	opt stack 0
  5448  000095                     GetMemoryLong@temp:
  5449                           	opt stack 0
  5450  000095                     EncodeNEC@temp1:
  5451                           	opt stack 0
  5452                           
  5453                           ; 4 bytes @ 0x35
  5454  000095                     	ds	1
  5455  000096                     ___ftmul@f2:
  5456                           	opt stack 0
  5457                           
  5458                           ; 3 bytes @ 0x36
  5459  000096                     	ds	3
  5460  000099                     ??___ftmul:
  5461  000099                     GetMemoryLong@H:
  5462                           	opt stack 0
  5463  000099                     EncodeNEC@temp2:
  5464                           	opt stack 0
  5465                           
  5466                           ; 4 bytes @ 0x39
  5467  000099                     	ds	1
  5468  00009A                     GetMemoryLong@MH:
  5469                           	opt stack 0
  5470                           
  5471                           ; 1 bytes @ 0x3A
  5472  00009A                     	ds	1
  5473  00009B                     GetMemoryLong@ML:
  5474                           	opt stack 0
  5475                           
  5476                           ; 1 bytes @ 0x3B
  5477  00009B                     	ds	1
  5478  00009C                     GetMemoryLong@L:
  5479                           	opt stack 0
  5480  00009C                     ___ftmul@exp:
  5481                           	opt stack 0
  5482                           
  5483                           ; 1 bytes @ 0x3C
  5484  00009C                     	ds	1
  5485  00009D                     GetMemoryLong@AddressFirst:
  5486                           	opt stack 0
  5487  00009D                     ___ftmul@f3_as_product:
  5488                           	opt stack 0
  5489  00009D                     EncodeNEC@temp3:
  5490                           	opt stack 0
  5491                           
  5492                           ; 4 bytes @ 0x3D
  5493  00009D                     	ds	1
  5494  00009E                     GetEEPROM@Temp:
  5495                           	opt stack 0
  5496  00009E                     SetMemoryLong@Data:
  5497                           	opt stack 0
  5498                           
  5499                           ; 4 bytes @ 0x3E
  5500  00009E                     	ds	2
  5501  0000A0                     ??_GetEEPROM:
  5502  0000A0                     ___ftmul@cntr:
  5503                           	opt stack 0
  5504                           
  5505                           ; 1 bytes @ 0x40
  5506  0000A0                     	ds	1
  5507  0000A1                     ___ftmul@sign:
  5508                           	opt stack 0
  5509  0000A1                     EncodeNEC@temp4:
  5510                           	opt stack 0
  5511                           
  5512                           ; 4 bytes @ 0x41
  5513  0000A1                     	ds	1
  5514  0000A2                     ?_ReadVoltage:
  5515                           	opt stack 0
  5516  0000A2                     ?_fround:
  5517                           	opt stack 0
  5518  0000A2                     ?_scale:
  5519                           	opt stack 0
  5520  0000A2                     GetEEPROM@Arrayspot:
  5521                           	opt stack 0
  5522  0000A2                     SetMemoryLong@AddressFirst:
  5523                           	opt stack 0
  5524                           
  5525                           ; 1 bytes @ 0x42
  5526  0000A2                     	ds	1
  5527  0000A3                     ??_SetMemoryLong:
  5528  0000A3                     GetEEPROM@k:
  5529                           	opt stack 0
  5530                           
  5531                           ; 1 bytes @ 0x43
  5532  0000A3                     	ds	1
  5533  0000A4                     GetEEPROM@i:
  5534                           	opt stack 0
  5535                           
  5536                           ; 1 bytes @ 0x44
  5537  0000A4                     	ds	1
  5538  0000A5                     GetEEPROM@j:
  5539                           	opt stack 0
  5540  0000A5                     EncodeNEC@address:
  5541                           	opt stack 0
  5542  0000A5                     ReadVoltage@voltage:
  5543                           	opt stack 0
  5544  0000A5                     _fround$3800:
  5545                           	opt stack 0
  5546  0000A5                     _scale$3801:
  5547                           	opt stack 0
  5548                           
  5549                           ; 3 bytes @ 0x45
  5550  0000A5                     	ds	1
  5551  0000A6                     ??_SyncEEPROMToGlobal:
  5552                           
  5553                           ; 0 bytes @ 0x46
  5554  0000A6                     	ds	1
  5555  0000A7                     SetMemoryLong@Test:
  5556                           	opt stack 0
  5557                           
  5558                           ; 4 bytes @ 0x47
  5559  0000A7                     	ds	1
  5560  0000A8                     scale@scl:
  5561                           	opt stack 0
  5562  0000A8                     ReadVoltage@temp:
  5563                           	opt stack 0
  5564  0000A8                     _fround$3799:
  5565                           	opt stack 0
  5566                           
  5567                           ; 3 bytes @ 0x48
  5568  0000A8                     	ds	3
  5569  0000AB                     SetMemoryLong@H:
  5570                           	opt stack 0
  5571  0000AB                     fround@prec:
  5572                           	opt stack 0
  5573                           
  5574                           ; 1 bytes @ 0x4B
  5575  0000AB                     	ds	1
  5576  0000AC                     ?___ftadd:
  5577                           	opt stack 0
  5578  0000AC                     SetMemoryLong@MH:
  5579                           	opt stack 0
  5580  0000AC                     ___ftadd@f1:
  5581                           	opt stack 0
  5582                           
  5583                           ; 3 bytes @ 0x4C
  5584  0000AC                     	ds	1
  5585  0000AD                     SetMemoryLong@ML:
  5586                           	opt stack 0
  5587                           
  5588                           ; 1 bytes @ 0x4D
  5589  0000AD                     	ds	1
  5590  0000AE                     SetMemoryLong@L:
  5591                           	opt stack 0
  5592                           
  5593                           ; 1 bytes @ 0x4E
  5594  0000AE                     	ds	1
  5595  0000AF                     ??_SetEEPROM:
  5596  0000AF                     ___ftadd@f2:
  5597                           	opt stack 0
  5598                           
  5599                           ; 3 bytes @ 0x4F
  5600  0000AF                     	ds	2
  5601  0000B1                     SetEEPROM@fail:
  5602                           	opt stack 0
  5603                           
  5604                           ; 4 bytes @ 0x51
  5605  0000B1                     	ds	1
  5606  0000B2                     ??___ftadd:
  5607                           
  5608                           ; 0 bytes @ 0x52
  5609  0000B2                     	ds	3
  5610  0000B5                     SetEEPROM@temp:
  5611                           	opt stack 0
  5612  0000B5                     ___ftadd@sign:
  5613                           	opt stack 0
  5614                           
  5615                           ; 1 bytes @ 0x55
  5616  0000B5                     	ds	1
  5617  0000B6                     SetEEPROM@Arrayspot:
  5618                           	opt stack 0
  5619  0000B6                     ___ftadd@exp2:
  5620                           	opt stack 0
  5621                           
  5622                           ; 1 bytes @ 0x56
  5623  0000B6                     	ds	1
  5624  0000B7                     SetEEPROM@k:
  5625                           	opt stack 0
  5626  0000B7                     ___ftadd@exp1:
  5627                           	opt stack 0
  5628                           
  5629                           ; 1 bytes @ 0x57
  5630  0000B7                     	ds	1
  5631  0000B8                     ?___ftsub:
  5632                           	opt stack 0
  5633  0000B8                     ?___fttol:
  5634                           	opt stack 0
  5635  0000B8                     SetEEPROM@i:
  5636                           	opt stack 0
  5637  0000B8                     ___ftsub@f1:
  5638                           	opt stack 0
  5639  0000B8                     ___fttol@f1:
  5640                           	opt stack 0
  5641                           
  5642                           ; 3 bytes @ 0x58
  5643  0000B8                     	ds	1
  5644  0000B9                     SetEEPROM@j:
  5645                           	opt stack 0
  5646                           
  5647                           ; 1 bytes @ 0x59
  5648  0000B9                     	ds	1
  5649  0000BA                     ??_SetEEPROMdefault:
  5650  0000BA                     UseIRCode@Code:
  5651                           	opt stack 0
  5652                           
  5653                           ; 2 bytes @ 0x5A
  5654  0000BA                     	ds	1
  5655  0000BB                     ___ftsub@f2:
  5656                           	opt stack 0
  5657                           
  5658                           ; 3 bytes @ 0x5B
  5659  0000BB                     	ds	1
  5660  0000BC                     ??___fttol:
  5661  0000BC                     SetEEPROMdefault@k:
  5662                           	opt stack 0
  5663  0000BC                     UseIRCode@NEC:
  5664                           	opt stack 0
  5665                           
  5666                           ; 4 bytes @ 0x5C
  5667  0000BC                     	ds	1
  5668  0000BD                     SetEEPROMdefault@i:
  5669                           	opt stack 0
  5670                           
  5671                           ; 1 bytes @ 0x5D
  5672  0000BD                     	ds	1
  5673  0000BE                     SetEEPROMdefault@j:
  5674                           	opt stack 0
  5675                           
  5676                           ; 1 bytes @ 0x5E
  5677  0000BE                     	ds	2
  5678  0000C0                     ??_UseIRCode:
  5679                           
  5680                           ; 0 bytes @ 0x60
  5681  0000C0                     	ds	1
  5682  0000C1                     ___fttol@sign1:
  5683                           	opt stack 0
  5684                           
  5685                           ; 1 bytes @ 0x61
  5686  0000C1                     	ds	1
  5687  0000C2                     ___fttol@lval:
  5688                           	opt stack 0
  5689                           
  5690                           ; 4 bytes @ 0x62
  5691  0000C2                     	ds	1
  5692  0000C3                     UseIRCode@found:
  5693                           	opt stack 0
  5694                           
  5695                           ; 1 bytes @ 0x63
  5696  0000C3                     	ds	1
  5697  0000C4                     UseIRCode@j:
  5698                           	opt stack 0
  5699                           
  5700                           ; 1 bytes @ 0x64
  5701  0000C4                     	ds	1
  5702  0000C5                     UseIRCode@i:
  5703                           	opt stack 0
  5704                           
  5705                           ; 1 bytes @ 0x65
  5706  0000C5                     	ds	1
  5707  0000C6                     ___fttol@exp1:
  5708                           	opt stack 0
  5709                           
  5710                           ; 1 bytes @ 0x66
  5711  0000C6                     	ds	1
  5712  0000C7                     ?_sprintf:
  5713                           	opt stack 0
  5714  0000C7                     ?_Round:
  5715                           	opt stack 0
  5716  0000C7                     sprintf@sp:
  5717                           	opt stack 0
  5718  0000C7                     Round@input:
  5719                           	opt stack 0
  5720                           
  5721                           ; 3 bytes @ 0x67
  5722  0000C7                     	ds	2
  5723  0000C9                     sprintf@f:
  5724                           	opt stack 0
  5725                           
  5726                           ; 2 bytes @ 0x69
  5727  0000C9                     	ds	1
  5728  0000CA                     Round@temp:
  5729                           	opt stack 0
  5730                           
  5731                           ; 4 bytes @ 0x6A
  5732  0000CA                     	ds	4
  5733  0000CE                     InitUART@Baud:
  5734                           	opt stack 0
  5735                           
  5736                           ; 4 bytes @ 0x6E
  5737  0000CE                     	ds	4
  5738  0000D2                     ??_InitUART:
  5739                           
  5740                           ; 0 bytes @ 0x72
  5741  0000D2                     	ds	3
  5742  0000D5                     ??_sprintf:
  5743                           
  5744                           ; 0 bytes @ 0x75
  5745  0000D5                     	ds	6
  5746  0000DB                     tblptru	equ	0xFF8
  5747                           tblptrh	equ	0xFF7
  5748                           tblptrl	equ	0xFF6
  5749                           tablat	equ	0xFF5
  5750                           postinc0	equ	0xFEE
  5751                           wreg	equ	0xFE8
  5752                           postdec1	equ	0xFE5
  5753                           fsr1h	equ	0xFE2
  5754                           fsr1l	equ	0xFE1
  5755                           
  5756                           ; 0 bytes @ 0x7B
  5757                           
  5758                           	psect	cstackCOMRAM
  5759  000001                     __pcstackCOMRAM:
  5760                           	opt stack 0
  5761  000001                     IsCharacter@data:
  5762                           	opt stack 0
  5763  000001                     i1UARTchar@data:
  5764                           	opt stack 0
  5765  000001                     i1ReadUSART@data:
  5766                           	opt stack 0
  5767  000001                     i1cleanBuffer@data:
  5768                           	opt stack 0
  5769                           
  5770                           ; 2 bytes @ 0x0
  5771  000001                     	ds	1
  5772  000002                     EraseScreen@characters:
  5773                           	opt stack 0
  5774  000002                     i1UARTstring@data:
  5775                           	opt stack 0
  5776                           
  5777                           ; 2 bytes @ 0x1
  5778  000002                     	ds	1
  5779  000003                     EraseScreen@i:
  5780                           	opt stack 0
  5781  000003                     i1cleanBuffer@count:
  5782                           	opt stack 0
  5783                           
  5784                           ; 2 bytes @ 0x2
  5785  000003                     	ds	1
  5786  000004                     i1UARTstringCRLN@data:
  5787                           	opt stack 0
  5788                           
  5789                           ; 2 bytes @ 0x3
  5790  000004                     	ds	1
  5791  000005                     ??i1_cleanBuffer:
  5792                           
  5793                           ; 0 bytes @ 0x4
  5794  000005                     	ds	1
  5795  000006                     
  5796                           ; 0 bytes @ 0x5
  5797  000006                     	ds	2
  5798  000008                     i1cleanBuffer@i:
  5799                           	opt stack 0
  5800                           
  5801                           ; 1 bytes @ 0x7
  5802  000008                     	ds	1
  5803  000009                     ??_low_isr:
  5804                           
  5805                           ; 0 bytes @ 0x8
  5806  000009                     	ds	17
  5807  00001A                     low_isr@data:
  5808                           	opt stack 0
  5809                           
  5810                           ; 1 bytes @ 0x19
  5811  00001A                     	ds	1
  5812  00001B                     SetTimer0@temp:
  5813                           	opt stack 0
  5814  00001B                     IRrawToNEC@Raw:
  5815                           	opt stack 0
  5816  00001B                     i2cleanBuffer16bit@data:
  5817                           	opt stack 0
  5818                           
  5819                           ; 2 bytes @ 0x1A
  5820  00001B                     	ds	2
  5821  00001D                     IRrawToNEC@NEC:
  5822                           	opt stack 0
  5823  00001D                     i2cleanBuffer16bit@count:
  5824                           	opt stack 0
  5825                           
  5826                           ; 2 bytes @ 0x1C
  5827  00001D                     	ds	2
  5828  00001F                     ??i2_cleanBuffer16bit:
  5829  00001F                     IRrawToNEC@Invert:
  5830                           	opt stack 0
  5831                           
  5832                           ; 1 bytes @ 0x1E
  5833  00001F                     	ds	1
  5834  000020                     ??_IRrawToNEC:
  5835                           
  5836                           ; 0 bytes @ 0x1F
  5837  000020                     	ds	2
  5838  000022                     i2cleanBuffer16bit@i:
  5839                           	opt stack 0
  5840                           
  5841                           ; 1 bytes @ 0x21
  5842  000022                     	ds	1
  5843  000023                     high_isr@IRpin:
  5844                           	opt stack 0
  5845                           
  5846                           ; 1 bytes @ 0x22
  5847  000023                     	ds	1
  5848  000024                     high_isr@Time0:
  5849                           	opt stack 0
  5850                           
  5851                           ; 2 bytes @ 0x23
  5852  000024                     	ds	2
  5853                           tblptru	equ	0xFF8
  5854                           tblptrh	equ	0xFF7
  5855                           tblptrl	equ	0xFF6
  5856                           tablat	equ	0xFF5
  5857                           postinc0	equ	0xFEE
  5858                           wreg	equ	0xFE8
  5859                           postdec1	equ	0xFE5
  5860                           fsr1h	equ	0xFE2
  5861                           fsr1l	equ	0xFE1
  5862                           
  5863 ;;
  5864 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  5865 ;;
  5866 ;; *************** function _main *****************
  5867 ;; Defined at:
  5868 ;;		line 70 in file "main.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;		None
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  BluetoothStr  255    0[BANK3 ] unsigned char [255]
  5873 ;;  i               1  151[BANK2 ] unsigned char 
  5874 ;;  VoltageStatu    1  150[BANK2 ] unsigned char 
  5875 ;;  BluetoothStr    1  149[BANK2 ] unsigned char 
  5876 ;;  Bluetoothtas    1  148[BANK2 ] unsigned char 
  5877 ;;  IRtask          1  147[BANK2 ] unsigned char 
  5878 ;; Return value:  Size  Location     Type
  5879 ;;		None               void
  5880 ;; Registers used:
  5881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;      Locals:         0       0       0       5     255       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Totals:         0       0       0       5     255       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;Total ram usage:      260 bytes
  5892 ;; Hardware stack levels required when called:   14
  5893 ;; This function calls:
  5894 ;;		_BufferCopy
  5895 ;;		_ClearUSART
  5896 ;;		_ConfigureOscillator
  5897 ;;		_InitApp
  5898 ;;		_Init_System
  5899 ;;		_ReadIRpin
  5900 ;;		_ReadVoltage
  5901 ;;		_UARTchar
  5902 ;;		_UARTstring
  5903 ;;		_UseBluetooth
  5904 ;;		_UseIRCode
  5905 ;;		___ftadd
  5906 ;;		___ftge
  5907 ;;		___ftsub
  5908 ;;		_cleanBuffer
  5909 ;;		_delayUS
  5910 ;; This function is called by:
  5911 ;;		Startup code after reset
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           	psect	text0
  5916  00549E                     __ptext0:
  5917                           	opt stack 0
  5918  00549E                     _main:
  5919                           	opt stack 17
  5920                           
  5921                           ;main.c: 72: unsigned char i=0;
  5922                           
  5923                           ;incstack = 0
  5924  00549E  0E00               	movlw	0
  5925  0054A0  0102               	movlb	2	; () banked
  5926  0054A2  6F97               	movwf	main@i& (0+255),b
  5927                           
  5928                           ;main.c: 73: unsigned char IRtask = 0;
  5929  0054A4  0E00               	movlw	0
  5930  0054A6  0102               	movlb	2	; () banked
  5931  0054A8  6F93               	movwf	main@IRtask& (0+255),b
  5932                           
  5933                           ;main.c: 74: unsigned char Bluetoothtask = 0;
  5934  0054AA  0E00               	movlw	0
  5935  0054AC  0102               	movlb	2	; () banked
  5936  0054AE  6F94               	movwf	main@Bluetoothtask& (0+255),b
  5937                           
  5938                           ;main.c: 75: unsigned char VoltageStatus = 1;
  5939  0054B0  0E01               	movlw	1
  5940  0054B2  0102               	movlb	2	; () banked
  5941  0054B4  6F96               	movwf	main@VoltageStatus& (0+255),b
  5942                           
  5943                           ;main.c: 76: unsigned char BluetoothString[255];
  5944                           ;main.c: 77: unsigned char BluetoothStringPos = 0;
  5945  0054B6  0E00               	movlw	0
  5946  0054B8  0102               	movlb	2	; () banked
  5947  0054BA  6F95               	movwf	main@BluetoothStringPos& (0+255),b
  5948                           
  5949                           ; BSR set to: 2
  5950                           ;main.c: 80: ConfigureOscillator();
  5951  0054BC  ECBD  F04A         	call	_ConfigureOscillator	;wreg free
  5952                           
  5953                           ;main.c: 81: InitApp();
  5954  0054C0  EC1B  F048         	call	_InitApp	;wreg free
  5955                           
  5956                           ;main.c: 82: Init_System();
  5957  0054C4  EC3E  F044         	call	_Init_System	;wreg free
  5958                           
  5959                           ;main.c: 84: BatteryVoltage = ReadVoltage();
  5960  0054C8  EC20  F040         	call	_ReadVoltage	;wreg free
  5961  0054CC  C0A2  F0DB         	movff	?_ReadVoltage,_BatteryVoltage
  5962  0054D0  C0A3  F0DC         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  5963  0054D4  C0A4  F0DD         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  5964                           
  5965                           ;main.c: 85: if(BatteryVoltage < 3.7 )
  5966  0054D8  C0DB  F079         	movff	_BatteryVoltage,___ftge@ff1
  5967  0054DC  C0DC  F07A         	movff	_BatteryVoltage+1,___ftge@ff1+1
  5968  0054E0  C0DD  F07B         	movff	_BatteryVoltage+2,___ftge@ff1+2
  5969  0054E4  0ECD               	movlw	205
  5970  0054E6  0100               	movlb	0	; () banked
  5971  0054E8  6F7C               	movwf	___ftge@ff2& (0+255),b
  5972  0054EA  0E6C               	movlw	108
  5973  0054EC  0100               	movlb	0	; () banked
  5974  0054EE  6F7D               	movwf	(___ftge@ff2+1)& (0+255),b
  5975  0054F0  0E40               	movlw	64
  5976  0054F2  0100               	movlb	0	; () banked
  5977  0054F4  6F7E               	movwf	(___ftge@ff2+2)& (0+255),b
  5978  0054F6  EC92  F03E         	call	___ftge	;wreg free
  5979  0054FA  0100               	movlb	0	; () banked
  5980  0054FC  B0D8               	btfsc	status,0,c
  5981  0054FE  D002               	goto	l16291
  5982                           
  5983                           ; BSR set to: 0
  5984                           ;main.c: 86: {
  5985                           ;main.c: 87: VoltageStatus = 34;
  5986  005500  0E22               	movlw	34
  5987  005502  D015               	goto	L1
  5988  005504                     l16291:
  5989                           
  5990                           ;main.c: 89: else if (BatteryVoltage > 30.0)
  5991  005504  0E00               	movlw	0
  5992  005506  0100               	movlb	0	; () banked
  5993  005508  6F79               	movwf	___ftge@ff1& (0+255),b
  5994  00550A  0EF0               	movlw	240
  5995  00550C  0100               	movlb	0	; () banked
  5996  00550E  6F7A               	movwf	(___ftge@ff1+1)& (0+255),b
  5997  005510  0E41               	movlw	65
  5998  005512  0100               	movlb	0	; () banked
  5999  005514  6F7B               	movwf	(___ftge@ff1+2)& (0+255),b
  6000  005516  C0DB  F07C         	movff	_BatteryVoltage,___ftge@ff2
  6001  00551A  C0DC  F07D         	movff	_BatteryVoltage+1,___ftge@ff2+1
  6002  00551E  C0DD  F07E         	movff	_BatteryVoltage+2,___ftge@ff2+2
  6003  005522  EC92  F03E         	call	___ftge	;wreg free
  6004  005526  0100               	movlb	0	; () banked
  6005  005528  B0D8               	btfsc	status,0,c
  6006  00552A  D004               	goto	l16295
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;main.c: 90: {
  6010                           ;main.c: 91: VoltageStatus = 98;
  6011  00552C  0E62               	movlw	98
  6012  00552E                     L1:
  6013  00552E  0102               	movlb	2	; () banked
  6014  005530  6F96               	movwf	main@VoltageStatus& (0+255),b
  6015                           
  6016                           ; BSR set to: 2
  6017  005532  D000               	goto	l16295
  6018  005534                     l16295:
  6019                           
  6020                           ;main.c: 92: }
  6021                           ;main.c: 93: if(VoltageStatus == 1)
  6022  005534  0102               	movlb	2	; () banked
  6023  005536  0596               	decf	main@VoltageStatus& (0+255),w,b
  6024  005538  A4D8               	btfss	status,2,c
  6025  00553A  D027               	goto	l16317
  6026                           
  6027                           ; BSR set to: 2
  6028                           ;main.c: 94: {
  6029                           ;main.c: 96: for(i =0;i<10;i++)
  6030  00553C  0E00               	movlw	0
  6031  00553E  0102               	movlb	2	; () banked
  6032  005540  6F97               	movwf	main@i& (0+255),b
  6033  005542                     l16299:
  6034                           
  6035                           ; BSR set to: 2
  6036  005542  0E09               	movlw	9
  6037  005544  0102               	movlb	2	; () banked
  6038  005546  6597               	cpfsgt	main@i& (0+255),b
  6039  005548  D001               	goto	l16303
  6040                           
  6041                           ; BSR set to: 2
  6042  00554A  D01D               	goto	l16315
  6043  00554C                     l16303:
  6044                           
  6045                           ; BSR set to: 2
  6046                           ;main.c: 97: {
  6047                           ;main.c: 98: (LATC |= 0x02);
  6048  00554C  828B               	bsf	3979,1,c	;volatile
  6049                           
  6050                           ;main.c: 99: (LATC &= ~0x04);
  6051  00554E  948B               	bcf	3979,2,c	;volatile
  6052                           
  6053                           ; BSR set to: 2
  6054                           ;main.c: 100: delayUS(50000);
  6055  005550  0E50               	movlw	80
  6056  005552  0100               	movlb	0	; () banked
  6057  005554  6F79               	movwf	delayUS@US& (0+255),b
  6058  005556  0EC3               	movlw	195
  6059  005558  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6060  00555A  0E00               	movlw	0
  6061  00555C  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6062  00555E  0E00               	movlw	0
  6063  005560  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6064  005562  EC57  F047         	call	_delayUS	;wreg free
  6065                           
  6066                           ;main.c: 101: (LATC &= ~0x02);
  6067  005566  928B               	bcf	3979,1,c	;volatile
  6068                           
  6069                           ;main.c: 102: (LATC |= 0x04);
  6070  005568  848B               	bsf	3979,2,c	;volatile
  6071                           
  6072                           ;main.c: 103: delayUS(50000);
  6073  00556A  0E50               	movlw	80
  6074  00556C  0100               	movlb	0	; () banked
  6075  00556E  6F79               	movwf	delayUS@US& (0+255),b
  6076  005570  0EC3               	movlw	195
  6077  005572  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6078  005574  0E00               	movlw	0
  6079  005576  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6080  005578  0E00               	movlw	0
  6081  00557A  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6082  00557C  EC57  F047         	call	_delayUS	;wreg free
  6083  005580  0102               	movlb	2	; () banked
  6084  005582  2B97               	incf	main@i& (0+255),f,b
  6085  005584  D7DE               	goto	l16299
  6086  005586                     l16315:
  6087                           
  6088                           ; BSR set to: 2
  6089                           ;main.c: 104: }
  6090                           ;main.c: 105: (LATC &= ~0x04);
  6091  005586  948B               	bcf	3979,2,c	;volatile
  6092                           
  6093                           ;main.c: 106: }
  6094  005588  D024               	goto	l134
  6095  00558A                     l16317:
  6096                           
  6097                           ; BSR set to: 2
  6098                           ;main.c: 107: else
  6099                           ;main.c: 108: {
  6100                           ;main.c: 109: for(i =0;i<10;i++)
  6101  00558A  0E00               	movlw	0
  6102  00558C  0102               	movlb	2	; () banked
  6103  00558E  6F97               	movwf	main@i& (0+255),b
  6104  005590                     l16319:
  6105                           
  6106                           ; BSR set to: 2
  6107  005590  0E09               	movlw	9
  6108  005592  0102               	movlb	2	; () banked
  6109  005594  6597               	cpfsgt	main@i& (0+255),b
  6110  005596  D001               	goto	l16323
  6111                           
  6112                           ; BSR set to: 2
  6113  005598  D01C               	goto	l134
  6114  00559A                     l16323:
  6115                           
  6116                           ; BSR set to: 2
  6117                           ;main.c: 110: {
  6118                           ;main.c: 111: (LATC |= 0x02);
  6119  00559A  828B               	bsf	3979,1,c	;volatile
  6120                           
  6121                           ; BSR set to: 2
  6122                           ;main.c: 112: delayUS(100000);
  6123  00559C  0EA0               	movlw	160
  6124  00559E  0100               	movlb	0	; () banked
  6125  0055A0  6F79               	movwf	delayUS@US& (0+255),b
  6126  0055A2  0E86               	movlw	134
  6127  0055A4  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6128  0055A6  0E01               	movlw	1
  6129  0055A8  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6130  0055AA  0E00               	movlw	0
  6131  0055AC  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6132  0055AE  EC57  F047         	call	_delayUS	;wreg free
  6133                           
  6134                           ;main.c: 113: (LATC &= ~0x02);
  6135  0055B2  928B               	bcf	3979,1,c	;volatile
  6136                           
  6137                           ;main.c: 114: delayUS(100000);
  6138  0055B4  0EA0               	movlw	160
  6139  0055B6  0100               	movlb	0	; () banked
  6140  0055B8  6F79               	movwf	delayUS@US& (0+255),b
  6141  0055BA  0E86               	movlw	134
  6142  0055BC  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6143  0055BE  0E01               	movlw	1
  6144  0055C0  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6145  0055C2  0E00               	movlw	0
  6146  0055C4  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6147  0055C6  EC57  F047         	call	_delayUS	;wreg free
  6148  0055CA  0102               	movlb	2	; () banked
  6149  0055CC  2B97               	incf	main@i& (0+255),f,b
  6150  0055CE  D7E0               	goto	l16319
  6151                           
  6152                           ; BSR set to: 2
  6153                           
  6154                           ; BSR set to: 2
  6155  0055D0  D000               	goto	l134
  6156  0055D2                     l134:
  6157                           
  6158                           ;main.c: 119: {
  6159                           ;main.c: 120: IRtask = IR_New_Code;
  6160  0055D2  C0E5  F293         	movff	_IR_New_Code,main@IRtask
  6161                           
  6162                           ;main.c: 121: Bluetoothtask = NewReceivedString;
  6163  0055D6  C0DF  F294         	movff	_NewReceivedString,main@Bluetoothtask	;volatile
  6164                           
  6165                           ;main.c: 122: BatteryVoltage = ReadVoltage();
  6166  0055DA  EC20  F040         	call	_ReadVoltage	;wreg free
  6167  0055DE  C0A2  F0DB         	movff	?_ReadVoltage,_BatteryVoltage
  6168  0055E2  C0A3  F0DC         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  6169  0055E6  C0A4  F0DD         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  6170                           
  6171                           ;main.c: 123: if(VoltageStatus == 34)
  6172  0055EA  0E22               	movlw	34
  6173  0055EC  0102               	movlb	2	; () banked
  6174  0055EE  1996               	xorwf	main@VoltageStatus& (0+255),w,b
  6175  0055F0  A4D8               	btfss	status,2,c
  6176  0055F2  D018               	goto	l16339
  6177                           
  6178                           ; BSR set to: 2
  6179                           ;main.c: 124: {
  6180                           ;main.c: 126: BatteryVoltage -= 0.5;
  6181  0055F4  C0DB  F0B8         	movff	_BatteryVoltage,___ftsub@f1
  6182  0055F8  C0DC  F0B9         	movff	_BatteryVoltage+1,___ftsub@f1+1
  6183  0055FC  C0DD  F0BA         	movff	_BatteryVoltage+2,___ftsub@f1+2
  6184  005600  0E00               	movlw	0
  6185  005602  0100               	movlb	0	; () banked
  6186  005604  6FBB               	movwf	___ftsub@f2& (0+255),b
  6187  005606  0E00               	movlw	0
  6188  005608  0100               	movlb	0	; () banked
  6189  00560A  6FBC               	movwf	(___ftsub@f2+1)& (0+255),b
  6190  00560C  0E3F               	movlw	63
  6191  00560E  0100               	movlb	0	; () banked
  6192  005610  6FBD               	movwf	(___ftsub@f2+2)& (0+255),b
  6193  005612  ECAC  F047         	call	___ftsub	;wreg free
  6194  005616  C0B8  F0DB         	movff	?___ftsub,_BatteryVoltage
  6195  00561A  C0B9  F0DC         	movff	?___ftsub+1,_BatteryVoltage+1
  6196  00561E  C0BA  F0DD         	movff	?___ftsub+2,_BatteryVoltage+2
  6197                           
  6198                           ;main.c: 127: }
  6199  005622  D01D               	goto	l136
  6200  005624                     l16339:
  6201                           
  6202                           ;main.c: 128: else if(VoltageStatus == 98)
  6203  005624  0E62               	movlw	98
  6204  005626  0102               	movlb	2	; () banked
  6205  005628  1996               	xorwf	main@VoltageStatus& (0+255),w,b
  6206  00562A  A4D8               	btfss	status,2,c
  6207  00562C  D018               	goto	l136
  6208                           
  6209                           ; BSR set to: 2
  6210                           ;main.c: 129: {
  6211                           ;main.c: 131: BatteryVoltage += 0.5;
  6212  00562E  C0DB  F0AC         	movff	_BatteryVoltage,___ftadd@f1
  6213  005632  C0DC  F0AD         	movff	_BatteryVoltage+1,___ftadd@f1+1
  6214  005636  C0DD  F0AE         	movff	_BatteryVoltage+2,___ftadd@f1+2
  6215  00563A  0E00               	movlw	0
  6216  00563C  0100               	movlb	0	; () banked
  6217  00563E  6FAF               	movwf	___ftadd@f2& (0+255),b
  6218  005640  0E00               	movlw	0
  6219  005642  0100               	movlb	0	; () banked
  6220  005644  6FB0               	movwf	(___ftadd@f2+1)& (0+255),b
  6221  005646  0E3F               	movlw	63
  6222  005648  0100               	movlb	0	; () banked
  6223  00564A  6FB1               	movwf	(___ftadd@f2+2)& (0+255),b
  6224  00564C  EC8F  F02D         	call	___ftadd	;wreg free
  6225  005650  C0AC  F0DB         	movff	?___ftadd,_BatteryVoltage
  6226  005654  C0AD  F0DC         	movff	?___ftadd+1,_BatteryVoltage+1
  6227  005658  C0AE  F0DD         	movff	?___ftadd+2,_BatteryVoltage+2
  6228  00565C  D000               	goto	l136
  6229  00565E                     l136:
  6230                           
  6231                           ;main.c: 132: }
  6232                           ;main.c: 134: if(BatteryVoltage < 3.7 )
  6233  00565E  C0DB  F079         	movff	_BatteryVoltage,___ftge@ff1
  6234  005662  C0DC  F07A         	movff	_BatteryVoltage+1,___ftge@ff1+1
  6235  005666  C0DD  F07B         	movff	_BatteryVoltage+2,___ftge@ff1+2
  6236  00566A  0ECD               	movlw	205
  6237  00566C  0100               	movlb	0	; () banked
  6238  00566E  6F7C               	movwf	___ftge@ff2& (0+255),b
  6239  005670  0E6C               	movlw	108
  6240  005672  0100               	movlb	0	; () banked
  6241  005674  6F7D               	movwf	(___ftge@ff2+1)& (0+255),b
  6242  005676  0E40               	movlw	64
  6243  005678  0100               	movlb	0	; () banked
  6244  00567A  6F7E               	movwf	(___ftge@ff2+2)& (0+255),b
  6245  00567C  EC92  F03E         	call	___ftge	;wreg free
  6246  005680  0100               	movlb	0	; () banked
  6247  005682  B0D8               	btfsc	status,0,c
  6248  005684  D002               	goto	l16345
  6249                           
  6250                           ; BSR set to: 0
  6251                           ;main.c: 135: {
  6252                           ;main.c: 136: VoltageStatus = 34;
  6253  005686  0E22               	movlw	34
  6254  005688  D017               	goto	L3
  6255  00568A                     l16345:
  6256                           
  6257                           ;main.c: 138: else if(BatteryVoltage > 30.0)
  6258  00568A  0E00               	movlw	0
  6259  00568C  0100               	movlb	0	; () banked
  6260  00568E  6F79               	movwf	___ftge@ff1& (0+255),b
  6261  005690  0EF0               	movlw	240
  6262  005692  0100               	movlb	0	; () banked
  6263  005694  6F7A               	movwf	(___ftge@ff1+1)& (0+255),b
  6264  005696  0E41               	movlw	65
  6265  005698  0100               	movlb	0	; () banked
  6266  00569A  6F7B               	movwf	(___ftge@ff1+2)& (0+255),b
  6267  00569C  C0DB  F07C         	movff	_BatteryVoltage,___ftge@ff2
  6268  0056A0  C0DC  F07D         	movff	_BatteryVoltage+1,___ftge@ff2+1
  6269  0056A4  C0DD  F07E         	movff	_BatteryVoltage+2,___ftge@ff2+2
  6270  0056A8  EC92  F03E         	call	___ftge	;wreg free
  6271  0056AC  0100               	movlb	0	; () banked
  6272  0056AE  B0D8               	btfsc	status,0,c
  6273  0056B0  D002               	goto	l16349
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;main.c: 139: {
  6277                           ;main.c: 140: VoltageStatus = 98;
  6278  0056B2  0E62               	movlw	98
  6279  0056B4  D001               	goto	L3
  6280  0056B6                     l16349:
  6281                           
  6282                           ;main.c: 142: else
  6283                           ;main.c: 143: {
  6284                           ;main.c: 144: VoltageStatus = 1;
  6285  0056B6  0E01               	movlw	1
  6286  0056B8                     L3:
  6287  0056B8  0102               	movlb	2	; () banked
  6288  0056BA  6F96               	movwf	main@VoltageStatus& (0+255),b
  6289  0056BC  D000               	goto	l139
  6290  0056BE                     l139:
  6291                           
  6292                           ; BSR set to: 2
  6293                           ;main.c: 145: }
  6294                           ;main.c: 147: if(IRtask && IR_NEC)
  6295  0056BE  0102               	movlb	2	; () banked
  6296  0056C0  5193               	movf	main@IRtask& (0+255),w,b
  6297  0056C2  0102               	movlb	2	; () banked
  6298  0056C4  B4D8               	btfsc	status,2,c
  6299  0056C6  D01B               	goto	l16355
  6300                           
  6301                           ; BSR set to: 2
  6302  0056C8  0100               	movlb	0	; () banked
  6303  0056CA  51E1               	movf	_IR_NEC& (0+255),w,b
  6304  0056CC  0100               	movlb	0	; () banked
  6305  0056CE  11E2               	iorwf	(_IR_NEC+1)& (0+255),w,b
  6306  0056D0  0100               	movlb	0	; () banked
  6307  0056D2  11E3               	iorwf	(_IR_NEC+2)& (0+255),w,b
  6308  0056D4  0100               	movlb	0	; () banked
  6309  0056D6  11E4               	iorwf	(_IR_NEC+3)& (0+255),w,b
  6310  0056D8  B4D8               	btfsc	status,2,c
  6311  0056DA  D011               	goto	l16355
  6312                           
  6313                           ; BSR set to: 0
  6314                           ;main.c: 148: {
  6315                           ;main.c: 149: UseIRCode(&IR_New_Code, IR_NEC);
  6316  0056DC  0EE5               	movlw	low _IR_New_Code
  6317  0056DE  0100               	movlb	0	; () banked
  6318  0056E0  6FBA               	movwf	UseIRCode@Code& (0+255),b
  6319  0056E2  0E00               	movlw	high _IR_New_Code
  6320  0056E4  0100               	movlb	0	; () banked
  6321  0056E6  6FBB               	movwf	(UseIRCode@Code+1)& (0+255),b
  6322  0056E8  C0E1  F0BC         	movff	_IR_NEC,UseIRCode@NEC
  6323  0056EC  C0E2  F0BD         	movff	_IR_NEC+1,UseIRCode@NEC+1
  6324  0056F0  C0E3  F0BE         	movff	_IR_NEC+2,UseIRCode@NEC+2
  6325  0056F4  C0E4  F0BF         	movff	_IR_NEC+3,UseIRCode@NEC+3
  6326  0056F8  ECCE  F02E         	call	_UseIRCode	;wreg free
  6327  0056FC  D000               	goto	l16355
  6328  0056FE                     l16355:
  6329                           
  6330                           ;main.c: 150: }
  6331                           ;main.c: 152: if(Bluetoothtask >= 1)
  6332  0056FE  0102               	movlb	2	; () banked
  6333  005700  5194               	movf	main@Bluetoothtask& (0+255),w,b
  6334  005702  0102               	movlb	2	; () banked
  6335  005704  B4D8               	btfsc	status,2,c
  6336  005706  D061               	goto	l16395
  6337                           
  6338                           ; BSR set to: 2
  6339                           ;main.c: 153: {
  6340                           ;main.c: 154: cleanBuffer(BluetoothString, 255);
  6341  005708  0E00               	movlw	low main@BluetoothString
  6342  00570A  0100               	movlb	0	; () banked
  6343  00570C  6F79               	movwf	cleanBuffer@data& (0+255),b
  6344  00570E  0E03               	movlw	high main@BluetoothString
  6345  005710  0100               	movlb	0	; () banked
  6346  005712  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
  6347  005714  0E00               	movlw	0
  6348  005716  0100               	movlb	0	; () banked
  6349  005718  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
  6350  00571A  697B               	setf	cleanBuffer@count& (0+255),b
  6351  00571C  ECA6  F046         	call	_cleanBuffer	;wreg free
  6352                           
  6353                           ;main.c: 155: BufferCopy(ReceivedString,BluetoothString, ReceivedStringPos, 0);
  6354  005720  0E00               	movlw	low _ReceivedString
  6355  005722  0100               	movlb	0	; () banked
  6356  005724  6F81               	movwf	BufferCopy@from& (0+255),b
  6357  005726  0E06               	movlw	high _ReceivedString
  6358  005728  0100               	movlb	0	; () banked
  6359  00572A  6F82               	movwf	(BufferCopy@from+1)& (0+255),b
  6360  00572C  0E00               	movlw	low main@BluetoothString
  6361  00572E  0100               	movlb	0	; () banked
  6362  005730  6F83               	movwf	BufferCopy@to& (0+255),b
  6363  005732  0E03               	movlw	high main@BluetoothString
  6364  005734  0100               	movlb	0	; () banked
  6365  005736  6F84               	movwf	(BufferCopy@to+1)& (0+255),b
  6366  005738  C0E0  F085         	movff	_ReceivedStringPos,BufferCopy@count
  6367  00573C  0E00               	movlw	0
  6368  00573E  0100               	movlb	0	; () banked
  6369  005740  6F86               	movwf	BufferCopy@shift& (0+255),b
  6370  005742  ECB6  F043         	call	_BufferCopy	;wreg free
  6371                           
  6372                           ;main.c: 156: BluetoothStringPos = ReceivedStringPos;
  6373  005746  C0E0  F295         	movff	_ReceivedStringPos,main@BluetoothStringPos
  6374                           
  6375                           ;main.c: 157: cleanBuffer(ReceivedString, ReceivedStringPos);
  6376  00574A  0E00               	movlw	low _ReceivedString
  6377  00574C  0100               	movlb	0	; () banked
  6378  00574E  6F79               	movwf	cleanBuffer@data& (0+255),b
  6379  005750  0E06               	movlw	high _ReceivedString
  6380  005752  0100               	movlb	0	; () banked
  6381  005754  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
  6382  005756  C0E0  F07B         	movff	_ReceivedStringPos,cleanBuffer@count
  6383  00575A  0100               	movlb	0	; () banked
  6384  00575C  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
  6385  00575E  ECA6  F046         	call	_cleanBuffer	;wreg free
  6386                           
  6387                           ;main.c: 158: ReceivedStringPos = 0;
  6388  005762  0E00               	movlw	0
  6389  005764  0100               	movlb	0	; () banked
  6390  005766  6FE0               	movwf	_ReceivedStringPos& (0+255),b
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;main.c: 159: NewReceivedString = 0;
  6394  005768  0E00               	movlw	0
  6395  00576A  0100               	movlb	0	; () banked
  6396  00576C  6FDF               	movwf	_NewReceivedString& (0+255),b	;volatile
  6397                           
  6398                           ; BSR set to: 0
  6399                           ;main.c: 160: if(BluetoothString[0] != 0)
  6400  00576E  0103               	movlb	3	; () banked
  6401  005770  5100               	movf	main@BluetoothString& (0+255),w,b
  6402  005772  0103               	movlb	3	; () banked
  6403  005774  B4D8               	btfsc	status,2,c
  6404  005776  D00B               	goto	l16373
  6405                           
  6406                           ; BSR set to: 3
  6407                           ;main.c: 161: {
  6408                           ;main.c: 162: UseBluetooth(&BluetoothString, BluetoothStringPos);
  6409  005778  0E00               	movlw	low main@BluetoothString
  6410  00577A  0102               	movlb	2	; () banked
  6411  00577C  6F00               	movwf	UseBluetooth@String& (0+255),b
  6412  00577E  0E03               	movlw	high main@BluetoothString
  6413  005780  0102               	movlb	2	; () banked
  6414  005782  6F01               	movwf	(UseBluetooth@String+1)& (0+255),b
  6415  005784  C295  F202         	movff	main@BluetoothStringPos,UseBluetooth@StringPos
  6416  005788  ECFB  F000         	call	_UseBluetooth	;wreg free
  6417  00578C  D000               	goto	l16373
  6418  00578E                     l16373:
  6419                           
  6420                           ;main.c: 163: }
  6421                           ;main.c: 164: UARTstring(CRLN);
  6422  00578E  0ED1               	movlw	low _CRLN
  6423  005790  0100               	movlb	0	; () banked
  6424  005792  6F7A               	movwf	UARTstring@data& (0+255),b
  6425  005794  0EF0               	movlw	high _CRLN
  6426  005796  0100               	movlb	0	; () banked
  6427  005798  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  6428  00579A  ECD3  F046         	call	_UARTstring	;wreg free
  6429                           
  6430                           ;main.c: 165: UARTchar('>');
  6431  00579E  0E3E               	movlw	62
  6432  0057A0  ECBF  F049         	call	_UARTchar
  6433                           
  6434                           ;main.c: 166: if(IR_New_Code)
  6435  0057A4  0100               	movlb	0	; () banked
  6436  0057A6  51E5               	movf	_IR_New_Code& (0+255),w,b
  6437  0057A8  B4D8               	btfsc	status,2,c
  6438  0057AA  D004               	goto	l16381
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;main.c: 167: {
  6442                           ;main.c: 168: IR_New_Code = 0;
  6443  0057AC  0E00               	movlw	0
  6444  0057AE  0100               	movlb	0	; () banked
  6445  0057B0  6FE5               	movwf	_IR_New_Code& (0+255),b
  6446  0057B2  D000               	goto	l16381
  6447  0057B4                     l16381:
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;main.c: 169: }
  6451                           ;main.c: 171: IRpinOLD = ReadIRpin();
  6452  0057B4  EC72  F04A         	call	_ReadIRpin	;wreg free
  6453  0057B8  6E2E               	movwf	_IRpinOLD,c
  6454                           
  6455                           ;main.c: 172: INTCONbits.RBIF = 0;
  6456  0057BA  90F2               	bcf	intcon,0,c	;volatile
  6457                           
  6458                           ;main.c: 173: (IOCBbits.IOCB4 = 1);
  6459  0057BC  887D               	bsf	3965,4,c	;volatile
  6460                           
  6461                           ;main.c: 174: INTCONbits.RBIE = 1;
  6462  0057BE  86F2               	bsf	intcon,3,c	;volatile
  6463                           
  6464                           ;main.c: 175: ClearUSART();
  6465  0057C0  EC5D  F04A         	call	_ClearUSART	;wreg free
  6466                           
  6467                           ;main.c: 176: PIR1bits.RCIF = 0;
  6468  0057C4  9A9E               	bcf	3998,5,c	;volatile
  6469                           
  6470                           ;main.c: 177: PIE1bits.RCIE = 1;
  6471  0057C6  8A9D               	bsf	3997,5,c	;volatile
  6472  0057C8  D000               	goto	l16395
  6473  0057CA                     l16395:
  6474                           
  6475                           ;main.c: 178: }
  6476                           ;main.c: 180: if(IRtimeout < 5000)
  6477  0057CA  0102               	movlb	2	; () banked
  6478  0057CC  51CD               	movf	(_IRtimeout+3)& (0+255),w,b
  6479  0057CE  0102               	movlb	2	; () banked
  6480  0057D0  11CC               	iorwf	(_IRtimeout+2)& (0+255),w,b
  6481  0057D2  E110               	bnz	l16399
  6482  0057D4  0E88               	movlw	136
  6483  0057D6  0102               	movlb	2	; () banked
  6484  0057D8  5DCA               	subwf	_IRtimeout& (0+255),w,b
  6485  0057DA  0E13               	movlw	19
  6486  0057DC  0102               	movlb	2	; () banked
  6487  0057DE  59CB               	subwfb	(_IRtimeout+1)& (0+255),w,b
  6488  0057E0  B0D8               	btfsc	status,0,c
  6489  0057E2  D008               	goto	l16399
  6490                           
  6491                           ; BSR set to: 2
  6492                           ;main.c: 181: {
  6493                           ;main.c: 182: IRtimeout++;
  6494  0057E4  0E01               	movlw	1
  6495  0057E6  0102               	movlb	2	; () banked
  6496  0057E8  27CA               	addwf	_IRtimeout& (0+255),f,b
  6497  0057EA  0E00               	movlw	0
  6498  0057EC  23CB               	addwfc	(_IRtimeout+1)& (0+255),f,b
  6499  0057EE  23CC               	addwfc	(_IRtimeout+2)& (0+255),f,b
  6500  0057F0  23CD               	addwfc	(_IRtimeout+3)& (0+255),f,b
  6501                           
  6502                           ;main.c: 183: }
  6503  0057F2  D6EF               	goto	l134
  6504  0057F4                     l16399:
  6505                           
  6506                           ; BSR set to: 2
  6507                           ;main.c: 184: else if(IRtimeout == 5000)
  6508  0057F4  0E88               	movlw	136
  6509  0057F6  0102               	movlb	2	; () banked
  6510  0057F8  19CA               	xorwf	_IRtimeout& (0+255),w,b
  6511  0057FA  E108               	bnz	u20611
  6512  0057FC  0E13               	movlw	19
  6513  0057FE  0102               	movlb	2	; () banked
  6514  005800  19CB               	xorwf	(_IRtimeout+1)& (0+255),w,b
  6515  005802  0102               	movlb	2	; () banked
  6516  005804  11CC               	iorwf	(_IRtimeout+2)& (0+255),w,b
  6517  005806  0102               	movlb	2	; () banked
  6518  005808  11CD               	iorwf	(_IRtimeout+3)& (0+255),w,b
  6519  00580A  A4D8               	btfss	status,2,c
  6520  00580C                     u20611:
  6521  00580C  D6E2               	goto	l134
  6522                           
  6523                           ; BSR set to: 2
  6524                           ;main.c: 185: {
  6525                           ;main.c: 186: IRtimeout++;
  6526  00580E  0E01               	movlw	1
  6527  005810  0102               	movlb	2	; () banked
  6528  005812  27CA               	addwf	_IRtimeout& (0+255),f,b
  6529  005814  0E00               	movlw	0
  6530  005816  23CB               	addwfc	(_IRtimeout+1)& (0+255),f,b
  6531  005818  23CC               	addwfc	(_IRtimeout+2)& (0+255),f,b
  6532  00581A  23CD               	addwfc	(_IRtimeout+3)& (0+255),f,b
  6533                           
  6534                           ; BSR set to: 2
  6535                           ;main.c: 187: IR_NEC = 0;
  6536  00581C  0E00               	movlw	0
  6537  00581E  0100               	movlb	0	; () banked
  6538  005820  6FE1               	movwf	_IR_NEC& (0+255),b
  6539  005822  0E00               	movlw	0
  6540  005824  6FE2               	movwf	(_IR_NEC+1)& (0+255),b
  6541  005826  0E00               	movlw	0
  6542  005828  6FE3               	movwf	(_IR_NEC+2)& (0+255),b
  6543  00582A  0E00               	movlw	0
  6544  00582C  6FE4               	movwf	(_IR_NEC+3)& (0+255),b
  6545                           
  6546                           ; BSR set to: 0
  6547                           ;main.c: 188: IR_New_Code = 0;
  6548  00582E  0E00               	movlw	0
  6549  005830  0100               	movlb	0	; () banked
  6550  005832  6FE5               	movwf	_IR_New_Code& (0+255),b
  6551                           
  6552                           ; BSR set to: 0
  6553                           ;main.c: 189: IRpinOLD = ReadIRpin();
  6554  005834  EC72  F04A         	call	_ReadIRpin	;wreg free
  6555  005838  6E2E               	movwf	_IRpinOLD,c
  6556                           
  6557                           ;main.c: 190: INTCONbits.RBIF = 0;
  6558  00583A  90F2               	bcf	intcon,0,c	;volatile
  6559                           
  6560                           ;main.c: 191: (IOCBbits.IOCB4 = 1);
  6561  00583C  887D               	bsf	3965,4,c	;volatile
  6562                           
  6563                           ;main.c: 192: INTCONbits.RBIE = 1;
  6564  00583E  86F2               	bsf	intcon,3,c	;volatile
  6565  005840  D6C8               	goto	l134
  6566  005842  EFF9  F000         	goto	start
  6567  005846                     __end_of_main:
  6568                           	opt stack 0
  6569                           tblptru	equ	0xFF8
  6570                           tblptrh	equ	0xFF7
  6571                           tblptrl	equ	0xFF6
  6572                           tablat	equ	0xFF5
  6573                           intcon	equ	0xFF2
  6574                           postinc0	equ	0xFEE
  6575                           wreg	equ	0xFE8
  6576                           postdec1	equ	0xFE5
  6577                           fsr1h	equ	0xFE2
  6578                           fsr1l	equ	0xFE1
  6579                           status	equ	0xFD8
  6580                           
  6581 ;; *************** function _UseIRCode *****************
  6582 ;; Defined at:
  6583 ;;		line 279 in file "IR.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;  Code            2   90[BANK0 ] PTR unsigned char 
  6586 ;;		 -> IR_New_Code(1), 
  6587 ;;  NEC             4   92[BANK0 ] unsigned long 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;  i               1  101[BANK0 ] unsigned char 
  6590 ;;  j               1  100[BANK0 ] unsigned char 
  6591 ;;  found           1   99[BANK0 ] unsigned char 
  6592 ;; Return value:  Size  Location     Type
  6593 ;;		None               void
  6594 ;; Registers used:
  6595 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6601 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6602 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6603 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6604 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6605 ;;Total ram usage:       12 bytes
  6606 ;; Hardware stack levels used:    1
  6607 ;; Hardware stack levels required when called:   11
  6608 ;; This function calls:
  6609 ;;		_DecodeNEC
  6610 ;;		_LEDTimerON
  6611 ;;		_ReadCodeButtons
  6612 ;;		_ReadIRpin
  6613 ;;		_ReadPushButton
  6614 ;;		_SendRF_Channel
  6615 ;;		_SyncGlobalToEEPROM
  6616 ;;		_delayUS
  6617 ;; This function is called by:
  6618 ;;		_main
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text1
  6623  005D9C                     __ptext1:
  6624                           	opt stack 0
  6625  005D9C                     _UseIRCode:
  6626                           	opt stack 19
  6627                           
  6628                           ;IR.c: 281: unsigned char i,j;
  6629                           ;IR.c: 282: unsigned char found = 0;
  6630                           
  6631                           ;incstack = 0
  6632  005D9C  0E00               	movlw	0
  6633  005D9E  0100               	movlb	0	; () banked
  6634  005DA0  6FC3               	movwf	UseIRCode@found& (0+255),b
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;IR.c: 284: LEDTimerON();
  6638  005DA2  EC35  F04A         	call	_LEDTimerON	;wreg free
  6639                           
  6640                           ;IR.c: 285: if(*Code == 2 || *Code == 1)
  6641  005DA6  C0BA  FFD9         	movff	UseIRCode@Code,fsr2l
  6642  005DAA  C0BB  FFDA         	movff	UseIRCode@Code+1,fsr2h
  6643  005DAE  0E02               	movlw	2
  6644  005DB0  18DE               	xorwf	postinc2,w,c
  6645  005DB2  B4D8               	btfsc	status,2,c
  6646  005DB4  D007               	goto	l15343
  6647  005DB6  C0BA  FFD9         	movff	UseIRCode@Code,fsr2l
  6648  005DBA  C0BB  FFDA         	movff	UseIRCode@Code+1,fsr2h
  6649  005DBE  04DE               	decf	postinc2,w,c
  6650  005DC0  A4D8               	btfss	status,2,c
  6651  005DC2  D112               	goto	l15429
  6652  005DC4                     l15343:
  6653                           
  6654                           ;IR.c: 286: {
  6655                           ;IR.c: 287: DecodeNEC(NEC, &IRaddress, &IRcommand);
  6656  005DC4  C0BC  F07D         	movff	UseIRCode@NEC,DecodeNEC@Nec
  6657  005DC8  C0BD  F07E         	movff	UseIRCode@NEC+1,DecodeNEC@Nec+1
  6658  005DCC  C0BE  F07F         	movff	UseIRCode@NEC+2,DecodeNEC@Nec+2
  6659  005DD0  C0BF  F080         	movff	UseIRCode@NEC+3,DecodeNEC@Nec+3
  6660  005DD4  0EFF               	movlw	low _IRaddress
  6661  005DD6  0100               	movlb	0	; () banked
  6662  005DD8  6F81               	movwf	DecodeNEC@address& (0+255),b
  6663  005DDA  0E01               	movlw	high _IRaddress
  6664  005DDC  0100               	movlb	0	; () banked
  6665  005DDE  6F82               	movwf	(DecodeNEC@address+1)& (0+255),b
  6666  005DE0  0E3B               	movlw	low _IRcommand
  6667  005DE2  0100               	movlb	0	; () banked
  6668  005DE4  6F83               	movwf	DecodeNEC@command& (0+255),b
  6669  005DE6  0E00               	movlw	high _IRcommand
  6670  005DE8  0100               	movlb	0	; () banked
  6671  005DEA  6F84               	movwf	(DecodeNEC@command+1)& (0+255),b
  6672  005DEC  EC8A  F041         	call	_DecodeNEC	;wreg free
  6673                           
  6674                           ;IR.c: 288: if(ReadPushButton())
  6675  005DF0  EC4F  F04A         	call	_ReadPushButton	;wreg free
  6676  005DF4  0900               	iorlw	0
  6677  005DF6  B4D8               	btfsc	status,2,c
  6678  005DF8  D055               	goto	l15383
  6679                           
  6680                           ;IR.c: 289: {
  6681                           ;IR.c: 290: Global.SWNECcode = NEC;
  6682  005DFA  C0BC  F401         	movff	UseIRCode@NEC,_Global+1
  6683  005DFE  C0BD  F402         	movff	UseIRCode@NEC+1,_Global+2
  6684  005E02  C0BE  F403         	movff	UseIRCode@NEC+2,_Global+3
  6685  005E06  C0BF  F404         	movff	UseIRCode@NEC+3,_Global+4
  6686                           
  6687                           ;IR.c: 291: if(SyncGlobalToEEPROM())
  6688  005E0A  ECF8  F047         	call	_SyncGlobalToEEPROM	;wreg free
  6689  005E0E  0900               	iorlw	0
  6690  005E10  B4D8               	btfsc	status,2,c
  6691  005E12  D024               	goto	l15367
  6692                           
  6693                           ;IR.c: 292: {
  6694                           ;IR.c: 294: for(i =0;i<10;i++)
  6695  005E14  0E00               	movlw	0
  6696  005E16  0100               	movlb	0	; () banked
  6697  005E18  6FC5               	movwf	UseIRCode@i& (0+255),b
  6698  005E1A                     l15353:
  6699                           
  6700                           ; BSR set to: 0
  6701  005E1A  0E09               	movlw	9
  6702  005E1C  0100               	movlb	0	; () banked
  6703  005E1E  65C5               	cpfsgt	UseIRCode@i& (0+255),b
  6704  005E20  D001               	goto	l15357
  6705                           
  6706                           ; BSR set to: 0
  6707  005E22  D0E2               	goto	l15429
  6708  005E24                     l15357:
  6709                           
  6710                           ; BSR set to: 0
  6711                           ;IR.c: 295: {
  6712                           ;IR.c: 296: (LATC |= 0x04);
  6713  005E24  848B               	bsf	3979,2,c	;volatile
  6714                           
  6715                           ; BSR set to: 0
  6716                           ;IR.c: 297: delayUS(50000);
  6717  005E26  0E50               	movlw	80
  6718  005E28  0100               	movlb	0	; () banked
  6719  005E2A  6F79               	movwf	delayUS@US& (0+255),b
  6720  005E2C  0EC3               	movlw	195
  6721  005E2E  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6722  005E30  0E00               	movlw	0
  6723  005E32  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6724  005E34  0E00               	movlw	0
  6725  005E36  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6726  005E38  EC57  F047         	call	_delayUS	;wreg free
  6727                           
  6728                           ;IR.c: 298: (LATC &= ~0x04);
  6729  005E3C  948B               	bcf	3979,2,c	;volatile
  6730                           
  6731                           ;IR.c: 299: delayUS(50000);
  6732  005E3E  0E50               	movlw	80
  6733  005E40  0100               	movlb	0	; () banked
  6734  005E42  6F79               	movwf	delayUS@US& (0+255),b
  6735  005E44  0EC3               	movlw	195
  6736  005E46  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6737  005E48  0E00               	movlw	0
  6738  005E4A  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6739  005E4C  0E00               	movlw	0
  6740  005E4E  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6741  005E50  EC57  F047         	call	_delayUS	;wreg free
  6742  005E54  0100               	movlb	0	; () banked
  6743  005E56  2BC5               	incf	UseIRCode@i& (0+255),f,b
  6744  005E58  D7E0               	goto	l15353
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;IR.c: 300: }
  6748                           ;IR.c: 301: }
  6749                           
  6750                           ; BSR set to: 0
  6751  005E5A  D0C6               	goto	l15429
  6752  005E5C                     l15367:
  6753                           
  6754                           ;IR.c: 302: else
  6755                           ;IR.c: 303: {
  6756                           ;IR.c: 305: for(i =0;i<10;i++)
  6757  005E5C  0E00               	movlw	0
  6758  005E5E  0100               	movlb	0	; () banked
  6759  005E60  6FC5               	movwf	UseIRCode@i& (0+255),b
  6760  005E62                     l15369:
  6761                           
  6762                           ; BSR set to: 0
  6763  005E62  0E09               	movlw	9
  6764  005E64  0100               	movlb	0	; () banked
  6765  005E66  65C5               	cpfsgt	UseIRCode@i& (0+255),b
  6766  005E68  D001               	goto	l15373
  6767                           
  6768                           ; BSR set to: 0
  6769  005E6A  D0BE               	goto	l15429
  6770  005E6C                     l15373:
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;IR.c: 306: {
  6774                           ;IR.c: 307: (LATC |= 0x02);
  6775  005E6C  828B               	bsf	3979,1,c	;volatile
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;IR.c: 308: delayUS(50000);
  6779  005E6E  0E50               	movlw	80
  6780  005E70  0100               	movlb	0	; () banked
  6781  005E72  6F79               	movwf	delayUS@US& (0+255),b
  6782  005E74  0EC3               	movlw	195
  6783  005E76  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6784  005E78  0E00               	movlw	0
  6785  005E7A  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6786  005E7C  0E00               	movlw	0
  6787  005E7E  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6788  005E80  EC57  F047         	call	_delayUS	;wreg free
  6789                           
  6790                           ;IR.c: 309: (LATC &= ~0x02);
  6791  005E84  928B               	bcf	3979,1,c	;volatile
  6792                           
  6793                           ;IR.c: 310: delayUS(50000);
  6794  005E86  0E50               	movlw	80
  6795  005E88  0100               	movlb	0	; () banked
  6796  005E8A  6F79               	movwf	delayUS@US& (0+255),b
  6797  005E8C  0EC3               	movlw	195
  6798  005E8E  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6799  005E90  0E00               	movlw	0
  6800  005E92  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6801  005E94  0E00               	movlw	0
  6802  005E96  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6803  005E98  EC57  F047         	call	_delayUS	;wreg free
  6804  005E9C  0100               	movlb	0	; () banked
  6805  005E9E  2BC5               	incf	UseIRCode@i& (0+255),f,b
  6806  005EA0  D7E0               	goto	l15369
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;IR.c: 311: }
  6810                           ;IR.c: 312: }
  6811                           ;IR.c: 313: }
  6812                           
  6813                           ; BSR set to: 0
  6814                           
  6815                           ; BSR set to: 0
  6816  005EA2  D0A2               	goto	l15429
  6817  005EA4                     l15383:
  6818                           
  6819                           ;IR.c: 314: else
  6820                           ;IR.c: 315: {
  6821                           ;IR.c: 316: if(NEC == Global.SWNECcode)
  6822  005EA4  0100               	movlb	0	; () banked
  6823  005EA6  51BC               	movf	UseIRCode@NEC& (0+255),w,b
  6824  005EA8  0104               	movlb	4	; () banked
  6825  005EAA  1901               	xorwf	(_Global+1)& (0+255),w,b
  6826  005EAC  E121               	bnz	l15393
  6827  005EAE  0100               	movlb	0	; () banked
  6828  005EB0  51BD               	movf	(UseIRCode@NEC+1)& (0+255),w,b
  6829  005EB2  0104               	movlb	4	; () banked
  6830  005EB4  1902               	xorwf	(_Global+2)& (0+255),w,b
  6831  005EB6  E11C               	bnz	l15393
  6832  005EB8  0100               	movlb	0	; () banked
  6833  005EBA  51BE               	movf	(UseIRCode@NEC+2)& (0+255),w,b
  6834  005EBC  0104               	movlb	4	; () banked
  6835  005EBE  1903               	xorwf	(_Global+3)& (0+255),w,b
  6836  005EC0  E117               	bnz	l15393
  6837  005EC2  0100               	movlb	0	; () banked
  6838  005EC4  51BF               	movf	(UseIRCode@NEC+3)& (0+255),w,b
  6839  005EC6  0104               	movlb	4	; () banked
  6840  005EC8  1904               	xorwf	(_Global+4)& (0+255),w,b
  6841  005ECA  A4D8               	btfss	status,2,c
  6842  005ECC  D011               	goto	l15393
  6843                           
  6844                           ; BSR set to: 4
  6845                           ;IR.c: 317: {
  6846                           ;IR.c: 318: if(*Code == 2)
  6847  005ECE  C0BA  FFD9         	movff	UseIRCode@Code,fsr2l
  6848  005ED2  C0BB  FFDA         	movff	UseIRCode@Code+1,fsr2h
  6849  005ED6  0E02               	movlw	2
  6850  005ED8  18DE               	xorwf	postinc2,w,c
  6851  005EDA  B4D8               	btfsc	status,2,c
  6852                           
  6853                           ; BSR set to: 4
  6854                           ;IR.c: 319: {
  6855                           ;IR.c: 320: (LATC |= 0x02);
  6856  005EDC  828B               	bsf	3979,1,c	;volatile
  6857                           
  6858                           ; BSR set to: 4
  6859                           ;IR.c: 321: }
  6860                           ;IR.c: 322: (LATC |= 0x04);
  6861  005EDE  848B               	bsf	3979,2,c	;volatile
  6862                           
  6863                           ; BSR set to: 4
  6864                           ;IR.c: 323: SendRF_Channel(ReadCodeButtons());
  6865  005EE0  EC82  F047         	call	_ReadCodeButtons	;wreg free
  6866  005EE4  EC01  F030         	call	_SendRF_Channel
  6867                           
  6868                           ;IR.c: 324: found = 1;
  6869  005EE8  0E01               	movlw	1
  6870  005EEA  0100               	movlb	0	; () banked
  6871  005EEC  6FC3               	movwf	UseIRCode@found& (0+255),b
  6872  005EEE  D000               	goto	l15393
  6873  005EF0                     l15393:
  6874                           
  6875                           ;IR.c: 325: }
  6876                           ;IR.c: 327: for(j=0; j < 3; j++)
  6877  005EF0  0E00               	movlw	0
  6878  005EF2  0100               	movlb	0	; () banked
  6879  005EF4  6FC4               	movwf	UseIRCode@j& (0+255),b
  6880  005EF6                     l15395:
  6881                           
  6882                           ; BSR set to: 0
  6883  005EF6  0E02               	movlw	2
  6884  005EF8  0100               	movlb	0	; () banked
  6885  005EFA  65C4               	cpfsgt	UseIRCode@j& (0+255),b
  6886  005EFC  D001               	goto	l15399
  6887                           
  6888                           ; BSR set to: 0
  6889  005EFE  D06D               	goto	l15425
  6890  005F00                     l15399:
  6891                           
  6892                           ; BSR set to: 0
  6893                           ;IR.c: 328: {
  6894                           ;IR.c: 329: for(i=0; i < 15; i++)
  6895  005F00  0E00               	movlw	0
  6896  005F02  0100               	movlb	0	; () banked
  6897  005F04  6FC5               	movwf	UseIRCode@i& (0+255),b
  6898  005F06                     l15401:
  6899                           
  6900                           ; BSR set to: 0
  6901  005F06  0E0E               	movlw	14
  6902  005F08  0100               	movlb	0	; () banked
  6903  005F0A  65C5               	cpfsgt	UseIRCode@i& (0+255),b
  6904  005F0C  D001               	goto	l15405
  6905                           
  6906                           ; BSR set to: 0
  6907  005F0E  D062               	goto	l15421
  6908  005F10                     l15405:
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;IR.c: 330: {
  6912                           ;IR.c: 332: if(IRaddress == Global.RemoteButtonRF[i][j][0])
  6913  005F10  0100               	movlb	0	; () banked
  6914  005F12  51C5               	movf	UseIRCode@i& (0+255),w,b
  6915  005F14  0D06               	mullw	6
  6916  005F16  0E00               	movlw	low _Global
  6917  005F18  0100               	movlb	0	; () banked
  6918  005F1A  6FC0               	movwf	??_UseIRCode& (0+255),b
  6919  005F1C  0E04               	movlw	high _Global
  6920  005F1E  0100               	movlb	0	; () banked
  6921  005F20  6FC1               	movwf	(??_UseIRCode+1)& (0+255),b
  6922  005F22  0E2E               	movlw	46
  6923  005F24  0100               	movlb	0	; () banked
  6924  005F26  27C0               	addwf	??_UseIRCode& (0+255),f,b
  6925  005F28  0E00               	movlw	0
  6926  005F2A  23C1               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  6927  005F2C  50F3               	movf	prodl,w,c
  6928  005F2E  0100               	movlb	0	; () banked
  6929  005F30  27C0               	addwf	??_UseIRCode& (0+255),f,b
  6930  005F32  50F4               	movf	prodh,w,c
  6931  005F34  0100               	movlb	0	; () banked
  6932  005F36  23C1               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  6933  005F38  0100               	movlb	0	; () banked
  6934  005F3A  51C4               	movf	UseIRCode@j& (0+255),w,b
  6935  005F3C  0D02               	mullw	2
  6936  005F3E  50F3               	movf	prodl,w,c
  6937  005F40  0100               	movlb	0	; () banked
  6938  005F42  25C0               	addwf	??_UseIRCode& (0+255),w,b
  6939  005F44  6ED9               	movwf	fsr2l,c
  6940  005F46  50F4               	movf	prodh,w,c
  6941  005F48  0100               	movlb	0	; () banked
  6942  005F4A  21C1               	addwfc	(??_UseIRCode+1)& (0+255),w,b
  6943  005F4C  6EDA               	movwf	fsr2h,c
  6944  005F4E  0101               	movlb	1	; () banked
  6945  005F50  51FF               	movf	_IRaddress& (0+255),w,b
  6946  005F52  18DE               	xorwf	postinc2,w,c
  6947  005F54  A4D8               	btfss	status,2,c
  6948  005F56  D03B               	goto	l15417
  6949                           
  6950                           ; BSR set to: 1
  6951                           ;IR.c: 333: {
  6952                           ;IR.c: 334: if(IRcommand == Global.RemoteButtonRF[i][j][1])
  6953  005F58  0100               	movlb	0	; () banked
  6954  005F5A  51C5               	movf	UseIRCode@i& (0+255),w,b
  6955  005F5C  0D06               	mullw	6
  6956  005F5E  0E00               	movlw	low _Global
  6957  005F60  0100               	movlb	0	; () banked
  6958  005F62  6FC0               	movwf	??_UseIRCode& (0+255),b
  6959  005F64  0E04               	movlw	high _Global
  6960  005F66  0100               	movlb	0	; () banked
  6961  005F68  6FC1               	movwf	(??_UseIRCode+1)& (0+255),b
  6962  005F6A  0E2E               	movlw	46
  6963  005F6C  0100               	movlb	0	; () banked
  6964  005F6E  27C0               	addwf	??_UseIRCode& (0+255),f,b
  6965  005F70  0E00               	movlw	0
  6966  005F72  23C1               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  6967  005F74  50F3               	movf	prodl,w,c
  6968  005F76  0100               	movlb	0	; () banked
  6969  005F78  27C0               	addwf	??_UseIRCode& (0+255),f,b
  6970  005F7A  50F4               	movf	prodh,w,c
  6971  005F7C  0100               	movlb	0	; () banked
  6972  005F7E  23C1               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  6973  005F80  0100               	movlb	0	; () banked
  6974  005F82  51C4               	movf	UseIRCode@j& (0+255),w,b
  6975  005F84  0D02               	mullw	2
  6976  005F86  50F3               	movf	prodl,w,c
  6977  005F88  0100               	movlb	0	; () banked
  6978  005F8A  27C0               	addwf	??_UseIRCode& (0+255),f,b
  6979  005F8C  50F4               	movf	prodh,w,c
  6980  005F8E  0100               	movlb	0	; () banked
  6981  005F90  23C1               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  6982  005F92  0E01               	movlw	1
  6983  005F94  0100               	movlb	0	; () banked
  6984  005F96  25C0               	addwf	??_UseIRCode& (0+255),w,b
  6985  005F98  6ED9               	movwf	fsr2l,c
  6986  005F9A  0E00               	movlw	0
  6987  005F9C  0100               	movlb	0	; () banked
  6988  005F9E  21C1               	addwfc	(??_UseIRCode+1)& (0+255),w,b
  6989  005FA0  6EDA               	movwf	fsr2h,c
  6990  005FA2  503B               	movf	_IRcommand,w,c
  6991  005FA4  18DE               	xorwf	postinc2,w,c
  6992  005FA6  A4D8               	btfss	status,2,c
  6993  005FA8  D012               	goto	l15417
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;IR.c: 335: {
  6997                           ;IR.c: 336: if(*Code == 2)
  6998  005FAA  C0BA  FFD9         	movff	UseIRCode@Code,fsr2l
  6999  005FAE  C0BB  FFDA         	movff	UseIRCode@Code+1,fsr2h
  7000  005FB2  0E02               	movlw	2
  7001  005FB4  18DE               	xorwf	postinc2,w,c
  7002  005FB6  A4D8               	btfss	status,2,c
  7003  005FB8  D002               	goto	l15413
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;IR.c: 337: {
  7007                           ;IR.c: 338: (LATC |= 0x02);
  7008  005FBA  828B               	bsf	3979,1,c	;volatile
  7009  005FBC  D000               	goto	l15413
  7010  005FBE                     l15413:
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;IR.c: 339: }
  7014                           ;IR.c: 340: SendRF_Channel(i);
  7015  005FBE  0100               	movlb	0	; () banked
  7016  005FC0  51C5               	movf	UseIRCode@i& (0+255),w,b
  7017  005FC2  EC01  F030         	call	_SendRF_Channel
  7018                           
  7019                           ;IR.c: 341: found = 1;
  7020  005FC6  0E01               	movlw	1
  7021  005FC8  0100               	movlb	0	; () banked
  7022  005FCA  6FC3               	movwf	UseIRCode@found& (0+255),b
  7023                           
  7024                           ; BSR set to: 0
  7025  005FCC  D000               	goto	l15417
  7026  005FCE                     l15417:
  7027  005FCE  0100               	movlb	0	; () banked
  7028  005FD0  2BC5               	incf	UseIRCode@i& (0+255),f,b
  7029  005FD2  D799               	goto	l15401
  7030  005FD4                     l15421:
  7031                           
  7032                           ; BSR set to: 0
  7033  005FD4  0100               	movlb	0	; () banked
  7034  005FD6  2BC4               	incf	UseIRCode@j& (0+255),f,b
  7035  005FD8  D78E               	goto	l15395
  7036  005FDA                     l15425:
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;IR.c: 342: }
  7040                           ;IR.c: 343: }
  7041                           ;IR.c: 344: }
  7042                           ;IR.c: 345: }
  7043                           ;IR.c: 347: if(found == 0)
  7044  005FDA  0100               	movlb	0	; () banked
  7045  005FDC  51C3               	movf	UseIRCode@found& (0+255),w,b
  7046  005FDE  0100               	movlb	0	; () banked
  7047  005FE0  A4D8               	btfss	status,2,c
  7048  005FE2  D002               	goto	l15429
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;IR.c: 348: {
  7052                           ;IR.c: 349: (LATC |= 0x02);
  7053  005FE4  828B               	bsf	3979,1,c	;volatile
  7054                           
  7055                           ; BSR set to: 0
  7056                           
  7057                           ; BSR set to: 0
  7058  005FE6  D000               	goto	l15429
  7059  005FE8                     l15429:
  7060                           
  7061                           ;IR.c: 350: }
  7062                           ;IR.c: 351: }
  7063                           ;IR.c: 352: }
  7064                           ;IR.c: 353: *Code = 0;
  7065  005FE8  C0BA  FFD9         	movff	UseIRCode@Code,fsr2l
  7066  005FEC  C0BB  FFDA         	movff	UseIRCode@Code+1,fsr2h
  7067  005FF0  0E00               	movlw	0
  7068  005FF2  6EDF               	movwf	indf2,c
  7069                           
  7070                           ;IR.c: 354: IRpinOLD = ReadIRpin();
  7071  005FF4  EC72  F04A         	call	_ReadIRpin	;wreg free
  7072  005FF8  6E2E               	movwf	_IRpinOLD,c
  7073                           
  7074                           ;IR.c: 355: INTCONbits.RBIF = 0;
  7075  005FFA  90F2               	bcf	intcon,0,c	;volatile
  7076                           
  7077                           ;IR.c: 356: (IOCBbits.IOCB4 = 1);
  7078  005FFC  887D               	bsf	3965,4,c	;volatile
  7079                           
  7080                           ;IR.c: 357: INTCONbits.RBIE = 1;
  7081  005FFE  86F2               	bsf	intcon,3,c	;volatile
  7082  006000  0012               	return		;funcret
  7083  006002                     __end_of_UseIRCode:
  7084                           	opt stack 0
  7085                           tblptru	equ	0xFF8
  7086                           tblptrh	equ	0xFF7
  7087                           tblptrl	equ	0xFF6
  7088                           tablat	equ	0xFF5
  7089                           prodh	equ	0xFF4
  7090                           prodl	equ	0xFF3
  7091                           intcon	equ	0xFF2
  7092                           postinc0	equ	0xFEE
  7093                           wreg	equ	0xFE8
  7094                           postdec1	equ	0xFE5
  7095                           fsr1h	equ	0xFE2
  7096                           fsr1l	equ	0xFE1
  7097                           indf2	equ	0xFDF
  7098                           postinc2	equ	0xFDE
  7099                           fsr2h	equ	0xFDA
  7100                           fsr2l	equ	0xFD9
  7101                           status	equ	0xFD8
  7102                           
  7103 ;; *************** function _SendRF_Channel *****************
  7104 ;; Defined at:
  7105 ;;		line 165 in file "RF.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  channel         1    wreg     unsigned char 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;  channel         1   38[BANK0 ] unsigned char 
  7110 ;; Return value:  Size  Location     Type
  7111 ;;		None               void
  7112 ;; Registers used:
  7113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7120 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7122 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7123 ;;Total ram usage:        1 bytes
  7124 ;; Hardware stack levels used:    1
  7125 ;; Hardware stack levels required when called:    9
  7126 ;; This function calls:
  7127 ;;		_SendRF_wait
  7128 ;; This function is called by:
  7129 ;;		_UseIRCode
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133                           	psect	text2
  7134  006002                     __ptext2:
  7135                           	opt stack 0
  7136  006002                     _SendRF_Channel:
  7137                           	opt stack 20
  7138                           
  7139                           ;incstack = 0
  7140                           ;SendRF_Channel@channel stored from wreg
  7141  006002  0100               	movlb	0	; () banked
  7142  006004  6F86               	movwf	SendRF_Channel@channel& (0+255),b
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;RF.c: 167: switch (channel)
  7146  006006  D10D               	goto	l15161
  7147  006008                     l15103:
  7148                           
  7149                           ; BSR set to: 0
  7150                           ;RF.c: 171: SendRF_wait(Conf1_ChannelD,1,12,4);
  7151  006008  0E97               	movlw	low _Conf1_ChannelD
  7152  00600A  0100               	movlb	0	; () banked
  7153  00600C  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7154  00600E  0EF0               	movlw	high _Conf1_ChannelD
  7155  006010  0100               	movlb	0	; () banked
  7156  006012  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7157  006014  0E01               	movlw	1
  7158  006016  0100               	movlb	0	; () banked
  7159  006018  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7160  00601A  0E0C               	movlw	12
  7161  00601C  0100               	movlb	0	; () banked
  7162  00601E  6F84               	movwf	SendRF_wait@size& (0+255),b
  7163  006020  0E04               	movlw	4
  7164  006022  0100               	movlb	0	; () banked
  7165  006024  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7166  006026  EC81  F048         	call	_SendRF_wait	;wreg free
  7167                           
  7168                           ;RF.c: 172: break;
  7169  00602A  0012               	return	
  7170  00602C                     l15105:
  7171                           
  7172                           ;RF.c: 175: SendRF_wait(Conf1_ChannelE,1,12,4);
  7173  00602C  0EA3               	movlw	low _Conf1_ChannelE
  7174  00602E  0100               	movlb	0	; () banked
  7175  006030  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7176  006032  0EF0               	movlw	high _Conf1_ChannelE
  7177  006034  0100               	movlb	0	; () banked
  7178  006036  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7179  006038  0E01               	movlw	1
  7180  00603A  0100               	movlb	0	; () banked
  7181  00603C  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7182  00603E  0E0C               	movlw	12
  7183  006040  0100               	movlb	0	; () banked
  7184  006042  6F84               	movwf	SendRF_wait@size& (0+255),b
  7185  006044  0E04               	movlw	4
  7186  006046  0100               	movlb	0	; () banked
  7187  006048  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7188  00604A  EC81  F048         	call	_SendRF_wait	;wreg free
  7189                           
  7190                           ;RF.c: 176: break;
  7191  00604E  0012               	return	
  7192  006050                     l15107:
  7193                           
  7194                           ;RF.c: 179: SendRF_wait(Conf1_ChannelF,1,12,4);
  7195  006050  0EAF               	movlw	low _Conf1_ChannelF
  7196  006052  0100               	movlb	0	; () banked
  7197  006054  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7198  006056  0EF0               	movlw	high _Conf1_ChannelF
  7199  006058  0100               	movlb	0	; () banked
  7200  00605A  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7201  00605C  0E01               	movlw	1
  7202  00605E  0100               	movlb	0	; () banked
  7203  006060  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7204  006062  0E0C               	movlw	12
  7205  006064  0100               	movlb	0	; () banked
  7206  006066  6F84               	movwf	SendRF_wait@size& (0+255),b
  7207  006068  0E04               	movlw	4
  7208  00606A  0100               	movlb	0	; () banked
  7209  00606C  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7210  00606E  EC81  F048         	call	_SendRF_wait	;wreg free
  7211                           
  7212                           ;RF.c: 180: break;
  7213  006072  0012               	return	
  7214  006074                     l15109:
  7215                           
  7216                           ;RF.c: 183: if(Conf2_ChannelB_Status)
  7217  006074  5027               	movf	_Conf2_ChannelB_Status,w,c
  7218  006076  B4D8               	btfsc	status,2,c
  7219  006078  D014               	goto	l15115
  7220                           
  7221                           ;RF.c: 184: {
  7222                           ;RF.c: 185: SendRF_wait(Conf2_ChannelB_OFF,2,16,4);
  7223  00607A  0EBC               	movlw	low _Conf2_ChannelB_OFF
  7224  00607C  0100               	movlb	0	; () banked
  7225  00607E  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7226  006080  0EEF               	movlw	high _Conf2_ChannelB_OFF
  7227  006082  0100               	movlb	0	; () banked
  7228  006084  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7229  006086  0E02               	movlw	2
  7230  006088  0100               	movlb	0	; () banked
  7231  00608A  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7232  00608C  0E10               	movlw	16
  7233  00608E  0100               	movlb	0	; () banked
  7234  006090  6F84               	movwf	SendRF_wait@size& (0+255),b
  7235  006092  0E04               	movlw	4
  7236  006094  0100               	movlb	0	; () banked
  7237  006096  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7238  006098  EC81  F048         	call	_SendRF_wait	;wreg free
  7239                           
  7240                           ;RF.c: 186: Conf2_ChannelB_Status = 0;
  7241  00609C  0E00               	movlw	0
  7242  00609E  6E27               	movwf	_Conf2_ChannelB_Status,c
  7243                           
  7244                           ;RF.c: 187: }
  7245  0060A0  0012               	return	
  7246  0060A2                     l15115:
  7247                           
  7248                           ;RF.c: 188: else
  7249                           ;RF.c: 189: {
  7250                           ;RF.c: 190: SendRF_wait(Conf2_ChannelB_ON,2,16,4);
  7251  0060A2  0ECC               	movlw	low _Conf2_ChannelB_ON
  7252  0060A4  0100               	movlb	0	; () banked
  7253  0060A6  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7254  0060A8  0EEF               	movlw	high _Conf2_ChannelB_ON
  7255  0060AA  0100               	movlb	0	; () banked
  7256  0060AC  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7257  0060AE  0E02               	movlw	2
  7258  0060B0  0100               	movlb	0	; () banked
  7259  0060B2  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7260  0060B4  0E10               	movlw	16
  7261  0060B6  0100               	movlb	0	; () banked
  7262  0060B8  6F84               	movwf	SendRF_wait@size& (0+255),b
  7263  0060BA  0E04               	movlw	4
  7264  0060BC  0100               	movlb	0	; () banked
  7265  0060BE  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7266  0060C0  EC81  F048         	call	_SendRF_wait	;wreg free
  7267                           
  7268                           ;RF.c: 191: Conf2_ChannelB_Status = 1;
  7269  0060C4  0E01               	movlw	1
  7270  0060C6  6E27               	movwf	_Conf2_ChannelB_Status,c
  7271                           
  7272                           ;RF.c: 192: }
  7273                           ;RF.c: 193: break;
  7274  0060C8  0012               	return	
  7275  0060CA                     l15119:
  7276                           
  7277                           ;RF.c: 196: if(Conf2_ChannelD_Status)
  7278  0060CA  5028               	movf	_Conf2_ChannelD_Status,w,c
  7279  0060CC  B4D8               	btfsc	status,2,c
  7280  0060CE  D014               	goto	l15125
  7281                           
  7282                           ;RF.c: 197: {
  7283                           ;RF.c: 198: SendRF_wait(Conf2_ChannelD_OFF,2,16,4);
  7284  0060D0  0EDC               	movlw	low _Conf2_ChannelD_OFF
  7285  0060D2  0100               	movlb	0	; () banked
  7286  0060D4  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7287  0060D6  0EEF               	movlw	high _Conf2_ChannelD_OFF
  7288  0060D8  0100               	movlb	0	; () banked
  7289  0060DA  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7290  0060DC  0E02               	movlw	2
  7291  0060DE  0100               	movlb	0	; () banked
  7292  0060E0  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7293  0060E2  0E10               	movlw	16
  7294  0060E4  0100               	movlb	0	; () banked
  7295  0060E6  6F84               	movwf	SendRF_wait@size& (0+255),b
  7296  0060E8  0E04               	movlw	4
  7297  0060EA  0100               	movlb	0	; () banked
  7298  0060EC  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7299  0060EE  EC81  F048         	call	_SendRF_wait	;wreg free
  7300                           
  7301                           ;RF.c: 199: Conf2_ChannelD_Status = 0;
  7302  0060F2  0E00               	movlw	0
  7303  0060F4  6E28               	movwf	_Conf2_ChannelD_Status,c
  7304                           
  7305                           ;RF.c: 200: }
  7306  0060F6  0012               	return	
  7307  0060F8                     l15125:
  7308                           
  7309                           ;RF.c: 201: else
  7310                           ;RF.c: 202: {
  7311                           ;RF.c: 203: SendRF_wait(Conf2_ChannelD_ON,2,16,4);
  7312  0060F8  0EEC               	movlw	low _Conf2_ChannelD_ON
  7313  0060FA  0100               	movlb	0	; () banked
  7314  0060FC  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7315  0060FE  0EEF               	movlw	high _Conf2_ChannelD_ON
  7316  006100  0100               	movlb	0	; () banked
  7317  006102  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7318  006104  0E02               	movlw	2
  7319  006106  0100               	movlb	0	; () banked
  7320  006108  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7321  00610A  0E10               	movlw	16
  7322  00610C  0100               	movlb	0	; () banked
  7323  00610E  6F84               	movwf	SendRF_wait@size& (0+255),b
  7324  006110  0E04               	movlw	4
  7325  006112  0100               	movlb	0	; () banked
  7326  006114  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7327  006116  EC81  F048         	call	_SendRF_wait	;wreg free
  7328                           
  7329                           ;RF.c: 204: Conf2_ChannelD_Status = 1;
  7330  00611A  0E01               	movlw	1
  7331  00611C  6E28               	movwf	_Conf2_ChannelD_Status,c
  7332                           
  7333                           ;RF.c: 205: }
  7334                           ;RF.c: 206: break;
  7335  00611E  0012               	return	
  7336  006120                     l15129:
  7337                           
  7338                           ;RF.c: 209: if(Conf2_ChannelH_1_Status)
  7339  006120  5029               	movf	_Conf2_ChannelH_1_Status,w,c
  7340  006122  B4D8               	btfsc	status,2,c
  7341  006124  D014               	goto	l15135
  7342                           
  7343                           ;RF.c: 210: {
  7344                           ;RF.c: 211: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,4);
  7345  006126  0EFC               	movlw	low _Conf2_ChannelH_1_OFF
  7346  006128  0100               	movlb	0	; () banked
  7347  00612A  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7348  00612C  0EEF               	movlw	high _Conf2_ChannelH_1_OFF
  7349  00612E  0100               	movlb	0	; () banked
  7350  006130  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7351  006132  0E02               	movlw	2
  7352  006134  0100               	movlb	0	; () banked
  7353  006136  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7354  006138  0E10               	movlw	16
  7355  00613A  0100               	movlb	0	; () banked
  7356  00613C  6F84               	movwf	SendRF_wait@size& (0+255),b
  7357  00613E  0E04               	movlw	4
  7358  006140  0100               	movlb	0	; () banked
  7359  006142  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7360  006144  EC81  F048         	call	_SendRF_wait	;wreg free
  7361                           
  7362                           ;RF.c: 212: Conf2_ChannelH_1_Status = 0;
  7363  006148  0E00               	movlw	0
  7364  00614A  6E29               	movwf	_Conf2_ChannelH_1_Status,c
  7365                           
  7366                           ;RF.c: 213: }
  7367  00614C  0012               	return	
  7368  00614E                     l15135:
  7369                           
  7370                           ;RF.c: 214: else
  7371                           ;RF.c: 215: {
  7372                           ;RF.c: 216: SendRF_wait(Conf2_ChannelH_1_ON,2,16,4);
  7373  00614E  0E0C               	movlw	low _Conf2_ChannelH_1_ON
  7374  006150  0100               	movlb	0	; () banked
  7375  006152  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7376  006154  0EF0               	movlw	high _Conf2_ChannelH_1_ON
  7377  006156  0100               	movlb	0	; () banked
  7378  006158  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7379  00615A  0E02               	movlw	2
  7380  00615C  0100               	movlb	0	; () banked
  7381  00615E  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7382  006160  0E10               	movlw	16
  7383  006162  0100               	movlb	0	; () banked
  7384  006164  6F84               	movwf	SendRF_wait@size& (0+255),b
  7385  006166  0E04               	movlw	4
  7386  006168  0100               	movlb	0	; () banked
  7387  00616A  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7388  00616C  EC81  F048         	call	_SendRF_wait	;wreg free
  7389                           
  7390                           ;RF.c: 217: Conf2_ChannelH_1_Status = 1;
  7391  006170  0E01               	movlw	1
  7392  006172  6E29               	movwf	_Conf2_ChannelH_1_Status,c
  7393                           
  7394                           ;RF.c: 218: }
  7395                           ;RF.c: 219: break;
  7396  006174  0012               	return	
  7397  006176                     l15139:
  7398                           
  7399                           ;RF.c: 222: if(Conf2_ChannelH_2_Status)
  7400  006176  502A               	movf	_Conf2_ChannelH_2_Status,w,c
  7401  006178  B4D8               	btfsc	status,2,c
  7402  00617A  D014               	goto	l15145
  7403                           
  7404                           ;RF.c: 223: {
  7405                           ;RF.c: 224: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,4);
  7406  00617C  0E1C               	movlw	low _Conf2_ChannelH_2_OFF
  7407  00617E  0100               	movlb	0	; () banked
  7408  006180  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7409  006182  0EF0               	movlw	high _Conf2_ChannelH_2_OFF
  7410  006184  0100               	movlb	0	; () banked
  7411  006186  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7412  006188  0E02               	movlw	2
  7413  00618A  0100               	movlb	0	; () banked
  7414  00618C  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7415  00618E  0E10               	movlw	16
  7416  006190  0100               	movlb	0	; () banked
  7417  006192  6F84               	movwf	SendRF_wait@size& (0+255),b
  7418  006194  0E04               	movlw	4
  7419  006196  0100               	movlb	0	; () banked
  7420  006198  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7421  00619A  EC81  F048         	call	_SendRF_wait	;wreg free
  7422                           
  7423                           ;RF.c: 225: Conf2_ChannelH_2_Status = 0;
  7424  00619E  0E00               	movlw	0
  7425  0061A0  6E2A               	movwf	_Conf2_ChannelH_2_Status,c
  7426                           
  7427                           ;RF.c: 226: }
  7428  0061A2  0012               	return	
  7429  0061A4                     l15145:
  7430                           
  7431                           ;RF.c: 227: else
  7432                           ;RF.c: 228: {
  7433                           ;RF.c: 229: SendRF_wait(Conf2_ChannelH_2_ON,2,16,4);
  7434  0061A4  0E2C               	movlw	low _Conf2_ChannelH_2_ON
  7435  0061A6  0100               	movlb	0	; () banked
  7436  0061A8  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7437  0061AA  0EF0               	movlw	high _Conf2_ChannelH_2_ON
  7438  0061AC  0100               	movlb	0	; () banked
  7439  0061AE  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7440  0061B0  0E02               	movlw	2
  7441  0061B2  0100               	movlb	0	; () banked
  7442  0061B4  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7443  0061B6  0E10               	movlw	16
  7444  0061B8  0100               	movlb	0	; () banked
  7445  0061BA  6F84               	movwf	SendRF_wait@size& (0+255),b
  7446  0061BC  0E04               	movlw	4
  7447  0061BE  0100               	movlb	0	; () banked
  7448  0061C0  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7449  0061C2  EC81  F048         	call	_SendRF_wait	;wreg free
  7450                           
  7451                           ;RF.c: 230: Conf2_ChannelH_2_Status = 1;
  7452  0061C6  0E01               	movlw	1
  7453  0061C8  6E2A               	movwf	_Conf2_ChannelH_2_Status,c
  7454                           
  7455                           ;RF.c: 231: }
  7456                           ;RF.c: 232: break;
  7457  0061CA  0012               	return	
  7458  0061CC                     l15149:
  7459                           
  7460                           ;RF.c: 235: if(Conf2_ChannelH_3_Status)
  7461  0061CC  502B               	movf	_Conf2_ChannelH_3_Status,w,c
  7462  0061CE  B4D8               	btfsc	status,2,c
  7463  0061D0  D014               	goto	l15155
  7464                           
  7465                           ;RF.c: 236: {
  7466                           ;RF.c: 237: SendRF_wait(Conf2_ChannelH_3_OFF,2,16,4);
  7467  0061D2  0E3C               	movlw	low _Conf2_ChannelH_3_OFF
  7468  0061D4  0100               	movlb	0	; () banked
  7469  0061D6  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7470  0061D8  0EF0               	movlw	high _Conf2_ChannelH_3_OFF
  7471  0061DA  0100               	movlb	0	; () banked
  7472  0061DC  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7473  0061DE  0E02               	movlw	2
  7474  0061E0  0100               	movlb	0	; () banked
  7475  0061E2  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7476  0061E4  0E10               	movlw	16
  7477  0061E6  0100               	movlb	0	; () banked
  7478  0061E8  6F84               	movwf	SendRF_wait@size& (0+255),b
  7479  0061EA  0E04               	movlw	4
  7480  0061EC  0100               	movlb	0	; () banked
  7481  0061EE  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7482  0061F0  EC81  F048         	call	_SendRF_wait	;wreg free
  7483                           
  7484                           ;RF.c: 238: Conf2_ChannelH_3_Status = 0;
  7485  0061F4  0E00               	movlw	0
  7486  0061F6  6E2B               	movwf	_Conf2_ChannelH_3_Status,c
  7487                           
  7488                           ;RF.c: 239: }
  7489  0061F8  0012               	return	
  7490  0061FA                     l15155:
  7491                           
  7492                           ;RF.c: 240: else
  7493                           ;RF.c: 241: {
  7494                           ;RF.c: 242: SendRF_wait(Conf2_ChannelH_3_ON,2,16,4);
  7495  0061FA  0E4C               	movlw	low _Conf2_ChannelH_3_ON
  7496  0061FC  0100               	movlb	0	; () banked
  7497  0061FE  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7498  006200  0EF0               	movlw	high _Conf2_ChannelH_3_ON
  7499  006202  0100               	movlb	0	; () banked
  7500  006204  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7501  006206  0E02               	movlw	2
  7502  006208  0100               	movlb	0	; () banked
  7503  00620A  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7504  00620C  0E10               	movlw	16
  7505  00620E  0100               	movlb	0	; () banked
  7506  006210  6F84               	movwf	SendRF_wait@size& (0+255),b
  7507  006212  0E04               	movlw	4
  7508  006214  0100               	movlb	0	; () banked
  7509  006216  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7510  006218  EC81  F048         	call	_SendRF_wait	;wreg free
  7511                           
  7512                           ;RF.c: 243: Conf2_ChannelH_3_Status = 1;
  7513  00621C  0E01               	movlw	1
  7514  00621E  6E2B               	movwf	_Conf2_ChannelH_3_Status,c
  7515                           
  7516                           ;RF.c: 248: }
  7517                           
  7518                           ;RF.c: 247: break;
  7519                           
  7520                           ;RF.c: 246: default:
  7521                           
  7522                           ;RF.c: 244: }
  7523                           ;RF.c: 245: break;
  7524  006220  0012               	return	
  7525  006222                     l15161:
  7526  006222  0100               	movlb	0	; () banked
  7527  006224  5186               	movf	SendRF_Channel@channel& (0+255),w,b
  7528                           
  7529                           ; Switch size 1, requested type "space"
  7530                           ; Number of cases is 8, Range of values is 0 to 7
  7531                           ; switch strategies available:
  7532                           ; Name         Instructions Cycles
  7533                           ; simple_byte           25    13 (average)
  7534                           ;	Chosen strategy is simple_byte
  7535  006226  0A00               	xorlw	0	; case 0
  7536  006228  B4D8               	btfsc	status,2,c
  7537  00622A  D6EE               	goto	l15103
  7538  00622C  0A01               	xorlw	1	; case 1
  7539  00622E  B4D8               	btfsc	status,2,c
  7540  006230  D6FD               	goto	l15105
  7541  006232  0A03               	xorlw	3	; case 2
  7542  006234  B4D8               	btfsc	status,2,c
  7543  006236  D70C               	goto	l15107
  7544  006238  0A01               	xorlw	1	; case 3
  7545  00623A  B4D8               	btfsc	status,2,c
  7546  00623C  D71B               	goto	l15109
  7547  00623E  0A07               	xorlw	7	; case 4
  7548  006240  B4D8               	btfsc	status,2,c
  7549  006242  D743               	goto	l15119
  7550  006244  0A01               	xorlw	1	; case 5
  7551  006246  B4D8               	btfsc	status,2,c
  7552  006248  D76B               	goto	l15129
  7553  00624A  0A03               	xorlw	3	; case 6
  7554  00624C  B4D8               	btfsc	status,2,c
  7555  00624E  D793               	goto	l15139
  7556  006250  0A01               	xorlw	1	; case 7
  7557  006252  A4D8               	btfss	status,2,c
  7558  006254  0012               	return	
  7559  006256  D7BA               	goto	l15149
  7560                           
  7561                           ; BSR set to: 0
  7562  006258  0012               	return		;funcret
  7563  00625A                     __end_of_SendRF_Channel:
  7564                           	opt stack 0
  7565                           tblptru	equ	0xFF8
  7566                           tblptrh	equ	0xFF7
  7567                           tblptrl	equ	0xFF6
  7568                           tablat	equ	0xFF5
  7569                           prodh	equ	0xFF4
  7570                           prodl	equ	0xFF3
  7571                           intcon	equ	0xFF2
  7572                           postinc0	equ	0xFEE
  7573                           wreg	equ	0xFE8
  7574                           postdec1	equ	0xFE5
  7575                           fsr1h	equ	0xFE2
  7576                           fsr1l	equ	0xFE1
  7577                           indf2	equ	0xFDF
  7578                           postinc2	equ	0xFDE
  7579                           fsr2h	equ	0xFDA
  7580                           fsr2l	equ	0xFD9
  7581                           status	equ	0xFD8
  7582                           
  7583 ;; *************** function _ReadPushButton *****************
  7584 ;; Defined at:
  7585 ;;		line 52 in file "Button.c"
  7586 ;; Parameters:    Size  Location     Type
  7587 ;;		None
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;		None
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  1    wreg      unsigned char 
  7592 ;; Registers used:
  7593 ;;		wreg
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7603 ;;Total ram usage:        0 bytes
  7604 ;; Hardware stack levels used:    1
  7605 ;; Hardware stack levels required when called:    6
  7606 ;; This function calls:
  7607 ;;		Nothing
  7608 ;; This function is called by:
  7609 ;;		_UseIRCode
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           
  7613                           	psect	text3
  7614  00949E                     __ptext3:
  7615                           	opt stack 0
  7616  00949E                     _ReadPushButton:
  7617                           	opt stack 23
  7618                           
  7619                           ;Button.c: 55: if((PORTC & 0x01) != 0x01)
  7620                           
  7621                           ;incstack = 0
  7622  00949E  B082               	btfsc	3970,0,c	;volatile
  7623  0094A0  D002               	goto	l15071
  7624                           
  7625                           ;Button.c: 56: {
  7626                           ;Button.c: 57: return 1;
  7627  0094A2  0E01               	movlw	1
  7628  0094A4  0012               	return	
  7629  0094A6                     l15071:
  7630                           
  7631                           ;Button.c: 58: }
  7632                           ;Button.c: 59: return 0;
  7633  0094A6  0E00               	movlw	0
  7634  0094A8  0012               	return	
  7635  0094AA  0012               	return		;funcret
  7636  0094AC                     __end_of_ReadPushButton:
  7637                           	opt stack 0
  7638                           tblptru	equ	0xFF8
  7639                           tblptrh	equ	0xFF7
  7640                           tblptrl	equ	0xFF6
  7641                           tablat	equ	0xFF5
  7642                           prodh	equ	0xFF4
  7643                           prodl	equ	0xFF3
  7644                           intcon	equ	0xFF2
  7645                           postinc0	equ	0xFEE
  7646                           wreg	equ	0xFE8
  7647                           postdec1	equ	0xFE5
  7648                           fsr1h	equ	0xFE2
  7649                           fsr1l	equ	0xFE1
  7650                           indf2	equ	0xFDF
  7651                           postinc2	equ	0xFDE
  7652                           fsr2h	equ	0xFDA
  7653                           fsr2l	equ	0xFD9
  7654                           status	equ	0xFD8
  7655                           
  7656 ;; *************** function _ReadCodeButtons *****************
  7657 ;; Defined at:
  7658 ;;		line 67 in file "Button.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;		None
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;  temp            1   34[BANK0 ] unsigned char 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  1    wreg      unsigned char 
  7665 ;; Registers used:
  7666 ;;		wreg, status,2, status,0, cstack
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7673 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7675 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7676 ;;Total ram usage:        1 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; Hardware stack levels required when called:    7
  7679 ;; This function calls:
  7680 ;;		_delayUS
  7681 ;; This function is called by:
  7682 ;;		_UseIRCode
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text4
  7687  008F04                     __ptext4:
  7688                           	opt stack 0
  7689  008F04                     _ReadCodeButtons:
  7690                           	opt stack 22
  7691                           
  7692                           ;Button.c: 69: unsigned char temp = 0;
  7693                           
  7694                           ;incstack = 0
  7695  008F04  0E00               	movlw	0
  7696  008F06  0100               	movlb	0	; () banked
  7697  008F08  6F82               	movwf	ReadCodeButtons@temp& (0+255),b
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;Button.c: 71: (LATC &= ~0x10);
  7701  008F0A  988B               	bcf	3979,4,c	;volatile
  7702                           
  7703                           ; BSR set to: 0
  7704                           ;Button.c: 72: delayUS(5);
  7705  008F0C  0E05               	movlw	5
  7706  008F0E  0100               	movlb	0	; () banked
  7707  008F10  6F79               	movwf	delayUS@US& (0+255),b
  7708  008F12  0E00               	movlw	0
  7709  008F14  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  7710  008F16  0E00               	movlw	0
  7711  008F18  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  7712  008F1A  0E00               	movlw	0
  7713  008F1C  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  7714  008F1E  EC57  F047         	call	_delayUS	;wreg free
  7715                           
  7716                           ;Button.c: 75: if((PORTB & 0x01) != 0x01)
  7717  008F22  B081               	btfsc	3969,0,c	;volatile
  7718  008F24  D004               	goto	l15085
  7719                           
  7720                           ;Button.c: 76: {
  7721                           ;Button.c: 77: temp +=8;
  7722  008F26  0E08               	movlw	8
  7723  008F28  0100               	movlb	0	; () banked
  7724  008F2A  2782               	addwf	ReadCodeButtons@temp& (0+255),f,b
  7725  008F2C  D000               	goto	l15085
  7726  008F2E                     l15085:
  7727                           
  7728                           ;Button.c: 78: }
  7729                           ;Button.c: 79: if((PORTB & 0x02) != 0x02)
  7730  008F2E  B281               	btfsc	3969,1,c	;volatile
  7731  008F30  D004               	goto	l15089
  7732                           
  7733                           ;Button.c: 80: {
  7734                           ;Button.c: 81: temp +=4;
  7735  008F32  0E04               	movlw	4
  7736  008F34  0100               	movlb	0	; () banked
  7737  008F36  2782               	addwf	ReadCodeButtons@temp& (0+255),f,b
  7738  008F38  D000               	goto	l15089
  7739  008F3A                     l15089:
  7740                           
  7741                           ;Button.c: 82: }
  7742                           ;Button.c: 83: if((PORTB & 0x04) != 0x04)
  7743  008F3A  B481               	btfsc	3969,2,c	;volatile
  7744  008F3C  D004               	goto	l15093
  7745                           
  7746                           ;Button.c: 84: {
  7747                           ;Button.c: 85: temp +=2;
  7748  008F3E  0E02               	movlw	2
  7749  008F40  0100               	movlb	0	; () banked
  7750  008F42  2782               	addwf	ReadCodeButtons@temp& (0+255),f,b
  7751  008F44  D000               	goto	l15093
  7752  008F46                     l15093:
  7753                           
  7754                           ;Button.c: 86: }
  7755                           ;Button.c: 87: if((PORTB & 0x08) != 0x08)
  7756  008F46  B681               	btfsc	3969,3,c	;volatile
  7757  008F48  D002               	goto	l1644
  7758                           
  7759                           ;Button.c: 88: {
  7760                           ;Button.c: 89: temp +=1;
  7761  008F4A  0100               	movlb	0	; () banked
  7762  008F4C  2B82               	incf	ReadCodeButtons@temp& (0+255),f,b
  7763  008F4E                     l1644:
  7764                           
  7765                           ;Button.c: 90: }
  7766                           ;Button.c: 91: (LATC |= 0x10);
  7767  008F4E  888B               	bsf	3979,4,c	;volatile
  7768                           
  7769                           ;Button.c: 92: return temp;
  7770  008F50  0100               	movlb	0	; () banked
  7771  008F52  5182               	movf	ReadCodeButtons@temp& (0+255),w,b
  7772  008F54  0012               	return	
  7773                           
  7774                           ; BSR set to: 0
  7775                           
  7776                           ; BSR set to: 0
  7777  008F56  0012               	return		;funcret
  7778  008F58                     __end_of_ReadCodeButtons:
  7779                           	opt stack 0
  7780                           tblptru	equ	0xFF8
  7781                           tblptrh	equ	0xFF7
  7782                           tblptrl	equ	0xFF6
  7783                           tablat	equ	0xFF5
  7784                           prodh	equ	0xFF4
  7785                           prodl	equ	0xFF3
  7786                           intcon	equ	0xFF2
  7787                           postinc0	equ	0xFEE
  7788                           wreg	equ	0xFE8
  7789                           postdec1	equ	0xFE5
  7790                           fsr1h	equ	0xFE2
  7791                           fsr1l	equ	0xFE1
  7792                           indf2	equ	0xFDF
  7793                           postinc2	equ	0xFDE
  7794                           fsr2h	equ	0xFDA
  7795                           fsr2l	equ	0xFD9
  7796                           status	equ	0xFD8
  7797                           
  7798 ;; *************** function _UseBluetooth *****************
  7799 ;; Defined at:
  7800 ;;		line 280 in file "Bluetooth.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;  String          2    0[BANK2 ] PTR unsigned char 
  7803 ;;		 -> main@BluetoothString(255), 
  7804 ;;  StringPos       1    2[BANK2 ] unsigned char 
  7805 ;; Auto vars:     Size  Location     Type
  7806 ;;  buf           100   15[BANK2 ] unsigned char [100]
  7807 ;;  rfchannelSTR   10  115[BANK2 ] unsigned char [10]
  7808 ;;  temp            4  142[BANK2 ] unsigned long 
  7809 ;;  EnteredNEC      4  133[BANK2 ] unsigned long 
  7810 ;;  tempNec         4  126[BANK2 ] unsigned long 
  7811 ;;  i               1  146[BANK2 ] unsigned char 
  7812 ;;  NecCommand      1  141[BANK2 ] unsigned char 
  7813 ;;  NecAddress      1  140[BANK2 ] unsigned char 
  7814 ;;  rfconf          1  139[BANK2 ] unsigned char 
  7815 ;;  tempRFArray     1  138[BANK2 ] unsigned char 
  7816 ;;  ok              1  137[BANK2 ] unsigned char 
  7817 ;;  device          1  132[BANK2 ] unsigned char 
  7818 ;;  EmptyPlace      1  131[BANK2 ] unsigned char 
  7819 ;;  timeout         1  130[BANK2 ] unsigned char 
  7820 ;;  set             1  125[BANK2 ] unsigned char 
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1    wreg      unsigned char 
  7823 ;; Registers used:
  7824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7830 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7831 ;;      Locals:         0       0       0     132       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7832 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7833 ;;      Totals:         0       0       0     147       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7834 ;;Total ram usage:      147 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; Hardware stack levels required when called:   11
  7837 ;; This function calls:
  7838 ;;		_ClearUSART
  7839 ;;		_DecodeNEC
  7840 ;;		_EncodeNEC
  7841 ;;		_GetNumber
  7842 ;;		_GetStringAfterComma
  7843 ;;		_ReadVoltage
  7844 ;;		_SendNEC_wait
  7845 ;;		_SendRF_wait
  7846 ;;		_StringAddEqual
  7847 ;;		_StringContains
  7848 ;;		_StringContainsCaseInsensitive
  7849 ;;		_StringMatch
  7850 ;;		_StringMatchCaseInsensitive
  7851 ;;		_SyncGlobalToEEPROM
  7852 ;;		_UARTchar
  7853 ;;		_UARTcommandMenu
  7854 ;;		_UARTstring
  7855 ;;		_UARTstringCRLN
  7856 ;;		_WaitForIRsignal
  7857 ;;		_cleanBuffer
  7858 ;;		_delayUS
  7859 ;;		_lowercaseString
  7860 ;;		_sprintf
  7861 ;; This function is called by:
  7862 ;;		_main
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866                           	psect	text5
  7867  0001F6                     __ptext5:
  7868                           	opt stack 0
  7869  0001F6                     _UseBluetooth:
  7870                           	opt stack 19
  7871                           
  7872                           ;Bluetooth.c: 282: unsigned char ok = 1;
  7873                           
  7874                           ; BSR set to: 0
  7875                           ;incstack = 0
  7876  0001F6  0E01               	movlw	1
  7877  0001F8  0102               	movlb	2	; () banked
  7878  0001FA  6F89               	movwf	UseBluetooth@ok& (0+255),b
  7879                           
  7880                           ;Bluetooth.c: 284: unsigned long EnteredNEC = 0;
  7881  0001FC  0E00               	movlw	0
  7882  0001FE  0102               	movlb	2	; () banked
  7883  000200  6F85               	movwf	UseBluetooth@EnteredNEC& (0+255),b
  7884  000202  0E00               	movlw	0
  7885  000204  6F86               	movwf	(UseBluetooth@EnteredNEC+1)& (0+255),b
  7886  000206  0E00               	movlw	0
  7887  000208  6F87               	movwf	(UseBluetooth@EnteredNEC+2)& (0+255),b
  7888  00020A  0E00               	movlw	0
  7889  00020C  6F88               	movwf	(UseBluetooth@EnteredNEC+3)& (0+255),b
  7890                           
  7891                           ;Bluetooth.c: 285: unsigned char NecAddress = 0;
  7892  00020E  0E00               	movlw	0
  7893  000210  0102               	movlb	2	; () banked
  7894  000212  6F8C               	movwf	UseBluetooth@NecAddress& (0+255),b
  7895                           
  7896                           ;Bluetooth.c: 286: unsigned char NecCommand = 0;
  7897  000214  0E00               	movlw	0
  7898  000216  0102               	movlb	2	; () banked
  7899  000218  6F8D               	movwf	UseBluetooth@NecCommand& (0+255),b
  7900                           
  7901                           ;Bluetooth.c: 287: unsigned long temp = 0;
  7902  00021A  0E00               	movlw	0
  7903  00021C  0102               	movlb	2	; () banked
  7904  00021E  6F8E               	movwf	UseBluetooth@temp& (0+255),b
  7905  000220  0E00               	movlw	0
  7906  000222  6F8F               	movwf	(UseBluetooth@temp+1)& (0+255),b
  7907  000224  0E00               	movlw	0
  7908  000226  6F90               	movwf	(UseBluetooth@temp+2)& (0+255),b
  7909  000228  0E00               	movlw	0
  7910  00022A  6F91               	movwf	(UseBluetooth@temp+3)& (0+255),b
  7911                           
  7912                           ;Bluetooth.c: 288: unsigned long tempNec = 0;
  7913  00022C  0E00               	movlw	0
  7914  00022E  0102               	movlb	2	; () banked
  7915  000230  6F7E               	movwf	UseBluetooth@tempNec& (0+255),b
  7916  000232  0E00               	movlw	0
  7917  000234  6F7F               	movwf	(UseBluetooth@tempNec+1)& (0+255),b
  7918  000236  0E00               	movlw	0
  7919  000238  6F80               	movwf	(UseBluetooth@tempNec+2)& (0+255),b
  7920  00023A  0E00               	movlw	0
  7921  00023C  6F81               	movwf	(UseBluetooth@tempNec+3)& (0+255),b
  7922                           
  7923                           ;Bluetooth.c: 289: unsigned char buf[100];
  7924                           ;Bluetooth.c: 290: unsigned char timeout =0;
  7925  00023E  0E00               	movlw	0
  7926  000240  0102               	movlb	2	; () banked
  7927  000242  6F82               	movwf	UseBluetooth@timeout& (0+255),b
  7928                           
  7929                           ;Bluetooth.c: 291: unsigned char rfchannelSTR[10];
  7930                           ;Bluetooth.c: 292: unsigned char rfconf, i, tempRFArray;
  7931                           ;Bluetooth.c: 293: unsigned char device = 0;
  7932  000244  0E00               	movlw	0
  7933  000246  0102               	movlb	2	; () banked
  7934  000248  6F84               	movwf	UseBluetooth@device& (0+255),b
  7935                           
  7936                           ;Bluetooth.c: 294: unsigned char EmptyPlace = 0;
  7937  00024A  0E00               	movlw	0
  7938  00024C  0102               	movlb	2	; () banked
  7939  00024E  6F83               	movwf	UseBluetooth@EmptyPlace& (0+255),b
  7940                           
  7941                           ;Bluetooth.c: 295: unsigned char set = 0;
  7942  000250  0E00               	movlw	0
  7943  000252  0102               	movlb	2	; () banked
  7944  000254  6F7D               	movwf	UseBluetooth@set& (0+255),b
  7945                           
  7946                           ; BSR set to: 2
  7947                           ;Bluetooth.c: 297: cleanBuffer(buf,100);
  7948  000256  0E0F               	movlw	low UseBluetooth@buf
  7949  000258  0100               	movlb	0	; () banked
  7950  00025A  6F79               	movwf	cleanBuffer@data& (0+255),b
  7951  00025C  0E02               	movlw	high UseBluetooth@buf
  7952  00025E  0100               	movlb	0	; () banked
  7953  000260  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
  7954  000262  0E00               	movlw	0
  7955  000264  0100               	movlb	0	; () banked
  7956  000266  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
  7957  000268  0E64               	movlw	100
  7958  00026A  6F7B               	movwf	cleanBuffer@count& (0+255),b
  7959  00026C  ECA6  F046         	call	_cleanBuffer	;wreg free
  7960                           
  7961                           ;Bluetooth.c: 298: cleanBuffer(rfchannelSTR,10);
  7962  000270  0E73               	movlw	low UseBluetooth@rfchannelSTR
  7963  000272  0100               	movlb	0	; () banked
  7964  000274  6F79               	movwf	cleanBuffer@data& (0+255),b
  7965  000276  0E02               	movlw	high UseBluetooth@rfchannelSTR
  7966  000278  0100               	movlb	0	; () banked
  7967  00027A  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
  7968  00027C  0E00               	movlw	0
  7969  00027E  0100               	movlb	0	; () banked
  7970  000280  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
  7971  000282  0E0A               	movlw	10
  7972  000284  6F7B               	movwf	cleanBuffer@count& (0+255),b
  7973  000286  ECA6  F046         	call	_cleanBuffer	;wreg free
  7974                           
  7975                           ;Bluetooth.c: 300: if(StringContainsCaseInsensitive(String,(unsigned char *)"Conf1"))
  7976  00028A  C200  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  7977  00028E  C201  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  7978  000292  0EC6               	movlw	low STR_20
  7979  000294  0100               	movlb	0	; () banked
  7980  000296  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  7981  000298  0EFC               	movlw	high STR_20
  7982  00029A  0100               	movlb	0	; () banked
  7983  00029C  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  7984  00029E  EC69  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  7985  0002A2  0900               	iorlw	0
  7986  0002A4  B4D8               	btfsc	status,2,c
  7987  0002A6  D083               	goto	l15469
  7988                           
  7989                           ;Bluetooth.c: 301: {
  7990                           ;Bluetooth.c: 302: if(StringMatchCaseInsensitive(String,Conf1_ChannelD_STR))
  7991  0002A8  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  7992  0002AC  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  7993  0002B0  0E5C               	movlw	low _Conf1_ChannelD_STR
  7994  0002B2  0100               	movlb	0	; () banked
  7995  0002B4  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  7996  0002B6  0EF0               	movlw	high _Conf1_ChannelD_STR
  7997  0002B8  0100               	movlb	0	; () banked
  7998  0002BA  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  7999  0002BC  EC24  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8000  0002C0  0900               	iorlw	0
  8001  0002C2  B4D8               	btfsc	status,2,c
  8002  0002C4  D012               	goto	l15451
  8003                           
  8004                           ;Bluetooth.c: 303: {
  8005                           ;Bluetooth.c: 305: SendRF_wait(Conf1_ChannelD,1,12,8);
  8006  0002C6  0E97               	movlw	low _Conf1_ChannelD
  8007  0002C8  0100               	movlb	0	; () banked
  8008  0002CA  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8009  0002CC  0EF0               	movlw	high _Conf1_ChannelD
  8010  0002CE  0100               	movlb	0	; () banked
  8011  0002D0  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8012  0002D2  0E01               	movlw	1
  8013  0002D4  0100               	movlb	0	; () banked
  8014  0002D6  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8015  0002D8  0E0C               	movlw	12
  8016  0002DA  0100               	movlb	0	; () banked
  8017  0002DC  6F84               	movwf	SendRF_wait@size& (0+255),b
  8018  0002DE  0E08               	movlw	8
  8019  0002E0  0100               	movlb	0	; () banked
  8020  0002E2  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8021  0002E4  EC81  F048         	call	_SendRF_wait	;wreg free
  8022                           
  8023                           ;Bluetooth.c: 306: }
  8024  0002E8  D054               	goto	l15463
  8025  0002EA                     l15451:
  8026                           
  8027                           ;Bluetooth.c: 307: else if(StringMatchCaseInsensitive(String,Conf1_ChannelE_STR))
  8028  0002EA  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8029  0002EE  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8030  0002F2  0E6B               	movlw	low _Conf1_ChannelE_STR
  8031  0002F4  0100               	movlb	0	; () banked
  8032  0002F6  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8033  0002F8  0EF0               	movlw	high _Conf1_ChannelE_STR
  8034  0002FA  0100               	movlb	0	; () banked
  8035  0002FC  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8036  0002FE  EC24  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8037  000302  0900               	iorlw	0
  8038  000304  B4D8               	btfsc	status,2,c
  8039  000306  D012               	goto	l15455
  8040                           
  8041                           ;Bluetooth.c: 308: {
  8042                           ;Bluetooth.c: 310: SendRF_wait(Conf1_ChannelE,1,12,8);
  8043  000308  0EA3               	movlw	low _Conf1_ChannelE
  8044  00030A  0100               	movlb	0	; () banked
  8045  00030C  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8046  00030E  0EF0               	movlw	high _Conf1_ChannelE
  8047  000310  0100               	movlb	0	; () banked
  8048  000312  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8049  000314  0E01               	movlw	1
  8050  000316  0100               	movlb	0	; () banked
  8051  000318  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8052  00031A  0E0C               	movlw	12
  8053  00031C  0100               	movlb	0	; () banked
  8054  00031E  6F84               	movwf	SendRF_wait@size& (0+255),b
  8055  000320  0E08               	movlw	8
  8056  000322  0100               	movlb	0	; () banked
  8057  000324  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8058  000326  EC81  F048         	call	_SendRF_wait	;wreg free
  8059                           
  8060                           ;Bluetooth.c: 311: }
  8061  00032A  D033               	goto	l15463
  8062  00032C                     l15455:
  8063                           
  8064                           ;Bluetooth.c: 312: else if(StringMatchCaseInsensitive(String,Conf1_ChannelF_STR))
  8065  00032C  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8066  000330  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8067  000334  0E7A               	movlw	low _Conf1_ChannelF_STR
  8068  000336  0100               	movlb	0	; () banked
  8069  000338  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8070  00033A  0EF0               	movlw	high _Conf1_ChannelF_STR
  8071  00033C  0100               	movlb	0	; () banked
  8072  00033E  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8073  000340  EC24  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8074  000344  0900               	iorlw	0
  8075  000346  B4D8               	btfsc	status,2,c
  8076  000348  D012               	goto	l15459
  8077                           
  8078                           ;Bluetooth.c: 313: {
  8079                           ;Bluetooth.c: 315: SendRF_wait(Conf1_ChannelF,1,12,8);
  8080  00034A  0EAF               	movlw	low _Conf1_ChannelF
  8081  00034C  0100               	movlb	0	; () banked
  8082  00034E  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8083  000350  0EF0               	movlw	high _Conf1_ChannelF
  8084  000352  0100               	movlb	0	; () banked
  8085  000354  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8086  000356  0E01               	movlw	1
  8087  000358  0100               	movlb	0	; () banked
  8088  00035A  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8089  00035C  0E0C               	movlw	12
  8090  00035E  0100               	movlb	0	; () banked
  8091  000360  6F84               	movwf	SendRF_wait@size& (0+255),b
  8092  000362  0E08               	movlw	8
  8093  000364  0100               	movlb	0	; () banked
  8094  000366  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8095  000368  EC81  F048         	call	_SendRF_wait	;wreg free
  8096                           
  8097                           ;Bluetooth.c: 316: }
  8098  00036C  D012               	goto	l15463
  8099  00036E                     l15459:
  8100                           
  8101                           ;Bluetooth.c: 317: else
  8102                           ;Bluetooth.c: 318: {
  8103                           ;Bluetooth.c: 320: UARTstring((unsigned char *)SYNTAX_ERR);
  8104  00036E  0E89               	movlw	low _SYNTAX_ERR
  8105  000370  0100               	movlb	0	; () banked
  8106  000372  6F7A               	movwf	UARTstring@data& (0+255),b
  8107  000374  0EF0               	movlw	high _SYNTAX_ERR
  8108  000376  0100               	movlb	0	; () banked
  8109  000378  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8110  00037A  ECD3  F046         	call	_UARTstring	;wreg free
  8111                           
  8112                           ;Bluetooth.c: 321: UARTstring((unsigned char *)CRLN);
  8113  00037E  0ED1               	movlw	low _CRLN
  8114  000380  0100               	movlb	0	; () banked
  8115  000382  6F7A               	movwf	UARTstring@data& (0+255),b
  8116  000384  0EF0               	movlw	high _CRLN
  8117  000386  0100               	movlb	0	; () banked
  8118  000388  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8119  00038A  ECD3  F046         	call	_UARTstring	;wreg free
  8120                           
  8121                           ;Bluetooth.c: 322: return 0;
  8122                           ;	Return value of _UseBluetooth is never used
  8123  00038E  0012               	return	
  8124  000390  D000               	goto	l15463
  8125  000392                     l15463:
  8126                           
  8127                           ;Bluetooth.c: 323: }
  8128                           ;Bluetooth.c: 324: if(ok)
  8129  000392  0102               	movlb	2	; () banked
  8130  000394  5189               	movf	UseBluetooth@ok& (0+255),w,b
  8131  000396  0102               	movlb	2	; () banked
  8132  000398  B4D8               	btfsc	status,2,c
  8133  00039A  0012               	return	
  8134                           
  8135                           ; BSR set to: 2
  8136                           ;Bluetooth.c: 325: {
  8137                           ;Bluetooth.c: 326: UARTstringCRLN((unsigned char *)"Configuration 1 RF code sent");
  8138  00039C  0E2A               	movlw	low STR_21
  8139  00039E  0100               	movlb	0	; () banked
  8140  0003A0  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8141  0003A2  0EF8               	movlw	high STR_21
  8142  0003A4  0100               	movlb	0	; () banked
  8143  0003A6  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8144  0003A8  EC78  F045         	call	_UARTstringCRLN	;wreg free
  8145                           
  8146                           ;Bluetooth.c: 328: }
  8147                           ;Bluetooth.c: 329: }
  8148                           
  8149                           ;Bluetooth.c: 327: return 1;
  8150                           ;	Return value of _UseBluetooth is never used
  8151  0003AC  0012               	return	
  8152  0003AE                     l15469:
  8153                           
  8154                           ;Bluetooth.c: 330: else if(StringContainsCaseInsensitive(String,(unsigned char *)"Conf2"
      +                          ))
  8155  0003AE  C200  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  8156  0003B2  C201  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  8157  0003B6  0ECC               	movlw	low STR_22
  8158  0003B8  0100               	movlb	0	; () banked
  8159  0003BA  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  8160  0003BC  0EFC               	movlw	high STR_22
  8161  0003BE  0100               	movlb	0	; () banked
  8162  0003C0  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  8163  0003C2  EC69  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  8164  0003C6  0900               	iorlw	0
  8165  0003C8  B4D8               	btfsc	status,2,c
  8166  0003CA  D16A               	goto	l15521
  8167                           
  8168                           ;Bluetooth.c: 331: {
  8169                           ;Bluetooth.c: 332: if(StringMatchCaseInsensitive(String,Conf2_ChannelB_ON_STR))
  8170  0003CC  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8171  0003D0  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8172  0003D4  0E98               	movlw	low _Conf2_ChannelB_ON_STR
  8173  0003D6  0100               	movlb	0	; () banked
  8174  0003D8  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8175  0003DA  0EEF               	movlw	high _Conf2_ChannelB_ON_STR
  8176  0003DC  0100               	movlb	0	; () banked
  8177  0003DE  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8178  0003E0  EC24  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8179  0003E4  0900               	iorlw	0
  8180  0003E6  B4D8               	btfsc	status,2,c
  8181  0003E8  D012               	goto	l15475
  8182                           
  8183                           ;Bluetooth.c: 333: {
  8184                           ;Bluetooth.c: 335: SendRF_wait(Conf2_ChannelB_ON,2,16,8);
  8185  0003EA  0ECC               	movlw	low _Conf2_ChannelB_ON
  8186  0003EC  0100               	movlb	0	; () banked
  8187  0003EE  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8188  0003F0  0EEF               	movlw	high _Conf2_ChannelB_ON
  8189  0003F2  0100               	movlb	0	; () banked
  8190  0003F4  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8191  0003F6  0E02               	movlw	2
  8192  0003F8  0100               	movlb	0	; () banked
  8193  0003FA  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8194  0003FC  0E10               	movlw	16
  8195  0003FE  0100               	movlb	0	; () banked
  8196  000400  6F84               	movwf	SendRF_wait@size& (0+255),b
  8197  000402  0E08               	movlw	8
  8198  000404  0100               	movlb	0	; () banked
  8199  000406  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8200  000408  EC81  F048         	call	_SendRF_wait	;wreg free
  8201                           
  8202                           ;Bluetooth.c: 336: }
  8203  00040C  D13B               	goto	l15515
  8204  00040E                     l15475:
  8205                           
  8206                           ;Bluetooth.c: 337: else if(StringMatchCaseInsensitive(String,Conf2_ChannelB_OFF_STR))
  8207  00040E  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8208  000412  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8209  000416  0E72               	movlw	low _Conf2_ChannelB_OFF_STR
  8210  000418  0100               	movlb	0	; () banked
  8211  00041A  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8212  00041C  0EEF               	movlw	high _Conf2_ChannelB_OFF_STR
  8213  00041E  0100               	movlb	0	; () banked
  8214  000420  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8215  000422  EC24  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8216  000426  0900               	iorlw	0
  8217  000428  B4D8               	btfsc	status,2,c
  8218  00042A  D012               	goto	l15479
  8219                           
  8220                           ;Bluetooth.c: 338: {
  8221                           ;Bluetooth.c: 340: SendRF_wait(Conf2_ChannelB_OFF,2,16,8);
  8222  00042C  0EBC               	movlw	low _Conf2_ChannelB_OFF
  8223  00042E  0100               	movlb	0	; () banked
  8224  000430  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8225  000432  0EEF               	movlw	high _Conf2_ChannelB_OFF
  8226  000434  0100               	movlb	0	; () banked
  8227  000436  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8228  000438  0E02               	movlw	2
  8229  00043A  0100               	movlb	0	; () banked
  8230  00043C  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8231  00043E  0E10               	movlw	16
  8232  000440  0100               	movlb	0	; () banked
  8233  000442  6F84               	movwf	SendRF_wait@size& (0+255),b
  8234  000444  0E08               	movlw	8
  8235  000446  0100               	movlb	0	; () banked
  8236  000448  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8237  00044A  EC81  F048         	call	_SendRF_wait	;wreg free
  8238                           
  8239                           ;Bluetooth.c: 341: }
  8240  00044E  D11A               	goto	l15515
  8241  000450                     l15479:
  8242                           
  8243                           ;Bluetooth.c: 342: else if(StringMatchCaseInsensitive(String,Conf2_ChannelD_ON_STR))
  8244  000450  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8245  000454  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8246  000458  0EAA               	movlw	low _Conf2_ChannelD_ON_STR
  8247  00045A  0100               	movlb	0	; () banked
  8248  00045C  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8249  00045E  0EEF               	movlw	high _Conf2_ChannelD_ON_STR
  8250  000460  0100               	movlb	0	; () banked
  8251  000462  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8252  000464  EC24  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8253  000468  0900               	iorlw	0
  8254  00046A  B4D8               	btfsc	status,2,c
  8255  00046C  D012               	goto	l15483
  8256                           
  8257                           ;Bluetooth.c: 343: {
  8258                           ;Bluetooth.c: 345: SendRF_wait(Conf2_ChannelD_ON,2,16,8);
  8259  00046E  0EEC               	movlw	low _Conf2_ChannelD_ON
  8260  000470  0100               	movlb	0	; () banked
  8261  000472  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8262  000474  0EEF               	movlw	high _Conf2_ChannelD_ON
  8263  000476  0100               	movlb	0	; () banked
  8264  000478  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8265  00047A  0E02               	movlw	2
  8266  00047C  0100               	movlb	0	; () banked
  8267  00047E  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8268  000480  0E10               	movlw	16
  8269  000482  0100               	movlb	0	; () banked
  8270  000484  6F84               	movwf	SendRF_wait@size& (0+255),b
  8271  000486  0E08               	movlw	8
  8272  000488  0100               	movlb	0	; () banked
  8273  00048A  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8274  00048C  EC81  F048         	call	_SendRF_wait	;wreg free
  8275                           
  8276                           ;Bluetooth.c: 346: }
  8277  000490  D0F9               	goto	l15515
  8278  000492                     l15483:
  8279                           
  8280                           ;Bluetooth.c: 347: else if(StringMatchCaseInsensitive(String,Conf2_ChannelD_OFF_STR))
  8281  000492  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8282  000496  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8283  00049A  0E85               	movlw	low _Conf2_ChannelD_OFF_STR
  8284  00049C  0100               	movlb	0	; () banked
  8285  00049E  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8286  0004A0  0EEF               	movlw	high _Conf2_ChannelD_OFF_STR
  8287  0004A2  0100               	movlb	0	; () banked
  8288  0004A4  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8289  0004A6  EC24  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8290  0004AA  0900               	iorlw	0
  8291  0004AC  B4D8               	btfsc	status,2,c
  8292  0004AE  D012               	goto	l15487
  8293                           
  8294                           ;Bluetooth.c: 348: {
  8295                           ;Bluetooth.c: 350: SendRF_wait(Conf2_ChannelD_OFF,2,16,8);
  8296  0004B0  0EDC               	movlw	low _Conf2_ChannelD_OFF
  8297  0004B2  0100               	movlb	0	; () banked
  8298  0004B4  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8299  0004B6  0EEF               	movlw	high _Conf2_ChannelD_OFF
  8300  0004B8  0100               	movlb	0	; () banked
  8301  0004BA  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8302  0004BC  0E02               	movlw	2
  8303  0004BE  0100               	movlb	0	; () banked
  8304  0004C0  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8305  0004C2  0E10               	movlw	16
  8306  0004C4  0100               	movlb	0	; () banked
  8307  0004C6  6F84               	movwf	SendRF_wait@size& (0+255),b
  8308  0004C8  0E08               	movlw	8
  8309  0004CA  0100               	movlb	0	; () banked
  8310  0004CC  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8311  0004CE  EC81  F048         	call	_SendRF_wait	;wreg free
  8312                           
  8313                           ;Bluetooth.c: 351: }
  8314  0004D2  D0D8               	goto	l15515
  8315  0004D4                     l15487:
  8316                           
  8317                           ;Bluetooth.c: 352: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_1_ON_STR))
  8318  0004D4  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8319  0004D8  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8320  0004DC  0E36               	movlw	low _Conf2_ChannelH_1_ON_STR
  8321  0004DE  0100               	movlb	0	; () banked
  8322  0004E0  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8323  0004E2  0EEF               	movlw	high _Conf2_ChannelH_1_ON_STR
  8324  0004E4  0100               	movlb	0	; () banked
  8325  0004E6  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8326  0004E8  EC24  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8327  0004EC  0900               	iorlw	0
  8328  0004EE  B4D8               	btfsc	status,2,c
  8329  0004F0  D012               	goto	l15491
  8330                           
  8331                           ;Bluetooth.c: 353: {
  8332                           ;Bluetooth.c: 355: SendRF_wait(Conf2_ChannelH_1_ON,2,16,8);
  8333  0004F2  0E0C               	movlw	low _Conf2_ChannelH_1_ON
  8334  0004F4  0100               	movlb	0	; () banked
  8335  0004F6  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8336  0004F8  0EF0               	movlw	high _Conf2_ChannelH_1_ON
  8337  0004FA  0100               	movlb	0	; () banked
  8338  0004FC  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8339  0004FE  0E02               	movlw	2
  8340  000500  0100               	movlb	0	; () banked
  8341  000502  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8342  000504  0E10               	movlw	16
  8343  000506  0100               	movlb	0	; () banked
  8344  000508  6F84               	movwf	SendRF_wait@size& (0+255),b
  8345  00050A  0E08               	movlw	8
  8346  00050C  0100               	movlb	0	; () banked
  8347  00050E  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8348  000510  EC81  F048         	call	_SendRF_wait	;wreg free
  8349                           
  8350                           ;Bluetooth.c: 356: }
  8351  000514  D0B7               	goto	l15515
  8352  000516                     l15491:
  8353                           
  8354                           ;Bluetooth.c: 357: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_1_OFF_STR))
  8355  000516  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8356  00051A  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8357  00051E  0EF7               	movlw	low _Conf2_ChannelH_1_OFF_STR
  8358  000520  0100               	movlb	0	; () banked
  8359  000522  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8360  000524  0EEE               	movlw	high _Conf2_ChannelH_1_OFF_STR
  8361  000526  0100               	movlb	0	; () banked
  8362  000528  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8363  00052A  EC24  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8364  00052E  0900               	iorlw	0
  8365  000530  B4D8               	btfsc	status,2,c
  8366  000532  D012               	goto	l15495
  8367                           
  8368                           ;Bluetooth.c: 358: {
  8369                           ;Bluetooth.c: 360: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,8);
  8370  000534  0EFC               	movlw	low _Conf2_ChannelH_1_OFF
  8371  000536  0100               	movlb	0	; () banked
  8372  000538  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8373  00053A  0EEF               	movlw	high _Conf2_ChannelH_1_OFF
  8374  00053C  0100               	movlb	0	; () banked
  8375  00053E  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8376  000540  0E02               	movlw	2
  8377  000542  0100               	movlb	0	; () banked
  8378  000544  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8379  000546  0E10               	movlw	16
  8380  000548  0100               	movlb	0	; () banked
  8381  00054A  6F84               	movwf	SendRF_wait@size& (0+255),b
  8382  00054C  0E08               	movlw	8
  8383  00054E  0100               	movlb	0	; () banked
  8384  000550  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8385  000552  EC81  F048         	call	_SendRF_wait	;wreg free
  8386                           
  8387                           ;Bluetooth.c: 361: }
  8388  000556  D096               	goto	l15515
  8389  000558                     l15495:
  8390                           
  8391                           ;Bluetooth.c: 362: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_2_ON_STR))
  8392  000558  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8393  00055C  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8394  000560  0E4A               	movlw	low _Conf2_ChannelH_2_ON_STR
  8395  000562  0100               	movlb	0	; () banked
  8396  000564  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8397  000566  0EEF               	movlw	high _Conf2_ChannelH_2_ON_STR
  8398  000568  0100               	movlb	0	; () banked
  8399  00056A  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8400  00056C  EC24  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8401  000570  0900               	iorlw	0
  8402  000572  B4D8               	btfsc	status,2,c
  8403  000574  D012               	goto	l15499
  8404                           
  8405                           ;Bluetooth.c: 363: {
  8406                           ;Bluetooth.c: 365: SendRF_wait(Conf2_ChannelH_2_ON,2,16,8);
  8407  000576  0E2C               	movlw	low _Conf2_ChannelH_2_ON
  8408  000578  0100               	movlb	0	; () banked
  8409  00057A  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8410  00057C  0EF0               	movlw	high _Conf2_ChannelH_2_ON
  8411  00057E  0100               	movlb	0	; () banked
  8412  000580  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8413  000582  0E02               	movlw	2
  8414  000584  0100               	movlb	0	; () banked
  8415  000586  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8416  000588  0E10               	movlw	16
  8417  00058A  0100               	movlb	0	; () banked
  8418  00058C  6F84               	movwf	SendRF_wait@size& (0+255),b
  8419  00058E  0E08               	movlw	8
  8420  000590  0100               	movlb	0	; () banked
  8421  000592  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8422  000594  EC81  F048         	call	_SendRF_wait	;wreg free
  8423                           
  8424                           ;Bluetooth.c: 366: }
  8425  000598  D075               	goto	l15515
  8426  00059A                     l15499:
  8427                           
  8428                           ;Bluetooth.c: 367: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_2_OFF_STR))
  8429  00059A  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8430  00059E  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8431  0005A2  0E0C               	movlw	low _Conf2_ChannelH_2_OFF_STR
  8432  0005A4  0100               	movlb	0	; () banked
  8433  0005A6  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8434  0005A8  0EEF               	movlw	high _Conf2_ChannelH_2_OFF_STR
  8435  0005AA  0100               	movlb	0	; () banked
  8436  0005AC  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8437  0005AE  EC24  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8438  0005B2  0900               	iorlw	0
  8439  0005B4  B4D8               	btfsc	status,2,c
  8440  0005B6  D012               	goto	l15503
  8441                           
  8442                           ;Bluetooth.c: 368: {
  8443                           ;Bluetooth.c: 370: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,8);
  8444  0005B8  0E1C               	movlw	low _Conf2_ChannelH_2_OFF
  8445  0005BA  0100               	movlb	0	; () banked
  8446  0005BC  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8447  0005BE  0EF0               	movlw	high _Conf2_ChannelH_2_OFF
  8448  0005C0  0100               	movlb	0	; () banked
  8449  0005C2  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8450  0005C4  0E02               	movlw	2
  8451  0005C6  0100               	movlb	0	; () banked
  8452  0005C8  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8453  0005CA  0E10               	movlw	16
  8454  0005CC  0100               	movlb	0	; () banked
  8455  0005CE  6F84               	movwf	SendRF_wait@size& (0+255),b
  8456  0005D0  0E08               	movlw	8
  8457  0005D2  0100               	movlb	0	; () banked
  8458  0005D4  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8459  0005D6  EC81  F048         	call	_SendRF_wait	;wreg free
  8460                           
  8461                           ;Bluetooth.c: 371: }
  8462  0005DA  D054               	goto	l15515
  8463  0005DC                     l15503:
  8464                           
  8465                           ;Bluetooth.c: 372: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_3_ON_STR))
  8466  0005DC  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8467  0005E0  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8468  0005E4  0E5E               	movlw	low _Conf2_ChannelH_3_ON_STR
  8469  0005E6  0100               	movlb	0	; () banked
  8470  0005E8  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8471  0005EA  0EEF               	movlw	high _Conf2_ChannelH_3_ON_STR
  8472  0005EC  0100               	movlb	0	; () banked
  8473  0005EE  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8474  0005F0  EC24  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8475  0005F4  0900               	iorlw	0
  8476  0005F6  B4D8               	btfsc	status,2,c
  8477  0005F8  D012               	goto	l15507
  8478                           
  8479                           ;Bluetooth.c: 373: {
  8480                           ;Bluetooth.c: 375: SendRF_wait(Conf2_ChannelH_3_ON,2,16,8);
  8481  0005FA  0E4C               	movlw	low _Conf2_ChannelH_3_ON
  8482  0005FC  0100               	movlb	0	; () banked
  8483  0005FE  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8484  000600  0EF0               	movlw	high _Conf2_ChannelH_3_ON
  8485  000602  0100               	movlb	0	; () banked
  8486  000604  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8487  000606  0E02               	movlw	2
  8488  000608  0100               	movlb	0	; () banked
  8489  00060A  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8490  00060C  0E10               	movlw	16
  8491  00060E  0100               	movlb	0	; () banked
  8492  000610  6F84               	movwf	SendRF_wait@size& (0+255),b
  8493  000612  0E08               	movlw	8
  8494  000614  0100               	movlb	0	; () banked
  8495  000616  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8496  000618  EC81  F048         	call	_SendRF_wait	;wreg free
  8497                           
  8498                           ;Bluetooth.c: 376: }
  8499  00061C  D033               	goto	l15515
  8500  00061E                     l15507:
  8501                           
  8502                           ;Bluetooth.c: 377: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_3_OFF_STR))
  8503  00061E  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8504  000622  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8505  000626  0E21               	movlw	low _Conf2_ChannelH_3_OFF_STR
  8506  000628  0100               	movlb	0	; () banked
  8507  00062A  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8508  00062C  0EEF               	movlw	high _Conf2_ChannelH_3_OFF_STR
  8509  00062E  0100               	movlb	0	; () banked
  8510  000630  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8511  000632  EC24  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8512  000636  0900               	iorlw	0
  8513  000638  B4D8               	btfsc	status,2,c
  8514  00063A  D012               	goto	l15511
  8515                           
  8516                           ;Bluetooth.c: 378: {
  8517                           ;Bluetooth.c: 380: SendRF_wait(Conf2_ChannelH_2_OFF,3,16,8);
  8518  00063C  0E1C               	movlw	low _Conf2_ChannelH_2_OFF
  8519  00063E  0100               	movlb	0	; () banked
  8520  000640  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8521  000642  0EF0               	movlw	high _Conf2_ChannelH_2_OFF
  8522  000644  0100               	movlb	0	; () banked
  8523  000646  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8524  000648  0E03               	movlw	3
  8525  00064A  0100               	movlb	0	; () banked
  8526  00064C  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8527  00064E  0E10               	movlw	16
  8528  000650  0100               	movlb	0	; () banked
  8529  000652  6F84               	movwf	SendRF_wait@size& (0+255),b
  8530  000654  0E08               	movlw	8
  8531  000656  0100               	movlb	0	; () banked
  8532  000658  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8533  00065A  EC81  F048         	call	_SendRF_wait	;wreg free
  8534                           
  8535                           ;Bluetooth.c: 381: }
  8536  00065E  D012               	goto	l15515
  8537  000660                     l15511:
  8538                           
  8539                           ;Bluetooth.c: 382: else
  8540                           ;Bluetooth.c: 383: {
  8541                           ;Bluetooth.c: 385: UARTstring((unsigned char *)SYNTAX_ERR);
  8542  000660  0E89               	movlw	low _SYNTAX_ERR
  8543  000662  0100               	movlb	0	; () banked
  8544  000664  6F7A               	movwf	UARTstring@data& (0+255),b
  8545  000666  0EF0               	movlw	high _SYNTAX_ERR
  8546  000668  0100               	movlb	0	; () banked
  8547  00066A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8548  00066C  ECD3  F046         	call	_UARTstring	;wreg free
  8549                           
  8550                           ;Bluetooth.c: 386: UARTstring(CRLN);
  8551  000670  0ED1               	movlw	low _CRLN
  8552  000672  0100               	movlb	0	; () banked
  8553  000674  6F7A               	movwf	UARTstring@data& (0+255),b
  8554  000676  0EF0               	movlw	high _CRLN
  8555  000678  0100               	movlb	0	; () banked
  8556  00067A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8557  00067C  ECD3  F046         	call	_UARTstring	;wreg free
  8558                           
  8559                           ;Bluetooth.c: 387: return 0;
  8560                           ;	Return value of _UseBluetooth is never used
  8561  000680  0012               	return	
  8562  000682  D000               	goto	l15515
  8563  000684                     l15515:
  8564                           
  8565                           ;Bluetooth.c: 388: }
  8566                           ;Bluetooth.c: 389: if(ok)
  8567  000684  0102               	movlb	2	; () banked
  8568  000686  5189               	movf	UseBluetooth@ok& (0+255),w,b
  8569  000688  0102               	movlb	2	; () banked
  8570  00068A  B4D8               	btfsc	status,2,c
  8571  00068C  0012               	return	
  8572                           
  8573                           ; BSR set to: 2
  8574                           ;Bluetooth.c: 390: {
  8575                           ;Bluetooth.c: 391: UARTstringCRLN((unsigned char *)"Configuration 2 RF code sent");
  8576  00068E  0E47               	movlw	low STR_23
  8577  000690  0100               	movlb	0	; () banked
  8578  000692  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8579  000694  0EF8               	movlw	high STR_23
  8580  000696  0100               	movlb	0	; () banked
  8581  000698  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8582  00069A  EC78  F045         	call	_UARTstringCRLN	;wreg free
  8583                           
  8584                           ;Bluetooth.c: 393: }
  8585                           ;Bluetooth.c: 394: }
  8586                           
  8587                           ;Bluetooth.c: 392: return 1;
  8588                           ;	Return value of _UseBluetooth is never used
  8589  00069E  0012               	return	
  8590  0006A0                     l15521:
  8591                           
  8592                           ;Bluetooth.c: 395: else if(StringContainsCaseInsensitive(String,(unsigned char *)"NEC"))
  8593  0006A0  C200  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  8594  0006A4  C201  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  8595  0006A8  0EEF               	movlw	low STR_24
  8596  0006AA  0100               	movlb	0	; () banked
  8597  0006AC  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  8598  0006AE  0EFC               	movlw	high STR_24
  8599  0006B0  0100               	movlb	0	; () banked
  8600  0006B2  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  8601  0006B4  EC69  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  8602  0006B8  0900               	iorlw	0
  8603  0006BA  B4D8               	btfsc	status,2,c
  8604  0006BC  D1EF               	goto	l15585
  8605                           
  8606                           ;Bluetooth.c: 396: {
  8607                           ;Bluetooth.c: 397: if(!GetNumber(String, 2, &temp))
  8608  0006BE  C200  F085         	movff	UseBluetooth@String,GetNumber@This
  8609  0006C2  C201  F086         	movff	UseBluetooth@String+1,GetNumber@This+1
  8610  0006C6  0E02               	movlw	2
  8611  0006C8  0100               	movlb	0	; () banked
  8612  0006CA  6F87               	movwf	GetNumber@CommaNumber& (0+255),b
  8613  0006CC  0E8E               	movlw	low UseBluetooth@temp
  8614  0006CE  0100               	movlb	0	; () banked
  8615  0006D0  6F88               	movwf	GetNumber@result& (0+255),b
  8616  0006D2  0E02               	movlw	high UseBluetooth@temp
  8617  0006D4  0100               	movlb	0	; () banked
  8618  0006D6  6F89               	movwf	(GetNumber@result+1)& (0+255),b
  8619  0006D8  ECFB  F023         	call	_GetNumber	;wreg free
  8620  0006DC  0900               	iorlw	0
  8621  0006DE  A4D8               	btfss	status,2,c
  8622  0006E0  D0C9               	goto	l15557
  8623                           
  8624                           ;Bluetooth.c: 398: {
  8625                           ;Bluetooth.c: 399: if(temp > 0xFF)
  8626  0006E2  0102               	movlb	2	; () banked
  8627  0006E4  5191               	movf	(UseBluetooth@temp+3)& (0+255),w,b
  8628  0006E6  0102               	movlb	2	; () banked
  8629  0006E8  1190               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  8630  0006EA  E104               	bnz	u19300
  8631  0006EC  0102               	movlb	2	; () banked
  8632  0006EE  058F               	decf	(UseBluetooth@temp+1)& (0+255),w,b
  8633  0006F0  A0D8               	btfss	status,0,c
  8634  0006F2  D011               	goto	l1875
  8635  0006F4                     u19300:
  8636                           
  8637                           ; BSR set to: 2
  8638                           ;Bluetooth.c: 400: {
  8639                           ;Bluetooth.c: 401: UARTstringCRLN((unsigned char *)"Error: Command larger that 255");
  8640  0006F4  0E15               	movlw	low STR_25
  8641  0006F6  0100               	movlb	0	; () banked
  8642  0006F8  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8643  0006FA  0EF7               	movlw	high STR_25
  8644  0006FC  0100               	movlb	0	; () banked
  8645  0006FE  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8646  000700  EC78  F045         	call	_UARTstringCRLN	;wreg free
  8647                           
  8648                           ;Bluetooth.c: 402: UARTstring(CRLN);
  8649  000704  0ED1               	movlw	low _CRLN
  8650  000706  0100               	movlb	0	; () banked
  8651  000708  6F7A               	movwf	UARTstring@data& (0+255),b
  8652  00070A  0EF0               	movlw	high _CRLN
  8653  00070C  0100               	movlb	0	; () banked
  8654  00070E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8655  000710  ECD3  F046         	call	_UARTstring	;wreg free
  8656                           
  8657                           ;Bluetooth.c: 403: return 0;
  8658                           ;	Return value of _UseBluetooth is never used
  8659  000714  0012               	return	
  8660  000716                     l1875:
  8661                           
  8662                           ; BSR set to: 2
  8663                           ;Bluetooth.c: 404: }
  8664                           ;Bluetooth.c: 405: NecCommand = (unsigned char)temp;
  8665  000716  C28E  F28D         	movff	UseBluetooth@temp,UseBluetooth@NecCommand
  8666                           
  8667                           ; BSR set to: 2
  8668                           ;Bluetooth.c: 406: if(!GetNumber(String, 1, &temp))
  8669  00071A  C200  F085         	movff	UseBluetooth@String,GetNumber@This
  8670  00071E  C201  F086         	movff	UseBluetooth@String+1,GetNumber@This+1
  8671  000722  0E01               	movlw	1
  8672  000724  0100               	movlb	0	; () banked
  8673  000726  6F87               	movwf	GetNumber@CommaNumber& (0+255),b
  8674  000728  0E8E               	movlw	low UseBluetooth@temp
  8675  00072A  0100               	movlb	0	; () banked
  8676  00072C  6F88               	movwf	GetNumber@result& (0+255),b
  8677  00072E  0E02               	movlw	high UseBluetooth@temp
  8678  000730  0100               	movlb	0	; () banked
  8679  000732  6F89               	movwf	(GetNumber@result+1)& (0+255),b
  8680  000734  ECFB  F023         	call	_GetNumber	;wreg free
  8681  000738  0900               	iorlw	0
  8682  00073A  A4D8               	btfss	status,2,c
  8683  00073C  D092               	goto	l15555
  8684                           
  8685                           ;Bluetooth.c: 407: {
  8686                           ;Bluetooth.c: 408: if(temp > 0xFF)
  8687  00073E  0102               	movlb	2	; () banked
  8688  000740  5191               	movf	(UseBluetooth@temp+3)& (0+255),w,b
  8689  000742  0102               	movlb	2	; () banked
  8690  000744  1190               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  8691  000746  E104               	bnz	u19320
  8692  000748  0102               	movlb	2	; () banked
  8693  00074A  058F               	decf	(UseBluetooth@temp+1)& (0+255),w,b
  8694  00074C  A0D8               	btfss	status,0,c
  8695  00074E  D011               	goto	l1877
  8696  000750                     u19320:
  8697                           
  8698                           ; BSR set to: 2
  8699                           ;Bluetooth.c: 409: {
  8700                           ;Bluetooth.c: 410: UARTstringCRLN((unsigned char *)"Error: Address larger that 255");
  8701  000750  0E34               	movlw	low STR_26
  8702  000752  0100               	movlb	0	; () banked
  8703  000754  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8704  000756  0EF7               	movlw	high STR_26
  8705  000758  0100               	movlb	0	; () banked
  8706  00075A  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8707  00075C  EC78  F045         	call	_UARTstringCRLN	;wreg free
  8708                           
  8709                           ;Bluetooth.c: 411: UARTstring(CRLN);
  8710  000760  0ED1               	movlw	low _CRLN
  8711  000762  0100               	movlb	0	; () banked
  8712  000764  6F7A               	movwf	UARTstring@data& (0+255),b
  8713  000766  0EF0               	movlw	high _CRLN
  8714  000768  0100               	movlb	0	; () banked
  8715  00076A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8716  00076C  ECD3  F046         	call	_UARTstring	;wreg free
  8717                           
  8718                           ;Bluetooth.c: 412: return 0;
  8719                           ;	Return value of _UseBluetooth is never used
  8720  000770  0012               	return	
  8721  000772                     l1877:
  8722                           
  8723                           ; BSR set to: 2
  8724                           ;Bluetooth.c: 413: }
  8725                           ;Bluetooth.c: 414: NecAddress = (unsigned char) temp;
  8726  000772  C28E  F28C         	movff	UseBluetooth@temp,UseBluetooth@NecAddress
  8727                           
  8728                           ; BSR set to: 2
  8729                           ;Bluetooth.c: 415: sprintf(buf,"NEC address: 0x%02X ", NecAddress);
  8730  000776  0E0F               	movlw	low UseBluetooth@buf
  8731  000778  0100               	movlb	0	; () banked
  8732  00077A  6FC7               	movwf	sprintf@sp& (0+255),b
  8733  00077C  0E02               	movlw	high UseBluetooth@buf
  8734  00077E  0100               	movlb	0	; () banked
  8735  000780  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  8736  000782  0ED7               	movlw	low STR_27
  8737  000784  0100               	movlb	0	; () banked
  8738  000786  6FC9               	movwf	sprintf@f& (0+255),b
  8739  000788  0EF9               	movlw	high STR_27
  8740  00078A  0100               	movlb	0	; () banked
  8741  00078C  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  8742  00078E  C28C  F0CB         	movff	UseBluetooth@NecAddress,?_sprintf+4
  8743  000792  0100               	movlb	0	; () banked
  8744  000794  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  8745  000796  ECC4  F010         	call	_sprintf	;wreg free
  8746                           
  8747                           ;Bluetooth.c: 416: UARTstringCRLN(buf);
  8748  00079A  0E0F               	movlw	low UseBluetooth@buf
  8749  00079C  0100               	movlb	0	; () banked
  8750  00079E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8751  0007A0  0E02               	movlw	high UseBluetooth@buf
  8752  0007A2  0100               	movlb	0	; () banked
  8753  0007A4  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8754  0007A6  EC78  F045         	call	_UARTstringCRLN	;wreg free
  8755                           
  8756                           ;Bluetooth.c: 417: sprintf(buf,"NEC command: 0x%02X ", NecCommand);
  8757  0007AA  0E0F               	movlw	low UseBluetooth@buf
  8758  0007AC  0100               	movlb	0	; () banked
  8759  0007AE  6FC7               	movwf	sprintf@sp& (0+255),b
  8760  0007B0  0E02               	movlw	high UseBluetooth@buf
  8761  0007B2  0100               	movlb	0	; () banked
  8762  0007B4  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  8763  0007B6  0EC2               	movlw	low STR_28
  8764  0007B8  0100               	movlb	0	; () banked
  8765  0007BA  6FC9               	movwf	sprintf@f& (0+255),b
  8766  0007BC  0EF9               	movlw	high STR_28
  8767  0007BE  0100               	movlb	0	; () banked
  8768  0007C0  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  8769  0007C2  C28D  F0CB         	movff	UseBluetooth@NecCommand,?_sprintf+4
  8770  0007C6  0100               	movlb	0	; () banked
  8771  0007C8  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  8772  0007CA  ECC4  F010         	call	_sprintf	;wreg free
  8773                           
  8774                           ;Bluetooth.c: 418: UARTstringCRLN(buf);
  8775  0007CE  0E0F               	movlw	low UseBluetooth@buf
  8776  0007D0  0100               	movlb	0	; () banked
  8777  0007D2  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8778  0007D4  0E02               	movlw	high UseBluetooth@buf
  8779  0007D6  0100               	movlb	0	; () banked
  8780  0007D8  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8781  0007DA  EC78  F045         	call	_UARTstringCRLN	;wreg free
  8782                           
  8783                           ;Bluetooth.c: 419: EnteredNEC = EncodeNEC(NecAddress, NecCommand);
  8784  0007DE  C28D  F07D         	movff	UseBluetooth@NecCommand,EncodeNEC@command
  8785  0007E2  0102               	movlb	2	; () banked
  8786  0007E4  518C               	movf	UseBluetooth@NecAddress& (0+255),w,b
  8787  0007E6  EC2E  F039         	call	_EncodeNEC
  8788  0007EA  C07D  F285         	movff	?_EncodeNEC,UseBluetooth@EnteredNEC
  8789  0007EE  C07E  F286         	movff	?_EncodeNEC+1,UseBluetooth@EnteredNEC+1
  8790  0007F2  C07F  F287         	movff	?_EncodeNEC+2,UseBluetooth@EnteredNEC+2
  8791  0007F6  C080  F288         	movff	?_EncodeNEC+3,UseBluetooth@EnteredNEC+3
  8792                           
  8793                           ;Bluetooth.c: 420: SendNEC_wait(EnteredNEC,0);
  8794  0007FA  C285  F08E         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
  8795  0007FE  C286  F08F         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
  8796  000802  C287  F090         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
  8797  000806  C288  F091         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
  8798  00080A  0E00               	movlw	0
  8799  00080C  0100               	movlb	0	; () banked
  8800  00080E  6F92               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  8801  000810  ECD5  F042         	call	_SendNEC_wait	;wreg free
  8802                           
  8803                           ;Bluetooth.c: 421: sprintf(buf,"Sent NEC code = 0x%lX ", EnteredNEC);
  8804  000814  0E0F               	movlw	low UseBluetooth@buf
  8805  000816  0100               	movlb	0	; () banked
  8806  000818  6FC7               	movwf	sprintf@sp& (0+255),b
  8807  00081A  0E02               	movlw	high UseBluetooth@buf
  8808  00081C  0100               	movlb	0	; () banked
  8809  00081E  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  8810  000820  0E53               	movlw	low STR_29
  8811  000822  0100               	movlb	0	; () banked
  8812  000824  6FC9               	movwf	sprintf@f& (0+255),b
  8813  000826  0EF9               	movlw	high STR_29
  8814  000828  0100               	movlb	0	; () banked
  8815  00082A  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  8816  00082C  C285  F0CB         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
  8817  000830  C286  F0CC         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
  8818  000834  C287  F0CD         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
  8819  000838  C288  F0CE         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
  8820  00083C  ECC4  F010         	call	_sprintf	;wreg free
  8821                           
  8822                           ;Bluetooth.c: 422: UARTstringCRLN(buf);
  8823  000840  0E0F               	movlw	low UseBluetooth@buf
  8824  000842  0100               	movlb	0	; () banked
  8825  000844  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8826  000846  0E02               	movlw	high UseBluetooth@buf
  8827  000848  0100               	movlb	0	; () banked
  8828  00084A  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8829  00084C  EC78  F045         	call	_UARTstringCRLN	;wreg free
  8830                           
  8831                           ;Bluetooth.c: 423: UARTstring(CRLN);
  8832  000850  0ED1               	movlw	low _CRLN
  8833  000852  0100               	movlb	0	; () banked
  8834  000854  6F7A               	movwf	UARTstring@data& (0+255),b
  8835  000856  0EF0               	movlw	high _CRLN
  8836  000858  0100               	movlb	0	; () banked
  8837  00085A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8838  00085C  ECD3  F046         	call	_UARTstring	;wreg free
  8839                           
  8840                           ;Bluetooth.c: 424: }
  8841  000860  0012               	return	
  8842  000862                     l15555:
  8843                           
  8844                           ;Bluetooth.c: 425: else
  8845                           ;Bluetooth.c: 426: {
  8846                           ;Bluetooth.c: 427: UARTstringCRLN((unsigned char *)"Error: could not decode Address");
  8847  000862  0EF5               	movlw	low STR_30
  8848  000864  0100               	movlb	0	; () banked
  8849  000866  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8850  000868  0EF6               	movlw	high STR_30
  8851  00086A  0100               	movlb	0	; () banked
  8852  00086C  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8853  00086E  EC78  F045         	call	_UARTstringCRLN	;wreg free
  8854                           
  8855                           ;Bluetooth.c: 428: }
  8856                           ;Bluetooth.c: 429: }
  8857  000872  0012               	return	
  8858  000874                     l15557:
  8859                           
  8860                           ;Bluetooth.c: 430: else if(!GetNumber(String, 1, &EnteredNEC))
  8861  000874  C200  F085         	movff	UseBluetooth@String,GetNumber@This
  8862  000878  C201  F086         	movff	UseBluetooth@String+1,GetNumber@This+1
  8863  00087C  0E01               	movlw	1
  8864  00087E  0100               	movlb	0	; () banked
  8865  000880  6F87               	movwf	GetNumber@CommaNumber& (0+255),b
  8866  000882  0E85               	movlw	low UseBluetooth@EnteredNEC
  8867  000884  0100               	movlb	0	; () banked
  8868  000886  6F88               	movwf	GetNumber@result& (0+255),b
  8869  000888  0E02               	movlw	high UseBluetooth@EnteredNEC
  8870  00088A  0100               	movlb	0	; () banked
  8871  00088C  6F89               	movwf	(GetNumber@result+1)& (0+255),b
  8872  00088E  ECFB  F023         	call	_GetNumber	;wreg free
  8873  000892  0900               	iorlw	0
  8874  000894  A4D8               	btfss	status,2,c
  8875  000896  D08A               	goto	l15579
  8876                           
  8877                           ;Bluetooth.c: 431: {
  8878                           ;Bluetooth.c: 432: SendNEC_wait(EnteredNEC,0);
  8879  000898  C285  F08E         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
  8880  00089C  C286  F08F         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
  8881  0008A0  C287  F090         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
  8882  0008A4  C288  F091         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
  8883  0008A8  0E00               	movlw	0
  8884  0008AA  0100               	movlb	0	; () banked
  8885  0008AC  6F92               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  8886  0008AE  ECD5  F042         	call	_SendNEC_wait	;wreg free
  8887                           
  8888                           ;Bluetooth.c: 433: sprintf(buf,"sent NEC code 0x%lX", EnteredNEC);
  8889  0008B2  0E0F               	movlw	low UseBluetooth@buf
  8890  0008B4  0100               	movlb	0	; () banked
  8891  0008B6  6FC7               	movwf	sprintf@sp& (0+255),b
  8892  0008B8  0E02               	movlw	high UseBluetooth@buf
  8893  0008BA  0100               	movlb	0	; () banked
  8894  0008BC  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  8895  0008BE  0E53               	movlw	low STR_31
  8896  0008C0  0100               	movlb	0	; () banked
  8897  0008C2  6FC9               	movwf	sprintf@f& (0+255),b
  8898  0008C4  0EFA               	movlw	high STR_31
  8899  0008C6  0100               	movlb	0	; () banked
  8900  0008C8  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  8901  0008CA  C285  F0CB         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
  8902  0008CE  C286  F0CC         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
  8903  0008D2  C287  F0CD         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
  8904  0008D6  C288  F0CE         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
  8905  0008DA  ECC4  F010         	call	_sprintf	;wreg free
  8906                           
  8907                           ;Bluetooth.c: 434: UARTstringCRLN(buf);
  8908  0008DE  0E0F               	movlw	low UseBluetooth@buf
  8909  0008E0  0100               	movlb	0	; () banked
  8910  0008E2  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8911  0008E4  0E02               	movlw	high UseBluetooth@buf
  8912  0008E6  0100               	movlb	0	; () banked
  8913  0008E8  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8914  0008EA  EC78  F045         	call	_UARTstringCRLN	;wreg free
  8915                           
  8916                           ;Bluetooth.c: 435: if(DecodeNEC(EnteredNEC, &NecAddress, &NecCommand))
  8917  0008EE  C285  F07D         	movff	UseBluetooth@EnteredNEC,DecodeNEC@Nec
  8918  0008F2  C286  F07E         	movff	UseBluetooth@EnteredNEC+1,DecodeNEC@Nec+1
  8919  0008F6  C287  F07F         	movff	UseBluetooth@EnteredNEC+2,DecodeNEC@Nec+2
  8920  0008FA  C288  F080         	movff	UseBluetooth@EnteredNEC+3,DecodeNEC@Nec+3
  8921  0008FE  0E8C               	movlw	low UseBluetooth@NecAddress
  8922  000900  0100               	movlb	0	; () banked
  8923  000902  6F81               	movwf	DecodeNEC@address& (0+255),b
  8924  000904  0E02               	movlw	high UseBluetooth@NecAddress
  8925  000906  0100               	movlb	0	; () banked
  8926  000908  6F82               	movwf	(DecodeNEC@address+1)& (0+255),b
  8927  00090A  0E8D               	movlw	low UseBluetooth@NecCommand
  8928  00090C  0100               	movlb	0	; () banked
  8929  00090E  6F83               	movwf	DecodeNEC@command& (0+255),b
  8930  000910  0E02               	movlw	high UseBluetooth@NecCommand
  8931  000912  0100               	movlb	0	; () banked
  8932  000914  6F84               	movwf	(DecodeNEC@command+1)& (0+255),b
  8933  000916  EC8A  F041         	call	_DecodeNEC	;wreg free
  8934  00091A  0900               	iorlw	0
  8935  00091C  B4D8               	btfsc	status,2,c
  8936  00091E  D035               	goto	l15573
  8937                           
  8938                           ;Bluetooth.c: 436: {
  8939                           ;Bluetooth.c: 437: sprintf(buf,"address: 0x%02X ", NecAddress);
  8940  000920  0E0F               	movlw	low UseBluetooth@buf
  8941  000922  0100               	movlb	0	; () banked
  8942  000924  6FC7               	movwf	sprintf@sp& (0+255),b
  8943  000926  0E02               	movlw	high UseBluetooth@buf
  8944  000928  0100               	movlb	0	; () banked
  8945  00092A  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  8946  00092C  0EDB               	movlw	low (STR_27+4)
  8947  00092E  0100               	movlb	0	; () banked
  8948  000930  6FC9               	movwf	sprintf@f& (0+255),b
  8949  000932  0EF9               	movlw	high (STR_27+4)
  8950  000934  0100               	movlb	0	; () banked
  8951  000936  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  8952  000938  C28C  F0CB         	movff	UseBluetooth@NecAddress,?_sprintf+4
  8953  00093C  0100               	movlb	0	; () banked
  8954  00093E  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  8955  000940  ECC4  F010         	call	_sprintf	;wreg free
  8956                           
  8957                           ;Bluetooth.c: 438: UARTstringCRLN(buf);
  8958  000944  0E0F               	movlw	low UseBluetooth@buf
  8959  000946  0100               	movlb	0	; () banked
  8960  000948  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8961  00094A  0E02               	movlw	high UseBluetooth@buf
  8962  00094C  0100               	movlb	0	; () banked
  8963  00094E  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8964  000950  EC78  F045         	call	_UARTstringCRLN	;wreg free
  8965                           
  8966                           ;Bluetooth.c: 439: sprintf(buf,"command: 0x%02X ", NecCommand);
  8967  000954  0E0F               	movlw	low UseBluetooth@buf
  8968  000956  0100               	movlb	0	; () banked
  8969  000958  6FC7               	movwf	sprintf@sp& (0+255),b
  8970  00095A  0E02               	movlw	high UseBluetooth@buf
  8971  00095C  0100               	movlb	0	; () banked
  8972  00095E  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  8973  000960  0EC3               	movlw	low (STR_48+27)
  8974  000962  0100               	movlb	0	; () banked
  8975  000964  6FC9               	movwf	sprintf@f& (0+255),b
  8976  000966  0EF4               	movlw	high (STR_48+27)
  8977  000968  0100               	movlb	0	; () banked
  8978  00096A  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  8979  00096C  C28D  F0CB         	movff	UseBluetooth@NecCommand,?_sprintf+4
  8980  000970  0100               	movlb	0	; () banked
  8981  000972  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  8982  000974  ECC4  F010         	call	_sprintf	;wreg free
  8983                           
  8984                           ;Bluetooth.c: 440: UARTstringCRLN(buf);
  8985  000978  0E0F               	movlw	low UseBluetooth@buf
  8986  00097A  0100               	movlb	0	; () banked
  8987  00097C  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8988  00097E  0E02               	movlw	high UseBluetooth@buf
  8989  000980  0100               	movlb	0	; () banked
  8990  000982  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8991  000984  EC78  F045         	call	_UARTstringCRLN	;wreg free
  8992                           
  8993                           ;Bluetooth.c: 441: }
  8994  000988  D008               	goto	l1882
  8995  00098A                     l15573:
  8996                           
  8997                           ;Bluetooth.c: 442: else
  8998                           ;Bluetooth.c: 443: {
  8999                           ;Bluetooth.c: 444: UARTstringCRLN((unsigned char *)"Error: could not decode NEC code");
  9000  00098A  0E34               	movlw	low STR_34
  9001  00098C  0100               	movlb	0	; () banked
  9002  00098E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9003  000990  0EF6               	movlw	high STR_34
  9004  000992  0100               	movlb	0	; () banked
  9005  000994  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9006  000996  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9007  00099A                     l1882:
  9008                           
  9009                           ;Bluetooth.c: 445: }
  9010                           ;Bluetooth.c: 446: UARTstring(CRLN);
  9011  00099A  0ED1               	movlw	low _CRLN
  9012  00099C  0100               	movlb	0	; () banked
  9013  00099E  6F7A               	movwf	UARTstring@data& (0+255),b
  9014  0009A0  0EF0               	movlw	high _CRLN
  9015  0009A2  0100               	movlb	0	; () banked
  9016  0009A4  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9017  0009A6  ECD3  F046         	call	_UARTstring	;wreg free
  9018                           
  9019                           ;Bluetooth.c: 448: }
  9020                           
  9021                           ;Bluetooth.c: 447: return 1;
  9022                           ;	Return value of _UseBluetooth is never used
  9023  0009AA  0012               	return	
  9024  0009AC                     l15579:
  9025                           
  9026                           ;Bluetooth.c: 449: else
  9027                           ;Bluetooth.c: 450: {
  9028                           ;Bluetooth.c: 451: if(!StringContains(String,(unsigned char *)"?"))
  9029  0009AC  C200  F079         	movff	UseBluetooth@String,StringContains@This
  9030  0009B0  C201  F07A         	movff	UseBluetooth@String+1,StringContains@This+1
  9031  0009B4  0EED               	movlw	low (STR_89+2)
  9032  0009B6  0100               	movlb	0	; () banked
  9033  0009B8  6F7B               	movwf	StringContains@That& (0+255),b
  9034  0009BA  0EFC               	movlw	high (STR_89+2)
  9035  0009BC  0100               	movlb	0	; () banked
  9036  0009BE  6F7C               	movwf	(StringContains@That+1)& (0+255),b
  9037  0009C0  EC31  F041         	call	_StringContains	;wreg free
  9038  0009C4  0900               	iorlw	0
  9039  0009C6  A4D8               	btfss	status,2,c
  9040  0009C8  D010               	goto	l1884
  9041                           
  9042                           ;Bluetooth.c: 452: {
  9043                           ;Bluetooth.c: 453: UARTstring(CRLN);
  9044  0009CA  0ED1               	movlw	low _CRLN
  9045  0009CC  0100               	movlb	0	; () banked
  9046  0009CE  6F7A               	movwf	UARTstring@data& (0+255),b
  9047  0009D0  0EF0               	movlw	high _CRLN
  9048  0009D2  0100               	movlb	0	; () banked
  9049  0009D4  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9050  0009D6  ECD3  F046         	call	_UARTstring	;wreg free
  9051                           
  9052                           ;Bluetooth.c: 454: UARTstringCRLN((unsigned char *)"NEC code not entered correctly");
  9053  0009DA  0EEE               	movlw	low STR_36
  9054  0009DC  0100               	movlb	0	; () banked
  9055  0009DE  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9056  0009E0  0EF7               	movlw	high STR_36
  9057  0009E2  0100               	movlb	0	; () banked
  9058  0009E4  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9059  0009E6  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9060  0009EA                     l1884:
  9061                           
  9062                           ;Bluetooth.c: 455: }
  9063                           ;Bluetooth.c: 456: UARTstring(CRLN);
  9064  0009EA  0ED1               	movlw	low _CRLN
  9065  0009EC  0100               	movlb	0	; () banked
  9066  0009EE  6F7A               	movwf	UARTstring@data& (0+255),b
  9067  0009F0  0EF0               	movlw	high _CRLN
  9068  0009F2  0100               	movlb	0	; () banked
  9069  0009F4  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9070  0009F6  ECD3  F046         	call	_UARTstring	;wreg free
  9071                           
  9072                           ;Bluetooth.c: 457: UARTstringCRLN((unsigned char *)"Usage:");
  9073  0009FA  0EB2               	movlw	low STR_37
  9074  0009FC  0100               	movlb	0	; () banked
  9075  0009FE  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9076  000A00  0EFC               	movlw	high STR_37
  9077  000A02  0100               	movlb	0	; () banked
  9078  000A04  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9079  000A06  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9080                           
  9081                           ;Bluetooth.c: 458: UARTstringCRLN((unsigned char *)"NEC = (32 bit code)");
  9082  000A0A  0E2B               	movlw	low STR_38
  9083  000A0C  0100               	movlb	0	; () banked
  9084  000A0E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9085  000A10  0EFA               	movlw	high STR_38
  9086  000A12  0100               	movlb	0	; () banked
  9087  000A14  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9088  000A16  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9089                           
  9090                           ;Bluetooth.c: 459: UARTstringCRLN((unsigned char *)"        or");
  9091  000A1A  0E69               	movlw	low STR_39
  9092  000A1C  0100               	movlb	0	; () banked
  9093  000A1E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9094  000A20  0EFC               	movlw	high STR_39
  9095  000A22  0100               	movlb	0	; () banked
  9096  000A24  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9097  000A26  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9098                           
  9099                           ;Bluetooth.c: 460: UARTstringCRLN((unsigned char *)"NEC = address,command");
  9100  000A2A  0E97               	movlw	low STR_40
  9101  000A2C  0100               	movlb	0	; () banked
  9102  000A2E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9103  000A30  0EF9               	movlw	high STR_40
  9104  000A32  0100               	movlb	0	; () banked
  9105  000A34  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9106  000A36  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9107                           
  9108                           ;Bluetooth.c: 461: UARTstring(CRLN);
  9109  000A3A  0ED1               	movlw	low _CRLN
  9110  000A3C  0100               	movlb	0	; () banked
  9111  000A3E  6F7A               	movwf	UARTstring@data& (0+255),b
  9112  000A40  0EF0               	movlw	high _CRLN
  9113  000A42  0100               	movlb	0	; () banked
  9114  000A44  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9115  000A46  ECD3  F046         	call	_UARTstring	;wreg free
  9116                           
  9117                           ;Bluetooth.c: 462: UARTstringCRLN((unsigned char *)"Example:");
  9118  000A4A  0E91               	movlw	low STR_41
  9119  000A4C  0100               	movlb	0	; () banked
  9120  000A4E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9121  000A50  0EFC               	movlw	high STR_41
  9122  000A52  0100               	movlb	0	; () banked
  9123  000A54  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9124  000A56  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9125                           
  9126                           ;Bluetooth.c: 463: UARTstringCRLN((unsigned char *)"NEC = 0x1CE350AF ");
  9127  000A5A  0EEE               	movlw	low STR_42
  9128  000A5C  0100               	movlb	0	; () banked
  9129  000A5E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9130  000A60  0EFA               	movlw	high STR_42
  9131  000A62  0100               	movlb	0	; () banked
  9132  000A64  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9133  000A66  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9134                           
  9135                           ;Bluetooth.c: 464: UARTstringCRLN((unsigned char *)"      or");
  9136  000A6A  0E6B               	movlw	low (STR_39+2)
  9137  000A6C  0100               	movlb	0	; () banked
  9138  000A6E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9139  000A70  0EFC               	movlw	high (STR_39+2)
  9140  000A72  0100               	movlb	0	; () banked
  9141  000A74  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9142  000A76  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9143                           
  9144                           ;Bluetooth.c: 465: UARTstringCRLN((unsigned char *)"NEC = 0x38, 0x0A");
  9145  000A7A  0E46               	movlw	low STR_44
  9146  000A7C  0100               	movlb	0	; () banked
  9147  000A7E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9148  000A80  0EFB               	movlw	high STR_44
  9149  000A82  0100               	movlb	0	; () banked
  9150  000A84  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9151  000A86  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9152                           
  9153                           ;Bluetooth.c: 466: UARTstring(CRLN);
  9154  000A8A  0ED1               	movlw	low _CRLN
  9155  000A8C  0100               	movlb	0	; () banked
  9156  000A8E  6F7A               	movwf	UARTstring@data& (0+255),b
  9157  000A90  0EF0               	movlw	high _CRLN
  9158  000A92  0100               	movlb	0	; () banked
  9159  000A94  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9160  000A96  ECD3  F046         	call	_UARTstring	;wreg free
  9161                           
  9162                           ;Bluetooth.c: 468: }
  9163                           ;Bluetooth.c: 469: }
  9164                           
  9165                           ;Bluetooth.c: 467: return 0;
  9166                           ;	Return value of _UseBluetooth is never used
  9167  000A9A  0012               	return	
  9168  000A9C                     l15585:
  9169                           
  9170                           ;Bluetooth.c: 470: else if(StringContainsCaseInsensitive(String,(unsigned char *)"Remote
      +                          Button"))
  9171  000A9C  C200  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9172  000AA0  C201  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9173  000AA4  0E1A               	movlw	low STR_45
  9174  000AA6  0100               	movlb	0	; () banked
  9175  000AA8  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9176  000AAA  0EFC               	movlw	high STR_45
  9177  000AAC  0100               	movlb	0	; () banked
  9178  000AAE  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9179  000AB0  EC69  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  9180  000AB4  0900               	iorlw	0
  9181  000AB6  B4D8               	btfsc	status,2,c
  9182  000AB8  D2C8               	goto	l15673
  9183                           
  9184                           ;Bluetooth.c: 471: {
  9185                           ;Bluetooth.c: 472: if(StringAddEqual(String))
  9186  000ABA  C200  F088         	movff	UseBluetooth@String,StringAddEqual@Input
  9187  000ABE  C201  F089         	movff	UseBluetooth@String+1,StringAddEqual@Input+1
  9188  000AC2  EC2D  F031         	call	_StringAddEqual	;wreg free
  9189  000AC6  0900               	iorlw	0
  9190  000AC8  B4D8               	btfsc	status,2,c
  9191  000ACA  D266               	goto	l15667
  9192                           
  9193                           ;Bluetooth.c: 473: {
  9194                           ;Bluetooth.c: 474: StringPos++;
  9195  000ACC  0102               	movlb	2	; () banked
  9196  000ACE  2B02               	incf	UseBluetooth@StringPos& (0+255),f,b
  9197                           
  9198                           ; BSR set to: 2
  9199                           ;Bluetooth.c: 475: if(!GetNumber(String, 1, &temp))
  9200  000AD0  C200  F085         	movff	UseBluetooth@String,GetNumber@This
  9201  000AD4  C201  F086         	movff	UseBluetooth@String+1,GetNumber@This+1
  9202  000AD8  0E01               	movlw	1
  9203  000ADA  0100               	movlb	0	; () banked
  9204  000ADC  6F87               	movwf	GetNumber@CommaNumber& (0+255),b
  9205  000ADE  0E8E               	movlw	low UseBluetooth@temp
  9206  000AE0  0100               	movlb	0	; () banked
  9207  000AE2  6F88               	movwf	GetNumber@result& (0+255),b
  9208  000AE4  0E02               	movlw	high UseBluetooth@temp
  9209  000AE6  0100               	movlb	0	; () banked
  9210  000AE8  6F89               	movwf	(GetNumber@result+1)& (0+255),b
  9211  000AEA  ECFB  F023         	call	_GetNumber	;wreg free
  9212  000AEE  0900               	iorlw	0
  9213  000AF0  A4D8               	btfss	status,2,c
  9214  000AF2  D252               	goto	l15667
  9215                           
  9216                           ;Bluetooth.c: 476: {
  9217                           ;Bluetooth.c: 477: if(temp <= 20 && temp > 0)
  9218  000AF4  0102               	movlb	2	; () banked
  9219  000AF6  5191               	movf	(UseBluetooth@temp+3)& (0+255),w,b
  9220  000AF8  0102               	movlb	2	; () banked
  9221  000AFA  1190               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  9222  000AFC  0102               	movlb	2	; () banked
  9223  000AFE  118F               	iorwf	(UseBluetooth@temp+1)& (0+255),w,b
  9224  000B00  E104               	bnz	u19391
  9225  000B02  0E15               	movlw	21
  9226  000B04  0102               	movlb	2	; () banked
  9227  000B06  5D8E               	subwf	UseBluetooth@temp& (0+255),w,b
  9228  000B08  B0D8               	btfsc	status,0,c
  9229  000B0A                     u19391:
  9230  000B0A  D22C               	goto	l15663
  9231                           
  9232                           ; BSR set to: 2
  9233  000B0C  0102               	movlb	2	; () banked
  9234  000B0E  518E               	movf	UseBluetooth@temp& (0+255),w,b
  9235  000B10  0102               	movlb	2	; () banked
  9236  000B12  118F               	iorwf	(UseBluetooth@temp+1)& (0+255),w,b
  9237  000B14  0102               	movlb	2	; () banked
  9238  000B16  1190               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  9239  000B18  0102               	movlb	2	; () banked
  9240  000B1A  1191               	iorwf	(UseBluetooth@temp+3)& (0+255),w,b
  9241  000B1C  B4D8               	btfsc	status,2,c
  9242  000B1E  D222               	goto	l15663
  9243                           
  9244                           ; BSR set to: 2
  9245                           ;Bluetooth.c: 478: {
  9246                           ;Bluetooth.c: 479: if(!StringContainsCaseInsensitive(String,(unsigned char *)"set"))
  9247  000B20  C200  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9248  000B24  C201  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9249  000B28  0E8B               	movlw	low (STR_56+16)
  9250  000B2A  0100               	movlb	0	; () banked
  9251  000B2C  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9252  000B2E  0EFA               	movlw	high (STR_56+16)
  9253  000B30  0100               	movlb	0	; () banked
  9254  000B32  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9255  000B34  EC69  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  9256  000B38  0900               	iorlw	0
  9257  000B3A  A4D8               	btfss	status,2,c
  9258  000B3C  D123               	goto	l15623
  9259                           
  9260                           ;Bluetooth.c: 480: {
  9261                           ;Bluetooth.c: 481: tempNec = EncodeNEC(Global.RemoteButtonNEC[temp-1][0], Global.RemoteB
      +                          uttonNEC[temp-1][1]);
  9262  000B3E  0EFE               	movlw	254
  9263  000B40  0102               	movlb	2	; () banked
  9264  000B42  6F03               	movwf	??_UseBluetooth& (0+255),b
  9265  000B44  0EFF               	movlw	255
  9266  000B46  0102               	movlb	2	; () banked
  9267  000B48  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
  9268  000B4A  C28E  F205         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9269  000B4E  C28F  F206         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9270  000B52  90D8               	bcf	status,0,c
  9271  000B54  0102               	movlb	2	; () banked
  9272  000B56  3705               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9273  000B58  3706               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9274  000B5A  0102               	movlb	2	; () banked
  9275  000B5C  5103               	movf	??_UseBluetooth& (0+255),w,b
  9276  000B5E  0102               	movlb	2	; () banked
  9277  000B60  2705               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9278  000B62  0102               	movlb	2	; () banked
  9279  000B64  5104               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9280  000B66  0102               	movlb	2	; () banked
  9281  000B68  2306               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9282  000B6A  0E00               	movlw	low _Global
  9283  000B6C  0102               	movlb	2	; () banked
  9284  000B6E  6F07               	movwf	(??_UseBluetooth+4)& (0+255),b
  9285  000B70  0E04               	movlw	high _Global
  9286  000B72  0102               	movlb	2	; () banked
  9287  000B74  6F08               	movwf	(??_UseBluetooth+5)& (0+255),b
  9288  000B76  0E05               	movlw	5
  9289  000B78  0102               	movlb	2	; () banked
  9290  000B7A  2707               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9291  000B7C  0E00               	movlw	0
  9292  000B7E  2308               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9293  000B80  0102               	movlb	2	; () banked
  9294  000B82  5105               	movf	(??_UseBluetooth+2)& (0+255),w,b
  9295  000B84  0102               	movlb	2	; () banked
  9296  000B86  2707               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9297  000B88  0102               	movlb	2	; () banked
  9298  000B8A  5106               	movf	(??_UseBluetooth+3)& (0+255),w,b
  9299  000B8C  0102               	movlb	2	; () banked
  9300  000B8E  2308               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9301  000B90  0E01               	movlw	1
  9302  000B92  0102               	movlb	2	; () banked
  9303  000B94  2507               	addwf	(??_UseBluetooth+4)& (0+255),w,b
  9304  000B96  6ED9               	movwf	fsr2l,c
  9305  000B98  0E00               	movlw	0
  9306  000B9A  0102               	movlb	2	; () banked
  9307  000B9C  2108               	addwfc	(??_UseBluetooth+5)& (0+255),w,b
  9308  000B9E  6EDA               	movwf	fsr2h,c
  9309  000BA0  50DF               	movf	indf2,w,c
  9310  000BA2  0100               	movlb	0	; () banked
  9311  000BA4  6F7D               	movwf	EncodeNEC@command& (0+255),b
  9312  000BA6  0EFE               	movlw	254
  9313  000BA8  0102               	movlb	2	; () banked
  9314  000BAA  6F09               	movwf	(??_UseBluetooth+6)& (0+255),b
  9315  000BAC  0EFF               	movlw	255
  9316  000BAE  0102               	movlb	2	; () banked
  9317  000BB0  6F0A               	movwf	(??_UseBluetooth+7)& (0+255),b
  9318  000BB2  C28E  F20B         	movff	UseBluetooth@temp,??_UseBluetooth+8
  9319  000BB6  C28F  F20C         	movff	UseBluetooth@temp+1,??_UseBluetooth+9
  9320  000BBA  90D8               	bcf	status,0,c
  9321  000BBC  0102               	movlb	2	; () banked
  9322  000BBE  370B               	rlcf	(??_UseBluetooth+8)& (0+255),f,b
  9323  000BC0  370C               	rlcf	(??_UseBluetooth+9)& (0+255),f,b
  9324  000BC2  0102               	movlb	2	; () banked
  9325  000BC4  5109               	movf	(??_UseBluetooth+6)& (0+255),w,b
  9326  000BC6  0102               	movlb	2	; () banked
  9327  000BC8  270B               	addwf	(??_UseBluetooth+8)& (0+255),f,b
  9328  000BCA  0102               	movlb	2	; () banked
  9329  000BCC  510A               	movf	(??_UseBluetooth+7)& (0+255),w,b
  9330  000BCE  0102               	movlb	2	; () banked
  9331  000BD0  230C               	addwfc	(??_UseBluetooth+9)& (0+255),f,b
  9332  000BD2  0E05               	movlw	low (_Global+5)
  9333  000BD4  0102               	movlb	2	; () banked
  9334  000BD6  250B               	addwf	(??_UseBluetooth+8)& (0+255),w,b
  9335  000BD8  6ED9               	movwf	fsr2l,c
  9336  000BDA  0E04               	movlw	high (_Global+5)
  9337  000BDC  0102               	movlb	2	; () banked
  9338  000BDE  210C               	addwfc	(??_UseBluetooth+9)& (0+255),w,b
  9339  000BE0  6EDA               	movwf	fsr2h,c
  9340  000BE2  50DF               	movf	indf2,w,c
  9341  000BE4  EC2E  F039         	call	_EncodeNEC
  9342  000BE8  C07D  F27E         	movff	?_EncodeNEC,UseBluetooth@tempNec
  9343  000BEC  C07E  F27F         	movff	?_EncodeNEC+1,UseBluetooth@tempNec+1
  9344  000BF0  C07F  F280         	movff	?_EncodeNEC+2,UseBluetooth@tempNec+2
  9345  000BF4  C080  F281         	movff	?_EncodeNEC+3,UseBluetooth@tempNec+3
  9346                           
  9347                           ;Bluetooth.c: 482: if(tempNec != 0x00FF00FF)
  9348  000BF8  0102               	movlb	2	; () banked
  9349  000BFA  297E               	incf	UseBluetooth@tempNec& (0+255),w,b
  9350  000BFC  E108               	bnz	u19420
  9351  000BFE  0102               	movlb	2	; () banked
  9352  000C00  2980               	incf	(UseBluetooth@tempNec+2)& (0+255),w,b
  9353  000C02  0102               	movlb	2	; () banked
  9354  000C04  117F               	iorwf	(UseBluetooth@tempNec+1)& (0+255),w,b
  9355  000C06  0102               	movlb	2	; () banked
  9356  000C08  1181               	iorwf	(UseBluetooth@tempNec+3)& (0+255),w,b
  9357  000C0A  B4D8               	btfsc	status,2,c
  9358  000C0C  D0A9               	goto	l15617
  9359  000C0E                     u19420:
  9360                           
  9361                           ; BSR set to: 2
  9362                           ;Bluetooth.c: 483: {
  9363                           ;Bluetooth.c: 484: SendNEC_wait(tempNec,0);
  9364  000C0E  C27E  F08E         	movff	UseBluetooth@tempNec,SendNEC_wait@code
  9365  000C12  C27F  F08F         	movff	UseBluetooth@tempNec+1,SendNEC_wait@code+1
  9366  000C16  C280  F090         	movff	UseBluetooth@tempNec+2,SendNEC_wait@code+2
  9367  000C1A  C281  F091         	movff	UseBluetooth@tempNec+3,SendNEC_wait@code+3
  9368  000C1E  0E00               	movlw	0
  9369  000C20  0100               	movlb	0	; () banked
  9370  000C22  6F92               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  9371  000C24  ECD5  F042         	call	_SendNEC_wait	;wreg free
  9372                           
  9373                           ;Bluetooth.c: 485: sprintf(buf,"Sent NEC code 0x%lX ", tempNec);
  9374  000C28  0E0F               	movlw	low UseBluetooth@buf
  9375  000C2A  0100               	movlb	0	; () banked
  9376  000C2C  6FC7               	movwf	sprintf@sp& (0+255),b
  9377  000C2E  0E02               	movlw	high UseBluetooth@buf
  9378  000C30  0100               	movlb	0	; () banked
  9379  000C32  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  9380  000C34  0EEC               	movlw	low STR_47
  9381  000C36  0100               	movlb	0	; () banked
  9382  000C38  6FC9               	movwf	sprintf@f& (0+255),b
  9383  000C3A  0EF9               	movlw	high STR_47
  9384  000C3C  0100               	movlb	0	; () banked
  9385  000C3E  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  9386  000C40  C27E  F0CB         	movff	UseBluetooth@tempNec,?_sprintf+4
  9387  000C44  C27F  F0CC         	movff	UseBluetooth@tempNec+1,?_sprintf+5
  9388  000C48  C280  F0CD         	movff	UseBluetooth@tempNec+2,?_sprintf+6
  9389  000C4C  C281  F0CE         	movff	UseBluetooth@tempNec+3,?_sprintf+7
  9390  000C50  ECC4  F010         	call	_sprintf	;wreg free
  9391                           
  9392                           ;Bluetooth.c: 486: UARTstringCRLN(buf);
  9393  000C54  0E0F               	movlw	low UseBluetooth@buf
  9394  000C56  0100               	movlb	0	; () banked
  9395  000C58  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9396  000C5A  0E02               	movlw	high UseBluetooth@buf
  9397  000C5C  0100               	movlb	0	; () banked
  9398  000C5E  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9399  000C60  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9400                           
  9401                           ;Bluetooth.c: 487: sprintf(buf,"NEC Code address: 0x%02X , command: 0x%02X ",Global.Remo
      +                          teButtonNEC[temp-1][0], Global.RemoteButtonNEC[temp-1][1]);
  9402  000C64  0E0F               	movlw	low UseBluetooth@buf
  9403  000C66  0100               	movlb	0	; () banked
  9404  000C68  6FC7               	movwf	sprintf@sp& (0+255),b
  9405  000C6A  0E02               	movlw	high UseBluetooth@buf
  9406  000C6C  0100               	movlb	0	; () banked
  9407  000C6E  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  9408  000C70  0EA8               	movlw	low STR_48
  9409  000C72  0100               	movlb	0	; () banked
  9410  000C74  6FC9               	movwf	sprintf@f& (0+255),b
  9411  000C76  0EF4               	movlw	high STR_48
  9412  000C78  0100               	movlb	0	; () banked
  9413  000C7A  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  9414  000C7C  0EFE               	movlw	254
  9415  000C7E  0102               	movlb	2	; () banked
  9416  000C80  6F03               	movwf	??_UseBluetooth& (0+255),b
  9417  000C82  0EFF               	movlw	255
  9418  000C84  0102               	movlb	2	; () banked
  9419  000C86  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
  9420  000C88  C28E  F205         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9421  000C8C  C28F  F206         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9422  000C90  90D8               	bcf	status,0,c
  9423  000C92  0102               	movlb	2	; () banked
  9424  000C94  3705               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9425  000C96  3706               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9426  000C98  0102               	movlb	2	; () banked
  9427  000C9A  5103               	movf	??_UseBluetooth& (0+255),w,b
  9428  000C9C  0102               	movlb	2	; () banked
  9429  000C9E  2705               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9430  000CA0  0102               	movlb	2	; () banked
  9431  000CA2  5104               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9432  000CA4  0102               	movlb	2	; () banked
  9433  000CA6  2306               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9434  000CA8  0E05               	movlw	low (_Global+5)
  9435  000CAA  0102               	movlb	2	; () banked
  9436  000CAC  2505               	addwf	(??_UseBluetooth+2)& (0+255),w,b
  9437  000CAE  6ED9               	movwf	fsr2l,c
  9438  000CB0  0E04               	movlw	high (_Global+5)
  9439  000CB2  0102               	movlb	2	; () banked
  9440  000CB4  2106               	addwfc	(??_UseBluetooth+3)& (0+255),w,b
  9441  000CB6  6EDA               	movwf	fsr2h,c
  9442  000CB8  50DF               	movf	indf2,w,c
  9443  000CBA  0102               	movlb	2	; () banked
  9444  000CBC  6F07               	movwf	(??_UseBluetooth+4)& (0+255),b
  9445  000CBE  0102               	movlb	2	; () banked
  9446  000CC0  5107               	movf	(??_UseBluetooth+4)& (0+255),w,b
  9447  000CC2  0100               	movlb	0	; () banked
  9448  000CC4  6FCB               	movwf	(?_sprintf+4)& (0+255),b
  9449  000CC6  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  9450  000CC8  0EFE               	movlw	254
  9451  000CCA  0102               	movlb	2	; () banked
  9452  000CCC  6F08               	movwf	(??_UseBluetooth+5)& (0+255),b
  9453  000CCE  0EFF               	movlw	255
  9454  000CD0  0102               	movlb	2	; () banked
  9455  000CD2  6F09               	movwf	(??_UseBluetooth+6)& (0+255),b
  9456  000CD4  C28E  F20A         	movff	UseBluetooth@temp,??_UseBluetooth+7
  9457  000CD8  C28F  F20B         	movff	UseBluetooth@temp+1,??_UseBluetooth+8
  9458  000CDC  90D8               	bcf	status,0,c
  9459  000CDE  0102               	movlb	2	; () banked
  9460  000CE0  370A               	rlcf	(??_UseBluetooth+7)& (0+255),f,b
  9461  000CE2  370B               	rlcf	(??_UseBluetooth+8)& (0+255),f,b
  9462  000CE4  0102               	movlb	2	; () banked
  9463  000CE6  5108               	movf	(??_UseBluetooth+5)& (0+255),w,b
  9464  000CE8  0102               	movlb	2	; () banked
  9465  000CEA  270A               	addwf	(??_UseBluetooth+7)& (0+255),f,b
  9466  000CEC  0102               	movlb	2	; () banked
  9467  000CEE  5109               	movf	(??_UseBluetooth+6)& (0+255),w,b
  9468  000CF0  0102               	movlb	2	; () banked
  9469  000CF2  230B               	addwfc	(??_UseBluetooth+8)& (0+255),f,b
  9470  000CF4  0E00               	movlw	low _Global
  9471  000CF6  0102               	movlb	2	; () banked
  9472  000CF8  6F0C               	movwf	(??_UseBluetooth+9)& (0+255),b
  9473  000CFA  0E04               	movlw	high _Global
  9474  000CFC  0102               	movlb	2	; () banked
  9475  000CFE  6F0D               	movwf	(??_UseBluetooth+10)& (0+255),b
  9476  000D00  0E05               	movlw	5
  9477  000D02  0102               	movlb	2	; () banked
  9478  000D04  270C               	addwf	(??_UseBluetooth+9)& (0+255),f,b
  9479  000D06  0E00               	movlw	0
  9480  000D08  230D               	addwfc	(??_UseBluetooth+10)& (0+255),f,b
  9481  000D0A  0102               	movlb	2	; () banked
  9482  000D0C  510A               	movf	(??_UseBluetooth+7)& (0+255),w,b
  9483  000D0E  0102               	movlb	2	; () banked
  9484  000D10  270C               	addwf	(??_UseBluetooth+9)& (0+255),f,b
  9485  000D12  0102               	movlb	2	; () banked
  9486  000D14  510B               	movf	(??_UseBluetooth+8)& (0+255),w,b
  9487  000D16  0102               	movlb	2	; () banked
  9488  000D18  230D               	addwfc	(??_UseBluetooth+10)& (0+255),f,b
  9489  000D1A  0E01               	movlw	1
  9490  000D1C  0102               	movlb	2	; () banked
  9491  000D1E  250C               	addwf	(??_UseBluetooth+9)& (0+255),w,b
  9492  000D20  6ED9               	movwf	fsr2l,c
  9493  000D22  0E00               	movlw	0
  9494  000D24  0102               	movlb	2	; () banked
  9495  000D26  210D               	addwfc	(??_UseBluetooth+10)& (0+255),w,b
  9496  000D28  6EDA               	movwf	fsr2h,c
  9497  000D2A  50DF               	movf	indf2,w,c
  9498  000D2C  0102               	movlb	2	; () banked
  9499  000D2E  6F0E               	movwf	(??_UseBluetooth+11)& (0+255),b
  9500  000D30  0102               	movlb	2	; () banked
  9501  000D32  510E               	movf	(??_UseBluetooth+11)& (0+255),w,b
  9502  000D34  0100               	movlb	0	; () banked
  9503  000D36  6FCD               	movwf	(?_sprintf+6)& (0+255),b
  9504  000D38  6BCE               	clrf	(?_sprintf+7)& (0+255),b
  9505  000D3A  ECC4  F010         	call	_sprintf	;wreg free
  9506                           
  9507                           ;Bluetooth.c: 488: UARTstringCRLN(buf);
  9508  000D3E  0E0F               	movlw	low UseBluetooth@buf
  9509  000D40  0100               	movlb	0	; () banked
  9510  000D42  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9511  000D44  0E02               	movlw	high UseBluetooth@buf
  9512  000D46  0100               	movlb	0	; () banked
  9513  000D48  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9514  000D4A  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9515                           
  9516                           ;Bluetooth.c: 489: UARTstring(CRLN);
  9517  000D4E  0ED1               	movlw	low _CRLN
  9518  000D50  0100               	movlb	0	; () banked
  9519  000D52  6F7A               	movwf	UARTstring@data& (0+255),b
  9520  000D54  0EF0               	movlw	high _CRLN
  9521  000D56  0100               	movlb	0	; () banked
  9522  000D58  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9523  000D5A  ECD3  F046         	call	_UARTstring	;wreg free
  9524                           
  9525                           ;Bluetooth.c: 490: return 1;
  9526                           ;	Return value of _UseBluetooth is never used
  9527  000D5E  0012               	return	
  9528  000D60                     l15617:
  9529                           
  9530                           ;Bluetooth.c: 491: }
  9531                           ;Bluetooth.c: 492: UARTstring(CRLN);
  9532  000D60  0ED1               	movlw	low _CRLN
  9533  000D62  0100               	movlb	0	; () banked
  9534  000D64  6F7A               	movwf	UARTstring@data& (0+255),b
  9535  000D66  0EF0               	movlw	high _CRLN
  9536  000D68  0100               	movlb	0	; () banked
  9537  000D6A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9538  000D6C  ECD3  F046         	call	_UARTstring	;wreg free
  9539                           
  9540                           ;Bluetooth.c: 493: UARTstringCRLN((unsigned char *)"Error: No NEC code saved for specifi
      +                          ed command");
  9541  000D70  0E09               	movlw	low STR_49
  9542  000D72  0100               	movlb	0	; () banked
  9543  000D74  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9544  000D76  0EF3               	movlw	high STR_49
  9545  000D78  0100               	movlb	0	; () banked
  9546  000D7A  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9547  000D7C  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9548                           
  9549                           ;Bluetooth.c: 494: return 0;
  9550                           ;	Return value of _UseBluetooth is never used
  9551  000D80  0012               	return	
  9552                           
  9553                           ;Bluetooth.c: 495: }
  9554  000D82  D10A               	goto	l15667
  9555  000D84                     l15623:
  9556                           
  9557                           ;Bluetooth.c: 496: else
  9558                           ;Bluetooth.c: 497: {
  9559                           ;Bluetooth.c: 498: if(!WaitForIRsignal())
  9560  000D84  EC6E  F043         	call	_WaitForIRsignal	;wreg free
  9561  000D88  0900               	iorlw	0
  9562  000D8A  B4D8               	btfsc	status,2,c
  9563  000D8C  0012               	return	
  9564  000D8E  D001               	goto	l15627
  9565                           
  9566                           ;Bluetooth.c: 499: {
  9567                           ;Bluetooth.c: 500: return 0;
  9568                           ;	Return value of _UseBluetooth is never used
  9569  000D90  0012               	return	
  9570  000D92                     l15627:
  9571                           
  9572                           ;Bluetooth.c: 501: }
  9573                           ;Bluetooth.c: 504: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
  9574  000D92  C0E1  F07D         	movff	_IR_NEC,DecodeNEC@Nec
  9575  000D96  C0E2  F07E         	movff	_IR_NEC+1,DecodeNEC@Nec+1
  9576  000D9A  C0E3  F07F         	movff	_IR_NEC+2,DecodeNEC@Nec+2
  9577  000D9E  C0E4  F080         	movff	_IR_NEC+3,DecodeNEC@Nec+3
  9578  000DA2  0E8C               	movlw	low UseBluetooth@NecAddress
  9579  000DA4  0100               	movlb	0	; () banked
  9580  000DA6  6F81               	movwf	DecodeNEC@address& (0+255),b
  9581  000DA8  0E02               	movlw	high UseBluetooth@NecAddress
  9582  000DAA  0100               	movlb	0	; () banked
  9583  000DAC  6F82               	movwf	(DecodeNEC@address+1)& (0+255),b
  9584  000DAE  0E8D               	movlw	low UseBluetooth@NecCommand
  9585  000DB0  0100               	movlb	0	; () banked
  9586  000DB2  6F83               	movwf	DecodeNEC@command& (0+255),b
  9587  000DB4  0E02               	movlw	high UseBluetooth@NecCommand
  9588  000DB6  0100               	movlb	0	; () banked
  9589  000DB8  6F84               	movwf	(DecodeNEC@command+1)& (0+255),b
  9590  000DBA  EC8A  F041         	call	_DecodeNEC	;wreg free
  9591                           
  9592                           ;Bluetooth.c: 505: Global.RemoteButtonNEC[temp - 1][0] = NecAddress;
  9593  000DBE  0EFE               	movlw	254
  9594  000DC0  0102               	movlb	2	; () banked
  9595  000DC2  6F03               	movwf	??_UseBluetooth& (0+255),b
  9596  000DC4  0EFF               	movlw	255
  9597  000DC6  0102               	movlb	2	; () banked
  9598  000DC8  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
  9599  000DCA  C28E  F205         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9600  000DCE  C28F  F206         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9601  000DD2  90D8               	bcf	status,0,c
  9602  000DD4  0102               	movlb	2	; () banked
  9603  000DD6  3705               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9604  000DD8  3706               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9605  000DDA  0102               	movlb	2	; () banked
  9606  000DDC  5103               	movf	??_UseBluetooth& (0+255),w,b
  9607  000DDE  0102               	movlb	2	; () banked
  9608  000DE0  2705               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9609  000DE2  0102               	movlb	2	; () banked
  9610  000DE4  5104               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9611  000DE6  0102               	movlb	2	; () banked
  9612  000DE8  2306               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9613  000DEA  0E05               	movlw	low (_Global+5)
  9614  000DEC  0102               	movlb	2	; () banked
  9615  000DEE  2505               	addwf	(??_UseBluetooth+2)& (0+255),w,b
  9616  000DF0  6ED9               	movwf	fsr2l,c
  9617  000DF2  0E04               	movlw	high (_Global+5)
  9618  000DF4  0102               	movlb	2	; () banked
  9619  000DF6  2106               	addwfc	(??_UseBluetooth+3)& (0+255),w,b
  9620  000DF8  6EDA               	movwf	fsr2h,c
  9621  000DFA  C28C  FFDF         	movff	UseBluetooth@NecAddress,indf2
  9622                           
  9623                           ; BSR set to: 2
  9624                           ;Bluetooth.c: 506: Global.RemoteButtonNEC[temp - 1][1] = NecCommand;
  9625  000DFE  0EFE               	movlw	254
  9626  000E00  0102               	movlb	2	; () banked
  9627  000E02  6F03               	movwf	??_UseBluetooth& (0+255),b
  9628  000E04  0EFF               	movlw	255
  9629  000E06  0102               	movlb	2	; () banked
  9630  000E08  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
  9631  000E0A  C28E  F205         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9632  000E0E  C28F  F206         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9633  000E12  90D8               	bcf	status,0,c
  9634  000E14  0102               	movlb	2	; () banked
  9635  000E16  3705               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9636  000E18  3706               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9637  000E1A  0102               	movlb	2	; () banked
  9638  000E1C  5103               	movf	??_UseBluetooth& (0+255),w,b
  9639  000E1E  0102               	movlb	2	; () banked
  9640  000E20  2705               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9641  000E22  0102               	movlb	2	; () banked
  9642  000E24  5104               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9643  000E26  0102               	movlb	2	; () banked
  9644  000E28  2306               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9645  000E2A  0E00               	movlw	low _Global
  9646  000E2C  0102               	movlb	2	; () banked
  9647  000E2E  6F07               	movwf	(??_UseBluetooth+4)& (0+255),b
  9648  000E30  0E04               	movlw	high _Global
  9649  000E32  0102               	movlb	2	; () banked
  9650  000E34  6F08               	movwf	(??_UseBluetooth+5)& (0+255),b
  9651  000E36  0E05               	movlw	5
  9652  000E38  0102               	movlb	2	; () banked
  9653  000E3A  2707               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9654  000E3C  0E00               	movlw	0
  9655  000E3E  2308               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9656  000E40  0102               	movlb	2	; () banked
  9657  000E42  5105               	movf	(??_UseBluetooth+2)& (0+255),w,b
  9658  000E44  0102               	movlb	2	; () banked
  9659  000E46  2707               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9660  000E48  0102               	movlb	2	; () banked
  9661  000E4A  5106               	movf	(??_UseBluetooth+3)& (0+255),w,b
  9662  000E4C  0102               	movlb	2	; () banked
  9663  000E4E  2308               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9664  000E50  0E01               	movlw	1
  9665  000E52  0102               	movlb	2	; () banked
  9666  000E54  2507               	addwf	(??_UseBluetooth+4)& (0+255),w,b
  9667  000E56  6ED9               	movwf	fsr2l,c
  9668  000E58  0E00               	movlw	0
  9669  000E5A  0102               	movlb	2	; () banked
  9670  000E5C  2108               	addwfc	(??_UseBluetooth+5)& (0+255),w,b
  9671  000E5E  6EDA               	movwf	fsr2h,c
  9672  000E60  C28D  FFDF         	movff	UseBluetooth@NecCommand,indf2
  9673                           
  9674                           ; BSR set to: 2
  9675                           ;Bluetooth.c: 507: SyncGlobalToEEPROM();
  9676  000E64  ECF8  F047         	call	_SyncGlobalToEEPROM	;wreg free
  9677                           
  9678                           ;Bluetooth.c: 508: UARTstring(CRLN);
  9679  000E68  0ED1               	movlw	low _CRLN
  9680  000E6A  0100               	movlb	0	; () banked
  9681  000E6C  6F7A               	movwf	UARTstring@data& (0+255),b
  9682  000E6E  0EF0               	movlw	high _CRLN
  9683  000E70  0100               	movlb	0	; () banked
  9684  000E72  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9685  000E74  ECD3  F046         	call	_UARTstring	;wreg free
  9686                           
  9687                           ;Bluetooth.c: 509: sprintf(buf,"RemoteButton%ld now transmits NEC code 0x%lX ",temp, IR_
      +                          NEC);
  9688  000E78  0E0F               	movlw	low UseBluetooth@buf
  9689  000E7A  0100               	movlb	0	; () banked
  9690  000E7C  6FC7               	movwf	sprintf@sp& (0+255),b
  9691  000E7E  0E02               	movlw	high UseBluetooth@buf
  9692  000E80  0100               	movlb	0	; () banked
  9693  000E82  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  9694  000E84  0E38               	movlw	low STR_50
  9695  000E86  0100               	movlb	0	; () banked
  9696  000E88  6FC9               	movwf	sprintf@f& (0+255),b
  9697  000E8A  0EF3               	movlw	high STR_50
  9698  000E8C  0100               	movlb	0	; () banked
  9699  000E8E  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  9700  000E90  C28E  F0CB         	movff	UseBluetooth@temp,?_sprintf+4
  9701  000E94  C28F  F0CC         	movff	UseBluetooth@temp+1,?_sprintf+5
  9702  000E98  C290  F0CD         	movff	UseBluetooth@temp+2,?_sprintf+6
  9703  000E9C  C291  F0CE         	movff	UseBluetooth@temp+3,?_sprintf+7
  9704  000EA0  C0E1  F0CF         	movff	_IR_NEC,?_sprintf+8
  9705  000EA4  C0E2  F0D0         	movff	_IR_NEC+1,?_sprintf+9
  9706  000EA8  C0E3  F0D1         	movff	_IR_NEC+2,?_sprintf+10
  9707  000EAC  C0E4  F0D2         	movff	_IR_NEC+3,?_sprintf+11
  9708  000EB0  ECC4  F010         	call	_sprintf	;wreg free
  9709                           
  9710                           ;Bluetooth.c: 510: UARTstringCRLN(buf);
  9711  000EB4  0E0F               	movlw	low UseBluetooth@buf
  9712  000EB6  0100               	movlb	0	; () banked
  9713  000EB8  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9714  000EBA  0E02               	movlw	high UseBluetooth@buf
  9715  000EBC  0100               	movlb	0	; () banked
  9716  000EBE  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9717  000EC0  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9718                           
  9719                           ;Bluetooth.c: 511: sprintf(buf,"NEC Code address: 0x%02X , command: 0x%02X ",NecAddress,
      +                           NecCommand);
  9720  000EC4  0E0F               	movlw	low UseBluetooth@buf
  9721  000EC6  0100               	movlb	0	; () banked
  9722  000EC8  6FC7               	movwf	sprintf@sp& (0+255),b
  9723  000ECA  0E02               	movlw	high UseBluetooth@buf
  9724  000ECC  0100               	movlb	0	; () banked
  9725  000ECE  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  9726  000ED0  0EA8               	movlw	low STR_48
  9727  000ED2  0100               	movlb	0	; () banked
  9728  000ED4  6FC9               	movwf	sprintf@f& (0+255),b
  9729  000ED6  0EF4               	movlw	high STR_48
  9730  000ED8  0100               	movlb	0	; () banked
  9731  000EDA  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  9732  000EDC  C28C  F0CB         	movff	UseBluetooth@NecAddress,?_sprintf+4
  9733  000EE0  0100               	movlb	0	; () banked
  9734  000EE2  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  9735  000EE4  C28D  F0CD         	movff	UseBluetooth@NecCommand,?_sprintf+6
  9736  000EE8  0100               	movlb	0	; () banked
  9737  000EEA  6BCE               	clrf	(?_sprintf+7)& (0+255),b
  9738  000EEC  ECC4  F010         	call	_sprintf	;wreg free
  9739                           
  9740                           ;Bluetooth.c: 512: UARTstringCRLN(buf);
  9741  000EF0  0E0F               	movlw	low UseBluetooth@buf
  9742  000EF2  0100               	movlb	0	; () banked
  9743  000EF4  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9744  000EF6  0E02               	movlw	high UseBluetooth@buf
  9745  000EF8  0100               	movlb	0	; () banked
  9746  000EFA  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9747  000EFC  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9748                           
  9749                           ;Bluetooth.c: 513: UARTstring(CRLN);
  9750  000F00  0ED1               	movlw	low _CRLN
  9751  000F02  0100               	movlb	0	; () banked
  9752  000F04  6F7A               	movwf	UARTstring@data& (0+255),b
  9753  000F06  0EF0               	movlw	high _CRLN
  9754  000F08  0100               	movlb	0	; () banked
  9755  000F0A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9756  000F0C  ECD3  F046         	call	_UARTstring	;wreg free
  9757                           
  9758                           ;Bluetooth.c: 515: for(i =0;i<10;i++)
  9759  000F10  0E00               	movlw	0
  9760  000F12  0102               	movlb	2	; () banked
  9761  000F14  6F92               	movwf	UseBluetooth@i& (0+255),b
  9762                           
  9763                           ; BSR set to: 2
  9764  000F16  0E09               	movlw	9
  9765  000F18  0102               	movlb	2	; () banked
  9766  000F1A  6592               	cpfsgt	UseBluetooth@i& (0+255),b
  9767  000F1C  D002               	goto	l15653
  9768  000F1E  0012               	return	
  9769                           
  9770                           ; BSR set to: 2
  9771  000F20  0012               	return	
  9772  000F22                     l15653:
  9773                           
  9774                           ; BSR set to: 2
  9775                           ;Bluetooth.c: 516: {
  9776                           ;Bluetooth.c: 517: (LATC |= 0x04);
  9777  000F22  848B               	bsf	3979,2,c	;volatile
  9778                           
  9779                           ; BSR set to: 2
  9780                           ;Bluetooth.c: 518: delayUS(50000);
  9781  000F24  0E50               	movlw	80
  9782  000F26  0100               	movlb	0	; () banked
  9783  000F28  6F79               	movwf	delayUS@US& (0+255),b
  9784  000F2A  0EC3               	movlw	195
  9785  000F2C  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  9786  000F2E  0E00               	movlw	0
  9787  000F30  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  9788  000F32  0E00               	movlw	0
  9789  000F34  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  9790  000F36  EC57  F047         	call	_delayUS	;wreg free
  9791                           
  9792                           ;Bluetooth.c: 519: (LATC &= ~0x04);
  9793  000F3A  948B               	bcf	3979,2,c	;volatile
  9794                           
  9795                           ;Bluetooth.c: 520: delayUS(50000);
  9796  000F3C  0E50               	movlw	80
  9797  000F3E  0100               	movlb	0	; () banked
  9798  000F40  6F79               	movwf	delayUS@US& (0+255),b
  9799  000F42  0EC3               	movlw	195
  9800  000F44  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  9801  000F46  0E00               	movlw	0
  9802  000F48  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  9803  000F4A  0E00               	movlw	0
  9804  000F4C  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  9805  000F4E  EC57  F047         	call	_delayUS	;wreg free
  9806  000F52  0102               	movlb	2	; () banked
  9807  000F54  2B92               	incf	UseBluetooth@i& (0+255),f,b
  9808                           
  9809                           ; BSR set to: 2
  9810  000F56  0E09               	movlw	9
  9811  000F58  0102               	movlb	2	; () banked
  9812  000F5A  6592               	cpfsgt	UseBluetooth@i& (0+255),b
  9813  000F5C  D7E2               	goto	l15653
  9814  000F5E  0012               	return	
  9815                           
  9816                           ; BSR set to: 2
  9817                           ;Bluetooth.c: 521: }
  9818                           ;Bluetooth.c: 522: return 1;
  9819                           ;	Return value of _UseBluetooth is never used
  9820  000F60  0012               	return	
  9821                           
  9822                           ; BSR set to: 2
  9823                           ;Bluetooth.c: 523: }
  9824                           ;Bluetooth.c: 524: }
  9825  000F62  D01A               	goto	l15667
  9826  000F64                     l15663:
  9827                           
  9828                           ; BSR set to: 2
  9829                           ;Bluetooth.c: 525: else
  9830                           ;Bluetooth.c: 526: {
  9831                           ;Bluetooth.c: 527: UARTstring(CRLN);
  9832  000F64  0ED1               	movlw	low _CRLN
  9833  000F66  0100               	movlb	0	; () banked
  9834  000F68  6F7A               	movwf	UARTstring@data& (0+255),b
  9835  000F6A  0EF0               	movlw	high _CRLN
  9836  000F6C  0100               	movlb	0	; () banked
  9837  000F6E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9838  000F70  ECD3  F046         	call	_UARTstring	;wreg free
  9839                           
  9840                           ;Bluetooth.c: 528: UARTstringCRLN((unsigned char *)"Error: Remote button number too high
      +                          ");
  9841  000F74  0EC8               	movlw	low STR_52
  9842  000F76  0100               	movlb	0	; () banked
  9843  000F78  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9844  000F7A  0EF5               	movlw	high STR_52
  9845  000F7C  0100               	movlb	0	; () banked
  9846  000F7E  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9847  000F80  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9848                           
  9849                           ;Bluetooth.c: 529: UARTstring(CRLN);
  9850  000F84  0ED1               	movlw	low _CRLN
  9851  000F86  0100               	movlb	0	; () banked
  9852  000F88  6F7A               	movwf	UARTstring@data& (0+255),b
  9853  000F8A  0EF0               	movlw	high _CRLN
  9854  000F8C  0100               	movlb	0	; () banked
  9855  000F8E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9856  000F90  ECD3  F046         	call	_UARTstring	;wreg free
  9857                           
  9858                           ;Bluetooth.c: 530: return 0;
  9859                           ;	Return value of _UseBluetooth is never used
  9860  000F94  0012               	return	
  9861  000F96  D000               	goto	l15667
  9862  000F98                     l15667:
  9863                           
  9864                           ;Bluetooth.c: 531: }
  9865                           ;Bluetooth.c: 532: }
  9866                           ;Bluetooth.c: 533: }
  9867                           ;Bluetooth.c: 534: UARTstring(CRLN);
  9868  000F98  0ED1               	movlw	low _CRLN
  9869  000F9A  0100               	movlb	0	; () banked
  9870  000F9C  6F7A               	movwf	UARTstring@data& (0+255),b
  9871  000F9E  0EF0               	movlw	high _CRLN
  9872  000FA0  0100               	movlb	0	; () banked
  9873  000FA2  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9874  000FA4  ECD3  F046         	call	_UARTstring	;wreg free
  9875                           
  9876                           ;Bluetooth.c: 535: UARTstringCRLN((unsigned char *)"Error: Remote button not specified")
      +                          ;
  9877  000FA8  0E11               	movlw	low STR_53
  9878  000FAA  0100               	movlb	0	; () banked
  9879  000FAC  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9880  000FAE  0EF6               	movlw	high STR_53
  9881  000FB0  0100               	movlb	0	; () banked
  9882  000FB2  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9883  000FB4  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9884                           
  9885                           ;Bluetooth.c: 536: UARTstring(CRLN);
  9886  000FB8  0ED1               	movlw	low _CRLN
  9887  000FBA  0100               	movlb	0	; () banked
  9888  000FBC  6F7A               	movwf	UARTstring@data& (0+255),b
  9889  000FBE  0EF0               	movlw	high _CRLN
  9890  000FC0  0100               	movlb	0	; () banked
  9891  000FC2  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9892  000FC4  ECD3  F046         	call	_UARTstring	;wreg free
  9893                           
  9894                           ;Bluetooth.c: 537: UARTstringCRLN((unsigned char *)"Usage:");
  9895  000FC8  0EB2               	movlw	low STR_37
  9896  000FCA  0100               	movlb	0	; () banked
  9897  000FCC  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9898  000FCE  0EFC               	movlw	high STR_37
  9899  000FD0  0100               	movlb	0	; () banked
  9900  000FD2  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9901  000FD4  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9902                           
  9903                           ;Bluetooth.c: 538: UARTstringCRLN((unsigned char *)"RemoteButton'x'");
  9904  000FD8  0E57               	movlw	low STR_55
  9905  000FDA  0100               	movlb	0	; () banked
  9906  000FDC  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9907  000FDE  0EFB               	movlw	high STR_55
  9908  000FE0  0100               	movlb	0	; () banked
  9909  000FE2  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9910  000FE4  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9911                           
  9912                           ;Bluetooth.c: 539: UARTstringCRLN((unsigned char *)"RemoteButton'x' set");
  9913  000FE8  0E7B               	movlw	low STR_56
  9914  000FEA  0100               	movlb	0	; () banked
  9915  000FEC  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9916  000FEE  0EFA               	movlw	high STR_56
  9917  000FF0  0100               	movlb	0	; () banked
  9918  000FF2  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9919  000FF4  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9920                           
  9921                           ;Bluetooth.c: 540: UARTstring(CRLN);
  9922  000FF8  0ED1               	movlw	low _CRLN
  9923  000FFA  0100               	movlb	0	; () banked
  9924  000FFC  6F7A               	movwf	UARTstring@data& (0+255),b
  9925  000FFE  0EF0               	movlw	high _CRLN
  9926  001000  0100               	movlb	0	; () banked
  9927  001002  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9928  001004  ECD3  F046         	call	_UARTstring	;wreg free
  9929                           
  9930                           ;Bluetooth.c: 541: UARTstringCRLN((unsigned char *)"Example:");
  9931  001008  0E91               	movlw	low STR_41
  9932  00100A  0100               	movlb	0	; () banked
  9933  00100C  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9934  00100E  0EFC               	movlw	high STR_41
  9935  001010  0100               	movlb	0	; () banked
  9936  001012  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9937  001014  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9938                           
  9939                           ;Bluetooth.c: 542: UARTstringCRLN((unsigned char *)"RemoteButton1");
  9940  001018  0E96               	movlw	low STR_58
  9941  00101A  0100               	movlb	0	; () banked
  9942  00101C  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9943  00101E  0EFB               	movlw	high STR_58
  9944  001020  0100               	movlb	0	; () banked
  9945  001022  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9946  001024  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9947                           
  9948                           ;Bluetooth.c: 543: UARTstringCRLN((unsigned char *)"RemoteButton1 set");
  9949  001028  0E00               	movlw	low STR_59
  9950  00102A  0100               	movlb	0	; () banked
  9951  00102C  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9952  00102E  0EFB               	movlw	high STR_59
  9953  001030  0100               	movlb	0	; () banked
  9954  001032  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9955  001034  EC78  F045         	call	_UARTstringCRLN	;wreg free
  9956                           
  9957                           ;Bluetooth.c: 544: UARTstring(CRLN);
  9958  001038  0ED1               	movlw	low _CRLN
  9959  00103A  0100               	movlb	0	; () banked
  9960  00103C  6F7A               	movwf	UARTstring@data& (0+255),b
  9961  00103E  0EF0               	movlw	high _CRLN
  9962  001040  0100               	movlb	0	; () banked
  9963  001042  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9964  001044  ECD3  F046         	call	_UARTstring	;wreg free
  9965                           
  9966                           ;Bluetooth.c: 546: }
  9967                           
  9968                           ;Bluetooth.c: 545: return 0;
  9969                           ;	Return value of _UseBluetooth is never used
  9970  001048  0012               	return	
  9971  00104A                     l15673:
  9972                           
  9973                           ;Bluetooth.c: 547: else if(StringContainsCaseInsensitive(String,(unsigned char *)"RF set
      +                          ") || StringContainsCaseInsensitive(String,(unsigned char *)"RF clear"))
  9974  00104A  C200  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9975  00104E  C201  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9976  001052  0EB9               	movlw	low STR_60
  9977  001054  0100               	movlb	0	; () banked
  9978  001056  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9979  001058  0EFC               	movlw	high STR_60
  9980  00105A  0100               	movlb	0	; () banked
  9981  00105C  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9982  00105E  EC69  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  9983  001062  0900               	iorlw	0
  9984  001064  A4D8               	btfss	status,2,c
  9985  001066  D010               	goto	l15677
  9986  001068  C200  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9987  00106C  C201  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9988  001070  0E9A               	movlw	low STR_61
  9989  001072  0100               	movlb	0	; () banked
  9990  001074  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9991  001076  0EFC               	movlw	high STR_61
  9992  001078  0100               	movlb	0	; () banked
  9993  00107A  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9994  00107C  EC69  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  9995  001080  0900               	iorlw	0
  9996  001082  B4D8               	btfsc	status,2,c
  9997  001084  EFB0  F00C         	goto	l15955
  9998  001088                     l15677:
  9999                           
 10000                           ;Bluetooth.c: 548: {
 10001                           ;Bluetooth.c: 549: if(StringContainsCaseInsensitive(String,(unsigned char *)"RF set"))
 10002  001088  C200  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 10003  00108C  C201  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 10004  001090  0EB9               	movlw	low STR_60
 10005  001092  0100               	movlb	0	; () banked
 10006  001094  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10007  001096  0EFC               	movlw	high STR_60
 10008  001098  0100               	movlb	0	; () banked
 10009  00109A  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10010  00109C  EC69  F03A         	call	_StringContainsCaseInsensitive	;wreg free
 10011  0010A0  0900               	iorlw	0
 10012  0010A2  B4D8               	btfsc	status,2,c
 10013  0010A4  D002               	goto	l15681
 10014                           
 10015                           ;Bluetooth.c: 550: {
 10016                           ;Bluetooth.c: 551: set = 1;
 10017  0010A6  0E01               	movlw	1
 10018  0010A8  D001               	goto	L4
 10019  0010AA                     l15681:
 10020                           
 10021                           ;Bluetooth.c: 553: else
 10022                           ;Bluetooth.c: 554: {
 10023                           ;Bluetooth.c: 555: set = 0;
 10024  0010AA  0E00               	movlw	0
 10025  0010AC                     L4:
 10026  0010AC  0102               	movlb	2	; () banked
 10027  0010AE  6F7D               	movwf	UseBluetooth@set& (0+255),b
 10028  0010B0  D000               	goto	l15683
 10029  0010B2                     l15683:
 10030                           
 10031                           ; BSR set to: 2
 10032                           ;Bluetooth.c: 556: }
 10033                           ;Bluetooth.c: 557: if(!StringAddEqual(String))
 10034  0010B2  C200  F088         	movff	UseBluetooth@String,StringAddEqual@Input
 10035  0010B6  C201  F089         	movff	UseBluetooth@String+1,StringAddEqual@Input+1
 10036  0010BA  EC2D  F031         	call	_StringAddEqual	;wreg free
 10037  0010BE  0900               	iorlw	0
 10038  0010C0  A4D8               	btfss	status,2,c
 10039  0010C2  D011               	goto	l15689
 10040                           
 10041                           ;Bluetooth.c: 558: {
 10042                           ;Bluetooth.c: 559: UARTstringCRLN((unsigned char *)"Error: No RF configuration specified
      +                          ");
 10043  0010C4  0E7E               	movlw	low STR_63
 10044  0010C6  0100               	movlb	0	; () banked
 10045  0010C8  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10046  0010CA  0EF5               	movlw	high STR_63
 10047  0010CC  0100               	movlb	0	; () banked
 10048  0010CE  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10049  0010D0  EC78  F045         	call	_UARTstringCRLN	;wreg free
 10050                           
 10051                           ;Bluetooth.c: 560: UARTstring(CRLN);
 10052  0010D4  0ED1               	movlw	low _CRLN
 10053  0010D6  0100               	movlb	0	; () banked
 10054  0010D8  6F7A               	movwf	UARTstring@data& (0+255),b
 10055  0010DA  0EF0               	movlw	high _CRLN
 10056  0010DC  0100               	movlb	0	; () banked
 10057  0010DE  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10058  0010E0  ECD3  F046         	call	_UARTstring	;wreg free
 10059                           
 10060                           ;Bluetooth.c: 561: return 0;
 10061                           ;	Return value of _UseBluetooth is never used
 10062  0010E4  0012               	return	
 10063  0010E6                     l15689:
 10064                           
 10065                           ;Bluetooth.c: 562: }
 10066                           ;Bluetooth.c: 563: StringPos++;
 10067  0010E6  0102               	movlb	2	; () banked
 10068  0010E8  2B02               	incf	UseBluetooth@StringPos& (0+255),f,b
 10069                           
 10070                           ; BSR set to: 2
 10071                           ;Bluetooth.c: 564: UARTstring(CRLN);
 10072  0010EA  0ED1               	movlw	low _CRLN
 10073  0010EC  0100               	movlb	0	; () banked
 10074  0010EE  6F7A               	movwf	UARTstring@data& (0+255),b
 10075  0010F0  0EF0               	movlw	high _CRLN
 10076  0010F2  0100               	movlb	0	; () banked
 10077  0010F4  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10078  0010F6  ECD3  F046         	call	_UARTstring	;wreg free
 10079                           
 10080                           ;Bluetooth.c: 565: if(!GetNumber(String, 1, &temp))
 10081  0010FA  C200  F085         	movff	UseBluetooth@String,GetNumber@This
 10082  0010FE  C201  F086         	movff	UseBluetooth@String+1,GetNumber@This+1
 10083  001102  0E01               	movlw	1
 10084  001104  0100               	movlb	0	; () banked
 10085  001106  6F87               	movwf	GetNumber@CommaNumber& (0+255),b
 10086  001108  0E8E               	movlw	low UseBluetooth@temp
 10087  00110A  0100               	movlb	0	; () banked
 10088  00110C  6F88               	movwf	GetNumber@result& (0+255),b
 10089  00110E  0E02               	movlw	high UseBluetooth@temp
 10090  001110  0100               	movlb	0	; () banked
 10091  001112  6F89               	movwf	(GetNumber@result+1)& (0+255),b
 10092  001114  ECFB  F023         	call	_GetNumber	;wreg free
 10093  001118  0900               	iorlw	0
 10094  00111A  A4D8               	btfss	status,2,c
 10095  00111C  D003               	goto	l15697
 10096                           
 10097                           ;Bluetooth.c: 566: {
 10098                           ;Bluetooth.c: 567: rfconf = (unsigned char) temp;
 10099  00111E  C28E  F28B         	movff	UseBluetooth@temp,UseBluetooth@rfconf
 10100                           
 10101                           ;Bluetooth.c: 568: }
 10102  001122  D011               	goto	l15701
 10103  001124                     l15697:
 10104                           
 10105                           ;Bluetooth.c: 569: else
 10106                           ;Bluetooth.c: 570: {
 10107                           ;Bluetooth.c: 571: UARTstringCRLN((unsigned char *)"Error: No RF configuration specified
      +                          ");
 10108  001124  0E7E               	movlw	low STR_63
 10109  001126  0100               	movlb	0	; () banked
 10110  001128  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10111  00112A  0EF5               	movlw	high STR_63
 10112  00112C  0100               	movlb	0	; () banked
 10113  00112E  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10114  001130  EC78  F045         	call	_UARTstringCRLN	;wreg free
 10115                           
 10116                           ;Bluetooth.c: 572: UARTstring(CRLN);
 10117  001134  0ED1               	movlw	low _CRLN
 10118  001136  0100               	movlb	0	; () banked
 10119  001138  6F7A               	movwf	UARTstring@data& (0+255),b
 10120  00113A  0EF0               	movlw	high _CRLN
 10121  00113C  0100               	movlb	0	; () banked
 10122  00113E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10123  001140  ECD3  F046         	call	_UARTstring	;wreg free
 10124                           
 10125                           ;Bluetooth.c: 573: return 0;
 10126                           ;	Return value of _UseBluetooth is never used
 10127  001144  0012               	return	
 10128  001146                     l15701:
 10129                           
 10130                           ;Bluetooth.c: 574: }
 10131                           ;Bluetooth.c: 575: if(rfconf <= 0 || rfconf > 2)
 10132  001146  0102               	movlb	2	; () banked
 10133  001148  518B               	movf	UseBluetooth@rfconf& (0+255),w,b
 10134  00114A  0102               	movlb	2	; () banked
 10135  00114C  B4D8               	btfsc	status,2,c
 10136  00114E  D005               	goto	l15705
 10137                           
 10138                           ; BSR set to: 2
 10139  001150  0E02               	movlw	2
 10140  001152  0102               	movlb	2	; () banked
 10141  001154  658B               	cpfsgt	UseBluetooth@rfconf& (0+255),b
 10142  001156  D012               	goto	l15709
 10143  001158  D000               	goto	l15705
 10144  00115A                     l15705:
 10145                           
 10146                           ; BSR set to: 2
 10147                           ;Bluetooth.c: 576: {
 10148                           ;Bluetooth.c: 577: UARTstringCRLN((unsigned char *)"Error: RF configuration out of range
      +                          ");
 10149  00115A  0EA3               	movlw	low STR_65
 10150  00115C  0100               	movlb	0	; () banked
 10151  00115E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10152  001160  0EF5               	movlw	high STR_65
 10153  001162  0100               	movlb	0	; () banked
 10154  001164  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10155  001166  EC78  F045         	call	_UARTstringCRLN	;wreg free
 10156                           
 10157                           ;Bluetooth.c: 578: UARTstring(CRLN);
 10158  00116A  0ED1               	movlw	low _CRLN
 10159  00116C  0100               	movlb	0	; () banked
 10160  00116E  6F7A               	movwf	UARTstring@data& (0+255),b
 10161  001170  0EF0               	movlw	high _CRLN
 10162  001172  0100               	movlb	0	; () banked
 10163  001174  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10164  001176  ECD3  F046         	call	_UARTstring	;wreg free
 10165                           
 10166                           ;Bluetooth.c: 579: return 0;
 10167                           ;	Return value of _UseBluetooth is never used
 10168  00117A  0012               	return	
 10169  00117C                     l15709:
 10170                           
 10171                           ;Bluetooth.c: 580: }
 10172                           ;Bluetooth.c: 581: if(GetStringAfterComma(String, 1, rfchannelSTR))
 10173  00117C  C200  F079         	movff	UseBluetooth@String,GetStringAfterComma@This
 10174  001180  C201  F07A         	movff	UseBluetooth@String+1,GetStringAfterComma@This+1
 10175  001184  0E01               	movlw	1
 10176  001186  0100               	movlb	0	; () banked
 10177  001188  6F7B               	movwf	GetStringAfterComma@CommaNumber& (0+255),b
 10178  00118A  0E73               	movlw	low UseBluetooth@rfchannelSTR
 10179  00118C  0100               	movlb	0	; () banked
 10180  00118E  6F7C               	movwf	GetStringAfterComma@result& (0+255),b
 10181  001190  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10182  001192  0100               	movlb	0	; () banked
 10183  001194  6F7D               	movwf	(GetStringAfterComma@result+1)& (0+255),b
 10184  001196  EC1B  F03C         	call	_GetStringAfterComma	;wreg free
 10185  00119A  0900               	iorlw	0
 10186  00119C  B4D8               	btfsc	status,2,c
 10187  00119E  D011               	goto	l15717
 10188                           
 10189                           ;Bluetooth.c: 582: {
 10190                           ;Bluetooth.c: 583: UARTstringCRLN((unsigned char *)"Error: No RF channel specified");
 10191  0011A0  0EB0               	movlw	low STR_66
 10192  0011A2  0100               	movlb	0	; () banked
 10193  0011A4  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10194  0011A6  0EF7               	movlw	high STR_66
 10195  0011A8  0100               	movlb	0	; () banked
 10196  0011AA  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10197  0011AC  EC78  F045         	call	_UARTstringCRLN	;wreg free
 10198                           
 10199                           ;Bluetooth.c: 584: UARTstring(CRLN);
 10200  0011B0  0ED1               	movlw	low _CRLN
 10201  0011B2  0100               	movlb	0	; () banked
 10202  0011B4  6F7A               	movwf	UARTstring@data& (0+255),b
 10203  0011B6  0EF0               	movlw	high _CRLN
 10204  0011B8  0100               	movlb	0	; () banked
 10205  0011BA  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10206  0011BC  ECD3  F046         	call	_UARTstring	;wreg free
 10207                           
 10208                           ;Bluetooth.c: 586: }
 10209                           
 10210                           ;Bluetooth.c: 585: return 0;
 10211                           ;	Return value of _UseBluetooth is never used
 10212  0011C0  0012               	return	
 10213  0011C2                     l15717:
 10214                           
 10215                           ;Bluetooth.c: 587: else
 10216                           ;Bluetooth.c: 588: {
 10217                           ;Bluetooth.c: 589: lowercaseString(rfchannelSTR);
 10218  0011C2  0E73               	movlw	low UseBluetooth@rfchannelSTR
 10219  0011C4  0100               	movlb	0	; () banked
 10220  0011C6  6F79               	movwf	lowercaseString@Input& (0+255),b
 10221  0011C8  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10222  0011CA  0100               	movlb	0	; () banked
 10223  0011CC  6F7A               	movwf	(lowercaseString@Input+1)& (0+255),b
 10224  0011CE  EC3E  F048         	call	_lowercaseString	;wreg free
 10225                           
 10226                           ;Bluetooth.c: 590: if(rfchannelSTR[1] == 0 || rfchannelSTR[1] == ' ')
 10227  0011D2  0102               	movlb	2	; () banked
 10228  0011D4  5174               	movf	(UseBluetooth@rfchannelSTR+1)& (0+255),w,b
 10229  0011D6  B4D8               	btfsc	status,2,c
 10230  0011D8  D005               	goto	l15723
 10231                           
 10232                           ; BSR set to: 2
 10233  0011DA  0E20               	movlw	32
 10234  0011DC  0102               	movlb	2	; () banked
 10235  0011DE  1974               	xorwf	(UseBluetooth@rfchannelSTR+1)& (0+255),w,b
 10236  0011E0  A4D8               	btfss	status,2,c
 10237  0011E2  D3AD               	goto	l15951
 10238  0011E4                     l15723:
 10239                           
 10240                           ; BSR set to: 2
 10241                           ;Bluetooth.c: 591: {
 10242                           ;Bluetooth.c: 592: rfchannelSTR[1] = 0;
 10243  0011E4  0E00               	movlw	0
 10244  0011E6  0102               	movlb	2	; () banked
 10245  0011E8  6F74               	movwf	(UseBluetooth@rfchannelSTR+1)& (0+255),b
 10246                           
 10247                           ; BSR set to: 2
 10248                           ;Bluetooth.c: 593: if(rfconf == 1)
 10249  0011EA  0102               	movlb	2	; () banked
 10250  0011EC  058B               	decf	UseBluetooth@rfconf& (0+255),w,b
 10251  0011EE  A4D8               	btfss	status,2,c
 10252  0011F0  D015               	goto	l15731
 10253                           
 10254                           ; BSR set to: 2
 10255                           ;Bluetooth.c: 594: {
 10256                           ;Bluetooth.c: 595: if(!StringContainsCaseInsensitive(Conf1_Channels, rfchannelSTR))
 10257  0011F2  0EC9               	movlw	low _Conf1_Channels
 10258  0011F4  0100               	movlb	0	; () banked
 10259  0011F6  6F7C               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 10260  0011F8  0EF0               	movlw	high _Conf1_Channels
 10261  0011FA  0100               	movlb	0	; () banked
 10262  0011FC  6F7D               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 10263  0011FE  0E73               	movlw	low UseBluetooth@rfchannelSTR
 10264  001200  0100               	movlb	0	; () banked
 10265  001202  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10266  001204  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10267  001206  0100               	movlb	0	; () banked
 10268  001208  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10269  00120A  EC69  F03A         	call	_StringContainsCaseInsensitive	;wreg free
 10270  00120E  0900               	iorlw	0
 10271  001210  A4D8               	btfss	status,2,c
 10272  001212  D019               	goto	l1916
 10273                           
 10274                           ;Bluetooth.c: 596: {
 10275                           ;Bluetooth.c: 597: ok = 0;
 10276  001214  0E00               	movlw	0
 10277  001216  0102               	movlb	2	; () banked
 10278  001218  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10279                           
 10280                           ; BSR set to: 2
 10281                           ;Bluetooth.c: 598: }
 10282                           ;Bluetooth.c: 599: }
 10283  00121A  D015               	goto	l1916
 10284  00121C                     l15731:
 10285                           
 10286                           ; BSR set to: 2
 10287                           ;Bluetooth.c: 600: else if(rfconf == 2)
 10288  00121C  0E02               	movlw	2
 10289  00121E  0102               	movlb	2	; () banked
 10290  001220  198B               	xorwf	UseBluetooth@rfconf& (0+255),w,b
 10291  001222  A4D8               	btfss	status,2,c
 10292  001224  D010               	goto	l1916
 10293                           
 10294                           ; BSR set to: 2
 10295                           ;Bluetooth.c: 601: {
 10296                           ;Bluetooth.c: 602: if(!StringContainsCaseInsensitive(Conf2_Channels, rfchannelSTR))
 10297  001226  0ECD               	movlw	low _Conf2_Channels
 10298  001228  0100               	movlb	0	; () banked
 10299  00122A  6F7C               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 10300  00122C  0EF0               	movlw	high _Conf2_Channels
 10301  00122E  0100               	movlb	0	; () banked
 10302  001230  6F7D               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 10303  001232  0E73               	movlw	low UseBluetooth@rfchannelSTR
 10304  001234  0100               	movlb	0	; () banked
 10305  001236  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10306  001238  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10307  00123A  0100               	movlb	0	; () banked
 10308  00123C  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10309  00123E  EC69  F03A         	call	_StringContainsCaseInsensitive	;wreg free
 10310  001242  D7E5               	goto	L10
 10311                           
 10312                           ; BSR set to: 2
 10313                           
 10314                           ;Bluetooth.c: 603: {
 10315                           ;Bluetooth.c: 604: ok = 0;
 10316  001244  D000               	goto	l1916
 10317  001246                     l1916:
 10318                           
 10319                           ;Bluetooth.c: 605: }
 10320                           ;Bluetooth.c: 606: }
 10321                           ;Bluetooth.c: 607: if(!ok)
 10322  001246  0102               	movlb	2	; () banked
 10323  001248  5189               	movf	UseBluetooth@ok& (0+255),w,b
 10324  00124A  0102               	movlb	2	; () banked
 10325  00124C  A4D8               	btfss	status,2,c
 10326  00124E  D011               	goto	l15741
 10327                           
 10328                           ; BSR set to: 2
 10329                           ;Bluetooth.c: 608: {
 10330                           ;Bluetooth.c: 609: UARTstringCRLN((unsigned char *)"Error: RF channel out of range");
 10331  001250  0ECF               	movlw	low STR_67
 10332  001252  0100               	movlb	0	; () banked
 10333  001254  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10334  001256  0EF7               	movlw	high STR_67
 10335  001258  0100               	movlb	0	; () banked
 10336  00125A  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10337  00125C  EC78  F045         	call	_UARTstringCRLN	;wreg free
 10338                           
 10339                           ;Bluetooth.c: 610: UARTstring(CRLN);
 10340  001260  0ED1               	movlw	low _CRLN
 10341  001262  0100               	movlb	0	; () banked
 10342  001264  6F7A               	movwf	UARTstring@data& (0+255),b
 10343  001266  0EF0               	movlw	high _CRLN
 10344  001268  0100               	movlb	0	; () banked
 10345  00126A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10346  00126C  ECD3  F046         	call	_UARTstring	;wreg free
 10347                           
 10348                           ;Bluetooth.c: 611: return 0;
 10349                           ;	Return value of _UseBluetooth is never used
 10350  001270  0012               	return	
 10351  001272                     l15741:
 10352                           
 10353                           ;Bluetooth.c: 612: }
 10354                           ;Bluetooth.c: 614: if(rfconf == 1)
 10355  001272  0102               	movlb	2	; () banked
 10356  001274  058B               	decf	UseBluetooth@rfconf& (0+255),w,b
 10357  001276  A4D8               	btfss	status,2,c
 10358  001278  D017               	goto	l15755
 10359                           
 10360                           ; BSR set to: 2
 10361                           ;Bluetooth.c: 615: {
 10362                           ;Bluetooth.c: 616: if(rfchannelSTR[0] == 'd')
 10363  00127A  0E64               	movlw	100
 10364  00127C  0102               	movlb	2	; () banked
 10365  00127E  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10366  001280  A4D8               	btfss	status,2,c
 10367  001282  D002               	goto	l15747
 10368                           
 10369                           ; BSR set to: 2
 10370                           ;Bluetooth.c: 617: {
 10371                           ;Bluetooth.c: 618: tempRFArray = 0;
 10372  001284  0E00               	movlw	0
 10373  001286  D0B9               	goto	L9
 10374  001288                     l15747:
 10375                           
 10376                           ; BSR set to: 2
 10377                           ;Bluetooth.c: 620: else if(rfchannelSTR[0] == 'e')
 10378  001288  0E65               	movlw	101
 10379  00128A  0102               	movlb	2	; () banked
 10380  00128C  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10381  00128E  A4D8               	btfss	status,2,c
 10382  001290  D002               	goto	l15751
 10383                           
 10384                           ; BSR set to: 2
 10385                           ;Bluetooth.c: 621: {
 10386                           ;Bluetooth.c: 622: tempRFArray = 1;
 10387  001292  0E01               	movlw	1
 10388  001294  D0B2               	goto	L9
 10389  001296                     l15751:
 10390                           
 10391                           ; BSR set to: 2
 10392                           ;Bluetooth.c: 624: else if(rfchannelSTR[0] == 'f')
 10393  001296  0E66               	movlw	102
 10394  001298  0102               	movlb	2	; () banked
 10395  00129A  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10396  00129C  A4D8               	btfss	status,2,c
 10397  00129E  0012               	return	
 10398                           
 10399                           ; BSR set to: 2
 10400                           ;Bluetooth.c: 625: {
 10401                           ;Bluetooth.c: 626: tempRFArray = 2;
 10402  0012A0  0E02               	movlw	2
 10403  0012A2  D0AB               	goto	L9
 10404                           
 10405                           ; BSR set to: 2
 10406                           ;Bluetooth.c: 628: else
 10407                           ;Bluetooth.c: 629: {
 10408                           ;Bluetooth.c: 631: return 0;
 10409                           ;	Return value of _UseBluetooth is never used
 10410                           
 10411                           ;Bluetooth.c: 627: }
 10412  0012A4  0012               	return	
 10413                           
 10414                           ; BSR set to: 2
 10415                           ;Bluetooth.c: 632: }
 10416                           ;Bluetooth.c: 633: }
 10417                           
 10418                           ; BSR set to: 2
 10419                           
 10420                           ; BSR set to: 2
 10421  0012A6  D0AE               	goto	l15823
 10422  0012A8                     l15755:
 10423                           
 10424                           ; BSR set to: 2
 10425                           ;Bluetooth.c: 634: else if(rfconf ==2)
 10426  0012A8  0E02               	movlw	2
 10427  0012AA  0102               	movlb	2	; () banked
 10428  0012AC  198B               	xorwf	UseBluetooth@rfconf& (0+255),w,b
 10429  0012AE  A4D8               	btfss	status,2,c
 10430  0012B0  D0A9               	goto	l15823
 10431                           
 10432                           ; BSR set to: 2
 10433                           ;Bluetooth.c: 635: {
 10434                           ;Bluetooth.c: 636: if(rfchannelSTR[0] == 'b')
 10435  0012B2  0E62               	movlw	98
 10436  0012B4  0102               	movlb	2	; () banked
 10437  0012B6  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10438  0012B8  A4D8               	btfss	status,2,c
 10439  0012BA  D002               	goto	l15761
 10440                           
 10441                           ; BSR set to: 2
 10442                           ;Bluetooth.c: 637: {
 10443                           ;Bluetooth.c: 638: tempRFArray = 3;
 10444  0012BC  0E03               	movlw	3
 10445  0012BE  D09D               	goto	L9
 10446  0012C0                     l15761:
 10447                           
 10448                           ; BSR set to: 2
 10449                           ;Bluetooth.c: 640: else if(rfchannelSTR[0] == 'd')
 10450  0012C0  0E64               	movlw	100
 10451  0012C2  0102               	movlb	2	; () banked
 10452  0012C4  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10453  0012C6  A4D8               	btfss	status,2,c
 10454  0012C8  D002               	goto	l15765
 10455                           
 10456                           ; BSR set to: 2
 10457                           ;Bluetooth.c: 641: {
 10458                           ;Bluetooth.c: 642: tempRFArray = 4;
 10459  0012CA  0E04               	movlw	4
 10460  0012CC  D096               	goto	L9
 10461  0012CE                     l15765:
 10462                           
 10463                           ; BSR set to: 2
 10464                           ;Bluetooth.c: 644: else if(rfchannelSTR[0] == 'h')
 10465  0012CE  0E68               	movlw	104
 10466  0012D0  0102               	movlb	2	; () banked
 10467  0012D2  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10468  0012D4  A4D8               	btfss	status,2,c
 10469  0012D6  0012               	return	
 10470                           
 10471                           ; BSR set to: 2
 10472                           ;Bluetooth.c: 645: {
 10473                           ;Bluetooth.c: 646: cleanBuffer(ReceivedString, ReceivedStringPos);
 10474  0012D8  0E00               	movlw	low _ReceivedString
 10475  0012DA  0100               	movlb	0	; () banked
 10476  0012DC  6F79               	movwf	cleanBuffer@data& (0+255),b
 10477  0012DE  0E06               	movlw	high _ReceivedString
 10478  0012E0  0100               	movlb	0	; () banked
 10479  0012E2  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 10480  0012E4  C0E0  F07B         	movff	_ReceivedStringPos,cleanBuffer@count
 10481  0012E8  0100               	movlb	0	; () banked
 10482  0012EA  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 10483  0012EC  ECA6  F046         	call	_cleanBuffer	;wreg free
 10484                           
 10485                           ;Bluetooth.c: 647: ReceivedStringPos = 0;
 10486  0012F0  0E00               	movlw	0
 10487  0012F2  0100               	movlb	0	; () banked
 10488  0012F4  6FE0               	movwf	_ReceivedStringPos& (0+255),b
 10489                           
 10490                           ; BSR set to: 0
 10491                           ;Bluetooth.c: 648: NewReceivedString = 0;
 10492  0012F6  0E00               	movlw	0
 10493  0012F8  0100               	movlb	0	; () banked
 10494  0012FA  6FDF               	movwf	_NewReceivedString& (0+255),b	;volatile
 10495                           
 10496                           ; BSR set to: 0
 10497                           ;Bluetooth.c: 649: UARTstring((unsigned char *)"Which device?");
 10498  0012FC  0EA4               	movlw	low STR_68
 10499  0012FE  0100               	movlb	0	; () banked
 10500  001300  6F7A               	movwf	UARTstring@data& (0+255),b
 10501  001302  0EFB               	movlw	high STR_68
 10502  001304  0100               	movlb	0	; () banked
 10503  001306  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10504  001308  ECD3  F046         	call	_UARTstring	;wreg free
 10505                           
 10506                           ;Bluetooth.c: 650: UARTstring(CRLN);
 10507  00130C  0ED1               	movlw	low _CRLN
 10508  00130E  0100               	movlb	0	; () banked
 10509  001310  6F7A               	movwf	UARTstring@data& (0+255),b
 10510  001312  0EF0               	movlw	high _CRLN
 10511  001314  0100               	movlb	0	; () banked
 10512  001316  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10513  001318  ECD3  F046         	call	_UARTstring	;wreg free
 10514                           
 10515                           ;Bluetooth.c: 651: UARTchar('>');
 10516  00131C  0E3E               	movlw	62
 10517  00131E  ECBF  F049         	call	_UARTchar
 10518                           
 10519                           ;Bluetooth.c: 652: timeout = 0;
 10520  001322  0E00               	movlw	0
 10521  001324  0102               	movlb	2	; () banked
 10522  001326  6F82               	movwf	UseBluetooth@timeout& (0+255),b
 10523                           
 10524                           ; BSR set to: 2
 10525                           ;Bluetooth.c: 653: ClearUSART();
 10526  001328  EC5D  F04A         	call	_ClearUSART	;wreg free
 10527                           
 10528                           ;Bluetooth.c: 654: PIR1bits.RCIF = 0;
 10529  00132C  9A9E               	bcf	3998,5,c	;volatile
 10530                           
 10531                           ;Bluetooth.c: 655: PIE1bits.RCIE = 1;
 10532  00132E  8A9D               	bsf	3997,5,c	;volatile
 10533                           
 10534                           ;Bluetooth.c: 656: while(!NewReceivedString)
 10535  001330  D023               	goto	l15797
 10536  001332                     l15787:
 10537                           
 10538                           ;Bluetooth.c: 657: {
 10539                           ;Bluetooth.c: 658: delayUS(300000);
 10540  001332  0EE0               	movlw	224
 10541  001334  0100               	movlb	0	; () banked
 10542  001336  6F79               	movwf	delayUS@US& (0+255),b
 10543  001338  0E93               	movlw	147
 10544  00133A  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 10545  00133C  0E04               	movlw	4
 10546  00133E  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 10547  001340  0E00               	movlw	0
 10548  001342  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 10549  001344  EC57  F047         	call	_delayUS	;wreg free
 10550                           
 10551                           ;Bluetooth.c: 659: timeout++;
 10552  001348  0102               	movlb	2	; () banked
 10553  00134A  2B82               	incf	UseBluetooth@timeout& (0+255),f,b
 10554                           
 10555                           ; BSR set to: 2
 10556                           ;Bluetooth.c: 660: if(timeout > 25)
 10557  00134C  0E19               	movlw	25
 10558  00134E  0102               	movlb	2	; () banked
 10559  001350  6582               	cpfsgt	UseBluetooth@timeout& (0+255),b
 10560  001352  D012               	goto	l15797
 10561                           
 10562                           ; BSR set to: 2
 10563                           ;Bluetooth.c: 661: {
 10564                           ;Bluetooth.c: 662: UARTstring(CRLN);
 10565  001354  0ED1               	movlw	low _CRLN
 10566  001356  0100               	movlb	0	; () banked
 10567  001358  6F7A               	movwf	UARTstring@data& (0+255),b
 10568  00135A  0EF0               	movlw	high _CRLN
 10569  00135C  0100               	movlb	0	; () banked
 10570  00135E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10571  001360  ECD3  F046         	call	_UARTstring	;wreg free
 10572                           
 10573                           ;Bluetooth.c: 663: UARTstringCRLN((unsigned char *)"Error: No RF config 2, channel H dev
      +                          ice specified");
 10574  001364  0E7F               	movlw	low STR_69
 10575  001366  0100               	movlb	0	; () banked
 10576  001368  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10577  00136A  0EF1               	movlw	high STR_69
 10578  00136C  0100               	movlb	0	; () banked
 10579  00136E  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10580  001370  EC78  F045         	call	_UARTstringCRLN	;wreg free
 10581                           
 10582                           ;Bluetooth.c: 664: return 0;
 10583                           ;	Return value of _UseBluetooth is never used
 10584  001374  0012               	return	
 10585  001376  D000               	goto	l15797
 10586  001378                     l15797:
 10587  001378  0100               	movlb	0	; () banked
 10588  00137A  51DF               	movf	_NewReceivedString& (0+255),w,b	;volatile
 10589  00137C  B4D8               	btfsc	status,2,c
 10590  00137E  D7D9               	goto	l15787
 10591                           
 10592                           ; BSR set to: 0
 10593                           ;Bluetooth.c: 665: }
 10594                           ;Bluetooth.c: 666: }
 10595                           ;Bluetooth.c: 667: PIE1bits.RCIE = 0;
 10596  001380  9A9D               	bcf	3997,5,c	;volatile
 10597                           
 10598                           ; BSR set to: 0
 10599                           ;Bluetooth.c: 668: ok = 1;
 10600  001382  0E01               	movlw	1
 10601  001384  0102               	movlb	2	; () banked
 10602  001386  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10603                           
 10604                           ; BSR set to: 2
 10605                           ;Bluetooth.c: 669: if(ReceivedString[0] < '1' || ReceivedString[0] > '3')
 10606  001388  0E30               	movlw	48
 10607  00138A  0106               	movlb	6	; () banked
 10608  00138C  6500               	cpfsgt	_ReceivedString& (0+255),b
 10609  00138E  D005               	goto	l15805
 10610                           
 10611                           ; BSR set to: 6
 10612  001390  0E33               	movlw	51
 10613  001392  0106               	movlb	6	; () banked
 10614  001394  6500               	cpfsgt	_ReceivedString& (0+255),b
 10615  001396  D00D               	goto	l15809
 10616  001398  D000               	goto	l15805
 10617  00139A                     l15805:
 10618                           
 10619                           ; BSR set to: 6
 10620                           ;Bluetooth.c: 670: {
 10621                           ;Bluetooth.c: 671: UARTstringCRLN((unsigned char *)"Error: RF config 2, channel H device
      +                           out of range");
 10622  00139A  0EB1               	movlw	low STR_70
 10623  00139C  0100               	movlb	0	; () banked
 10624  00139E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10625  0013A0  0EF1               	movlw	high STR_70
 10626  0013A2  0100               	movlb	0	; () banked
 10627  0013A4  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10628  0013A6  EC78  F045         	call	_UARTstringCRLN	;wreg free
 10629                           
 10630                           ;Bluetooth.c: 672: ok = 0;
 10631  0013AA  0E00               	movlw	0
 10632  0013AC  0102               	movlb	2	; () banked
 10633  0013AE  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10634  0013B0  D000               	goto	l15809
 10635  0013B2                     l15809:
 10636                           
 10637                           ;Bluetooth.c: 673: }
 10638                           ;Bluetooth.c: 674: cleanBuffer(ReceivedString, ReceivedStringPos);
 10639  0013B2  0E00               	movlw	low _ReceivedString
 10640  0013B4  0100               	movlb	0	; () banked
 10641  0013B6  6F79               	movwf	cleanBuffer@data& (0+255),b
 10642  0013B8  0E06               	movlw	high _ReceivedString
 10643  0013BA  0100               	movlb	0	; () banked
 10644  0013BC  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 10645  0013BE  C0E0  F07B         	movff	_ReceivedStringPos,cleanBuffer@count
 10646  0013C2  0100               	movlb	0	; () banked
 10647  0013C4  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 10648  0013C6  ECA6  F046         	call	_cleanBuffer	;wreg free
 10649                           
 10650                           ;Bluetooth.c: 675: ReceivedStringPos = 0;
 10651  0013CA  0E00               	movlw	0
 10652  0013CC  0100               	movlb	0	; () banked
 10653  0013CE  6FE0               	movwf	_ReceivedStringPos& (0+255),b
 10654                           
 10655                           ; BSR set to: 0
 10656                           ;Bluetooth.c: 676: NewReceivedString = 0;
 10657  0013D0  0E00               	movlw	0
 10658  0013D2  0100               	movlb	0	; () banked
 10659  0013D4  6FDF               	movwf	_NewReceivedString& (0+255),b	;volatile
 10660                           
 10661                           ; BSR set to: 0
 10662                           ;Bluetooth.c: 677: if(!ok)
 10663  0013D6  0102               	movlb	2	; () banked
 10664  0013D8  5189               	movf	UseBluetooth@ok& (0+255),w,b
 10665  0013DA  0102               	movlb	2	; () banked
 10666  0013DC  B4D8               	btfsc	status,2,c
 10667  0013DE  0012               	return	
 10668  0013E0  D001               	goto	l15819
 10669                           
 10670                           ; BSR set to: 2
 10671                           ;Bluetooth.c: 678: {
 10672                           ;Bluetooth.c: 679: return 0;
 10673                           ;	Return value of _UseBluetooth is never used
 10674  0013E2  0012               	return	
 10675  0013E4                     l15819:
 10676                           
 10677                           ; BSR set to: 2
 10678                           ;Bluetooth.c: 680: }
 10679                           ;Bluetooth.c: 681: device = String[0] - '0';
 10680  0013E4  C200  FFD9         	movff	UseBluetooth@String,fsr2l
 10681  0013E8  C201  FFDA         	movff	UseBluetooth@String+1,fsr2h
 10682  0013EC  50DF               	movf	indf2,w,c
 10683  0013EE  0FD0               	addlw	208
 10684  0013F0  0102               	movlb	2	; () banked
 10685  0013F2  6F84               	movwf	UseBluetooth@device& (0+255),b
 10686                           
 10687                           ; BSR set to: 2
 10688                           ;Bluetooth.c: 682: tempRFArray = device + 4;
 10689  0013F4  0102               	movlb	2	; () banked
 10690  0013F6  5184               	movf	UseBluetooth@device& (0+255),w,b
 10691  0013F8  0F04               	addlw	4
 10692  0013FA                     L9:
 10693  0013FA  0102               	movlb	2	; () banked
 10694  0013FC  6F8A               	movwf	UseBluetooth@tempRFArray& (0+255),b
 10695                           
 10696                           ;Bluetooth.c: 683: }
 10697  0013FE  D002               	goto	l15823
 10698                           
 10699                           ; BSR set to: 2
 10700                           ;Bluetooth.c: 684: else
 10701                           ;Bluetooth.c: 685: {
 10702                           ;Bluetooth.c: 687: return 0;
 10703                           ;	Return value of _UseBluetooth is never used
 10704  001400  0012               	return	
 10705                           
 10706                           ; BSR set to: 2
 10707                           
 10708                           ; BSR set to: 2
 10709                           
 10710                           ; BSR set to: 2
 10711                           
 10712                           ; BSR set to: 2
 10713  001402  D000               	goto	l15823
 10714  001404                     l15823:
 10715                           
 10716                           ; BSR set to: 2
 10717                           ;Bluetooth.c: 688: }
 10718                           ;Bluetooth.c: 689: }
 10719                           ;Bluetooth.c: 690: if(set)
 10720  001404  0102               	movlb	2	; () banked
 10721  001406  517D               	movf	UseBluetooth@set& (0+255),w,b
 10722  001408  0102               	movlb	2	; () banked
 10723  00140A  B4D8               	btfsc	status,2,c
 10724  00140C  D1D3               	goto	l15911
 10725                           
 10726                           ; BSR set to: 2
 10727                           ;Bluetooth.c: 691: {
 10728                           ;Bluetooth.c: 692: if(!WaitForIRsignal())
 10729  00140E  EC6E  F043         	call	_WaitForIRsignal	;wreg free
 10730  001412  0900               	iorlw	0
 10731  001414  B4D8               	btfsc	status,2,c
 10732  001416  0012               	return	
 10733  001418  D001               	goto	l15829
 10734                           
 10735                           ;Bluetooth.c: 693: {
 10736                           ;Bluetooth.c: 694: return 0;
 10737                           ;	Return value of _UseBluetooth is never used
 10738  00141A  0012               	return	
 10739  00141C                     l15829:
 10740                           
 10741                           ;Bluetooth.c: 695: }
 10742                           ;Bluetooth.c: 696: UARTstring(CRLN);
 10743  00141C  0ED1               	movlw	low _CRLN
 10744  00141E  0100               	movlb	0	; () banked
 10745  001420  6F7A               	movwf	UARTstring@data& (0+255),b
 10746  001422  0EF0               	movlw	high _CRLN
 10747  001424  0100               	movlb	0	; () banked
 10748  001426  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10749  001428  ECD3  F046         	call	_UARTstring	;wreg free
 10750                           
 10751                           ;Bluetooth.c: 697: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
 10752  00142C  C0E1  F07D         	movff	_IR_NEC,DecodeNEC@Nec
 10753  001430  C0E2  F07E         	movff	_IR_NEC+1,DecodeNEC@Nec+1
 10754  001434  C0E3  F07F         	movff	_IR_NEC+2,DecodeNEC@Nec+2
 10755  001438  C0E4  F080         	movff	_IR_NEC+3,DecodeNEC@Nec+3
 10756  00143C  0E8C               	movlw	low UseBluetooth@NecAddress
 10757  00143E  0100               	movlb	0	; () banked
 10758  001440  6F81               	movwf	DecodeNEC@address& (0+255),b
 10759  001442  0E02               	movlw	high UseBluetooth@NecAddress
 10760  001444  0100               	movlb	0	; () banked
 10761  001446  6F82               	movwf	(DecodeNEC@address+1)& (0+255),b
 10762  001448  0E8D               	movlw	low UseBluetooth@NecCommand
 10763  00144A  0100               	movlb	0	; () banked
 10764  00144C  6F83               	movwf	DecodeNEC@command& (0+255),b
 10765  00144E  0E02               	movlw	high UseBluetooth@NecCommand
 10766  001450  0100               	movlb	0	; () banked
 10767  001452  6F84               	movwf	(DecodeNEC@command+1)& (0+255),b
 10768  001454  EC8A  F041         	call	_DecodeNEC	;wreg free
 10769                           
 10770                           ;Bluetooth.c: 698: ok = 0;
 10771  001458  0E00               	movlw	0
 10772  00145A  0102               	movlb	2	; () banked
 10773  00145C  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10774                           
 10775                           ; BSR set to: 2
 10776                           ;Bluetooth.c: 699: for(i=0; i < 3; i++)
 10777  00145E  0E00               	movlw	0
 10778  001460  0102               	movlb	2	; () banked
 10779  001462  6F92               	movwf	UseBluetooth@i& (0+255),b
 10780  001464                     l15837:
 10781                           
 10782                           ; BSR set to: 2
 10783  001464  0E02               	movlw	2
 10784  001466  0102               	movlb	2	; () banked
 10785  001468  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 10786  00146A  D001               	goto	l15841
 10787                           
 10788                           ; BSR set to: 2
 10789  00146C  D053               	goto	l15853
 10790  00146E                     l15841:
 10791                           
 10792                           ; BSR set to: 2
 10793                           ;Bluetooth.c: 700: {
 10794                           ;Bluetooth.c: 701: if(Global.RemoteButtonRF[tempRFArray][i][0] == 0 && Global.RemoteButt
      +                          onRF[tempRFArray][i][1] == 0)
 10795  00146E  0102               	movlb	2	; () banked
 10796  001470  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 10797  001472  0D06               	mullw	6
 10798  001474  0E00               	movlw	low _Global
 10799  001476  0102               	movlb	2	; () banked
 10800  001478  6F03               	movwf	??_UseBluetooth& (0+255),b
 10801  00147A  0E04               	movlw	high _Global
 10802  00147C  0102               	movlb	2	; () banked
 10803  00147E  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 10804  001480  0E2E               	movlw	46
 10805  001482  0102               	movlb	2	; () banked
 10806  001484  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10807  001486  0E00               	movlw	0
 10808  001488  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10809  00148A  50F3               	movf	prodl,w,c
 10810  00148C  0102               	movlb	2	; () banked
 10811  00148E  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10812  001490  50F4               	movf	prodh,w,c
 10813  001492  0102               	movlb	2	; () banked
 10814  001494  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10815  001496  0102               	movlb	2	; () banked
 10816  001498  5192               	movf	UseBluetooth@i& (0+255),w,b
 10817  00149A  0D02               	mullw	2
 10818  00149C  50F3               	movf	prodl,w,c
 10819  00149E  0102               	movlb	2	; () banked
 10820  0014A0  2503               	addwf	??_UseBluetooth& (0+255),w,b
 10821  0014A2  6ED9               	movwf	fsr2l,c
 10822  0014A4  50F4               	movf	prodh,w,c
 10823  0014A6  0102               	movlb	2	; () banked
 10824  0014A8  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 10825  0014AA  6EDA               	movwf	fsr2h,c
 10826  0014AC  50DF               	movf	indf2,w,c
 10827  0014AE  A4D8               	btfss	status,2,c
 10828  0014B0  D02E               	goto	l15849
 10829                           
 10830                           ; BSR set to: 2
 10831  0014B2  0102               	movlb	2	; () banked
 10832  0014B4  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 10833  0014B6  0D06               	mullw	6
 10834  0014B8  0E00               	movlw	low _Global
 10835  0014BA  0102               	movlb	2	; () banked
 10836  0014BC  6F03               	movwf	??_UseBluetooth& (0+255),b
 10837  0014BE  0E04               	movlw	high _Global
 10838  0014C0  0102               	movlb	2	; () banked
 10839  0014C2  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 10840  0014C4  0E2E               	movlw	46
 10841  0014C6  0102               	movlb	2	; () banked
 10842  0014C8  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10843  0014CA  0E00               	movlw	0
 10844  0014CC  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10845  0014CE  50F3               	movf	prodl,w,c
 10846  0014D0  0102               	movlb	2	; () banked
 10847  0014D2  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10848  0014D4  50F4               	movf	prodh,w,c
 10849  0014D6  0102               	movlb	2	; () banked
 10850  0014D8  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10851  0014DA  0102               	movlb	2	; () banked
 10852  0014DC  5192               	movf	UseBluetooth@i& (0+255),w,b
 10853  0014DE  0D02               	mullw	2
 10854  0014E0  50F3               	movf	prodl,w,c
 10855  0014E2  0102               	movlb	2	; () banked
 10856  0014E4  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10857  0014E6  50F4               	movf	prodh,w,c
 10858  0014E8  0102               	movlb	2	; () banked
 10859  0014EA  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10860  0014EC  0E01               	movlw	1
 10861  0014EE  0102               	movlb	2	; () banked
 10862  0014F0  2503               	addwf	??_UseBluetooth& (0+255),w,b
 10863  0014F2  6ED9               	movwf	fsr2l,c
 10864  0014F4  0E00               	movlw	0
 10865  0014F6  0102               	movlb	2	; () banked
 10866  0014F8  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 10867  0014FA  6EDA               	movwf	fsr2h,c
 10868  0014FC  50DF               	movf	indf2,w,c
 10869  0014FE  A4D8               	btfss	status,2,c
 10870  001500  D006               	goto	l15849
 10871                           
 10872                           ; BSR set to: 2
 10873                           ;Bluetooth.c: 702: {
 10874                           ;Bluetooth.c: 703: EmptyPlace = i;
 10875  001502  C292  F283         	movff	UseBluetooth@i,UseBluetooth@EmptyPlace
 10876                           
 10877                           ; BSR set to: 2
 10878                           ;Bluetooth.c: 704: ok = 1;
 10879  001506  0E01               	movlw	1
 10880  001508  0102               	movlb	2	; () banked
 10881  00150A  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10882                           
 10883                           ;Bluetooth.c: 705: break;
 10884  00150C  D003               	goto	l15853
 10885  00150E                     l15849:
 10886                           
 10887                           ; BSR set to: 2
 10888  00150E  0102               	movlb	2	; () banked
 10889  001510  2B92               	incf	UseBluetooth@i& (0+255),f,b
 10890  001512  D7A8               	goto	l15837
 10891  001514                     l15853:
 10892                           
 10893                           ; BSR set to: 2
 10894                           ;Bluetooth.c: 706: }
 10895                           ;Bluetooth.c: 707: }
 10896                           ;Bluetooth.c: 708: if(!ok)
 10897  001514  0102               	movlb	2	; () banked
 10898  001516  5189               	movf	UseBluetooth@ok& (0+255),w,b
 10899  001518  0102               	movlb	2	; () banked
 10900  00151A  A4D8               	btfss	status,2,c
 10901  00151C  D009               	goto	l15859
 10902                           
 10903                           ; BSR set to: 2
 10904                           ;Bluetooth.c: 709: {
 10905                           ;Bluetooth.c: 710: UARTstringCRLN((unsigned char *)"Error: No space available to this RF
      +                           code");
 10906  00151E  0E2C               	movlw	low STR_71
 10907  001520  0100               	movlb	0	; () banked
 10908  001522  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10909  001524  0EF5               	movlw	high STR_71
 10910  001526  0100               	movlb	0	; () banked
 10911  001528  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10912  00152A  EC78  F045         	call	_UARTstringCRLN	;wreg free
 10913                           
 10914                           ;Bluetooth.c: 711: return 0;
 10915                           ;	Return value of _UseBluetooth is never used
 10916  00152E  0012               	return	
 10917  001530                     l15859:
 10918                           
 10919                           ;Bluetooth.c: 712: }
 10920                           ;Bluetooth.c: 713: ok = 1;
 10921  001530  0E01               	movlw	1
 10922  001532  0102               	movlb	2	; () banked
 10923  001534  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10924                           
 10925                           ;Bluetooth.c: 714: if(EmptyPlace)
 10926  001536  0102               	movlb	2	; () banked
 10927  001538  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 10928  00153A  0102               	movlb	2	; () banked
 10929  00153C  B4D8               	btfsc	status,2,c
 10930  00153E  D062               	goto	l15873
 10931                           
 10932                           ; BSR set to: 2
 10933                           ;Bluetooth.c: 715: {
 10934                           ;Bluetooth.c: 717: for(i=0; i < EmptyPlace; i++)
 10935  001540  0E00               	movlw	0
 10936  001542  0102               	movlb	2	; () banked
 10937  001544  6F92               	movwf	UseBluetooth@i& (0+255),b
 10938  001546  D056               	goto	l15871
 10939  001548                     l15863:
 10940                           
 10941                           ; BSR set to: 2
 10942                           ;Bluetooth.c: 718: {
 10943                           ;Bluetooth.c: 719: if(NecAddress == Global.RemoteButtonRF[tempRFArray][i][0])
 10944  001548  0102               	movlb	2	; () banked
 10945  00154A  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 10946  00154C  0D06               	mullw	6
 10947  00154E  0E00               	movlw	low _Global
 10948  001550  0102               	movlb	2	; () banked
 10949  001552  6F03               	movwf	??_UseBluetooth& (0+255),b
 10950  001554  0E04               	movlw	high _Global
 10951  001556  0102               	movlb	2	; () banked
 10952  001558  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 10953  00155A  0E2E               	movlw	46
 10954  00155C  0102               	movlb	2	; () banked
 10955  00155E  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10956  001560  0E00               	movlw	0
 10957  001562  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10958  001564  50F3               	movf	prodl,w,c
 10959  001566  0102               	movlb	2	; () banked
 10960  001568  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10961  00156A  50F4               	movf	prodh,w,c
 10962  00156C  0102               	movlb	2	; () banked
 10963  00156E  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10964  001570  0102               	movlb	2	; () banked
 10965  001572  5192               	movf	UseBluetooth@i& (0+255),w,b
 10966  001574  0D02               	mullw	2
 10967  001576  50F3               	movf	prodl,w,c
 10968  001578  0102               	movlb	2	; () banked
 10969  00157A  2503               	addwf	??_UseBluetooth& (0+255),w,b
 10970  00157C  6ED9               	movwf	fsr2l,c
 10971  00157E  50F4               	movf	prodh,w,c
 10972  001580  0102               	movlb	2	; () banked
 10973  001582  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 10974  001584  6EDA               	movwf	fsr2h,c
 10975  001586  0102               	movlb	2	; () banked
 10976  001588  518C               	movf	UseBluetooth@NecAddress& (0+255),w,b
 10977  00158A  18DE               	xorwf	postinc2,w,c
 10978  00158C  A4D8               	btfss	status,2,c
 10979  00158E  D02F               	goto	l15869
 10980                           
 10981                           ; BSR set to: 2
 10982                           ;Bluetooth.c: 720: {
 10983                           ;Bluetooth.c: 721: if(NecCommand == Global.RemoteButtonRF[tempRFArray][i][1])
 10984  001590  0102               	movlb	2	; () banked
 10985  001592  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 10986  001594  0D06               	mullw	6
 10987  001596  0E00               	movlw	low _Global
 10988  001598  0102               	movlb	2	; () banked
 10989  00159A  6F03               	movwf	??_UseBluetooth& (0+255),b
 10990  00159C  0E04               	movlw	high _Global
 10991  00159E  0102               	movlb	2	; () banked
 10992  0015A0  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 10993  0015A2  0E2E               	movlw	46
 10994  0015A4  0102               	movlb	2	; () banked
 10995  0015A6  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10996  0015A8  0E00               	movlw	0
 10997  0015AA  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10998  0015AC  50F3               	movf	prodl,w,c
 10999  0015AE  0102               	movlb	2	; () banked
 11000  0015B0  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11001  0015B2  50F4               	movf	prodh,w,c
 11002  0015B4  0102               	movlb	2	; () banked
 11003  0015B6  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11004  0015B8  0102               	movlb	2	; () banked
 11005  0015BA  5192               	movf	UseBluetooth@i& (0+255),w,b
 11006  0015BC  0D02               	mullw	2
 11007  0015BE  50F3               	movf	prodl,w,c
 11008  0015C0  0102               	movlb	2	; () banked
 11009  0015C2  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11010  0015C4  50F4               	movf	prodh,w,c
 11011  0015C6  0102               	movlb	2	; () banked
 11012  0015C8  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11013  0015CA  0E01               	movlw	1
 11014  0015CC  0102               	movlb	2	; () banked
 11015  0015CE  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11016  0015D0  6ED9               	movwf	fsr2l,c
 11017  0015D2  0E00               	movlw	0
 11018  0015D4  0102               	movlb	2	; () banked
 11019  0015D6  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11020  0015D8  6EDA               	movwf	fsr2h,c
 11021  0015DA  0102               	movlb	2	; () banked
 11022  0015DC  518D               	movf	UseBluetooth@NecCommand& (0+255),w,b
 11023  0015DE  18DE               	xorwf	postinc2,w,c
 11024  0015E0  A4D8               	btfss	status,2,c
 11025  0015E2  D005               	goto	l15869
 11026                           
 11027                           ; BSR set to: 2
 11028                           ;Bluetooth.c: 722: {
 11029                           ;Bluetooth.c: 723: ok = 0;
 11030  0015E4  0E00               	movlw	0
 11031  0015E6  0102               	movlb	2	; () banked
 11032  0015E8  6F89               	movwf	UseBluetooth@ok& (0+255),b
 11033                           
 11034                           ;Bluetooth.c: 724: break;
 11035  0015EA  D00C               	goto	l15873
 11036                           
 11037                           ; BSR set to: 2
 11038  0015EC  D000               	goto	l15869
 11039  0015EE                     l15869:
 11040                           
 11041                           ; BSR set to: 2
 11042  0015EE  0102               	movlb	2	; () banked
 11043  0015F0  2B92               	incf	UseBluetooth@i& (0+255),f,b
 11044  0015F2  D000               	goto	l15871
 11045  0015F4                     l15871:
 11046                           
 11047                           ; BSR set to: 2
 11048  0015F4  0102               	movlb	2	; () banked
 11049  0015F6  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11050  0015F8  0102               	movlb	2	; () banked
 11051  0015FA  5D92               	subwf	UseBluetooth@i& (0+255),w,b
 11052  0015FC  B0D8               	btfsc	status,0,c
 11053  0015FE  D002               	goto	l15873
 11054  001600  D7A3               	goto	l15863
 11055                           
 11056                           ; BSR set to: 2
 11057  001602  D000               	goto	l15873
 11058  001604                     l15873:
 11059                           
 11060                           ; BSR set to: 2
 11061                           ;Bluetooth.c: 725: }
 11062                           ;Bluetooth.c: 726: }
 11063                           ;Bluetooth.c: 727: }
 11064                           ;Bluetooth.c: 728: }
 11065                           ;Bluetooth.c: 729: if(!ok)
 11066  001604  0102               	movlb	2	; () banked
 11067  001606  5189               	movf	UseBluetooth@ok& (0+255),w,b
 11068  001608  0102               	movlb	2	; () banked
 11069  00160A  A4D8               	btfss	status,2,c
 11070  00160C  D009               	goto	l15879
 11071                           
 11072                           ; BSR set to: 2
 11073                           ;Bluetooth.c: 730: {
 11074                           ;Bluetooth.c: 731: UARTstringCRLN((unsigned char *)"Error: NEC code already saved to thi
      +                          s RF code");
 11075  00160E  0E7A               	movlw	low STR_72
 11076  001610  0100               	movlb	0	; () banked
 11077  001612  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11078  001614  0EF4               	movlw	high STR_72
 11079  001616  0100               	movlb	0	; () banked
 11080  001618  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11081  00161A  EC78  F045         	call	_UARTstringCRLN	;wreg free
 11082                           
 11083                           ;Bluetooth.c: 732: return 0;
 11084                           ;	Return value of _UseBluetooth is never used
 11085  00161E  0012               	return	
 11086  001620                     l15879:
 11087                           
 11088                           ;Bluetooth.c: 733: }
 11089                           ;Bluetooth.c: 736: Global.RemoteButtonRF[tempRFArray][EmptyPlace][0] = NecAddress;
 11090  001620  0102               	movlb	2	; () banked
 11091  001622  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11092  001624  0D06               	mullw	6
 11093  001626  0E00               	movlw	low _Global
 11094  001628  0102               	movlb	2	; () banked
 11095  00162A  6F03               	movwf	??_UseBluetooth& (0+255),b
 11096  00162C  0E04               	movlw	high _Global
 11097  00162E  0102               	movlb	2	; () banked
 11098  001630  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11099  001632  0E2E               	movlw	46
 11100  001634  0102               	movlb	2	; () banked
 11101  001636  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11102  001638  0E00               	movlw	0
 11103  00163A  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11104  00163C  50F3               	movf	prodl,w,c
 11105  00163E  0102               	movlb	2	; () banked
 11106  001640  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11107  001642  50F4               	movf	prodh,w,c
 11108  001644  0102               	movlb	2	; () banked
 11109  001646  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11110  001648  0102               	movlb	2	; () banked
 11111  00164A  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11112  00164C  0D02               	mullw	2
 11113  00164E  50F3               	movf	prodl,w,c
 11114  001650  0102               	movlb	2	; () banked
 11115  001652  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11116  001654  6ED9               	movwf	fsr2l,c
 11117  001656  50F4               	movf	prodh,w,c
 11118  001658  0102               	movlb	2	; () banked
 11119  00165A  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11120  00165C  6EDA               	movwf	fsr2h,c
 11121  00165E  C28C  FFDF         	movff	UseBluetooth@NecAddress,indf2
 11122                           
 11123                           ;Bluetooth.c: 737: Global.RemoteButtonRF[tempRFArray][EmptyPlace][1] = NecCommand;
 11124  001662  0102               	movlb	2	; () banked
 11125  001664  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11126  001666  0D06               	mullw	6
 11127  001668  0E00               	movlw	low _Global
 11128  00166A  0102               	movlb	2	; () banked
 11129  00166C  6F03               	movwf	??_UseBluetooth& (0+255),b
 11130  00166E  0E04               	movlw	high _Global
 11131  001670  0102               	movlb	2	; () banked
 11132  001672  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11133  001674  0E2E               	movlw	46
 11134  001676  0102               	movlb	2	; () banked
 11135  001678  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11136  00167A  0E00               	movlw	0
 11137  00167C  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11138  00167E  50F3               	movf	prodl,w,c
 11139  001680  0102               	movlb	2	; () banked
 11140  001682  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11141  001684  50F4               	movf	prodh,w,c
 11142  001686  0102               	movlb	2	; () banked
 11143  001688  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11144  00168A  0102               	movlb	2	; () banked
 11145  00168C  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11146  00168E  0D02               	mullw	2
 11147  001690  50F3               	movf	prodl,w,c
 11148  001692  0102               	movlb	2	; () banked
 11149  001694  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11150  001696  50F4               	movf	prodh,w,c
 11151  001698  0102               	movlb	2	; () banked
 11152  00169A  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11153  00169C  0E01               	movlw	1
 11154  00169E  0102               	movlb	2	; () banked
 11155  0016A0  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11156  0016A2  6ED9               	movwf	fsr2l,c
 11157  0016A4  0E00               	movlw	0
 11158  0016A6  0102               	movlb	2	; () banked
 11159  0016A8  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11160  0016AA  6EDA               	movwf	fsr2h,c
 11161  0016AC  C28D  FFDF         	movff	UseBluetooth@NecCommand,indf2
 11162                           
 11163                           ; BSR set to: 2
 11164                           ;Bluetooth.c: 738: SyncGlobalToEEPROM();
 11165  0016B0  ECF8  F047         	call	_SyncGlobalToEEPROM	;wreg free
 11166                           
 11167                           ;Bluetooth.c: 740: if(device)
 11168  0016B4  0102               	movlb	2	; () banked
 11169  0016B6  5184               	movf	UseBluetooth@device& (0+255),w,b
 11170  0016B8  0102               	movlb	2	; () banked
 11171  0016BA  B4D8               	btfsc	status,2,c
 11172  0016BC  D023               	goto	l15887
 11173                           
 11174                           ; BSR set to: 2
 11175                           ;Bluetooth.c: 741: {
 11176                           ;Bluetooth.c: 742: sprintf(buf,"NEC code 0x%lX now transmits RF config %d channel %c dev
      +                          ice %d",IR_NEC, rfconf, rfchannelSTR[0], device);
 11177  0016BE  0E0F               	movlw	low UseBluetooth@buf
 11178  0016C0  0100               	movlb	0	; () banked
 11179  0016C2  6FC7               	movwf	sprintf@sp& (0+255),b
 11180  0016C4  0E02               	movlw	high UseBluetooth@buf
 11181  0016C6  0100               	movlb	0	; () banked
 11182  0016C8  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11183  0016CA  0ED4               	movlw	low STR_73
 11184  0016CC  0100               	movlb	0	; () banked
 11185  0016CE  6FC9               	movwf	sprintf@f& (0+255),b
 11186  0016D0  0EF0               	movlw	high STR_73
 11187  0016D2  0100               	movlb	0	; () banked
 11188  0016D4  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11189  0016D6  C0E1  F0CB         	movff	_IR_NEC,?_sprintf+4
 11190  0016DA  C0E2  F0CC         	movff	_IR_NEC+1,?_sprintf+5
 11191  0016DE  C0E3  F0CD         	movff	_IR_NEC+2,?_sprintf+6
 11192  0016E2  C0E4  F0CE         	movff	_IR_NEC+3,?_sprintf+7
 11193  0016E6  C28B  F0CF         	movff	UseBluetooth@rfconf,?_sprintf+8
 11194  0016EA  0100               	movlb	0	; () banked
 11195  0016EC  6BD0               	clrf	(?_sprintf+9)& (0+255),b
 11196  0016EE  C273  F0D1         	movff	UseBluetooth@rfchannelSTR,?_sprintf+10
 11197  0016F2  0100               	movlb	0	; () banked
 11198  0016F4  6BD2               	clrf	(?_sprintf+11)& (0+255),b
 11199  0016F6  C284  F0D3         	movff	UseBluetooth@device,?_sprintf+12
 11200  0016FA  0100               	movlb	0	; () banked
 11201  0016FC  6BD4               	clrf	(?_sprintf+13)& (0+255),b
 11202  0016FE  ECC4  F010         	call	_sprintf	;wreg free
 11203                           
 11204                           ;Bluetooth.c: 743: }
 11205  001702  D01F               	goto	l15889
 11206  001704                     l15887:
 11207                           
 11208                           ;Bluetooth.c: 744: else
 11209                           ;Bluetooth.c: 745: {
 11210                           ;Bluetooth.c: 746: sprintf(buf,"NEC code 0x%lX now transmits RF config %d channel %c ",I
      +                          R_NEC, rfconf, rfchannelSTR[0]);
 11211  001704  0E0F               	movlw	low UseBluetooth@buf
 11212  001706  0100               	movlb	0	; () banked
 11213  001708  6FC7               	movwf	sprintf@sp& (0+255),b
 11214  00170A  0E02               	movlw	high UseBluetooth@buf
 11215  00170C  0100               	movlb	0	; () banked
 11216  00170E  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11217  001710  0E13               	movlw	low STR_74
 11218  001712  0100               	movlb	0	; () banked
 11219  001714  6FC9               	movwf	sprintf@f& (0+255),b
 11220  001716  0EF1               	movlw	high STR_74
 11221  001718  0100               	movlb	0	; () banked
 11222  00171A  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11223  00171C  C0E1  F0CB         	movff	_IR_NEC,?_sprintf+4
 11224  001720  C0E2  F0CC         	movff	_IR_NEC+1,?_sprintf+5
 11225  001724  C0E3  F0CD         	movff	_IR_NEC+2,?_sprintf+6
 11226  001728  C0E4  F0CE         	movff	_IR_NEC+3,?_sprintf+7
 11227  00172C  C28B  F0CF         	movff	UseBluetooth@rfconf,?_sprintf+8
 11228  001730  0100               	movlb	0	; () banked
 11229  001732  6BD0               	clrf	(?_sprintf+9)& (0+255),b
 11230  001734  C273  F0D1         	movff	UseBluetooth@rfchannelSTR,?_sprintf+10
 11231  001738  0100               	movlb	0	; () banked
 11232  00173A  6BD2               	clrf	(?_sprintf+11)& (0+255),b
 11233  00173C  ECC4  F010         	call	_sprintf	;wreg free
 11234  001740  D000               	goto	l15889
 11235  001742                     l15889:
 11236                           
 11237                           ;Bluetooth.c: 747: }
 11238                           ;Bluetooth.c: 748: UARTstringCRLN(buf);
 11239  001742  0E0F               	movlw	low UseBluetooth@buf
 11240  001744  0100               	movlb	0	; () banked
 11241  001746  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11242  001748  0E02               	movlw	high UseBluetooth@buf
 11243  00174A  0100               	movlb	0	; () banked
 11244  00174C  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11245  00174E  EC78  F045         	call	_UARTstringCRLN	;wreg free
 11246                           
 11247                           ;Bluetooth.c: 749: UARTstring(CRLN);
 11248  001752  0ED1               	movlw	low _CRLN
 11249  001754  0100               	movlb	0	; () banked
 11250  001756  6F7A               	movwf	UARTstring@data& (0+255),b
 11251  001758  0EF0               	movlw	high _CRLN
 11252  00175A  0100               	movlb	0	; () banked
 11253  00175C  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11254  00175E  ECD3  F046         	call	_UARTstring	;wreg free
 11255                           
 11256                           ;Bluetooth.c: 751: for(i =0;i<10;i++)
 11257  001762  0E00               	movlw	0
 11258  001764  0102               	movlb	2	; () banked
 11259  001766  6F92               	movwf	UseBluetooth@i& (0+255),b
 11260                           
 11261                           ; BSR set to: 2
 11262  001768  0E09               	movlw	9
 11263  00176A  0102               	movlb	2	; () banked
 11264  00176C  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11265  00176E  D002               	goto	l15899
 11266  001770  0012               	return	
 11267                           
 11268                           ; BSR set to: 2
 11269  001772  0012               	return	
 11270  001774                     l15899:
 11271                           
 11272                           ; BSR set to: 2
 11273                           ;Bluetooth.c: 752: {
 11274                           ;Bluetooth.c: 753: (LATC |= 0x04);
 11275  001774  848B               	bsf	3979,2,c	;volatile
 11276                           
 11277                           ; BSR set to: 2
 11278                           ;Bluetooth.c: 754: delayUS(50000);
 11279  001776  0E50               	movlw	80
 11280  001778  0100               	movlb	0	; () banked
 11281  00177A  6F79               	movwf	delayUS@US& (0+255),b
 11282  00177C  0EC3               	movlw	195
 11283  00177E  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 11284  001780  0E00               	movlw	0
 11285  001782  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 11286  001784  0E00               	movlw	0
 11287  001786  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 11288  001788  EC57  F047         	call	_delayUS	;wreg free
 11289                           
 11290                           ;Bluetooth.c: 755: (LATC &= ~0x04);
 11291  00178C  948B               	bcf	3979,2,c	;volatile
 11292                           
 11293                           ;Bluetooth.c: 756: delayUS(50000);
 11294  00178E  0E50               	movlw	80
 11295  001790  0100               	movlb	0	; () banked
 11296  001792  6F79               	movwf	delayUS@US& (0+255),b
 11297  001794  0EC3               	movlw	195
 11298  001796  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 11299  001798  0E00               	movlw	0
 11300  00179A  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 11301  00179C  0E00               	movlw	0
 11302  00179E  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 11303  0017A0  EC57  F047         	call	_delayUS	;wreg free
 11304  0017A4  0102               	movlb	2	; () banked
 11305  0017A6  2B92               	incf	UseBluetooth@i& (0+255),f,b
 11306                           
 11307                           ; BSR set to: 2
 11308  0017A8  0E09               	movlw	9
 11309  0017AA  0102               	movlb	2	; () banked
 11310  0017AC  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11311  0017AE  D7E2               	goto	l15899
 11312  0017B0  0012               	return	
 11313                           
 11314                           ; BSR set to: 2
 11315                           ;Bluetooth.c: 759: }
 11316                           
 11317                           ; BSR set to: 2
 11318                           ;Bluetooth.c: 757: }
 11319                           ;Bluetooth.c: 758: return 1;
 11320                           ;	Return value of _UseBluetooth is never used
 11321  0017B2  0012               	return	
 11322  0017B4                     l15911:
 11323                           
 11324                           ; BSR set to: 2
 11325                           ;Bluetooth.c: 760: else
 11326                           ;Bluetooth.c: 761: {
 11327                           ;Bluetooth.c: 763: for(i=0; i < 3; i++)
 11328  0017B4  0E00               	movlw	0
 11329  0017B6  0102               	movlb	2	; () banked
 11330  0017B8  6F92               	movwf	UseBluetooth@i& (0+255),b
 11331  0017BA                     l15913:
 11332                           
 11333                           ; BSR set to: 2
 11334  0017BA  0E02               	movlw	2
 11335  0017BC  0102               	movlb	2	; () banked
 11336  0017BE  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11337  0017C0  D001               	goto	l15917
 11338                           
 11339                           ; BSR set to: 2
 11340  0017C2  D04B               	goto	l15923
 11341  0017C4                     l15917:
 11342                           
 11343                           ; BSR set to: 2
 11344                           ;Bluetooth.c: 764: {
 11345                           ;Bluetooth.c: 766: Global.RemoteButtonRF[tempRFArray][i][0] = 0;
 11346  0017C4  0102               	movlb	2	; () banked
 11347  0017C6  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11348  0017C8  0D06               	mullw	6
 11349  0017CA  0E00               	movlw	low _Global
 11350  0017CC  0102               	movlb	2	; () banked
 11351  0017CE  6F03               	movwf	??_UseBluetooth& (0+255),b
 11352  0017D0  0E04               	movlw	high _Global
 11353  0017D2  0102               	movlb	2	; () banked
 11354  0017D4  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11355  0017D6  0E2E               	movlw	46
 11356  0017D8  0102               	movlb	2	; () banked
 11357  0017DA  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11358  0017DC  0E00               	movlw	0
 11359  0017DE  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11360  0017E0  50F3               	movf	prodl,w,c
 11361  0017E2  0102               	movlb	2	; () banked
 11362  0017E4  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11363  0017E6  50F4               	movf	prodh,w,c
 11364  0017E8  0102               	movlb	2	; () banked
 11365  0017EA  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11366  0017EC  0102               	movlb	2	; () banked
 11367  0017EE  5192               	movf	UseBluetooth@i& (0+255),w,b
 11368  0017F0  0D02               	mullw	2
 11369  0017F2  50F3               	movf	prodl,w,c
 11370  0017F4  0102               	movlb	2	; () banked
 11371  0017F6  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11372  0017F8  6ED9               	movwf	fsr2l,c
 11373  0017FA  50F4               	movf	prodh,w,c
 11374  0017FC  0102               	movlb	2	; () banked
 11375  0017FE  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11376  001800  6EDA               	movwf	fsr2h,c
 11377  001802  0E00               	movlw	0
 11378  001804  6EDF               	movwf	indf2,c
 11379                           
 11380                           ;Bluetooth.c: 767: Global.RemoteButtonRF[tempRFArray][i][1] = 0;
 11381  001806  0102               	movlb	2	; () banked
 11382  001808  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11383  00180A  0D06               	mullw	6
 11384  00180C  0E00               	movlw	low _Global
 11385  00180E  0102               	movlb	2	; () banked
 11386  001810  6F03               	movwf	??_UseBluetooth& (0+255),b
 11387  001812  0E04               	movlw	high _Global
 11388  001814  0102               	movlb	2	; () banked
 11389  001816  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11390  001818  0E2E               	movlw	46
 11391  00181A  0102               	movlb	2	; () banked
 11392  00181C  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11393  00181E  0E00               	movlw	0
 11394  001820  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11395  001822  50F3               	movf	prodl,w,c
 11396  001824  0102               	movlb	2	; () banked
 11397  001826  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11398  001828  50F4               	movf	prodh,w,c
 11399  00182A  0102               	movlb	2	; () banked
 11400  00182C  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11401  00182E  0102               	movlb	2	; () banked
 11402  001830  5192               	movf	UseBluetooth@i& (0+255),w,b
 11403  001832  0D02               	mullw	2
 11404  001834  50F3               	movf	prodl,w,c
 11405  001836  0102               	movlb	2	; () banked
 11406  001838  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11407  00183A  50F4               	movf	prodh,w,c
 11408  00183C  0102               	movlb	2	; () banked
 11409  00183E  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11410  001840  0E01               	movlw	1
 11411  001842  0102               	movlb	2	; () banked
 11412  001844  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11413  001846  6ED9               	movwf	fsr2l,c
 11414  001848  0E00               	movlw	0
 11415  00184A  0102               	movlb	2	; () banked
 11416  00184C  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11417  00184E  6EDA               	movwf	fsr2h,c
 11418  001850  0E00               	movlw	0
 11419  001852  6EDF               	movwf	indf2,c
 11420                           
 11421                           ; BSR set to: 2
 11422  001854  0102               	movlb	2	; () banked
 11423  001856  2B92               	incf	UseBluetooth@i& (0+255),f,b
 11424  001858  D7B0               	goto	l15913
 11425  00185A                     l15923:
 11426                           
 11427                           ; BSR set to: 2
 11428                           ;Bluetooth.c: 768: }
 11429                           ;Bluetooth.c: 769: SyncGlobalToEEPROM();
 11430  00185A  ECF8  F047         	call	_SyncGlobalToEEPROM	;wreg free
 11431                           
 11432                           ;Bluetooth.c: 770: if(device)
 11433  00185E  0102               	movlb	2	; () banked
 11434  001860  5184               	movf	UseBluetooth@device& (0+255),w,b
 11435  001862  0102               	movlb	2	; () banked
 11436  001864  B4D8               	btfsc	status,2,c
 11437  001866  D01B               	goto	l15929
 11438                           
 11439                           ; BSR set to: 2
 11440                           ;Bluetooth.c: 771: {
 11441                           ;Bluetooth.c: 772: sprintf(buf,"RF config %d channel %c device %d successfully erased",r
      +                          fconf, rfchannelSTR[0], device);
 11442  001868  0E0F               	movlw	low UseBluetooth@buf
 11443  00186A  0100               	movlb	0	; () banked
 11444  00186C  6FC7               	movwf	sprintf@sp& (0+255),b
 11445  00186E  0E02               	movlw	high UseBluetooth@buf
 11446  001870  0100               	movlb	0	; () banked
 11447  001872  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11448  001874  0E49               	movlw	low STR_75
 11449  001876  0100               	movlb	0	; () banked
 11450  001878  6FC9               	movwf	sprintf@f& (0+255),b
 11451  00187A  0EF1               	movlw	high STR_75
 11452  00187C  0100               	movlb	0	; () banked
 11453  00187E  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11454  001880  C28B  F0CB         	movff	UseBluetooth@rfconf,?_sprintf+4
 11455  001884  0100               	movlb	0	; () banked
 11456  001886  6BCC               	clrf	(?_sprintf+5)& (0+255),b
 11457  001888  C273  F0CD         	movff	UseBluetooth@rfchannelSTR,?_sprintf+6
 11458  00188C  0100               	movlb	0	; () banked
 11459  00188E  6BCE               	clrf	(?_sprintf+7)& (0+255),b
 11460  001890  C284  F0CF         	movff	UseBluetooth@device,?_sprintf+8
 11461  001894  0100               	movlb	0	; () banked
 11462  001896  6BD0               	clrf	(?_sprintf+9)& (0+255),b
 11463  001898  ECC4  F010         	call	_sprintf	;wreg free
 11464                           
 11465                           ;Bluetooth.c: 773: }
 11466  00189C  D017               	goto	l15931
 11467  00189E                     l15929:
 11468                           
 11469                           ;Bluetooth.c: 774: else
 11470                           ;Bluetooth.c: 775: {
 11471                           ;Bluetooth.c: 776: sprintf(buf,"RF config %d channel %c successfully erased",rfconf, rfc
      +                          hannelSTR[0]);
 11472  00189E  0E0F               	movlw	low UseBluetooth@buf
 11473  0018A0  0100               	movlb	0	; () banked
 11474  0018A2  6FC7               	movwf	sprintf@sp& (0+255),b
 11475  0018A4  0E02               	movlw	high UseBluetooth@buf
 11476  0018A6  0100               	movlb	0	; () banked
 11477  0018A8  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11478  0018AA  0ED4               	movlw	low STR_76
 11479  0018AC  0100               	movlb	0	; () banked
 11480  0018AE  6FC9               	movwf	sprintf@f& (0+255),b
 11481  0018B0  0EF4               	movlw	high STR_76
 11482  0018B2  0100               	movlb	0	; () banked
 11483  0018B4  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11484  0018B6  C28B  F0CB         	movff	UseBluetooth@rfconf,?_sprintf+4
 11485  0018BA  0100               	movlb	0	; () banked
 11486  0018BC  6BCC               	clrf	(?_sprintf+5)& (0+255),b
 11487  0018BE  C273  F0CD         	movff	UseBluetooth@rfchannelSTR,?_sprintf+6
 11488  0018C2  0100               	movlb	0	; () banked
 11489  0018C4  6BCE               	clrf	(?_sprintf+7)& (0+255),b
 11490  0018C6  ECC4  F010         	call	_sprintf	;wreg free
 11491  0018CA  D000               	goto	l15931
 11492  0018CC                     l15931:
 11493                           
 11494                           ;Bluetooth.c: 777: }
 11495                           ;Bluetooth.c: 778: UARTstringCRLN(buf);
 11496  0018CC  0E0F               	movlw	low UseBluetooth@buf
 11497  0018CE  0100               	movlb	0	; () banked
 11498  0018D0  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11499  0018D2  0E02               	movlw	high UseBluetooth@buf
 11500  0018D4  0100               	movlb	0	; () banked
 11501  0018D6  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11502  0018D8  EC78  F045         	call	_UARTstringCRLN	;wreg free
 11503                           
 11504                           ;Bluetooth.c: 779: UARTstring(CRLN);
 11505  0018DC  0ED1               	movlw	low _CRLN
 11506  0018DE  0100               	movlb	0	; () banked
 11507  0018E0  6F7A               	movwf	UARTstring@data& (0+255),b
 11508  0018E2  0EF0               	movlw	high _CRLN
 11509  0018E4  0100               	movlb	0	; () banked
 11510  0018E6  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11511  0018E8  ECD3  F046         	call	_UARTstring	;wreg free
 11512                           
 11513                           ;Bluetooth.c: 781: for(i =0;i<10;i++)
 11514  0018EC  0E00               	movlw	0
 11515  0018EE  0102               	movlb	2	; () banked
 11516  0018F0  6F92               	movwf	UseBluetooth@i& (0+255),b
 11517                           
 11518                           ; BSR set to: 2
 11519  0018F2  0E09               	movlw	9
 11520  0018F4  0102               	movlb	2	; () banked
 11521  0018F6  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11522  0018F8  D002               	goto	l15941
 11523  0018FA  0012               	return	
 11524                           
 11525                           ; BSR set to: 2
 11526  0018FC  0012               	return	
 11527  0018FE                     l15941:
 11528                           
 11529                           ; BSR set to: 2
 11530                           ;Bluetooth.c: 782: {
 11531                           ;Bluetooth.c: 783: (LATC |= 0x04);
 11532  0018FE  848B               	bsf	3979,2,c	;volatile
 11533                           
 11534                           ; BSR set to: 2
 11535                           ;Bluetooth.c: 784: delayUS(50000);
 11536  001900  0E50               	movlw	80
 11537  001902  0100               	movlb	0	; () banked
 11538  001904  6F79               	movwf	delayUS@US& (0+255),b
 11539  001906  0EC3               	movlw	195
 11540  001908  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 11541  00190A  0E00               	movlw	0
 11542  00190C  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 11543  00190E  0E00               	movlw	0
 11544  001910  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 11545  001912  EC57  F047         	call	_delayUS	;wreg free
 11546                           
 11547                           ;Bluetooth.c: 785: (LATC &= ~0x04);
 11548  001916  948B               	bcf	3979,2,c	;volatile
 11549                           
 11550                           ;Bluetooth.c: 786: delayUS(50000);
 11551  001918  0E50               	movlw	80
 11552  00191A  0100               	movlb	0	; () banked
 11553  00191C  6F79               	movwf	delayUS@US& (0+255),b
 11554  00191E  0EC3               	movlw	195
 11555  001920  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 11556  001922  0E00               	movlw	0
 11557  001924  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 11558  001926  0E00               	movlw	0
 11559  001928  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 11560  00192A  EC57  F047         	call	_delayUS	;wreg free
 11561  00192E  0102               	movlb	2	; () banked
 11562  001930  2B92               	incf	UseBluetooth@i& (0+255),f,b
 11563                           
 11564                           ; BSR set to: 2
 11565  001932  0E09               	movlw	9
 11566  001934  0102               	movlb	2	; () banked
 11567  001936  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11568  001938  D7E2               	goto	l15941
 11569  00193A  0012               	return	
 11570                           
 11571                           ; BSR set to: 2
 11572                           ;Bluetooth.c: 789: }
 11573                           ;Bluetooth.c: 790: }
 11574                           
 11575                           ; BSR set to: 2
 11576                           ;Bluetooth.c: 787: }
 11577                           ;Bluetooth.c: 788: return 1;
 11578                           ;	Return value of _UseBluetooth is never used
 11579  00193C  0012               	return	
 11580  00193E                     l15951:
 11581                           
 11582                           ; BSR set to: 2
 11583                           ;Bluetooth.c: 791: else
 11584                           ;Bluetooth.c: 792: {
 11585                           ;Bluetooth.c: 793: UARTstringCRLN((unsigned char *)"Error: RF channel needs to be one ch
      +                          aracter");
 11586  00193E  0E00               	movlw	low STR_77
 11587  001940  0100               	movlb	0	; () banked
 11588  001942  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11589  001944  0EF5               	movlw	high STR_77
 11590  001946  0100               	movlb	0	; () banked
 11591  001948  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11592  00194A  EC78  F045         	call	_UARTstringCRLN	;wreg free
 11593                           
 11594                           ;Bluetooth.c: 794: UARTstring(CRLN);
 11595  00194E  0ED1               	movlw	low _CRLN
 11596  001950  0100               	movlb	0	; () banked
 11597  001952  6F7A               	movwf	UARTstring@data& (0+255),b
 11598  001954  0EF0               	movlw	high _CRLN
 11599  001956  0100               	movlb	0	; () banked
 11600  001958  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11601  00195A  ECD3  F046         	call	_UARTstring	;wreg free
 11602                           
 11603                           ;Bluetooth.c: 796: }
 11604                           ;Bluetooth.c: 797: }
 11605                           ;Bluetooth.c: 798: }
 11606                           
 11607                           ;Bluetooth.c: 795: return 0;
 11608                           ;	Return value of _UseBluetooth is never used
 11609  00195E  0012               	return	
 11610  001960                     l15955:
 11611                           
 11612                           ;Bluetooth.c: 799: else if(StringMatchCaseInsensitive(String,(unsigned char *)"Reset"))
 11613  001960  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 11614  001964  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 11615  001968  0ED2               	movlw	low STR_78
 11616  00196A  0100               	movlb	0	; () banked
 11617  00196C  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 11618  00196E  0EFC               	movlw	high STR_78
 11619  001970  0100               	movlb	0	; () banked
 11620  001972  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 11621  001974  EC24  F043         	call	_StringMatchCaseInsensitive	;wreg free
 11622  001978  0900               	iorlw	0
 11623  00197A  B4D8               	btfsc	status,2,c
 11624  00197C  D097               	goto	l16017
 11625                           
 11626                           ;Bluetooth.c: 800: {
 11627                           ;Bluetooth.c: 801: cleanBuffer(ReceivedString, ReceivedStringPos);
 11628  00197E  0E00               	movlw	low _ReceivedString
 11629  001980  0100               	movlb	0	; () banked
 11630  001982  6F79               	movwf	cleanBuffer@data& (0+255),b
 11631  001984  0E06               	movlw	high _ReceivedString
 11632  001986  0100               	movlb	0	; () banked
 11633  001988  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 11634  00198A  C0E0  F07B         	movff	_ReceivedStringPos,cleanBuffer@count
 11635  00198E  0100               	movlb	0	; () banked
 11636  001990  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 11637  001992  ECA6  F046         	call	_cleanBuffer	;wreg free
 11638                           
 11639                           ;Bluetooth.c: 802: ReceivedStringPos = 0;
 11640  001996  0E00               	movlw	0
 11641  001998  0100               	movlb	0	; () banked
 11642  00199A  6FE0               	movwf	_ReceivedStringPos& (0+255),b
 11643                           
 11644                           ; BSR set to: 0
 11645                           ;Bluetooth.c: 803: NewReceivedString = 0;
 11646  00199C  0E00               	movlw	0
 11647  00199E  0100               	movlb	0	; () banked
 11648  0019A0  6FDF               	movwf	_NewReceivedString& (0+255),b	;volatile
 11649                           
 11650                           ; BSR set to: 0
 11651                           ;Bluetooth.c: 804: UARTstring((unsigned char *)"Enter Y to reset or N to cancel");
 11652  0019A2  0ED5               	movlw	low STR_79
 11653  0019A4  0100               	movlb	0	; () banked
 11654  0019A6  6F7A               	movwf	UARTstring@data& (0+255),b
 11655  0019A8  0EF6               	movlw	high STR_79
 11656  0019AA  0100               	movlb	0	; () banked
 11657  0019AC  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11658  0019AE  ECD3  F046         	call	_UARTstring	;wreg free
 11659                           
 11660                           ;Bluetooth.c: 805: UARTstring(CRLN);
 11661  0019B2  0ED1               	movlw	low _CRLN
 11662  0019B4  0100               	movlb	0	; () banked
 11663  0019B6  6F7A               	movwf	UARTstring@data& (0+255),b
 11664  0019B8  0EF0               	movlw	high _CRLN
 11665  0019BA  0100               	movlb	0	; () banked
 11666  0019BC  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11667  0019BE  ECD3  F046         	call	_UARTstring	;wreg free
 11668                           
 11669                           ;Bluetooth.c: 806: UARTchar('>');
 11670  0019C2  0E3E               	movlw	62
 11671  0019C4  ECBF  F049         	call	_UARTchar
 11672                           
 11673                           ;Bluetooth.c: 807: timeout = 0;
 11674  0019C8  0E00               	movlw	0
 11675  0019CA  0102               	movlb	2	; () banked
 11676  0019CC  6F82               	movwf	UseBluetooth@timeout& (0+255),b
 11677                           
 11678                           ; BSR set to: 2
 11679                           ;Bluetooth.c: 808: ClearUSART();
 11680  0019CE  EC5D  F04A         	call	_ClearUSART	;wreg free
 11681                           
 11682                           ;Bluetooth.c: 809: PIR1bits.RCIF = 0;
 11683  0019D2  9A9E               	bcf	3998,5,c	;volatile
 11684                           
 11685                           ;Bluetooth.c: 810: PIE1bits.RCIE = 1;
 11686  0019D4  8A9D               	bsf	3997,5,c	;volatile
 11687                           
 11688                           ;Bluetooth.c: 811: while(!NewReceivedString)
 11689  0019D6  D023               	goto	l15987
 11690  0019D8                     l15977:
 11691                           
 11692                           ;Bluetooth.c: 812: {
 11693                           ;Bluetooth.c: 813: delayUS(300000);
 11694  0019D8  0EE0               	movlw	224
 11695  0019DA  0100               	movlb	0	; () banked
 11696  0019DC  6F79               	movwf	delayUS@US& (0+255),b
 11697  0019DE  0E93               	movlw	147
 11698  0019E0  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 11699  0019E2  0E04               	movlw	4
 11700  0019E4  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 11701  0019E6  0E00               	movlw	0
 11702  0019E8  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 11703  0019EA  EC57  F047         	call	_delayUS	;wreg free
 11704                           
 11705                           ;Bluetooth.c: 814: timeout++;
 11706  0019EE  0102               	movlb	2	; () banked
 11707  0019F0  2B82               	incf	UseBluetooth@timeout& (0+255),f,b
 11708                           
 11709                           ; BSR set to: 2
 11710                           ;Bluetooth.c: 815: if(timeout > 25)
 11711  0019F2  0E19               	movlw	25
 11712  0019F4  0102               	movlb	2	; () banked
 11713  0019F6  6582               	cpfsgt	UseBluetooth@timeout& (0+255),b
 11714  0019F8  D012               	goto	l15987
 11715                           
 11716                           ; BSR set to: 2
 11717                           ;Bluetooth.c: 816: {
 11718                           ;Bluetooth.c: 817: UARTstring(CRLN);
 11719  0019FA  0ED1               	movlw	low _CRLN
 11720  0019FC  0100               	movlb	0	; () banked
 11721  0019FE  6F7A               	movwf	UARTstring@data& (0+255),b
 11722  001A00  0EF0               	movlw	high _CRLN
 11723  001A02  0100               	movlb	0	; () banked
 11724  001A04  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11725  001A06  ECD3  F046         	call	_UARTstring	;wreg free
 11726                           
 11727                           ;Bluetooth.c: 818: UARTstringCRLN((unsigned char *)"Device resumes without reset");
 11728  001A0A  0E0D               	movlw	low STR_80
 11729  001A0C  0100               	movlb	0	; () banked
 11730  001A0E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11731  001A10  0EF8               	movlw	high STR_80
 11732  001A12  0100               	movlb	0	; () banked
 11733  001A14  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11734  001A16  EC78  F045         	call	_UARTstringCRLN	;wreg free
 11735                           
 11736                           ;Bluetooth.c: 819: return 0;
 11737                           ;	Return value of _UseBluetooth is never used
 11738  001A1A  0012               	return	
 11739  001A1C  D000               	goto	l15987
 11740  001A1E                     l15987:
 11741  001A1E  0100               	movlb	0	; () banked
 11742  001A20  51DF               	movf	_NewReceivedString& (0+255),w,b	;volatile
 11743  001A22  B4D8               	btfsc	status,2,c
 11744  001A24  D7D9               	goto	l15977
 11745                           
 11746                           ; BSR set to: 0
 11747                           ;Bluetooth.c: 820: }
 11748                           ;Bluetooth.c: 821: }
 11749                           ;Bluetooth.c: 822: PIE1bits.RCIE = 0;
 11750  001A26  9A9D               	bcf	3997,5,c	;volatile
 11751                           
 11752                           ; BSR set to: 0
 11753                           ;Bluetooth.c: 823: if(ReceivedString[0] == 'Y' || ReceivedString[0] == 'y' && ReceivedSt
      +                          ring[1] == 0)
 11754  001A28  0E59               	movlw	89
 11755  001A2A  0106               	movlb	6	; () banked
 11756  001A2C  1900               	xorwf	_ReceivedString& (0+255),w,b
 11757  001A2E  B4D8               	btfsc	status,2,c
 11758  001A30  D009               	goto	l15995
 11759                           
 11760                           ; BSR set to: 6
 11761  001A32  0E79               	movlw	121
 11762  001A34  0106               	movlb	6	; () banked
 11763  001A36  1900               	xorwf	_ReceivedString& (0+255),w,b
 11764  001A38  A4D8               	btfss	status,2,c
 11765  001A3A  D014               	goto	l16005
 11766                           
 11767                           ; BSR set to: 6
 11768  001A3C  0106               	movlb	6	; () banked
 11769  001A3E  5101               	movf	(_ReceivedString+1)& (0+255),w,b
 11770  001A40  A4D8               	btfss	status,2,c
 11771  001A42  D010               	goto	l16005
 11772  001A44                     l15995:
 11773                           
 11774                           ; BSR set to: 6
 11775                           ;Bluetooth.c: 824: {
 11776                           ;Bluetooth.c: 826: UARTstringCRLN((unsigned char *)"System will reset");
 11777  001A44  0E12               	movlw	low STR_81
 11778  001A46  0100               	movlb	0	; () banked
 11779  001A48  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11780  001A4A  0EFB               	movlw	high STR_81
 11781  001A4C  0100               	movlb	0	; () banked
 11782  001A4E  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11783  001A50  EC78  F045         	call	_UARTstringCRLN	;wreg free
 11784                           
 11785                           ;Bluetooth.c: 827: Global.EEPROMinitFlag = 0;
 11786  001A54  0E00               	movlw	0
 11787  001A56  0104               	movlb	4	; () banked
 11788  001A58  6F2D               	movwf	(_Global+45)& (0+255),b
 11789                           
 11790                           ; BSR set to: 4
 11791                           ;Bluetooth.c: 828: SyncGlobalToEEPROM();
 11792  001A5A  ECF8  F047         	call	_SyncGlobalToEEPROM	;wreg free
 11793  001A5E  00FF               	reset		;# 
 11794                           
 11795                           ;Bluetooth.c: 830: return 1;
 11796                           ;	Return value of _UseBluetooth is never used
 11797  001A60  0012               	return	
 11798                           
 11799                           ;Bluetooth.c: 831: }
 11800  001A62  D011               	goto	l16007
 11801  001A64                     l16005:
 11802                           
 11803                           ;Bluetooth.c: 832: else
 11804                           ;Bluetooth.c: 833: {
 11805                           ;Bluetooth.c: 834: UARTstring(CRLN);
 11806  001A64  0ED1               	movlw	low _CRLN
 11807  001A66  0100               	movlb	0	; () banked
 11808  001A68  6F7A               	movwf	UARTstring@data& (0+255),b
 11809  001A6A  0EF0               	movlw	high _CRLN
 11810  001A6C  0100               	movlb	0	; () banked
 11811  001A6E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11812  001A70  ECD3  F046         	call	_UARTstring	;wreg free
 11813                           
 11814                           ;Bluetooth.c: 835: UARTstringCRLN((unsigned char *)"Device resumes without reset");
 11815  001A74  0E0D               	movlw	low STR_80
 11816  001A76  0100               	movlb	0	; () banked
 11817  001A78  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11818  001A7A  0EF8               	movlw	high STR_80
 11819  001A7C  0100               	movlb	0	; () banked
 11820  001A7E  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11821  001A80  EC78  F045         	call	_UARTstringCRLN	;wreg free
 11822  001A84  D000               	goto	l16007
 11823  001A86                     l16007:
 11824                           
 11825                           ;Bluetooth.c: 836: }
 11826                           ;Bluetooth.c: 837: cleanBuffer(ReceivedString, ReceivedStringPos);
 11827  001A86  0E00               	movlw	low _ReceivedString
 11828  001A88  0100               	movlb	0	; () banked
 11829  001A8A  6F79               	movwf	cleanBuffer@data& (0+255),b
 11830  001A8C  0E06               	movlw	high _ReceivedString
 11831  001A8E  0100               	movlb	0	; () banked
 11832  001A90  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 11833  001A92  C0E0  F07B         	movff	_ReceivedStringPos,cleanBuffer@count
 11834  001A96  0100               	movlb	0	; () banked
 11835  001A98  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 11836  001A9A  ECA6  F046         	call	_cleanBuffer	;wreg free
 11837                           
 11838                           ;Bluetooth.c: 838: ReceivedStringPos = 0;
 11839  001A9E  0E00               	movlw	0
 11840  001AA0  0100               	movlb	0	; () banked
 11841  001AA2  6FE0               	movwf	_ReceivedStringPos& (0+255),b
 11842                           
 11843                           ; BSR set to: 0
 11844                           ;Bluetooth.c: 839: NewReceivedString = 0;
 11845  001AA4  0E00               	movlw	0
 11846  001AA6  0100               	movlb	0	; () banked
 11847  001AA8  6FDF               	movwf	_NewReceivedString& (0+255),b	;volatile
 11848                           
 11849                           ; BSR set to: 0
 11850                           ;Bluetooth.c: 841: }
 11851                           
 11852                           ; BSR set to: 0
 11853                           ;Bluetooth.c: 840: return 0;
 11854                           ;	Return value of _UseBluetooth is never used
 11855  001AAA  0012               	return	
 11856  001AAC                     l16017:
 11857                           
 11858                           ;Bluetooth.c: 842: else if(StringMatchCaseInsensitive(String,(unsigned char *)"Voltage")
      +                          )
 11859  001AAC  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 11860  001AB0  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 11861  001AB4  0EA3               	movlw	low STR_83
 11862  001AB6  0100               	movlb	0	; () banked
 11863  001AB8  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 11864  001ABA  0EFC               	movlw	high STR_83
 11865  001ABC  0100               	movlb	0	; () banked
 11866  001ABE  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 11867  001AC0  EC24  F043         	call	_StringMatchCaseInsensitive	;wreg free
 11868  001AC4  0900               	iorlw	0
 11869  001AC6  B4D8               	btfsc	status,2,c
 11870  001AC8  D02F               	goto	l16027
 11871                           
 11872                           ;Bluetooth.c: 843: {
 11873                           ;Bluetooth.c: 844: UARTstring(CRLN);
 11874  001ACA  0ED1               	movlw	low _CRLN
 11875  001ACC  0100               	movlb	0	; () banked
 11876  001ACE  6F7A               	movwf	UARTstring@data& (0+255),b
 11877  001AD0  0EF0               	movlw	high _CRLN
 11878  001AD2  0100               	movlb	0	; () banked
 11879  001AD4  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11880  001AD6  ECD3  F046         	call	_UARTstring	;wreg free
 11881                           
 11882                           ;Bluetooth.c: 845: sprintf(buf,"Supply Voltage = %f", (double) ReadVoltage());
 11883  001ADA  0E0F               	movlw	low UseBluetooth@buf
 11884  001ADC  0100               	movlb	0	; () banked
 11885  001ADE  6FC7               	movwf	sprintf@sp& (0+255),b
 11886  001AE0  0E02               	movlw	high UseBluetooth@buf
 11887  001AE2  0100               	movlb	0	; () banked
 11888  001AE4  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11889  001AE6  0E67               	movlw	low STR_84
 11890  001AE8  0100               	movlb	0	; () banked
 11891  001AEA  6FC9               	movwf	sprintf@f& (0+255),b
 11892  001AEC  0EFA               	movlw	high STR_84
 11893  001AEE  0100               	movlb	0	; () banked
 11894  001AF0  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11895  001AF2  EC20  F040         	call	_ReadVoltage	;wreg free
 11896  001AF6  C0A2  F0CB         	movff	?_ReadVoltage,?_sprintf+4
 11897  001AFA  C0A3  F0CC         	movff	?_ReadVoltage+1,?_sprintf+5
 11898  001AFE  C0A4  F0CD         	movff	?_ReadVoltage+2,?_sprintf+6
 11899  001B02  ECC4  F010         	call	_sprintf	;wreg free
 11900                           
 11901                           ;Bluetooth.c: 846: UARTstringCRLN(buf);
 11902  001B06  0E0F               	movlw	low UseBluetooth@buf
 11903  001B08  0100               	movlb	0	; () banked
 11904  001B0A  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11905  001B0C  0E02               	movlw	high UseBluetooth@buf
 11906  001B0E  0100               	movlb	0	; () banked
 11907  001B10  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11908  001B12  EC78  F045         	call	_UARTstringCRLN	;wreg free
 11909                           
 11910                           ;Bluetooth.c: 847: UARTstring(CRLN);
 11911  001B16  0ED1               	movlw	low _CRLN
 11912  001B18  0100               	movlb	0	; () banked
 11913  001B1A  6F7A               	movwf	UARTstring@data& (0+255),b
 11914  001B1C  0EF0               	movlw	high _CRLN
 11915  001B1E  0100               	movlb	0	; () banked
 11916  001B20  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11917  001B22  ECD3  F046         	call	_UARTstring	;wreg free
 11918                           
 11919                           ;Bluetooth.c: 848: }
 11920  001B26  0012               	return	
 11921  001B28                     l16027:
 11922                           
 11923                           ;Bluetooth.c: 849: else if(StringMatchCaseInsensitive(String,(unsigned char *)"Version")
      +                          )
 11924  001B28  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 11925  001B2C  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 11926  001B30  0E02               	movlw	low (STR_97+18)
 11927  001B32  0100               	movlb	0	; () banked
 11928  001B34  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 11929  001B36  0EF9               	movlw	high (STR_97+18)
 11930  001B38  0100               	movlb	0	; () banked
 11931  001B3A  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 11932  001B3C  EC24  F043         	call	_StringMatchCaseInsensitive	;wreg free
 11933  001B40  0900               	iorlw	0
 11934  001B42  B4D8               	btfsc	status,2,c
 11935  001B44  D067               	goto	l16045
 11936                           
 11937                           ;Bluetooth.c: 850: {
 11938                           ;Bluetooth.c: 851: UARTstring(CRLN);
 11939  001B46  0ED1               	movlw	low _CRLN
 11940  001B48  0100               	movlb	0	; () banked
 11941  001B4A  6F7A               	movwf	UARTstring@data& (0+255),b
 11942  001B4C  0EF0               	movlw	high _CRLN
 11943  001B4E  0100               	movlb	0	; () banked
 11944  001B50  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11945  001B52  ECD3  F046         	call	_UARTstring	;wreg free
 11946                           
 11947                           ;Bluetooth.c: 852: sprintf(buf,"Firmware Version: %s", FirmVersion);
 11948  001B56  0E0F               	movlw	low UseBluetooth@buf
 11949  001B58  0100               	movlb	0	; () banked
 11950  001B5A  6FC7               	movwf	sprintf@sp& (0+255),b
 11951  001B5C  0E02               	movlw	high UseBluetooth@buf
 11952  001B5E  0100               	movlb	0	; () banked
 11953  001B60  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11954  001B62  0E16               	movlw	low STR_86
 11955  001B64  0100               	movlb	0	; () banked
 11956  001B66  6FC9               	movwf	sprintf@f& (0+255),b
 11957  001B68  0EFA               	movlw	high STR_86
 11958  001B6A  0100               	movlb	0	; () banked
 11959  001B6C  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11960  001B6E  0EBB               	movlw	low _FirmVersion
 11961  001B70  0100               	movlb	0	; () banked
 11962  001B72  6FCB               	movwf	(?_sprintf+4)& (0+255),b
 11963  001B74  0EF0               	movlw	high _FirmVersion
 11964  001B76  0100               	movlb	0	; () banked
 11965  001B78  6FCC               	movwf	(?_sprintf+5)& (0+255),b
 11966  001B7A  ECC4  F010         	call	_sprintf	;wreg free
 11967                           
 11968                           ;Bluetooth.c: 853: UARTstringCRLN(buf);
 11969  001B7E  0E0F               	movlw	low UseBluetooth@buf
 11970  001B80  0100               	movlb	0	; () banked
 11971  001B82  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11972  001B84  0E02               	movlw	high UseBluetooth@buf
 11973  001B86  0100               	movlb	0	; () banked
 11974  001B88  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11975  001B8A  EC78  F045         	call	_UARTstringCRLN	;wreg free
 11976                           
 11977                           ;Bluetooth.c: 854: UARTstring(CRLN);
 11978  001B8E  0ED1               	movlw	low _CRLN
 11979  001B90  0100               	movlb	0	; () banked
 11980  001B92  6F7A               	movwf	UARTstring@data& (0+255),b
 11981  001B94  0EF0               	movlw	high _CRLN
 11982  001B96  0100               	movlb	0	; () banked
 11983  001B98  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11984  001B9A  ECD3  F046         	call	_UARTstring	;wreg free
 11985                           
 11986                           ;Bluetooth.c: 855: sprintf(buf,"PCB Version: %s", PCBVersion);
 11987  001B9E  0E0F               	movlw	low UseBluetooth@buf
 11988  001BA0  0100               	movlb	0	; () banked
 11989  001BA2  6FC7               	movwf	sprintf@sp& (0+255),b
 11990  001BA4  0E02               	movlw	high UseBluetooth@buf
 11991  001BA6  0100               	movlb	0	; () banked
 11992  001BA8  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11993  001BAA  0E67               	movlw	low STR_87
 11994  001BAC  0100               	movlb	0	; () banked
 11995  001BAE  6FC9               	movwf	sprintf@f& (0+255),b
 11996  001BB0  0EFB               	movlw	high STR_87
 11997  001BB2  0100               	movlb	0	; () banked
 11998  001BB4  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11999  001BB6  0EC4               	movlw	low _PCBVersion
 12000  001BB8  0100               	movlb	0	; () banked
 12001  001BBA  6FCB               	movwf	(?_sprintf+4)& (0+255),b
 12002  001BBC  0EF0               	movlw	high _PCBVersion
 12003  001BBE  0100               	movlb	0	; () banked
 12004  001BC0  6FCC               	movwf	(?_sprintf+5)& (0+255),b
 12005  001BC2  ECC4  F010         	call	_sprintf	;wreg free
 12006                           
 12007                           ;Bluetooth.c: 856: UARTstringCRLN(buf);
 12008  001BC6  0E0F               	movlw	low UseBluetooth@buf
 12009  001BC8  0100               	movlb	0	; () banked
 12010  001BCA  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12011  001BCC  0E02               	movlw	high UseBluetooth@buf
 12012  001BCE  0100               	movlb	0	; () banked
 12013  001BD0  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12014  001BD2  EC78  F045         	call	_UARTstringCRLN	;wreg free
 12015                           
 12016                           ;Bluetooth.c: 858: sprintf(buf,"PCB has Bluetooth capability");
 12017  001BD6  0E0F               	movlw	low UseBluetooth@buf
 12018  001BD8  0100               	movlb	0	; () banked
 12019  001BDA  6FC7               	movwf	sprintf@sp& (0+255),b
 12020  001BDC  0E02               	movlw	high UseBluetooth@buf
 12021  001BDE  0100               	movlb	0	; () banked
 12022  001BE0  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 12023  001BE2  0E64               	movlw	low STR_88
 12024  001BE4  0100               	movlb	0	; () banked
 12025  001BE6  6FC9               	movwf	sprintf@f& (0+255),b
 12026  001BE8  0EF8               	movlw	high STR_88
 12027  001BEA  0100               	movlb	0	; () banked
 12028  001BEC  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 12029  001BEE  ECC4  F010         	call	_sprintf	;wreg free
 12030                           
 12031                           ;Bluetooth.c: 862: UARTstringCRLN(buf);
 12032  001BF2  0E0F               	movlw	low UseBluetooth@buf
 12033  001BF4  0100               	movlb	0	; () banked
 12034  001BF6  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12035  001BF8  0E02               	movlw	high UseBluetooth@buf
 12036  001BFA  0100               	movlb	0	; () banked
 12037  001BFC  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12038  001BFE  EC78  F045         	call	_UARTstringCRLN	;wreg free
 12039                           
 12040                           ;Bluetooth.c: 863: UARTstring(CRLN);
 12041  001C02  0ED1               	movlw	low _CRLN
 12042  001C04  0100               	movlb	0	; () banked
 12043  001C06  6F7A               	movwf	UARTstring@data& (0+255),b
 12044  001C08  0EF0               	movlw	high _CRLN
 12045  001C0A  0100               	movlb	0	; () banked
 12046  001C0C  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12047  001C0E  ECD3  F046         	call	_UARTstring	;wreg free
 12048                           
 12049                           ;Bluetooth.c: 864: }
 12050  001C12  0012               	return	
 12051  001C14                     l16045:
 12052                           
 12053                           ;Bluetooth.c: 865: else if(StringMatch(String,(unsigned char *)"???"))
 12054  001C14  C200  F079         	movff	UseBluetooth@String,StringMatch@This
 12055  001C18  C201  F07A         	movff	UseBluetooth@String+1,StringMatch@This+1
 12056  001C1C  0EEB               	movlw	low STR_89
 12057  001C1E  0100               	movlb	0	; () banked
 12058  001C20  6F7B               	movwf	StringMatch@That& (0+255),b
 12059  001C22  0EFC               	movlw	high STR_89
 12060  001C24  0100               	movlb	0	; () banked
 12061  001C26  6F7C               	movwf	(StringMatch@That+1)& (0+255),b
 12062  001C28  EC3C  F045         	call	_StringMatch	;wreg free
 12063  001C2C  0900               	iorlw	0
 12064  001C2E  B4D8               	btfsc	status,2,c
 12065  001C30  D291               	goto	l16111
 12066                           
 12067                           ;Bluetooth.c: 866: {
 12068                           ;Bluetooth.c: 867: UARTstring(CRLN);
 12069  001C32  0ED1               	movlw	low _CRLN
 12070  001C34  0100               	movlb	0	; () banked
 12071  001C36  6F7A               	movwf	UARTstring@data& (0+255),b
 12072  001C38  0EF0               	movlw	high _CRLN
 12073  001C3A  0100               	movlb	0	; () banked
 12074  001C3C  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12075  001C3E  ECD3  F046         	call	_UARTstring	;wreg free
 12076                           
 12077                           ;Bluetooth.c: 868: for(i=0; i< 34; i++ )
 12078  001C42  0E00               	movlw	0
 12079  001C44  0102               	movlb	2	; () banked
 12080  001C46  6F92               	movwf	UseBluetooth@i& (0+255),b
 12081  001C48                     l16051:
 12082                           
 12083                           ; BSR set to: 2
 12084  001C48  0E21               	movlw	33
 12085  001C4A  0102               	movlb	2	; () banked
 12086  001C4C  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 12087  001C4E  D001               	goto	l16055
 12088                           
 12089                           ; BSR set to: 2
 12090  001C50  D006               	goto	l16061
 12091  001C52                     l16055:
 12092                           
 12093                           ; BSR set to: 2
 12094                           ;Bluetooth.c: 869: {
 12095                           ;Bluetooth.c: 870: UARTchar('~');
 12096  001C52  0E7E               	movlw	126
 12097  001C54  ECBF  F049         	call	_UARTchar
 12098  001C58  0102               	movlb	2	; () banked
 12099  001C5A  2B92               	incf	UseBluetooth@i& (0+255),f,b
 12100  001C5C  D7F5               	goto	l16051
 12101  001C5E                     l16061:
 12102                           
 12103                           ; BSR set to: 2
 12104                           ;Bluetooth.c: 871: }
 12105                           ;Bluetooth.c: 872: UARTstring((unsigned char *)"Command Menu");
 12106  001C5E  0EE3               	movlw	low (STR_146+14)
 12107  001C60  0100               	movlb	0	; () banked
 12108  001C62  6F7A               	movwf	UARTstring@data& (0+255),b
 12109  001C64  0EF8               	movlw	high (STR_146+14)
 12110  001C66  0100               	movlb	0	; () banked
 12111  001C68  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12112  001C6A  ECD3  F046         	call	_UARTstring	;wreg free
 12113                           
 12114                           ;Bluetooth.c: 873: for(i=0; i< 34; i++ )
 12115  001C6E  0E00               	movlw	0
 12116  001C70  0102               	movlb	2	; () banked
 12117  001C72  6F92               	movwf	UseBluetooth@i& (0+255),b
 12118  001C74                     l16065:
 12119                           
 12120                           ; BSR set to: 2
 12121  001C74  0E21               	movlw	33
 12122  001C76  0102               	movlb	2	; () banked
 12123  001C78  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 12124  001C7A  D001               	goto	l16069
 12125                           
 12126                           ; BSR set to: 2
 12127  001C7C  D006               	goto	l16075
 12128  001C7E                     l16069:
 12129                           
 12130                           ; BSR set to: 2
 12131                           ;Bluetooth.c: 874: {
 12132                           ;Bluetooth.c: 875: UARTchar('~');
 12133  001C7E  0E7E               	movlw	126
 12134  001C80  ECBF  F049         	call	_UARTchar
 12135  001C84  0102               	movlb	2	; () banked
 12136  001C86  2B92               	incf	UseBluetooth@i& (0+255),f,b
 12137  001C88  D7F5               	goto	l16065
 12138  001C8A                     l16075:
 12139                           
 12140                           ; BSR set to: 2
 12141                           ;Bluetooth.c: 876: }
 12142                           ;Bluetooth.c: 877: UARTstring(CRLN);
 12143  001C8A  0ED1               	movlw	low _CRLN
 12144  001C8C  0100               	movlb	0	; () banked
 12145  001C8E  6F7A               	movwf	UARTstring@data& (0+255),b
 12146  001C90  0EF0               	movlw	high _CRLN
 12147  001C92  0100               	movlb	0	; () banked
 12148  001C94  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12149  001C96  ECD3  F046         	call	_UARTstring	;wreg free
 12150                           
 12151                           ;Bluetooth.c: 878: UARTstring(CRLN);
 12152  001C9A  0ED1               	movlw	low _CRLN
 12153  001C9C  0100               	movlb	0	; () banked
 12154  001C9E  6F7A               	movwf	UARTstring@data& (0+255),b
 12155  001CA0  0EF0               	movlw	high _CRLN
 12156  001CA2  0100               	movlb	0	; () banked
 12157  001CA4  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12158  001CA6  ECD3  F046         	call	_UARTstring	;wreg free
 12159                           
 12160                           ;Bluetooth.c: 879: UARTstringCRLN((unsigned char *)"System commands:");
 12161  001CAA  0E35               	movlw	low STR_91
 12162  001CAC  0100               	movlb	0	; () banked
 12163  001CAE  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12164  001CB0  0EFB               	movlw	high STR_91
 12165  001CB2  0100               	movlb	0	; () banked
 12166  001CB4  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12167  001CB6  EC78  F045         	call	_UARTstringCRLN	;wreg free
 12168                           
 12169                           ;Bluetooth.c: 880: UARTcommandMenu((unsigned char *)"???", (unsigned char *)"Help Menu")
      +                          ;
 12170  001CBA  0EEB               	movlw	low STR_89
 12171  001CBC  0100               	movlb	0	; () banked
 12172  001CBE  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12173  001CC0  0EFC               	movlw	high STR_89
 12174  001CC2  0100               	movlb	0	; () banked
 12175  001CC4  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12176  001CC6  0E7E               	movlw	low STR_93
 12177  001CC8  0100               	movlb	0	; () banked
 12178  001CCA  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12179  001CCC  0EFC               	movlw	high STR_93
 12180  001CCE  0100               	movlb	0	; () banked
 12181  001CD0  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12182  001CD2  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12183                           
 12184                           ;Bluetooth.c: 881: UARTcommandMenu((unsigned char *)"Reset", (unsigned char *)"Clears me
      +                          mory and resets device");
 12185  001CD6  0ED2               	movlw	low STR_78
 12186  001CD8  0100               	movlb	0	; () banked
 12187  001CDA  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12188  001CDC  0EFC               	movlw	high STR_78
 12189  001CDE  0100               	movlb	0	; () banked
 12190  001CE0  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12191  001CE2  0EB5               	movlw	low STR_95
 12192  001CE4  0100               	movlb	0	; () banked
 12193  001CE6  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12194  001CE8  0EF6               	movlw	high STR_95
 12195  001CEA  0100               	movlb	0	; () banked
 12196  001CEC  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12197  001CEE  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12198                           
 12199                           ;Bluetooth.c: 882: UARTcommandMenu((unsigned char *)"Version", (unsigned char *)"Display
      +                          s Firmware Version");
 12200  001CF2  0E02               	movlw	low (STR_97+18)
 12201  001CF4  0100               	movlb	0	; () banked
 12202  001CF6  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12203  001CF8  0EF9               	movlw	high (STR_97+18)
 12204  001CFA  0100               	movlb	0	; () banked
 12205  001CFC  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12206  001CFE  0EF0               	movlw	low STR_97
 12207  001D00  0100               	movlb	0	; () banked
 12208  001D02  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12209  001D04  0EF8               	movlw	high STR_97
 12210  001D06  0100               	movlb	0	; () banked
 12211  001D08  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12212  001D0A  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12213                           
 12214                           ;Bluetooth.c: 883: UARTstring(CRLN);
 12215  001D0E  0ED1               	movlw	low _CRLN
 12216  001D10  0100               	movlb	0	; () banked
 12217  001D12  6F7A               	movwf	UARTstring@data& (0+255),b
 12218  001D14  0EF0               	movlw	high _CRLN
 12219  001D16  0100               	movlb	0	; () banked
 12220  001D18  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12221  001D1A  ECD3  F046         	call	_UARTstring	;wreg free
 12222                           
 12223                           ;Bluetooth.c: 884: UARTstringCRLN((unsigned char *)"Diagnostic Commands:");
 12224  001D1E  0E01               	movlw	low STR_98
 12225  001D20  0100               	movlb	0	; () banked
 12226  001D22  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12227  001D24  0EFA               	movlw	high STR_98
 12228  001D26  0100               	movlb	0	; () banked
 12229  001D28  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12230  001D2A  EC78  F045         	call	_UARTstringCRLN	;wreg free
 12231                           
 12232                           ;Bluetooth.c: 885: UARTcommandMenu((unsigned char *)"Voltage", (unsigned char *)"Display
      +                          s the supply voltage");
 12233  001D2E  0EA3               	movlw	low STR_83
 12234  001D30  0100               	movlb	0	; () banked
 12235  001D32  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12236  001D34  0EFC               	movlw	high STR_83
 12237  001D36  0100               	movlb	0	; () banked
 12238  001D38  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12239  001D3A  0E9D               	movlw	low STR_100
 12240  001D3C  0100               	movlb	0	; () banked
 12241  001D3E  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12242  001D40  0EF8               	movlw	high STR_100
 12243  001D42  0100               	movlb	0	; () banked
 12244  001D44  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12245  001D46  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12246                           
 12247                           ;Bluetooth.c: 886: UARTstring(CRLN);
 12248  001D4A  0ED1               	movlw	low _CRLN
 12249  001D4C  0100               	movlb	0	; () banked
 12250  001D4E  6F7A               	movwf	UARTstring@data& (0+255),b
 12251  001D50  0EF0               	movlw	high _CRLN
 12252  001D52  0100               	movlb	0	; () banked
 12253  001D54  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12254  001D56  ECD3  F046         	call	_UARTstring	;wreg free
 12255                           
 12256                           ;Bluetooth.c: 887: UARTstringCRLN((unsigned char *)"IR commands:");
 12257  001D5A  0EBF               	movlw	low STR_101
 12258  001D5C  0100               	movlb	0	; () banked
 12259  001D5E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12260  001D60  0EFB               	movlw	high STR_101
 12261  001D62  0100               	movlb	0	; () banked
 12262  001D64  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12263  001D66  EC78  F045         	call	_UARTstringCRLN	;wreg free
 12264                           
 12265                           ;Bluetooth.c: 888: for(i=1; i <= 20; i++)
 12266  001D6A  0E01               	movlw	1
 12267  001D6C  0102               	movlb	2	; () banked
 12268  001D6E  6F92               	movwf	UseBluetooth@i& (0+255),b
 12269  001D70                     l16079:
 12270                           
 12271                           ; BSR set to: 2
 12272  001D70  0E14               	movlw	20
 12273  001D72  0102               	movlb	2	; () banked
 12274  001D74  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 12275  001D76  D001               	goto	l16083
 12276                           
 12277                           ; BSR set to: 2
 12278  001D78  D030               	goto	l16093
 12279  001D7A                     l16083:
 12280                           
 12281                           ; BSR set to: 2
 12282                           ;Bluetooth.c: 889: {
 12283                           ;Bluetooth.c: 890: cleanBuffer(buf,50);
 12284  001D7A  0E0F               	movlw	low UseBluetooth@buf
 12285  001D7C  0100               	movlb	0	; () banked
 12286  001D7E  6F79               	movwf	cleanBuffer@data& (0+255),b
 12287  001D80  0E02               	movlw	high UseBluetooth@buf
 12288  001D82  0100               	movlb	0	; () banked
 12289  001D84  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 12290  001D86  0E00               	movlw	0
 12291  001D88  0100               	movlb	0	; () banked
 12292  001D8A  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 12293  001D8C  0E32               	movlw	50
 12294  001D8E  6F7B               	movwf	cleanBuffer@count& (0+255),b
 12295  001D90  ECA6  F046         	call	_cleanBuffer	;wreg free
 12296                           
 12297                           ;Bluetooth.c: 891: sprintf(buf,"RemoteButton%d",i);
 12298  001D94  0E0F               	movlw	low UseBluetooth@buf
 12299  001D96  0100               	movlb	0	; () banked
 12300  001D98  6FC7               	movwf	sprintf@sp& (0+255),b
 12301  001D9A  0E02               	movlw	high UseBluetooth@buf
 12302  001D9C  0100               	movlb	0	; () banked
 12303  001D9E  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 12304  001DA0  0E87               	movlw	low STR_102
 12305  001DA2  0100               	movlb	0	; () banked
 12306  001DA4  6FC9               	movwf	sprintf@f& (0+255),b
 12307  001DA6  0EFB               	movlw	high STR_102
 12308  001DA8  0100               	movlb	0	; () banked
 12309  001DAA  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 12310  001DAC  C292  F0CB         	movff	UseBluetooth@i,?_sprintf+4
 12311  001DB0  0100               	movlb	0	; () banked
 12312  001DB2  6BCC               	clrf	(?_sprintf+5)& (0+255),b
 12313  001DB4  ECC4  F010         	call	_sprintf	;wreg free
 12314                           
 12315                           ;Bluetooth.c: 892: UARTcommandMenu(buf, "Transmits saved NEC code");
 12316  001DB8  0E0F               	movlw	low UseBluetooth@buf
 12317  001DBA  0100               	movlb	0	; () banked
 12318  001DBC  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12319  001DBE  0E02               	movlw	high UseBluetooth@buf
 12320  001DC0  0100               	movlb	0	; () banked
 12321  001DC2  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12322  001DC4  0E0A               	movlw	low STR_103
 12323  001DC6  0100               	movlb	0	; () banked
 12324  001DC8  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12325  001DCA  0EF9               	movlw	high STR_103
 12326  001DCC  0100               	movlb	0	; () banked
 12327  001DCE  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12328  001DD0  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12329  001DD4  0102               	movlb	2	; () banked
 12330  001DD6  2B92               	incf	UseBluetooth@i& (0+255),f,b
 12331  001DD8  D7CB               	goto	l16079
 12332  001DDA                     l16093:
 12333                           
 12334                           ; BSR set to: 2
 12335                           ;Bluetooth.c: 893: }
 12336                           ;Bluetooth.c: 894: for(i=1; i <= 20; i++)
 12337  001DDA  0E01               	movlw	1
 12338  001DDC  0102               	movlb	2	; () banked
 12339  001DDE  6F92               	movwf	UseBluetooth@i& (0+255),b
 12340  001DE0                     l16095:
 12341                           
 12342                           ; BSR set to: 2
 12343  001DE0  0E14               	movlw	20
 12344  001DE2  0102               	movlb	2	; () banked
 12345  001DE4  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 12346  001DE6  D001               	goto	l16099
 12347                           
 12348                           ; BSR set to: 2
 12349  001DE8  D030               	goto	l16109
 12350  001DEA                     l16099:
 12351                           
 12352                           ; BSR set to: 2
 12353                           ;Bluetooth.c: 895: {
 12354                           ;Bluetooth.c: 896: cleanBuffer(buf,50);
 12355  001DEA  0E0F               	movlw	low UseBluetooth@buf
 12356  001DEC  0100               	movlb	0	; () banked
 12357  001DEE  6F79               	movwf	cleanBuffer@data& (0+255),b
 12358  001DF0  0E02               	movlw	high UseBluetooth@buf
 12359  001DF2  0100               	movlb	0	; () banked
 12360  001DF4  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 12361  001DF6  0E00               	movlw	0
 12362  001DF8  0100               	movlb	0	; () banked
 12363  001DFA  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 12364  001DFC  0E32               	movlw	50
 12365  001DFE  6F7B               	movwf	cleanBuffer@count& (0+255),b
 12366  001E00  ECA6  F046         	call	_cleanBuffer	;wreg free
 12367                           
 12368                           ;Bluetooth.c: 897: sprintf(buf,"RemoteButton%d set",i);
 12369  001E04  0E0F               	movlw	low UseBluetooth@buf
 12370  001E06  0100               	movlb	0	; () banked
 12371  001E08  6FC7               	movwf	sprintf@sp& (0+255),b
 12372  001E0A  0E02               	movlw	high UseBluetooth@buf
 12373  001E0C  0100               	movlb	0	; () banked
 12374  001E0E  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 12375  001E10  0EDB               	movlw	low STR_104
 12376  001E12  0100               	movlb	0	; () banked
 12377  001E14  6FC9               	movwf	sprintf@f& (0+255),b
 12378  001E16  0EFA               	movlw	high STR_104
 12379  001E18  0100               	movlb	0	; () banked
 12380  001E1A  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 12381  001E1C  C292  F0CB         	movff	UseBluetooth@i,?_sprintf+4
 12382  001E20  0100               	movlb	0	; () banked
 12383  001E22  6BCC               	clrf	(?_sprintf+5)& (0+255),b
 12384  001E24  ECC4  F010         	call	_sprintf	;wreg free
 12385                           
 12386                           ;Bluetooth.c: 898: UARTcommandMenu(buf,(unsigned char *) "Allows saving NEC codes");
 12387  001E28  0E0F               	movlw	low UseBluetooth@buf
 12388  001E2A  0100               	movlb	0	; () banked
 12389  001E2C  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12390  001E2E  0E02               	movlw	high UseBluetooth@buf
 12391  001E30  0100               	movlb	0	; () banked
 12392  001E32  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12393  001E34  0E3B               	movlw	low STR_105
 12394  001E36  0100               	movlb	0	; () banked
 12395  001E38  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12396  001E3A  0EF9               	movlw	high STR_105
 12397  001E3C  0100               	movlb	0	; () banked
 12398  001E3E  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12399  001E40  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12400  001E44  0102               	movlb	2	; () banked
 12401  001E46  2B92               	incf	UseBluetooth@i& (0+255),f,b
 12402  001E48  D7CB               	goto	l16095
 12403  001E4A                     l16109:
 12404                           
 12405                           ; BSR set to: 2
 12406                           ;Bluetooth.c: 899: }
 12407                           ;Bluetooth.c: 900: UARTcommandMenu("RF set 1,D", "Sets Remote button to send RF Config 1
      +                           channel D");
 12408  001E4A  0E32               	movlw	low STR_106
 12409  001E4C  0100               	movlb	0	; () banked
 12410  001E4E  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12411  001E50  0EFC               	movlw	high STR_106
 12412  001E52  0100               	movlb	0	; () banked
 12413  001E54  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12414  001E56  0E14               	movlw	low STR_107
 12415  001E58  0100               	movlb	0	; () banked
 12416  001E5A  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12417  001E5C  0EF2               	movlw	high STR_107
 12418  001E5E  0100               	movlb	0	; () banked
 12419  001E60  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12420  001E62  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12421                           
 12422                           ;Bluetooth.c: 901: UARTcommandMenu("RF set 1,E", "Sets Remote button to send RF Config 1
      +                           channel E");
 12423  001E66  0E48               	movlw	low STR_108
 12424  001E68  0100               	movlb	0	; () banked
 12425  001E6A  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12426  001E6C  0EFC               	movlw	high STR_108
 12427  001E6E  0100               	movlb	0	; () banked
 12428  001E70  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12429  001E72  0E76               	movlw	low STR_109
 12430  001E74  0100               	movlb	0	; () banked
 12431  001E76  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12432  001E78  0EF2               	movlw	high STR_109
 12433  001E7A  0100               	movlb	0	; () banked
 12434  001E7C  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12435  001E7E  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12436                           
 12437                           ;Bluetooth.c: 902: UARTcommandMenu("RF set 1,F", "Sets Remote button to send RF Config 1
      +                           channel F");
 12438  001E82  0E53               	movlw	low STR_110
 12439  001E84  0100               	movlb	0	; () banked
 12440  001E86  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12441  001E88  0EFC               	movlw	high STR_110
 12442  001E8A  0100               	movlb	0	; () banked
 12443  001E8C  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12444  001E8E  0EA7               	movlw	low STR_111
 12445  001E90  0100               	movlb	0	; () banked
 12446  001E92  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12447  001E94  0EF2               	movlw	high STR_111
 12448  001E96  0100               	movlb	0	; () banked
 12449  001E98  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12450  001E9A  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12451                           
 12452                           ;Bluetooth.c: 903: UARTcommandMenu("RF set 2,B", "Sets Remote button to send RF Config 2
      +                           channel B");
 12453  001E9E  0E27               	movlw	low STR_112
 12454  001EA0  0100               	movlb	0	; () banked
 12455  001EA2  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12456  001EA4  0EFC               	movlw	high STR_112
 12457  001EA6  0100               	movlb	0	; () banked
 12458  001EA8  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12459  001EAA  0EE3               	movlw	low STR_113
 12460  001EAC  0100               	movlb	0	; () banked
 12461  001EAE  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12462  001EB0  0EF1               	movlw	high STR_113
 12463  001EB2  0100               	movlb	0	; () banked
 12464  001EB4  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12465  001EB6  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12466                           
 12467                           ;Bluetooth.c: 904: UARTcommandMenu("RF set 2,D", "Sets Remote button to send RF Config 2
      +                           channel D");
 12468  001EBA  0E3D               	movlw	low STR_114
 12469  001EBC  0100               	movlb	0	; () banked
 12470  001EBE  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12471  001EC0  0EFC               	movlw	high STR_114
 12472  001EC2  0100               	movlb	0	; () banked
 12473  001EC4  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12474  001EC6  0E45               	movlw	low STR_115
 12475  001EC8  0100               	movlb	0	; () banked
 12476  001ECA  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12477  001ECC  0EF2               	movlw	high STR_115
 12478  001ECE  0100               	movlb	0	; () banked
 12479  001ED0  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12480  001ED2  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12481                           
 12482                           ;Bluetooth.c: 905: UARTcommandMenu("RF set 2,H", "Sets Remote button to send RF Config 2
      +                           channel H");
 12483  001ED6  0E5E               	movlw	low STR_116
 12484  001ED8  0100               	movlb	0	; () banked
 12485  001EDA  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12486  001EDC  0EFC               	movlw	high STR_116
 12487  001EDE  0100               	movlb	0	; () banked
 12488  001EE0  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12489  001EE2  0ED8               	movlw	low STR_117
 12490  001EE4  0100               	movlb	0	; () banked
 12491  001EE6  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12492  001EE8  0EF2               	movlw	high STR_117
 12493  001EEA  0100               	movlb	0	; () banked
 12494  001EEC  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12495  001EEE  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12496                           
 12497                           ;Bluetooth.c: 906: UARTcommandMenu("RF clear 1,D", "Clears saved Button for RF Config 1 
      +                          channel D");
 12498  001EF2  0ED9               	movlw	low STR_118
 12499  001EF4  0100               	movlb	0	; () banked
 12500  001EF6  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12501  001EF8  0EFB               	movlw	high STR_118
 12502  001EFA  0100               	movlb	0	; () banked
 12503  001EFC  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12504  001EFE  0E94               	movlw	low STR_119
 12505  001F00  0100               	movlb	0	; () banked
 12506  001F02  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12507  001F04  0EF3               	movlw	high STR_119
 12508  001F06  0100               	movlb	0	; () banked
 12509  001F08  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12510  001F0A  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12511                           
 12512                           ;Bluetooth.c: 907: UARTcommandMenu("RF clear 1,E", "Clears saved Button for RF Config 1 
      +                          channel E");
 12513  001F0E  0EF3               	movlw	low STR_120
 12514  001F10  0100               	movlb	0	; () banked
 12515  001F12  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12516  001F14  0EFB               	movlw	high STR_120
 12517  001F16  0100               	movlb	0	; () banked
 12518  001F18  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12519  001F1A  0EF0               	movlw	low STR_121
 12520  001F1C  0100               	movlb	0	; () banked
 12521  001F1E  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12522  001F20  0EF3               	movlw	high STR_121
 12523  001F22  0100               	movlb	0	; () banked
 12524  001F24  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12525  001F26  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12526                           
 12527                           ;Bluetooth.c: 908: UARTcommandMenu("RF clear 1,F", "Clears saved Button for RF Config 1 
      +                          channel F");
 12528  001F2A  0E00               	movlw	low STR_122
 12529  001F2C  0100               	movlb	0	; () banked
 12530  001F2E  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12531  001F30  0EFC               	movlw	high STR_122
 12532  001F32  0100               	movlb	0	; () banked
 12533  001F34  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12534  001F36  0E1E               	movlw	low STR_123
 12535  001F38  0100               	movlb	0	; () banked
 12536  001F3A  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12537  001F3C  0EF4               	movlw	high STR_123
 12538  001F3E  0100               	movlb	0	; () banked
 12539  001F40  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12540  001F42  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12541                           
 12542                           ;Bluetooth.c: 909: UARTcommandMenu("RF clear 2,B", "Clears saved Button for RF Config 2 
      +                          channel B");
 12543  001F46  0ECC               	movlw	low STR_124
 12544  001F48  0100               	movlb	0	; () banked
 12545  001F4A  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12546  001F4C  0EFB               	movlw	high STR_124
 12547  001F4E  0100               	movlb	0	; () banked
 12548  001F50  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12549  001F52  0E66               	movlw	low STR_125
 12550  001F54  0100               	movlb	0	; () banked
 12551  001F56  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12552  001F58  0EF3               	movlw	high STR_125
 12553  001F5A  0100               	movlb	0	; () banked
 12554  001F5C  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12555  001F5E  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12556                           
 12557                           ;Bluetooth.c: 910: UARTcommandMenu("RF clear 2,D", "Clears saved Button for RF Config 2 
      +                          channel D");
 12558  001F62  0EE6               	movlw	low STR_126
 12559  001F64  0100               	movlb	0	; () banked
 12560  001F66  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12561  001F68  0EFB               	movlw	high STR_126
 12562  001F6A  0100               	movlb	0	; () banked
 12563  001F6C  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12564  001F6E  0EC2               	movlw	low STR_127
 12565  001F70  0100               	movlb	0	; () banked
 12566  001F72  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12567  001F74  0EF3               	movlw	high STR_127
 12568  001F76  0100               	movlb	0	; () banked
 12569  001F78  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12570  001F7A  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12571                           
 12572                           ;Bluetooth.c: 911: UARTcommandMenu("RF clear 2,H", "Clears saved Button for RF Config 2 
      +                          channel H");
 12573  001F7E  0E0D               	movlw	low STR_128
 12574  001F80  0100               	movlb	0	; () banked
 12575  001F82  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12576  001F84  0EFC               	movlw	high STR_128
 12577  001F86  0100               	movlb	0	; () banked
 12578  001F88  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12579  001F8A  0E4C               	movlw	low STR_129
 12580  001F8C  0100               	movlb	0	; () banked
 12581  001F8E  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12582  001F90  0EF4               	movlw	high STR_129
 12583  001F92  0100               	movlb	0	; () banked
 12584  001F94  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12585  001F96  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12586                           
 12587                           ;Bluetooth.c: 912: UARTcommandMenu((unsigned char *)"NEC?", (unsigned char *)"NEC descri
      +                          ption for Arbitrary code send");
 12588  001F9A  0EE2               	movlw	low STR_130
 12589  001F9C  0100               	movlb	0	; () banked
 12590  001F9E  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12591  001FA0  0EFC               	movlw	high STR_130
 12592  001FA2  0100               	movlb	0	; () banked
 12593  001FA4  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12594  001FA6  0E56               	movlw	low STR_131
 12595  001FA8  0100               	movlb	0	; () banked
 12596  001FAA  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12597  001FAC  0EF5               	movlw	high STR_131
 12598  001FAE  0100               	movlb	0	; () banked
 12599  001FB0  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12600  001FB2  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12601                           
 12602                           ;Bluetooth.c: 913: UARTstring(CRLN);
 12603  001FB6  0ED1               	movlw	low _CRLN
 12604  001FB8  0100               	movlb	0	; () banked
 12605  001FBA  6F7A               	movwf	UARTstring@data& (0+255),b
 12606  001FBC  0EF0               	movlw	high _CRLN
 12607  001FBE  0100               	movlb	0	; () banked
 12608  001FC0  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12609  001FC2  ECD3  F046         	call	_UARTstring	;wreg free
 12610                           
 12611                           ;Bluetooth.c: 914: UARTstringCRLN((unsigned char *)"RF commands:");
 12612  001FC6  0EB2               	movlw	low STR_132
 12613  001FC8  0100               	movlb	0	; () banked
 12614  001FCA  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12615  001FCC  0EFB               	movlw	high STR_132
 12616  001FCE  0100               	movlb	0	; () banked
 12617  001FD0  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12618  001FD2  EC78  F045         	call	_UARTstringCRLN	;wreg free
 12619                           
 12620                           ;Bluetooth.c: 915: UARTcommandMenu(Conf1_ChannelD_STR, (unsigned char *)"RFK100LC Channe
      +                          l D");
 12621  001FD6  0E5C               	movlw	low _Conf1_ChannelD_STR
 12622  001FD8  0100               	movlb	0	; () banked
 12623  001FDA  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12624  001FDC  0EF0               	movlw	high _Conf1_ChannelD_STR
 12625  001FDE  0100               	movlb	0	; () banked
 12626  001FE0  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12627  001FE2  0E8F               	movlw	low STR_133
 12628  001FE4  0100               	movlb	0	; () banked
 12629  001FE6  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12630  001FE8  0EFA               	movlw	high STR_133
 12631  001FEA  0100               	movlb	0	; () banked
 12632  001FEC  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12633  001FEE  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12634                           
 12635                           ;Bluetooth.c: 916: UARTcommandMenu(Conf1_ChannelE_STR, (unsigned char *)"RFK100LC Channe
      +                          l E");
 12636  001FF2  0E6B               	movlw	low _Conf1_ChannelE_STR
 12637  001FF4  0100               	movlb	0	; () banked
 12638  001FF6  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12639  001FF8  0EF0               	movlw	high _Conf1_ChannelE_STR
 12640  001FFA  0100               	movlb	0	; () banked
 12641  001FFC  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12642  001FFE  0EA2               	movlw	low STR_134
 12643  002000  0100               	movlb	0	; () banked
 12644  002002  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12645  002004  0EFA               	movlw	high STR_134
 12646  002006  0100               	movlb	0	; () banked
 12647  002008  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12648  00200A  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12649                           
 12650                           ;Bluetooth.c: 917: UARTcommandMenu(Conf1_ChannelF_STR, (unsigned char *)"RFK100LC Channe
      +                          l F");
 12651  00200E  0E7A               	movlw	low _Conf1_ChannelF_STR
 12652  002010  0100               	movlb	0	; () banked
 12653  002012  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12654  002014  0EF0               	movlw	high _Conf1_ChannelF_STR
 12655  002016  0100               	movlb	0	; () banked
 12656  002018  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12657  00201A  0EB5               	movlw	low STR_135
 12658  00201C  0100               	movlb	0	; () banked
 12659  00201E  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12660  002020  0EFA               	movlw	high STR_135
 12661  002022  0100               	movlb	0	; () banked
 12662  002024  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12663  002026  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12664                           
 12665                           ;Bluetooth.c: 918: UARTcommandMenu(Conf2_ChannelB_ON_STR, (unsigned char *)"RFK306LC Cha
      +                          nnel B ON");
 12666  00202A  0E98               	movlw	low _Conf2_ChannelB_ON_STR
 12667  00202C  0100               	movlb	0	; () banked
 12668  00202E  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12669  002030  0EEF               	movlw	high _Conf2_ChannelB_ON_STR
 12670  002032  0100               	movlb	0	; () banked
 12671  002034  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12672  002036  0E81               	movlw	low STR_136
 12673  002038  0100               	movlb	0	; () banked
 12674  00203A  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12675  00203C  0EF9               	movlw	high STR_136
 12676  00203E  0100               	movlb	0	; () banked
 12677  002040  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12678  002042  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12679                           
 12680                           ;Bluetooth.c: 919: UARTcommandMenu(Conf2_ChannelB_OFF_STR, (unsigned char *)"RFK306LC Ch
      +                          annel B OFF");
 12681  002046  0E72               	movlw	low _Conf2_ChannelB_OFF_STR
 12682  002048  0100               	movlb	0	; () banked
 12683  00204A  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12684  00204C  0EEF               	movlw	high _Conf2_ChannelB_OFF_STR
 12685  00204E  0100               	movlb	0	; () banked
 12686  002050  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12687  002052  0E6A               	movlw	low STR_137
 12688  002054  0100               	movlb	0	; () banked
 12689  002056  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12690  002058  0EF9               	movlw	high STR_137
 12691  00205A  0100               	movlb	0	; () banked
 12692  00205C  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12693  00205E  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12694                           
 12695                           ;Bluetooth.c: 920: UARTcommandMenu(Conf2_ChannelD_ON_STR, (unsigned char *)"TR009 Channe
      +                          l D ON");
 12696  002062  0EAA               	movlw	low _Conf2_ChannelD_ON_STR
 12697  002064  0100               	movlb	0	; () banked
 12698  002066  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12699  002068  0EEF               	movlw	high _Conf2_ChannelD_ON_STR
 12700  00206A  0100               	movlb	0	; () banked
 12701  00206C  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12702  00206E  0EC8               	movlw	low STR_138
 12703  002070  0100               	movlb	0	; () banked
 12704  002072  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12705  002074  0EFA               	movlw	high STR_138
 12706  002076  0100               	movlb	0	; () banked
 12707  002078  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12708  00207A  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12709                           
 12710                           ;Bluetooth.c: 921: UARTcommandMenu(Conf2_ChannelD_OFF_STR, (unsigned char *)"TR009 Chann
      +                          el D OFF");
 12711  00207E  0E85               	movlw	low _Conf2_ChannelD_OFF_STR
 12712  002080  0100               	movlb	0	; () banked
 12713  002082  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12714  002084  0EEF               	movlw	high _Conf2_ChannelD_OFF_STR
 12715  002086  0100               	movlb	0	; () banked
 12716  002088  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12717  00208A  0E3F               	movlw	low STR_139
 12718  00208C  0100               	movlb	0	; () banked
 12719  00208E  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12720  002090  0EFA               	movlw	high STR_139
 12721  002092  0100               	movlb	0	; () banked
 12722  002094  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12723  002096  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12724                           
 12725                           ;Bluetooth.c: 922: UARTcommandMenu(Conf2_ChannelH_1_ON_STR, (unsigned char *)"RC-015*3 C
      +                          hannel H device 1 ON");
 12726  00209A  0E36               	movlw	low _Conf2_ChannelH_1_ON_STR
 12727  00209C  0100               	movlb	0	; () banked
 12728  00209E  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12729  0020A0  0EEF               	movlw	high _Conf2_ChannelH_1_ON_STR
 12730  0020A2  0100               	movlb	0	; () banked
 12731  0020A4  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12732  0020A6  0E53               	movlw	low STR_140
 12733  0020A8  0100               	movlb	0	; () banked
 12734  0020AA  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12735  0020AC  0EF7               	movlw	high STR_140
 12736  0020AE  0100               	movlb	0	; () banked
 12737  0020B0  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12738  0020B2  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12739                           
 12740                           ;Bluetooth.c: 923: UARTcommandMenu(Conf2_ChannelH_1_OFF_STR, (unsigned char *)"RC-015*3 
      +                          Channel H device 1 OFF");
 12741  0020B6  0EF7               	movlw	low _Conf2_ChannelH_1_OFF_STR
 12742  0020B8  0100               	movlb	0	; () banked
 12743  0020BA  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12744  0020BC  0EEE               	movlw	high _Conf2_ChannelH_1_OFF_STR
 12745  0020BE  0100               	movlb	0	; () banked
 12746  0020C0  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12747  0020C2  0E55               	movlw	low STR_141
 12748  0020C4  0100               	movlb	0	; () banked
 12749  0020C6  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12750  0020C8  0EF6               	movlw	high STR_141
 12751  0020CA  0100               	movlb	0	; () banked
 12752  0020CC  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12753  0020CE  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12754                           
 12755                           ;Bluetooth.c: 924: UARTcommandMenu(Conf2_ChannelH_2_ON_STR, (unsigned char *)"RC-015*3 C
      +                          hannel H device 2 ON");
 12756  0020D2  0E4A               	movlw	low _Conf2_ChannelH_2_ON_STR
 12757  0020D4  0100               	movlb	0	; () banked
 12758  0020D6  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12759  0020D8  0EEF               	movlw	high _Conf2_ChannelH_2_ON_STR
 12760  0020DA  0100               	movlb	0	; () banked
 12761  0020DC  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12762  0020DE  0E72               	movlw	low STR_142
 12763  0020E0  0100               	movlb	0	; () banked
 12764  0020E2  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12765  0020E4  0EF7               	movlw	high STR_142
 12766  0020E6  0100               	movlb	0	; () banked
 12767  0020E8  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12768  0020EA  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12769                           
 12770                           ;Bluetooth.c: 925: UARTcommandMenu(Conf2_ChannelH_2_OFF_STR, (unsigned char *)"RC-015*3 
      +                          Channel H device 2 OFF");
 12771  0020EE  0E0C               	movlw	low _Conf2_ChannelH_2_OFF_STR
 12772  0020F0  0100               	movlb	0	; () banked
 12773  0020F2  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12774  0020F4  0EEF               	movlw	high _Conf2_ChannelH_2_OFF_STR
 12775  0020F6  0100               	movlb	0	; () banked
 12776  0020F8  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12777  0020FA  0E75               	movlw	low STR_143
 12778  0020FC  0100               	movlb	0	; () banked
 12779  0020FE  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12780  002100  0EF6               	movlw	high STR_143
 12781  002102  0100               	movlb	0	; () banked
 12782  002104  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12783  002106  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12784                           
 12785                           ;Bluetooth.c: 926: UARTcommandMenu(Conf2_ChannelH_3_ON_STR, (unsigned char *)"RC-015*3 C
      +                          hannel H device 3 ON");
 12786  00210A  0E5E               	movlw	low _Conf2_ChannelH_3_ON_STR
 12787  00210C  0100               	movlb	0	; () banked
 12788  00210E  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12789  002110  0EEF               	movlw	high _Conf2_ChannelH_3_ON_STR
 12790  002112  0100               	movlb	0	; () banked
 12791  002114  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12792  002116  0E91               	movlw	low STR_144
 12793  002118  0100               	movlb	0	; () banked
 12794  00211A  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12795  00211C  0EF7               	movlw	high STR_144
 12796  00211E  0100               	movlb	0	; () banked
 12797  002120  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12798  002122  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12799                           
 12800                           ;Bluetooth.c: 927: UARTcommandMenu(Conf2_ChannelH_3_OFF_STR, (unsigned char *)"RC-015*3 
      +                          Channel H device 3 OFF");
 12801  002126  0E21               	movlw	low _Conf2_ChannelH_3_OFF_STR
 12802  002128  0100               	movlb	0	; () banked
 12803  00212A  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12804  00212C  0EEF               	movlw	high _Conf2_ChannelH_3_OFF_STR
 12805  00212E  0100               	movlb	0	; () banked
 12806  002130  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12807  002132  0E95               	movlw	low STR_145
 12808  002134  0100               	movlb	0	; () banked
 12809  002136  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12810  002138  0EF6               	movlw	high STR_145
 12811  00213A  0100               	movlb	0	; () banked
 12812  00213C  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12813  00213E  EC8C  F03B         	call	_UARTcommandMenu	;wreg free
 12814                           
 12815                           ;Bluetooth.c: 928: UARTstring(CRLN);
 12816  002142  0ED1               	movlw	low _CRLN
 12817  002144  0100               	movlb	0	; () banked
 12818  002146  6F7A               	movwf	UARTstring@data& (0+255),b
 12819  002148  0EF0               	movlw	high _CRLN
 12820  00214A  0100               	movlb	0	; () banked
 12821  00214C  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12822  00214E  ECD3  F046         	call	_UARTstring	;wreg free
 12823                           
 12824                           ;Bluetooth.c: 929: }
 12825  002152  0012               	return	
 12826  002154                     l16111:
 12827                           
 12828                           ;Bluetooth.c: 930: else
 12829                           ;Bluetooth.c: 931: {
 12830                           ;Bluetooth.c: 932: UARTstringCRLN(SYNTAX_ERR);
 12831  002154  0E89               	movlw	low _SYNTAX_ERR
 12832  002156  0100               	movlb	0	; () banked
 12833  002158  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12834  00215A  0EF0               	movlw	high _SYNTAX_ERR
 12835  00215C  0100               	movlb	0	; () banked
 12836  00215E  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12837  002160  EC78  F045         	call	_UARTstringCRLN	;wreg free
 12838                           
 12839                           ;Bluetooth.c: 933: UARTstringCRLN((unsigned char *)"Enter ??? for Command Menu");
 12840  002164  0ED5               	movlw	low STR_146
 12841  002166  0100               	movlb	0	; () banked
 12842  002168  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12843  00216A  0EF8               	movlw	high STR_146
 12844  00216C  0100               	movlb	0	; () banked
 12845  00216E  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12846  002170  EC78  F045         	call	_UARTstringCRLN	;wreg free
 12847                           
 12848                           ;Bluetooth.c: 934: UARTstring(CRLN);
 12849  002174  0ED1               	movlw	low _CRLN
 12850  002176  0100               	movlb	0	; () banked
 12851  002178  6F7A               	movwf	UARTstring@data& (0+255),b
 12852  00217A  0EF0               	movlw	high _CRLN
 12853  00217C  0100               	movlb	0	; () banked
 12854  00217E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12855  002180  ECD3  F046         	call	_UARTstring	;wreg free
 12856                           
 12857                           ;Bluetooth.c: 935: return 0;
 12858                           ;	Return value of _UseBluetooth is never used
 12859  002184  0012               	return	
 12860                           
 12861                           ;Bluetooth.c: 936: }
 12862                           ;Bluetooth.c: 938: return 0;
 12863                           ;	Return value of _UseBluetooth is never used
 12864  002186  0012               	return		;funcret
 12865  002188                     __end_of_UseBluetooth:
 12866                           	opt stack 0
 12867                           tblptru	equ	0xFF8
 12868                           tblptrh	equ	0xFF7
 12869                           tblptrl	equ	0xFF6
 12870                           tablat	equ	0xFF5
 12871                           prodh	equ	0xFF4
 12872                           prodl	equ	0xFF3
 12873                           intcon	equ	0xFF2
 12874                           postinc0	equ	0xFEE
 12875                           wreg	equ	0xFE8
 12876                           postdec1	equ	0xFE5
 12877                           fsr1h	equ	0xFE2
 12878                           fsr1l	equ	0xFE1
 12879                           indf2	equ	0xFDF
 12880                           postinc2	equ	0xFDE
 12881                           fsr2h	equ	0xFDA
 12882                           fsr2l	equ	0xFD9
 12883                           status	equ	0xFD8
 12884                           
 12885 ;; *************** function _lowercaseString *****************
 12886 ;; Defined at:
 12887 ;;		line 332 in file "MISC.c"
 12888 ;; Parameters:    Size  Location     Type
 12889 ;;  Input           2   25[BANK0 ] PTR unsigned char 
 12890 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 12891 ;; Auto vars:     Size  Location     Type
 12892 ;;		None
 12893 ;; Return value:  Size  Location     Type
 12894 ;;		None               void
 12895 ;; Registers used:
 12896 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12897 ;; Tracked objects:
 12898 ;;		On entry : 0/0
 12899 ;;		On exit  : 0/0
 12900 ;;		Unchanged: 0/0
 12901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12902 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12904 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12905 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12906 ;;Total ram usage:        3 bytes
 12907 ;; Hardware stack levels used:    1
 12908 ;; Hardware stack levels required when called:    6
 12909 ;; This function calls:
 12910 ;;		Nothing
 12911 ;; This function is called by:
 12912 ;;		_UseBluetooth
 12913 ;; This function uses a non-reentrant model
 12914 ;;
 12915                           
 12916                           	psect	text6
 12917  00907C                     __ptext6:
 12918                           	opt stack 0
 12919  00907C                     _lowercaseString:
 12920                           	opt stack 23
 12921                           
 12922                           ;MISC.c: 334: while((*Input != 0))
 12923                           
 12924                           ;incstack = 0
 12925  00907C  D019               	goto	l14705
 12926  00907E                     l14697:
 12927                           
 12928                           ;MISC.c: 335: {
 12929                           ;MISC.c: 336: if((*Input >= 65) && (*Input <= 90 ))
 12930  00907E  C079  FFD9         	movff	lowercaseString@Input,fsr2l
 12931  009082  C07A  FFDA         	movff	lowercaseString@Input+1,fsr2h
 12932  009086  0E40               	movlw	64
 12933  009088  64DF               	cpfsgt	indf2,c
 12934  00908A  D00E               	goto	l14703
 12935  00908C  C079  FFD9         	movff	lowercaseString@Input,fsr2l
 12936  009090  C07A  FFDA         	movff	lowercaseString@Input+1,fsr2h
 12937  009094  0E5B               	movlw	91
 12938  009096  60DF               	cpfslt	indf2,c
 12939  009098  D007               	goto	l14703
 12940                           
 12941                           ;MISC.c: 337: {
 12942                           ;MISC.c: 338: *Input += 32;
 12943  00909A  C079  FFD9         	movff	lowercaseString@Input,fsr2l
 12944  00909E  C07A  FFDA         	movff	lowercaseString@Input+1,fsr2h
 12945  0090A2  0E20               	movlw	32
 12946  0090A4  26DF               	addwf	indf2,f,c
 12947  0090A6  D000               	goto	l14703
 12948  0090A8                     l14703:
 12949                           
 12950                           ;MISC.c: 339: }
 12951                           ;MISC.c: 340: Input++;
 12952  0090A8  0100               	movlb	0	; () banked
 12953  0090AA  4B79               	infsnz	lowercaseString@Input& (0+255),f,b
 12954  0090AC  2B7A               	incf	(lowercaseString@Input+1)& (0+255),f,b
 12955  0090AE  D000               	goto	l14705
 12956  0090B0                     l14705:
 12957  0090B0  C079  FFD9         	movff	lowercaseString@Input,fsr2l
 12958  0090B4  C07A  FFDA         	movff	lowercaseString@Input+1,fsr2h
 12959  0090B8  50DF               	movf	indf2,w,c
 12960  0090BA  A4D8               	btfss	status,2,c
 12961  0090BC  D7E0               	goto	l14697
 12962  0090BE  0012               	return		;funcret
 12963  0090C0                     __end_of_lowercaseString:
 12964                           	opt stack 0
 12965                           tblptru	equ	0xFF8
 12966                           tblptrh	equ	0xFF7
 12967                           tblptrl	equ	0xFF6
 12968                           tablat	equ	0xFF5
 12969                           prodh	equ	0xFF4
 12970                           prodl	equ	0xFF3
 12971                           intcon	equ	0xFF2
 12972                           postinc0	equ	0xFEE
 12973                           wreg	equ	0xFE8
 12974                           postdec1	equ	0xFE5
 12975                           fsr1h	equ	0xFE2
 12976                           fsr1l	equ	0xFE1
 12977                           indf2	equ	0xFDF
 12978                           postinc2	equ	0xFDE
 12979                           fsr2h	equ	0xFDA
 12980                           fsr2l	equ	0xFD9
 12981                           status	equ	0xFD8
 12982                           
 12983 ;; *************** function _WaitForIRsignal *****************
 12984 ;; Defined at:
 12985 ;;		line 946 in file "Bluetooth.c"
 12986 ;; Parameters:    Size  Location     Type
 12987 ;;		None
 12988 ;; Auto vars:     Size  Location     Type
 12989 ;;  timeout         1   34[BANK0 ] unsigned char 
 12990 ;; Return value:  Size  Location     Type
 12991 ;;                  1    wreg      unsigned char 
 12992 ;; Registers used:
 12993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12994 ;; Tracked objects:
 12995 ;;		On entry : 0/0
 12996 ;;		On exit  : 0/0
 12997 ;;		Unchanged: 0/0
 12998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13002 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13003 ;;Total ram usage:        1 bytes
 13004 ;; Hardware stack levels used:    1
 13005 ;; Hardware stack levels required when called:    9
 13006 ;; This function calls:
 13007 ;;		_LEDTimerON
 13008 ;;		_UARTchar
 13009 ;;		_UARTstring
 13010 ;;		_UARTstringCRLN
 13011 ;;		_delayUS
 13012 ;; This function is called by:
 13013 ;;		_UseBluetooth
 13014 ;; This function uses a non-reentrant model
 13015 ;;
 13016                           
 13017                           	psect	text7
 13018  0086DC                     __ptext7:
 13019                           	opt stack 0
 13020  0086DC                     _WaitForIRsignal:
 13021                           	opt stack 20
 13022                           
 13023                           ;Bluetooth.c: 948: unsigned char timeout = 0;
 13024                           
 13025                           ;incstack = 0
 13026  0086DC  0E00               	movlw	0
 13027  0086DE  0100               	movlb	0	; () banked
 13028  0086E0  6F82               	movwf	WaitForIRsignal@timeout& (0+255),b
 13029                           
 13030                           ; BSR set to: 0
 13031                           ;Bluetooth.c: 950: UARTstring(CRLN);
 13032  0086E2  0ED1               	movlw	low _CRLN
 13033  0086E4  0100               	movlb	0	; () banked
 13034  0086E6  6F7A               	movwf	UARTstring@data& (0+255),b
 13035  0086E8  0EF0               	movlw	high _CRLN
 13036  0086EA  0100               	movlb	0	; () banked
 13037  0086EC  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 13038  0086EE  ECD3  F046         	call	_UARTstring	;wreg free
 13039                           
 13040                           ;Bluetooth.c: 951: UARTstring((unsigned char *)"Press Remote Control button");
 13041  0086F2  0EB9               	movlw	low STR_147
 13042  0086F4  0100               	movlb	0	; () banked
 13043  0086F6  6F7A               	movwf	UARTstring@data& (0+255),b
 13044  0086F8  0EF8               	movlw	high STR_147
 13045  0086FA  0100               	movlb	0	; () banked
 13046  0086FC  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 13047  0086FE  ECD3  F046         	call	_UARTstring	;wreg free
 13048                           
 13049                           ;Bluetooth.c: 952: timeout = 0;
 13050  008702  0E00               	movlw	0
 13051  008704  0100               	movlb	0	; () banked
 13052  008706  6F82               	movwf	WaitForIRsignal@timeout& (0+255),b
 13053                           
 13054                           ;Bluetooth.c: 953: while(IR_New_Code != 1)
 13055  008708  D027               	goto	l15229
 13056  00870A                     l15215:
 13057                           
 13058                           ; BSR set to: 0
 13059                           ;Bluetooth.c: 954: {
 13060                           ;Bluetooth.c: 955: UARTchar('.');
 13061  00870A  0E2E               	movlw	46
 13062  00870C  ECBF  F049         	call	_UARTchar
 13063                           
 13064                           ;Bluetooth.c: 956: delayUS(300000);
 13065  008710  0EE0               	movlw	224
 13066  008712  0100               	movlb	0	; () banked
 13067  008714  6F79               	movwf	delayUS@US& (0+255),b
 13068  008716  0E93               	movlw	147
 13069  008718  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 13070  00871A  0E04               	movlw	4
 13071  00871C  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 13072  00871E  0E00               	movlw	0
 13073  008720  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 13074  008722  EC57  F047         	call	_delayUS	;wreg free
 13075                           
 13076                           ;Bluetooth.c: 957: timeout++;
 13077  008726  0100               	movlb	0	; () banked
 13078  008728  2B82               	incf	WaitForIRsignal@timeout& (0+255),f,b
 13079                           
 13080                           ; BSR set to: 0
 13081                           ;Bluetooth.c: 958: if(timeout > 25)
 13082  00872A  0E19               	movlw	25
 13083  00872C  0100               	movlb	0	; () banked
 13084  00872E  6582               	cpfsgt	WaitForIRsignal@timeout& (0+255),b
 13085  008730  D013               	goto	l15229
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;Bluetooth.c: 959: {
 13089                           ;Bluetooth.c: 960: UARTstring(CRLN);
 13090  008732  0ED1               	movlw	low _CRLN
 13091  008734  0100               	movlb	0	; () banked
 13092  008736  6F7A               	movwf	UARTstring@data& (0+255),b
 13093  008738  0EF0               	movlw	high _CRLN
 13094  00873A  0100               	movlb	0	; () banked
 13095  00873C  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 13096  00873E  ECD3  F046         	call	_UARTstring	;wreg free
 13097                           
 13098                           ;Bluetooth.c: 961: UARTstringCRLN((unsigned char *)"Error: No remote button was pressed"
      +                          );
 13099  008742  0EED               	movlw	low STR_148
 13100  008744  0100               	movlb	0	; () banked
 13101  008746  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 13102  008748  0EF5               	movlw	high STR_148
 13103  00874A  0100               	movlb	0	; () banked
 13104  00874C  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 13105  00874E  EC78  F045         	call	_UARTstringCRLN	;wreg free
 13106                           
 13107                           ;Bluetooth.c: 962: return 0;
 13108  008752  0E00               	movlw	0
 13109  008754  0012               	return	
 13110  008756  D000               	goto	l15229
 13111  008758                     l15229:
 13112  008758  0100               	movlb	0	; () banked
 13113  00875A  05E5               	decf	_IR_New_Code& (0+255),w,b
 13114  00875C  A4D8               	btfss	status,2,c
 13115  00875E  D7D5               	goto	l15215
 13116                           
 13117                           ; BSR set to: 0
 13118                           ;Bluetooth.c: 963: }
 13119                           ;Bluetooth.c: 964: }
 13120                           ;Bluetooth.c: 965: (LATC |= 0x04);
 13121                           
 13122                           ; BSR set to: 0
 13123  008760  848B               	bsf	3979,2,c	;volatile
 13124                           
 13125                           ; BSR set to: 0
 13126                           ;Bluetooth.c: 966: LEDTimerON();
 13127  008762  EC35  F04A         	call	_LEDTimerON	;wreg free
 13128                           
 13129                           ;Bluetooth.c: 967: return 1;
 13130  008766  0E01               	movlw	1
 13131  008768  0012               	return	
 13132  00876A  0012               	return		;funcret
 13133  00876C                     __end_of_WaitForIRsignal:
 13134                           	opt stack 0
 13135                           tblptru	equ	0xFF8
 13136                           tblptrh	equ	0xFF7
 13137                           tblptrl	equ	0xFF6
 13138                           tablat	equ	0xFF5
 13139                           prodh	equ	0xFF4
 13140                           prodl	equ	0xFF3
 13141                           intcon	equ	0xFF2
 13142                           postinc0	equ	0xFEE
 13143                           wreg	equ	0xFE8
 13144                           postdec1	equ	0xFE5
 13145                           fsr1h	equ	0xFE2
 13146                           fsr1l	equ	0xFE1
 13147                           indf2	equ	0xFDF
 13148                           postinc2	equ	0xFDE
 13149                           fsr2h	equ	0xFDA
 13150                           fsr2l	equ	0xFD9
 13151                           status	equ	0xFD8
 13152                           
 13153 ;; *************** function _UARTstringCRLN *****************
 13154 ;; Defined at:
 13155 ;;		line 262 in file "UART.c"
 13156 ;; Parameters:    Size  Location     Type
 13157 ;;  data            2   28[BANK0 ] PTR unsigned char 
 13158 ;;		 -> STR_148(36), STR_146(27), STR_132(13), STR_101(13), 
 13159 ;;		 -> STR_98(21), STR_91(17), STR_82(29), STR_81(18), 
 13160 ;;		 -> STR_80(29), STR_77(44), STR_72(46), STR_71(42), 
 13161 ;;		 -> STR_70(50), STR_69(50), STR_67(31), STR_66(31), 
 13162 ;;		 -> STR_65(37), STR_64(37), STR_63(37), STR_59(18), 
 13163 ;;		 -> STR_58(14), STR_57(9), STR_56(20), STR_55(16), 
 13164 ;;		 -> STR_54(7), STR_53(35), STR_52(37), STR_49(47), 
 13165 ;;		 -> STR_44(17), STR_43(9), STR_42(18), STR_41(9), 
 13166 ;;		 -> STR_40(22), STR_39(11), STR_38(20), STR_37(7), 
 13167 ;;		 -> STR_36(31), STR_34(33), STR_30(32), STR_26(31), 
 13168 ;;		 -> STR_25(31), STR_23(29), STR_21(29), SYNTAX_ERR(14), 
 13169 ;;		 -> UseBluetooth@buf(100), STR_1(16), 
 13170 ;; Auto vars:     Size  Location     Type
 13171 ;;		None
 13172 ;; Return value:  Size  Location     Type
 13173 ;;		None               void
 13174 ;; Registers used:
 13175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13176 ;; Tracked objects:
 13177 ;;		On entry : 0/0
 13178 ;;		On exit  : 0/0
 13179 ;;		Unchanged: 0/0
 13180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13181 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13184 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13185 ;;Total ram usage:        2 bytes
 13186 ;; Hardware stack levels used:    1
 13187 ;; Hardware stack levels required when called:    8
 13188 ;; This function calls:
 13189 ;;		_UARTchar
 13190 ;;		_UARTstring
 13191 ;; This function is called by:
 13192 ;;		_UseBluetooth
 13193 ;;		_WaitForIRsignal
 13194 ;; This function uses a non-reentrant model
 13195 ;;
 13196                           
 13197                           	psect	text8
 13198  008AF0                     __ptext8:
 13199                           	opt stack 0
 13200  008AF0                     _UARTstringCRLN:
 13201                           	opt stack 20
 13202                           
 13203                           ;UART.c: 264: while(*data != 0)
 13204                           
 13205                           ;incstack = 0
 13206  008AF0  D017               	goto	l13989
 13207  008AF2                     l13985:
 13208                           
 13209                           ;UART.c: 265: {
 13210                           ;UART.c: 266: UARTchar(*data);
 13211  008AF2  C07C  FFF6         	movff	UARTstringCRLN@data,tblptrl
 13212  008AF6  C07D  FFF7         	movff	UARTstringCRLN@data+1,tblptrh
 13213  008AFA  0E00               	movlw	low (__mediumconst shr (0+16))
 13214  008AFC  6EF8               	movwf	tblptru,c
 13215  008AFE  0E0F               	movlw	(high __ramtop+-1)
 13216  008B00  64F7               	cpfsgt	tblptrh,c
 13217  008B02  D003               	bra	u17107
 13218  008B04  0008               	tblrd		*
 13219  008B06  50F5               	movf	tablat,w,c
 13220  008B08  D005               	bra	u17100
 13221  008B0A                     u17107:
 13222  008B0A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13223  008B0E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13224  008B12  50EF               	movf	indf0,w,c
 13225  008B14                     u17100:
 13226  008B14  ECBF  F049         	call	_UARTchar
 13227                           
 13228                           ;UART.c: 267: *data++;
 13229  008B18  0100               	movlb	0	; () banked
 13230  008B1A  4B7C               	infsnz	UARTstringCRLN@data& (0+255),f,b
 13231  008B1C  2B7D               	incf	(UARTstringCRLN@data+1)& (0+255),f,b
 13232  008B1E  D000               	goto	l13989
 13233  008B20                     l13989:
 13234  008B20  C07C  FFF6         	movff	UARTstringCRLN@data,tblptrl
 13235  008B24  C07D  FFF7         	movff	UARTstringCRLN@data+1,tblptrh
 13236  008B28  0E00               	movlw	low (__mediumconst shr (0+16))
 13237  008B2A  6EF8               	movwf	tblptru,c
 13238  008B2C  0E0F               	movlw	(high __ramtop+-1)
 13239  008B2E  64F7               	cpfsgt	tblptrh,c
 13240  008B30  D003               	bra	u17117
 13241  008B32  0008               	tblrd		*
 13242  008B34  50F5               	movf	tablat,w,c
 13243  008B36  D005               	bra	u17110
 13244  008B38                     u17117:
 13245  008B38  CFF6 FFE9          	movff	tblptrl,fsr0l
 13246  008B3C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13247  008B40  50EF               	movf	indf0,w,c
 13248  008B42                     u17110:
 13249  008B42  0900               	iorlw	0
 13250  008B44  A4D8               	btfss	status,2,c
 13251  008B46  D7D5               	goto	l13985
 13252                           
 13253                           ;UART.c: 268: }
 13254                           ;UART.c: 269: UARTstring(CRLN);
 13255  008B48  0ED1               	movlw	low _CRLN
 13256  008B4A  0100               	movlb	0	; () banked
 13257  008B4C  6F7A               	movwf	UARTstring@data& (0+255),b
 13258  008B4E  0EF0               	movlw	high _CRLN
 13259  008B50  0100               	movlb	0	; () banked
 13260  008B52  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 13261  008B54  ECD3  F046         	call	_UARTstring	;wreg free
 13262  008B58  0012               	return		;funcret
 13263  008B5A                     __end_of_UARTstringCRLN:
 13264                           	opt stack 0
 13265                           tblptru	equ	0xFF8
 13266                           tblptrh	equ	0xFF7
 13267                           tblptrl	equ	0xFF6
 13268                           tablat	equ	0xFF5
 13269                           prodh	equ	0xFF4
 13270                           prodl	equ	0xFF3
 13271                           intcon	equ	0xFF2
 13272                           indf0	equ	0xFEF
 13273                           postinc0	equ	0xFEE
 13274                           fsr0h	equ	0xFEA
 13275                           fsr0l	equ	0xFE9
 13276                           wreg	equ	0xFE8
 13277                           postdec1	equ	0xFE5
 13278                           fsr1h	equ	0xFE2
 13279                           fsr1l	equ	0xFE1
 13280                           indf2	equ	0xFDF
 13281                           postinc2	equ	0xFDE
 13282                           fsr2h	equ	0xFDA
 13283                           fsr2l	equ	0xFD9
 13284                           status	equ	0xFD8
 13285                           
 13286 ;; *************** function _UARTcommandMenu *****************
 13287 ;; Defined at:
 13288 ;;		line 277 in file "UART.c"
 13289 ;; Parameters:    Size  Location     Type
 13290 ;;  Command         2   28[BANK0 ] PTR unsigned char 
 13291 ;;		 -> STR_130(5), STR_128(13), STR_126(13), STR_124(13), 
 13292 ;;		 -> STR_122(13), STR_120(13), STR_118(13), STR_116(11), 
 13293 ;;		 -> STR_114(11), STR_112(11), STR_110(11), STR_108(11), 
 13294 ;;		 -> STR_106(11), STR_99(8), STR_96(8), STR_94(6), 
 13295 ;;		 -> STR_92(4), Conf2_ChannelH_3_OFF_STR(21), Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), 
 13296 ;;		 -> Conf2_ChannelH_2_ON_STR(20), Conf2_ChannelH_1_OFF_STR(21), Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(1
      +9), 
 13297 ;;		 -> Conf2_ChannelD_ON_STR(18), Conf2_ChannelB_OFF_STR(19), Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), 
 13298 ;;		 -> Conf1_ChannelE_STR(15), Conf1_ChannelD_STR(15), UseBluetooth@buf(100), 
 13299 ;;  Desc            2   30[BANK0 ] PTR unsigned char 
 13300 ;;		 -> STR_145(32), STR_144(31), STR_143(32), STR_142(31), 
 13301 ;;		 -> STR_141(32), STR_140(31), STR_139(20), STR_138(19), 
 13302 ;;		 -> STR_137(23), STR_136(22), STR_135(19), STR_134(19), 
 13303 ;;		 -> STR_133(19), STR_131(40), STR_129(46), STR_127(46), 
 13304 ;;		 -> STR_125(46), STR_123(46), STR_121(46), STR_119(46), 
 13305 ;;		 -> STR_117(49), STR_115(49), STR_113(49), STR_111(49), 
 13306 ;;		 -> STR_109(49), STR_107(49), STR_105(24), STR_103(25), 
 13307 ;;		 -> STR_100(28), STR_97(26), STR_95(32), STR_93(10), 
 13308 ;; Auto vars:     Size  Location     Type
 13309 ;;  place           1   38[BANK0 ] unsigned char 
 13310 ;;  i               1   37[BANK0 ] unsigned char 
 13311 ;; Return value:  Size  Location     Type
 13312 ;;		None               void
 13313 ;; Registers used:
 13314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13315 ;; Tracked objects:
 13316 ;;		On entry : 0/0
 13317 ;;		On exit  : 0/0
 13318 ;;		Unchanged: 0/0
 13319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13320 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13321 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13322 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13323 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13324 ;;Total ram usage:       11 bytes
 13325 ;; Hardware stack levels used:    1
 13326 ;; Hardware stack levels required when called:    8
 13327 ;; This function calls:
 13328 ;;		_UARTchar
 13329 ;;		_UARTstring
 13330 ;; This function is called by:
 13331 ;;		_UseBluetooth
 13332 ;; This function uses a non-reentrant model
 13333 ;;
 13334                           
 13335                           	psect	text9
 13336  007718                     __ptext9:
 13337                           	opt stack 0
 13338  007718                     _UARTcommandMenu:
 13339                           	opt stack 21
 13340                           
 13341                           ;UART.c: 279: unsigned char place = 0;
 13342                           
 13343                           ;incstack = 0
 13344  007718  0E00               	movlw	0
 13345  00771A  0100               	movlb	0	; () banked
 13346  00771C  6F86               	movwf	UARTcommandMenu@place& (0+255),b
 13347                           
 13348                           ;UART.c: 280: unsigned char i;
 13349                           ;UART.c: 282: while((*Command != 0) && (place < 30))
 13350  00771E  D019               	goto	l15017
 13351  007720                     l15011:
 13352                           
 13353                           ; BSR set to: 0
 13354                           ;UART.c: 283: {
 13355                           ;UART.c: 284: UARTchar(*Command);
 13356  007720  C07C  FFF6         	movff	UARTcommandMenu@Command,tblptrl
 13357  007724  C07D  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
 13358  007728  0E00               	movlw	low (__mediumconst shr (0+16))
 13359  00772A  6EF8               	movwf	tblptru,c
 13360  00772C  0E0F               	movlw	(high __ramtop+-1)
 13361  00772E  64F7               	cpfsgt	tblptrh,c
 13362  007730  D003               	bra	u18647
 13363  007732  0008               	tblrd		*
 13364  007734  50F5               	movf	tablat,w,c
 13365  007736  D005               	bra	u18640
 13366  007738                     u18647:
 13367  007738  CFF6 FFE9          	movff	tblptrl,fsr0l
 13368  00773C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13369  007740  50EF               	movf	indf0,w,c
 13370  007742                     u18640:
 13371  007742  ECBF  F049         	call	_UARTchar
 13372                           
 13373                           ;UART.c: 285: *Command++;
 13374  007746  0100               	movlb	0	; () banked
 13375  007748  4B7C               	infsnz	UARTcommandMenu@Command& (0+255),f,b
 13376  00774A  2B7D               	incf	(UARTcommandMenu@Command+1)& (0+255),f,b
 13377                           
 13378                           ; BSR set to: 0
 13379                           ;UART.c: 286: place++;
 13380  00774C  0100               	movlb	0	; () banked
 13381  00774E  2B86               	incf	UARTcommandMenu@place& (0+255),f,b
 13382  007750  D000               	goto	l15017
 13383  007752                     l15017:
 13384                           
 13385                           ; BSR set to: 0
 13386  007752  C07C  FFF6         	movff	UARTcommandMenu@Command,tblptrl
 13387  007756  C07D  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
 13388  00775A  0E00               	movlw	low (__mediumconst shr (0+16))
 13389  00775C  6EF8               	movwf	tblptru,c
 13390  00775E  0E0F               	movlw	(high __ramtop+-1)
 13391  007760  64F7               	cpfsgt	tblptrh,c
 13392  007762  D003               	bra	u18657
 13393  007764  0008               	tblrd		*
 13394  007766  50F5               	movf	tablat,w,c
 13395  007768  D005               	bra	u18650
 13396  00776A                     u18657:
 13397  00776A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13398  00776E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13399  007772  50EF               	movf	indf0,w,c
 13400  007774                     u18650:
 13401  007774  0900               	iorlw	0
 13402  007776  B4D8               	btfsc	status,2,c
 13403  007778  D005               	goto	l15021
 13404  00777A  0E1D               	movlw	29
 13405  00777C  0100               	movlb	0	; () banked
 13406  00777E  6586               	cpfsgt	UARTcommandMenu@place& (0+255),b
 13407  007780  D7CF               	goto	l15011
 13408                           
 13409                           ; BSR set to: 0
 13410  007782  D000               	goto	l15021
 13411  007784                     l15021:
 13412                           
 13413                           ;UART.c: 287: }
 13414                           ;UART.c: 288: for(i =0; i < ((30 - place) + 1); i++)
 13415  007784  0E00               	movlw	0
 13416  007786  0100               	movlb	0	; () banked
 13417  007788  6F85               	movwf	UARTcommandMenu@i& (0+255),b
 13418  00778A  D006               	goto	l15027
 13419  00778C                     l15023:
 13420                           
 13421                           ; BSR set to: 0
 13422                           ;UART.c: 289: {
 13423                           ;UART.c: 290: UARTchar('-');
 13424  00778C  0E2D               	movlw	45
 13425  00778E  ECBF  F049         	call	_UARTchar
 13426  007792  0100               	movlb	0	; () banked
 13427  007794  2B85               	incf	UARTcommandMenu@i& (0+255),f,b
 13428  007796  D000               	goto	l15027
 13429  007798                     l15027:
 13430                           
 13431                           ; BSR set to: 0
 13432  007798  0100               	movlb	0	; () banked
 13433  00779A  5186               	movf	UARTcommandMenu@place& (0+255),w,b
 13434  00779C  0100               	movlb	0	; () banked
 13435  00779E  6F80               	movwf	??_UARTcommandMenu& (0+255),b
 13436  0077A0  6B81               	clrf	(??_UARTcommandMenu+1)& (0+255),b
 13437  0077A2  0100               	movlb	0	; () banked
 13438  0077A4  1F80               	comf	??_UARTcommandMenu& (0+255),f,b
 13439  0077A6  1F81               	comf	(??_UARTcommandMenu+1)& (0+255),f,b
 13440  0077A8  4B80               	infsnz	??_UARTcommandMenu& (0+255),f,b
 13441  0077AA  2B81               	incf	(??_UARTcommandMenu+1)& (0+255),f,b
 13442  0077AC  0E1F               	movlw	31
 13443  0077AE  0100               	movlb	0	; () banked
 13444  0077B0  2780               	addwf	??_UARTcommandMenu& (0+255),f,b
 13445  0077B2  0E00               	movlw	0
 13446  0077B4  2381               	addwfc	(??_UARTcommandMenu+1)& (0+255),f,b
 13447  0077B6  0100               	movlb	0	; () banked
 13448  0077B8  5185               	movf	UARTcommandMenu@i& (0+255),w,b
 13449  0077BA  0100               	movlb	0	; () banked
 13450  0077BC  6F82               	movwf	(??_UARTcommandMenu+2)& (0+255),b
 13451  0077BE  6B83               	clrf	(??_UARTcommandMenu+3)& (0+255),b
 13452  0077C0  0100               	movlb	0	; () banked
 13453  0077C2  5180               	movf	??_UARTcommandMenu& (0+255),w,b
 13454  0077C4  0100               	movlb	0	; () banked
 13455  0077C6  5D82               	subwf	(??_UARTcommandMenu+2)& (0+255),w,b
 13456  0077C8  0100               	movlb	0	; () banked
 13457  0077CA  5183               	movf	(??_UARTcommandMenu+3)& (0+255),w,b
 13458  0077CC  0A80               	xorlw	128
 13459  0077CE  0100               	movlb	0	; () banked
 13460  0077D0  6F84               	movwf	(??_UARTcommandMenu+4)& (0+255),b
 13461  0077D2  0100               	movlb	0	; () banked
 13462  0077D4  5181               	movf	(??_UARTcommandMenu+1)& (0+255),w,b
 13463  0077D6  0A80               	xorlw	128
 13464  0077D8  0100               	movlb	0	; () banked
 13465  0077DA  5984               	subwfb	(??_UARTcommandMenu+4)& (0+255),w,b
 13466  0077DC  A0D8               	btfss	status,0,c
 13467  0077DE  D7D6               	goto	l15023
 13468                           
 13469                           ; BSR set to: 0
 13470                           ;UART.c: 291: }
 13471                           ;UART.c: 292: place = 0;
 13472                           
 13473                           ; BSR set to: 0
 13474  0077E0  0E00               	movlw	0
 13475  0077E2  0100               	movlb	0	; () banked
 13476  0077E4  6F86               	movwf	UARTcommandMenu@place& (0+255),b
 13477                           
 13478                           ;UART.c: 293: while((*Desc != 0) && (place < (50 - 1)))
 13479  0077E6  D00F               	goto	l15037
 13480  0077E8                     l15031:
 13481                           
 13482                           ; BSR set to: 0
 13483                           ;UART.c: 294: {
 13484                           ;UART.c: 295: UARTchar(*Desc);
 13485  0077E8  C07E  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
 13486  0077EC  C07F  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
 13487  0077F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13488  0077F0  6AF8               	clrf	tblptru,c
 13489  0077F2                     	endif
 13490  0077F2                     	if	0	;tblptru may be non-zero
 13491  0077F2                     	endif
 13492  0077F2  0008               	tblrd		*
 13493  0077F4  50F5               	movf	tablat,w,c
 13494  0077F6  ECBF  F049         	call	_UARTchar
 13495                           
 13496                           ;UART.c: 296: *Desc++;
 13497  0077FA  0100               	movlb	0	; () banked
 13498  0077FC  4B7E               	infsnz	UARTcommandMenu@Desc& (0+255),f,b
 13499  0077FE  2B7F               	incf	(UARTcommandMenu@Desc+1)& (0+255),f,b
 13500                           
 13501                           ; BSR set to: 0
 13502                           ;UART.c: 297: place++;
 13503  007800  0100               	movlb	0	; () banked
 13504  007802  2B86               	incf	UARTcommandMenu@place& (0+255),f,b
 13505  007804  D000               	goto	l15037
 13506  007806                     l15037:
 13507                           
 13508                           ; BSR set to: 0
 13509  007806  C07E  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
 13510  00780A  C07F  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
 13511  00780E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13512  00780E  6AF8               	clrf	tblptru,c
 13513  007810                     	endif
 13514  007810                     	if	0	;tblptru may be non-zero
 13515  007810                     	endif
 13516  007810  0008               	tblrd		*
 13517  007812  50F5               	movf	tablat,w,c
 13518  007814  0900               	iorlw	0
 13519  007816  B4D8               	btfsc	status,2,c
 13520  007818  D005               	goto	l15041
 13521                           
 13522                           ; BSR set to: 0
 13523  00781A  0E30               	movlw	48
 13524  00781C  0100               	movlb	0	; () banked
 13525  00781E  6586               	cpfsgt	UARTcommandMenu@place& (0+255),b
 13526  007820  D7E3               	goto	l15031
 13527                           
 13528                           ; BSR set to: 0
 13529  007822  D000               	goto	l15041
 13530  007824                     l15041:
 13531                           
 13532                           ; BSR set to: 0
 13533                           ;UART.c: 298: }
 13534                           ;UART.c: 299: UARTstring(CRLN);
 13535  007824  0ED1               	movlw	low _CRLN
 13536  007826  0100               	movlb	0	; () banked
 13537  007828  6F7A               	movwf	UARTstring@data& (0+255),b
 13538  00782A  0EF0               	movlw	high _CRLN
 13539  00782C  0100               	movlb	0	; () banked
 13540  00782E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 13541  007830  ECD3  F046         	call	_UARTstring	;wreg free
 13542  007834  0012               	return		;funcret
 13543  007836                     __end_of_UARTcommandMenu:
 13544                           	opt stack 0
 13545                           tblptru	equ	0xFF8
 13546                           tblptrh	equ	0xFF7
 13547                           tblptrl	equ	0xFF6
 13548                           tablat	equ	0xFF5
 13549                           prodh	equ	0xFF4
 13550                           prodl	equ	0xFF3
 13551                           intcon	equ	0xFF2
 13552                           indf0	equ	0xFEF
 13553                           postinc0	equ	0xFEE
 13554                           fsr0h	equ	0xFEA
 13555                           fsr0l	equ	0xFE9
 13556                           wreg	equ	0xFE8
 13557                           postdec1	equ	0xFE5
 13558                           fsr1h	equ	0xFE2
 13559                           fsr1l	equ	0xFE1
 13560                           indf2	equ	0xFDF
 13561                           postinc2	equ	0xFDE
 13562                           fsr2h	equ	0xFDA
 13563                           fsr2l	equ	0xFD9
 13564                           status	equ	0xFD8
 13565                           
 13566 ;; *************** function _StringMatchCaseInsensitive *****************
 13567 ;; Defined at:
 13568 ;;		line 217 in file "MISC.c"
 13569 ;; Parameters:    Size  Location     Type
 13570 ;;  This            2   28[BANK0 ] PTR unsigned char 
 13571 ;;		 -> main@BluetoothString(255), 
 13572 ;;  That            2   30[BANK0 ] PTR const unsigned char 
 13573 ;;		 -> STR_85(8), STR_83(8), STR_78(6), Conf2_ChannelH_3_OFF_STR(21), 
 13574 ;;		 -> Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), Conf2_ChannelH_2_ON_STR(20), Conf2_ChannelH_1_OFF_STR
      +(21), 
 13575 ;;		 -> Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(19), Conf2_ChannelD_ON_STR(18), Conf2_ChannelB_OFF_STR(19), 
 13576 ;;		 -> Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), Conf1_ChannelE_STR(15), Conf1_ChannelD_STR(15), 
 13577 ;; Auto vars:     Size  Location     Type
 13578 ;;  tempThat        1   33[BANK0 ] unsigned char 
 13579 ;;  tempThis        1   32[BANK0 ] unsigned char 
 13580 ;; Return value:  Size  Location     Type
 13581 ;;                  1    wreg      unsigned char 
 13582 ;; Registers used:
 13583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13584 ;; Tracked objects:
 13585 ;;		On entry : 0/0
 13586 ;;		On exit  : 0/0
 13587 ;;		Unchanged: 0/0
 13588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13589 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13590 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13592 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13593 ;;Total ram usage:        6 bytes
 13594 ;; Hardware stack levels used:    1
 13595 ;; Hardware stack levels required when called:    7
 13596 ;; This function calls:
 13597 ;;		_lowercaseChar
 13598 ;; This function is called by:
 13599 ;;		_UseBluetooth
 13600 ;; This function uses a non-reentrant model
 13601 ;;
 13602                           
 13603                           	psect	text10
 13604  008648                     __ptext10:
 13605                           	opt stack 0
 13606  008648                     _StringMatchCaseInsensitive:
 13607                           	opt stack 22
 13608                           
 13609                           ;MISC.c: 219: unsigned char tempThis,
 13610                           ;MISC.c: 220: tempThat;
 13611                           ;MISC.c: 222: while(*This != 0)
 13612                           
 13613                           ;incstack = 0
 13614  008648  D033               	goto	l14641
 13615  00864A                     l14623:
 13616                           
 13617                           ;MISC.c: 223: {
 13618                           ;MISC.c: 224: tempThis = *This;
 13619  00864A  C07C  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
 13620  00864E  C07D  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
 13621  008652  50DF               	movf	indf2,w,c
 13622  008654  0100               	movlb	0	; () banked
 13623  008656  6F80               	movwf	StringMatchCaseInsensitive@tempThis& (0+255),b
 13624                           
 13625                           ; BSR set to: 0
 13626                           ;MISC.c: 225: tempThat = *That;
 13627  008658  C07E  FFF6         	movff	StringMatchCaseInsensitive@That,tblptrl
 13628  00865C  C07F  FFF7         	movff	StringMatchCaseInsensitive@That+1,tblptrh
 13629  008660                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13630  008660  6AF8               	clrf	tblptru,c
 13631  008662                     	endif
 13632  008662                     	if	0	;tblptru may be non-zero
 13633  008662                     	endif
 13634  008662  0008               	tblrd		*
 13635  008664  CFF5 F081          	movff	tablat,StringMatchCaseInsensitive@tempThat
 13636                           
 13637                           ; BSR set to: 0
 13638                           ;MISC.c: 226: lowercaseChar(&tempThis);
 13639  008668  0E80               	movlw	low StringMatchCaseInsensitive@tempThis
 13640  00866A  0100               	movlb	0	; () banked
 13641  00866C  6F79               	movwf	lowercaseChar@Input& (0+255),b
 13642  00866E  0E00               	movlw	high StringMatchCaseInsensitive@tempThis
 13643  008670  0100               	movlb	0	; () banked
 13644  008672  6F7A               	movwf	(lowercaseChar@Input+1)& (0+255),b
 13645  008674  EC71  F049         	call	_lowercaseChar	;wreg free
 13646                           
 13647                           ;MISC.c: 227: lowercaseChar(&tempThat);
 13648  008678  0E81               	movlw	low StringMatchCaseInsensitive@tempThat
 13649  00867A  0100               	movlb	0	; () banked
 13650  00867C  6F79               	movwf	lowercaseChar@Input& (0+255),b
 13651  00867E  0E00               	movlw	high StringMatchCaseInsensitive@tempThat
 13652  008680  0100               	movlb	0	; () banked
 13653  008682  6F7A               	movwf	(lowercaseChar@Input+1)& (0+255),b
 13654  008684  EC71  F049         	call	_lowercaseChar	;wreg free
 13655                           
 13656                           ;MISC.c: 229: if((tempThis != tempThat) || (tempThat == 0))
 13657  008688  0100               	movlb	0	; () banked
 13658  00868A  5181               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
 13659  00868C  0100               	movlb	0	; () banked
 13660  00868E  1980               	xorwf	StringMatchCaseInsensitive@tempThis& (0+255),w,b
 13661  008690  A4D8               	btfss	status,2,c
 13662  008692  D005               	goto	l14635
 13663                           
 13664                           ; BSR set to: 0
 13665  008694  0100               	movlb	0	; () banked
 13666  008696  5181               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
 13667  008698  0100               	movlb	0	; () banked
 13668  00869A  A4D8               	btfss	status,2,c
 13669  00869C  D002               	goto	l14639
 13670  00869E                     l14635:
 13671                           
 13672                           ; BSR set to: 0
 13673                           ;MISC.c: 230: {
 13674                           ;MISC.c: 231: return 0;
 13675  00869E  0E00               	movlw	0
 13676                           
 13677                           ; BSR set to: 0
 13678  0086A0  0012               	return	
 13679  0086A2                     l14639:
 13680                           
 13681                           ; BSR set to: 0
 13682                           ;MISC.c: 232: }
 13683                           ;MISC.c: 233: This++;
 13684  0086A2  0100               	movlb	0	; () banked
 13685  0086A4  4B7C               	infsnz	StringMatchCaseInsensitive@This& (0+255),f,b
 13686  0086A6  2B7D               	incf	(StringMatchCaseInsensitive@This+1)& (0+255),f,b
 13687                           
 13688                           ;MISC.c: 234: That++;
 13689  0086A8  0100               	movlb	0	; () banked
 13690  0086AA  4B7E               	infsnz	StringMatchCaseInsensitive@That& (0+255),f,b
 13691  0086AC  2B7F               	incf	(StringMatchCaseInsensitive@That+1)& (0+255),f,b
 13692  0086AE  D000               	goto	l14641
 13693  0086B0                     l14641:
 13694  0086B0  C07C  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
 13695  0086B4  C07D  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
 13696  0086B8  50DF               	movf	indf2,w,c
 13697  0086BA  A4D8               	btfss	status,2,c
 13698  0086BC  D7C6               	goto	l14623
 13699                           
 13700                           ;MISC.c: 235: }
 13701                           ;MISC.c: 236: if(*That == 0)
 13702  0086BE  C07E  FFF6         	movff	StringMatchCaseInsensitive@That,tblptrl
 13703  0086C2  C07F  FFF7         	movff	StringMatchCaseInsensitive@That+1,tblptrh
 13704  0086C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13705  0086C6  6AF8               	clrf	tblptru,c
 13706  0086C8                     	endif
 13707  0086C8                     	if	0	;tblptru may be non-zero
 13708  0086C8                     	endif
 13709  0086C8  0008               	tblrd		*
 13710  0086CA  50F5               	movf	tablat,w,c
 13711  0086CC  0900               	iorlw	0
 13712  0086CE  A4D8               	btfss	status,2,c
 13713  0086D0  D002               	goto	l14651
 13714                           
 13715                           ;MISC.c: 237: {
 13716                           ;MISC.c: 238: return 1;
 13717  0086D2  0E01               	movlw	1
 13718                           
 13719                           ;MISC.c: 239: }
 13720  0086D4  0012               	return	
 13721  0086D6                     l14651:
 13722                           
 13723                           ;MISC.c: 240: else
 13724                           ;MISC.c: 241: {
 13725                           ;MISC.c: 242: return 0;
 13726  0086D6  0E00               	movlw	0
 13727  0086D8  0012               	return	
 13728  0086DA  0012               	return		;funcret
 13729  0086DC                     __end_of_StringMatchCaseInsensitive:
 13730                           	opt stack 0
 13731                           tblptru	equ	0xFF8
 13732                           tblptrh	equ	0xFF7
 13733                           tblptrl	equ	0xFF6
 13734                           tablat	equ	0xFF5
 13735                           prodh	equ	0xFF4
 13736                           prodl	equ	0xFF3
 13737                           intcon	equ	0xFF2
 13738                           indf0	equ	0xFEF
 13739                           postinc0	equ	0xFEE
 13740                           fsr0h	equ	0xFEA
 13741                           fsr0l	equ	0xFE9
 13742                           wreg	equ	0xFE8
 13743                           postdec1	equ	0xFE5
 13744                           fsr1h	equ	0xFE2
 13745                           fsr1l	equ	0xFE1
 13746                           indf2	equ	0xFDF
 13747                           postinc2	equ	0xFDE
 13748                           fsr2h	equ	0xFDA
 13749                           fsr2l	equ	0xFD9
 13750                           status	equ	0xFD8
 13751                           
 13752 ;; *************** function _StringMatch *****************
 13753 ;; Defined at:
 13754 ;;		line 190 in file "MISC.c"
 13755 ;; Parameters:    Size  Location     Type
 13756 ;;  This            2   25[BANK0 ] PTR unsigned char 
 13757 ;;		 -> main@BluetoothString(255), 
 13758 ;;  That            2   27[BANK0 ] PTR const unsigned char 
 13759 ;;		 -> STR_89(4), 
 13760 ;; Auto vars:     Size  Location     Type
 13761 ;;		None
 13762 ;; Return value:  Size  Location     Type
 13763 ;;                  1    wreg      unsigned char 
 13764 ;; Registers used:
 13765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13766 ;; Tracked objects:
 13767 ;;		On entry : 0/0
 13768 ;;		On exit  : 0/0
 13769 ;;		Unchanged: 0/0
 13770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13771 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13773 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13774 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13775 ;;Total ram usage:        5 bytes
 13776 ;; Hardware stack levels used:    1
 13777 ;; Hardware stack levels required when called:    6
 13778 ;; This function calls:
 13779 ;;		Nothing
 13780 ;; This function is called by:
 13781 ;;		_UseBluetooth
 13782 ;; This function uses a non-reentrant model
 13783 ;;
 13784                           
 13785                           	psect	text11
 13786  008A78                     __ptext11:
 13787                           	opt stack 0
 13788  008A78                     _StringMatch:
 13789                           	opt stack 23
 13790                           
 13791                           ;MISC.c: 192: while(*This != 0)
 13792                           
 13793                           ;incstack = 0
 13794  008A78  D025               	goto	l14607
 13795  008A7A                     l14597:
 13796                           
 13797                           ;MISC.c: 193: {
 13798                           ;MISC.c: 194: if(*This != *That || *That == 0)
 13799  008A7A  C079  FFD9         	movff	StringMatch@This,fsr2l
 13800  008A7E  C07A  FFDA         	movff	StringMatch@This+1,fsr2h
 13801  008A82  50DF               	movf	indf2,w,c
 13802  008A84  0100               	movlb	0	; () banked
 13803  008A86  6F7D               	movwf	??_StringMatch& (0+255),b
 13804  008A88  C07B  FFF6         	movff	StringMatch@That,tblptrl
 13805  008A8C  C07C  FFF7         	movff	StringMatch@That+1,tblptrh
 13806  008A90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13807  008A90  6AF8               	clrf	tblptru,c
 13808  008A92                     	endif
 13809  008A92                     	if	0	;tblptru may be non-zero
 13810  008A92                     	endif
 13811  008A92  0008               	tblrd		*
 13812  008A94  50F5               	movf	tablat,w,c
 13813  008A96  0100               	movlb	0	; () banked
 13814  008A98  197D               	xorwf	??_StringMatch& (0+255),w,b
 13815  008A9A  A4D8               	btfss	status,2,c
 13816  008A9C  D00A               	goto	l14601
 13817                           
 13818                           ; BSR set to: 0
 13819  008A9E  C07B  FFF6         	movff	StringMatch@That,tblptrl
 13820  008AA2  C07C  FFF7         	movff	StringMatch@That+1,tblptrh
 13821  008AA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13822  008AA6  6AF8               	clrf	tblptru,c
 13823  008AA8                     	endif
 13824  008AA8                     	if	0	;tblptru may be non-zero
 13825  008AA8                     	endif
 13826  008AA8  0008               	tblrd		*
 13827  008AAA  50F5               	movf	tablat,w,c
 13828  008AAC  0900               	iorlw	0
 13829  008AAE  A4D8               	btfss	status,2,c
 13830  008AB0  D002               	goto	l14605
 13831  008AB2                     l14601:
 13832                           
 13833                           ; BSR set to: 0
 13834                           ;MISC.c: 195: {
 13835                           ;MISC.c: 196: return 0;
 13836  008AB2  0E00               	movlw	0
 13837                           
 13838                           ; BSR set to: 0
 13839  008AB4  0012               	return	
 13840  008AB6                     l14605:
 13841                           
 13842                           ; BSR set to: 0
 13843                           ;MISC.c: 197: }
 13844                           ;MISC.c: 198: This++;
 13845  008AB6  0100               	movlb	0	; () banked
 13846  008AB8  4B79               	infsnz	StringMatch@This& (0+255),f,b
 13847  008ABA  2B7A               	incf	(StringMatch@This+1)& (0+255),f,b
 13848                           
 13849                           ;MISC.c: 199: That++;
 13850  008ABC  0100               	movlb	0	; () banked
 13851  008ABE  4B7B               	infsnz	StringMatch@That& (0+255),f,b
 13852  008AC0  2B7C               	incf	(StringMatch@That+1)& (0+255),f,b
 13853  008AC2  D000               	goto	l14607
 13854  008AC4                     l14607:
 13855  008AC4  C079  FFD9         	movff	StringMatch@This,fsr2l
 13856  008AC8  C07A  FFDA         	movff	StringMatch@This+1,fsr2h
 13857  008ACC  50DF               	movf	indf2,w,c
 13858  008ACE  A4D8               	btfss	status,2,c
 13859  008AD0  D7D4               	goto	l14597
 13860                           
 13861                           ;MISC.c: 200: }
 13862                           ;MISC.c: 201: if(*That == 0)
 13863  008AD2  C07B  FFF6         	movff	StringMatch@That,tblptrl
 13864  008AD6  C07C  FFF7         	movff	StringMatch@That+1,tblptrh
 13865  008ADA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13866  008ADA  6AF8               	clrf	tblptru,c
 13867  008ADC                     	endif
 13868  008ADC                     	if	0	;tblptru may be non-zero
 13869  008ADC                     	endif
 13870  008ADC  0008               	tblrd		*
 13871  008ADE  50F5               	movf	tablat,w,c
 13872  008AE0  0900               	iorlw	0
 13873  008AE2  A4D8               	btfss	status,2,c
 13874  008AE4  D002               	goto	l14617
 13875                           
 13876                           ;MISC.c: 202: {
 13877                           ;MISC.c: 203: return 1;
 13878  008AE6  0E01               	movlw	1
 13879                           
 13880                           ;MISC.c: 204: }
 13881  008AE8  0012               	return	
 13882  008AEA                     l14617:
 13883                           
 13884                           ;MISC.c: 205: else
 13885                           ;MISC.c: 206: {
 13886                           ;MISC.c: 207: return 0;
 13887  008AEA  0E00               	movlw	0
 13888  008AEC  0012               	return	
 13889  008AEE  0012               	return		;funcret
 13890  008AF0                     __end_of_StringMatch:
 13891                           	opt stack 0
 13892                           tblptru	equ	0xFF8
 13893                           tblptrh	equ	0xFF7
 13894                           tblptrl	equ	0xFF6
 13895                           tablat	equ	0xFF5
 13896                           prodh	equ	0xFF4
 13897                           prodl	equ	0xFF3
 13898                           intcon	equ	0xFF2
 13899                           indf0	equ	0xFEF
 13900                           postinc0	equ	0xFEE
 13901                           fsr0h	equ	0xFEA
 13902                           fsr0l	equ	0xFE9
 13903                           wreg	equ	0xFE8
 13904                           postdec1	equ	0xFE5
 13905                           fsr1h	equ	0xFE2
 13906                           fsr1l	equ	0xFE1
 13907                           indf2	equ	0xFDF
 13908                           postinc2	equ	0xFDE
 13909                           fsr2h	equ	0xFDA
 13910                           fsr2l	equ	0xFD9
 13911                           status	equ	0xFD8
 13912                           
 13913 ;; *************** function _StringContainsCaseInsensitive *****************
 13914 ;; Defined at:
 13915 ;;		line 289 in file "MISC.c"
 13916 ;; Parameters:    Size  Location     Type
 13917 ;;  This            2   28[BANK0 ] PTR unsigned char 
 13918 ;;		 -> Conf2_Channels(4), Conf1_Channels(4), main@BluetoothString(255), 
 13919 ;;  That            2   30[BANK0 ] PTR const unsigned char 
 13920 ;;		 -> STR_62(7), STR_61(9), STR_60(7), STR_46(4), 
 13921 ;;		 -> STR_45(13), STR_24(4), STR_22(6), STR_20(6), 
 13922 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 13923 ;; Auto vars:     Size  Location     Type
 13924 ;;  tempThat        1   34[BANK0 ] unsigned char 
 13925 ;;  tempThis        1   33[BANK0 ] unsigned char 
 13926 ;;  begin           1   32[BANK0 ] unsigned char 
 13927 ;; Return value:  Size  Location     Type
 13928 ;;                  1    wreg      unsigned char 
 13929 ;; Registers used:
 13930 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13931 ;; Tracked objects:
 13932 ;;		On entry : 0/0
 13933 ;;		On exit  : 0/0
 13934 ;;		Unchanged: 0/0
 13935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13936 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13937 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13939 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13940 ;;Total ram usage:        7 bytes
 13941 ;; Hardware stack levels used:    1
 13942 ;; Hardware stack levels required when called:    7
 13943 ;; This function calls:
 13944 ;;		_lowercaseChar
 13945 ;; This function is called by:
 13946 ;;		_UseBluetooth
 13947 ;; This function uses a non-reentrant model
 13948 ;;
 13949                           
 13950                           	psect	text12
 13951  0074D2                     __ptext12:
 13952                           	opt stack 0
 13953  0074D2                     _StringContainsCaseInsensitive:
 13954                           	opt stack 22
 13955                           
 13956                           ;MISC.c: 291: unsigned char tempThis,
 13957                           ;MISC.c: 292: tempThat;
 13958                           ;MISC.c: 293: unsigned char begin = 0;
 13959                           
 13960                           ;incstack = 0
 13961  0074D2  0E00               	movlw	0
 13962  0074D4  0100               	movlb	0	; () banked
 13963  0074D6  6F80               	movwf	StringContainsCaseInsensitive@begin& (0+255),b
 13964                           
 13965                           ;MISC.c: 295: while(*This != 0)
 13966  0074D8  D078               	goto	l14689
 13967  0074DA                     l14657:
 13968                           
 13969                           ;MISC.c: 296: {
 13970                           ;MISC.c: 297: tempThis = *This;
 13971  0074DA  C07C  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 13972  0074DE  C07D  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 13973  0074E2  0E00               	movlw	low (__mediumconst shr (0+16))
 13974  0074E4  6EF8               	movwf	tblptru,c
 13975  0074E6  0E0F               	movlw	(high __ramtop+-1)
 13976  0074E8  64F7               	cpfsgt	tblptrh,c
 13977  0074EA  D003               	bra	u17877
 13978  0074EC  0008               	tblrd		*
 13979  0074EE  50F5               	movf	tablat,w,c
 13980  0074F0  D005               	bra	u17870
 13981  0074F2                     u17877:
 13982  0074F2  CFF6 FFE9          	movff	tblptrl,fsr0l
 13983  0074F6  CFF7 FFEA          	movff	tblptrh,fsr0h
 13984  0074FA  50EF               	movf	indf0,w,c
 13985  0074FC                     u17870:
 13986  0074FC  0100               	movlb	0	; () banked
 13987  0074FE  6F81               	movwf	StringContainsCaseInsensitive@tempThis& (0+255),b
 13988                           
 13989                           ;MISC.c: 298: tempThat = *That;
 13990  007500  C07E  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
 13991  007504  C07F  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
 13992  007508  0E00               	movlw	low (__mediumconst shr (0+16))
 13993  00750A  6EF8               	movwf	tblptru,c
 13994  00750C  0E0F               	movlw	(high __ramtop+-1)
 13995  00750E  64F7               	cpfsgt	tblptrh,c
 13996  007510  D003               	bra	u17887
 13997  007512  0008               	tblrd		*
 13998  007514  50F5               	movf	tablat,w,c
 13999  007516  D005               	bra	u17880
 14000  007518                     u17887:
 14001  007518  CFF6 FFE9          	movff	tblptrl,fsr0l
 14002  00751C  CFF7 FFEA          	movff	tblptrh,fsr0h
 14003  007520  50EF               	movf	indf0,w,c
 14004  007522                     u17880:
 14005  007522  0100               	movlb	0	; () banked
 14006  007524  6F82               	movwf	StringContainsCaseInsensitive@tempThat& (0+255),b
 14007                           
 14008                           ; BSR set to: 0
 14009                           ;MISC.c: 299: lowercaseChar(&tempThis);
 14010  007526  0E81               	movlw	low StringContainsCaseInsensitive@tempThis
 14011  007528  0100               	movlb	0	; () banked
 14012  00752A  6F79               	movwf	lowercaseChar@Input& (0+255),b
 14013  00752C  0E00               	movlw	high StringContainsCaseInsensitive@tempThis
 14014  00752E  0100               	movlb	0	; () banked
 14015  007530  6F7A               	movwf	(lowercaseChar@Input+1)& (0+255),b
 14016  007532  EC71  F049         	call	_lowercaseChar	;wreg free
 14017                           
 14018                           ;MISC.c: 300: lowercaseChar(&tempThat);
 14019  007536  0E82               	movlw	low StringContainsCaseInsensitive@tempThat
 14020  007538  0100               	movlb	0	; () banked
 14021  00753A  6F79               	movwf	lowercaseChar@Input& (0+255),b
 14022  00753C  0E00               	movlw	high StringContainsCaseInsensitive@tempThat
 14023  00753E  0100               	movlb	0	; () banked
 14024  007540  6F7A               	movwf	(lowercaseChar@Input+1)& (0+255),b
 14025  007542  EC71  F049         	call	_lowercaseChar	;wreg free
 14026                           
 14027                           ;MISC.c: 302: if(tempThis == tempThat)
 14028  007546  0100               	movlb	0	; () banked
 14029  007548  5182               	movf	StringContainsCaseInsensitive@tempThat& (0+255),w,b
 14030  00754A  0100               	movlb	0	; () banked
 14031  00754C  1981               	xorwf	StringContainsCaseInsensitive@tempThis& (0+255),w,b
 14032  00754E  A4D8               	btfss	status,2,c
 14033  007550  D033               	goto	l14681
 14034                           
 14035                           ; BSR set to: 0
 14036                           ;MISC.c: 303: {
 14037                           ;MISC.c: 304: begin = 1;
 14038  007552  0E01               	movlw	1
 14039  007554  0100               	movlb	0	; () banked
 14040  007556  6F80               	movwf	StringContainsCaseInsensitive@begin& (0+255),b
 14041                           
 14042                           ; BSR set to: 0
 14043                           ;MISC.c: 305: That++;
 14044  007558  0100               	movlb	0	; () banked
 14045  00755A  4B7E               	infsnz	StringContainsCaseInsensitive@That& (0+255),f,b
 14046  00755C  2B7F               	incf	(StringContainsCaseInsensitive@That+1)& (0+255),f,b
 14047                           
 14048                           ; BSR set to: 0
 14049                           ;MISC.c: 306: if(*That == 0)
 14050  00755E  C07E  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
 14051  007562  C07F  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
 14052  007566  0E00               	movlw	low (__mediumconst shr (0+16))
 14053  007568  6EF8               	movwf	tblptru,c
 14054  00756A  0E0F               	movlw	(high __ramtop+-1)
 14055  00756C  64F7               	cpfsgt	tblptrh,c
 14056  00756E  D003               	bra	u17907
 14057  007570  0008               	tblrd		*
 14058  007572  50F5               	movf	tablat,w,c
 14059  007574  D005               	bra	u17900
 14060  007576                     u17907:
 14061  007576  CFF6 FFE9          	movff	tblptrl,fsr0l
 14062  00757A  CFF7 FFEA          	movff	tblptrh,fsr0h
 14063  00757E  50EF               	movf	indf0,w,c
 14064  007580                     u17900:
 14065  007580  0900               	iorlw	0
 14066  007582  A4D8               	btfss	status,2,c
 14067  007584  D002               	goto	l14675
 14068                           
 14069                           ;MISC.c: 307: {
 14070                           ;MISC.c: 308: return 1;
 14071  007586  0E01               	movlw	1
 14072  007588  0012               	return	
 14073  00758A                     l14675:
 14074                           
 14075                           ;MISC.c: 309: }
 14076                           ;MISC.c: 310: if(*This == 0)
 14077  00758A  C07C  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 14078  00758E  C07D  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 14079  007592  0E00               	movlw	low (__mediumconst shr (0+16))
 14080  007594  6EF8               	movwf	tblptru,c
 14081  007596  0E0F               	movlw	(high __ramtop+-1)
 14082  007598  64F7               	cpfsgt	tblptrh,c
 14083  00759A  D003               	bra	u17927
 14084  00759C  0008               	tblrd		*
 14085  00759E  50F5               	movf	tablat,w,c
 14086  0075A0  D005               	bra	u17920
 14087  0075A2                     u17927:
 14088  0075A2  CFF6 FFE9          	movff	tblptrl,fsr0l
 14089  0075A6  CFF7 FFEA          	movff	tblptrh,fsr0h
 14090  0075AA  50EF               	movf	indf0,w,c
 14091  0075AC                     u17920:
 14092  0075AC  0900               	iorlw	0
 14093  0075AE  A4D8               	btfss	status,2,c
 14094  0075B0  D008               	goto	l14687
 14095                           
 14096                           ;MISC.c: 311: {
 14097                           ;MISC.c: 312: return 0;
 14098  0075B2  0E00               	movlw	0
 14099  0075B4  0012               	return	
 14100                           
 14101                           ;MISC.c: 313: }
 14102                           ;MISC.c: 314: }
 14103  0075B6  D005               	goto	l14687
 14104  0075B8                     l14681:
 14105                           
 14106                           ;MISC.c: 315: else
 14107                           ;MISC.c: 316: {
 14108                           ;MISC.c: 317: if(begin == 1)
 14109  0075B8  0100               	movlb	0	; () banked
 14110  0075BA  0580               	decf	StringContainsCaseInsensitive@begin& (0+255),w,b
 14111  0075BC  D7F8               	goto	L11
 14112                           
 14113                           ; BSR set to: 0
 14114                           
 14115                           ; BSR set to: 0
 14116                           ;MISC.c: 318: {
 14117                           ;MISC.c: 319: return 0;
 14118  0075BE  0012               	return	
 14119                           
 14120                           ; BSR set to: 0
 14121  0075C0  D000               	goto	l14687
 14122  0075C2                     l14687:
 14123                           
 14124                           ;MISC.c: 320: }
 14125                           ;MISC.c: 321: }
 14126                           ;MISC.c: 322: This++;
 14127  0075C2  0100               	movlb	0	; () banked
 14128  0075C4  4B7C               	infsnz	StringContainsCaseInsensitive@This& (0+255),f,b
 14129  0075C6  2B7D               	incf	(StringContainsCaseInsensitive@This+1)& (0+255),f,b
 14130  0075C8  D000               	goto	l14689
 14131  0075CA                     l14689:
 14132                           
 14133                           ; BSR set to: 0
 14134  0075CA  C07C  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 14135  0075CE  C07D  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 14136  0075D2  0E00               	movlw	low (__mediumconst shr (0+16))
 14137  0075D4  6EF8               	movwf	tblptru,c
 14138  0075D6  0E0F               	movlw	(high __ramtop+-1)
 14139  0075D8  64F7               	cpfsgt	tblptrh,c
 14140  0075DA  D003               	bra	u17957
 14141  0075DC  0008               	tblrd		*
 14142  0075DE  50F5               	movf	tablat,w,c
 14143  0075E0  D005               	bra	u17950
 14144  0075E2                     u17957:
 14145  0075E2  CFF6 FFE9          	movff	tblptrl,fsr0l
 14146  0075E6  CFF7 FFEA          	movff	tblptrh,fsr0h
 14147  0075EA  50EF               	movf	indf0,w,c
 14148  0075EC                     u17950:
 14149  0075EC  0900               	iorlw	0
 14150  0075EE  A4D8               	btfss	status,2,c
 14151  0075F0  D774               	goto	l14657
 14152                           
 14153                           ;MISC.c: 323: }
 14154                           ;MISC.c: 324: return 0;
 14155  0075F2  0E00               	movlw	0
 14156  0075F4  0012               	return	
 14157  0075F6  0012               	return		;funcret
 14158  0075F8                     __end_of_StringContainsCaseInsensitive:
 14159                           	opt stack 0
 14160                           tblptru	equ	0xFF8
 14161                           tblptrh	equ	0xFF7
 14162                           tblptrl	equ	0xFF6
 14163                           tablat	equ	0xFF5
 14164                           prodh	equ	0xFF4
 14165                           prodl	equ	0xFF3
 14166                           intcon	equ	0xFF2
 14167                           indf0	equ	0xFEF
 14168                           postinc0	equ	0xFEE
 14169                           fsr0h	equ	0xFEA
 14170                           fsr0l	equ	0xFE9
 14171                           wreg	equ	0xFE8
 14172                           postdec1	equ	0xFE5
 14173                           fsr1h	equ	0xFE2
 14174                           fsr1l	equ	0xFE1
 14175                           indf2	equ	0xFDF
 14176                           postinc2	equ	0xFDE
 14177                           fsr2h	equ	0xFDA
 14178                           fsr2l	equ	0xFD9
 14179                           status	equ	0xFD8
 14180                           
 14181 ;; *************** function _StringAddEqual *****************
 14182 ;; Defined at:
 14183 ;;		line 591 in file "MISC.c"
 14184 ;; Parameters:    Size  Location     Type
 14185 ;;  Input           2   40[BANK0 ] PTR unsigned char 
 14186 ;;		 -> main@BluetoothString(255), 
 14187 ;; Auto vars:     Size  Location     Type
 14188 ;;  temp          255    0[BANK1 ] unsigned char [255]
 14189 ;;  j               1   47[BANK0 ] unsigned char 
 14190 ;;  i               1   46[BANK0 ] unsigned char 
 14191 ;;  firstnumber     1   45[BANK0 ] unsigned char 
 14192 ;;  NullPosition    1   44[BANK0 ] unsigned char 
 14193 ;; Return value:  Size  Location     Type
 14194 ;;                  1    wreg      unsigned char 
 14195 ;; Registers used:
 14196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14197 ;; Tracked objects:
 14198 ;;		On entry : 0/0
 14199 ;;		On exit  : 0/0
 14200 ;;		Unchanged: 0/0
 14201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14202 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14203 ;;      Locals:         0       4     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14204 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14205 ;;      Totals:         0       8     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14206 ;;Total ram usage:      263 bytes
 14207 ;; Hardware stack levels used:    1
 14208 ;; Hardware stack levels required when called:    8
 14209 ;; This function calls:
 14210 ;;		_BufferCopy
 14211 ;;		_cleanBuffer
 14212 ;; This function is called by:
 14213 ;;		_UseBluetooth
 14214 ;; This function uses a non-reentrant model
 14215 ;;
 14216                           
 14217                           	psect	text13
 14218  00625A                     __ptext13:
 14219                           	opt stack 0
 14220  00625A                     _StringAddEqual:
 14221                           	opt stack 21
 14222                           
 14223                           ;MISC.c: 593: unsigned char i;
 14224                           ;MISC.c: 594: unsigned char j =0;
 14225                           
 14226                           ;incstack = 0
 14227  00625A  0E00               	movlw	0
 14228  00625C  0100               	movlb	0	; () banked
 14229  00625E  6F8F               	movwf	StringAddEqual@j& (0+255),b
 14230                           
 14231                           ; BSR set to: 0
 14232                           ;MISC.c: 595: unsigned char firstnumber = 255;
 14233  006260  0100               	movlb	0	; () banked
 14234  006262  698D               	setf	StringAddEqual@firstnumber& (0+255),b
 14235                           
 14236                           ;MISC.c: 596: unsigned char temp[255];
 14237                           ;MISC.c: 597: unsigned char NullPosition;
 14238                           ;MISC.c: 598: for(i = 0; i<255; i++)
 14239  006264  0E00               	movlw	0
 14240  006266  0100               	movlb	0	; () banked
 14241  006268  6F8E               	movwf	StringAddEqual@i& (0+255),b
 14242  00626A                     l14877:
 14243                           
 14244                           ; BSR set to: 0
 14245  00626A  0100               	movlb	0	; () banked
 14246  00626C  298E               	incf	StringAddEqual@i& (0+255),w,b
 14247  00626E  B4D8               	btfsc	status,2,c
 14248  006270  D012               	goto	l14889
 14249  006272  D001               	goto	l14881
 14250                           
 14251                           ; BSR set to: 0
 14252  006274  D010               	goto	l14889
 14253  006276                     l14881:
 14254                           
 14255                           ; BSR set to: 0
 14256                           ;MISC.c: 599: {
 14257                           ;MISC.c: 600: if(*Input == 0)
 14258  006276  C088  FFD9         	movff	StringAddEqual@Input,fsr2l
 14259  00627A  C089  FFDA         	movff	StringAddEqual@Input+1,fsr2h
 14260  00627E  50DF               	movf	indf2,w,c
 14261  006280  A4D8               	btfss	status,2,c
 14262  006282  D003               	goto	l14885
 14263                           
 14264                           ; BSR set to: 0
 14265                           ;MISC.c: 601: {
 14266                           ;MISC.c: 602: NullPosition = i;
 14267  006284  C08E  F08C         	movff	StringAddEqual@i,StringAddEqual@NullPosition
 14268                           
 14269                           ;MISC.c: 603: break;
 14270  006288  D006               	goto	l14889
 14271  00628A                     l14885:
 14272                           
 14273                           ; BSR set to: 0
 14274                           ;MISC.c: 604: }
 14275                           ;MISC.c: 605: Input++;
 14276  00628A  0100               	movlb	0	; () banked
 14277  00628C  4B88               	infsnz	StringAddEqual@Input& (0+255),f,b
 14278  00628E  2B89               	incf	(StringAddEqual@Input+1)& (0+255),f,b
 14279  006290  0100               	movlb	0	; () banked
 14280  006292  2B8E               	incf	StringAddEqual@i& (0+255),f,b
 14281  006294  D7EA               	goto	l14877
 14282  006296                     l14889:
 14283                           
 14284                           ; BSR set to: 0
 14285                           ;MISC.c: 606: }
 14286                           ;MISC.c: 607: Input-=NullPosition;
 14287  006296  0100               	movlb	0	; () banked
 14288  006298  518C               	movf	StringAddEqual@NullPosition& (0+255),w,b
 14289  00629A  0D01               	mullw	1
 14290  00629C  50F3               	movf	prodl,w,c
 14291  00629E  0100               	movlb	0	; () banked
 14292  0062A0  5F88               	subwf	StringAddEqual@Input& (0+255),f,b
 14293  0062A2  50F4               	movf	prodh,w,c
 14294  0062A4  0100               	movlb	0	; () banked
 14295  0062A6  5B89               	subwfb	(StringAddEqual@Input+1)& (0+255),f,b
 14296                           
 14297                           ; BSR set to: 0
 14298                           ;MISC.c: 608: cleanBuffer(temp,NullPosition +1);
 14299  0062A8  0E00               	movlw	low StringAddEqual@temp
 14300  0062AA  0100               	movlb	0	; () banked
 14301  0062AC  6F79               	movwf	cleanBuffer@data& (0+255),b
 14302  0062AE  0E01               	movlw	high StringAddEqual@temp
 14303  0062B0  0100               	movlb	0	; () banked
 14304  0062B2  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 14305  0062B4  0E01               	movlw	1
 14306  0062B6  0100               	movlb	0	; () banked
 14307  0062B8  258C               	addwf	StringAddEqual@NullPosition& (0+255),w,b
 14308  0062BA  0100               	movlb	0	; () banked
 14309  0062BC  6F7B               	movwf	cleanBuffer@count& (0+255),b
 14310  0062BE  0100               	movlb	0	; () banked
 14311  0062C0  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 14312  0062C2  0E00               	movlw	0
 14313  0062C4  237C               	addwfc	(cleanBuffer@count+1)& (0+255),f,b
 14314  0062C6  ECA6  F046         	call	_cleanBuffer	;wreg free
 14315                           
 14316                           ;MISC.c: 609: i = 0;
 14317  0062CA  0E00               	movlw	0
 14318  0062CC  0100               	movlb	0	; () banked
 14319  0062CE  6F8E               	movwf	StringAddEqual@i& (0+255),b
 14320                           
 14321                           ;MISC.c: 610: while(Input[i] != 0)
 14322  0062D0  D032               	goto	l14903
 14323  0062D2                     l14895:
 14324                           
 14325                           ; BSR set to: 0
 14326                           ;MISC.c: 611: {
 14327                           ;MISC.c: 612: if(((Input[i] >= 48) && (Input[i] <= 57)) || (Input[i] == '-'))
 14328  0062D2  0100               	movlb	0	; () banked
 14329  0062D4  518E               	movf	StringAddEqual@i& (0+255),w,b
 14330  0062D6  0D01               	mullw	1
 14331  0062D8  50F3               	movf	prodl,w,c
 14332  0062DA  0100               	movlb	0	; () banked
 14333  0062DC  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14334  0062DE  6ED9               	movwf	fsr2l,c
 14335  0062E0  50F4               	movf	prodh,w,c
 14336  0062E2  0100               	movlb	0	; () banked
 14337  0062E4  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14338  0062E6  6EDA               	movwf	fsr2h,c
 14339  0062E8  0E2F               	movlw	47
 14340  0062EA  64DF               	cpfsgt	indf2,c
 14341  0062EC  D00F               	goto	l14899
 14342                           
 14343                           ; BSR set to: 0
 14344  0062EE  0100               	movlb	0	; () banked
 14345  0062F0  518E               	movf	StringAddEqual@i& (0+255),w,b
 14346  0062F2  0D01               	mullw	1
 14347  0062F4  50F3               	movf	prodl,w,c
 14348  0062F6  0100               	movlb	0	; () banked
 14349  0062F8  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14350  0062FA  6ED9               	movwf	fsr2l,c
 14351  0062FC  50F4               	movf	prodh,w,c
 14352  0062FE  0100               	movlb	0	; () banked
 14353  006300  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14354  006302  6EDA               	movwf	fsr2h,c
 14355  006304  0E39               	movlw	57
 14356  006306  64DF               	cpfsgt	indf2,c
 14357  006308  D010               	goto	l479
 14358  00630A  D000               	goto	l14899
 14359  00630C                     l14899:
 14360                           
 14361                           ; BSR set to: 0
 14362  00630C  0100               	movlb	0	; () banked
 14363  00630E  518E               	movf	StringAddEqual@i& (0+255),w,b
 14364  006310  0D01               	mullw	1
 14365  006312  50F3               	movf	prodl,w,c
 14366  006314  0100               	movlb	0	; () banked
 14367  006316  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14368  006318  6ED9               	movwf	fsr2l,c
 14369  00631A  50F4               	movf	prodh,w,c
 14370  00631C  0100               	movlb	0	; () banked
 14371  00631E  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14372  006320  6EDA               	movwf	fsr2h,c
 14373  006322  0E2D               	movlw	45
 14374  006324  18DE               	xorwf	postinc2,w,c
 14375  006326  A4D8               	btfss	status,2,c
 14376  006328  D003               	goto	l14901
 14377  00632A                     l479:
 14378                           
 14379                           ; BSR set to: 0
 14380                           ;MISC.c: 613: {
 14381                           ;MISC.c: 614: firstnumber = i;
 14382  00632A  C08E  F08D         	movff	StringAddEqual@i,StringAddEqual@firstnumber
 14383                           
 14384                           ;MISC.c: 615: break;
 14385  00632E  D011               	goto	l14905
 14386  006330                     l14901:
 14387                           
 14388                           ; BSR set to: 0
 14389                           ;MISC.c: 616: }
 14390                           ;MISC.c: 617: i++;
 14391  006330  0100               	movlb	0	; () banked
 14392  006332  2B8E               	incf	StringAddEqual@i& (0+255),f,b
 14393  006334  D000               	goto	l14903
 14394  006336                     l14903:
 14395                           
 14396                           ; BSR set to: 0
 14397  006336  0100               	movlb	0	; () banked
 14398  006338  518E               	movf	StringAddEqual@i& (0+255),w,b
 14399  00633A  0D01               	mullw	1
 14400  00633C  50F3               	movf	prodl,w,c
 14401  00633E  0100               	movlb	0	; () banked
 14402  006340  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14403  006342  6ED9               	movwf	fsr2l,c
 14404  006344  50F4               	movf	prodh,w,c
 14405  006346  0100               	movlb	0	; () banked
 14406  006348  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14407  00634A  6EDA               	movwf	fsr2h,c
 14408  00634C  50DF               	movf	indf2,w,c
 14409  00634E  A4D8               	btfss	status,2,c
 14410  006350  D7C0               	goto	l14895
 14411  006352                     l14905:
 14412                           
 14413                           ; BSR set to: 0
 14414                           ;MISC.c: 618: }
 14415                           ;MISC.c: 619: if(firstnumber == 255)
 14416  006352  0100               	movlb	0	; () banked
 14417  006354  298D               	incf	StringAddEqual@firstnumber& (0+255),w,b
 14418  006356  A4D8               	btfss	status,2,c
 14419  006358  D002               	goto	l14911
 14420                           
 14421                           ; BSR set to: 0
 14422                           ;MISC.c: 620: {
 14423                           ;MISC.c: 622: return 0;
 14424  00635A  0E00               	movlw	0
 14425                           
 14426                           ; BSR set to: 0
 14427  00635C  0012               	return	
 14428  00635E                     l14911:
 14429                           
 14430                           ; BSR set to: 0
 14431                           ;MISC.c: 623: }
 14432                           ;MISC.c: 624: for(j=0;j<firstnumber;j++)
 14433  00635E  0E00               	movlw	0
 14434  006360  0100               	movlb	0	; () banked
 14435  006362  6F8F               	movwf	StringAddEqual@j& (0+255),b
 14436  006364  D019               	goto	l14917
 14437  006366                     l14913:
 14438                           
 14439                           ; BSR set to: 0
 14440                           ;MISC.c: 625: {
 14441                           ;MISC.c: 626: temp[j] = Input[j];
 14442  006366  0100               	movlb	0	; () banked
 14443  006368  518F               	movf	StringAddEqual@j& (0+255),w,b
 14444  00636A  0D01               	mullw	1
 14445  00636C  50F3               	movf	prodl,w,c
 14446  00636E  0100               	movlb	0	; () banked
 14447  006370  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14448  006372  6ED9               	movwf	fsr2l,c
 14449  006374  50F4               	movf	prodh,w,c
 14450  006376  0100               	movlb	0	; () banked
 14451  006378  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14452  00637A  6EDA               	movwf	fsr2h,c
 14453  00637C  0100               	movlb	0	; () banked
 14454  00637E  518F               	movf	StringAddEqual@j& (0+255),w,b
 14455  006380  0D01               	mullw	1
 14456  006382  0E00               	movlw	low StringAddEqual@temp
 14457  006384  24F3               	addwf	prodl,w,c
 14458  006386  6EE1               	movwf	fsr1l,c
 14459  006388  0E01               	movlw	high StringAddEqual@temp
 14460  00638A  20F4               	addwfc	prodh,w,c
 14461  00638C  6EE2               	movwf	fsr1h,c
 14462  00638E  CFDF FFE7          	movff	indf2,indf1
 14463                           
 14464                           ; BSR set to: 0
 14465  006392  0100               	movlb	0	; () banked
 14466  006394  2B8F               	incf	StringAddEqual@j& (0+255),f,b
 14467  006396  D000               	goto	l14917
 14468  006398                     l14917:
 14469                           
 14470                           ; BSR set to: 0
 14471  006398  0100               	movlb	0	; () banked
 14472  00639A  518D               	movf	StringAddEqual@firstnumber& (0+255),w,b
 14473  00639C  0100               	movlb	0	; () banked
 14474  00639E  5D8F               	subwf	StringAddEqual@j& (0+255),w,b
 14475  0063A0  A0D8               	btfss	status,0,c
 14476  0063A2  D7E1               	goto	l14913
 14477                           
 14478                           ; BSR set to: 0
 14479                           ;MISC.c: 627: }
 14480                           ;MISC.c: 628: temp[firstnumber] = '=';
 14481                           
 14482                           ; BSR set to: 0
 14483  0063A4  0100               	movlb	0	; () banked
 14484  0063A6  518D               	movf	StringAddEqual@firstnumber& (0+255),w,b
 14485  0063A8  0D01               	mullw	1
 14486  0063AA  0E00               	movlw	low StringAddEqual@temp
 14487  0063AC  24F3               	addwf	prodl,w,c
 14488  0063AE  6ED9               	movwf	fsr2l,c
 14489  0063B0  0E01               	movlw	high StringAddEqual@temp
 14490  0063B2  20F4               	addwfc	prodh,w,c
 14491  0063B4  6EDA               	movwf	fsr2h,c
 14492  0063B6  0E3D               	movlw	61
 14493  0063B8  6EDF               	movwf	indf2,c
 14494                           
 14495                           ; BSR set to: 0
 14496                           ;MISC.c: 629: for(j = (firstnumber);j<255;j++)
 14497  0063BA  C08D  F08F         	movff	StringAddEqual@firstnumber,StringAddEqual@j
 14498  0063BE                     l14923:
 14499                           
 14500                           ; BSR set to: 0
 14501  0063BE  0100               	movlb	0	; () banked
 14502  0063C0  298F               	incf	StringAddEqual@j& (0+255),w,b
 14503  0063C2  B4D8               	btfsc	status,2,c
 14504  0063C4  D034               	goto	l14937
 14505  0063C6  D001               	goto	l14927
 14506                           
 14507                           ; BSR set to: 0
 14508  0063C8  D032               	goto	l14937
 14509  0063CA                     l14927:
 14510                           
 14511                           ; BSR set to: 0
 14512                           ;MISC.c: 630: {
 14513                           ;MISC.c: 631: temp[j+1] = Input[j];
 14514  0063CA  0100               	movlb	0	; () banked
 14515  0063CC  518F               	movf	StringAddEqual@j& (0+255),w,b
 14516  0063CE  0D01               	mullw	1
 14517  0063D0  50F3               	movf	prodl,w,c
 14518  0063D2  0100               	movlb	0	; () banked
 14519  0063D4  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14520  0063D6  6ED9               	movwf	fsr2l,c
 14521  0063D8  50F4               	movf	prodh,w,c
 14522  0063DA  0100               	movlb	0	; () banked
 14523  0063DC  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14524  0063DE  6EDA               	movwf	fsr2h,c
 14525  0063E0  0100               	movlb	0	; () banked
 14526  0063E2  518F               	movf	StringAddEqual@j& (0+255),w,b
 14527  0063E4  0100               	movlb	0	; () banked
 14528  0063E6  6F8A               	movwf	??_StringAddEqual& (0+255),b
 14529  0063E8  6B8B               	clrf	(??_StringAddEqual+1)& (0+255),b
 14530  0063EA  0E01               	movlw	1
 14531  0063EC  0100               	movlb	0	; () banked
 14532  0063EE  278A               	addwf	??_StringAddEqual& (0+255),f,b
 14533  0063F0  0E00               	movlw	0
 14534  0063F2  238B               	addwfc	(??_StringAddEqual+1)& (0+255),f,b
 14535  0063F4  0E00               	movlw	low StringAddEqual@temp
 14536  0063F6  0100               	movlb	0	; () banked
 14537  0063F8  258A               	addwf	??_StringAddEqual& (0+255),w,b
 14538  0063FA  6EE1               	movwf	fsr1l,c
 14539  0063FC  0E01               	movlw	high StringAddEqual@temp
 14540  0063FE  0100               	movlb	0	; () banked
 14541  006400  218B               	addwfc	(??_StringAddEqual+1)& (0+255),w,b
 14542  006402  6EE2               	movwf	fsr1h,c
 14543  006404  CFDF FFE7          	movff	indf2,indf1
 14544                           
 14545                           ; BSR set to: 0
 14546                           ;MISC.c: 632: if(Input[j] == 0)
 14547  006408  0100               	movlb	0	; () banked
 14548  00640A  518F               	movf	StringAddEqual@j& (0+255),w,b
 14549  00640C  0D01               	mullw	1
 14550  00640E  50F3               	movf	prodl,w,c
 14551  006410  0100               	movlb	0	; () banked
 14552  006412  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14553  006414  6ED9               	movwf	fsr2l,c
 14554  006416  50F4               	movf	prodh,w,c
 14555  006418  0100               	movlb	0	; () banked
 14556  00641A  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14557  00641C  6EDA               	movwf	fsr2h,c
 14558  00641E  50DF               	movf	indf2,w,c
 14559  006420  B4D8               	btfsc	status,2,c
 14560  006422  D005               	goto	l14937
 14561  006424  D001               	goto	l14933
 14562                           
 14563                           ; BSR set to: 0
 14564                           ;MISC.c: 633: {
 14565                           ;MISC.c: 634: break;
 14566  006426  D003               	goto	l14937
 14567  006428                     l14933:
 14568                           
 14569                           ; BSR set to: 0
 14570  006428  0100               	movlb	0	; () banked
 14571  00642A  2B8F               	incf	StringAddEqual@j& (0+255),f,b
 14572  00642C  D7C8               	goto	l14923
 14573  00642E                     l14937:
 14574                           
 14575                           ; BSR set to: 0
 14576                           ;MISC.c: 635: }
 14577                           ;MISC.c: 636: }
 14578                           ;MISC.c: 637: BufferCopy(temp,Input,NullPosition +1,0);
 14579  00642E  0E00               	movlw	low StringAddEqual@temp
 14580  006430  0100               	movlb	0	; () banked
 14581  006432  6F81               	movwf	BufferCopy@from& (0+255),b
 14582  006434  0E01               	movlw	high StringAddEqual@temp
 14583  006436  0100               	movlb	0	; () banked
 14584  006438  6F82               	movwf	(BufferCopy@from+1)& (0+255),b
 14585  00643A  C088  F083         	movff	StringAddEqual@Input,BufferCopy@to
 14586  00643E  C089  F084         	movff	StringAddEqual@Input+1,BufferCopy@to+1
 14587  006442  0100               	movlb	0	; () banked
 14588  006444  298C               	incf	StringAddEqual@NullPosition& (0+255),w,b
 14589  006446  0100               	movlb	0	; () banked
 14590  006448  6F85               	movwf	BufferCopy@count& (0+255),b
 14591  00644A  0E00               	movlw	0
 14592  00644C  0100               	movlb	0	; () banked
 14593  00644E  6F86               	movwf	BufferCopy@shift& (0+255),b
 14594  006450  ECB6  F043         	call	_BufferCopy	;wreg free
 14595                           
 14596                           ;MISC.c: 638: return 1;
 14597  006454  0E01               	movlw	1
 14598  006456  0012               	return	
 14599  006458  0012               	return		;funcret
 14600  00645A                     __end_of_StringAddEqual:
 14601                           	opt stack 0
 14602                           tblptru	equ	0xFF8
 14603                           tblptrh	equ	0xFF7
 14604                           tblptrl	equ	0xFF6
 14605                           tablat	equ	0xFF5
 14606                           prodh	equ	0xFF4
 14607                           prodl	equ	0xFF3
 14608                           intcon	equ	0xFF2
 14609                           indf0	equ	0xFEF
 14610                           postinc0	equ	0xFEE
 14611                           fsr0h	equ	0xFEA
 14612                           fsr0l	equ	0xFE9
 14613                           wreg	equ	0xFE8
 14614                           indf1	equ	0xFE7
 14615                           postdec1	equ	0xFE5
 14616                           fsr1h	equ	0xFE2
 14617                           fsr1l	equ	0xFE1
 14618                           indf2	equ	0xFDF
 14619                           postinc2	equ	0xFDE
 14620                           fsr2h	equ	0xFDA
 14621                           fsr2l	equ	0xFD9
 14622                           status	equ	0xFD8
 14623                           
 14624 ;; *************** function _BufferCopy *****************
 14625 ;; Defined at:
 14626 ;;		line 167 in file "MISC.c"
 14627 ;; Parameters:    Size  Location     Type
 14628 ;;  from            2   33[BANK0 ] PTR unsigned char 
 14629 ;;		 -> StringAddEqual@temp(255), ReceivedString(255), 
 14630 ;;  to              2   35[BANK0 ] PTR unsigned char 
 14631 ;;		 -> main@BluetoothString(255), 
 14632 ;;  count           1   37[BANK0 ] unsigned char 
 14633 ;;  shift           1   38[BANK0 ] unsigned char 
 14634 ;; Auto vars:     Size  Location     Type
 14635 ;;  i               1   39[BANK0 ] unsigned char 
 14636 ;; Return value:  Size  Location     Type
 14637 ;;		None               void
 14638 ;; Registers used:
 14639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14640 ;; Tracked objects:
 14641 ;;		On entry : 0/0
 14642 ;;		On exit  : 0/0
 14643 ;;		Unchanged: 0/0
 14644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14645 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14646 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14648 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14649 ;;Total ram usage:        7 bytes
 14650 ;; Hardware stack levels used:    1
 14651 ;; Hardware stack levels required when called:    7
 14652 ;; This function calls:
 14653 ;;		_cleanBuffer
 14654 ;; This function is called by:
 14655 ;;		_main
 14656 ;;		_StringAddEqual
 14657 ;; This function uses a non-reentrant model
 14658 ;;
 14659                           
 14660                           	psect	text14
 14661  00876C                     __ptext14:
 14662                           	opt stack 0
 14663  00876C                     _BufferCopy:
 14664                           	opt stack 21
 14665                           
 14666                           ;MISC.c: 169: unsigned char i=0;
 14667                           
 14668                           ;incstack = 0
 14669  00876C  0E00               	movlw	0
 14670  00876E  0100               	movlb	0	; () banked
 14671  008770  6F87               	movwf	BufferCopy@i& (0+255),b
 14672                           
 14673                           ; BSR set to: 0
 14674                           ;MISC.c: 170: cleanBuffer(to,count);
 14675  008772  C083  F079         	movff	BufferCopy@to,cleanBuffer@data
 14676  008776  C084  F07A         	movff	BufferCopy@to+1,cleanBuffer@data+1
 14677  00877A  C085  F07B         	movff	BufferCopy@count,cleanBuffer@count
 14678  00877E  0100               	movlb	0	; () banked
 14679  008780  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 14680  008782  ECA6  F046         	call	_cleanBuffer	;wreg free
 14681                           
 14682                           ;MISC.c: 171: for(i = shift; i>0;i--)
 14683  008786  C086  F087         	movff	BufferCopy@shift,BufferCopy@i
 14684  00878A                     l13863:
 14685  00878A  0100               	movlb	0	; () banked
 14686  00878C  5187               	movf	BufferCopy@i& (0+255),w,b
 14687  00878E  0100               	movlb	0	; () banked
 14688  008790  B4D8               	btfsc	status,2,c
 14689  008792  D022               	goto	l13883
 14690  008794  D001               	goto	l13867
 14691                           
 14692                           ; BSR set to: 0
 14693  008796  D020               	goto	l13883
 14694  008798                     l13867:
 14695                           
 14696                           ; BSR set to: 0
 14697                           ;MISC.c: 172: {
 14698                           ;MISC.c: 173: *to = ' ';
 14699  008798  C083  FFD9         	movff	BufferCopy@to,fsr2l
 14700  00879C  C084  FFDA         	movff	BufferCopy@to+1,fsr2h
 14701  0087A0  0E20               	movlw	32
 14702  0087A2  6EDF               	movwf	indf2,c
 14703                           
 14704                           ; BSR set to: 0
 14705                           ;MISC.c: 174: to++;
 14706  0087A4  0100               	movlb	0	; () banked
 14707  0087A6  4B83               	infsnz	BufferCopy@to& (0+255),f,b
 14708  0087A8  2B84               	incf	(BufferCopy@to+1)& (0+255),f,b
 14709                           
 14710                           ; BSR set to: 0
 14711  0087AA  0100               	movlb	0	; () banked
 14712  0087AC  0787               	decf	BufferCopy@i& (0+255),f,b
 14713  0087AE  D7ED               	goto	l13863
 14714                           
 14715                           ; BSR set to: 0
 14716                           ;MISC.c: 175: }
 14717                           ;MISC.c: 176: while(*from != 0 && count >0)
 14718                           
 14719                           ; BSR set to: 0
 14720  0087B0  D013               	goto	l13883
 14721  0087B2                     l13875:
 14722                           
 14723                           ; BSR set to: 0
 14724                           ;MISC.c: 177: {
 14725                           ;MISC.c: 178: *to = *from;
 14726  0087B2  C081  FFD9         	movff	BufferCopy@from,fsr2l
 14727  0087B6  C082  FFDA         	movff	BufferCopy@from+1,fsr2h
 14728  0087BA  C083  FFE1         	movff	BufferCopy@to,fsr1l
 14729  0087BE  C084  FFE2         	movff	BufferCopy@to+1,fsr1h
 14730  0087C2  CFDF FFE7          	movff	indf2,indf1
 14731                           
 14732                           ; BSR set to: 0
 14733                           ;MISC.c: 179: from++;
 14734  0087C6  0100               	movlb	0	; () banked
 14735  0087C8  4B81               	infsnz	BufferCopy@from& (0+255),f,b
 14736  0087CA  2B82               	incf	(BufferCopy@from+1)& (0+255),f,b
 14737                           
 14738                           ; BSR set to: 0
 14739                           ;MISC.c: 180: to++;
 14740  0087CC  0100               	movlb	0	; () banked
 14741  0087CE  4B83               	infsnz	BufferCopy@to& (0+255),f,b
 14742  0087D0  2B84               	incf	(BufferCopy@to+1)& (0+255),f,b
 14743                           
 14744                           ; BSR set to: 0
 14745                           ;MISC.c: 181: count--;
 14746  0087D2  0100               	movlb	0	; () banked
 14747  0087D4  0785               	decf	BufferCopy@count& (0+255),f,b
 14748  0087D6  D000               	goto	l13883
 14749  0087D8                     l13883:
 14750                           
 14751                           ; BSR set to: 0
 14752  0087D8  C081  FFD9         	movff	BufferCopy@from,fsr2l
 14753  0087DC  C082  FFDA         	movff	BufferCopy@from+1,fsr2h
 14754  0087E0  50DF               	movf	indf2,w,c
 14755  0087E2  B4D8               	btfsc	status,2,c
 14756  0087E4  0012               	return	
 14757                           
 14758                           ; BSR set to: 0
 14759  0087E6  0100               	movlb	0	; () banked
 14760  0087E8  5185               	movf	BufferCopy@count& (0+255),w,b
 14761  0087EA  0100               	movlb	0	; () banked
 14762  0087EC  B4D8               	btfsc	status,2,c
 14763  0087EE  0012               	return	
 14764  0087F0  D7E0               	goto	l13875
 14765                           
 14766                           ; BSR set to: 0
 14767  0087F2  0012               	return	
 14768                           
 14769                           ; BSR set to: 0
 14770                           
 14771                           ; BSR set to: 0
 14772  0087F4  0012               	return		;funcret
 14773  0087F6                     __end_of_BufferCopy:
 14774                           	opt stack 0
 14775                           tblptru	equ	0xFF8
 14776                           tblptrh	equ	0xFF7
 14777                           tblptrl	equ	0xFF6
 14778                           tablat	equ	0xFF5
 14779                           prodh	equ	0xFF4
 14780                           prodl	equ	0xFF3
 14781                           intcon	equ	0xFF2
 14782                           indf0	equ	0xFEF
 14783                           postinc0	equ	0xFEE
 14784                           fsr0h	equ	0xFEA
 14785                           fsr0l	equ	0xFE9
 14786                           wreg	equ	0xFE8
 14787                           indf1	equ	0xFE7
 14788                           postdec1	equ	0xFE5
 14789                           fsr1h	equ	0xFE2
 14790                           fsr1l	equ	0xFE1
 14791                           indf2	equ	0xFDF
 14792                           postinc2	equ	0xFDE
 14793                           fsr2h	equ	0xFDA
 14794                           fsr2l	equ	0xFD9
 14795                           status	equ	0xFD8
 14796                           
 14797 ;; *************** function _SendRF_wait *****************
 14798 ;; Defined at:
 14799 ;;		line 145 in file "RF.c"
 14800 ;; Parameters:    Size  Location     Type
 14801 ;;  Code            2   33[BANK0 ] PTR const unsigned char 
 14802 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
 14803 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
 14804 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
 14805 ;;		 -> Conf1_ChannelD(12), 
 14806 ;;  Config          1   35[BANK0 ] unsigned char 
 14807 ;;  size            1   36[BANK0 ] unsigned char 
 14808 ;;  amount          1   37[BANK0 ] unsigned char 
 14809 ;; Auto vars:     Size  Location     Type
 14810 ;;		None
 14811 ;; Return value:  Size  Location     Type
 14812 ;;		None               void
 14813 ;; Registers used:
 14814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14815 ;; Tracked objects:
 14816 ;;		On entry : 0/0
 14817 ;;		On exit  : 0/0
 14818 ;;		Unchanged: 0/0
 14819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14820 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14823 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14824 ;;Total ram usage:        5 bytes
 14825 ;; Hardware stack levels used:    1
 14826 ;; Hardware stack levels required when called:    8
 14827 ;; This function calls:
 14828 ;;		_LEDTimerON
 14829 ;;		_ReadIRpin
 14830 ;;		_SendRF
 14831 ;; This function is called by:
 14832 ;;		_UseBluetooth
 14833 ;;		_SendRF_Channel
 14834 ;; This function uses a non-reentrant model
 14835 ;;
 14836                           
 14837                           	psect	text15
 14838  009102                     __ptext15:
 14839                           	opt stack 0
 14840  009102                     _SendRF_wait:
 14841                           	opt stack 20
 14842                           
 14843                           ;RF.c: 147: (IOCBbits.IOCB4 = 0);
 14844                           
 14845                           ; BSR set to: 0
 14846                           ;incstack = 0
 14847  009102  987D               	bcf	3965,4,c	;volatile
 14848                           
 14849                           ;RF.c: 148: INTCONbits.RBIE = 0;
 14850  009104  96F2               	bcf	intcon,3,c	;volatile
 14851                           
 14852                           ;RF.c: 149: INTCONbits.PEIE = 0;
 14853  009106  9CF2               	bcf	intcon,6,c	;volatile
 14854                           
 14855                           ;RF.c: 150: LEDTimerON();
 14856  009108  EC35  F04A         	call	_LEDTimerON	;wreg free
 14857                           
 14858                           ;RF.c: 151: (LATC |= 0x04);
 14859  00910C  848B               	bsf	3979,2,c	;volatile
 14860                           
 14861                           ;RF.c: 152: SendRF(Code, Config, size, amount);
 14862  00910E  C081  F079         	movff	SendRF_wait@Code,SendRF@Code
 14863  009112  C082  F07A         	movff	SendRF_wait@Code+1,SendRF@Code+1
 14864  009116  C083  F07B         	movff	SendRF_wait@Config,SendRF@Config
 14865  00911A  C084  F07C         	movff	SendRF_wait@size,SendRF@size
 14866  00911E  C085  F07D         	movff	SendRF_wait@amount,SendRF@RepeatAmount
 14867  009122  ECB2  F03D         	call	_SendRF	;wreg free
 14868                           
 14869                           ;RF.c: 153: while(!Sent);
 14870  009126  D000               	goto	l14297
 14871  009128                     l14297:
 14872  009128  0100               	movlb	0	; () banked
 14873  00912A  51E6               	movf	_Sent& (0+255),w,b	;volatile
 14874  00912C  B4D8               	btfsc	status,2,c
 14875  00912E  D7FC               	goto	l14297
 14876                           
 14877                           ; BSR set to: 0
 14878                           ;RF.c: 154: INTCONbits.PEIE = 1;
 14879  009130  8CF2               	bsf	intcon,6,c	;volatile
 14880                           
 14881                           ; BSR set to: 0
 14882                           ;RF.c: 155: IRpinOLD = ReadIRpin();
 14883  009132  EC72  F04A         	call	_ReadIRpin	;wreg free
 14884  009136  6E2E               	movwf	_IRpinOLD,c
 14885                           
 14886                           ;RF.c: 156: INTCONbits.RBIF = 0;
 14887  009138  90F2               	bcf	intcon,0,c	;volatile
 14888                           
 14889                           ;RF.c: 157: (IOCBbits.IOCB4 = 1);
 14890  00913A  887D               	bsf	3965,4,c	;volatile
 14891                           
 14892                           ;RF.c: 158: INTCONbits.RBIE = 1;
 14893  00913C  86F2               	bsf	intcon,3,c	;volatile
 14894  00913E  0012               	return		;funcret
 14895  009140                     __end_of_SendRF_wait:
 14896                           	opt stack 0
 14897                           tblptru	equ	0xFF8
 14898                           tblptrh	equ	0xFF7
 14899                           tblptrl	equ	0xFF6
 14900                           tablat	equ	0xFF5
 14901                           prodh	equ	0xFF4
 14902                           prodl	equ	0xFF3
 14903                           intcon	equ	0xFF2
 14904                           indf0	equ	0xFEF
 14905                           postinc0	equ	0xFEE
 14906                           fsr0h	equ	0xFEA
 14907                           fsr0l	equ	0xFE9
 14908                           wreg	equ	0xFE8
 14909                           indf1	equ	0xFE7
 14910                           postdec1	equ	0xFE5
 14911                           fsr1h	equ	0xFE2
 14912                           fsr1l	equ	0xFE1
 14913                           indf2	equ	0xFDF
 14914                           postinc2	equ	0xFDE
 14915                           fsr2h	equ	0xFDA
 14916                           fsr2l	equ	0xFD9
 14917                           status	equ	0xFD8
 14918                           
 14919 ;; *************** function _SendRF *****************
 14920 ;; Defined at:
 14921 ;;		line 68 in file "RF.c"
 14922 ;; Parameters:    Size  Location     Type
 14923 ;;  Code            2   25[BANK0 ] PTR const unsigned char 
 14924 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
 14925 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
 14926 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
 14927 ;;		 -> Conf1_ChannelD(12), 
 14928 ;;  Config          1   27[BANK0 ] unsigned char 
 14929 ;;  size            1   28[BANK0 ] unsigned char 
 14930 ;;  RepeatAmount    1   29[BANK0 ] unsigned char 
 14931 ;; Auto vars:     Size  Location     Type
 14932 ;;  i               1   32[BANK0 ] unsigned char 
 14933 ;; Return value:  Size  Location     Type
 14934 ;;                  1    wreg      unsigned char 
 14935 ;; Registers used:
 14936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 14937 ;; Tracked objects:
 14938 ;;		On entry : 0/0
 14939 ;;		On exit  : 0/0
 14940 ;;		Unchanged: 0/0
 14941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14942 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14943 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14944 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14945 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14946 ;;Total ram usage:        8 bytes
 14947 ;; Hardware stack levels used:    1
 14948 ;; Hardware stack levels required when called:    6
 14949 ;; This function calls:
 14950 ;;		Nothing
 14951 ;; This function is called by:
 14952 ;;		_SendRF_wait
 14953 ;; This function uses a non-reentrant model
 14954 ;;
 14955                           
 14956                           	psect	text16
 14957  007B64                     __ptext16:
 14958                           	opt stack 0
 14959  007B64                     _SendRF:
 14960                           	opt stack 21
 14961                           
 14962                           ;RF.c: 70: unsigned char i;
 14963                           ;RF.c: 71: if(Sent)
 14964                           
 14965                           ;incstack = 0
 14966  007B64  0100               	movlb	0	; () banked
 14967  007B66  51E6               	movf	_Sent& (0+255),w,b	;volatile
 14968  007B68  B4D8               	btfsc	status,2,c
 14969  007B6A  0012               	return	
 14970                           
 14971                           ; BSR set to: 0
 14972                           ;RF.c: 72: {
 14973                           ;RF.c: 74: RF_IR = 55;
 14974  007B6C  0E37               	movlw	55
 14975  007B6E  6E42               	movwf	_RF_IR,c
 14976                           
 14977                           ;RF.c: 75: if((Config <= 0) || (Config > 2))
 14978  007B70  0100               	movlb	0	; () banked
 14979  007B72  517B               	movf	SendRF@Config& (0+255),w,b
 14980  007B74  0100               	movlb	0	; () banked
 14981  007B76  B4D8               	btfsc	status,2,c
 14982  007B78  0012               	return	
 14983                           
 14984                           ; BSR set to: 0
 14985  007B7A  0E02               	movlw	2
 14986  007B7C  0100               	movlb	0	; () banked
 14987  007B7E  657B               	cpfsgt	SendRF@Config& (0+255),b
 14988  007B80  D002               	goto	l2113
 14989  007B82  0012               	return	
 14990                           
 14991                           ; BSR set to: 0
 14992                           ;RF.c: 76: {
 14993                           ;RF.c: 77: return 0;
 14994                           ;	Return value of _SendRF is never used
 14995  007B84  0012               	return	
 14996  007B86                     l2113:
 14997                           
 14998                           ; BSR set to: 0
 14999                           ;RF.c: 78: }
 15000                           ;RF.c: 79: RFConfig = Config;
 15001  007B86  C07B  F033         	movff	SendRF@Config,_RFConfig
 15002                           
 15003                           ; BSR set to: 0
 15004                           ;RF.c: 80: if(Config == 1)
 15005  007B8A  0100               	movlb	0	; () banked
 15006  007B8C  057B               	decf	SendRF@Config& (0+255),w,b
 15007  007B8E  A4D8               	btfss	status,2,c
 15008  007B90  D002               	goto	l13807
 15009                           
 15010                           ; BSR set to: 0
 15011                           ;RF.c: 81: {
 15012                           ;RF.c: 82: RF_IR_Postscaler = 2;
 15013  007B92  0E02               	movlw	2
 15014  007B94  D006               	goto	L12
 15015  007B96                     l13807:
 15016                           
 15017                           ; BSR set to: 0
 15018                           ;RF.c: 84: else if(Config == 2)
 15019  007B96  0E02               	movlw	2
 15020  007B98  0100               	movlb	0	; () banked
 15021  007B9A  197B               	xorwf	SendRF@Config& (0+255),w,b
 15022  007B9C  A4D8               	btfss	status,2,c
 15023  007B9E  0012               	return	
 15024                           
 15025                           ; BSR set to: 0
 15026                           ;RF.c: 85: {
 15027                           ;RF.c: 86: RF_IR_Postscaler = 4;
 15028  007BA0  0E04               	movlw	4
 15029  007BA2                     L12:
 15030  007BA2  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 15031                           
 15032                           ;RF.c: 87: }
 15033  007BA4  D002               	goto	l13811
 15034                           
 15035                           ; BSR set to: 0
 15036                           ;RF.c: 88: else
 15037                           ;RF.c: 89: {
 15038                           ;RF.c: 90: return 0;
 15039                           ;	Return value of _SendRF is never used
 15040  007BA6  0012               	return	
 15041                           
 15042                           ; BSR set to: 0
 15043  007BA8  D000               	goto	l13811
 15044  007BAA                     l13811:
 15045                           
 15046                           ; BSR set to: 0
 15047                           ;RF.c: 91: }
 15048                           ;RF.c: 93: Sent = 0;
 15049  007BAA  0E00               	movlw	0
 15050  007BAC  0100               	movlb	0	; () banked
 15051  007BAE  6FE6               	movwf	_Sent& (0+255),b	;volatile
 15052                           
 15053                           ; BSR set to: 0
 15054                           ;RF.c: 94: Sendcount = RepeatAmount;
 15055  007BB0  C07D  F037         	movff	SendRF@RepeatAmount,_Sendcount	;volatile
 15056                           
 15057                           ;RF.c: 95: RFsendFlag = 1;
 15058  007BB4  0E01               	movlw	1
 15059  007BB6  6E36               	movwf	_RFsendFlag,c	;volatile
 15060                           
 15061                           ;RF.c: 96: RFcodeBit = 0;
 15062  007BB8  0E00               	movlw	0
 15063  007BBA  6E34               	movwf	_RFcodeBit,c
 15064                           
 15065                           ;RF.c: 97: RFcodePlace = 1;
 15066  007BBC  0E01               	movlw	1
 15067  007BBE  6E35               	movwf	_RFcodePlace,c
 15068                           
 15069                           ; BSR set to: 0
 15070                           ;RF.c: 100: if(size >= 20)
 15071  007BC0  0E13               	movlw	19
 15072  007BC2  0100               	movlb	0	; () banked
 15073  007BC4  657C               	cpfsgt	SendRF@size& (0+255),b
 15074  007BC6  D002               	goto	l13819
 15075  007BC8  0012               	return	
 15076                           
 15077                           ; BSR set to: 0
 15078                           ;RF.c: 101: {
 15079                           ;RF.c: 102: return 0;
 15080                           ;	Return value of _SendRF is never used
 15081  007BCA  0012               	return	
 15082  007BCC                     l13819:
 15083                           
 15084                           ; BSR set to: 0
 15085                           ;RF.c: 103: }
 15086                           ;RF.c: 104: for(i=0;i<size;i++)
 15087  007BCC  0E00               	movlw	0
 15088  007BCE  0100               	movlb	0	; () banked
 15089  007BD0  6F80               	movwf	SendRF@i& (0+255),b
 15090  007BD2  D021               	goto	l13825
 15091  007BD4                     l13821:
 15092                           
 15093                           ; BSR set to: 0
 15094                           ;RF.c: 105: {
 15095                           ;RF.c: 106: RFsendCode[i] = Code[i];
 15096  007BD4  0100               	movlb	0	; () banked
 15097  007BD6  5180               	movf	SendRF@i& (0+255),w,b
 15098  007BD8  0D01               	mullw	1
 15099  007BDA  C079  F07E         	movff	SendRF@Code,??_SendRF
 15100  007BDE  C07A  F07F         	movff	SendRF@Code+1,??_SendRF+1
 15101  007BE2  50F3               	movf	prodl,w,c
 15102  007BE4  0100               	movlb	0	; () banked
 15103  007BE6  277E               	addwf	??_SendRF& (0+255),f,b
 15104  007BE8  50F4               	movf	prodh,w,c
 15105  007BEA  0100               	movlb	0	; () banked
 15106  007BEC  237F               	addwfc	(??_SendRF+1)& (0+255),f,b
 15107  007BEE  C07E  FFF6         	movff	??_SendRF,tblptrl
 15108  007BF2  C07F  FFF7         	movff	??_SendRF+1,tblptrh
 15109  007BF6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15110  007BF6  6AF8               	clrf	tblptru,c
 15111  007BF8                     	endif
 15112  007BF8                     	if	0	;tblptru may be non-zero
 15113  007BF8                     	endif
 15114  007BF8  0100               	movlb	0	; () banked
 15115  007BFA  5180               	movf	SendRF@i& (0+255),w,b
 15116  007BFC  0D01               	mullw	1
 15117  007BFE  0ECE               	movlw	low _RFsendCode
 15118  007C00  24F3               	addwf	prodl,w,c
 15119  007C02  6ED9               	movwf	fsr2l,c
 15120  007C04  0E02               	movlw	high _RFsendCode
 15121  007C06  20F4               	addwfc	prodh,w,c
 15122  007C08  6EDA               	movwf	fsr2h,c
 15123  007C0A  0008               	tblrd		*
 15124  007C0C  CFF5 FFDF          	movff	tablat,indf2
 15125                           
 15126                           ; BSR set to: 0
 15127  007C10  0100               	movlb	0	; () banked
 15128  007C12  2B80               	incf	SendRF@i& (0+255),f,b
 15129  007C14  D000               	goto	l13825
 15130  007C16                     l13825:
 15131                           
 15132                           ; BSR set to: 0
 15133  007C16  0100               	movlb	0	; () banked
 15134  007C18  517C               	movf	SendRF@size& (0+255),w,b
 15135  007C1A  0100               	movlb	0	; () banked
 15136  007C1C  5D80               	subwf	SendRF@i& (0+255),w,b
 15137  007C1E  A0D8               	btfss	status,0,c
 15138  007C20  D7D9               	goto	l13821
 15139                           
 15140                           ; BSR set to: 0
 15141                           ;RF.c: 107: }
 15142                           ;RF.c: 108: RFsendCode[i] = 99;
 15143                           
 15144                           ; BSR set to: 0
 15145  007C22  0100               	movlb	0	; () banked
 15146  007C24  5180               	movf	SendRF@i& (0+255),w,b
 15147  007C26  0D01               	mullw	1
 15148  007C28  0ECE               	movlw	low _RFsendCode
 15149  007C2A  24F3               	addwf	prodl,w,c
 15150  007C2C  6ED9               	movwf	fsr2l,c
 15151  007C2E  0E02               	movlw	high _RFsendCode
 15152  007C30  20F4               	addwfc	prodh,w,c
 15153  007C32  6EDA               	movwf	fsr2h,c
 15154  007C34  0E63               	movlw	99
 15155  007C36  6EDF               	movwf	indf2,c
 15156                           
 15157                           ; BSR set to: 0
 15158                           ;RF.c: 110: (TMR2 = 0);
 15159  007C38  0E00               	movlw	0
 15160  007C3A  6ECC               	movwf	4044,c	;volatile
 15161                           
 15162                           ; BSR set to: 0
 15163                           ;RF.c: 111: if(Config == 1)
 15164  007C3C  0100               	movlb	0	; () banked
 15165  007C3E  057B               	decf	SendRF@Config& (0+255),w,b
 15166  007C40  A4D8               	btfss	status,2,c
 15167  007C42  D002               	goto	l13835
 15168                           
 15169                           ; BSR set to: 0
 15170                           ;RF.c: 112: {
 15171                           ;RF.c: 113: (PR2 = 250);
 15172  007C44  0EFA               	movlw	250
 15173  007C46  D001               	goto	L13
 15174  007C48                     l13835:
 15175                           
 15176                           ; BSR set to: 0
 15177                           ;RF.c: 115: else
 15178                           ;RF.c: 116: {
 15179                           ;RF.c: 117: (PR2 = 149);
 15180  007C48  0E95               	movlw	149
 15181  007C4A                     L13:
 15182  007C4A  6ECB               	movwf	4043,c	;volatile
 15183  007C4C  D000               	goto	l13837
 15184  007C4E                     l13837:
 15185                           
 15186                           ; BSR set to: 0
 15187                           ;RF.c: 118: }
 15188                           ;RF.c: 119: (T2CONbits.TMR2ON = 1);
 15189  007C4E  84CA               	bsf	4042,2,c	;volatile
 15190                           
 15191                           ; BSR set to: 0
 15192                           ;RF.c: 120: return 1;
 15193                           ;	Return value of _SendRF is never used
 15194  007C50  0012               	return	
 15195                           
 15196                           ; BSR set to: 0
 15197                           
 15198                           ; BSR set to: 0
 15199                           ;RF.c: 121: }
 15200                           ;RF.c: 122: return 2;
 15201                           ;	Return value of _SendRF is never used
 15202  007C52  0012               	return		;funcret
 15203  007C54                     __end_of_SendRF:
 15204                           	opt stack 0
 15205                           tblptru	equ	0xFF8
 15206                           tblptrh	equ	0xFF7
 15207                           tblptrl	equ	0xFF6
 15208                           tablat	equ	0xFF5
 15209                           prodh	equ	0xFF4
 15210                           prodl	equ	0xFF3
 15211                           intcon	equ	0xFF2
 15212                           indf0	equ	0xFEF
 15213                           postinc0	equ	0xFEE
 15214                           fsr0h	equ	0xFEA
 15215                           fsr0l	equ	0xFE9
 15216                           wreg	equ	0xFE8
 15217                           indf1	equ	0xFE7
 15218                           postdec1	equ	0xFE5
 15219                           fsr1h	equ	0xFE2
 15220                           fsr1l	equ	0xFE1
 15221                           indf2	equ	0xFDF
 15222                           postinc2	equ	0xFDE
 15223                           fsr2h	equ	0xFDA
 15224                           fsr2l	equ	0xFD9
 15225                           status	equ	0xFD8
 15226                           
 15227 ;; *************** function _LEDTimerON *****************
 15228 ;; Defined at:
 15229 ;;		line 149 in file "Timer.c"
 15230 ;; Parameters:    Size  Location     Type
 15231 ;;		None
 15232 ;; Auto vars:     Size  Location     Type
 15233 ;;		None
 15234 ;; Return value:  Size  Location     Type
 15235 ;;		None               void
 15236 ;; Registers used:
 15237 ;;		wreg, status,2, cstack
 15238 ;; Tracked objects:
 15239 ;;		On entry : 0/0
 15240 ;;		On exit  : 0/0
 15241 ;;		Unchanged: 0/0
 15242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15247 ;;Total ram usage:        0 bytes
 15248 ;; Hardware stack levels used:    1
 15249 ;; Hardware stack levels required when called:    7
 15250 ;; This function calls:
 15251 ;;		_ResetTimer1
 15252 ;; This function is called by:
 15253 ;;		_UseIRCode
 15254 ;;		_WaitForIRsignal
 15255 ;;		_SendRF_wait
 15256 ;; This function uses a non-reentrant model
 15257 ;;
 15258                           
 15259                           	psect	text17
 15260  00946A                     __ptext17:
 15261                           	opt stack 0
 15262  00946A                     _LEDTimerON:
 15263                           	opt stack 20
 15264                           
 15265                           ;Timer.c: 151: (T1CONbits.TMR1ON = FALSE);
 15266                           
 15267                           ; BSR set to: 0
 15268                           ;incstack = 0
 15269  00946A  90CD               	bcf	4045,0,c	;volatile
 15270                           
 15271                           ;Timer.c: 152: ResetTimer1();
 15272  00946C  EC95  F04A         	call	_ResetTimer1	;wreg free
 15273                           
 15274                           ;Timer.c: 153: Timer1_Postscaler = 0;
 15275  009470  0E00               	movlw	0
 15276  009472  6E38               	movwf	_Timer1_Postscaler,c
 15277                           
 15278                           ;Timer.c: 154: ResetTimer1();
 15279  009474  EC95  F04A         	call	_ResetTimer1	;wreg free
 15280                           
 15281                           ;Timer.c: 155: (T1CONbits.TMR1ON = TRUE);
 15282  009478  80CD               	bsf	4045,0,c	;volatile
 15283  00947A  0012               	return		;funcret
 15284  00947C                     __end_of_LEDTimerON:
 15285                           	opt stack 0
 15286                           tblptru	equ	0xFF8
 15287                           tblptrh	equ	0xFF7
 15288                           tblptrl	equ	0xFF6
 15289                           tablat	equ	0xFF5
 15290                           prodh	equ	0xFF4
 15291                           prodl	equ	0xFF3
 15292                           intcon	equ	0xFF2
 15293                           indf0	equ	0xFEF
 15294                           postinc0	equ	0xFEE
 15295                           fsr0h	equ	0xFEA
 15296                           fsr0l	equ	0xFE9
 15297                           wreg	equ	0xFE8
 15298                           indf1	equ	0xFE7
 15299                           postdec1	equ	0xFE5
 15300                           fsr1h	equ	0xFE2
 15301                           fsr1l	equ	0xFE1
 15302                           indf2	equ	0xFDF
 15303                           postinc2	equ	0xFDE
 15304                           fsr2h	equ	0xFDA
 15305                           fsr2l	equ	0xFD9
 15306                           status	equ	0xFD8
 15307                           
 15308 ;; *************** function _ResetTimer1 *****************
 15309 ;; Defined at:
 15310 ;;		line 123 in file "Timer.c"
 15311 ;; Parameters:    Size  Location     Type
 15312 ;;		None
 15313 ;; Auto vars:     Size  Location     Type
 15314 ;;		None
 15315 ;; Return value:  Size  Location     Type
 15316 ;;		None               void
 15317 ;; Registers used:
 15318 ;;		wreg, status,2
 15319 ;; Tracked objects:
 15320 ;;		On entry : 0/0
 15321 ;;		On exit  : 0/0
 15322 ;;		Unchanged: 0/0
 15323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15328 ;;Total ram usage:        0 bytes
 15329 ;; Hardware stack levels used:    1
 15330 ;; Hardware stack levels required when called:    6
 15331 ;; This function calls:
 15332 ;;		Nothing
 15333 ;; This function is called by:
 15334 ;;		_LEDTimerON
 15335 ;; This function uses a non-reentrant model
 15336 ;;
 15337                           
 15338                           	psect	text18
 15339  00952A                     __ptext18:
 15340                           	opt stack 0
 15341  00952A                     _ResetTimer1:
 15342                           	opt stack 20
 15343                           
 15344                           ;Timer.c: 129: TMR1H = 0;
 15345                           
 15346                           ;incstack = 0
 15347  00952A  0E00               	movlw	0
 15348  00952C  6ECF               	movwf	4047,c	;volatile
 15349                           
 15350                           ;Timer.c: 130: TMR1L = 2;
 15351  00952E  0E02               	movlw	2
 15352  009530  6ECE               	movwf	4046,c	;volatile
 15353  009532  0012               	return		;funcret
 15354  009534                     __end_of_ResetTimer1:
 15355                           	opt stack 0
 15356                           tblptru	equ	0xFF8
 15357                           tblptrh	equ	0xFF7
 15358                           tblptrl	equ	0xFF6
 15359                           tablat	equ	0xFF5
 15360                           prodh	equ	0xFF4
 15361                           prodl	equ	0xFF3
 15362                           intcon	equ	0xFF2
 15363                           indf0	equ	0xFEF
 15364                           postinc0	equ	0xFEE
 15365                           fsr0h	equ	0xFEA
 15366                           fsr0l	equ	0xFE9
 15367                           wreg	equ	0xFE8
 15368                           indf1	equ	0xFE7
 15369                           postdec1	equ	0xFE5
 15370                           fsr1h	equ	0xFE2
 15371                           fsr1l	equ	0xFE1
 15372                           indf2	equ	0xFDF
 15373                           postinc2	equ	0xFDE
 15374                           fsr2h	equ	0xFDA
 15375                           fsr2l	equ	0xFD9
 15376                           status	equ	0xFD8
 15377                           
 15378 ;; *************** function _SendNEC_wait *****************
 15379 ;; Defined at:
 15380 ;;		line 427 in file "IR.c"
 15381 ;; Parameters:    Size  Location     Type
 15382 ;;  code            4   46[BANK0 ] unsigned long 
 15383 ;;  RepeatAmount    1   50[BANK0 ] unsigned char 
 15384 ;; Auto vars:     Size  Location     Type
 15385 ;;  toggle          1   51[BANK0 ] unsigned char 
 15386 ;; Return value:  Size  Location     Type
 15387 ;;		None               void
 15388 ;; Registers used:
 15389 ;;		wreg, status,2, status,0, cstack
 15390 ;; Tracked objects:
 15391 ;;		On entry : 0/0
 15392 ;;		On exit  : 0/0
 15393 ;;		Unchanged: 0/0
 15394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15395 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15396 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15398 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15399 ;;Total ram usage:        6 bytes
 15400 ;; Hardware stack levels used:    1
 15401 ;; Hardware stack levels required when called:    8
 15402 ;; This function calls:
 15403 ;;		_CheckReceivingIR
 15404 ;;		_ReadIRpin
 15405 ;;		_SendNEC_bytes
 15406 ;;		_delayUS
 15407 ;; This function is called by:
 15408 ;;		_UseBluetooth
 15409 ;; This function uses a non-reentrant model
 15410 ;;
 15411                           
 15412                           	psect	text19
 15413  0085AA                     __ptext19:
 15414                           	opt stack 0
 15415  0085AA                     _SendNEC_wait:
 15416                           	opt stack 21
 15417                           
 15418                           ;IR.c: 429: unsigned char toggle = 0;
 15419                           
 15420                           ;incstack = 0
 15421  0085AA  0E00               	movlw	0
 15422  0085AC  0100               	movlb	0	; () banked
 15423  0085AE  6F93               	movwf	SendNEC_wait@toggle& (0+255),b
 15424                           
 15425                           ; BSR set to: 0
 15426                           
 15427                           ;IR.c: 430: while(CheckReceivingIR());
 15428  0085B0  D000               	goto	l15165
 15429  0085B2                     l15165:
 15430  0085B2  EC3E  F04A         	call	_CheckReceivingIR	;wreg free
 15431  0085B6  0900               	iorlw	0
 15432  0085B8  A4D8               	btfss	status,2,c
 15433  0085BA  D7FB               	goto	l15165
 15434                           
 15435                           ;IR.c: 432: (IOCBbits.IOCB4 = 0);
 15436  0085BC  987D               	bcf	3965,4,c	;volatile
 15437                           
 15438                           ;IR.c: 433: INTCONbits.RBIE = 0;
 15439  0085BE  96F2               	bcf	intcon,3,c	;volatile
 15440                           
 15441                           ;IR.c: 434: INTCONbits.PEIE = 0;
 15442  0085C0  9CF2               	bcf	intcon,6,c	;volatile
 15443                           
 15444                           ;IR.c: 436: SendNEC_bytes(code, RepeatAmount);
 15445  0085C2  C08E  F089         	movff	SendNEC_wait@code,SendNEC_bytes@code
 15446  0085C6  C08F  F08A         	movff	SendNEC_wait@code+1,SendNEC_bytes@code+1
 15447  0085CA  C090  F08B         	movff	SendNEC_wait@code+2,SendNEC_bytes@code+2
 15448  0085CE  C091  F08C         	movff	SendNEC_wait@code+3,SendNEC_bytes@code+3
 15449  0085D2  C092  F08D         	movff	SendNEC_wait@RepeatAmount,SendNEC_bytes@RepeatAmount
 15450  0085D6  ECFB  F043         	call	_SendNEC_bytes	;wreg free
 15451                           
 15452                           ;IR.c: 437: while(!Sent)
 15453  0085DA  D01C               	goto	l15187
 15454  0085DC                     l15169:
 15455                           
 15456                           ;IR.c: 438: {
 15457                           ;IR.c: 439: if(IRmod)
 15458  0085DC  0100               	movlb	0	; () banked
 15459  0085DE  51DE               	movf	_IRmod& (0+255),w,b	;volatile
 15460  0085E0  B4D8               	btfsc	status,2,c
 15461  0085E2  D013               	goto	l15183
 15462                           
 15463                           ; BSR set to: 0
 15464                           ;IR.c: 440: {
 15465                           ;IR.c: 442: if(toggle < 9)
 15466  0085E4  0E09               	movlw	9
 15467  0085E6  0100               	movlb	0	; () banked
 15468  0085E8  6193               	cpfslt	SendNEC_wait@toggle& (0+255),b
 15469  0085EA  D002               	goto	l15175
 15470                           
 15471                           ; BSR set to: 0
 15472                           ;IR.c: 443: {
 15473                           ;IR.c: 444: (LATC |= 0x08);
 15474  0085EC  868B               	bsf	3979,3,c	;volatile
 15475                           
 15476                           ;IR.c: 445: }
 15477  0085EE  D00A               	goto	l15181
 15478  0085F0                     l15175:
 15479                           
 15480                           ; BSR set to: 0
 15481                           ;IR.c: 446: else if(toggle < 17)
 15482  0085F0  0E11               	movlw	17
 15483  0085F2  0100               	movlb	0	; () banked
 15484  0085F4  6193               	cpfslt	SendNEC_wait@toggle& (0+255),b
 15485  0085F6  D002               	goto	l15179
 15486                           
 15487                           ; BSR set to: 0
 15488                           ;IR.c: 447: {
 15489                           ;IR.c: 448: (LATC &= ~0x08);
 15490  0085F8  968B               	bcf	3979,3,c	;volatile
 15491                           
 15492                           ;IR.c: 449: }
 15493  0085FA  D004               	goto	l15181
 15494  0085FC                     l15179:
 15495                           
 15496                           ; BSR set to: 0
 15497                           ;IR.c: 450: else
 15498                           ;IR.c: 451: {
 15499                           ;IR.c: 452: toggle = 0;
 15500  0085FC  0E00               	movlw	0
 15501  0085FE  0100               	movlb	0	; () banked
 15502  008600  6F93               	movwf	SendNEC_wait@toggle& (0+255),b
 15503                           
 15504                           ; BSR set to: 0
 15505  008602  D000               	goto	l15181
 15506  008604                     l15181:
 15507                           
 15508                           ; BSR set to: 0
 15509                           ;IR.c: 453: }
 15510                           ;IR.c: 454: toggle++;
 15511  008604  0100               	movlb	0	; () banked
 15512  008606  2B93               	incf	SendNEC_wait@toggle& (0+255),f,b
 15513                           
 15514                           ;IR.c: 455: }
 15515  008608  D005               	goto	l15187
 15516  00860A                     l15183:
 15517                           
 15518                           ; BSR set to: 0
 15519                           ;IR.c: 456: else
 15520                           ;IR.c: 457: {
 15521                           ;IR.c: 458: (LATC &= ~0x08);
 15522  00860A  968B               	bcf	3979,3,c	;volatile
 15523                           
 15524                           ; BSR set to: 0
 15525                           ;IR.c: 459: toggle = 0;
 15526  00860C  0E00               	movlw	0
 15527  00860E  0100               	movlb	0	; () banked
 15528  008610  6F93               	movwf	SendNEC_wait@toggle& (0+255),b
 15529                           
 15530                           ; BSR set to: 0
 15531  008612  D000               	goto	l15187
 15532  008614                     l15187:
 15533  008614  0100               	movlb	0	; () banked
 15534  008616  51E6               	movf	_Sent& (0+255),w,b	;volatile
 15535  008618  B4D8               	btfsc	status,2,c
 15536  00861A  D7E0               	goto	l15169
 15537                           
 15538                           ; BSR set to: 0
 15539                           ;IR.c: 460: }
 15540                           ;IR.c: 461: }
 15541                           ;IR.c: 463: if(IRbitPosition)
 15542                           
 15543                           ; BSR set to: 0
 15544  00861C  5040               	movf	_IRbitPosition,w,c	;volatile
 15545  00861E  A4D8               	btfss	status,2,c
 15546                           
 15547                           ; BSR set to: 0
 15548                           ;IR.c: 464: {
 15549                           ;IR.c: 466: __nop();
 15550  008620  F000               	nop	
 15551                           
 15552                           ;IR.c: 467: }
 15553                           ;IR.c: 469: INTCONbits.PEIE = 1;
 15554  008622  8CF2               	bsf	intcon,6,c	;volatile
 15555                           
 15556                           ;IR.c: 470: delayUS(8000);
 15557  008624  0E40               	movlw	64
 15558  008626  0100               	movlb	0	; () banked
 15559  008628  6F79               	movwf	delayUS@US& (0+255),b
 15560  00862A  0E1F               	movlw	31
 15561  00862C  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 15562  00862E  0E00               	movlw	0
 15563  008630  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 15564  008632  0E00               	movlw	0
 15565  008634  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 15566  008636  EC57  F047         	call	_delayUS	;wreg free
 15567                           
 15568                           ;IR.c: 471: IRpinOLD = ReadIRpin();
 15569  00863A  EC72  F04A         	call	_ReadIRpin	;wreg free
 15570  00863E  6E2E               	movwf	_IRpinOLD,c
 15571                           
 15572                           ;IR.c: 472: INTCONbits.RBIF = 0;
 15573  008640  90F2               	bcf	intcon,0,c	;volatile
 15574                           
 15575                           ;IR.c: 473: (IOCBbits.IOCB4 = 1);
 15576  008642  887D               	bsf	3965,4,c	;volatile
 15577                           
 15578                           ;IR.c: 474: INTCONbits.RBIE = 1;
 15579  008644  86F2               	bsf	intcon,3,c	;volatile
 15580  008646  0012               	return		;funcret
 15581  008648                     __end_of_SendNEC_wait:
 15582                           	opt stack 0
 15583                           tblptru	equ	0xFF8
 15584                           tblptrh	equ	0xFF7
 15585                           tblptrl	equ	0xFF6
 15586                           tablat	equ	0xFF5
 15587                           prodh	equ	0xFF4
 15588                           prodl	equ	0xFF3
 15589                           intcon	equ	0xFF2
 15590                           indf0	equ	0xFEF
 15591                           postinc0	equ	0xFEE
 15592                           fsr0h	equ	0xFEA
 15593                           fsr0l	equ	0xFE9
 15594                           wreg	equ	0xFE8
 15595                           indf1	equ	0xFE7
 15596                           postdec1	equ	0xFE5
 15597                           fsr1h	equ	0xFE2
 15598                           fsr1l	equ	0xFE1
 15599                           indf2	equ	0xFDF
 15600                           postinc2	equ	0xFDE
 15601                           fsr2h	equ	0xFDA
 15602                           fsr2l	equ	0xFD9
 15603                           status	equ	0xFD8
 15604                           
 15605 ;; *************** function _SendNEC_bytes *****************
 15606 ;; Defined at:
 15607 ;;		line 364 in file "IR.c"
 15608 ;; Parameters:    Size  Location     Type
 15609 ;;  code            4   41[BANK0 ] unsigned long 
 15610 ;;  RepeatAmount    1   45[BANK0 ] unsigned char 
 15611 ;; Auto vars:     Size  Location     Type
 15612 ;;		None
 15613 ;; Return value:  Size  Location     Type
 15614 ;;                  1    wreg      unsigned char 
 15615 ;; Registers used:
 15616 ;;		wreg, status,2, status,0, cstack
 15617 ;; Tracked objects:
 15618 ;;		On entry : 0/0
 15619 ;;		On exit  : 0/0
 15620 ;;		Unchanged: 0/0
 15621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15622 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15625 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15626 ;;Total ram usage:        5 bytes
 15627 ;; Hardware stack levels used:    1
 15628 ;; Hardware stack levels required when called:    7
 15629 ;; This function calls:
 15630 ;;		_Reverse_4Byte
 15631 ;; This function is called by:
 15632 ;;		_SendNEC_wait
 15633 ;; This function uses a non-reentrant model
 15634 ;;
 15635                           
 15636                           	psect	text20
 15637  0087F6                     __ptext20:
 15638                           	opt stack 0
 15639  0087F6                     _SendNEC_bytes:
 15640                           	opt stack 21
 15641                           
 15642                           ;IR.c: 393: if(Sent)
 15643                           
 15644                           ;incstack = 0
 15645  0087F6  0100               	movlb	0	; () banked
 15646  0087F8  51E6               	movf	_Sent& (0+255),w,b	;volatile
 15647  0087FA  B4D8               	btfsc	status,2,c
 15648  0087FC  0012               	return	
 15649                           
 15650                           ; BSR set to: 0
 15651                           ;IR.c: 394: {
 15652                           ;IR.c: 396: if(!code)
 15653  0087FE  0100               	movlb	0	; () banked
 15654  008800  5189               	movf	SendNEC_bytes@code& (0+255),w,b
 15655  008802  0100               	movlb	0	; () banked
 15656  008804  118A               	iorwf	(SendNEC_bytes@code+1)& (0+255),w,b
 15657  008806  0100               	movlb	0	; () banked
 15658  008808  118B               	iorwf	(SendNEC_bytes@code+2)& (0+255),w,b
 15659  00880A  0100               	movlb	0	; () banked
 15660  00880C  118C               	iorwf	(SendNEC_bytes@code+3)& (0+255),w,b
 15661  00880E  B4D8               	btfsc	status,2,c
 15662  008810  0012               	return	
 15663  008812  D001               	goto	l14131
 15664                           
 15665                           ; BSR set to: 0
 15666                           ;IR.c: 397: {
 15667                           ;IR.c: 398: return 0;
 15668                           ;	Return value of _SendNEC_bytes is never used
 15669  008814  0012               	return	
 15670  008816                     l14131:
 15671                           
 15672                           ; BSR set to: 0
 15673                           ;IR.c: 399: }
 15674                           ;IR.c: 400: RF_IR = 66;
 15675  008816  0E42               	movlw	66
 15676  008818  6E42               	movwf	_RF_IR,c
 15677                           
 15678                           ;IR.c: 401: Sent = 0;
 15679  00881A  0E00               	movlw	0
 15680  00881C  0100               	movlb	0	; () banked
 15681  00881E  6FE6               	movwf	_Sent& (0+255),b	;volatile
 15682                           
 15683                           ;IR.c: 402: IRsendFlag = 1;
 15684  008820  0E01               	movlw	1
 15685  008822  6E32               	movwf	_IRsendFlag,c
 15686                           
 15687                           ;IR.c: 403: IRcodeBit = 0;
 15688  008824  0E00               	movlw	0
 15689  008826  6E2D               	movwf	_IRcodeBit,c
 15690                           
 15691                           ;IR.c: 404: IRcodePlace = 7;
 15692  008828  0E07               	movlw	7
 15693  00882A  6E41               	movwf	_IRcodePlace,c
 15694                           
 15695                           ; BSR set to: 0
 15696                           ;IR.c: 405: IRsendCode = Reverse_4Byte(code);
 15697  00882C  C089  F079         	movff	SendNEC_bytes@code,Reverse_4Byte@This
 15698  008830  C08A  F07A         	movff	SendNEC_bytes@code+1,Reverse_4Byte@This+1
 15699  008834  C08B  F07B         	movff	SendNEC_bytes@code+2,Reverse_4Byte@This+2
 15700  008838  C08C  F07C         	movff	SendNEC_bytes@code+3,Reverse_4Byte@This+3
 15701  00883C  EC66  F018         	call	_Reverse_4Byte	;wreg free
 15702  008840  C079  F2E2         	movff	?_Reverse_4Byte,_IRsendCode
 15703  008844  C07A  F2E3         	movff	?_Reverse_4Byte+1,_IRsendCode+1
 15704  008848  C07B  F2E4         	movff	?_Reverse_4Byte+2,_IRsendCode+2
 15705  00884C  C07C  F2E5         	movff	?_Reverse_4Byte+3,_IRsendCode+3
 15706                           
 15707                           ;IR.c: 406: if(RepeatAmount)
 15708  008850  0100               	movlb	0	; () banked
 15709  008852  518D               	movf	SendNEC_bytes@RepeatAmount& (0+255),w,b
 15710  008854  0100               	movlb	0	; () banked
 15711  008856  B4D8               	btfsc	status,2,c
 15712  008858  D003               	goto	l14139
 15713                           
 15714                           ; BSR set to: 0
 15715                           ;IR.c: 407: {
 15716                           ;IR.c: 408: IRrepeatflag = 1;
 15717  00885A  0E01               	movlw	1
 15718  00885C  6E31               	movwf	_IRrepeatflag,c
 15719  00885E  D000               	goto	l14139
 15720  008860                     l14139:
 15721                           
 15722                           ; BSR set to: 0
 15723                           ;IR.c: 409: }
 15724                           ;IR.c: 410: IRrepeatAmount = RepeatAmount;
 15725  008860  C08D  F030         	movff	SendNEC_bytes@RepeatAmount,_IRrepeatAmount
 15726                           
 15727                           ;IR.c: 411: (TMR2 = 0);
 15728  008864  0E00               	movlw	0
 15729  008866  6ECC               	movwf	4044,c	;volatile
 15730                           
 15731                           ;IR.c: 412: (PR2 = 150);
 15732  008868  0E96               	movlw	150
 15733  00886A  6ECB               	movwf	4043,c	;volatile
 15734                           
 15735                           ;IR.c: 413: RF_IR_Postscaler = 4;
 15736  00886C  0E04               	movlw	4
 15737  00886E  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 15738                           
 15739                           ;IR.c: 414: (IRmod = 1);
 15740  008870  0E01               	movlw	1
 15741  008872  0100               	movlb	0	; () banked
 15742  008874  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 15743                           
 15744                           ; BSR set to: 0
 15745                           ;IR.c: 415: (T2CONbits.TMR2ON = 1);
 15746  008876  84CA               	bsf	4042,2,c	;volatile
 15747                           
 15748                           ; BSR set to: 0
 15749                           ;IR.c: 416: return 1;
 15750                           ;	Return value of _SendNEC_bytes is never used
 15751  008878  0012               	return	
 15752                           
 15753                           ; BSR set to: 0
 15754                           
 15755                           ; BSR set to: 0
 15756                           ;IR.c: 417: }
 15757                           ;IR.c: 418: return 2;
 15758                           ;	Return value of _SendNEC_bytes is never used
 15759  00887A  0012               	return		;funcret
 15760  00887C                     __end_of_SendNEC_bytes:
 15761                           	opt stack 0
 15762                           tblptru	equ	0xFF8
 15763                           tblptrh	equ	0xFF7
 15764                           tblptrl	equ	0xFF6
 15765                           tablat	equ	0xFF5
 15766                           prodh	equ	0xFF4
 15767                           prodl	equ	0xFF3
 15768                           intcon	equ	0xFF2
 15769                           indf0	equ	0xFEF
 15770                           postinc0	equ	0xFEE
 15771                           fsr0h	equ	0xFEA
 15772                           fsr0l	equ	0xFE9
 15773                           wreg	equ	0xFE8
 15774                           indf1	equ	0xFE7
 15775                           postdec1	equ	0xFE5
 15776                           fsr1h	equ	0xFE2
 15777                           fsr1l	equ	0xFE1
 15778                           indf2	equ	0xFDF
 15779                           postinc2	equ	0xFDE
 15780                           fsr2h	equ	0xFDA
 15781                           fsr2l	equ	0xFD9
 15782                           status	equ	0xFD8
 15783                           
 15784 ;; *************** function _Reverse_4Byte *****************
 15785 ;; Defined at:
 15786 ;;		line 412 in file "MISC.c"
 15787 ;; Parameters:    Size  Location     Type
 15788 ;;  This            4   25[BANK0 ] unsigned long 
 15789 ;; Auto vars:     Size  Location     Type
 15790 ;;  temp            4   37[BANK0 ] unsigned long 
 15791 ;; Return value:  Size  Location     Type
 15792 ;;                  4   25[BANK0 ] unsigned long 
 15793 ;; Registers used:
 15794 ;;		wreg, status,2, status,0
 15795 ;; Tracked objects:
 15796 ;;		On entry : 0/0
 15797 ;;		On exit  : 0/0
 15798 ;;		Unchanged: 0/0
 15799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15800 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15801 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15802 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15803 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15804 ;;Total ram usage:       16 bytes
 15805 ;; Hardware stack levels used:    1
 15806 ;; Hardware stack levels required when called:    6
 15807 ;; This function calls:
 15808 ;;		Nothing
 15809 ;; This function is called by:
 15810 ;;		_SendNEC_bytes
 15811 ;; This function uses a non-reentrant model
 15812 ;;
 15813                           
 15814                           	psect	text21
 15815  0030CC                     __ptext21:
 15816                           	opt stack 0
 15817  0030CC                     _Reverse_4Byte:
 15818                           	opt stack 21
 15819                           
 15820                           ;MISC.c: 414: unsigned long temp=0;
 15821                           
 15822                           ; BSR set to: 0
 15823                           ;incstack = 0
 15824  0030CC  0E00               	movlw	0
 15825  0030CE  0100               	movlb	0	; () banked
 15826  0030D0  6F85               	movwf	Reverse_4Byte@temp& (0+255),b
 15827  0030D2  0E00               	movlw	0
 15828  0030D4  6F86               	movwf	(Reverse_4Byte@temp+1)& (0+255),b
 15829  0030D6  0E00               	movlw	0
 15830  0030D8  6F87               	movwf	(Reverse_4Byte@temp+2)& (0+255),b
 15831  0030DA  0E00               	movlw	0
 15832  0030DC  6F88               	movwf	(Reverse_4Byte@temp+3)& (0+255),b
 15833                           
 15834                           ; BSR set to: 0
 15835                           ;MISC.c: 416: temp += (This & 0x00000001) << 31;
 15836  0030DE  0E01               	movlw	1
 15837  0030E0  0100               	movlb	0	; () banked
 15838  0030E2  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 15839  0030E4  0100               	movlb	0	; () banked
 15840  0030E6  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 15841  0030E8  0E00               	movlw	0
 15842  0030EA  0100               	movlb	0	; () banked
 15843  0030EC  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 15844  0030EE  0100               	movlb	0	; () banked
 15845  0030F0  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 15846  0030F2  0E00               	movlw	0
 15847  0030F4  0100               	movlb	0	; () banked
 15848  0030F6  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 15849  0030F8  0100               	movlb	0	; () banked
 15850  0030FA  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 15851  0030FC  0E00               	movlw	0
 15852  0030FE  0100               	movlb	0	; () banked
 15853  003100  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 15854  003102  0100               	movlb	0	; () banked
 15855  003104  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 15856  003106  0E1F               	movlw	31
 15857  003108                     u15875:
 15858  003108  90D8               	bcf	status,0,c
 15859  00310A  0100               	movlb	0	; () banked
 15860  00310C  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 15861  00310E  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 15862  003110  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 15863  003112  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 15864  003114  2EE8               	decfsz	wreg,f,c
 15865  003116  D7F8               	goto	u15875
 15866  003118  0100               	movlb	0	; () banked
 15867  00311A  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 15868  00311C  0100               	movlb	0	; () banked
 15869  00311E  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 15870  003120  0100               	movlb	0	; () banked
 15871  003122  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 15872  003124  0100               	movlb	0	; () banked
 15873  003126  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 15874  003128  0100               	movlb	0	; () banked
 15875  00312A  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 15876  00312C  0100               	movlb	0	; () banked
 15877  00312E  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 15878  003130  0100               	movlb	0	; () banked
 15879  003132  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 15880  003134  0100               	movlb	0	; () banked
 15881  003136  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 15882                           
 15883                           ; BSR set to: 0
 15884                           ;MISC.c: 417: temp += (This & 0x00000002) << 29;
 15885  003138  0E02               	movlw	2
 15886  00313A  0100               	movlb	0	; () banked
 15887  00313C  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 15888  00313E  0100               	movlb	0	; () banked
 15889  003140  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 15890  003142  0E00               	movlw	0
 15891  003144  0100               	movlb	0	; () banked
 15892  003146  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 15893  003148  0100               	movlb	0	; () banked
 15894  00314A  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 15895  00314C  0E00               	movlw	0
 15896  00314E  0100               	movlb	0	; () banked
 15897  003150  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 15898  003152  0100               	movlb	0	; () banked
 15899  003154  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 15900  003156  0E00               	movlw	0
 15901  003158  0100               	movlb	0	; () banked
 15902  00315A  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 15903  00315C  0100               	movlb	0	; () banked
 15904  00315E  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 15905  003160  0E1D               	movlw	29
 15906  003162                     u15885:
 15907  003162  90D8               	bcf	status,0,c
 15908  003164  0100               	movlb	0	; () banked
 15909  003166  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 15910  003168  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 15911  00316A  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 15912  00316C  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 15913  00316E  2EE8               	decfsz	wreg,f,c
 15914  003170  D7F8               	goto	u15885
 15915  003172  0100               	movlb	0	; () banked
 15916  003174  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 15917  003176  0100               	movlb	0	; () banked
 15918  003178  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 15919  00317A  0100               	movlb	0	; () banked
 15920  00317C  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 15921  00317E  0100               	movlb	0	; () banked
 15922  003180  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 15923  003182  0100               	movlb	0	; () banked
 15924  003184  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 15925  003186  0100               	movlb	0	; () banked
 15926  003188  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 15927  00318A  0100               	movlb	0	; () banked
 15928  00318C  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 15929  00318E  0100               	movlb	0	; () banked
 15930  003190  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 15931                           
 15932                           ; BSR set to: 0
 15933                           ;MISC.c: 418: temp += (This & 0x00000004) << 27;
 15934  003192  0E04               	movlw	4
 15935  003194  0100               	movlb	0	; () banked
 15936  003196  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 15937  003198  0100               	movlb	0	; () banked
 15938  00319A  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 15939  00319C  0E00               	movlw	0
 15940  00319E  0100               	movlb	0	; () banked
 15941  0031A0  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 15942  0031A2  0100               	movlb	0	; () banked
 15943  0031A4  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 15944  0031A6  0E00               	movlw	0
 15945  0031A8  0100               	movlb	0	; () banked
 15946  0031AA  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 15947  0031AC  0100               	movlb	0	; () banked
 15948  0031AE  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 15949  0031B0  0E00               	movlw	0
 15950  0031B2  0100               	movlb	0	; () banked
 15951  0031B4  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 15952  0031B6  0100               	movlb	0	; () banked
 15953  0031B8  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 15954  0031BA  0E1B               	movlw	27
 15955  0031BC                     u15895:
 15956  0031BC  90D8               	bcf	status,0,c
 15957  0031BE  0100               	movlb	0	; () banked
 15958  0031C0  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 15959  0031C2  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 15960  0031C4  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 15961  0031C6  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 15962  0031C8  2EE8               	decfsz	wreg,f,c
 15963  0031CA  D7F8               	goto	u15895
 15964  0031CC  0100               	movlb	0	; () banked
 15965  0031CE  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 15966  0031D0  0100               	movlb	0	; () banked
 15967  0031D2  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 15968  0031D4  0100               	movlb	0	; () banked
 15969  0031D6  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 15970  0031D8  0100               	movlb	0	; () banked
 15971  0031DA  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 15972  0031DC  0100               	movlb	0	; () banked
 15973  0031DE  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 15974  0031E0  0100               	movlb	0	; () banked
 15975  0031E2  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 15976  0031E4  0100               	movlb	0	; () banked
 15977  0031E6  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 15978  0031E8  0100               	movlb	0	; () banked
 15979  0031EA  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 15980                           
 15981                           ; BSR set to: 0
 15982                           ;MISC.c: 419: temp += (This & 0x00000008) << 25;
 15983  0031EC  0E08               	movlw	8
 15984  0031EE  0100               	movlb	0	; () banked
 15985  0031F0  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 15986  0031F2  0100               	movlb	0	; () banked
 15987  0031F4  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 15988  0031F6  0E00               	movlw	0
 15989  0031F8  0100               	movlb	0	; () banked
 15990  0031FA  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 15991  0031FC  0100               	movlb	0	; () banked
 15992  0031FE  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 15993  003200  0E00               	movlw	0
 15994  003202  0100               	movlb	0	; () banked
 15995  003204  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 15996  003206  0100               	movlb	0	; () banked
 15997  003208  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 15998  00320A  0E00               	movlw	0
 15999  00320C  0100               	movlb	0	; () banked
 16000  00320E  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16001  003210  0100               	movlb	0	; () banked
 16002  003212  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16003  003214  0E19               	movlw	25
 16004  003216                     u15905:
 16005  003216  90D8               	bcf	status,0,c
 16006  003218  0100               	movlb	0	; () banked
 16007  00321A  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16008  00321C  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16009  00321E  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16010  003220  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16011  003222  2EE8               	decfsz	wreg,f,c
 16012  003224  D7F8               	goto	u15905
 16013  003226  0100               	movlb	0	; () banked
 16014  003228  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16015  00322A  0100               	movlb	0	; () banked
 16016  00322C  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16017  00322E  0100               	movlb	0	; () banked
 16018  003230  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16019  003232  0100               	movlb	0	; () banked
 16020  003234  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16021  003236  0100               	movlb	0	; () banked
 16022  003238  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16023  00323A  0100               	movlb	0	; () banked
 16024  00323C  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16025  00323E  0100               	movlb	0	; () banked
 16026  003240  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16027  003242  0100               	movlb	0	; () banked
 16028  003244  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16029                           
 16030                           ; BSR set to: 0
 16031                           ;MISC.c: 420: temp += (This & 0x00000010) << 23;
 16032  003246  0E10               	movlw	16
 16033  003248  0100               	movlb	0	; () banked
 16034  00324A  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16035  00324C  0100               	movlb	0	; () banked
 16036  00324E  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16037  003250  0E00               	movlw	0
 16038  003252  0100               	movlb	0	; () banked
 16039  003254  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16040  003256  0100               	movlb	0	; () banked
 16041  003258  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16042  00325A  0E00               	movlw	0
 16043  00325C  0100               	movlb	0	; () banked
 16044  00325E  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16045  003260  0100               	movlb	0	; () banked
 16046  003262  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16047  003264  0E00               	movlw	0
 16048  003266  0100               	movlb	0	; () banked
 16049  003268  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16050  00326A  0100               	movlb	0	; () banked
 16051  00326C  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16052  00326E  0E17               	movlw	23
 16053  003270                     u15915:
 16054  003270  90D8               	bcf	status,0,c
 16055  003272  0100               	movlb	0	; () banked
 16056  003274  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16057  003276  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16058  003278  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16059  00327A  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16060  00327C  2EE8               	decfsz	wreg,f,c
 16061  00327E  D7F8               	goto	u15915
 16062  003280  0100               	movlb	0	; () banked
 16063  003282  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16064  003284  0100               	movlb	0	; () banked
 16065  003286  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16066  003288  0100               	movlb	0	; () banked
 16067  00328A  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16068  00328C  0100               	movlb	0	; () banked
 16069  00328E  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16070  003290  0100               	movlb	0	; () banked
 16071  003292  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16072  003294  0100               	movlb	0	; () banked
 16073  003296  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16074  003298  0100               	movlb	0	; () banked
 16075  00329A  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16076  00329C  0100               	movlb	0	; () banked
 16077  00329E  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16078                           
 16079                           ; BSR set to: 0
 16080                           ;MISC.c: 421: temp += (This & 0x00000020) << 21;
 16081  0032A0  0E20               	movlw	32
 16082  0032A2  0100               	movlb	0	; () banked
 16083  0032A4  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16084  0032A6  0100               	movlb	0	; () banked
 16085  0032A8  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16086  0032AA  0E00               	movlw	0
 16087  0032AC  0100               	movlb	0	; () banked
 16088  0032AE  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16089  0032B0  0100               	movlb	0	; () banked
 16090  0032B2  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16091  0032B4  0E00               	movlw	0
 16092  0032B6  0100               	movlb	0	; () banked
 16093  0032B8  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16094  0032BA  0100               	movlb	0	; () banked
 16095  0032BC  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16096  0032BE  0E00               	movlw	0
 16097  0032C0  0100               	movlb	0	; () banked
 16098  0032C2  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16099  0032C4  0100               	movlb	0	; () banked
 16100  0032C6  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16101  0032C8  0E15               	movlw	21
 16102  0032CA                     u15925:
 16103  0032CA  90D8               	bcf	status,0,c
 16104  0032CC  0100               	movlb	0	; () banked
 16105  0032CE  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16106  0032D0  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16107  0032D2  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16108  0032D4  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16109  0032D6  2EE8               	decfsz	wreg,f,c
 16110  0032D8  D7F8               	goto	u15925
 16111  0032DA  0100               	movlb	0	; () banked
 16112  0032DC  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16113  0032DE  0100               	movlb	0	; () banked
 16114  0032E0  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16115  0032E2  0100               	movlb	0	; () banked
 16116  0032E4  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16117  0032E6  0100               	movlb	0	; () banked
 16118  0032E8  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16119  0032EA  0100               	movlb	0	; () banked
 16120  0032EC  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16121  0032EE  0100               	movlb	0	; () banked
 16122  0032F0  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16123  0032F2  0100               	movlb	0	; () banked
 16124  0032F4  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16125  0032F6  0100               	movlb	0	; () banked
 16126  0032F8  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16127                           
 16128                           ; BSR set to: 0
 16129                           ;MISC.c: 422: temp += (This & 0x00000040) << 19;
 16130  0032FA  0E40               	movlw	64
 16131  0032FC  0100               	movlb	0	; () banked
 16132  0032FE  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16133  003300  0100               	movlb	0	; () banked
 16134  003302  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16135  003304  0E00               	movlw	0
 16136  003306  0100               	movlb	0	; () banked
 16137  003308  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16138  00330A  0100               	movlb	0	; () banked
 16139  00330C  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16140  00330E  0E00               	movlw	0
 16141  003310  0100               	movlb	0	; () banked
 16142  003312  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16143  003314  0100               	movlb	0	; () banked
 16144  003316  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16145  003318  0E00               	movlw	0
 16146  00331A  0100               	movlb	0	; () banked
 16147  00331C  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16148  00331E  0100               	movlb	0	; () banked
 16149  003320  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16150  003322  0E13               	movlw	19
 16151  003324                     u15935:
 16152  003324  90D8               	bcf	status,0,c
 16153  003326  0100               	movlb	0	; () banked
 16154  003328  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16155  00332A  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16156  00332C  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16157  00332E  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16158  003330  2EE8               	decfsz	wreg,f,c
 16159  003332  D7F8               	goto	u15935
 16160  003334  0100               	movlb	0	; () banked
 16161  003336  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16162  003338  0100               	movlb	0	; () banked
 16163  00333A  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16164  00333C  0100               	movlb	0	; () banked
 16165  00333E  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16166  003340  0100               	movlb	0	; () banked
 16167  003342  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16168  003344  0100               	movlb	0	; () banked
 16169  003346  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16170  003348  0100               	movlb	0	; () banked
 16171  00334A  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16172  00334C  0100               	movlb	0	; () banked
 16173  00334E  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16174  003350  0100               	movlb	0	; () banked
 16175  003352  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16176                           
 16177                           ; BSR set to: 0
 16178                           ;MISC.c: 423: temp += (This & 0x00000080) << 17;
 16179  003354  0E80               	movlw	128
 16180  003356  0100               	movlb	0	; () banked
 16181  003358  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16182  00335A  0100               	movlb	0	; () banked
 16183  00335C  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16184  00335E  0E00               	movlw	0
 16185  003360  0100               	movlb	0	; () banked
 16186  003362  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16187  003364  0100               	movlb	0	; () banked
 16188  003366  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16189  003368  0E00               	movlw	0
 16190  00336A  0100               	movlb	0	; () banked
 16191  00336C  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16192  00336E  0100               	movlb	0	; () banked
 16193  003370  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16194  003372  0E00               	movlw	0
 16195  003374  0100               	movlb	0	; () banked
 16196  003376  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16197  003378  0100               	movlb	0	; () banked
 16198  00337A  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16199  00337C  0E11               	movlw	17
 16200  00337E                     u15945:
 16201  00337E  90D8               	bcf	status,0,c
 16202  003380  0100               	movlb	0	; () banked
 16203  003382  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16204  003384  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16205  003386  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16206  003388  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16207  00338A  2EE8               	decfsz	wreg,f,c
 16208  00338C  D7F8               	goto	u15945
 16209  00338E  0100               	movlb	0	; () banked
 16210  003390  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16211  003392  0100               	movlb	0	; () banked
 16212  003394  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16213  003396  0100               	movlb	0	; () banked
 16214  003398  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16215  00339A  0100               	movlb	0	; () banked
 16216  00339C  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16217  00339E  0100               	movlb	0	; () banked
 16218  0033A0  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16219  0033A2  0100               	movlb	0	; () banked
 16220  0033A4  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16221  0033A6  0100               	movlb	0	; () banked
 16222  0033A8  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16223  0033AA  0100               	movlb	0	; () banked
 16224  0033AC  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16225                           
 16226                           ; BSR set to: 0
 16227                           ;MISC.c: 424: temp += (This & 0x00000100) << 15;
 16228  0033AE  0E00               	movlw	0
 16229  0033B0  0100               	movlb	0	; () banked
 16230  0033B2  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16231  0033B4  0100               	movlb	0	; () banked
 16232  0033B6  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16233  0033B8  0E01               	movlw	1
 16234  0033BA  0100               	movlb	0	; () banked
 16235  0033BC  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16236  0033BE  0100               	movlb	0	; () banked
 16237  0033C0  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16238  0033C2  0E00               	movlw	0
 16239  0033C4  0100               	movlb	0	; () banked
 16240  0033C6  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16241  0033C8  0100               	movlb	0	; () banked
 16242  0033CA  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16243  0033CC  0E00               	movlw	0
 16244  0033CE  0100               	movlb	0	; () banked
 16245  0033D0  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16246  0033D2  0100               	movlb	0	; () banked
 16247  0033D4  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16248  0033D6  0E0F               	movlw	15
 16249  0033D8                     u15955:
 16250  0033D8  90D8               	bcf	status,0,c
 16251  0033DA  0100               	movlb	0	; () banked
 16252  0033DC  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16253  0033DE  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16254  0033E0  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16255  0033E2  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16256  0033E4  2EE8               	decfsz	wreg,f,c
 16257  0033E6  D7F8               	goto	u15955
 16258  0033E8  0100               	movlb	0	; () banked
 16259  0033EA  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16260  0033EC  0100               	movlb	0	; () banked
 16261  0033EE  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16262  0033F0  0100               	movlb	0	; () banked
 16263  0033F2  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16264  0033F4  0100               	movlb	0	; () banked
 16265  0033F6  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16266  0033F8  0100               	movlb	0	; () banked
 16267  0033FA  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16268  0033FC  0100               	movlb	0	; () banked
 16269  0033FE  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16270  003400  0100               	movlb	0	; () banked
 16271  003402  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16272  003404  0100               	movlb	0	; () banked
 16273  003406  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16274                           
 16275                           ; BSR set to: 0
 16276                           ;MISC.c: 425: temp += (This & 0x00000200) << 13;
 16277  003408  0E00               	movlw	0
 16278  00340A  0100               	movlb	0	; () banked
 16279  00340C  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16280  00340E  0100               	movlb	0	; () banked
 16281  003410  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16282  003412  0E02               	movlw	2
 16283  003414  0100               	movlb	0	; () banked
 16284  003416  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16285  003418  0100               	movlb	0	; () banked
 16286  00341A  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16287  00341C  0E00               	movlw	0
 16288  00341E  0100               	movlb	0	; () banked
 16289  003420  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16290  003422  0100               	movlb	0	; () banked
 16291  003424  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16292  003426  0E00               	movlw	0
 16293  003428  0100               	movlb	0	; () banked
 16294  00342A  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16295  00342C  0100               	movlb	0	; () banked
 16296  00342E  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16297  003430  0E0D               	movlw	13
 16298  003432                     u15965:
 16299  003432  90D8               	bcf	status,0,c
 16300  003434  0100               	movlb	0	; () banked
 16301  003436  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16302  003438  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16303  00343A  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16304  00343C  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16305  00343E  2EE8               	decfsz	wreg,f,c
 16306  003440  D7F8               	goto	u15965
 16307  003442  0100               	movlb	0	; () banked
 16308  003444  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16309  003446  0100               	movlb	0	; () banked
 16310  003448  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16311  00344A  0100               	movlb	0	; () banked
 16312  00344C  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16313  00344E  0100               	movlb	0	; () banked
 16314  003450  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16315  003452  0100               	movlb	0	; () banked
 16316  003454  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16317  003456  0100               	movlb	0	; () banked
 16318  003458  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16319  00345A  0100               	movlb	0	; () banked
 16320  00345C  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16321  00345E  0100               	movlb	0	; () banked
 16322  003460  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16323                           
 16324                           ; BSR set to: 0
 16325                           ;MISC.c: 426: temp += (This & 0x00000400) << 11;
 16326  003462  0E00               	movlw	0
 16327  003464  0100               	movlb	0	; () banked
 16328  003466  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16329  003468  0100               	movlb	0	; () banked
 16330  00346A  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16331  00346C  0E04               	movlw	4
 16332  00346E  0100               	movlb	0	; () banked
 16333  003470  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16334  003472  0100               	movlb	0	; () banked
 16335  003474  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16336  003476  0E00               	movlw	0
 16337  003478  0100               	movlb	0	; () banked
 16338  00347A  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16339  00347C  0100               	movlb	0	; () banked
 16340  00347E  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16341  003480  0E00               	movlw	0
 16342  003482  0100               	movlb	0	; () banked
 16343  003484  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16344  003486  0100               	movlb	0	; () banked
 16345  003488  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16346  00348A  0E0B               	movlw	11
 16347  00348C                     u15975:
 16348  00348C  90D8               	bcf	status,0,c
 16349  00348E  0100               	movlb	0	; () banked
 16350  003490  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16351  003492  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16352  003494  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16353  003496  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16354  003498  2EE8               	decfsz	wreg,f,c
 16355  00349A  D7F8               	goto	u15975
 16356  00349C  0100               	movlb	0	; () banked
 16357  00349E  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16358  0034A0  0100               	movlb	0	; () banked
 16359  0034A2  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16360  0034A4  0100               	movlb	0	; () banked
 16361  0034A6  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16362  0034A8  0100               	movlb	0	; () banked
 16363  0034AA  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16364  0034AC  0100               	movlb	0	; () banked
 16365  0034AE  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16366  0034B0  0100               	movlb	0	; () banked
 16367  0034B2  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16368  0034B4  0100               	movlb	0	; () banked
 16369  0034B6  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16370  0034B8  0100               	movlb	0	; () banked
 16371  0034BA  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16372                           
 16373                           ; BSR set to: 0
 16374                           ;MISC.c: 427: temp += (This & 0x00000800) << 9;
 16375  0034BC  0E00               	movlw	0
 16376  0034BE  0100               	movlb	0	; () banked
 16377  0034C0  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16378  0034C2  0100               	movlb	0	; () banked
 16379  0034C4  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16380  0034C6  0E08               	movlw	8
 16381  0034C8  0100               	movlb	0	; () banked
 16382  0034CA  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16383  0034CC  0100               	movlb	0	; () banked
 16384  0034CE  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16385  0034D0  0E00               	movlw	0
 16386  0034D2  0100               	movlb	0	; () banked
 16387  0034D4  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16388  0034D6  0100               	movlb	0	; () banked
 16389  0034D8  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16390  0034DA  0E00               	movlw	0
 16391  0034DC  0100               	movlb	0	; () banked
 16392  0034DE  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16393  0034E0  0100               	movlb	0	; () banked
 16394  0034E2  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16395  0034E4  0E09               	movlw	9
 16396  0034E6                     u15985:
 16397  0034E6  90D8               	bcf	status,0,c
 16398  0034E8  0100               	movlb	0	; () banked
 16399  0034EA  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16400  0034EC  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16401  0034EE  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16402  0034F0  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16403  0034F2  2EE8               	decfsz	wreg,f,c
 16404  0034F4  D7F8               	goto	u15985
 16405  0034F6  0100               	movlb	0	; () banked
 16406  0034F8  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16407  0034FA  0100               	movlb	0	; () banked
 16408  0034FC  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16409  0034FE  0100               	movlb	0	; () banked
 16410  003500  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16411  003502  0100               	movlb	0	; () banked
 16412  003504  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16413  003506  0100               	movlb	0	; () banked
 16414  003508  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16415  00350A  0100               	movlb	0	; () banked
 16416  00350C  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16417  00350E  0100               	movlb	0	; () banked
 16418  003510  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16419  003512  0100               	movlb	0	; () banked
 16420  003514  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16421                           
 16422                           ; BSR set to: 0
 16423                           ;MISC.c: 428: temp += (This & 0x00001000) << 7;
 16424  003516  0E00               	movlw	0
 16425  003518  0100               	movlb	0	; () banked
 16426  00351A  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16427  00351C  0100               	movlb	0	; () banked
 16428  00351E  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16429  003520  0E10               	movlw	16
 16430  003522  0100               	movlb	0	; () banked
 16431  003524  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16432  003526  0100               	movlb	0	; () banked
 16433  003528  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16434  00352A  0E00               	movlw	0
 16435  00352C  0100               	movlb	0	; () banked
 16436  00352E  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16437  003530  0100               	movlb	0	; () banked
 16438  003532  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16439  003534  0E00               	movlw	0
 16440  003536  0100               	movlb	0	; () banked
 16441  003538  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16442  00353A  0100               	movlb	0	; () banked
 16443  00353C  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16444  00353E  0E07               	movlw	7
 16445  003540                     u15995:
 16446  003540  90D8               	bcf	status,0,c
 16447  003542  0100               	movlb	0	; () banked
 16448  003544  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16449  003546  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16450  003548  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16451  00354A  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16452  00354C  2EE8               	decfsz	wreg,f,c
 16453  00354E  D7F8               	goto	u15995
 16454  003550  0100               	movlb	0	; () banked
 16455  003552  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16456  003554  0100               	movlb	0	; () banked
 16457  003556  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16458  003558  0100               	movlb	0	; () banked
 16459  00355A  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16460  00355C  0100               	movlb	0	; () banked
 16461  00355E  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16462  003560  0100               	movlb	0	; () banked
 16463  003562  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16464  003564  0100               	movlb	0	; () banked
 16465  003566  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16466  003568  0100               	movlb	0	; () banked
 16467  00356A  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16468  00356C  0100               	movlb	0	; () banked
 16469  00356E  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16470                           
 16471                           ; BSR set to: 0
 16472                           ;MISC.c: 429: temp += (This & 0x00002000) << 5;
 16473  003570  0E00               	movlw	0
 16474  003572  0100               	movlb	0	; () banked
 16475  003574  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16476  003576  0100               	movlb	0	; () banked
 16477  003578  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16478  00357A  0E20               	movlw	32
 16479  00357C  0100               	movlb	0	; () banked
 16480  00357E  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16481  003580  0100               	movlb	0	; () banked
 16482  003582  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16483  003584  0E00               	movlw	0
 16484  003586  0100               	movlb	0	; () banked
 16485  003588  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16486  00358A  0100               	movlb	0	; () banked
 16487  00358C  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16488  00358E  0E00               	movlw	0
 16489  003590  0100               	movlb	0	; () banked
 16490  003592  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16491  003594  0100               	movlb	0	; () banked
 16492  003596  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16493  003598  0E05               	movlw	5
 16494  00359A                     u16005:
 16495  00359A  90D8               	bcf	status,0,c
 16496  00359C  0100               	movlb	0	; () banked
 16497  00359E  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16498  0035A0  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16499  0035A2  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16500  0035A4  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16501  0035A6  2EE8               	decfsz	wreg,f,c
 16502  0035A8  D7F8               	goto	u16005
 16503  0035AA  0100               	movlb	0	; () banked
 16504  0035AC  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16505  0035AE  0100               	movlb	0	; () banked
 16506  0035B0  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16507  0035B2  0100               	movlb	0	; () banked
 16508  0035B4  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16509  0035B6  0100               	movlb	0	; () banked
 16510  0035B8  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16511  0035BA  0100               	movlb	0	; () banked
 16512  0035BC  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16513  0035BE  0100               	movlb	0	; () banked
 16514  0035C0  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16515  0035C2  0100               	movlb	0	; () banked
 16516  0035C4  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16517  0035C6  0100               	movlb	0	; () banked
 16518  0035C8  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16519                           
 16520                           ; BSR set to: 0
 16521                           ;MISC.c: 430: temp += (This & 0x00004000) << 3;
 16522  0035CA  0E00               	movlw	0
 16523  0035CC  0100               	movlb	0	; () banked
 16524  0035CE  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16525  0035D0  0100               	movlb	0	; () banked
 16526  0035D2  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16527  0035D4  0E40               	movlw	64
 16528  0035D6  0100               	movlb	0	; () banked
 16529  0035D8  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16530  0035DA  0100               	movlb	0	; () banked
 16531  0035DC  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16532  0035DE  0E00               	movlw	0
 16533  0035E0  0100               	movlb	0	; () banked
 16534  0035E2  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16535  0035E4  0100               	movlb	0	; () banked
 16536  0035E6  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16537  0035E8  0E00               	movlw	0
 16538  0035EA  0100               	movlb	0	; () banked
 16539  0035EC  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16540  0035EE  0100               	movlb	0	; () banked
 16541  0035F0  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16542  0035F2  0E03               	movlw	3
 16543  0035F4                     u16015:
 16544  0035F4  90D8               	bcf	status,0,c
 16545  0035F6  0100               	movlb	0	; () banked
 16546  0035F8  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16547  0035FA  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16548  0035FC  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16549  0035FE  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16550  003600  2EE8               	decfsz	wreg,f,c
 16551  003602  D7F8               	goto	u16015
 16552  003604  0100               	movlb	0	; () banked
 16553  003606  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16554  003608  0100               	movlb	0	; () banked
 16555  00360A  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16556  00360C  0100               	movlb	0	; () banked
 16557  00360E  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16558  003610  0100               	movlb	0	; () banked
 16559  003612  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16560  003614  0100               	movlb	0	; () banked
 16561  003616  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16562  003618  0100               	movlb	0	; () banked
 16563  00361A  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16564  00361C  0100               	movlb	0	; () banked
 16565  00361E  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16566  003620  0100               	movlb	0	; () banked
 16567  003622  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16568                           
 16569                           ; BSR set to: 0
 16570                           ;MISC.c: 431: temp += (This & 0x00008000) << 1;
 16571  003624  0E00               	movlw	0
 16572  003626  0100               	movlb	0	; () banked
 16573  003628  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16574  00362A  0100               	movlb	0	; () banked
 16575  00362C  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16576  00362E  0E80               	movlw	128
 16577  003630  0100               	movlb	0	; () banked
 16578  003632  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16579  003634  0100               	movlb	0	; () banked
 16580  003636  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16581  003638  0E00               	movlw	0
 16582  00363A  0100               	movlb	0	; () banked
 16583  00363C  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16584  00363E  0100               	movlb	0	; () banked
 16585  003640  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16586  003642  0E00               	movlw	0
 16587  003644  0100               	movlb	0	; () banked
 16588  003646  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16589  003648  0100               	movlb	0	; () banked
 16590  00364A  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16591  00364C  90D8               	bcf	status,0,c
 16592  00364E  0100               	movlb	0	; () banked
 16593  003650  357D               	rlcf	??_Reverse_4Byte& (0+255),w,b
 16594  003652  0100               	movlb	0	; () banked
 16595  003654  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16596  003656  0100               	movlb	0	; () banked
 16597  003658  357E               	rlcf	(??_Reverse_4Byte+1)& (0+255),w,b
 16598  00365A  0100               	movlb	0	; () banked
 16599  00365C  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16600  00365E  0100               	movlb	0	; () banked
 16601  003660  357F               	rlcf	(??_Reverse_4Byte+2)& (0+255),w,b
 16602  003662  0100               	movlb	0	; () banked
 16603  003664  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16604  003666  0100               	movlb	0	; () banked
 16605  003668  3580               	rlcf	(??_Reverse_4Byte+3)& (0+255),w,b
 16606  00366A  0100               	movlb	0	; () banked
 16607  00366C  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16608  00366E  0100               	movlb	0	; () banked
 16609  003670  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16610  003672  0100               	movlb	0	; () banked
 16611  003674  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16612  003676  0100               	movlb	0	; () banked
 16613  003678  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16614  00367A  0100               	movlb	0	; () banked
 16615  00367C  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16616  00367E  0100               	movlb	0	; () banked
 16617  003680  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16618  003682  0100               	movlb	0	; () banked
 16619  003684  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16620  003686  0100               	movlb	0	; () banked
 16621  003688  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16622  00368A  0100               	movlb	0	; () banked
 16623  00368C  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16624                           
 16625                           ; BSR set to: 0
 16626                           ;MISC.c: 432: temp += (This & 0x00010000) >> 1;
 16627  00368E  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16628  003692  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16629  003696  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16630  00369A  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16631  00369E  0100               	movlb	0	; () banked
 16632  0036A0  90D8               	bcf	status,0,c
 16633  0036A2  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16634  0036A4  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16635  0036A6  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16636  0036A8  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16637  0036AA  0E00               	movlw	0
 16638  0036AC  0100               	movlb	0	; () banked
 16639  0036AE  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16640  0036B0  0100               	movlb	0	; () banked
 16641  0036B2  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16642  0036B4  0E80               	movlw	128
 16643  0036B6  0100               	movlb	0	; () banked
 16644  0036B8  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16645  0036BA  0100               	movlb	0	; () banked
 16646  0036BC  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16647  0036BE  0E00               	movlw	0
 16648  0036C0  0100               	movlb	0	; () banked
 16649  0036C2  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16650  0036C4  0100               	movlb	0	; () banked
 16651  0036C6  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16652  0036C8  0E00               	movlw	0
 16653  0036CA  0100               	movlb	0	; () banked
 16654  0036CC  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16655  0036CE  0100               	movlb	0	; () banked
 16656  0036D0  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16657  0036D2  0100               	movlb	0	; () banked
 16658  0036D4  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16659  0036D6  0100               	movlb	0	; () banked
 16660  0036D8  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16661  0036DA  0100               	movlb	0	; () banked
 16662  0036DC  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16663  0036DE  0100               	movlb	0	; () banked
 16664  0036E0  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16665  0036E2  0100               	movlb	0	; () banked
 16666  0036E4  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16667  0036E6  0100               	movlb	0	; () banked
 16668  0036E8  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16669  0036EA  0100               	movlb	0	; () banked
 16670  0036EC  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16671  0036EE  0100               	movlb	0	; () banked
 16672  0036F0  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16673                           
 16674                           ; BSR set to: 0
 16675                           ;MISC.c: 433: temp += (This & 0x00020000) >> 3;
 16676  0036F2  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16677  0036F6  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16678  0036FA  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16679  0036FE  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16680  003702  0E04               	movlw	4
 16681  003704  D006               	goto	u16020
 16682  003706                     u16025:
 16683  003706  0100               	movlb	0	; () banked
 16684  003708  90D8               	bcf	status,0,c
 16685  00370A  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16686  00370C  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16687  00370E  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16688  003710  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16689  003712                     u16020:
 16690  003712  2EE8               	decfsz	wreg,f,c
 16691  003714  D7F8               	goto	u16025
 16692  003716  0E00               	movlw	0
 16693  003718  0100               	movlb	0	; () banked
 16694  00371A  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16695  00371C  0100               	movlb	0	; () banked
 16696  00371E  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16697  003720  0E40               	movlw	64
 16698  003722  0100               	movlb	0	; () banked
 16699  003724  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16700  003726  0100               	movlb	0	; () banked
 16701  003728  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16702  00372A  0E00               	movlw	0
 16703  00372C  0100               	movlb	0	; () banked
 16704  00372E  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16705  003730  0100               	movlb	0	; () banked
 16706  003732  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16707  003734  0E00               	movlw	0
 16708  003736  0100               	movlb	0	; () banked
 16709  003738  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16710  00373A  0100               	movlb	0	; () banked
 16711  00373C  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16712  00373E  0100               	movlb	0	; () banked
 16713  003740  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16714  003742  0100               	movlb	0	; () banked
 16715  003744  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16716  003746  0100               	movlb	0	; () banked
 16717  003748  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16718  00374A  0100               	movlb	0	; () banked
 16719  00374C  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16720  00374E  0100               	movlb	0	; () banked
 16721  003750  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16722  003752  0100               	movlb	0	; () banked
 16723  003754  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16724  003756  0100               	movlb	0	; () banked
 16725  003758  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16726  00375A  0100               	movlb	0	; () banked
 16727  00375C  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16728                           
 16729                           ; BSR set to: 0
 16730                           ;MISC.c: 434: temp += (This & 0x00040000) >> 5;
 16731  00375E  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16732  003762  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16733  003766  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16734  00376A  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16735  00376E  0E06               	movlw	6
 16736  003770  D006               	goto	u16030
 16737  003772                     u16035:
 16738  003772  0100               	movlb	0	; () banked
 16739  003774  90D8               	bcf	status,0,c
 16740  003776  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16741  003778  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16742  00377A  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16743  00377C  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16744  00377E                     u16030:
 16745  00377E  2EE8               	decfsz	wreg,f,c
 16746  003780  D7F8               	goto	u16035
 16747  003782  0E00               	movlw	0
 16748  003784  0100               	movlb	0	; () banked
 16749  003786  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16750  003788  0100               	movlb	0	; () banked
 16751  00378A  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16752  00378C  0E20               	movlw	32
 16753  00378E  0100               	movlb	0	; () banked
 16754  003790  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16755  003792  0100               	movlb	0	; () banked
 16756  003794  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16757  003796  0E00               	movlw	0
 16758  003798  0100               	movlb	0	; () banked
 16759  00379A  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16760  00379C  0100               	movlb	0	; () banked
 16761  00379E  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16762  0037A0  0E00               	movlw	0
 16763  0037A2  0100               	movlb	0	; () banked
 16764  0037A4  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16765  0037A6  0100               	movlb	0	; () banked
 16766  0037A8  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16767  0037AA  0100               	movlb	0	; () banked
 16768  0037AC  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16769  0037AE  0100               	movlb	0	; () banked
 16770  0037B0  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16771  0037B2  0100               	movlb	0	; () banked
 16772  0037B4  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16773  0037B6  0100               	movlb	0	; () banked
 16774  0037B8  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16775  0037BA  0100               	movlb	0	; () banked
 16776  0037BC  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16777  0037BE  0100               	movlb	0	; () banked
 16778  0037C0  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16779  0037C2  0100               	movlb	0	; () banked
 16780  0037C4  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16781  0037C6  0100               	movlb	0	; () banked
 16782  0037C8  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16783                           
 16784                           ; BSR set to: 0
 16785                           ;MISC.c: 435: temp += (This & 0x00080000) >> 7;
 16786  0037CA  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16787  0037CE  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16788  0037D2  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16789  0037D6  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16790  0037DA  0E08               	movlw	8
 16791  0037DC  D006               	goto	u16040
 16792  0037DE                     u16045:
 16793  0037DE  0100               	movlb	0	; () banked
 16794  0037E0  90D8               	bcf	status,0,c
 16795  0037E2  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16796  0037E4  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16797  0037E6  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16798  0037E8  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16799  0037EA                     u16040:
 16800  0037EA  2EE8               	decfsz	wreg,f,c
 16801  0037EC  D7F8               	goto	u16045
 16802  0037EE  0E00               	movlw	0
 16803  0037F0  0100               	movlb	0	; () banked
 16804  0037F2  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16805  0037F4  0100               	movlb	0	; () banked
 16806  0037F6  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16807  0037F8  0E10               	movlw	16
 16808  0037FA  0100               	movlb	0	; () banked
 16809  0037FC  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16810  0037FE  0100               	movlb	0	; () banked
 16811  003800  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16812  003802  0E00               	movlw	0
 16813  003804  0100               	movlb	0	; () banked
 16814  003806  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16815  003808  0100               	movlb	0	; () banked
 16816  00380A  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16817  00380C  0E00               	movlw	0
 16818  00380E  0100               	movlb	0	; () banked
 16819  003810  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16820  003812  0100               	movlb	0	; () banked
 16821  003814  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16822  003816  0100               	movlb	0	; () banked
 16823  003818  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16824  00381A  0100               	movlb	0	; () banked
 16825  00381C  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16826  00381E  0100               	movlb	0	; () banked
 16827  003820  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16828  003822  0100               	movlb	0	; () banked
 16829  003824  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16830  003826  0100               	movlb	0	; () banked
 16831  003828  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16832  00382A  0100               	movlb	0	; () banked
 16833  00382C  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16834  00382E  0100               	movlb	0	; () banked
 16835  003830  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16836  003832  0100               	movlb	0	; () banked
 16837  003834  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16838                           
 16839                           ; BSR set to: 0
 16840                           ;MISC.c: 436: temp += (This & 0x00100000) >> 9;
 16841  003836  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16842  00383A  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16843  00383E  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16844  003842  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16845  003846  0E0A               	movlw	10
 16846  003848  D006               	goto	u16050
 16847  00384A                     u16055:
 16848  00384A  0100               	movlb	0	; () banked
 16849  00384C  90D8               	bcf	status,0,c
 16850  00384E  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16851  003850  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16852  003852  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16853  003854  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16854  003856                     u16050:
 16855  003856  2EE8               	decfsz	wreg,f,c
 16856  003858  D7F8               	goto	u16055
 16857  00385A  0E00               	movlw	0
 16858  00385C  0100               	movlb	0	; () banked
 16859  00385E  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16860  003860  0100               	movlb	0	; () banked
 16861  003862  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16862  003864  0E08               	movlw	8
 16863  003866  0100               	movlb	0	; () banked
 16864  003868  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16865  00386A  0100               	movlb	0	; () banked
 16866  00386C  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16867  00386E  0E00               	movlw	0
 16868  003870  0100               	movlb	0	; () banked
 16869  003872  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16870  003874  0100               	movlb	0	; () banked
 16871  003876  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16872  003878  0E00               	movlw	0
 16873  00387A  0100               	movlb	0	; () banked
 16874  00387C  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16875  00387E  0100               	movlb	0	; () banked
 16876  003880  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16877  003882  0100               	movlb	0	; () banked
 16878  003884  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16879  003886  0100               	movlb	0	; () banked
 16880  003888  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16881  00388A  0100               	movlb	0	; () banked
 16882  00388C  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16883  00388E  0100               	movlb	0	; () banked
 16884  003890  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16885  003892  0100               	movlb	0	; () banked
 16886  003894  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16887  003896  0100               	movlb	0	; () banked
 16888  003898  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16889  00389A  0100               	movlb	0	; () banked
 16890  00389C  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16891  00389E  0100               	movlb	0	; () banked
 16892  0038A0  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16893                           
 16894                           ; BSR set to: 0
 16895                           ;MISC.c: 437: temp += (This & 0x00200000) >> 11;
 16896  0038A2  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16897  0038A6  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16898  0038AA  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16899  0038AE  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16900  0038B2  0E0C               	movlw	12
 16901  0038B4  D006               	goto	u16060
 16902  0038B6                     u16065:
 16903  0038B6  0100               	movlb	0	; () banked
 16904  0038B8  90D8               	bcf	status,0,c
 16905  0038BA  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16906  0038BC  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16907  0038BE  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16908  0038C0  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16909  0038C2                     u16060:
 16910  0038C2  2EE8               	decfsz	wreg,f,c
 16911  0038C4  D7F8               	goto	u16065
 16912  0038C6  0E00               	movlw	0
 16913  0038C8  0100               	movlb	0	; () banked
 16914  0038CA  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16915  0038CC  0100               	movlb	0	; () banked
 16916  0038CE  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16917  0038D0  0E04               	movlw	4
 16918  0038D2  0100               	movlb	0	; () banked
 16919  0038D4  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16920  0038D6  0100               	movlb	0	; () banked
 16921  0038D8  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16922  0038DA  0E00               	movlw	0
 16923  0038DC  0100               	movlb	0	; () banked
 16924  0038DE  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16925  0038E0  0100               	movlb	0	; () banked
 16926  0038E2  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16927  0038E4  0E00               	movlw	0
 16928  0038E6  0100               	movlb	0	; () banked
 16929  0038E8  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16930  0038EA  0100               	movlb	0	; () banked
 16931  0038EC  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16932  0038EE  0100               	movlb	0	; () banked
 16933  0038F0  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16934  0038F2  0100               	movlb	0	; () banked
 16935  0038F4  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16936  0038F6  0100               	movlb	0	; () banked
 16937  0038F8  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16938  0038FA  0100               	movlb	0	; () banked
 16939  0038FC  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16940  0038FE  0100               	movlb	0	; () banked
 16941  003900  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16942  003902  0100               	movlb	0	; () banked
 16943  003904  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16944  003906  0100               	movlb	0	; () banked
 16945  003908  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16946  00390A  0100               	movlb	0	; () banked
 16947  00390C  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16948                           
 16949                           ; BSR set to: 0
 16950                           ;MISC.c: 438: temp += (This & 0x00400000) >> 13;
 16951  00390E  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16952  003912  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16953  003916  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16954  00391A  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16955  00391E  0E0E               	movlw	14
 16956  003920  D006               	goto	u16070
 16957  003922                     u16075:
 16958  003922  0100               	movlb	0	; () banked
 16959  003924  90D8               	bcf	status,0,c
 16960  003926  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16961  003928  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16962  00392A  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16963  00392C  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16964  00392E                     u16070:
 16965  00392E  2EE8               	decfsz	wreg,f,c
 16966  003930  D7F8               	goto	u16075
 16967  003932  0E00               	movlw	0
 16968  003934  0100               	movlb	0	; () banked
 16969  003936  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16970  003938  0100               	movlb	0	; () banked
 16971  00393A  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16972  00393C  0E02               	movlw	2
 16973  00393E  0100               	movlb	0	; () banked
 16974  003940  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16975  003942  0100               	movlb	0	; () banked
 16976  003944  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16977  003946  0E00               	movlw	0
 16978  003948  0100               	movlb	0	; () banked
 16979  00394A  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16980  00394C  0100               	movlb	0	; () banked
 16981  00394E  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16982  003950  0E00               	movlw	0
 16983  003952  0100               	movlb	0	; () banked
 16984  003954  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16985  003956  0100               	movlb	0	; () banked
 16986  003958  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16987  00395A  0100               	movlb	0	; () banked
 16988  00395C  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16989  00395E  0100               	movlb	0	; () banked
 16990  003960  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16991  003962  0100               	movlb	0	; () banked
 16992  003964  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16993  003966  0100               	movlb	0	; () banked
 16994  003968  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16995  00396A  0100               	movlb	0	; () banked
 16996  00396C  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16997  00396E  0100               	movlb	0	; () banked
 16998  003970  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16999  003972  0100               	movlb	0	; () banked
 17000  003974  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17001  003976  0100               	movlb	0	; () banked
 17002  003978  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17003                           
 17004                           ; BSR set to: 0
 17005                           ;MISC.c: 439: temp += (This & 0x00800000) >> 15;
 17006  00397A  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17007  00397E  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17008  003982  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17009  003986  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17010  00398A  0E10               	movlw	16
 17011  00398C  D006               	goto	u16080
 17012  00398E                     u16085:
 17013  00398E  0100               	movlb	0	; () banked
 17014  003990  90D8               	bcf	status,0,c
 17015  003992  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17016  003994  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17017  003996  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17018  003998  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17019  00399A                     u16080:
 17020  00399A  2EE8               	decfsz	wreg,f,c
 17021  00399C  D7F8               	goto	u16085
 17022  00399E  0E00               	movlw	0
 17023  0039A0  0100               	movlb	0	; () banked
 17024  0039A2  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17025  0039A4  0100               	movlb	0	; () banked
 17026  0039A6  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17027  0039A8  0E01               	movlw	1
 17028  0039AA  0100               	movlb	0	; () banked
 17029  0039AC  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17030  0039AE  0100               	movlb	0	; () banked
 17031  0039B0  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17032  0039B2  0E00               	movlw	0
 17033  0039B4  0100               	movlb	0	; () banked
 17034  0039B6  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17035  0039B8  0100               	movlb	0	; () banked
 17036  0039BA  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17037  0039BC  0E00               	movlw	0
 17038  0039BE  0100               	movlb	0	; () banked
 17039  0039C0  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17040  0039C2  0100               	movlb	0	; () banked
 17041  0039C4  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17042  0039C6  0100               	movlb	0	; () banked
 17043  0039C8  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17044  0039CA  0100               	movlb	0	; () banked
 17045  0039CC  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17046  0039CE  0100               	movlb	0	; () banked
 17047  0039D0  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17048  0039D2  0100               	movlb	0	; () banked
 17049  0039D4  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17050  0039D6  0100               	movlb	0	; () banked
 17051  0039D8  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17052  0039DA  0100               	movlb	0	; () banked
 17053  0039DC  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17054  0039DE  0100               	movlb	0	; () banked
 17055  0039E0  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17056  0039E2  0100               	movlb	0	; () banked
 17057  0039E4  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17058                           
 17059                           ; BSR set to: 0
 17060                           ;MISC.c: 440: temp += (This & 0x01000000) >> 17;
 17061  0039E6  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17062  0039EA  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17063  0039EE  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17064  0039F2  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17065  0039F6  0E12               	movlw	18
 17066  0039F8  D006               	goto	u16090
 17067  0039FA                     u16095:
 17068  0039FA  0100               	movlb	0	; () banked
 17069  0039FC  90D8               	bcf	status,0,c
 17070  0039FE  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17071  003A00  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17072  003A02  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17073  003A04  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17074  003A06                     u16090:
 17075  003A06  2EE8               	decfsz	wreg,f,c
 17076  003A08  D7F8               	goto	u16095
 17077  003A0A  0E80               	movlw	128
 17078  003A0C  0100               	movlb	0	; () banked
 17079  003A0E  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17080  003A10  0100               	movlb	0	; () banked
 17081  003A12  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17082  003A14  0E00               	movlw	0
 17083  003A16  0100               	movlb	0	; () banked
 17084  003A18  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17085  003A1A  0100               	movlb	0	; () banked
 17086  003A1C  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17087  003A1E  0E00               	movlw	0
 17088  003A20  0100               	movlb	0	; () banked
 17089  003A22  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17090  003A24  0100               	movlb	0	; () banked
 17091  003A26  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17092  003A28  0E00               	movlw	0
 17093  003A2A  0100               	movlb	0	; () banked
 17094  003A2C  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17095  003A2E  0100               	movlb	0	; () banked
 17096  003A30  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17097  003A32  0100               	movlb	0	; () banked
 17098  003A34  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17099  003A36  0100               	movlb	0	; () banked
 17100  003A38  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17101  003A3A  0100               	movlb	0	; () banked
 17102  003A3C  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17103  003A3E  0100               	movlb	0	; () banked
 17104  003A40  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17105  003A42  0100               	movlb	0	; () banked
 17106  003A44  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17107  003A46  0100               	movlb	0	; () banked
 17108  003A48  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17109  003A4A  0100               	movlb	0	; () banked
 17110  003A4C  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17111  003A4E  0100               	movlb	0	; () banked
 17112  003A50  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17113                           
 17114                           ; BSR set to: 0
 17115                           ;MISC.c: 441: temp += (This & 0x02000000) >> 19;
 17116  003A52  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17117  003A56  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17118  003A5A  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17119  003A5E  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17120  003A62  0E14               	movlw	20
 17121  003A64  D006               	goto	u16100
 17122  003A66                     u16105:
 17123  003A66  0100               	movlb	0	; () banked
 17124  003A68  90D8               	bcf	status,0,c
 17125  003A6A  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17126  003A6C  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17127  003A6E  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17128  003A70  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17129  003A72                     u16100:
 17130  003A72  2EE8               	decfsz	wreg,f,c
 17131  003A74  D7F8               	goto	u16105
 17132  003A76  0E40               	movlw	64
 17133  003A78  0100               	movlb	0	; () banked
 17134  003A7A  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17135  003A7C  0100               	movlb	0	; () banked
 17136  003A7E  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17137  003A80  0E00               	movlw	0
 17138  003A82  0100               	movlb	0	; () banked
 17139  003A84  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17140  003A86  0100               	movlb	0	; () banked
 17141  003A88  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17142  003A8A  0E00               	movlw	0
 17143  003A8C  0100               	movlb	0	; () banked
 17144  003A8E  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17145  003A90  0100               	movlb	0	; () banked
 17146  003A92  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17147  003A94  0E00               	movlw	0
 17148  003A96  0100               	movlb	0	; () banked
 17149  003A98  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17150  003A9A  0100               	movlb	0	; () banked
 17151  003A9C  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17152  003A9E  0100               	movlb	0	; () banked
 17153  003AA0  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17154  003AA2  0100               	movlb	0	; () banked
 17155  003AA4  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17156  003AA6  0100               	movlb	0	; () banked
 17157  003AA8  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17158  003AAA  0100               	movlb	0	; () banked
 17159  003AAC  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17160  003AAE  0100               	movlb	0	; () banked
 17161  003AB0  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17162  003AB2  0100               	movlb	0	; () banked
 17163  003AB4  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17164  003AB6  0100               	movlb	0	; () banked
 17165  003AB8  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17166  003ABA  0100               	movlb	0	; () banked
 17167  003ABC  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17168                           
 17169                           ; BSR set to: 0
 17170                           ;MISC.c: 442: temp += (This & 0x04000000) >> 21;
 17171  003ABE  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17172  003AC2  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17173  003AC6  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17174  003ACA  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17175  003ACE  0E16               	movlw	22
 17176  003AD0  D006               	goto	u16110
 17177  003AD2                     u16115:
 17178  003AD2  0100               	movlb	0	; () banked
 17179  003AD4  90D8               	bcf	status,0,c
 17180  003AD6  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17181  003AD8  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17182  003ADA  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17183  003ADC  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17184  003ADE                     u16110:
 17185  003ADE  2EE8               	decfsz	wreg,f,c
 17186  003AE0  D7F8               	goto	u16115
 17187  003AE2  0E20               	movlw	32
 17188  003AE4  0100               	movlb	0	; () banked
 17189  003AE6  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17190  003AE8  0100               	movlb	0	; () banked
 17191  003AEA  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17192  003AEC  0E00               	movlw	0
 17193  003AEE  0100               	movlb	0	; () banked
 17194  003AF0  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17195  003AF2  0100               	movlb	0	; () banked
 17196  003AF4  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17197  003AF6  0E00               	movlw	0
 17198  003AF8  0100               	movlb	0	; () banked
 17199  003AFA  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17200  003AFC  0100               	movlb	0	; () banked
 17201  003AFE  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17202  003B00  0E00               	movlw	0
 17203  003B02  0100               	movlb	0	; () banked
 17204  003B04  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17205  003B06  0100               	movlb	0	; () banked
 17206  003B08  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17207  003B0A  0100               	movlb	0	; () banked
 17208  003B0C  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17209  003B0E  0100               	movlb	0	; () banked
 17210  003B10  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17211  003B12  0100               	movlb	0	; () banked
 17212  003B14  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17213  003B16  0100               	movlb	0	; () banked
 17214  003B18  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17215  003B1A  0100               	movlb	0	; () banked
 17216  003B1C  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17217  003B1E  0100               	movlb	0	; () banked
 17218  003B20  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17219  003B22  0100               	movlb	0	; () banked
 17220  003B24  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17221  003B26  0100               	movlb	0	; () banked
 17222  003B28  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17223                           
 17224                           ; BSR set to: 0
 17225                           ;MISC.c: 443: temp += (This & 0x08000000) >> 23;
 17226  003B2A  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17227  003B2E  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17228  003B32  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17229  003B36  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17230  003B3A  0E18               	movlw	24
 17231  003B3C  D006               	goto	u16120
 17232  003B3E                     u16125:
 17233  003B3E  0100               	movlb	0	; () banked
 17234  003B40  90D8               	bcf	status,0,c
 17235  003B42  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17236  003B44  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17237  003B46  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17238  003B48  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17239  003B4A                     u16120:
 17240  003B4A  2EE8               	decfsz	wreg,f,c
 17241  003B4C  D7F8               	goto	u16125
 17242  003B4E  0E10               	movlw	16
 17243  003B50  0100               	movlb	0	; () banked
 17244  003B52  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17245  003B54  0100               	movlb	0	; () banked
 17246  003B56  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17247  003B58  0E00               	movlw	0
 17248  003B5A  0100               	movlb	0	; () banked
 17249  003B5C  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17250  003B5E  0100               	movlb	0	; () banked
 17251  003B60  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17252  003B62  0E00               	movlw	0
 17253  003B64  0100               	movlb	0	; () banked
 17254  003B66  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17255  003B68  0100               	movlb	0	; () banked
 17256  003B6A  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17257  003B6C  0E00               	movlw	0
 17258  003B6E  0100               	movlb	0	; () banked
 17259  003B70  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17260  003B72  0100               	movlb	0	; () banked
 17261  003B74  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17262  003B76  0100               	movlb	0	; () banked
 17263  003B78  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17264  003B7A  0100               	movlb	0	; () banked
 17265  003B7C  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17266  003B7E  0100               	movlb	0	; () banked
 17267  003B80  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17268  003B82  0100               	movlb	0	; () banked
 17269  003B84  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17270  003B86  0100               	movlb	0	; () banked
 17271  003B88  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17272  003B8A  0100               	movlb	0	; () banked
 17273  003B8C  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17274  003B8E  0100               	movlb	0	; () banked
 17275  003B90  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17276  003B92  0100               	movlb	0	; () banked
 17277  003B94  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17278                           
 17279                           ; BSR set to: 0
 17280                           ;MISC.c: 444: temp += (This & 0x10000000) >> 25;
 17281  003B96  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17282  003B9A  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17283  003B9E  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17284  003BA2  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17285  003BA6  0E1A               	movlw	26
 17286  003BA8  D006               	goto	u16130
 17287  003BAA                     u16135:
 17288  003BAA  0100               	movlb	0	; () banked
 17289  003BAC  90D8               	bcf	status,0,c
 17290  003BAE  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17291  003BB0  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17292  003BB2  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17293  003BB4  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17294  003BB6                     u16130:
 17295  003BB6  2EE8               	decfsz	wreg,f,c
 17296  003BB8  D7F8               	goto	u16135
 17297  003BBA  0E08               	movlw	8
 17298  003BBC  0100               	movlb	0	; () banked
 17299  003BBE  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17300  003BC0  0100               	movlb	0	; () banked
 17301  003BC2  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17302  003BC4  0E00               	movlw	0
 17303  003BC6  0100               	movlb	0	; () banked
 17304  003BC8  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17305  003BCA  0100               	movlb	0	; () banked
 17306  003BCC  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17307  003BCE  0E00               	movlw	0
 17308  003BD0  0100               	movlb	0	; () banked
 17309  003BD2  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17310  003BD4  0100               	movlb	0	; () banked
 17311  003BD6  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17312  003BD8  0E00               	movlw	0
 17313  003BDA  0100               	movlb	0	; () banked
 17314  003BDC  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17315  003BDE  0100               	movlb	0	; () banked
 17316  003BE0  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17317  003BE2  0100               	movlb	0	; () banked
 17318  003BE4  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17319  003BE6  0100               	movlb	0	; () banked
 17320  003BE8  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17321  003BEA  0100               	movlb	0	; () banked
 17322  003BEC  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17323  003BEE  0100               	movlb	0	; () banked
 17324  003BF0  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17325  003BF2  0100               	movlb	0	; () banked
 17326  003BF4  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17327  003BF6  0100               	movlb	0	; () banked
 17328  003BF8  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17329  003BFA  0100               	movlb	0	; () banked
 17330  003BFC  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17331  003BFE  0100               	movlb	0	; () banked
 17332  003C00  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17333                           
 17334                           ; BSR set to: 0
 17335                           ;MISC.c: 445: temp += (This & 0x20000000) >> 27;
 17336  003C02  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17337  003C06  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17338  003C0A  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17339  003C0E  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17340  003C12  0E1C               	movlw	28
 17341  003C14  D006               	goto	u16140
 17342  003C16                     u16145:
 17343  003C16  0100               	movlb	0	; () banked
 17344  003C18  90D8               	bcf	status,0,c
 17345  003C1A  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17346  003C1C  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17347  003C1E  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17348  003C20  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17349  003C22                     u16140:
 17350  003C22  2EE8               	decfsz	wreg,f,c
 17351  003C24  D7F8               	goto	u16145
 17352  003C26  0E04               	movlw	4
 17353  003C28  0100               	movlb	0	; () banked
 17354  003C2A  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17355  003C2C  0100               	movlb	0	; () banked
 17356  003C2E  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17357  003C30  0E00               	movlw	0
 17358  003C32  0100               	movlb	0	; () banked
 17359  003C34  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17360  003C36  0100               	movlb	0	; () banked
 17361  003C38  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17362  003C3A  0E00               	movlw	0
 17363  003C3C  0100               	movlb	0	; () banked
 17364  003C3E  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17365  003C40  0100               	movlb	0	; () banked
 17366  003C42  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17367  003C44  0E00               	movlw	0
 17368  003C46  0100               	movlb	0	; () banked
 17369  003C48  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17370  003C4A  0100               	movlb	0	; () banked
 17371  003C4C  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17372  003C4E  0100               	movlb	0	; () banked
 17373  003C50  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17374  003C52  0100               	movlb	0	; () banked
 17375  003C54  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17376  003C56  0100               	movlb	0	; () banked
 17377  003C58  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17378  003C5A  0100               	movlb	0	; () banked
 17379  003C5C  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17380  003C5E  0100               	movlb	0	; () banked
 17381  003C60  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17382  003C62  0100               	movlb	0	; () banked
 17383  003C64  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17384  003C66  0100               	movlb	0	; () banked
 17385  003C68  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17386  003C6A  0100               	movlb	0	; () banked
 17387  003C6C  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17388                           
 17389                           ; BSR set to: 0
 17390                           ;MISC.c: 446: temp += (This & 0x40000000) >> 29;
 17391  003C6E  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17392  003C72  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17393  003C76  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17394  003C7A  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17395  003C7E  0E1E               	movlw	30
 17396  003C80  D006               	goto	u16150
 17397  003C82                     u16155:
 17398  003C82  0100               	movlb	0	; () banked
 17399  003C84  90D8               	bcf	status,0,c
 17400  003C86  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17401  003C88  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17402  003C8A  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17403  003C8C  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17404  003C8E                     u16150:
 17405  003C8E  2EE8               	decfsz	wreg,f,c
 17406  003C90  D7F8               	goto	u16155
 17407  003C92  0E02               	movlw	2
 17408  003C94  0100               	movlb	0	; () banked
 17409  003C96  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17410  003C98  0100               	movlb	0	; () banked
 17411  003C9A  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17412  003C9C  0E00               	movlw	0
 17413  003C9E  0100               	movlb	0	; () banked
 17414  003CA0  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17415  003CA2  0100               	movlb	0	; () banked
 17416  003CA4  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17417  003CA6  0E00               	movlw	0
 17418  003CA8  0100               	movlb	0	; () banked
 17419  003CAA  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17420  003CAC  0100               	movlb	0	; () banked
 17421  003CAE  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17422  003CB0  0E00               	movlw	0
 17423  003CB2  0100               	movlb	0	; () banked
 17424  003CB4  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17425  003CB6  0100               	movlb	0	; () banked
 17426  003CB8  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17427  003CBA  0100               	movlb	0	; () banked
 17428  003CBC  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17429  003CBE  0100               	movlb	0	; () banked
 17430  003CC0  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17431  003CC2  0100               	movlb	0	; () banked
 17432  003CC4  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17433  003CC6  0100               	movlb	0	; () banked
 17434  003CC8  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17435  003CCA  0100               	movlb	0	; () banked
 17436  003CCC  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17437  003CCE  0100               	movlb	0	; () banked
 17438  003CD0  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17439  003CD2  0100               	movlb	0	; () banked
 17440  003CD4  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17441  003CD6  0100               	movlb	0	; () banked
 17442  003CD8  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17443                           
 17444                           ; BSR set to: 0
 17445                           ;MISC.c: 447: temp += (This & 0x80000000) >> 31;
 17446  003CDA  0E00               	movlw	0
 17447  003CDC  0100               	movlb	0	; () banked
 17448  003CDE  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 17449  003CE0  0100               	movlb	0	; () banked
 17450  003CE2  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 17451  003CE4  0E00               	movlw	0
 17452  003CE6  0100               	movlb	0	; () banked
 17453  003CE8  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17454  003CEA  0100               	movlb	0	; () banked
 17455  003CEC  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17456  003CEE  0E00               	movlw	0
 17457  003CF0  0100               	movlb	0	; () banked
 17458  003CF2  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17459  003CF4  0100               	movlb	0	; () banked
 17460  003CF6  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17461  003CF8  0E80               	movlw	128
 17462  003CFA  0100               	movlb	0	; () banked
 17463  003CFC  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17464  003CFE  0100               	movlb	0	; () banked
 17465  003D00  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17466  003D02  0E20               	movlw	32
 17467  003D04  D006               	goto	u16160
 17468  003D06                     u16165:
 17469  003D06  0100               	movlb	0	; () banked
 17470  003D08  90D8               	bcf	status,0,c
 17471  003D0A  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17472  003D0C  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17473  003D0E  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17474  003D10  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17475  003D12                     u16160:
 17476  003D12  2EE8               	decfsz	wreg,f,c
 17477  003D14  D7F8               	goto	u16165
 17478  003D16  0100               	movlb	0	; () banked
 17479  003D18  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 17480  003D1A  0100               	movlb	0	; () banked
 17481  003D1C  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17482  003D1E  0100               	movlb	0	; () banked
 17483  003D20  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17484  003D22  0100               	movlb	0	; () banked
 17485  003D24  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17486  003D26  0100               	movlb	0	; () banked
 17487  003D28  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17488  003D2A  0100               	movlb	0	; () banked
 17489  003D2C  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17490  003D2E  0100               	movlb	0	; () banked
 17491  003D30  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17492  003D32  0100               	movlb	0	; () banked
 17493  003D34  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17494                           
 17495                           ; BSR set to: 0
 17496                           ;MISC.c: 449: return temp;
 17497  003D36  C085  F079         	movff	Reverse_4Byte@temp,?_Reverse_4Byte
 17498  003D3A  C086  F07A         	movff	Reverse_4Byte@temp+1,?_Reverse_4Byte+1
 17499  003D3E  C087  F07B         	movff	Reverse_4Byte@temp+2,?_Reverse_4Byte+2
 17500  003D42  C088  F07C         	movff	Reverse_4Byte@temp+3,?_Reverse_4Byte+3
 17501  003D46  0012               	return	
 17502                           
 17503                           ; BSR set to: 0
 17504                           
 17505                           ; BSR set to: 0
 17506  003D48  0012               	return		;funcret
 17507  003D4A                     __end_of_Reverse_4Byte:
 17508                           	opt stack 0
 17509                           tblptru	equ	0xFF8
 17510                           tblptrh	equ	0xFF7
 17511                           tblptrl	equ	0xFF6
 17512                           tablat	equ	0xFF5
 17513                           prodh	equ	0xFF4
 17514                           prodl	equ	0xFF3
 17515                           intcon	equ	0xFF2
 17516                           indf0	equ	0xFEF
 17517                           postinc0	equ	0xFEE
 17518                           fsr0h	equ	0xFEA
 17519                           fsr0l	equ	0xFE9
 17520                           wreg	equ	0xFE8
 17521                           indf1	equ	0xFE7
 17522                           postdec1	equ	0xFE5
 17523                           fsr1h	equ	0xFE2
 17524                           fsr1l	equ	0xFE1
 17525                           indf2	equ	0xFDF
 17526                           postinc2	equ	0xFDE
 17527                           fsr2h	equ	0xFDA
 17528                           fsr2l	equ	0xFD9
 17529                           status	equ	0xFD8
 17530                           
 17531 ;; *************** function _CheckReceivingIR *****************
 17532 ;; Defined at:
 17533 ;;		line 516 in file "IR.c"
 17534 ;; Parameters:    Size  Location     Type
 17535 ;;		None
 17536 ;; Auto vars:     Size  Location     Type
 17537 ;;		None
 17538 ;; Return value:  Size  Location     Type
 17539 ;;                  1    wreg      unsigned char 
 17540 ;; Registers used:
 17541 ;;		wreg, status,2, status,0
 17542 ;; Tracked objects:
 17543 ;;		On entry : 0/0
 17544 ;;		On exit  : 0/0
 17545 ;;		Unchanged: 0/0
 17546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17551 ;;Total ram usage:        0 bytes
 17552 ;; Hardware stack levels used:    1
 17553 ;; Hardware stack levels required when called:    6
 17554 ;; This function calls:
 17555 ;;		Nothing
 17556 ;; This function is called by:
 17557 ;;		_SendNEC_wait
 17558 ;; This function uses a non-reentrant model
 17559 ;;
 17560                           
 17561                           	psect	text22
 17562  00947C                     __ptext22:
 17563                           	opt stack 0
 17564  00947C                     _CheckReceivingIR:
 17565                           	opt stack 22
 17566                           
 17567                           ;IR.c: 518: if(ReceivingIR == 13)
 17568                           
 17569                           ; BSR set to: 0
 17570                           ;incstack = 0
 17571  00947C  0E0D               	movlw	13
 17572  00947E  1844               	xorwf	_ReceivingIR,w,c	;volatile
 17573  009480  A4D8               	btfss	status,2,c
 17574  009482  D002               	goto	l14151
 17575                           
 17576                           ;IR.c: 519: {
 17577                           ;IR.c: 520: return 0;
 17578  009484  0E00               	movlw	0
 17579  009486  0012               	return	
 17580  009488                     l14151:
 17581                           
 17582                           ;IR.c: 521: }
 17583                           ;IR.c: 522: return 1;
 17584  009488  0E01               	movlw	1
 17585  00948A  0012               	return	
 17586  00948C  0012               	return		;funcret
 17587  00948E                     __end_of_CheckReceivingIR:
 17588                           	opt stack 0
 17589                           tblptru	equ	0xFF8
 17590                           tblptrh	equ	0xFF7
 17591                           tblptrl	equ	0xFF6
 17592                           tablat	equ	0xFF5
 17593                           prodh	equ	0xFF4
 17594                           prodl	equ	0xFF3
 17595                           intcon	equ	0xFF2
 17596                           indf0	equ	0xFEF
 17597                           postinc0	equ	0xFEE
 17598                           fsr0h	equ	0xFEA
 17599                           fsr0l	equ	0xFE9
 17600                           wreg	equ	0xFE8
 17601                           indf1	equ	0xFE7
 17602                           postdec1	equ	0xFE5
 17603                           fsr1h	equ	0xFE2
 17604                           fsr1l	equ	0xFE1
 17605                           indf2	equ	0xFDF
 17606                           postinc2	equ	0xFDE
 17607                           fsr2h	equ	0xFDA
 17608                           fsr2l	equ	0xFD9
 17609                           status	equ	0xFD8
 17610                           
 17611 ;; *************** function _ReadVoltage *****************
 17612 ;; Defined at:
 17613 ;;		line 60 in file "ADC.c"
 17614 ;; Parameters:    Size  Location     Type
 17615 ;;		None
 17616 ;; Auto vars:     Size  Location     Type
 17617 ;;  voltage         3   69[BANK0 ] unsigned char 
 17618 ;;  temp            2   72[BANK0 ] unsigned int 
 17619 ;; Return value:  Size  Location     Type
 17620 ;;                  3   66[BANK0 ] unsigned int 
 17621 ;; Registers used:
 17622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17623 ;; Tracked objects:
 17624 ;;		On entry : 0/0
 17625 ;;		On exit  : 0/0
 17626 ;;		Unchanged: 0/0
 17627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17628 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17629 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17631 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17632 ;;Total ram usage:        8 bytes
 17633 ;; Hardware stack levels used:    1
 17634 ;; Hardware stack levels required when called:    8
 17635 ;; This function calls:
 17636 ;;		_InternalADC_Read
 17637 ;;		_VoltageDividerOFF
 17638 ;;		_VoltageDividerON
 17639 ;;		___ftdiv
 17640 ;;		___ftmul
 17641 ;;		___lwtoft
 17642 ;;		_delayUS
 17643 ;; This function is called by:
 17644 ;;		_main
 17645 ;;		_UseBluetooth
 17646 ;; This function uses a non-reentrant model
 17647 ;;
 17648                           
 17649                           	psect	text23
 17650  008040                     __ptext23:
 17651                           	opt stack 0
 17652  008040                     _ReadVoltage:
 17653                           	opt stack 21
 17654                           
 17655                           ;ADC.c: 62: unsigned int temp;
 17656                           ;ADC.c: 63: double voltage;
 17657                           ;ADC.c: 65: VoltageDividerON();
 17658                           
 17659                           ;incstack = 0
 17660  008040  ECB8  F04A         	call	_VoltageDividerON	;wreg free
 17661                           
 17662                           ;ADC.c: 66: delayUS(5);
 17663  008044  0E05               	movlw	5
 17664  008046  0100               	movlb	0	; () banked
 17665  008048  6F79               	movwf	delayUS@US& (0+255),b
 17666  00804A  0E00               	movlw	0
 17667  00804C  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 17668  00804E  0E00               	movlw	0
 17669  008050  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 17670  008052  0E00               	movlw	0
 17671  008054  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 17672  008056  EC57  F047         	call	_delayUS	;wreg free
 17673                           
 17674                           ;ADC.c: 67: if(InternalADC_Read(0, &temp))
 17675  00805A  0EA8               	movlw	low ReadVoltage@temp
 17676  00805C  0100               	movlb	0	; () banked
 17677  00805E  6F82               	movwf	InternalADC_Read@ADCcounts& (0+255),b
 17678  008060  0E00               	movlw	high ReadVoltage@temp
 17679  008062  0100               	movlb	0	; () banked
 17680  008064  6F83               	movwf	(InternalADC_Read@ADCcounts+1)& (0+255),b
 17681  008066  0E00               	movlw	0
 17682  008068  EC33  F042         	call	_InternalADC_Read
 17683  00806C  0900               	iorlw	0
 17684  00806E  B4D8               	btfsc	status,2,c
 17685  008070  D02F               	goto	l14375
 17686                           
 17687                           ;ADC.c: 68: {
 17688                           ;ADC.c: 69: voltage = ((double)temp / 1024.0) * 11 * 3.3;
 17689  008072  0E00               	movlw	0
 17690  008074  0100               	movlb	0	; () banked
 17691  008076  6F87               	movwf	___ftdiv@f2& (0+255),b
 17692  008078  0E80               	movlw	128
 17693  00807A  0100               	movlb	0	; () banked
 17694  00807C  6F88               	movwf	(___ftdiv@f2+1)& (0+255),b
 17695  00807E  0E44               	movlw	68
 17696  008080  0100               	movlb	0	; () banked
 17697  008082  6F89               	movwf	(___ftdiv@f2+2)& (0+255),b
 17698  008084  C0A8  F081         	movff	ReadVoltage@temp,___lwtoft@c
 17699  008088  C0A9  F082         	movff	ReadVoltage@temp+1,___lwtoft@c+1
 17700  00808C  EC5B  F049         	call	___lwtoft	;wreg free
 17701  008090  C081  F084         	movff	?___lwtoft,___ftdiv@f1
 17702  008094  C082  F085         	movff	?___lwtoft+1,___ftdiv@f1+1
 17703  008098  C083  F086         	movff	?___lwtoft+2,___ftdiv@f1+2
 17704  00809C  ECDC  F037         	call	___ftdiv	;wreg free
 17705  0080A0  C084  F093         	movff	?___ftdiv,___ftmul@f1
 17706  0080A4  C085  F094         	movff	?___ftdiv+1,___ftmul@f1+1
 17707  0080A8  C086  F095         	movff	?___ftdiv+2,___ftmul@f1+2
 17708  0080AC  0E33               	movlw	51
 17709  0080AE  0100               	movlb	0	; () banked
 17710  0080B0  6F96               	movwf	___ftmul@f2& (0+255),b
 17711  0080B2  0E11               	movlw	17
 17712  0080B4  0100               	movlb	0	; () banked
 17713  0080B6  6F97               	movwf	(___ftmul@f2+1)& (0+255),b
 17714  0080B8  0E42               	movlw	66
 17715  0080BA  0100               	movlb	0	; () banked
 17716  0080BC  6F98               	movwf	(___ftmul@f2+2)& (0+255),b
 17717  0080BE  EC26  F037         	call	___ftmul	;wreg free
 17718  0080C2  C093  F0A5         	movff	?___ftmul,ReadVoltage@voltage
 17719  0080C6  C094  F0A6         	movff	?___ftmul+1,ReadVoltage@voltage+1
 17720  0080CA  C095  F0A7         	movff	?___ftmul+2,ReadVoltage@voltage+2
 17721                           
 17722                           ;ADC.c: 70: }
 17723  0080CE  D00A               	goto	l14377
 17724  0080D0                     l14375:
 17725                           
 17726                           ;ADC.c: 71: else
 17727                           ;ADC.c: 72: {
 17728                           ;ADC.c: 73: voltage = 0.0;
 17729  0080D0  0E00               	movlw	0
 17730  0080D2  0100               	movlb	0	; () banked
 17731  0080D4  6FA5               	movwf	ReadVoltage@voltage& (0+255),b
 17732  0080D6  0E00               	movlw	0
 17733  0080D8  0100               	movlb	0	; () banked
 17734  0080DA  6FA6               	movwf	(ReadVoltage@voltage+1)& (0+255),b
 17735  0080DC  0E00               	movlw	0
 17736  0080DE  0100               	movlb	0	; () banked
 17737  0080E0  6FA7               	movwf	(ReadVoltage@voltage+2)& (0+255),b
 17738  0080E2  D000               	goto	l14377
 17739  0080E4                     l14377:
 17740                           
 17741                           ;ADC.c: 74: }
 17742                           ;ADC.c: 75: VoltageDividerOFF();
 17743  0080E4  ECBB  F04A         	call	_VoltageDividerOFF	;wreg free
 17744                           
 17745                           ;ADC.c: 76: return voltage;
 17746  0080E8  C0A5  F0A2         	movff	ReadVoltage@voltage,?_ReadVoltage
 17747  0080EC  C0A6  F0A3         	movff	ReadVoltage@voltage+1,?_ReadVoltage+1
 17748  0080F0  C0A7  F0A4         	movff	ReadVoltage@voltage+2,?_ReadVoltage+2
 17749  0080F4  0012               	return	
 17750  0080F6  0012               	return		;funcret
 17751  0080F8                     __end_of_ReadVoltage:
 17752                           	opt stack 0
 17753                           tblptru	equ	0xFF8
 17754                           tblptrh	equ	0xFF7
 17755                           tblptrl	equ	0xFF6
 17756                           tablat	equ	0xFF5
 17757                           prodh	equ	0xFF4
 17758                           prodl	equ	0xFF3
 17759                           intcon	equ	0xFF2
 17760                           indf0	equ	0xFEF
 17761                           postinc0	equ	0xFEE
 17762                           fsr0h	equ	0xFEA
 17763                           fsr0l	equ	0xFE9
 17764                           wreg	equ	0xFE8
 17765                           indf1	equ	0xFE7
 17766                           postdec1	equ	0xFE5
 17767                           fsr1h	equ	0xFE2
 17768                           fsr1l	equ	0xFE1
 17769                           indf2	equ	0xFDF
 17770                           postinc2	equ	0xFDE
 17771                           fsr2h	equ	0xFDA
 17772                           fsr2l	equ	0xFD9
 17773                           status	equ	0xFD8
 17774                           
 17775 ;; *************** function ___lwtoft *****************
 17776 ;; Defined at:
 17777 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
 17778 ;; Parameters:    Size  Location     Type
 17779 ;;  c               2   33[BANK0 ] unsigned int 
 17780 ;; Auto vars:     Size  Location     Type
 17781 ;;		None
 17782 ;; Return value:  Size  Location     Type
 17783 ;;                  3   33[BANK0 ] float 
 17784 ;; Registers used:
 17785 ;;		wreg, status,2, status,0, cstack
 17786 ;; Tracked objects:
 17787 ;;		On entry : 0/0
 17788 ;;		On exit  : 0/0
 17789 ;;		Unchanged: 0/0
 17790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17791 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17794 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17795 ;;Total ram usage:        3 bytes
 17796 ;; Hardware stack levels used:    1
 17797 ;; Hardware stack levels required when called:    7
 17798 ;; This function calls:
 17799 ;;		___ftpack
 17800 ;; This function is called by:
 17801 ;;		_ReadVoltage
 17802 ;; This function uses a non-reentrant model
 17803 ;;
 17804                           
 17805                           	psect	text24
 17806  0092B6                     __ptext24:
 17807                           	opt stack 0
 17808  0092B6                     ___lwtoft:
 17809                           	opt stack 21
 17810                           
 17811                           ;incstack = 0
 17812  0092B6  C081  F079         	movff	___lwtoft@c,___ftpack@arg
 17813  0092BA  C082  F07A         	movff	___lwtoft@c+1,___ftpack@arg+1
 17814  0092BE  0100               	movlb	0	; () banked
 17815  0092C0  6B7B               	clrf	(___ftpack@arg+2)& (0+255),b
 17816  0092C2  0E8E               	movlw	142
 17817  0092C4  0100               	movlb	0	; () banked
 17818  0092C6  6F7C               	movwf	___ftpack@exp& (0+255),b
 17819  0092C8  0E00               	movlw	0
 17820  0092CA  0100               	movlb	0	; () banked
 17821  0092CC  6F7D               	movwf	___ftpack@sign& (0+255),b
 17822  0092CE  ECFC  F03A         	call	___ftpack	;wreg free
 17823  0092D2  C079  F081         	movff	?___ftpack,?___lwtoft
 17824  0092D6  C07A  F082         	movff	?___ftpack+1,?___lwtoft+1
 17825  0092DA  C07B  F083         	movff	?___ftpack+2,?___lwtoft+2
 17826  0092DE  0012               	return	
 17827  0092E0  0012               	return		;funcret
 17828  0092E2                     __end_of___lwtoft:
 17829                           	opt stack 0
 17830                           tblptru	equ	0xFF8
 17831                           tblptrh	equ	0xFF7
 17832                           tblptrl	equ	0xFF6
 17833                           tablat	equ	0xFF5
 17834                           prodh	equ	0xFF4
 17835                           prodl	equ	0xFF3
 17836                           intcon	equ	0xFF2
 17837                           indf0	equ	0xFEF
 17838                           postinc0	equ	0xFEE
 17839                           fsr0h	equ	0xFEA
 17840                           fsr0l	equ	0xFE9
 17841                           wreg	equ	0xFE8
 17842                           indf1	equ	0xFE7
 17843                           postdec1	equ	0xFE5
 17844                           fsr1h	equ	0xFE2
 17845                           fsr1l	equ	0xFE1
 17846                           indf2	equ	0xFDF
 17847                           postinc2	equ	0xFDE
 17848                           fsr2h	equ	0xFDA
 17849                           fsr2l	equ	0xFD9
 17850                           status	equ	0xFD8
 17851                           
 17852 ;; *************** function ___ftdiv *****************
 17853 ;; Defined at:
 17854 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 17855 ;; Parameters:    Size  Location     Type
 17856 ;;  f1              3   36[BANK0 ] float 
 17857 ;;  f2              3   39[BANK0 ] float 
 17858 ;; Auto vars:     Size  Location     Type
 17859 ;;  f3              3   46[BANK0 ] float 
 17860 ;;  sign            1   50[BANK0 ] unsigned char 
 17861 ;;  exp             1   49[BANK0 ] unsigned char 
 17862 ;;  cntr            1   45[BANK0 ] unsigned char 
 17863 ;; Return value:  Size  Location     Type
 17864 ;;                  3   36[BANK0 ] float 
 17865 ;; Registers used:
 17866 ;;		wreg, status,2, status,0, cstack
 17867 ;; Tracked objects:
 17868 ;;		On entry : 0/0
 17869 ;;		On exit  : 0/0
 17870 ;;		Unchanged: 0/0
 17871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17872 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17873 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17874 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17875 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17876 ;;Total ram usage:       15 bytes
 17877 ;; Hardware stack levels used:    1
 17878 ;; Hardware stack levels required when called:    7
 17879 ;; This function calls:
 17880 ;;		___ftpack
 17881 ;; This function is called by:
 17882 ;;		_ReadVoltage
 17883 ;; This function uses a non-reentrant model
 17884 ;;
 17885                           
 17886                           	psect	text25
 17887  006FB8                     __ptext25:
 17888                           	opt stack 0
 17889  006FB8                     ___ftdiv:
 17890                           	opt stack 21
 17891                           
 17892                           ;incstack = 0
 17893  006FB8  C086  F08A         	movff	___ftdiv@f1+2,??___ftdiv
 17894  006FBC  0100               	movlb	0	; () banked
 17895  006FBE  6B8B               	clrf	(??___ftdiv+1)& (0+255),b
 17896  006FC0  6B8C               	clrf	(??___ftdiv+2)& (0+255),b
 17897  006FC2  0100               	movlb	0	; () banked
 17898  006FC4  3585               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 17899  006FC6  0100               	movlb	0	; () banked
 17900  006FC8  378A               	rlcf	??___ftdiv& (0+255),f,b
 17901  006FCA  E301               	bnc	u17501
 17902  006FCC  818B               	bsf	(??___ftdiv+1)& (0+255),0,b
 17903  006FCE                     u17501:
 17904  006FCE  0100               	movlb	0	; () banked
 17905  006FD0  518A               	movf	??___ftdiv& (0+255),w,b
 17906  006FD2  0100               	movlb	0	; () banked
 17907  006FD4  6F91               	movwf	___ftdiv@exp& (0+255),b
 17908  006FD6  0100               	movlb	0	; () banked
 17909  006FD8  5191               	movf	___ftdiv@exp& (0+255),w,b
 17910  006FDA  A4D8               	btfss	status,2,c
 17911  006FDC  D00A               	goto	l14323
 17912                           
 17913                           ; BSR set to: 0
 17914  006FDE  0E00               	movlw	0
 17915  006FE0  0100               	movlb	0	; () banked
 17916  006FE2  6F84               	movwf	?___ftdiv& (0+255),b
 17917  006FE4  0E00               	movlw	0
 17918  006FE6  0100               	movlb	0	; () banked
 17919  006FE8  6F85               	movwf	(?___ftdiv+1)& (0+255),b
 17920  006FEA  0E00               	movlw	0
 17921  006FEC  0100               	movlb	0	; () banked
 17922  006FEE  6F86               	movwf	(?___ftdiv+2)& (0+255),b
 17923                           
 17924                           ; BSR set to: 0
 17925  006FF0  0012               	return	
 17926  006FF2                     l14323:
 17927                           
 17928                           ; BSR set to: 0
 17929  006FF2  C089  F08A         	movff	___ftdiv@f2+2,??___ftdiv
 17930  006FF6  0100               	movlb	0	; () banked
 17931  006FF8  6B8B               	clrf	(??___ftdiv+1)& (0+255),b
 17932  006FFA  6B8C               	clrf	(??___ftdiv+2)& (0+255),b
 17933  006FFC  0100               	movlb	0	; () banked
 17934  006FFE  3588               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 17935  007000  0100               	movlb	0	; () banked
 17936  007002  378A               	rlcf	??___ftdiv& (0+255),f,b
 17937  007004  E301               	bnc	u17521
 17938  007006  818B               	bsf	(??___ftdiv+1)& (0+255),0,b
 17939  007008                     u17521:
 17940  007008  0100               	movlb	0	; () banked
 17941  00700A  518A               	movf	??___ftdiv& (0+255),w,b
 17942  00700C  0100               	movlb	0	; () banked
 17943  00700E  6F92               	movwf	___ftdiv@sign& (0+255),b
 17944  007010  0100               	movlb	0	; () banked
 17945  007012  5192               	movf	___ftdiv@sign& (0+255),w,b
 17946  007014  A4D8               	btfss	status,2,c
 17947  007016  D00A               	goto	l14329
 17948                           
 17949                           ; BSR set to: 0
 17950  007018  0E00               	movlw	0
 17951  00701A  0100               	movlb	0	; () banked
 17952  00701C  6F84               	movwf	?___ftdiv& (0+255),b
 17953  00701E  0E00               	movlw	0
 17954  007020  0100               	movlb	0	; () banked
 17955  007022  6F85               	movwf	(?___ftdiv+1)& (0+255),b
 17956  007024  0E00               	movlw	0
 17957  007026  0100               	movlb	0	; () banked
 17958  007028  6F86               	movwf	(?___ftdiv+2)& (0+255),b
 17959                           
 17960                           ; BSR set to: 0
 17961  00702A  0012               	return	
 17962  00702C                     l14329:
 17963                           
 17964                           ; BSR set to: 0
 17965  00702C  0E00               	movlw	0
 17966  00702E  0100               	movlb	0	; () banked
 17967  007030  6F8E               	movwf	___ftdiv@f3& (0+255),b
 17968  007032  0E00               	movlw	0
 17969  007034  0100               	movlb	0	; () banked
 17970  007036  6F8F               	movwf	(___ftdiv@f3+1)& (0+255),b
 17971  007038  0E00               	movlw	0
 17972  00703A  0100               	movlb	0	; () banked
 17973  00703C  6F90               	movwf	(___ftdiv@f3+2)& (0+255),b
 17974                           
 17975                           ; BSR set to: 0
 17976  00703E  0100               	movlb	0	; () banked
 17977  007040  5192               	movf	___ftdiv@sign& (0+255),w,b
 17978  007042  0F89               	addlw	137
 17979  007044  0100               	movlb	0	; () banked
 17980  007046  5F91               	subwf	___ftdiv@exp& (0+255),f,b
 17981                           
 17982                           ; BSR set to: 0
 17983  007048  C086  F092         	movff	___ftdiv@f1+2,___ftdiv@sign
 17984                           
 17985                           ; BSR set to: 0
 17986  00704C  0100               	movlb	0	; () banked
 17987  00704E  5189               	movf	(___ftdiv@f2+2)& (0+255),w,b
 17988  007050  0100               	movlb	0	; () banked
 17989  007052  1B92               	xorwf	___ftdiv@sign& (0+255),f,b
 17990                           
 17991                           ; BSR set to: 0
 17992  007054  0E80               	movlw	128
 17993  007056  0100               	movlb	0	; () banked
 17994  007058  1792               	andwf	___ftdiv@sign& (0+255),f,b
 17995                           
 17996                           ; BSR set to: 0
 17997  00705A  0100               	movlb	0	; () banked
 17998  00705C  8F85               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 17999                           
 18000                           ; BSR set to: 0
 18001  00705E  0EFF               	movlw	255
 18002  007060  0100               	movlb	0	; () banked
 18003  007062  1784               	andwf	___ftdiv@f1& (0+255),f,b
 18004  007064  0EFF               	movlw	255
 18005  007066  0100               	movlb	0	; () banked
 18006  007068  1785               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 18007  00706A  0E00               	movlw	0
 18008  00706C  0100               	movlb	0	; () banked
 18009  00706E  1786               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 18010                           
 18011                           ; BSR set to: 0
 18012  007070  0100               	movlb	0	; () banked
 18013  007072  8F88               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 18014                           
 18015                           ; BSR set to: 0
 18016  007074  0EFF               	movlw	255
 18017  007076  0100               	movlb	0	; () banked
 18018  007078  1787               	andwf	___ftdiv@f2& (0+255),f,b
 18019  00707A  0EFF               	movlw	255
 18020  00707C  0100               	movlb	0	; () banked
 18021  00707E  1788               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 18022  007080  0E00               	movlw	0
 18023  007082  0100               	movlb	0	; () banked
 18024  007084  1789               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 18025                           
 18026                           ; BSR set to: 0
 18027  007086  0E18               	movlw	24
 18028  007088  0100               	movlb	0	; () banked
 18029  00708A  6F8D               	movwf	___ftdiv@cntr& (0+255),b
 18030  00708C  D000               	goto	l14349
 18031  00708E                     l14349:
 18032                           
 18033                           ; BSR set to: 0
 18034  00708E  0100               	movlb	0	; () banked
 18035  007090  90D8               	bcf	status,0,c
 18036  007092  378E               	rlcf	___ftdiv@f3& (0+255),f,b
 18037  007094  378F               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 18038  007096  3790               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 18039                           
 18040                           ; BSR set to: 0
 18041  007098  0100               	movlb	0	; () banked
 18042  00709A  5187               	movf	___ftdiv@f2& (0+255),w,b
 18043  00709C  0100               	movlb	0	; () banked
 18044  00709E  5D84               	subwf	___ftdiv@f1& (0+255),w,b
 18045  0070A0  0100               	movlb	0	; () banked
 18046  0070A2  5188               	movf	(___ftdiv@f2+1)& (0+255),w,b
 18047  0070A4  0100               	movlb	0	; () banked
 18048  0070A6  5985               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 18049  0070A8  0100               	movlb	0	; () banked
 18050  0070AA  5189               	movf	(___ftdiv@f2+2)& (0+255),w,b
 18051  0070AC  0100               	movlb	0	; () banked
 18052  0070AE  5986               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 18053  0070B0  A0D8               	btfss	status,0,c
 18054  0070B2  D00E               	goto	l2725
 18055                           
 18056                           ; BSR set to: 0
 18057  0070B4  0100               	movlb	0	; () banked
 18058  0070B6  5187               	movf	___ftdiv@f2& (0+255),w,b
 18059  0070B8  0100               	movlb	0	; () banked
 18060  0070BA  5F84               	subwf	___ftdiv@f1& (0+255),f,b
 18061  0070BC  0100               	movlb	0	; () banked
 18062  0070BE  5188               	movf	(___ftdiv@f2+1)& (0+255),w,b
 18063  0070C0  0100               	movlb	0	; () banked
 18064  0070C2  5B85               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 18065  0070C4  0100               	movlb	0	; () banked
 18066  0070C6  5189               	movf	(___ftdiv@f2+2)& (0+255),w,b
 18067  0070C8  0100               	movlb	0	; () banked
 18068  0070CA  5B86               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 18069                           
 18070                           ; BSR set to: 0
 18071  0070CC  0100               	movlb	0	; () banked
 18072  0070CE  818E               	bsf	___ftdiv@f3& (0+255),0,b
 18073  0070D0                     l2725:
 18074                           
 18075                           ; BSR set to: 0
 18076  0070D0  0100               	movlb	0	; () banked
 18077  0070D2  90D8               	bcf	status,0,c
 18078  0070D4  3784               	rlcf	___ftdiv@f1& (0+255),f,b
 18079  0070D6  3785               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 18080  0070D8  3786               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 18081                           
 18082                           ; BSR set to: 0
 18083  0070DA  0100               	movlb	0	; () banked
 18084  0070DC  2F8D               	decfsz	___ftdiv@cntr& (0+255),f,b
 18085  0070DE  D7D7               	goto	l14349
 18086  0070E0  D000               	goto	l14359
 18087  0070E2                     l14359:
 18088                           
 18089                           ; BSR set to: 0
 18090  0070E2  C08E  F079         	movff	___ftdiv@f3,___ftpack@arg
 18091  0070E6  C08F  F07A         	movff	___ftdiv@f3+1,___ftpack@arg+1
 18092  0070EA  C090  F07B         	movff	___ftdiv@f3+2,___ftpack@arg+2
 18093  0070EE  C091  F07C         	movff	___ftdiv@exp,___ftpack@exp
 18094  0070F2  C092  F07D         	movff	___ftdiv@sign,___ftpack@sign
 18095  0070F6  ECFC  F03A         	call	___ftpack	;wreg free
 18096  0070FA  C079  F084         	movff	?___ftpack,?___ftdiv
 18097  0070FE  C07A  F085         	movff	?___ftpack+1,?___ftdiv+1
 18098  007102  C07B  F086         	movff	?___ftpack+2,?___ftdiv+2
 18099  007106  0012               	return	
 18100  007108  0012               	return		;funcret
 18101  00710A                     __end_of___ftdiv:
 18102                           	opt stack 0
 18103                           tblptru	equ	0xFF8
 18104                           tblptrh	equ	0xFF7
 18105                           tblptrl	equ	0xFF6
 18106                           tablat	equ	0xFF5
 18107                           prodh	equ	0xFF4
 18108                           prodl	equ	0xFF3
 18109                           intcon	equ	0xFF2
 18110                           indf0	equ	0xFEF
 18111                           postinc0	equ	0xFEE
 18112                           fsr0h	equ	0xFEA
 18113                           fsr0l	equ	0xFE9
 18114                           wreg	equ	0xFE8
 18115                           indf1	equ	0xFE7
 18116                           postdec1	equ	0xFE5
 18117                           fsr1h	equ	0xFE2
 18118                           fsr1l	equ	0xFE1
 18119                           indf2	equ	0xFDF
 18120                           postinc2	equ	0xFDE
 18121                           fsr2h	equ	0xFDA
 18122                           fsr2l	equ	0xFD9
 18123                           status	equ	0xFD8
 18124                           
 18125 ;; *************** function _VoltageDividerON *****************
 18126 ;; Defined at:
 18127 ;;		line 148 in file "ADC.c"
 18128 ;; Parameters:    Size  Location     Type
 18129 ;;		None
 18130 ;; Auto vars:     Size  Location     Type
 18131 ;;		None
 18132 ;; Return value:  Size  Location     Type
 18133 ;;		None               void
 18134 ;; Registers used:
 18135 ;;		status,2, status,0
 18136 ;; Tracked objects:
 18137 ;;		On entry : 0/0
 18138 ;;		On exit  : 0/0
 18139 ;;		Unchanged: 0/0
 18140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18145 ;;Total ram usage:        0 bytes
 18146 ;; Hardware stack levels used:    1
 18147 ;; Hardware stack levels required when called:    6
 18148 ;; This function calls:
 18149 ;;		Nothing
 18150 ;; This function is called by:
 18151 ;;		_ReadVoltage
 18152 ;; This function uses a non-reentrant model
 18153 ;;
 18154                           
 18155                           	psect	text26
 18156  009570                     __ptext26:
 18157                           	opt stack 0
 18158  009570                     _VoltageDividerON:
 18159                           	opt stack 22
 18160                           
 18161                           ;ADC.c: 150: TRISBbits.TRISB5 = 0;
 18162                           
 18163                           ;incstack = 0
 18164  009570  9A93               	bcf	3987,5,c	;volatile
 18165                           
 18166                           ;ADC.c: 151: LATB &= ~0x20;
 18167  009572  9A8A               	bcf	3978,5,c	;volatile
 18168  009574  0012               	return		;funcret
 18169  009576                     __end_of_VoltageDividerON:
 18170                           	opt stack 0
 18171                           tblptru	equ	0xFF8
 18172                           tblptrh	equ	0xFF7
 18173                           tblptrl	equ	0xFF6
 18174                           tablat	equ	0xFF5
 18175                           prodh	equ	0xFF4
 18176                           prodl	equ	0xFF3
 18177                           intcon	equ	0xFF2
 18178                           indf0	equ	0xFEF
 18179                           postinc0	equ	0xFEE
 18180                           fsr0h	equ	0xFEA
 18181                           fsr0l	equ	0xFE9
 18182                           wreg	equ	0xFE8
 18183                           indf1	equ	0xFE7
 18184                           postdec1	equ	0xFE5
 18185                           fsr1h	equ	0xFE2
 18186                           fsr1l	equ	0xFE1
 18187                           indf2	equ	0xFDF
 18188                           postinc2	equ	0xFDE
 18189                           fsr2h	equ	0xFDA
 18190                           fsr2l	equ	0xFD9
 18191                           status	equ	0xFD8
 18192                           
 18193 ;; *************** function _VoltageDividerOFF *****************
 18194 ;; Defined at:
 18195 ;;		line 159 in file "ADC.c"
 18196 ;; Parameters:    Size  Location     Type
 18197 ;;		None
 18198 ;; Auto vars:     Size  Location     Type
 18199 ;;		None
 18200 ;; Return value:  Size  Location     Type
 18201 ;;		None               void
 18202 ;; Registers used:
 18203 ;;		None
 18204 ;; Tracked objects:
 18205 ;;		On entry : 0/0
 18206 ;;		On exit  : 0/0
 18207 ;;		Unchanged: 0/0
 18208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18213 ;;Total ram usage:        0 bytes
 18214 ;; Hardware stack levels used:    1
 18215 ;; Hardware stack levels required when called:    6
 18216 ;; This function calls:
 18217 ;;		Nothing
 18218 ;; This function is called by:
 18219 ;;		_ReadVoltage
 18220 ;; This function uses a non-reentrant model
 18221 ;;
 18222                           
 18223                           	psect	text27
 18224  009576                     __ptext27:
 18225                           	opt stack 0
 18226  009576                     _VoltageDividerOFF:
 18227                           	opt stack 22
 18228                           
 18229                           ;ADC.c: 161: TRISBbits.TRISB5 = 1;
 18230                           
 18231                           ;incstack = 0
 18232  009576  8A93               	bsf	3987,5,c	;volatile
 18233  009578  0012               	return		;funcret
 18234  00957A                     __end_of_VoltageDividerOFF:
 18235                           	opt stack 0
 18236                           tblptru	equ	0xFF8
 18237                           tblptrh	equ	0xFF7
 18238                           tblptrl	equ	0xFF6
 18239                           tablat	equ	0xFF5
 18240                           prodh	equ	0xFF4
 18241                           prodl	equ	0xFF3
 18242                           intcon	equ	0xFF2
 18243                           indf0	equ	0xFEF
 18244                           postinc0	equ	0xFEE
 18245                           fsr0h	equ	0xFEA
 18246                           fsr0l	equ	0xFE9
 18247                           wreg	equ	0xFE8
 18248                           indf1	equ	0xFE7
 18249                           postdec1	equ	0xFE5
 18250                           fsr1h	equ	0xFE2
 18251                           fsr1l	equ	0xFE1
 18252                           indf2	equ	0xFDF
 18253                           postinc2	equ	0xFDE
 18254                           fsr2h	equ	0xFDA
 18255                           fsr2l	equ	0xFD9
 18256                           status	equ	0xFD8
 18257                           
 18258 ;; *************** function _InternalADC_Read *****************
 18259 ;; Defined at:
 18260 ;;		line 84 in file "ADC.c"
 18261 ;; Parameters:    Size  Location     Type
 18262 ;;  channel         1    wreg     unsigned char 
 18263 ;;  ADCcounts       2   34[BANK0 ] PTR unsigned int 
 18264 ;;		 -> ReadVoltage@temp(2), 
 18265 ;; Auto vars:     Size  Location     Type
 18266 ;;  channel         1   39[BANK0 ] unsigned char 
 18267 ;;  AnaChanSel      1   38[BANK0 ] unsigned char 
 18268 ;; Return value:  Size  Location     Type
 18269 ;;                  1    wreg      unsigned char 
 18270 ;; Registers used:
 18271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18272 ;; Tracked objects:
 18273 ;;		On entry : 0/0
 18274 ;;		On exit  : 0/0
 18275 ;;		Unchanged: 0/0
 18276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18277 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18278 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18279 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18280 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18281 ;;Total ram usage:        6 bytes
 18282 ;; Hardware stack levels used:    1
 18283 ;; Hardware stack levels required when called:    7
 18284 ;; This function calls:
 18285 ;;		_delayUS
 18286 ;; This function is called by:
 18287 ;;		_ReadVoltage
 18288 ;; This function uses a non-reentrant model
 18289 ;;
 18290                           
 18291                           	psect	text28
 18292  008466                     __ptext28:
 18293                           	opt stack 0
 18294  008466                     _InternalADC_Read:
 18295                           	opt stack 21
 18296                           
 18297                           ;incstack = 0
 18298                           ;InternalADC_Read@channel stored from wreg
 18299  008466  0100               	movlb	0	; () banked
 18300  008468  6F87               	movwf	InternalADC_Read@channel& (0+255),b
 18301                           
 18302                           ; BSR set to: 0
 18303                           ;ADC.c: 86: unsigned char AnaChanSel = 1;
 18304  00846A  0E01               	movlw	1
 18305  00846C  0100               	movlb	0	; () banked
 18306  00846E  6F86               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 18307                           
 18308                           ; BSR set to: 0
 18309                           ;ADC.c: 87: if(channel > 0b1100)
 18310  008470  0E0C               	movlw	12
 18311  008472  0100               	movlb	0	; () banked
 18312  008474  6587               	cpfsgt	InternalADC_Read@channel& (0+255),b
 18313  008476  D00A               	goto	l14007
 18314                           
 18315                           ; BSR set to: 0
 18316                           ;ADC.c: 88: {
 18317                           ;ADC.c: 89: *ADCcounts = 0;
 18318  008478  C082  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 18319  00847C  C083  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 18320  008480  0E00               	movlw	0
 18321  008482  6EDE               	movwf	postinc2,c
 18322  008484  0E00               	movlw	0
 18323  008486  6EDD               	movwf	postdec2,c
 18324                           
 18325                           ; BSR set to: 0
 18326                           ;ADC.c: 90: return 0;
 18327  008488  0E00               	movlw	0
 18328                           
 18329                           ; BSR set to: 0
 18330  00848A  0012               	return	
 18331  00848C                     l14007:
 18332                           
 18333                           ; BSR set to: 0
 18334                           ;ADC.c: 91: }
 18335                           ;ADC.c: 92: if(channel > 1)
 18336  00848C  0E01               	movlw	1
 18337  00848E  0100               	movlb	0	; () banked
 18338  008490  6587               	cpfsgt	InternalADC_Read@channel& (0+255),b
 18339  008492  D001               	goto	l14011
 18340                           
 18341                           ; BSR set to: 0
 18342                           ;ADC.c: 95: }
 18343  008494  D009               	goto	l14015
 18344  008496                     l14011:
 18345                           
 18346                           ; BSR set to: 0
 18347                           ;ADC.c: 96: else if (channel == 0)
 18348  008496  0100               	movlb	0	; () banked
 18349  008498  5187               	movf	InternalADC_Read@channel& (0+255),w,b
 18350  00849A  0100               	movlb	0	; () banked
 18351  00849C  A4D8               	btfss	status,2,c
 18352  00849E  D004               	goto	l14015
 18353                           
 18354                           ; BSR set to: 0
 18355                           ;ADC.c: 97: {
 18356                           ;ADC.c: 98: AnaChanSel = 0;
 18357  0084A0  0E00               	movlw	0
 18358  0084A2  0100               	movlb	0	; () banked
 18359  0084A4  6F86               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 18360                           
 18361                           ; BSR set to: 0
 18362  0084A6  D000               	goto	l14015
 18363  0084A8                     l14015:
 18364                           
 18365                           ; BSR set to: 0
 18366                           ;ADC.c: 99: }
 18367                           ;ADC.c: 101: ADCON0 |= (AnaChanSel << 2);
 18368  0084A8  0100               	movlb	0	; () banked
 18369  0084AA  4586               	rlncf	InternalADC_Read@AnaChanSel& (0+255),w,b
 18370  0084AC  46E8               	rlncf	wreg,f,c
 18371  0084AE  0BFC               	andlw	252
 18372  0084B0  12C2               	iorwf	4034,f,c	;volatile
 18373                           
 18374                           ; BSR set to: 0
 18375                           ;ADC.c: 103: ADCON1bits.VCFG0 = 0;
 18376  0084B2  98C1               	bcf	4033,4,c	;volatile
 18377                           
 18378                           ; BSR set to: 0
 18379                           ;ADC.c: 104: ADCON1bits.VCFG1 = 0;
 18380  0084B4  9AC1               	bcf	4033,5,c	;volatile
 18381                           
 18382                           ; BSR set to: 0
 18383                           ;ADC.c: 106: (ADCON0bits.ADON = 1);
 18384  0084B6  80C2               	bsf	4034,0,c	;volatile
 18385                           
 18386                           ; BSR set to: 0
 18387                           ;ADC.c: 107: delayUS(50);
 18388  0084B8  0E32               	movlw	50
 18389  0084BA  0100               	movlb	0	; () banked
 18390  0084BC  6F79               	movwf	delayUS@US& (0+255),b
 18391  0084BE  0E00               	movlw	0
 18392  0084C0  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 18393  0084C2  0E00               	movlw	0
 18394  0084C4  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 18395  0084C6  0E00               	movlw	0
 18396  0084C8  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 18397  0084CA  EC57  F047         	call	_delayUS	;wreg free
 18398                           
 18399                           ;ADC.c: 109: ADCON0bits.GO = 1;
 18400  0084CE  82C2               	bsf	4034,1,c	;volatile
 18401                           
 18402                           ;ADC.c: 110: while(ADCON0bits.GO);
 18403  0084D0  D000               	goto	l741
 18404  0084D2                     l741:
 18405  0084D2  B2C2               	btfsc	4034,1,c	;volatile
 18406  0084D4  D7FE               	goto	l741
 18407                           
 18408                           ;ADC.c: 111: (ADCON0bits.ADON = 0);
 18409  0084D6  90C2               	bcf	4034,0,c	;volatile
 18410                           
 18411                           ;ADC.c: 113: *ADCcounts = ((ADRESH << 8) + ADRESL);
 18412  0084D8  50C3               	movf	4035,w,c	;volatile
 18413  0084DA  CFC4 F084          	movff	4036,??_InternalADC_Read	;volatile
 18414  0084DE  0100               	movlb	0	; () banked
 18415  0084E0  6B85               	clrf	(??_InternalADC_Read+1)& (0+255),b
 18416  0084E2  C084  F085         	movff	??_InternalADC_Read,??_InternalADC_Read+1
 18417  0084E6  0100               	movlb	0	; () banked
 18418  0084E8  6B84               	clrf	??_InternalADC_Read& (0+255),b
 18419  0084EA  0100               	movlb	0	; () banked
 18420  0084EC  2784               	addwf	??_InternalADC_Read& (0+255),f,b
 18421  0084EE  0E00               	movlw	0
 18422  0084F0  2385               	addwfc	(??_InternalADC_Read+1)& (0+255),f,b
 18423  0084F2  C082  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 18424  0084F6  C083  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 18425  0084FA  C084  FFDE         	movff	??_InternalADC_Read,postinc2
 18426  0084FE  C085  FFDD         	movff	??_InternalADC_Read+1,postdec2
 18427                           
 18428                           ; BSR set to: 0
 18429                           ;ADC.c: 114: return 1;
 18430  008502  0E01               	movlw	1
 18431  008504  0012               	return	
 18432                           
 18433                           ; BSR set to: 0
 18434                           
 18435                           ; BSR set to: 0
 18436  008506  0012               	return		;funcret
 18437  008508                     __end_of_InternalADC_Read:
 18438                           	opt stack 0
 18439                           tblptru	equ	0xFF8
 18440                           tblptrh	equ	0xFF7
 18441                           tblptrl	equ	0xFF6
 18442                           tablat	equ	0xFF5
 18443                           prodh	equ	0xFF4
 18444                           prodl	equ	0xFF3
 18445                           intcon	equ	0xFF2
 18446                           indf0	equ	0xFEF
 18447                           postinc0	equ	0xFEE
 18448                           fsr0h	equ	0xFEA
 18449                           fsr0l	equ	0xFE9
 18450                           wreg	equ	0xFE8
 18451                           indf1	equ	0xFE7
 18452                           postdec1	equ	0xFE5
 18453                           fsr1h	equ	0xFE2
 18454                           fsr1l	equ	0xFE1
 18455                           indf2	equ	0xFDF
 18456                           postinc2	equ	0xFDE
 18457                           postdec2	equ	0xFDD
 18458                           fsr2h	equ	0xFDA
 18459                           fsr2l	equ	0xFD9
 18460                           status	equ	0xFD8
 18461                           
 18462 ;; *************** function _GetStringAfterComma *****************
 18463 ;; Defined at:
 18464 ;;		line 646 in file "MISC.c"
 18465 ;; Parameters:    Size  Location     Type
 18466 ;;  This            2   25[BANK0 ] PTR unsigned char 
 18467 ;;		 -> main@BluetoothString(255), 
 18468 ;;  CommaNumber     1   27[BANK0 ] unsigned char 
 18469 ;;  result          2   28[BANK0 ] PTR unsigned char 
 18470 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 18471 ;; Auto vars:     Size  Location     Type
 18472 ;;  count           1   32[BANK0 ] unsigned char 
 18473 ;;  tempCommaNum    1   31[BANK0 ] unsigned char 
 18474 ;; Return value:  Size  Location     Type
 18475 ;;                  1    wreg      unsigned char 
 18476 ;; Registers used:
 18477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18478 ;; Tracked objects:
 18479 ;;		On entry : 0/0
 18480 ;;		On exit  : 0/0
 18481 ;;		Unchanged: 0/0
 18482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18483 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18484 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18485 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18486 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18487 ;;Total ram usage:        8 bytes
 18488 ;; Hardware stack levels used:    1
 18489 ;; Hardware stack levels required when called:    6
 18490 ;; This function calls:
 18491 ;;		Nothing
 18492 ;; This function is called by:
 18493 ;;		_UseBluetooth
 18494 ;; This function uses a non-reentrant model
 18495 ;;
 18496                           
 18497                           	psect	text29
 18498  007836                     __ptext29:
 18499                           	opt stack 0
 18500  007836                     _GetStringAfterComma:
 18501                           	opt stack 23
 18502                           
 18503                           ;MISC.c: 648: unsigned char tempCommaNumber = 1;
 18504                           
 18505                           ; BSR set to: 0
 18506                           ;incstack = 0
 18507  007836  0E01               	movlw	1
 18508  007838  0100               	movlb	0	; () banked
 18509  00783A  6F7F               	movwf	GetStringAfterComma@tempCommaNumber& (0+255),b
 18510                           
 18511                           ;MISC.c: 649: unsigned char count = 0;
 18512  00783C  0E00               	movlw	0
 18513  00783E  0100               	movlb	0	; () banked
 18514  007840  6F80               	movwf	GetStringAfterComma@count& (0+255),b
 18515                           
 18516                           ; BSR set to: 0
 18517                           
 18518                           ;MISC.c: 651: SCAN:while(*This != ',' && *This != 0)
 18519  007842  D001               	goto	l14947
 18520                           
 18521                           ; BSR set to: 0
 18522  007844  D02B               	goto	L14
 18523  007846                     l14947:
 18524                           
 18525                           ; BSR set to: 0
 18526  007846  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18527  00784A  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18528  00784E  0E2C               	movlw	44
 18529  007850  18DE               	xorwf	postinc2,w,c
 18530  007852  B4D8               	btfsc	status,2,c
 18531  007854  D009               	goto	l14951
 18532                           
 18533                           ; BSR set to: 0
 18534  007856  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18535  00785A  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18536  00785E  50DF               	movf	indf2,w,c
 18537  007860  B4D8               	btfsc	status,2,c
 18538  007862  D002               	goto	l14951
 18539  007864  D01B               	goto	L14
 18540                           
 18541                           ; BSR set to: 0
 18542  007866  D000               	goto	l14951
 18543  007868                     l14951:
 18544                           
 18545                           ; BSR set to: 0
 18546                           ;MISC.c: 655: }
 18547                           ;MISC.c: 656: if(*This == 0)
 18548  007868  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18549  00786C  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18550  007870  50DF               	movf	indf2,w,c
 18551  007872  A4D8               	btfss	status,2,c
 18552  007874  D003               	goto	l14959
 18553                           
 18554                           ; BSR set to: 0
 18555                           ;MISC.c: 657: {
 18556                           ;MISC.c: 658: return 1;
 18557  007876  0E01               	movlw	1
 18558                           
 18559                           ; BSR set to: 0
 18560  007878  0012               	return	
 18561                           
 18562                           ; BSR set to: 0
 18563                           ;MISC.c: 659: }
 18564  00787A  D015               	goto	l14965
 18565  00787C                     l14959:
 18566                           
 18567                           ; BSR set to: 0
 18568                           ;MISC.c: 660: else if(*This != ',')
 18569  00787C  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18570  007880  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18571  007884  0E2C               	movlw	44
 18572  007886  18DE               	xorwf	postinc2,w,c
 18573  007888  B4D8               	btfsc	status,2,c
 18574  00788A  D00D               	goto	l14965
 18575                           
 18576                           ; BSR set to: 0
 18577                           ;MISC.c: 661: {
 18578                           ;MISC.c: 662: if(tempCommaNumber < CommaNumber)
 18579  00788C  0100               	movlb	0	; () banked
 18580  00788E  517B               	movf	GetStringAfterComma@CommaNumber& (0+255),w,b
 18581  007890  0100               	movlb	0	; () banked
 18582  007892  5D7F               	subwf	GetStringAfterComma@tempCommaNumber& (0+255),w,b
 18583  007894  B0D8               	btfsc	status,0,c
 18584  007896  D007               	goto	l14965
 18585                           
 18586                           ; BSR set to: 0
 18587                           ;MISC.c: 663: {
 18588                           ;MISC.c: 664: tempCommaNumber++;
 18589  007898  0100               	movlb	0	; () banked
 18590  00789A  2B7F               	incf	GetStringAfterComma@tempCommaNumber& (0+255),f,b
 18591  00789C                     L14:
 18592                           
 18593                           ;MISC.c: 665: This++;
 18594  00789C  0100               	movlb	0	; () banked
 18595  00789E  4B79               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18596  0078A0  2B7A               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18597                           
 18598                           ;MISC.c: 666: goto SCAN;
 18599  0078A2  D7D1               	goto	l14947
 18600                           
 18601                           ; BSR set to: 0
 18602                           
 18603                           ; BSR set to: 0
 18604  0078A4  D000               	goto	l14965
 18605  0078A6                     l14965:
 18606                           
 18607                           ; BSR set to: 0
 18608                           ;MISC.c: 667: }
 18609                           ;MISC.c: 668: }
 18610                           ;MISC.c: 669: if(*This == 0)
 18611  0078A6  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18612  0078AA  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18613  0078AE  50DF               	movf	indf2,w,c
 18614  0078B0  A4D8               	btfss	status,2,c
 18615  0078B2  D002               	goto	l14971
 18616                           
 18617                           ; BSR set to: 0
 18618                           ;MISC.c: 670: {
 18619                           ;MISC.c: 671: return 1;
 18620  0078B4  0E01               	movlw	1
 18621                           
 18622                           ; BSR set to: 0
 18623  0078B6  0012               	return	
 18624  0078B8                     l14971:
 18625                           
 18626                           ; BSR set to: 0
 18627                           ;MISC.c: 672: }
 18628                           ;MISC.c: 673: This++;
 18629  0078B8  0100               	movlb	0	; () banked
 18630  0078BA  4B79               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18631  0078BC  2B7A               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18632                           
 18633                           ; BSR set to: 0
 18634                           ;MISC.c: 674: if(*This == ' ')
 18635  0078BE  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18636  0078C2  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18637  0078C6  0E20               	movlw	32
 18638  0078C8  18DE               	xorwf	postinc2,w,c
 18639  0078CA  A4D8               	btfss	status,2,c
 18640  0078CC  D004               	goto	l14977
 18641                           
 18642                           ; BSR set to: 0
 18643                           ;MISC.c: 675: {
 18644                           ;MISC.c: 676: This++;
 18645  0078CE  0100               	movlb	0	; () banked
 18646  0078D0  4B79               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18647  0078D2  2B7A               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18648                           
 18649                           ;MISC.c: 678: }
 18650  0078D4  D028               	goto	l14999
 18651  0078D6                     l14977:
 18652                           
 18653                           ; BSR set to: 0
 18654                           ;MISC.c: 679: else if (*This == ',')
 18655  0078D6  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18656  0078DA  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18657  0078DE  0E2C               	movlw	44
 18658  0078E0  18DE               	xorwf	postinc2,w,c
 18659  0078E2  A4D8               	btfss	status,2,c
 18660  0078E4  D003               	goto	l14985
 18661                           
 18662                           ; BSR set to: 0
 18663                           ;MISC.c: 680: {
 18664                           ;MISC.c: 681: return 2;
 18665  0078E6  0E02               	movlw	2
 18666                           
 18667                           ; BSR set to: 0
 18668  0078E8  0012               	return	
 18669                           
 18670                           ; BSR set to: 0
 18671                           ;MISC.c: 682: }
 18672  0078EA  D01D               	goto	l14999
 18673  0078EC                     l14985:
 18674                           
 18675                           ; BSR set to: 0
 18676                           ;MISC.c: 683: else if(*This == 0)
 18677  0078EC  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18678  0078F0  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18679  0078F4  50DF               	movf	indf2,w,c
 18680  0078F6  A4D8               	btfss	status,2,c
 18681  0078F8  D016               	goto	l14999
 18682                           
 18683                           ; BSR set to: 0
 18684                           ;MISC.c: 684: {
 18685                           ;MISC.c: 685: return 3;
 18686  0078FA  0E03               	movlw	3
 18687                           
 18688                           ; BSR set to: 0
 18689  0078FC  0012               	return	
 18690                           
 18691                           ; BSR set to: 0
 18692                           ;MISC.c: 686: }
 18693                           ;MISC.c: 687: while(*This != 0 && *This != ' ' && count < 10)
 18694                           
 18695                           ; BSR set to: 0
 18696                           
 18697                           ; BSR set to: 0
 18698  0078FE  D013               	goto	l14999
 18699  007900                     l14991:
 18700                           
 18701                           ; BSR set to: 0
 18702                           ;MISC.c: 688: {
 18703                           ;MISC.c: 689: *result = *This;
 18704  007900  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18705  007904  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18706  007908  C07C  FFE1         	movff	GetStringAfterComma@result,fsr1l
 18707  00790C  C07D  FFE2         	movff	GetStringAfterComma@result+1,fsr1h
 18708  007910  CFDF FFE7          	movff	indf2,indf1
 18709                           
 18710                           ; BSR set to: 0
 18711                           ;MISC.c: 690: result++;
 18712  007914  0100               	movlb	0	; () banked
 18713  007916  4B7C               	infsnz	GetStringAfterComma@result& (0+255),f,b
 18714  007918  2B7D               	incf	(GetStringAfterComma@result+1)& (0+255),f,b
 18715                           
 18716                           ; BSR set to: 0
 18717                           ;MISC.c: 691: This++;
 18718  00791A  0100               	movlb	0	; () banked
 18719  00791C  4B79               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18720  00791E  2B7A               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18721                           
 18722                           ; BSR set to: 0
 18723                           ;MISC.c: 692: count++;
 18724  007920  0100               	movlb	0	; () banked
 18725  007922  2B80               	incf	GetStringAfterComma@count& (0+255),f,b
 18726  007924  D000               	goto	l14999
 18727  007926                     l14999:
 18728                           
 18729                           ; BSR set to: 0
 18730  007926  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18731  00792A  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18732  00792E  50DF               	movf	indf2,w,c
 18733  007930  B4D8               	btfsc	status,2,c
 18734  007932  D00D               	goto	l15005
 18735                           
 18736                           ; BSR set to: 0
 18737  007934  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18738  007938  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18739  00793C  0E20               	movlw	32
 18740  00793E  18DE               	xorwf	postinc2,w,c
 18741  007940  B4D8               	btfsc	status,2,c
 18742  007942  D005               	goto	l15005
 18743                           
 18744                           ; BSR set to: 0
 18745  007944  0E09               	movlw	9
 18746  007946  0100               	movlb	0	; () banked
 18747  007948  6580               	cpfsgt	GetStringAfterComma@count& (0+255),b
 18748  00794A  D7DA               	goto	l14991
 18749                           
 18750                           ; BSR set to: 0
 18751  00794C  D000               	goto	l15005
 18752  00794E                     l15005:
 18753                           
 18754                           ; BSR set to: 0
 18755                           ;MISC.c: 693: }
 18756                           ;MISC.c: 694: return 0;
 18757  00794E  0E00               	movlw	0
 18758  007950  0012               	return	
 18759                           
 18760                           ; BSR set to: 0
 18761                           
 18762                           ; BSR set to: 0
 18763  007952  0012               	return		;funcret
 18764  007954                     __end_of_GetStringAfterComma:
 18765                           	opt stack 0
 18766                           tblptru	equ	0xFF8
 18767                           tblptrh	equ	0xFF7
 18768                           tblptrl	equ	0xFF6
 18769                           tablat	equ	0xFF5
 18770                           prodh	equ	0xFF4
 18771                           prodl	equ	0xFF3
 18772                           intcon	equ	0xFF2
 18773                           indf0	equ	0xFEF
 18774                           postinc0	equ	0xFEE
 18775                           fsr0h	equ	0xFEA
 18776                           fsr0l	equ	0xFE9
 18777                           wreg	equ	0xFE8
 18778                           indf1	equ	0xFE7
 18779                           postdec1	equ	0xFE5
 18780                           fsr1h	equ	0xFE2
 18781                           fsr1l	equ	0xFE1
 18782                           indf2	equ	0xFDF
 18783                           postinc2	equ	0xFDE
 18784                           postdec2	equ	0xFDD
 18785                           fsr2h	equ	0xFDA
 18786                           fsr2l	equ	0xFD9
 18787                           status	equ	0xFD8
 18788                           
 18789 ;; *************** function _GetNumber *****************
 18790 ;; Defined at:
 18791 ;;		line 457 in file "MISC.c"
 18792 ;; Parameters:    Size  Location     Type
 18793 ;;  This            2   37[BANK0 ] PTR unsigned char 
 18794 ;;		 -> main@BluetoothString(255), 
 18795 ;;  CommaNumber     1   39[BANK0 ] unsigned char 
 18796 ;;  result          2   40[BANK0 ] PTR unsigned long 
 18797 ;;		 -> UseBluetooth@temp(4), UseBluetooth@EnteredNEC(4), 
 18798 ;; Auto vars:     Size  Location     Type
 18799 ;;  temp            4   53[BANK0 ] long 
 18800 ;;  tempThis        1   52[BANK0 ] unsigned char 
 18801 ;;  i               1   51[BANK0 ] unsigned char 
 18802 ;;  Hex             1   50[BANK0 ] unsigned char 
 18803 ;;  count           1   49[BANK0 ] unsigned char 
 18804 ;;  negative        1   48[BANK0 ] unsigned char 
 18805 ;;  tempCommaNum    1   47[BANK0 ] unsigned char 
 18806 ;; Return value:  Size  Location     Type
 18807 ;;                  1    wreg      unsigned char 
 18808 ;; Registers used:
 18809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18810 ;; Tracked objects:
 18811 ;;		On entry : 0/0
 18812 ;;		On exit  : 0/0
 18813 ;;		Unchanged: 0/0
 18814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18815 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18816 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18817 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18818 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18819 ;;Total ram usage:       20 bytes
 18820 ;; Hardware stack levels used:    1
 18821 ;; Hardware stack levels required when called:    7
 18822 ;; This function calls:
 18823 ;;		_IsLetter
 18824 ;;		___lmul
 18825 ;;		_lowercaseChar
 18826 ;; This function is called by:
 18827 ;;		_UseBluetooth
 18828 ;; This function uses a non-reentrant model
 18829 ;;
 18830                           
 18831                           	psect	text30
 18832  0047F6                     __ptext30:
 18833                           	opt stack 0
 18834  0047F6                     _GetNumber:
 18835                           	opt stack 22
 18836                           
 18837                           ;MISC.c: 459: unsigned char i =0;
 18838                           
 18839                           ; BSR set to: 0
 18840                           ;incstack = 0
 18841  0047F6  0E00               	movlw	0
 18842  0047F8  0100               	movlb	0	; () banked
 18843  0047FA  6F93               	movwf	GetNumber@i& (0+255),b
 18844                           
 18845                           ;MISC.c: 460: long temp =0;
 18846  0047FC  0E00               	movlw	0
 18847  0047FE  0100               	movlb	0	; () banked
 18848  004800  6F95               	movwf	GetNumber@temp& (0+255),b
 18849  004802  0E00               	movlw	0
 18850  004804  6F96               	movwf	(GetNumber@temp+1)& (0+255),b
 18851  004806  0E00               	movlw	0
 18852  004808  6F97               	movwf	(GetNumber@temp+2)& (0+255),b
 18853  00480A  0E00               	movlw	0
 18854  00480C  6F98               	movwf	(GetNumber@temp+3)& (0+255),b
 18855                           
 18856                           ;MISC.c: 461: unsigned char negative =0;
 18857  00480E  0E00               	movlw	0
 18858  004810  0100               	movlb	0	; () banked
 18859  004812  6F90               	movwf	GetNumber@negative& (0+255),b
 18860                           
 18861                           ;MISC.c: 462: unsigned char tempCommaNumber = 1;
 18862  004814  0E01               	movlw	1
 18863  004816  0100               	movlb	0	; () banked
 18864  004818  6F8F               	movwf	GetNumber@tempCommaNumber& (0+255),b
 18865                           
 18866                           ;MISC.c: 463: unsigned char count =0;
 18867  00481A  0E00               	movlw	0
 18868  00481C  0100               	movlb	0	; () banked
 18869  00481E  6F91               	movwf	GetNumber@count& (0+255),b
 18870                           
 18871                           ;MISC.c: 464: unsigned char Hex = 0;
 18872  004820  0E00               	movlw	0
 18873  004822  0100               	movlb	0	; () banked
 18874  004824  6F92               	movwf	GetNumber@Hex& (0+255),b
 18875                           
 18876                           ;MISC.c: 465: unsigned char tempThis;
 18877                           ;MISC.c: 467: while(*This != 0)
 18878  004826  D038               	goto	l14729
 18879  004828                     l14709:
 18880                           
 18881                           ; BSR set to: 0
 18882                           ;MISC.c: 468: {
 18883                           ;MISC.c: 469: if(*This == '0')
 18884  004828  C085  FFD9         	movff	GetNumber@This,fsr2l
 18885  00482C  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18886  004830  0E30               	movlw	48
 18887  004832  18DE               	xorwf	postinc2,w,c
 18888  004834  A4D8               	btfss	status,2,c
 18889  004836  D02A               	goto	l14725
 18890                           
 18891                           ; BSR set to: 0
 18892                           ;MISC.c: 470: {
 18893                           ;MISC.c: 471: count++;
 18894  004838  0100               	movlb	0	; () banked
 18895  00483A  2B91               	incf	GetNumber@count& (0+255),f,b
 18896                           
 18897                           ;MISC.c: 472: This++;
 18898  00483C  0100               	movlb	0	; () banked
 18899  00483E  4B85               	infsnz	GetNumber@This& (0+255),f,b
 18900  004840  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 18901                           
 18902                           ; BSR set to: 0
 18903                           ;MISC.c: 473: if(*This == 'x' || *This == 'X')
 18904  004842  C085  FFD9         	movff	GetNumber@This,fsr2l
 18905  004846  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18906  00484A  0E78               	movlw	120
 18907  00484C  18DE               	xorwf	postinc2,w,c
 18908  00484E  B4D8               	btfsc	status,2,c
 18909  004850  D008               	goto	l14717
 18910                           
 18911                           ; BSR set to: 0
 18912  004852  C085  FFD9         	movff	GetNumber@This,fsr2l
 18913  004856  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18914  00485A  0E58               	movlw	88
 18915  00485C  18DE               	xorwf	postinc2,w,c
 18916  00485E  A4D8               	btfss	status,2,c
 18917  004860  D015               	goto	l14725
 18918  004862                     l14717:
 18919                           
 18920                           ; BSR set to: 0
 18921                           ;MISC.c: 474: {
 18922                           ;MISC.c: 475: This++;
 18923  004862  0100               	movlb	0	; () banked
 18924  004864  4B85               	infsnz	GetNumber@This& (0+255),f,b
 18925  004866  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 18926                           
 18927                           ; BSR set to: 0
 18928                           ;MISC.c: 476: if(*This >='0' && *This <='9')
 18929  004868  C085  FFD9         	movff	GetNumber@This,fsr2l
 18930  00486C  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18931  004870  0E2F               	movlw	47
 18932  004872  64DF               	cpfsgt	indf2,c
 18933  004874  D00B               	goto	l14725
 18934                           
 18935                           ; BSR set to: 0
 18936  004876  C085  FFD9         	movff	GetNumber@This,fsr2l
 18937  00487A  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18938  00487E  0E3A               	movlw	58
 18939  004880  60DF               	cpfslt	indf2,c
 18940  004882  D004               	goto	l14725
 18941                           
 18942                           ; BSR set to: 0
 18943                           ;MISC.c: 477: {
 18944                           ;MISC.c: 478: Hex = 1;
 18945  004884  0E01               	movlw	1
 18946  004886  0100               	movlb	0	; () banked
 18947  004888  6F92               	movwf	GetNumber@Hex& (0+255),b
 18948                           
 18949                           ; BSR set to: 0
 18950                           
 18951                           ; BSR set to: 0
 18952  00488A  D000               	goto	l14725
 18953  00488C                     l14725:
 18954                           
 18955                           ; BSR set to: 0
 18956                           ;MISC.c: 479: }
 18957                           ;MISC.c: 480: }
 18958                           ;MISC.c: 481: }
 18959                           ;MISC.c: 482: count++;
 18960  00488C  0100               	movlb	0	; () banked
 18961  00488E  2B91               	incf	GetNumber@count& (0+255),f,b
 18962                           
 18963                           ; BSR set to: 0
 18964                           ;MISC.c: 483: This++;
 18965  004890  0100               	movlb	0	; () banked
 18966  004892  4B85               	infsnz	GetNumber@This& (0+255),f,b
 18967  004894  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 18968  004896  D000               	goto	l14729
 18969  004898                     l14729:
 18970                           
 18971                           ; BSR set to: 0
 18972  004898  C085  FFD9         	movff	GetNumber@This,fsr2l
 18973  00489C  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18974  0048A0  50DF               	movf	indf2,w,c
 18975  0048A2  A4D8               	btfss	status,2,c
 18976  0048A4  D7C1               	goto	l14709
 18977                           
 18978                           ; BSR set to: 0
 18979                           ;MISC.c: 484: }
 18980                           ;MISC.c: 485: This-=count;
 18981                           
 18982                           ; BSR set to: 0
 18983  0048A6  0100               	movlb	0	; () banked
 18984  0048A8  5191               	movf	GetNumber@count& (0+255),w,b
 18985  0048AA  0D01               	mullw	1
 18986  0048AC  50F3               	movf	prodl,w,c
 18987  0048AE  0100               	movlb	0	; () banked
 18988  0048B0  5F85               	subwf	GetNumber@This& (0+255),f,b
 18989  0048B2  50F4               	movf	prodh,w,c
 18990  0048B4  0100               	movlb	0	; () banked
 18991  0048B6  5B86               	subwfb	(GetNumber@This+1)& (0+255),f,b
 18992                           
 18993                           ; BSR set to: 0
 18994                           
 18995                           ;MISC.c: 487: SCAN:while(*This != '=' && *This != ',' && *This != 0)
 18996  0048B8  D001               	goto	l14735
 18997                           
 18998                           ; BSR set to: 0
 18999  0048BA  D03B               	goto	L15
 19000  0048BC                     l14735:
 19001                           
 19002                           ; BSR set to: 0
 19003  0048BC  C085  FFD9         	movff	GetNumber@This,fsr2l
 19004  0048C0  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19005  0048C4  0E3D               	movlw	61
 19006  0048C6  18DE               	xorwf	postinc2,w,c
 19007  0048C8  B4D8               	btfsc	status,2,c
 19008  0048CA  D011               	goto	l14741
 19009                           
 19010                           ; BSR set to: 0
 19011  0048CC  C085  FFD9         	movff	GetNumber@This,fsr2l
 19012  0048D0  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19013  0048D4  0E2C               	movlw	44
 19014  0048D6  18DE               	xorwf	postinc2,w,c
 19015  0048D8  B4D8               	btfsc	status,2,c
 19016  0048DA  D009               	goto	l14741
 19017                           
 19018                           ; BSR set to: 0
 19019  0048DC  C085  FFD9         	movff	GetNumber@This,fsr2l
 19020  0048E0  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19021  0048E4  50DF               	movf	indf2,w,c
 19022  0048E6  B4D8               	btfsc	status,2,c
 19023  0048E8  D002               	goto	l14741
 19024  0048EA  D023               	goto	L15
 19025                           
 19026                           ; BSR set to: 0
 19027  0048EC  D000               	goto	l14741
 19028  0048EE                     l14741:
 19029                           
 19030                           ; BSR set to: 0
 19031                           ;MISC.c: 491: }
 19032                           ;MISC.c: 492: if(*This == 0)
 19033  0048EE  C085  FFD9         	movff	GetNumber@This,fsr2l
 19034  0048F2  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19035  0048F6  50DF               	movf	indf2,w,c
 19036  0048F8  A4D8               	btfss	status,2,c
 19037  0048FA  D003               	goto	l14749
 19038                           
 19039                           ; BSR set to: 0
 19040                           ;MISC.c: 493: {
 19041                           ;MISC.c: 494: return 1;
 19042  0048FC  0E01               	movlw	1
 19043                           
 19044                           ; BSR set to: 0
 19045  0048FE  0012               	return	
 19046                           
 19047                           ; BSR set to: 0
 19048                           ;MISC.c: 495: }
 19049  004900  D01D               	goto	l14757
 19050  004902                     l14749:
 19051                           
 19052                           ; BSR set to: 0
 19053                           ;MISC.c: 496: else if(*This != '=' || *This != ',')
 19054  004902  C085  FFD9         	movff	GetNumber@This,fsr2l
 19055  004906  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19056  00490A  0E3D               	movlw	61
 19057  00490C  18DE               	xorwf	postinc2,w,c
 19058  00490E  A4D8               	btfss	status,2,c
 19059  004910  D008               	goto	l14753
 19060                           
 19061                           ; BSR set to: 0
 19062  004912  C085  FFD9         	movff	GetNumber@This,fsr2l
 19063  004916  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19064  00491A  0E2C               	movlw	44
 19065  00491C  18DE               	xorwf	postinc2,w,c
 19066  00491E  B4D8               	btfsc	status,2,c
 19067  004920  D00D               	goto	l14757
 19068  004922                     l14753:
 19069                           
 19070                           ; BSR set to: 0
 19071                           ;MISC.c: 497: {
 19072                           ;MISC.c: 498: if(tempCommaNumber < CommaNumber)
 19073  004922  0100               	movlb	0	; () banked
 19074  004924  5187               	movf	GetNumber@CommaNumber& (0+255),w,b
 19075  004926  0100               	movlb	0	; () banked
 19076  004928  5D8F               	subwf	GetNumber@tempCommaNumber& (0+255),w,b
 19077  00492A  B0D8               	btfsc	status,0,c
 19078  00492C  D007               	goto	l14757
 19079                           
 19080                           ; BSR set to: 0
 19081                           ;MISC.c: 499: {
 19082                           ;MISC.c: 500: tempCommaNumber++;
 19083  00492E  0100               	movlb	0	; () banked
 19084  004930  2B8F               	incf	GetNumber@tempCommaNumber& (0+255),f,b
 19085  004932                     L15:
 19086                           
 19087                           ;MISC.c: 501: This++;
 19088  004932  0100               	movlb	0	; () banked
 19089  004934  4B85               	infsnz	GetNumber@This& (0+255),f,b
 19090  004936  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 19091                           
 19092                           ;MISC.c: 502: goto SCAN;
 19093  004938  D7C1               	goto	l14735
 19094                           
 19095                           ; BSR set to: 0
 19096                           
 19097                           ; BSR set to: 0
 19098  00493A  D000               	goto	l14757
 19099  00493C                     l14757:
 19100                           
 19101                           ; BSR set to: 0
 19102                           ;MISC.c: 503: }
 19103                           ;MISC.c: 504: }
 19104                           ;MISC.c: 505: if(*This == 0)
 19105  00493C  C085  FFD9         	movff	GetNumber@This,fsr2l
 19106  004940  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19107  004944  50DF               	movf	indf2,w,c
 19108  004946  A4D8               	btfss	status,2,c
 19109  004948  D002               	goto	l14763
 19110                           
 19111                           ; BSR set to: 0
 19112                           ;MISC.c: 506: {
 19113                           ;MISC.c: 507: return 1;
 19114  00494A  0E01               	movlw	1
 19115                           
 19116                           ; BSR set to: 0
 19117  00494C  0012               	return	
 19118  00494E                     l14763:
 19119                           
 19120                           ; BSR set to: 0
 19121                           ;MISC.c: 508: }
 19122                           ;MISC.c: 509: This++;
 19123  00494E  0100               	movlb	0	; () banked
 19124  004950  4B85               	infsnz	GetNumber@This& (0+255),f,b
 19125  004952  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 19126                           
 19127                           ; BSR set to: 0
 19128                           ;MISC.c: 510: if(*This == ' ')
 19129  004954  C085  FFD9         	movff	GetNumber@This,fsr2l
 19130  004958  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19131  00495C  0E20               	movlw	32
 19132  00495E  18DE               	xorwf	postinc2,w,c
 19133  004960  B4D8               	btfsc	status,2,c
 19134  004962  D01E               	goto	l14783
 19135                           
 19136                           ; BSR set to: 0
 19137                           ;MISC.c: 515: else if (*This == '=' || *This == ',')
 19138                           
 19139                           ; BSR set to: 0
 19140                           
 19141                           ;MISC.c: 514: }
 19142                           
 19143                           ; BSR set to: 0
 19144                           ;MISC.c: 511: {
 19145                           ;MISC.c: 512: This++;
 19146  004964  C085  FFD9         	movff	GetNumber@This,fsr2l
 19147  004968  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19148  00496C  0E3D               	movlw	61
 19149  00496E  18DE               	xorwf	postinc2,w,c
 19150  004970  B4D8               	btfsc	status,2,c
 19151  004972  D008               	goto	l14773
 19152                           
 19153                           ; BSR set to: 0
 19154  004974  C085  FFD9         	movff	GetNumber@This,fsr2l
 19155  004978  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19156  00497C  0E2C               	movlw	44
 19157  00497E  18DE               	xorwf	postinc2,w,c
 19158  004980  A4D8               	btfss	status,2,c
 19159  004982  D003               	goto	l14779
 19160  004984                     l14773:
 19161                           
 19162                           ; BSR set to: 0
 19163                           ;MISC.c: 516: {
 19164                           ;MISC.c: 517: return 2;
 19165  004984  0E02               	movlw	2
 19166                           
 19167                           ; BSR set to: 0
 19168  004986  0012               	return	
 19169                           
 19170                           ; BSR set to: 0
 19171                           ;MISC.c: 518: }
 19172  004988  D019               	goto	l14791
 19173  00498A                     l14779:
 19174                           
 19175                           ; BSR set to: 0
 19176                           ;MISC.c: 519: else if(*This == '-')
 19177  00498A  C085  FFD9         	movff	GetNumber@This,fsr2l
 19178  00498E  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19179  004992  0E2D               	movlw	45
 19180  004994  18DE               	xorwf	postinc2,w,c
 19181  004996  A4D8               	btfss	status,2,c
 19182  004998  D007               	goto	l14785
 19183                           
 19184                           ; BSR set to: 0
 19185                           ;MISC.c: 520: {
 19186                           ;MISC.c: 521: negative = 1;
 19187  00499A  0E01               	movlw	1
 19188  00499C  0100               	movlb	0	; () banked
 19189  00499E  6F90               	movwf	GetNumber@negative& (0+255),b
 19190  0049A0                     l14783:
 19191                           
 19192                           ; BSR set to: 0
 19193                           ;MISC.c: 522: This++;
 19194  0049A0  0100               	movlb	0	; () banked
 19195  0049A2  4B85               	infsnz	GetNumber@This& (0+255),f,b
 19196  0049A4  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 19197                           
 19198                           ;MISC.c: 524: }
 19199  0049A6  D00A               	goto	l14791
 19200  0049A8                     l14785:
 19201                           
 19202                           ; BSR set to: 0
 19203                           ;MISC.c: 525: else if(*This == 0)
 19204  0049A8  C085  FFD9         	movff	GetNumber@This,fsr2l
 19205  0049AC  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19206  0049B0  50DF               	movf	indf2,w,c
 19207  0049B2  A4D8               	btfss	status,2,c
 19208  0049B4  D003               	goto	l14791
 19209                           
 19210                           ; BSR set to: 0
 19211                           ;MISC.c: 526: {
 19212                           ;MISC.c: 527: return 3;
 19213  0049B6  0E03               	movlw	3
 19214                           
 19215                           ; BSR set to: 0
 19216  0049B8  0012               	return	
 19217                           
 19218                           ; BSR set to: 0
 19219                           
 19220                           ; BSR set to: 0
 19221                           
 19222                           ; BSR set to: 0
 19223  0049BA  D000               	goto	l14791
 19224  0049BC                     l14791:
 19225                           
 19226                           ; BSR set to: 0
 19227                           ;MISC.c: 528: }
 19228                           ;MISC.c: 529: if(Hex)
 19229  0049BC  0100               	movlb	0	; () banked
 19230  0049BE  5192               	movf	GetNumber@Hex& (0+255),w,b
 19231  0049C0  0100               	movlb	0	; () banked
 19232  0049C2  B4D8               	btfsc	status,2,c
 19233  0049C4  D11C               	goto	l14855
 19234                           
 19235                           ; BSR set to: 0
 19236                           ;MISC.c: 530: {
 19237                           ;MISC.c: 531: negative = 0;
 19238  0049C6  0E00               	movlw	0
 19239  0049C8  0100               	movlb	0	; () banked
 19240  0049CA  6F90               	movwf	GetNumber@negative& (0+255),b
 19241                           
 19242                           ;MISC.c: 532: while(*This != 'x' && *This != 'X')
 19243  0049CC  D004               	goto	l14797
 19244  0049CE                     l14795:
 19245                           
 19246                           ; BSR set to: 0
 19247                           ;MISC.c: 533: {
 19248                           ;MISC.c: 535: This++;
 19249  0049CE  0100               	movlb	0	; () banked
 19250  0049D0  4B85               	infsnz	GetNumber@This& (0+255),f,b
 19251  0049D2  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 19252  0049D4  D000               	goto	l14797
 19253  0049D6                     l14797:
 19254                           
 19255                           ; BSR set to: 0
 19256  0049D6  C085  FFD9         	movff	GetNumber@This,fsr2l
 19257  0049DA  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19258  0049DE  0E78               	movlw	120
 19259  0049E0  18DE               	xorwf	postinc2,w,c
 19260  0049E2  B4D8               	btfsc	status,2,c
 19261  0049E4  D108               	goto	l14853
 19262                           
 19263                           ; BSR set to: 0
 19264  0049E6  C085  FFD9         	movff	GetNumber@This,fsr2l
 19265  0049EA  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19266  0049EE  0E58               	movlw	88
 19267  0049F0  18DE               	xorwf	postinc2,w,c
 19268  0049F2  B4D8               	btfsc	status,2,c
 19269  0049F4  D100               	goto	l14853
 19270  0049F6  D7EB               	goto	l14795
 19271                           
 19272                           ; BSR set to: 0
 19273  0049F8  D0FE               	goto	l14853
 19274                           
 19275                           ; BSR set to: 0
 19276  0049FA  D0FD               	goto	l14853
 19277                           
 19278                           ; BSR set to: 0
 19279                           ;MISC.c: 538: }
 19280                           ;MISC.c: 539: while(*This != 0 && *This != ' ' && *This != ',' && *This != '=')
 19281                           
 19282                           ; BSR set to: 0
 19283                           ;MISC.c: 536: }
 19284                           ;MISC.c: 537: This++;
 19285  0049FC  D100               	goto	l14855
 19286  0049FE                     l14803:
 19287                           
 19288                           ; BSR set to: 0
 19289                           ;MISC.c: 540: {
 19290                           ;MISC.c: 541: if(!Hex)
 19291  0049FE  0100               	movlb	0	; () banked
 19292  004A00  5192               	movf	GetNumber@Hex& (0+255),w,b
 19293  004A02  0100               	movlb	0	; () banked
 19294  004A04  A4D8               	btfss	status,2,c
 19295  004A06  D05B               	goto	l14821
 19296                           
 19297                           ; BSR set to: 0
 19298                           ;MISC.c: 542: {
 19299                           ;MISC.c: 543: if(*This >=48 && *This <= 57)
 19300  004A08  C085  FFD9         	movff	GetNumber@This,fsr2l
 19301  004A0C  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19302  004A10  0E2F               	movlw	47
 19303  004A12  64DF               	cpfsgt	indf2,c
 19304  004A14  D0F0               	goto	l14853
 19305                           
 19306                           ; BSR set to: 0
 19307  004A16  C085  FFD9         	movff	GetNumber@This,fsr2l
 19308  004A1A  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19309  004A1E  0E3A               	movlw	58
 19310  004A20  60DF               	cpfslt	indf2,c
 19311  004A22  D0E9               	goto	l14853
 19312                           
 19313                           ; BSR set to: 0
 19314                           ;MISC.c: 544: {
 19315                           ;MISC.c: 545: temp = temp * 10;
 19316  004A24  C095  F079         	movff	GetNumber@temp,___lmul@multiplier
 19317  004A28  C096  F07A         	movff	GetNumber@temp+1,___lmul@multiplier+1
 19318  004A2C  C097  F07B         	movff	GetNumber@temp+2,___lmul@multiplier+2
 19319  004A30  C098  F07C         	movff	GetNumber@temp+3,___lmul@multiplier+3
 19320  004A34  0E0A               	movlw	10
 19321  004A36  0100               	movlb	0	; () banked
 19322  004A38  6F7D               	movwf	___lmul@multiplicand& (0+255),b
 19323  004A3A  0E00               	movlw	0
 19324  004A3C  6F7E               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19325  004A3E  0E00               	movlw	0
 19326  004A40  6F7F               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19327  004A42  0E00               	movlw	0
 19328  004A44  6F80               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19329  004A46  ECFF  F044         	call	___lmul	;wreg free
 19330  004A4A  C079  F095         	movff	?___lmul,GetNumber@temp
 19331  004A4E  C07A  F096         	movff	?___lmul+1,GetNumber@temp+1
 19332  004A52  C07B  F097         	movff	?___lmul+2,GetNumber@temp+2
 19333  004A56  C07C  F098         	movff	?___lmul+3,GetNumber@temp+3
 19334                           
 19335                           ;MISC.c: 546: temp += *This - 48;
 19336  004A5A  C085  FFD9         	movff	GetNumber@This,fsr2l
 19337  004A5E  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19338  004A62  50DF               	movf	indf2,w,c
 19339  004A64  0100               	movlb	0	; () banked
 19340  004A66  6F8A               	movwf	??_GetNumber& (0+255),b
 19341  004A68  0ED0               	movlw	208
 19342  004A6A  0100               	movlb	0	; () banked
 19343  004A6C  258A               	addwf	??_GetNumber& (0+255),w,b
 19344  004A6E  0100               	movlb	0	; () banked
 19345  004A70  6F8B               	movwf	(??_GetNumber+1)& (0+255),b
 19346  004A72  0100               	movlb	0	; () banked
 19347  004A74  6B8C               	clrf	(??_GetNumber+2)& (0+255),b
 19348  004A76  0EFF               	movlw	255
 19349  004A78  238C               	addwfc	(??_GetNumber+2)& (0+255),f,b
 19350  004A7A  0100               	movlb	0	; () banked
 19351  004A7C  6B8D               	clrf	(??_GetNumber+3)& (0+255),b
 19352  004A7E  0100               	movlb	0	; () banked
 19353  004A80  BF8C               	btfsc	(??_GetNumber+2)& (0+255),7,b
 19354  004A82  078D               	decf	(??_GetNumber+3)& (0+255),f,b
 19355  004A84  0100               	movlb	0	; () banked
 19356  004A86  518D               	movf	(??_GetNumber+3)& (0+255),w,b
 19357  004A88  0100               	movlb	0	; () banked
 19358  004A8A  6F8E               	movwf	(??_GetNumber+4)& (0+255),b
 19359  004A8C  0100               	movlb	0	; () banked
 19360  004A8E  518B               	movf	(??_GetNumber+1)& (0+255),w,b
 19361  004A90  0100               	movlb	0	; () banked
 19362  004A92  2795               	addwf	GetNumber@temp& (0+255),f,b
 19363  004A94  0100               	movlb	0	; () banked
 19364  004A96  518C               	movf	(??_GetNumber+2)& (0+255),w,b
 19365  004A98  0100               	movlb	0	; () banked
 19366  004A9A  2396               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19367  004A9C  0100               	movlb	0	; () banked
 19368  004A9E  518D               	movf	(??_GetNumber+3)& (0+255),w,b
 19369  004AA0  0100               	movlb	0	; () banked
 19370  004AA2  2397               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19371  004AA4  0100               	movlb	0	; () banked
 19372  004AA6  518E               	movf	(??_GetNumber+4)& (0+255),w,b
 19373  004AA8  0100               	movlb	0	; () banked
 19374  004AAA  2398               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 19375                           
 19376                           ; BSR set to: 0
 19377                           ;MISC.c: 547: i++;
 19378  004AAC  0100               	movlb	0	; () banked
 19379  004AAE  2B93               	incf	GetNumber@i& (0+255),f,b
 19380  004AB0                     l14815:
 19381                           
 19382                           ; BSR set to: 0
 19383                           ;MISC.c: 548: if(i>32)
 19384  004AB0  0E20               	movlw	32
 19385  004AB2  0100               	movlb	0	; () banked
 19386  004AB4  6593               	cpfsgt	GetNumber@i& (0+255),b
 19387  004AB6  D09F               	goto	l14853
 19388                           
 19389                           ; BSR set to: 0
 19390                           ;MISC.c: 549: {
 19391                           ;MISC.c: 550: return 4;
 19392  004AB8  0E04               	movlw	4
 19393                           
 19394                           ; BSR set to: 0
 19395  004ABA  0012               	return	
 19396                           
 19397                           ; BSR set to: 0
 19398                           ;MISC.c: 551: }
 19399                           ;MISC.c: 552: }
 19400                           ;MISC.c: 553: }
 19401                           
 19402                           ; BSR set to: 0
 19403  004ABC  D09C               	goto	l14853
 19404  004ABE                     l14821:
 19405                           
 19406                           ; BSR set to: 0
 19407                           ;MISC.c: 554: else
 19408                           ;MISC.c: 555: {
 19409                           ;MISC.c: 556: if((*This >=48 && *This <= 57) || (*This >=65 && *This <= 70) || (*This >=
      +                           97 && *This <= 102))
 19410  004ABE  C085  FFD9         	movff	GetNumber@This,fsr2l
 19411  004AC2  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19412  004AC6  0E2F               	movlw	47
 19413  004AC8  64DF               	cpfsgt	indf2,c
 19414  004ACA  D008               	goto	l14825
 19415                           
 19416                           ; BSR set to: 0
 19417  004ACC  C085  FFD9         	movff	GetNumber@This,fsr2l
 19418  004AD0  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19419  004AD4  0E39               	movlw	57
 19420  004AD6  64DF               	cpfsgt	indf2,c
 19421  004AD8  D01F               	goto	l14833
 19422  004ADA  D000               	goto	l14825
 19423  004ADC                     l14825:
 19424                           
 19425                           ; BSR set to: 0
 19426  004ADC  C085  FFD9         	movff	GetNumber@This,fsr2l
 19427  004AE0  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19428  004AE4  0E40               	movlw	64
 19429  004AE6  64DF               	cpfsgt	indf2,c
 19430  004AE8  D008               	goto	l14829
 19431                           
 19432                           ; BSR set to: 0
 19433  004AEA  C085  FFD9         	movff	GetNumber@This,fsr2l
 19434  004AEE  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19435  004AF2  0E46               	movlw	70
 19436  004AF4  64DF               	cpfsgt	indf2,c
 19437  004AF6  D010               	goto	l14833
 19438  004AF8  D000               	goto	l14829
 19439  004AFA                     l14829:
 19440                           
 19441                           ; BSR set to: 0
 19442  004AFA  C085  FFD9         	movff	GetNumber@This,fsr2l
 19443  004AFE  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19444  004B02  0E60               	movlw	96
 19445  004B04  64DF               	cpfsgt	indf2,c
 19446  004B06  D077               	goto	l14853
 19447                           
 19448                           ; BSR set to: 0
 19449  004B08  C085  FFD9         	movff	GetNumber@This,fsr2l
 19450  004B0C  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19451  004B10  0E67               	movlw	103
 19452  004B12  60DF               	cpfslt	indf2,c
 19453  004B14  D070               	goto	l14853
 19454  004B16  D000               	goto	l14833
 19455  004B18                     l14833:
 19456                           
 19457                           ; BSR set to: 0
 19458                           ;MISC.c: 557: {
 19459                           ;MISC.c: 558: temp <<= 4;
 19460  004B18  0100               	movlb	0	; () banked
 19461  004B1A  0E04               	movlw	4
 19462  004B1C                     u18325:
 19463  004B1C  90D8               	bcf	status,0,c
 19464  004B1E  3795               	rlcf	GetNumber@temp& (0+255),f,b
 19465  004B20  3796               	rlcf	(GetNumber@temp+1)& (0+255),f,b
 19466  004B22  3797               	rlcf	(GetNumber@temp+2)& (0+255),f,b
 19467  004B24  3798               	rlcf	(GetNumber@temp+3)& (0+255),f,b
 19468  004B26  2EE8               	decfsz	wreg,f,c
 19469  004B28  D7F9               	goto	u18325
 19470                           
 19471                           ; BSR set to: 0
 19472                           ;MISC.c: 559: tempThis = *This;
 19473  004B2A  C085  FFD9         	movff	GetNumber@This,fsr2l
 19474  004B2E  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19475  004B32  50DF               	movf	indf2,w,c
 19476  004B34  0100               	movlb	0	; () banked
 19477  004B36  6F94               	movwf	GetNumber@tempThis& (0+255),b
 19478                           
 19479                           ; BSR set to: 0
 19480                           ;MISC.c: 560: if(IsLetter(tempThis))
 19481  004B38  0100               	movlb	0	; () banked
 19482  004B3A  5194               	movf	GetNumber@tempThis& (0+255),w,b
 19483  004B3C  ECB0  F049         	call	_IsLetter
 19484  004B40  0900               	iorlw	0
 19485  004B42  B4D8               	btfsc	status,2,c
 19486  004B44  D029               	goto	l14843
 19487                           
 19488                           ;MISC.c: 561: {
 19489                           ;MISC.c: 562: lowercaseChar(&tempThis);
 19490  004B46  0E94               	movlw	low GetNumber@tempThis
 19491  004B48  0100               	movlb	0	; () banked
 19492  004B4A  6F79               	movwf	lowercaseChar@Input& (0+255),b
 19493  004B4C  0E00               	movlw	high GetNumber@tempThis
 19494  004B4E  0100               	movlb	0	; () banked
 19495  004B50  6F7A               	movwf	(lowercaseChar@Input+1)& (0+255),b
 19496  004B52  EC71  F049         	call	_lowercaseChar	;wreg free
 19497                           
 19498                           ;MISC.c: 563: temp += (tempThis - 87);
 19499  004B56  0EA9               	movlw	169
 19500  004B58  0100               	movlb	0	; () banked
 19501  004B5A  2594               	addwf	GetNumber@tempThis& (0+255),w,b
 19502  004B5C  0100               	movlb	0	; () banked
 19503  004B5E  6F8A               	movwf	??_GetNumber& (0+255),b
 19504  004B60  0100               	movlb	0	; () banked
 19505  004B62  6B8B               	clrf	(??_GetNumber+1)& (0+255),b
 19506  004B64  0EFF               	movlw	255
 19507  004B66  238B               	addwfc	(??_GetNumber+1)& (0+255),f,b
 19508  004B68  0100               	movlb	0	; () banked
 19509  004B6A  6B8C               	clrf	(??_GetNumber+2)& (0+255),b
 19510  004B6C  0100               	movlb	0	; () banked
 19511  004B6E  BF8B               	btfsc	(??_GetNumber+1)& (0+255),7,b
 19512  004B70  078C               	decf	(??_GetNumber+2)& (0+255),f,b
 19513  004B72  0100               	movlb	0	; () banked
 19514  004B74  518C               	movf	(??_GetNumber+2)& (0+255),w,b
 19515  004B76  0100               	movlb	0	; () banked
 19516  004B78  6F8D               	movwf	(??_GetNumber+3)& (0+255),b
 19517  004B7A  0100               	movlb	0	; () banked
 19518  004B7C  518A               	movf	??_GetNumber& (0+255),w,b
 19519  004B7E  0100               	movlb	0	; () banked
 19520  004B80  2795               	addwf	GetNumber@temp& (0+255),f,b
 19521  004B82  0100               	movlb	0	; () banked
 19522  004B84  518B               	movf	(??_GetNumber+1)& (0+255),w,b
 19523  004B86  0100               	movlb	0	; () banked
 19524  004B88  2396               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19525  004B8A  0100               	movlb	0	; () banked
 19526  004B8C  518C               	movf	(??_GetNumber+2)& (0+255),w,b
 19527  004B8E  0100               	movlb	0	; () banked
 19528  004B90  2397               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19529  004B92  0100               	movlb	0	; () banked
 19530  004B94  518D               	movf	(??_GetNumber+3)& (0+255),w,b
 19531  004B96  D027               	goto	L16
 19532  004B98                     l14843:
 19533                           
 19534                           ;MISC.c: 565: else
 19535                           ;MISC.c: 566: {
 19536                           ;MISC.c: 567: temp += (*This - 48);
 19537  004B98  C085  FFD9         	movff	GetNumber@This,fsr2l
 19538  004B9C  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19539  004BA0  50DF               	movf	indf2,w,c
 19540  004BA2  0100               	movlb	0	; () banked
 19541  004BA4  6F8A               	movwf	??_GetNumber& (0+255),b
 19542  004BA6  0ED0               	movlw	208
 19543  004BA8  0100               	movlb	0	; () banked
 19544  004BAA  258A               	addwf	??_GetNumber& (0+255),w,b
 19545  004BAC  0100               	movlb	0	; () banked
 19546  004BAE  6F8B               	movwf	(??_GetNumber+1)& (0+255),b
 19547  004BB0  0100               	movlb	0	; () banked
 19548  004BB2  6B8C               	clrf	(??_GetNumber+2)& (0+255),b
 19549  004BB4  0EFF               	movlw	255
 19550  004BB6  238C               	addwfc	(??_GetNumber+2)& (0+255),f,b
 19551  004BB8  0100               	movlb	0	; () banked
 19552  004BBA  6B8D               	clrf	(??_GetNumber+3)& (0+255),b
 19553  004BBC  0100               	movlb	0	; () banked
 19554  004BBE  BF8C               	btfsc	(??_GetNumber+2)& (0+255),7,b
 19555  004BC0  078D               	decf	(??_GetNumber+3)& (0+255),f,b
 19556  004BC2  0100               	movlb	0	; () banked
 19557  004BC4  518D               	movf	(??_GetNumber+3)& (0+255),w,b
 19558  004BC6  0100               	movlb	0	; () banked
 19559  004BC8  6F8E               	movwf	(??_GetNumber+4)& (0+255),b
 19560  004BCA  0100               	movlb	0	; () banked
 19561  004BCC  518B               	movf	(??_GetNumber+1)& (0+255),w,b
 19562  004BCE  0100               	movlb	0	; () banked
 19563  004BD0  2795               	addwf	GetNumber@temp& (0+255),f,b
 19564  004BD2  0100               	movlb	0	; () banked
 19565  004BD4  518C               	movf	(??_GetNumber+2)& (0+255),w,b
 19566  004BD6  0100               	movlb	0	; () banked
 19567  004BD8  2396               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19568  004BDA  0100               	movlb	0	; () banked
 19569  004BDC  518D               	movf	(??_GetNumber+3)& (0+255),w,b
 19570  004BDE  0100               	movlb	0	; () banked
 19571  004BE0  2397               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19572  004BE2  0100               	movlb	0	; () banked
 19573  004BE4  518E               	movf	(??_GetNumber+4)& (0+255),w,b
 19574  004BE6                     L16:
 19575  004BE6  0100               	movlb	0	; () banked
 19576  004BE8  2398               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 19577  004BEA  D000               	goto	l14845
 19578  004BEC                     l14845:
 19579                           
 19580                           ; BSR set to: 0
 19581                           ;MISC.c: 568: }
 19582                           ;MISC.c: 569: i++;
 19583  004BEC  0100               	movlb	0	; () banked
 19584  004BEE  2B93               	incf	GetNumber@i& (0+255),f,b
 19585  004BF0  D75F               	goto	l14815
 19586                           
 19587                           ; BSR set to: 0
 19588                           
 19589                           ; BSR set to: 0
 19590                           ;MISC.c: 571: {
 19591                           ;MISC.c: 572: return 4;
 19592                           
 19593                           ; BSR set to: 0
 19594                           ;MISC.c: 570: if(i>32)
 19595  004BF2  0012               	return	
 19596                           
 19597                           ; BSR set to: 0
 19598                           
 19599                           ; BSR set to: 0
 19600  004BF4  D000               	goto	l14853
 19601  004BF6                     l14853:
 19602                           
 19603                           ; BSR set to: 0
 19604                           ;MISC.c: 573: }
 19605                           ;MISC.c: 574: }
 19606                           ;MISC.c: 575: }
 19607                           ;MISC.c: 576: This++;
 19608  004BF6  0100               	movlb	0	; () banked
 19609  004BF8  4B85               	infsnz	GetNumber@This& (0+255),f,b
 19610  004BFA  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 19611  004BFC  D000               	goto	l14855
 19612  004BFE                     l14855:
 19613                           
 19614                           ; BSR set to: 0
 19615  004BFE  C085  FFD9         	movff	GetNumber@This,fsr2l
 19616  004C02  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19617  004C06  50DF               	movf	indf2,w,c
 19618  004C08  B4D8               	btfsc	status,2,c
 19619  004C0A  D01A               	goto	l14863
 19620                           
 19621                           ; BSR set to: 0
 19622  004C0C  C085  FFD9         	movff	GetNumber@This,fsr2l
 19623  004C10  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19624  004C14  0E20               	movlw	32
 19625  004C16  18DE               	xorwf	postinc2,w,c
 19626  004C18  B4D8               	btfsc	status,2,c
 19627  004C1A  D012               	goto	l14863
 19628                           
 19629                           ; BSR set to: 0
 19630  004C1C  C085  FFD9         	movff	GetNumber@This,fsr2l
 19631  004C20  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19632  004C24  0E2C               	movlw	44
 19633  004C26  18DE               	xorwf	postinc2,w,c
 19634  004C28  B4D8               	btfsc	status,2,c
 19635  004C2A  D00A               	goto	l14863
 19636                           
 19637                           ; BSR set to: 0
 19638  004C2C  C085  FFD9         	movff	GetNumber@This,fsr2l
 19639  004C30  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19640  004C34  0E3D               	movlw	61
 19641  004C36  18DE               	xorwf	postinc2,w,c
 19642  004C38  B4D8               	btfsc	status,2,c
 19643  004C3A  D002               	goto	l14863
 19644  004C3C  D6E0               	goto	l14803
 19645                           
 19646                           ; BSR set to: 0
 19647  004C3E  D000               	goto	l14863
 19648  004C40                     l14863:
 19649                           
 19650                           ; BSR set to: 0
 19651                           ;MISC.c: 577: }
 19652                           ;MISC.c: 578: if(negative)
 19653  004C40  0100               	movlb	0	; () banked
 19654  004C42  5190               	movf	GetNumber@negative& (0+255),w,b
 19655  004C44  0100               	movlb	0	; () banked
 19656  004C46  B4D8               	btfsc	status,2,c
 19657  004C48  D00A               	goto	l14867
 19658                           
 19659                           ; BSR set to: 0
 19660                           ;MISC.c: 579: {
 19661                           ;MISC.c: 580: temp = (temp * -1);
 19662  004C4A  0100               	movlb	0	; () banked
 19663  004C4C  1F98               	comf	(GetNumber@temp+3)& (0+255),f,b
 19664  004C4E  1F97               	comf	(GetNumber@temp+2)& (0+255),f,b
 19665  004C50  1F96               	comf	(GetNumber@temp+1)& (0+255),f,b
 19666  004C52  6D95               	negf	GetNumber@temp& (0+255),b
 19667  004C54  0E00               	movlw	0
 19668  004C56  2396               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19669  004C58  2397               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19670  004C5A  2398               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 19671  004C5C  D000               	goto	l14867
 19672  004C5E                     l14867:
 19673                           
 19674                           ; BSR set to: 0
 19675                           ;MISC.c: 581: }
 19676                           ;MISC.c: 582: *result = temp;
 19677  004C5E  C088  FFD9         	movff	GetNumber@result,fsr2l
 19678  004C62  C089  FFDA         	movff	GetNumber@result+1,fsr2h
 19679  004C66  C095  FFDE         	movff	GetNumber@temp,postinc2
 19680  004C6A  C096  FFDE         	movff	GetNumber@temp+1,postinc2
 19681  004C6E  C097  FFDE         	movff	GetNumber@temp+2,postinc2
 19682  004C72  C098  FFDE         	movff	GetNumber@temp+3,postinc2
 19683                           
 19684                           ; BSR set to: 0
 19685                           ;MISC.c: 583: return 0;
 19686  004C76  0E00               	movlw	0
 19687  004C78  0012               	return	
 19688                           
 19689                           ; BSR set to: 0
 19690                           
 19691                           ; BSR set to: 0
 19692  004C7A  0012               	return		;funcret
 19693  004C7C                     __end_of_GetNumber:
 19694                           	opt stack 0
 19695                           tblptru	equ	0xFF8
 19696                           tblptrh	equ	0xFF7
 19697                           tblptrl	equ	0xFF6
 19698                           tablat	equ	0xFF5
 19699                           prodh	equ	0xFF4
 19700                           prodl	equ	0xFF3
 19701                           intcon	equ	0xFF2
 19702                           indf0	equ	0xFEF
 19703                           postinc0	equ	0xFEE
 19704                           fsr0h	equ	0xFEA
 19705                           fsr0l	equ	0xFE9
 19706                           wreg	equ	0xFE8
 19707                           indf1	equ	0xFE7
 19708                           postdec1	equ	0xFE5
 19709                           fsr1h	equ	0xFE2
 19710                           fsr1l	equ	0xFE1
 19711                           indf2	equ	0xFDF
 19712                           postinc2	equ	0xFDE
 19713                           postdec2	equ	0xFDD
 19714                           fsr2h	equ	0xFDA
 19715                           fsr2l	equ	0xFD9
 19716                           status	equ	0xFD8
 19717                           
 19718 ;; *************** function _lowercaseChar *****************
 19719 ;; Defined at:
 19720 ;;		line 349 in file "MISC.c"
 19721 ;; Parameters:    Size  Location     Type
 19722 ;;  Input           2   25[BANK0 ] PTR unsigned char 
 19723 ;;		 -> GetNumber@tempThis(1), StringContainsCaseInsensitive@tempThat(1), StringContainsCaseInsensitive@tempThis(1), Str
      +ingMatchCaseInsensitive@tempThat(1), 
 19724 ;;		 -> StringMatchCaseInsensitive@tempThis(1), 
 19725 ;; Auto vars:     Size  Location     Type
 19726 ;;		None
 19727 ;; Return value:  Size  Location     Type
 19728 ;;		None               void
 19729 ;; Registers used:
 19730 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19731 ;; Tracked objects:
 19732 ;;		On entry : 0/0
 19733 ;;		On exit  : 0/0
 19734 ;;		Unchanged: 0/0
 19735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19736 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19738 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19739 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19740 ;;Total ram usage:        3 bytes
 19741 ;; Hardware stack levels used:    1
 19742 ;; Hardware stack levels required when called:    6
 19743 ;; This function calls:
 19744 ;;		Nothing
 19745 ;; This function is called by:
 19746 ;;		_StringMatchCaseInsensitive
 19747 ;;		_StringContainsCaseInsensitive
 19748 ;;		_GetNumber
 19749 ;; This function uses a non-reentrant model
 19750 ;;
 19751                           
 19752                           	psect	text31
 19753  0092E2                     __ptext31:
 19754                           	opt stack 0
 19755  0092E2                     _lowercaseChar:
 19756                           	opt stack 22
 19757                           
 19758                           ;MISC.c: 351: if((*Input >= 65) && (*Input <= 90 ))
 19759                           
 19760                           ; BSR set to: 0
 19761                           ;incstack = 0
 19762  0092E2  C079  FFD9         	movff	lowercaseChar@Input,fsr2l
 19763  0092E6  C07A  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 19764  0092EA  0E40               	movlw	64
 19765  0092EC  64DF               	cpfsgt	indf2,c
 19766  0092EE  0012               	return	
 19767  0092F0  C079  FFD9         	movff	lowercaseChar@Input,fsr2l
 19768  0092F4  C07A  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 19769  0092F8  0E5B               	movlw	91
 19770  0092FA  60DF               	cpfslt	indf2,c
 19771  0092FC  0012               	return	
 19772                           
 19773                           ;MISC.c: 352: {
 19774                           ;MISC.c: 353: *Input += 32;
 19775  0092FE  C079  FFD9         	movff	lowercaseChar@Input,fsr2l
 19776  009302  C07A  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 19777  009306  0E20               	movlw	32
 19778  009308  26DF               	addwf	indf2,f,c
 19779  00930A  0012               	return	
 19780  00930C  0012               	return		;funcret
 19781  00930E                     __end_of_lowercaseChar:
 19782                           	opt stack 0
 19783                           tblptru	equ	0xFF8
 19784                           tblptrh	equ	0xFF7
 19785                           tblptrl	equ	0xFF6
 19786                           tablat	equ	0xFF5
 19787                           prodh	equ	0xFF4
 19788                           prodl	equ	0xFF3
 19789                           intcon	equ	0xFF2
 19790                           indf0	equ	0xFEF
 19791                           postinc0	equ	0xFEE
 19792                           fsr0h	equ	0xFEA
 19793                           fsr0l	equ	0xFE9
 19794                           wreg	equ	0xFE8
 19795                           indf1	equ	0xFE7
 19796                           postdec1	equ	0xFE5
 19797                           fsr1h	equ	0xFE2
 19798                           fsr1l	equ	0xFE1
 19799                           indf2	equ	0xFDF
 19800                           postinc2	equ	0xFDE
 19801                           postdec2	equ	0xFDD
 19802                           fsr2h	equ	0xFDA
 19803                           fsr2l	equ	0xFD9
 19804                           status	equ	0xFD8
 19805                           
 19806 ;; *************** function ___lmul *****************
 19807 ;; Defined at:
 19808 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
 19809 ;; Parameters:    Size  Location     Type
 19810 ;;  multiplier      4   25[BANK0 ] unsigned long 
 19811 ;;  multiplicand    4   29[BANK0 ] unsigned long 
 19812 ;; Auto vars:     Size  Location     Type
 19813 ;;  product         4   33[BANK0 ] unsigned long 
 19814 ;; Return value:  Size  Location     Type
 19815 ;;                  4   25[BANK0 ] unsigned long 
 19816 ;; Registers used:
 19817 ;;		wreg, status,2, status,0
 19818 ;; Tracked objects:
 19819 ;;		On entry : 0/0
 19820 ;;		On exit  : 0/0
 19821 ;;		Unchanged: 0/0
 19822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19823 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19824 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19826 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19827 ;;Total ram usage:       12 bytes
 19828 ;; Hardware stack levels used:    1
 19829 ;; Hardware stack levels required when called:    6
 19830 ;; This function calls:
 19831 ;;		Nothing
 19832 ;; This function is called by:
 19833 ;;		_GetNumber
 19834 ;; This function uses a non-reentrant model
 19835 ;;
 19836                           
 19837                           	psect	text32
 19838  0089FE                     __ptext32:
 19839                           	opt stack 0
 19840  0089FE                     ___lmul:
 19841                           	opt stack 22
 19842                           
 19843                           ;incstack = 0
 19844  0089FE  0E00               	movlw	0
 19845  008A00  0100               	movlb	0	; () banked
 19846  008A02  6F81               	movwf	___lmul@product& (0+255),b
 19847  008A04  0E00               	movlw	0
 19848  008A06  6F82               	movwf	(___lmul@product+1)& (0+255),b
 19849  008A08  0E00               	movlw	0
 19850  008A0A  6F83               	movwf	(___lmul@product+2)& (0+255),b
 19851  008A0C  0E00               	movlw	0
 19852  008A0E  6F84               	movwf	(___lmul@product+3)& (0+255),b
 19853  008A10  D000               	goto	l14309
 19854  008A12                     l14309:
 19855                           
 19856                           ; BSR set to: 0
 19857  008A12  0100               	movlb	0	; () banked
 19858  008A14  A179               	btfss	___lmul@multiplier& (0+255),0,b
 19859  008A16  D011               	goto	l14313
 19860                           
 19861                           ; BSR set to: 0
 19862  008A18  0100               	movlb	0	; () banked
 19863  008A1A  517D               	movf	___lmul@multiplicand& (0+255),w,b
 19864  008A1C  0100               	movlb	0	; () banked
 19865  008A1E  2781               	addwf	___lmul@product& (0+255),f,b
 19866  008A20  0100               	movlb	0	; () banked
 19867  008A22  517E               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 19868  008A24  0100               	movlb	0	; () banked
 19869  008A26  2382               	addwfc	(___lmul@product+1)& (0+255),f,b
 19870  008A28  0100               	movlb	0	; () banked
 19871  008A2A  517F               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 19872  008A2C  0100               	movlb	0	; () banked
 19873  008A2E  2383               	addwfc	(___lmul@product+2)& (0+255),f,b
 19874  008A30  0100               	movlb	0	; () banked
 19875  008A32  5180               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 19876  008A34  0100               	movlb	0	; () banked
 19877  008A36  2384               	addwfc	(___lmul@product+3)& (0+255),f,b
 19878  008A38  D000               	goto	l14313
 19879  008A3A                     l14313:
 19880                           
 19881                           ; BSR set to: 0
 19882  008A3A  0100               	movlb	0	; () banked
 19883  008A3C  90D8               	bcf	status,0,c
 19884  008A3E  377D               	rlcf	___lmul@multiplicand& (0+255),f,b
 19885  008A40  377E               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 19886  008A42  377F               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 19887  008A44  3780               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 19888                           
 19889                           ; BSR set to: 0
 19890  008A46  0100               	movlb	0	; () banked
 19891  008A48  90D8               	bcf	status,0,c
 19892  008A4A  337C               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 19893  008A4C  337B               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 19894  008A4E  337A               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 19895  008A50  3379               	rrcf	___lmul@multiplier& (0+255),f,b
 19896  008A52  0100               	movlb	0	; () banked
 19897  008A54  5179               	movf	___lmul@multiplier& (0+255),w,b
 19898  008A56  0100               	movlb	0	; () banked
 19899  008A58  117A               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 19900  008A5A  0100               	movlb	0	; () banked
 19901  008A5C  117B               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 19902  008A5E  0100               	movlb	0	; () banked
 19903  008A60  117C               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 19904  008A62  A4D8               	btfss	status,2,c
 19905  008A64  D7D6               	goto	l14309
 19906                           
 19907                           ; BSR set to: 0
 19908  008A66  C081  F079         	movff	___lmul@product,?___lmul
 19909  008A6A  C082  F07A         	movff	___lmul@product+1,?___lmul+1
 19910  008A6E  C083  F07B         	movff	___lmul@product+2,?___lmul+2
 19911  008A72  C084  F07C         	movff	___lmul@product+3,?___lmul+3
 19912                           
 19913                           ; BSR set to: 0
 19914  008A76  0012               	return		;funcret
 19915  008A78                     __end_of___lmul:
 19916                           	opt stack 0
 19917                           tblptru	equ	0xFF8
 19918                           tblptrh	equ	0xFF7
 19919                           tblptrl	equ	0xFF6
 19920                           tablat	equ	0xFF5
 19921                           prodh	equ	0xFF4
 19922                           prodl	equ	0xFF3
 19923                           intcon	equ	0xFF2
 19924                           indf0	equ	0xFEF
 19925                           postinc0	equ	0xFEE
 19926                           fsr0h	equ	0xFEA
 19927                           fsr0l	equ	0xFE9
 19928                           wreg	equ	0xFE8
 19929                           indf1	equ	0xFE7
 19930                           postdec1	equ	0xFE5
 19931                           fsr1h	equ	0xFE2
 19932                           fsr1l	equ	0xFE1
 19933                           indf2	equ	0xFDF
 19934                           postinc2	equ	0xFDE
 19935                           postdec2	equ	0xFDD
 19936                           fsr2h	equ	0xFDA
 19937                           fsr2l	equ	0xFD9
 19938                           status	equ	0xFD8
 19939                           
 19940 ;; *************** function _IsLetter *****************
 19941 ;; Defined at:
 19942 ;;		line 99 in file "MISC.c"
 19943 ;; Parameters:    Size  Location     Type
 19944 ;;  data            1    wreg     unsigned char 
 19945 ;; Auto vars:     Size  Location     Type
 19946 ;;  data            1   25[BANK0 ] unsigned char 
 19947 ;; Return value:  Size  Location     Type
 19948 ;;                  1    wreg      unsigned char 
 19949 ;; Registers used:
 19950 ;;		wreg, status,2, status,0
 19951 ;; Tracked objects:
 19952 ;;		On entry : 0/0
 19953 ;;		On exit  : 0/0
 19954 ;;		Unchanged: 0/0
 19955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19957 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19959 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19960 ;;Total ram usage:        1 bytes
 19961 ;; Hardware stack levels used:    1
 19962 ;; Hardware stack levels required when called:    6
 19963 ;; This function calls:
 19964 ;;		Nothing
 19965 ;; This function is called by:
 19966 ;;		_GetNumber
 19967 ;; This function uses a non-reentrant model
 19968 ;;
 19969                           
 19970                           	psect	text33
 19971  009360                     __ptext33:
 19972                           	opt stack 0
 19973  009360                     _IsLetter:
 19974                           	opt stack 22
 19975                           
 19976                           ; BSR set to: 0
 19977                           ;incstack = 0
 19978                           ;IsLetter@data stored from wreg
 19979  009360  0100               	movlb	0	; () banked
 19980  009362  6F79               	movwf	IsLetter@data& (0+255),b
 19981                           
 19982                           ; BSR set to: 0
 19983                           ;MISC.c: 101: if(data >= 65 && data <= 90)
 19984  009364  0E40               	movlw	64
 19985  009366  0100               	movlb	0	; () banked
 19986  009368  6579               	cpfsgt	IsLetter@data& (0+255),b
 19987  00936A  D006               	goto	l13897
 19988                           
 19989                           ; BSR set to: 0
 19990  00936C  0E5B               	movlw	91
 19991  00936E  0100               	movlb	0	; () banked
 19992  009370  6179               	cpfslt	IsLetter@data& (0+255),b
 19993  009372  D002               	goto	l13897
 19994                           
 19995                           ; BSR set to: 0
 19996                           ;MISC.c: 102: {
 19997                           ;MISC.c: 103: return 1;
 19998  009374  0E01               	movlw	1
 19999                           
 20000                           ; BSR set to: 0
 20001  009376  0012               	return	
 20002  009378                     l13897:
 20003                           
 20004                           ; BSR set to: 0
 20005                           ;MISC.c: 104: }
 20006                           ;MISC.c: 105: return 0;
 20007  009378  0E00               	movlw	0
 20008  00937A  0012               	return	
 20009                           
 20010                           ; BSR set to: 0
 20011                           
 20012                           ; BSR set to: 0
 20013  00937C  0012               	return		;funcret
 20014  00937E                     __end_of_IsLetter:
 20015                           	opt stack 0
 20016                           tblptru	equ	0xFF8
 20017                           tblptrh	equ	0xFF7
 20018                           tblptrl	equ	0xFF6
 20019                           tablat	equ	0xFF5
 20020                           prodh	equ	0xFF4
 20021                           prodl	equ	0xFF3
 20022                           intcon	equ	0xFF2
 20023                           indf0	equ	0xFEF
 20024                           postinc0	equ	0xFEE
 20025                           fsr0h	equ	0xFEA
 20026                           fsr0l	equ	0xFE9
 20027                           wreg	equ	0xFE8
 20028                           indf1	equ	0xFE7
 20029                           postdec1	equ	0xFE5
 20030                           fsr1h	equ	0xFE2
 20031                           fsr1l	equ	0xFE1
 20032                           indf2	equ	0xFDF
 20033                           postinc2	equ	0xFDE
 20034                           postdec2	equ	0xFDD
 20035                           fsr2h	equ	0xFDA
 20036                           fsr2l	equ	0xFD9
 20037                           status	equ	0xFD8
 20038                           
 20039 ;; *************** function _EncodeNEC *****************
 20040 ;; Defined at:
 20041 ;;		line 530 in file "IR.c"
 20042 ;; Parameters:    Size  Location     Type
 20043 ;;  address         1    wreg     unsigned char 
 20044 ;;  command         1   29[BANK0 ] unsigned char 
 20045 ;; Auto vars:     Size  Location     Type
 20046 ;;  address         1   69[BANK0 ] unsigned char 
 20047 ;;  temp4           4   65[BANK0 ] unsigned long 
 20048 ;;  temp3           4   61[BANK0 ] unsigned long 
 20049 ;;  temp2           4   57[BANK0 ] unsigned long 
 20050 ;;  temp1           4   53[BANK0 ] unsigned long 
 20051 ;; Return value:  Size  Location     Type
 20052 ;;                  4   29[BANK0 ] unsigned long 
 20053 ;; Registers used:
 20054 ;;		wreg, status,2, status,0, cstack
 20055 ;; Tracked objects:
 20056 ;;		On entry : 0/0
 20057 ;;		On exit  : 0/0
 20058 ;;		Unchanged: 0/0
 20059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20060 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20061 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20062 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20063 ;;      Totals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20064 ;;Total ram usage:       41 bytes
 20065 ;; Hardware stack levels used:    1
 20066 ;; Hardware stack levels required when called:    7
 20067 ;; This function calls:
 20068 ;;		_Reverse_Byte
 20069 ;; This function is called by:
 20070 ;;		_UseBluetooth
 20071 ;; This function uses a non-reentrant model
 20072 ;;
 20073                           
 20074                           	psect	text34
 20075  00725C                     __ptext34:
 20076                           	opt stack 0
 20077  00725C                     _EncodeNEC:
 20078                           	opt stack 22
 20079                           
 20080                           ; BSR set to: 0
 20081                           ;incstack = 0
 20082                           ;EncodeNEC@address stored from wreg
 20083  00725C  0100               	movlb	0	; () banked
 20084  00725E  6FA5               	movwf	EncodeNEC@address& (0+255),b
 20085                           
 20086                           ; BSR set to: 0
 20087                           ;IR.c: 532: unsigned long temp1,
 20088                           ;IR.c: 533: temp2,
 20089                           ;IR.c: 534: temp3,
 20090                           ;IR.c: 535: temp4;
 20091                           ;IR.c: 543: temp1 = (unsigned long) Reverse_Byte(address);
 20092  007260  0100               	movlb	0	; () banked
 20093  007262  51A5               	movf	EncodeNEC@address& (0+255),w,b
 20094  007264  EC7C  F040         	call	_Reverse_Byte
 20095  007268  0100               	movlb	0	; () banked
 20096  00726A  6F81               	movwf	??_EncodeNEC& (0+255),b
 20097  00726C  0100               	movlb	0	; () banked
 20098  00726E  5181               	movf	??_EncodeNEC& (0+255),w,b
 20099  007270  0100               	movlb	0	; () banked
 20100  007272  6F95               	movwf	EncodeNEC@temp1& (0+255),b
 20101  007274  6B96               	clrf	(EncodeNEC@temp1+1)& (0+255),b
 20102  007276  6B97               	clrf	(EncodeNEC@temp1+2)& (0+255),b
 20103  007278  6B98               	clrf	(EncodeNEC@temp1+3)& (0+255),b
 20104                           
 20105                           ;IR.c: 544: temp2 = (unsigned long) Reverse_Byte(~address);
 20106  00727A  0100               	movlb	0	; () banked
 20107  00727C  51A5               	movf	EncodeNEC@address& (0+255),w,b
 20108  00727E  0AFF               	xorlw	255
 20109  007280  EC7C  F040         	call	_Reverse_Byte
 20110  007284  0100               	movlb	0	; () banked
 20111  007286  6F81               	movwf	??_EncodeNEC& (0+255),b
 20112  007288  0100               	movlb	0	; () banked
 20113  00728A  5181               	movf	??_EncodeNEC& (0+255),w,b
 20114  00728C  0100               	movlb	0	; () banked
 20115  00728E  6F99               	movwf	EncodeNEC@temp2& (0+255),b
 20116  007290  6B9A               	clrf	(EncodeNEC@temp2+1)& (0+255),b
 20117  007292  6B9B               	clrf	(EncodeNEC@temp2+2)& (0+255),b
 20118  007294  6B9C               	clrf	(EncodeNEC@temp2+3)& (0+255),b
 20119                           
 20120                           ;IR.c: 545: temp3 = (unsigned long) Reverse_Byte(command);
 20121  007296  0100               	movlb	0	; () banked
 20122  007298  517D               	movf	EncodeNEC@command& (0+255),w,b
 20123  00729A  EC7C  F040         	call	_Reverse_Byte
 20124  00729E  0100               	movlb	0	; () banked
 20125  0072A0  6F81               	movwf	??_EncodeNEC& (0+255),b
 20126  0072A2  0100               	movlb	0	; () banked
 20127  0072A4  5181               	movf	??_EncodeNEC& (0+255),w,b
 20128  0072A6  0100               	movlb	0	; () banked
 20129  0072A8  6F9D               	movwf	EncodeNEC@temp3& (0+255),b
 20130  0072AA  6B9E               	clrf	(EncodeNEC@temp3+1)& (0+255),b
 20131  0072AC  6B9F               	clrf	(EncodeNEC@temp3+2)& (0+255),b
 20132  0072AE  6BA0               	clrf	(EncodeNEC@temp3+3)& (0+255),b
 20133                           
 20134                           ;IR.c: 546: temp4 = (unsigned long) Reverse_Byte(~command);
 20135  0072B0  0100               	movlb	0	; () banked
 20136  0072B2  517D               	movf	EncodeNEC@command& (0+255),w,b
 20137  0072B4  0AFF               	xorlw	255
 20138  0072B6  EC7C  F040         	call	_Reverse_Byte
 20139  0072BA  0100               	movlb	0	; () banked
 20140  0072BC  6F81               	movwf	??_EncodeNEC& (0+255),b
 20141  0072BE  0100               	movlb	0	; () banked
 20142  0072C0  5181               	movf	??_EncodeNEC& (0+255),w,b
 20143  0072C2  0100               	movlb	0	; () banked
 20144  0072C4  6FA1               	movwf	EncodeNEC@temp4& (0+255),b
 20145  0072C6  6BA2               	clrf	(EncodeNEC@temp4+1)& (0+255),b
 20146  0072C8  6BA3               	clrf	(EncodeNEC@temp4+2)& (0+255),b
 20147  0072CA  6BA4               	clrf	(EncodeNEC@temp4+3)& (0+255),b
 20148                           
 20149                           ; BSR set to: 0
 20150                           ;IR.c: 548: return ((temp1 << 24) + (temp2 << 16) + (temp3 << 8) + temp4);
 20151  0072CC  C09D  F082         	movff	EncodeNEC@temp3,??_EncodeNEC+1
 20152  0072D0  C09E  F083         	movff	EncodeNEC@temp3+1,??_EncodeNEC+2
 20153  0072D4  C09F  F084         	movff	EncodeNEC@temp3+2,??_EncodeNEC+3
 20154  0072D8  0100               	movlb	0	; () banked
 20155  0072DA  6B81               	clrf	??_EncodeNEC& (0+255),b
 20156  0072DC  C099  F085         	movff	EncodeNEC@temp2,??_EncodeNEC+4
 20157  0072E0  C09A  F086         	movff	EncodeNEC@temp2+1,??_EncodeNEC+5
 20158  0072E4  C09B  F087         	movff	EncodeNEC@temp2+2,??_EncodeNEC+6
 20159  0072E8  C09C  F088         	movff	EncodeNEC@temp2+3,??_EncodeNEC+7
 20160  0072EC  C086  F088         	movff	??_EncodeNEC+5,??_EncodeNEC+7
 20161  0072F0  C085  F087         	movff	??_EncodeNEC+4,??_EncodeNEC+6
 20162  0072F4  0100               	movlb	0	; () banked
 20163  0072F6  6B86               	clrf	(??_EncodeNEC+5)& (0+255),b
 20164  0072F8  6B85               	clrf	(??_EncodeNEC+4)& (0+255),b
 20165  0072FA  C095  F089         	movff	EncodeNEC@temp1,??_EncodeNEC+8
 20166  0072FE  C096  F08A         	movff	EncodeNEC@temp1+1,??_EncodeNEC+9
 20167  007302  C097  F08B         	movff	EncodeNEC@temp1+2,??_EncodeNEC+10
 20168  007306  C098  F08C         	movff	EncodeNEC@temp1+3,??_EncodeNEC+11
 20169  00730A  C089  F08C         	movff	??_EncodeNEC+8,??_EncodeNEC+11
 20170  00730E  0100               	movlb	0	; () banked
 20171  007310  6B8B               	clrf	(??_EncodeNEC+10)& (0+255),b
 20172  007312  6B8A               	clrf	(??_EncodeNEC+9)& (0+255),b
 20173  007314  6B89               	clrf	(??_EncodeNEC+8)& (0+255),b
 20174  007316  0100               	movlb	0	; () banked
 20175  007318  5185               	movf	(??_EncodeNEC+4)& (0+255),w,b
 20176  00731A  0100               	movlb	0	; () banked
 20177  00731C  2589               	addwf	(??_EncodeNEC+8)& (0+255),w,b
 20178  00731E  0100               	movlb	0	; () banked
 20179  007320  6F8D               	movwf	(??_EncodeNEC+12)& (0+255),b
 20180  007322  0100               	movlb	0	; () banked
 20181  007324  5186               	movf	(??_EncodeNEC+5)& (0+255),w,b
 20182  007326  0100               	movlb	0	; () banked
 20183  007328  218A               	addwfc	(??_EncodeNEC+9)& (0+255),w,b
 20184  00732A  0100               	movlb	0	; () banked
 20185  00732C  6F8E               	movwf	(??_EncodeNEC+13)& (0+255),b
 20186  00732E  0100               	movlb	0	; () banked
 20187  007330  5187               	movf	(??_EncodeNEC+6)& (0+255),w,b
 20188  007332  0100               	movlb	0	; () banked
 20189  007334  218B               	addwfc	(??_EncodeNEC+10)& (0+255),w,b
 20190  007336  0100               	movlb	0	; () banked
 20191  007338  6F8F               	movwf	(??_EncodeNEC+14)& (0+255),b
 20192  00733A  0100               	movlb	0	; () banked
 20193  00733C  5188               	movf	(??_EncodeNEC+7)& (0+255),w,b
 20194  00733E  0100               	movlb	0	; () banked
 20195  007340  218C               	addwfc	(??_EncodeNEC+11)& (0+255),w,b
 20196  007342  0100               	movlb	0	; () banked
 20197  007344  6F90               	movwf	(??_EncodeNEC+15)& (0+255),b
 20198  007346  0100               	movlb	0	; () banked
 20199  007348  5181               	movf	??_EncodeNEC& (0+255),w,b
 20200  00734A  0100               	movlb	0	; () banked
 20201  00734C  258D               	addwf	(??_EncodeNEC+12)& (0+255),w,b
 20202  00734E  0100               	movlb	0	; () banked
 20203  007350  6F91               	movwf	(??_EncodeNEC+16)& (0+255),b
 20204  007352  0100               	movlb	0	; () banked
 20205  007354  5182               	movf	(??_EncodeNEC+1)& (0+255),w,b
 20206  007356  0100               	movlb	0	; () banked
 20207  007358  218E               	addwfc	(??_EncodeNEC+13)& (0+255),w,b
 20208  00735A  0100               	movlb	0	; () banked
 20209  00735C  6F92               	movwf	(??_EncodeNEC+17)& (0+255),b
 20210  00735E  0100               	movlb	0	; () banked
 20211  007360  5183               	movf	(??_EncodeNEC+2)& (0+255),w,b
 20212  007362  0100               	movlb	0	; () banked
 20213  007364  218F               	addwfc	(??_EncodeNEC+14)& (0+255),w,b
 20214  007366  0100               	movlb	0	; () banked
 20215  007368  6F93               	movwf	(??_EncodeNEC+18)& (0+255),b
 20216  00736A  0100               	movlb	0	; () banked
 20217  00736C  5184               	movf	(??_EncodeNEC+3)& (0+255),w,b
 20218  00736E  0100               	movlb	0	; () banked
 20219  007370  2190               	addwfc	(??_EncodeNEC+15)& (0+255),w,b
 20220  007372  0100               	movlb	0	; () banked
 20221  007374  6F94               	movwf	(??_EncodeNEC+19)& (0+255),b
 20222  007376  0100               	movlb	0	; () banked
 20223  007378  51A1               	movf	EncodeNEC@temp4& (0+255),w,b
 20224  00737A  0100               	movlb	0	; () banked
 20225  00737C  2591               	addwf	(??_EncodeNEC+16)& (0+255),w,b
 20226  00737E  0100               	movlb	0	; () banked
 20227  007380  6F7D               	movwf	?_EncodeNEC& (0+255),b
 20228  007382  0100               	movlb	0	; () banked
 20229  007384  51A2               	movf	(EncodeNEC@temp4+1)& (0+255),w,b
 20230  007386  0100               	movlb	0	; () banked
 20231  007388  2192               	addwfc	(??_EncodeNEC+17)& (0+255),w,b
 20232  00738A  0100               	movlb	0	; () banked
 20233  00738C  6F7E               	movwf	(?_EncodeNEC+1)& (0+255),b
 20234  00738E  0100               	movlb	0	; () banked
 20235  007390  51A3               	movf	(EncodeNEC@temp4+2)& (0+255),w,b
 20236  007392  0100               	movlb	0	; () banked
 20237  007394  2193               	addwfc	(??_EncodeNEC+18)& (0+255),w,b
 20238  007396  0100               	movlb	0	; () banked
 20239  007398  6F7F               	movwf	(?_EncodeNEC+2)& (0+255),b
 20240  00739A  0100               	movlb	0	; () banked
 20241  00739C  51A4               	movf	(EncodeNEC@temp4+3)& (0+255),w,b
 20242  00739E  0100               	movlb	0	; () banked
 20243  0073A0  2194               	addwfc	(??_EncodeNEC+19)& (0+255),w,b
 20244  0073A2  0100               	movlb	0	; () banked
 20245  0073A4  6F80               	movwf	(?_EncodeNEC+3)& (0+255),b
 20246  0073A6  0012               	return	
 20247                           
 20248                           ; BSR set to: 0
 20249                           
 20250                           ; BSR set to: 0
 20251  0073A8  0012               	return		;funcret
 20252  0073AA                     __end_of_EncodeNEC:
 20253                           	opt stack 0
 20254                           tblptru	equ	0xFF8
 20255                           tblptrh	equ	0xFF7
 20256                           tblptrl	equ	0xFF6
 20257                           tablat	equ	0xFF5
 20258                           prodh	equ	0xFF4
 20259                           prodl	equ	0xFF3
 20260                           intcon	equ	0xFF2
 20261                           indf0	equ	0xFEF
 20262                           postinc0	equ	0xFEE
 20263                           fsr0h	equ	0xFEA
 20264                           fsr0l	equ	0xFE9
 20265                           wreg	equ	0xFE8
 20266                           indf1	equ	0xFE7
 20267                           postdec1	equ	0xFE5
 20268                           fsr1h	equ	0xFE2
 20269                           fsr1l	equ	0xFE1
 20270                           indf2	equ	0xFDF
 20271                           postinc2	equ	0xFDE
 20272                           postdec2	equ	0xFDD
 20273                           fsr2h	equ	0xFDA
 20274                           fsr2l	equ	0xFD9
 20275                           status	equ	0xFD8
 20276                           
 20277 ;; *************** function _DecodeNEC *****************
 20278 ;; Defined at:
 20279 ;;		line 556 in file "IR.c"
 20280 ;; Parameters:    Size  Location     Type
 20281 ;;  Nec             4   29[BANK0 ] unsigned long 
 20282 ;;  address         2   33[BANK0 ] PTR unsigned char 
 20283 ;;		 -> UseBluetooth@NecAddress(1), IRaddress(1), 
 20284 ;;  command         2   35[BANK0 ] PTR unsigned char 
 20285 ;;		 -> UseBluetooth@NecCommand(1), IRcommand(1), 
 20286 ;; Auto vars:     Size  Location     Type
 20287 ;;  temp1           1   43[BANK0 ] unsigned char 
 20288 ;;  temp3           1   42[BANK0 ] unsigned char 
 20289 ;;  temp2           1   41[BANK0 ] unsigned char 
 20290 ;; Return value:  Size  Location     Type
 20291 ;;                  1    wreg      unsigned char 
 20292 ;; Registers used:
 20293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20294 ;; Tracked objects:
 20295 ;;		On entry : 0/0
 20296 ;;		On exit  : 0/0
 20297 ;;		Unchanged: 0/0
 20298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20299 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20300 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20301 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20302 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20303 ;;Total ram usage:       15 bytes
 20304 ;; Hardware stack levels used:    1
 20305 ;; Hardware stack levels required when called:    7
 20306 ;; This function calls:
 20307 ;;		_Reverse_Byte
 20308 ;; This function is called by:
 20309 ;;		_UseIRCode
 20310 ;;		_UseBluetooth
 20311 ;; This function uses a non-reentrant model
 20312 ;;
 20313                           
 20314                           	psect	text35
 20315  008314                     __ptext35:
 20316                           	opt stack 0
 20317  008314                     _DecodeNEC:
 20318                           	opt stack 22
 20319                           
 20320                           ;IR.c: 558: unsigned char temp1,
 20321                           ;IR.c: 559: temp2,
 20322                           ;IR.c: 560: temp3;
 20323                           ;IR.c: 562: temp1 = ~Reverse_Byte((unsigned char) (Nec & 0x00FF));
 20324                           
 20325                           ; BSR set to: 0
 20326                           ;incstack = 0
 20327  008314  0100               	movlb	0	; () banked
 20328  008316  517D               	movf	DecodeNEC@Nec& (0+255),w,b
 20329  008318  EC7C  F040         	call	_Reverse_Byte
 20330  00831C  0AFF               	xorlw	255
 20331  00831E  0100               	movlb	0	; () banked
 20332  008320  6F8B               	movwf	DecodeNEC@temp1& (0+255),b
 20333                           
 20334                           ;IR.c: 563: temp2 = Reverse_Byte((unsigned char) ((Nec & 0xFF00)>> 8));
 20335  008322  0100               	movlb	0	; () banked
 20336  008324  517E               	movf	(DecodeNEC@Nec+1)& (0+255),w,b
 20337  008326  EC7C  F040         	call	_Reverse_Byte
 20338  00832A  0100               	movlb	0	; () banked
 20339  00832C  6F89               	movwf	DecodeNEC@temp2& (0+255),b
 20340                           
 20341                           ; BSR set to: 0
 20342                           ;IR.c: 564: if(temp1 != temp2)
 20343  00832E  0100               	movlb	0	; () banked
 20344  008330  5189               	movf	DecodeNEC@temp2& (0+255),w,b
 20345  008332  0100               	movlb	0	; () banked
 20346  008334  198B               	xorwf	DecodeNEC@temp1& (0+255),w,b
 20347  008336  B4D8               	btfsc	status,2,c
 20348  008338  D002               	goto	l15051
 20349                           
 20350                           ; BSR set to: 0
 20351                           ;IR.c: 565: {
 20352                           ;IR.c: 567: return 0;
 20353  00833A  0E00               	movlw	0
 20354                           
 20355                           ; BSR set to: 0
 20356  00833C  0012               	return	
 20357  00833E                     l15051:
 20358                           
 20359                           ; BSR set to: 0
 20360                           ;IR.c: 568: }
 20361                           ;IR.c: 569: temp1 = ~Reverse_Byte((unsigned char) ((Nec & 0x00FF0000) >> 16));
 20362  00833E  0100               	movlb	0	; () banked
 20363  008340  517F               	movf	(DecodeNEC@Nec+2)& (0+255),w,b
 20364  008342  EC7C  F040         	call	_Reverse_Byte
 20365  008346  0AFF               	xorlw	255
 20366  008348  0100               	movlb	0	; () banked
 20367  00834A  6F8B               	movwf	DecodeNEC@temp1& (0+255),b
 20368                           
 20369                           ;IR.c: 570: temp3 = Reverse_Byte((unsigned char) ((Nec & 0xFF000000) >> 24));
 20370  00834C  0E00               	movlw	0
 20371  00834E  0100               	movlb	0	; () banked
 20372  008350  157D               	andwf	DecodeNEC@Nec& (0+255),w,b
 20373  008352  0100               	movlb	0	; () banked
 20374  008354  6F85               	movwf	??_DecodeNEC& (0+255),b
 20375  008356  0E00               	movlw	0
 20376  008358  0100               	movlb	0	; () banked
 20377  00835A  157E               	andwf	(DecodeNEC@Nec+1)& (0+255),w,b
 20378  00835C  0100               	movlb	0	; () banked
 20379  00835E  6F86               	movwf	(??_DecodeNEC+1)& (0+255),b
 20380  008360  0E00               	movlw	0
 20381  008362  0100               	movlb	0	; () banked
 20382  008364  157F               	andwf	(DecodeNEC@Nec+2)& (0+255),w,b
 20383  008366  0100               	movlb	0	; () banked
 20384  008368  6F87               	movwf	(??_DecodeNEC+2)& (0+255),b
 20385  00836A  0EFF               	movlw	255
 20386  00836C  0100               	movlb	0	; () banked
 20387  00836E  1580               	andwf	(DecodeNEC@Nec+3)& (0+255),w,b
 20388  008370  0100               	movlb	0	; () banked
 20389  008372  6F88               	movwf	(??_DecodeNEC+3)& (0+255),b
 20390  008374  0E19               	movlw	25
 20391  008376  D006               	goto	u18720
 20392  008378                     u18725:
 20393  008378  0100               	movlb	0	; () banked
 20394  00837A  90D8               	bcf	status,0,c
 20395  00837C  3388               	rrcf	(??_DecodeNEC+3)& (0+255),f,b
 20396  00837E  3387               	rrcf	(??_DecodeNEC+2)& (0+255),f,b
 20397  008380  3386               	rrcf	(??_DecodeNEC+1)& (0+255),f,b
 20398  008382  3385               	rrcf	??_DecodeNEC& (0+255),f,b
 20399  008384                     u18720:
 20400  008384  2EE8               	decfsz	wreg,f,c
 20401  008386  D7F8               	goto	u18725
 20402  008388  0100               	movlb	0	; () banked
 20403  00838A  5185               	movf	??_DecodeNEC& (0+255),w,b
 20404  00838C  EC7C  F040         	call	_Reverse_Byte
 20405  008390  0100               	movlb	0	; () banked
 20406  008392  6F8A               	movwf	DecodeNEC@temp3& (0+255),b
 20407                           
 20408                           ; BSR set to: 0
 20409                           ;IR.c: 571: if(temp1 != temp3)
 20410  008394  0100               	movlb	0	; () banked
 20411  008396  518A               	movf	DecodeNEC@temp3& (0+255),w,b
 20412  008398  0100               	movlb	0	; () banked
 20413  00839A  198B               	xorwf	DecodeNEC@temp1& (0+255),w,b
 20414  00839C  B4D8               	btfsc	status,2,c
 20415  00839E  D002               	goto	l15059
 20416                           
 20417                           ; BSR set to: 0
 20418                           ;IR.c: 572: {
 20419                           ;IR.c: 574: return 0;
 20420  0083A0  0E00               	movlw	0
 20421                           
 20422                           ; BSR set to: 0
 20423  0083A2  0012               	return	
 20424  0083A4                     l15059:
 20425                           
 20426                           ; BSR set to: 0
 20427                           ;IR.c: 575: }
 20428                           ;IR.c: 576: *command = temp2;
 20429  0083A4  C083  FFD9         	movff	DecodeNEC@command,fsr2l
 20430  0083A8  C084  FFDA         	movff	DecodeNEC@command+1,fsr2h
 20431  0083AC  C089  FFDF         	movff	DecodeNEC@temp2,indf2
 20432                           
 20433                           ;IR.c: 577: *address = temp3;
 20434  0083B0  C081  FFD9         	movff	DecodeNEC@address,fsr2l
 20435  0083B4  C082  FFDA         	movff	DecodeNEC@address+1,fsr2h
 20436  0083B8  C08A  FFDF         	movff	DecodeNEC@temp3,indf2
 20437                           
 20438                           ; BSR set to: 0
 20439                           ;IR.c: 578: return 1;
 20440  0083BC  0E01               	movlw	1
 20441  0083BE  0012               	return	
 20442                           
 20443                           ; BSR set to: 0
 20444                           
 20445                           ; BSR set to: 0
 20446  0083C0  0012               	return		;funcret
 20447  0083C2                     __end_of_DecodeNEC:
 20448                           	opt stack 0
 20449                           tblptru	equ	0xFF8
 20450                           tblptrh	equ	0xFF7
 20451                           tblptrl	equ	0xFF6
 20452                           tablat	equ	0xFF5
 20453                           prodh	equ	0xFF4
 20454                           prodl	equ	0xFF3
 20455                           intcon	equ	0xFF2
 20456                           indf0	equ	0xFEF
 20457                           postinc0	equ	0xFEE
 20458                           fsr0h	equ	0xFEA
 20459                           fsr0l	equ	0xFE9
 20460                           wreg	equ	0xFE8
 20461                           indf1	equ	0xFE7
 20462                           postdec1	equ	0xFE5
 20463                           fsr1h	equ	0xFE2
 20464                           fsr1l	equ	0xFE1
 20465                           indf2	equ	0xFDF
 20466                           postinc2	equ	0xFDE
 20467                           postdec2	equ	0xFDD
 20468                           fsr2h	equ	0xFDA
 20469                           fsr2l	equ	0xFD9
 20470                           status	equ	0xFD8
 20471                           
 20472 ;; *************** function _Reverse_Byte *****************
 20473 ;; Defined at:
 20474 ;;		line 362 in file "MISC.c"
 20475 ;; Parameters:    Size  Location     Type
 20476 ;;  This            1    wreg     unsigned char 
 20477 ;; Auto vars:     Size  Location     Type
 20478 ;;  This            1   28[BANK0 ] unsigned char 
 20479 ;;  temp            1   27[BANK0 ] unsigned char 
 20480 ;; Return value:  Size  Location     Type
 20481 ;;                  1    wreg      unsigned char 
 20482 ;; Registers used:
 20483 ;;		wreg, status,2, status,0
 20484 ;; Tracked objects:
 20485 ;;		On entry : 0/0
 20486 ;;		On exit  : 0/0
 20487 ;;		Unchanged: 0/0
 20488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20490 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20491 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20492 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20493 ;;Total ram usage:        4 bytes
 20494 ;; Hardware stack levels used:    1
 20495 ;; Hardware stack levels required when called:    6
 20496 ;; This function calls:
 20497 ;;		Nothing
 20498 ;; This function is called by:
 20499 ;;		_EncodeNEC
 20500 ;;		_DecodeNEC
 20501 ;; This function uses a non-reentrant model
 20502 ;;
 20503                           
 20504                           	psect	text36
 20505  0080F8                     __ptext36:
 20506                           	opt stack 0
 20507  0080F8                     _Reverse_Byte:
 20508                           	opt stack 22
 20509                           
 20510                           ; BSR set to: 0
 20511                           ;incstack = 0
 20512                           ;Reverse_Byte@This stored from wreg
 20513  0080F8  0100               	movlb	0	; () banked
 20514  0080FA  6F7C               	movwf	Reverse_Byte@This& (0+255),b
 20515                           
 20516                           ; BSR set to: 0
 20517                           ;MISC.c: 364: unsigned char temp=0;
 20518  0080FC  0E00               	movlw	0
 20519  0080FE  0100               	movlb	0	; () banked
 20520  008100  6F7B               	movwf	Reverse_Byte@temp& (0+255),b
 20521                           
 20522                           ; BSR set to: 0
 20523                           ;MISC.c: 366: temp += (This & 0x01) << 7;
 20524  008102  C07C  F079         	movff	Reverse_Byte@This,??_Reverse_Byte
 20525  008106  0E01               	movlw	1
 20526  008108  0100               	movlb	0	; () banked
 20527  00810A  1779               	andwf	??_Reverse_Byte& (0+255),f,b
 20528  00810C  0E00               	movlw	0
 20529  00810E  B179               	btfsc	??_Reverse_Byte& (0+255),0,b
 20530  008110  0E80               	movlw	128
 20531  008112  6F79               	movwf	??_Reverse_Byte& (0+255),b
 20532  008114  0100               	movlb	0	; () banked
 20533  008116  5179               	movf	??_Reverse_Byte& (0+255),w,b
 20534  008118  0100               	movlb	0	; () banked
 20535  00811A  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20536                           
 20537                           ; BSR set to: 0
 20538                           ;MISC.c: 367: temp += (This & 0x02) << 5;
 20539  00811C  C07C  F079         	movff	Reverse_Byte@This,??_Reverse_Byte
 20540  008120  0E02               	movlw	2
 20541  008122  0100               	movlb	0	; () banked
 20542  008124  1779               	andwf	??_Reverse_Byte& (0+255),f,b
 20543  008126  0E05               	movlw	5
 20544  008128  0100               	movlb	0	; () banked
 20545  00812A  6F7A               	movwf	(??_Reverse_Byte+1)& (0+255),b
 20546  00812C                     u17015:
 20547  00812C  0100               	movlb	0	; () banked
 20548  00812E  90D8               	bcf	status,0,c
 20549  008130  3779               	rlcf	??_Reverse_Byte& (0+255),f,b
 20550  008132  0100               	movlb	0	; () banked
 20551  008134  2F7A               	decfsz	(??_Reverse_Byte+1)& (0+255),f,b
 20552  008136  D7FA               	goto	u17015
 20553  008138  0100               	movlb	0	; () banked
 20554  00813A  5179               	movf	??_Reverse_Byte& (0+255),w,b
 20555  00813C  0100               	movlb	0	; () banked
 20556  00813E  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20557                           
 20558                           ; BSR set to: 0
 20559                           ;MISC.c: 368: temp += (This & 0x04) << 3;
 20560  008140  C07C  F079         	movff	Reverse_Byte@This,??_Reverse_Byte
 20561  008144  0E04               	movlw	4
 20562  008146  0100               	movlb	0	; () banked
 20563  008148  1779               	andwf	??_Reverse_Byte& (0+255),f,b
 20564  00814A  0100               	movlb	0	; () banked
 20565  00814C  90D8               	bcf	status,0,c
 20566  00814E  3779               	rlcf	??_Reverse_Byte& (0+255),f,b
 20567  008150  0100               	movlb	0	; () banked
 20568  008152  90D8               	bcf	status,0,c
 20569  008154  3779               	rlcf	??_Reverse_Byte& (0+255),f,b
 20570  008156  0100               	movlb	0	; () banked
 20571  008158  90D8               	bcf	status,0,c
 20572  00815A  3579               	rlcf	??_Reverse_Byte& (0+255),w,b
 20573  00815C  0100               	movlb	0	; () banked
 20574  00815E  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20575                           
 20576                           ; BSR set to: 0
 20577                           ;MISC.c: 369: temp += (This & 0x08) << 1;
 20578  008160  C07C  F079         	movff	Reverse_Byte@This,??_Reverse_Byte
 20579  008164  0E08               	movlw	8
 20580  008166  0100               	movlb	0	; () banked
 20581  008168  1779               	andwf	??_Reverse_Byte& (0+255),f,b
 20582  00816A  0100               	movlb	0	; () banked
 20583  00816C  90D8               	bcf	status,0,c
 20584  00816E  3579               	rlcf	??_Reverse_Byte& (0+255),w,b
 20585  008170  0100               	movlb	0	; () banked
 20586  008172  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20587                           
 20588                           ; BSR set to: 0
 20589                           ;MISC.c: 370: temp += (This & 0x10) >> 1;
 20590  008174  0100               	movlb	0	; () banked
 20591  008176  90D8               	bcf	status,0,c
 20592  008178  317C               	rrcf	Reverse_Byte@This& (0+255),w,b
 20593  00817A  0B08               	andlw	8
 20594  00817C  0100               	movlb	0	; () banked
 20595  00817E  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20596                           
 20597                           ; BSR set to: 0
 20598                           ;MISC.c: 371: temp += (This & 0x20) >> 3;
 20599  008180  0100               	movlb	0	; () banked
 20600  008182  397C               	swapf	Reverse_Byte@This& (0+255),w,b
 20601  008184  46E8               	rlncf	wreg,f,c
 20602  008186  0B1F               	andlw	31
 20603  008188  0B04               	andlw	4
 20604  00818A  0100               	movlb	0	; () banked
 20605  00818C  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20606                           
 20607                           ; BSR set to: 0
 20608                           ;MISC.c: 372: temp += (This & 0x40) >> 5;
 20609  00818E  0100               	movlb	0	; () banked
 20610  008190  397C               	swapf	Reverse_Byte@This& (0+255),w,b
 20611  008192  42E8               	rrncf	wreg,f,c
 20612  008194  0B07               	andlw	7
 20613  008196  0B02               	andlw	2
 20614  008198  0100               	movlb	0	; () banked
 20615  00819A  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20616                           
 20617                           ; BSR set to: 0
 20618                           ;MISC.c: 373: temp += (This & 0x80) >> 7;
 20619  00819C  0100               	movlb	0	; () banked
 20620  00819E  457C               	rlncf	Reverse_Byte@This& (0+255),w,b
 20621  0081A0  0B01               	andlw	1
 20622  0081A2  0100               	movlb	0	; () banked
 20623  0081A4  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20624                           
 20625                           ; BSR set to: 0
 20626                           ;MISC.c: 375: return temp;
 20627  0081A6  0100               	movlb	0	; () banked
 20628  0081A8  517B               	movf	Reverse_Byte@temp& (0+255),w,b
 20629  0081AA  0012               	return	
 20630                           
 20631                           ; BSR set to: 0
 20632                           
 20633                           ; BSR set to: 0
 20634  0081AC  0012               	return		;funcret
 20635  0081AE                     __end_of_Reverse_Byte:
 20636                           	opt stack 0
 20637                           tblptru	equ	0xFF8
 20638                           tblptrh	equ	0xFF7
 20639                           tblptrl	equ	0xFF6
 20640                           tablat	equ	0xFF5
 20641                           prodh	equ	0xFF4
 20642                           prodl	equ	0xFF3
 20643                           intcon	equ	0xFF2
 20644                           indf0	equ	0xFEF
 20645                           postinc0	equ	0xFEE
 20646                           fsr0h	equ	0xFEA
 20647                           fsr0l	equ	0xFE9
 20648                           wreg	equ	0xFE8
 20649                           indf1	equ	0xFE7
 20650                           postdec1	equ	0xFE5
 20651                           fsr1h	equ	0xFE2
 20652                           fsr1l	equ	0xFE1
 20653                           indf2	equ	0xFDF
 20654                           postinc2	equ	0xFDE
 20655                           postdec2	equ	0xFDD
 20656                           fsr2h	equ	0xFDA
 20657                           fsr2l	equ	0xFD9
 20658                           status	equ	0xFD8
 20659                           
 20660 ;; *************** function _Init_System *****************
 20661 ;; Defined at:
 20662 ;;		line 105 in file "user.c"
 20663 ;; Parameters:    Size  Location     Type
 20664 ;;		None
 20665 ;; Auto vars:     Size  Location     Type
 20666 ;;		None
 20667 ;; Return value:  Size  Location     Type
 20668 ;;		None               void
 20669 ;; Registers used:
 20670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20671 ;; Tracked objects:
 20672 ;;		On entry : 0/0
 20673 ;;		On exit  : 0/0
 20674 ;;		Unchanged: 0/0
 20675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20680 ;;Total ram usage:        0 bytes
 20681 ;; Hardware stack levels used:    1
 20682 ;; Hardware stack levels required when called:   13
 20683 ;; This function calls:
 20684 ;;		_EEPROMinitialized
 20685 ;;		_InitADC
 20686 ;;		_InitBluetooth
 20687 ;;		_InitIR
 20688 ;;		_InitTimers
 20689 ;;		_InitUART
 20690 ;;		_SetEEPROMdefault
 20691 ;;		_SyncEEPROMToGlobal
 20692 ;;		_SyncGlobalToEEPROM
 20693 ;;		_UARTchar
 20694 ;;		_UARTstring
 20695 ;;		_cleanBuffer
 20696 ;; This function is called by:
 20697 ;;		_main
 20698 ;; This function uses a non-reentrant model
 20699 ;;
 20700                           
 20701                           	psect	text37
 20702  00887C                     __ptext37:
 20703                           	opt stack 0
 20704  00887C                     _Init_System:
 20705                           	opt stack 17
 20706                           
 20707                           ;user.c: 107: cleanBuffer(&ReceivedString, 255);
 20708                           
 20709                           ; BSR set to: 0
 20710                           ;incstack = 0
 20711  00887C  0E00               	movlw	low _ReceivedString
 20712  00887E  0100               	movlb	0	; () banked
 20713  008880  6F79               	movwf	cleanBuffer@data& (0+255),b
 20714  008882  0E06               	movlw	high _ReceivedString
 20715  008884  0100               	movlb	0	; () banked
 20716  008886  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 20717  008888  0E00               	movlw	0
 20718  00888A  0100               	movlb	0	; () banked
 20719  00888C  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 20720  00888E  697B               	setf	cleanBuffer@count& (0+255),b
 20721  008890  ECA6  F046         	call	_cleanBuffer	;wreg free
 20722                           
 20723                           ;user.c: 110: IPR1bits.RCIP = 0;
 20724  008894  9A9F               	bcf	3999,5,c	;volatile
 20725                           
 20726                           ;user.c: 111: INTCON2bits.RBIP = 1;
 20727  008896  80F1               	bsf	intcon2,0,c	;volatile
 20728                           
 20729                           ;user.c: 112: INTCON2bits.TMR0IP = 1;
 20730  008898  84F1               	bsf	intcon2,2,c	;volatile
 20731                           
 20732                           ;user.c: 113: IPR1bits.TMR2IP = 1;
 20733  00889A  829F               	bsf	3999,1,c	;volatile
 20734                           
 20735                           ;user.c: 114: IPR1bits.TMR1IP = 0;
 20736  00889C  909F               	bcf	3999,0,c	;volatile
 20737                           
 20738                           ;user.c: 115: IPR2bits.TMR3IP = 1;
 20739  00889E  82A2               	bsf	4002,1,c	;volatile
 20740                           
 20741                           ;user.c: 118: RCONbits.IPEN = 1;
 20742  0088A0  8ED0               	bsf	4048,7,c	;volatile
 20743                           
 20744                           ;user.c: 119: INTCONbits.PEIE = 1;
 20745  0088A2  8CF2               	bsf	intcon,6,c	;volatile
 20746                           
 20747                           ;user.c: 120: INTCONbits.GIE = 1;
 20748  0088A4  8EF2               	bsf	intcon,7,c	;volatile
 20749                           
 20750                           ;user.c: 122: SyncEEPROMToGlobal();
 20751  0088A6  EC23  F033         	call	_SyncEEPROMToGlobal	;wreg free
 20752                           
 20753                           ;user.c: 123: if(!EEPROMinitialized())
 20754  0088AA  EC2B  F04A         	call	_EEPROMinitialized	;wreg free
 20755  0088AE  0900               	iorlw	0
 20756  0088B0  A4D8               	btfss	status,2,c
 20757  0088B2  D008               	goto	l15321
 20758                           
 20759                           ;user.c: 124: {
 20760                           ;user.c: 125: SetEEPROMdefault();
 20761  0088B4  ECD5  F039         	call	_SetEEPROMdefault	;wreg free
 20762                           
 20763                           ;user.c: 126: Global.EEPROMinitFlag = 59;
 20764  0088B8  0E3B               	movlw	59
 20765  0088BA  0104               	movlb	4	; () banked
 20766  0088BC  6F2D               	movwf	(_Global+45)& (0+255),b
 20767                           
 20768                           ; BSR set to: 4
 20769                           ;user.c: 127: SyncGlobalToEEPROM();
 20770  0088BE  ECF8  F047         	call	_SyncGlobalToEEPROM	;wreg free
 20771  0088C2  D000               	goto	l15321
 20772  0088C4                     l15321:
 20773                           
 20774                           ;user.c: 128: }
 20775                           ;user.c: 129: InitADC();
 20776  0088C4  EC0B  F04A         	call	_InitADC	;wreg free
 20777                           
 20778                           ;user.c: 130: InitIR();
 20779  0088C8  ECD4  F047         	call	_InitIR	;wreg free
 20780                           
 20781                           ;user.c: 132: InitUART(115200);
 20782  0088CC  0E00               	movlw	0
 20783  0088CE  0100               	movlb	0	; () banked
 20784  0088D0  6FCE               	movwf	InitUART@Baud& (0+255),b
 20785  0088D2  0EC2               	movlw	194
 20786  0088D4  6FCF               	movwf	(InitUART@Baud+1)& (0+255),b
 20787  0088D6  0E01               	movlw	1
 20788  0088D8  6FD0               	movwf	(InitUART@Baud+2)& (0+255),b
 20789  0088DA  0E00               	movlw	0
 20790  0088DC  6FD1               	movwf	(InitUART@Baud+3)& (0+255),b
 20791  0088DE  ECAA  F03C         	call	_InitUART	;wreg free
 20792                           
 20793                           ;user.c: 133: InitBluetooth();
 20794  0088E2  EC2C  F047         	call	_InitBluetooth	;wreg free
 20795                           
 20796                           ;user.c: 134: UARTstring(CRLN);
 20797  0088E6  0ED1               	movlw	low _CRLN
 20798  0088E8  0100               	movlb	0	; () banked
 20799  0088EA  6F7A               	movwf	UARTstring@data& (0+255),b
 20800  0088EC  0EF0               	movlw	high _CRLN
 20801  0088EE  0100               	movlb	0	; () banked
 20802  0088F0  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 20803  0088F2  ECD3  F046         	call	_UARTstring	;wreg free
 20804                           
 20805                           ;user.c: 135: UARTchar('>');
 20806  0088F6  0E3E               	movlw	62
 20807  0088F8  ECBF  F049         	call	_UARTchar
 20808                           
 20809                           ;user.c: 137: InitTimers();
 20810  0088FC  EC21  F04A         	call	_InitTimers	;wreg free
 20811  008900  0012               	return		;funcret
 20812  008902                     __end_of_Init_System:
 20813                           	opt stack 0
 20814                           tblptru	equ	0xFF8
 20815                           tblptrh	equ	0xFF7
 20816                           tblptrl	equ	0xFF6
 20817                           tablat	equ	0xFF5
 20818                           prodh	equ	0xFF4
 20819                           prodl	equ	0xFF3
 20820                           intcon	equ	0xFF2
 20821                           intcon2	equ	0xFF1
 20822                           indf0	equ	0xFEF
 20823                           postinc0	equ	0xFEE
 20824                           fsr0h	equ	0xFEA
 20825                           fsr0l	equ	0xFE9
 20826                           wreg	equ	0xFE8
 20827                           indf1	equ	0xFE7
 20828                           postdec1	equ	0xFE5
 20829                           fsr1h	equ	0xFE2
 20830                           fsr1l	equ	0xFE1
 20831                           indf2	equ	0xFDF
 20832                           postinc2	equ	0xFDE
 20833                           postdec2	equ	0xFDD
 20834                           fsr2h	equ	0xFDA
 20835                           fsr2l	equ	0xFD9
 20836                           status	equ	0xFD8
 20837                           
 20838 ;; *************** function _SyncEEPROMToGlobal *****************
 20839 ;; Defined at:
 20840 ;;		line 302 in file "EEPROM.c"
 20841 ;; Parameters:    Size  Location     Type
 20842 ;;		None
 20843 ;; Auto vars:     Size  Location     Type
 20844 ;;  Temp          136    3[BANK1 ] struct EEdata
 20845 ;;  j               1    2[BANK1 ] unsigned char 
 20846 ;;  i               1    1[BANK1 ] unsigned char 
 20847 ;;  k               1    0[BANK1 ] unsigned char 
 20848 ;; Return value:  Size  Location     Type
 20849 ;;		None               void
 20850 ;; Registers used:
 20851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20852 ;; Tracked objects:
 20853 ;;		On entry : 0/0
 20854 ;;		On exit  : 0/0
 20855 ;;		Unchanged: 0/0
 20856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20858 ;;      Locals:         0       0     139       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20859 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20860 ;;      Totals:         0       4     139       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20861 ;;Total ram usage:      143 bytes
 20862 ;; Hardware stack levels used:    1
 20863 ;; Hardware stack levels required when called:    9
 20864 ;; This function calls:
 20865 ;;		_GetEEPROM
 20866 ;; This function is called by:
 20867 ;;		_Init_System
 20868 ;; This function uses a non-reentrant model
 20869 ;;
 20870                           
 20871                           	psect	text38
 20872  006646                     __ptext38:
 20873                           	opt stack 0
 20874  006646                     _SyncEEPROMToGlobal:
 20875                           	opt stack 20
 20876                           
 20877                           ;EEPROM.c: 304: unsigned char i,j,k;
 20878                           ;EEPROM.c: 305: GBLdata Temp;
 20879                           ;EEPROM.c: 307: GetEEPROM(&Temp);
 20880                           
 20881                           ;incstack = 0
 20882  006646  0E03               	movlw	low SyncEEPROMToGlobal@Temp
 20883  006648  0100               	movlb	0	; () banked
 20884  00664A  6F9E               	movwf	GetEEPROM@Temp& (0+255),b
 20885  00664C  0E01               	movlw	high SyncEEPROMToGlobal@Temp
 20886  00664E  0100               	movlb	0	; () banked
 20887  006650  6F9F               	movwf	(GetEEPROM@Temp+1)& (0+255),b
 20888  006652  ECA7  F035         	call	_GetEEPROM	;wreg free
 20889                           
 20890                           ;EEPROM.c: 309: Global.BlueToothFlag = Temp.BlueToothFlag;
 20891  006656  C103  F400         	movff	SyncEEPROMToGlobal@Temp,_Global
 20892                           
 20893                           ;EEPROM.c: 310: Global.SWNECcode = Temp.SWNECcode;
 20894  00665A  C104  F401         	movff	SyncEEPROMToGlobal@Temp+1,_Global+1
 20895  00665E  C105  F402         	movff	SyncEEPROMToGlobal@Temp+2,_Global+2
 20896  006662  C106  F403         	movff	SyncEEPROMToGlobal@Temp+3,_Global+3
 20897  006666  C107  F404         	movff	SyncEEPROMToGlobal@Temp+4,_Global+4
 20898                           
 20899                           ;EEPROM.c: 311: Global.EEPROMinitFlag = Temp.EEPROMinitFlag;
 20900  00666A  C130  F42D         	movff	SyncEEPROMToGlobal@Temp+45,_Global+45
 20901                           
 20902                           ;EEPROM.c: 312: for(i=0; i< 20; i++)
 20903  00666E  0E00               	movlw	0
 20904  006670  0101               	movlb	1	; () banked
 20905  006672  6F01               	movwf	SyncEEPROMToGlobal@i& (0+255),b
 20906  006674  D04F               	goto	l14411
 20907                           
 20908                           ; BSR set to: 1
 20909                           
 20910                           ; BSR set to: 1
 20911  006676  D052               	goto	l994
 20912  006678                     l14397:
 20913                           
 20914                           ; BSR set to: 1
 20915                           ;EEPROM.c: 313: {
 20916                           ;EEPROM.c: 314: for(j=0; j < 2; j++)
 20917  006678  0E00               	movlw	0
 20918  00667A  0101               	movlb	1	; () banked
 20919  00667C  6F02               	movwf	SyncEEPROMToGlobal@j& (0+255),b
 20920  00667E                     l14399:
 20921                           
 20922                           ; BSR set to: 1
 20923  00667E  0E01               	movlw	1
 20924  006680  0101               	movlb	1	; () banked
 20925  006682  6502               	cpfsgt	SyncEEPROMToGlobal@j& (0+255),b
 20926  006684  D001               	goto	l14403
 20927                           
 20928                           ; BSR set to: 1
 20929  006686  D044               	goto	l14409
 20930  006688                     l14403:
 20931                           
 20932                           ; BSR set to: 1
 20933                           ;EEPROM.c: 315: {
 20934                           ;EEPROM.c: 316: Global.RemoteButtonNEC[i][j] = Temp.RemoteButtonNEC[i][j];
 20935  006688  0101               	movlb	1	; () banked
 20936  00668A  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 20937  00668C  0D02               	mullw	2
 20938  00668E  0E03               	movlw	low SyncEEPROMToGlobal@Temp
 20939  006690  0100               	movlb	0	; () banked
 20940  006692  6FA6               	movwf	??_SyncEEPROMToGlobal& (0+255),b
 20941  006694  0E01               	movlw	high SyncEEPROMToGlobal@Temp
 20942  006696  0100               	movlb	0	; () banked
 20943  006698  6FA7               	movwf	(??_SyncEEPROMToGlobal+1)& (0+255),b
 20944  00669A  50F3               	movf	prodl,w,c
 20945  00669C  0100               	movlb	0	; () banked
 20946  00669E  27A6               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 20947  0066A0  50F4               	movf	prodh,w,c
 20948  0066A2  0100               	movlb	0	; () banked
 20949  0066A4  23A7               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 20950  0066A6  0101               	movlb	1	; () banked
 20951  0066A8  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 20952  0066AA  0D01               	mullw	1
 20953  0066AC  50F3               	movf	prodl,w,c
 20954  0066AE  0100               	movlb	0	; () banked
 20955  0066B0  27A6               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 20956  0066B2  50F4               	movf	prodh,w,c
 20957  0066B4  0100               	movlb	0	; () banked
 20958  0066B6  23A7               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 20959  0066B8  0E05               	movlw	5
 20960  0066BA  0100               	movlb	0	; () banked
 20961  0066BC  25A6               	addwf	??_SyncEEPROMToGlobal& (0+255),w,b
 20962  0066BE  6ED9               	movwf	fsr2l,c
 20963  0066C0  0E00               	movlw	0
 20964  0066C2  0100               	movlb	0	; () banked
 20965  0066C4  21A7               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),w,b
 20966  0066C6  6EDA               	movwf	fsr2h,c
 20967  0066C8  0101               	movlb	1	; () banked
 20968  0066CA  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 20969  0066CC  0D02               	mullw	2
 20970  0066CE  0E00               	movlw	low _Global
 20971  0066D0  0100               	movlb	0	; () banked
 20972  0066D2  6FA8               	movwf	(??_SyncEEPROMToGlobal+2)& (0+255),b
 20973  0066D4  0E04               	movlw	high _Global
 20974  0066D6  0100               	movlb	0	; () banked
 20975  0066D8  6FA9               	movwf	(??_SyncEEPROMToGlobal+3)& (0+255),b
 20976  0066DA  0E05               	movlw	5
 20977  0066DC  0100               	movlb	0	; () banked
 20978  0066DE  27A8               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 20979  0066E0  0E00               	movlw	0
 20980  0066E2  23A9               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 20981  0066E4  50F3               	movf	prodl,w,c
 20982  0066E6  0100               	movlb	0	; () banked
 20983  0066E8  27A8               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 20984  0066EA  50F4               	movf	prodh,w,c
 20985  0066EC  0100               	movlb	0	; () banked
 20986  0066EE  23A9               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 20987  0066F0  0101               	movlb	1	; () banked
 20988  0066F2  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 20989  0066F4  0D01               	mullw	1
 20990  0066F6  50F3               	movf	prodl,w,c
 20991  0066F8  0100               	movlb	0	; () banked
 20992  0066FA  25A8               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),w,b
 20993  0066FC  6EE1               	movwf	fsr1l,c
 20994  0066FE  50F4               	movf	prodh,w,c
 20995  006700  0100               	movlb	0	; () banked
 20996  006702  21A9               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),w,b
 20997  006704  6EE2               	movwf	fsr1h,c
 20998  006706  CFDF FFE7          	movff	indf2,indf1
 20999                           
 21000                           ; BSR set to: 0
 21001  00670A  0101               	movlb	1	; () banked
 21002  00670C  2B02               	incf	SyncEEPROMToGlobal@j& (0+255),f,b
 21003  00670E  D7B7               	goto	l14399
 21004  006710                     l14409:
 21005                           
 21006                           ; BSR set to: 1
 21007  006710  0101               	movlb	1	; () banked
 21008  006712  2B01               	incf	SyncEEPROMToGlobal@i& (0+255),f,b
 21009  006714                     l14411:
 21010                           
 21011                           ; BSR set to: 1
 21012  006714  0E13               	movlw	19
 21013  006716  0101               	movlb	1	; () banked
 21014  006718  6501               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 21015  00671A  D7AE               	goto	l14397
 21016  00671C                     l994:
 21017                           
 21018                           ; BSR set to: 1
 21019                           ;EEPROM.c: 317: }
 21020                           ;EEPROM.c: 318: }
 21021                           ;EEPROM.c: 319: Global.EEPROMinitFlag = Temp.EEPROMinitFlag;
 21022  00671C  C130  F42D         	movff	SyncEEPROMToGlobal@Temp+45,_Global+45
 21023                           
 21024                           ; BSR set to: 1
 21025                           ;EEPROM.c: 320: for(i=0; i< 15; i++)
 21026  006720  0E00               	movlw	0
 21027  006722  0101               	movlb	1	; () banked
 21028  006724  6F01               	movwf	SyncEEPROMToGlobal@i& (0+255),b
 21029                           
 21030                           ; BSR set to: 1
 21031  006726  0E0E               	movlw	14
 21032  006728  0101               	movlb	1	; () banked
 21033  00672A  6501               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 21034  00672C  D002               	goto	l14419
 21035  00672E  0012               	return	
 21036                           
 21037                           ; BSR set to: 1
 21038  006730  0012               	return	
 21039  006732                     l14419:
 21040                           
 21041                           ; BSR set to: 1
 21042                           ;EEPROM.c: 321: {
 21043                           ;EEPROM.c: 322: for(j=0; j < 3; j++)
 21044  006732  0E00               	movlw	0
 21045  006734  0101               	movlb	1	; () banked
 21046  006736  6F02               	movwf	SyncEEPROMToGlobal@j& (0+255),b
 21047  006738                     l14421:
 21048                           
 21049                           ; BSR set to: 1
 21050  006738  0E02               	movlw	2
 21051  00673A  0101               	movlb	1	; () banked
 21052  00673C  6502               	cpfsgt	SyncEEPROMToGlobal@j& (0+255),b
 21053  00673E  D001               	goto	l14425
 21054                           
 21055                           ; BSR set to: 1
 21056  006740  D061               	goto	l14441
 21057  006742                     l14425:
 21058                           
 21059                           ; BSR set to: 1
 21060                           ;EEPROM.c: 323: {
 21061                           ;EEPROM.c: 324: for(k=0; k < 2; k++)
 21062  006742  0E00               	movlw	0
 21063  006744  0101               	movlb	1	; () banked
 21064  006746  6F00               	movwf	SyncEEPROMToGlobal@k& (0+255),b
 21065  006748                     l14427:
 21066                           
 21067                           ; BSR set to: 1
 21068  006748  0E01               	movlw	1
 21069  00674A  0101               	movlb	1	; () banked
 21070  00674C  6500               	cpfsgt	SyncEEPROMToGlobal@k& (0+255),b
 21071  00674E  D001               	goto	l14431
 21072                           
 21073                           ; BSR set to: 1
 21074  006750  D056               	goto	l14437
 21075  006752                     l14431:
 21076                           
 21077                           ; BSR set to: 1
 21078                           ;EEPROM.c: 325: {
 21079                           ;EEPROM.c: 326: Global.RemoteButtonRF[i][j][k] = Temp.RemoteButtonRF[i][j][k];
 21080  006752  0101               	movlb	1	; () banked
 21081  006754  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 21082  006756  0D06               	mullw	6
 21083  006758  0E03               	movlw	low SyncEEPROMToGlobal@Temp
 21084  00675A  0100               	movlb	0	; () banked
 21085  00675C  6FA6               	movwf	??_SyncEEPROMToGlobal& (0+255),b
 21086  00675E  0E01               	movlw	high SyncEEPROMToGlobal@Temp
 21087  006760  0100               	movlb	0	; () banked
 21088  006762  6FA7               	movwf	(??_SyncEEPROMToGlobal+1)& (0+255),b
 21089  006764  50F3               	movf	prodl,w,c
 21090  006766  0100               	movlb	0	; () banked
 21091  006768  27A6               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 21092  00676A  50F4               	movf	prodh,w,c
 21093  00676C  0100               	movlb	0	; () banked
 21094  00676E  23A7               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 21095  006770  0101               	movlb	1	; () banked
 21096  006772  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 21097  006774  0D02               	mullw	2
 21098  006776  50F3               	movf	prodl,w,c
 21099  006778  0100               	movlb	0	; () banked
 21100  00677A  27A6               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 21101  00677C  50F4               	movf	prodh,w,c
 21102  00677E  0100               	movlb	0	; () banked
 21103  006780  23A7               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 21104  006782  0101               	movlb	1	; () banked
 21105  006784  5100               	movf	SyncEEPROMToGlobal@k& (0+255),w,b
 21106  006786  0D01               	mullw	1
 21107  006788  50F3               	movf	prodl,w,c
 21108  00678A  0100               	movlb	0	; () banked
 21109  00678C  27A6               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 21110  00678E  50F4               	movf	prodh,w,c
 21111  006790  0100               	movlb	0	; () banked
 21112  006792  23A7               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 21113  006794  0E2E               	movlw	46
 21114  006796  0100               	movlb	0	; () banked
 21115  006798  25A6               	addwf	??_SyncEEPROMToGlobal& (0+255),w,b
 21116  00679A  6ED9               	movwf	fsr2l,c
 21117  00679C  0E00               	movlw	0
 21118  00679E  0100               	movlb	0	; () banked
 21119  0067A0  21A7               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),w,b
 21120  0067A2  6EDA               	movwf	fsr2h,c
 21121  0067A4  0101               	movlb	1	; () banked
 21122  0067A6  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 21123  0067A8  0D06               	mullw	6
 21124  0067AA  0E00               	movlw	low _Global
 21125  0067AC  0100               	movlb	0	; () banked
 21126  0067AE  6FA8               	movwf	(??_SyncEEPROMToGlobal+2)& (0+255),b
 21127  0067B0  0E04               	movlw	high _Global
 21128  0067B2  0100               	movlb	0	; () banked
 21129  0067B4  6FA9               	movwf	(??_SyncEEPROMToGlobal+3)& (0+255),b
 21130  0067B6  0E2E               	movlw	46
 21131  0067B8  0100               	movlb	0	; () banked
 21132  0067BA  27A8               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 21133  0067BC  0E00               	movlw	0
 21134  0067BE  23A9               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 21135  0067C0  50F3               	movf	prodl,w,c
 21136  0067C2  0100               	movlb	0	; () banked
 21137  0067C4  27A8               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 21138  0067C6  50F4               	movf	prodh,w,c
 21139  0067C8  0100               	movlb	0	; () banked
 21140  0067CA  23A9               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 21141  0067CC  0101               	movlb	1	; () banked
 21142  0067CE  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 21143  0067D0  0D02               	mullw	2
 21144  0067D2  50F3               	movf	prodl,w,c
 21145  0067D4  0100               	movlb	0	; () banked
 21146  0067D6  27A8               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 21147  0067D8  50F4               	movf	prodh,w,c
 21148  0067DA  0100               	movlb	0	; () banked
 21149  0067DC  23A9               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 21150  0067DE  0101               	movlb	1	; () banked
 21151  0067E0  5100               	movf	SyncEEPROMToGlobal@k& (0+255),w,b
 21152  0067E2  0D01               	mullw	1
 21153  0067E4  50F3               	movf	prodl,w,c
 21154  0067E6  0100               	movlb	0	; () banked
 21155  0067E8  25A8               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),w,b
 21156  0067EA  6EE1               	movwf	fsr1l,c
 21157  0067EC  50F4               	movf	prodh,w,c
 21158  0067EE  0100               	movlb	0	; () banked
 21159  0067F0  21A9               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),w,b
 21160  0067F2  6EE2               	movwf	fsr1h,c
 21161  0067F4  CFDF FFE7          	movff	indf2,indf1
 21162                           
 21163                           ; BSR set to: 0
 21164  0067F8  0101               	movlb	1	; () banked
 21165  0067FA  2B00               	incf	SyncEEPROMToGlobal@k& (0+255),f,b
 21166  0067FC  D7A5               	goto	l14427
 21167  0067FE                     l14437:
 21168                           
 21169                           ; BSR set to: 1
 21170  0067FE  0101               	movlb	1	; () banked
 21171  006800  2B02               	incf	SyncEEPROMToGlobal@j& (0+255),f,b
 21172  006802  D79A               	goto	l14421
 21173  006804                     l14441:
 21174                           
 21175                           ; BSR set to: 1
 21176  006804  0101               	movlb	1	; () banked
 21177  006806  2B01               	incf	SyncEEPROMToGlobal@i& (0+255),f,b
 21178                           
 21179                           ; BSR set to: 1
 21180  006808  0E0E               	movlw	14
 21181  00680A  0101               	movlb	1	; () banked
 21182  00680C  6501               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 21183  00680E  D791               	goto	l14419
 21184  006810  0012               	return	
 21185                           
 21186                           ; BSR set to: 1
 21187                           
 21188                           ; BSR set to: 1
 21189  006812  0012               	return		;funcret
 21190  006814                     __end_of_SyncEEPROMToGlobal:
 21191                           	opt stack 0
 21192                           tblptru	equ	0xFF8
 21193                           tblptrh	equ	0xFF7
 21194                           tblptrl	equ	0xFF6
 21195                           tablat	equ	0xFF5
 21196                           prodh	equ	0xFF4
 21197                           prodl	equ	0xFF3
 21198                           intcon	equ	0xFF2
 21199                           intcon2	equ	0xFF1
 21200                           indf0	equ	0xFEF
 21201                           postinc0	equ	0xFEE
 21202                           fsr0h	equ	0xFEA
 21203                           fsr0l	equ	0xFE9
 21204                           wreg	equ	0xFE8
 21205                           indf1	equ	0xFE7
 21206                           postdec1	equ	0xFE5
 21207                           fsr1h	equ	0xFE2
 21208                           fsr1l	equ	0xFE1
 21209                           indf2	equ	0xFDF
 21210                           postinc2	equ	0xFDE
 21211                           postdec2	equ	0xFDD
 21212                           fsr2h	equ	0xFDA
 21213                           fsr2l	equ	0xFD9
 21214                           status	equ	0xFD8
 21215                           
 21216 ;; *************** function _GetEEPROM *****************
 21217 ;; Defined at:
 21218 ;;		line 134 in file "EEPROM.c"
 21219 ;; Parameters:    Size  Location     Type
 21220 ;;  Temp            2   62[BANK0 ] PTR struct EEdata
 21221 ;;		 -> SyncEEPROMToGlobal@Temp(136), 
 21222 ;; Auto vars:     Size  Location     Type
 21223 ;;  j               1   69[BANK0 ] unsigned char 
 21224 ;;  i               1   68[BANK0 ] unsigned char 
 21225 ;;  k               1   67[BANK0 ] unsigned char 
 21226 ;;  Arrayspot       1   66[BANK0 ] unsigned char 
 21227 ;; Return value:  Size  Location     Type
 21228 ;;		None               void
 21229 ;; Registers used:
 21230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21231 ;; Tracked objects:
 21232 ;;		On entry : 0/0
 21233 ;;		On exit  : 0/0
 21234 ;;		Unchanged: 0/0
 21235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21236 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21237 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21238 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21239 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21240 ;;Total ram usage:        8 bytes
 21241 ;; Hardware stack levels used:    1
 21242 ;; Hardware stack levels required when called:    8
 21243 ;; This function calls:
 21244 ;;		_GetMemoryChar
 21245 ;;		_GetMemoryLong
 21246 ;; This function is called by:
 21247 ;;		_SyncEEPROMToGlobal
 21248 ;; This function uses a non-reentrant model
 21249 ;;
 21250                           
 21251                           	psect	text39
 21252  006B4E                     __ptext39:
 21253                           	opt stack 0
 21254  006B4E                     _GetEEPROM:
 21255                           	opt stack 20
 21256                           
 21257                           ;EEPROM.c: 136: unsigned char i,j,k;
 21258                           ;EEPROM.c: 137: unsigned char Arrayspot=5;
 21259                           
 21260                           ; BSR set to: 1
 21261                           ;incstack = 0
 21262  006B4E  0E05               	movlw	5
 21263  006B50  0100               	movlb	0	; () banked
 21264  006B52  6FA2               	movwf	GetEEPROM@Arrayspot& (0+255),b
 21265                           
 21266                           ; BSR set to: 0
 21267                           ;EEPROM.c: 139: Temp->BlueToothFlag = GetMemoryChar(0);
 21268  006B54  0E00               	movlw	0
 21269  006B56  EC87  F049         	call	_GetMemoryChar
 21270  006B5A  0100               	movlb	0	; () banked
 21271  006B5C  517D               	movf	?_GetMemoryChar& (0+255),w,b
 21272  006B5E  C09E  FFD9         	movff	GetEEPROM@Temp,fsr2l
 21273  006B62  C09F  FFDA         	movff	GetEEPROM@Temp+1,fsr2h
 21274  006B66  6EDF               	movwf	indf2,c
 21275                           
 21276                           ; BSR set to: 0
 21277                           ;EEPROM.c: 140: Temp->SWNECcode = GetMemoryLong(1);
 21278  006B68  0E01               	movlw	1
 21279  006B6A  EC6E  F036         	call	_GetMemoryLong
 21280  006B6E  0100               	movlb	0	; () banked
 21281  006B70  EE20 F001          	lfsr	2,1
 21282  006B74  519E               	movf	GetEEPROM@Temp& (0+255),w,b
 21283  006B76  26D9               	addwf	fsr2l,f,c
 21284  006B78  519F               	movf	(GetEEPROM@Temp+1)& (0+255),w,b
 21285  006B7A  22DA               	addwfc	fsr2h,f,c
 21286  006B7C  0100               	movlb	0	; () banked
 21287  006B7E  C07D  FFDE         	movff	?_GetMemoryLong,postinc2
 21288  006B82  0100               	movlb	0	; () banked
 21289  006B84  C07E  FFDE         	movff	?_GetMemoryLong+1,postinc2
 21290  006B88  0100               	movlb	0	; () banked
 21291  006B8A  C07F  FFDE         	movff	?_GetMemoryLong+2,postinc2
 21292  006B8E  0100               	movlb	0	; () banked
 21293  006B90  C080  FFDE         	movff	?_GetMemoryLong+3,postinc2
 21294                           
 21295                           ;EEPROM.c: 141: for(i=0; i< 20; i++)
 21296  006B94  0E00               	movlw	0
 21297  006B96  0100               	movlb	0	; () banked
 21298  006B98  6FA4               	movwf	GetEEPROM@i& (0+255),b
 21299  006B9A                     l14065:
 21300                           
 21301                           ; BSR set to: 0
 21302  006B9A  0E13               	movlw	19
 21303  006B9C  0100               	movlb	0	; () banked
 21304  006B9E  65A4               	cpfsgt	GetEEPROM@i& (0+255),b
 21305  006BA0  D001               	goto	l14069
 21306                           
 21307                           ; BSR set to: 0
 21308  006BA2  D035               	goto	l14087
 21309  006BA4                     l14069:
 21310                           
 21311                           ; BSR set to: 0
 21312                           ;EEPROM.c: 142: {
 21313                           ;EEPROM.c: 143: for(j=0; j < 2; j++)
 21314  006BA4  0E00               	movlw	0
 21315  006BA6  0100               	movlb	0	; () banked
 21316  006BA8  6FA5               	movwf	GetEEPROM@j& (0+255),b
 21317  006BAA                     l14071:
 21318                           
 21319                           ; BSR set to: 0
 21320  006BAA  0E01               	movlw	1
 21321  006BAC  0100               	movlb	0	; () banked
 21322  006BAE  65A5               	cpfsgt	GetEEPROM@j& (0+255),b
 21323  006BB0  D001               	goto	l14075
 21324                           
 21325                           ; BSR set to: 0
 21326  006BB2  D02A               	goto	l14083
 21327  006BB4                     l14075:
 21328                           
 21329                           ; BSR set to: 0
 21330                           ;EEPROM.c: 144: {
 21331                           ;EEPROM.c: 145: Temp->RemoteButtonNEC[i][j] = GetMemoryChar(Arrayspot++);
 21332  006BB4  0100               	movlb	0	; () banked
 21333  006BB6  51A4               	movf	GetEEPROM@i& (0+255),w,b
 21334  006BB8  0D02               	mullw	2
 21335  006BBA  C09E  F0A0         	movff	GetEEPROM@Temp,??_GetEEPROM
 21336  006BBE  C09F  F0A1         	movff	GetEEPROM@Temp+1,??_GetEEPROM+1
 21337  006BC2  50F3               	movf	prodl,w,c
 21338  006BC4  0100               	movlb	0	; () banked
 21339  006BC6  27A0               	addwf	??_GetEEPROM& (0+255),f,b
 21340  006BC8  50F4               	movf	prodh,w,c
 21341  006BCA  0100               	movlb	0	; () banked
 21342  006BCC  23A1               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21343  006BCE  0100               	movlb	0	; () banked
 21344  006BD0  51A5               	movf	GetEEPROM@j& (0+255),w,b
 21345  006BD2  0D01               	mullw	1
 21346  006BD4  50F3               	movf	prodl,w,c
 21347  006BD6  0100               	movlb	0	; () banked
 21348  006BD8  27A0               	addwf	??_GetEEPROM& (0+255),f,b
 21349  006BDA  50F4               	movf	prodh,w,c
 21350  006BDC  0100               	movlb	0	; () banked
 21351  006BDE  23A1               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21352  006BE0  0E05               	movlw	5
 21353  006BE2  0100               	movlb	0	; () banked
 21354  006BE4  25A0               	addwf	??_GetEEPROM& (0+255),w,b
 21355  006BE6  6ED9               	movwf	fsr2l,c
 21356  006BE8  0E00               	movlw	0
 21357  006BEA  0100               	movlb	0	; () banked
 21358  006BEC  21A1               	addwfc	(??_GetEEPROM+1)& (0+255),w,b
 21359  006BEE  6EDA               	movwf	fsr2h,c
 21360  006BF0  0100               	movlb	0	; () banked
 21361  006BF2  51A2               	movf	GetEEPROM@Arrayspot& (0+255),w,b
 21362  006BF4  EC87  F049         	call	_GetMemoryChar
 21363  006BF8  0100               	movlb	0	; () banked
 21364  006BFA  517D               	movf	?_GetMemoryChar& (0+255),w,b
 21365  006BFC  6EDF               	movwf	indf2,c
 21366                           
 21367                           ; BSR set to: 0
 21368  006BFE  0100               	movlb	0	; () banked
 21369  006C00  2BA2               	incf	GetEEPROM@Arrayspot& (0+255),f,b
 21370                           
 21371                           ; BSR set to: 0
 21372  006C02  0100               	movlb	0	; () banked
 21373  006C04  2BA5               	incf	GetEEPROM@j& (0+255),f,b
 21374  006C06  D7D1               	goto	l14071
 21375  006C08                     l14083:
 21376                           
 21377                           ; BSR set to: 0
 21378  006C08  0100               	movlb	0	; () banked
 21379  006C0A  2BA4               	incf	GetEEPROM@i& (0+255),f,b
 21380  006C0C  D7C6               	goto	l14065
 21381  006C0E                     l14087:
 21382                           
 21383                           ; BSR set to: 0
 21384                           ;EEPROM.c: 146: }
 21385                           ;EEPROM.c: 147: }
 21386                           ;EEPROM.c: 148: Temp->EEPROMinitFlag = GetMemoryChar((2*20 + 5));
 21387  006C0E  0100               	movlb	0	; () banked
 21388  006C10  EE20 F02D          	lfsr	2,45
 21389  006C14  519E               	movf	GetEEPROM@Temp& (0+255),w,b
 21390  006C16  26D9               	addwf	fsr2l,f,c
 21391  006C18  519F               	movf	(GetEEPROM@Temp+1)& (0+255),w,b
 21392  006C1A  22DA               	addwfc	fsr2h,f,c
 21393  006C1C  0E2D               	movlw	45
 21394  006C1E  EC87  F049         	call	_GetMemoryChar
 21395  006C22  0100               	movlb	0	; () banked
 21396  006C24  517D               	movf	?_GetMemoryChar& (0+255),w,b
 21397  006C26  6EDF               	movwf	indf2,c
 21398                           
 21399                           ; BSR set to: 0
 21400                           ;EEPROM.c: 149: Arrayspot=(2*20 + 7);
 21401  006C28  0E2F               	movlw	47
 21402  006C2A  0100               	movlb	0	; () banked
 21403  006C2C  6FA2               	movwf	GetEEPROM@Arrayspot& (0+255),b
 21404                           
 21405                           ; BSR set to: 0
 21406                           ;EEPROM.c: 150: for(i=0; i< 15; i++)
 21407  006C2E  0E00               	movlw	0
 21408  006C30  0100               	movlb	0	; () banked
 21409  006C32  6FA4               	movwf	GetEEPROM@i& (0+255),b
 21410                           
 21411                           ; BSR set to: 0
 21412  006C34  0E0E               	movlw	14
 21413  006C36  0100               	movlb	0	; () banked
 21414  006C38  65A4               	cpfsgt	GetEEPROM@i& (0+255),b
 21415  006C3A  D002               	goto	l14097
 21416  006C3C  0012               	return	
 21417                           
 21418                           ; BSR set to: 0
 21419  006C3E  0012               	return	
 21420  006C40                     l14097:
 21421                           
 21422                           ; BSR set to: 0
 21423                           ;EEPROM.c: 151: {
 21424                           ;EEPROM.c: 152: for(j=0; j < 3; j++)
 21425  006C40  0E00               	movlw	0
 21426  006C42  0100               	movlb	0	; () banked
 21427  006C44  6FA5               	movwf	GetEEPROM@j& (0+255),b
 21428  006C46                     l14099:
 21429                           
 21430                           ; BSR set to: 0
 21431  006C46  0E02               	movlw	2
 21432  006C48  0100               	movlb	0	; () banked
 21433  006C4A  65A5               	cpfsgt	GetEEPROM@j& (0+255),b
 21434  006C4C  D001               	goto	l14103
 21435                           
 21436                           ; BSR set to: 0
 21437  006C4E  D03E               	goto	l14121
 21438  006C50                     l14103:
 21439                           
 21440                           ; BSR set to: 0
 21441                           ;EEPROM.c: 153: {
 21442                           ;EEPROM.c: 154: for(k=0; k < 2; k++)
 21443  006C50  0E00               	movlw	0
 21444  006C52  0100               	movlb	0	; () banked
 21445  006C54  6FA3               	movwf	GetEEPROM@k& (0+255),b
 21446  006C56                     l14105:
 21447                           
 21448                           ; BSR set to: 0
 21449  006C56  0E01               	movlw	1
 21450  006C58  0100               	movlb	0	; () banked
 21451  006C5A  65A3               	cpfsgt	GetEEPROM@k& (0+255),b
 21452  006C5C  D001               	goto	l14109
 21453                           
 21454                           ; BSR set to: 0
 21455  006C5E  D033               	goto	l14117
 21456  006C60                     l14109:
 21457                           
 21458                           ; BSR set to: 0
 21459                           ;EEPROM.c: 155: {
 21460                           ;EEPROM.c: 156: Temp->RemoteButtonRF[i][j][k] = GetMemoryChar(Arrayspot++);
 21461  006C60  0100               	movlb	0	; () banked
 21462  006C62  51A4               	movf	GetEEPROM@i& (0+255),w,b
 21463  006C64  0D06               	mullw	6
 21464  006C66  C09E  F0A0         	movff	GetEEPROM@Temp,??_GetEEPROM
 21465  006C6A  C09F  F0A1         	movff	GetEEPROM@Temp+1,??_GetEEPROM+1
 21466  006C6E  50F3               	movf	prodl,w,c
 21467  006C70  0100               	movlb	0	; () banked
 21468  006C72  27A0               	addwf	??_GetEEPROM& (0+255),f,b
 21469  006C74  50F4               	movf	prodh,w,c
 21470  006C76  0100               	movlb	0	; () banked
 21471  006C78  23A1               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21472  006C7A  0100               	movlb	0	; () banked
 21473  006C7C  51A5               	movf	GetEEPROM@j& (0+255),w,b
 21474  006C7E  0D02               	mullw	2
 21475  006C80  50F3               	movf	prodl,w,c
 21476  006C82  0100               	movlb	0	; () banked
 21477  006C84  27A0               	addwf	??_GetEEPROM& (0+255),f,b
 21478  006C86  50F4               	movf	prodh,w,c
 21479  006C88  0100               	movlb	0	; () banked
 21480  006C8A  23A1               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21481  006C8C  0100               	movlb	0	; () banked
 21482  006C8E  51A3               	movf	GetEEPROM@k& (0+255),w,b
 21483  006C90  0D01               	mullw	1
 21484  006C92  50F3               	movf	prodl,w,c
 21485  006C94  0100               	movlb	0	; () banked
 21486  006C96  27A0               	addwf	??_GetEEPROM& (0+255),f,b
 21487  006C98  50F4               	movf	prodh,w,c
 21488  006C9A  0100               	movlb	0	; () banked
 21489  006C9C  23A1               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21490  006C9E  0E2E               	movlw	46
 21491  006CA0  0100               	movlb	0	; () banked
 21492  006CA2  25A0               	addwf	??_GetEEPROM& (0+255),w,b
 21493  006CA4  6ED9               	movwf	fsr2l,c
 21494  006CA6  0E00               	movlw	0
 21495  006CA8  0100               	movlb	0	; () banked
 21496  006CAA  21A1               	addwfc	(??_GetEEPROM+1)& (0+255),w,b
 21497  006CAC  6EDA               	movwf	fsr2h,c
 21498  006CAE  0100               	movlb	0	; () banked
 21499  006CB0  51A2               	movf	GetEEPROM@Arrayspot& (0+255),w,b
 21500  006CB2  EC87  F049         	call	_GetMemoryChar
 21501  006CB6  0100               	movlb	0	; () banked
 21502  006CB8  517D               	movf	?_GetMemoryChar& (0+255),w,b
 21503  006CBA  6EDF               	movwf	indf2,c
 21504                           
 21505                           ; BSR set to: 0
 21506  006CBC  0100               	movlb	0	; () banked
 21507  006CBE  2BA2               	incf	GetEEPROM@Arrayspot& (0+255),f,b
 21508                           
 21509                           ; BSR set to: 0
 21510  006CC0  0100               	movlb	0	; () banked
 21511  006CC2  2BA3               	incf	GetEEPROM@k& (0+255),f,b
 21512  006CC4  D7C8               	goto	l14105
 21513  006CC6                     l14117:
 21514                           
 21515                           ; BSR set to: 0
 21516  006CC6  0100               	movlb	0	; () banked
 21517  006CC8  2BA5               	incf	GetEEPROM@j& (0+255),f,b
 21518  006CCA  D7BD               	goto	l14099
 21519  006CCC                     l14121:
 21520                           
 21521                           ; BSR set to: 0
 21522  006CCC  0100               	movlb	0	; () banked
 21523  006CCE  2BA4               	incf	GetEEPROM@i& (0+255),f,b
 21524                           
 21525                           ; BSR set to: 0
 21526  006CD0  0E0E               	movlw	14
 21527  006CD2  0100               	movlb	0	; () banked
 21528  006CD4  65A4               	cpfsgt	GetEEPROM@i& (0+255),b
 21529  006CD6  D7B4               	goto	l14097
 21530  006CD8  0012               	return	
 21531                           
 21532                           ; BSR set to: 0
 21533                           
 21534                           ; BSR set to: 0
 21535  006CDA  0012               	return		;funcret
 21536  006CDC                     __end_of_GetEEPROM:
 21537                           	opt stack 0
 21538                           tblptru	equ	0xFF8
 21539                           tblptrh	equ	0xFF7
 21540                           tblptrl	equ	0xFF6
 21541                           tablat	equ	0xFF5
 21542                           prodh	equ	0xFF4
 21543                           prodl	equ	0xFF3
 21544                           intcon	equ	0xFF2
 21545                           intcon2	equ	0xFF1
 21546                           indf0	equ	0xFEF
 21547                           postinc0	equ	0xFEE
 21548                           fsr0h	equ	0xFEA
 21549                           fsr0l	equ	0xFE9
 21550                           wreg	equ	0xFE8
 21551                           indf1	equ	0xFE7
 21552                           postdec1	equ	0xFE5
 21553                           fsr1h	equ	0xFE2
 21554                           fsr1l	equ	0xFE1
 21555                           indf2	equ	0xFDF
 21556                           postinc2	equ	0xFDE
 21557                           postdec2	equ	0xFDD
 21558                           fsr2h	equ	0xFDA
 21559                           fsr2l	equ	0xFD9
 21560                           status	equ	0xFD8
 21561                           
 21562 ;; *************** function _SetEEPROMdefault *****************
 21563 ;; Defined at:
 21564 ;;		line 255 in file "EEPROM.c"
 21565 ;; Parameters:    Size  Location     Type
 21566 ;;		None
 21567 ;; Auto vars:     Size  Location     Type
 21568 ;;  j               1   94[BANK0 ] unsigned char 
 21569 ;;  i               1   93[BANK0 ] unsigned char 
 21570 ;;  k               1   92[BANK0 ] unsigned char 
 21571 ;; Return value:  Size  Location     Type
 21572 ;;		None               void
 21573 ;; Registers used:
 21574 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21575 ;; Tracked objects:
 21576 ;;		On entry : 0/0
 21577 ;;		On exit  : 0/0
 21578 ;;		Unchanged: 0/0
 21579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21581 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21582 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21583 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21584 ;;Total ram usage:        5 bytes
 21585 ;; Hardware stack levels used:    1
 21586 ;; Hardware stack levels required when called:   11
 21587 ;; This function calls:
 21588 ;;		_SyncGlobalToEEPROM
 21589 ;; This function is called by:
 21590 ;;		_Init_System
 21591 ;; This function uses a non-reentrant model
 21592 ;;
 21593                           
 21594                           	psect	text40
 21595  0073AA                     __ptext40:
 21596                           	opt stack 0
 21597  0073AA                     _SetEEPROMdefault:
 21598                           	opt stack 18
 21599                           
 21600                           ;EEPROM.c: 257: unsigned char i,j,k;
 21601                           ;EEPROM.c: 259: Global.BlueToothFlag = 0;
 21602                           
 21603                           ; BSR set to: 0
 21604                           ;incstack = 0
 21605  0073AA  0E00               	movlw	0
 21606  0073AC  0104               	movlb	4	; () banked
 21607  0073AE  6F00               	movwf	_Global& (0+255),b
 21608                           
 21609                           ;EEPROM.c: 260: Global.SWNECcode = 0x00FF00FF;
 21610  0073B0  0EFF               	movlw	255
 21611  0073B2  0104               	movlb	4	; () banked
 21612  0073B4  6F01               	movwf	(_Global+1)& (0+255),b
 21613  0073B6  0E00               	movlw	0
 21614  0073B8  6F02               	movwf	(_Global+2)& (0+255),b
 21615  0073BA  0EFF               	movlw	255
 21616  0073BC  6F03               	movwf	(_Global+3)& (0+255),b
 21617  0073BE  0E00               	movlw	0
 21618  0073C0  6F04               	movwf	(_Global+4)& (0+255),b
 21619                           
 21620                           ;EEPROM.c: 261: Global.EEPROMinitFlag = 0;
 21621  0073C2  0E00               	movlw	0
 21622  0073C4  0104               	movlb	4	; () banked
 21623  0073C6  6F2D               	movwf	(_Global+45)& (0+255),b
 21624                           
 21625                           ;EEPROM.c: 262: for(i=0; i< 20; i++)
 21626  0073C8  0E00               	movlw	0
 21627  0073CA  0100               	movlb	0	; () banked
 21628  0073CC  6FBD               	movwf	SetEEPROMdefault@i& (0+255),b
 21629  0073CE                     l14457:
 21630                           
 21631                           ; BSR set to: 0
 21632  0073CE  0E13               	movlw	19
 21633  0073D0  0100               	movlb	0	; () banked
 21634  0073D2  65BD               	cpfsgt	SetEEPROMdefault@i& (0+255),b
 21635  0073D4  D001               	goto	l14461
 21636                           
 21637                           ; BSR set to: 0
 21638  0073D6  D02F               	goto	l14477
 21639  0073D8                     l14461:
 21640                           
 21641                           ; BSR set to: 0
 21642                           ;EEPROM.c: 263: {
 21643                           ;EEPROM.c: 264: for(j=0; j < 2; j++)
 21644  0073D8  0E00               	movlw	0
 21645  0073DA  0100               	movlb	0	; () banked
 21646  0073DC  6FBE               	movwf	SetEEPROMdefault@j& (0+255),b
 21647  0073DE                     l14463:
 21648                           
 21649                           ; BSR set to: 0
 21650  0073DE  0E01               	movlw	1
 21651  0073E0  0100               	movlb	0	; () banked
 21652  0073E2  65BE               	cpfsgt	SetEEPROMdefault@j& (0+255),b
 21653  0073E4  D001               	goto	l14467
 21654                           
 21655                           ; BSR set to: 0
 21656  0073E6  D024               	goto	l14473
 21657  0073E8                     l14467:
 21658                           
 21659                           ; BSR set to: 0
 21660                           ;EEPROM.c: 265: {
 21661                           ;EEPROM.c: 266: Global.RemoteButtonNEC[i][j] = 0x00;
 21662  0073E8  0100               	movlb	0	; () banked
 21663  0073EA  51BD               	movf	SetEEPROMdefault@i& (0+255),w,b
 21664  0073EC  0D02               	mullw	2
 21665  0073EE  0E00               	movlw	low _Global
 21666  0073F0  0100               	movlb	0	; () banked
 21667  0073F2  6FBA               	movwf	??_SetEEPROMdefault& (0+255),b
 21668  0073F4  0E04               	movlw	high _Global
 21669  0073F6  0100               	movlb	0	; () banked
 21670  0073F8  6FBB               	movwf	(??_SetEEPROMdefault+1)& (0+255),b
 21671  0073FA  0E05               	movlw	5
 21672  0073FC  0100               	movlb	0	; () banked
 21673  0073FE  27BA               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21674  007400  0E00               	movlw	0
 21675  007402  23BB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21676  007404  50F3               	movf	prodl,w,c
 21677  007406  0100               	movlb	0	; () banked
 21678  007408  27BA               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21679  00740A  50F4               	movf	prodh,w,c
 21680  00740C  0100               	movlb	0	; () banked
 21681  00740E  23BB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21682  007410  0100               	movlb	0	; () banked
 21683  007412  51BE               	movf	SetEEPROMdefault@j& (0+255),w,b
 21684  007414  0D01               	mullw	1
 21685  007416  50F3               	movf	prodl,w,c
 21686  007418  0100               	movlb	0	; () banked
 21687  00741A  25BA               	addwf	??_SetEEPROMdefault& (0+255),w,b
 21688  00741C  6ED9               	movwf	fsr2l,c
 21689  00741E  50F4               	movf	prodh,w,c
 21690  007420  0100               	movlb	0	; () banked
 21691  007422  21BB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),w,b
 21692  007424  6EDA               	movwf	fsr2h,c
 21693  007426  0E00               	movlw	0
 21694  007428  6EDF               	movwf	indf2,c
 21695                           
 21696                           ; BSR set to: 0
 21697  00742A  0100               	movlb	0	; () banked
 21698  00742C  2BBE               	incf	SetEEPROMdefault@j& (0+255),f,b
 21699  00742E  D7D7               	goto	l14463
 21700  007430                     l14473:
 21701                           
 21702                           ; BSR set to: 0
 21703  007430  0100               	movlb	0	; () banked
 21704  007432  2BBD               	incf	SetEEPROMdefault@i& (0+255),f,b
 21705  007434  D7CC               	goto	l14457
 21706  007436                     l14477:
 21707                           
 21708                           ; BSR set to: 0
 21709                           ;EEPROM.c: 267: }
 21710                           ;EEPROM.c: 268: }
 21711                           ;EEPROM.c: 269: for(i=0; i< 15; i++)
 21712  007436  0E00               	movlw	0
 21713  007438  0100               	movlb	0	; () banked
 21714  00743A  6FBD               	movwf	SetEEPROMdefault@i& (0+255),b
 21715  00743C                     l14479:
 21716                           
 21717                           ; BSR set to: 0
 21718  00743C  0E0E               	movlw	14
 21719  00743E  0100               	movlb	0	; () banked
 21720  007440  65BD               	cpfsgt	SetEEPROMdefault@i& (0+255),b
 21721  007442  D001               	goto	l14483
 21722                           
 21723                           ; BSR set to: 0
 21724  007444  D043               	goto	l14509
 21725  007446                     l14483:
 21726                           
 21727                           ; BSR set to: 0
 21728                           ;EEPROM.c: 270: {
 21729                           ;EEPROM.c: 271: for(j=0; j < 3; j++)
 21730  007446  0E00               	movlw	0
 21731  007448  0100               	movlb	0	; () banked
 21732  00744A  6FBE               	movwf	SetEEPROMdefault@j& (0+255),b
 21733  00744C                     l14485:
 21734                           
 21735                           ; BSR set to: 0
 21736  00744C  0E02               	movlw	2
 21737  00744E  0100               	movlb	0	; () banked
 21738  007450  65BE               	cpfsgt	SetEEPROMdefault@j& (0+255),b
 21739  007452  D001               	goto	l14489
 21740                           
 21741                           ; BSR set to: 0
 21742  007454  D038               	goto	l14505
 21743  007456                     l14489:
 21744                           
 21745                           ; BSR set to: 0
 21746                           ;EEPROM.c: 272: {
 21747                           ;EEPROM.c: 273: for(k=0; k < 2; k++)
 21748  007456  0E00               	movlw	0
 21749  007458  0100               	movlb	0	; () banked
 21750  00745A  6FBC               	movwf	SetEEPROMdefault@k& (0+255),b
 21751  00745C                     l14491:
 21752                           
 21753                           ; BSR set to: 0
 21754  00745C  0E01               	movlw	1
 21755  00745E  0100               	movlb	0	; () banked
 21756  007460  65BC               	cpfsgt	SetEEPROMdefault@k& (0+255),b
 21757  007462  D001               	goto	l14495
 21758                           
 21759                           ; BSR set to: 0
 21760  007464  D02D               	goto	l14501
 21761  007466                     l14495:
 21762                           
 21763                           ; BSR set to: 0
 21764                           ;EEPROM.c: 274: {
 21765                           ;EEPROM.c: 275: Global.RemoteButtonRF[i][j][k] = 0x00;
 21766  007466  0100               	movlb	0	; () banked
 21767  007468  51BD               	movf	SetEEPROMdefault@i& (0+255),w,b
 21768  00746A  0D06               	mullw	6
 21769  00746C  0E00               	movlw	low _Global
 21770  00746E  0100               	movlb	0	; () banked
 21771  007470  6FBA               	movwf	??_SetEEPROMdefault& (0+255),b
 21772  007472  0E04               	movlw	high _Global
 21773  007474  0100               	movlb	0	; () banked
 21774  007476  6FBB               	movwf	(??_SetEEPROMdefault+1)& (0+255),b
 21775  007478  0E2E               	movlw	46
 21776  00747A  0100               	movlb	0	; () banked
 21777  00747C  27BA               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21778  00747E  0E00               	movlw	0
 21779  007480  23BB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21780  007482  50F3               	movf	prodl,w,c
 21781  007484  0100               	movlb	0	; () banked
 21782  007486  27BA               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21783  007488  50F4               	movf	prodh,w,c
 21784  00748A  0100               	movlb	0	; () banked
 21785  00748C  23BB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21786  00748E  0100               	movlb	0	; () banked
 21787  007490  51BE               	movf	SetEEPROMdefault@j& (0+255),w,b
 21788  007492  0D02               	mullw	2
 21789  007494  50F3               	movf	prodl,w,c
 21790  007496  0100               	movlb	0	; () banked
 21791  007498  27BA               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21792  00749A  50F4               	movf	prodh,w,c
 21793  00749C  0100               	movlb	0	; () banked
 21794  00749E  23BB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21795  0074A0  0100               	movlb	0	; () banked
 21796  0074A2  51BC               	movf	SetEEPROMdefault@k& (0+255),w,b
 21797  0074A4  0D01               	mullw	1
 21798  0074A6  50F3               	movf	prodl,w,c
 21799  0074A8  0100               	movlb	0	; () banked
 21800  0074AA  25BA               	addwf	??_SetEEPROMdefault& (0+255),w,b
 21801  0074AC  6ED9               	movwf	fsr2l,c
 21802  0074AE  50F4               	movf	prodh,w,c
 21803  0074B0  0100               	movlb	0	; () banked
 21804  0074B2  21BB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),w,b
 21805  0074B4  6EDA               	movwf	fsr2h,c
 21806  0074B6  0E00               	movlw	0
 21807  0074B8  6EDF               	movwf	indf2,c
 21808                           
 21809                           ; BSR set to: 0
 21810  0074BA  0100               	movlb	0	; () banked
 21811  0074BC  2BBC               	incf	SetEEPROMdefault@k& (0+255),f,b
 21812  0074BE  D7CE               	goto	l14491
 21813  0074C0                     l14501:
 21814                           
 21815                           ; BSR set to: 0
 21816  0074C0  0100               	movlb	0	; () banked
 21817  0074C2  2BBE               	incf	SetEEPROMdefault@j& (0+255),f,b
 21818  0074C4  D7C3               	goto	l14485
 21819  0074C6                     l14505:
 21820                           
 21821                           ; BSR set to: 0
 21822  0074C6  0100               	movlb	0	; () banked
 21823  0074C8  2BBD               	incf	SetEEPROMdefault@i& (0+255),f,b
 21824  0074CA  D7B8               	goto	l14479
 21825  0074CC                     l14509:
 21826                           
 21827                           ; BSR set to: 0
 21828                           ;EEPROM.c: 276: }
 21829                           ;EEPROM.c: 277: }
 21830                           ;EEPROM.c: 278: }
 21831                           ;EEPROM.c: 279: SyncGlobalToEEPROM();
 21832  0074CC  ECF8  F047         	call	_SyncGlobalToEEPROM	;wreg free
 21833  0074D0  0012               	return		;funcret
 21834  0074D2                     __end_of_SetEEPROMdefault:
 21835                           	opt stack 0
 21836                           tblptru	equ	0xFF8
 21837                           tblptrh	equ	0xFF7
 21838                           tblptrl	equ	0xFF6
 21839                           tablat	equ	0xFF5
 21840                           prodh	equ	0xFF4
 21841                           prodl	equ	0xFF3
 21842                           intcon	equ	0xFF2
 21843                           intcon2	equ	0xFF1
 21844                           indf0	equ	0xFEF
 21845                           postinc0	equ	0xFEE
 21846                           fsr0h	equ	0xFEA
 21847                           fsr0l	equ	0xFE9
 21848                           wreg	equ	0xFE8
 21849                           indf1	equ	0xFE7
 21850                           postdec1	equ	0xFE5
 21851                           fsr1h	equ	0xFE2
 21852                           fsr1l	equ	0xFE1
 21853                           indf2	equ	0xFDF
 21854                           postinc2	equ	0xFDE
 21855                           postdec2	equ	0xFDD
 21856                           fsr2h	equ	0xFDA
 21857                           fsr2l	equ	0xFD9
 21858                           status	equ	0xFD8
 21859                           
 21860 ;; *************** function _InitUART *****************
 21861 ;; Defined at:
 21862 ;;		line 80 in file "UART.c"
 21863 ;; Parameters:    Size  Location     Type
 21864 ;;  Baud            4  110[BANK0 ] unsigned long 
 21865 ;; Auto vars:     Size  Location     Type
 21866 ;;  temp            4    6[BANK1 ] unsigned long 
 21867 ;;  spbrg           2    3[BANK1 ] unsigned int 
 21868 ;;  config          1    5[BANK1 ] unsigned char 
 21869 ;; Return value:  Size  Location     Type
 21870 ;;		None               void
 21871 ;; Registers used:
 21872 ;;		wreg, status,2, status,0, cstack
 21873 ;; Tracked objects:
 21874 ;;		On entry : 0/0
 21875 ;;		On exit  : 0/0
 21876 ;;		Unchanged: 0/0
 21877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21878 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21879 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21880 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21881 ;;      Totals:         0       8      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21882 ;;Total ram usage:       18 bytes
 21883 ;; Hardware stack levels used:    1
 21884 ;; Hardware stack levels required when called:    9
 21885 ;; This function calls:
 21886 ;;		_ClearUSART
 21887 ;;		_Local_CloseUSART
 21888 ;;		_OpenUSART
 21889 ;;		_Round
 21890 ;;		___fttol
 21891 ;;		___lldiv
 21892 ;;		___lltoft
 21893 ;; This function is called by:
 21894 ;;		_Init_System
 21895 ;; This function uses a non-reentrant model
 21896 ;;
 21897                           
 21898                           	psect	text41
 21899  007954                     __ptext41:
 21900                           	opt stack 0
 21901  007954                     _InitUART:
 21902                           	opt stack 20
 21903                           
 21904                           ;UART.c: 82: unsigned long temp;
 21905                           ;UART.c: 83: unsigned char config = 0;
 21906                           
 21907                           ;incstack = 0
 21908  007954  0E00               	movlw	0
 21909  007956  0101               	movlb	1	; () banked
 21910  007958  6F05               	movwf	InitUART@config& (0+255),b
 21911                           
 21912                           ; BSR set to: 1
 21913                           ;UART.c: 84: unsigned int spbrg;
 21914                           ;UART.c: 86: Local_CloseUSART();
 21915  00795A  EC56  F04A         	call	_Local_CloseUSART	;wreg free
 21916                           
 21917                           ;UART.c: 91: config |= 0b00001000;
 21918  00795E  0101               	movlb	1	; () banked
 21919  007960  8705               	bsf	InitUART@config& (0+255),3,b
 21920                           
 21921                           ; BSR set to: 1
 21922                           ;UART.c: 92: config |= 0b00010000;
 21923  007962  0101               	movlb	1	; () banked
 21924  007964  8905               	bsf	InitUART@config& (0+255),4,b
 21925                           
 21926                           ; BSR set to: 1
 21927                           ;UART.c: 93: config &= ~0b00000010;
 21928  007966  0101               	movlb	1	; () banked
 21929  007968  9305               	bcf	InitUART@config& (0+255),1,b
 21930                           
 21931                           ; BSR set to: 1
 21932                           ;UART.c: 96: temp = (64000000L / Baud) - 1;
 21933  00796A  0E00               	movlw	0
 21934  00796C  0100               	movlb	0	; () banked
 21935  00796E  6F79               	movwf	___lldiv@dividend& (0+255),b
 21936  007970  0E90               	movlw	144
 21937  007972  6F7A               	movwf	(___lldiv@dividend+1)& (0+255),b
 21938  007974  0ED0               	movlw	208
 21939  007976  6F7B               	movwf	(___lldiv@dividend+2)& (0+255),b
 21940  007978  0E03               	movlw	3
 21941  00797A  6F7C               	movwf	(___lldiv@dividend+3)& (0+255),b
 21942  00797C  C0CE  F07D         	movff	InitUART@Baud,___lldiv@divisor
 21943  007980  C0CF  F07E         	movff	InitUART@Baud+1,___lldiv@divisor+1
 21944  007984  C0D0  F07F         	movff	InitUART@Baud+2,___lldiv@divisor+2
 21945  007988  C0D1  F080         	movff	InitUART@Baud+3,___lldiv@divisor+3
 21946  00798C  EC5D  F03F         	call	___lldiv	;wreg free
 21947  007990  0EFF               	movlw	255
 21948  007992  0100               	movlb	0	; () banked
 21949  007994  2579               	addwf	?___lldiv& (0+255),w,b
 21950  007996  0101               	movlb	1	; () banked
 21951  007998  6F06               	movwf	InitUART@temp& (0+255),b
 21952  00799A  0EFF               	movlw	255
 21953  00799C  0100               	movlb	0	; () banked
 21954  00799E  217A               	addwfc	(?___lldiv+1)& (0+255),w,b
 21955  0079A0  0101               	movlb	1	; () banked
 21956  0079A2  6F07               	movwf	(InitUART@temp+1)& (0+255),b
 21957  0079A4  0EFF               	movlw	255
 21958  0079A6  0100               	movlb	0	; () banked
 21959  0079A8  217B               	addwfc	(?___lldiv+2)& (0+255),w,b
 21960  0079AA  0101               	movlb	1	; () banked
 21961  0079AC  6F08               	movwf	(InitUART@temp+2)& (0+255),b
 21962  0079AE  0EFF               	movlw	255
 21963  0079B0  0100               	movlb	0	; () banked
 21964  0079B2  217C               	addwfc	(?___lldiv+3)& (0+255),w,b
 21965  0079B4  0101               	movlb	1	; () banked
 21966  0079B6  6F09               	movwf	(InitUART@temp+3)& (0+255),b
 21967                           
 21968                           ; BSR set to: 1
 21969                           ;UART.c: 97: temp = (temp >> 2) - 1;
 21970  0079B8  C106  F0D2         	movff	InitUART@temp,??_InitUART
 21971  0079BC  C107  F0D3         	movff	InitUART@temp+1,??_InitUART+1
 21972  0079C0  C108  F0D4         	movff	InitUART@temp+2,??_InitUART+2
 21973  0079C4  C109  F0D5         	movff	InitUART@temp+3,??_InitUART+3
 21974  0079C8  0E03               	movlw	3
 21975  0079CA  D006               	goto	u17770
 21976  0079CC                     u17775:
 21977  0079CC  0100               	movlb	0	; () banked
 21978  0079CE  90D8               	bcf	status,0,c
 21979  0079D0  33D5               	rrcf	(??_InitUART+3)& (0+255),f,b
 21980  0079D2  33D4               	rrcf	(??_InitUART+2)& (0+255),f,b
 21981  0079D4  33D3               	rrcf	(??_InitUART+1)& (0+255),f,b
 21982  0079D6  33D2               	rrcf	??_InitUART& (0+255),f,b
 21983  0079D8                     u17770:
 21984  0079D8  2EE8               	decfsz	wreg,f,c
 21985  0079DA  D7F8               	goto	u17775
 21986  0079DC  0EFF               	movlw	255
 21987  0079DE  0100               	movlb	0	; () banked
 21988  0079E0  25D2               	addwf	??_InitUART& (0+255),w,b
 21989  0079E2  0101               	movlb	1	; () banked
 21990  0079E4  6F06               	movwf	InitUART@temp& (0+255),b
 21991  0079E6  0EFF               	movlw	255
 21992  0079E8  0100               	movlb	0	; () banked
 21993  0079EA  21D3               	addwfc	(??_InitUART+1)& (0+255),w,b
 21994  0079EC  0101               	movlb	1	; () banked
 21995  0079EE  6F07               	movwf	(InitUART@temp+1)& (0+255),b
 21996  0079F0  0EFF               	movlw	255
 21997  0079F2  0100               	movlb	0	; () banked
 21998  0079F4  21D4               	addwfc	(??_InitUART+2)& (0+255),w,b
 21999  0079F6  0101               	movlb	1	; () banked
 22000  0079F8  6F08               	movwf	(InitUART@temp+2)& (0+255),b
 22001  0079FA  0EFF               	movlw	255
 22002  0079FC  0100               	movlb	0	; () banked
 22003  0079FE  21D5               	addwfc	(??_InitUART+3)& (0+255),w,b
 22004  007A00  0101               	movlb	1	; () banked
 22005  007A02  6F09               	movwf	(InitUART@temp+3)& (0+255),b
 22006                           
 22007                           ; BSR set to: 1
 22008                           ;UART.c: 98: spbrg = (unsigned int) Round(temp);
 22009  007A04  C106  F081         	movff	InitUART@temp,___lltoft@c
 22010  007A08  C107  F082         	movff	InitUART@temp+1,___lltoft@c+1
 22011  007A0C  C108  F083         	movff	InitUART@temp+2,___lltoft@c+2
 22012  007A10  C109  F084         	movff	InitUART@temp+3,___lltoft@c+3
 22013  007A14  EC81  F044         	call	___lltoft	;wreg free
 22014  007A18  C081  F0C7         	movff	?___lltoft,Round@input
 22015  007A1C  C082  F0C8         	movff	?___lltoft+1,Round@input+1
 22016  007A20  C083  F0C9         	movff	?___lltoft+2,Round@input+2
 22017  007A24  ECAD  F045         	call	_Round	;wreg free
 22018  007A28  C0C7  F100         	movff	?_Round,_InitUART$3798
 22019  007A2C  C0C8  F101         	movff	?_Round+1,_InitUART$3798+1
 22020  007A30  C0C9  F102         	movff	?_Round+2,_InitUART$3798+2
 22021                           
 22022                           ;UART.c: 98: spbrg = (unsigned int) Round(temp);
 22023  007A34  C100  F0B8         	movff	_InitUART$3798,___fttol@f1
 22024  007A38  C101  F0B9         	movff	_InitUART$3798+1,___fttol@f1+1
 22025  007A3C  C102  F0BA         	movff	_InitUART$3798+2,___fttol@f1+2
 22026  007A40  EC85  F038         	call	___fttol	;wreg free
 22027  007A44  C0B8  F103         	movff	?___fttol,InitUART@spbrg
 22028  007A48  C0B9  F104         	movff	?___fttol+1,InitUART@spbrg+1
 22029                           
 22030                           ;UART.c: 100: BAUDCONbits.BRG16 = 1;
 22031  007A4C  86B8               	bsf	4024,3,c	;volatile
 22032                           
 22033                           ;UART.c: 102: ClearUSART();
 22034  007A4E  EC5D  F04A         	call	_ClearUSART	;wreg free
 22035                           
 22036                           ;UART.c: 103: OpenUSART(config, spbrg);
 22037  007A52  C103  F079         	movff	InitUART@spbrg,OpenUSART@spbrg
 22038  007A56  C104  F07A         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
 22039  007A5A  0101               	movlb	1	; () banked
 22040  007A5C  5105               	movf	InitUART@config& (0+255),w,b
 22041  007A5E  ECC1  F044         	call	_OpenUSART
 22042                           
 22043                           ;UART.c: 105: PIR1bits.RCIF = 0;
 22044  007A62  9A9E               	bcf	3998,5,c	;volatile
 22045                           
 22046                           ;UART.c: 106: PIE1bits.RCIE = 1;
 22047  007A64  8A9D               	bsf	3997,5,c	;volatile
 22048                           
 22049                           ;UART.c: 107: INTCONbits.PEIE = 1;
 22050  007A66  8CF2               	bsf	intcon,6,c	;volatile
 22051  007A68  0012               	return		;funcret
 22052  007A6A                     __end_of_InitUART:
 22053                           	opt stack 0
 22054                           tblptru	equ	0xFF8
 22055                           tblptrh	equ	0xFF7
 22056                           tblptrl	equ	0xFF6
 22057                           tablat	equ	0xFF5
 22058                           prodh	equ	0xFF4
 22059                           prodl	equ	0xFF3
 22060                           intcon	equ	0xFF2
 22061                           intcon2	equ	0xFF1
 22062                           indf0	equ	0xFEF
 22063                           postinc0	equ	0xFEE
 22064                           fsr0h	equ	0xFEA
 22065                           fsr0l	equ	0xFE9
 22066                           wreg	equ	0xFE8
 22067                           indf1	equ	0xFE7
 22068                           postdec1	equ	0xFE5
 22069                           fsr1h	equ	0xFE2
 22070                           fsr1l	equ	0xFE1
 22071                           indf2	equ	0xFDF
 22072                           postinc2	equ	0xFDE
 22073                           postdec2	equ	0xFDD
 22074                           fsr2h	equ	0xFDA
 22075                           fsr2l	equ	0xFD9
 22076                           status	equ	0xFD8
 22077                           
 22078 ;; *************** function _Round *****************
 22079 ;; Defined at:
 22080 ;;		line 155 in file "MISC.c"
 22081 ;; Parameters:    Size  Location     Type
 22082 ;;  input           3  103[BANK0 ] unsigned char 
 22083 ;; Auto vars:     Size  Location     Type
 22084 ;;  temp            4  106[BANK0 ] long 
 22085 ;; Return value:  Size  Location     Type
 22086 ;;                  3  103[BANK0 ] long 
 22087 ;; Registers used:
 22088 ;;		wreg, status,2, status,0, cstack
 22089 ;; Tracked objects:
 22090 ;;		On entry : 0/0
 22091 ;;		On exit  : 0/0
 22092 ;;		Unchanged: 0/0
 22093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22094 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22095 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22097 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22098 ;;Total ram usage:        7 bytes
 22099 ;; Hardware stack levels used:    1
 22100 ;; Hardware stack levels required when called:    8
 22101 ;; This function calls:
 22102 ;;		___altoft
 22103 ;;		___ftadd
 22104 ;;		___fttol
 22105 ;; This function is called by:
 22106 ;;		_InitUART
 22107 ;; This function uses a non-reentrant model
 22108 ;;
 22109                           
 22110                           	psect	text42
 22111  008B5A                     __ptext42:
 22112                           	opt stack 0
 22113  008B5A                     _Round:
 22114                           	opt stack 20
 22115                           
 22116                           ;MISC.c: 157: long temp = (long)(input + 0.5);
 22117                           
 22118                           ;incstack = 0
 22119  008B5A  0E00               	movlw	0
 22120  008B5C  0100               	movlb	0	; () banked
 22121  008B5E  6FAF               	movwf	___ftadd@f2& (0+255),b
 22122  008B60  0E00               	movlw	0
 22123  008B62  0100               	movlb	0	; () banked
 22124  008B64  6FB0               	movwf	(___ftadd@f2+1)& (0+255),b
 22125  008B66  0E3F               	movlw	63
 22126  008B68  0100               	movlb	0	; () banked
 22127  008B6A  6FB1               	movwf	(___ftadd@f2+2)& (0+255),b
 22128  008B6C  C0C7  F0AC         	movff	Round@input,___ftadd@f1
 22129  008B70  C0C8  F0AD         	movff	Round@input+1,___ftadd@f1+1
 22130  008B74  C0C9  F0AE         	movff	Round@input+2,___ftadd@f1+2
 22131  008B78  EC8F  F02D         	call	___ftadd	;wreg free
 22132  008B7C  C0AC  F0B8         	movff	?___ftadd,___fttol@f1
 22133  008B80  C0AD  F0B9         	movff	?___ftadd+1,___fttol@f1+1
 22134  008B84  C0AE  F0BA         	movff	?___ftadd+2,___fttol@f1+2
 22135  008B88  EC85  F038         	call	___fttol	;wreg free
 22136  008B8C  C0B8  F0CA         	movff	?___fttol,Round@temp
 22137  008B90  C0B9  F0CB         	movff	?___fttol+1,Round@temp+1
 22138  008B94  C0BA  F0CC         	movff	?___fttol+2,Round@temp+2
 22139  008B98  C0BB  F0CD         	movff	?___fttol+3,Round@temp+3
 22140                           
 22141                           ;MISC.c: 159: return temp;
 22142  008B9C  C0CA  F081         	movff	Round@temp,___altoft@c
 22143  008BA0  C0CB  F082         	movff	Round@temp+1,___altoft@c+1
 22144  008BA4  C0CC  F083         	movff	Round@temp+2,___altoft@c+2
 22145  008BA8  C0CD  F084         	movff	Round@temp+3,___altoft@c+3
 22146  008BAC  EC84  F042         	call	___altoft	;wreg free
 22147  008BB0  C081  F0C7         	movff	?___altoft,?_Round
 22148  008BB4  C082  F0C8         	movff	?___altoft+1,?_Round+1
 22149  008BB8  C083  F0C9         	movff	?___altoft+2,?_Round+2
 22150  008BBC  0012               	return	
 22151  008BBE  0012               	return		;funcret
 22152  008BC0                     __end_of_Round:
 22153                           	opt stack 0
 22154                           tblptru	equ	0xFF8
 22155                           tblptrh	equ	0xFF7
 22156                           tblptrl	equ	0xFF6
 22157                           tablat	equ	0xFF5
 22158                           prodh	equ	0xFF4
 22159                           prodl	equ	0xFF3
 22160                           intcon	equ	0xFF2
 22161                           intcon2	equ	0xFF1
 22162                           indf0	equ	0xFEF
 22163                           postinc0	equ	0xFEE
 22164                           fsr0h	equ	0xFEA
 22165                           fsr0l	equ	0xFE9
 22166                           wreg	equ	0xFE8
 22167                           indf1	equ	0xFE7
 22168                           postdec1	equ	0xFE5
 22169                           fsr1h	equ	0xFE2
 22170                           fsr1l	equ	0xFE1
 22171                           indf2	equ	0xFDF
 22172                           postinc2	equ	0xFDE
 22173                           postdec2	equ	0xFDD
 22174                           fsr2h	equ	0xFDA
 22175                           fsr2l	equ	0xFD9
 22176                           status	equ	0xFD8
 22177                           
 22178 ;; *************** function ___altoft *****************
 22179 ;; Defined at:
 22180 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
 22181 ;; Parameters:    Size  Location     Type
 22182 ;;  c               4   33[BANK0 ] long 
 22183 ;; Auto vars:     Size  Location     Type
 22184 ;;  sign            1   42[BANK0 ] unsigned char 
 22185 ;;  exp             1   41[BANK0 ] unsigned char 
 22186 ;; Return value:  Size  Location     Type
 22187 ;;                  3   33[BANK0 ] float 
 22188 ;; Registers used:
 22189 ;;		wreg, status,2, status,0, cstack
 22190 ;; Tracked objects:
 22191 ;;		On entry : 0/0
 22192 ;;		On exit  : 0/0
 22193 ;;		Unchanged: 0/0
 22194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22195 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22196 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22197 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22198 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22199 ;;Total ram usage:       10 bytes
 22200 ;; Hardware stack levels used:    1
 22201 ;; Hardware stack levels required when called:    7
 22202 ;; This function calls:
 22203 ;;		___ftpack
 22204 ;; This function is called by:
 22205 ;;		_Round
 22206 ;; This function uses a non-reentrant model
 22207 ;;
 22208                           
 22209                           	psect	text43
 22210  008508                     __ptext43:
 22211                           	opt stack 0
 22212  008508                     ___altoft:
 22213                           	opt stack 20
 22214                           
 22215                           ;incstack = 0
 22216  008508  0E00               	movlw	0
 22217  00850A  0100               	movlb	0	; () banked
 22218  00850C  6F8A               	movwf	___altoft@sign& (0+255),b
 22219  00850E  0E8E               	movlw	142
 22220  008510  0100               	movlb	0	; () banked
 22221  008512  6F89               	movwf	___altoft@exp& (0+255),b
 22222                           
 22223                           ; BSR set to: 0
 22224  008514  0100               	movlb	0	; () banked
 22225  008516  AF84               	btfss	(___altoft@c+3)& (0+255),7,b
 22226  008518  D016               	goto	l13851
 22227                           
 22228                           ; BSR set to: 0
 22229  00851A  0100               	movlb	0	; () banked
 22230  00851C  1F84               	comf	(___altoft@c+3)& (0+255),f,b
 22231  00851E  1F83               	comf	(___altoft@c+2)& (0+255),f,b
 22232  008520  1F82               	comf	(___altoft@c+1)& (0+255),f,b
 22233  008522  6D81               	negf	___altoft@c& (0+255),b
 22234  008524  0E00               	movlw	0
 22235  008526  2382               	addwfc	(___altoft@c+1)& (0+255),f,b
 22236  008528  2383               	addwfc	(___altoft@c+2)& (0+255),f,b
 22237  00852A  2384               	addwfc	(___altoft@c+3)& (0+255),f,b
 22238                           
 22239                           ; BSR set to: 0
 22240  00852C  0E01               	movlw	1
 22241  00852E  0100               	movlb	0	; () banked
 22242  008530  6F8A               	movwf	___altoft@sign& (0+255),b
 22243                           
 22244                           ; BSR set to: 0
 22245  008532  D009               	goto	l13851
 22246  008534                     l13849:
 22247                           
 22248                           ; BSR set to: 0
 22249  008534  0100               	movlb	0	; () banked
 22250  008536  90D8               	bcf	status,0,c
 22251  008538  3384               	rrcf	(___altoft@c+3)& (0+255),f,b
 22252  00853A  3383               	rrcf	(___altoft@c+2)& (0+255),f,b
 22253  00853C  3382               	rrcf	(___altoft@c+1)& (0+255),f,b
 22254  00853E  3381               	rrcf	___altoft@c& (0+255),f,b
 22255  008540  0100               	movlb	0	; () banked
 22256  008542  2B89               	incf	___altoft@exp& (0+255),f,b
 22257  008544  D000               	goto	l13851
 22258  008546                     l13851:
 22259                           
 22260                           ; BSR set to: 0
 22261  008546  0E00               	movlw	0
 22262  008548  0100               	movlb	0	; () banked
 22263  00854A  1581               	andwf	___altoft@c& (0+255),w,b
 22264  00854C  0100               	movlb	0	; () banked
 22265  00854E  6F85               	movwf	??___altoft& (0+255),b
 22266  008550  0E00               	movlw	0
 22267  008552  0100               	movlb	0	; () banked
 22268  008554  1582               	andwf	(___altoft@c+1)& (0+255),w,b
 22269  008556  0100               	movlb	0	; () banked
 22270  008558  6F86               	movwf	(??___altoft+1)& (0+255),b
 22271  00855A  0E00               	movlw	0
 22272  00855C  0100               	movlb	0	; () banked
 22273  00855E  1583               	andwf	(___altoft@c+2)& (0+255),w,b
 22274  008560  0100               	movlb	0	; () banked
 22275  008562  6F87               	movwf	(??___altoft+2)& (0+255),b
 22276  008564  0EFF               	movlw	255
 22277  008566  0100               	movlb	0	; () banked
 22278  008568  1584               	andwf	(___altoft@c+3)& (0+255),w,b
 22279  00856A  0100               	movlb	0	; () banked
 22280  00856C  6F88               	movwf	(??___altoft+3)& (0+255),b
 22281  00856E  0100               	movlb	0	; () banked
 22282  008570  5185               	movf	??___altoft& (0+255),w,b
 22283  008572  0100               	movlb	0	; () banked
 22284  008574  1186               	iorwf	(??___altoft+1)& (0+255),w,b
 22285  008576  0100               	movlb	0	; () banked
 22286  008578  1187               	iorwf	(??___altoft+2)& (0+255),w,b
 22287  00857A  0100               	movlb	0	; () banked
 22288  00857C  1188               	iorwf	(??___altoft+3)& (0+255),w,b
 22289  00857E  A4D8               	btfss	status,2,c
 22290  008580  D7D9               	goto	l13849
 22291                           
 22292                           ; BSR set to: 0
 22293                           
 22294                           ; BSR set to: 0
 22295  008582  C081  F079         	movff	___altoft@c,___ftpack@arg
 22296  008586  C082  F07A         	movff	___altoft@c+1,___ftpack@arg+1
 22297  00858A  C083  F07B         	movff	___altoft@c+2,___ftpack@arg+2
 22298  00858E  C089  F07C         	movff	___altoft@exp,___ftpack@exp
 22299  008592  C08A  F07D         	movff	___altoft@sign,___ftpack@sign
 22300  008596  ECFC  F03A         	call	___ftpack	;wreg free
 22301  00859A  C079  F081         	movff	?___ftpack,?___altoft
 22302  00859E  C07A  F082         	movff	?___ftpack+1,?___altoft+1
 22303  0085A2  C07B  F083         	movff	?___ftpack+2,?___altoft+2
 22304  0085A6  0012               	return	
 22305  0085A8  0012               	return		;funcret
 22306  0085AA                     __end_of___altoft:
 22307                           	opt stack 0
 22308                           tblptru	equ	0xFF8
 22309                           tblptrh	equ	0xFF7
 22310                           tblptrl	equ	0xFF6
 22311                           tablat	equ	0xFF5
 22312                           prodh	equ	0xFF4
 22313                           prodl	equ	0xFF3
 22314                           intcon	equ	0xFF2
 22315                           intcon2	equ	0xFF1
 22316                           indf0	equ	0xFEF
 22317                           postinc0	equ	0xFEE
 22318                           fsr0h	equ	0xFEA
 22319                           fsr0l	equ	0xFE9
 22320                           wreg	equ	0xFE8
 22321                           indf1	equ	0xFE7
 22322                           postdec1	equ	0xFE5
 22323                           fsr1h	equ	0xFE2
 22324                           fsr1l	equ	0xFE1
 22325                           indf2	equ	0xFDF
 22326                           postinc2	equ	0xFDE
 22327                           postdec2	equ	0xFDD
 22328                           fsr2h	equ	0xFDA
 22329                           fsr2l	equ	0xFD9
 22330                           status	equ	0xFD8
 22331                           
 22332 ;; *************** function _OpenUSART *****************
 22333 ;; Defined at:
 22334 ;;		line 115 in file "UART.c"
 22335 ;; Parameters:    Size  Location     Type
 22336 ;;  config          1    wreg     unsigned char 
 22337 ;;  spbrg           2   25[BANK0 ] unsigned int 
 22338 ;; Auto vars:     Size  Location     Type
 22339 ;;  config          1   27[BANK0 ] unsigned char 
 22340 ;; Return value:  Size  Location     Type
 22341 ;;		None               void
 22342 ;; Registers used:
 22343 ;;		wreg, status,2
 22344 ;; Tracked objects:
 22345 ;;		On entry : 0/0
 22346 ;;		On exit  : 0/0
 22347 ;;		Unchanged: 0/0
 22348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22349 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22350 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22352 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22353 ;;Total ram usage:        3 bytes
 22354 ;; Hardware stack levels used:    1
 22355 ;; Hardware stack levels required when called:    6
 22356 ;; This function calls:
 22357 ;;		Nothing
 22358 ;; This function is called by:
 22359 ;;		_InitUART
 22360 ;; This function uses a non-reentrant model
 22361 ;;
 22362                           
 22363                           	psect	text44
 22364  008982                     __ptext44:
 22365                           	opt stack 0
 22366  008982                     _OpenUSART:
 22367                           	opt stack 22
 22368                           
 22369                           ;incstack = 0
 22370                           ;OpenUSART@config stored from wreg
 22371  008982  0100               	movlb	0	; () banked
 22372  008984  6F7B               	movwf	OpenUSART@config& (0+255),b
 22373                           
 22374                           ; BSR set to: 0
 22375                           ;UART.c: 117: TXSTA = 0;
 22376  008986  0E00               	movlw	0
 22377  008988  6EAC               	movwf	4012,c	;volatile
 22378                           
 22379                           ;UART.c: 118: RCSTA = 0;
 22380  00898A  0E00               	movlw	0
 22381  00898C  6EAB               	movwf	4011,c	;volatile
 22382                           
 22383                           ; BSR set to: 0
 22384                           ;UART.c: 120: if(config&0x01)
 22385  00898E  0100               	movlb	0	; () banked
 22386  008990  A17B               	btfss	OpenUSART@config& (0+255),0,b
 22387  008992  D002               	goto	l13949
 22388                           
 22389                           ; BSR set to: 0
 22390                           ;UART.c: 121: {
 22391                           ;UART.c: 122: TXSTAbits.SYNC = 1;
 22392  008994  88AC               	bsf	4012,4,c	;volatile
 22393  008996  D000               	goto	l13949
 22394  008998                     l13949:
 22395                           
 22396                           ; BSR set to: 0
 22397                           ;UART.c: 123: }
 22398                           ;UART.c: 125: if(config&0x02)
 22399  008998  0100               	movlb	0	; () banked
 22400  00899A  A37B               	btfss	OpenUSART@config& (0+255),1,b
 22401  00899C  D003               	goto	l13953
 22402                           
 22403                           ; BSR set to: 0
 22404                           ;UART.c: 126: {
 22405                           ;UART.c: 127: TXSTAbits.TX9 = 1;
 22406  00899E  8CAC               	bsf	4012,6,c	;volatile
 22407                           
 22408                           ;UART.c: 128: RCSTAbits.RX9 = 1;
 22409  0089A0  8CAB               	bsf	4011,6,c	;volatile
 22410  0089A2  D000               	goto	l13953
 22411  0089A4                     l13953:
 22412                           
 22413                           ; BSR set to: 0
 22414                           ;UART.c: 129: }
 22415                           ;UART.c: 131: if(config&0x04)
 22416  0089A4  0100               	movlb	0	; () banked
 22417  0089A6  A57B               	btfss	OpenUSART@config& (0+255),2,b
 22418  0089A8  D002               	goto	l13957
 22419                           
 22420                           ; BSR set to: 0
 22421                           ;UART.c: 132: {
 22422                           ;UART.c: 133: TXSTAbits.CSRC = 1;
 22423  0089AA  8EAC               	bsf	4012,7,c	;volatile
 22424  0089AC  D000               	goto	l13957
 22425  0089AE                     l13957:
 22426                           
 22427                           ; BSR set to: 0
 22428                           ;UART.c: 134: }
 22429                           ;UART.c: 136: if(config&0x08)
 22430  0089AE  0100               	movlb	0	; () banked
 22431  0089B0  A77B               	btfss	OpenUSART@config& (0+255),3,b
 22432  0089B2  D002               	goto	l634
 22433                           
 22434                           ; BSR set to: 0
 22435                           ;UART.c: 137: {
 22436                           ;UART.c: 138: RCSTAbits.CREN = 1;
 22437  0089B4  88AB               	bsf	4011,4,c	;volatile
 22438                           
 22439                           ;UART.c: 139: }
 22440  0089B6  D002               	goto	l13961
 22441  0089B8                     l634:
 22442                           
 22443                           ; BSR set to: 0
 22444                           ;UART.c: 140: else
 22445                           ;UART.c: 141: {
 22446                           ;UART.c: 142: RCSTAbits.SREN = 1;
 22447  0089B8  8AAB               	bsf	4011,5,c	;volatile
 22448  0089BA  D000               	goto	l13961
 22449  0089BC                     l13961:
 22450                           
 22451                           ; BSR set to: 0
 22452                           ;UART.c: 143: }
 22453                           ;UART.c: 145: if(config&0x10)
 22454  0089BC  0100               	movlb	0	; () banked
 22455  0089BE  A97B               	btfss	OpenUSART@config& (0+255),4,b
 22456  0089C0  D002               	goto	l13965
 22457                           
 22458                           ; BSR set to: 0
 22459                           ;UART.c: 146: {
 22460                           ;UART.c: 147: TXSTAbits.BRGH = 1;
 22461  0089C2  84AC               	bsf	4012,2,c	;volatile
 22462  0089C4  D000               	goto	l13965
 22463  0089C6                     l13965:
 22464                           
 22465                           ; BSR set to: 0
 22466                           ;UART.c: 148: }
 22467                           ;UART.c: 150: if(config&0x20)
 22468  0089C6  0100               	movlb	0	; () banked
 22469  0089C8  AB7B               	btfss	OpenUSART@config& (0+255),5,b
 22470  0089CA  D002               	goto	l13969
 22471                           
 22472                           ; BSR set to: 0
 22473                           ;UART.c: 151: {
 22474                           ;UART.c: 152: RCSTAbits.ADEN = 1;
 22475  0089CC  86AB               	bsf	4011,3,c	;volatile
 22476  0089CE  D000               	goto	l13969
 22477  0089D0                     l13969:
 22478                           
 22479                           ; BSR set to: 0
 22480                           ;UART.c: 153: }
 22481                           ;UART.c: 155: if(config&0x40)
 22482  0089D0  0100               	movlb	0	; () banked
 22483  0089D2  AD7B               	btfss	OpenUSART@config& (0+255),6,b
 22484  0089D4  D003               	goto	l638
 22485                           
 22486                           ; BSR set to: 0
 22487                           ;UART.c: 156: {
 22488                           ;UART.c: 157: PIR1bits.RCIF = 0;
 22489  0089D6  9A9E               	bcf	3998,5,c	;volatile
 22490                           
 22491                           ;UART.c: 158: PIE1bits.RCIE = 1;
 22492  0089D8  8A9D               	bsf	3997,5,c	;volatile
 22493                           
 22494                           ;UART.c: 160: }
 22495  0089DA  D002               	goto	l13973
 22496  0089DC                     l638:
 22497                           
 22498                           ; BSR set to: 0
 22499                           ;UART.c: 161: else
 22500                           ;UART.c: 162: {
 22501                           ;UART.c: 163: PIE1bits.RCIE = 0;
 22502  0089DC  9A9D               	bcf	3997,5,c	;volatile
 22503  0089DE  D000               	goto	l13973
 22504  0089E0                     l13973:
 22505                           
 22506                           ; BSR set to: 0
 22507                           ;UART.c: 164: }
 22508                           ;UART.c: 166: if(config&0x80)
 22509  0089E0  0100               	movlb	0	; () banked
 22510  0089E2  AF7B               	btfss	OpenUSART@config& (0+255),7,b
 22511  0089E4  D003               	goto	l640
 22512                           
 22513                           ; BSR set to: 0
 22514                           ;UART.c: 167: {
 22515                           ;UART.c: 168: PIR1bits.TXIF = 0;
 22516  0089E6  989E               	bcf	3998,4,c	;volatile
 22517                           
 22518                           ;UART.c: 169: PIE1bits.TXIE = 1;
 22519  0089E8  889D               	bsf	3997,4,c	;volatile
 22520                           
 22521                           ;UART.c: 170: }
 22522  0089EA  D001               	goto	l641
 22523  0089EC                     l640:
 22524                           
 22525                           ; BSR set to: 0
 22526                           ;UART.c: 171: else
 22527                           ;UART.c: 172: {
 22528                           ;UART.c: 173: PIE1bits.TXIE = 0;
 22529  0089EC  989D               	bcf	3997,4,c	;volatile
 22530  0089EE                     l641:
 22531                           
 22532                           ; BSR set to: 0
 22533                           ;UART.c: 174: }
 22534                           ;UART.c: 176: SPBRG = spbrg;
 22535  0089EE  C079  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 22536                           
 22537                           ; BSR set to: 0
 22538                           ;UART.c: 177: SPBRGH = spbrg >> 8;
 22539  0089F2  0100               	movlb	0	; () banked
 22540  0089F4  517A               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
 22541  0089F6  6EB0               	movwf	4016,c	;volatile
 22542                           
 22543                           ; BSR set to: 0
 22544                           ;UART.c: 179: TXSTAbits.TXEN = 1;
 22545  0089F8  8AAC               	bsf	4012,5,c	;volatile
 22546                           
 22547                           ; BSR set to: 0
 22548                           ;UART.c: 180: RCSTAbits.SPEN = 1;
 22549  0089FA  8EAB               	bsf	4011,7,c	;volatile
 22550                           
 22551                           ; BSR set to: 0
 22552  0089FC  0012               	return		;funcret
 22553  0089FE                     __end_of_OpenUSART:
 22554                           	opt stack 0
 22555                           tblptru	equ	0xFF8
 22556                           tblptrh	equ	0xFF7
 22557                           tblptrl	equ	0xFF6
 22558                           tablat	equ	0xFF5
 22559                           prodh	equ	0xFF4
 22560                           prodl	equ	0xFF3
 22561                           intcon	equ	0xFF2
 22562                           intcon2	equ	0xFF1
 22563                           indf0	equ	0xFEF
 22564                           postinc0	equ	0xFEE
 22565                           fsr0h	equ	0xFEA
 22566                           fsr0l	equ	0xFE9
 22567                           wreg	equ	0xFE8
 22568                           indf1	equ	0xFE7
 22569                           postdec1	equ	0xFE5
 22570                           fsr1h	equ	0xFE2
 22571                           fsr1l	equ	0xFE1
 22572                           indf2	equ	0xFDF
 22573                           postinc2	equ	0xFDE
 22574                           postdec2	equ	0xFDD
 22575                           fsr2h	equ	0xFDA
 22576                           fsr2l	equ	0xFD9
 22577                           status	equ	0xFD8
 22578                           
 22579 ;; *************** function _Local_CloseUSART *****************
 22580 ;; Defined at:
 22581 ;;		line 64 in file "UART.c"
 22582 ;; Parameters:    Size  Location     Type
 22583 ;;		None
 22584 ;; Auto vars:     Size  Location     Type
 22585 ;;		None
 22586 ;; Return value:  Size  Location     Type
 22587 ;;		None               void
 22588 ;; Registers used:
 22589 ;;		None
 22590 ;; Tracked objects:
 22591 ;;		On entry : 0/0
 22592 ;;		On exit  : 0/0
 22593 ;;		Unchanged: 0/0
 22594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22599 ;;Total ram usage:        0 bytes
 22600 ;; Hardware stack levels used:    1
 22601 ;; Hardware stack levels required when called:    6
 22602 ;; This function calls:
 22603 ;;		Nothing
 22604 ;; This function is called by:
 22605 ;;		_InitUART
 22606 ;; This function uses a non-reentrant model
 22607 ;;
 22608                           
 22609                           	psect	text45
 22610  0094AC                     __ptext45:
 22611                           	opt stack 0
 22612  0094AC                     _Local_CloseUSART:
 22613                           	opt stack 22
 22614                           
 22615                           ;UART.c: 66: PIE1bits.RCIE = 0;
 22616                           
 22617                           ; BSR set to: 0
 22618                           ;incstack = 0
 22619  0094AC  9A9D               	bcf	3997,5,c	;volatile
 22620                           
 22621                           ;UART.c: 67: PIE1bits.TXIE = 0;
 22622  0094AE  989D               	bcf	3997,4,c	;volatile
 22623                           
 22624                           ;UART.c: 68: RCSTAbits.SPEN = 0;
 22625  0094B0  9EAB               	bcf	4011,7,c	;volatile
 22626                           
 22627                           ;UART.c: 69: RCSTAbits.CREN = 0;
 22628  0094B2  98AB               	bcf	4011,4,c	;volatile
 22629                           
 22630                           ;UART.c: 70: RCSTAbits.FERR = 0;
 22631  0094B4  94AB               	bcf	4011,2,c	;volatile
 22632                           
 22633                           ;UART.c: 71: TXSTAbits.TXEN = 0;
 22634  0094B6  9AAC               	bcf	4012,5,c	;volatile
 22635  0094B8  0012               	return		;funcret
 22636  0094BA                     __end_of_Local_CloseUSART:
 22637                           	opt stack 0
 22638                           tblptru	equ	0xFF8
 22639                           tblptrh	equ	0xFF7
 22640                           tblptrl	equ	0xFF6
 22641                           tablat	equ	0xFF5
 22642                           prodh	equ	0xFF4
 22643                           prodl	equ	0xFF3
 22644                           intcon	equ	0xFF2
 22645                           intcon2	equ	0xFF1
 22646                           indf0	equ	0xFEF
 22647                           postinc0	equ	0xFEE
 22648                           fsr0h	equ	0xFEA
 22649                           fsr0l	equ	0xFE9
 22650                           wreg	equ	0xFE8
 22651                           indf1	equ	0xFE7
 22652                           postdec1	equ	0xFE5
 22653                           fsr1h	equ	0xFE2
 22654                           fsr1l	equ	0xFE1
 22655                           indf2	equ	0xFDF
 22656                           postinc2	equ	0xFDE
 22657                           postdec2	equ	0xFDD
 22658                           fsr2h	equ	0xFDA
 22659                           fsr2l	equ	0xFD9
 22660                           status	equ	0xFD8
 22661                           
 22662 ;; *************** function _ClearUSART *****************
 22663 ;; Defined at:
 22664 ;;		line 216 in file "UART.c"
 22665 ;; Parameters:    Size  Location     Type
 22666 ;;		None
 22667 ;; Auto vars:     Size  Location     Type
 22668 ;;		None
 22669 ;; Return value:  Size  Location     Type
 22670 ;;		None               void
 22671 ;; Registers used:
 22672 ;;		wreg, status,2, cstack
 22673 ;; Tracked objects:
 22674 ;;		On entry : 0/0
 22675 ;;		On exit  : 0/0
 22676 ;;		Unchanged: 0/0
 22677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22682 ;;Total ram usage:        0 bytes
 22683 ;; Hardware stack levels used:    1
 22684 ;; Hardware stack levels required when called:    7
 22685 ;; This function calls:
 22686 ;;		_ReadUSART
 22687 ;; This function is called by:
 22688 ;;		_main
 22689 ;;		_InitUART
 22690 ;;		_UseBluetooth
 22691 ;; This function uses a non-reentrant model
 22692 ;;
 22693                           
 22694                           	psect	text46
 22695  0094BA                     __ptext46:
 22696                           	opt stack 0
 22697  0094BA                     _ClearUSART:
 22698                           	opt stack 22
 22699                           
 22700                           ;UART.c: 218: ReadUSART();
 22701                           
 22702                           ;incstack = 0
 22703  0094BA  ECDC  F049         	call	_ReadUSART	;wreg free
 22704                           
 22705                           ;UART.c: 219: ReadUSART();
 22706  0094BE  ECDC  F049         	call	_ReadUSART	;wreg free
 22707                           
 22708                           ;UART.c: 220: ReadUSART();
 22709  0094C2  ECDC  F049         	call	_ReadUSART	;wreg free
 22710  0094C6  0012               	return		;funcret
 22711  0094C8                     __end_of_ClearUSART:
 22712                           	opt stack 0
 22713                           tblptru	equ	0xFF8
 22714                           tblptrh	equ	0xFF7
 22715                           tblptrl	equ	0xFF6
 22716                           tablat	equ	0xFF5
 22717                           prodh	equ	0xFF4
 22718                           prodl	equ	0xFF3
 22719                           intcon	equ	0xFF2
 22720                           intcon2	equ	0xFF1
 22721                           indf0	equ	0xFEF
 22722                           postinc0	equ	0xFEE
 22723                           fsr0h	equ	0xFEA
 22724                           fsr0l	equ	0xFE9
 22725                           wreg	equ	0xFE8
 22726                           indf1	equ	0xFE7
 22727                           postdec1	equ	0xFE5
 22728                           fsr1h	equ	0xFE2
 22729                           fsr1l	equ	0xFE1
 22730                           indf2	equ	0xFDF
 22731                           postinc2	equ	0xFDE
 22732                           postdec2	equ	0xFDD
 22733                           fsr2h	equ	0xFDA
 22734                           fsr2l	equ	0xFD9
 22735                           status	equ	0xFD8
 22736                           
 22737 ;; *************** function _ReadUSART *****************
 22738 ;; Defined at:
 22739 ;;		line 227 in file "UART.c"
 22740 ;; Parameters:    Size  Location     Type
 22741 ;;		None
 22742 ;; Auto vars:     Size  Location     Type
 22743 ;;  data            1   25[BANK0 ] unsigned char 
 22744 ;; Return value:  Size  Location     Type
 22745 ;;                  1    wreg      unsigned char 
 22746 ;; Registers used:
 22747 ;;		wreg, status,2
 22748 ;; Tracked objects:
 22749 ;;		On entry : 0/0
 22750 ;;		On exit  : 0/0
 22751 ;;		Unchanged: 0/0
 22752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22754 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22756 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22757 ;;Total ram usage:        1 bytes
 22758 ;; Hardware stack levels used:    1
 22759 ;; Hardware stack levels required when called:    6
 22760 ;; This function calls:
 22761 ;;		Nothing
 22762 ;; This function is called by:
 22763 ;;		_ClearUSART
 22764 ;; This function uses a non-reentrant model
 22765 ;;
 22766                           
 22767                           	psect	text47
 22768  0093B8                     __ptext47:
 22769                           	opt stack 0
 22770  0093B8                     _ReadUSART:
 22771                           	opt stack 22
 22772                           
 22773                           ;UART.c: 229: unsigned char data;
 22774                           ;UART.c: 231: if(RCSTAbits.OERR)
 22775                           
 22776                           ;incstack = 0
 22777  0093B8  A2AB               	btfss	4011,1,c	;volatile
 22778  0093BA  D004               	goto	l661
 22779                           
 22780                           ;UART.c: 232: {
 22781                           ;UART.c: 234: RCSTAbits.CREN = 0;
 22782  0093BC  98AB               	bcf	4011,4,c	;volatile
 22783                           
 22784                           ;UART.c: 235: RCSTAbits.CREN = 1;
 22785  0093BE  88AB               	bsf	4011,4,c	;volatile
 22786                           
 22787                           ;UART.c: 236: return 0;
 22788  0093C0  0E00               	movlw	0
 22789  0093C2  0012               	return	
 22790  0093C4                     l661:
 22791                           
 22792                           ;UART.c: 237: }
 22793                           ;UART.c: 239: data = RCREG;
 22794  0093C4  CFAE F079          	movff	4014,ReadUSART@data	;volatile
 22795                           
 22796                           ;UART.c: 240: return (data);
 22797  0093C8  0100               	movlb	0	; () banked
 22798  0093CA  5179               	movf	ReadUSART@data& (0+255),w,b
 22799  0093CC  0012               	return	
 22800                           
 22801                           ; BSR set to: 0
 22802  0093CE  0012               	return		;funcret
 22803  0093D0                     __end_of_ReadUSART:
 22804                           	opt stack 0
 22805                           tblptru	equ	0xFF8
 22806                           tblptrh	equ	0xFF7
 22807                           tblptrl	equ	0xFF6
 22808                           tablat	equ	0xFF5
 22809                           prodh	equ	0xFF4
 22810                           prodl	equ	0xFF3
 22811                           intcon	equ	0xFF2
 22812                           intcon2	equ	0xFF1
 22813                           indf0	equ	0xFEF
 22814                           postinc0	equ	0xFEE
 22815                           fsr0h	equ	0xFEA
 22816                           fsr0l	equ	0xFE9
 22817                           wreg	equ	0xFE8
 22818                           indf1	equ	0xFE7
 22819                           postdec1	equ	0xFE5
 22820                           fsr1h	equ	0xFE2
 22821                           fsr1l	equ	0xFE1
 22822                           indf2	equ	0xFDF
 22823                           postinc2	equ	0xFDE
 22824                           postdec2	equ	0xFDD
 22825                           fsr2h	equ	0xFDA
 22826                           fsr2l	equ	0xFD9
 22827                           status	equ	0xFD8
 22828                           
 22829 ;; *************** function _InitTimers *****************
 22830 ;; Defined at:
 22831 ;;		line 51 in file "Timer.c"
 22832 ;; Parameters:    Size  Location     Type
 22833 ;;		None
 22834 ;; Auto vars:     Size  Location     Type
 22835 ;;		None
 22836 ;; Return value:  Size  Location     Type
 22837 ;;		None               void
 22838 ;; Registers used:
 22839 ;;		wreg, status,2, cstack
 22840 ;; Tracked objects:
 22841 ;;		On entry : 0/0
 22842 ;;		On exit  : 0/0
 22843 ;;		Unchanged: 0/0
 22844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22849 ;;Total ram usage:        0 bytes
 22850 ;; Hardware stack levels used:    1
 22851 ;; Hardware stack levels required when called:    7
 22852 ;; This function calls:
 22853 ;;		_InitTimer1
 22854 ;;		_InitTimer2
 22855 ;;		_InitTimer3
 22856 ;; This function is called by:
 22857 ;;		_Init_System
 22858 ;; This function uses a non-reentrant model
 22859 ;;
 22860                           
 22861                           	psect	text48
 22862  009442                     __ptext48:
 22863                           	opt stack 0
 22864  009442                     _InitTimers:
 22865                           	opt stack 22
 22866                           
 22867                           ;Timer.c: 53: InitTimer1();
 22868                           
 22869                           ;incstack = 0
 22870  009442  EC6B  F04A         	call	_InitTimer1	;wreg free
 22871                           
 22872                           ;Timer.c: 54: (PIE1bits.TMR1IE = TRUE);
 22873  009446  809D               	bsf	3997,0,c	;volatile
 22874                           
 22875                           ;Timer.c: 55: InitTimer2();
 22876  009448  EC64  F04A         	call	_InitTimer2	;wreg free
 22877                           
 22878                           ;Timer.c: 56: (PIE1bits.TMR2IE = TRUE);
 22879  00944C  829D               	bsf	3997,1,c	;volatile
 22880                           
 22881                           ;Timer.c: 57: InitTimer3();
 22882  00944E  EC9A  F04A         	call	_InitTimer3	;wreg free
 22883                           
 22884                           ;Timer.c: 58: (PIE2bits.TMR3IE = TRUE);
 22885  009452  82A0               	bsf	4000,1,c	;volatile
 22886  009454  0012               	return		;funcret
 22887  009456                     __end_of_InitTimers:
 22888                           	opt stack 0
 22889                           tblptru	equ	0xFF8
 22890                           tblptrh	equ	0xFF7
 22891                           tblptrl	equ	0xFF6
 22892                           tablat	equ	0xFF5
 22893                           prodh	equ	0xFF4
 22894                           prodl	equ	0xFF3
 22895                           intcon	equ	0xFF2
 22896                           intcon2	equ	0xFF1
 22897                           indf0	equ	0xFEF
 22898                           postinc0	equ	0xFEE
 22899                           fsr0h	equ	0xFEA
 22900                           fsr0l	equ	0xFE9
 22901                           wreg	equ	0xFE8
 22902                           indf1	equ	0xFE7
 22903                           postdec1	equ	0xFE5
 22904                           fsr1h	equ	0xFE2
 22905                           fsr1l	equ	0xFE1
 22906                           indf2	equ	0xFDF
 22907                           postinc2	equ	0xFDE
 22908                           postdec2	equ	0xFDD
 22909                           fsr2h	equ	0xFDA
 22910                           fsr2l	equ	0xFD9
 22911                           status	equ	0xFD8
 22912                           
 22913 ;; *************** function _InitTimer3 *****************
 22914 ;; Defined at:
 22915 ;;		line 163 in file "Timer.c"
 22916 ;; Parameters:    Size  Location     Type
 22917 ;;		None
 22918 ;; Auto vars:     Size  Location     Type
 22919 ;;		None
 22920 ;; Return value:  Size  Location     Type
 22921 ;;		None               void
 22922 ;; Registers used:
 22923 ;;		wreg, status,2
 22924 ;; Tracked objects:
 22925 ;;		On entry : 0/0
 22926 ;;		On exit  : 0/0
 22927 ;;		Unchanged: 0/0
 22928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22933 ;;Total ram usage:        0 bytes
 22934 ;; Hardware stack levels used:    1
 22935 ;; Hardware stack levels required when called:    6
 22936 ;; This function calls:
 22937 ;;		Nothing
 22938 ;; This function is called by:
 22939 ;;		_InitTimers
 22940 ;; This function uses a non-reentrant model
 22941 ;;
 22942                           
 22943                           	psect	text49
 22944  009534                     __ptext49:
 22945                           	opt stack 0
 22946  009534                     _InitTimer3:
 22947                           	opt stack 22
 22948                           
 22949                           ;Timer.c: 165: T3CONbits.RD16 = TRUE;
 22950                           
 22951                           ;incstack = 0
 22952  009534  8EB1               	bsf	4017,7,c	;volatile
 22953                           
 22954                           ;Timer.c: 166: T3CONbits.T3CKPS = 0x3;
 22955  009536  0E30               	movlw	48
 22956  009538  12B1               	iorwf	4017,f,c	;volatile
 22957                           
 22958                           ;Timer.c: 167: T3CONbits.TMR3CS = FALSE;
 22959  00953A  92B1               	bcf	4017,1,c	;volatile
 22960  00953C  0012               	return		;funcret
 22961  00953E                     __end_of_InitTimer3:
 22962                           	opt stack 0
 22963                           tblptru	equ	0xFF8
 22964                           tblptrh	equ	0xFF7
 22965                           tblptrl	equ	0xFF6
 22966                           tablat	equ	0xFF5
 22967                           prodh	equ	0xFF4
 22968                           prodl	equ	0xFF3
 22969                           intcon	equ	0xFF2
 22970                           intcon2	equ	0xFF1
 22971                           indf0	equ	0xFEF
 22972                           postinc0	equ	0xFEE
 22973                           fsr0h	equ	0xFEA
 22974                           fsr0l	equ	0xFE9
 22975                           wreg	equ	0xFE8
 22976                           indf1	equ	0xFE7
 22977                           postdec1	equ	0xFE5
 22978                           fsr1h	equ	0xFE2
 22979                           fsr1l	equ	0xFE1
 22980                           indf2	equ	0xFDF
 22981                           postinc2	equ	0xFDE
 22982                           postdec2	equ	0xFDD
 22983                           fsr2h	equ	0xFDA
 22984                           fsr2l	equ	0xFD9
 22985                           status	equ	0xFD8
 22986                           
 22987 ;; *************** function _InitTimer2 *****************
 22988 ;; Defined at:
 22989 ;;		line 138 in file "Timer.c"
 22990 ;; Parameters:    Size  Location     Type
 22991 ;;		None
 22992 ;; Auto vars:     Size  Location     Type
 22993 ;;		None
 22994 ;; Return value:  Size  Location     Type
 22995 ;;		None               void
 22996 ;; Registers used:
 22997 ;;		wreg, status,2
 22998 ;; Tracked objects:
 22999 ;;		On entry : 0/0
 23000 ;;		On exit  : 0/0
 23001 ;;		Unchanged: 0/0
 23002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23007 ;;Total ram usage:        0 bytes
 23008 ;; Hardware stack levels used:    1
 23009 ;; Hardware stack levels required when called:    6
 23010 ;; This function calls:
 23011 ;;		Nothing
 23012 ;; This function is called by:
 23013 ;;		_InitTimers
 23014 ;; This function uses a non-reentrant model
 23015 ;;
 23016                           
 23017                           	psect	text50
 23018  0094C8                     __ptext50:
 23019                           	opt stack 0
 23020  0094C8                     _InitTimer2:
 23021                           	opt stack 22
 23022                           
 23023                           ;Timer.c: 140: T2CONbits.T2OUTPS = 0xE;
 23024                           
 23025                           ;incstack = 0
 23026  0094C8  50CA               	movf	4042,w,c	;volatile
 23027  0094CA  0B87               	andlw	-121
 23028  0094CC  0970               	iorlw	112
 23029  0094CE  6ECA               	movwf	4042,c	;volatile
 23030                           
 23031                           ;Timer.c: 141: T2CONbits.T2CKPS = 0x3;
 23032  0094D0  0E03               	movlw	3
 23033  0094D2  12CA               	iorwf	4042,f,c	;volatile
 23034  0094D4  0012               	return		;funcret
 23035  0094D6                     __end_of_InitTimer2:
 23036                           	opt stack 0
 23037                           tblptru	equ	0xFF8
 23038                           tblptrh	equ	0xFF7
 23039                           tblptrl	equ	0xFF6
 23040                           tablat	equ	0xFF5
 23041                           prodh	equ	0xFF4
 23042                           prodl	equ	0xFF3
 23043                           intcon	equ	0xFF2
 23044                           intcon2	equ	0xFF1
 23045                           indf0	equ	0xFEF
 23046                           postinc0	equ	0xFEE
 23047                           fsr0h	equ	0xFEA
 23048                           fsr0l	equ	0xFE9
 23049                           wreg	equ	0xFE8
 23050                           indf1	equ	0xFE7
 23051                           postdec1	equ	0xFE5
 23052                           fsr1h	equ	0xFE2
 23053                           fsr1l	equ	0xFE1
 23054                           indf2	equ	0xFDF
 23055                           postinc2	equ	0xFDE
 23056                           postdec2	equ	0xFDD
 23057                           fsr2h	equ	0xFDA
 23058                           fsr2l	equ	0xFD9
 23059                           status	equ	0xFD8
 23060                           
 23061 ;; *************** function _InitTimer1 *****************
 23062 ;; Defined at:
 23063 ;;		line 109 in file "Timer.c"
 23064 ;; Parameters:    Size  Location     Type
 23065 ;;		None
 23066 ;; Auto vars:     Size  Location     Type
 23067 ;;		None
 23068 ;; Return value:  Size  Location     Type
 23069 ;;		None               void
 23070 ;; Registers used:
 23071 ;;		wreg, status,2
 23072 ;; Tracked objects:
 23073 ;;		On entry : 0/0
 23074 ;;		On exit  : 0/0
 23075 ;;		Unchanged: 0/0
 23076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23081 ;;Total ram usage:        0 bytes
 23082 ;; Hardware stack levels used:    1
 23083 ;; Hardware stack levels required when called:    6
 23084 ;; This function calls:
 23085 ;;		Nothing
 23086 ;; This function is called by:
 23087 ;;		_InitTimers
 23088 ;; This function uses a non-reentrant model
 23089 ;;
 23090                           
 23091                           	psect	text51
 23092  0094D6                     __ptext51:
 23093                           	opt stack 0
 23094  0094D6                     _InitTimer1:
 23095                           	opt stack 22
 23096                           
 23097                           ;Timer.c: 111: T1CONbits.RD16 = TRUE;
 23098                           
 23099                           ;incstack = 0
 23100  0094D6  8ECD               	bsf	4045,7,c	;volatile
 23101                           
 23102                           ;Timer.c: 112: T1CONbits.T1RUN = FALSE;
 23103  0094D8  9CCD               	bcf	4045,6,c	;volatile
 23104                           
 23105                           ;Timer.c: 113: T1CONbits.T1CKPS = 0x3;
 23106  0094DA  0E30               	movlw	48
 23107  0094DC  12CD               	iorwf	4045,f,c	;volatile
 23108                           
 23109                           ;Timer.c: 114: T1CONbits.T1OSCEN = FALSE;
 23110  0094DE  96CD               	bcf	4045,3,c	;volatile
 23111                           
 23112                           ;Timer.c: 115: T1CONbits.TMR1CS = FALSE;
 23113  0094E0  92CD               	bcf	4045,1,c	;volatile
 23114  0094E2  0012               	return		;funcret
 23115  0094E4                     __end_of_InitTimer1:
 23116                           	opt stack 0
 23117                           tblptru	equ	0xFF8
 23118                           tblptrh	equ	0xFF7
 23119                           tblptrl	equ	0xFF6
 23120                           tablat	equ	0xFF5
 23121                           prodh	equ	0xFF4
 23122                           prodl	equ	0xFF3
 23123                           intcon	equ	0xFF2
 23124                           intcon2	equ	0xFF1
 23125                           indf0	equ	0xFEF
 23126                           postinc0	equ	0xFEE
 23127                           fsr0h	equ	0xFEA
 23128                           fsr0l	equ	0xFE9
 23129                           wreg	equ	0xFE8
 23130                           indf1	equ	0xFE7
 23131                           postdec1	equ	0xFE5
 23132                           fsr1h	equ	0xFE2
 23133                           fsr1l	equ	0xFE1
 23134                           indf2	equ	0xFDF
 23135                           postinc2	equ	0xFDE
 23136                           postdec2	equ	0xFDD
 23137                           fsr2h	equ	0xFDA
 23138                           fsr2l	equ	0xFD9
 23139                           status	equ	0xFD8
 23140                           
 23141 ;; *************** function _InitIR *****************
 23142 ;; Defined at:
 23143 ;;		line 80 in file "IR.c"
 23144 ;; Parameters:    Size  Location     Type
 23145 ;;		None
 23146 ;; Auto vars:     Size  Location     Type
 23147 ;;		None
 23148 ;; Return value:  Size  Location     Type
 23149 ;;		None               void
 23150 ;; Registers used:
 23151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23152 ;; Tracked objects:
 23153 ;;		On entry : 0/0
 23154 ;;		On exit  : 0/0
 23155 ;;		Unchanged: 0/0
 23156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23161 ;;Total ram usage:        0 bytes
 23162 ;; Hardware stack levels used:    1
 23163 ;; Hardware stack levels required when called:    7
 23164 ;; This function calls:
 23165 ;;		_InitTimer0
 23166 ;;		_ReadIRpin
 23167 ;;		_ResetTimer0
 23168 ;;		_cleanBuffer16bit
 23169 ;; This function is called by:
 23170 ;;		_Init_System
 23171 ;; This function uses a non-reentrant model
 23172 ;;
 23173                           
 23174                           	psect	text52
 23175  008FA8                     __ptext52:
 23176                           	opt stack 0
 23177  008FA8                     _InitIR:
 23178                           	opt stack 22
 23179                           
 23180                           ;IR.c: 83: (IOCBbits.IOCB4 = 1);
 23181                           
 23182                           ;incstack = 0
 23183  008FA8  887D               	bsf	3965,4,c	;volatile
 23184                           
 23185                           ;IR.c: 85: IRpinOLD = ReadIRpin();
 23186  008FAA  EC72  F04A         	call	_ReadIRpin	;wreg free
 23187  008FAE  6E2E               	movwf	_IRpinOLD,c
 23188                           
 23189                           ;IR.c: 87: InitTimer0();
 23190  008FB0  EC47  F04A         	call	_InitTimer0	;wreg free
 23191                           
 23192                           ;IR.c: 89: cleanBuffer16bit(IRRawCode, 100);
 23193  008FB4  0E00               	movlw	low _IRRawCode
 23194  008FB6  0100               	movlb	0	; () banked
 23195  008FB8  6F79               	movwf	cleanBuffer16bit@data& (0+255),b
 23196  008FBA  0E07               	movlw	high _IRRawCode
 23197  008FBC  0100               	movlb	0	; () banked
 23198  008FBE  6F7A               	movwf	(cleanBuffer16bit@data+1)& (0+255),b
 23199  008FC0  0E00               	movlw	0
 23200  008FC2  0100               	movlb	0	; () banked
 23201  008FC4  6F7C               	movwf	(cleanBuffer16bit@count+1)& (0+255),b
 23202  008FC6  0E64               	movlw	100
 23203  008FC8  6F7B               	movwf	cleanBuffer16bit@count& (0+255),b
 23204  008FCA  EC77  F046         	call	_cleanBuffer16bit	;wreg free
 23205                           
 23206                           ;IR.c: 90: IR_NEC = 0;
 23207  008FCE  0E00               	movlw	0
 23208  008FD0  0100               	movlb	0	; () banked
 23209  008FD2  6FE1               	movwf	_IR_NEC& (0+255),b
 23210  008FD4  0E00               	movlw	0
 23211  008FD6  6FE2               	movwf	(_IR_NEC+1)& (0+255),b
 23212  008FD8  0E00               	movlw	0
 23213  008FDA  6FE3               	movwf	(_IR_NEC+2)& (0+255),b
 23214  008FDC  0E00               	movlw	0
 23215  008FDE  6FE4               	movwf	(_IR_NEC+3)& (0+255),b
 23216                           
 23217                           ; BSR set to: 0
 23218                           ;IR.c: 91: (T0CONbits.TMR0ON = 0);
 23219  008FE0  9ED5               	bcf	4053,7,c	;volatile
 23220                           
 23221                           ; BSR set to: 0
 23222                           ;IR.c: 93: ResetTimer0();
 23223  008FE2  EC9F  F04A         	call	_ResetTimer0	;wreg free
 23224                           
 23225                           ;IR.c: 95: (INTCONbits.TMR0IE = 0);
 23226  008FE6  9AF2               	bcf	intcon,5,c	;volatile
 23227                           
 23228                           ;IR.c: 96: INTCONbits.TMR0IF = 0;
 23229  008FE8  94F2               	bcf	intcon,2,c	;volatile
 23230                           
 23231                           ;IR.c: 98: INTCONbits.RBIF = 0;
 23232  008FEA  90F2               	bcf	intcon,0,c	;volatile
 23233                           
 23234                           ;IR.c: 99: INTCONbits.RBIE = 1;
 23235  008FEC  86F2               	bsf	intcon,3,c	;volatile
 23236  008FEE  0012               	return		;funcret
 23237  008FF0                     __end_of_InitIR:
 23238                           	opt stack 0
 23239                           tblptru	equ	0xFF8
 23240                           tblptrh	equ	0xFF7
 23241                           tblptrl	equ	0xFF6
 23242                           tablat	equ	0xFF5
 23243                           prodh	equ	0xFF4
 23244                           prodl	equ	0xFF3
 23245                           intcon	equ	0xFF2
 23246                           intcon2	equ	0xFF1
 23247                           indf0	equ	0xFEF
 23248                           postinc0	equ	0xFEE
 23249                           fsr0h	equ	0xFEA
 23250                           fsr0l	equ	0xFE9
 23251                           wreg	equ	0xFE8
 23252                           indf1	equ	0xFE7
 23253                           postdec1	equ	0xFE5
 23254                           fsr1h	equ	0xFE2
 23255                           fsr1l	equ	0xFE1
 23256                           indf2	equ	0xFDF
 23257                           postinc2	equ	0xFDE
 23258                           postdec2	equ	0xFDD
 23259                           fsr2h	equ	0xFDA
 23260                           fsr2l	equ	0xFD9
 23261                           status	equ	0xFD8
 23262                           
 23263 ;; *************** function _cleanBuffer16bit *****************
 23264 ;; Defined at:
 23265 ;;		line 141 in file "MISC.c"
 23266 ;; Parameters:    Size  Location     Type
 23267 ;;  data            2   25[BANK0 ] PTR unsigned int 
 23268 ;;		 -> IRRawCode(200), 
 23269 ;;  count           2   27[BANK0 ] int 
 23270 ;; Auto vars:     Size  Location     Type
 23271 ;;  i               1   32[BANK0 ] unsigned char 
 23272 ;; Return value:  Size  Location     Type
 23273 ;;		None               void
 23274 ;; Registers used:
 23275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23276 ;; Tracked objects:
 23277 ;;		On entry : 0/0
 23278 ;;		On exit  : 0/0
 23279 ;;		Unchanged: 0/0
 23280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23281 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23282 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23283 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23284 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23285 ;;Total ram usage:        8 bytes
 23286 ;; Hardware stack levels used:    1
 23287 ;; Hardware stack levels required when called:    6
 23288 ;; This function calls:
 23289 ;;		Nothing
 23290 ;; This function is called by:
 23291 ;;		_InitIR
 23292 ;; This function uses a non-reentrant model
 23293 ;;
 23294                           
 23295                           	psect	text53
 23296  008CEE                     __ptext53:
 23297                           	opt stack 0
 23298  008CEE                     _cleanBuffer16bit:
 23299                           	opt stack 22
 23300                           
 23301                           ;MISC.c: 143: unsigned char i=0;
 23302                           
 23303                           ;incstack = 0
 23304  008CEE  0E00               	movlw	0
 23305  008CF0  0100               	movlb	0	; () banked
 23306  008CF2  6F80               	movwf	cleanBuffer16bit@i& (0+255),b
 23307                           
 23308                           ;MISC.c: 144: for(i=0; i<count;i++)
 23309  008CF4  0E00               	movlw	0
 23310  008CF6  0100               	movlb	0	; () banked
 23311  008CF8  6F80               	movwf	cleanBuffer16bit@i& (0+255),b
 23312  008CFA  D012               	goto	l13907
 23313  008CFC                     l13903:
 23314                           
 23315                           ; BSR set to: 0
 23316                           ;MISC.c: 145: {
 23317                           ;MISC.c: 146: data[i]= 0;
 23318  008CFC  0100               	movlb	0	; () banked
 23319  008CFE  5180               	movf	cleanBuffer16bit@i& (0+255),w,b
 23320  008D00  0D02               	mullw	2
 23321  008D02  50F3               	movf	prodl,w,c
 23322  008D04  0100               	movlb	0	; () banked
 23323  008D06  2579               	addwf	cleanBuffer16bit@data& (0+255),w,b
 23324  008D08  6ED9               	movwf	fsr2l,c
 23325  008D0A  50F4               	movf	prodh,w,c
 23326  008D0C  0100               	movlb	0	; () banked
 23327  008D0E  217A               	addwfc	(cleanBuffer16bit@data+1)& (0+255),w,b
 23328  008D10  6EDA               	movwf	fsr2h,c
 23329  008D12  0E00               	movlw	0
 23330  008D14  6EDE               	movwf	postinc2,c
 23331  008D16  0E00               	movlw	0
 23332  008D18  6EDD               	movwf	postdec2,c
 23333                           
 23334                           ; BSR set to: 0
 23335  008D1A  0100               	movlb	0	; () banked
 23336  008D1C  2B80               	incf	cleanBuffer16bit@i& (0+255),f,b
 23337  008D1E  D000               	goto	l13907
 23338  008D20                     l13907:
 23339                           
 23340                           ; BSR set to: 0
 23341  008D20  0100               	movlb	0	; () banked
 23342  008D22  5180               	movf	cleanBuffer16bit@i& (0+255),w,b
 23343  008D24  0100               	movlb	0	; () banked
 23344  008D26  6F7D               	movwf	??_cleanBuffer16bit& (0+255),b
 23345  008D28  6B7E               	clrf	(??_cleanBuffer16bit+1)& (0+255),b
 23346  008D2A  0100               	movlb	0	; () banked
 23347  008D2C  517B               	movf	cleanBuffer16bit@count& (0+255),w,b
 23348  008D2E  0100               	movlb	0	; () banked
 23349  008D30  5D7D               	subwf	??_cleanBuffer16bit& (0+255),w,b
 23350  008D32  0100               	movlb	0	; () banked
 23351  008D34  517E               	movf	(??_cleanBuffer16bit+1)& (0+255),w,b
 23352  008D36  0A80               	xorlw	128
 23353  008D38  0100               	movlb	0	; () banked
 23354  008D3A  6F7F               	movwf	(??_cleanBuffer16bit+2)& (0+255),b
 23355  008D3C  0100               	movlb	0	; () banked
 23356  008D3E  517C               	movf	(cleanBuffer16bit@count+1)& (0+255),w,b
 23357  008D40  0A80               	xorlw	128
 23358  008D42  0100               	movlb	0	; () banked
 23359  008D44  597F               	subwfb	(??_cleanBuffer16bit+2)& (0+255),w,b
 23360  008D46  A0D8               	btfss	status,0,c
 23361  008D48  D7D9               	goto	l13903
 23362                           
 23363                           ; BSR set to: 0
 23364                           
 23365                           ; BSR set to: 0
 23366  008D4A  0012               	return		;funcret
 23367  008D4C                     __end_of_cleanBuffer16bit:
 23368                           	opt stack 0
 23369                           tblptru	equ	0xFF8
 23370                           tblptrh	equ	0xFF7
 23371                           tblptrl	equ	0xFF6
 23372                           tablat	equ	0xFF5
 23373                           prodh	equ	0xFF4
 23374                           prodl	equ	0xFF3
 23375                           intcon	equ	0xFF2
 23376                           intcon2	equ	0xFF1
 23377                           indf0	equ	0xFEF
 23378                           postinc0	equ	0xFEE
 23379                           fsr0h	equ	0xFEA
 23380                           fsr0l	equ	0xFE9
 23381                           wreg	equ	0xFE8
 23382                           indf1	equ	0xFE7
 23383                           postdec1	equ	0xFE5
 23384                           fsr1h	equ	0xFE2
 23385                           fsr1l	equ	0xFE1
 23386                           indf2	equ	0xFDF
 23387                           postinc2	equ	0xFDE
 23388                           postdec2	equ	0xFDD
 23389                           fsr2h	equ	0xFDA
 23390                           fsr2l	equ	0xFD9
 23391                           status	equ	0xFD8
 23392                           
 23393 ;; *************** function _ResetTimer0 *****************
 23394 ;; Defined at:
 23395 ;;		line 79 in file "Timer.c"
 23396 ;; Parameters:    Size  Location     Type
 23397 ;;		None
 23398 ;; Auto vars:     Size  Location     Type
 23399 ;;		None
 23400 ;; Return value:  Size  Location     Type
 23401 ;;		None               void
 23402 ;; Registers used:
 23403 ;;		wreg, status,2
 23404 ;; Tracked objects:
 23405 ;;		On entry : 0/0
 23406 ;;		On exit  : 0/0
 23407 ;;		Unchanged: 0/0
 23408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23413 ;;Total ram usage:        0 bytes
 23414 ;; Hardware stack levels used:    1
 23415 ;; Hardware stack levels required when called:    6
 23416 ;; This function calls:
 23417 ;;		Nothing
 23418 ;; This function is called by:
 23419 ;;		_InitIR
 23420 ;; This function uses a non-reentrant model
 23421 ;;
 23422                           
 23423                           	psect	text54
 23424  00953E                     __ptext54:
 23425                           	opt stack 0
 23426  00953E                     _ResetTimer0:
 23427                           	opt stack 22
 23428                           
 23429                           ;Timer.c: 85: TMR0H = 0;
 23430                           
 23431                           ; BSR set to: 0
 23432                           ;incstack = 0
 23433  00953E  0E00               	movlw	0
 23434  009540  6ED7               	movwf	4055,c	;volatile
 23435                           
 23436                           ;Timer.c: 86: TMR0L = 2;
 23437  009542  0E02               	movlw	2
 23438  009544  6ED6               	movwf	4054,c	;volatile
 23439  009546  0012               	return		;funcret
 23440  009548                     __end_of_ResetTimer0:
 23441                           	opt stack 0
 23442                           tblptru	equ	0xFF8
 23443                           tblptrh	equ	0xFF7
 23444                           tblptrl	equ	0xFF6
 23445                           tablat	equ	0xFF5
 23446                           prodh	equ	0xFF4
 23447                           prodl	equ	0xFF3
 23448                           intcon	equ	0xFF2
 23449                           intcon2	equ	0xFF1
 23450                           indf0	equ	0xFEF
 23451                           postinc0	equ	0xFEE
 23452                           fsr0h	equ	0xFEA
 23453                           fsr0l	equ	0xFE9
 23454                           wreg	equ	0xFE8
 23455                           indf1	equ	0xFE7
 23456                           postdec1	equ	0xFE5
 23457                           fsr1h	equ	0xFE2
 23458                           fsr1l	equ	0xFE1
 23459                           indf2	equ	0xFDF
 23460                           postinc2	equ	0xFDE
 23461                           postdec2	equ	0xFDD
 23462                           fsr2h	equ	0xFDA
 23463                           fsr2l	equ	0xFD9
 23464                           status	equ	0xFD8
 23465                           
 23466 ;; *************** function _ReadIRpin *****************
 23467 ;; Defined at:
 23468 ;;		line 107 in file "IR.c"
 23469 ;; Parameters:    Size  Location     Type
 23470 ;;		None
 23471 ;; Auto vars:     Size  Location     Type
 23472 ;;		None
 23473 ;; Return value:  Size  Location     Type
 23474 ;;                  1    wreg      unsigned char 
 23475 ;; Registers used:
 23476 ;;		wreg
 23477 ;; Tracked objects:
 23478 ;;		On entry : 0/0
 23479 ;;		On exit  : 0/0
 23480 ;;		Unchanged: 0/0
 23481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23486 ;;Total ram usage:        0 bytes
 23487 ;; Hardware stack levels used:    1
 23488 ;; Hardware stack levels required when called:    6
 23489 ;; This function calls:
 23490 ;;		Nothing
 23491 ;; This function is called by:
 23492 ;;		_main
 23493 ;;		_InitIR
 23494 ;;		_UseIRCode
 23495 ;;		_SendNEC_wait
 23496 ;;		_SendRF_wait
 23497 ;; This function uses a non-reentrant model
 23498 ;;
 23499                           
 23500                           	psect	text55
 23501  0094E4                     __ptext55:
 23502                           	opt stack 0
 23503  0094E4                     _ReadIRpin:
 23504                           	opt stack 21
 23505                           
 23506                           ;IR.c: 110: if((PORTB & 0x10) == 0x10)
 23507                           
 23508                           ;incstack = 0
 23509  0094E4  A881               	btfss	3969,4,c	;volatile
 23510  0094E6  D002               	goto	l13273
 23511                           
 23512                           ;IR.c: 111: {
 23513                           ;IR.c: 112: return (1);
 23514  0094E8  0E01               	movlw	1
 23515                           
 23516                           ;IR.c: 113: }
 23517  0094EA  0012               	return	
 23518  0094EC                     l13273:
 23519                           
 23520                           ;IR.c: 114: else
 23521                           ;IR.c: 115: {
 23522                           ;IR.c: 116: return 0;
 23523  0094EC  0E00               	movlw	0
 23524  0094EE  0012               	return	
 23525  0094F0  0012               	return		;funcret
 23526  0094F2                     __end_of_ReadIRpin:
 23527                           	opt stack 0
 23528                           tblptru	equ	0xFF8
 23529                           tblptrh	equ	0xFF7
 23530                           tblptrl	equ	0xFF6
 23531                           tablat	equ	0xFF5
 23532                           prodh	equ	0xFF4
 23533                           prodl	equ	0xFF3
 23534                           intcon	equ	0xFF2
 23535                           intcon2	equ	0xFF1
 23536                           indf0	equ	0xFEF
 23537                           postinc0	equ	0xFEE
 23538                           fsr0h	equ	0xFEA
 23539                           fsr0l	equ	0xFE9
 23540                           wreg	equ	0xFE8
 23541                           indf1	equ	0xFE7
 23542                           postdec1	equ	0xFE5
 23543                           fsr1h	equ	0xFE2
 23544                           fsr1l	equ	0xFE1
 23545                           indf2	equ	0xFDF
 23546                           postinc2	equ	0xFDE
 23547                           postdec2	equ	0xFDD
 23548                           fsr2h	equ	0xFDA
 23549                           fsr2l	equ	0xFD9
 23550                           status	equ	0xFD8
 23551                           
 23552 ;; *************** function _InitTimer0 *****************
 23553 ;; Defined at:
 23554 ;;		line 66 in file "Timer.c"
 23555 ;; Parameters:    Size  Location     Type
 23556 ;;		None
 23557 ;; Auto vars:     Size  Location     Type
 23558 ;;		None
 23559 ;; Return value:  Size  Location     Type
 23560 ;;		None               void
 23561 ;; Registers used:
 23562 ;;		wreg, status,2
 23563 ;; Tracked objects:
 23564 ;;		On entry : 0/0
 23565 ;;		On exit  : 0/0
 23566 ;;		Unchanged: 0/0
 23567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23572 ;;Total ram usage:        0 bytes
 23573 ;; Hardware stack levels used:    1
 23574 ;; Hardware stack levels required when called:    6
 23575 ;; This function calls:
 23576 ;;		Nothing
 23577 ;; This function is called by:
 23578 ;;		_InitIR
 23579 ;; This function uses a non-reentrant model
 23580 ;;
 23581                           
 23582                           	psect	text56
 23583  00948E                     __ptext56:
 23584                           	opt stack 0
 23585  00948E                     _InitTimer0:
 23586                           	opt stack 22
 23587                           
 23588                           ;Timer.c: 68: T0CONbits.T08BIT = FALSE;
 23589                           
 23590                           ;incstack = 0
 23591  00948E  9CD5               	bcf	4053,6,c	;volatile
 23592                           
 23593                           ;Timer.c: 69: T0CONbits.T0CS = FALSE;
 23594  009490  9AD5               	bcf	4053,5,c	;volatile
 23595                           
 23596                           ;Timer.c: 70: T0CONbits.PSA = FALSE;
 23597  009492  96D5               	bcf	4053,3,c	;volatile
 23598                           
 23599                           ;Timer.c: 71: T0CONbits.T0PS = 0x4;
 23600  009494  50D5               	movf	4053,w,c	;volatile
 23601  009496  0BF8               	andlw	-8
 23602  009498  0904               	iorlw	4
 23603  00949A  6ED5               	movwf	4053,c	;volatile
 23604  00949C  0012               	return		;funcret
 23605  00949E                     __end_of_InitTimer0:
 23606                           	opt stack 0
 23607                           tblptru	equ	0xFF8
 23608                           tblptrh	equ	0xFF7
 23609                           tblptrl	equ	0xFF6
 23610                           tablat	equ	0xFF5
 23611                           prodh	equ	0xFF4
 23612                           prodl	equ	0xFF3
 23613                           intcon	equ	0xFF2
 23614                           intcon2	equ	0xFF1
 23615                           indf0	equ	0xFEF
 23616                           postinc0	equ	0xFEE
 23617                           fsr0h	equ	0xFEA
 23618                           fsr0l	equ	0xFE9
 23619                           wreg	equ	0xFE8
 23620                           indf1	equ	0xFE7
 23621                           postdec1	equ	0xFE5
 23622                           fsr1h	equ	0xFE2
 23623                           fsr1l	equ	0xFE1
 23624                           indf2	equ	0xFDF
 23625                           postinc2	equ	0xFDE
 23626                           postdec2	equ	0xFDD
 23627                           fsr2h	equ	0xFDA
 23628                           fsr2l	equ	0xFD9
 23629                           status	equ	0xFD8
 23630                           
 23631 ;; *************** function _InitBluetooth *****************
 23632 ;; Defined at:
 23633 ;;		line 66 in file "Bluetooth.c"
 23634 ;; Parameters:    Size  Location     Type
 23635 ;;		None
 23636 ;; Auto vars:     Size  Location     Type
 23637 ;;		None
 23638 ;; Return value:  Size  Location     Type
 23639 ;;		None               void
 23640 ;; Registers used:
 23641 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23642 ;; Tracked objects:
 23643 ;;		On entry : 0/0
 23644 ;;		On exit  : 0/0
 23645 ;;		Unchanged: 0/0
 23646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23651 ;;Total ram usage:        0 bytes
 23652 ;; Hardware stack levels used:    1
 23653 ;; Hardware stack levels required when called:   12
 23654 ;; This function calls:
 23655 ;;		_BluetoothConfigured
 23656 ;;		_BluetoothInitialSetup
 23657 ;;		_ResetBlue
 23658 ;;		_cleanBuffer
 23659 ;; This function is called by:
 23660 ;;		_Init_System
 23661 ;; This function uses a non-reentrant model
 23662 ;;
 23663                           
 23664                           	psect	text57
 23665  008E58                     __ptext57:
 23666                           	opt stack 0
 23667  008E58                     _InitBluetooth:
 23668                           	opt stack 17
 23669                           
 23670                           ;Bluetooth.c: 68: cleanBuffer(ReceivedString,255);
 23671                           
 23672                           ;incstack = 0
 23673  008E58  0E00               	movlw	low _ReceivedString
 23674  008E5A  0100               	movlb	0	; () banked
 23675  008E5C  6F79               	movwf	cleanBuffer@data& (0+255),b
 23676  008E5E  0E06               	movlw	high _ReceivedString
 23677  008E60  0100               	movlb	0	; () banked
 23678  008E62  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 23679  008E64  0E00               	movlw	0
 23680  008E66  0100               	movlb	0	; () banked
 23681  008E68  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 23682  008E6A  697B               	setf	cleanBuffer@count& (0+255),b
 23683  008E6C  ECA6  F046         	call	_cleanBuffer	;wreg free
 23684                           
 23685                           ;Bluetooth.c: 69: ReceivedStringPos = 0;
 23686  008E70  0E00               	movlw	0
 23687  008E72  0100               	movlb	0	; () banked
 23688  008E74  6FE0               	movwf	_ReceivedStringPos& (0+255),b
 23689                           
 23690                           ; BSR set to: 0
 23691                           ;Bluetooth.c: 70: cleanBuffer(CommandString,255);
 23692  008E76  0E00               	movlw	low _CommandString
 23693  008E78  0100               	movlb	0	; () banked
 23694  008E7A  6F79               	movwf	cleanBuffer@data& (0+255),b
 23695  008E7C  0E05               	movlw	high _CommandString
 23696  008E7E  0100               	movlb	0	; () banked
 23697  008E80  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 23698  008E82  0E00               	movlw	0
 23699  008E84  0100               	movlb	0	; () banked
 23700  008E86  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 23701  008E88  697B               	setf	cleanBuffer@count& (0+255),b
 23702  008E8A  ECA6  F046         	call	_cleanBuffer	;wreg free
 23703                           
 23704                           ;Bluetooth.c: 71: CommandStringPos = 0;
 23705  008E8E  0E00               	movlw	0
 23706  008E90  6E26               	movwf	_CommandStringPos,c
 23707                           
 23708                           ;Bluetooth.c: 73: LATA &= ~0x10;
 23709  008E92  9889               	bcf	3977,4,c	;volatile
 23710                           
 23711                           ;Bluetooth.c: 74: LATA |= 0x08;
 23712  008E94  8689               	bsf	3977,3,c	;volatile
 23713                           
 23714                           ;Bluetooth.c: 75: LATA &= ~0x10;
 23715  008E96  9889               	bcf	3977,4,c	;volatile
 23716                           
 23717                           ;Bluetooth.c: 76: if(!BluetoothConfigured())
 23718  008E98  ECCE  F049         	call	_BluetoothConfigured	;wreg free
 23719  008E9C  0900               	iorlw	0
 23720  008E9E  A4D8               	btfss	status,2,c
 23721  008EA0  0012               	return	
 23722                           
 23723                           ;Bluetooth.c: 77: {
 23724                           ;Bluetooth.c: 78: BluetoothInitialSetup();
 23725  008EA2  EC3E  F026         	call	_BluetoothInitialSetup	;wreg free
 23726                           
 23727                           ;Bluetooth.c: 79: ResetBlue();
 23728  008EA6  EC13  F049         	call	_ResetBlue	;wreg free
 23729  008EAA  0012               	return	
 23730  008EAC  0012               	return		;funcret
 23731  008EAE                     __end_of_InitBluetooth:
 23732                           	opt stack 0
 23733                           tblptru	equ	0xFF8
 23734                           tblptrh	equ	0xFF7
 23735                           tblptrl	equ	0xFF6
 23736                           tablat	equ	0xFF5
 23737                           prodh	equ	0xFF4
 23738                           prodl	equ	0xFF3
 23739                           intcon	equ	0xFF2
 23740                           intcon2	equ	0xFF1
 23741                           indf0	equ	0xFEF
 23742                           postinc0	equ	0xFEE
 23743                           fsr0h	equ	0xFEA
 23744                           fsr0l	equ	0xFE9
 23745                           wreg	equ	0xFE8
 23746                           indf1	equ	0xFE7
 23747                           postdec1	equ	0xFE5
 23748                           fsr1h	equ	0xFE2
 23749                           fsr1l	equ	0xFE1
 23750                           indf2	equ	0xFDF
 23751                           postinc2	equ	0xFDE
 23752                           postdec2	equ	0xFDD
 23753                           fsr2h	equ	0xFDA
 23754                           fsr2l	equ	0xFD9
 23755                           status	equ	0xFD8
 23756                           
 23757 ;; *************** function _BluetoothInitialSetup *****************
 23758 ;; Defined at:
 23759 ;;		line 149 in file "Bluetooth.c"
 23760 ;; Parameters:    Size  Location     Type
 23761 ;;		None
 23762 ;; Auto vars:     Size  Location     Type
 23763 ;;  buf            50   40[BANK1 ] unsigned char [50]
 23764 ;;  RFchannel      10   30[BANK1 ] unsigned char [10]
 23765 ;;  ok              1   90[BANK1 ] unsigned char 
 23766 ;; Return value:  Size  Location     Type
 23767 ;;                  1    wreg      unsigned char 
 23768 ;; Registers used:
 23769 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23770 ;; Tracked objects:
 23771 ;;		On entry : 0/0
 23772 ;;		On exit  : 0/0
 23773 ;;		Unchanged: 0/0
 23774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23776 ;;      Locals:         0       0      61       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23778 ;;      Totals:         0       0      61       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23779 ;;Total ram usage:       61 bytes
 23780 ;; Hardware stack levels used:    1
 23781 ;; Hardware stack levels required when called:   10
 23782 ;; This function calls:
 23783 ;;		_EnterCommandMode
 23784 ;;		_StringContains
 23785 ;;		_UARTstring
 23786 ;;		_cleanBuffer
 23787 ;;		_delayUS
 23788 ;;		_sprintf
 23789 ;; This function is called by:
 23790 ;;		_InitBluetooth
 23791 ;; This function uses a non-reentrant model
 23792 ;;
 23793                           
 23794                           	psect	text58
 23795  004C7C                     __ptext58:
 23796                           	opt stack 0
 23797  004C7C                     _BluetoothInitialSetup:
 23798                           	opt stack 18
 23799                           
 23800                           ;Bluetooth.c: 151: unsigned char buf[50];
 23801                           ;Bluetooth.c: 152: unsigned char ok = 1;
 23802                           
 23803                           ;incstack = 0
 23804  004C7C  0E01               	movlw	1
 23805  004C7E  0101               	movlb	1	; () banked
 23806  004C80  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 23807                           
 23808                           ; BSR set to: 1
 23809                           ;Bluetooth.c: 153: unsigned char RFchannel[10];
 23810                           ;Bluetooth.c: 155: cleanBuffer(buf,50);
 23811  004C82  0E28               	movlw	low BluetoothInitialSetup@buf
 23812  004C84  0100               	movlb	0	; () banked
 23813  004C86  6F79               	movwf	cleanBuffer@data& (0+255),b
 23814  004C88  0E01               	movlw	high BluetoothInitialSetup@buf
 23815  004C8A  0100               	movlb	0	; () banked
 23816  004C8C  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 23817  004C8E  0E00               	movlw	0
 23818  004C90  0100               	movlb	0	; () banked
 23819  004C92  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 23820  004C94  0E32               	movlw	50
 23821  004C96  6F7B               	movwf	cleanBuffer@count& (0+255),b
 23822  004C98  ECA6  F046         	call	_cleanBuffer	;wreg free
 23823                           
 23824                           ;Bluetooth.c: 156: cleanBuffer(RFchannel,10);
 23825  004C9C  0E1E               	movlw	low BluetoothInitialSetup@RFchannel
 23826  004C9E  0100               	movlb	0	; () banked
 23827  004CA0  6F79               	movwf	cleanBuffer@data& (0+255),b
 23828  004CA2  0E01               	movlw	high BluetoothInitialSetup@RFchannel
 23829  004CA4  0100               	movlb	0	; () banked
 23830  004CA6  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 23831  004CA8  0E00               	movlw	0
 23832  004CAA  0100               	movlb	0	; () banked
 23833  004CAC  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 23834  004CAE  0E0A               	movlw	10
 23835  004CB0  6F7B               	movwf	cleanBuffer@count& (0+255),b
 23836  004CB2  ECA6  F046         	call	_cleanBuffer	;wreg free
 23837                           
 23838                           ;Bluetooth.c: 158: if(!EnterCommandMode())
 23839  004CB6  ECF9  F03E         	call	_EnterCommandMode	;wreg free
 23840  004CBA  0900               	iorlw	0
 23841  004CBC  B4D8               	btfsc	status,2,c
 23842  004CBE  0012               	return	
 23843  004CC0  D001               	goto	l14179
 23844                           
 23845                           ;Bluetooth.c: 159: {
 23846                           ;Bluetooth.c: 160: return 0;
 23847                           ;	Return value of _BluetoothInitialSetup is never used
 23848  004CC2  0012               	return	
 23849  004CC4                     l14179:
 23850                           
 23851                           ;Bluetooth.c: 161: }
 23852                           ;Bluetooth.c: 162: sprintf(buf,"SN,Home Automation %ld\r",SN);
 23853  004CC4  0E28               	movlw	low BluetoothInitialSetup@buf
 23854  004CC6  0100               	movlb	0	; () banked
 23855  004CC8  6FC7               	movwf	sprintf@sp& (0+255),b
 23856  004CCA  0E01               	movlw	high BluetoothInitialSetup@buf
 23857  004CCC  0100               	movlb	0	; () banked
 23858  004CCE  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 23859  004CD0  0E23               	movlw	low STR_4
 23860  004CD2  0100               	movlb	0	; () banked
 23861  004CD4  6FC9               	movwf	sprintf@f& (0+255),b
 23862  004CD6  0EF9               	movlw	high STR_4
 23863  004CD8  0100               	movlb	0	; () banked
 23864  004CDA  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 23865  004CDC  C03C  F0CB         	movff	_SN,?_sprintf+4
 23866  004CE0  C03D  F0CC         	movff	_SN+1,?_sprintf+5
 23867  004CE4  C03E  F0CD         	movff	_SN+2,?_sprintf+6
 23868  004CE8  C03F  F0CE         	movff	_SN+3,?_sprintf+7
 23869  004CEC  ECC4  F010         	call	_sprintf	;wreg free
 23870                           
 23871                           ;Bluetooth.c: 163: UARTstring(buf);
 23872  004CF0  0E28               	movlw	low BluetoothInitialSetup@buf
 23873  004CF2  0100               	movlb	0	; () banked
 23874  004CF4  6F7A               	movwf	UARTstring@data& (0+255),b
 23875  004CF6  0E01               	movlw	high BluetoothInitialSetup@buf
 23876  004CF8  0100               	movlb	0	; () banked
 23877  004CFA  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 23878  004CFC  ECD3  F046         	call	_UARTstring	;wreg free
 23879                           
 23880                           ;Bluetooth.c: 164: delayUS(50000);
 23881  004D00  0E50               	movlw	80
 23882  004D02  0100               	movlb	0	; () banked
 23883  004D04  6F79               	movwf	delayUS@US& (0+255),b
 23884  004D06  0EC3               	movlw	195
 23885  004D08  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 23886  004D0A  0E00               	movlw	0
 23887  004D0C  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 23888  004D0E  0E00               	movlw	0
 23889  004D10  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 23890  004D12  EC57  F047         	call	_delayUS	;wreg free
 23891                           
 23892                           ;Bluetooth.c: 165: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 23893  004D16  0E00               	movlw	low _CommandString
 23894  004D18  0100               	movlb	0	; () banked
 23895  004D1A  6F79               	movwf	StringContains@This& (0+255),b
 23896  004D1C  0E05               	movlw	high _CommandString
 23897  004D1E  0100               	movlb	0	; () banked
 23898  004D20  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 23899  004D22  0EFB               	movlw	low STR_5
 23900  004D24  0100               	movlb	0	; () banked
 23901  004D26  6F7B               	movwf	StringContains@That& (0+255),b
 23902  004D28  0EFC               	movlw	high STR_5
 23903  004D2A  0100               	movlb	0	; () banked
 23904  004D2C  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 23905  004D2E  EC31  F041         	call	_StringContains	;wreg free
 23906  004D32  0900               	iorlw	0
 23907  004D34  A4D8               	btfss	status,2,c
 23908  004D36  D004               	goto	l14189
 23909                           
 23910                           ;Bluetooth.c: 166: {
 23911                           ;Bluetooth.c: 167: ok = 0;
 23912  004D38  0E00               	movlw	0
 23913  004D3A  0101               	movlb	1	; () banked
 23914  004D3C  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 23915  004D3E  D000               	goto	l14189
 23916  004D40                     l14189:
 23917                           
 23918                           ;Bluetooth.c: 168: }
 23919                           ;Bluetooth.c: 169: cleanBuffer(CommandString,CommandStringPos);
 23920  004D40  0E00               	movlw	low _CommandString
 23921  004D42  0100               	movlb	0	; () banked
 23922  004D44  6F79               	movwf	cleanBuffer@data& (0+255),b
 23923  004D46  0E05               	movlw	high _CommandString
 23924  004D48  0100               	movlb	0	; () banked
 23925  004D4A  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 23926  004D4C  C026  F07B         	movff	_CommandStringPos,cleanBuffer@count
 23927  004D50  0100               	movlb	0	; () banked
 23928  004D52  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 23929  004D54  ECA6  F046         	call	_cleanBuffer	;wreg free
 23930                           
 23931                           ;Bluetooth.c: 170: CommandStringPos = 0;
 23932  004D58  0E00               	movlw	0
 23933  004D5A  6E26               	movwf	_CommandStringPos,c
 23934                           
 23935                           ;Bluetooth.c: 172: if(ok)
 23936  004D5C  0101               	movlb	1	; () banked
 23937  004D5E  515A               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 23938  004D60  0101               	movlb	1	; () banked
 23939  004D62  B4D8               	btfsc	status,2,c
 23940  004D64  D028               	goto	l1820
 23941                           
 23942                           ; BSR set to: 1
 23943                           ;Bluetooth.c: 173: {
 23944                           ;Bluetooth.c: 174: UARTstring((unsigned char *)"SU, 115K\r");
 23945  004D66  0E74               	movlw	low STR_6
 23946  004D68  0100               	movlb	0	; () banked
 23947  004D6A  6F7A               	movwf	UARTstring@data& (0+255),b
 23948  004D6C  0EFC               	movlw	high STR_6
 23949  004D6E  0100               	movlb	0	; () banked
 23950  004D70  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 23951  004D72  ECD3  F046         	call	_UARTstring	;wreg free
 23952                           
 23953                           ;Bluetooth.c: 175: delayUS(50000);
 23954  004D76  0E50               	movlw	80
 23955  004D78  0100               	movlb	0	; () banked
 23956  004D7A  6F79               	movwf	delayUS@US& (0+255),b
 23957  004D7C  0EC3               	movlw	195
 23958  004D7E  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 23959  004D80  0E00               	movlw	0
 23960  004D82  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 23961  004D84  0E00               	movlw	0
 23962  004D86  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 23963  004D88  EC57  F047         	call	_delayUS	;wreg free
 23964                           
 23965                           ;Bluetooth.c: 176: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 23966  004D8C  0E00               	movlw	low _CommandString
 23967  004D8E  0100               	movlb	0	; () banked
 23968  004D90  6F79               	movwf	StringContains@This& (0+255),b
 23969  004D92  0E05               	movlw	high _CommandString
 23970  004D94  0100               	movlb	0	; () banked
 23971  004D96  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 23972  004D98  0EFB               	movlw	low STR_5
 23973  004D9A  0100               	movlb	0	; () banked
 23974  004D9C  6F7B               	movwf	StringContains@That& (0+255),b
 23975  004D9E  0EFC               	movlw	high STR_5
 23976  004DA0  0100               	movlb	0	; () banked
 23977  004DA2  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 23978  004DA4  EC31  F041         	call	_StringContains	;wreg free
 23979  004DA8  0900               	iorlw	0
 23980  004DAA  A4D8               	btfss	status,2,c
 23981  004DAC  D004               	goto	l1820
 23982                           
 23983                           ;Bluetooth.c: 177: {
 23984                           ;Bluetooth.c: 178: ok = 0;
 23985  004DAE  0E00               	movlw	0
 23986  004DB0  0101               	movlb	1	; () banked
 23987  004DB2  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 23988  004DB4  D000               	goto	l1820
 23989  004DB6                     l1820:
 23990                           
 23991                           ;Bluetooth.c: 179: }
 23992                           ;Bluetooth.c: 180: }
 23993                           ;Bluetooth.c: 182: if(ok)
 23994  004DB6  0101               	movlb	1	; () banked
 23995  004DB8  515A               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 23996  004DBA  0101               	movlb	1	; () banked
 23997  004DBC  B4D8               	btfsc	status,2,c
 23998  004DBE  D028               	goto	l14211
 23999                           
 24000                           ; BSR set to: 1
 24001                           ;Bluetooth.c: 183: {
 24002                           ;Bluetooth.c: 184: UARTstring((unsigned char *)"SS, Home Automation\r");
 24003  004DC0  0EAD               	movlw	low STR_8
 24004  004DC2  0100               	movlb	0	; () banked
 24005  004DC4  6F7A               	movwf	UARTstring@data& (0+255),b
 24006  004DC6  0EF9               	movlw	high STR_8
 24007  004DC8  0100               	movlb	0	; () banked
 24008  004DCA  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 24009  004DCC  ECD3  F046         	call	_UARTstring	;wreg free
 24010                           
 24011                           ;Bluetooth.c: 185: delayUS(50000);
 24012  004DD0  0E50               	movlw	80
 24013  004DD2  0100               	movlb	0	; () banked
 24014  004DD4  6F79               	movwf	delayUS@US& (0+255),b
 24015  004DD6  0EC3               	movlw	195
 24016  004DD8  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 24017  004DDA  0E00               	movlw	0
 24018  004DDC  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 24019  004DDE  0E00               	movlw	0
 24020  004DE0  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 24021  004DE2  EC57  F047         	call	_delayUS	;wreg free
 24022                           
 24023                           ;Bluetooth.c: 186: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24024  004DE6  0E00               	movlw	low _CommandString
 24025  004DE8  0100               	movlb	0	; () banked
 24026  004DEA  6F79               	movwf	StringContains@This& (0+255),b
 24027  004DEC  0E05               	movlw	high _CommandString
 24028  004DEE  0100               	movlb	0	; () banked
 24029  004DF0  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 24030  004DF2  0EFB               	movlw	low STR_5
 24031  004DF4  0100               	movlb	0	; () banked
 24032  004DF6  6F7B               	movwf	StringContains@That& (0+255),b
 24033  004DF8  0EFC               	movlw	high STR_5
 24034  004DFA  0100               	movlb	0	; () banked
 24035  004DFC  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 24036  004DFE  EC31  F041         	call	_StringContains	;wreg free
 24037  004E02  0900               	iorlw	0
 24038  004E04  A4D8               	btfss	status,2,c
 24039  004E06  D004               	goto	l14211
 24040                           
 24041                           ;Bluetooth.c: 187: {
 24042                           ;Bluetooth.c: 188: ok = 0;
 24043  004E08  0E00               	movlw	0
 24044  004E0A  0101               	movlb	1	; () banked
 24045  004E0C  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24046                           
 24047                           ; BSR set to: 1
 24048  004E0E  D000               	goto	l14211
 24049  004E10                     l14211:
 24050                           
 24051                           ;Bluetooth.c: 189: }
 24052                           ;Bluetooth.c: 190: }
 24053                           ;Bluetooth.c: 191: cleanBuffer(CommandString,CommandStringPos);
 24054  004E10  0E00               	movlw	low _CommandString
 24055  004E12  0100               	movlb	0	; () banked
 24056  004E14  6F79               	movwf	cleanBuffer@data& (0+255),b
 24057  004E16  0E05               	movlw	high _CommandString
 24058  004E18  0100               	movlb	0	; () banked
 24059  004E1A  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 24060  004E1C  C026  F07B         	movff	_CommandStringPos,cleanBuffer@count
 24061  004E20  0100               	movlb	0	; () banked
 24062  004E22  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 24063  004E24  ECA6  F046         	call	_cleanBuffer	;wreg free
 24064                           
 24065                           ;Bluetooth.c: 192: CommandStringPos = 0;
 24066  004E28  0E00               	movlw	0
 24067  004E2A  6E26               	movwf	_CommandStringPos,c
 24068                           
 24069                           ;Bluetooth.c: 194: if(ok)
 24070  004E2C  0101               	movlb	1	; () banked
 24071  004E2E  515A               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24072  004E30  0101               	movlb	1	; () banked
 24073  004E32  B4D8               	btfsc	status,2,c
 24074  004E34  D028               	goto	l14225
 24075                           
 24076                           ; BSR set to: 1
 24077                           ;Bluetooth.c: 195: {
 24078                           ;Bluetooth.c: 196: UARTstring((unsigned char *)"SY,0010\r");
 24079  004E36  0E88               	movlw	low STR_10
 24080  004E38  0100               	movlb	0	; () banked
 24081  004E3A  6F7A               	movwf	UARTstring@data& (0+255),b
 24082  004E3C  0EFC               	movlw	high STR_10
 24083  004E3E  0100               	movlb	0	; () banked
 24084  004E40  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 24085  004E42  ECD3  F046         	call	_UARTstring	;wreg free
 24086                           
 24087                           ;Bluetooth.c: 197: delayUS(50000);
 24088  004E46  0E50               	movlw	80
 24089  004E48  0100               	movlb	0	; () banked
 24090  004E4A  6F79               	movwf	delayUS@US& (0+255),b
 24091  004E4C  0EC3               	movlw	195
 24092  004E4E  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 24093  004E50  0E00               	movlw	0
 24094  004E52  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 24095  004E54  0E00               	movlw	0
 24096  004E56  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 24097  004E58  EC57  F047         	call	_delayUS	;wreg free
 24098                           
 24099                           ;Bluetooth.c: 198: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24100  004E5C  0E00               	movlw	low _CommandString
 24101  004E5E  0100               	movlb	0	; () banked
 24102  004E60  6F79               	movwf	StringContains@This& (0+255),b
 24103  004E62  0E05               	movlw	high _CommandString
 24104  004E64  0100               	movlb	0	; () banked
 24105  004E66  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 24106  004E68  0EFB               	movlw	low STR_5
 24107  004E6A  0100               	movlb	0	; () banked
 24108  004E6C  6F7B               	movwf	StringContains@That& (0+255),b
 24109  004E6E  0EFC               	movlw	high STR_5
 24110  004E70  0100               	movlb	0	; () banked
 24111  004E72  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 24112  004E74  EC31  F041         	call	_StringContains	;wreg free
 24113  004E78  0900               	iorlw	0
 24114  004E7A  A4D8               	btfss	status,2,c
 24115  004E7C  D004               	goto	l14225
 24116                           
 24117                           ;Bluetooth.c: 199: {
 24118                           ;Bluetooth.c: 200: ok = 0;
 24119  004E7E  0E00               	movlw	0
 24120  004E80  0101               	movlb	1	; () banked
 24121  004E82  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24122                           
 24123                           ; BSR set to: 1
 24124  004E84  D000               	goto	l14225
 24125  004E86                     l14225:
 24126                           
 24127                           ;Bluetooth.c: 201: }
 24128                           ;Bluetooth.c: 202: }
 24129                           ;Bluetooth.c: 203: cleanBuffer(CommandString,CommandStringPos);
 24130  004E86  0E00               	movlw	low _CommandString
 24131  004E88  0100               	movlb	0	; () banked
 24132  004E8A  6F79               	movwf	cleanBuffer@data& (0+255),b
 24133  004E8C  0E05               	movlw	high _CommandString
 24134  004E8E  0100               	movlb	0	; () banked
 24135  004E90  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 24136  004E92  C026  F07B         	movff	_CommandStringPos,cleanBuffer@count
 24137  004E96  0100               	movlb	0	; () banked
 24138  004E98  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 24139  004E9A  ECA6  F046         	call	_cleanBuffer	;wreg free
 24140                           
 24141                           ;Bluetooth.c: 204: CommandStringPos = 0;
 24142  004E9E  0E00               	movlw	0
 24143  004EA0  6E26               	movwf	_CommandStringPos,c
 24144                           
 24145                           ;Bluetooth.c: 206: if(ok)
 24146  004EA2  0101               	movlb	1	; () banked
 24147  004EA4  515A               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24148  004EA6  0101               	movlb	1	; () banked
 24149  004EA8  B4D8               	btfsc	status,2,c
 24150  004EAA  D028               	goto	l14239
 24151                           
 24152                           ; BSR set to: 1
 24153                           ;Bluetooth.c: 207: {
 24154                           ;Bluetooth.c: 208: UARTstring((unsigned char *)"S~,0\r");
 24155  004EAC  0EC0               	movlw	low STR_12
 24156  004EAE  0100               	movlb	0	; () banked
 24157  004EB0  6F7A               	movwf	UARTstring@data& (0+255),b
 24158  004EB2  0EFC               	movlw	high STR_12
 24159  004EB4  0100               	movlb	0	; () banked
 24160  004EB6  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 24161  004EB8  ECD3  F046         	call	_UARTstring	;wreg free
 24162                           
 24163                           ;Bluetooth.c: 209: delayUS(50000);
 24164  004EBC  0E50               	movlw	80
 24165  004EBE  0100               	movlb	0	; () banked
 24166  004EC0  6F79               	movwf	delayUS@US& (0+255),b
 24167  004EC2  0EC3               	movlw	195
 24168  004EC4  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 24169  004EC6  0E00               	movlw	0
 24170  004EC8  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 24171  004ECA  0E00               	movlw	0
 24172  004ECC  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 24173  004ECE  EC57  F047         	call	_delayUS	;wreg free
 24174                           
 24175                           ;Bluetooth.c: 210: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24176  004ED2  0E00               	movlw	low _CommandString
 24177  004ED4  0100               	movlb	0	; () banked
 24178  004ED6  6F79               	movwf	StringContains@This& (0+255),b
 24179  004ED8  0E05               	movlw	high _CommandString
 24180  004EDA  0100               	movlb	0	; () banked
 24181  004EDC  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 24182  004EDE  0EFB               	movlw	low STR_5
 24183  004EE0  0100               	movlb	0	; () banked
 24184  004EE2  6F7B               	movwf	StringContains@That& (0+255),b
 24185  004EE4  0EFC               	movlw	high STR_5
 24186  004EE6  0100               	movlb	0	; () banked
 24187  004EE8  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 24188  004EEA  EC31  F041         	call	_StringContains	;wreg free
 24189  004EEE  0900               	iorlw	0
 24190  004EF0  A4D8               	btfss	status,2,c
 24191  004EF2  D004               	goto	l14239
 24192                           
 24193                           ;Bluetooth.c: 211: {
 24194                           ;Bluetooth.c: 212: ok = 0;
 24195  004EF4  0E00               	movlw	0
 24196  004EF6  0101               	movlb	1	; () banked
 24197  004EF8  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24198                           
 24199                           ; BSR set to: 1
 24200  004EFA  D000               	goto	l14239
 24201  004EFC                     l14239:
 24202                           
 24203                           ;Bluetooth.c: 213: }
 24204                           ;Bluetooth.c: 214: }
 24205                           ;Bluetooth.c: 215: cleanBuffer(CommandString,CommandStringPos);
 24206  004EFC  0E00               	movlw	low _CommandString
 24207  004EFE  0100               	movlb	0	; () banked
 24208  004F00  6F79               	movwf	cleanBuffer@data& (0+255),b
 24209  004F02  0E05               	movlw	high _CommandString
 24210  004F04  0100               	movlb	0	; () banked
 24211  004F06  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 24212  004F08  C026  F07B         	movff	_CommandStringPos,cleanBuffer@count
 24213  004F0C  0100               	movlb	0	; () banked
 24214  004F0E  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 24215  004F10  ECA6  F046         	call	_cleanBuffer	;wreg free
 24216                           
 24217                           ;Bluetooth.c: 216: CommandStringPos = 0;
 24218  004F14  0E00               	movlw	0
 24219  004F16  6E26               	movwf	_CommandStringPos,c
 24220                           
 24221                           ;Bluetooth.c: 218: if(ok)
 24222  004F18  0101               	movlb	1	; () banked
 24223  004F1A  515A               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24224  004F1C  0101               	movlb	1	; () banked
 24225  004F1E  B4D8               	btfsc	status,2,c
 24226  004F20  D028               	goto	l14253
 24227                           
 24228                           ; BSR set to: 1
 24229                           ;Bluetooth.c: 219: {
 24230                           ;Bluetooth.c: 220: UARTstring((unsigned char *)"S~,0\r");
 24231  004F22  0EC0               	movlw	low STR_12
 24232  004F24  0100               	movlb	0	; () banked
 24233  004F26  6F7A               	movwf	UARTstring@data& (0+255),b
 24234  004F28  0EFC               	movlw	high STR_12
 24235  004F2A  0100               	movlb	0	; () banked
 24236  004F2C  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 24237  004F2E  ECD3  F046         	call	_UARTstring	;wreg free
 24238                           
 24239                           ;Bluetooth.c: 221: delayUS(50000);
 24240  004F32  0E50               	movlw	80
 24241  004F34  0100               	movlb	0	; () banked
 24242  004F36  6F79               	movwf	delayUS@US& (0+255),b
 24243  004F38  0EC3               	movlw	195
 24244  004F3A  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 24245  004F3C  0E00               	movlw	0
 24246  004F3E  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 24247  004F40  0E00               	movlw	0
 24248  004F42  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 24249  004F44  EC57  F047         	call	_delayUS	;wreg free
 24250                           
 24251                           ;Bluetooth.c: 222: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24252  004F48  0E00               	movlw	low _CommandString
 24253  004F4A  0100               	movlb	0	; () banked
 24254  004F4C  6F79               	movwf	StringContains@This& (0+255),b
 24255  004F4E  0E05               	movlw	high _CommandString
 24256  004F50  0100               	movlb	0	; () banked
 24257  004F52  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 24258  004F54  0EFB               	movlw	low STR_5
 24259  004F56  0100               	movlb	0	; () banked
 24260  004F58  6F7B               	movwf	StringContains@That& (0+255),b
 24261  004F5A  0EFC               	movlw	high STR_5
 24262  004F5C  0100               	movlb	0	; () banked
 24263  004F5E  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 24264  004F60  EC31  F041         	call	_StringContains	;wreg free
 24265  004F64  0900               	iorlw	0
 24266  004F66  A4D8               	btfss	status,2,c
 24267  004F68  D004               	goto	l14253
 24268                           
 24269                           ;Bluetooth.c: 223: {
 24270                           ;Bluetooth.c: 224: ok = 0;
 24271  004F6A  0E00               	movlw	0
 24272  004F6C  0101               	movlb	1	; () banked
 24273  004F6E  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24274                           
 24275                           ; BSR set to: 1
 24276  004F70  D000               	goto	l14253
 24277  004F72                     l14253:
 24278                           
 24279                           ;Bluetooth.c: 225: }
 24280                           ;Bluetooth.c: 226: }
 24281                           ;Bluetooth.c: 227: cleanBuffer(CommandString,CommandStringPos);
 24282  004F72  0E00               	movlw	low _CommandString
 24283  004F74  0100               	movlb	0	; () banked
 24284  004F76  6F79               	movwf	cleanBuffer@data& (0+255),b
 24285  004F78  0E05               	movlw	high _CommandString
 24286  004F7A  0100               	movlb	0	; () banked
 24287  004F7C  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 24288  004F7E  C026  F07B         	movff	_CommandStringPos,cleanBuffer@count
 24289  004F82  0100               	movlb	0	; () banked
 24290  004F84  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 24291  004F86  ECA6  F046         	call	_cleanBuffer	;wreg free
 24292                           
 24293                           ;Bluetooth.c: 228: CommandStringPos = 0;
 24294  004F8A  0E00               	movlw	0
 24295  004F8C  6E26               	movwf	_CommandStringPos,c
 24296                           
 24297                           ;Bluetooth.c: 230: if(ok)
 24298  004F8E  0101               	movlb	1	; () banked
 24299  004F90  515A               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24300  004F92  0101               	movlb	1	; () banked
 24301  004F94  B4D8               	btfsc	status,2,c
 24302  004F96  D03E               	goto	l14269
 24303                           
 24304                           ; BSR set to: 1
 24305                           ;Bluetooth.c: 231: {
 24306                           ;Bluetooth.c: 232: UARTstring((unsigned char *)"D,0\r");
 24307  004F98  0EDD               	movlw	low STR_16
 24308  004F9A  0100               	movlb	0	; () banked
 24309  004F9C  6F7A               	movwf	UARTstring@data& (0+255),b
 24310  004F9E  0EFC               	movlw	high STR_16
 24311  004FA0  0100               	movlb	0	; () banked
 24312  004FA2  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 24313  004FA4  ECD3  F046         	call	_UARTstring	;wreg free
 24314                           
 24315                           ;Bluetooth.c: 233: delayUS(50000);
 24316  004FA8  0E50               	movlw	80
 24317  004FAA  0100               	movlb	0	; () banked
 24318  004FAC  6F79               	movwf	delayUS@US& (0+255),b
 24319  004FAE  0EC3               	movlw	195
 24320  004FB0  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 24321  004FB2  0E00               	movlw	0
 24322  004FB4  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 24323  004FB6  0E00               	movlw	0
 24324  004FB8  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 24325  004FBA  EC57  F047         	call	_delayUS	;wreg free
 24326                           
 24327                           ;Bluetooth.c: 234: sprintf(buf,"BTName=Home Automation %ld\r",SN);
 24328  004FBE  0E28               	movlw	low BluetoothInitialSetup@buf
 24329  004FC0  0100               	movlb	0	; () banked
 24330  004FC2  6FC7               	movwf	sprintf@sp& (0+255),b
 24331  004FC4  0E01               	movlw	high BluetoothInitialSetup@buf
 24332  004FC6  0100               	movlb	0	; () banked
 24333  004FC8  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 24334  004FCA  0E81               	movlw	low STR_17
 24335  004FCC  0100               	movlb	0	; () banked
 24336  004FCE  6FC9               	movwf	sprintf@f& (0+255),b
 24337  004FD0  0EF8               	movlw	high STR_17
 24338  004FD2  0100               	movlb	0	; () banked
 24339  004FD4  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 24340  004FD6  C03C  F0CB         	movff	_SN,?_sprintf+4
 24341  004FDA  C03D  F0CC         	movff	_SN+1,?_sprintf+5
 24342  004FDE  C03E  F0CD         	movff	_SN+2,?_sprintf+6
 24343  004FE2  C03F  F0CE         	movff	_SN+3,?_sprintf+7
 24344  004FE6  ECC4  F010         	call	_sprintf	;wreg free
 24345                           
 24346                           ;Bluetooth.c: 235: if(!StringContains(CommandString, buf))
 24347  004FEA  0E00               	movlw	low _CommandString
 24348  004FEC  0100               	movlb	0	; () banked
 24349  004FEE  6F79               	movwf	StringContains@This& (0+255),b
 24350  004FF0  0E05               	movlw	high _CommandString
 24351  004FF2  0100               	movlb	0	; () banked
 24352  004FF4  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 24353  004FF6  0E28               	movlw	low BluetoothInitialSetup@buf
 24354  004FF8  0100               	movlb	0	; () banked
 24355  004FFA  6F7B               	movwf	StringContains@That& (0+255),b
 24356  004FFC  0E01               	movlw	high BluetoothInitialSetup@buf
 24357  004FFE  0100               	movlb	0	; () banked
 24358  005000  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 24359  005002  EC31  F041         	call	_StringContains	;wreg free
 24360  005006  0900               	iorlw	0
 24361  005008  A4D8               	btfss	status,2,c
 24362  00500A  D004               	goto	l14269
 24363                           
 24364                           ;Bluetooth.c: 236: {
 24365                           ;Bluetooth.c: 237: ok = 0;
 24366  00500C  0E00               	movlw	0
 24367  00500E  0101               	movlb	1	; () banked
 24368  005010  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24369                           
 24370                           ; BSR set to: 1
 24371  005012  D000               	goto	l14269
 24372  005014                     l14269:
 24373                           
 24374                           ;Bluetooth.c: 238: }
 24375                           ;Bluetooth.c: 239: }
 24376                           ;Bluetooth.c: 240: cleanBuffer(CommandString,CommandStringPos);
 24377  005014  0E00               	movlw	low _CommandString
 24378  005016  0100               	movlb	0	; () banked
 24379  005018  6F79               	movwf	cleanBuffer@data& (0+255),b
 24380  00501A  0E05               	movlw	high _CommandString
 24381  00501C  0100               	movlb	0	; () banked
 24382  00501E  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 24383  005020  C026  F07B         	movff	_CommandStringPos,cleanBuffer@count
 24384  005024  0100               	movlb	0	; () banked
 24385  005026  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 24386  005028  ECA6  F046         	call	_cleanBuffer	;wreg free
 24387                           
 24388                           ;Bluetooth.c: 241: CommandStringPos = 0;
 24389  00502C  0E00               	movlw	0
 24390  00502E  6E26               	movwf	_CommandStringPos,c
 24391                           
 24392                           ;Bluetooth.c: 243: UARTstring((unsigned char *)"---\r");
 24393  005030  0ED8               	movlw	low STR_18
 24394  005032  0100               	movlb	0	; () banked
 24395  005034  6F7A               	movwf	UARTstring@data& (0+255),b
 24396  005036  0EFC               	movlw	high STR_18
 24397  005038  0100               	movlb	0	; () banked
 24398  00503A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 24399  00503C  ECD3  F046         	call	_UARTstring	;wreg free
 24400                           
 24401                           ;Bluetooth.c: 244: delayUS(50000);
 24402  005040  0E50               	movlw	80
 24403  005042  0100               	movlb	0	; () banked
 24404  005044  6F79               	movwf	delayUS@US& (0+255),b
 24405  005046  0EC3               	movlw	195
 24406  005048  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 24407  00504A  0E00               	movlw	0
 24408  00504C  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 24409  00504E  0E00               	movlw	0
 24410  005050  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 24411  005052  EC57  F047         	call	_delayUS	;wreg free
 24412                           
 24413                           ;Bluetooth.c: 245: if(!StringContains(CommandString,(unsigned char *)"END"))
 24414  005056  0E00               	movlw	low _CommandString
 24415  005058  0100               	movlb	0	; () banked
 24416  00505A  6F79               	movwf	StringContains@This& (0+255),b
 24417  00505C  0E05               	movlw	high _CommandString
 24418  00505E  0100               	movlb	0	; () banked
 24419  005060  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 24420  005062  0EF7               	movlw	low STR_19
 24421  005064  0100               	movlb	0	; () banked
 24422  005066  6F7B               	movwf	StringContains@That& (0+255),b
 24423  005068  0EFC               	movlw	high STR_19
 24424  00506A  0100               	movlb	0	; () banked
 24425  00506C  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 24426  00506E  EC31  F041         	call	_StringContains	;wreg free
 24427  005072  0900               	iorlw	0
 24428  005074  A4D8               	btfss	status,2,c
 24429  005076  D004               	goto	l14281
 24430                           
 24431                           ;Bluetooth.c: 246: {
 24432                           ;Bluetooth.c: 247: ok = 0;
 24433  005078  0E00               	movlw	0
 24434  00507A  0101               	movlb	1	; () banked
 24435  00507C  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24436  00507E  D000               	goto	l14281
 24437  005080                     l14281:
 24438                           
 24439                           ;Bluetooth.c: 248: }
 24440                           ;Bluetooth.c: 249: cleanBuffer(CommandString,CommandStringPos);
 24441  005080  0E00               	movlw	low _CommandString
 24442  005082  0100               	movlb	0	; () banked
 24443  005084  6F79               	movwf	cleanBuffer@data& (0+255),b
 24444  005086  0E05               	movlw	high _CommandString
 24445  005088  0100               	movlb	0	; () banked
 24446  00508A  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 24447  00508C  C026  F07B         	movff	_CommandStringPos,cleanBuffer@count
 24448  005090  0100               	movlb	0	; () banked
 24449  005092  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 24450  005094  ECA6  F046         	call	_cleanBuffer	;wreg free
 24451                           
 24452                           ;Bluetooth.c: 250: CommandStringPos = 0;
 24453  005098  0E00               	movlw	0
 24454  00509A  6E26               	movwf	_CommandStringPos,c
 24455                           
 24456                           ;Bluetooth.c: 253: {
 24457                           ;Bluetooth.c: 254: return 1;
 24458                           ;	Return value of _BluetoothInitialSetup is never used
 24459  00509C  0012               	return	
 24460                           
 24461                           ;Bluetooth.c: 255: }
 24462                           ;Bluetooth.c: 256: return 0;
 24463                           ;	Return value of _BluetoothInitialSetup is never used
 24464  00509E  0012               	return		;funcret
 24465  0050A0                     __end_of_BluetoothInitialSetup:
 24466                           	opt stack 0
 24467                           tblptru	equ	0xFF8
 24468                           tblptrh	equ	0xFF7
 24469                           tblptrl	equ	0xFF6
 24470                           tablat	equ	0xFF5
 24471                           prodh	equ	0xFF4
 24472                           prodl	equ	0xFF3
 24473                           intcon	equ	0xFF2
 24474                           intcon2	equ	0xFF1
 24475                           indf0	equ	0xFEF
 24476                           postinc0	equ	0xFEE
 24477                           fsr0h	equ	0xFEA
 24478                           fsr0l	equ	0xFE9
 24479                           wreg	equ	0xFE8
 24480                           indf1	equ	0xFE7
 24481                           postdec1	equ	0xFE5
 24482                           fsr1h	equ	0xFE2
 24483                           fsr1l	equ	0xFE1
 24484                           indf2	equ	0xFDF
 24485                           postinc2	equ	0xFDE
 24486                           postdec2	equ	0xFDD
 24487                           fsr2h	equ	0xFDA
 24488                           fsr2l	equ	0xFD9
 24489                           status	equ	0xFD8
 24490                           
 24491 ;; *************** function _sprintf *****************
 24492 ;; Defined at:
 24493 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 24494 ;; Parameters:    Size  Location     Type
 24495 ;;  sp              2  103[BANK0 ] PTR unsigned char 
 24496 ;;		 -> UseBluetooth@buf(100), BluetoothInitialSetup@buf(50), 
 24497 ;;  f               2  105[BANK0 ] PTR const unsigned char 
 24498 ;;		 -> STR_104(19), STR_102(15), STR_88(29), STR_87(16), 
 24499 ;;		 -> STR_86(21), STR_84(20), STR_76(44), STR_75(54), 
 24500 ;;		 -> STR_74(54), STR_73(63), STR_51(44), STR_50(46), 
 24501 ;;		 -> STR_48(44), STR_47(21), STR_33(17), STR_32(17), 
 24502 ;;		 -> STR_31(20), STR_29(23), STR_28(21), STR_27(21), 
 24503 ;;		 -> STR_17(28), STR_4(24), 
 24504 ;; Auto vars:     Size  Location     Type
 24505 ;;  idx             1    3[BANK1 ] unsigned char 
 24506 ;;  val             4   18[BANK1 ] unsigned long 
 24507 ;;  tmpval          4   12[BANK1 ] struct .
 24508 ;;  fval            3   22[BANK1 ] struct .
 24509 ;;  flag            2   27[BANK1 ] unsigned short 
 24510 ;;  width           2   25[BANK1 ] int 
 24511 ;;  exp             2   16[BANK1 ] int 
 24512 ;;  prec            2   10[BANK1 ] int 
 24513 ;;  ap              2    8[BANK1 ] PTR void [1]
 24514 ;;		 -> ?_sprintf(2), 
 24515 ;;  len             2    6[BANK1 ] unsigned int 
 24516 ;;  cp              2    4[BANK1 ] PTR const unsigned char 
 24517 ;;		 -> STR_149(7), sprintf@c(1), PCBVersion(5), FirmVersion(9), 
 24518 ;;		 -> GetNumber@temp(4), 
 24519 ;;  c               1   29[BANK1 ] char 
 24520 ;;  d               1    0        unsigned char 
 24521 ;; Return value:  Size  Location     Type
 24522 ;;                  2  103[BANK0 ] int 
 24523 ;; Registers used:
 24524 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24525 ;; Tracked objects:
 24526 ;;		On entry : 0/0
 24527 ;;		On exit  : 0/0
 24528 ;;		Unchanged: 0/0
 24529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24530 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24531 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24532 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24533 ;;      Totals:         0      20      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24534 ;;Total ram usage:       50 bytes
 24535 ;; Hardware stack levels used:    1
 24536 ;; Hardware stack levels required when called:    9
 24537 ;; This function calls:
 24538 ;;		___awdiv
 24539 ;;		___ftadd
 24540 ;;		___ftge
 24541 ;;		___ftmul
 24542 ;;		___ftneg
 24543 ;;		___ftsub
 24544 ;;		___fttol
 24545 ;;		___lldiv
 24546 ;;		___llmod
 24547 ;;		___lltoft
 24548 ;;		___wmul
 24549 ;;		__div_to_l_
 24550 ;;		__tdiv_to_l_
 24551 ;;		_fround
 24552 ;;		_isdigit
 24553 ;;		_scale
 24554 ;; This function is called by:
 24555 ;;		_BluetoothInitialSetup
 24556 ;;		_UseBluetooth
 24557 ;; This function uses a non-reentrant model
 24558 ;;
 24559                           
 24560                           	psect	text59
 24561  002188                     __ptext59:
 24562                           	opt stack 0
 24563  002188                     _sprintf:
 24564                           	opt stack 20
 24565                           
 24566                           ;doprnt.c: 494: va_list ap;
 24567                           ;doprnt.c: 499: signed char c;
 24568                           ;doprnt.c: 501: int width;
 24569                           ;doprnt.c: 504: int prec;
 24570                           ;doprnt.c: 508: unsigned short flag;
 24571                           ;doprnt.c: 515: char d;
 24572                           ;doprnt.c: 516: double fval;
 24573                           ;doprnt.c: 517: int exp;
 24574                           ;doprnt.c: 523: union {
 24575                           ;doprnt.c: 524: unsigned long vd;
 24576                           ;doprnt.c: 525: double integ;
 24577                           ;doprnt.c: 526: } tmpval;
 24578                           ;doprnt.c: 528: unsigned long val;
 24579                           ;doprnt.c: 529: unsigned len;
 24580                           ;doprnt.c: 530: const char * cp;
 24581                           ;doprnt.c: 533: *ap = __va_start();
 24582                           
 24583                           ;incstack = 0
 24584  002188  0ECB               	movlw	low (?_sprintf+4)
 24585  00218A  0101               	movlb	1	; () banked
 24586  00218C  6F08               	movwf	sprintf@ap& (0+255),b
 24587  00218E  0E00               	movlw	high (?_sprintf+4)
 24588  002190  0101               	movlb	1	; () banked
 24589  002192  6F09               	movwf	(sprintf@ap+1)& (0+255),b
 24590                           
 24591                           ;doprnt.c: 536: while(c = *f++) {
 24592  002194  EF4C  F018         	goto	l13791
 24593  002198                     l13419:
 24594                           
 24595                           ; BSR set to: 1
 24596                           ;doprnt.c: 538: if(c != '%')
 24597  002198  0E25               	movlw	37
 24598  00219A  0101               	movlb	1	; () banked
 24599  00219C  191D               	xorwf	sprintf@c& (0+255),w,b
 24600  00219E  B4D8               	btfsc	status,2,c
 24601  0021A0  D00B               	goto	l13425
 24602                           
 24603                           ; BSR set to: 1
 24604                           ;doprnt.c: 540: {
 24605                           ;doprnt.c: 541: ((*sp++ = (c)));
 24606  0021A2  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 24607  0021A6  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 24608  0021AA  C11D  FFDF         	movff	sprintf@c,indf2
 24609                           
 24610                           ; BSR set to: 1
 24611  0021AE  0100               	movlb	0	; () banked
 24612  0021B0  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 24613  0021B2  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 24614                           
 24615                           ;doprnt.c: 542: continue;
 24616  0021B4  EF4C  F018         	goto	l13791
 24617  0021B8                     l13425:
 24618                           
 24619                           ;doprnt.c: 543: }
 24620                           ;doprnt.c: 546: width = 0;
 24621  0021B8  0E00               	movlw	0
 24622  0021BA  0101               	movlb	1	; () banked
 24623  0021BC  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 24624  0021BE  0E00               	movlw	0
 24625  0021C0  6F19               	movwf	sprintf@width& (0+255),b
 24626                           
 24627                           ;doprnt.c: 548: flag = 0;
 24628  0021C2  0E00               	movlw	0
 24629  0021C4  0101               	movlb	1	; () banked
 24630  0021C6  6F1C               	movwf	(sprintf@flag+1)& (0+255),b
 24631  0021C8  0E00               	movlw	0
 24632  0021CA  6F1B               	movwf	sprintf@flag& (0+255),b
 24633                           
 24634                           ; BSR set to: 1
 24635                           ;doprnt.c: 551: switch(*f) {
 24636                           
 24637                           ;doprnt.c: 550: for(;;) {
 24638  0021CC  D007               	goto	l13431
 24639  0021CE                     l13427:
 24640                           
 24641                           ;doprnt.c: 580: flag |= 0x04;
 24642  0021CE  0101               	movlb	1	; () banked
 24643  0021D0  851B               	bsf	sprintf@flag& (0+255),2,b
 24644                           
 24645                           ;doprnt.c: 581: f++;
 24646  0021D2  0100               	movlb	0	; () banked
 24647  0021D4  4BC9               	infsnz	sprintf@f& (0+255),f,b
 24648  0021D6  2BCA               	incf	(sprintf@f+1)& (0+255),f,b
 24649                           
 24650                           ;doprnt.c: 582: continue;
 24651  0021D8  D001               	goto	l13431
 24652                           
 24653                           ; BSR set to: 0
 24654                           ;doprnt.c: 584: }
 24655  0021DA  D00C               	goto	l13433
 24656  0021DC                     l13431:
 24657  0021DC  C0C9  FFF6         	movff	sprintf@f,tblptrl
 24658  0021E0  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
 24659  0021E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24660  0021E4  6AF8               	clrf	tblptru,c
 24661  0021E6                     	endif
 24662  0021E6                     	if	0	;tblptru may be non-zero
 24663  0021E6                     	endif
 24664  0021E6  0008               	tblrd		*
 24665  0021E8  50F5               	movf	tablat,w,c
 24666                           
 24667                           ; Switch size 1, requested type "space"
 24668                           ; Number of cases is 1, Range of values is 48 to 48
 24669                           ; switch strategies available:
 24670                           ; Name         Instructions Cycles
 24671                           ; simple_byte            4     3 (average)
 24672                           ;	Chosen strategy is simple_byte
 24673  0021EA  0A30               	xorlw	48	; case 48
 24674  0021EC  B4D8               	btfsc	status,2,c
 24675  0021EE  D7EF               	goto	l13427
 24676                           
 24677                           ;doprnt.c: 585: break;
 24678  0021F0  D001               	goto	l13433
 24679                           
 24680                           ;doprnt.c: 586: }
 24681  0021F2  D7F4               	goto	l13431
 24682  0021F4                     l13433:
 24683                           
 24684                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 24685  0021F4  C0C9  FFF6         	movff	sprintf@f,tblptrl
 24686  0021F8  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
 24687  0021FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24688  0021FC  6AF8               	clrf	tblptru,c
 24689  0021FE                     	endif
 24690  0021FE                     	if	0	;tblptru may be non-zero
 24691  0021FE                     	endif
 24692  0021FE  0008               	tblrd		*
 24693  002200  50F5               	movf	tablat,w,c
 24694  002202  EC44  F049         	call	_isdigit
 24695  002206  A0D8               	btfss	status,0,c
 24696  002208  D10D               	goto	l13495
 24697                           
 24698                           ;doprnt.c: 598: width = 0;
 24699  00220A  0E00               	movlw	0
 24700  00220C  0101               	movlb	1	; () banked
 24701  00220E  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 24702  002210  0E00               	movlw	0
 24703  002212  6F19               	movwf	sprintf@width& (0+255),b
 24704  002214  D000               	goto	l13437
 24705  002216                     l13437:
 24706                           
 24707                           ;doprnt.c: 600: width *= 10;
 24708  002216  C119  F087         	movff	sprintf@width,___wmul@multiplier
 24709  00221A  C11A  F088         	movff	sprintf@width+1,___wmul@multiplier+1
 24710  00221E  0E00               	movlw	0
 24711  002220  0100               	movlb	0	; () banked
 24712  002222  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24713  002224  0E0A               	movlw	10
 24714  002226  6F89               	movwf	___wmul@multiplicand& (0+255),b
 24715  002228  ECDC  F048         	call	___wmul	;wreg free
 24716  00222C  C087  F119         	movff	?___wmul,sprintf@width
 24717  002230  C088  F11A         	movff	?___wmul+1,sprintf@width+1
 24718                           
 24719                           ;doprnt.c: 601: width += *f++ - '0';
 24720  002234  0ED0               	movlw	208
 24721  002236  0100               	movlb	0	; () banked
 24722  002238  6FD5               	movwf	??_sprintf& (0+255),b
 24723  00223A  0EFF               	movlw	255
 24724  00223C  0100               	movlb	0	; () banked
 24725  00223E  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 24726  002240  C0C9  FFF6         	movff	sprintf@f,tblptrl
 24727  002244  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
 24728  002248                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24729  002248  6AF8               	clrf	tblptru,c
 24730  00224A                     	endif
 24731  00224A                     	if	0	;tblptru may be non-zero
 24732  00224A                     	endif
 24733  00224A  0008               	tblrd		*
 24734  00224C  50F5               	movf	tablat,w,c
 24735  00224E  0100               	movlb	0	; () banked
 24736  002250  6FD7               	movwf	(??_sprintf+2)& (0+255),b
 24737  002252  6BD8               	clrf	(??_sprintf+3)& (0+255),b
 24738  002254  0100               	movlb	0	; () banked
 24739  002256  51D5               	movf	??_sprintf& (0+255),w,b
 24740  002258  0100               	movlb	0	; () banked
 24741  00225A  27D7               	addwf	(??_sprintf+2)& (0+255),f,b
 24742  00225C  0100               	movlb	0	; () banked
 24743  00225E  51D6               	movf	(??_sprintf+1)& (0+255),w,b
 24744  002260  0100               	movlb	0	; () banked
 24745  002262  23D8               	addwfc	(??_sprintf+3)& (0+255),f,b
 24746  002264  0100               	movlb	0	; () banked
 24747  002266  51D7               	movf	(??_sprintf+2)& (0+255),w,b
 24748  002268  0101               	movlb	1	; () banked
 24749  00226A  2719               	addwf	sprintf@width& (0+255),f,b
 24750  00226C  0100               	movlb	0	; () banked
 24751  00226E  51D8               	movf	(??_sprintf+3)& (0+255),w,b
 24752  002270  0101               	movlb	1	; () banked
 24753  002272  231A               	addwfc	(sprintf@width+1)& (0+255),f,b
 24754                           
 24755                           ; BSR set to: 1
 24756  002274  0100               	movlb	0	; () banked
 24757  002276  4BC9               	infsnz	sprintf@f& (0+255),f,b
 24758  002278  2BCA               	incf	(sprintf@f+1)& (0+255),f,b
 24759                           
 24760                           ; BSR set to: 0
 24761                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 24762  00227A  C0C9  FFF6         	movff	sprintf@f,tblptrl
 24763  00227E  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
 24764  002282                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24765  002282  6AF8               	clrf	tblptru,c
 24766  002284                     	endif
 24767  002284                     	if	0	;tblptru may be non-zero
 24768  002284                     	endif
 24769  002284  0008               	tblrd		*
 24770  002286  50F5               	movf	tablat,w,c
 24771  002288  EC44  F049         	call	_isdigit
 24772  00228C  A0D8               	btfss	status,0,c
 24773  00228E  D0CA               	goto	l13495
 24774  002290  D7C2               	goto	l13437
 24775                           
 24776                           ;doprnt.c: 635: switch(c = *f++) {
 24777                           
 24778                           ;doprnt.c: 608: }
 24779                           ;doprnt.c: 633: loop:
 24780  002292  D0C8               	goto	l13495
 24781                           
 24782                           ;doprnt.c: 638: goto alldone;
 24783                           
 24784                           ;doprnt.c: 637: case 0:
 24785  002294  EF5E  F018         	goto	l13793
 24786  002298                     l13445:
 24787                           
 24788                           ;doprnt.c: 643: flag |= 0x10;
 24789  002298  0101               	movlb	1	; () banked
 24790  00229A  891B               	bsf	sprintf@flag& (0+255),4,b
 24791                           
 24792                           ;doprnt.c: 644: goto loop;
 24793  00229C  D0C3               	goto	l13495
 24794  00229E                     l13447:
 24795                           
 24796                           ; BSR set to: 1
 24797                           ;doprnt.c: 663: flag |= 0x400;
 24798  00229E  0101               	movlb	1	; () banked
 24799  0022A0  851C               	bsf	(sprintf@flag+1)& (0+255),2,b
 24800                           
 24801                           ; BSR set to: 1
 24802                           ;doprnt.c: 698: case 'i':
 24803                           ;doprnt.c: 699: break;
 24804                           
 24805                           ; BSR set to: 1
 24806                           
 24807                           ;doprnt.c: 697: case 'd':
 24808                           
 24809                           ;doprnt.c: 664: break;
 24810  0022A2  D0EA               	goto	l13497
 24811                           
 24812                           ; BSR set to: 1
 24813                           
 24814                           ;doprnt.c: 712: case 'X':
 24815  0022A4  D000               	goto	l13449
 24816  0022A6                     l13449:
 24817                           
 24818                           ; BSR set to: 1
 24819                           ;doprnt.c: 718: case 'x':
 24820                           ;doprnt.c: 721: flag |= 0x80;
 24821  0022A6  0101               	movlb	1	; () banked
 24822  0022A8  8F1B               	bsf	sprintf@flag& (0+255),7,b
 24823                           
 24824                           ;doprnt.c: 723: break;
 24825  0022AA  D0E6               	goto	l13497
 24826  0022AC                     l13451:
 24827                           
 24828                           ; BSR set to: 1
 24829                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 24830  0022AC  C108  FFD9         	movff	sprintf@ap,fsr2l
 24831  0022B0  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 24832  0022B4  CFDE F104          	movff	postinc2,sprintf@cp
 24833  0022B8  CFDD F105          	movff	postdec2,sprintf@cp+1
 24834                           
 24835                           ; BSR set to: 1
 24836  0022BC  0E02               	movlw	2
 24837  0022BE  0101               	movlb	1	; () banked
 24838  0022C0  2708               	addwf	sprintf@ap& (0+255),f,b
 24839  0022C2  0E00               	movlw	0
 24840  0022C4  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 24841                           
 24842                           ; BSR set to: 1
 24843                           ;doprnt.c: 740: if(!cp)
 24844  0022C6  0101               	movlb	1	; () banked
 24845  0022C8  5104               	movf	sprintf@cp& (0+255),w,b
 24846  0022CA  0101               	movlb	1	; () banked
 24847  0022CC  1105               	iorwf	(sprintf@cp+1)& (0+255),w,b
 24848  0022CE  A4D8               	btfss	status,2,c
 24849  0022D0  D007               	goto	l13459
 24850                           
 24851                           ; BSR set to: 1
 24852                           ;doprnt.c: 741: cp = "(null)";
 24853  0022D2  0EAB               	movlw	low STR_149
 24854  0022D4  0101               	movlb	1	; () banked
 24855  0022D6  6F04               	movwf	sprintf@cp& (0+255),b
 24856  0022D8  0EFC               	movlw	high STR_149
 24857  0022DA  0101               	movlb	1	; () banked
 24858  0022DC  6F05               	movwf	(sprintf@cp+1)& (0+255),b
 24859  0022DE  D000               	goto	l13459
 24860  0022E0                     l13459:
 24861                           
 24862                           ; BSR set to: 1
 24863                           ;doprnt.c: 745: len = 0;
 24864  0022E0  0E00               	movlw	0
 24865  0022E2  0101               	movlb	1	; () banked
 24866  0022E4  6F07               	movwf	(sprintf@len+1)& (0+255),b
 24867  0022E6  0E00               	movlw	0
 24868  0022E8  6F06               	movwf	sprintf@len& (0+255),b
 24869                           
 24870                           ;doprnt.c: 746: while(cp[len])
 24871  0022EA  D004               	goto	l13463
 24872  0022EC                     l13461:
 24873                           
 24874                           ;doprnt.c: 747: len++;
 24875  0022EC  0101               	movlb	1	; () banked
 24876  0022EE  4B06               	infsnz	sprintf@len& (0+255),f,b
 24877  0022F0  2B07               	incf	(sprintf@len+1)& (0+255),f,b
 24878  0022F2  D000               	goto	l13463
 24879  0022F4                     l13463:
 24880                           
 24881                           ; BSR set to: 1
 24882  0022F4  0101               	movlb	1	; () banked
 24883  0022F6  5106               	movf	sprintf@len& (0+255),w,b
 24884  0022F8  0101               	movlb	1	; () banked
 24885  0022FA  2504               	addwf	sprintf@cp& (0+255),w,b
 24886  0022FC  0100               	movlb	0	; () banked
 24887  0022FE  6FD5               	movwf	??_sprintf& (0+255),b
 24888  002300  0101               	movlb	1	; () banked
 24889  002302  5107               	movf	(sprintf@len+1)& (0+255),w,b
 24890  002304  0101               	movlb	1	; () banked
 24891  002306  2105               	addwfc	(sprintf@cp+1)& (0+255),w,b
 24892  002308  0100               	movlb	0	; () banked
 24893  00230A  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 24894  00230C  C0D5  FFF6         	movff	??_sprintf,tblptrl
 24895  002310  C0D6  FFF7         	movff	??_sprintf+1,tblptrh
 24896  002314  0E00               	movlw	low (__mediumconst shr (0+16))
 24897  002316  6EF8               	movwf	tblptru,c
 24898  002318  0E0F               	movlw	(high __ramtop+-1)
 24899  00231A  64F7               	cpfsgt	tblptrh,c
 24900  00231C  D003               	bra	u16257
 24901  00231E  0008               	tblrd		*
 24902  002320  50F5               	movf	tablat,w,c
 24903  002322  D005               	bra	u16250
 24904  002324                     u16257:
 24905  002324  CFF6 FFE9          	movff	tblptrl,fsr0l
 24906  002328  CFF7 FFEA          	movff	tblptrh,fsr0h
 24907  00232C  50EF               	movf	indf0,w,c
 24908  00232E                     u16250:
 24909  00232E  0900               	iorlw	0
 24910  002330  B4D8               	btfsc	status,2,c
 24911  002332  D002               	goto	l13465
 24912  002334  D7DB               	goto	l13461
 24913  002336  D000               	goto	l13465
 24914  002338                     l13465:
 24915                           
 24916                           ;doprnt.c: 757: if(width > len)
 24917  002338  0101               	movlb	1	; () banked
 24918  00233A  5119               	movf	sprintf@width& (0+255),w,b
 24919  00233C  0101               	movlb	1	; () banked
 24920  00233E  5D06               	subwf	sprintf@len& (0+255),w,b
 24921  002340  0101               	movlb	1	; () banked
 24922  002342  511A               	movf	(sprintf@width+1)& (0+255),w,b
 24923  002344  0101               	movlb	1	; () banked
 24924  002346  5907               	subwfb	(sprintf@len+1)& (0+255),w,b
 24925  002348  B0D8               	btfsc	status,0,c
 24926  00234A  D009               	goto	l13469
 24927                           
 24928                           ; BSR set to: 1
 24929                           ;doprnt.c: 758: width -= len;
 24930  00234C  0101               	movlb	1	; () banked
 24931  00234E  5106               	movf	sprintf@len& (0+255),w,b
 24932  002350  0101               	movlb	1	; () banked
 24933  002352  5F19               	subwf	sprintf@width& (0+255),f,b
 24934  002354  0101               	movlb	1	; () banked
 24935  002356  5107               	movf	(sprintf@len+1)& (0+255),w,b
 24936  002358  0101               	movlb	1	; () banked
 24937  00235A  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 24938  00235C  D010               	goto	l13475
 24939  00235E                     l13469:
 24940                           
 24941                           ; BSR set to: 1
 24942                           ;doprnt.c: 759: else
 24943                           ;doprnt.c: 760: width = 0;
 24944  00235E  0E00               	movlw	0
 24945  002360  0101               	movlb	1	; () banked
 24946  002362  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 24947  002364  0E00               	movlw	0
 24948  002366  6F19               	movwf	sprintf@width& (0+255),b
 24949                           
 24950                           ; BSR set to: 1
 24951                           ;doprnt.c: 764: while(width--)
 24952  002368  D00A               	goto	l13475
 24953  00236A                     l13471:
 24954                           
 24955                           ; BSR set to: 1
 24956                           ;doprnt.c: 765: ((*sp++ = (' ')));
 24957  00236A  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 24958  00236E  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 24959  002372  0E20               	movlw	32
 24960  002374  6EDF               	movwf	indf2,c
 24961                           
 24962                           ; BSR set to: 1
 24963  002376  0100               	movlb	0	; () banked
 24964  002378  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 24965  00237A  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 24966  00237C  D000               	goto	l13475
 24967  00237E                     l13475:
 24968  00237E  0101               	movlb	1	; () banked
 24969  002380  0719               	decf	sprintf@width& (0+255),f,b
 24970  002382  A0D8               	btfss	status,0,c
 24971  002384  071A               	decf	(sprintf@width+1)& (0+255),f,b
 24972  002386  0101               	movlb	1	; () banked
 24973  002388  2919               	incf	sprintf@width& (0+255),w,b
 24974  00238A  E1EF               	bnz	l13471
 24975  00238C  0101               	movlb	1	; () banked
 24976  00238E  291A               	incf	(sprintf@width+1)& (0+255),w,b
 24977  002390  B4D8               	btfsc	status,2,c
 24978  002392  D01F               	goto	l13483
 24979  002394  D7EA               	goto	l13471
 24980                           
 24981                           ; BSR set to: 1
 24982                           ;doprnt.c: 767: while(len--)
 24983  002396  D01D               	goto	l13483
 24984  002398                     l13477:
 24985                           
 24986                           ; BSR set to: 1
 24987                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 24988  002398  C104  FFF6         	movff	sprintf@cp,tblptrl
 24989  00239C  C105  FFF7         	movff	sprintf@cp+1,tblptrh
 24990  0023A0  0E00               	movlw	low (__mediumconst shr (0+16))
 24991  0023A2  6EF8               	movwf	tblptru,c
 24992  0023A4  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 24993  0023A8  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 24994  0023AC  0E0F               	movlw	(high __ramtop+-1)
 24995  0023AE  64F7               	cpfsgt	tblptrh,c
 24996  0023B0  D003               	bra	u16297
 24997  0023B2  0008               	tblrd		*
 24998  0023B4  50F5               	movf	tablat,w,c
 24999  0023B6  D005               	bra	u16290
 25000  0023B8                     u16297:
 25001  0023B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 25002  0023BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 25003  0023C0  50EF               	movf	indf0,w,c
 25004  0023C2                     u16290:
 25005  0023C2  6EDF               	movwf	indf2,c
 25006  0023C4  0101               	movlb	1	; () banked
 25007  0023C6  4B04               	infsnz	sprintf@cp& (0+255),f,b
 25008  0023C8  2B05               	incf	(sprintf@cp+1)& (0+255),f,b
 25009                           
 25010                           ; BSR set to: 1
 25011  0023CA  0100               	movlb	0	; () banked
 25012  0023CC  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 25013  0023CE  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 25014  0023D0  D000               	goto	l13483
 25015  0023D2                     l13483:
 25016  0023D2  0101               	movlb	1	; () banked
 25017  0023D4  0706               	decf	sprintf@len& (0+255),f,b
 25018  0023D6  A0D8               	btfss	status,0,c
 25019  0023D8  0707               	decf	(sprintf@len+1)& (0+255),f,b
 25020  0023DA  0101               	movlb	1	; () banked
 25021  0023DC  2906               	incf	sprintf@len& (0+255),w,b
 25022  0023DE  E1DC               	bnz	l13477
 25023  0023E0  0101               	movlb	1	; () banked
 25024  0023E2  2907               	incf	(sprintf@len+1)& (0+255),w,b
 25025  0023E4  B4D8               	btfsc	status,2,c
 25026  0023E6  EF4C  F018         	goto	l13791
 25027  0023EA  D7D6               	goto	l13477
 25028                           
 25029                           ; BSR set to: 1
 25030                           ;doprnt.c: 774: continue;
 25031  0023EC  EF4C  F018         	goto	l13791
 25032  0023F0                     l13485:
 25033                           
 25034                           ; BSR set to: 1
 25035                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 25036  0023F0  C108  FFD9         	movff	sprintf@ap,fsr2l
 25037  0023F4  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 25038  0023F8  50DF               	movf	indf2,w,c
 25039  0023FA  0101               	movlb	1	; () banked
 25040  0023FC  6F1D               	movwf	sprintf@c& (0+255),b
 25041                           
 25042                           ; BSR set to: 1
 25043  0023FE  0E02               	movlw	2
 25044  002400  0101               	movlb	1	; () banked
 25045  002402  2708               	addwf	sprintf@ap& (0+255),f,b
 25046  002404  0E00               	movlw	0
 25047  002406  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 25048  002408  D000               	goto	l13489
 25049  00240A                     l13489:
 25050                           
 25051                           ; BSR set to: 1
 25052                           ;doprnt.c: 805: cp = (char *)&c;
 25053  00240A  0E1D               	movlw	low sprintf@c
 25054  00240C  0101               	movlb	1	; () banked
 25055  00240E  6F04               	movwf	sprintf@cp& (0+255),b
 25056  002410  0E01               	movlw	high sprintf@c
 25057  002412  0101               	movlb	1	; () banked
 25058  002414  6F05               	movwf	(sprintf@cp+1)& (0+255),b
 25059                           
 25060                           ; BSR set to: 1
 25061                           ;doprnt.c: 806: len = 1;
 25062  002416  0E00               	movlw	0
 25063  002418  0101               	movlb	1	; () banked
 25064  00241A  6F07               	movwf	(sprintf@len+1)& (0+255),b
 25065  00241C  0E01               	movlw	1
 25066  00241E  6F06               	movwf	sprintf@len& (0+255),b
 25067                           
 25068                           ;doprnt.c: 807: goto dostring;
 25069  002420  D78B               	goto	l13465
 25070                           
 25071                           ; BSR set to: 1
 25072                           ;doprnt.c: 822: }
 25073  002422  D02A               	goto	l13497
 25074  002424                     l13495:
 25075  002424  C0C9  FFF6         	movff	sprintf@f,tblptrl
 25076  002428  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
 25077  00242C  0100               	movlb	0	; () banked
 25078  00242E  4BC9               	infsnz	sprintf@f& (0+255),f,b
 25079  002430  2BCA               	incf	(sprintf@f+1)& (0+255),f,b
 25080  002432                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25081  002432  6AF8               	clrf	tblptru,c
 25082  002434                     	endif
 25083  002434                     	if	0	;tblptru may be non-zero
 25084  002434                     	endif
 25085  002434  0008               	tblrd		*
 25086  002436  CFF5 F11D          	movff	tablat,sprintf@c
 25087  00243A  0101               	movlb	1	; () banked
 25088  00243C  511D               	movf	sprintf@c& (0+255),w,b
 25089                           
 25090                           ; Switch size 1, requested type "space"
 25091                           ; Number of cases is 9, Range of values is 0 to 120
 25092                           ; switch strategies available:
 25093                           ; Name         Instructions Cycles
 25094                           ; simple_byte           28    15 (average)
 25095                           ;	Chosen strategy is simple_byte
 25096  00243E  0A00               	xorlw	0	; case 0
 25097  002440  B4D8               	btfsc	status,2,c
 25098  002442  EF5E  F018         	goto	l13793
 25099  002446  0A58               	xorlw	88	; case 88
 25100  002448  B4D8               	btfsc	status,2,c
 25101  00244A  D72D               	goto	l13449
 25102  00244C  0A3B               	xorlw	59	; case 99
 25103  00244E  B4D8               	btfsc	status,2,c
 25104  002450  D7CF               	goto	l13485
 25105  002452  0A07               	xorlw	7	; case 100
 25106  002454  B4D8               	btfsc	status,2,c
 25107  002456  D010               	goto	l13497
 25108  002458  0A02               	xorlw	2	; case 102
 25109  00245A  B4D8               	btfsc	status,2,c
 25110  00245C  D720               	goto	l13447
 25111  00245E  0A0F               	xorlw	15	; case 105
 25112  002460  B4D8               	btfsc	status,2,c
 25113  002462  D00A               	goto	l13497
 25114  002464  0A05               	xorlw	5	; case 108
 25115  002466  B4D8               	btfsc	status,2,c
 25116  002468  D717               	goto	l13445
 25117  00246A  0A1F               	xorlw	31	; case 115
 25118  00246C  B4D8               	btfsc	status,2,c
 25119  00246E  D71E               	goto	l13451
 25120  002470  0A0B               	xorlw	11	; case 120
 25121  002472  B4D8               	btfsc	status,2,c
 25122  002474  D718               	goto	l13449
 25123  002476  D7C9               	goto	l13489
 25124  002478                     l13497:
 25125                           
 25126                           ; BSR set to: 1
 25127                           ;doprnt.c: 825: if(flag & (0x700)) {
 25128  002478  0E07               	movlw	7
 25129  00247A  0101               	movlb	1	; () banked
 25130  00247C  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 25131  00247E  B4D8               	btfsc	status,2,c
 25132  002480  D3ED               	goto	l2236
 25133                           
 25134                           ; BSR set to: 1
 25135                           ;doprnt.c: 829: prec = 6;
 25136  002482  0E00               	movlw	0
 25137  002484  0101               	movlb	1	; () banked
 25138  002486  6F0B               	movwf	(sprintf@prec+1)& (0+255),b
 25139  002488  0E06               	movlw	6
 25140  00248A  6F0A               	movwf	sprintf@prec& (0+255),b
 25141                           
 25142                           ; BSR set to: 1
 25143                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 25144  00248C  C108  FFD9         	movff	sprintf@ap,fsr2l
 25145  002490  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 25146  002494  CFDE F116          	movff	postinc2,sprintf@fval
 25147  002498  CFDE F117          	movff	postinc2,sprintf@fval+1
 25148  00249C  CFDD F118          	movff	postdec2,sprintf@fval+2
 25149                           
 25150                           ; BSR set to: 1
 25151  0024A0  0E03               	movlw	3
 25152  0024A2  0101               	movlb	1	; () banked
 25153  0024A4  2708               	addwf	sprintf@ap& (0+255),f,b
 25154  0024A6  0E00               	movlw	0
 25155  0024A8  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 25156                           
 25157                           ; BSR set to: 1
 25158                           ;doprnt.c: 831: if(fval < 0.0) {
 25159  0024AA  0101               	movlb	1	; () banked
 25160  0024AC  AF18               	btfss	(sprintf@fval+2)& (0+255),7,b
 25161  0024AE  D012               	goto	l13511
 25162                           
 25163                           ; BSR set to: 1
 25164                           ;doprnt.c: 832: fval = -fval;
 25165  0024B0  C116  F079         	movff	sprintf@fval,___ftneg@f1
 25166  0024B4  C117  F07A         	movff	sprintf@fval+1,___ftneg@f1+1
 25167  0024B8  C118  F07B         	movff	sprintf@fval+2,___ftneg@f1+2
 25168  0024BC  EC2C  F049         	call	___ftneg	;wreg free
 25169  0024C0  C079  F116         	movff	?___ftneg,sprintf@fval
 25170  0024C4  C07A  F117         	movff	?___ftneg+1,sprintf@fval+1
 25171  0024C8  C07B  F118         	movff	?___ftneg+2,sprintf@fval+2
 25172                           
 25173                           ;doprnt.c: 833: flag |= 0x03;
 25174  0024CC  0E03               	movlw	3
 25175  0024CE  0101               	movlb	1	; () banked
 25176  0024D0  131B               	iorwf	sprintf@flag& (0+255),f,b
 25177  0024D2  D000               	goto	l13511
 25178  0024D4                     l13511:
 25179                           
 25180                           ; BSR set to: 1
 25181                           ;doprnt.c: 834: }
 25182                           ;doprnt.c: 835: exp = 0;
 25183  0024D4  0E00               	movlw	0
 25184  0024D6  0101               	movlb	1	; () banked
 25185  0024D8  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 25186  0024DA  0E00               	movlw	0
 25187  0024DC  6F10               	movwf	sprintf@exp& (0+255),b
 25188                           
 25189                           ; BSR set to: 1
 25190                           ;doprnt.c: 836: if( fval!=0) {
 25191  0024DE  0101               	movlb	1	; () banked
 25192  0024E0  5116               	movf	sprintf@fval& (0+255),w,b
 25193  0024E2  0101               	movlb	1	; () banked
 25194  0024E4  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
 25195  0024E6  0101               	movlb	1	; () banked
 25196  0024E8  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
 25197  0024EA  B4D8               	btfsc	status,2,c
 25198  0024EC  D09D               	goto	l13539
 25199                           
 25200                           ; BSR set to: 1
 25201                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 25202  0024EE  0E82               	movlw	130
 25203  0024F0  0100               	movlb	0	; () banked
 25204  0024F2  6FD5               	movwf	??_sprintf& (0+255),b
 25205  0024F4  0EFF               	movlw	255
 25206  0024F6  0100               	movlb	0	; () banked
 25207  0024F8  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 25208  0024FA  C116  F0D7         	movff	sprintf@fval,??_sprintf+2
 25209  0024FE  C117  F0D8         	movff	sprintf@fval+1,??_sprintf+3
 25210  002502  C118  F0D9         	movff	sprintf@fval+2,??_sprintf+4
 25211  002506  C119  F0DA         	movff	sprintf@fval+3,??_sprintf+5
 25212  00250A  0E10               	movlw	16
 25213  00250C  D006               	goto	u16340
 25214  00250E                     u16345:
 25215  00250E  0100               	movlb	0	; () banked
 25216  002510  90D8               	bcf	status,0,c
 25217  002512  33DA               	rrcf	(??_sprintf+5)& (0+255),f,b
 25218  002514  33D9               	rrcf	(??_sprintf+4)& (0+255),f,b
 25219  002516  33D8               	rrcf	(??_sprintf+3)& (0+255),f,b
 25220  002518  33D7               	rrcf	(??_sprintf+2)& (0+255),f,b
 25221  00251A                     u16340:
 25222  00251A  2EE8               	decfsz	wreg,f,c
 25223  00251C  D7F8               	goto	u16345
 25224  00251E  0100               	movlb	0	; () banked
 25225  002520  51D7               	movf	(??_sprintf+2)& (0+255),w,b
 25226  002522  0100               	movlb	0	; () banked
 25227  002524  25D5               	addwf	??_sprintf& (0+255),w,b
 25228  002526  0101               	movlb	1	; () banked
 25229  002528  6F10               	movwf	sprintf@exp& (0+255),b
 25230  00252A  0E00               	movlw	0
 25231  00252C  0100               	movlb	0	; () banked
 25232  00252E  21D6               	addwfc	(??_sprintf+1)& (0+255),w,b
 25233  002530  0101               	movlb	1	; () banked
 25234  002532  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 25235                           
 25236                           ; BSR set to: 1
 25237                           ;doprnt.c: 838: exp--;
 25238  002534  0101               	movlb	1	; () banked
 25239  002536  0710               	decf	sprintf@exp& (0+255),f,b
 25240  002538  A0D8               	btfss	status,0,c
 25241  00253A  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 25242                           
 25243                           ; BSR set to: 1
 25244                           ;doprnt.c: 839: exp *= 3;
 25245  00253C  C110  F087         	movff	sprintf@exp,___wmul@multiplier
 25246  002540  C111  F088         	movff	sprintf@exp+1,___wmul@multiplier+1
 25247  002544  0E00               	movlw	0
 25248  002546  0100               	movlb	0	; () banked
 25249  002548  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 25250  00254A  0E03               	movlw	3
 25251  00254C  6F89               	movwf	___wmul@multiplicand& (0+255),b
 25252  00254E  ECDC  F048         	call	___wmul	;wreg free
 25253  002552  C087  F110         	movff	?___wmul,sprintf@exp
 25254  002556  C088  F111         	movff	?___wmul+1,sprintf@exp+1
 25255                           
 25256                           ;doprnt.c: 840: exp /= 10;
 25257  00255A  C110  F07F         	movff	sprintf@exp,___awdiv@dividend
 25258  00255E  C111  F080         	movff	sprintf@exp+1,___awdiv@dividend+1
 25259  002562  0E00               	movlw	0
 25260  002564  0100               	movlb	0	; () banked
 25261  002566  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 25262  002568  0E0A               	movlw	10
 25263  00256A  6F81               	movwf	___awdiv@divisor& (0+255),b
 25264  00256C  EC2A  F03E         	call	___awdiv	;wreg free
 25265  002570  C07F  F110         	movff	?___awdiv,sprintf@exp
 25266  002574  C080  F111         	movff	?___awdiv+1,sprintf@exp+1
 25267                           
 25268                           ;doprnt.c: 841: if(exp < 0)
 25269  002578  0101               	movlb	1	; () banked
 25270  00257A  AF11               	btfss	(sprintf@exp+1)& (0+255),7,b
 25271  00257C  D005               	goto	l13527
 25272                           
 25273                           ; BSR set to: 1
 25274                           ;doprnt.c: 842: exp--;
 25275  00257E  0101               	movlb	1	; () banked
 25276  002580  0710               	decf	sprintf@exp& (0+255),f,b
 25277  002582  A0D8               	btfss	status,0,c
 25278  002584  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 25279  002586  D000               	goto	l13527
 25280  002588                     l13527:
 25281                           
 25282                           ; BSR set to: 1
 25283                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 25284  002588  0101               	movlb	1	; () banked
 25285  00258A  5110               	movf	sprintf@exp& (0+255),w,b
 25286  00258C  0800               	sublw	0
 25287  00258E  EC79  F021         	call	_scale
 25288  002592  C0A2  F10C         	movff	?_scale,sprintf@tmpval
 25289  002596  C0A3  F10D         	movff	?_scale+1,sprintf@tmpval+1
 25290  00259A  C0A4  F10E         	movff	?_scale+2,sprintf@tmpval+2
 25291                           
 25292                           ;doprnt.c: 847: tmpval.integ *= fval;
 25293  00259E  C10C  F093         	movff	sprintf@tmpval,___ftmul@f1
 25294  0025A2  C10D  F094         	movff	sprintf@tmpval+1,___ftmul@f1+1
 25295  0025A6  C10E  F095         	movff	sprintf@tmpval+2,___ftmul@f1+2
 25296  0025AA  C116  F096         	movff	sprintf@fval,___ftmul@f2
 25297  0025AE  C117  F097         	movff	sprintf@fval+1,___ftmul@f2+1
 25298  0025B2  C118  F098         	movff	sprintf@fval+2,___ftmul@f2+2
 25299  0025B6  EC26  F037         	call	___ftmul	;wreg free
 25300  0025BA  C093  F10C         	movff	?___ftmul,sprintf@tmpval
 25301  0025BE  C094  F10D         	movff	?___ftmul+1,sprintf@tmpval+1
 25302  0025C2  C095  F10E         	movff	?___ftmul+2,sprintf@tmpval+2
 25303                           
 25304                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 25305  0025C6  C10C  F079         	movff	sprintf@tmpval,___ftge@ff1
 25306  0025CA  C10D  F07A         	movff	sprintf@tmpval+1,___ftge@ff1+1
 25307  0025CE  C10E  F07B         	movff	sprintf@tmpval+2,___ftge@ff1+2
 25308  0025D2  0E00               	movlw	0
 25309  0025D4  0100               	movlb	0	; () banked
 25310  0025D6  6F7C               	movwf	___ftge@ff2& (0+255),b
 25311  0025D8  0E80               	movlw	128
 25312  0025DA  0100               	movlb	0	; () banked
 25313  0025DC  6F7D               	movwf	(___ftge@ff2+1)& (0+255),b
 25314  0025DE  0E3F               	movlw	63
 25315  0025E0  0100               	movlb	0	; () banked
 25316  0025E2  6F7E               	movwf	(___ftge@ff2+2)& (0+255),b
 25317  0025E4  EC92  F03E         	call	___ftge	;wreg free
 25318  0025E8  0100               	movlb	0	; () banked
 25319  0025EA  B0D8               	btfsc	status,0,c
 25320  0025EC  D005               	goto	l13535
 25321                           
 25322                           ; BSR set to: 0
 25323                           ;doprnt.c: 849: exp--;
 25324  0025EE  0101               	movlb	1	; () banked
 25325  0025F0  0710               	decf	sprintf@exp& (0+255),f,b
 25326  0025F2  A0D8               	btfss	status,0,c
 25327  0025F4  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 25328  0025F6  D018               	goto	l13539
 25329  0025F8                     l13535:
 25330                           
 25331                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 25332  0025F8  C10C  F079         	movff	sprintf@tmpval,___ftge@ff1
 25333  0025FC  C10D  F07A         	movff	sprintf@tmpval+1,___ftge@ff1+1
 25334  002600  C10E  F07B         	movff	sprintf@tmpval+2,___ftge@ff1+2
 25335  002604  0E00               	movlw	0
 25336  002606  0100               	movlb	0	; () banked
 25337  002608  6F7C               	movwf	___ftge@ff2& (0+255),b
 25338  00260A  0E20               	movlw	32
 25339  00260C  0100               	movlb	0	; () banked
 25340  00260E  6F7D               	movwf	(___ftge@ff2+1)& (0+255),b
 25341  002610  0E41               	movlw	65
 25342  002612  0100               	movlb	0	; () banked
 25343  002614  6F7E               	movwf	(___ftge@ff2+2)& (0+255),b
 25344  002616  EC92  F03E         	call	___ftge	;wreg free
 25345  00261A  0100               	movlb	0	; () banked
 25346  00261C  A0D8               	btfss	status,0,c
 25347  00261E  D004               	goto	l13539
 25348                           
 25349                           ; BSR set to: 0
 25350                           ;doprnt.c: 851: exp++;
 25351  002620  0101               	movlb	1	; () banked
 25352  002622  4B10               	infsnz	sprintf@exp& (0+255),f,b
 25353  002624  2B11               	incf	(sprintf@exp+1)& (0+255),f,b
 25354                           
 25355                           ; BSR set to: 1
 25356                           
 25357                           ; BSR set to: 1
 25358  002626  D000               	goto	l13539
 25359  002628                     l13539:
 25360                           
 25361                           ;doprnt.c: 852: }
 25362                           ;doprnt.c: 1112: if(prec <= 12)
 25363  002628  0101               	movlb	1	; () banked
 25364  00262A  BF0B               	btfsc	(sprintf@prec+1)& (0+255),7,b
 25365  00262C  D008               	goto	l13541
 25366  00262E  0101               	movlb	1	; () banked
 25367  002630  510B               	movf	(sprintf@prec+1)& (0+255),w,b
 25368  002632  E11E               	bnz	l13543
 25369  002634  0E0D               	movlw	13
 25370  002636  0101               	movlb	1	; () banked
 25371  002638  5D0A               	subwf	sprintf@prec& (0+255),w,b
 25372  00263A  B0D8               	btfsc	status,0,c
 25373  00263C  D019               	goto	l13543
 25374  00263E                     l13541:
 25375                           
 25376                           ; BSR set to: 1
 25377                           ;doprnt.c: 1113: fval += fround(prec);
 25378  00263E  C116  F0AC         	movff	sprintf@fval,___ftadd@f1
 25379  002642  C117  F0AD         	movff	sprintf@fval+1,___ftadd@f1+1
 25380  002646  C118  F0AE         	movff	sprintf@fval+2,___ftadd@f1+2
 25381  00264A  0101               	movlb	1	; () banked
 25382  00264C  510A               	movf	sprintf@prec& (0+255),w,b
 25383  00264E  EC23  F02C         	call	_fround
 25384  002652  C0A2  F0AF         	movff	?_fround,___ftadd@f2
 25385  002656  C0A3  F0B0         	movff	?_fround+1,___ftadd@f2+1
 25386  00265A  C0A4  F0B1         	movff	?_fround+2,___ftadd@f2+2
 25387  00265E  EC8F  F02D         	call	___ftadd	;wreg free
 25388  002662  C0AC  F116         	movff	?___ftadd,sprintf@fval
 25389  002666  C0AD  F117         	movff	?___ftadd+1,sprintf@fval+1
 25390  00266A  C0AE  F118         	movff	?___ftadd+2,sprintf@fval+2
 25391  00266E  D000               	goto	l13543
 25392  002670                     l13543:
 25393                           
 25394                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 25395  002670  0101               	movlb	1	; () banked
 25396  002672  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 25397  002674  D008               	goto	l13545
 25398  002676  0101               	movlb	1	; () banked
 25399  002678  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 25400  00267A  E12C               	bnz	l13551
 25401  00267C  0E0A               	movlw	10
 25402  00267E  0101               	movlb	1	; () banked
 25403  002680  5D10               	subwf	sprintf@exp& (0+255),w,b
 25404  002682  B0D8               	btfsc	status,0,c
 25405  002684  D027               	goto	l13551
 25406  002686                     l13545:
 25407                           
 25408                           ; BSR set to: 1
 25409  002686  0101               	movlb	1	; () banked
 25410  002688  5116               	movf	sprintf@fval& (0+255),w,b
 25411  00268A  0101               	movlb	1	; () banked
 25412  00268C  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
 25413  00268E  0101               	movlb	1	; () banked
 25414  002690  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
 25415  002692  B4D8               	btfsc	status,2,c
 25416  002694  D07F               	goto	l13565
 25417                           
 25418                           ; BSR set to: 1
 25419  002696  C116  F0B8         	movff	sprintf@fval,___fttol@f1
 25420  00269A  C117  F0B9         	movff	sprintf@fval+1,___fttol@f1+1
 25421  00269E  C118  F0BA         	movff	sprintf@fval+2,___fttol@f1+2
 25422  0026A2  EC85  F038         	call	___fttol	;wreg free
 25423  0026A6  0100               	movlb	0	; () banked
 25424  0026A8  51B8               	movf	?___fttol& (0+255),w,b
 25425  0026AA  0100               	movlb	0	; () banked
 25426  0026AC  11B9               	iorwf	(?___fttol+1)& (0+255),w,b
 25427  0026AE  0100               	movlb	0	; () banked
 25428  0026B0  11BA               	iorwf	(?___fttol+2)& (0+255),w,b
 25429  0026B2  0100               	movlb	0	; () banked
 25430  0026B4  11BB               	iorwf	(?___fttol+3)& (0+255),w,b
 25431  0026B6  A4D8               	btfss	status,2,c
 25432  0026B8  D06D               	goto	l13565
 25433                           
 25434                           ; BSR set to: 0
 25435  0026BA  0101               	movlb	1	; () banked
 25436  0026BC  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 25437  0026BE  D06A               	goto	l13565
 25438  0026C0  0101               	movlb	1	; () banked
 25439  0026C2  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 25440  0026C4  E107               	bnz	l13551
 25441  0026C6  0E02               	movlw	2
 25442  0026C8  0101               	movlb	1	; () banked
 25443  0026CA  5D10               	subwf	sprintf@exp& (0+255),w,b
 25444  0026CC  B0D8               	btfsc	status,0,c
 25445  0026CE  D002               	goto	l13551
 25446  0026D0  D061               	goto	l13565
 25447  0026D2  D000               	goto	l13551
 25448  0026D4                     l13551:
 25449                           
 25450                           ; BSR set to: 1
 25451                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 25452  0026D4  C10C  F079         	movff	sprintf@tmpval,___ftge@ff1
 25453  0026D8  C10D  F07A         	movff	sprintf@tmpval+1,___ftge@ff1+1
 25454  0026DC  C10E  F07B         	movff	sprintf@tmpval+2,___ftge@ff1+2
 25455  0026E0  0E70               	movlw	112
 25456  0026E2  0100               	movlb	0	; () banked
 25457  0026E4  6F7C               	movwf	___ftge@ff2& (0+255),b
 25458  0026E6  0E89               	movlw	137
 25459  0026E8  0100               	movlb	0	; () banked
 25460  0026EA  6F7D               	movwf	(___ftge@ff2+1)& (0+255),b
 25461  0026EC  0E40               	movlw	64
 25462  0026EE  0100               	movlb	0	; () banked
 25463  0026F0  6F7E               	movwf	(___ftge@ff2+2)& (0+255),b
 25464  0026F2  EC92  F03E         	call	___ftge	;wreg free
 25465  0026F6  0100               	movlb	0	; () banked
 25466  0026F8  B0D8               	btfsc	status,0,c
 25467  0026FA  D003               	goto	l13555
 25468                           
 25469                           ; BSR set to: 0
 25470                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 25471  0026FC  0101               	movlb	1	; () banked
 25472  0026FE  0EF7               	movlw	247
 25473  002700  D002               	goto	L17
 25474  002702                     l13555:
 25475                           
 25476                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 25477  002702  0101               	movlb	1	; () banked
 25478  002704  0EF8               	movlw	248
 25479  002706                     L17:
 25480  002706  2710               	addwf	sprintf@exp& (0+255),f,b
 25481  002708  0EFF               	movlw	255
 25482  00270A  2311               	addwfc	(sprintf@exp+1)& (0+255),f,b
 25483  00270C  D000               	goto	l13557
 25484  00270E                     l13557:
 25485                           
 25486                           ; BSR set to: 1
 25487                           ;doprnt.c: 1124: }
 25488                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 25489  00270E  0101               	movlb	1	; () banked
 25490  002710  5110               	movf	sprintf@exp& (0+255),w,b
 25491  002712  EC79  F021         	call	_scale
 25492  002716  C0A2  F10C         	movff	?_scale,sprintf@tmpval
 25493  00271A  C0A3  F10D         	movff	?_scale+1,sprintf@tmpval+1
 25494  00271E  C0A4  F10E         	movff	?_scale+2,sprintf@tmpval+2
 25495                           
 25496                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 25497  002722  D017               	goto	l13561
 25498  002724  C116  F079         	movff	sprintf@fval,__div_to_l_@f1
 25499  002728  C117  F07A         	movff	sprintf@fval+1,__div_to_l_@f1+1
 25500  00272C  C118  F07B         	movff	sprintf@fval+2,__div_to_l_@f1+2
 25501  002730  C10C  F07C         	movff	sprintf@tmpval,__div_to_l_@f2
 25502  002734  C10D  F07D         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
 25503  002738  C10E  F07E         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
 25504  00273C  ECDD  F034         	call	__div_to_l_	;wreg free
 25505  002740  C079  F112         	movff	?__div_to_l_,sprintf@val
 25506  002744  C07A  F113         	movff	?__div_to_l_+1,sprintf@val+1
 25507  002748  C07B  F114         	movff	?__div_to_l_+2,sprintf@val+2
 25508  00274C  C07C  F115         	movff	?__div_to_l_+3,sprintf@val+3
 25509  002750  D017               	goto	l13563
 25510  002752                     l13561:
 25511  002752  C116  F079         	movff	sprintf@fval,__tdiv_to_l_@f1
 25512  002756  C117  F07A         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
 25513  00275A  C118  F07B         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
 25514  00275E  C10C  F07C         	movff	sprintf@tmpval,__tdiv_to_l_@f2
 25515  002762  C10D  F07D         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
 25516  002766  C10E  F07E         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
 25517  00276A  EC0A  F034         	call	__tdiv_to_l_	;wreg free
 25518  00276E  C079  F112         	movff	?__tdiv_to_l_,sprintf@val
 25519  002772  C07A  F113         	movff	?__tdiv_to_l_+1,sprintf@val+1
 25520  002776  C07B  F114         	movff	?__tdiv_to_l_+2,sprintf@val+2
 25521  00277A  C07C  F115         	movff	?__tdiv_to_l_+3,sprintf@val+3
 25522  00277E  D000               	goto	l13563
 25523  002780                     l13563:
 25524                           
 25525                           ;doprnt.c: 1129: fval = 0.0;
 25526  002780  0E00               	movlw	0
 25527  002782  0101               	movlb	1	; () banked
 25528  002784  6F16               	movwf	sprintf@fval& (0+255),b
 25529  002786  0E00               	movlw	0
 25530  002788  0101               	movlb	1	; () banked
 25531  00278A  6F17               	movwf	(sprintf@fval+1)& (0+255),b
 25532  00278C  0E00               	movlw	0
 25533  00278E  0101               	movlb	1	; () banked
 25534  002790  6F18               	movwf	(sprintf@fval+2)& (0+255),b
 25535                           
 25536                           ;doprnt.c: 1130: } else {
 25537  002792  D034               	goto	l13569
 25538  002794                     l13565:
 25539                           
 25540                           ;doprnt.c: 1131: val = (unsigned long)fval;
 25541  002794  C116  F0B8         	movff	sprintf@fval,___fttol@f1
 25542  002798  C117  F0B9         	movff	sprintf@fval+1,___fttol@f1+1
 25543  00279C  C118  F0BA         	movff	sprintf@fval+2,___fttol@f1+2
 25544  0027A0  EC85  F038         	call	___fttol	;wreg free
 25545  0027A4  C0B8  F112         	movff	?___fttol,sprintf@val
 25546  0027A8  C0B9  F113         	movff	?___fttol+1,sprintf@val+1
 25547  0027AC  C0BA  F114         	movff	?___fttol+2,sprintf@val+2
 25548  0027B0  C0BB  F115         	movff	?___fttol+3,sprintf@val+3
 25549                           
 25550                           ;doprnt.c: 1132: fval -= (double)val;
 25551  0027B4  C116  F0B8         	movff	sprintf@fval,___ftsub@f1
 25552  0027B8  C117  F0B9         	movff	sprintf@fval+1,___ftsub@f1+1
 25553  0027BC  C118  F0BA         	movff	sprintf@fval+2,___ftsub@f1+2
 25554  0027C0  C112  F081         	movff	sprintf@val,___lltoft@c
 25555  0027C4  C113  F082         	movff	sprintf@val+1,___lltoft@c+1
 25556  0027C8  C114  F083         	movff	sprintf@val+2,___lltoft@c+2
 25557  0027CC  C115  F084         	movff	sprintf@val+3,___lltoft@c+3
 25558  0027D0  EC81  F044         	call	___lltoft	;wreg free
 25559  0027D4  C081  F0BB         	movff	?___lltoft,___ftsub@f2
 25560  0027D8  C082  F0BC         	movff	?___lltoft+1,___ftsub@f2+1
 25561  0027DC  C083  F0BD         	movff	?___lltoft+2,___ftsub@f2+2
 25562  0027E0  ECAC  F047         	call	___ftsub	;wreg free
 25563  0027E4  C0B8  F116         	movff	?___ftsub,sprintf@fval
 25564  0027E8  C0B9  F117         	movff	?___ftsub+1,sprintf@fval+1
 25565  0027EC  C0BA  F118         	movff	?___ftsub+2,sprintf@fval+2
 25566                           
 25567                           ;doprnt.c: 1133: exp = 0;
 25568  0027F0  0E00               	movlw	0
 25569  0027F2  0101               	movlb	1	; () banked
 25570  0027F4  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 25571  0027F6  0E00               	movlw	0
 25572  0027F8  6F10               	movwf	sprintf@exp& (0+255),b
 25573  0027FA  D000               	goto	l13569
 25574  0027FC                     l13569:
 25575                           
 25576                           ; BSR set to: 1
 25577                           ;doprnt.c: 1134: }
 25578                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 25579  0027FC  0E01               	movlw	1
 25580  0027FE  0101               	movlb	1	; () banked
 25581  002800  6F1D               	movwf	sprintf@c& (0+255),b
 25582  002802                     l13571:
 25583                           
 25584                           ; BSR set to: 1
 25585  002802  0E0A               	movlw	10
 25586  002804  0101               	movlb	1	; () banked
 25587  002806  191D               	xorwf	sprintf@c& (0+255),w,b
 25588  002808  B4D8               	btfsc	status,2,c
 25589  00280A  D025               	goto	l13583
 25590  00280C  D001               	goto	l13575
 25591                           
 25592                           ; BSR set to: 1
 25593  00280E  D023               	goto	l13583
 25594  002810                     l13575:
 25595                           
 25596                           ; BSR set to: 1
 25597                           ;doprnt.c: 1137: if(val < dpowers[c])
 25598  002810  0101               	movlb	1	; () banked
 25599  002812  511D               	movf	sprintf@c& (0+255),w,b
 25600  002814  0D04               	mullw	4
 25601  002816  0E61               	movlw	low _dpowers
 25602  002818  24F3               	addwf	prodl,w,c
 25603  00281A  6EF6               	movwf	tblptrl,c
 25604  00281C  0EEE               	movlw	high _dpowers
 25605  00281E  20F4               	addwfc	prodh,w,c
 25606  002820  6EF7               	movwf	tblptrh,c
 25607  002822                     	if	1	;There are 3 active tblptr bytes
 25608  002822  6AF8               	clrf	tblptru,c
 25609  002824  0E00               	movlw	low (__mediumconst shr (0+16))
 25610  002826  22F8               	addwfc	tblptru,f,c
 25611  002828                     	endif
 25612  002828  0009               	tblrd		*+
 25613  00282A  50F5               	movf	tablat,w,c
 25614  00282C  0101               	movlb	1	; () banked
 25615  00282E  5D12               	subwf	sprintf@val& (0+255),w,b
 25616  002830  0009               	tblrd		*+
 25617  002832  50F5               	movf	tablat,w,c
 25618  002834  0101               	movlb	1	; () banked
 25619  002836  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 25620  002838  0009               	tblrd		*+
 25621  00283A  50F5               	movf	tablat,w,c
 25622  00283C  0101               	movlb	1	; () banked
 25623  00283E  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 25624  002840  0009               	tblrd		*+
 25625  002842  50F5               	movf	tablat,w,c
 25626  002844  0101               	movlb	1	; () banked
 25627  002846  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 25628  002848  A0D8               	btfss	status,0,c
 25629  00284A  D005               	goto	l13583
 25630  00284C  D001               	goto	l13579
 25631                           
 25632                           ; BSR set to: 1
 25633                           ;doprnt.c: 1138: break;
 25634  00284E  D003               	goto	l13583
 25635  002850                     l13579:
 25636                           
 25637                           ; BSR set to: 1
 25638  002850  0101               	movlb	1	; () banked
 25639  002852  2B1D               	incf	sprintf@c& (0+255),f,b
 25640  002854  D7D6               	goto	l13571
 25641  002856                     l13583:
 25642                           
 25643                           ; BSR set to: 1
 25644                           ;doprnt.c: 1142: width -= prec + c + exp;
 25645  002856  C11D  F0D5         	movff	sprintf@c,??_sprintf
 25646  00285A  0100               	movlb	0	; () banked
 25647  00285C  6BD6               	clrf	(??_sprintf+1)& (0+255),b
 25648  00285E  BFD5               	btfsc	??_sprintf& (0+255),7,b
 25649  002860  07D6               	decf	(??_sprintf+1)& (0+255),f,b
 25650  002862  0101               	movlb	1	; () banked
 25651  002864  510A               	movf	sprintf@prec& (0+255),w,b
 25652  002866  0100               	movlb	0	; () banked
 25653  002868  27D5               	addwf	??_sprintf& (0+255),f,b
 25654  00286A  0101               	movlb	1	; () banked
 25655  00286C  510B               	movf	(sprintf@prec+1)& (0+255),w,b
 25656  00286E  0100               	movlb	0	; () banked
 25657  002870  23D6               	addwfc	(??_sprintf+1)& (0+255),f,b
 25658  002872  0101               	movlb	1	; () banked
 25659  002874  5110               	movf	sprintf@exp& (0+255),w,b
 25660  002876  0100               	movlb	0	; () banked
 25661  002878  27D5               	addwf	??_sprintf& (0+255),f,b
 25662  00287A  0101               	movlb	1	; () banked
 25663  00287C  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 25664  00287E  0100               	movlb	0	; () banked
 25665  002880  23D6               	addwfc	(??_sprintf+1)& (0+255),f,b
 25666  002882  0100               	movlb	0	; () banked
 25667  002884  51D5               	movf	??_sprintf& (0+255),w,b
 25668  002886  0101               	movlb	1	; () banked
 25669  002888  5F19               	subwf	sprintf@width& (0+255),f,b
 25670  00288A  0100               	movlb	0	; () banked
 25671  00288C  51D6               	movf	(??_sprintf+1)& (0+255),w,b
 25672  00288E  0101               	movlb	1	; () banked
 25673  002890  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 25674                           
 25675                           ;doprnt.c: 1143: if(
 25676                           ;doprnt.c: 1147: prec)
 25677  002892  0101               	movlb	1	; () banked
 25678  002894  510A               	movf	sprintf@prec& (0+255),w,b
 25679  002896  0101               	movlb	1	; () banked
 25680  002898  110B               	iorwf	(sprintf@prec+1)& (0+255),w,b
 25681  00289A  B4D8               	btfsc	status,2,c
 25682  00289C  D005               	goto	l13587
 25683                           
 25684                           ; BSR set to: 1
 25685                           ;doprnt.c: 1148: width--;
 25686  00289E  0101               	movlb	1	; () banked
 25687  0028A0  0719               	decf	sprintf@width& (0+255),f,b
 25688  0028A2  A0D8               	btfss	status,0,c
 25689  0028A4  071A               	decf	(sprintf@width+1)& (0+255),f,b
 25690  0028A6  D000               	goto	l13587
 25691  0028A8                     l13587:
 25692                           
 25693                           ; BSR set to: 1
 25694                           ;doprnt.c: 1149: if(flag & 0x03)
 25695  0028A8  0E03               	movlw	3
 25696  0028AA  0101               	movlb	1	; () banked
 25697  0028AC  151B               	andwf	sprintf@flag& (0+255),w,b
 25698  0028AE  0100               	movlb	0	; () banked
 25699  0028B0  6FD5               	movwf	??_sprintf& (0+255),b
 25700  0028B2  0E00               	movlw	0
 25701  0028B4  0101               	movlb	1	; () banked
 25702  0028B6  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 25703  0028B8  0100               	movlb	0	; () banked
 25704  0028BA  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 25705  0028BC  0100               	movlb	0	; () banked
 25706  0028BE  51D5               	movf	??_sprintf& (0+255),w,b
 25707  0028C0  0100               	movlb	0	; () banked
 25708  0028C2  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
 25709  0028C4  B4D8               	btfsc	status,2,c
 25710  0028C6  D005               	goto	l13591
 25711                           
 25712                           ; BSR set to: 0
 25713                           ;doprnt.c: 1150: width--;
 25714  0028C8  0101               	movlb	1	; () banked
 25715  0028CA  0719               	decf	sprintf@width& (0+255),f,b
 25716  0028CC  A0D8               	btfss	status,0,c
 25717  0028CE  071A               	decf	(sprintf@width+1)& (0+255),f,b
 25718  0028D0  D000               	goto	l13591
 25719  0028D2                     l13591:
 25720                           
 25721                           ;doprnt.c: 1153: if(flag & 0x04) {
 25722  0028D2  0101               	movlb	1	; () banked
 25723  0028D4  A51B               	btfss	sprintf@flag& (0+255),2,b
 25724  0028D6  D043               	goto	l13613
 25725                           
 25726                           ; BSR set to: 1
 25727                           ;doprnt.c: 1157: if(flag & 0x03)
 25728  0028D8  0E03               	movlw	3
 25729  0028DA  0101               	movlb	1	; () banked
 25730  0028DC  151B               	andwf	sprintf@flag& (0+255),w,b
 25731  0028DE  0100               	movlb	0	; () banked
 25732  0028E0  6FD5               	movwf	??_sprintf& (0+255),b
 25733  0028E2  0E00               	movlw	0
 25734  0028E4  0101               	movlb	1	; () banked
 25735  0028E6  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 25736  0028E8  0100               	movlb	0	; () banked
 25737  0028EA  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 25738  0028EC  0100               	movlb	0	; () banked
 25739  0028EE  51D5               	movf	??_sprintf& (0+255),w,b
 25740  0028F0  0100               	movlb	0	; () banked
 25741  0028F2  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
 25742  0028F4  B4D8               	btfsc	status,2,c
 25743  0028F6  D018               	goto	l13605
 25744                           
 25745                           ; BSR set to: 0
 25746                           ;doprnt.c: 1159: ((*sp++ = ('-')));
 25747  0028F8  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25748  0028FC  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25749  002900  0E2D               	movlw	45
 25750  002902  6EDF               	movwf	indf2,c
 25751                           
 25752                           ; BSR set to: 0
 25753  002904  0100               	movlb	0	; () banked
 25754  002906  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 25755  002908  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 25756                           
 25757                           ; BSR set to: 0
 25758                           ;doprnt.c: 1168: while(width > 0) {
 25759  00290A  D00E               	goto	l13605
 25760  00290C                     l13599:
 25761                           
 25762                           ;doprnt.c: 1169: ((*sp++ = ('0')));
 25763  00290C  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25764  002910  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25765  002914  0E30               	movlw	48
 25766  002916  6EDF               	movwf	indf2,c
 25767  002918  0100               	movlb	0	; () banked
 25768  00291A  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 25769  00291C  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 25770                           
 25771                           ; BSR set to: 0
 25772                           ;doprnt.c: 1170: width--;
 25773  00291E  0101               	movlb	1	; () banked
 25774  002920  0719               	decf	sprintf@width& (0+255),f,b
 25775  002922  A0D8               	btfss	status,0,c
 25776  002924  071A               	decf	(sprintf@width+1)& (0+255),f,b
 25777  002926  D000               	goto	l13605
 25778  002928                     l13605:
 25779  002928  0101               	movlb	1	; () banked
 25780  00292A  BF1A               	btfsc	(sprintf@width+1)& (0+255),7,b
 25781  00292C  D08A               	goto	l13629
 25782  00292E  0101               	movlb	1	; () banked
 25783  002930  511A               	movf	(sprintf@width+1)& (0+255),w,b
 25784  002932  E1EC               	bnz	l13599
 25785  002934  0101               	movlb	1	; () banked
 25786  002936  0519               	decf	sprintf@width& (0+255),w,b
 25787  002938  A0D8               	btfss	status,0,c
 25788  00293A  D083               	goto	l13629
 25789  00293C  D7E7               	goto	l13599
 25790                           
 25791                           ; BSR set to: 1
 25792                           ;doprnt.c: 1171: }
 25793                           ;doprnt.c: 1173: } else
 25794  00293E  D081               	goto	l13629
 25795                           
 25796                           ; BSR set to: 1
 25797                           ;doprnt.c: 1175: {
 25798                           ;doprnt.c: 1180: while(width > 0) {
 25799  002940  D00E               	goto	l13613
 25800  002942                     l13607:
 25801                           
 25802                           ; BSR set to: 1
 25803                           ;doprnt.c: 1181: ((*sp++ = (' ')));
 25804  002942  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25805  002946  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25806  00294A  0E20               	movlw	32
 25807  00294C  6EDF               	movwf	indf2,c
 25808                           
 25809                           ; BSR set to: 1
 25810  00294E  0100               	movlb	0	; () banked
 25811  002950  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 25812  002952  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 25813                           
 25814                           ; BSR set to: 0
 25815                           ;doprnt.c: 1182: width--;
 25816  002954  0101               	movlb	1	; () banked
 25817  002956  0719               	decf	sprintf@width& (0+255),f,b
 25818  002958  A0D8               	btfss	status,0,c
 25819  00295A  071A               	decf	(sprintf@width+1)& (0+255),f,b
 25820  00295C  D000               	goto	l13613
 25821  00295E                     l13613:
 25822                           
 25823                           ; BSR set to: 1
 25824  00295E  0101               	movlb	1	; () banked
 25825  002960  BF1A               	btfsc	(sprintf@width+1)& (0+255),7,b
 25826  002962  D007               	goto	l13615
 25827  002964  0101               	movlb	1	; () banked
 25828  002966  511A               	movf	(sprintf@width+1)& (0+255),w,b
 25829  002968  E1EC               	bnz	l13607
 25830  00296A  0101               	movlb	1	; () banked
 25831  00296C  0519               	decf	sprintf@width& (0+255),w,b
 25832  00296E  B0D8               	btfsc	status,0,c
 25833  002970  D7E8               	goto	l13607
 25834  002972                     l13615:
 25835                           
 25836                           ; BSR set to: 1
 25837                           ;doprnt.c: 1183: }
 25838                           ;doprnt.c: 1188: if(flag & 0x03)
 25839  002972  0E03               	movlw	3
 25840  002974  0101               	movlb	1	; () banked
 25841  002976  151B               	andwf	sprintf@flag& (0+255),w,b
 25842  002978  0100               	movlb	0	; () banked
 25843  00297A  6FD5               	movwf	??_sprintf& (0+255),b
 25844  00297C  0E00               	movlw	0
 25845  00297E  0101               	movlb	1	; () banked
 25846  002980  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 25847  002982  0100               	movlb	0	; () banked
 25848  002984  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 25849  002986  0100               	movlb	0	; () banked
 25850  002988  51D5               	movf	??_sprintf& (0+255),w,b
 25851  00298A  0100               	movlb	0	; () banked
 25852  00298C  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
 25853  00298E  B4D8               	btfsc	status,2,c
 25854  002990  D058               	goto	l13629
 25855                           
 25856                           ; BSR set to: 0
 25857                           ;doprnt.c: 1190: ((*sp++ = ('-')));
 25858  002992  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25859  002996  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25860  00299A  0E2D               	movlw	45
 25861  00299C  D050               	goto	L18
 25862  00299E                     l13619:
 25863                           
 25864                           ; BSR set to: 0
 25865  00299E  0100               	movlb	0	; () banked
 25866  0029A0  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 25867  0029A2  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 25868                           
 25869                           ; BSR set to: 0
 25870                           ;doprnt.c: 1195: }
 25871                           ;doprnt.c: 1196: while(c--) {
 25872                           
 25873                           ; BSR set to: 0
 25874  0029A4  D04E               	goto	l13629
 25875  0029A6                     l13621:
 25876                           
 25877                           ;doprnt.c: 1200: {
 25878                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 25879  0029A6  C112  F079         	movff	sprintf@val,___lldiv@dividend
 25880  0029AA  C113  F07A         	movff	sprintf@val+1,___lldiv@dividend+1
 25881  0029AE  C114  F07B         	movff	sprintf@val+2,___lldiv@dividend+2
 25882  0029B2  C115  F07C         	movff	sprintf@val+3,___lldiv@dividend+3
 25883  0029B6  0101               	movlb	1	; () banked
 25884  0029B8  511D               	movf	sprintf@c& (0+255),w,b
 25885  0029BA  0D04               	mullw	4
 25886  0029BC  0E61               	movlw	low _dpowers
 25887  0029BE  24F3               	addwf	prodl,w,c
 25888  0029C0  6EF6               	movwf	tblptrl,c
 25889  0029C2  0EEE               	movlw	high _dpowers
 25890  0029C4  20F4               	addwfc	prodh,w,c
 25891  0029C6  6EF7               	movwf	tblptrh,c
 25892  0029C8                     	if	1	;There are 3 active tblptr bytes
 25893  0029C8  6AF8               	clrf	tblptru,c
 25894  0029CA  0E00               	movlw	low (__mediumconst shr (0+16))
 25895  0029CC  22F8               	addwfc	tblptru,f,c
 25896  0029CE                     	endif
 25897  0029CE  0009               	tblrd		*+
 25898  0029D0  CFF5 F07D          	movff	tablat,___lldiv@divisor
 25899  0029D4  0009               	tblrd		*+
 25900  0029D6  CFF5 F07E          	movff	tablat,___lldiv@divisor+1
 25901  0029DA  0009               	tblrd		*+
 25902  0029DC  CFF5 F07F          	movff	tablat,___lldiv@divisor+2
 25903  0029E0  000A               	tblrd		*-
 25904  0029E2  CFF5 F080          	movff	tablat,___lldiv@divisor+3
 25905  0029E6  EC5D  F03F         	call	___lldiv	;wreg free
 25906  0029EA  C079  F10C         	movff	?___lldiv,sprintf@tmpval
 25907  0029EE  C07A  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
 25908  0029F2  C07B  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
 25909  0029F6  C07C  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
 25910                           
 25911                           ;doprnt.c: 1202: tmpval.vd %= 10;
 25912  0029FA  C10C  F086         	movff	sprintf@tmpval,___llmod@dividend
 25913  0029FE  C10D  F087         	movff	sprintf@tmpval+1,___llmod@dividend+1
 25914  002A02  C10E  F088         	movff	sprintf@tmpval+2,___llmod@dividend+2
 25915  002A06  C10F  F089         	movff	sprintf@tmpval+3,___llmod@dividend+3
 25916  002A0A  0E0A               	movlw	10
 25917  002A0C  0100               	movlb	0	; () banked
 25918  002A0E  6F8A               	movwf	___llmod@divisor& (0+255),b
 25919  002A10  0E00               	movlw	0
 25920  002A12  6F8B               	movwf	(___llmod@divisor+1)& (0+255),b
 25921  002A14  0E00               	movlw	0
 25922  002A16  6F8C               	movwf	(___llmod@divisor+2)& (0+255),b
 25923  002A18  0E00               	movlw	0
 25924  002A1A  6F8D               	movwf	(___llmod@divisor+3)& (0+255),b
 25925  002A1C  ECE1  F041         	call	___llmod	;wreg free
 25926  002A20  C086  F10C         	movff	?___llmod,sprintf@tmpval
 25927  002A24  C087  F10D         	movff	?___llmod+1,sprintf@tmpval+1
 25928  002A28  C088  F10E         	movff	?___llmod+2,sprintf@tmpval+2
 25929  002A2C  C089  F10F         	movff	?___llmod+3,sprintf@tmpval+3
 25930                           
 25931                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 25932  002A30  0101               	movlb	1	; () banked
 25933  002A32  510C               	movf	sprintf@tmpval& (0+255),w,b
 25934  002A34  0F30               	addlw	48
 25935  002A36  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25936  002A3A  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25937  002A3E                     L18:
 25938  002A3E  6EDF               	movwf	indf2,c
 25939  002A40  D7AE               	goto	l13619
 25940  002A42                     l13629:
 25941  002A42  0101               	movlb	1	; () banked
 25942  002A44  071D               	decf	sprintf@c& (0+255),f,b
 25943  002A46  0101               	movlb	1	; () banked
 25944  002A48  291D               	incf	sprintf@c& (0+255),w,b
 25945  002A4A  B4D8               	btfsc	status,2,c
 25946  002A4C  D010               	goto	l13637
 25947  002A4E  D7AB               	goto	l13621
 25948                           
 25949                           ; BSR set to: 1
 25950                           ;doprnt.c: 1204: }
 25951                           ;doprnt.c: 1206: }
 25952                           ;doprnt.c: 1207: while(exp > 0) {
 25953  002A50  D00E               	goto	l13637
 25954  002A52                     l13631:
 25955                           
 25956                           ; BSR set to: 1
 25957                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 25958  002A52  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25959  002A56  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25960  002A5A  0E30               	movlw	48
 25961  002A5C  6EDF               	movwf	indf2,c
 25962                           
 25963                           ; BSR set to: 1
 25964  002A5E  0100               	movlb	0	; () banked
 25965  002A60  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 25966  002A62  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 25967                           
 25968                           ; BSR set to: 0
 25969                           ;doprnt.c: 1209: exp--;
 25970  002A64  0101               	movlb	1	; () banked
 25971  002A66  0710               	decf	sprintf@exp& (0+255),f,b
 25972  002A68  A0D8               	btfss	status,0,c
 25973  002A6A  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 25974  002A6C  D000               	goto	l13637
 25975  002A6E                     l13637:
 25976                           
 25977                           ; BSR set to: 1
 25978  002A6E  0101               	movlb	1	; () banked
 25979  002A70  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 25980  002A72  D007               	goto	l13639
 25981  002A74  0101               	movlb	1	; () banked
 25982  002A76  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 25983  002A78  E1EC               	bnz	l13631
 25984  002A7A  0101               	movlb	1	; () banked
 25985  002A7C  0510               	decf	sprintf@exp& (0+255),w,b
 25986  002A7E  B0D8               	btfsc	status,0,c
 25987  002A80  D7E8               	goto	l13631
 25988  002A82                     l13639:
 25989                           
 25990                           ; BSR set to: 1
 25991                           ;doprnt.c: 1210: }
 25992                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 25993  002A82  0101               	movlb	1	; () banked
 25994  002A84  BF0B               	btfsc	(sprintf@prec+1)& (0+255),7,b
 25995  002A86  D00C               	goto	l2275
 25996  002A88  0101               	movlb	1	; () banked
 25997  002A8A  510B               	movf	(sprintf@prec+1)& (0+255),w,b
 25998  002A8C  E105               	bnz	u16560
 25999  002A8E  0E09               	movlw	9
 26000  002A90  0101               	movlb	1	; () banked
 26001  002A92  5D0A               	subwf	sprintf@prec& (0+255),w,b
 26002  002A94  A0D8               	btfss	status,0,c
 26003  002A96  D004               	goto	l2275
 26004  002A98                     u16560:
 26005                           
 26006                           ; BSR set to: 1
 26007                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 26008  002A98  0E08               	movlw	8
 26009  002A9A  0101               	movlb	1	; () banked
 26010  002A9C  6F1D               	movwf	sprintf@c& (0+255),b
 26011  002A9E  D003               	goto	l13643
 26012  002AA0                     l2275:
 26013                           
 26014                           ; BSR set to: 1
 26015                           ;doprnt.c: 1213: else
 26016                           ;doprnt.c: 1214: c = prec;
 26017  002AA0  C10A  F11D         	movff	sprintf@prec,sprintf@c
 26018  002AA4  D000               	goto	l13643
 26019  002AA6                     l13643:
 26020                           
 26021                           ; BSR set to: 1
 26022                           ;doprnt.c: 1215: prec -= c;
 26023  002AA6  0101               	movlb	1	; () banked
 26024  002AA8  511D               	movf	sprintf@c& (0+255),w,b
 26025  002AAA  0101               	movlb	1	; () banked
 26026  002AAC  5F0A               	subwf	sprintf@prec& (0+255),f,b
 26027  002AAE  0E00               	movlw	0
 26028  002AB0  0101               	movlb	1	; () banked
 26029  002AB2  BF1D               	btfsc	sprintf@c& (0+255),7,b
 26030  002AB4  0EFF               	movlw	255
 26031  002AB6  0101               	movlb	1	; () banked
 26032  002AB8  5B0B               	subwfb	(sprintf@prec+1)& (0+255),f,b
 26033                           
 26034                           ; BSR set to: 1
 26035                           ;doprnt.c: 1219: if(c)
 26036  002ABA  0101               	movlb	1	; () banked
 26037  002ABC  511D               	movf	sprintf@c& (0+255),w,b
 26038  002ABE  0101               	movlb	1	; () banked
 26039  002AC0  B4D8               	btfsc	status,2,c
 26040  002AC2  D00A               	goto	l13651
 26041                           
 26042                           ; BSR set to: 1
 26043                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 26044  002AC4  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26045  002AC8  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26046  002ACC  0E2E               	movlw	46
 26047  002ACE  6EDF               	movwf	indf2,c
 26048                           
 26049                           ; BSR set to: 1
 26050  002AD0  0100               	movlb	0	; () banked
 26051  002AD2  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26052  002AD4  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26053  002AD6  D000               	goto	l13651
 26054  002AD8                     l13651:
 26055                           
 26056                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 26057  002AD8  0101               	movlb	1	; () banked
 26058  002ADA  511D               	movf	sprintf@c& (0+255),w,b
 26059  002ADC  EC79  F021         	call	_scale
 26060  002AE0  C0A2  F100         	movff	?_scale,_sprintf$3802
 26061  002AE4  C0A3  F101         	movff	?_scale+1,_sprintf$3802+1
 26062  002AE8  C0A4  F102         	movff	?_scale+2,_sprintf$3802+2
 26063                           
 26064                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 26065  002AEC  C116  F096         	movff	sprintf@fval,___ftmul@f2
 26066  002AF0  C117  F097         	movff	sprintf@fval+1,___ftmul@f2+1
 26067  002AF4  C118  F098         	movff	sprintf@fval+2,___ftmul@f2+2
 26068  002AF8  C100  F093         	movff	_sprintf$3802,___ftmul@f1
 26069  002AFC  C101  F094         	movff	_sprintf$3802+1,___ftmul@f1+1
 26070  002B00  C102  F095         	movff	_sprintf$3802+2,___ftmul@f1+2
 26071  002B04  EC26  F037         	call	___ftmul	;wreg free
 26072  002B08  C093  F0B8         	movff	?___ftmul,___fttol@f1
 26073  002B0C  C094  F0B9         	movff	?___ftmul+1,___fttol@f1+1
 26074  002B10  C095  F0BA         	movff	?___ftmul+2,___fttol@f1+2
 26075  002B14  EC85  F038         	call	___fttol	;wreg free
 26076  002B18  C0B8  F112         	movff	?___fttol,sprintf@val
 26077  002B1C  C0B9  F113         	movff	?___fttol+1,sprintf@val+1
 26078  002B20  C0BA  F114         	movff	?___fttol+2,sprintf@val+2
 26079  002B24  C0BB  F115         	movff	?___fttol+3,sprintf@val+3
 26080                           
 26081                           ;doprnt.c: 1228: while(c--) {
 26082  002B28  D07B               	goto	l13665
 26083  002B2A                     l13655:
 26084                           
 26085                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 26086  002B2A  C112  F079         	movff	sprintf@val,___lldiv@dividend
 26087  002B2E  C113  F07A         	movff	sprintf@val+1,___lldiv@dividend+1
 26088  002B32  C114  F07B         	movff	sprintf@val+2,___lldiv@dividend+2
 26089  002B36  C115  F07C         	movff	sprintf@val+3,___lldiv@dividend+3
 26090  002B3A  0101               	movlb	1	; () banked
 26091  002B3C  511D               	movf	sprintf@c& (0+255),w,b
 26092  002B3E  0D04               	mullw	4
 26093  002B40  0E61               	movlw	low _dpowers
 26094  002B42  24F3               	addwf	prodl,w,c
 26095  002B44  6EF6               	movwf	tblptrl,c
 26096  002B46  0EEE               	movlw	high _dpowers
 26097  002B48  20F4               	addwfc	prodh,w,c
 26098  002B4A  6EF7               	movwf	tblptrh,c
 26099  002B4C                     	if	1	;There are 3 active tblptr bytes
 26100  002B4C  6AF8               	clrf	tblptru,c
 26101  002B4E  0E00               	movlw	low (__mediumconst shr (0+16))
 26102  002B50  22F8               	addwfc	tblptru,f,c
 26103  002B52                     	endif
 26104  002B52  0009               	tblrd		*+
 26105  002B54  CFF5 F07D          	movff	tablat,___lldiv@divisor
 26106  002B58  0009               	tblrd		*+
 26107  002B5A  CFF5 F07E          	movff	tablat,___lldiv@divisor+1
 26108  002B5E  0009               	tblrd		*+
 26109  002B60  CFF5 F07F          	movff	tablat,___lldiv@divisor+2
 26110  002B64  000A               	tblrd		*-
 26111  002B66  CFF5 F080          	movff	tablat,___lldiv@divisor+3
 26112  002B6A  EC5D  F03F         	call	___lldiv	;wreg free
 26113  002B6E  C079  F10C         	movff	?___lldiv,sprintf@tmpval
 26114  002B72  C07A  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
 26115  002B76  C07B  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
 26116  002B7A  C07C  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
 26117                           
 26118                           ;doprnt.c: 1230: tmpval.vd %= 10;
 26119  002B7E  C10C  F086         	movff	sprintf@tmpval,___llmod@dividend
 26120  002B82  C10D  F087         	movff	sprintf@tmpval+1,___llmod@dividend+1
 26121  002B86  C10E  F088         	movff	sprintf@tmpval+2,___llmod@dividend+2
 26122  002B8A  C10F  F089         	movff	sprintf@tmpval+3,___llmod@dividend+3
 26123  002B8E  0E0A               	movlw	10
 26124  002B90  0100               	movlb	0	; () banked
 26125  002B92  6F8A               	movwf	___llmod@divisor& (0+255),b
 26126  002B94  0E00               	movlw	0
 26127  002B96  6F8B               	movwf	(___llmod@divisor+1)& (0+255),b
 26128  002B98  0E00               	movlw	0
 26129  002B9A  6F8C               	movwf	(___llmod@divisor+2)& (0+255),b
 26130  002B9C  0E00               	movlw	0
 26131  002B9E  6F8D               	movwf	(___llmod@divisor+3)& (0+255),b
 26132  002BA0  ECE1  F041         	call	___llmod	;wreg free
 26133  002BA4  C086  F10C         	movff	?___llmod,sprintf@tmpval
 26134  002BA8  C087  F10D         	movff	?___llmod+1,sprintf@tmpval+1
 26135  002BAC  C088  F10E         	movff	?___llmod+2,sprintf@tmpval+2
 26136  002BB0  C089  F10F         	movff	?___llmod+3,sprintf@tmpval+3
 26137                           
 26138                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 26139  002BB4  0101               	movlb	1	; () banked
 26140  002BB6  510C               	movf	sprintf@tmpval& (0+255),w,b
 26141  002BB8  0F30               	addlw	48
 26142  002BBA  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26143  002BBE  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26144  002BC2  6EDF               	movwf	indf2,c
 26145                           
 26146                           ; BSR set to: 1
 26147  002BC4  0100               	movlb	0	; () banked
 26148  002BC6  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26149  002BC8  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26150                           
 26151                           ; BSR set to: 0
 26152                           ;doprnt.c: 1232: val %= dpowers[c];
 26153  002BCA  C112  F086         	movff	sprintf@val,___llmod@dividend
 26154  002BCE  C113  F087         	movff	sprintf@val+1,___llmod@dividend+1
 26155  002BD2  C114  F088         	movff	sprintf@val+2,___llmod@dividend+2
 26156  002BD6  C115  F089         	movff	sprintf@val+3,___llmod@dividend+3
 26157  002BDA  0101               	movlb	1	; () banked
 26158  002BDC  511D               	movf	sprintf@c& (0+255),w,b
 26159  002BDE  0D04               	mullw	4
 26160  002BE0  0E61               	movlw	low _dpowers
 26161  002BE2  24F3               	addwf	prodl,w,c
 26162  002BE4  6EF6               	movwf	tblptrl,c
 26163  002BE6  0EEE               	movlw	high _dpowers
 26164  002BE8  20F4               	addwfc	prodh,w,c
 26165  002BEA  6EF7               	movwf	tblptrh,c
 26166  002BEC                     	if	1	;There are 3 active tblptr bytes
 26167  002BEC  6AF8               	clrf	tblptru,c
 26168  002BEE  0E00               	movlw	low (__mediumconst shr (0+16))
 26169  002BF0  22F8               	addwfc	tblptru,f,c
 26170  002BF2                     	endif
 26171  002BF2  0009               	tblrd		*+
 26172  002BF4  CFF5 F08A          	movff	tablat,___llmod@divisor
 26173  002BF8  0009               	tblrd		*+
 26174  002BFA  CFF5 F08B          	movff	tablat,___llmod@divisor+1
 26175  002BFE  0009               	tblrd		*+
 26176  002C00  CFF5 F08C          	movff	tablat,___llmod@divisor+2
 26177  002C04  000A               	tblrd		*-
 26178  002C06  CFF5 F08D          	movff	tablat,___llmod@divisor+3
 26179  002C0A  ECE1  F041         	call	___llmod	;wreg free
 26180  002C0E  C086  F112         	movff	?___llmod,sprintf@val
 26181  002C12  C087  F113         	movff	?___llmod+1,sprintf@val+1
 26182  002C16  C088  F114         	movff	?___llmod+2,sprintf@val+2
 26183  002C1A  C089  F115         	movff	?___llmod+3,sprintf@val+3
 26184  002C1E  D000               	goto	l13665
 26185  002C20                     l13665:
 26186  002C20  0101               	movlb	1	; () banked
 26187  002C22  071D               	decf	sprintf@c& (0+255),f,b
 26188  002C24  0101               	movlb	1	; () banked
 26189  002C26  291D               	incf	sprintf@c& (0+255),w,b
 26190  002C28  B4D8               	btfsc	status,2,c
 26191  002C2A  D010               	goto	l13673
 26192  002C2C  D77E               	goto	l13655
 26193                           
 26194                           ; BSR set to: 1
 26195                           ;doprnt.c: 1233: }
 26196                           ;doprnt.c: 1235: while(prec) {
 26197  002C2E  D00E               	goto	l13673
 26198  002C30                     l13667:
 26199                           
 26200                           ; BSR set to: 1
 26201                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 26202  002C30  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26203  002C34  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26204  002C38  0E30               	movlw	48
 26205  002C3A  6EDF               	movwf	indf2,c
 26206                           
 26207                           ; BSR set to: 1
 26208  002C3C  0100               	movlb	0	; () banked
 26209  002C3E  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26210  002C40  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26211                           
 26212                           ; BSR set to: 0
 26213                           ;doprnt.c: 1237: prec--;
 26214  002C42  0101               	movlb	1	; () banked
 26215  002C44  070A               	decf	sprintf@prec& (0+255),f,b
 26216  002C46  A0D8               	btfss	status,0,c
 26217  002C48  070B               	decf	(sprintf@prec+1)& (0+255),f,b
 26218  002C4A  D000               	goto	l13673
 26219  002C4C                     l13673:
 26220                           
 26221                           ; BSR set to: 1
 26222  002C4C  0101               	movlb	1	; () banked
 26223  002C4E  510A               	movf	sprintf@prec& (0+255),w,b
 26224  002C50  0101               	movlb	1	; () banked
 26225  002C52  110B               	iorwf	(sprintf@prec+1)& (0+255),w,b
 26226  002C54  B4D8               	btfsc	status,2,c
 26227  002C56  D220               	goto	l13791
 26228  002C58  D7EB               	goto	l13667
 26229                           
 26230                           ; BSR set to: 1
 26231                           ;doprnt.c: 1238: }
 26232                           ;doprnt.c: 1245: continue;
 26233  002C5A  D21E               	goto	l13791
 26234  002C5C                     l2236:
 26235                           
 26236                           ; BSR set to: 1
 26237                           ;doprnt.c: 1246: }
 26238                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
 26239  002C5C  0101               	movlb	1	; () banked
 26240  002C5E  BF1B               	btfsc	sprintf@flag& (0+255),7,b
 26241  002C60  D035               	goto	l2284
 26242                           
 26243                           ; BSR set to: 1
 26244                           ;doprnt.c: 1253: {
 26245                           ;doprnt.c: 1255: if(flag & 0x10)
 26246  002C62  0101               	movlb	1	; () banked
 26247  002C64  A91B               	btfss	sprintf@flag& (0+255),4,b
 26248  002C66  D00E               	goto	l13681
 26249                           
 26250                           ; BSR set to: 1
 26251                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 26252  002C68  C108  FFD9         	movff	sprintf@ap,fsr2l
 26253  002C6C  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 26254  002C70  CFDE F112          	movff	postinc2,sprintf@val
 26255  002C74  CFDE F113          	movff	postinc2,sprintf@val+1
 26256  002C78  CFDE F114          	movff	postinc2,sprintf@val+2
 26257  002C7C  CFDE F115          	movff	postinc2,sprintf@val+3
 26258                           
 26259                           ; BSR set to: 1
 26260  002C80  0E04               	movlw	4
 26261  002C82  D00F               	goto	L19
 26262  002C84                     l13681:
 26263                           
 26264                           ; BSR set to: 1
 26265                           ;doprnt.c: 1257: else
 26266                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 26267  002C84  C108  FFD9         	movff	sprintf@ap,fsr2l
 26268  002C88  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 26269  002C8C  CFDE F112          	movff	postinc2,sprintf@val
 26270  002C90  CFDD F113          	movff	postdec2,sprintf@val+1
 26271  002C94  0101               	movlb	1	; () banked
 26272  002C96  0E00               	movlw	0
 26273  002C98  BF13               	btfsc	(sprintf@val+1)& (0+255),7,b
 26274  002C9A  0EFF               	movlw	-1
 26275  002C9C  6F14               	movwf	(sprintf@val+2)& (0+255),b
 26276  002C9E  6F15               	movwf	(sprintf@val+3)& (0+255),b
 26277                           
 26278                           ; BSR set to: 1
 26279  002CA0  0E02               	movlw	2
 26280  002CA2                     L19:
 26281  002CA2  0101               	movlb	1	; () banked
 26282  002CA4  2708               	addwf	sprintf@ap& (0+255),f,b
 26283  002CA6  0E00               	movlw	0
 26284  002CA8  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 26285  002CAA  D000               	goto	l13685
 26286  002CAC                     l13685:
 26287                           
 26288                           ; BSR set to: 1
 26289                           ;doprnt.c: 1261: if((long)val < 0) {
 26290  002CAC  0101               	movlb	1	; () banked
 26291  002CAE  AF15               	btfss	(sprintf@val+3)& (0+255),7,b
 26292  002CB0  D08F               	goto	l13729
 26293                           
 26294                           ; BSR set to: 1
 26295                           ;doprnt.c: 1262: flag |= 0x03;
 26296  002CB2  0E03               	movlw	3
 26297  002CB4  0101               	movlb	1	; () banked
 26298  002CB6  131B               	iorwf	sprintf@flag& (0+255),f,b
 26299                           
 26300                           ; BSR set to: 1
 26301                           ;doprnt.c: 1263: val = -val;
 26302  002CB8  0101               	movlb	1	; () banked
 26303  002CBA  1F15               	comf	(sprintf@val+3)& (0+255),f,b
 26304  002CBC  1F14               	comf	(sprintf@val+2)& (0+255),f,b
 26305  002CBE  1F13               	comf	(sprintf@val+1)& (0+255),f,b
 26306  002CC0  6D12               	negf	sprintf@val& (0+255),b
 26307  002CC2  0E00               	movlw	0
 26308  002CC4  2313               	addwfc	(sprintf@val+1)& (0+255),f,b
 26309  002CC6  2314               	addwfc	(sprintf@val+2)& (0+255),f,b
 26310  002CC8  2315               	addwfc	(sprintf@val+3)& (0+255),f,b
 26311                           
 26312                           ; BSR set to: 1
 26313                           ;doprnt.c: 1264: }
 26314                           ;doprnt.c: 1266: }
 26315  002CCA  D082               	goto	l13729
 26316  002CCC                     l2284:
 26317                           
 26318                           ; BSR set to: 1
 26319                           ;doprnt.c: 1268: else
 26320                           ;doprnt.c: 1273: {
 26321                           ;doprnt.c: 1281: if(flag & 0x10)
 26322  002CCC  0101               	movlb	1	; () banked
 26323  002CCE  A91B               	btfss	sprintf@flag& (0+255),4,b
 26324  002CD0  D00E               	goto	l13695
 26325                           
 26326                           ; BSR set to: 1
 26327                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 26328  002CD2  C108  FFD9         	movff	sprintf@ap,fsr2l
 26329  002CD6  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 26330  002CDA  CFDE F112          	movff	postinc2,sprintf@val
 26331  002CDE  CFDE F113          	movff	postinc2,sprintf@val+1
 26332  002CE2  CFDE F114          	movff	postinc2,sprintf@val+2
 26333  002CE6  CFDE F115          	movff	postinc2,sprintf@val+3
 26334                           
 26335                           ; BSR set to: 1
 26336  002CEA  0E04               	movlw	4
 26337  002CEC  D010               	goto	L20
 26338  002CEE                     l13695:
 26339                           
 26340                           ; BSR set to: 1
 26341                           ;doprnt.c: 1283: else
 26342                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 26343  002CEE  C108  FFD9         	movff	sprintf@ap,fsr2l
 26344  002CF2  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 26345  002CF6  CFDE F0D5          	movff	postinc2,??_sprintf
 26346  002CFA  CFDD F0D6          	movff	postdec2,??_sprintf+1
 26347  002CFE  C0D5  F112         	movff	??_sprintf,sprintf@val
 26348  002D02  C0D6  F113         	movff	??_sprintf+1,sprintf@val+1
 26349  002D06  0101               	movlb	1	; () banked
 26350  002D08  6B14               	clrf	(sprintf@val+2)& (0+255),b
 26351  002D0A  6B15               	clrf	(sprintf@val+3)& (0+255),b
 26352                           
 26353                           ; BSR set to: 1
 26354  002D0C  0E02               	movlw	2
 26355  002D0E                     L20:
 26356  002D0E  0101               	movlb	1	; () banked
 26357  002D10  2708               	addwf	sprintf@ap& (0+255),f,b
 26358  002D12  0E00               	movlw	0
 26359  002D14  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 26360                           
 26361                           ; BSR set to: 1
 26362                           ;doprnt.c: 1287: }
 26363                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
 26364                           
 26365                           ; BSR set to: 1
 26366  002D16  D05C               	goto	l13729
 26367  002D18                     l13699:
 26368                           
 26369                           ; BSR set to: 1
 26370                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 26371  002D18  0E01               	movlw	1
 26372  002D1A  0101               	movlb	1	; () banked
 26373  002D1C  6F1D               	movwf	sprintf@c& (0+255),b
 26374  002D1E                     l13701:
 26375                           
 26376                           ; BSR set to: 1
 26377  002D1E  0E0A               	movlw	10
 26378  002D20  0101               	movlb	1	; () banked
 26379  002D22  191D               	xorwf	sprintf@c& (0+255),w,b
 26380  002D24  B4D8               	btfsc	status,2,c
 26381  002D26  D05E               	goto	l13731
 26382  002D28  D001               	goto	l13705
 26383                           
 26384                           ; BSR set to: 1
 26385  002D2A  D05C               	goto	l13731
 26386  002D2C                     l13705:
 26387                           
 26388                           ; BSR set to: 1
 26389                           ;doprnt.c: 1306: if(val < dpowers[c])
 26390  002D2C  0101               	movlb	1	; () banked
 26391  002D2E  511D               	movf	sprintf@c& (0+255),w,b
 26392  002D30  0D04               	mullw	4
 26393  002D32  0E61               	movlw	low _dpowers
 26394  002D34  24F3               	addwf	prodl,w,c
 26395  002D36  6EF6               	movwf	tblptrl,c
 26396  002D38  0EEE               	movlw	high _dpowers
 26397  002D3A  20F4               	addwfc	prodh,w,c
 26398  002D3C  6EF7               	movwf	tblptrh,c
 26399  002D3E                     	if	1	;There are 3 active tblptr bytes
 26400  002D3E  6AF8               	clrf	tblptru,c
 26401  002D40  0E00               	movlw	low (__mediumconst shr (0+16))
 26402  002D42  22F8               	addwfc	tblptru,f,c
 26403  002D44                     	endif
 26404  002D44  0009               	tblrd		*+
 26405  002D46  50F5               	movf	tablat,w,c
 26406  002D48  0101               	movlb	1	; () banked
 26407  002D4A  5D12               	subwf	sprintf@val& (0+255),w,b
 26408  002D4C  0009               	tblrd		*+
 26409  002D4E  50F5               	movf	tablat,w,c
 26410  002D50  0101               	movlb	1	; () banked
 26411  002D52  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 26412  002D54  0009               	tblrd		*+
 26413  002D56  50F5               	movf	tablat,w,c
 26414  002D58  0101               	movlb	1	; () banked
 26415  002D5A  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 26416  002D5C  0009               	tblrd		*+
 26417  002D5E  50F5               	movf	tablat,w,c
 26418  002D60  0101               	movlb	1	; () banked
 26419  002D62  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 26420  002D64  A0D8               	btfss	status,0,c
 26421  002D66  D03E               	goto	l13731
 26422  002D68  D001               	goto	l13709
 26423                           
 26424                           ; BSR set to: 1
 26425                           ;doprnt.c: 1307: break;
 26426  002D6A  D03C               	goto	l13731
 26427  002D6C                     l13709:
 26428                           
 26429                           ; BSR set to: 1
 26430  002D6C  0101               	movlb	1	; () banked
 26431  002D6E  2B1D               	incf	sprintf@c& (0+255),f,b
 26432  002D70  D7D6               	goto	l13701
 26433                           
 26434                           ; BSR set to: 1
 26435                           ;doprnt.c: 1309: break;
 26436                           
 26437                           ; BSR set to: 1
 26438  002D72  D038               	goto	l13731
 26439  002D74                     l13713:
 26440                           
 26441                           ; BSR set to: 1
 26442                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 26443  002D74  0E01               	movlw	1
 26444  002D76  0101               	movlb	1	; () banked
 26445  002D78  6F1D               	movwf	sprintf@c& (0+255),b
 26446  002D7A                     l13715:
 26447                           
 26448                           ; BSR set to: 1
 26449  002D7A  0E08               	movlw	8
 26450  002D7C  0101               	movlb	1	; () banked
 26451  002D7E  191D               	xorwf	sprintf@c& (0+255),w,b
 26452  002D80  B4D8               	btfsc	status,2,c
 26453  002D82  D030               	goto	l13731
 26454  002D84  D001               	goto	l13719
 26455                           
 26456                           ; BSR set to: 1
 26457  002D86  D02E               	goto	l13731
 26458  002D88                     l13719:
 26459                           
 26460                           ; BSR set to: 1
 26461                           ;doprnt.c: 1317: if(val < hexpowers[c])
 26462  002D88  0101               	movlb	1	; () banked
 26463  002D8A  511D               	movf	sprintf@c& (0+255),w,b
 26464  002D8C  0D04               	mullw	4
 26465  002D8E  0ED7               	movlw	low _hexpowers
 26466  002D90  24F3               	addwf	prodl,w,c
 26467  002D92  6EF6               	movwf	tblptrl,c
 26468  002D94  0EEE               	movlw	high _hexpowers
 26469  002D96  20F4               	addwfc	prodh,w,c
 26470  002D98  6EF7               	movwf	tblptrh,c
 26471  002D9A                     	if	1	;There are 3 active tblptr bytes
 26472  002D9A  6AF8               	clrf	tblptru,c
 26473  002D9C  0E00               	movlw	low (__mediumconst shr (0+16))
 26474  002D9E  22F8               	addwfc	tblptru,f,c
 26475  002DA0                     	endif
 26476  002DA0  0009               	tblrd		*+
 26477  002DA2  50F5               	movf	tablat,w,c
 26478  002DA4  0101               	movlb	1	; () banked
 26479  002DA6  5D12               	subwf	sprintf@val& (0+255),w,b
 26480  002DA8  0009               	tblrd		*+
 26481  002DAA  50F5               	movf	tablat,w,c
 26482  002DAC  0101               	movlb	1	; () banked
 26483  002DAE  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 26484  002DB0  0009               	tblrd		*+
 26485  002DB2  50F5               	movf	tablat,w,c
 26486  002DB4  0101               	movlb	1	; () banked
 26487  002DB6  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 26488  002DB8  0009               	tblrd		*+
 26489  002DBA  50F5               	movf	tablat,w,c
 26490  002DBC  0101               	movlb	1	; () banked
 26491  002DBE  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 26492  002DC0  A0D8               	btfss	status,0,c
 26493  002DC2  D010               	goto	l13731
 26494  002DC4  D001               	goto	l13723
 26495                           
 26496                           ; BSR set to: 1
 26497                           ;doprnt.c: 1318: break;
 26498  002DC6  D00E               	goto	l13731
 26499  002DC8                     l13723:
 26500                           
 26501                           ; BSR set to: 1
 26502  002DC8  0101               	movlb	1	; () banked
 26503  002DCA  2B1D               	incf	sprintf@c& (0+255),f,b
 26504  002DCC  D7D6               	goto	l13715
 26505                           
 26506                           ; BSR set to: 1
 26507                           ;doprnt.c: 1336: }
 26508                           
 26509                           ; BSR set to: 1
 26510                           ;doprnt.c: 1320: break;
 26511                           
 26512                           ; BSR set to: 1
 26513  002DCE  D00A               	goto	l13731
 26514  002DD0                     l13729:
 26515                           
 26516                           ; BSR set to: 1
 26517  002DD0  0101               	movlb	1	; () banked
 26518  002DD2  511B               	movf	sprintf@flag& (0+255),w,b
 26519  002DD4  0B80               	andlw	128
 26520                           
 26521                           ; Switch size 1, requested type "space"
 26522                           ; Number of cases is 2, Range of values is 0 to 128
 26523                           ; switch strategies available:
 26524                           ; Name         Instructions Cycles
 26525                           ; simple_byte            7     4 (average)
 26526                           ;	Chosen strategy is simple_byte
 26527  002DD6  0A00               	xorlw	0	; case 0
 26528  002DD8  B4D8               	btfsc	status,2,c
 26529  002DDA  D79E               	goto	l13699
 26530  002DDC  0A80               	xorlw	128	; case 128
 26531  002DDE  B4D8               	btfsc	status,2,c
 26532  002DE0  D7C9               	goto	l13713
 26533  002DE2  D000               	goto	l13731
 26534  002DE4                     l13731:
 26535                           
 26536                           ; BSR set to: 1
 26537                           ;doprnt.c: 1345: if(width && flag & 0x03)
 26538  002DE4  0101               	movlb	1	; () banked
 26539  002DE6  5119               	movf	sprintf@width& (0+255),w,b
 26540  002DE8  0101               	movlb	1	; () banked
 26541  002DEA  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 26542  002DEC  B4D8               	btfsc	status,2,c
 26543  002DEE  D015               	goto	l13737
 26544                           
 26545                           ; BSR set to: 1
 26546  002DF0  0E03               	movlw	3
 26547  002DF2  0101               	movlb	1	; () banked
 26548  002DF4  151B               	andwf	sprintf@flag& (0+255),w,b
 26549  002DF6  0100               	movlb	0	; () banked
 26550  002DF8  6FD5               	movwf	??_sprintf& (0+255),b
 26551  002DFA  0E00               	movlw	0
 26552  002DFC  0101               	movlb	1	; () banked
 26553  002DFE  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 26554  002E00  0100               	movlb	0	; () banked
 26555  002E02  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 26556  002E04  0100               	movlb	0	; () banked
 26557  002E06  51D5               	movf	??_sprintf& (0+255),w,b
 26558  002E08  0100               	movlb	0	; () banked
 26559  002E0A  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
 26560  002E0C  B4D8               	btfsc	status,2,c
 26561  002E0E  D005               	goto	l13737
 26562                           
 26563                           ; BSR set to: 0
 26564                           ;doprnt.c: 1346: width--;
 26565  002E10  0101               	movlb	1	; () banked
 26566  002E12  0719               	decf	sprintf@width& (0+255),f,b
 26567  002E14  A0D8               	btfss	status,0,c
 26568  002E16  071A               	decf	(sprintf@width+1)& (0+255),f,b
 26569  002E18  D000               	goto	l13737
 26570  002E1A                     l13737:
 26571                           
 26572                           ;doprnt.c: 1381: if(width > c)
 26573  002E1A  0E80               	movlw	128
 26574  002E1C  0101               	movlb	1	; () banked
 26575  002E1E  BF1D               	btfsc	sprintf@c& (0+255),7,b
 26576  002E20  0E7F               	movlw	127
 26577  002E22  0100               	movlb	0	; () banked
 26578  002E24  6FD5               	movwf	??_sprintf& (0+255),b
 26579  002E26  0101               	movlb	1	; () banked
 26580  002E28  5119               	movf	sprintf@width& (0+255),w,b
 26581  002E2A  0101               	movlb	1	; () banked
 26582  002E2C  5D1D               	subwf	sprintf@c& (0+255),w,b
 26583  002E2E  0101               	movlb	1	; () banked
 26584  002E30  511A               	movf	(sprintf@width+1)& (0+255),w,b
 26585  002E32  0A80               	xorlw	128
 26586  002E34  0100               	movlb	0	; () banked
 26587  002E36  59D5               	subwfb	??_sprintf& (0+255),w,b
 26588  002E38  B0D8               	btfsc	status,0,c
 26589  002E3A  D00B               	goto	l13741
 26590                           
 26591                           ; BSR set to: 0
 26592                           ;doprnt.c: 1382: width -= c;
 26593  002E3C  0101               	movlb	1	; () banked
 26594  002E3E  511D               	movf	sprintf@c& (0+255),w,b
 26595  002E40  0101               	movlb	1	; () banked
 26596  002E42  5F19               	subwf	sprintf@width& (0+255),f,b
 26597  002E44  0E00               	movlw	0
 26598  002E46  0101               	movlb	1	; () banked
 26599  002E48  BF1D               	btfsc	sprintf@c& (0+255),7,b
 26600  002E4A  0EFF               	movlw	255
 26601  002E4C  0101               	movlb	1	; () banked
 26602  002E4E  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 26603  002E50  D006               	goto	l13743
 26604  002E52                     l13741:
 26605                           
 26606                           ;doprnt.c: 1383: else
 26607                           ;doprnt.c: 1384: width = 0;
 26608  002E52  0E00               	movlw	0
 26609  002E54  0101               	movlb	1	; () banked
 26610  002E56  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 26611  002E58  0E00               	movlw	0
 26612  002E5A  6F19               	movwf	sprintf@width& (0+255),b
 26613  002E5C  D000               	goto	l13743
 26614  002E5E                     l13743:
 26615                           
 26616                           ; BSR set to: 1
 26617                           ;doprnt.c: 1387: if(flag & 0x04) {
 26618  002E5E  0101               	movlb	1	; () banked
 26619  002E60  A51B               	btfss	sprintf@flag& (0+255),2,b
 26620  002E62  D035               	goto	l13759
 26621                           
 26622                           ; BSR set to: 1
 26623                           ;doprnt.c: 1392: if(flag & 0x03)
 26624  002E64  0E03               	movlw	3
 26625  002E66  0101               	movlb	1	; () banked
 26626  002E68  151B               	andwf	sprintf@flag& (0+255),w,b
 26627  002E6A  0100               	movlb	0	; () banked
 26628  002E6C  6FD5               	movwf	??_sprintf& (0+255),b
 26629  002E6E  0E00               	movlw	0
 26630  002E70  0101               	movlb	1	; () banked
 26631  002E72  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 26632  002E74  0100               	movlb	0	; () banked
 26633  002E76  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 26634  002E78  0100               	movlb	0	; () banked
 26635  002E7A  51D5               	movf	??_sprintf& (0+255),w,b
 26636  002E7C  0100               	movlb	0	; () banked
 26637  002E7E  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
 26638  002E80  B4D8               	btfsc	status,2,c
 26639  002E82  D00A               	goto	l13751
 26640                           
 26641                           ; BSR set to: 0
 26642                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 26643  002E84  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26644  002E88  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26645  002E8C  0E2D               	movlw	45
 26646  002E8E  6EDF               	movwf	indf2,c
 26647                           
 26648                           ; BSR set to: 0
 26649  002E90  0100               	movlb	0	; () banked
 26650  002E92  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26651  002E94  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26652  002E96  D000               	goto	l13751
 26653  002E98                     l13751:
 26654                           
 26655                           ; BSR set to: 0
 26656                           ;doprnt.c: 1415: if(width)
 26657  002E98  0101               	movlb	1	; () banked
 26658  002E9A  5119               	movf	sprintf@width& (0+255),w,b
 26659  002E9C  0101               	movlb	1	; () banked
 26660  002E9E  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 26661  002EA0  B4D8               	btfsc	status,2,c
 26662  002EA2  D04A               	goto	l13773
 26663  002EA4                     l13753:
 26664                           
 26665                           ; BSR set to: 1
 26666                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 26667  002EA4  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26668  002EA8  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26669  002EAC  0E30               	movlw	48
 26670  002EAE  6EDF               	movwf	indf2,c
 26671                           
 26672                           ; BSR set to: 1
 26673  002EB0  0100               	movlb	0	; () banked
 26674  002EB2  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26675  002EB4  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26676                           
 26677                           ; BSR set to: 0
 26678                           ;doprnt.c: 1418: while(--width);
 26679  002EB6  0101               	movlb	1	; () banked
 26680  002EB8  0719               	decf	sprintf@width& (0+255),f,b
 26681  002EBA  A0D8               	btfss	status,0,c
 26682  002EBC  071A               	decf	(sprintf@width+1)& (0+255),f,b
 26683  002EBE  0101               	movlb	1	; () banked
 26684  002EC0  5119               	movf	sprintf@width& (0+255),w,b
 26685  002EC2  0101               	movlb	1	; () banked
 26686  002EC4  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 26687  002EC6  B4D8               	btfsc	status,2,c
 26688  002EC8  D037               	goto	l13773
 26689  002ECA  D7EC               	goto	l13753
 26690                           
 26691                           ; BSR set to: 1
 26692                           ;doprnt.c: 1420: } else
 26693                           
 26694                           ; BSR set to: 1
 26695  002ECC  D035               	goto	l13773
 26696  002ECE                     l13759:
 26697                           
 26698                           ; BSR set to: 1
 26699                           ;doprnt.c: 1422: {
 26700                           ;doprnt.c: 1424: if(width
 26701                           ;doprnt.c: 1428: )
 26702  002ECE  0101               	movlb	1	; () banked
 26703  002ED0  5119               	movf	sprintf@width& (0+255),w,b
 26704  002ED2  0101               	movlb	1	; () banked
 26705  002ED4  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 26706  002ED6  B4D8               	btfsc	status,2,c
 26707  002ED8  D015               	goto	l13767
 26708  002EDA                     l13761:
 26709                           
 26710                           ; BSR set to: 1
 26711                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 26712  002EDA  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26713  002EDE  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26714  002EE2  0E20               	movlw	32
 26715  002EE4  6EDF               	movwf	indf2,c
 26716                           
 26717                           ; BSR set to: 1
 26718  002EE6  0100               	movlb	0	; () banked
 26719  002EE8  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26720  002EEA  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26721                           
 26722                           ; BSR set to: 0
 26723                           ;doprnt.c: 1431: while(--width);
 26724  002EEC  0101               	movlb	1	; () banked
 26725  002EEE  0719               	decf	sprintf@width& (0+255),f,b
 26726  002EF0  A0D8               	btfss	status,0,c
 26727  002EF2  071A               	decf	(sprintf@width+1)& (0+255),f,b
 26728  002EF4  0101               	movlb	1	; () banked
 26729  002EF6  5119               	movf	sprintf@width& (0+255),w,b
 26730  002EF8  0101               	movlb	1	; () banked
 26731  002EFA  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 26732  002EFC  B4D8               	btfsc	status,2,c
 26733  002EFE  D002               	goto	l13767
 26734  002F00  D7EC               	goto	l13761
 26735                           
 26736                           ; BSR set to: 1
 26737  002F02  D000               	goto	l13767
 26738  002F04                     l13767:
 26739                           
 26740                           ; BSR set to: 1
 26741                           ;doprnt.c: 1438: if(flag & 0x03)
 26742  002F04  0E03               	movlw	3
 26743  002F06  0101               	movlb	1	; () banked
 26744  002F08  151B               	andwf	sprintf@flag& (0+255),w,b
 26745  002F0A  0100               	movlb	0	; () banked
 26746  002F0C  6FD5               	movwf	??_sprintf& (0+255),b
 26747  002F0E  0E00               	movlw	0
 26748  002F10  0101               	movlb	1	; () banked
 26749  002F12  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 26750  002F14  0100               	movlb	0	; () banked
 26751  002F16  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 26752  002F18  0100               	movlb	0	; () banked
 26753  002F1A  51D5               	movf	??_sprintf& (0+255),w,b
 26754  002F1C  0100               	movlb	0	; () banked
 26755  002F1E  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
 26756  002F20  B4D8               	btfsc	status,2,c
 26757  002F22  D00A               	goto	l13773
 26758                           
 26759                           ; BSR set to: 0
 26760                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 26761  002F24  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26762  002F28  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26763  002F2C  0E2D               	movlw	45
 26764  002F2E  6EDF               	movwf	indf2,c
 26765                           
 26766                           ; BSR set to: 0
 26767  002F30  0100               	movlb	0	; () banked
 26768  002F32  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26769  002F34  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26770                           
 26771                           ; BSR set to: 0
 26772  002F36  D000               	goto	l13773
 26773  002F38                     l13773:
 26774                           
 26775                           ;doprnt.c: 1469: }
 26776                           ;doprnt.c: 1472: prec = c;
 26777  002F38  0101               	movlb	1	; () banked
 26778  002F3A  511D               	movf	sprintf@c& (0+255),w,b
 26779  002F3C  0101               	movlb	1	; () banked
 26780  002F3E  6F0A               	movwf	sprintf@prec& (0+255),b
 26781  002F40  6B0B               	clrf	(sprintf@prec+1)& (0+255),b
 26782  002F42  BF0A               	btfsc	sprintf@prec& (0+255),7,b
 26783  002F44  070B               	decf	(sprintf@prec+1)& (0+255),f,b
 26784                           
 26785                           ;doprnt.c: 1474: while(prec--) {
 26786  002F46  D09B               	goto	l13789
 26787                           
 26788                           ; BSR set to: 1
 26789                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
 26790  002F48  D086               	goto	l13783
 26791  002F4A                     l13775:
 26792                           
 26793                           ; BSR set to: 1
 26794                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 26795  002F4A  C10A  F0D5         	movff	sprintf@prec,??_sprintf
 26796  002F4E  C10B  F0D6         	movff	sprintf@prec+1,??_sprintf+1
 26797  002F52  0100               	movlb	0	; () banked
 26798  002F54  90D8               	bcf	status,0,c
 26799  002F56  37D5               	rlcf	??_sprintf& (0+255),f,b
 26800  002F58  37D6               	rlcf	(??_sprintf+1)& (0+255),f,b
 26801  002F5A  0100               	movlb	0	; () banked
 26802  002F5C  90D8               	bcf	status,0,c
 26803  002F5E  37D5               	rlcf	??_sprintf& (0+255),f,b
 26804  002F60  37D6               	rlcf	(??_sprintf+1)& (0+255),f,b
 26805  002F62  0E61               	movlw	low _dpowers
 26806  002F64  0100               	movlb	0	; () banked
 26807  002F66  25D5               	addwf	??_sprintf& (0+255),w,b
 26808  002F68  6EF6               	movwf	tblptrl,c
 26809  002F6A  0EEE               	movlw	high _dpowers
 26810  002F6C  21D6               	addwfc	(??_sprintf+1)& (0+255),w,b
 26811  002F6E  6EF7               	movwf	tblptrh,c
 26812  002F70                     	if	1	;There are 3 active tblptr bytes
 26813  002F70  6AF8               	clrf	tblptru,c
 26814  002F72  0E00               	movlw	low (__mediumconst shr (0+16))
 26815  002F74  22F8               	addwfc	tblptru,f,c
 26816  002F76                     	endif
 26817  002F76  0009               	tblrd		*+
 26818  002F78  CFF5 F07D          	movff	tablat,___lldiv@divisor
 26819  002F7C  0009               	tblrd		*+
 26820  002F7E  CFF5 F07E          	movff	tablat,___lldiv@divisor+1
 26821  002F82  0009               	tblrd		*+
 26822  002F84  CFF5 F07F          	movff	tablat,___lldiv@divisor+2
 26823  002F88  000A               	tblrd		*-
 26824  002F8A  CFF5 F080          	movff	tablat,___lldiv@divisor+3
 26825  002F8E  C112  F079         	movff	sprintf@val,___lldiv@dividend
 26826  002F92  C113  F07A         	movff	sprintf@val+1,___lldiv@dividend+1
 26827  002F96  C114  F07B         	movff	sprintf@val+2,___lldiv@dividend+2
 26828  002F9A  C115  F07C         	movff	sprintf@val+3,___lldiv@dividend+3
 26829  002F9E  EC5D  F03F         	call	___lldiv	;wreg free
 26830  002FA2  C079  F086         	movff	?___lldiv,___llmod@dividend
 26831  002FA6  C07A  F087         	movff	?___lldiv+1,___llmod@dividend+1
 26832  002FAA  C07B  F088         	movff	?___lldiv+2,___llmod@dividend+2
 26833  002FAE  C07C  F089         	movff	?___lldiv+3,___llmod@dividend+3
 26834  002FB2  0E0A               	movlw	10
 26835  002FB4  0100               	movlb	0	; () banked
 26836  002FB6  6F8A               	movwf	___llmod@divisor& (0+255),b
 26837  002FB8  0E00               	movlw	0
 26838  002FBA  6F8B               	movwf	(___llmod@divisor+1)& (0+255),b
 26839  002FBC  0E00               	movlw	0
 26840  002FBE  6F8C               	movwf	(___llmod@divisor+2)& (0+255),b
 26841  002FC0  0E00               	movlw	0
 26842  002FC2  6F8D               	movwf	(___llmod@divisor+3)& (0+255),b
 26843  002FC4  ECE1  F041         	call	___llmod	;wreg free
 26844  002FC8  0100               	movlb	0	; () banked
 26845  002FCA  5186               	movf	?___llmod& (0+255),w,b
 26846  002FCC  0F30               	addlw	48
 26847  002FCE  0101               	movlb	1	; () banked
 26848  002FD0  6F1D               	movwf	sprintf@c& (0+255),b
 26849                           
 26850                           ;doprnt.c: 1491: break;
 26851  002FD2  D04B               	goto	l13785
 26852  002FD4                     l13777:
 26853                           
 26854                           ; BSR set to: 1
 26855                           ;doprnt.c: 1499: {
 26856                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 26857  002FD4  C112  F079         	movff	sprintf@val,___lldiv@dividend
 26858  002FD8  C113  F07A         	movff	sprintf@val+1,___lldiv@dividend+1
 26859  002FDC  C114  F07B         	movff	sprintf@val+2,___lldiv@dividend+2
 26860  002FE0  C115  F07C         	movff	sprintf@val+3,___lldiv@dividend+3
 26861  002FE4  C10A  F0D5         	movff	sprintf@prec,??_sprintf
 26862  002FE8  C10B  F0D6         	movff	sprintf@prec+1,??_sprintf+1
 26863  002FEC  0100               	movlb	0	; () banked
 26864  002FEE  90D8               	bcf	status,0,c
 26865  002FF0  37D5               	rlcf	??_sprintf& (0+255),f,b
 26866  002FF2  37D6               	rlcf	(??_sprintf+1)& (0+255),f,b
 26867  002FF4  0100               	movlb	0	; () banked
 26868  002FF6  90D8               	bcf	status,0,c
 26869  002FF8  37D5               	rlcf	??_sprintf& (0+255),f,b
 26870  002FFA  37D6               	rlcf	(??_sprintf+1)& (0+255),f,b
 26871  002FFC  0ED7               	movlw	low _hexpowers
 26872  002FFE  0100               	movlb	0	; () banked
 26873  003000  25D5               	addwf	??_sprintf& (0+255),w,b
 26874  003002  6EF6               	movwf	tblptrl,c
 26875  003004  0EEE               	movlw	high _hexpowers
 26876  003006  21D6               	addwfc	(??_sprintf+1)& (0+255),w,b
 26877  003008  6EF7               	movwf	tblptrh,c
 26878  00300A                     	if	1	;There are 3 active tblptr bytes
 26879  00300A  6AF8               	clrf	tblptru,c
 26880  00300C  0E00               	movlw	low (__mediumconst shr (0+16))
 26881  00300E  22F8               	addwfc	tblptru,f,c
 26882  003010                     	endif
 26883  003010  0009               	tblrd		*+
 26884  003012  CFF5 F07D          	movff	tablat,___lldiv@divisor
 26885  003016  0009               	tblrd		*+
 26886  003018  CFF5 F07E          	movff	tablat,___lldiv@divisor+1
 26887  00301C  0009               	tblrd		*+
 26888  00301E  CFF5 F07F          	movff	tablat,___lldiv@divisor+2
 26889  003022  000A               	tblrd		*-
 26890  003024  CFF5 F080          	movff	tablat,___lldiv@divisor+3
 26891  003028  EC5D  F03F         	call	___lldiv	;wreg free
 26892  00302C  0100               	movlb	0	; () banked
 26893  00302E  5179               	movf	?___lldiv& (0+255),w,b
 26894  003030  0B0F               	andlw	15
 26895  003032  0101               	movlb	1	; () banked
 26896  003034  6F03               	movwf	sprintf@idx& (0+255),b
 26897                           
 26898                           ; BSR set to: 1
 26899                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 26900  003036  0101               	movlb	1	; () banked
 26901  003038  5103               	movf	sprintf@idx& (0+255),w,b
 26902  00303A  0D01               	mullw	1
 26903  00303C  0E24               	movlw	low STR_150
 26904  00303E  24F3               	addwf	prodl,w,c
 26905  003040  6EF6               	movwf	tblptrl,c
 26906  003042  0EFB               	movlw	high STR_150
 26907  003044  20F4               	addwfc	prodh,w,c
 26908  003046  6EF7               	movwf	tblptrh,c
 26909  003048                     	if	1	;There are 3 active tblptr bytes
 26910  003048  6AF8               	clrf	tblptru,c
 26911  00304A  0E00               	movlw	low (__mediumconst shr (0+16))
 26912  00304C  22F8               	addwfc	tblptru,f,c
 26913  00304E                     	endif
 26914  00304E  0008               	tblrd		*
 26915  003050  CFF5 F11D          	movff	tablat,sprintf@c
 26916                           
 26917                           ; BSR set to: 1
 26918                           ;doprnt.c: 1523: }
 26919                           
 26920                           ;doprnt.c: 1508: }
 26921                           ;doprnt.c: 1510: break;
 26922  003054  D00A               	goto	l13785
 26923  003056                     l13783:
 26924                           
 26925                           ; BSR set to: 1
 26926  003056  0101               	movlb	1	; () banked
 26927  003058  511B               	movf	sprintf@flag& (0+255),w,b
 26928  00305A  0B80               	andlw	128
 26929                           
 26930                           ; Switch size 1, requested type "space"
 26931                           ; Number of cases is 2, Range of values is 0 to 128
 26932                           ; switch strategies available:
 26933                           ; Name         Instructions Cycles
 26934                           ; simple_byte            7     4 (average)
 26935                           ;	Chosen strategy is simple_byte
 26936  00305C  0A00               	xorlw	0	; case 0
 26937  00305E  B4D8               	btfsc	status,2,c
 26938  003060  D774               	goto	l13775
 26939  003062  0A80               	xorlw	128	; case 128
 26940  003064  B4D8               	btfsc	status,2,c
 26941  003066  D7B6               	goto	l13777
 26942  003068  D000               	goto	l13785
 26943  00306A                     l13785:
 26944                           
 26945                           ; BSR set to: 1
 26946                           ;doprnt.c: 1524: ((*sp++ = (c)));
 26947  00306A  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26948  00306E  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26949  003072  C11D  FFDF         	movff	sprintf@c,indf2
 26950                           
 26951                           ; BSR set to: 1
 26952  003076  0100               	movlb	0	; () banked
 26953  003078  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26954  00307A  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26955  00307C  D000               	goto	l13789
 26956  00307E                     l13789:
 26957  00307E  0101               	movlb	1	; () banked
 26958  003080  070A               	decf	sprintf@prec& (0+255),f,b
 26959  003082  A0D8               	btfss	status,0,c
 26960  003084  070B               	decf	(sprintf@prec+1)& (0+255),f,b
 26961  003086  0101               	movlb	1	; () banked
 26962  003088  290A               	incf	sprintf@prec& (0+255),w,b
 26963  00308A  E1E5               	bnz	l13783
 26964  00308C  0101               	movlb	1	; () banked
 26965  00308E  290B               	incf	(sprintf@prec+1)& (0+255),w,b
 26966  003090  B4D8               	btfsc	status,2,c
 26967  003092  D002               	goto	l13791
 26968  003094  D7E0               	goto	l13783
 26969                           
 26970                           ; BSR set to: 1
 26971  003096  D000               	goto	l13791
 26972  003098                     l13791:
 26973  003098  C0C9  FFF6         	movff	sprintf@f,tblptrl
 26974  00309C  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
 26975  0030A0  0100               	movlb	0	; () banked
 26976  0030A2  4BC9               	infsnz	sprintf@f& (0+255),f,b
 26977  0030A4  2BCA               	incf	(sprintf@f+1)& (0+255),f,b
 26978  0030A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26979  0030A6  6AF8               	clrf	tblptru,c
 26980  0030A8                     	endif
 26981  0030A8                     	if	0	;tblptru may be non-zero
 26982  0030A8                     	endif
 26983  0030A8  0008               	tblrd		*
 26984  0030AA  CFF5 F11D          	movff	tablat,sprintf@c
 26985  0030AE  0101               	movlb	1	; () banked
 26986  0030B0  511D               	movf	sprintf@c& (0+255),w,b
 26987  0030B2  B4D8               	btfsc	status,2,c
 26988  0030B4  D003               	goto	l13793
 26989  0030B6  EFCC  F010         	goto	l13419
 26990                           
 26991                           ; BSR set to: 1
 26992  0030BA  D000               	goto	l13793
 26993  0030BC                     l13793:
 26994                           
 26995                           ;doprnt.c: 1538: *sp = 0;
 26996  0030BC  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26997  0030C0  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26998  0030C4  0E00               	movlw	0
 26999  0030C6  6EDF               	movwf	indf2,c
 27000  0030C8  0012               	return	
 27001                           
 27002                           ;doprnt.c: 1540: return 0;
 27003                           ;	Return value of _sprintf is never used
 27004  0030CA  0012               	return		;funcret
 27005  0030CC                     __end_of_sprintf:
 27006                           	opt stack 0
 27007                           tblptru	equ	0xFF8
 27008                           tblptrh	equ	0xFF7
 27009                           tblptrl	equ	0xFF6
 27010                           tablat	equ	0xFF5
 27011                           prodh	equ	0xFF4
 27012                           prodl	equ	0xFF3
 27013                           intcon	equ	0xFF2
 27014                           intcon2	equ	0xFF1
 27015                           indf0	equ	0xFEF
 27016                           postinc0	equ	0xFEE
 27017                           fsr0h	equ	0xFEA
 27018                           fsr0l	equ	0xFE9
 27019                           wreg	equ	0xFE8
 27020                           indf1	equ	0xFE7
 27021                           postdec1	equ	0xFE5
 27022                           fsr1h	equ	0xFE2
 27023                           fsr1l	equ	0xFE1
 27024                           indf2	equ	0xFDF
 27025                           postinc2	equ	0xFDE
 27026                           postdec2	equ	0xFDD
 27027                           fsr2h	equ	0xFDA
 27028                           fsr2l	equ	0xFD9
 27029                           status	equ	0xFD8
 27030                           
 27031 ;; *************** function _scale *****************
 27032 ;; Defined at:
 27033 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 27034 ;; Parameters:    Size  Location     Type
 27035 ;;  scl             1    wreg     char 
 27036 ;; Auto vars:     Size  Location     Type
 27037 ;;  scl             1   72[BANK0 ] char 
 27038 ;; Return value:  Size  Location     Type
 27039 ;;                  3   66[BANK0 ] char 
 27040 ;; Registers used:
 27041 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27042 ;; Tracked objects:
 27043 ;;		On entry : 0/0
 27044 ;;		On exit  : 0/0
 27045 ;;		Unchanged: 0/0
 27046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27047 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27048 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27050 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27051 ;;Total ram usage:        7 bytes
 27052 ;; Hardware stack levels used:    1
 27053 ;; Hardware stack levels required when called:    8
 27054 ;; This function calls:
 27055 ;;		___awdiv
 27056 ;;		___awmod
 27057 ;;		___ftmul
 27058 ;;		___wmul
 27059 ;; This function is called by:
 27060 ;;		_sprintf
 27061 ;; This function uses a non-reentrant model
 27062 ;;
 27063                           
 27064                           	psect	text60
 27065  0042F2                     __ptext60:
 27066                           	opt stack 0
 27067  0042F2                     _scale:
 27068                           	opt stack 20
 27069                           
 27070                           ;incstack = 0
 27071                           ;scale@scl stored from wreg
 27072  0042F2  0100               	movlb	0	; () banked
 27073  0042F4  6FA8               	movwf	scale@scl& (0+255),b
 27074                           
 27075                           ; BSR set to: 0
 27076                           ;doprnt.c: 428: if(scl < 0) {
 27077  0042F6  0100               	movlb	0	; () banked
 27078  0042F8  AFA8               	btfss	scale@scl& (0+255),7,b
 27079  0042FA  D13F               	goto	l12995
 27080                           
 27081                           ; BSR set to: 0
 27082                           ;doprnt.c: 429: scl = -scl;
 27083  0042FC  0100               	movlb	0	; () banked
 27084  0042FE  6DA8               	negf	scale@scl& (0+255),b
 27085                           
 27086                           ;doprnt.c: 430: if(scl>=110)
 27087  004300  0100               	movlb	0	; () banked
 27088  004302  51A8               	movf	scale@scl& (0+255),w,b
 27089  004304  0A80               	xorlw	128
 27090  004306  0F12               	addlw	-238
 27091  004308  A0D8               	btfss	status,0,c
 27092  00430A  D0B6               	goto	l12985
 27093                           
 27094                           ; BSR set to: 0
 27095                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 27096  00430C  0E00               	movlw	0
 27097  00430E  0100               	movlb	0	; () banked
 27098  004310  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27099  004312  0E03               	movlw	3
 27100  004314  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27101  004316  0E00               	movlw	0
 27102  004318  0100               	movlb	0	; () banked
 27103  00431A  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27104  00431C  0E0A               	movlw	10
 27105  00431E  6F81               	movwf	___awdiv@divisor& (0+255),b
 27106  004320  0E00               	movlw	0
 27107  004322  0100               	movlb	0	; () banked
 27108  004324  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27109  004326  0E64               	movlw	100
 27110  004328  6F7B               	movwf	___awmod@divisor& (0+255),b
 27111  00432A  0100               	movlb	0	; () banked
 27112  00432C  51A8               	movf	scale@scl& (0+255),w,b
 27113  00432E  0100               	movlb	0	; () banked
 27114  004330  6F79               	movwf	___awmod@dividend& (0+255),b
 27115  004332  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27116  004334  BF79               	btfsc	___awmod@dividend& (0+255),7,b
 27117  004336  077A               	decf	(___awmod@dividend+1)& (0+255),f,b
 27118  004338  ECD7  F040         	call	___awmod	;wreg free
 27119  00433C  C079  F07F         	movff	?___awmod,___awdiv@dividend
 27120  004340  C07A  F080         	movff	?___awmod+1,___awdiv@dividend+1
 27121  004344  EC2A  F03E         	call	___awdiv	;wreg free
 27122  004348  0E09               	movlw	9
 27123  00434A  0100               	movlb	0	; () banked
 27124  00434C  257F               	addwf	?___awdiv& (0+255),w,b
 27125  00434E  0100               	movlb	0	; () banked
 27126  004350  6F87               	movwf	___wmul@multiplier& (0+255),b
 27127  004352  0E00               	movlw	0
 27128  004354  0100               	movlb	0	; () banked
 27129  004356  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27130  004358  0100               	movlb	0	; () banked
 27131  00435A  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27132  00435C  ECDC  F048         	call	___wmul	;wreg free
 27133  004360  0E89               	movlw	low __npowers_
 27134  004362  0100               	movlb	0	; () banked
 27135  004364  2587               	addwf	?___wmul& (0+255),w,b
 27136  004366  6EF6               	movwf	tblptrl,c
 27137  004368  0EEE               	movlw	high __npowers_
 27138  00436A  0100               	movlb	0	; () banked
 27139  00436C  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27140  00436E  6EF7               	movwf	tblptrh,c
 27141  004370                     	if	1	;There are 3 active tblptr bytes
 27142  004370  6AF8               	clrf	tblptru,c
 27143  004372  0E00               	movlw	low (__mediumconst shr (0+16))
 27144  004374  22F8               	addwfc	tblptru,f,c
 27145  004376                     	endif
 27146  004376  0009               	tblrd		*+
 27147  004378  CFF5 F096          	movff	tablat,___ftmul@f2
 27148  00437C  0009               	tblrd		*+
 27149  00437E  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27150  004382  000A               	tblrd		*-
 27151  004384  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27152  004388  0E00               	movlw	0
 27153  00438A  0100               	movlb	0	; () banked
 27154  00438C  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27155  00438E  0E64               	movlw	100
 27156  004390  6F81               	movwf	___awdiv@divisor& (0+255),b
 27157  004392  0100               	movlb	0	; () banked
 27158  004394  51A8               	movf	scale@scl& (0+255),w,b
 27159  004396  0100               	movlb	0	; () banked
 27160  004398  6F7F               	movwf	___awdiv@dividend& (0+255),b
 27161  00439A  6B80               	clrf	(___awdiv@dividend+1)& (0+255),b
 27162  00439C  BF7F               	btfsc	___awdiv@dividend& (0+255),7,b
 27163  00439E  0780               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27164  0043A0  EC2A  F03E         	call	___awdiv	;wreg free
 27165  0043A4  0E12               	movlw	18
 27166  0043A6  0100               	movlb	0	; () banked
 27167  0043A8  257F               	addwf	?___awdiv& (0+255),w,b
 27168  0043AA  0100               	movlb	0	; () banked
 27169  0043AC  6F87               	movwf	___wmul@multiplier& (0+255),b
 27170  0043AE  0E00               	movlw	0
 27171  0043B0  0100               	movlb	0	; () banked
 27172  0043B2  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27173  0043B4  0100               	movlb	0	; () banked
 27174  0043B6  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27175  0043B8  0E00               	movlw	0
 27176  0043BA  0100               	movlb	0	; () banked
 27177  0043BC  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27178  0043BE  0E03               	movlw	3
 27179  0043C0  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27180  0043C2  ECDC  F048         	call	___wmul	;wreg free
 27181  0043C6  0E89               	movlw	low __npowers_
 27182  0043C8  0100               	movlb	0	; () banked
 27183  0043CA  2587               	addwf	?___wmul& (0+255),w,b
 27184  0043CC  6EF6               	movwf	tblptrl,c
 27185  0043CE  0EEE               	movlw	high __npowers_
 27186  0043D0  0100               	movlb	0	; () banked
 27187  0043D2  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27188  0043D4  6EF7               	movwf	tblptrh,c
 27189  0043D6                     	if	1	;There are 3 active tblptr bytes
 27190  0043D6  6AF8               	clrf	tblptru,c
 27191  0043D8  0E00               	movlw	low (__mediumconst shr (0+16))
 27192  0043DA  22F8               	addwfc	tblptru,f,c
 27193  0043DC                     	endif
 27194  0043DC  0009               	tblrd		*+
 27195  0043DE  CFF5 F093          	movff	tablat,___ftmul@f1
 27196  0043E2  0009               	tblrd		*+
 27197  0043E4  CFF5 F094          	movff	tablat,___ftmul@f1+1
 27198  0043E8  000A               	tblrd		*-
 27199  0043EA  CFF5 F095          	movff	tablat,___ftmul@f1+2
 27200  0043EE  EC26  F037         	call	___ftmul	;wreg free
 27201  0043F2  C093  F0A5         	movff	?___ftmul,_scale$3801
 27202  0043F6  C094  F0A6         	movff	?___ftmul+1,_scale$3801+1
 27203  0043FA  C095  F0A7         	movff	?___ftmul+2,_scale$3801+2
 27204                           
 27205                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 27206  0043FE  C0A5  F093         	movff	_scale$3801,___ftmul@f1
 27207  004402  C0A6  F094         	movff	_scale$3801+1,___ftmul@f1+1
 27208  004406  C0A7  F095         	movff	_scale$3801+2,___ftmul@f1+2
 27209  00440A  0E00               	movlw	0
 27210  00440C  0100               	movlb	0	; () banked
 27211  00440E  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27212  004410  0E03               	movlw	3
 27213  004412  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27214  004414  0E00               	movlw	0
 27215  004416  0100               	movlb	0	; () banked
 27216  004418  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27217  00441A  0E0A               	movlw	10
 27218  00441C  6F7B               	movwf	___awmod@divisor& (0+255),b
 27219  00441E  0100               	movlb	0	; () banked
 27220  004420  51A8               	movf	scale@scl& (0+255),w,b
 27221  004422  0100               	movlb	0	; () banked
 27222  004424  6F79               	movwf	___awmod@dividend& (0+255),b
 27223  004426  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27224  004428  BF79               	btfsc	___awmod@dividend& (0+255),7,b
 27225  00442A  077A               	decf	(___awmod@dividend+1)& (0+255),f,b
 27226  00442C  ECD7  F040         	call	___awmod	;wreg free
 27227  004430  C079  F087         	movff	?___awmod,___wmul@multiplier
 27228  004434  C07A  F088         	movff	?___awmod+1,___wmul@multiplier+1
 27229  004438  ECDC  F048         	call	___wmul	;wreg free
 27230  00443C  0E89               	movlw	low __npowers_
 27231  00443E  0100               	movlb	0	; () banked
 27232  004440  2587               	addwf	?___wmul& (0+255),w,b
 27233  004442  6EF6               	movwf	tblptrl,c
 27234  004444  0EEE               	movlw	high __npowers_
 27235  004446  0100               	movlb	0	; () banked
 27236  004448  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27237  00444A  6EF7               	movwf	tblptrh,c
 27238  00444C                     	if	1	;There are 3 active tblptr bytes
 27239  00444C  6AF8               	clrf	tblptru,c
 27240  00444E  0E00               	movlw	low (__mediumconst shr (0+16))
 27241  004450  22F8               	addwfc	tblptru,f,c
 27242  004452                     	endif
 27243  004452  0009               	tblrd		*+
 27244  004454  CFF5 F096          	movff	tablat,___ftmul@f2
 27245  004458  0009               	tblrd		*+
 27246  00445A  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27247  00445E  000A               	tblrd		*-
 27248  004460  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27249  004464  EC26  F037         	call	___ftmul	;wreg free
 27250  004468  C093  F0A2         	movff	?___ftmul,?_scale
 27251  00446C  C094  F0A3         	movff	?___ftmul+1,?_scale+1
 27252  004470  C095  F0A4         	movff	?___ftmul+2,?_scale+2
 27253  004474  0012               	return	
 27254  004476  D06B               	goto	l12991
 27255  004478                     l12985:
 27256                           
 27257                           ;doprnt.c: 432: else if(scl > 10)
 27258  004478  0100               	movlb	0	; () banked
 27259  00447A  51A8               	movf	scale@scl& (0+255),w,b
 27260  00447C  0A80               	xorlw	128
 27261  00447E  0F75               	addlw	-139
 27262  004480  A0D8               	btfss	status,0,c
 27263  004482  D065               	goto	l12991
 27264                           
 27265                           ; BSR set to: 0
 27266                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 27267  004484  0E00               	movlw	0
 27268  004486  0100               	movlb	0	; () banked
 27269  004488  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27270  00448A  0E0A               	movlw	10
 27271  00448C  6F81               	movwf	___awdiv@divisor& (0+255),b
 27272  00448E  0100               	movlb	0	; () banked
 27273  004490  51A8               	movf	scale@scl& (0+255),w,b
 27274  004492  0100               	movlb	0	; () banked
 27275  004494  6F7F               	movwf	___awdiv@dividend& (0+255),b
 27276  004496  6B80               	clrf	(___awdiv@dividend+1)& (0+255),b
 27277  004498  BF7F               	btfsc	___awdiv@dividend& (0+255),7,b
 27278  00449A  0780               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27279  00449C  EC2A  F03E         	call	___awdiv	;wreg free
 27280  0044A0  0E09               	movlw	9
 27281  0044A2  0100               	movlb	0	; () banked
 27282  0044A4  257F               	addwf	?___awdiv& (0+255),w,b
 27283  0044A6  0100               	movlb	0	; () banked
 27284  0044A8  6F87               	movwf	___wmul@multiplier& (0+255),b
 27285  0044AA  0E00               	movlw	0
 27286  0044AC  0100               	movlb	0	; () banked
 27287  0044AE  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27288  0044B0  0100               	movlb	0	; () banked
 27289  0044B2  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27290  0044B4  0E00               	movlw	0
 27291  0044B6  0100               	movlb	0	; () banked
 27292  0044B8  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27293  0044BA  0E03               	movlw	3
 27294  0044BC  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27295  0044BE  ECDC  F048         	call	___wmul	;wreg free
 27296  0044C2  0E89               	movlw	low __npowers_
 27297  0044C4  0100               	movlb	0	; () banked
 27298  0044C6  2587               	addwf	?___wmul& (0+255),w,b
 27299  0044C8  6EF6               	movwf	tblptrl,c
 27300  0044CA  0EEE               	movlw	high __npowers_
 27301  0044CC  0100               	movlb	0	; () banked
 27302  0044CE  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27303  0044D0  6EF7               	movwf	tblptrh,c
 27304  0044D2                     	if	1	;There are 3 active tblptr bytes
 27305  0044D2  6AF8               	clrf	tblptru,c
 27306  0044D4  0E00               	movlw	low (__mediumconst shr (0+16))
 27307  0044D6  22F8               	addwfc	tblptru,f,c
 27308  0044D8                     	endif
 27309  0044D8  0009               	tblrd		*+
 27310  0044DA  CFF5 F093          	movff	tablat,___ftmul@f1
 27311  0044DE  0009               	tblrd		*+
 27312  0044E0  CFF5 F094          	movff	tablat,___ftmul@f1+1
 27313  0044E4  000A               	tblrd		*-
 27314  0044E6  CFF5 F095          	movff	tablat,___ftmul@f1+2
 27315  0044EA  0E00               	movlw	0
 27316  0044EC  0100               	movlb	0	; () banked
 27317  0044EE  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27318  0044F0  0E03               	movlw	3
 27319  0044F2  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27320  0044F4  0E00               	movlw	0
 27321  0044F6  0100               	movlb	0	; () banked
 27322  0044F8  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27323  0044FA  0E0A               	movlw	10
 27324  0044FC  6F7B               	movwf	___awmod@divisor& (0+255),b
 27325  0044FE  0100               	movlb	0	; () banked
 27326  004500  51A8               	movf	scale@scl& (0+255),w,b
 27327  004502  0100               	movlb	0	; () banked
 27328  004504  6F79               	movwf	___awmod@dividend& (0+255),b
 27329  004506  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27330  004508  BF79               	btfsc	___awmod@dividend& (0+255),7,b
 27331  00450A  077A               	decf	(___awmod@dividend+1)& (0+255),f,b
 27332  00450C  ECD7  F040         	call	___awmod	;wreg free
 27333  004510  C079  F087         	movff	?___awmod,___wmul@multiplier
 27334  004514  C07A  F088         	movff	?___awmod+1,___wmul@multiplier+1
 27335  004518  ECDC  F048         	call	___wmul	;wreg free
 27336  00451C  0E89               	movlw	low __npowers_
 27337  00451E  0100               	movlb	0	; () banked
 27338  004520  2587               	addwf	?___wmul& (0+255),w,b
 27339  004522  6EF6               	movwf	tblptrl,c
 27340  004524  0EEE               	movlw	high __npowers_
 27341  004526  0100               	movlb	0	; () banked
 27342  004528  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27343  00452A  6EF7               	movwf	tblptrh,c
 27344  00452C                     	if	1	;There are 3 active tblptr bytes
 27345  00452C  6AF8               	clrf	tblptru,c
 27346  00452E  0E00               	movlw	low (__mediumconst shr (0+16))
 27347  004530  22F8               	addwfc	tblptru,f,c
 27348  004532                     	endif
 27349  004532  0009               	tblrd		*+
 27350  004534  CFF5 F096          	movff	tablat,___ftmul@f2
 27351  004538  0009               	tblrd		*+
 27352  00453A  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27353  00453E  000A               	tblrd		*-
 27354  004540  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27355  004544  EC26  F037         	call	___ftmul	;wreg free
 27356  004548  D78F               	goto	L21
 27357  00454A  0012               	return	
 27358  00454C  D000               	goto	l12991
 27359  00454E                     l12991:
 27360                           
 27361                           ;doprnt.c: 434: return _npowers_[scl];
 27362  00454E  0100               	movlb	0	; () banked
 27363  004550  51A8               	movf	scale@scl& (0+255),w,b
 27364  004552  0D03               	mullw	3
 27365  004554  0E89               	movlw	low __npowers_
 27366  004556  24F3               	addwf	prodl,w,c
 27367  004558  6EF6               	movwf	tblptrl,c
 27368  00455A  0EEE               	movlw	high __npowers_
 27369  00455C  20F4               	addwfc	prodh,w,c
 27370  00455E  6EF7               	movwf	tblptrh,c
 27371  004560                     	if	1	;There are 3 active tblptr bytes
 27372  004560  6AF8               	clrf	tblptru,c
 27373  004562  0E00               	movlw	low (__mediumconst shr (0+16))
 27374  004564  22F8               	addwfc	tblptru,f,c
 27375  004566                     	endif
 27376  004566  0009               	tblrd		*+
 27377  004568  CFF5 F0A2          	movff	tablat,?_scale
 27378  00456C  0009               	tblrd		*+
 27379  00456E  CFF5 F0A3          	movff	tablat,?_scale+1
 27380  004572  000A               	tblrd		*-
 27381  004574  CFF5 F0A4          	movff	tablat,?_scale+2
 27382                           
 27383                           ; BSR set to: 0
 27384  004578  0012               	return	
 27385  00457A                     l12995:
 27386                           
 27387                           ; BSR set to: 0
 27388                           ;doprnt.c: 435: }
 27389                           ;doprnt.c: 436: if(scl>=110)
 27390  00457A  0100               	movlb	0	; () banked
 27391  00457C  51A8               	movf	scale@scl& (0+255),w,b
 27392  00457E  0A80               	xorlw	128
 27393  004580  0F12               	addlw	-238
 27394  004582  A0D8               	btfss	status,0,c
 27395  004584  D0B6               	goto	l13003
 27396                           
 27397                           ; BSR set to: 0
 27398                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 27399  004586  0E00               	movlw	0
 27400  004588  0100               	movlb	0	; () banked
 27401  00458A  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27402  00458C  0E03               	movlw	3
 27403  00458E  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27404  004590  0E00               	movlw	0
 27405  004592  0100               	movlb	0	; () banked
 27406  004594  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27407  004596  0E0A               	movlw	10
 27408  004598  6F81               	movwf	___awdiv@divisor& (0+255),b
 27409  00459A  0E00               	movlw	0
 27410  00459C  0100               	movlb	0	; () banked
 27411  00459E  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27412  0045A0  0E64               	movlw	100
 27413  0045A2  6F7B               	movwf	___awmod@divisor& (0+255),b
 27414  0045A4  0100               	movlb	0	; () banked
 27415  0045A6  51A8               	movf	scale@scl& (0+255),w,b
 27416  0045A8  0100               	movlb	0	; () banked
 27417  0045AA  6F79               	movwf	___awmod@dividend& (0+255),b
 27418  0045AC  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27419  0045AE  BF79               	btfsc	___awmod@dividend& (0+255),7,b
 27420  0045B0  077A               	decf	(___awmod@dividend+1)& (0+255),f,b
 27421  0045B2  ECD7  F040         	call	___awmod	;wreg free
 27422  0045B6  C079  F07F         	movff	?___awmod,___awdiv@dividend
 27423  0045BA  C07A  F080         	movff	?___awmod+1,___awdiv@dividend+1
 27424  0045BE  EC2A  F03E         	call	___awdiv	;wreg free
 27425  0045C2  0E09               	movlw	9
 27426  0045C4  0100               	movlb	0	; () banked
 27427  0045C6  257F               	addwf	?___awdiv& (0+255),w,b
 27428  0045C8  0100               	movlb	0	; () banked
 27429  0045CA  6F87               	movwf	___wmul@multiplier& (0+255),b
 27430  0045CC  0E00               	movlw	0
 27431  0045CE  0100               	movlb	0	; () banked
 27432  0045D0  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27433  0045D2  0100               	movlb	0	; () banked
 27434  0045D4  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27435  0045D6  ECDC  F048         	call	___wmul	;wreg free
 27436  0045DA  0EB0               	movlw	low __powers_
 27437  0045DC  0100               	movlb	0	; () banked
 27438  0045DE  2587               	addwf	?___wmul& (0+255),w,b
 27439  0045E0  6EF6               	movwf	tblptrl,c
 27440  0045E2  0EEE               	movlw	high __powers_
 27441  0045E4  0100               	movlb	0	; () banked
 27442  0045E6  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27443  0045E8  6EF7               	movwf	tblptrh,c
 27444  0045EA                     	if	1	;There are 3 active tblptr bytes
 27445  0045EA  6AF8               	clrf	tblptru,c
 27446  0045EC  0E00               	movlw	low (__mediumconst shr (0+16))
 27447  0045EE  22F8               	addwfc	tblptru,f,c
 27448  0045F0                     	endif
 27449  0045F0  0009               	tblrd		*+
 27450  0045F2  CFF5 F096          	movff	tablat,___ftmul@f2
 27451  0045F6  0009               	tblrd		*+
 27452  0045F8  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27453  0045FC  000A               	tblrd		*-
 27454  0045FE  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27455  004602  0E00               	movlw	0
 27456  004604  0100               	movlb	0	; () banked
 27457  004606  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27458  004608  0E64               	movlw	100
 27459  00460A  6F81               	movwf	___awdiv@divisor& (0+255),b
 27460  00460C  0100               	movlb	0	; () banked
 27461  00460E  51A8               	movf	scale@scl& (0+255),w,b
 27462  004610  0100               	movlb	0	; () banked
 27463  004612  6F7F               	movwf	___awdiv@dividend& (0+255),b
 27464  004614  6B80               	clrf	(___awdiv@dividend+1)& (0+255),b
 27465  004616  BF7F               	btfsc	___awdiv@dividend& (0+255),7,b
 27466  004618  0780               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27467  00461A  EC2A  F03E         	call	___awdiv	;wreg free
 27468  00461E  0E12               	movlw	18
 27469  004620  0100               	movlb	0	; () banked
 27470  004622  257F               	addwf	?___awdiv& (0+255),w,b
 27471  004624  0100               	movlb	0	; () banked
 27472  004626  6F87               	movwf	___wmul@multiplier& (0+255),b
 27473  004628  0E00               	movlw	0
 27474  00462A  0100               	movlb	0	; () banked
 27475  00462C  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27476  00462E  0100               	movlb	0	; () banked
 27477  004630  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27478  004632  0E00               	movlw	0
 27479  004634  0100               	movlb	0	; () banked
 27480  004636  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27481  004638  0E03               	movlw	3
 27482  00463A  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27483  00463C  ECDC  F048         	call	___wmul	;wreg free
 27484  004640  0EB0               	movlw	low __powers_
 27485  004642  0100               	movlb	0	; () banked
 27486  004644  2587               	addwf	?___wmul& (0+255),w,b
 27487  004646  6EF6               	movwf	tblptrl,c
 27488  004648  0EEE               	movlw	high __powers_
 27489  00464A  0100               	movlb	0	; () banked
 27490  00464C  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27491  00464E  6EF7               	movwf	tblptrh,c
 27492  004650                     	if	1	;There are 3 active tblptr bytes
 27493  004650  6AF8               	clrf	tblptru,c
 27494  004652  0E00               	movlw	low (__mediumconst shr (0+16))
 27495  004654  22F8               	addwfc	tblptru,f,c
 27496  004656                     	endif
 27497  004656  0009               	tblrd		*+
 27498  004658  CFF5 F093          	movff	tablat,___ftmul@f1
 27499  00465C  0009               	tblrd		*+
 27500  00465E  CFF5 F094          	movff	tablat,___ftmul@f1+1
 27501  004662  000A               	tblrd		*-
 27502  004664  CFF5 F095          	movff	tablat,___ftmul@f1+2
 27503  004668  EC26  F037         	call	___ftmul	;wreg free
 27504  00466C  C093  F0A5         	movff	?___ftmul,_scale$3801
 27505  004670  C094  F0A6         	movff	?___ftmul+1,_scale$3801+1
 27506  004674  C095  F0A7         	movff	?___ftmul+2,_scale$3801+2
 27507                           
 27508                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 27509  004678  C0A5  F093         	movff	_scale$3801,___ftmul@f1
 27510  00467C  C0A6  F094         	movff	_scale$3801+1,___ftmul@f1+1
 27511  004680  C0A7  F095         	movff	_scale$3801+2,___ftmul@f1+2
 27512  004684  0E00               	movlw	0
 27513  004686  0100               	movlb	0	; () banked
 27514  004688  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27515  00468A  0E03               	movlw	3
 27516  00468C  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27517  00468E  0E00               	movlw	0
 27518  004690  0100               	movlb	0	; () banked
 27519  004692  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27520  004694  0E0A               	movlw	10
 27521  004696  6F7B               	movwf	___awmod@divisor& (0+255),b
 27522  004698  0100               	movlb	0	; () banked
 27523  00469A  51A8               	movf	scale@scl& (0+255),w,b
 27524  00469C  0100               	movlb	0	; () banked
 27525  00469E  6F79               	movwf	___awmod@dividend& (0+255),b
 27526  0046A0  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27527  0046A2  BF79               	btfsc	___awmod@dividend& (0+255),7,b
 27528  0046A4  077A               	decf	(___awmod@dividend+1)& (0+255),f,b
 27529  0046A6  ECD7  F040         	call	___awmod	;wreg free
 27530  0046AA  C079  F087         	movff	?___awmod,___wmul@multiplier
 27531  0046AE  C07A  F088         	movff	?___awmod+1,___wmul@multiplier+1
 27532  0046B2  ECDC  F048         	call	___wmul	;wreg free
 27533  0046B6  0EB0               	movlw	low __powers_
 27534  0046B8  0100               	movlb	0	; () banked
 27535  0046BA  2587               	addwf	?___wmul& (0+255),w,b
 27536  0046BC  6EF6               	movwf	tblptrl,c
 27537  0046BE  0EEE               	movlw	high __powers_
 27538  0046C0  0100               	movlb	0	; () banked
 27539  0046C2  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27540  0046C4  6EF7               	movwf	tblptrh,c
 27541  0046C6                     	if	1	;There are 3 active tblptr bytes
 27542  0046C6  6AF8               	clrf	tblptru,c
 27543  0046C8  0E00               	movlw	low (__mediumconst shr (0+16))
 27544  0046CA  22F8               	addwfc	tblptru,f,c
 27545  0046CC                     	endif
 27546  0046CC  0009               	tblrd		*+
 27547  0046CE  CFF5 F096          	movff	tablat,___ftmul@f2
 27548  0046D2  0009               	tblrd		*+
 27549  0046D4  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27550  0046D8  000A               	tblrd		*-
 27551  0046DA  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27552  0046DE  EC26  F037         	call	___ftmul	;wreg free
 27553  0046E2  C093  F0A2         	movff	?___ftmul,?_scale
 27554  0046E6  C094  F0A3         	movff	?___ftmul+1,?_scale+1
 27555  0046EA  C095  F0A4         	movff	?___ftmul+2,?_scale+2
 27556  0046EE  0012               	return	
 27557  0046F0  D06B               	goto	l13009
 27558  0046F2                     l13003:
 27559                           
 27560                           ;doprnt.c: 438: else if(scl > 10)
 27561  0046F2  0100               	movlb	0	; () banked
 27562  0046F4  51A8               	movf	scale@scl& (0+255),w,b
 27563  0046F6  0A80               	xorlw	128
 27564  0046F8  0F75               	addlw	-139
 27565  0046FA  A0D8               	btfss	status,0,c
 27566  0046FC  D065               	goto	l13009
 27567                           
 27568                           ; BSR set to: 0
 27569                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 27570  0046FE  0E00               	movlw	0
 27571  004700  0100               	movlb	0	; () banked
 27572  004702  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27573  004704  0E0A               	movlw	10
 27574  004706  6F81               	movwf	___awdiv@divisor& (0+255),b
 27575  004708  0100               	movlb	0	; () banked
 27576  00470A  51A8               	movf	scale@scl& (0+255),w,b
 27577  00470C  0100               	movlb	0	; () banked
 27578  00470E  6F7F               	movwf	___awdiv@dividend& (0+255),b
 27579  004710  6B80               	clrf	(___awdiv@dividend+1)& (0+255),b
 27580  004712  BF7F               	btfsc	___awdiv@dividend& (0+255),7,b
 27581  004714  0780               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27582  004716  EC2A  F03E         	call	___awdiv	;wreg free
 27583  00471A  0E09               	movlw	9
 27584  00471C  0100               	movlb	0	; () banked
 27585  00471E  257F               	addwf	?___awdiv& (0+255),w,b
 27586  004720  0100               	movlb	0	; () banked
 27587  004722  6F87               	movwf	___wmul@multiplier& (0+255),b
 27588  004724  0E00               	movlw	0
 27589  004726  0100               	movlb	0	; () banked
 27590  004728  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27591  00472A  0100               	movlb	0	; () banked
 27592  00472C  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27593  00472E  0E00               	movlw	0
 27594  004730  0100               	movlb	0	; () banked
 27595  004732  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27596  004734  0E03               	movlw	3
 27597  004736  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27598  004738  ECDC  F048         	call	___wmul	;wreg free
 27599  00473C  0EB0               	movlw	low __powers_
 27600  00473E  0100               	movlb	0	; () banked
 27601  004740  2587               	addwf	?___wmul& (0+255),w,b
 27602  004742  6EF6               	movwf	tblptrl,c
 27603  004744  0EEE               	movlw	high __powers_
 27604  004746  0100               	movlb	0	; () banked
 27605  004748  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27606  00474A  6EF7               	movwf	tblptrh,c
 27607  00474C                     	if	1	;There are 3 active tblptr bytes
 27608  00474C  6AF8               	clrf	tblptru,c
 27609  00474E  0E00               	movlw	low (__mediumconst shr (0+16))
 27610  004750  22F8               	addwfc	tblptru,f,c
 27611  004752                     	endif
 27612  004752  0009               	tblrd		*+
 27613  004754  CFF5 F093          	movff	tablat,___ftmul@f1
 27614  004758  0009               	tblrd		*+
 27615  00475A  CFF5 F094          	movff	tablat,___ftmul@f1+1
 27616  00475E  000A               	tblrd		*-
 27617  004760  CFF5 F095          	movff	tablat,___ftmul@f1+2
 27618  004764  0E00               	movlw	0
 27619  004766  0100               	movlb	0	; () banked
 27620  004768  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27621  00476A  0E03               	movlw	3
 27622  00476C  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27623  00476E  0E00               	movlw	0
 27624  004770  0100               	movlb	0	; () banked
 27625  004772  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27626  004774  0E0A               	movlw	10
 27627  004776  6F7B               	movwf	___awmod@divisor& (0+255),b
 27628  004778  0100               	movlb	0	; () banked
 27629  00477A  51A8               	movf	scale@scl& (0+255),w,b
 27630  00477C  0100               	movlb	0	; () banked
 27631  00477E  6F79               	movwf	___awmod@dividend& (0+255),b
 27632  004780  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27633  004782  BF79               	btfsc	___awmod@dividend& (0+255),7,b
 27634  004784  077A               	decf	(___awmod@dividend+1)& (0+255),f,b
 27635  004786  ECD7  F040         	call	___awmod	;wreg free
 27636  00478A  C079  F087         	movff	?___awmod,___wmul@multiplier
 27637  00478E  C07A  F088         	movff	?___awmod+1,___wmul@multiplier+1
 27638  004792  ECDC  F048         	call	___wmul	;wreg free
 27639  004796  0EB0               	movlw	low __powers_
 27640  004798  0100               	movlb	0	; () banked
 27641  00479A  2587               	addwf	?___wmul& (0+255),w,b
 27642  00479C  6EF6               	movwf	tblptrl,c
 27643  00479E  0EEE               	movlw	high __powers_
 27644  0047A0  0100               	movlb	0	; () banked
 27645  0047A2  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27646  0047A4  6EF7               	movwf	tblptrh,c
 27647  0047A6                     	if	1	;There are 3 active tblptr bytes
 27648  0047A6  6AF8               	clrf	tblptru,c
 27649  0047A8  0E00               	movlw	low (__mediumconst shr (0+16))
 27650  0047AA  22F8               	addwfc	tblptru,f,c
 27651  0047AC                     	endif
 27652  0047AC  0009               	tblrd		*+
 27653  0047AE  CFF5 F096          	movff	tablat,___ftmul@f2
 27654  0047B2  0009               	tblrd		*+
 27655  0047B4  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27656  0047B8  000A               	tblrd		*-
 27657  0047BA  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27658  0047BE  EC26  F037         	call	___ftmul	;wreg free
 27659  0047C2  D78F               	goto	L22
 27660  0047C4  0012               	return	
 27661  0047C6  D000               	goto	l13009
 27662  0047C8                     l13009:
 27663                           
 27664                           ;doprnt.c: 440: return _powers_[scl];
 27665  0047C8  0100               	movlb	0	; () banked
 27666  0047CA  51A8               	movf	scale@scl& (0+255),w,b
 27667  0047CC  0D03               	mullw	3
 27668  0047CE  0EB0               	movlw	low __powers_
 27669  0047D0  24F3               	addwf	prodl,w,c
 27670  0047D2  6EF6               	movwf	tblptrl,c
 27671  0047D4  0EEE               	movlw	high __powers_
 27672  0047D6  20F4               	addwfc	prodh,w,c
 27673  0047D8  6EF7               	movwf	tblptrh,c
 27674  0047DA                     	if	1	;There are 3 active tblptr bytes
 27675  0047DA  6AF8               	clrf	tblptru,c
 27676  0047DC  0E00               	movlw	low (__mediumconst shr (0+16))
 27677  0047DE  22F8               	addwfc	tblptru,f,c
 27678  0047E0                     	endif
 27679  0047E0  0009               	tblrd		*+
 27680  0047E2  CFF5 F0A2          	movff	tablat,?_scale
 27681  0047E6  0009               	tblrd		*+
 27682  0047E8  CFF5 F0A3          	movff	tablat,?_scale+1
 27683  0047EC  000A               	tblrd		*-
 27684  0047EE  CFF5 F0A4          	movff	tablat,?_scale+2
 27685  0047F2  0012               	return	
 27686                           
 27687                           ; BSR set to: 0
 27688  0047F4  0012               	return		;funcret
 27689  0047F6                     __end_of_scale:
 27690                           	opt stack 0
 27691                           tblptru	equ	0xFF8
 27692                           tblptrh	equ	0xFF7
 27693                           tblptrl	equ	0xFF6
 27694                           tablat	equ	0xFF5
 27695                           prodh	equ	0xFF4
 27696                           prodl	equ	0xFF3
 27697                           intcon	equ	0xFF2
 27698                           intcon2	equ	0xFF1
 27699                           indf0	equ	0xFEF
 27700                           postinc0	equ	0xFEE
 27701                           fsr0h	equ	0xFEA
 27702                           fsr0l	equ	0xFE9
 27703                           wreg	equ	0xFE8
 27704                           indf1	equ	0xFE7
 27705                           postdec1	equ	0xFE5
 27706                           fsr1h	equ	0xFE2
 27707                           fsr1l	equ	0xFE1
 27708                           indf2	equ	0xFDF
 27709                           postinc2	equ	0xFDE
 27710                           postdec2	equ	0xFDD
 27711                           fsr2h	equ	0xFDA
 27712                           fsr2l	equ	0xFD9
 27713                           status	equ	0xFD8
 27714                           
 27715 ;; *************** function _isdigit *****************
 27716 ;; Defined at:
 27717 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
 27718 ;; Parameters:    Size  Location     Type
 27719 ;;  c               1    wreg     unsigned char 
 27720 ;; Auto vars:     Size  Location     Type
 27721 ;;  c               1   27[BANK0 ] unsigned char 
 27722 ;; Return value:  Size  Location     Type
 27723 ;;		None               void
 27724 ;; Registers used:
 27725 ;;		wreg, status,2, status,0
 27726 ;; Tracked objects:
 27727 ;;		On entry : 0/0
 27728 ;;		On exit  : 0/0
 27729 ;;		Unchanged: 0/0
 27730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27732 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27733 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27734 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27735 ;;Total ram usage:        3 bytes
 27736 ;; Hardware stack levels used:    1
 27737 ;; Hardware stack levels required when called:    6
 27738 ;; This function calls:
 27739 ;;		Nothing
 27740 ;; This function is called by:
 27741 ;;		_sprintf
 27742 ;; This function uses a non-reentrant model
 27743 ;;
 27744                           
 27745                           	psect	text61
 27746  009288                     __ptext61:
 27747                           	opt stack 0
 27748  009288                     _isdigit:
 27749                           	opt stack 22
 27750                           
 27751                           ;incstack = 0
 27752                           ;isdigit@c stored from wreg
 27753  009288  0100               	movlb	0	; () banked
 27754  00928A  6F7B               	movwf	isdigit@c& (0+255),b
 27755                           
 27756                           ; BSR set to: 0
 27757  00928C  0E00               	movlw	0
 27758  00928E  0100               	movlb	0	; () banked
 27759  009290  6F7A               	movwf	_isdigit$3475& (0+255),b
 27760                           
 27761                           ; BSR set to: 0
 27762  009292  0E3A               	movlw	58
 27763  009294  0100               	movlb	0	; () banked
 27764  009296  617B               	cpfslt	isdigit@c& (0+255),b
 27765  009298  D008               	goto	l13021
 27766                           
 27767                           ; BSR set to: 0
 27768  00929A  0E2F               	movlw	47
 27769  00929C  0100               	movlb	0	; () banked
 27770  00929E  657B               	cpfsgt	isdigit@c& (0+255),b
 27771  0092A0  D004               	goto	l13021
 27772                           
 27773                           ; BSR set to: 0
 27774  0092A2  0E01               	movlw	1
 27775  0092A4  0100               	movlb	0	; () banked
 27776  0092A6  6F7A               	movwf	_isdigit$3475& (0+255),b
 27777  0092A8  D000               	goto	l13021
 27778  0092AA                     l13021:
 27779                           
 27780                           ; BSR set to: 0
 27781  0092AA  C07A  F079         	movff	_isdigit$3475,??_isdigit
 27782  0092AE  0100               	movlb	0	; () banked
 27783  0092B0  3179               	rrcf	??_isdigit& (0+255),w,b
 27784  0092B2  0012               	return	
 27785                           
 27786                           ; BSR set to: 0
 27787                           
 27788                           ; BSR set to: 0
 27789  0092B4  0012               	return		;funcret
 27790  0092B6                     __end_of_isdigit:
 27791                           	opt stack 0
 27792                           tblptru	equ	0xFF8
 27793                           tblptrh	equ	0xFF7
 27794                           tblptrl	equ	0xFF6
 27795                           tablat	equ	0xFF5
 27796                           prodh	equ	0xFF4
 27797                           prodl	equ	0xFF3
 27798                           intcon	equ	0xFF2
 27799                           intcon2	equ	0xFF1
 27800                           indf0	equ	0xFEF
 27801                           postinc0	equ	0xFEE
 27802                           fsr0h	equ	0xFEA
 27803                           fsr0l	equ	0xFE9
 27804                           wreg	equ	0xFE8
 27805                           indf1	equ	0xFE7
 27806                           postdec1	equ	0xFE5
 27807                           fsr1h	equ	0xFE2
 27808                           fsr1l	equ	0xFE1
 27809                           indf2	equ	0xFDF
 27810                           postinc2	equ	0xFDE
 27811                           postdec2	equ	0xFDD
 27812                           fsr2h	equ	0xFDA
 27813                           fsr2l	equ	0xFD9
 27814                           status	equ	0xFD8
 27815                           
 27816 ;; *************** function _fround *****************
 27817 ;; Defined at:
 27818 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 27819 ;; Parameters:    Size  Location     Type
 27820 ;;  prec            1    wreg     unsigned char 
 27821 ;; Auto vars:     Size  Location     Type
 27822 ;;  prec            1   75[BANK0 ] unsigned char 
 27823 ;; Return value:  Size  Location     Type
 27824 ;;                  3   66[BANK0 ] unsigned char 
 27825 ;; Registers used:
 27826 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27827 ;; Tracked objects:
 27828 ;;		On entry : 0/0
 27829 ;;		On exit  : 0/0
 27830 ;;		Unchanged: 0/0
 27831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27832 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27833 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27835 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27836 ;;Total ram usage:       10 bytes
 27837 ;; Hardware stack levels used:    1
 27838 ;; Hardware stack levels required when called:    8
 27839 ;; This function calls:
 27840 ;;		___awdiv
 27841 ;;		___awmod
 27842 ;;		___ftmul
 27843 ;;		___wmul
 27844 ;; This function is called by:
 27845 ;;		_sprintf
 27846 ;; This function uses a non-reentrant model
 27847 ;;
 27848                           
 27849                           	psect	text62
 27850  005846                     __ptext62:
 27851                           	opt stack 0
 27852  005846                     _fround:
 27853                           	opt stack 20
 27854                           
 27855                           ; BSR set to: 0
 27856                           ;incstack = 0
 27857                           ;fround@prec stored from wreg
 27858  005846  0100               	movlb	0	; () banked
 27859  005848  6FAB               	movwf	fround@prec& (0+255),b
 27860                           
 27861                           ; BSR set to: 0
 27862                           ;doprnt.c: 413: if(prec>=110)
 27863  00584A  0E6D               	movlw	109
 27864  00584C  0100               	movlb	0	; () banked
 27865  00584E  65AB               	cpfsgt	fround@prec& (0+255),b
 27866  005850  D0C4               	goto	l12963
 27867                           
 27868                           ; BSR set to: 0
 27869                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27870  005852  0E00               	movlw	0
 27871  005854  0100               	movlb	0	; () banked
 27872  005856  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27873  005858  0E03               	movlw	3
 27874  00585A  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27875  00585C  0E00               	movlw	0
 27876  00585E  0100               	movlb	0	; () banked
 27877  005860  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27878  005862  0E0A               	movlw	10
 27879  005864  6F81               	movwf	___awdiv@divisor& (0+255),b
 27880  005866  0E00               	movlw	0
 27881  005868  0100               	movlb	0	; () banked
 27882  00586A  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27883  00586C  0E64               	movlw	100
 27884  00586E  6F7B               	movwf	___awmod@divisor& (0+255),b
 27885  005870  C0AB  F079         	movff	fround@prec,___awmod@dividend
 27886  005874  0100               	movlb	0	; () banked
 27887  005876  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27888  005878  ECD7  F040         	call	___awmod	;wreg free
 27889  00587C  C079  F07F         	movff	?___awmod,___awdiv@dividend
 27890  005880  C07A  F080         	movff	?___awmod+1,___awdiv@dividend+1
 27891  005884  EC2A  F03E         	call	___awdiv	;wreg free
 27892  005888  0E09               	movlw	9
 27893  00588A  0100               	movlb	0	; () banked
 27894  00588C  257F               	addwf	?___awdiv& (0+255),w,b
 27895  00588E  0100               	movlb	0	; () banked
 27896  005890  6F87               	movwf	___wmul@multiplier& (0+255),b
 27897  005892  0E00               	movlw	0
 27898  005894  0100               	movlb	0	; () banked
 27899  005896  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27900  005898  0100               	movlb	0	; () banked
 27901  00589A  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27902  00589C  ECDC  F048         	call	___wmul	;wreg free
 27903  0058A0  0E89               	movlw	low __npowers_
 27904  0058A2  0100               	movlb	0	; () banked
 27905  0058A4  2587               	addwf	?___wmul& (0+255),w,b
 27906  0058A6  6EF6               	movwf	tblptrl,c
 27907  0058A8  0EEE               	movlw	high __npowers_
 27908  0058AA  0100               	movlb	0	; () banked
 27909  0058AC  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27910  0058AE  6EF7               	movwf	tblptrh,c
 27911  0058B0                     	if	1	;There are 3 active tblptr bytes
 27912  0058B0  6AF8               	clrf	tblptru,c
 27913  0058B2  0E00               	movlw	low (__mediumconst shr (0+16))
 27914  0058B4  22F8               	addwfc	tblptru,f,c
 27915  0058B6                     	endif
 27916  0058B6  0009               	tblrd		*+
 27917  0058B8  CFF5 F096          	movff	tablat,___ftmul@f2
 27918  0058BC  0009               	tblrd		*+
 27919  0058BE  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27920  0058C2  000A               	tblrd		*-
 27921  0058C4  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27922  0058C8  0E00               	movlw	0
 27923  0058CA  0100               	movlb	0	; () banked
 27924  0058CC  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27925  0058CE  0E64               	movlw	100
 27926  0058D0  6F81               	movwf	___awdiv@divisor& (0+255),b
 27927  0058D2  C0AB  F07F         	movff	fround@prec,___awdiv@dividend
 27928  0058D6  0100               	movlb	0	; () banked
 27929  0058D8  6B80               	clrf	(___awdiv@dividend+1)& (0+255),b
 27930  0058DA  EC2A  F03E         	call	___awdiv	;wreg free
 27931  0058DE  0E12               	movlw	18
 27932  0058E0  0100               	movlb	0	; () banked
 27933  0058E2  257F               	addwf	?___awdiv& (0+255),w,b
 27934  0058E4  0100               	movlb	0	; () banked
 27935  0058E6  6F87               	movwf	___wmul@multiplier& (0+255),b
 27936  0058E8  0E00               	movlw	0
 27937  0058EA  0100               	movlb	0	; () banked
 27938  0058EC  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27939  0058EE  0100               	movlb	0	; () banked
 27940  0058F0  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27941  0058F2  0E00               	movlw	0
 27942  0058F4  0100               	movlb	0	; () banked
 27943  0058F6  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27944  0058F8  0E03               	movlw	3
 27945  0058FA  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27946  0058FC  ECDC  F048         	call	___wmul	;wreg free
 27947  005900  0E89               	movlw	low __npowers_
 27948  005902  0100               	movlb	0	; () banked
 27949  005904  2587               	addwf	?___wmul& (0+255),w,b
 27950  005906  6EF6               	movwf	tblptrl,c
 27951  005908  0EEE               	movlw	high __npowers_
 27952  00590A  0100               	movlb	0	; () banked
 27953  00590C  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27954  00590E  6EF7               	movwf	tblptrh,c
 27955  005910                     	if	1	;There are 3 active tblptr bytes
 27956  005910  6AF8               	clrf	tblptru,c
 27957  005912  0E00               	movlw	low (__mediumconst shr (0+16))
 27958  005914  22F8               	addwfc	tblptru,f,c
 27959  005916                     	endif
 27960  005916  0009               	tblrd		*+
 27961  005918  CFF5 F093          	movff	tablat,___ftmul@f1
 27962  00591C  0009               	tblrd		*+
 27963  00591E  CFF5 F094          	movff	tablat,___ftmul@f1+1
 27964  005922  000A               	tblrd		*-
 27965  005924  CFF5 F095          	movff	tablat,___ftmul@f1+2
 27966  005928  EC26  F037         	call	___ftmul	;wreg free
 27967  00592C  C093  F0A8         	movff	?___ftmul,_fround$3799
 27968  005930  C094  F0A9         	movff	?___ftmul+1,_fround$3799+1
 27969  005934  C095  F0AA         	movff	?___ftmul+2,_fround$3799+2
 27970                           
 27971                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27972  005938  0E00               	movlw	0
 27973  00593A  0100               	movlb	0	; () banked
 27974  00593C  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27975  00593E  0E03               	movlw	3
 27976  005940  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27977  005942  0E00               	movlw	0
 27978  005944  0100               	movlb	0	; () banked
 27979  005946  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27980  005948  0E0A               	movlw	10
 27981  00594A  6F7B               	movwf	___awmod@divisor& (0+255),b
 27982  00594C  C0AB  F079         	movff	fround@prec,___awmod@dividend
 27983  005950  0100               	movlb	0	; () banked
 27984  005952  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27985  005954  ECD7  F040         	call	___awmod	;wreg free
 27986  005958  C079  F087         	movff	?___awmod,___wmul@multiplier
 27987  00595C  C07A  F088         	movff	?___awmod+1,___wmul@multiplier+1
 27988  005960  ECDC  F048         	call	___wmul	;wreg free
 27989  005964  0E89               	movlw	low __npowers_
 27990  005966  0100               	movlb	0	; () banked
 27991  005968  2587               	addwf	?___wmul& (0+255),w,b
 27992  00596A  6EF6               	movwf	tblptrl,c
 27993  00596C  0EEE               	movlw	high __npowers_
 27994  00596E  0100               	movlb	0	; () banked
 27995  005970  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27996  005972  6EF7               	movwf	tblptrh,c
 27997  005974                     	if	1	;There are 3 active tblptr bytes
 27998  005974  6AF8               	clrf	tblptru,c
 27999  005976  0E00               	movlw	low (__mediumconst shr (0+16))
 28000  005978  22F8               	addwfc	tblptru,f,c
 28001  00597A                     	endif
 28002  00597A  0009               	tblrd		*+
 28003  00597C  CFF5 F096          	movff	tablat,___ftmul@f2
 28004  005980  0009               	tblrd		*+
 28005  005982  CFF5 F097          	movff	tablat,___ftmul@f2+1
 28006  005986  000A               	tblrd		*-
 28007  005988  CFF5 F098          	movff	tablat,___ftmul@f2+2
 28008  00598C  C0A8  F093         	movff	_fround$3799,___ftmul@f1
 28009  005990  C0A9  F094         	movff	_fround$3799+1,___ftmul@f1+1
 28010  005994  C0AA  F095         	movff	_fround$3799+2,___ftmul@f1+2
 28011  005998  EC26  F037         	call	___ftmul	;wreg free
 28012  00599C  C093  F0A5         	movff	?___ftmul,_fround$3800
 28013  0059A0  C094  F0A6         	movff	?___ftmul+1,_fround$3800+1
 28014  0059A4  C095  F0A7         	movff	?___ftmul+2,_fround$3800+2
 28015                           
 28016                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 28017  0059A8  C0A5  F093         	movff	_fround$3800,___ftmul@f1
 28018  0059AC  C0A6  F094         	movff	_fround$3800+1,___ftmul@f1+1
 28019  0059B0  C0A7  F095         	movff	_fround$3800+2,___ftmul@f1+2
 28020  0059B4  0E00               	movlw	0
 28021  0059B6  0100               	movlb	0	; () banked
 28022  0059B8  6F96               	movwf	___ftmul@f2& (0+255),b
 28023  0059BA  0E00               	movlw	0
 28024  0059BC  0100               	movlb	0	; () banked
 28025  0059BE  6F97               	movwf	(___ftmul@f2+1)& (0+255),b
 28026  0059C0  0E3F               	movlw	63
 28027  0059C2  0100               	movlb	0	; () banked
 28028  0059C4  6F98               	movwf	(___ftmul@f2+2)& (0+255),b
 28029  0059C6  EC26  F037         	call	___ftmul	;wreg free
 28030  0059CA  C093  F0A2         	movff	?___ftmul,?_fround
 28031  0059CE  C094  F0A3         	movff	?___ftmul+1,?_fround+1
 28032  0059D2  C095  F0A4         	movff	?___ftmul+2,?_fround+2
 28033  0059D6  0012               	return	
 28034  0059D8  D07A               	goto	l12971
 28035  0059DA                     l12963:
 28036                           
 28037                           ;doprnt.c: 415: else if(prec > 10)
 28038  0059DA  0E0A               	movlw	10
 28039  0059DC  0100               	movlb	0	; () banked
 28040  0059DE  65AB               	cpfsgt	fround@prec& (0+255),b
 28041  0059E0  D076               	goto	l12971
 28042                           
 28043                           ; BSR set to: 0
 28044                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 28045  0059E2  0E00               	movlw	0
 28046  0059E4  0100               	movlb	0	; () banked
 28047  0059E6  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28048  0059E8  0E03               	movlw	3
 28049  0059EA  6F89               	movwf	___wmul@multiplicand& (0+255),b
 28050  0059EC  0E00               	movlw	0
 28051  0059EE  0100               	movlb	0	; () banked
 28052  0059F0  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 28053  0059F2  0E0A               	movlw	10
 28054  0059F4  6F7B               	movwf	___awmod@divisor& (0+255),b
 28055  0059F6  C0AB  F079         	movff	fround@prec,___awmod@dividend
 28056  0059FA  0100               	movlb	0	; () banked
 28057  0059FC  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 28058  0059FE  ECD7  F040         	call	___awmod	;wreg free
 28059  005A02  C079  F087         	movff	?___awmod,___wmul@multiplier
 28060  005A06  C07A  F088         	movff	?___awmod+1,___wmul@multiplier+1
 28061  005A0A  ECDC  F048         	call	___wmul	;wreg free
 28062  005A0E  0E89               	movlw	low __npowers_
 28063  005A10  0100               	movlb	0	; () banked
 28064  005A12  2587               	addwf	?___wmul& (0+255),w,b
 28065  005A14  6EF6               	movwf	tblptrl,c
 28066  005A16  0EEE               	movlw	high __npowers_
 28067  005A18  0100               	movlb	0	; () banked
 28068  005A1A  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 28069  005A1C  6EF7               	movwf	tblptrh,c
 28070  005A1E                     	if	1	;There are 3 active tblptr bytes
 28071  005A1E  6AF8               	clrf	tblptru,c
 28072  005A20  0E00               	movlw	low (__mediumconst shr (0+16))
 28073  005A22  22F8               	addwfc	tblptru,f,c
 28074  005A24                     	endif
 28075  005A24  0009               	tblrd		*+
 28076  005A26  CFF5 F096          	movff	tablat,___ftmul@f2
 28077  005A2A  0009               	tblrd		*+
 28078  005A2C  CFF5 F097          	movff	tablat,___ftmul@f2+1
 28079  005A30  000A               	tblrd		*-
 28080  005A32  CFF5 F098          	movff	tablat,___ftmul@f2+2
 28081  005A36  0E00               	movlw	0
 28082  005A38  0100               	movlb	0	; () banked
 28083  005A3A  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 28084  005A3C  0E0A               	movlw	10
 28085  005A3E  6F81               	movwf	___awdiv@divisor& (0+255),b
 28086  005A40  C0AB  F07F         	movff	fround@prec,___awdiv@dividend
 28087  005A44  0100               	movlb	0	; () banked
 28088  005A46  6B80               	clrf	(___awdiv@dividend+1)& (0+255),b
 28089  005A48  EC2A  F03E         	call	___awdiv	;wreg free
 28090  005A4C  0E09               	movlw	9
 28091  005A4E  0100               	movlb	0	; () banked
 28092  005A50  257F               	addwf	?___awdiv& (0+255),w,b
 28093  005A52  0100               	movlb	0	; () banked
 28094  005A54  6F87               	movwf	___wmul@multiplier& (0+255),b
 28095  005A56  0E00               	movlw	0
 28096  005A58  0100               	movlb	0	; () banked
 28097  005A5A  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 28098  005A5C  0100               	movlb	0	; () banked
 28099  005A5E  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 28100  005A60  0E00               	movlw	0
 28101  005A62  0100               	movlb	0	; () banked
 28102  005A64  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28103  005A66  0E03               	movlw	3
 28104  005A68  6F89               	movwf	___wmul@multiplicand& (0+255),b
 28105  005A6A  ECDC  F048         	call	___wmul	;wreg free
 28106  005A6E  0E89               	movlw	low __npowers_
 28107  005A70  0100               	movlb	0	; () banked
 28108  005A72  2587               	addwf	?___wmul& (0+255),w,b
 28109  005A74  6EF6               	movwf	tblptrl,c
 28110  005A76  0EEE               	movlw	high __npowers_
 28111  005A78  0100               	movlb	0	; () banked
 28112  005A7A  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 28113  005A7C  6EF7               	movwf	tblptrh,c
 28114  005A7E                     	if	1	;There are 3 active tblptr bytes
 28115  005A7E  6AF8               	clrf	tblptru,c
 28116  005A80  0E00               	movlw	low (__mediumconst shr (0+16))
 28117  005A82  22F8               	addwfc	tblptru,f,c
 28118  005A84                     	endif
 28119  005A84  0009               	tblrd		*+
 28120  005A86  CFF5 F093          	movff	tablat,___ftmul@f1
 28121  005A8A  0009               	tblrd		*+
 28122  005A8C  CFF5 F094          	movff	tablat,___ftmul@f1+1
 28123  005A90  000A               	tblrd		*-
 28124  005A92  CFF5 F095          	movff	tablat,___ftmul@f1+2
 28125  005A96  EC26  F037         	call	___ftmul	;wreg free
 28126  005A9A  C093  F0A8         	movff	?___ftmul,_fround$3799
 28127  005A9E  C094  F0A9         	movff	?___ftmul+1,_fround$3799+1
 28128  005AA2  C095  F0AA         	movff	?___ftmul+2,_fround$3799+2
 28129                           
 28130                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 28131  005AA6  C0A8  F093         	movff	_fround$3799,___ftmul@f1
 28132  005AAA  C0A9  F094         	movff	_fround$3799+1,___ftmul@f1+1
 28133  005AAE  C0AA  F095         	movff	_fround$3799+2,___ftmul@f1+2
 28134  005AB2  0E00               	movlw	0
 28135  005AB4  0100               	movlb	0	; () banked
 28136  005AB6  6F96               	movwf	___ftmul@f2& (0+255),b
 28137  005AB8  0E00               	movlw	0
 28138  005ABA  0100               	movlb	0	; () banked
 28139  005ABC  6F97               	movwf	(___ftmul@f2+1)& (0+255),b
 28140  005ABE  0E3F               	movlw	63
 28141  005AC0  0100               	movlb	0	; () banked
 28142  005AC2  6F98               	movwf	(___ftmul@f2+2)& (0+255),b
 28143  005AC4  EC26  F037         	call	___ftmul	;wreg free
 28144  005AC8  D780               	goto	L23
 28145  005ACA  0012               	return	
 28146  005ACC  D000               	goto	l12971
 28147  005ACE                     l12971:
 28148                           
 28149                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 28150  005ACE  0100               	movlb	0	; () banked
 28151  005AD0  51AB               	movf	fround@prec& (0+255),w,b
 28152  005AD2  0D03               	mullw	3
 28153  005AD4  0E89               	movlw	low __npowers_
 28154  005AD6  24F3               	addwf	prodl,w,c
 28155  005AD8  6EF6               	movwf	tblptrl,c
 28156  005ADA  0EEE               	movlw	high __npowers_
 28157  005ADC  20F4               	addwfc	prodh,w,c
 28158  005ADE  6EF7               	movwf	tblptrh,c
 28159  005AE0                     	if	1	;There are 3 active tblptr bytes
 28160  005AE0  6AF8               	clrf	tblptru,c
 28161  005AE2  0E00               	movlw	low (__mediumconst shr (0+16))
 28162  005AE4  22F8               	addwfc	tblptru,f,c
 28163  005AE6                     	endif
 28164  005AE6  0009               	tblrd		*+
 28165  005AE8  CFF5 F093          	movff	tablat,___ftmul@f1
 28166  005AEC  0009               	tblrd		*+
 28167  005AEE  CFF5 F094          	movff	tablat,___ftmul@f1+1
 28168  005AF2  000A               	tblrd		*-
 28169  005AF4  CFF5 F095          	movff	tablat,___ftmul@f1+2
 28170  005AF8  0E00               	movlw	0
 28171  005AFA  0100               	movlb	0	; () banked
 28172  005AFC  6F96               	movwf	___ftmul@f2& (0+255),b
 28173  005AFE  0E00               	movlw	0
 28174  005B00  0100               	movlb	0	; () banked
 28175  005B02  6F97               	movwf	(___ftmul@f2+1)& (0+255),b
 28176  005B04  0E3F               	movlw	63
 28177  005B06  0100               	movlb	0	; () banked
 28178  005B08  6F98               	movwf	(___ftmul@f2+2)& (0+255),b
 28179  005B0A  EC26  F037         	call	___ftmul	;wreg free
 28180  005B0E  C093  F0A2         	movff	?___ftmul,?_fround
 28181  005B12  C094  F0A3         	movff	?___ftmul+1,?_fround+1
 28182  005B16  C095  F0A4         	movff	?___ftmul+2,?_fround+2
 28183  005B1A  0012               	return	
 28184  005B1C  0012               	return		;funcret
 28185  005B1E                     __end_of_fround:
 28186                           	opt stack 0
 28187                           tblptru	equ	0xFF8
 28188                           tblptrh	equ	0xFF7
 28189                           tblptrl	equ	0xFF6
 28190                           tablat	equ	0xFF5
 28191                           prodh	equ	0xFF4
 28192                           prodl	equ	0xFF3
 28193                           intcon	equ	0xFF2
 28194                           intcon2	equ	0xFF1
 28195                           indf0	equ	0xFEF
 28196                           postinc0	equ	0xFEE
 28197                           fsr0h	equ	0xFEA
 28198                           fsr0l	equ	0xFE9
 28199                           wreg	equ	0xFE8
 28200                           indf1	equ	0xFE7
 28201                           postdec1	equ	0xFE5
 28202                           fsr1h	equ	0xFE2
 28203                           fsr1l	equ	0xFE1
 28204                           indf2	equ	0xFDF
 28205                           postinc2	equ	0xFDE
 28206                           postdec2	equ	0xFDD
 28207                           fsr2h	equ	0xFDA
 28208                           fsr2l	equ	0xFD9
 28209                           status	equ	0xFD8
 28210                           
 28211 ;; *************** function ___wmul *****************
 28212 ;; Defined at:
 28213 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 28214 ;; Parameters:    Size  Location     Type
 28215 ;;  multiplier      2   39[BANK0 ] unsigned int 
 28216 ;;  multiplicand    2   41[BANK0 ] unsigned int 
 28217 ;; Auto vars:     Size  Location     Type
 28218 ;;  product         2   43[BANK0 ] unsigned int 
 28219 ;; Return value:  Size  Location     Type
 28220 ;;                  2   39[BANK0 ] unsigned int 
 28221 ;; Registers used:
 28222 ;;		wreg, status,2, status,0, prodl, prodh
 28223 ;; Tracked objects:
 28224 ;;		On entry : 0/0
 28225 ;;		On exit  : 0/0
 28226 ;;		Unchanged: 0/0
 28227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28228 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28229 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28231 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28232 ;;Total ram usage:        6 bytes
 28233 ;; Hardware stack levels used:    1
 28234 ;; Hardware stack levels required when called:    6
 28235 ;; This function calls:
 28236 ;;		Nothing
 28237 ;; This function is called by:
 28238 ;;		_fround
 28239 ;;		_scale
 28240 ;;		_sprintf
 28241 ;; This function uses a non-reentrant model
 28242 ;;
 28243                           
 28244                           	psect	text63
 28245  0091B8                     __ptext63:
 28246                           	opt stack 0
 28247  0091B8                     ___wmul:
 28248                           	opt stack 21
 28249                           
 28250                           ;incstack = 0
 28251  0091B8  0100               	movlb	0	; () banked
 28252  0091BA  5187               	movf	___wmul@multiplier& (0+255),w,b
 28253  0091BC  0100               	movlb	0	; () banked
 28254  0091BE  0389               	mulwf	___wmul@multiplicand& (0+255),b
 28255  0091C0  CFF3 F08B          	movff	prodl,___wmul@product
 28256  0091C4  CFF4 F08C          	movff	prodh,___wmul@product+1
 28257  0091C8  0100               	movlb	0	; () banked
 28258  0091CA  5187               	movf	___wmul@multiplier& (0+255),w,b
 28259  0091CC  0100               	movlb	0	; () banked
 28260  0091CE  038A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 28261  0091D0  50F3               	movf	prodl,w,c
 28262  0091D2  0100               	movlb	0	; () banked
 28263  0091D4  278C               	addwf	(___wmul@product+1)& (0+255),f,b
 28264  0091D6  0100               	movlb	0	; () banked
 28265  0091D8  5188               	movf	(___wmul@multiplier+1)& (0+255),w,b
 28266  0091DA  0100               	movlb	0	; () banked
 28267  0091DC  0389               	mulwf	___wmul@multiplicand& (0+255),b
 28268  0091DE  50F3               	movf	prodl,w,c
 28269  0091E0  0100               	movlb	0	; () banked
 28270  0091E2  278C               	addwf	(___wmul@product+1)& (0+255),f,b
 28271                           
 28272                           ; BSR set to: 0
 28273  0091E4  C08B  F087         	movff	___wmul@product,?___wmul
 28274  0091E8  C08C  F088         	movff	___wmul@product+1,?___wmul+1
 28275  0091EC  0012               	return	
 28276                           
 28277                           ; BSR set to: 0
 28278                           
 28279                           ; BSR set to: 0
 28280  0091EE  0012               	return		;funcret
 28281  0091F0                     __end_of___wmul:
 28282                           	opt stack 0
 28283                           tblptru	equ	0xFF8
 28284                           tblptrh	equ	0xFF7
 28285                           tblptrl	equ	0xFF6
 28286                           tablat	equ	0xFF5
 28287                           prodh	equ	0xFF4
 28288                           prodl	equ	0xFF3
 28289                           intcon	equ	0xFF2
 28290                           intcon2	equ	0xFF1
 28291                           indf0	equ	0xFEF
 28292                           postinc0	equ	0xFEE
 28293                           fsr0h	equ	0xFEA
 28294                           fsr0l	equ	0xFE9
 28295                           wreg	equ	0xFE8
 28296                           indf1	equ	0xFE7
 28297                           postdec1	equ	0xFE5
 28298                           fsr1h	equ	0xFE2
 28299                           fsr1l	equ	0xFE1
 28300                           indf2	equ	0xFDF
 28301                           postinc2	equ	0xFDE
 28302                           postdec2	equ	0xFDD
 28303                           fsr2h	equ	0xFDA
 28304                           fsr2l	equ	0xFD9
 28305                           status	equ	0xFD8
 28306                           
 28307 ;; *************** function ___ftmul *****************
 28308 ;; Defined at:
 28309 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 28310 ;; Parameters:    Size  Location     Type
 28311 ;;  f1              3   51[BANK0 ] float 
 28312 ;;  f2              3   54[BANK0 ] float 
 28313 ;; Auto vars:     Size  Location     Type
 28314 ;;  f3_as_produc    3   61[BANK0 ] unsigned um
 28315 ;;  sign            1   65[BANK0 ] unsigned char 
 28316 ;;  cntr            1   64[BANK0 ] unsigned char 
 28317 ;;  exp             1   60[BANK0 ] unsigned char 
 28318 ;; Return value:  Size  Location     Type
 28319 ;;                  3   51[BANK0 ] float 
 28320 ;; Registers used:
 28321 ;;		wreg, status,2, status,0, cstack
 28322 ;; Tracked objects:
 28323 ;;		On entry : 0/0
 28324 ;;		On exit  : 0/0
 28325 ;;		Unchanged: 0/0
 28326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28327 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28328 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28329 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28330 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28331 ;;Total ram usage:       15 bytes
 28332 ;; Hardware stack levels used:    1
 28333 ;; Hardware stack levels required when called:    7
 28334 ;; This function calls:
 28335 ;;		___ftpack
 28336 ;; This function is called by:
 28337 ;;		_ReadVoltage
 28338 ;;		_fround
 28339 ;;		_scale
 28340 ;;		_sprintf
 28341 ;; This function uses a non-reentrant model
 28342 ;;
 28343                           
 28344                           	psect	text64
 28345  006E4C                     __ptext64:
 28346                           	opt stack 0
 28347  006E4C                     ___ftmul:
 28348                           	opt stack 20
 28349                           
 28350                           ; BSR set to: 0
 28351                           ;incstack = 0
 28352  006E4C  C095  F099         	movff	___ftmul@f1+2,??___ftmul
 28353  006E50  0100               	movlb	0	; () banked
 28354  006E52  6B9A               	clrf	(??___ftmul+1)& (0+255),b
 28355  006E54  6B9B               	clrf	(??___ftmul+2)& (0+255),b
 28356  006E56  0100               	movlb	0	; () banked
 28357  006E58  3594               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 28358  006E5A  0100               	movlb	0	; () banked
 28359  006E5C  3799               	rlcf	??___ftmul& (0+255),f,b
 28360  006E5E  E301               	bnc	u14891
 28361  006E60  819A               	bsf	(??___ftmul+1)& (0+255),0,b
 28362  006E62                     u14891:
 28363  006E62  0100               	movlb	0	; () banked
 28364  006E64  5199               	movf	??___ftmul& (0+255),w,b
 28365  006E66  0100               	movlb	0	; () banked
 28366  006E68  6F9C               	movwf	___ftmul@exp& (0+255),b
 28367  006E6A  0100               	movlb	0	; () banked
 28368  006E6C  519C               	movf	___ftmul@exp& (0+255),w,b
 28369  006E6E  A4D8               	btfss	status,2,c
 28370  006E70  D00A               	goto	l12683
 28371                           
 28372                           ; BSR set to: 0
 28373  006E72  0E00               	movlw	0
 28374  006E74  0100               	movlb	0	; () banked
 28375  006E76  6F93               	movwf	?___ftmul& (0+255),b
 28376  006E78  0E00               	movlw	0
 28377  006E7A  0100               	movlb	0	; () banked
 28378  006E7C  6F94               	movwf	(?___ftmul+1)& (0+255),b
 28379  006E7E  0E00               	movlw	0
 28380  006E80  0100               	movlb	0	; () banked
 28381  006E82  6F95               	movwf	(?___ftmul+2)& (0+255),b
 28382                           
 28383                           ; BSR set to: 0
 28384  006E84  0012               	return	
 28385  006E86                     l12683:
 28386                           
 28387                           ; BSR set to: 0
 28388  006E86  C098  F099         	movff	___ftmul@f2+2,??___ftmul
 28389  006E8A  0100               	movlb	0	; () banked
 28390  006E8C  6B9A               	clrf	(??___ftmul+1)& (0+255),b
 28391  006E8E  6B9B               	clrf	(??___ftmul+2)& (0+255),b
 28392  006E90  0100               	movlb	0	; () banked
 28393  006E92  3597               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 28394  006E94  0100               	movlb	0	; () banked
 28395  006E96  3799               	rlcf	??___ftmul& (0+255),f,b
 28396  006E98  E301               	bnc	u14911
 28397  006E9A  819A               	bsf	(??___ftmul+1)& (0+255),0,b
 28398  006E9C                     u14911:
 28399  006E9C  0100               	movlb	0	; () banked
 28400  006E9E  5199               	movf	??___ftmul& (0+255),w,b
 28401  006EA0  0100               	movlb	0	; () banked
 28402  006EA2  6FA1               	movwf	___ftmul@sign& (0+255),b
 28403  006EA4  0100               	movlb	0	; () banked
 28404  006EA6  51A1               	movf	___ftmul@sign& (0+255),w,b
 28405  006EA8  A4D8               	btfss	status,2,c
 28406  006EAA  D00A               	goto	l12689
 28407                           
 28408                           ; BSR set to: 0
 28409  006EAC  0E00               	movlw	0
 28410  006EAE  0100               	movlb	0	; () banked
 28411  006EB0  6F93               	movwf	?___ftmul& (0+255),b
 28412  006EB2  0E00               	movlw	0
 28413  006EB4  0100               	movlb	0	; () banked
 28414  006EB6  6F94               	movwf	(?___ftmul+1)& (0+255),b
 28415  006EB8  0E00               	movlw	0
 28416  006EBA  0100               	movlb	0	; () banked
 28417  006EBC  6F95               	movwf	(?___ftmul+2)& (0+255),b
 28418                           
 28419                           ; BSR set to: 0
 28420  006EBE  0012               	return	
 28421  006EC0                     l12689:
 28422                           
 28423                           ; BSR set to: 0
 28424  006EC0  0100               	movlb	0	; () banked
 28425  006EC2  51A1               	movf	___ftmul@sign& (0+255),w,b
 28426  006EC4  0F7B               	addlw	123
 28427  006EC6  0100               	movlb	0	; () banked
 28428  006EC8  279C               	addwf	___ftmul@exp& (0+255),f,b
 28429                           
 28430                           ; BSR set to: 0
 28431  006ECA  C095  F0A1         	movff	___ftmul@f1+2,___ftmul@sign
 28432  006ECE  0100               	movlb	0	; () banked
 28433  006ED0  5198               	movf	(___ftmul@f2+2)& (0+255),w,b
 28434  006ED2  0100               	movlb	0	; () banked
 28435  006ED4  1BA1               	xorwf	___ftmul@sign& (0+255),f,b
 28436  006ED6  0E80               	movlw	128
 28437  006ED8  0100               	movlb	0	; () banked
 28438  006EDA  17A1               	andwf	___ftmul@sign& (0+255),f,b
 28439                           
 28440                           ; BSR set to: 0
 28441  006EDC  0100               	movlb	0	; () banked
 28442  006EDE  8F94               	bsf	(___ftmul@f1+1)& (0+255),7,b
 28443                           
 28444                           ; BSR set to: 0
 28445  006EE0  0100               	movlb	0	; () banked
 28446  006EE2  8F97               	bsf	(___ftmul@f2+1)& (0+255),7,b
 28447                           
 28448                           ; BSR set to: 0
 28449  006EE4  0EFF               	movlw	255
 28450  006EE6  0100               	movlb	0	; () banked
 28451  006EE8  1796               	andwf	___ftmul@f2& (0+255),f,b
 28452  006EEA  0EFF               	movlw	255
 28453  006EEC  0100               	movlb	0	; () banked
 28454  006EEE  1797               	andwf	(___ftmul@f2+1)& (0+255),f,b
 28455  006EF0  0E00               	movlw	0
 28456  006EF2  0100               	movlb	0	; () banked
 28457  006EF4  1798               	andwf	(___ftmul@f2+2)& (0+255),f,b
 28458                           
 28459                           ; BSR set to: 0
 28460  006EF6  0E00               	movlw	0
 28461  006EF8  0100               	movlb	0	; () banked
 28462  006EFA  6F9D               	movwf	___ftmul@f3_as_product& (0+255),b
 28463  006EFC  0E00               	movlw	0
 28464  006EFE  0100               	movlb	0	; () banked
 28465  006F00  6F9E               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 28466  006F02  0E00               	movlw	0
 28467  006F04  0100               	movlb	0	; () banked
 28468  006F06  6F9F               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 28469                           
 28470                           ; BSR set to: 0
 28471  006F08  0E07               	movlw	7
 28472  006F0A  0100               	movlb	0	; () banked
 28473  006F0C  6FA0               	movwf	___ftmul@cntr& (0+255),b
 28474  006F0E  D000               	goto	l12703
 28475  006F10                     l12703:
 28476                           
 28477                           ; BSR set to: 0
 28478  006F10  0100               	movlb	0	; () banked
 28479  006F12  A193               	btfss	___ftmul@f1& (0+255),0,b
 28480  006F14  D00D               	goto	l12707
 28481                           
 28482                           ; BSR set to: 0
 28483  006F16  0100               	movlb	0	; () banked
 28484  006F18  5196               	movf	___ftmul@f2& (0+255),w,b
 28485  006F1A  0100               	movlb	0	; () banked
 28486  006F1C  279D               	addwf	___ftmul@f3_as_product& (0+255),f,b
 28487  006F1E  0100               	movlb	0	; () banked
 28488  006F20  5197               	movf	(___ftmul@f2+1)& (0+255),w,b
 28489  006F22  0100               	movlb	0	; () banked
 28490  006F24  239E               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 28491  006F26  0100               	movlb	0	; () banked
 28492  006F28  5198               	movf	(___ftmul@f2+2)& (0+255),w,b
 28493  006F2A  0100               	movlb	0	; () banked
 28494  006F2C  239F               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 28495  006F2E  D000               	goto	l12707
 28496  006F30                     l12707:
 28497                           
 28498                           ; BSR set to: 0
 28499  006F30  0100               	movlb	0	; () banked
 28500  006F32  90D8               	bcf	status,0,c
 28501  006F34  3395               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 28502  006F36  3394               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 28503  006F38  3393               	rrcf	___ftmul@f1& (0+255),f,b
 28504  006F3A  0100               	movlb	0	; () banked
 28505  006F3C  90D8               	bcf	status,0,c
 28506  006F3E  3796               	rlcf	___ftmul@f2& (0+255),f,b
 28507  006F40  3797               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 28508  006F42  3798               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 28509                           
 28510                           ; BSR set to: 0
 28511  006F44  0100               	movlb	0	; () banked
 28512  006F46  2FA0               	decfsz	___ftmul@cntr& (0+255),f,b
 28513  006F48  D7E3               	goto	l12703
 28514  006F4A  D000               	goto	l12711
 28515  006F4C                     l12711:
 28516                           
 28517                           ; BSR set to: 0
 28518  006F4C  0E09               	movlw	9
 28519  006F4E  0100               	movlb	0	; () banked
 28520  006F50  6FA0               	movwf	___ftmul@cntr& (0+255),b
 28521  006F52  D000               	goto	l12713
 28522  006F54                     l12713:
 28523                           
 28524                           ; BSR set to: 0
 28525  006F54  0100               	movlb	0	; () banked
 28526  006F56  A193               	btfss	___ftmul@f1& (0+255),0,b
 28527  006F58  D00D               	goto	l12717
 28528                           
 28529                           ; BSR set to: 0
 28530  006F5A  0100               	movlb	0	; () banked
 28531  006F5C  5196               	movf	___ftmul@f2& (0+255),w,b
 28532  006F5E  0100               	movlb	0	; () banked
 28533  006F60  279D               	addwf	___ftmul@f3_as_product& (0+255),f,b
 28534  006F62  0100               	movlb	0	; () banked
 28535  006F64  5197               	movf	(___ftmul@f2+1)& (0+255),w,b
 28536  006F66  0100               	movlb	0	; () banked
 28537  006F68  239E               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 28538  006F6A  0100               	movlb	0	; () banked
 28539  006F6C  5198               	movf	(___ftmul@f2+2)& (0+255),w,b
 28540  006F6E  0100               	movlb	0	; () banked
 28541  006F70  239F               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 28542  006F72  D000               	goto	l12717
 28543  006F74                     l12717:
 28544                           
 28545                           ; BSR set to: 0
 28546  006F74  0100               	movlb	0	; () banked
 28547  006F76  90D8               	bcf	status,0,c
 28548  006F78  3395               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 28549  006F7A  3394               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 28550  006F7C  3393               	rrcf	___ftmul@f1& (0+255),f,b
 28551  006F7E  0100               	movlb	0	; () banked
 28552  006F80  90D8               	bcf	status,0,c
 28553  006F82  339F               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 28554  006F84  339E               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 28555  006F86  339D               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 28556                           
 28557                           ; BSR set to: 0
 28558  006F88  0100               	movlb	0	; () banked
 28559  006F8A  2FA0               	decfsz	___ftmul@cntr& (0+255),f,b
 28560  006F8C  D7E3               	goto	l12713
 28561  006F8E  D000               	goto	l12721
 28562  006F90                     l12721:
 28563                           
 28564                           ; BSR set to: 0
 28565  006F90  C09D  F079         	movff	___ftmul@f3_as_product,___ftpack@arg
 28566  006F94  C09E  F07A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 28567  006F98  C09F  F07B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 28568  006F9C  C09C  F07C         	movff	___ftmul@exp,___ftpack@exp
 28569  006FA0  C0A1  F07D         	movff	___ftmul@sign,___ftpack@sign
 28570  006FA4  ECFC  F03A         	call	___ftpack	;wreg free
 28571  006FA8  C079  F093         	movff	?___ftpack,?___ftmul
 28572  006FAC  C07A  F094         	movff	?___ftpack+1,?___ftmul+1
 28573  006FB0  C07B  F095         	movff	?___ftpack+2,?___ftmul+2
 28574  006FB4  0012               	return	
 28575  006FB6  0012               	return		;funcret
 28576  006FB8                     __end_of___ftmul:
 28577                           	opt stack 0
 28578                           tblptru	equ	0xFF8
 28579                           tblptrh	equ	0xFF7
 28580                           tblptrl	equ	0xFF6
 28581                           tablat	equ	0xFF5
 28582                           prodh	equ	0xFF4
 28583                           prodl	equ	0xFF3
 28584                           intcon	equ	0xFF2
 28585                           intcon2	equ	0xFF1
 28586                           indf0	equ	0xFEF
 28587                           postinc0	equ	0xFEE
 28588                           fsr0h	equ	0xFEA
 28589                           fsr0l	equ	0xFE9
 28590                           wreg	equ	0xFE8
 28591                           indf1	equ	0xFE7
 28592                           postdec1	equ	0xFE5
 28593                           fsr1h	equ	0xFE2
 28594                           fsr1l	equ	0xFE1
 28595                           indf2	equ	0xFDF
 28596                           postinc2	equ	0xFDE
 28597                           postdec2	equ	0xFDD
 28598                           fsr2h	equ	0xFDA
 28599                           fsr2l	equ	0xFD9
 28600                           status	equ	0xFD8
 28601                           
 28602 ;; *************** function ___awmod *****************
 28603 ;; Defined at:
 28604 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 28605 ;; Parameters:    Size  Location     Type
 28606 ;;  dividend        2   25[BANK0 ] int 
 28607 ;;  divisor         2   27[BANK0 ] int 
 28608 ;; Auto vars:     Size  Location     Type
 28609 ;;  sign            1   30[BANK0 ] unsigned char 
 28610 ;;  counter         1   29[BANK0 ] unsigned char 
 28611 ;; Return value:  Size  Location     Type
 28612 ;;                  2   25[BANK0 ] int 
 28613 ;; Registers used:
 28614 ;;		wreg, status,2, status,0
 28615 ;; Tracked objects:
 28616 ;;		On entry : 0/0
 28617 ;;		On exit  : 0/0
 28618 ;;		Unchanged: 0/0
 28619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28620 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28621 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28623 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28624 ;;Total ram usage:        6 bytes
 28625 ;; Hardware stack levels used:    1
 28626 ;; Hardware stack levels required when called:    6
 28627 ;; This function calls:
 28628 ;;		Nothing
 28629 ;; This function is called by:
 28630 ;;		_fround
 28631 ;;		_scale
 28632 ;; This function uses a non-reentrant model
 28633 ;;
 28634                           
 28635                           	psect	text65
 28636  0081AE                     __ptext65:
 28637                           	opt stack 0
 28638  0081AE                     ___awmod:
 28639                           	opt stack 21
 28640                           
 28641                           ;incstack = 0
 28642  0081AE  0E00               	movlw	0
 28643  0081B0  0100               	movlb	0	; () banked
 28644  0081B2  6F7E               	movwf	___awmod@sign& (0+255),b
 28645                           
 28646                           ; BSR set to: 0
 28647  0081B4  0100               	movlb	0	; () banked
 28648  0081B6  AF7A               	btfss	(___awmod@dividend+1)& (0+255),7,b
 28649  0081B8  D009               	goto	l12777
 28650                           
 28651                           ; BSR set to: 0
 28652  0081BA  0100               	movlb	0	; () banked
 28653  0081BC  6D79               	negf	___awmod@dividend& (0+255),b
 28654  0081BE  1F7A               	comf	(___awmod@dividend+1)& (0+255),f,b
 28655  0081C0  B0D8               	btfsc	status,0,c
 28656  0081C2  2B7A               	incf	(___awmod@dividend+1)& (0+255),f,b
 28657                           
 28658                           ; BSR set to: 0
 28659  0081C4  0E01               	movlw	1
 28660  0081C6  0100               	movlb	0	; () banked
 28661  0081C8  6F7E               	movwf	___awmod@sign& (0+255),b
 28662  0081CA  D000               	goto	l12777
 28663  0081CC                     l12777:
 28664                           
 28665                           ; BSR set to: 0
 28666  0081CC  0100               	movlb	0	; () banked
 28667  0081CE  AF7C               	btfss	(___awmod@divisor+1)& (0+255),7,b
 28668  0081D0  D006               	goto	l12781
 28669                           
 28670                           ; BSR set to: 0
 28671  0081D2  0100               	movlb	0	; () banked
 28672  0081D4  6D7B               	negf	___awmod@divisor& (0+255),b
 28673  0081D6  1F7C               	comf	(___awmod@divisor+1)& (0+255),f,b
 28674  0081D8  B0D8               	btfsc	status,0,c
 28675  0081DA  2B7C               	incf	(___awmod@divisor+1)& (0+255),f,b
 28676  0081DC  D000               	goto	l12781
 28677  0081DE                     l12781:
 28678                           
 28679                           ; BSR set to: 0
 28680  0081DE  0100               	movlb	0	; () banked
 28681  0081E0  517B               	movf	___awmod@divisor& (0+255),w,b
 28682  0081E2  0100               	movlb	0	; () banked
 28683  0081E4  117C               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 28684  0081E6  B4D8               	btfsc	status,2,c
 28685  0081E8  D02B               	goto	l12797
 28686                           
 28687                           ; BSR set to: 0
 28688  0081EA  0E01               	movlw	1
 28689  0081EC  0100               	movlb	0	; () banked
 28690  0081EE  6F7D               	movwf	___awmod@counter& (0+255),b
 28691  0081F0  D007               	goto	l12787
 28692  0081F2                     l12785:
 28693                           
 28694                           ; BSR set to: 0
 28695  0081F2  0100               	movlb	0	; () banked
 28696  0081F4  90D8               	bcf	status,0,c
 28697  0081F6  377B               	rlcf	___awmod@divisor& (0+255),f,b
 28698  0081F8  377C               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 28699  0081FA  0100               	movlb	0	; () banked
 28700  0081FC  2B7D               	incf	___awmod@counter& (0+255),f,b
 28701  0081FE  D000               	goto	l12787
 28702  008200                     l12787:
 28703                           
 28704                           ; BSR set to: 0
 28705  008200  0100               	movlb	0	; () banked
 28706  008202  BF7C               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 28707  008204  D002               	goto	l12789
 28708  008206  D7F5               	goto	l12785
 28709                           
 28710                           ; BSR set to: 0
 28711  008208  D000               	goto	l12789
 28712  00820A                     l12789:
 28713                           
 28714                           ; BSR set to: 0
 28715  00820A  0100               	movlb	0	; () banked
 28716  00820C  517B               	movf	___awmod@divisor& (0+255),w,b
 28717  00820E  0100               	movlb	0	; () banked
 28718  008210  5D79               	subwf	___awmod@dividend& (0+255),w,b
 28719  008212  0100               	movlb	0	; () banked
 28720  008214  517C               	movf	(___awmod@divisor+1)& (0+255),w,b
 28721  008216  0100               	movlb	0	; () banked
 28722  008218  597A               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 28723  00821A  A0D8               	btfss	status,0,c
 28724  00821C  D009               	goto	l12793
 28725                           
 28726                           ; BSR set to: 0
 28727  00821E  0100               	movlb	0	; () banked
 28728  008220  517B               	movf	___awmod@divisor& (0+255),w,b
 28729  008222  0100               	movlb	0	; () banked
 28730  008224  5F79               	subwf	___awmod@dividend& (0+255),f,b
 28731  008226  0100               	movlb	0	; () banked
 28732  008228  517C               	movf	(___awmod@divisor+1)& (0+255),w,b
 28733  00822A  0100               	movlb	0	; () banked
 28734  00822C  5B7A               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 28735  00822E  D000               	goto	l12793
 28736  008230                     l12793:
 28737                           
 28738                           ; BSR set to: 0
 28739  008230  0100               	movlb	0	; () banked
 28740  008232  90D8               	bcf	status,0,c
 28741  008234  337C               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 28742  008236  337B               	rrcf	___awmod@divisor& (0+255),f,b
 28743                           
 28744                           ; BSR set to: 0
 28745  008238  0100               	movlb	0	; () banked
 28746  00823A  2F7D               	decfsz	___awmod@counter& (0+255),f,b
 28747  00823C  D7E6               	goto	l12789
 28748                           
 28749                           ; BSR set to: 0
 28750  00823E  D000               	goto	l12797
 28751  008240                     l12797:
 28752                           
 28753                           ; BSR set to: 0
 28754  008240  0100               	movlb	0	; () banked
 28755  008242  517E               	movf	___awmod@sign& (0+255),w,b
 28756  008244  0100               	movlb	0	; () banked
 28757  008246  B4D8               	btfsc	status,2,c
 28758  008248  D006               	goto	l12801
 28759                           
 28760                           ; BSR set to: 0
 28761  00824A  0100               	movlb	0	; () banked
 28762  00824C  6D79               	negf	___awmod@dividend& (0+255),b
 28763  00824E  1F7A               	comf	(___awmod@dividend+1)& (0+255),f,b
 28764  008250  B0D8               	btfsc	status,0,c
 28765  008252  2B7A               	incf	(___awmod@dividend+1)& (0+255),f,b
 28766  008254  D000               	goto	l12801
 28767  008256                     l12801:
 28768                           
 28769                           ; BSR set to: 0
 28770  008256  C079  F079         	movff	___awmod@dividend,?___awmod
 28771  00825A  C07A  F07A         	movff	___awmod@dividend+1,?___awmod+1
 28772  00825E  0012               	return	
 28773                           
 28774                           ; BSR set to: 0
 28775                           
 28776                           ; BSR set to: 0
 28777  008260  0012               	return		;funcret
 28778  008262                     __end_of___awmod:
 28779                           	opt stack 0
 28780                           tblptru	equ	0xFF8
 28781                           tblptrh	equ	0xFF7
 28782                           tblptrl	equ	0xFF6
 28783                           tablat	equ	0xFF5
 28784                           prodh	equ	0xFF4
 28785                           prodl	equ	0xFF3
 28786                           intcon	equ	0xFF2
 28787                           intcon2	equ	0xFF1
 28788                           indf0	equ	0xFEF
 28789                           postinc0	equ	0xFEE
 28790                           fsr0h	equ	0xFEA
 28791                           fsr0l	equ	0xFE9
 28792                           wreg	equ	0xFE8
 28793                           indf1	equ	0xFE7
 28794                           postdec1	equ	0xFE5
 28795                           fsr1h	equ	0xFE2
 28796                           fsr1l	equ	0xFE1
 28797                           indf2	equ	0xFDF
 28798                           postinc2	equ	0xFDE
 28799                           postdec2	equ	0xFDD
 28800                           fsr2h	equ	0xFDA
 28801                           fsr2l	equ	0xFD9
 28802                           status	equ	0xFD8
 28803                           
 28804 ;; *************** function ___awdiv *****************
 28805 ;; Defined at:
 28806 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 28807 ;; Parameters:    Size  Location     Type
 28808 ;;  dividend        2   31[BANK0 ] int 
 28809 ;;  divisor         2   33[BANK0 ] int 
 28810 ;; Auto vars:     Size  Location     Type
 28811 ;;  quotient        2   37[BANK0 ] int 
 28812 ;;  sign            1   36[BANK0 ] unsigned char 
 28813 ;;  counter         1   35[BANK0 ] unsigned char 
 28814 ;; Return value:  Size  Location     Type
 28815 ;;                  2   31[BANK0 ] int 
 28816 ;; Registers used:
 28817 ;;		wreg, status,2, status,0
 28818 ;; Tracked objects:
 28819 ;;		On entry : 0/0
 28820 ;;		On exit  : 0/0
 28821 ;;		Unchanged: 0/0
 28822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28823 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28824 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28826 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28827 ;;Total ram usage:        8 bytes
 28828 ;; Hardware stack levels used:    1
 28829 ;; Hardware stack levels required when called:    6
 28830 ;; This function calls:
 28831 ;;		Nothing
 28832 ;; This function is called by:
 28833 ;;		_fround
 28834 ;;		_scale
 28835 ;;		_sprintf
 28836 ;; This function uses a non-reentrant model
 28837 ;;
 28838                           
 28839                           	psect	text66
 28840  007C54                     __ptext66:
 28841                           	opt stack 0
 28842  007C54                     ___awdiv:
 28843                           	opt stack 21
 28844                           
 28845                           ; BSR set to: 0
 28846                           ;incstack = 0
 28847  007C54  0E00               	movlw	0
 28848  007C56  0100               	movlb	0	; () banked
 28849  007C58  6F84               	movwf	___awdiv@sign& (0+255),b
 28850                           
 28851                           ; BSR set to: 0
 28852  007C5A  0100               	movlb	0	; () banked
 28853  007C5C  AF82               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 28854  007C5E  D009               	goto	l12733
 28855                           
 28856                           ; BSR set to: 0
 28857  007C60  0100               	movlb	0	; () banked
 28858  007C62  6D81               	negf	___awdiv@divisor& (0+255),b
 28859  007C64  1F82               	comf	(___awdiv@divisor+1)& (0+255),f,b
 28860  007C66  B0D8               	btfsc	status,0,c
 28861  007C68  2B82               	incf	(___awdiv@divisor+1)& (0+255),f,b
 28862                           
 28863                           ; BSR set to: 0
 28864  007C6A  0E01               	movlw	1
 28865  007C6C  0100               	movlb	0	; () banked
 28866  007C6E  6F84               	movwf	___awdiv@sign& (0+255),b
 28867  007C70  D000               	goto	l12733
 28868  007C72                     l12733:
 28869                           
 28870                           ; BSR set to: 0
 28871  007C72  0100               	movlb	0	; () banked
 28872  007C74  AF80               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 28873  007C76  D009               	goto	l12739
 28874                           
 28875                           ; BSR set to: 0
 28876  007C78  0100               	movlb	0	; () banked
 28877  007C7A  6D7F               	negf	___awdiv@dividend& (0+255),b
 28878  007C7C  1F80               	comf	(___awdiv@dividend+1)& (0+255),f,b
 28879  007C7E  B0D8               	btfsc	status,0,c
 28880  007C80  2B80               	incf	(___awdiv@dividend+1)& (0+255),f,b
 28881                           
 28882                           ; BSR set to: 0
 28883  007C82  0E01               	movlw	1
 28884  007C84  0100               	movlb	0	; () banked
 28885  007C86  1B84               	xorwf	___awdiv@sign& (0+255),f,b
 28886  007C88  D000               	goto	l12739
 28887  007C8A                     l12739:
 28888                           
 28889                           ; BSR set to: 0
 28890  007C8A  0E00               	movlw	0
 28891  007C8C  0100               	movlb	0	; () banked
 28892  007C8E  6F86               	movwf	(___awdiv@quotient+1)& (0+255),b
 28893  007C90  0E00               	movlw	0
 28894  007C92  6F85               	movwf	___awdiv@quotient& (0+255),b
 28895                           
 28896                           ; BSR set to: 0
 28897  007C94  0100               	movlb	0	; () banked
 28898  007C96  5181               	movf	___awdiv@divisor& (0+255),w,b
 28899  007C98  0100               	movlb	0	; () banked
 28900  007C9A  1182               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 28901  007C9C  B4D8               	btfsc	status,2,c
 28902  007C9E  D031               	goto	l12761
 28903                           
 28904                           ; BSR set to: 0
 28905  007CA0  0E01               	movlw	1
 28906  007CA2  0100               	movlb	0	; () banked
 28907  007CA4  6F83               	movwf	___awdiv@counter& (0+255),b
 28908  007CA6  D007               	goto	l12747
 28909  007CA8                     l12745:
 28910                           
 28911                           ; BSR set to: 0
 28912  007CA8  0100               	movlb	0	; () banked
 28913  007CAA  90D8               	bcf	status,0,c
 28914  007CAC  3781               	rlcf	___awdiv@divisor& (0+255),f,b
 28915  007CAE  3782               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 28916  007CB0  0100               	movlb	0	; () banked
 28917  007CB2  2B83               	incf	___awdiv@counter& (0+255),f,b
 28918  007CB4  D000               	goto	l12747
 28919  007CB6                     l12747:
 28920                           
 28921                           ; BSR set to: 0
 28922  007CB6  0100               	movlb	0	; () banked
 28923  007CB8  BF82               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 28924  007CBA  D002               	goto	l12749
 28925  007CBC  D7F5               	goto	l12745
 28926                           
 28927                           ; BSR set to: 0
 28928  007CBE  D000               	goto	l12749
 28929  007CC0                     l12749:
 28930                           
 28931                           ; BSR set to: 0
 28932  007CC0  0100               	movlb	0	; () banked
 28933  007CC2  90D8               	bcf	status,0,c
 28934  007CC4  3785               	rlcf	___awdiv@quotient& (0+255),f,b
 28935  007CC6  3786               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 28936                           
 28937                           ; BSR set to: 0
 28938  007CC8  0100               	movlb	0	; () banked
 28939  007CCA  5181               	movf	___awdiv@divisor& (0+255),w,b
 28940  007CCC  0100               	movlb	0	; () banked
 28941  007CCE  5D7F               	subwf	___awdiv@dividend& (0+255),w,b
 28942  007CD0  0100               	movlb	0	; () banked
 28943  007CD2  5182               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28944  007CD4  0100               	movlb	0	; () banked
 28945  007CD6  5980               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 28946  007CD8  A0D8               	btfss	status,0,c
 28947  007CDA  D00B               	goto	l12757
 28948                           
 28949                           ; BSR set to: 0
 28950  007CDC  0100               	movlb	0	; () banked
 28951  007CDE  5181               	movf	___awdiv@divisor& (0+255),w,b
 28952  007CE0  0100               	movlb	0	; () banked
 28953  007CE2  5F7F               	subwf	___awdiv@dividend& (0+255),f,b
 28954  007CE4  0100               	movlb	0	; () banked
 28955  007CE6  5182               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28956  007CE8  0100               	movlb	0	; () banked
 28957  007CEA  5B80               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 28958                           
 28959                           ; BSR set to: 0
 28960  007CEC  0100               	movlb	0	; () banked
 28961  007CEE  8185               	bsf	___awdiv@quotient& (0+255),0,b
 28962  007CF0  D000               	goto	l12757
 28963  007CF2                     l12757:
 28964                           
 28965                           ; BSR set to: 0
 28966  007CF2  0100               	movlb	0	; () banked
 28967  007CF4  90D8               	bcf	status,0,c
 28968  007CF6  3382               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 28969  007CF8  3381               	rrcf	___awdiv@divisor& (0+255),f,b
 28970                           
 28971                           ; BSR set to: 0
 28972  007CFA  0100               	movlb	0	; () banked
 28973  007CFC  2F83               	decfsz	___awdiv@counter& (0+255),f,b
 28974  007CFE  D7E0               	goto	l12749
 28975                           
 28976                           ; BSR set to: 0
 28977  007D00  D000               	goto	l12761
 28978  007D02                     l12761:
 28979                           
 28980                           ; BSR set to: 0
 28981  007D02  0100               	movlb	0	; () banked
 28982  007D04  5184               	movf	___awdiv@sign& (0+255),w,b
 28983  007D06  0100               	movlb	0	; () banked
 28984  007D08  B4D8               	btfsc	status,2,c
 28985  007D0A  D006               	goto	l12765
 28986                           
 28987                           ; BSR set to: 0
 28988  007D0C  0100               	movlb	0	; () banked
 28989  007D0E  6D85               	negf	___awdiv@quotient& (0+255),b
 28990  007D10  1F86               	comf	(___awdiv@quotient+1)& (0+255),f,b
 28991  007D12  B0D8               	btfsc	status,0,c
 28992  007D14  2B86               	incf	(___awdiv@quotient+1)& (0+255),f,b
 28993  007D16  D000               	goto	l12765
 28994  007D18                     l12765:
 28995                           
 28996                           ; BSR set to: 0
 28997  007D18  C085  F07F         	movff	___awdiv@quotient,?___awdiv
 28998  007D1C  C086  F080         	movff	___awdiv@quotient+1,?___awdiv+1
 28999  007D20  0012               	return	
 29000                           
 29001                           ; BSR set to: 0
 29002                           
 29003                           ; BSR set to: 0
 29004  007D22  0012               	return		;funcret
 29005  007D24                     __end_of___awdiv:
 29006                           	opt stack 0
 29007                           tblptru	equ	0xFF8
 29008                           tblptrh	equ	0xFF7
 29009                           tblptrl	equ	0xFF6
 29010                           tablat	equ	0xFF5
 29011                           prodh	equ	0xFF4
 29012                           prodl	equ	0xFF3
 29013                           intcon	equ	0xFF2
 29014                           intcon2	equ	0xFF1
 29015                           indf0	equ	0xFEF
 29016                           postinc0	equ	0xFEE
 29017                           fsr0h	equ	0xFEA
 29018                           fsr0l	equ	0xFE9
 29019                           wreg	equ	0xFE8
 29020                           indf1	equ	0xFE7
 29021                           postdec1	equ	0xFE5
 29022                           fsr1h	equ	0xFE2
 29023                           fsr1l	equ	0xFE1
 29024                           indf2	equ	0xFDF
 29025                           postinc2	equ	0xFDE
 29026                           postdec2	equ	0xFDD
 29027                           fsr2h	equ	0xFDA
 29028                           fsr2l	equ	0xFD9
 29029                           status	equ	0xFD8
 29030                           
 29031 ;; *************** function __tdiv_to_l_ *****************
 29032 ;; Defined at:
 29033 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
 29034 ;; Parameters:    Size  Location     Type
 29035 ;;  f1              3   25[BANK0 ] float 
 29036 ;;  f2              3   28[BANK0 ] float 
 29037 ;; Auto vars:     Size  Location     Type
 29038 ;;  quot            4   34[BANK0 ] unsigned long 
 29039 ;;  exp1            1   39[BANK0 ] unsigned char 
 29040 ;;  cntr            1   38[BANK0 ] unsigned char 
 29041 ;; Return value:  Size  Location     Type
 29042 ;;                  4   25[BANK0 ] unsigned long 
 29043 ;; Registers used:
 29044 ;;		wreg, status,2, status,0
 29045 ;; Tracked objects:
 29046 ;;		On entry : 0/0
 29047 ;;		On exit  : 0/0
 29048 ;;		Unchanged: 0/0
 29049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29050 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29051 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29052 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29053 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29054 ;;Total ram usage:       15 bytes
 29055 ;; Hardware stack levels used:    1
 29056 ;; Hardware stack levels required when called:    6
 29057 ;; This function calls:
 29058 ;;		Nothing
 29059 ;; This function is called by:
 29060 ;;		_sprintf
 29061 ;; This function uses a non-reentrant model
 29062 ;;
 29063                           
 29064                           	psect	text67
 29065  006814                     __ptext67:
 29066                           	opt stack 0
 29067  006814                     __tdiv_to_l_:
 29068                           	opt stack 22
 29069                           
 29070                           ; BSR set to: 0
 29071                           ;incstack = 0
 29072  006814  C07B  F07F         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 29073  006818  0100               	movlb	0	; () banked
 29074  00681A  6B80               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 29075  00681C  6B81               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 29076  00681E  0100               	movlb	0	; () banked
 29077  006820  357A               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 29078  006822  0100               	movlb	0	; () banked
 29079  006824  377F               	rlcf	??__tdiv_to_l_& (0+255),f,b
 29080  006826  E301               	bnc	u15481
 29081  006828  8180               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 29082  00682A                     u15481:
 29083  00682A  0100               	movlb	0	; () banked
 29084  00682C  517F               	movf	??__tdiv_to_l_& (0+255),w,b
 29085  00682E  0100               	movlb	0	; () banked
 29086  006830  6F87               	movwf	__tdiv_to_l_@exp1& (0+255),b
 29087  006832  0100               	movlb	0	; () banked
 29088  006834  5187               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29089  006836  A4D8               	btfss	status,2,c
 29090  006838  D00A               	goto	l13031
 29091                           
 29092                           ; BSR set to: 0
 29093  00683A  0E00               	movlw	0
 29094  00683C  0100               	movlb	0	; () banked
 29095  00683E  6F79               	movwf	?__tdiv_to_l_& (0+255),b
 29096  006840  0E00               	movlw	0
 29097  006842  6F7A               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29098  006844  0E00               	movlw	0
 29099  006846  6F7B               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29100  006848  0E00               	movlw	0
 29101  00684A  6F7C               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29102                           
 29103                           ; BSR set to: 0
 29104  00684C  0012               	return	
 29105  00684E                     l13031:
 29106                           
 29107                           ; BSR set to: 0
 29108  00684E  C07E  F07F         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 29109  006852  0100               	movlb	0	; () banked
 29110  006854  6B80               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 29111  006856  6B81               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 29112  006858  0100               	movlb	0	; () banked
 29113  00685A  357D               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29114  00685C  0100               	movlb	0	; () banked
 29115  00685E  377F               	rlcf	??__tdiv_to_l_& (0+255),f,b
 29116  006860  E301               	bnc	u15501
 29117  006862  8180               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 29118  006864                     u15501:
 29119  006864  0100               	movlb	0	; () banked
 29120  006866  517F               	movf	??__tdiv_to_l_& (0+255),w,b
 29121  006868  0100               	movlb	0	; () banked
 29122  00686A  6F86               	movwf	__tdiv_to_l_@cntr& (0+255),b
 29123  00686C  0100               	movlb	0	; () banked
 29124  00686E  5186               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 29125  006870  A4D8               	btfss	status,2,c
 29126  006872  D00A               	goto	l13037
 29127                           
 29128                           ; BSR set to: 0
 29129  006874  0E00               	movlw	0
 29130  006876  0100               	movlb	0	; () banked
 29131  006878  6F79               	movwf	?__tdiv_to_l_& (0+255),b
 29132  00687A  0E00               	movlw	0
 29133  00687C  6F7A               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29134  00687E  0E00               	movlw	0
 29135  006880  6F7B               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29136  006882  0E00               	movlw	0
 29137  006884  6F7C               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29138                           
 29139                           ; BSR set to: 0
 29140  006886  0012               	return	
 29141  006888                     l13037:
 29142                           
 29143                           ; BSR set to: 0
 29144  006888  0100               	movlb	0	; () banked
 29145  00688A  8F7A               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 29146                           
 29147                           ; BSR set to: 0
 29148  00688C  0EFF               	movlw	255
 29149  00688E  0100               	movlb	0	; () banked
 29150  006890  1779               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 29151  006892  0EFF               	movlw	255
 29152  006894  0100               	movlb	0	; () banked
 29153  006896  177A               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29154  006898  0E00               	movlw	0
 29155  00689A  0100               	movlb	0	; () banked
 29156  00689C  177B               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29157  00689E  0100               	movlb	0	; () banked
 29158  0068A0  8F7D               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 29159                           
 29160                           ; BSR set to: 0
 29161  0068A2  0EFF               	movlw	255
 29162  0068A4  0100               	movlb	0	; () banked
 29163  0068A6  177C               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 29164  0068A8  0EFF               	movlw	255
 29165  0068AA  0100               	movlb	0	; () banked
 29166  0068AC  177D               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 29167  0068AE  0E00               	movlw	0
 29168  0068B0  0100               	movlb	0	; () banked
 29169  0068B2  177E               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 29170                           
 29171                           ; BSR set to: 0
 29172  0068B4  0E00               	movlw	0
 29173  0068B6  0100               	movlb	0	; () banked
 29174  0068B8  6F82               	movwf	__tdiv_to_l_@quot& (0+255),b
 29175  0068BA  0E00               	movlw	0
 29176  0068BC  6F83               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 29177  0068BE  0E00               	movlw	0
 29178  0068C0  6F84               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 29179  0068C2  0E00               	movlw	0
 29180  0068C4  6F85               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 29181                           
 29182                           ; BSR set to: 0
 29183  0068C6  0E7F               	movlw	127
 29184  0068C8  0100               	movlb	0	; () banked
 29185  0068CA  5F87               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 29186                           
 29187                           ; BSR set to: 0
 29188  0068CC  0100               	movlb	0	; () banked
 29189  0068CE  5186               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 29190  0068D0  0F98               	addlw	152
 29191  0068D2  0100               	movlb	0	; () banked
 29192  0068D4  5F87               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 29193                           
 29194                           ; BSR set to: 0
 29195  0068D6  0E18               	movlw	24
 29196  0068D8  0100               	movlb	0	; () banked
 29197  0068DA  6F86               	movwf	__tdiv_to_l_@cntr& (0+255),b
 29198  0068DC                     l2732:
 29199                           
 29200                           ; BSR set to: 0
 29201  0068DC  0100               	movlb	0	; () banked
 29202  0068DE  90D8               	bcf	status,0,c
 29203  0068E0  3782               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 29204  0068E2  3783               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29205  0068E4  3784               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29206  0068E6  3785               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29207                           
 29208                           ; BSR set to: 0
 29209  0068E8  0100               	movlb	0	; () banked
 29210  0068EA  517C               	movf	__tdiv_to_l_@f2& (0+255),w,b
 29211  0068EC  0100               	movlb	0	; () banked
 29212  0068EE  5D79               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 29213  0068F0  0100               	movlb	0	; () banked
 29214  0068F2  517D               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29215  0068F4  0100               	movlb	0	; () banked
 29216  0068F6  597A               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 29217  0068F8  0100               	movlb	0	; () banked
 29218  0068FA  517E               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 29219  0068FC  0100               	movlb	0	; () banked
 29220  0068FE  597B               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 29221  006900  A0D8               	btfss	status,0,c
 29222  006902  D00E               	goto	l2733
 29223                           
 29224                           ; BSR set to: 0
 29225  006904  0100               	movlb	0	; () banked
 29226  006906  517C               	movf	__tdiv_to_l_@f2& (0+255),w,b
 29227  006908  0100               	movlb	0	; () banked
 29228  00690A  5F79               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 29229  00690C  0100               	movlb	0	; () banked
 29230  00690E  517D               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29231  006910  0100               	movlb	0	; () banked
 29232  006912  5B7A               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29233  006914  0100               	movlb	0	; () banked
 29234  006916  517E               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 29235  006918  0100               	movlb	0	; () banked
 29236  00691A  5B7B               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29237                           
 29238                           ; BSR set to: 0
 29239  00691C  0100               	movlb	0	; () banked
 29240  00691E  8182               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 29241  006920                     l2733:
 29242                           
 29243                           ; BSR set to: 0
 29244  006920  0100               	movlb	0	; () banked
 29245  006922  90D8               	bcf	status,0,c
 29246  006924  3779               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 29247  006926  377A               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29248  006928  377B               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29249                           
 29250                           ; BSR set to: 0
 29251  00692A  0100               	movlb	0	; () banked
 29252  00692C  2F86               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 29253  00692E  D7D6               	goto	l2732
 29254  006930  D000               	goto	l13059
 29255  006932                     l13059:
 29256                           
 29257                           ; BSR set to: 0
 29258  006932  0100               	movlb	0	; () banked
 29259  006934  AF87               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 29260  006936  D01B               	goto	l13071
 29261                           
 29262                           ; BSR set to: 0
 29263  006938  0100               	movlb	0	; () banked
 29264  00693A  5187               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29265  00693C  0A80               	xorlw	128
 29266  00693E  0F97               	addlw	151
 29267  006940  B0D8               	btfsc	status,0,c
 29268  006942  D00B               	goto	l13067
 29269                           
 29270                           ; BSR set to: 0
 29271  006944  0E00               	movlw	0
 29272  006946  0100               	movlb	0	; () banked
 29273  006948  6F79               	movwf	?__tdiv_to_l_& (0+255),b
 29274  00694A  0E00               	movlw	0
 29275  00694C  6F7A               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29276  00694E  0E00               	movlw	0
 29277  006950  6F7B               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29278  006952  0E00               	movlw	0
 29279  006954  6F7C               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29280                           
 29281                           ; BSR set to: 0
 29282  006956  0012               	return	
 29283                           
 29284                           ; BSR set to: 0
 29285  006958  D000               	goto	l13067
 29286  00695A                     l13067:
 29287                           
 29288                           ; BSR set to: 0
 29289  00695A  0100               	movlb	0	; () banked
 29290  00695C  90D8               	bcf	status,0,c
 29291  00695E  3385               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29292  006960  3384               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29293  006962  3383               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29294  006964  3382               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 29295                           
 29296                           ; BSR set to: 0
 29297  006966  0100               	movlb	0	; () banked
 29298  006968  3F87               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 29299  00696A  D7F7               	goto	l13067
 29300                           
 29301                           ; BSR set to: 0
 29302  00696C  D01D               	goto	l2739
 29303  00696E                     l13071:
 29304                           
 29305                           ; BSR set to: 0
 29306  00696E  0E17               	movlw	23
 29307  006970  0100               	movlb	0	; () banked
 29308  006972  6587               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 29309  006974  D014               	goto	l13079
 29310                           
 29311                           ; BSR set to: 0
 29312  006976  0E00               	movlw	0
 29313  006978  0100               	movlb	0	; () banked
 29314  00697A  6F79               	movwf	?__tdiv_to_l_& (0+255),b
 29315  00697C  0E00               	movlw	0
 29316  00697E  6F7A               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29317  006980  0E00               	movlw	0
 29318  006982  6F7B               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29319  006984  0E00               	movlw	0
 29320  006986  6F7C               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29321                           
 29322                           ; BSR set to: 0
 29323  006988  0012               	return	
 29324                           
 29325                           ; BSR set to: 0
 29326  00698A  D009               	goto	l13079
 29327  00698C                     l13077:
 29328                           
 29329                           ; BSR set to: 0
 29330  00698C  0100               	movlb	0	; () banked
 29331  00698E  90D8               	bcf	status,0,c
 29332  006990  3782               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 29333  006992  3783               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29334  006994  3784               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29335  006996  3785               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29336  006998  0100               	movlb	0	; () banked
 29337  00699A  0787               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 29338  00699C  D000               	goto	l13079
 29339  00699E                     l13079:
 29340                           
 29341                           ; BSR set to: 0
 29342  00699E  0100               	movlb	0	; () banked
 29343  0069A0  5187               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29344  0069A2  0100               	movlb	0	; () banked
 29345  0069A4  A4D8               	btfss	status,2,c
 29346  0069A6  D7F2               	goto	l13077
 29347  0069A8                     l2739:
 29348                           
 29349                           ; BSR set to: 0
 29350  0069A8  C082  F079         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 29351  0069AC  C083  F07A         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 29352  0069B0  C084  F07B         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 29353  0069B4  C085  F07C         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 29354                           
 29355                           ; BSR set to: 0
 29356  0069B8  0012               	return		;funcret
 29357  0069BA                     __end_of__tdiv_to_l_:
 29358                           	opt stack 0
 29359                           tblptru	equ	0xFF8
 29360                           tblptrh	equ	0xFF7
 29361                           tblptrl	equ	0xFF6
 29362                           tablat	equ	0xFF5
 29363                           prodh	equ	0xFF4
 29364                           prodl	equ	0xFF3
 29365                           intcon	equ	0xFF2
 29366                           intcon2	equ	0xFF1
 29367                           indf0	equ	0xFEF
 29368                           postinc0	equ	0xFEE
 29369                           fsr0h	equ	0xFEA
 29370                           fsr0l	equ	0xFE9
 29371                           wreg	equ	0xFE8
 29372                           indf1	equ	0xFE7
 29373                           postdec1	equ	0xFE5
 29374                           fsr1h	equ	0xFE2
 29375                           fsr1l	equ	0xFE1
 29376                           indf2	equ	0xFDF
 29377                           postinc2	equ	0xFDE
 29378                           postdec2	equ	0xFDD
 29379                           fsr2h	equ	0xFDA
 29380                           fsr2l	equ	0xFD9
 29381                           status	equ	0xFD8
 29382                           
 29383 ;; *************** function __div_to_l_ *****************
 29384 ;; Defined at:
 29385 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
 29386 ;; Parameters:    Size  Location     Type
 29387 ;;  f1              3   25[BANK0 ] unsigned long 
 29388 ;;  f2              3   28[BANK0 ] unsigned long 
 29389 ;; Auto vars:     Size  Location     Type
 29390 ;;  quot            4   31[BANK0 ] unsigned long 
 29391 ;;  exp1            1   36[BANK0 ] unsigned char 
 29392 ;;  cntr            1   35[BANK0 ] unsigned char 
 29393 ;; Return value:  Size  Location     Type
 29394 ;;                  4   25[BANK0 ] unsigned long 
 29395 ;; Registers used:
 29396 ;;		wreg, status,2, status,0
 29397 ;; Tracked objects:
 29398 ;;		On entry : 0/0
 29399 ;;		On exit  : 0/0
 29400 ;;		Unchanged: 0/0
 29401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29402 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29403 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29405 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29406 ;;Total ram usage:       12 bytes
 29407 ;; Hardware stack levels used:    1
 29408 ;; Hardware stack levels required when called:    6
 29409 ;; This function calls:
 29410 ;;		Nothing
 29411 ;; This function is called by:
 29412 ;;		_sprintf
 29413 ;; This function uses a non-reentrant model
 29414 ;;
 29415                           
 29416                           	psect	text68
 29417  0069BA                     __ptext68:
 29418                           	opt stack 0
 29419  0069BA                     __div_to_l_:
 29420                           	opt stack 22
 29421                           
 29422                           ; BSR set to: 0
 29423                           ;incstack = 0
 29424  0069BA  0100               	movlb	0	; () banked
 29425  0069BC  357B               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 29426  0069BE  357C               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 29427  0069C0  0100               	movlb	0	; () banked
 29428  0069C2  6F84               	movwf	__div_to_l_@exp1& (0+255),b
 29429  0069C4  0100               	movlb	0	; () banked
 29430  0069C6  5184               	movf	__div_to_l_@exp1& (0+255),w,b
 29431  0069C8  A4D8               	btfss	status,2,c
 29432  0069CA  D00A               	goto	l13087
 29433                           
 29434                           ; BSR set to: 0
 29435  0069CC  0E00               	movlw	0
 29436  0069CE  0100               	movlb	0	; () banked
 29437  0069D0  6F79               	movwf	?__div_to_l_& (0+255),b
 29438  0069D2  0E00               	movlw	0
 29439  0069D4  6F7A               	movwf	(?__div_to_l_+1)& (0+255),b
 29440  0069D6  0E00               	movlw	0
 29441  0069D8  6F7B               	movwf	(?__div_to_l_+2)& (0+255),b
 29442  0069DA  0E00               	movlw	0
 29443  0069DC  6F7C               	movwf	(?__div_to_l_+3)& (0+255),b
 29444                           
 29445                           ; BSR set to: 0
 29446  0069DE  0012               	return	
 29447  0069E0                     l13087:
 29448                           
 29449                           ; BSR set to: 0
 29450  0069E0  0100               	movlb	0	; () banked
 29451  0069E2  357E               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 29452  0069E4  357F               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 29453  0069E6  0100               	movlb	0	; () banked
 29454  0069E8  6F83               	movwf	__div_to_l_@cntr& (0+255),b
 29455  0069EA  0100               	movlb	0	; () banked
 29456  0069EC  5183               	movf	__div_to_l_@cntr& (0+255),w,b
 29457  0069EE  A4D8               	btfss	status,2,c
 29458  0069F0  D00A               	goto	l13093
 29459                           
 29460                           ; BSR set to: 0
 29461  0069F2  0E00               	movlw	0
 29462  0069F4  0100               	movlb	0	; () banked
 29463  0069F6  6F79               	movwf	?__div_to_l_& (0+255),b
 29464  0069F8  0E00               	movlw	0
 29465  0069FA  6F7A               	movwf	(?__div_to_l_+1)& (0+255),b
 29466  0069FC  0E00               	movlw	0
 29467  0069FE  6F7B               	movwf	(?__div_to_l_+2)& (0+255),b
 29468  006A00  0E00               	movlw	0
 29469  006A02  6F7C               	movwf	(?__div_to_l_+3)& (0+255),b
 29470                           
 29471                           ; BSR set to: 0
 29472  006A04  0012               	return	
 29473  006A06                     l13093:
 29474                           
 29475                           ; BSR set to: 0
 29476  006A06  0100               	movlb	0	; () banked
 29477  006A08  8F7B               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 29478                           
 29479                           ; BSR set to: 0
 29480  006A0A  0EFF               	movlw	255
 29481  006A0C  0100               	movlb	0	; () banked
 29482  006A0E  1779               	andwf	__div_to_l_@f1& (0+255),f,b
 29483  006A10  0EFF               	movlw	255
 29484  006A12  177A               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 29485  006A14  0EFF               	movlw	255
 29486  006A16  177B               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 29487  006A18  0E00               	movlw	0
 29488  006A1A  177C               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 29489                           
 29490                           ; BSR set to: 0
 29491  006A1C  0100               	movlb	0	; () banked
 29492  006A1E  8F7E               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 29493  006A20  0EFF               	movlw	255
 29494  006A22  0100               	movlb	0	; () banked
 29495  006A24  177C               	andwf	__div_to_l_@f2& (0+255),f,b
 29496  006A26  0EFF               	movlw	255
 29497  006A28  177D               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 29498  006A2A  0EFF               	movlw	255
 29499  006A2C  177E               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 29500  006A2E  0E00               	movlw	0
 29501  006A30  177F               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 29502                           
 29503                           ; BSR set to: 0
 29504  006A32  0E00               	movlw	0
 29505  006A34  0100               	movlb	0	; () banked
 29506  006A36  6F7F               	movwf	__div_to_l_@quot& (0+255),b
 29507  006A38  0E00               	movlw	0
 29508  006A3A  6F80               	movwf	(__div_to_l_@quot+1)& (0+255),b
 29509  006A3C  0E00               	movlw	0
 29510  006A3E  6F81               	movwf	(__div_to_l_@quot+2)& (0+255),b
 29511  006A40  0E00               	movlw	0
 29512  006A42  6F82               	movwf	(__div_to_l_@quot+3)& (0+255),b
 29513                           
 29514                           ; BSR set to: 0
 29515  006A44  0E7F               	movlw	127
 29516  006A46  0100               	movlb	0	; () banked
 29517  006A48  5F84               	subwf	__div_to_l_@exp1& (0+255),f,b
 29518                           
 29519                           ; BSR set to: 0
 29520  006A4A  0100               	movlb	0	; () banked
 29521  006A4C  5183               	movf	__div_to_l_@cntr& (0+255),w,b
 29522  006A4E  0FA0               	addlw	160
 29523  006A50  0100               	movlb	0	; () banked
 29524  006A52  5F84               	subwf	__div_to_l_@exp1& (0+255),f,b
 29525                           
 29526                           ; BSR set to: 0
 29527  006A54  0E20               	movlw	32
 29528  006A56  0100               	movlb	0	; () banked
 29529  006A58  6F83               	movwf	__div_to_l_@cntr& (0+255),b
 29530  006A5A  D000               	goto	l13107
 29531  006A5C                     l13107:
 29532                           
 29533                           ; BSR set to: 0
 29534  006A5C  0100               	movlb	0	; () banked
 29535  006A5E  90D8               	bcf	status,0,c
 29536  006A60  377F               	rlcf	__div_to_l_@quot& (0+255),f,b
 29537  006A62  3780               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 29538  006A64  3781               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 29539  006A66  3782               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 29540                           
 29541                           ; BSR set to: 0
 29542  006A68  0100               	movlb	0	; () banked
 29543  006A6A  517C               	movf	__div_to_l_@f2& (0+255),w,b
 29544  006A6C  0100               	movlb	0	; () banked
 29545  006A6E  5D79               	subwf	__div_to_l_@f1& (0+255),w,b
 29546  006A70  0100               	movlb	0	; () banked
 29547  006A72  517D               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 29548  006A74  0100               	movlb	0	; () banked
 29549  006A76  597A               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 29550  006A78  0100               	movlb	0	; () banked
 29551  006A7A  517E               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 29552  006A7C  0100               	movlb	0	; () banked
 29553  006A7E  597B               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 29554  006A80  0100               	movlb	0	; () banked
 29555  006A82  517F               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 29556  006A84  0100               	movlb	0	; () banked
 29557  006A86  597C               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 29558  006A88  A0D8               	btfss	status,0,c
 29559  006A8A  D013               	goto	l13115
 29560                           
 29561                           ; BSR set to: 0
 29562  006A8C  0100               	movlb	0	; () banked
 29563  006A8E  517C               	movf	__div_to_l_@f2& (0+255),w,b
 29564  006A90  0100               	movlb	0	; () banked
 29565  006A92  5F79               	subwf	__div_to_l_@f1& (0+255),f,b
 29566  006A94  0100               	movlb	0	; () banked
 29567  006A96  517D               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 29568  006A98  0100               	movlb	0	; () banked
 29569  006A9A  5B7A               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 29570  006A9C  0100               	movlb	0	; () banked
 29571  006A9E  517E               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 29572  006AA0  0100               	movlb	0	; () banked
 29573  006AA2  5B7B               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 29574  006AA4  0100               	movlb	0	; () banked
 29575  006AA6  517F               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 29576  006AA8  0100               	movlb	0	; () banked
 29577  006AAA  5B7C               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 29578                           
 29579                           ; BSR set to: 0
 29580  006AAC  0100               	movlb	0	; () banked
 29581  006AAE  817F               	bsf	__div_to_l_@quot& (0+255),0,b
 29582  006AB0  D000               	goto	l13115
 29583  006AB2                     l13115:
 29584                           
 29585                           ; BSR set to: 0
 29586  006AB2  0100               	movlb	0	; () banked
 29587  006AB4  90D8               	bcf	status,0,c
 29588  006AB6  3779               	rlcf	__div_to_l_@f1& (0+255),f,b
 29589  006AB8  377A               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 29590  006ABA  377B               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 29591  006ABC  377C               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 29592                           
 29593                           ; BSR set to: 0
 29594  006ABE  0100               	movlb	0	; () banked
 29595  006AC0  2F83               	decfsz	__div_to_l_@cntr& (0+255),f,b
 29596  006AC2  D7CC               	goto	l13107
 29597  006AC4  D000               	goto	l13119
 29598  006AC6                     l13119:
 29599                           
 29600                           ; BSR set to: 0
 29601  006AC6  0100               	movlb	0	; () banked
 29602  006AC8  AF84               	btfss	__div_to_l_@exp1& (0+255),7,b
 29603  006ACA  D01B               	goto	l13131
 29604                           
 29605                           ; BSR set to: 0
 29606  006ACC  0100               	movlb	0	; () banked
 29607  006ACE  5184               	movf	__div_to_l_@exp1& (0+255),w,b
 29608  006AD0  0A80               	xorlw	128
 29609  006AD2  0F9F               	addlw	159
 29610  006AD4  B0D8               	btfsc	status,0,c
 29611  006AD6  D00B               	goto	l13127
 29612                           
 29613                           ; BSR set to: 0
 29614  006AD8  0E00               	movlw	0
 29615  006ADA  0100               	movlb	0	; () banked
 29616  006ADC  6F79               	movwf	?__div_to_l_& (0+255),b
 29617  006ADE  0E00               	movlw	0
 29618  006AE0  6F7A               	movwf	(?__div_to_l_+1)& (0+255),b
 29619  006AE2  0E00               	movlw	0
 29620  006AE4  6F7B               	movwf	(?__div_to_l_+2)& (0+255),b
 29621  006AE6  0E00               	movlw	0
 29622  006AE8  6F7C               	movwf	(?__div_to_l_+3)& (0+255),b
 29623                           
 29624                           ; BSR set to: 0
 29625  006AEA  0012               	return	
 29626                           
 29627                           ; BSR set to: 0
 29628  006AEC  D000               	goto	l13127
 29629  006AEE                     l13127:
 29630                           
 29631                           ; BSR set to: 0
 29632  006AEE  0100               	movlb	0	; () banked
 29633  006AF0  90D8               	bcf	status,0,c
 29634  006AF2  3382               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 29635  006AF4  3381               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 29636  006AF6  3380               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 29637  006AF8  337F               	rrcf	__div_to_l_@quot& (0+255),f,b
 29638                           
 29639                           ; BSR set to: 0
 29640  006AFA  0100               	movlb	0	; () banked
 29641  006AFC  3F84               	incfsz	__div_to_l_@exp1& (0+255),f,b
 29642  006AFE  D7F7               	goto	l13127
 29643                           
 29644                           ; BSR set to: 0
 29645  006B00  D01D               	goto	l2618
 29646  006B02                     l13131:
 29647                           
 29648                           ; BSR set to: 0
 29649  006B02  0E1F               	movlw	31
 29650  006B04  0100               	movlb	0	; () banked
 29651  006B06  6584               	cpfsgt	__div_to_l_@exp1& (0+255),b
 29652  006B08  D014               	goto	l13139
 29653                           
 29654                           ; BSR set to: 0
 29655  006B0A  0E00               	movlw	0
 29656  006B0C  0100               	movlb	0	; () banked
 29657  006B0E  6F79               	movwf	?__div_to_l_& (0+255),b
 29658  006B10  0E00               	movlw	0
 29659  006B12  6F7A               	movwf	(?__div_to_l_+1)& (0+255),b
 29660  006B14  0E00               	movlw	0
 29661  006B16  6F7B               	movwf	(?__div_to_l_+2)& (0+255),b
 29662  006B18  0E00               	movlw	0
 29663  006B1A  6F7C               	movwf	(?__div_to_l_+3)& (0+255),b
 29664                           
 29665                           ; BSR set to: 0
 29666  006B1C  0012               	return	
 29667                           
 29668                           ; BSR set to: 0
 29669  006B1E  D009               	goto	l13139
 29670  006B20                     l13137:
 29671                           
 29672                           ; BSR set to: 0
 29673  006B20  0100               	movlb	0	; () banked
 29674  006B22  90D8               	bcf	status,0,c
 29675  006B24  377F               	rlcf	__div_to_l_@quot& (0+255),f,b
 29676  006B26  3780               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 29677  006B28  3781               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 29678  006B2A  3782               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 29679  006B2C  0100               	movlb	0	; () banked
 29680  006B2E  0784               	decf	__div_to_l_@exp1& (0+255),f,b
 29681  006B30  D000               	goto	l13139
 29682  006B32                     l13139:
 29683                           
 29684                           ; BSR set to: 0
 29685  006B32  0100               	movlb	0	; () banked
 29686  006B34  5184               	movf	__div_to_l_@exp1& (0+255),w,b
 29687  006B36  0100               	movlb	0	; () banked
 29688  006B38  A4D8               	btfss	status,2,c
 29689  006B3A  D7F2               	goto	l13137
 29690  006B3C                     l2618:
 29691                           
 29692                           ; BSR set to: 0
 29693  006B3C  C07F  F079         	movff	__div_to_l_@quot,?__div_to_l_
 29694  006B40  C080  F07A         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 29695  006B44  C081  F07B         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 29696  006B48  C082  F07C         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 29697                           
 29698                           ; BSR set to: 0
 29699  006B4C  0012               	return		;funcret
 29700  006B4E                     __end_of__div_to_l_:
 29701                           	opt stack 0
 29702                           tblptru	equ	0xFF8
 29703                           tblptrh	equ	0xFF7
 29704                           tblptrl	equ	0xFF6
 29705                           tablat	equ	0xFF5
 29706                           prodh	equ	0xFF4
 29707                           prodl	equ	0xFF3
 29708                           intcon	equ	0xFF2
 29709                           intcon2	equ	0xFF1
 29710                           indf0	equ	0xFEF
 29711                           postinc0	equ	0xFEE
 29712                           fsr0h	equ	0xFEA
 29713                           fsr0l	equ	0xFE9
 29714                           wreg	equ	0xFE8
 29715                           indf1	equ	0xFE7
 29716                           postdec1	equ	0xFE5
 29717                           fsr1h	equ	0xFE2
 29718                           fsr1l	equ	0xFE1
 29719                           indf2	equ	0xFDF
 29720                           postinc2	equ	0xFDE
 29721                           postdec2	equ	0xFDD
 29722                           fsr2h	equ	0xFDA
 29723                           fsr2l	equ	0xFD9
 29724                           status	equ	0xFD8
 29725                           
 29726 ;; *************** function ___lltoft *****************
 29727 ;; Defined at:
 29728 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
 29729 ;; Parameters:    Size  Location     Type
 29730 ;;  c               4   33[BANK0 ] unsigned long 
 29731 ;; Auto vars:     Size  Location     Type
 29732 ;;  exp             1   41[BANK0 ] unsigned char 
 29733 ;; Return value:  Size  Location     Type
 29734 ;;                  3   33[BANK0 ] float 
 29735 ;; Registers used:
 29736 ;;		wreg, status,2, status,0, cstack
 29737 ;; Tracked objects:
 29738 ;;		On entry : 0/0
 29739 ;;		On exit  : 0/0
 29740 ;;		Unchanged: 0/0
 29741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29742 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29743 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29744 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29745 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29746 ;;Total ram usage:        9 bytes
 29747 ;; Hardware stack levels used:    1
 29748 ;; Hardware stack levels required when called:    7
 29749 ;; This function calls:
 29750 ;;		___ftpack
 29751 ;; This function is called by:
 29752 ;;		_InitUART
 29753 ;;		_sprintf
 29754 ;; This function uses a non-reentrant model
 29755 ;;
 29756                           
 29757                           	psect	text69
 29758  008902                     __ptext69:
 29759                           	opt stack 0
 29760  008902                     ___lltoft:
 29761                           	opt stack 21
 29762                           
 29763                           ; BSR set to: 0
 29764                           ;incstack = 0
 29765  008902  0E8E               	movlw	142
 29766  008904  0100               	movlb	0	; () banked
 29767  008906  6F89               	movwf	___lltoft@exp& (0+255),b
 29768  008908  D009               	goto	l13259
 29769  00890A                     l13257:
 29770                           
 29771                           ; BSR set to: 0
 29772  00890A  0100               	movlb	0	; () banked
 29773  00890C  90D8               	bcf	status,0,c
 29774  00890E  3384               	rrcf	(___lltoft@c+3)& (0+255),f,b
 29775  008910  3383               	rrcf	(___lltoft@c+2)& (0+255),f,b
 29776  008912  3382               	rrcf	(___lltoft@c+1)& (0+255),f,b
 29777  008914  3381               	rrcf	___lltoft@c& (0+255),f,b
 29778  008916  0100               	movlb	0	; () banked
 29779  008918  2B89               	incf	___lltoft@exp& (0+255),f,b
 29780  00891A  D000               	goto	l13259
 29781  00891C                     l13259:
 29782                           
 29783                           ; BSR set to: 0
 29784  00891C  0E00               	movlw	0
 29785  00891E  0100               	movlb	0	; () banked
 29786  008920  1581               	andwf	___lltoft@c& (0+255),w,b
 29787  008922  0100               	movlb	0	; () banked
 29788  008924  6F85               	movwf	??___lltoft& (0+255),b
 29789  008926  0E00               	movlw	0
 29790  008928  0100               	movlb	0	; () banked
 29791  00892A  1582               	andwf	(___lltoft@c+1)& (0+255),w,b
 29792  00892C  0100               	movlb	0	; () banked
 29793  00892E  6F86               	movwf	(??___lltoft+1)& (0+255),b
 29794  008930  0E00               	movlw	0
 29795  008932  0100               	movlb	0	; () banked
 29796  008934  1583               	andwf	(___lltoft@c+2)& (0+255),w,b
 29797  008936  0100               	movlb	0	; () banked
 29798  008938  6F87               	movwf	(??___lltoft+2)& (0+255),b
 29799  00893A  0EFF               	movlw	255
 29800  00893C  0100               	movlb	0	; () banked
 29801  00893E  1584               	andwf	(___lltoft@c+3)& (0+255),w,b
 29802  008940  0100               	movlb	0	; () banked
 29803  008942  6F88               	movwf	(??___lltoft+3)& (0+255),b
 29804  008944  0100               	movlb	0	; () banked
 29805  008946  5185               	movf	??___lltoft& (0+255),w,b
 29806  008948  0100               	movlb	0	; () banked
 29807  00894A  1186               	iorwf	(??___lltoft+1)& (0+255),w,b
 29808  00894C  0100               	movlb	0	; () banked
 29809  00894E  1187               	iorwf	(??___lltoft+2)& (0+255),w,b
 29810  008950  0100               	movlb	0	; () banked
 29811  008952  1188               	iorwf	(??___lltoft+3)& (0+255),w,b
 29812  008954  A4D8               	btfss	status,2,c
 29813  008956  D7D9               	goto	l13257
 29814                           
 29815                           ; BSR set to: 0
 29816                           
 29817                           ; BSR set to: 0
 29818  008958  C081  F079         	movff	___lltoft@c,___ftpack@arg
 29819  00895C  C082  F07A         	movff	___lltoft@c+1,___ftpack@arg+1
 29820  008960  C083  F07B         	movff	___lltoft@c+2,___ftpack@arg+2
 29821  008964  C089  F07C         	movff	___lltoft@exp,___ftpack@exp
 29822  008968  0E00               	movlw	0
 29823  00896A  0100               	movlb	0	; () banked
 29824  00896C  6F7D               	movwf	___ftpack@sign& (0+255),b
 29825  00896E  ECFC  F03A         	call	___ftpack	;wreg free
 29826  008972  C079  F081         	movff	?___ftpack,?___lltoft
 29827  008976  C07A  F082         	movff	?___ftpack+1,?___lltoft+1
 29828  00897A  C07B  F083         	movff	?___ftpack+2,?___lltoft+2
 29829  00897E  0012               	return	
 29830  008980  0012               	return		;funcret
 29831  008982                     __end_of___lltoft:
 29832                           	opt stack 0
 29833                           tblptru	equ	0xFF8
 29834                           tblptrh	equ	0xFF7
 29835                           tblptrl	equ	0xFF6
 29836                           tablat	equ	0xFF5
 29837                           prodh	equ	0xFF4
 29838                           prodl	equ	0xFF3
 29839                           intcon	equ	0xFF2
 29840                           intcon2	equ	0xFF1
 29841                           indf0	equ	0xFEF
 29842                           postinc0	equ	0xFEE
 29843                           fsr0h	equ	0xFEA
 29844                           fsr0l	equ	0xFE9
 29845                           wreg	equ	0xFE8
 29846                           indf1	equ	0xFE7
 29847                           postdec1	equ	0xFE5
 29848                           fsr1h	equ	0xFE2
 29849                           fsr1l	equ	0xFE1
 29850                           indf2	equ	0xFDF
 29851                           postinc2	equ	0xFDE
 29852                           postdec2	equ	0xFDD
 29853                           fsr2h	equ	0xFDA
 29854                           fsr2l	equ	0xFD9
 29855                           status	equ	0xFD8
 29856                           
 29857 ;; *************** function ___llmod *****************
 29858 ;; Defined at:
 29859 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 29860 ;; Parameters:    Size  Location     Type
 29861 ;;  dividend        4   38[BANK0 ] unsigned long 
 29862 ;;  divisor         4   42[BANK0 ] unsigned long 
 29863 ;; Auto vars:     Size  Location     Type
 29864 ;;  counter         1   46[BANK0 ] unsigned char 
 29865 ;; Return value:  Size  Location     Type
 29866 ;;                  4   38[BANK0 ] unsigned long 
 29867 ;; Registers used:
 29868 ;;		wreg, status,2, status,0
 29869 ;; Tracked objects:
 29870 ;;		On entry : 0/0
 29871 ;;		On exit  : 0/0
 29872 ;;		Unchanged: 0/0
 29873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29874 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29877 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29878 ;;Total ram usage:        9 bytes
 29879 ;; Hardware stack levels used:    1
 29880 ;; Hardware stack levels required when called:    6
 29881 ;; This function calls:
 29882 ;;		Nothing
 29883 ;; This function is called by:
 29884 ;;		_sprintf
 29885 ;; This function uses a non-reentrant model
 29886 ;;
 29887                           
 29888                           	psect	text70
 29889  0083C2                     __ptext70:
 29890                           	opt stack 0
 29891  0083C2                     ___llmod:
 29892                           	opt stack 22
 29893                           
 29894                           ;incstack = 0
 29895  0083C2  0100               	movlb	0	; () banked
 29896  0083C4  518A               	movf	___llmod@divisor& (0+255),w,b
 29897  0083C6  0100               	movlb	0	; () banked
 29898  0083C8  118B               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 29899  0083CA  0100               	movlb	0	; () banked
 29900  0083CC  118C               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 29901  0083CE  0100               	movlb	0	; () banked
 29902  0083D0  118D               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 29903  0083D2  B4D8               	btfsc	status,2,c
 29904  0083D4  D03F               	goto	l2829
 29905                           
 29906                           ; BSR set to: 0
 29907  0083D6  0E01               	movlw	1
 29908  0083D8  0100               	movlb	0	; () banked
 29909  0083DA  6F8E               	movwf	___llmod@counter& (0+255),b
 29910  0083DC  D009               	goto	l13245
 29911  0083DE                     l13243:
 29912                           
 29913                           ; BSR set to: 0
 29914  0083DE  0100               	movlb	0	; () banked
 29915  0083E0  90D8               	bcf	status,0,c
 29916  0083E2  378A               	rlcf	___llmod@divisor& (0+255),f,b
 29917  0083E4  378B               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 29918  0083E6  378C               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 29919  0083E8  378D               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 29920  0083EA  0100               	movlb	0	; () banked
 29921  0083EC  2B8E               	incf	___llmod@counter& (0+255),f,b
 29922  0083EE  D000               	goto	l13245
 29923  0083F0                     l13245:
 29924                           
 29925                           ; BSR set to: 0
 29926  0083F0  0100               	movlb	0	; () banked
 29927  0083F2  BF8D               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 29928  0083F4  D002               	goto	l13247
 29929  0083F6  D7F3               	goto	l13243
 29930                           
 29931                           ; BSR set to: 0
 29932  0083F8  D000               	goto	l13247
 29933  0083FA                     l13247:
 29934                           
 29935                           ; BSR set to: 0
 29936  0083FA  0100               	movlb	0	; () banked
 29937  0083FC  518A               	movf	___llmod@divisor& (0+255),w,b
 29938  0083FE  0100               	movlb	0	; () banked
 29939  008400  5D86               	subwf	___llmod@dividend& (0+255),w,b
 29940  008402  0100               	movlb	0	; () banked
 29941  008404  518B               	movf	(___llmod@divisor+1)& (0+255),w,b
 29942  008406  0100               	movlb	0	; () banked
 29943  008408  5987               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 29944  00840A  0100               	movlb	0	; () banked
 29945  00840C  518C               	movf	(___llmod@divisor+2)& (0+255),w,b
 29946  00840E  0100               	movlb	0	; () banked
 29947  008410  5988               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 29948  008412  0100               	movlb	0	; () banked
 29949  008414  518D               	movf	(___llmod@divisor+3)& (0+255),w,b
 29950  008416  0100               	movlb	0	; () banked
 29951  008418  5989               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 29952  00841A  A0D8               	btfss	status,0,c
 29953  00841C  D011               	goto	l13251
 29954                           
 29955                           ; BSR set to: 0
 29956  00841E  0100               	movlb	0	; () banked
 29957  008420  518A               	movf	___llmod@divisor& (0+255),w,b
 29958  008422  0100               	movlb	0	; () banked
 29959  008424  5F86               	subwf	___llmod@dividend& (0+255),f,b
 29960  008426  0100               	movlb	0	; () banked
 29961  008428  518B               	movf	(___llmod@divisor+1)& (0+255),w,b
 29962  00842A  0100               	movlb	0	; () banked
 29963  00842C  5B87               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 29964  00842E  0100               	movlb	0	; () banked
 29965  008430  518C               	movf	(___llmod@divisor+2)& (0+255),w,b
 29966  008432  0100               	movlb	0	; () banked
 29967  008434  5B88               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 29968  008436  0100               	movlb	0	; () banked
 29969  008438  518D               	movf	(___llmod@divisor+3)& (0+255),w,b
 29970  00843A  0100               	movlb	0	; () banked
 29971  00843C  5B89               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 29972  00843E  D000               	goto	l13251
 29973  008440                     l13251:
 29974                           
 29975                           ; BSR set to: 0
 29976  008440  0100               	movlb	0	; () banked
 29977  008442  90D8               	bcf	status,0,c
 29978  008444  338D               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 29979  008446  338C               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 29980  008448  338B               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 29981  00844A  338A               	rrcf	___llmod@divisor& (0+255),f,b
 29982                           
 29983                           ; BSR set to: 0
 29984  00844C  0100               	movlb	0	; () banked
 29985  00844E  2F8E               	decfsz	___llmod@counter& (0+255),f,b
 29986  008450  D7D4               	goto	l13247
 29987  008452  D000               	goto	l2829
 29988  008454                     l2829:
 29989                           
 29990                           ; BSR set to: 0
 29991  008454  C086  F086         	movff	___llmod@dividend,?___llmod
 29992  008458  C087  F087         	movff	___llmod@dividend+1,?___llmod+1
 29993  00845C  C088  F088         	movff	___llmod@dividend+2,?___llmod+2
 29994  008460  C089  F089         	movff	___llmod@dividend+3,?___llmod+3
 29995                           
 29996                           ; BSR set to: 0
 29997  008464  0012               	return		;funcret
 29998  008466                     __end_of___llmod:
 29999                           	opt stack 0
 30000                           tblptru	equ	0xFF8
 30001                           tblptrh	equ	0xFF7
 30002                           tblptrl	equ	0xFF6
 30003                           tablat	equ	0xFF5
 30004                           prodh	equ	0xFF4
 30005                           prodl	equ	0xFF3
 30006                           intcon	equ	0xFF2
 30007                           intcon2	equ	0xFF1
 30008                           indf0	equ	0xFEF
 30009                           postinc0	equ	0xFEE
 30010                           fsr0h	equ	0xFEA
 30011                           fsr0l	equ	0xFE9
 30012                           wreg	equ	0xFE8
 30013                           indf1	equ	0xFE7
 30014                           postdec1	equ	0xFE5
 30015                           fsr1h	equ	0xFE2
 30016                           fsr1l	equ	0xFE1
 30017                           indf2	equ	0xFDF
 30018                           postinc2	equ	0xFDE
 30019                           postdec2	equ	0xFDD
 30020                           fsr2h	equ	0xFDA
 30021                           fsr2l	equ	0xFD9
 30022                           status	equ	0xFD8
 30023                           
 30024 ;; *************** function ___lldiv *****************
 30025 ;; Defined at:
 30026 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 30027 ;; Parameters:    Size  Location     Type
 30028 ;;  dividend        4   25[BANK0 ] unsigned long 
 30029 ;;  divisor         4   29[BANK0 ] unsigned long 
 30030 ;; Auto vars:     Size  Location     Type
 30031 ;;  quotient        4   33[BANK0 ] unsigned long 
 30032 ;;  counter         1   37[BANK0 ] unsigned char 
 30033 ;; Return value:  Size  Location     Type
 30034 ;;                  4   25[BANK0 ] unsigned long 
 30035 ;; Registers used:
 30036 ;;		wreg, status,2, status,0
 30037 ;; Tracked objects:
 30038 ;;		On entry : 0/0
 30039 ;;		On exit  : 0/0
 30040 ;;		Unchanged: 0/0
 30041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30042 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30043 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30045 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30046 ;;Total ram usage:       13 bytes
 30047 ;; Hardware stack levels used:    1
 30048 ;; Hardware stack levels required when called:    6
 30049 ;; This function calls:
 30050 ;;		Nothing
 30051 ;; This function is called by:
 30052 ;;		_InitUART
 30053 ;;		_sprintf
 30054 ;; This function uses a non-reentrant model
 30055 ;;
 30056                           
 30057                           	psect	text71
 30058  007EBA                     __ptext71:
 30059                           	opt stack 0
 30060  007EBA                     ___lldiv:
 30061                           	opt stack 22
 30062                           
 30063                           ; BSR set to: 0
 30064                           ;incstack = 0
 30065  007EBA  0E00               	movlw	0
 30066  007EBC  0100               	movlb	0	; () banked
 30067  007EBE  6F81               	movwf	___lldiv@quotient& (0+255),b
 30068  007EC0  0E00               	movlw	0
 30069  007EC2  6F82               	movwf	(___lldiv@quotient+1)& (0+255),b
 30070  007EC4  0E00               	movlw	0
 30071  007EC6  6F83               	movwf	(___lldiv@quotient+2)& (0+255),b
 30072  007EC8  0E00               	movlw	0
 30073  007ECA  6F84               	movwf	(___lldiv@quotient+3)& (0+255),b
 30074                           
 30075                           ; BSR set to: 0
 30076  007ECC  0100               	movlb	0	; () banked
 30077  007ECE  517D               	movf	___lldiv@divisor& (0+255),w,b
 30078  007ED0  0100               	movlb	0	; () banked
 30079  007ED2  117E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 30080  007ED4  0100               	movlb	0	; () banked
 30081  007ED6  117F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 30082  007ED8  0100               	movlb	0	; () banked
 30083  007EDA  1180               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 30084  007EDC  B4D8               	btfsc	status,2,c
 30085  007EDE  D047               	goto	l2819
 30086                           
 30087                           ; BSR set to: 0
 30088  007EE0  0E01               	movlw	1
 30089  007EE2  0100               	movlb	0	; () banked
 30090  007EE4  6F85               	movwf	___lldiv@counter& (0+255),b
 30091  007EE6  D009               	goto	l13225
 30092  007EE8                     l13223:
 30093                           
 30094                           ; BSR set to: 0
 30095  007EE8  0100               	movlb	0	; () banked
 30096  007EEA  90D8               	bcf	status,0,c
 30097  007EEC  377D               	rlcf	___lldiv@divisor& (0+255),f,b
 30098  007EEE  377E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 30099  007EF0  377F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 30100  007EF2  3780               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 30101  007EF4  0100               	movlb	0	; () banked
 30102  007EF6  2B85               	incf	___lldiv@counter& (0+255),f,b
 30103  007EF8  D000               	goto	l13225
 30104  007EFA                     l13225:
 30105                           
 30106                           ; BSR set to: 0
 30107  007EFA  0100               	movlb	0	; () banked
 30108  007EFC  BF80               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 30109  007EFE  D002               	goto	l13227
 30110  007F00  D7F3               	goto	l13223
 30111                           
 30112                           ; BSR set to: 0
 30113  007F02  D000               	goto	l13227
 30114  007F04                     l13227:
 30115                           
 30116                           ; BSR set to: 0
 30117  007F04  0100               	movlb	0	; () banked
 30118  007F06  90D8               	bcf	status,0,c
 30119  007F08  3781               	rlcf	___lldiv@quotient& (0+255),f,b
 30120  007F0A  3782               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 30121  007F0C  3783               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 30122  007F0E  3784               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 30123                           
 30124                           ; BSR set to: 0
 30125  007F10  0100               	movlb	0	; () banked
 30126  007F12  517D               	movf	___lldiv@divisor& (0+255),w,b
 30127  007F14  0100               	movlb	0	; () banked
 30128  007F16  5D79               	subwf	___lldiv@dividend& (0+255),w,b
 30129  007F18  0100               	movlb	0	; () banked
 30130  007F1A  517E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30131  007F1C  0100               	movlb	0	; () banked
 30132  007F1E  597A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 30133  007F20  0100               	movlb	0	; () banked
 30134  007F22  517F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30135  007F24  0100               	movlb	0	; () banked
 30136  007F26  597B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 30137  007F28  0100               	movlb	0	; () banked
 30138  007F2A  5180               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30139  007F2C  0100               	movlb	0	; () banked
 30140  007F2E  597C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 30141  007F30  A0D8               	btfss	status,0,c
 30142  007F32  D013               	goto	l13235
 30143                           
 30144                           ; BSR set to: 0
 30145  007F34  0100               	movlb	0	; () banked
 30146  007F36  517D               	movf	___lldiv@divisor& (0+255),w,b
 30147  007F38  0100               	movlb	0	; () banked
 30148  007F3A  5F79               	subwf	___lldiv@dividend& (0+255),f,b
 30149  007F3C  0100               	movlb	0	; () banked
 30150  007F3E  517E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30151  007F40  0100               	movlb	0	; () banked
 30152  007F42  5B7A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 30153  007F44  0100               	movlb	0	; () banked
 30154  007F46  517F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30155  007F48  0100               	movlb	0	; () banked
 30156  007F4A  5B7B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 30157  007F4C  0100               	movlb	0	; () banked
 30158  007F4E  5180               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30159  007F50  0100               	movlb	0	; () banked
 30160  007F52  5B7C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 30161                           
 30162                           ; BSR set to: 0
 30163  007F54  0100               	movlb	0	; () banked
 30164  007F56  8181               	bsf	___lldiv@quotient& (0+255),0,b
 30165  007F58  D000               	goto	l13235
 30166  007F5A                     l13235:
 30167                           
 30168                           ; BSR set to: 0
 30169  007F5A  0100               	movlb	0	; () banked
 30170  007F5C  90D8               	bcf	status,0,c
 30171  007F5E  3380               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 30172  007F60  337F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 30173  007F62  337E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 30174  007F64  337D               	rrcf	___lldiv@divisor& (0+255),f,b
 30175                           
 30176                           ; BSR set to: 0
 30177  007F66  0100               	movlb	0	; () banked
 30178  007F68  2F85               	decfsz	___lldiv@counter& (0+255),f,b
 30179  007F6A  D7CC               	goto	l13227
 30180  007F6C  D000               	goto	l2819
 30181  007F6E                     l2819:
 30182                           
 30183                           ; BSR set to: 0
 30184  007F6E  C081  F079         	movff	___lldiv@quotient,?___lldiv
 30185  007F72  C082  F07A         	movff	___lldiv@quotient+1,?___lldiv+1
 30186  007F76  C083  F07B         	movff	___lldiv@quotient+2,?___lldiv+2
 30187  007F7A  C084  F07C         	movff	___lldiv@quotient+3,?___lldiv+3
 30188                           
 30189                           ; BSR set to: 0
 30190  007F7E  0012               	return		;funcret
 30191  007F80                     __end_of___lldiv:
 30192                           	opt stack 0
 30193                           tblptru	equ	0xFF8
 30194                           tblptrh	equ	0xFF7
 30195                           tblptrl	equ	0xFF6
 30196                           tablat	equ	0xFF5
 30197                           prodh	equ	0xFF4
 30198                           prodl	equ	0xFF3
 30199                           intcon	equ	0xFF2
 30200                           intcon2	equ	0xFF1
 30201                           indf0	equ	0xFEF
 30202                           postinc0	equ	0xFEE
 30203                           fsr0h	equ	0xFEA
 30204                           fsr0l	equ	0xFE9
 30205                           wreg	equ	0xFE8
 30206                           indf1	equ	0xFE7
 30207                           postdec1	equ	0xFE5
 30208                           fsr1h	equ	0xFE2
 30209                           fsr1l	equ	0xFE1
 30210                           indf2	equ	0xFDF
 30211                           postinc2	equ	0xFDE
 30212                           postdec2	equ	0xFDD
 30213                           fsr2h	equ	0xFDA
 30214                           fsr2l	equ	0xFD9
 30215                           status	equ	0xFD8
 30216                           
 30217 ;; *************** function ___fttol *****************
 30218 ;; Defined at:
 30219 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 30220 ;; Parameters:    Size  Location     Type
 30221 ;;  f1              3   88[BANK0 ] float 
 30222 ;; Auto vars:     Size  Location     Type
 30223 ;;  lval            4   98[BANK0 ] unsigned long 
 30224 ;;  exp1            1  102[BANK0 ] unsigned char 
 30225 ;;  sign1           1   97[BANK0 ] unsigned char 
 30226 ;; Return value:  Size  Location     Type
 30227 ;;                  4   88[BANK0 ] long 
 30228 ;; Registers used:
 30229 ;;		wreg, status,2, status,0
 30230 ;; Tracked objects:
 30231 ;;		On entry : 0/0
 30232 ;;		On exit  : 0/0
 30233 ;;		Unchanged: 0/0
 30234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30235 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30236 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30237 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30238 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30239 ;;Total ram usage:       15 bytes
 30240 ;; Hardware stack levels used:    1
 30241 ;; Hardware stack levels required when called:    6
 30242 ;; This function calls:
 30243 ;;		Nothing
 30244 ;; This function is called by:
 30245 ;;		_Round
 30246 ;;		_InitUART
 30247 ;;		_sprintf
 30248 ;; This function uses a non-reentrant model
 30249 ;;
 30250                           
 30251                           	psect	text72
 30252  00710A                     __ptext72:
 30253                           	opt stack 0
 30254  00710A                     ___fttol:
 30255                           	opt stack 22
 30256                           
 30257                           ; BSR set to: 0
 30258                           ;incstack = 0
 30259  00710A  C0BA  F0BC         	movff	___fttol@f1+2,??___fttol
 30260  00710E  0100               	movlb	0	; () banked
 30261  007110  6BBD               	clrf	(??___fttol+1)& (0+255),b
 30262  007112  6BBE               	clrf	(??___fttol+2)& (0+255),b
 30263  007114  0100               	movlb	0	; () banked
 30264  007116  35B9               	rlcf	(___fttol@f1+1)& (0+255),w,b
 30265  007118  0100               	movlb	0	; () banked
 30266  00711A  37BC               	rlcf	??___fttol& (0+255),f,b
 30267  00711C  E301               	bnc	u15691
 30268  00711E  81BD               	bsf	(??___fttol+1)& (0+255),0,b
 30269  007120                     u15691:
 30270  007120  0100               	movlb	0	; () banked
 30271  007122  51BC               	movf	??___fttol& (0+255),w,b
 30272  007124  0100               	movlb	0	; () banked
 30273  007126  6FC6               	movwf	___fttol@exp1& (0+255),b
 30274  007128  0100               	movlb	0	; () banked
 30275  00712A  51C6               	movf	___fttol@exp1& (0+255),w,b
 30276  00712C  A4D8               	btfss	status,2,c
 30277  00712E  D00A               	goto	l13177
 30278                           
 30279                           ; BSR set to: 0
 30280  007130  0E00               	movlw	0
 30281  007132  0100               	movlb	0	; () banked
 30282  007134  6FB8               	movwf	?___fttol& (0+255),b
 30283  007136  0E00               	movlw	0
 30284  007138  6FB9               	movwf	(?___fttol+1)& (0+255),b
 30285  00713A  0E00               	movlw	0
 30286  00713C  6FBA               	movwf	(?___fttol+2)& (0+255),b
 30287  00713E  0E00               	movlw	0
 30288  007140  6FBB               	movwf	(?___fttol+3)& (0+255),b
 30289                           
 30290                           ; BSR set to: 0
 30291  007142  0012               	return	
 30292  007144                     l13177:
 30293                           
 30294                           ; BSR set to: 0
 30295  007144  0E17               	movlw	23
 30296  007146  0100               	movlb	0	; () banked
 30297  007148  6FBC               	movwf	??___fttol& (0+255),b
 30298  00714A  C0B8  F0BD         	movff	___fttol@f1,??___fttol+1
 30299  00714E  C0B9  F0BE         	movff	___fttol@f1+1,??___fttol+2
 30300  007152  C0BA  F0BF         	movff	___fttol@f1+2,??___fttol+3
 30301  007156  0100               	movlb	0	; () banked
 30302  007158  29BC               	incf	??___fttol& (0+255),w,b
 30303  00715A  0100               	movlb	0	; () banked
 30304  00715C  6FC0               	movwf	(??___fttol+4)& (0+255),b
 30305  00715E  D005               	goto	u15710
 30306  007160                     u15715:
 30307  007160  0100               	movlb	0	; () banked
 30308  007162  90D8               	bcf	status,0,c
 30309  007164  33BF               	rrcf	(??___fttol+3)& (0+255),f,b
 30310  007166  33BE               	rrcf	(??___fttol+2)& (0+255),f,b
 30311  007168  33BD               	rrcf	(??___fttol+1)& (0+255),f,b
 30312  00716A                     u15710:
 30313  00716A  0100               	movlb	0	; () banked
 30314  00716C  2FC0               	decfsz	(??___fttol+4)& (0+255),f,b
 30315  00716E  D7F8               	goto	u15715
 30316  007170  0100               	movlb	0	; () banked
 30317  007172  51BD               	movf	(??___fttol+1)& (0+255),w,b
 30318  007174  0100               	movlb	0	; () banked
 30319  007176  6FC1               	movwf	___fttol@sign1& (0+255),b
 30320                           
 30321                           ; BSR set to: 0
 30322  007178  0100               	movlb	0	; () banked
 30323  00717A  8FB9               	bsf	(___fttol@f1+1)& (0+255),7,b
 30324                           
 30325                           ; BSR set to: 0
 30326  00717C  0EFF               	movlw	255
 30327  00717E  0100               	movlb	0	; () banked
 30328  007180  17B8               	andwf	___fttol@f1& (0+255),f,b
 30329  007182  0EFF               	movlw	255
 30330  007184  0100               	movlb	0	; () banked
 30331  007186  17B9               	andwf	(___fttol@f1+1)& (0+255),f,b
 30332  007188  0E00               	movlw	0
 30333  00718A  0100               	movlb	0	; () banked
 30334  00718C  17BA               	andwf	(___fttol@f1+2)& (0+255),f,b
 30335                           
 30336                           ; BSR set to: 0
 30337  00718E  0100               	movlb	0	; () banked
 30338  007190  51B8               	movf	___fttol@f1& (0+255),w,b
 30339  007192  0100               	movlb	0	; () banked
 30340  007194  6FC2               	movwf	___fttol@lval& (0+255),b
 30341  007196  0100               	movlb	0	; () banked
 30342  007198  51B9               	movf	(___fttol@f1+1)& (0+255),w,b
 30343  00719A  0100               	movlb	0	; () banked
 30344  00719C  6FC3               	movwf	(___fttol@lval+1)& (0+255),b
 30345  00719E  0100               	movlb	0	; () banked
 30346  0071A0  51BA               	movf	(___fttol@f1+2)& (0+255),w,b
 30347  0071A2  0100               	movlb	0	; () banked
 30348  0071A4  6FC4               	movwf	(___fttol@lval+2)& (0+255),b
 30349  0071A6  0100               	movlb	0	; () banked
 30350  0071A8  6BC5               	clrf	(___fttol@lval+3)& (0+255),b
 30351                           
 30352                           ; BSR set to: 0
 30353  0071AA  0E8E               	movlw	142
 30354  0071AC  0100               	movlb	0	; () banked
 30355  0071AE  5FC6               	subwf	___fttol@exp1& (0+255),f,b
 30356                           
 30357                           ; BSR set to: 0
 30358  0071B0  0100               	movlb	0	; () banked
 30359  0071B2  AFC6               	btfss	___fttol@exp1& (0+255),7,b
 30360  0071B4  D01B               	goto	l13199
 30361                           
 30362                           ; BSR set to: 0
 30363  0071B6  0100               	movlb	0	; () banked
 30364  0071B8  51C6               	movf	___fttol@exp1& (0+255),w,b
 30365  0071BA  0A80               	xorlw	128
 30366  0071BC  0F8F               	addlw	143
 30367  0071BE  B0D8               	btfsc	status,0,c
 30368  0071C0  D00B               	goto	l13195
 30369                           
 30370                           ; BSR set to: 0
 30371  0071C2  0E00               	movlw	0
 30372  0071C4  0100               	movlb	0	; () banked
 30373  0071C6  6FB8               	movwf	?___fttol& (0+255),b
 30374  0071C8  0E00               	movlw	0
 30375  0071CA  6FB9               	movwf	(?___fttol+1)& (0+255),b
 30376  0071CC  0E00               	movlw	0
 30377  0071CE  6FBA               	movwf	(?___fttol+2)& (0+255),b
 30378  0071D0  0E00               	movlw	0
 30379  0071D2  6FBB               	movwf	(?___fttol+3)& (0+255),b
 30380                           
 30381                           ; BSR set to: 0
 30382  0071D4  0012               	return	
 30383                           
 30384                           ; BSR set to: 0
 30385  0071D6  D000               	goto	l13195
 30386  0071D8                     l13195:
 30387                           
 30388                           ; BSR set to: 0
 30389  0071D8  0100               	movlb	0	; () banked
 30390  0071DA  90D8               	bcf	status,0,c
 30391  0071DC  33C5               	rrcf	(___fttol@lval+3)& (0+255),f,b
 30392  0071DE  33C4               	rrcf	(___fttol@lval+2)& (0+255),f,b
 30393  0071E0  33C3               	rrcf	(___fttol@lval+1)& (0+255),f,b
 30394  0071E2  33C2               	rrcf	___fttol@lval& (0+255),f,b
 30395                           
 30396                           ; BSR set to: 0
 30397  0071E4  0100               	movlb	0	; () banked
 30398  0071E6  3FC6               	incfsz	___fttol@exp1& (0+255),f,b
 30399  0071E8  D7F7               	goto	l13195
 30400                           
 30401                           ; BSR set to: 0
 30402  0071EA  D01F               	goto	l13209
 30403  0071EC                     l13199:
 30404                           
 30405                           ; BSR set to: 0
 30406  0071EC  0E17               	movlw	23
 30407  0071EE  0100               	movlb	0	; () banked
 30408  0071F0  65C6               	cpfsgt	___fttol@exp1& (0+255),b
 30409  0071F2  D014               	goto	l13207
 30410                           
 30411                           ; BSR set to: 0
 30412  0071F4  0E00               	movlw	0
 30413  0071F6  0100               	movlb	0	; () banked
 30414  0071F8  6FB8               	movwf	?___fttol& (0+255),b
 30415  0071FA  0E00               	movlw	0
 30416  0071FC  6FB9               	movwf	(?___fttol+1)& (0+255),b
 30417  0071FE  0E00               	movlw	0
 30418  007200  6FBA               	movwf	(?___fttol+2)& (0+255),b
 30419  007202  0E00               	movlw	0
 30420  007204  6FBB               	movwf	(?___fttol+3)& (0+255),b
 30421                           
 30422                           ; BSR set to: 0
 30423  007206  0012               	return	
 30424                           
 30425                           ; BSR set to: 0
 30426  007208  D009               	goto	l13207
 30427  00720A                     l13205:
 30428                           
 30429                           ; BSR set to: 0
 30430  00720A  0100               	movlb	0	; () banked
 30431  00720C  90D8               	bcf	status,0,c
 30432  00720E  37C2               	rlcf	___fttol@lval& (0+255),f,b
 30433  007210  37C3               	rlcf	(___fttol@lval+1)& (0+255),f,b
 30434  007212  37C4               	rlcf	(___fttol@lval+2)& (0+255),f,b
 30435  007214  37C5               	rlcf	(___fttol@lval+3)& (0+255),f,b
 30436  007216  0100               	movlb	0	; () banked
 30437  007218  07C6               	decf	___fttol@exp1& (0+255),f,b
 30438  00721A  D000               	goto	l13207
 30439  00721C                     l13207:
 30440                           
 30441                           ; BSR set to: 0
 30442  00721C  0100               	movlb	0	; () banked
 30443  00721E  51C6               	movf	___fttol@exp1& (0+255),w,b
 30444  007220  0100               	movlb	0	; () banked
 30445  007222  B4D8               	btfsc	status,2,c
 30446  007224  D002               	goto	l13209
 30447  007226  D7F1               	goto	l13205
 30448                           
 30449                           ; BSR set to: 0
 30450  007228  D000               	goto	l13209
 30451  00722A                     l13209:
 30452                           
 30453                           ; BSR set to: 0
 30454  00722A  0100               	movlb	0	; () banked
 30455  00722C  51C1               	movf	___fttol@sign1& (0+255),w,b
 30456  00722E  0100               	movlb	0	; () banked
 30457  007230  B4D8               	btfsc	status,2,c
 30458  007232  D00A               	goto	l13213
 30459                           
 30460                           ; BSR set to: 0
 30461  007234  0100               	movlb	0	; () banked
 30462  007236  1FC5               	comf	(___fttol@lval+3)& (0+255),f,b
 30463  007238  1FC4               	comf	(___fttol@lval+2)& (0+255),f,b
 30464  00723A  1FC3               	comf	(___fttol@lval+1)& (0+255),f,b
 30465  00723C  6DC2               	negf	___fttol@lval& (0+255),b
 30466  00723E  0E00               	movlw	0
 30467  007240  23C3               	addwfc	(___fttol@lval+1)& (0+255),f,b
 30468  007242  23C4               	addwfc	(___fttol@lval+2)& (0+255),f,b
 30469  007244  23C5               	addwfc	(___fttol@lval+3)& (0+255),f,b
 30470  007246  D000               	goto	l13213
 30471  007248                     l13213:
 30472                           
 30473                           ; BSR set to: 0
 30474  007248  C0C2  F0B8         	movff	___fttol@lval,?___fttol
 30475  00724C  C0C3  F0B9         	movff	___fttol@lval+1,?___fttol+1
 30476  007250  C0C4  F0BA         	movff	___fttol@lval+2,?___fttol+2
 30477  007254  C0C5  F0BB         	movff	___fttol@lval+3,?___fttol+3
 30478  007258  0012               	return	
 30479                           
 30480                           ; BSR set to: 0
 30481                           
 30482                           ; BSR set to: 0
 30483  00725A  0012               	return		;funcret
 30484  00725C                     __end_of___fttol:
 30485                           	opt stack 0
 30486                           tblptru	equ	0xFF8
 30487                           tblptrh	equ	0xFF7
 30488                           tblptrl	equ	0xFF6
 30489                           tablat	equ	0xFF5
 30490                           prodh	equ	0xFF4
 30491                           prodl	equ	0xFF3
 30492                           intcon	equ	0xFF2
 30493                           intcon2	equ	0xFF1
 30494                           indf0	equ	0xFEF
 30495                           postinc0	equ	0xFEE
 30496                           fsr0h	equ	0xFEA
 30497                           fsr0l	equ	0xFE9
 30498                           wreg	equ	0xFE8
 30499                           indf1	equ	0xFE7
 30500                           postdec1	equ	0xFE5
 30501                           fsr1h	equ	0xFE2
 30502                           fsr1l	equ	0xFE1
 30503                           indf2	equ	0xFDF
 30504                           postinc2	equ	0xFDE
 30505                           postdec2	equ	0xFDD
 30506                           fsr2h	equ	0xFDA
 30507                           fsr2l	equ	0xFD9
 30508                           status	equ	0xFD8
 30509                           
 30510 ;; *************** function ___ftsub *****************
 30511 ;; Defined at:
 30512 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
 30513 ;; Parameters:    Size  Location     Type
 30514 ;;  f1              3   88[BANK0 ] float 
 30515 ;;  f2              3   91[BANK0 ] float 
 30516 ;; Auto vars:     Size  Location     Type
 30517 ;;		None
 30518 ;; Return value:  Size  Location     Type
 30519 ;;                  3   88[BANK0 ] float 
 30520 ;; Registers used:
 30521 ;;		wreg, status,2, status,0, cstack
 30522 ;; Tracked objects:
 30523 ;;		On entry : 0/0
 30524 ;;		On exit  : 0/0
 30525 ;;		Unchanged: 0/0
 30526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30527 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30530 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30531 ;;Total ram usage:        6 bytes
 30532 ;; Hardware stack levels used:    1
 30533 ;; Hardware stack levels required when called:    8
 30534 ;; This function calls:
 30535 ;;		___ftadd
 30536 ;; This function is called by:
 30537 ;;		_main
 30538 ;;		_sprintf
 30539 ;; This function uses a non-reentrant model
 30540 ;;
 30541                           
 30542                           	psect	text73
 30543  008F58                     __ptext73:
 30544                           	opt stack 0
 30545  008F58                     ___ftsub:
 30546                           	opt stack 22
 30547                           
 30548                           ; BSR set to: 0
 30549                           ;incstack = 0
 30550  008F58  0100               	movlb	0	; () banked
 30551  008F5A  51BB               	movf	___ftsub@f2& (0+255),w,b
 30552  008F5C  0100               	movlb	0	; () banked
 30553  008F5E  11BC               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 30554  008F60  0100               	movlb	0	; () banked
 30555  008F62  11BD               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 30556  008F64  B4D8               	btfsc	status,2,c
 30557  008F66  D00A               	goto	l13145
 30558                           
 30559                           ; BSR set to: 0
 30560  008F68  0E00               	movlw	0
 30561  008F6A  0100               	movlb	0	; () banked
 30562  008F6C  1BBB               	xorwf	___ftsub@f2& (0+255),f,b
 30563  008F6E  0E00               	movlw	0
 30564  008F70  0100               	movlb	0	; () banked
 30565  008F72  1BBC               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 30566  008F74  0E80               	movlw	128
 30567  008F76  0100               	movlb	0	; () banked
 30568  008F78  1BBD               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 30569  008F7A  D000               	goto	l13145
 30570  008F7C                     l13145:
 30571                           
 30572                           ; BSR set to: 0
 30573  008F7C  C0B8  F0AC         	movff	___ftsub@f1,___ftadd@f1
 30574  008F80  C0B9  F0AD         	movff	___ftsub@f1+1,___ftadd@f1+1
 30575  008F84  C0BA  F0AE         	movff	___ftsub@f1+2,___ftadd@f1+2
 30576  008F88  C0BB  F0AF         	movff	___ftsub@f2,___ftadd@f2
 30577  008F8C  C0BC  F0B0         	movff	___ftsub@f2+1,___ftadd@f2+1
 30578  008F90  C0BD  F0B1         	movff	___ftsub@f2+2,___ftadd@f2+2
 30579  008F94  EC8F  F02D         	call	___ftadd	;wreg free
 30580  008F98  C0AC  F0B8         	movff	?___ftadd,?___ftsub
 30581  008F9C  C0AD  F0B9         	movff	?___ftadd+1,?___ftsub+1
 30582  008FA0  C0AE  F0BA         	movff	?___ftadd+2,?___ftsub+2
 30583  008FA4  0012               	return	
 30584  008FA6  0012               	return		;funcret
 30585  008FA8                     __end_of___ftsub:
 30586                           	opt stack 0
 30587                           tblptru	equ	0xFF8
 30588                           tblptrh	equ	0xFF7
 30589                           tblptrl	equ	0xFF6
 30590                           tablat	equ	0xFF5
 30591                           prodh	equ	0xFF4
 30592                           prodl	equ	0xFF3
 30593                           intcon	equ	0xFF2
 30594                           intcon2	equ	0xFF1
 30595                           indf0	equ	0xFEF
 30596                           postinc0	equ	0xFEE
 30597                           fsr0h	equ	0xFEA
 30598                           fsr0l	equ	0xFE9
 30599                           wreg	equ	0xFE8
 30600                           indf1	equ	0xFE7
 30601                           postdec1	equ	0xFE5
 30602                           fsr1h	equ	0xFE2
 30603                           fsr1l	equ	0xFE1
 30604                           indf2	equ	0xFDF
 30605                           postinc2	equ	0xFDE
 30606                           postdec2	equ	0xFDD
 30607                           fsr2h	equ	0xFDA
 30608                           fsr2l	equ	0xFD9
 30609                           status	equ	0xFD8
 30610                           
 30611 ;; *************** function ___ftadd *****************
 30612 ;; Defined at:
 30613 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
 30614 ;; Parameters:    Size  Location     Type
 30615 ;;  f1              3   76[BANK0 ] float 
 30616 ;;  f2              3   79[BANK0 ] float 
 30617 ;; Auto vars:     Size  Location     Type
 30618 ;;  exp1            1   87[BANK0 ] unsigned char 
 30619 ;;  exp2            1   86[BANK0 ] unsigned char 
 30620 ;;  sign            1   85[BANK0 ] unsigned char 
 30621 ;; Return value:  Size  Location     Type
 30622 ;;                  3   76[BANK0 ] float 
 30623 ;; Registers used:
 30624 ;;		wreg, status,2, status,0, cstack
 30625 ;; Tracked objects:
 30626 ;;		On entry : 0/0
 30627 ;;		On exit  : 0/0
 30628 ;;		Unchanged: 0/0
 30629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30630 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30631 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30632 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30633 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30634 ;;Total ram usage:       12 bytes
 30635 ;; Hardware stack levels used:    1
 30636 ;; Hardware stack levels required when called:    7
 30637 ;; This function calls:
 30638 ;;		___ftpack
 30639 ;; This function is called by:
 30640 ;;		_main
 30641 ;;		_Round
 30642 ;;		_sprintf
 30643 ;;		___ftsub
 30644 ;; This function uses a non-reentrant model
 30645 ;;
 30646                           
 30647                           	psect	text74
 30648  005B1E                     __ptext74:
 30649                           	opt stack 0
 30650  005B1E                     ___ftadd:
 30651                           	opt stack 22
 30652                           
 30653                           ;incstack = 0
 30654  005B1E  C0AE  F0B2         	movff	___ftadd@f1+2,??___ftadd
 30655  005B22  0100               	movlb	0	; () banked
 30656  005B24  6BB3               	clrf	(??___ftadd+1)& (0+255),b
 30657  005B26  6BB4               	clrf	(??___ftadd+2)& (0+255),b
 30658  005B28  0100               	movlb	0	; () banked
 30659  005B2A  35AD               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 30660  005B2C  0100               	movlb	0	; () banked
 30661  005B2E  37B2               	rlcf	??___ftadd& (0+255),f,b
 30662  005B30  E301               	bnc	u14681
 30663  005B32  81B3               	bsf	(??___ftadd+1)& (0+255),0,b
 30664  005B34                     u14681:
 30665  005B34  0100               	movlb	0	; () banked
 30666  005B36  51B2               	movf	??___ftadd& (0+255),w,b
 30667  005B38  0100               	movlb	0	; () banked
 30668  005B3A  6FB7               	movwf	___ftadd@exp1& (0+255),b
 30669  005B3C  C0B1  F0B2         	movff	___ftadd@f2+2,??___ftadd
 30670  005B40  0100               	movlb	0	; () banked
 30671  005B42  6BB3               	clrf	(??___ftadd+1)& (0+255),b
 30672  005B44  6BB4               	clrf	(??___ftadd+2)& (0+255),b
 30673  005B46  0100               	movlb	0	; () banked
 30674  005B48  35B0               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 30675  005B4A  0100               	movlb	0	; () banked
 30676  005B4C  37B2               	rlcf	??___ftadd& (0+255),f,b
 30677  005B4E  E301               	bnc	u14691
 30678  005B50  81B3               	bsf	(??___ftadd+1)& (0+255),0,b
 30679  005B52                     u14691:
 30680  005B52  0100               	movlb	0	; () banked
 30681  005B54  51B2               	movf	??___ftadd& (0+255),w,b
 30682  005B56  0100               	movlb	0	; () banked
 30683  005B58  6FB6               	movwf	___ftadd@exp2& (0+255),b
 30684                           
 30685                           ; BSR set to: 0
 30686  005B5A  0100               	movlb	0	; () banked
 30687  005B5C  51B7               	movf	___ftadd@exp1& (0+255),w,b
 30688  005B5E  0100               	movlb	0	; () banked
 30689  005B60  B4D8               	btfsc	status,2,c
 30690  005B62  D011               	goto	l2690
 30691                           
 30692                           ; BSR set to: 0
 30693  005B64  0100               	movlb	0	; () banked
 30694  005B66  51B6               	movf	___ftadd@exp2& (0+255),w,b
 30695  005B68  0100               	movlb	0	; () banked
 30696  005B6A  5DB7               	subwf	___ftadd@exp1& (0+255),w,b
 30697  005B6C  B0D8               	btfsc	status,0,c
 30698  005B6E  D012               	goto	l12615
 30699                           
 30700                           ; BSR set to: 0
 30701  005B70  0100               	movlb	0	; () banked
 30702  005B72  51B7               	movf	___ftadd@exp1& (0+255),w,b
 30703  005B74  0800               	sublw	0
 30704  005B76  0100               	movlb	0	; () banked
 30705  005B78  25B6               	addwf	___ftadd@exp2& (0+255),w,b
 30706  005B7A  0100               	movlb	0	; () banked
 30707  005B7C  6FB2               	movwf	??___ftadd& (0+255),b
 30708  005B7E  0E18               	movlw	24
 30709  005B80  0100               	movlb	0	; () banked
 30710  005B82  65B2               	cpfsgt	??___ftadd& (0+255),b
 30711  005B84  D007               	goto	l12615
 30712  005B86                     l2690:
 30713                           
 30714                           ; BSR set to: 0
 30715  005B86  C0AF  F0AC         	movff	___ftadd@f2,?___ftadd
 30716  005B8A  C0B0  F0AD         	movff	___ftadd@f2+1,?___ftadd+1
 30717  005B8E  C0B1  F0AE         	movff	___ftadd@f2+2,?___ftadd+2
 30718  005B92  0012               	return	
 30719  005B94                     l12615:
 30720                           
 30721                           ; BSR set to: 0
 30722  005B94  0100               	movlb	0	; () banked
 30723  005B96  51B6               	movf	___ftadd@exp2& (0+255),w,b
 30724  005B98  0100               	movlb	0	; () banked
 30725  005B9A  B4D8               	btfsc	status,2,c
 30726  005B9C  D011               	goto	l2694
 30727                           
 30728                           ; BSR set to: 0
 30729  005B9E  0100               	movlb	0	; () banked
 30730  005BA0  51B7               	movf	___ftadd@exp1& (0+255),w,b
 30731  005BA2  0100               	movlb	0	; () banked
 30732  005BA4  5DB6               	subwf	___ftadd@exp2& (0+255),w,b
 30733  005BA6  B0D8               	btfsc	status,0,c
 30734  005BA8  D012               	goto	l12621
 30735                           
 30736                           ; BSR set to: 0
 30737  005BAA  0100               	movlb	0	; () banked
 30738  005BAC  51B6               	movf	___ftadd@exp2& (0+255),w,b
 30739  005BAE  0800               	sublw	0
 30740  005BB0  0100               	movlb	0	; () banked
 30741  005BB2  25B7               	addwf	___ftadd@exp1& (0+255),w,b
 30742  005BB4  0100               	movlb	0	; () banked
 30743  005BB6  6FB2               	movwf	??___ftadd& (0+255),b
 30744  005BB8  0E18               	movlw	24
 30745  005BBA  0100               	movlb	0	; () banked
 30746  005BBC  65B2               	cpfsgt	??___ftadd& (0+255),b
 30747  005BBE  D007               	goto	l12621
 30748  005BC0                     l2694:
 30749                           
 30750                           ; BSR set to: 0
 30751  005BC0  C0AC  F0AC         	movff	___ftadd@f1,?___ftadd
 30752  005BC4  C0AD  F0AD         	movff	___ftadd@f1+1,?___ftadd+1
 30753  005BC8  C0AE  F0AE         	movff	___ftadd@f1+2,?___ftadd+2
 30754  005BCC  0012               	return	
 30755  005BCE                     l12621:
 30756                           
 30757                           ; BSR set to: 0
 30758  005BCE  0E06               	movlw	6
 30759  005BD0  0100               	movlb	0	; () banked
 30760  005BD2  6FB5               	movwf	___ftadd@sign& (0+255),b
 30761                           
 30762                           ; BSR set to: 0
 30763  005BD4  0100               	movlb	0	; () banked
 30764  005BD6  AFAE               	btfss	(___ftadd@f1+2)& (0+255),7,b
 30765  005BD8  D003               	goto	l12627
 30766                           
 30767                           ; BSR set to: 0
 30768  005BDA  0100               	movlb	0	; () banked
 30769  005BDC  8FB5               	bsf	___ftadd@sign& (0+255),7,b
 30770  005BDE  D000               	goto	l12627
 30771  005BE0                     l12627:
 30772                           
 30773                           ; BSR set to: 0
 30774  005BE0  0100               	movlb	0	; () banked
 30775  005BE2  AFB1               	btfss	(___ftadd@f2+2)& (0+255),7,b
 30776  005BE4  D002               	goto	l2696
 30777                           
 30778                           ; BSR set to: 0
 30779  005BE6  0100               	movlb	0	; () banked
 30780  005BE8  8DB5               	bsf	___ftadd@sign& (0+255),6,b
 30781  005BEA                     l2696:
 30782                           
 30783                           ; BSR set to: 0
 30784  005BEA  0100               	movlb	0	; () banked
 30785  005BEC  8FAD               	bsf	(___ftadd@f1+1)& (0+255),7,b
 30786                           
 30787                           ; BSR set to: 0
 30788  005BEE  0EFF               	movlw	255
 30789  005BF0  0100               	movlb	0	; () banked
 30790  005BF2  17AC               	andwf	___ftadd@f1& (0+255),f,b
 30791  005BF4  0EFF               	movlw	255
 30792  005BF6  0100               	movlb	0	; () banked
 30793  005BF8  17AD               	andwf	(___ftadd@f1+1)& (0+255),f,b
 30794  005BFA  0E00               	movlw	0
 30795  005BFC  0100               	movlb	0	; () banked
 30796  005BFE  17AE               	andwf	(___ftadd@f1+2)& (0+255),f,b
 30797  005C00  0100               	movlb	0	; () banked
 30798  005C02  8FB0               	bsf	(___ftadd@f2+1)& (0+255),7,b
 30799                           
 30800                           ; BSR set to: 0
 30801  005C04  0EFF               	movlw	255
 30802  005C06  0100               	movlb	0	; () banked
 30803  005C08  17AF               	andwf	___ftadd@f2& (0+255),f,b
 30804  005C0A  0EFF               	movlw	255
 30805  005C0C  0100               	movlb	0	; () banked
 30806  005C0E  17B0               	andwf	(___ftadd@f2+1)& (0+255),f,b
 30807  005C10  0E00               	movlw	0
 30808  005C12  0100               	movlb	0	; () banked
 30809  005C14  17B1               	andwf	(___ftadd@f2+2)& (0+255),f,b
 30810                           
 30811                           ; BSR set to: 0
 30812  005C16  0100               	movlb	0	; () banked
 30813  005C18  51B6               	movf	___ftadd@exp2& (0+255),w,b
 30814  005C1A  0100               	movlb	0	; () banked
 30815  005C1C  5DB7               	subwf	___ftadd@exp1& (0+255),w,b
 30816  005C1E  B0D8               	btfsc	status,0,c
 30817  005C20  D028               	goto	l12647
 30818  005C22                     l12637:
 30819                           
 30820                           ; BSR set to: 0
 30821  005C22  0100               	movlb	0	; () banked
 30822  005C24  90D8               	bcf	status,0,c
 30823  005C26  37AF               	rlcf	___ftadd@f2& (0+255),f,b
 30824  005C28  37B0               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 30825  005C2A  37B1               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 30826  005C2C  0100               	movlb	0	; () banked
 30827  005C2E  07B6               	decf	___ftadd@exp2& (0+255),f,b
 30828                           
 30829                           ; BSR set to: 0
 30830  005C30  0100               	movlb	0	; () banked
 30831  005C32  51B7               	movf	___ftadd@exp1& (0+255),w,b
 30832  005C34  0100               	movlb	0	; () banked
 30833  005C36  19B6               	xorwf	___ftadd@exp2& (0+255),w,b
 30834  005C38  B4D8               	btfsc	status,2,c
 30835  005C3A  D013               	goto	l12645
 30836                           
 30837                           ; BSR set to: 0
 30838  005C3C  0100               	movlb	0	; () banked
 30839  005C3E  07B5               	decf	___ftadd@sign& (0+255),f,b
 30840  005C40  C0B5  F0B2         	movff	___ftadd@sign,??___ftadd
 30841  005C44  0E07               	movlw	7
 30842  005C46  0100               	movlb	0	; () banked
 30843  005C48  17B2               	andwf	??___ftadd& (0+255),f,b
 30844  005C4A  B4D8               	btfsc	status,2,c
 30845  005C4C  D00A               	goto	l12645
 30846  005C4E  D7E9               	goto	l12637
 30847                           
 30848                           ; BSR set to: 0
 30849                           
 30850                           ; BSR set to: 0
 30851  005C50  D008               	goto	l12645
 30852  005C52                     l12643:
 30853                           
 30854                           ; BSR set to: 0
 30855  005C52  0100               	movlb	0	; () banked
 30856  005C54  90D8               	bcf	status,0,c
 30857  005C56  33AE               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 30858  005C58  33AD               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 30859  005C5A  33AC               	rrcf	___ftadd@f1& (0+255),f,b
 30860  005C5C  0100               	movlb	0	; () banked
 30861  005C5E  2BB7               	incf	___ftadd@exp1& (0+255),f,b
 30862  005C60  D000               	goto	l12645
 30863  005C62                     l12645:
 30864                           
 30865                           ; BSR set to: 0
 30866  005C62  0100               	movlb	0	; () banked
 30867  005C64  51B6               	movf	___ftadd@exp2& (0+255),w,b
 30868  005C66  0100               	movlb	0	; () banked
 30869  005C68  19B7               	xorwf	___ftadd@exp1& (0+255),w,b
 30870  005C6A  B4D8               	btfsc	status,2,c
 30871  005C6C  D030               	goto	l2705
 30872  005C6E  D7F1               	goto	l12643
 30873                           
 30874                           ; BSR set to: 0
 30875  005C70  D02E               	goto	l2705
 30876  005C72                     l12647:
 30877                           
 30878                           ; BSR set to: 0
 30879  005C72  0100               	movlb	0	; () banked
 30880  005C74  51B7               	movf	___ftadd@exp1& (0+255),w,b
 30881  005C76  0100               	movlb	0	; () banked
 30882  005C78  5DB6               	subwf	___ftadd@exp2& (0+255),w,b
 30883  005C7A  B0D8               	btfsc	status,0,c
 30884  005C7C  D028               	goto	l2705
 30885  005C7E                     l12649:
 30886                           
 30887                           ; BSR set to: 0
 30888  005C7E  0100               	movlb	0	; () banked
 30889  005C80  90D8               	bcf	status,0,c
 30890  005C82  37AC               	rlcf	___ftadd@f1& (0+255),f,b
 30891  005C84  37AD               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 30892  005C86  37AE               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 30893  005C88  0100               	movlb	0	; () banked
 30894  005C8A  07B7               	decf	___ftadd@exp1& (0+255),f,b
 30895                           
 30896                           ; BSR set to: 0
 30897  005C8C  0100               	movlb	0	; () banked
 30898  005C8E  51B7               	movf	___ftadd@exp1& (0+255),w,b
 30899  005C90  0100               	movlb	0	; () banked
 30900  005C92  19B6               	xorwf	___ftadd@exp2& (0+255),w,b
 30901  005C94  B4D8               	btfsc	status,2,c
 30902  005C96  D013               	goto	l12657
 30903                           
 30904                           ; BSR set to: 0
 30905  005C98  0100               	movlb	0	; () banked
 30906  005C9A  07B5               	decf	___ftadd@sign& (0+255),f,b
 30907  005C9C  C0B5  F0B2         	movff	___ftadd@sign,??___ftadd
 30908  005CA0  0E07               	movlw	7
 30909  005CA2  0100               	movlb	0	; () banked
 30910  005CA4  17B2               	andwf	??___ftadd& (0+255),f,b
 30911  005CA6  B4D8               	btfsc	status,2,c
 30912  005CA8  D00A               	goto	l12657
 30913  005CAA  D7E9               	goto	l12649
 30914                           
 30915                           ; BSR set to: 0
 30916                           
 30917                           ; BSR set to: 0
 30918  005CAC  D008               	goto	l12657
 30919  005CAE                     l12655:
 30920                           
 30921                           ; BSR set to: 0
 30922  005CAE  0100               	movlb	0	; () banked
 30923  005CB0  90D8               	bcf	status,0,c
 30924  005CB2  33B1               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 30925  005CB4  33B0               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 30926  005CB6  33AF               	rrcf	___ftadd@f2& (0+255),f,b
 30927  005CB8  0100               	movlb	0	; () banked
 30928  005CBA  2BB6               	incf	___ftadd@exp2& (0+255),f,b
 30929  005CBC  D000               	goto	l12657
 30930  005CBE                     l12657:
 30931                           
 30932                           ; BSR set to: 0
 30933  005CBE  0100               	movlb	0	; () banked
 30934  005CC0  51B6               	movf	___ftadd@exp2& (0+255),w,b
 30935  005CC2  0100               	movlb	0	; () banked
 30936  005CC4  19B7               	xorwf	___ftadd@exp1& (0+255),w,b
 30937  005CC6  B4D8               	btfsc	status,2,c
 30938  005CC8  D002               	goto	l2705
 30939  005CCA  D7F1               	goto	l12655
 30940                           
 30941                           ; BSR set to: 0
 30942  005CCC  D000               	goto	l2705
 30943  005CCE                     l2705:
 30944                           
 30945                           ; BSR set to: 0
 30946  005CCE  0100               	movlb	0	; () banked
 30947  005CD0  AFB5               	btfss	___ftadd@sign& (0+255),7,b
 30948  005CD2  D012               	goto	l2714
 30949                           
 30950                           ; BSR set to: 0
 30951  005CD4  0EFF               	movlw	255
 30952  005CD6  0100               	movlb	0	; () banked
 30953  005CD8  1BAC               	xorwf	___ftadd@f1& (0+255),f,b
 30954  005CDA  0EFF               	movlw	255
 30955  005CDC  0100               	movlb	0	; () banked
 30956  005CDE  1BAD               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 30957  005CE0  0EFF               	movlw	255
 30958  005CE2  0100               	movlb	0	; () banked
 30959  005CE4  1BAE               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 30960  005CE6  0E01               	movlw	1
 30961  005CE8  0100               	movlb	0	; () banked
 30962  005CEA  27AC               	addwf	___ftadd@f1& (0+255),f,b
 30963  005CEC  0E00               	movlw	0
 30964  005CEE  0100               	movlb	0	; () banked
 30965  005CF0  23AD               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 30966  005CF2  0E00               	movlw	0
 30967  005CF4  0100               	movlb	0	; () banked
 30968  005CF6  23AE               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 30969  005CF8                     l2714:
 30970                           
 30971                           ; BSR set to: 0
 30972  005CF8  0100               	movlb	0	; () banked
 30973  005CFA  ADB5               	btfss	___ftadd@sign& (0+255),6,b
 30974  005CFC  D013               	goto	l12663
 30975                           
 30976                           ; BSR set to: 0
 30977  005CFE  0EFF               	movlw	255
 30978  005D00  0100               	movlb	0	; () banked
 30979  005D02  1BAF               	xorwf	___ftadd@f2& (0+255),f,b
 30980  005D04  0EFF               	movlw	255
 30981  005D06  0100               	movlb	0	; () banked
 30982  005D08  1BB0               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 30983  005D0A  0EFF               	movlw	255
 30984  005D0C  0100               	movlb	0	; () banked
 30985  005D0E  1BB1               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 30986  005D10  0E01               	movlw	1
 30987  005D12  0100               	movlb	0	; () banked
 30988  005D14  27AF               	addwf	___ftadd@f2& (0+255),f,b
 30989  005D16  0E00               	movlw	0
 30990  005D18  0100               	movlb	0	; () banked
 30991  005D1A  23B0               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 30992  005D1C  0E00               	movlw	0
 30993  005D1E  0100               	movlb	0	; () banked
 30994  005D20  23B1               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 30995  005D22  D000               	goto	l12663
 30996  005D24                     l12663:
 30997                           
 30998                           ; BSR set to: 0
 30999  005D24  0E00               	movlw	0
 31000  005D26  0100               	movlb	0	; () banked
 31001  005D28  6FB5               	movwf	___ftadd@sign& (0+255),b
 31002                           
 31003                           ; BSR set to: 0
 31004  005D2A  0100               	movlb	0	; () banked
 31005  005D2C  51AC               	movf	___ftadd@f1& (0+255),w,b
 31006  005D2E  0100               	movlb	0	; () banked
 31007  005D30  27AF               	addwf	___ftadd@f2& (0+255),f,b
 31008  005D32  0100               	movlb	0	; () banked
 31009  005D34  51AD               	movf	(___ftadd@f1+1)& (0+255),w,b
 31010  005D36  0100               	movlb	0	; () banked
 31011  005D38  23B0               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 31012  005D3A  0100               	movlb	0	; () banked
 31013  005D3C  51AE               	movf	(___ftadd@f1+2)& (0+255),w,b
 31014  005D3E  0100               	movlb	0	; () banked
 31015  005D40  23B1               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 31016                           
 31017                           ; BSR set to: 0
 31018  005D42  0100               	movlb	0	; () banked
 31019  005D44  AFB1               	btfss	(___ftadd@f2+2)& (0+255),7,b
 31020  005D46  D016               	goto	l12673
 31021                           
 31022                           ; BSR set to: 0
 31023  005D48  0EFF               	movlw	255
 31024  005D4A  0100               	movlb	0	; () banked
 31025  005D4C  1BAF               	xorwf	___ftadd@f2& (0+255),f,b
 31026  005D4E  0EFF               	movlw	255
 31027  005D50  0100               	movlb	0	; () banked
 31028  005D52  1BB0               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 31029  005D54  0EFF               	movlw	255
 31030  005D56  0100               	movlb	0	; () banked
 31031  005D58  1BB1               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 31032  005D5A  0E01               	movlw	1
 31033  005D5C  0100               	movlb	0	; () banked
 31034  005D5E  27AF               	addwf	___ftadd@f2& (0+255),f,b
 31035  005D60  0E00               	movlw	0
 31036  005D62  0100               	movlb	0	; () banked
 31037  005D64  23B0               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 31038  005D66  0E00               	movlw	0
 31039  005D68  0100               	movlb	0	; () banked
 31040  005D6A  23B1               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 31041                           
 31042                           ; BSR set to: 0
 31043  005D6C  0E01               	movlw	1
 31044  005D6E  0100               	movlb	0	; () banked
 31045  005D70  6FB5               	movwf	___ftadd@sign& (0+255),b
 31046  005D72  D000               	goto	l12673
 31047  005D74                     l12673:
 31048                           
 31049                           ; BSR set to: 0
 31050  005D74  C0AF  F079         	movff	___ftadd@f2,___ftpack@arg
 31051  005D78  C0B0  F07A         	movff	___ftadd@f2+1,___ftpack@arg+1
 31052  005D7C  C0B1  F07B         	movff	___ftadd@f2+2,___ftpack@arg+2
 31053  005D80  C0B7  F07C         	movff	___ftadd@exp1,___ftpack@exp
 31054  005D84  C0B5  F07D         	movff	___ftadd@sign,___ftpack@sign
 31055  005D88  ECFC  F03A         	call	___ftpack	;wreg free
 31056  005D8C  C079  F0AC         	movff	?___ftpack,?___ftadd
 31057  005D90  C07A  F0AD         	movff	?___ftpack+1,?___ftadd+1
 31058  005D94  C07B  F0AE         	movff	?___ftpack+2,?___ftadd+2
 31059  005D98  0012               	return	
 31060  005D9A  0012               	return		;funcret
 31061  005D9C                     __end_of___ftadd:
 31062                           	opt stack 0
 31063                           tblptru	equ	0xFF8
 31064                           tblptrh	equ	0xFF7
 31065                           tblptrl	equ	0xFF6
 31066                           tablat	equ	0xFF5
 31067                           prodh	equ	0xFF4
 31068                           prodl	equ	0xFF3
 31069                           intcon	equ	0xFF2
 31070                           intcon2	equ	0xFF1
 31071                           indf0	equ	0xFEF
 31072                           postinc0	equ	0xFEE
 31073                           fsr0h	equ	0xFEA
 31074                           fsr0l	equ	0xFE9
 31075                           wreg	equ	0xFE8
 31076                           indf1	equ	0xFE7
 31077                           postdec1	equ	0xFE5
 31078                           fsr1h	equ	0xFE2
 31079                           fsr1l	equ	0xFE1
 31080                           indf2	equ	0xFDF
 31081                           postinc2	equ	0xFDE
 31082                           postdec2	equ	0xFDD
 31083                           fsr2h	equ	0xFDA
 31084                           fsr2l	equ	0xFD9
 31085                           status	equ	0xFD8
 31086                           
 31087 ;; *************** function ___ftpack *****************
 31088 ;; Defined at:
 31089 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 31090 ;; Parameters:    Size  Location     Type
 31091 ;;  arg             3   25[BANK0 ] unsigned um
 31092 ;;  exp             1   28[BANK0 ] unsigned char 
 31093 ;;  sign            1   29[BANK0 ] unsigned char 
 31094 ;; Auto vars:     Size  Location     Type
 31095 ;;		None
 31096 ;; Return value:  Size  Location     Type
 31097 ;;                  3   25[BANK0 ] float 
 31098 ;; Registers used:
 31099 ;;		wreg, status,2, status,0
 31100 ;; Tracked objects:
 31101 ;;		On entry : 0/0
 31102 ;;		On exit  : 0/0
 31103 ;;		Unchanged: 0/0
 31104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31105 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31107 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31108 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31109 ;;Total ram usage:        8 bytes
 31110 ;; Hardware stack levels used:    1
 31111 ;; Hardware stack levels required when called:    6
 31112 ;; This function calls:
 31113 ;;		Nothing
 31114 ;; This function is called by:
 31115 ;;		___altoft
 31116 ;;		___ftadd
 31117 ;;		___ftdiv
 31118 ;;		___ftmul
 31119 ;;		___lltoft
 31120 ;;		___lwtoft
 31121 ;; This function uses a non-reentrant model
 31122 ;;
 31123                           
 31124                           	psect	text75
 31125  0075F8                     __ptext75:
 31126                           	opt stack 0
 31127  0075F8                     ___ftpack:
 31128                           	opt stack 22
 31129                           
 31130                           ;incstack = 0
 31131  0075F8  0100               	movlb	0	; () banked
 31132  0075FA  517C               	movf	___ftpack@exp& (0+255),w,b
 31133  0075FC  0100               	movlb	0	; () banked
 31134  0075FE  B4D8               	btfsc	status,2,c
 31135  007600  D008               	goto	l12521
 31136                           
 31137                           ; BSR set to: 0
 31138  007602  0100               	movlb	0	; () banked
 31139  007604  5179               	movf	___ftpack@arg& (0+255),w,b
 31140  007606  0100               	movlb	0	; () banked
 31141  007608  117A               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 31142  00760A  0100               	movlb	0	; () banked
 31143  00760C  117B               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 31144  00760E  A4D8               	btfss	status,2,c
 31145  007610  D013               	goto	l12527
 31146  007612                     l12521:
 31147                           
 31148                           ; BSR set to: 0
 31149  007612  0E00               	movlw	0
 31150  007614  0100               	movlb	0	; () banked
 31151  007616  6F79               	movwf	?___ftpack& (0+255),b
 31152  007618  0E00               	movlw	0
 31153  00761A  0100               	movlb	0	; () banked
 31154  00761C  6F7A               	movwf	(?___ftpack+1)& (0+255),b
 31155  00761E  0E00               	movlw	0
 31156  007620  0100               	movlb	0	; () banked
 31157  007622  6F7B               	movwf	(?___ftpack+2)& (0+255),b
 31158                           
 31159                           ; BSR set to: 0
 31160  007624  0012               	return	
 31161                           
 31162                           ; BSR set to: 0
 31163  007626  D008               	goto	l12527
 31164  007628                     l12525:
 31165                           
 31166                           ; BSR set to: 0
 31167  007628  0100               	movlb	0	; () banked
 31168  00762A  2B7C               	incf	___ftpack@exp& (0+255),f,b
 31169  00762C  0100               	movlb	0	; () banked
 31170  00762E  90D8               	bcf	status,0,c
 31171  007630  337B               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 31172  007632  337A               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 31173  007634  3379               	rrcf	___ftpack@arg& (0+255),f,b
 31174  007636  D000               	goto	l12527
 31175  007638                     l12527:
 31176                           
 31177                           ; BSR set to: 0
 31178  007638  0E00               	movlw	0
 31179  00763A  0100               	movlb	0	; () banked
 31180  00763C  1579               	andwf	___ftpack@arg& (0+255),w,b
 31181  00763E  0100               	movlb	0	; () banked
 31182  007640  6F7E               	movwf	??___ftpack& (0+255),b
 31183  007642  0E00               	movlw	0
 31184  007644  0100               	movlb	0	; () banked
 31185  007646  157A               	andwf	(___ftpack@arg+1)& (0+255),w,b
 31186  007648  0100               	movlb	0	; () banked
 31187  00764A  6F7F               	movwf	(??___ftpack+1)& (0+255),b
 31188  00764C  0EFE               	movlw	254
 31189  00764E  0100               	movlb	0	; () banked
 31190  007650  157B               	andwf	(___ftpack@arg+2)& (0+255),w,b
 31191  007652  0100               	movlb	0	; () banked
 31192  007654  6F80               	movwf	(??___ftpack+2)& (0+255),b
 31193  007656  0100               	movlb	0	; () banked
 31194  007658  517E               	movf	??___ftpack& (0+255),w,b
 31195  00765A  0100               	movlb	0	; () banked
 31196  00765C  117F               	iorwf	(??___ftpack+1)& (0+255),w,b
 31197  00765E  0100               	movlb	0	; () banked
 31198  007660  1180               	iorwf	(??___ftpack+2)& (0+255),w,b
 31199  007662  B4D8               	btfsc	status,2,c
 31200  007664  D013               	goto	l12533
 31201  007666  D7E0               	goto	l12525
 31202                           
 31203                           ; BSR set to: 0
 31204  007668  D011               	goto	l12533
 31205  00766A                     l12529:
 31206                           
 31207                           ; BSR set to: 0
 31208  00766A  0100               	movlb	0	; () banked
 31209  00766C  2B7C               	incf	___ftpack@exp& (0+255),f,b
 31210                           
 31211                           ; BSR set to: 0
 31212  00766E  0E01               	movlw	1
 31213  007670  0100               	movlb	0	; () banked
 31214  007672  2779               	addwf	___ftpack@arg& (0+255),f,b
 31215  007674  0E00               	movlw	0
 31216  007676  0100               	movlb	0	; () banked
 31217  007678  237A               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 31218  00767A  0E00               	movlw	0
 31219  00767C  0100               	movlb	0	; () banked
 31220  00767E  237B               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 31221  007680  0100               	movlb	0	; () banked
 31222  007682  90D8               	bcf	status,0,c
 31223  007684  337B               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 31224  007686  337A               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 31225  007688  3379               	rrcf	___ftpack@arg& (0+255),f,b
 31226  00768A  D000               	goto	l12533
 31227  00768C                     l12533:
 31228                           
 31229                           ; BSR set to: 0
 31230  00768C  0E00               	movlw	0
 31231  00768E  0100               	movlb	0	; () banked
 31232  007690  1579               	andwf	___ftpack@arg& (0+255),w,b
 31233  007692  0100               	movlb	0	; () banked
 31234  007694  6F7E               	movwf	??___ftpack& (0+255),b
 31235  007696  0E00               	movlw	0
 31236  007698  0100               	movlb	0	; () banked
 31237  00769A  157A               	andwf	(___ftpack@arg+1)& (0+255),w,b
 31238  00769C  0100               	movlb	0	; () banked
 31239  00769E  6F7F               	movwf	(??___ftpack+1)& (0+255),b
 31240  0076A0  0EFF               	movlw	255
 31241  0076A2  0100               	movlb	0	; () banked
 31242  0076A4  157B               	andwf	(___ftpack@arg+2)& (0+255),w,b
 31243  0076A6  0100               	movlb	0	; () banked
 31244  0076A8  6F80               	movwf	(??___ftpack+2)& (0+255),b
 31245  0076AA  0100               	movlb	0	; () banked
 31246  0076AC  517E               	movf	??___ftpack& (0+255),w,b
 31247  0076AE  0100               	movlb	0	; () banked
 31248  0076B0  117F               	iorwf	(??___ftpack+1)& (0+255),w,b
 31249  0076B2  0100               	movlb	0	; () banked
 31250  0076B4  1180               	iorwf	(??___ftpack+2)& (0+255),w,b
 31251  0076B6  B4D8               	btfsc	status,2,c
 31252  0076B8  D00A               	goto	l12537
 31253  0076BA  D7D7               	goto	l12529
 31254                           
 31255                           ; BSR set to: 0
 31256  0076BC  D008               	goto	l12537
 31257  0076BE                     l12535:
 31258                           
 31259                           ; BSR set to: 0
 31260  0076BE  0100               	movlb	0	; () banked
 31261  0076C0  077C               	decf	___ftpack@exp& (0+255),f,b
 31262  0076C2  0100               	movlb	0	; () banked
 31263  0076C4  90D8               	bcf	status,0,c
 31264  0076C6  3779               	rlcf	___ftpack@arg& (0+255),f,b
 31265  0076C8  377A               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 31266  0076CA  377B               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 31267  0076CC  D000               	goto	l12537
 31268  0076CE                     l12537:
 31269                           
 31270                           ; BSR set to: 0
 31271  0076CE  0100               	movlb	0	; () banked
 31272  0076D0  BF7A               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 31273  0076D2  D005               	goto	l2661
 31274                           
 31275                           ; BSR set to: 0
 31276  0076D4  0E02               	movlw	2
 31277  0076D6  0100               	movlb	0	; () banked
 31278  0076D8  617C               	cpfslt	___ftpack@exp& (0+255),b
 31279  0076DA  D7F1               	goto	l12535
 31280  0076DC  D000               	goto	l2661
 31281  0076DE                     l2661:
 31282                           
 31283                           ; BSR set to: 0
 31284  0076DE  0100               	movlb	0	; () banked
 31285  0076E0  B17C               	btfsc	___ftpack@exp& (0+255),0,b
 31286  0076E2  D003               	goto	l12543
 31287                           
 31288                           ; BSR set to: 0
 31289  0076E4  0100               	movlb	0	; () banked
 31290  0076E6  9F7A               	bcf	(___ftpack@arg+1)& (0+255),7,b
 31291  0076E8  D000               	goto	l12543
 31292  0076EA                     l12543:
 31293                           
 31294                           ; BSR set to: 0
 31295  0076EA  0100               	movlb	0	; () banked
 31296  0076EC  90D8               	bcf	status,0,c
 31297  0076EE  337C               	rrcf	___ftpack@exp& (0+255),f,b
 31298  0076F0  0100               	movlb	0	; () banked
 31299  0076F2  517C               	movf	___ftpack@exp& (0+255),w,b
 31300  0076F4  0100               	movlb	0	; () banked
 31301  0076F6  137B               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 31302                           
 31303                           ; BSR set to: 0
 31304  0076F8  0100               	movlb	0	; () banked
 31305  0076FA  517D               	movf	___ftpack@sign& (0+255),w,b
 31306  0076FC  0100               	movlb	0	; () banked
 31307  0076FE  B4D8               	btfsc	status,2,c
 31308  007700  D003               	goto	l12549
 31309                           
 31310                           ; BSR set to: 0
 31311  007702  0100               	movlb	0	; () banked
 31312  007704  8F7B               	bsf	(___ftpack@arg+2)& (0+255),7,b
 31313  007706  D000               	goto	l12549
 31314  007708                     l12549:
 31315                           
 31316                           ; BSR set to: 0
 31317  007708  C079  F079         	movff	___ftpack@arg,?___ftpack
 31318  00770C  C07A  F07A         	movff	___ftpack@arg+1,?___ftpack+1
 31319  007710  C07B  F07B         	movff	___ftpack@arg+2,?___ftpack+2
 31320  007714  0012               	return	
 31321                           
 31322                           ; BSR set to: 0
 31323                           
 31324                           ; BSR set to: 0
 31325  007716  0012               	return		;funcret
 31326  007718                     __end_of___ftpack:
 31327                           	opt stack 0
 31328                           tblptru	equ	0xFF8
 31329                           tblptrh	equ	0xFF7
 31330                           tblptrl	equ	0xFF6
 31331                           tablat	equ	0xFF5
 31332                           prodh	equ	0xFF4
 31333                           prodl	equ	0xFF3
 31334                           intcon	equ	0xFF2
 31335                           intcon2	equ	0xFF1
 31336                           indf0	equ	0xFEF
 31337                           postinc0	equ	0xFEE
 31338                           fsr0h	equ	0xFEA
 31339                           fsr0l	equ	0xFE9
 31340                           wreg	equ	0xFE8
 31341                           indf1	equ	0xFE7
 31342                           postdec1	equ	0xFE5
 31343                           fsr1h	equ	0xFE2
 31344                           fsr1l	equ	0xFE1
 31345                           indf2	equ	0xFDF
 31346                           postinc2	equ	0xFDE
 31347                           postdec2	equ	0xFDD
 31348                           fsr2h	equ	0xFDA
 31349                           fsr2l	equ	0xFD9
 31350                           status	equ	0xFD8
 31351                           
 31352 ;; *************** function ___ftneg *****************
 31353 ;; Defined at:
 31354 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
 31355 ;; Parameters:    Size  Location     Type
 31356 ;;  f1              3   25[BANK0 ] float 
 31357 ;; Auto vars:     Size  Location     Type
 31358 ;;		None
 31359 ;; Return value:  Size  Location     Type
 31360 ;;                  3   25[BANK0 ] float 
 31361 ;; Registers used:
 31362 ;;		wreg, status,2, status,0
 31363 ;; Tracked objects:
 31364 ;;		On entry : 0/0
 31365 ;;		On exit  : 0/0
 31366 ;;		Unchanged: 0/0
 31367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31368 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31371 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31372 ;;Total ram usage:        3 bytes
 31373 ;; Hardware stack levels used:    1
 31374 ;; Hardware stack levels required when called:    6
 31375 ;; This function calls:
 31376 ;;		Nothing
 31377 ;; This function is called by:
 31378 ;;		_sprintf
 31379 ;; This function uses a non-reentrant model
 31380 ;;
 31381                           
 31382                           	psect	text76
 31383  009258                     __ptext76:
 31384                           	opt stack 0
 31385  009258                     ___ftneg:
 31386                           	opt stack 22
 31387                           
 31388                           ; BSR set to: 0
 31389                           ;incstack = 0
 31390  009258  0100               	movlb	0	; () banked
 31391  00925A  5179               	movf	___ftneg@f1& (0+255),w,b
 31392  00925C  0100               	movlb	0	; () banked
 31393  00925E  117A               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 31394  009260  0100               	movlb	0	; () banked
 31395  009262  117B               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 31396  009264  B4D8               	btfsc	status,2,c
 31397  009266  D009               	goto	l2764
 31398                           
 31399                           ; BSR set to: 0
 31400  009268  0E00               	movlw	0
 31401  00926A  0100               	movlb	0	; () banked
 31402  00926C  1B79               	xorwf	___ftneg@f1& (0+255),f,b
 31403  00926E  0E00               	movlw	0
 31404  009270  0100               	movlb	0	; () banked
 31405  009272  1B7A               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 31406  009274  0E80               	movlw	128
 31407  009276  0100               	movlb	0	; () banked
 31408  009278  1B7B               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 31409  00927A                     l2764:
 31410                           
 31411                           ; BSR set to: 0
 31412  00927A  C079  F079         	movff	___ftneg@f1,?___ftneg
 31413  00927E  C07A  F07A         	movff	___ftneg@f1+1,?___ftneg+1
 31414  009282  C07B  F07B         	movff	___ftneg@f1+2,?___ftneg+2
 31415                           
 31416                           ; BSR set to: 0
 31417  009286  0012               	return		;funcret
 31418  009288                     __end_of___ftneg:
 31419                           	opt stack 0
 31420                           tblptru	equ	0xFF8
 31421                           tblptrh	equ	0xFF7
 31422                           tblptrl	equ	0xFF6
 31423                           tablat	equ	0xFF5
 31424                           prodh	equ	0xFF4
 31425                           prodl	equ	0xFF3
 31426                           intcon	equ	0xFF2
 31427                           intcon2	equ	0xFF1
 31428                           indf0	equ	0xFEF
 31429                           postinc0	equ	0xFEE
 31430                           fsr0h	equ	0xFEA
 31431                           fsr0l	equ	0xFE9
 31432                           wreg	equ	0xFE8
 31433                           indf1	equ	0xFE7
 31434                           postdec1	equ	0xFE5
 31435                           fsr1h	equ	0xFE2
 31436                           fsr1l	equ	0xFE1
 31437                           indf2	equ	0xFDF
 31438                           postinc2	equ	0xFDE
 31439                           postdec2	equ	0xFDD
 31440                           fsr2h	equ	0xFDA
 31441                           fsr2l	equ	0xFD9
 31442                           status	equ	0xFD8
 31443                           
 31444 ;; *************** function ___ftge *****************
 31445 ;; Defined at:
 31446 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
 31447 ;; Parameters:    Size  Location     Type
 31448 ;;  ff1             3   25[BANK0 ] float 
 31449 ;;  ff2             3   28[BANK0 ] float 
 31450 ;; Auto vars:     Size  Location     Type
 31451 ;;		None
 31452 ;; Return value:  Size  Location     Type
 31453 ;;		None               void
 31454 ;; Registers used:
 31455 ;;		wreg, status,2, status,0
 31456 ;; Tracked objects:
 31457 ;;		On entry : 0/0
 31458 ;;		On exit  : 0/0
 31459 ;;		Unchanged: 0/0
 31460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31461 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31463 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31464 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31465 ;;Total ram usage:        9 bytes
 31466 ;; Hardware stack levels used:    1
 31467 ;; Hardware stack levels required when called:    6
 31468 ;; This function calls:
 31469 ;;		Nothing
 31470 ;; This function is called by:
 31471 ;;		_main
 31472 ;;		_sprintf
 31473 ;; This function uses a non-reentrant model
 31474 ;;
 31475                           
 31476                           	psect	text77
 31477  007D24                     __ptext77:
 31478                           	opt stack 0
 31479  007D24                     ___ftge:
 31480                           	opt stack 24
 31481                           
 31482                           ; BSR set to: 0
 31483                           ;incstack = 0
 31484  007D24  0100               	movlb	0	; () banked
 31485  007D26  AF7B               	btfss	(___ftge@ff1+2)& (0+255),7,b
 31486  007D28  D01E               	goto	l13153
 31487                           
 31488                           ; BSR set to: 0
 31489  007D2A  C079  F07F         	movff	___ftge@ff1,??___ftge
 31490  007D2E  C07A  F080         	movff	___ftge@ff1+1,??___ftge+1
 31491  007D32  C07B  F081         	movff	___ftge@ff1+2,??___ftge+2
 31492  007D36  0100               	movlb	0	; () banked
 31493  007D38  1F7F               	comf	??___ftge& (0+255),f,b
 31494  007D3A  1F80               	comf	(??___ftge+1)& (0+255),f,b
 31495  007D3C  1F81               	comf	(??___ftge+2)& (0+255),f,b
 31496  007D3E  2B7F               	incf	??___ftge& (0+255),f,b
 31497  007D40  0E00               	movlw	0
 31498  007D42  2380               	addwfc	(??___ftge+1)& (0+255),f,b
 31499  007D44  2381               	addwfc	(??___ftge+2)& (0+255),f,b
 31500  007D46  0E00               	movlw	0
 31501  007D48  0100               	movlb	0	; () banked
 31502  007D4A  257F               	addwf	??___ftge& (0+255),w,b
 31503  007D4C  0100               	movlb	0	; () banked
 31504  007D4E  6F79               	movwf	___ftge@ff1& (0+255),b
 31505  007D50  0E00               	movlw	0
 31506  007D52  0100               	movlb	0	; () banked
 31507  007D54  2180               	addwfc	(??___ftge+1)& (0+255),w,b
 31508  007D56  0100               	movlb	0	; () banked
 31509  007D58  6F7A               	movwf	(___ftge@ff1+1)& (0+255),b
 31510  007D5A  0E80               	movlw	128
 31511  007D5C  0100               	movlb	0	; () banked
 31512  007D5E  2181               	addwfc	(??___ftge+2)& (0+255),w,b
 31513  007D60  0100               	movlb	0	; () banked
 31514  007D62  6F7B               	movwf	(___ftge@ff1+2)& (0+255),b
 31515  007D64  D000               	goto	l13153
 31516  007D66                     l13153:
 31517                           
 31518                           ; BSR set to: 0
 31519  007D66  0100               	movlb	0	; () banked
 31520  007D68  AF7E               	btfss	(___ftge@ff2+2)& (0+255),7,b
 31521  007D6A  D01E               	goto	l13157
 31522                           
 31523                           ; BSR set to: 0
 31524  007D6C  C07C  F07F         	movff	___ftge@ff2,??___ftge
 31525  007D70  C07D  F080         	movff	___ftge@ff2+1,??___ftge+1
 31526  007D74  C07E  F081         	movff	___ftge@ff2+2,??___ftge+2
 31527  007D78  0100               	movlb	0	; () banked
 31528  007D7A  1F7F               	comf	??___ftge& (0+255),f,b
 31529  007D7C  1F80               	comf	(??___ftge+1)& (0+255),f,b
 31530  007D7E  1F81               	comf	(??___ftge+2)& (0+255),f,b
 31531  007D80  2B7F               	incf	??___ftge& (0+255),f,b
 31532  007D82  0E00               	movlw	0
 31533  007D84  2380               	addwfc	(??___ftge+1)& (0+255),f,b
 31534  007D86  2381               	addwfc	(??___ftge+2)& (0+255),f,b
 31535  007D88  0E00               	movlw	0
 31536  007D8A  0100               	movlb	0	; () banked
 31537  007D8C  257F               	addwf	??___ftge& (0+255),w,b
 31538  007D8E  0100               	movlb	0	; () banked
 31539  007D90  6F7C               	movwf	___ftge@ff2& (0+255),b
 31540  007D92  0E00               	movlw	0
 31541  007D94  0100               	movlb	0	; () banked
 31542  007D96  2180               	addwfc	(??___ftge+1)& (0+255),w,b
 31543  007D98  0100               	movlb	0	; () banked
 31544  007D9A  6F7D               	movwf	(___ftge@ff2+1)& (0+255),b
 31545  007D9C  0E80               	movlw	128
 31546  007D9E  0100               	movlb	0	; () banked
 31547  007DA0  2181               	addwfc	(??___ftge+2)& (0+255),w,b
 31548  007DA2  0100               	movlb	0	; () banked
 31549  007DA4  6F7E               	movwf	(___ftge@ff2+2)& (0+255),b
 31550  007DA6  D000               	goto	l13157
 31551  007DA8                     l13157:
 31552                           
 31553                           ; BSR set to: 0
 31554  007DA8  0E00               	movlw	0
 31555  007DAA  0100               	movlb	0	; () banked
 31556  007DAC  1B79               	xorwf	___ftge@ff1& (0+255),f,b
 31557  007DAE  0E00               	movlw	0
 31558  007DB0  0100               	movlb	0	; () banked
 31559  007DB2  1B7A               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 31560  007DB4  0E80               	movlw	128
 31561  007DB6  0100               	movlb	0	; () banked
 31562  007DB8  1B7B               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 31563                           
 31564                           ; BSR set to: 0
 31565  007DBA  0E00               	movlw	0
 31566  007DBC  0100               	movlb	0	; () banked
 31567  007DBE  1B7C               	xorwf	___ftge@ff2& (0+255),f,b
 31568  007DC0  0E00               	movlw	0
 31569  007DC2  0100               	movlb	0	; () banked
 31570  007DC4  1B7D               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 31571  007DC6  0E80               	movlw	128
 31572  007DC8  0100               	movlb	0	; () banked
 31573  007DCA  1B7E               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 31574  007DCC  0100               	movlb	0	; () banked
 31575  007DCE  517C               	movf	___ftge@ff2& (0+255),w,b
 31576  007DD0  0100               	movlb	0	; () banked
 31577  007DD2  5D79               	subwf	___ftge@ff1& (0+255),w,b
 31578  007DD4  0100               	movlb	0	; () banked
 31579  007DD6  517D               	movf	(___ftge@ff2+1)& (0+255),w,b
 31580  007DD8  0100               	movlb	0	; () banked
 31581  007DDA  597A               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 31582  007DDC  0100               	movlb	0	; () banked
 31583  007DDE  517E               	movf	(___ftge@ff2+2)& (0+255),w,b
 31584  007DE0  0100               	movlb	0	; () banked
 31585  007DE2  597B               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 31586  007DE4  B0D8               	btfsc	status,0,c
 31587  007DE6  D002               	goto	l13163
 31588                           
 31589                           ; BSR set to: 0
 31590  007DE8  90D8               	bcf	status,0,c
 31591  007DEA  0012               	return	
 31592  007DEC                     l13163:
 31593                           
 31594                           ; BSR set to: 0
 31595  007DEC  80D8               	bsf	status,0,c
 31596                           
 31597                           ; BSR set to: 0
 31598  007DEE  0012               	return	
 31599                           
 31600                           ; BSR set to: 0
 31601                           
 31602                           ; BSR set to: 0
 31603  007DF0  0012               	return		;funcret
 31604  007DF2                     __end_of___ftge:
 31605                           	opt stack 0
 31606                           tblptru	equ	0xFF8
 31607                           tblptrh	equ	0xFF7
 31608                           tblptrl	equ	0xFF6
 31609                           tablat	equ	0xFF5
 31610                           prodh	equ	0xFF4
 31611                           prodl	equ	0xFF3
 31612                           intcon	equ	0xFF2
 31613                           intcon2	equ	0xFF1
 31614                           indf0	equ	0xFEF
 31615                           postinc0	equ	0xFEE
 31616                           fsr0h	equ	0xFEA
 31617                           fsr0l	equ	0xFE9
 31618                           wreg	equ	0xFE8
 31619                           indf1	equ	0xFE7
 31620                           postdec1	equ	0xFE5
 31621                           fsr1h	equ	0xFE2
 31622                           fsr1l	equ	0xFE1
 31623                           indf2	equ	0xFDF
 31624                           postinc2	equ	0xFDE
 31625                           postdec2	equ	0xFDD
 31626                           fsr2h	equ	0xFDA
 31627                           fsr2l	equ	0xFD9
 31628                           status	equ	0xFD8
 31629                           
 31630 ;; *************** function _EnterCommandMode *****************
 31631 ;; Defined at:
 31632 ;;		line 116 in file "Bluetooth.c"
 31633 ;; Parameters:    Size  Location     Type
 31634 ;;		None
 31635 ;; Auto vars:     Size  Location     Type
 31636 ;;  count           1   34[BANK0 ] unsigned char 
 31637 ;; Return value:  Size  Location     Type
 31638 ;;                  1    wreg      unsigned char 
 31639 ;; Registers used:
 31640 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31641 ;; Tracked objects:
 31642 ;;		On entry : 0/0
 31643 ;;		On exit  : 0/0
 31644 ;;		Unchanged: 0/0
 31645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31647 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31649 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31650 ;;Total ram usage:        1 bytes
 31651 ;; Hardware stack levels used:    1
 31652 ;; Hardware stack levels required when called:    8
 31653 ;; This function calls:
 31654 ;;		_BlueConnected
 31655 ;;		_ResetBlue
 31656 ;;		_StringContains
 31657 ;;		_UARTstring
 31658 ;;		_cleanBuffer
 31659 ;;		_delayUS
 31660 ;; This function is called by:
 31661 ;;		_BluetoothInitialSetup
 31662 ;; This function uses a non-reentrant model
 31663 ;;
 31664                           
 31665                           	psect	text78
 31666  007DF2                     __ptext78:
 31667                           	opt stack 0
 31668  007DF2                     _EnterCommandMode:
 31669                           	opt stack 19
 31670                           
 31671                           ;Bluetooth.c: 118: unsigned char count = 0;
 31672                           
 31673                           ; BSR set to: 0
 31674                           ;incstack = 0
 31675  007DF2  0E00               	movlw	0
 31676  007DF4  0100               	movlb	0	; () banked
 31677  007DF6  6F82               	movwf	EnterCommandMode@count& (0+255),b
 31678                           
 31679                           ;Bluetooth.c: 119: while(BlueConnected())
 31680  007DF8  D00B               	goto	l13391
 31681  007DFA                     l13381:
 31682                           
 31683                           ;Bluetooth.c: 120: {
 31684                           ;Bluetooth.c: 121: ResetBlue();
 31685  007DFA  EC13  F049         	call	_ResetBlue	;wreg free
 31686                           
 31687                           ;Bluetooth.c: 122: count++;
 31688  007DFE  0100               	movlb	0	; () banked
 31689  007E00  2B82               	incf	EnterCommandMode@count& (0+255),f,b
 31690                           
 31691                           ; BSR set to: 0
 31692                           ;Bluetooth.c: 123: if(count > 4)
 31693  007E02  0E04               	movlw	4
 31694  007E04  0100               	movlb	0	; () banked
 31695  007E06  6582               	cpfsgt	EnterCommandMode@count& (0+255),b
 31696  007E08  D003               	goto	l13391
 31697                           
 31698                           ; BSR set to: 0
 31699                           ;Bluetooth.c: 124: {
 31700                           ;Bluetooth.c: 126: return 0;
 31701  007E0A  0E00               	movlw	0
 31702                           
 31703                           ; BSR set to: 0
 31704  007E0C  0012               	return	
 31705                           
 31706                           ; BSR set to: 0
 31707  007E0E  D000               	goto	l13391
 31708  007E10                     l13391:
 31709                           
 31710                           ; BSR set to: 0
 31711  007E10  EC79  F04A         	call	_BlueConnected	;wreg free
 31712  007E14  0900               	iorlw	0
 31713  007E16  A4D8               	btfss	status,2,c
 31714  007E18  D7F0               	goto	l13381
 31715                           
 31716                           ;Bluetooth.c: 127: }
 31717                           ;Bluetooth.c: 128: }
 31718                           ;Bluetooth.c: 130: delayUS(50000);
 31719  007E1A  0E50               	movlw	80
 31720  007E1C  0100               	movlb	0	; () banked
 31721  007E1E  6F79               	movwf	delayUS@US& (0+255),b
 31722  007E20  0EC3               	movlw	195
 31723  007E22  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 31724  007E24  0E00               	movlw	0
 31725  007E26  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 31726  007E28  0E00               	movlw	0
 31727  007E2A  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 31728  007E2C  EC57  F047         	call	_delayUS	;wreg free
 31729                           
 31730                           ;Bluetooth.c: 131: UARTstring((unsigned char *)"$$$");
 31731  007E30  0EE7               	movlw	low STR_2
 31732  007E32  0100               	movlb	0	; () banked
 31733  007E34  6F7A               	movwf	UARTstring@data& (0+255),b
 31734  007E36  0EFC               	movlw	high STR_2
 31735  007E38  0100               	movlb	0	; () banked
 31736  007E3A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 31737  007E3C  ECD3  F046         	call	_UARTstring	;wreg free
 31738                           
 31739                           ;Bluetooth.c: 132: delayUS(50000);
 31740  007E40  0E50               	movlw	80
 31741  007E42  0100               	movlb	0	; () banked
 31742  007E44  6F79               	movwf	delayUS@US& (0+255),b
 31743  007E46  0EC3               	movlw	195
 31744  007E48  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 31745  007E4A  0E00               	movlw	0
 31746  007E4C  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 31747  007E4E  0E00               	movlw	0
 31748  007E50  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 31749  007E52  EC57  F047         	call	_delayUS	;wreg free
 31750                           
 31751                           ;Bluetooth.c: 133: if(StringContains(CommandString,(unsigned char *)"CMD"))
 31752  007E56  0E00               	movlw	low _CommandString
 31753  007E58  0100               	movlb	0	; () banked
 31754  007E5A  6F79               	movwf	StringContains@This& (0+255),b
 31755  007E5C  0E05               	movlw	high _CommandString
 31756  007E5E  0100               	movlb	0	; () banked
 31757  007E60  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 31758  007E62  0EF3               	movlw	low STR_3
 31759  007E64  0100               	movlb	0	; () banked
 31760  007E66  6F7B               	movwf	StringContains@That& (0+255),b
 31761  007E68  0EFC               	movlw	high STR_3
 31762  007E6A  0100               	movlb	0	; () banked
 31763  007E6C  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 31764  007E6E  EC31  F041         	call	_StringContains	;wreg free
 31765  007E72  0900               	iorlw	0
 31766  007E74  B4D8               	btfsc	status,2,c
 31767  007E76  D010               	goto	l13409
 31768                           
 31769                           ;Bluetooth.c: 134: {
 31770                           ;Bluetooth.c: 135: cleanBuffer(CommandString,CommandStringPos);
 31771  007E78  0E00               	movlw	low _CommandString
 31772  007E7A  0100               	movlb	0	; () banked
 31773  007E7C  6F79               	movwf	cleanBuffer@data& (0+255),b
 31774  007E7E  0E05               	movlw	high _CommandString
 31775  007E80  0100               	movlb	0	; () banked
 31776  007E82  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 31777  007E84  C026  F07B         	movff	_CommandStringPos,cleanBuffer@count
 31778  007E88  0100               	movlb	0	; () banked
 31779  007E8A  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 31780  007E8C  ECA6  F046         	call	_cleanBuffer	;wreg free
 31781                           
 31782                           ;Bluetooth.c: 136: CommandStringPos = 0;
 31783  007E90  0E00               	movlw	0
 31784  007E92  6E26               	movwf	_CommandStringPos,c
 31785                           
 31786                           ;Bluetooth.c: 137: return 1;
 31787  007E94  0E01               	movlw	1
 31788  007E96  0012               	return	
 31789  007E98                     l13409:
 31790                           
 31791                           ;Bluetooth.c: 138: }
 31792                           ;Bluetooth.c: 139: cleanBuffer(CommandString,CommandStringPos);
 31793  007E98  0E00               	movlw	low _CommandString
 31794  007E9A  0100               	movlb	0	; () banked
 31795  007E9C  6F79               	movwf	cleanBuffer@data& (0+255),b
 31796  007E9E  0E05               	movlw	high _CommandString
 31797  007EA0  0100               	movlb	0	; () banked
 31798  007EA2  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 31799  007EA4  C026  F07B         	movff	_CommandStringPos,cleanBuffer@count
 31800  007EA8  0100               	movlb	0	; () banked
 31801  007EAA  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 31802  007EAC  ECA6  F046         	call	_cleanBuffer	;wreg free
 31803                           
 31804                           ;Bluetooth.c: 140: CommandStringPos = 0;
 31805  007EB0  0E00               	movlw	0
 31806  007EB2  6E26               	movwf	_CommandStringPos,c
 31807                           
 31808                           ;Bluetooth.c: 141: return 0;
 31809  007EB4  0E00               	movlw	0
 31810  007EB6  0012               	return	
 31811  007EB8  0012               	return		;funcret
 31812  007EBA                     __end_of_EnterCommandMode:
 31813                           	opt stack 0
 31814                           tblptru	equ	0xFF8
 31815                           tblptrh	equ	0xFF7
 31816                           tblptrl	equ	0xFF6
 31817                           tablat	equ	0xFF5
 31818                           prodh	equ	0xFF4
 31819                           prodl	equ	0xFF3
 31820                           intcon	equ	0xFF2
 31821                           intcon2	equ	0xFF1
 31822                           indf0	equ	0xFEF
 31823                           postinc0	equ	0xFEE
 31824                           fsr0h	equ	0xFEA
 31825                           fsr0l	equ	0xFE9
 31826                           wreg	equ	0xFE8
 31827                           indf1	equ	0xFE7
 31828                           postdec1	equ	0xFE5
 31829                           fsr1h	equ	0xFE2
 31830                           fsr1l	equ	0xFE1
 31831                           indf2	equ	0xFDF
 31832                           postinc2	equ	0xFDE
 31833                           postdec2	equ	0xFDD
 31834                           fsr2h	equ	0xFDA
 31835                           fsr2l	equ	0xFD9
 31836                           status	equ	0xFD8
 31837                           
 31838 ;; *************** function _cleanBuffer *****************
 31839 ;; Defined at:
 31840 ;;		line 127 in file "MISC.c"
 31841 ;; Parameters:    Size  Location     Type
 31842 ;;  data            2   25[BANK0 ] PTR unsigned char 
 31843 ;;		 -> UseBluetooth@rfchannelSTR(10), UseBluetooth@buf(100), BluetoothInitialSetup@RFchannel(10), BluetoothInitialSetup
      +@buf(50), 
 31844 ;;		 -> CommandString(255), StringAddEqual@temp(255), ReceivedString(255), main@BluetoothString(255), 
 31845 ;;  count           2   27[BANK0 ] int 
 31846 ;; Auto vars:     Size  Location     Type
 31847 ;;  i               1   32[BANK0 ] unsigned char 
 31848 ;; Return value:  Size  Location     Type
 31849 ;;		None               void
 31850 ;; Registers used:
 31851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31852 ;; Tracked objects:
 31853 ;;		On entry : 0/0
 31854 ;;		On exit  : 0/0
 31855 ;;		Unchanged: 0/0
 31856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31857 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31858 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31859 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31860 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31861 ;;Total ram usage:        8 bytes
 31862 ;; Hardware stack levels used:    1
 31863 ;; Hardware stack levels required when called:    6
 31864 ;; This function calls:
 31865 ;;		Nothing
 31866 ;; This function is called by:
 31867 ;;		_main
 31868 ;;		_Init_System
 31869 ;;		_BufferCopy
 31870 ;;		_StringAddEqual
 31871 ;;		_InitBluetooth
 31872 ;;		_EnterCommandMode
 31873 ;;		_BluetoothInitialSetup
 31874 ;;		_UseBluetooth
 31875 ;; This function uses a non-reentrant model
 31876 ;;
 31877                           
 31878                           	psect	text79
 31879  008D4C                     __ptext79:
 31880                           	opt stack 0
 31881  008D4C                     _cleanBuffer:
 31882                           	opt stack 24
 31883                           
 31884                           ;MISC.c: 129: unsigned char i=0;
 31885                           
 31886                           ;incstack = 0
 31887  008D4C  0E00               	movlw	0
 31888  008D4E  0100               	movlb	0	; () banked
 31889  008D50  6F80               	movwf	cleanBuffer@i& (0+255),b
 31890                           
 31891                           ;MISC.c: 130: for(i=0; i<count;i++)
 31892  008D52  0E00               	movlw	0
 31893  008D54  0100               	movlb	0	; () banked
 31894  008D56  6F80               	movwf	cleanBuffer@i& (0+255),b
 31895  008D58  D010               	goto	l12811
 31896  008D5A                     l12807:
 31897                           
 31898                           ; BSR set to: 0
 31899                           ;MISC.c: 131: {
 31900                           ;MISC.c: 132: data[i]= 0;
 31901  008D5A  0100               	movlb	0	; () banked
 31902  008D5C  5180               	movf	cleanBuffer@i& (0+255),w,b
 31903  008D5E  0D01               	mullw	1
 31904  008D60  50F3               	movf	prodl,w,c
 31905  008D62  0100               	movlb	0	; () banked
 31906  008D64  2579               	addwf	cleanBuffer@data& (0+255),w,b
 31907  008D66  6ED9               	movwf	fsr2l,c
 31908  008D68  50F4               	movf	prodh,w,c
 31909  008D6A  0100               	movlb	0	; () banked
 31910  008D6C  217A               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
 31911  008D6E  6EDA               	movwf	fsr2h,c
 31912  008D70  0E00               	movlw	0
 31913  008D72  6EDF               	movwf	indf2,c
 31914                           
 31915                           ; BSR set to: 0
 31916  008D74  0100               	movlb	0	; () banked
 31917  008D76  2B80               	incf	cleanBuffer@i& (0+255),f,b
 31918  008D78  D000               	goto	l12811
 31919  008D7A                     l12811:
 31920                           
 31921                           ; BSR set to: 0
 31922  008D7A  0100               	movlb	0	; () banked
 31923  008D7C  5180               	movf	cleanBuffer@i& (0+255),w,b
 31924  008D7E  0100               	movlb	0	; () banked
 31925  008D80  6F7D               	movwf	??_cleanBuffer& (0+255),b
 31926  008D82  6B7E               	clrf	(??_cleanBuffer+1)& (0+255),b
 31927  008D84  0100               	movlb	0	; () banked
 31928  008D86  517B               	movf	cleanBuffer@count& (0+255),w,b
 31929  008D88  0100               	movlb	0	; () banked
 31930  008D8A  5D7D               	subwf	??_cleanBuffer& (0+255),w,b
 31931  008D8C  0100               	movlb	0	; () banked
 31932  008D8E  517E               	movf	(??_cleanBuffer+1)& (0+255),w,b
 31933  008D90  0A80               	xorlw	128
 31934  008D92  0100               	movlb	0	; () banked
 31935  008D94  6F7F               	movwf	(??_cleanBuffer+2)& (0+255),b
 31936  008D96  0100               	movlb	0	; () banked
 31937  008D98  517C               	movf	(cleanBuffer@count+1)& (0+255),w,b
 31938  008D9A  0A80               	xorlw	128
 31939  008D9C  0100               	movlb	0	; () banked
 31940  008D9E  597F               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
 31941  008DA0  A0D8               	btfss	status,0,c
 31942  008DA2  D7DB               	goto	l12807
 31943                           
 31944                           ; BSR set to: 0
 31945                           
 31946                           ; BSR set to: 0
 31947  008DA4  0012               	return		;funcret
 31948  008DA6                     __end_of_cleanBuffer:
 31949                           	opt stack 0
 31950                           tblptru	equ	0xFF8
 31951                           tblptrh	equ	0xFF7
 31952                           tblptrl	equ	0xFF6
 31953                           tablat	equ	0xFF5
 31954                           prodh	equ	0xFF4
 31955                           prodl	equ	0xFF3
 31956                           intcon	equ	0xFF2
 31957                           intcon2	equ	0xFF1
 31958                           indf0	equ	0xFEF
 31959                           postinc0	equ	0xFEE
 31960                           fsr0h	equ	0xFEA
 31961                           fsr0l	equ	0xFE9
 31962                           wreg	equ	0xFE8
 31963                           indf1	equ	0xFE7
 31964                           postdec1	equ	0xFE5
 31965                           fsr1h	equ	0xFE2
 31966                           fsr1l	equ	0xFE1
 31967                           indf2	equ	0xFDF
 31968                           postinc2	equ	0xFDE
 31969                           postdec2	equ	0xFDD
 31970                           fsr2h	equ	0xFDA
 31971                           fsr2l	equ	0xFD9
 31972                           status	equ	0xFD8
 31973                           
 31974 ;; *************** function _UARTstring *****************
 31975 ;; Defined at:
 31976 ;;		line 202 in file "UART.c"
 31977 ;; Parameters:    Size  Location     Type
 31978 ;;  data            2   26[BANK0 ] PTR unsigned char 
 31979 ;;		 -> STR_147(28), STR_90(13), STR_79(32), STR_68(14), 
 31980 ;;		 -> SYNTAX_ERR(14), STR_18(5), STR_16(5), STR_14(6), 
 31981 ;;		 -> STR_12(6), STR_10(9), STR_8(21), STR_6(10), 
 31982 ;;		 -> BluetoothInitialSetup@buf(50), STR_2(4), CRLN(3), ReceivedString(255), 
 31983 ;; Auto vars:     Size  Location     Type
 31984 ;;		None
 31985 ;; Return value:  Size  Location     Type
 31986 ;;		None               void
 31987 ;; Registers used:
 31988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31989 ;; Tracked objects:
 31990 ;;		On entry : 0/0
 31991 ;;		On exit  : 0/0
 31992 ;;		Unchanged: 0/0
 31993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31994 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31997 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31998 ;;Total ram usage:        2 bytes
 31999 ;; Hardware stack levels used:    1
 32000 ;; Hardware stack levels required when called:    7
 32001 ;; This function calls:
 32002 ;;		_UARTchar
 32003 ;; This function is called by:
 32004 ;;		_main
 32005 ;;		_Init_System
 32006 ;;		_UARTstringCRLN
 32007 ;;		_UARTcommandMenu
 32008 ;;		_EnterCommandMode
 32009 ;;		_BluetoothInitialSetup
 32010 ;;		_UseBluetooth
 32011 ;;		_WaitForIRsignal
 32012 ;; This function uses a non-reentrant model
 32013 ;;
 32014                           
 32015                           	psect	text80
 32016  008DA6                     __ptext80:
 32017                           	opt stack 0
 32018  008DA6                     _UARTstring:
 32019                           	opt stack 20
 32020                           
 32021                           ;UART.c: 204: while(*data != 0)
 32022                           
 32023                           ; BSR set to: 0
 32024                           ;incstack = 0
 32025  008DA6  D017               	goto	l12819
 32026  008DA8                     l12815:
 32027                           
 32028                           ;UART.c: 205: {
 32029                           ;UART.c: 206: UARTchar(*data);
 32030  008DA8  C07A  FFF6         	movff	UARTstring@data,tblptrl
 32031  008DAC  C07B  FFF7         	movff	UARTstring@data+1,tblptrh
 32032  008DB0  0E00               	movlw	low (__mediumconst shr (0+16))
 32033  008DB2  6EF8               	movwf	tblptru,c
 32034  008DB4  0E0F               	movlw	(high __ramtop+-1)
 32035  008DB6  64F7               	cpfsgt	tblptrh,c
 32036  008DB8  D003               	bra	u15087
 32037  008DBA  0008               	tblrd		*
 32038  008DBC  50F5               	movf	tablat,w,c
 32039  008DBE  D005               	bra	u15080
 32040  008DC0                     u15087:
 32041  008DC0  CFF6 FFE9          	movff	tblptrl,fsr0l
 32042  008DC4  CFF7 FFEA          	movff	tblptrh,fsr0h
 32043  008DC8  50EF               	movf	indf0,w,c
 32044  008DCA                     u15080:
 32045  008DCA  ECBF  F049         	call	_UARTchar
 32046                           
 32047                           ;UART.c: 207: *data++;
 32048  008DCE  0100               	movlb	0	; () banked
 32049  008DD0  4B7A               	infsnz	UARTstring@data& (0+255),f,b
 32050  008DD2  2B7B               	incf	(UARTstring@data+1)& (0+255),f,b
 32051  008DD4  D000               	goto	l12819
 32052  008DD6                     l12819:
 32053  008DD6  C07A  FFF6         	movff	UARTstring@data,tblptrl
 32054  008DDA  C07B  FFF7         	movff	UARTstring@data+1,tblptrh
 32055  008DDE  0E00               	movlw	low (__mediumconst shr (0+16))
 32056  008DE0  6EF8               	movwf	tblptru,c
 32057  008DE2  0E0F               	movlw	(high __ramtop+-1)
 32058  008DE4  64F7               	cpfsgt	tblptrh,c
 32059  008DE6  D003               	bra	u15097
 32060  008DE8  0008               	tblrd		*
 32061  008DEA  50F5               	movf	tablat,w,c
 32062  008DEC  D005               	bra	u15090
 32063  008DEE                     u15097:
 32064  008DEE  CFF6 FFE9          	movff	tblptrl,fsr0l
 32065  008DF2  CFF7 FFEA          	movff	tblptrh,fsr0h
 32066  008DF6  50EF               	movf	indf0,w,c
 32067  008DF8                     u15090:
 32068  008DF8  0900               	iorlw	0
 32069  008DFA  A4D8               	btfss	status,2,c
 32070  008DFC  D7D5               	goto	l12815
 32071  008DFE  0012               	return		;funcret
 32072  008E00                     __end_of_UARTstring:
 32073                           	opt stack 0
 32074                           tblptru	equ	0xFF8
 32075                           tblptrh	equ	0xFF7
 32076                           tblptrl	equ	0xFF6
 32077                           tablat	equ	0xFF5
 32078                           prodh	equ	0xFF4
 32079                           prodl	equ	0xFF3
 32080                           intcon	equ	0xFF2
 32081                           intcon2	equ	0xFF1
 32082                           indf0	equ	0xFEF
 32083                           postinc0	equ	0xFEE
 32084                           fsr0h	equ	0xFEA
 32085                           fsr0l	equ	0xFE9
 32086                           wreg	equ	0xFE8
 32087                           indf1	equ	0xFE7
 32088                           postdec1	equ	0xFE5
 32089                           fsr1h	equ	0xFE2
 32090                           fsr1l	equ	0xFE1
 32091                           indf2	equ	0xFDF
 32092                           postinc2	equ	0xFDE
 32093                           postdec2	equ	0xFDD
 32094                           fsr2h	equ	0xFDA
 32095                           fsr2l	equ	0xFD9
 32096                           status	equ	0xFD8
 32097                           
 32098 ;; *************** function _UARTchar *****************
 32099 ;; Defined at:
 32100 ;;		line 188 in file "UART.c"
 32101 ;; Parameters:    Size  Location     Type
 32102 ;;  data            1    wreg     unsigned char 
 32103 ;; Auto vars:     Size  Location     Type
 32104 ;;  data            1   25[BANK0 ] unsigned char 
 32105 ;; Return value:  Size  Location     Type
 32106 ;;		None               void
 32107 ;; Registers used:
 32108 ;;		wreg, status,2
 32109 ;; Tracked objects:
 32110 ;;		On entry : 0/0
 32111 ;;		On exit  : 0/0
 32112 ;;		Unchanged: 0/0
 32113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32117 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32118 ;;Total ram usage:        1 bytes
 32119 ;; Hardware stack levels used:    1
 32120 ;; Hardware stack levels required when called:    6
 32121 ;; This function calls:
 32122 ;;		Nothing
 32123 ;; This function is called by:
 32124 ;;		_main
 32125 ;;		_Init_System
 32126 ;;		_UARTstring
 32127 ;;		_UARTstringCRLN
 32128 ;;		_UARTcommandMenu
 32129 ;;		_UseBluetooth
 32130 ;;		_WaitForIRsignal
 32131 ;; This function uses a non-reentrant model
 32132 ;;
 32133                           
 32134                           	psect	text81
 32135  00937E                     __ptext81:
 32136                           	opt stack 0
 32137  00937E                     _UARTchar:
 32138                           	opt stack 20
 32139                           
 32140                           ;incstack = 0
 32141                           ;UARTchar@data stored from wreg
 32142  00937E  0100               	movlb	0	; () banked
 32143  009380  6F79               	movwf	UARTchar@data& (0+255),b
 32144                           
 32145                           ; BSR set to: 0
 32146                           ;UART.c: 190: if(data != 0)
 32147  009382  0100               	movlb	0	; () banked
 32148  009384  5179               	movf	UARTchar@data& (0+255),w,b
 32149  009386  0100               	movlb	0	; () banked
 32150  009388  B4D8               	btfsc	status,2,c
 32151  00938A  0012               	return	
 32152                           
 32153                           ; BSR set to: 0
 32154                           ;UART.c: 191: {
 32155                           ;UART.c: 192: TXREG = data;
 32156  00938C  C079  FFAD         	movff	UARTchar@data,4013	;volatile
 32157                           
 32158                           ;UART.c: 193: while(!TXSTAbits.TRMT);
 32159  009390  D000               	goto	l646
 32160  009392                     l646:
 32161                           
 32162                           ; BSR set to: 0
 32163  009392  B2AC               	btfsc	4012,1,c	;volatile
 32164  009394  0012               	return	
 32165  009396  D7FD               	goto	l646
 32166                           
 32167                           ; BSR set to: 0
 32168  009398  0012               	return	
 32169                           
 32170                           ; BSR set to: 0
 32171                           
 32172                           ; BSR set to: 0
 32173  00939A  0012               	return		;funcret
 32174  00939C                     __end_of_UARTchar:
 32175                           	opt stack 0
 32176                           tblptru	equ	0xFF8
 32177                           tblptrh	equ	0xFF7
 32178                           tblptrl	equ	0xFF6
 32179                           tablat	equ	0xFF5
 32180                           prodh	equ	0xFF4
 32181                           prodl	equ	0xFF3
 32182                           intcon	equ	0xFF2
 32183                           intcon2	equ	0xFF1
 32184                           indf0	equ	0xFEF
 32185                           postinc0	equ	0xFEE
 32186                           fsr0h	equ	0xFEA
 32187                           fsr0l	equ	0xFE9
 32188                           wreg	equ	0xFE8
 32189                           indf1	equ	0xFE7
 32190                           postdec1	equ	0xFE5
 32191                           fsr1h	equ	0xFE2
 32192                           fsr1l	equ	0xFE1
 32193                           indf2	equ	0xFDF
 32194                           postinc2	equ	0xFDE
 32195                           postdec2	equ	0xFDD
 32196                           fsr2h	equ	0xFDA
 32197                           fsr2l	equ	0xFD9
 32198                           status	equ	0xFD8
 32199                           
 32200 ;; *************** function _StringContains *****************
 32201 ;; Defined at:
 32202 ;;		line 252 in file "MISC.c"
 32203 ;; Parameters:    Size  Location     Type
 32204 ;;  This            2   25[BANK0 ] PTR unsigned char 
 32205 ;;		 -> CommandString(255), main@BluetoothString(255), 
 32206 ;;  That            2   27[BANK0 ] PTR const unsigned char 
 32207 ;;		 -> STR_35(2), STR_19(4), STR_15(4), STR_13(4), 
 32208 ;;		 -> STR_11(4), STR_9(4), STR_7(4), STR_5(4), 
 32209 ;;		 -> BluetoothInitialSetup@buf(50), STR_3(4), 
 32210 ;; Auto vars:     Size  Location     Type
 32211 ;;  begin           1   30[BANK0 ] unsigned char 
 32212 ;; Return value:  Size  Location     Type
 32213 ;;                  1    wreg      unsigned char 
 32214 ;; Registers used:
 32215 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 32216 ;; Tracked objects:
 32217 ;;		On entry : 0/0
 32218 ;;		On exit  : 0/0
 32219 ;;		Unchanged: 0/0
 32220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32221 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32222 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32223 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32224 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32225 ;;Total ram usage:        6 bytes
 32226 ;; Hardware stack levels used:    1
 32227 ;; Hardware stack levels required when called:    6
 32228 ;; This function calls:
 32229 ;;		Nothing
 32230 ;; This function is called by:
 32231 ;;		_EnterCommandMode
 32232 ;;		_BluetoothInitialSetup
 32233 ;;		_UseBluetooth
 32234 ;; This function uses a non-reentrant model
 32235 ;;
 32236                           
 32237                           	psect	text82
 32238  008262                     __ptext82:
 32239                           	opt stack 0
 32240  008262                     _StringContains:
 32241                           	opt stack 23
 32242                           
 32243                           ;MISC.c: 254: unsigned char begin = 0;
 32244                           
 32245                           ; BSR set to: 0
 32246                           ;incstack = 0
 32247  008262  0E00               	movlw	0
 32248  008264  0100               	movlb	0	; () banked
 32249  008266  6F7E               	movwf	StringContains@begin& (0+255),b
 32250                           
 32251                           ;MISC.c: 256: while(*This != 0)
 32252  008268  D04B               	goto	l12849
 32253  00826A                     l12823:
 32254                           
 32255                           ; BSR set to: 0
 32256                           ;MISC.c: 257: {
 32257                           ;MISC.c: 258: if(*This == *That)
 32258  00826A  C079  FFD9         	movff	StringContains@This,fsr2l
 32259  00826E  C07A  FFDA         	movff	StringContains@This+1,fsr2h
 32260  008272  50DF               	movf	indf2,w,c
 32261  008274  0100               	movlb	0	; () banked
 32262  008276  6F7D               	movwf	??_StringContains& (0+255),b
 32263  008278  C07B  FFF6         	movff	StringContains@That,tblptrl
 32264  00827C  C07C  FFF7         	movff	StringContains@That+1,tblptrh
 32265  008280  0E00               	movlw	low (__mediumconst shr (0+16))
 32266  008282  6EF8               	movwf	tblptru,c
 32267  008284  0E0F               	movlw	(high __ramtop+-1)
 32268  008286  64F7               	cpfsgt	tblptrh,c
 32269  008288  D003               	bra	u15117
 32270  00828A  0008               	tblrd		*
 32271  00828C  50F5               	movf	tablat,w,c
 32272  00828E  D005               	bra	u15110
 32273  008290                     u15117:
 32274  008290  CFF6 FFE9          	movff	tblptrl,fsr0l
 32275  008294  CFF7 FFEA          	movff	tblptrh,fsr0h
 32276  008298  50EF               	movf	indf0,w,c
 32277  00829A                     u15110:
 32278  00829A  0100               	movlb	0	; () banked
 32279  00829C  197D               	xorwf	??_StringContains& (0+255),w,b
 32280  00829E  A4D8               	btfss	status,2,c
 32281  0082A0  D026               	goto	l12841
 32282                           
 32283                           ; BSR set to: 0
 32284                           ;MISC.c: 259: {
 32285                           ;MISC.c: 260: begin = 1;
 32286  0082A2  0E01               	movlw	1
 32287  0082A4  0100               	movlb	0	; () banked
 32288  0082A6  6F7E               	movwf	StringContains@begin& (0+255),b
 32289                           
 32290                           ; BSR set to: 0
 32291                           ;MISC.c: 261: That++;
 32292  0082A8  0100               	movlb	0	; () banked
 32293  0082AA  4B7B               	infsnz	StringContains@That& (0+255),f,b
 32294  0082AC  2B7C               	incf	(StringContains@That+1)& (0+255),f,b
 32295                           
 32296                           ; BSR set to: 0
 32297                           ;MISC.c: 262: if(*That == 0)
 32298  0082AE  C07B  FFF6         	movff	StringContains@That,tblptrl
 32299  0082B2  C07C  FFF7         	movff	StringContains@That+1,tblptrh
 32300  0082B6  0E00               	movlw	low (__mediumconst shr (0+16))
 32301  0082B8  6EF8               	movwf	tblptru,c
 32302  0082BA  0E0F               	movlw	(high __ramtop+-1)
 32303  0082BC  64F7               	cpfsgt	tblptrh,c
 32304  0082BE  D003               	bra	u15137
 32305  0082C0  0008               	tblrd		*
 32306  0082C2  50F5               	movf	tablat,w,c
 32307  0082C4  D005               	bra	u15130
 32308  0082C6                     u15137:
 32309  0082C6  CFF6 FFE9          	movff	tblptrl,fsr0l
 32310  0082CA  CFF7 FFEA          	movff	tblptrh,fsr0h
 32311  0082CE  50EF               	movf	indf0,w,c
 32312  0082D0                     u15130:
 32313  0082D0  0900               	iorlw	0
 32314  0082D2  A4D8               	btfss	status,2,c
 32315  0082D4  D002               	goto	l12835
 32316                           
 32317                           ;MISC.c: 263: {
 32318                           ;MISC.c: 264: return 1;
 32319  0082D6  0E01               	movlw	1
 32320  0082D8  0012               	return	
 32321  0082DA                     l12835:
 32322                           
 32323                           ;MISC.c: 265: }
 32324                           ;MISC.c: 266: if(*This == 0)
 32325  0082DA  C079  FFD9         	movff	StringContains@This,fsr2l
 32326  0082DE  C07A  FFDA         	movff	StringContains@This+1,fsr2h
 32327  0082E2  50DF               	movf	indf2,w,c
 32328  0082E4  A4D8               	btfss	status,2,c
 32329  0082E6  D008               	goto	l12847
 32330                           
 32331                           ;MISC.c: 267: {
 32332                           ;MISC.c: 268: return 0;
 32333  0082E8  0E00               	movlw	0
 32334  0082EA  0012               	return	
 32335                           
 32336                           ;MISC.c: 269: }
 32337                           ;MISC.c: 270: }
 32338  0082EC  D005               	goto	l12847
 32339  0082EE                     l12841:
 32340                           
 32341                           ;MISC.c: 271: else
 32342                           ;MISC.c: 272: {
 32343                           ;MISC.c: 273: if(begin == 1)
 32344  0082EE  0100               	movlb	0	; () banked
 32345  0082F0  057E               	decf	StringContains@begin& (0+255),w,b
 32346  0082F2  D7F8               	goto	L24
 32347                           
 32348                           ; BSR set to: 0
 32349                           
 32350                           ; BSR set to: 0
 32351                           ;MISC.c: 274: {
 32352                           ;MISC.c: 275: return 0;
 32353  0082F4  0012               	return	
 32354                           
 32355                           ; BSR set to: 0
 32356  0082F6  D000               	goto	l12847
 32357  0082F8                     l12847:
 32358                           
 32359                           ;MISC.c: 276: }
 32360                           ;MISC.c: 277: }
 32361                           ;MISC.c: 278: This++;
 32362  0082F8  0100               	movlb	0	; () banked
 32363  0082FA  4B79               	infsnz	StringContains@This& (0+255),f,b
 32364  0082FC  2B7A               	incf	(StringContains@This+1)& (0+255),f,b
 32365  0082FE  D000               	goto	l12849
 32366  008300                     l12849:
 32367                           
 32368                           ; BSR set to: 0
 32369  008300  C079  FFD9         	movff	StringContains@This,fsr2l
 32370  008304  C07A  FFDA         	movff	StringContains@This+1,fsr2h
 32371  008308  50DF               	movf	indf2,w,c
 32372  00830A  A4D8               	btfss	status,2,c
 32373  00830C  D7AE               	goto	l12823
 32374                           
 32375                           ; BSR set to: 0
 32376                           ;MISC.c: 279: }
 32377                           ;MISC.c: 280: return 0;
 32378                           
 32379                           ; BSR set to: 0
 32380  00830E  0E00               	movlw	0
 32381  008310  0012               	return	
 32382                           
 32383                           ; BSR set to: 0
 32384  008312  0012               	return		;funcret
 32385  008314                     __end_of_StringContains:
 32386                           	opt stack 0
 32387                           tblptru	equ	0xFF8
 32388                           tblptrh	equ	0xFF7
 32389                           tblptrl	equ	0xFF6
 32390                           tablat	equ	0xFF5
 32391                           prodh	equ	0xFF4
 32392                           prodl	equ	0xFF3
 32393                           intcon	equ	0xFF2
 32394                           intcon2	equ	0xFF1
 32395                           indf0	equ	0xFEF
 32396                           postinc0	equ	0xFEE
 32397                           fsr0h	equ	0xFEA
 32398                           fsr0l	equ	0xFE9
 32399                           wreg	equ	0xFE8
 32400                           indf1	equ	0xFE7
 32401                           postdec1	equ	0xFE5
 32402                           fsr1h	equ	0xFE2
 32403                           fsr1l	equ	0xFE1
 32404                           indf2	equ	0xFDF
 32405                           postinc2	equ	0xFDE
 32406                           postdec2	equ	0xFDD
 32407                           fsr2h	equ	0xFDA
 32408                           fsr2l	equ	0xFD9
 32409                           status	equ	0xFD8
 32410                           
 32411 ;; *************** function _ResetBlue *****************
 32412 ;; Defined at:
 32413 ;;		line 103 in file "Bluetooth.c"
 32414 ;; Parameters:    Size  Location     Type
 32415 ;;		None
 32416 ;; Auto vars:     Size  Location     Type
 32417 ;;		None
 32418 ;; Return value:  Size  Location     Type
 32419 ;;		None               void
 32420 ;; Registers used:
 32421 ;;		wreg, status,2, status,0, cstack
 32422 ;; Tracked objects:
 32423 ;;		On entry : 0/0
 32424 ;;		On exit  : 0/0
 32425 ;;		Unchanged: 0/0
 32426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32431 ;;Total ram usage:        0 bytes
 32432 ;; Hardware stack levels used:    1
 32433 ;; Hardware stack levels required when called:    7
 32434 ;; This function calls:
 32435 ;;		_delayUS
 32436 ;; This function is called by:
 32437 ;;		_InitBluetooth
 32438 ;;		_EnterCommandMode
 32439 ;; This function uses a non-reentrant model
 32440 ;;
 32441                           
 32442                           	psect	text83
 32443  009226                     __ptext83:
 32444                           	opt stack 0
 32445  009226                     _ResetBlue:
 32446                           	opt stack 21
 32447                           
 32448                           ;Bluetooth.c: 105: LATA &= ~0x04;
 32449                           
 32450                           ;incstack = 0
 32451  009226  9489               	bcf	3977,2,c	;volatile
 32452                           
 32453                           ;Bluetooth.c: 106: delayUS(50000);
 32454  009228  0E50               	movlw	80
 32455  00922A  0100               	movlb	0	; () banked
 32456  00922C  6F79               	movwf	delayUS@US& (0+255),b
 32457  00922E  0EC3               	movlw	195
 32458  009230  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 32459  009232  0E00               	movlw	0
 32460  009234  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 32461  009236  0E00               	movlw	0
 32462  009238  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 32463  00923A  EC57  F047         	call	_delayUS	;wreg free
 32464                           
 32465                           ;Bluetooth.c: 107: LATA |= 0x04;
 32466  00923E  8489               	bsf	3977,2,c	;volatile
 32467                           
 32468                           ;Bluetooth.c: 108: delayUS(50000);
 32469  009240  0E50               	movlw	80
 32470  009242  0100               	movlb	0	; () banked
 32471  009244  6F79               	movwf	delayUS@US& (0+255),b
 32472  009246  0EC3               	movlw	195
 32473  009248  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 32474  00924A  0E00               	movlw	0
 32475  00924C  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 32476  00924E  0E00               	movlw	0
 32477  009250  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 32478  009252  EC57  F047         	call	_delayUS	;wreg free
 32479  009256  0012               	return		;funcret
 32480  009258                     __end_of_ResetBlue:
 32481                           	opt stack 0
 32482                           tblptru	equ	0xFF8
 32483                           tblptrh	equ	0xFF7
 32484                           tblptrl	equ	0xFF6
 32485                           tablat	equ	0xFF5
 32486                           prodh	equ	0xFF4
 32487                           prodl	equ	0xFF3
 32488                           intcon	equ	0xFF2
 32489                           intcon2	equ	0xFF1
 32490                           indf0	equ	0xFEF
 32491                           postinc0	equ	0xFEE
 32492                           fsr0h	equ	0xFEA
 32493                           fsr0l	equ	0xFE9
 32494                           wreg	equ	0xFE8
 32495                           indf1	equ	0xFE7
 32496                           postdec1	equ	0xFE5
 32497                           fsr1h	equ	0xFE2
 32498                           fsr1l	equ	0xFE1
 32499                           indf2	equ	0xFDF
 32500                           postinc2	equ	0xFDE
 32501                           postdec2	equ	0xFDD
 32502                           fsr2h	equ	0xFDA
 32503                           fsr2l	equ	0xFD9
 32504                           status	equ	0xFD8
 32505                           
 32506 ;; *************** function _delayUS *****************
 32507 ;; Defined at:
 32508 ;;		line 51 in file "MISC.c"
 32509 ;; Parameters:    Size  Location     Type
 32510 ;;  US              4   25[BANK0 ] long 
 32511 ;; Auto vars:     Size  Location     Type
 32512 ;;  i               4   30[BANK0 ] long 
 32513 ;; Return value:  Size  Location     Type
 32514 ;;		None               void
 32515 ;; Registers used:
 32516 ;;		wreg, status,2, status,0
 32517 ;; Tracked objects:
 32518 ;;		On entry : 0/0
 32519 ;;		On exit  : 0/0
 32520 ;;		Unchanged: 0/0
 32521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32522 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32523 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32524 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32525 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32526 ;;Total ram usage:        9 bytes
 32527 ;; Hardware stack levels used:    1
 32528 ;; Hardware stack levels required when called:    6
 32529 ;; This function calls:
 32530 ;;		Nothing
 32531 ;; This function is called by:
 32532 ;;		_main
 32533 ;;		_ReadVoltage
 32534 ;;		_InternalADC_Read
 32535 ;;		_UseIRCode
 32536 ;;		_SendNEC_wait
 32537 ;;		_ReadCodeButtons
 32538 ;;		_ResetBlue
 32539 ;;		_EnterCommandMode
 32540 ;;		_BluetoothInitialSetup
 32541 ;;		_UseBluetooth
 32542 ;;		_WaitForIRsignal
 32543 ;;		_CalibrateDelay
 32544 ;; This function uses a non-reentrant model
 32545 ;;
 32546                           
 32547                           	psect	text84
 32548  008EAE                     __ptext84:
 32549                           	opt stack 0
 32550  008EAE                     _delayUS:
 32551                           	opt stack 24
 32552                           
 32553                           ;MISC.c: 53: long i;
 32554                           ;MISC.c: 54: for(i=0; i<US; i += 2)
 32555                           
 32556                           ;incstack = 0
 32557  008EAE  0E00               	movlw	0
 32558  008EB0  0100               	movlb	0	; () banked
 32559  008EB2  6F7E               	movwf	delayUS@i& (0+255),b
 32560  008EB4  0E00               	movlw	0
 32561  008EB6  6F7F               	movwf	(delayUS@i+1)& (0+255),b
 32562  008EB8  0E00               	movlw	0
 32563  008EBA  6F80               	movwf	(delayUS@i+2)& (0+255),b
 32564  008EBC  0E00               	movlw	0
 32565  008EBE  6F81               	movwf	(delayUS@i+3)& (0+255),b
 32566  008EC0  D008               	goto	l298
 32567  008EC2                     l299:
 32568                           
 32569                           ; BSR set to: 0
 32570                           ;MISC.c: 55: {
 32571                           ;MISC.c: 56: __nop();
 32572  008EC2  F000               	nop	
 32573  008EC4  0E02               	movlw	2
 32574  008EC6  0100               	movlb	0	; () banked
 32575  008EC8  277E               	addwf	delayUS@i& (0+255),f,b
 32576  008ECA  0E00               	movlw	0
 32577  008ECC  237F               	addwfc	(delayUS@i+1)& (0+255),f,b
 32578  008ECE  2380               	addwfc	(delayUS@i+2)& (0+255),f,b
 32579  008ED0  2381               	addwfc	(delayUS@i+3)& (0+255),f,b
 32580  008ED2                     l298:
 32581                           
 32582                           ; BSR set to: 0
 32583  008ED2  0100               	movlb	0	; () banked
 32584  008ED4  5179               	movf	delayUS@US& (0+255),w,b
 32585  008ED6  0100               	movlb	0	; () banked
 32586  008ED8  5D7E               	subwf	delayUS@i& (0+255),w,b
 32587  008EDA  0100               	movlb	0	; () banked
 32588  008EDC  517A               	movf	(delayUS@US+1)& (0+255),w,b
 32589  008EDE  0100               	movlb	0	; () banked
 32590  008EE0  597F               	subwfb	(delayUS@i+1)& (0+255),w,b
 32591  008EE2  0100               	movlb	0	; () banked
 32592  008EE4  517B               	movf	(delayUS@US+2)& (0+255),w,b
 32593  008EE6  0100               	movlb	0	; () banked
 32594  008EE8  5980               	subwfb	(delayUS@i+2)& (0+255),w,b
 32595  008EEA  0100               	movlb	0	; () banked
 32596  008EEC  5181               	movf	(delayUS@i+3)& (0+255),w,b
 32597  008EEE  0A80               	xorlw	128
 32598  008EF0  0100               	movlb	0	; () banked
 32599  008EF2  6F7D               	movwf	??_delayUS& (0+255),b
 32600  008EF4  0100               	movlb	0	; () banked
 32601  008EF6  517C               	movf	(delayUS@US+3)& (0+255),w,b
 32602  008EF8  0A80               	xorlw	128
 32603  008EFA  0100               	movlb	0	; () banked
 32604  008EFC  597D               	subwfb	??_delayUS& (0+255),w,b
 32605  008EFE  A0D8               	btfss	status,0,c
 32606  008F00  D7E0               	goto	l299
 32607                           
 32608                           ; BSR set to: 0
 32609                           
 32610                           ; BSR set to: 0
 32611  008F02  0012               	return		;funcret
 32612  008F04                     __end_of_delayUS:
 32613                           	opt stack 0
 32614                           tblptru	equ	0xFF8
 32615                           tblptrh	equ	0xFF7
 32616                           tblptrl	equ	0xFF6
 32617                           tablat	equ	0xFF5
 32618                           prodh	equ	0xFF4
 32619                           prodl	equ	0xFF3
 32620                           intcon	equ	0xFF2
 32621                           intcon2	equ	0xFF1
 32622                           indf0	equ	0xFEF
 32623                           postinc0	equ	0xFEE
 32624                           fsr0h	equ	0xFEA
 32625                           fsr0l	equ	0xFE9
 32626                           wreg	equ	0xFE8
 32627                           indf1	equ	0xFE7
 32628                           postdec1	equ	0xFE5
 32629                           fsr1h	equ	0xFE2
 32630                           fsr1l	equ	0xFE1
 32631                           indf2	equ	0xFDF
 32632                           postinc2	equ	0xFDE
 32633                           postdec2	equ	0xFDD
 32634                           fsr2h	equ	0xFDA
 32635                           fsr2l	equ	0xFD9
 32636                           status	equ	0xFD8
 32637                           
 32638 ;; *************** function _BlueConnected *****************
 32639 ;; Defined at:
 32640 ;;		line 88 in file "Bluetooth.c"
 32641 ;; Parameters:    Size  Location     Type
 32642 ;;		None
 32643 ;; Auto vars:     Size  Location     Type
 32644 ;;		None
 32645 ;; Return value:  Size  Location     Type
 32646 ;;                  1    wreg      unsigned char 
 32647 ;; Registers used:
 32648 ;;		wreg
 32649 ;; Tracked objects:
 32650 ;;		On entry : 0/0
 32651 ;;		On exit  : 0/0
 32652 ;;		Unchanged: 0/0
 32653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32658 ;;Total ram usage:        0 bytes
 32659 ;; Hardware stack levels used:    1
 32660 ;; Hardware stack levels required when called:    6
 32661 ;; This function calls:
 32662 ;;		Nothing
 32663 ;; This function is called by:
 32664 ;;		_EnterCommandMode
 32665 ;; This function uses a non-reentrant model
 32666 ;;
 32667                           
 32668                           	psect	text85
 32669  0094F2                     __ptext85:
 32670                           	opt stack 0
 32671  0094F2                     _BlueConnected:
 32672                           	opt stack 20
 32673                           
 32674                           ;Bluetooth.c: 91: if((PORTA & 0x02) == 0x02)
 32675                           
 32676                           ; BSR set to: 0
 32677                           ;incstack = 0
 32678  0094F2  A280               	btfss	3968,1,c	;volatile
 32679  0094F4  D002               	goto	l12943
 32680                           
 32681                           ;Bluetooth.c: 92: {
 32682                           ;Bluetooth.c: 93: return 1;
 32683  0094F6  0E01               	movlw	1
 32684  0094F8  0012               	return	
 32685  0094FA                     l12943:
 32686                           
 32687                           ;Bluetooth.c: 94: }
 32688                           ;Bluetooth.c: 95: return 0;
 32689  0094FA  0E00               	movlw	0
 32690  0094FC  0012               	return	
 32691  0094FE  0012               	return		;funcret
 32692  009500                     __end_of_BlueConnected:
 32693                           	opt stack 0
 32694                           tblptru	equ	0xFF8
 32695                           tblptrh	equ	0xFF7
 32696                           tblptrl	equ	0xFF6
 32697                           tablat	equ	0xFF5
 32698                           prodh	equ	0xFF4
 32699                           prodl	equ	0xFF3
 32700                           intcon	equ	0xFF2
 32701                           intcon2	equ	0xFF1
 32702                           indf0	equ	0xFEF
 32703                           postinc0	equ	0xFEE
 32704                           fsr0h	equ	0xFEA
 32705                           fsr0l	equ	0xFE9
 32706                           wreg	equ	0xFE8
 32707                           indf1	equ	0xFE7
 32708                           postdec1	equ	0xFE5
 32709                           fsr1h	equ	0xFE2
 32710                           fsr1l	equ	0xFE1
 32711                           indf2	equ	0xFDF
 32712                           postinc2	equ	0xFDE
 32713                           postdec2	equ	0xFDD
 32714                           fsr2h	equ	0xFDA
 32715                           fsr2l	equ	0xFD9
 32716                           status	equ	0xFD8
 32717                           
 32718 ;; *************** function _BluetoothConfigured *****************
 32719 ;; Defined at:
 32720 ;;		line 264 in file "Bluetooth.c"
 32721 ;; Parameters:    Size  Location     Type
 32722 ;;		None
 32723 ;; Auto vars:     Size  Location     Type
 32724 ;;		None
 32725 ;; Return value:  Size  Location     Type
 32726 ;;                  1    wreg      unsigned char 
 32727 ;; Registers used:
 32728 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32729 ;; Tracked objects:
 32730 ;;		On entry : 0/0
 32731 ;;		On exit  : 0/0
 32732 ;;		Unchanged: 0/0
 32733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32738 ;;Total ram usage:        0 bytes
 32739 ;; Hardware stack levels used:    1
 32740 ;; Hardware stack levels required when called:   11
 32741 ;; This function calls:
 32742 ;;		_SyncGlobalToEEPROM
 32743 ;; This function is called by:
 32744 ;;		_InitBluetooth
 32745 ;; This function uses a non-reentrant model
 32746 ;;
 32747                           
 32748                           	psect	text86
 32749  00939C                     __ptext86:
 32750                           	opt stack 0
 32751  00939C                     _BluetoothConfigured:
 32752                           	opt stack 17
 32753                           
 32754                           ;Bluetooth.c: 266: if(Global.BlueToothFlag != 1)
 32755                           
 32756                           ;incstack = 0
 32757  00939C  0104               	movlb	4	; () banked
 32758  00939E  0500               	decf	_Global& (0+255),w,b
 32759  0093A0  B4D8               	btfsc	status,2,c
 32760  0093A2  D007               	goto	l14165
 32761                           
 32762                           ; BSR set to: 4
 32763                           ;Bluetooth.c: 267: {
 32764                           ;Bluetooth.c: 268: Global.BlueToothFlag = 1;
 32765  0093A4  0E01               	movlw	1
 32766  0093A6  0104               	movlb	4	; () banked
 32767  0093A8  6F00               	movwf	_Global& (0+255),b
 32768                           
 32769                           ; BSR set to: 4
 32770                           ;Bluetooth.c: 269: SyncGlobalToEEPROM();
 32771  0093AA  ECF8  F047         	call	_SyncGlobalToEEPROM	;wreg free
 32772                           
 32773                           ;Bluetooth.c: 270: return 0;
 32774  0093AE  0E00               	movlw	0
 32775  0093B0  0012               	return	
 32776  0093B2                     l14165:
 32777                           
 32778                           ;Bluetooth.c: 271: }
 32779                           ;Bluetooth.c: 272: return 1;
 32780  0093B2  0E01               	movlw	1
 32781  0093B4  0012               	return	
 32782  0093B6  0012               	return		;funcret
 32783  0093B8                     __end_of_BluetoothConfigured:
 32784                           	opt stack 0
 32785                           tblptru	equ	0xFF8
 32786                           tblptrh	equ	0xFF7
 32787                           tblptrl	equ	0xFF6
 32788                           tablat	equ	0xFF5
 32789                           prodh	equ	0xFF4
 32790                           prodl	equ	0xFF3
 32791                           intcon	equ	0xFF2
 32792                           intcon2	equ	0xFF1
 32793                           indf0	equ	0xFEF
 32794                           postinc0	equ	0xFEE
 32795                           fsr0h	equ	0xFEA
 32796                           fsr0l	equ	0xFE9
 32797                           wreg	equ	0xFE8
 32798                           indf1	equ	0xFE7
 32799                           postdec1	equ	0xFE5
 32800                           fsr1h	equ	0xFE2
 32801                           fsr1l	equ	0xFE1
 32802                           indf2	equ	0xFDF
 32803                           postinc2	equ	0xFDE
 32804                           postdec2	equ	0xFDD
 32805                           fsr2h	equ	0xFDA
 32806                           fsr2l	equ	0xFD9
 32807                           status	equ	0xFD8
 32808                           
 32809 ;; *************** function _SyncGlobalToEEPROM *****************
 32810 ;; Defined at:
 32811 ;;		line 239 in file "EEPROM.c"
 32812 ;; Parameters:    Size  Location     Type
 32813 ;;		None
 32814 ;; Auto vars:     Size  Location     Type
 32815 ;;		None
 32816 ;; Return value:  Size  Location     Type
 32817 ;;                  1    wreg      unsigned char 
 32818 ;; Registers used:
 32819 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32820 ;; Tracked objects:
 32821 ;;		On entry : 0/0
 32822 ;;		On exit  : 0/0
 32823 ;;		Unchanged: 0/0
 32824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32829 ;;Total ram usage:        0 bytes
 32830 ;; Hardware stack levels used:    1
 32831 ;; Hardware stack levels required when called:   10
 32832 ;; This function calls:
 32833 ;;		_SetEEPROM
 32834 ;; This function is called by:
 32835 ;;		_Init_System
 32836 ;;		_SetEEPROMdefault
 32837 ;;		_UseIRCode
 32838 ;;		_BluetoothConfigured
 32839 ;;		_UseBluetooth
 32840 ;; This function uses a non-reentrant model
 32841 ;;
 32842                           
 32843                           	psect	text87
 32844  008FF0                     __ptext87:
 32845                           	opt stack 0
 32846  008FF0                     _SyncGlobalToEEPROM:
 32847                           	opt stack 19
 32848                           
 32849                           ;EEPROM.c: 242: if(!SetEEPROM(Global,0xFFFFFFFF))
 32850                           
 32851                           ;incstack = 0
 32852  008FF0  EE24  F000         	lfsr	2,_Global
 32853  008FF4  EE01  F000         	lfsr	0,SetEEPROM@Temp
 32854  008FF8  0E87               	movlw	135
 32855  008FFA                     u15851:
 32856  008FFA  CFDB FFEB          	movff	plusw2,plusw0
 32857  008FFE  06E8               	decf	wreg,f,c
 32858  009000  E2FC               	bc	u15851
 32859  009002  0EFF               	movlw	255
 32860  009004  0101               	movlb	1	; () banked
 32861  009006  6F88               	movwf	SetEEPROM@burn& (0+255),b
 32862  009008  0EFF               	movlw	255
 32863  00900A  6F89               	movwf	(SetEEPROM@burn+1)& (0+255),b
 32864  00900C  0EFF               	movlw	255
 32865  00900E  6F8A               	movwf	(SetEEPROM@burn+2)& (0+255),b
 32866  009010  0EFF               	movlw	255
 32867  009012  6F8B               	movwf	(SetEEPROM@burn+3)& (0+255),b
 32868  009014  EC2D  F032         	call	_SetEEPROM	;wreg free
 32869  009018  0101               	movlb	1	; () banked
 32870  00901A  5100               	movf	?_SetEEPROM& (0+255),w,b
 32871  00901C  0101               	movlb	1	; () banked
 32872  00901E  1101               	iorwf	(?_SetEEPROM+1)& (0+255),w,b
 32873  009020  0101               	movlb	1	; () banked
 32874  009022  1102               	iorwf	(?_SetEEPROM+2)& (0+255),w,b
 32875  009024  0101               	movlb	1	; () banked
 32876  009026  1103               	iorwf	(?_SetEEPROM+3)& (0+255),w,b
 32877  009028  A4D8               	btfss	status,2,c
 32878  00902A  D002               	goto	l13283
 32879                           
 32880                           ; BSR set to: 1
 32881                           ;EEPROM.c: 243: {
 32882                           ;EEPROM.c: 244: return 1;
 32883  00902C  0E01               	movlw	1
 32884                           
 32885                           ; BSR set to: 1
 32886  00902E  0012               	return	
 32887  009030                     l13283:
 32888                           
 32889                           ; BSR set to: 1
 32890                           ;EEPROM.c: 245: }
 32891                           ;EEPROM.c: 246: return 0;
 32892  009030  0E00               	movlw	0
 32893  009032  0012               	return	
 32894                           
 32895                           ; BSR set to: 1
 32896                           
 32897                           ; BSR set to: 1
 32898  009034  0012               	return		;funcret
 32899  009036                     __end_of_SyncGlobalToEEPROM:
 32900                           	opt stack 0
 32901                           tblptru	equ	0xFF8
 32902                           tblptrh	equ	0xFF7
 32903                           tblptrl	equ	0xFF6
 32904                           tablat	equ	0xFF5
 32905                           prodh	equ	0xFF4
 32906                           prodl	equ	0xFF3
 32907                           intcon	equ	0xFF2
 32908                           intcon2	equ	0xFF1
 32909                           indf0	equ	0xFEF
 32910                           postinc0	equ	0xFEE
 32911                           plusw0	equ	0xFEB
 32912                           fsr0h	equ	0xFEA
 32913                           fsr0l	equ	0xFE9
 32914                           wreg	equ	0xFE8
 32915                           indf1	equ	0xFE7
 32916                           postdec1	equ	0xFE5
 32917                           fsr1h	equ	0xFE2
 32918                           fsr1l	equ	0xFE1
 32919                           indf2	equ	0xFDF
 32920                           postinc2	equ	0xFDE
 32921                           postdec2	equ	0xFDD
 32922                           plusw2	equ	0xFDB
 32923                           fsr2h	equ	0xFDA
 32924                           fsr2l	equ	0xFD9
 32925                           status	equ	0xFD8
 32926                           
 32927 ;; *************** function _SetEEPROM *****************
 32928 ;; Defined at:
 32929 ;;		line 167 in file "EEPROM.c"
 32930 ;; Parameters:    Size  Location     Type
 32931 ;;  Temp          136    0[BANK1 ] struct EEdata
 32932 ;;  burn            4  136[BANK1 ] unsigned long 
 32933 ;; Auto vars:     Size  Location     Type
 32934 ;;  fail            4   81[BANK0 ] unsigned long 
 32935 ;;  j               1   89[BANK0 ] unsigned char 
 32936 ;;  i               1   88[BANK0 ] unsigned char 
 32937 ;;  k               1   87[BANK0 ] unsigned char 
 32938 ;;  Arrayspot       1   86[BANK0 ] unsigned char 
 32939 ;;  temp            1   85[BANK0 ] unsigned char 
 32940 ;; Return value:  Size  Location     Type
 32941 ;;                  4    0[BANK1 ] unsigned long 
 32942 ;; Registers used:
 32943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32944 ;; Tracked objects:
 32945 ;;		On entry : 0/0
 32946 ;;		On exit  : 0/0
 32947 ;;		Unchanged: 0/0
 32948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32949 ;;      Params:         0       0     140       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32950 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32951 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32952 ;;      Totals:         0      11     140       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32953 ;;Total ram usage:      151 bytes
 32954 ;; Hardware stack levels used:    1
 32955 ;; Hardware stack levels required when called:    9
 32956 ;; This function calls:
 32957 ;;		_SetMemoryChar
 32958 ;;		_SetMemoryLong
 32959 ;; This function is called by:
 32960 ;;		_SyncGlobalToEEPROM
 32961 ;; This function uses a non-reentrant model
 32962 ;;
 32963                           
 32964                           	psect	text88
 32965  00645A                     __ptext88:
 32966                           	opt stack 0
 32967  00645A                     _SetEEPROM:
 32968                           	opt stack 19
 32969                           
 32970                           ;EEPROM.c: 169: unsigned long fail = 0;
 32971                           
 32972                           ; BSR set to: 1
 32973                           ;incstack = 0
 32974  00645A  0E00               	movlw	0
 32975  00645C  0100               	movlb	0	; () banked
 32976  00645E  6FB1               	movwf	SetEEPROM@fail& (0+255),b
 32977  006460  0E00               	movlw	0
 32978  006462  6FB2               	movwf	(SetEEPROM@fail+1)& (0+255),b
 32979  006464  0E00               	movlw	0
 32980  006466  6FB3               	movwf	(SetEEPROM@fail+2)& (0+255),b
 32981  006468  0E00               	movlw	0
 32982  00646A  6FB4               	movwf	(SetEEPROM@fail+3)& (0+255),b
 32983                           
 32984                           ;EEPROM.c: 170: unsigned char i,j,k,temp;
 32985                           ;EEPROM.c: 171: unsigned char Arrayspot=5;
 32986  00646C  0E05               	movlw	5
 32987  00646E  0100               	movlb	0	; () banked
 32988  006470  6FB6               	movwf	SetEEPROM@Arrayspot& (0+255),b
 32989                           
 32990                           ; BSR set to: 0
 32991                           ;EEPROM.c: 173: if(burn & 0x00000001)
 32992  006472  0101               	movlb	1	; () banked
 32993  006474  A188               	btfss	SetEEPROM@burn& (0+255),0,b
 32994  006476  D00D               	goto	l12865
 32995                           
 32996                           ; BSR set to: 1
 32997                           ;EEPROM.c: 174: {
 32998                           ;EEPROM.c: 175: if(!SetMemoryChar(Temp.BlueToothFlag,0))
 32999  006478  0E00               	movlw	0
 33000  00647A  0100               	movlb	0	; () banked
 33001  00647C  6F83               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 33002  00647E  0101               	movlb	1	; () banked
 33003  006480  5100               	movf	SetEEPROM@Temp& (0+255),w,b
 33004  006482  ECBF  F048         	call	_SetMemoryChar
 33005  006486  0900               	iorlw	0
 33006  006488  A4D8               	btfss	status,2,c
 33007  00648A  D003               	goto	l12865
 33008                           
 33009                           ;EEPROM.c: 176: {
 33010                           ;EEPROM.c: 178: fail |= 0x00000001;
 33011  00648C  0100               	movlb	0	; () banked
 33012  00648E  81B1               	bsf	SetEEPROM@fail& (0+255),0,b
 33013                           
 33014                           ; BSR set to: 0
 33015  006490  D000               	goto	l12865
 33016  006492                     l12865:
 33017                           
 33018                           ;EEPROM.c: 179: }
 33019                           ;EEPROM.c: 180: }
 33020                           ;EEPROM.c: 181: if(burn & 0x00000002)
 33021  006492  0101               	movlb	1	; () banked
 33022  006494  A388               	btfss	SetEEPROM@burn& (0+255),1,b
 33023  006496  D013               	goto	l12871
 33024                           
 33025                           ; BSR set to: 1
 33026                           ;EEPROM.c: 182: {
 33027                           ;EEPROM.c: 183: if(!SetMemoryLong(Temp.SWNECcode,1))
 33028  006498  C101  F09E         	movff	SetEEPROM@Temp+1,SetMemoryLong@Data
 33029  00649C  C102  F09F         	movff	SetEEPROM@Temp+2,SetMemoryLong@Data+1
 33030  0064A0  C103  F0A0         	movff	SetEEPROM@Temp+3,SetMemoryLong@Data+2
 33031  0064A4  C104  F0A1         	movff	SetEEPROM@Temp+4,SetMemoryLong@Data+3
 33032  0064A8  0E01               	movlw	1
 33033  0064AA  0100               	movlb	0	; () banked
 33034  0064AC  6FA2               	movwf	SetMemoryLong@AddressFirst& (0+255),b
 33035  0064AE  EC35  F03D         	call	_SetMemoryLong	;wreg free
 33036  0064B2  0900               	iorlw	0
 33037  0064B4  A4D8               	btfss	status,2,c
 33038  0064B6  D003               	goto	l12871
 33039                           
 33040                           ;EEPROM.c: 184: {
 33041                           ;EEPROM.c: 186: fail |= 0x00000002;
 33042  0064B8  0100               	movlb	0	; () banked
 33043  0064BA  83B1               	bsf	SetEEPROM@fail& (0+255),1,b
 33044                           
 33045                           ; BSR set to: 0
 33046  0064BC  D000               	goto	l12871
 33047  0064BE                     l12871:
 33048                           
 33049                           ;EEPROM.c: 187: }
 33050                           ;EEPROM.c: 188: }
 33051                           ;EEPROM.c: 189: if(burn & 0x00000004)
 33052  0064BE  0101               	movlb	1	; () banked
 33053  0064C0  A588               	btfss	SetEEPROM@burn& (0+255),2,b
 33054  0064C2  D047               	goto	l953
 33055                           
 33056                           ; BSR set to: 1
 33057                           ;EEPROM.c: 190: {
 33058                           ;EEPROM.c: 191: for(i=0; i< 20; i++)
 33059  0064C4  0E00               	movlw	0
 33060  0064C6  0100               	movlb	0	; () banked
 33061  0064C8  6FB8               	movwf	SetEEPROM@i& (0+255),b
 33062  0064CA                     l12875:
 33063                           
 33064                           ; BSR set to: 0
 33065  0064CA  0E13               	movlw	19
 33066  0064CC  0100               	movlb	0	; () banked
 33067  0064CE  65B8               	cpfsgt	SetEEPROM@i& (0+255),b
 33068  0064D0  D001               	goto	l12879
 33069                           
 33070                           ; BSR set to: 0
 33071  0064D2  D03F               	goto	l953
 33072  0064D4                     l12879:
 33073                           
 33074                           ; BSR set to: 0
 33075                           ;EEPROM.c: 192: {
 33076                           ;EEPROM.c: 193: for(j=0; j < 2; j++)
 33077  0064D4  0E00               	movlw	0
 33078  0064D6  0100               	movlb	0	; () banked
 33079  0064D8  6FB9               	movwf	SetEEPROM@j& (0+255),b
 33080  0064DA                     l12881:
 33081                           
 33082                           ; BSR set to: 0
 33083  0064DA  0E01               	movlw	1
 33084  0064DC  0100               	movlb	0	; () banked
 33085  0064DE  65B9               	cpfsgt	SetEEPROM@j& (0+255),b
 33086  0064E0  D001               	goto	l12885
 33087                           
 33088                           ; BSR set to: 0
 33089  0064E2  D034               	goto	l12893
 33090  0064E4                     l12885:
 33091                           
 33092                           ; BSR set to: 0
 33093                           ;EEPROM.c: 194: {
 33094                           ;EEPROM.c: 195: temp = Temp.RemoteButtonNEC[i][j];
 33095  0064E4  0100               	movlb	0	; () banked
 33096  0064E6  51B8               	movf	SetEEPROM@i& (0+255),w,b
 33097  0064E8  0D02               	mullw	2
 33098  0064EA  0E00               	movlw	low SetEEPROM@Temp
 33099  0064EC  0100               	movlb	0	; () banked
 33100  0064EE  6FAF               	movwf	??_SetEEPROM& (0+255),b
 33101  0064F0  0E01               	movlw	high SetEEPROM@Temp
 33102  0064F2  0100               	movlb	0	; () banked
 33103  0064F4  6FB0               	movwf	(??_SetEEPROM+1)& (0+255),b
 33104  0064F6  50F3               	movf	prodl,w,c
 33105  0064F8  0100               	movlb	0	; () banked
 33106  0064FA  27AF               	addwf	??_SetEEPROM& (0+255),f,b
 33107  0064FC  50F4               	movf	prodh,w,c
 33108  0064FE  0100               	movlb	0	; () banked
 33109  006500  23B0               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33110  006502  0100               	movlb	0	; () banked
 33111  006504  51B9               	movf	SetEEPROM@j& (0+255),w,b
 33112  006506  0D01               	mullw	1
 33113  006508  50F3               	movf	prodl,w,c
 33114  00650A  0100               	movlb	0	; () banked
 33115  00650C  27AF               	addwf	??_SetEEPROM& (0+255),f,b
 33116  00650E  50F4               	movf	prodh,w,c
 33117  006510  0100               	movlb	0	; () banked
 33118  006512  23B0               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33119  006514  0E05               	movlw	5
 33120  006516  0100               	movlb	0	; () banked
 33121  006518  25AF               	addwf	??_SetEEPROM& (0+255),w,b
 33122  00651A  6ED9               	movwf	fsr2l,c
 33123  00651C  0E00               	movlw	0
 33124  00651E  0100               	movlb	0	; () banked
 33125  006520  21B0               	addwfc	(??_SetEEPROM+1)& (0+255),w,b
 33126  006522  6EDA               	movwf	fsr2h,c
 33127  006524  50DF               	movf	indf2,w,c
 33128  006526  0100               	movlb	0	; () banked
 33129  006528  6FB5               	movwf	SetEEPROM@temp& (0+255),b
 33130                           
 33131                           ; BSR set to: 0
 33132                           ;EEPROM.c: 196: if(!SetMemoryChar(temp,Arrayspot++))
 33133  00652A  0100               	movlb	0	; () banked
 33134  00652C  2BB6               	incf	SetEEPROM@Arrayspot& (0+255),f,b
 33135  00652E  05B6               	decf	SetEEPROM@Arrayspot& (0+255),w,b
 33136  006530  0100               	movlb	0	; () banked
 33137  006532  6F83               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 33138  006534  0100               	movlb	0	; () banked
 33139  006536  51B5               	movf	SetEEPROM@temp& (0+255),w,b
 33140  006538  ECBF  F048         	call	_SetMemoryChar
 33141  00653C  0900               	iorlw	0
 33142  00653E  A4D8               	btfss	status,2,c
 33143  006540  D002               	goto	l958
 33144                           
 33145                           ;EEPROM.c: 197: {
 33146                           ;EEPROM.c: 199: fail |= 0x00000004;
 33147  006542  0100               	movlb	0	; () banked
 33148  006544  85B1               	bsf	SetEEPROM@fail& (0+255),2,b
 33149  006546                     l958:
 33150  006546  0100               	movlb	0	; () banked
 33151  006548  2BB9               	incf	SetEEPROM@j& (0+255),f,b
 33152  00654A  D7C7               	goto	l12881
 33153  00654C                     l12893:
 33154                           
 33155                           ; BSR set to: 0
 33156  00654C  0100               	movlb	0	; () banked
 33157  00654E  2BB8               	incf	SetEEPROM@i& (0+255),f,b
 33158  006550  D7BC               	goto	l12875
 33159  006552                     l953:
 33160                           
 33161                           ;EEPROM.c: 200: }
 33162                           ;EEPROM.c: 201: }
 33163                           ;EEPROM.c: 202: }
 33164                           ;EEPROM.c: 203: }
 33165                           ;EEPROM.c: 204: if(burn & 0x00000008)
 33166  006552  0101               	movlb	1	; () banked
 33167  006554  A788               	btfss	SetEEPROM@burn& (0+255),3,b
 33168  006556  D00D               	goto	l12901
 33169                           
 33170                           ; BSR set to: 1
 33171                           ;EEPROM.c: 205: {
 33172                           ;EEPROM.c: 206: if(!SetMemoryChar(Temp.EEPROMinitFlag,(2*20 + 5)))
 33173  006558  0E2D               	movlw	45
 33174  00655A  0100               	movlb	0	; () banked
 33175  00655C  6F83               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 33176  00655E  0101               	movlb	1	; () banked
 33177  006560  512D               	movf	(SetEEPROM@Temp+45)& (0+255),w,b
 33178  006562  ECBF  F048         	call	_SetMemoryChar
 33179  006566  0900               	iorlw	0
 33180  006568  A4D8               	btfss	status,2,c
 33181  00656A  D003               	goto	l12901
 33182                           
 33183                           ;EEPROM.c: 207: {
 33184                           ;EEPROM.c: 209: fail |= 0x00000008;
 33185  00656C  0100               	movlb	0	; () banked
 33186  00656E  87B1               	bsf	SetEEPROM@fail& (0+255),3,b
 33187                           
 33188                           ; BSR set to: 0
 33189  006570  D000               	goto	l12901
 33190  006572                     l12901:
 33191                           
 33192                           ;EEPROM.c: 210: }
 33193                           ;EEPROM.c: 211: }
 33194                           ;EEPROM.c: 212: if(burn & 0x00000010)
 33195  006572  0101               	movlb	1	; () banked
 33196  006574  A988               	btfss	SetEEPROM@burn& (0+255),4,b
 33197  006576  D05E               	goto	l961
 33198                           
 33199                           ; BSR set to: 1
 33200                           ;EEPROM.c: 213: {
 33201                           ;EEPROM.c: 214: Arrayspot=(2*20 + 7);
 33202  006578  0E2F               	movlw	47
 33203  00657A  0100               	movlb	0	; () banked
 33204  00657C  6FB6               	movwf	SetEEPROM@Arrayspot& (0+255),b
 33205                           
 33206                           ;EEPROM.c: 215: for(i=0; i< 15; i++)
 33207  00657E  0E00               	movlw	0
 33208  006580  0100               	movlb	0	; () banked
 33209  006582  6FB8               	movwf	SetEEPROM@i& (0+255),b
 33210  006584                     l12905:
 33211                           
 33212                           ; BSR set to: 0
 33213  006584  0E0E               	movlw	14
 33214  006586  0100               	movlb	0	; () banked
 33215  006588  65B8               	cpfsgt	SetEEPROM@i& (0+255),b
 33216  00658A  D001               	goto	l12909
 33217                           
 33218                           ; BSR set to: 0
 33219  00658C  D053               	goto	l961
 33220  00658E                     l12909:
 33221                           
 33222                           ; BSR set to: 0
 33223                           ;EEPROM.c: 216: {
 33224                           ;EEPROM.c: 217: for(j=0; j < 3; j++)
 33225  00658E  0E00               	movlw	0
 33226  006590  0100               	movlb	0	; () banked
 33227  006592  6FB9               	movwf	SetEEPROM@j& (0+255),b
 33228  006594                     l12911:
 33229                           
 33230                           ; BSR set to: 0
 33231  006594  0E02               	movlw	2
 33232  006596  0100               	movlb	0	; () banked
 33233  006598  65B9               	cpfsgt	SetEEPROM@j& (0+255),b
 33234  00659A  D001               	goto	l12915
 33235                           
 33236                           ; BSR set to: 0
 33237  00659C  D048               	goto	l12933
 33238  00659E                     l12915:
 33239                           
 33240                           ; BSR set to: 0
 33241                           ;EEPROM.c: 218: {
 33242                           ;EEPROM.c: 219: for(k=0; k < 2; k++)
 33243  00659E  0E00               	movlw	0
 33244  0065A0  0100               	movlb	0	; () banked
 33245  0065A2  6FB7               	movwf	SetEEPROM@k& (0+255),b
 33246  0065A4                     l12917:
 33247                           
 33248                           ; BSR set to: 0
 33249  0065A4  0E01               	movlw	1
 33250  0065A6  0100               	movlb	0	; () banked
 33251  0065A8  65B7               	cpfsgt	SetEEPROM@k& (0+255),b
 33252  0065AA  D001               	goto	l12921
 33253                           
 33254                           ; BSR set to: 0
 33255  0065AC  D03D               	goto	l12929
 33256  0065AE                     l12921:
 33257                           
 33258                           ; BSR set to: 0
 33259                           ;EEPROM.c: 220: {
 33260                           ;EEPROM.c: 221: temp = Temp.RemoteButtonRF[i][j][k];
 33261  0065AE  0100               	movlb	0	; () banked
 33262  0065B0  51B8               	movf	SetEEPROM@i& (0+255),w,b
 33263  0065B2  0D06               	mullw	6
 33264  0065B4  0E00               	movlw	low SetEEPROM@Temp
 33265  0065B6  0100               	movlb	0	; () banked
 33266  0065B8  6FAF               	movwf	??_SetEEPROM& (0+255),b
 33267  0065BA  0E01               	movlw	high SetEEPROM@Temp
 33268  0065BC  0100               	movlb	0	; () banked
 33269  0065BE  6FB0               	movwf	(??_SetEEPROM+1)& (0+255),b
 33270  0065C0  50F3               	movf	prodl,w,c
 33271  0065C2  0100               	movlb	0	; () banked
 33272  0065C4  27AF               	addwf	??_SetEEPROM& (0+255),f,b
 33273  0065C6  50F4               	movf	prodh,w,c
 33274  0065C8  0100               	movlb	0	; () banked
 33275  0065CA  23B0               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33276  0065CC  0100               	movlb	0	; () banked
 33277  0065CE  51B9               	movf	SetEEPROM@j& (0+255),w,b
 33278  0065D0  0D02               	mullw	2
 33279  0065D2  50F3               	movf	prodl,w,c
 33280  0065D4  0100               	movlb	0	; () banked
 33281  0065D6  27AF               	addwf	??_SetEEPROM& (0+255),f,b
 33282  0065D8  50F4               	movf	prodh,w,c
 33283  0065DA  0100               	movlb	0	; () banked
 33284  0065DC  23B0               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33285  0065DE  0100               	movlb	0	; () banked
 33286  0065E0  51B7               	movf	SetEEPROM@k& (0+255),w,b
 33287  0065E2  0D01               	mullw	1
 33288  0065E4  50F3               	movf	prodl,w,c
 33289  0065E6  0100               	movlb	0	; () banked
 33290  0065E8  27AF               	addwf	??_SetEEPROM& (0+255),f,b
 33291  0065EA  50F4               	movf	prodh,w,c
 33292  0065EC  0100               	movlb	0	; () banked
 33293  0065EE  23B0               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33294  0065F0  0E2E               	movlw	46
 33295  0065F2  0100               	movlb	0	; () banked
 33296  0065F4  25AF               	addwf	??_SetEEPROM& (0+255),w,b
 33297  0065F6  6ED9               	movwf	fsr2l,c
 33298  0065F8  0E00               	movlw	0
 33299  0065FA  0100               	movlb	0	; () banked
 33300  0065FC  21B0               	addwfc	(??_SetEEPROM+1)& (0+255),w,b
 33301  0065FE  6EDA               	movwf	fsr2h,c
 33302  006600  50DF               	movf	indf2,w,c
 33303  006602  0100               	movlb	0	; () banked
 33304  006604  6FB5               	movwf	SetEEPROM@temp& (0+255),b
 33305                           
 33306                           ; BSR set to: 0
 33307                           ;EEPROM.c: 222: if(!SetMemoryChar(temp,Arrayspot++))
 33308  006606  0100               	movlb	0	; () banked
 33309  006608  2BB6               	incf	SetEEPROM@Arrayspot& (0+255),f,b
 33310  00660A  05B6               	decf	SetEEPROM@Arrayspot& (0+255),w,b
 33311  00660C  0100               	movlb	0	; () banked
 33312  00660E  6F83               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 33313  006610  0100               	movlb	0	; () banked
 33314  006612  51B5               	movf	SetEEPROM@temp& (0+255),w,b
 33315  006614  ECBF  F048         	call	_SetMemoryChar
 33316  006618  0900               	iorlw	0
 33317  00661A  A4D8               	btfss	status,2,c
 33318  00661C  D002               	goto	l968
 33319                           
 33320                           ;EEPROM.c: 223: {
 33321                           ;EEPROM.c: 225: fail |= 0x00000010;
 33322  00661E  0100               	movlb	0	; () banked
 33323  006620  89B1               	bsf	SetEEPROM@fail& (0+255),4,b
 33324  006622                     l968:
 33325  006622  0100               	movlb	0	; () banked
 33326  006624  2BB7               	incf	SetEEPROM@k& (0+255),f,b
 33327  006626  D7BE               	goto	l12917
 33328  006628                     l12929:
 33329                           
 33330                           ; BSR set to: 0
 33331  006628  0100               	movlb	0	; () banked
 33332  00662A  2BB9               	incf	SetEEPROM@j& (0+255),f,b
 33333  00662C  D7B3               	goto	l12911
 33334  00662E                     l12933:
 33335                           
 33336                           ; BSR set to: 0
 33337  00662E  0100               	movlb	0	; () banked
 33338  006630  2BB8               	incf	SetEEPROM@i& (0+255),f,b
 33339  006632  D7A8               	goto	l12905
 33340  006634                     l961:
 33341                           
 33342                           ;EEPROM.c: 226: }
 33343                           ;EEPROM.c: 227: }
 33344                           ;EEPROM.c: 228: }
 33345                           ;EEPROM.c: 229: }
 33346                           ;EEPROM.c: 230: }
 33347                           ;EEPROM.c: 231: return fail;
 33348  006634  C0B1  F100         	movff	SetEEPROM@fail,?_SetEEPROM
 33349  006638  C0B2  F101         	movff	SetEEPROM@fail+1,?_SetEEPROM+1
 33350  00663C  C0B3  F102         	movff	SetEEPROM@fail+2,?_SetEEPROM+2
 33351  006640  C0B4  F103         	movff	SetEEPROM@fail+3,?_SetEEPROM+3
 33352  006644  0012               	return		;funcret
 33353  006646                     __end_of_SetEEPROM:
 33354                           	opt stack 0
 33355                           tblptru	equ	0xFF8
 33356                           tblptrh	equ	0xFF7
 33357                           tblptrl	equ	0xFF6
 33358                           tablat	equ	0xFF5
 33359                           prodh	equ	0xFF4
 33360                           prodl	equ	0xFF3
 33361                           intcon	equ	0xFF2
 33362                           intcon2	equ	0xFF1
 33363                           indf0	equ	0xFEF
 33364                           postinc0	equ	0xFEE
 33365                           plusw0	equ	0xFEB
 33366                           fsr0h	equ	0xFEA
 33367                           fsr0l	equ	0xFE9
 33368                           wreg	equ	0xFE8
 33369                           indf1	equ	0xFE7
 33370                           postdec1	equ	0xFE5
 33371                           fsr1h	equ	0xFE2
 33372                           fsr1l	equ	0xFE1
 33373                           indf2	equ	0xFDF
 33374                           postinc2	equ	0xFDE
 33375                           postdec2	equ	0xFDD
 33376                           plusw2	equ	0xFDB
 33377                           fsr2h	equ	0xFDA
 33378                           fsr2l	equ	0xFD9
 33379                           status	equ	0xFD8
 33380                           
 33381 ;; *************** function _SetMemoryLong *****************
 33382 ;; Defined at:
 33383 ;;		line 360 in file "EEPROM.c"
 33384 ;; Parameters:    Size  Location     Type
 33385 ;;  Data            4   62[BANK0 ] unsigned long 
 33386 ;;  AddressFirst    1   66[BANK0 ] unsigned char 
 33387 ;; Auto vars:     Size  Location     Type
 33388 ;;  Test            4   71[BANK0 ] unsigned long 
 33389 ;;  L               1   78[BANK0 ] unsigned char 
 33390 ;;  ML              1   77[BANK0 ] unsigned char 
 33391 ;;  MH              1   76[BANK0 ] unsigned char 
 33392 ;;  H               1   75[BANK0 ] unsigned char 
 33393 ;; Return value:  Size  Location     Type
 33394 ;;                  1    wreg      unsigned char 
 33395 ;; Registers used:
 33396 ;;		wreg, status,2, status,0, cstack
 33397 ;; Tracked objects:
 33398 ;;		On entry : 0/0
 33399 ;;		On exit  : 0/0
 33400 ;;		Unchanged: 0/0
 33401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33402 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33403 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33404 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33405 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33406 ;;Total ram usage:       17 bytes
 33407 ;; Hardware stack levels used:    1
 33408 ;; Hardware stack levels required when called:    8
 33409 ;; This function calls:
 33410 ;;		_GetMemoryLong
 33411 ;;		_WriteEEPROM_1Byte
 33412 ;; This function is called by:
 33413 ;;		_SetEEPROM
 33414 ;; This function uses a non-reentrant model
 33415 ;;
 33416                           
 33417                           	psect	text89
 33418  007A6A                     __ptext89:
 33419                           	opt stack 0
 33420  007A6A                     _SetMemoryLong:
 33421                           	opt stack 19
 33422                           
 33423                           ;EEPROM.c: 362: unsigned char H;
 33424                           ;EEPROM.c: 363: unsigned char MH;
 33425                           ;EEPROM.c: 364: unsigned char ML;
 33426                           ;EEPROM.c: 365: unsigned char L;
 33427                           ;EEPROM.c: 366: unsigned long Test;
 33428                           ;EEPROM.c: 368: H = (unsigned char) ((Data & 0XFF000000) >> 24);
 33429                           
 33430                           ;incstack = 0
 33431  007A6A  0E00               	movlw	0
 33432  007A6C  0100               	movlb	0	; () banked
 33433  007A6E  159E               	andwf	SetMemoryLong@Data& (0+255),w,b
 33434  007A70  0100               	movlb	0	; () banked
 33435  007A72  6FA3               	movwf	??_SetMemoryLong& (0+255),b
 33436  007A74  0E00               	movlw	0
 33437  007A76  0100               	movlb	0	; () banked
 33438  007A78  159F               	andwf	(SetMemoryLong@Data+1)& (0+255),w,b
 33439  007A7A  0100               	movlb	0	; () banked
 33440  007A7C  6FA4               	movwf	(??_SetMemoryLong+1)& (0+255),b
 33441  007A7E  0E00               	movlw	0
 33442  007A80  0100               	movlb	0	; () banked
 33443  007A82  15A0               	andwf	(SetMemoryLong@Data+2)& (0+255),w,b
 33444  007A84  0100               	movlb	0	; () banked
 33445  007A86  6FA5               	movwf	(??_SetMemoryLong+2)& (0+255),b
 33446  007A88  0EFF               	movlw	255
 33447  007A8A  0100               	movlb	0	; () banked
 33448  007A8C  15A1               	andwf	(SetMemoryLong@Data+3)& (0+255),w,b
 33449  007A8E  0100               	movlb	0	; () banked
 33450  007A90  6FA6               	movwf	(??_SetMemoryLong+3)& (0+255),b
 33451  007A92  0E19               	movlw	25
 33452  007A94  D006               	goto	u14660
 33453  007A96                     u14665:
 33454  007A96  0100               	movlb	0	; () banked
 33455  007A98  90D8               	bcf	status,0,c
 33456  007A9A  33A6               	rrcf	(??_SetMemoryLong+3)& (0+255),f,b
 33457  007A9C  33A5               	rrcf	(??_SetMemoryLong+2)& (0+255),f,b
 33458  007A9E  33A4               	rrcf	(??_SetMemoryLong+1)& (0+255),f,b
 33459  007AA0  33A3               	rrcf	??_SetMemoryLong& (0+255),f,b
 33460  007AA2                     u14660:
 33461  007AA2  2EE8               	decfsz	wreg,f,c
 33462  007AA4  D7F8               	goto	u14665
 33463  007AA6  0100               	movlb	0	; () banked
 33464  007AA8  51A3               	movf	??_SetMemoryLong& (0+255),w,b
 33465  007AAA  0100               	movlb	0	; () banked
 33466  007AAC  6FAB               	movwf	SetMemoryLong@H& (0+255),b
 33467                           
 33468                           ; BSR set to: 0
 33469                           ;EEPROM.c: 369: MH = (unsigned char) ((Data & 0X00FF0000) >> 16);
 33470  007AAE  C0A0  F0AC         	movff	SetMemoryLong@Data+2,SetMemoryLong@MH
 33471                           
 33472                           ; BSR set to: 0
 33473                           ;EEPROM.c: 370: ML = (unsigned char) ((Data & 0X0000FF00) >> 8);
 33474  007AB2  C09F  F0AD         	movff	SetMemoryLong@Data+1,SetMemoryLong@ML
 33475                           
 33476                           ; BSR set to: 0
 33477                           ;EEPROM.c: 371: L = (unsigned char) (Data & 0X000000FF);
 33478  007AB6  C09E  F0AE         	movff	SetMemoryLong@Data,SetMemoryLong@L
 33479                           
 33480                           ; BSR set to: 0
 33481                           ;EEPROM.c: 374: WriteEEPROM_1Byte(AddressFirst, H);
 33482  007ABA  C0A2  F079         	movff	SetMemoryLong@AddressFirst,WriteEEPROM_1Byte@address
 33483  007ABE  0100               	movlb	0	; () banked
 33484  007AC0  6B7A               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33485  007AC2  C0AB  F07B         	movff	SetMemoryLong@H,WriteEEPROM_1Byte@data
 33486  007AC6  EC13  F046         	call	_WriteEEPROM_1Byte	;wreg free
 33487                           
 33488                           ;EEPROM.c: 375: WriteEEPROM_1Byte((AddressFirst + 1), MH);
 33489  007ACA  0E01               	movlw	1
 33490  007ACC  0100               	movlb	0	; () banked
 33491  007ACE  25A2               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 33492  007AD0  0100               	movlb	0	; () banked
 33493  007AD2  6F79               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 33494  007AD4  0100               	movlb	0	; () banked
 33495  007AD6  6B7A               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33496  007AD8  0E00               	movlw	0
 33497  007ADA  237A               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 33498  007ADC  C0AC  F07B         	movff	SetMemoryLong@MH,WriteEEPROM_1Byte@data
 33499  007AE0  EC13  F046         	call	_WriteEEPROM_1Byte	;wreg free
 33500                           
 33501                           ;EEPROM.c: 376: WriteEEPROM_1Byte((AddressFirst + 2), ML);
 33502  007AE4  0E02               	movlw	2
 33503  007AE6  0100               	movlb	0	; () banked
 33504  007AE8  25A2               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 33505  007AEA  0100               	movlb	0	; () banked
 33506  007AEC  6F79               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 33507  007AEE  0100               	movlb	0	; () banked
 33508  007AF0  6B7A               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33509  007AF2  0E00               	movlw	0
 33510  007AF4  237A               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 33511  007AF6  C0AD  F07B         	movff	SetMemoryLong@ML,WriteEEPROM_1Byte@data
 33512  007AFA  EC13  F046         	call	_WriteEEPROM_1Byte	;wreg free
 33513                           
 33514                           ;EEPROM.c: 377: WriteEEPROM_1Byte((AddressFirst + 3), L);
 33515  007AFE  0E03               	movlw	3
 33516  007B00  0100               	movlb	0	; () banked
 33517  007B02  25A2               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 33518  007B04  0100               	movlb	0	; () banked
 33519  007B06  6F79               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 33520  007B08  0100               	movlb	0	; () banked
 33521  007B0A  6B7A               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33522  007B0C  0E00               	movlw	0
 33523  007B0E  237A               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 33524  007B10  C0AE  F07B         	movff	SetMemoryLong@L,WriteEEPROM_1Byte@data
 33525  007B14  EC13  F046         	call	_WriteEEPROM_1Byte	;wreg free
 33526                           
 33527                           ;EEPROM.c: 380: Test = GetMemoryLong(AddressFirst);
 33528  007B18  0100               	movlb	0	; () banked
 33529  007B1A  51A2               	movf	SetMemoryLong@AddressFirst& (0+255),w,b
 33530  007B1C  EC6E  F036         	call	_GetMemoryLong
 33531  007B20  C07D  F0A7         	movff	?_GetMemoryLong,SetMemoryLong@Test
 33532  007B24  C07E  F0A8         	movff	?_GetMemoryLong+1,SetMemoryLong@Test+1
 33533  007B28  C07F  F0A9         	movff	?_GetMemoryLong+2,SetMemoryLong@Test+2
 33534  007B2C  C080  F0AA         	movff	?_GetMemoryLong+3,SetMemoryLong@Test+3
 33535                           
 33536                           ;EEPROM.c: 382: if(Test == Data)
 33537  007B30  0100               	movlb	0	; () banked
 33538  007B32  519E               	movf	SetMemoryLong@Data& (0+255),w,b
 33539  007B34  0100               	movlb	0	; () banked
 33540  007B36  19A7               	xorwf	SetMemoryLong@Test& (0+255),w,b
 33541  007B38  E112               	bnz	l12597
 33542  007B3A  0100               	movlb	0	; () banked
 33543  007B3C  519F               	movf	(SetMemoryLong@Data+1)& (0+255),w,b
 33544  007B3E  0100               	movlb	0	; () banked
 33545  007B40  19A8               	xorwf	(SetMemoryLong@Test+1)& (0+255),w,b
 33546  007B42  E10D               	bnz	l12597
 33547  007B44  0100               	movlb	0	; () banked
 33548  007B46  51A0               	movf	(SetMemoryLong@Data+2)& (0+255),w,b
 33549  007B48  0100               	movlb	0	; () banked
 33550  007B4A  19A9               	xorwf	(SetMemoryLong@Test+2)& (0+255),w,b
 33551  007B4C  E108               	bnz	l12597
 33552  007B4E  0100               	movlb	0	; () banked
 33553  007B50  51A1               	movf	(SetMemoryLong@Data+3)& (0+255),w,b
 33554  007B52  0100               	movlb	0	; () banked
 33555  007B54  19AA               	xorwf	(SetMemoryLong@Test+3)& (0+255),w,b
 33556  007B56  A4D8               	btfss	status,2,c
 33557  007B58  D002               	goto	l12597
 33558                           
 33559                           ; BSR set to: 0
 33560                           ;EEPROM.c: 383: {
 33561                           ;EEPROM.c: 384: return 1;
 33562  007B5A  0E01               	movlw	1
 33563                           
 33564                           ; BSR set to: 0
 33565  007B5C  0012               	return	
 33566  007B5E                     l12597:
 33567                           
 33568                           ; BSR set to: 0
 33569                           ;EEPROM.c: 385: }
 33570                           ;EEPROM.c: 386: return 0;
 33571  007B5E  0E00               	movlw	0
 33572  007B60  0012               	return	
 33573                           
 33574                           ; BSR set to: 0
 33575                           
 33576                           ; BSR set to: 0
 33577  007B62  0012               	return		;funcret
 33578  007B64                     __end_of_SetMemoryLong:
 33579                           	opt stack 0
 33580                           tblptru	equ	0xFF8
 33581                           tblptrh	equ	0xFF7
 33582                           tblptrl	equ	0xFF6
 33583                           tablat	equ	0xFF5
 33584                           prodh	equ	0xFF4
 33585                           prodl	equ	0xFF3
 33586                           intcon	equ	0xFF2
 33587                           intcon2	equ	0xFF1
 33588                           indf0	equ	0xFEF
 33589                           postinc0	equ	0xFEE
 33590                           plusw0	equ	0xFEB
 33591                           fsr0h	equ	0xFEA
 33592                           fsr0l	equ	0xFE9
 33593                           wreg	equ	0xFE8
 33594                           indf1	equ	0xFE7
 33595                           postdec1	equ	0xFE5
 33596                           fsr1h	equ	0xFE2
 33597                           fsr1l	equ	0xFE1
 33598                           indf2	equ	0xFDF
 33599                           postinc2	equ	0xFDE
 33600                           postdec2	equ	0xFDD
 33601                           plusw2	equ	0xFDB
 33602                           fsr2h	equ	0xFDA
 33603                           fsr2l	equ	0xFD9
 33604                           status	equ	0xFD8
 33605                           
 33606 ;; *************** function _GetMemoryLong *****************
 33607 ;; Defined at:
 33608 ;;		line 337 in file "EEPROM.c"
 33609 ;; Parameters:    Size  Location     Type
 33610 ;;  AddressFirst    1    wreg     unsigned char 
 33611 ;; Auto vars:     Size  Location     Type
 33612 ;;  AddressFirst    1   61[BANK0 ] unsigned char 
 33613 ;;  temp            4   53[BANK0 ] unsigned long 
 33614 ;;  L               1   60[BANK0 ] unsigned char 
 33615 ;;  ML              1   59[BANK0 ] unsigned char 
 33616 ;;  MH              1   58[BANK0 ] unsigned char 
 33617 ;;  H               1   57[BANK0 ] unsigned char 
 33618 ;; Return value:  Size  Location     Type
 33619 ;;                  4   29[BANK0 ] unsigned long 
 33620 ;; Registers used:
 33621 ;;		wreg, status,2, status,0, cstack
 33622 ;; Tracked objects:
 33623 ;;		On entry : 0/0
 33624 ;;		On exit  : 0/0
 33625 ;;		Unchanged: 0/0
 33626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33627 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33628 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33629 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33630 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33631 ;;Total ram usage:       33 bytes
 33632 ;; Hardware stack levels used:    1
 33633 ;; Hardware stack levels required when called:    7
 33634 ;; This function calls:
 33635 ;;		_ReadEEPROM_1Byte
 33636 ;; This function is called by:
 33637 ;;		_GetEEPROM
 33638 ;;		_SetMemoryLong
 33639 ;; This function uses a non-reentrant model
 33640 ;;
 33641                           
 33642                           	psect	text90
 33643  006CDC                     __ptext90:
 33644                           	opt stack 0
 33645  006CDC                     _GetMemoryLong:
 33646                           	opt stack 19
 33647                           
 33648                           ; BSR set to: 0
 33649                           ;incstack = 0
 33650                           ;GetMemoryLong@AddressFirst stored from wreg
 33651  006CDC  0100               	movlb	0	; () banked
 33652  006CDE  6F9D               	movwf	GetMemoryLong@AddressFirst& (0+255),b
 33653                           
 33654                           ; BSR set to: 0
 33655                           ;EEPROM.c: 339: unsigned char H;
 33656                           ;EEPROM.c: 340: unsigned char MH;
 33657                           ;EEPROM.c: 341: unsigned char ML;
 33658                           ;EEPROM.c: 342: unsigned char L;
 33659                           ;EEPROM.c: 343: unsigned long temp =0;
 33660  006CE0  0E00               	movlw	0
 33661  006CE2  0100               	movlb	0	; () banked
 33662  006CE4  6F95               	movwf	GetMemoryLong@temp& (0+255),b
 33663  006CE6  0E00               	movlw	0
 33664  006CE8  6F96               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 33665  006CEA  0E00               	movlw	0
 33666  006CEC  6F97               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 33667  006CEE  0E00               	movlw	0
 33668  006CF0  6F98               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 33669                           
 33670                           ; BSR set to: 0
 33671                           ;EEPROM.c: 345: H = ReadEEPROM_1Byte(AddressFirst);
 33672  006CF2  C09D  F079         	movff	GetMemoryLong@AddressFirst,ReadEEPROM_1Byte@address
 33673  006CF6  0100               	movlb	0	; () banked
 33674  006CF8  6B7A               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33675  006CFA  ECE0  F045         	call	_ReadEEPROM_1Byte	;wreg free
 33676  006CFE  0100               	movlb	0	; () banked
 33677  006D00  5179               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33678  006D02  0100               	movlb	0	; () banked
 33679  006D04  6F99               	movwf	GetMemoryLong@H& (0+255),b
 33680                           
 33681                           ; BSR set to: 0
 33682                           ;EEPROM.c: 346: MH = ReadEEPROM_1Byte(AddressFirst + 1);
 33683  006D06  0E01               	movlw	1
 33684  006D08  0100               	movlb	0	; () banked
 33685  006D0A  259D               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 33686  006D0C  0100               	movlb	0	; () banked
 33687  006D0E  6F79               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 33688  006D10  0100               	movlb	0	; () banked
 33689  006D12  6B7A               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33690  006D14  0E00               	movlw	0
 33691  006D16  237A               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 33692  006D18  ECE0  F045         	call	_ReadEEPROM_1Byte	;wreg free
 33693  006D1C  0100               	movlb	0	; () banked
 33694  006D1E  5179               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33695  006D20  0100               	movlb	0	; () banked
 33696  006D22  6F9A               	movwf	GetMemoryLong@MH& (0+255),b
 33697                           
 33698                           ; BSR set to: 0
 33699                           ;EEPROM.c: 347: ML = ReadEEPROM_1Byte(AddressFirst + 2);
 33700  006D24  0E02               	movlw	2
 33701  006D26  0100               	movlb	0	; () banked
 33702  006D28  259D               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 33703  006D2A  0100               	movlb	0	; () banked
 33704  006D2C  6F79               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 33705  006D2E  0100               	movlb	0	; () banked
 33706  006D30  6B7A               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33707  006D32  0E00               	movlw	0
 33708  006D34  237A               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 33709  006D36  ECE0  F045         	call	_ReadEEPROM_1Byte	;wreg free
 33710  006D3A  0100               	movlb	0	; () banked
 33711  006D3C  5179               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33712  006D3E  0100               	movlb	0	; () banked
 33713  006D40  6F9B               	movwf	GetMemoryLong@ML& (0+255),b
 33714                           
 33715                           ; BSR set to: 0
 33716                           ;EEPROM.c: 348: L = ReadEEPROM_1Byte(AddressFirst + 3);
 33717  006D42  0E03               	movlw	3
 33718  006D44  0100               	movlb	0	; () banked
 33719  006D46  259D               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 33720  006D48  0100               	movlb	0	; () banked
 33721  006D4A  6F79               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 33722  006D4C  0100               	movlb	0	; () banked
 33723  006D4E  6B7A               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33724  006D50  0E00               	movlw	0
 33725  006D52  237A               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 33726  006D54  ECE0  F045         	call	_ReadEEPROM_1Byte	;wreg free
 33727  006D58  0100               	movlb	0	; () banked
 33728  006D5A  5179               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33729  006D5C  0100               	movlb	0	; () banked
 33730  006D5E  6F9C               	movwf	GetMemoryLong@L& (0+255),b
 33731                           
 33732                           ; BSR set to: 0
 33733                           ;EEPROM.c: 350: temp = (((unsigned long) H << 24) + ((unsigned long)MH << 16)
 33734                           ;EEPROM.c: 351: + ((unsigned long)ML << 8) + (unsigned long)L);
 33735  006D60  C09B  F081         	movff	GetMemoryLong@ML,??_GetMemoryLong
 33736  006D64  0100               	movlb	0	; () banked
 33737  006D66  6B82               	clrf	(??_GetMemoryLong+1)& (0+255),b
 33738  006D68  6B83               	clrf	(??_GetMemoryLong+2)& (0+255),b
 33739  006D6A  6B84               	clrf	(??_GetMemoryLong+3)& (0+255),b
 33740  006D6C  C083  F084         	movff	??_GetMemoryLong+2,??_GetMemoryLong+3
 33741  006D70  C082  F083         	movff	??_GetMemoryLong+1,??_GetMemoryLong+2
 33742  006D74  C081  F082         	movff	??_GetMemoryLong,??_GetMemoryLong+1
 33743  006D78  0100               	movlb	0	; () banked
 33744  006D7A  6B81               	clrf	??_GetMemoryLong& (0+255),b
 33745  006D7C  C09A  F085         	movff	GetMemoryLong@MH,??_GetMemoryLong+4
 33746  006D80  0100               	movlb	0	; () banked
 33747  006D82  6B86               	clrf	(??_GetMemoryLong+5)& (0+255),b
 33748  006D84  6B87               	clrf	(??_GetMemoryLong+6)& (0+255),b
 33749  006D86  6B88               	clrf	(??_GetMemoryLong+7)& (0+255),b
 33750  006D88  C086  F088         	movff	??_GetMemoryLong+5,??_GetMemoryLong+7
 33751  006D8C  C085  F087         	movff	??_GetMemoryLong+4,??_GetMemoryLong+6
 33752  006D90  0100               	movlb	0	; () banked
 33753  006D92  6B86               	clrf	(??_GetMemoryLong+5)& (0+255),b
 33754  006D94  6B85               	clrf	(??_GetMemoryLong+4)& (0+255),b
 33755  006D96  C099  F089         	movff	GetMemoryLong@H,??_GetMemoryLong+8
 33756  006D9A  0100               	movlb	0	; () banked
 33757  006D9C  6B8A               	clrf	(??_GetMemoryLong+9)& (0+255),b
 33758  006D9E  6B8B               	clrf	(??_GetMemoryLong+10)& (0+255),b
 33759  006DA0  6B8C               	clrf	(??_GetMemoryLong+11)& (0+255),b
 33760  006DA2  C089  F08C         	movff	??_GetMemoryLong+8,??_GetMemoryLong+11
 33761  006DA6  0100               	movlb	0	; () banked
 33762  006DA8  6B8B               	clrf	(??_GetMemoryLong+10)& (0+255),b
 33763  006DAA  6B8A               	clrf	(??_GetMemoryLong+9)& (0+255),b
 33764  006DAC  6B89               	clrf	(??_GetMemoryLong+8)& (0+255),b
 33765  006DAE  0100               	movlb	0	; () banked
 33766  006DB0  5185               	movf	(??_GetMemoryLong+4)& (0+255),w,b
 33767  006DB2  0100               	movlb	0	; () banked
 33768  006DB4  2589               	addwf	(??_GetMemoryLong+8)& (0+255),w,b
 33769  006DB6  0100               	movlb	0	; () banked
 33770  006DB8  6F8D               	movwf	(??_GetMemoryLong+12)& (0+255),b
 33771  006DBA  0100               	movlb	0	; () banked
 33772  006DBC  5186               	movf	(??_GetMemoryLong+5)& (0+255),w,b
 33773  006DBE  0100               	movlb	0	; () banked
 33774  006DC0  218A               	addwfc	(??_GetMemoryLong+9)& (0+255),w,b
 33775  006DC2  0100               	movlb	0	; () banked
 33776  006DC4  6F8E               	movwf	(??_GetMemoryLong+13)& (0+255),b
 33777  006DC6  0100               	movlb	0	; () banked
 33778  006DC8  5187               	movf	(??_GetMemoryLong+6)& (0+255),w,b
 33779  006DCA  0100               	movlb	0	; () banked
 33780  006DCC  218B               	addwfc	(??_GetMemoryLong+10)& (0+255),w,b
 33781  006DCE  0100               	movlb	0	; () banked
 33782  006DD0  6F8F               	movwf	(??_GetMemoryLong+14)& (0+255),b
 33783  006DD2  0100               	movlb	0	; () banked
 33784  006DD4  5188               	movf	(??_GetMemoryLong+7)& (0+255),w,b
 33785  006DD6  0100               	movlb	0	; () banked
 33786  006DD8  218C               	addwfc	(??_GetMemoryLong+11)& (0+255),w,b
 33787  006DDA  0100               	movlb	0	; () banked
 33788  006DDC  6F90               	movwf	(??_GetMemoryLong+15)& (0+255),b
 33789  006DDE  0100               	movlb	0	; () banked
 33790  006DE0  5181               	movf	??_GetMemoryLong& (0+255),w,b
 33791  006DE2  0100               	movlb	0	; () banked
 33792  006DE4  258D               	addwf	(??_GetMemoryLong+12)& (0+255),w,b
 33793  006DE6  0100               	movlb	0	; () banked
 33794  006DE8  6F91               	movwf	(??_GetMemoryLong+16)& (0+255),b
 33795  006DEA  0100               	movlb	0	; () banked
 33796  006DEC  5182               	movf	(??_GetMemoryLong+1)& (0+255),w,b
 33797  006DEE  0100               	movlb	0	; () banked
 33798  006DF0  218E               	addwfc	(??_GetMemoryLong+13)& (0+255),w,b
 33799  006DF2  0100               	movlb	0	; () banked
 33800  006DF4  6F92               	movwf	(??_GetMemoryLong+17)& (0+255),b
 33801  006DF6  0100               	movlb	0	; () banked
 33802  006DF8  5183               	movf	(??_GetMemoryLong+2)& (0+255),w,b
 33803  006DFA  0100               	movlb	0	; () banked
 33804  006DFC  218F               	addwfc	(??_GetMemoryLong+14)& (0+255),w,b
 33805  006DFE  0100               	movlb	0	; () banked
 33806  006E00  6F93               	movwf	(??_GetMemoryLong+18)& (0+255),b
 33807  006E02  0100               	movlb	0	; () banked
 33808  006E04  5184               	movf	(??_GetMemoryLong+3)& (0+255),w,b
 33809  006E06  0100               	movlb	0	; () banked
 33810  006E08  2190               	addwfc	(??_GetMemoryLong+15)& (0+255),w,b
 33811  006E0A  0100               	movlb	0	; () banked
 33812  006E0C  6F94               	movwf	(??_GetMemoryLong+19)& (0+255),b
 33813  006E0E  0100               	movlb	0	; () banked
 33814  006E10  519C               	movf	GetMemoryLong@L& (0+255),w,b
 33815  006E12  0100               	movlb	0	; () banked
 33816  006E14  2591               	addwf	(??_GetMemoryLong+16)& (0+255),w,b
 33817  006E16  0100               	movlb	0	; () banked
 33818  006E18  6F95               	movwf	GetMemoryLong@temp& (0+255),b
 33819  006E1A  0E00               	movlw	0
 33820  006E1C  0100               	movlb	0	; () banked
 33821  006E1E  2192               	addwfc	(??_GetMemoryLong+17)& (0+255),w,b
 33822  006E20  0100               	movlb	0	; () banked
 33823  006E22  6F96               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 33824  006E24  0E00               	movlw	0
 33825  006E26  0100               	movlb	0	; () banked
 33826  006E28  2193               	addwfc	(??_GetMemoryLong+18)& (0+255),w,b
 33827  006E2A  0100               	movlb	0	; () banked
 33828  006E2C  6F97               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 33829  006E2E  0E00               	movlw	0
 33830  006E30  0100               	movlb	0	; () banked
 33831  006E32  2194               	addwfc	(??_GetMemoryLong+19)& (0+255),w,b
 33832  006E34  0100               	movlb	0	; () banked
 33833  006E36  6F98               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 33834                           
 33835                           ; BSR set to: 0
 33836                           ;EEPROM.c: 352: return temp;
 33837  006E38  C095  F07D         	movff	GetMemoryLong@temp,?_GetMemoryLong
 33838  006E3C  C096  F07E         	movff	GetMemoryLong@temp+1,?_GetMemoryLong+1
 33839  006E40  C097  F07F         	movff	GetMemoryLong@temp+2,?_GetMemoryLong+2
 33840  006E44  C098  F080         	movff	GetMemoryLong@temp+3,?_GetMemoryLong+3
 33841  006E48  0012               	return	
 33842                           
 33843                           ; BSR set to: 0
 33844                           
 33845                           ; BSR set to: 0
 33846  006E4A  0012               	return		;funcret
 33847  006E4C                     __end_of_GetMemoryLong:
 33848                           	opt stack 0
 33849                           tblptru	equ	0xFF8
 33850                           tblptrh	equ	0xFF7
 33851                           tblptrl	equ	0xFF6
 33852                           tablat	equ	0xFF5
 33853                           prodh	equ	0xFF4
 33854                           prodl	equ	0xFF3
 33855                           intcon	equ	0xFF2
 33856                           intcon2	equ	0xFF1
 33857                           indf0	equ	0xFEF
 33858                           postinc0	equ	0xFEE
 33859                           plusw0	equ	0xFEB
 33860                           fsr0h	equ	0xFEA
 33861                           fsr0l	equ	0xFE9
 33862                           wreg	equ	0xFE8
 33863                           indf1	equ	0xFE7
 33864                           postdec1	equ	0xFE5
 33865                           fsr1h	equ	0xFE2
 33866                           fsr1l	equ	0xFE1
 33867                           indf2	equ	0xFDF
 33868                           postinc2	equ	0xFDE
 33869                           postdec2	equ	0xFDD
 33870                           plusw2	equ	0xFDB
 33871                           fsr2h	equ	0xFDA
 33872                           fsr2l	equ	0xFD9
 33873                           status	equ	0xFD8
 33874                           
 33875 ;; *************** function _SetMemoryChar *****************
 33876 ;; Defined at:
 33877 ;;		line 454 in file "EEPROM.c"
 33878 ;; Parameters:    Size  Location     Type
 33879 ;;  Data            1    wreg     unsigned char 
 33880 ;;  AddressFirst    1   35[BANK0 ] unsigned char 
 33881 ;; Auto vars:     Size  Location     Type
 33882 ;;  Data            1   37[BANK0 ] unsigned char 
 33883 ;;  Test            1   36[BANK0 ] unsigned char 
 33884 ;; Return value:  Size  Location     Type
 33885 ;;                  1    wreg      unsigned char 
 33886 ;; Registers used:
 33887 ;;		wreg, status,2, status,0, cstack
 33888 ;; Tracked objects:
 33889 ;;		On entry : 0/0
 33890 ;;		On exit  : 0/0
 33891 ;;		Unchanged: 0/0
 33892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33893 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33894 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33896 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33897 ;;Total ram usage:        3 bytes
 33898 ;; Hardware stack levels used:    1
 33899 ;; Hardware stack levels required when called:    8
 33900 ;; This function calls:
 33901 ;;		_GetMemoryChar
 33902 ;;		_WriteEEPROM_1Byte
 33903 ;; This function is called by:
 33904 ;;		_SetEEPROM
 33905 ;; This function uses a non-reentrant model
 33906 ;;
 33907                           
 33908                           	psect	text91
 33909  00917E                     __ptext91:
 33910                           	opt stack 0
 33911  00917E                     _SetMemoryChar:
 33912                           	opt stack 19
 33913                           
 33914                           ; BSR set to: 0
 33915                           ;incstack = 0
 33916                           ;SetMemoryChar@Data stored from wreg
 33917  00917E  0100               	movlb	0	; () banked
 33918  009180  6F85               	movwf	SetMemoryChar@Data& (0+255),b
 33919                           
 33920                           ; BSR set to: 0
 33921                           ;EEPROM.c: 456: unsigned char Test;
 33922                           ;EEPROM.c: 458: WriteEEPROM_1Byte(AddressFirst, Data);
 33923  009182  C083  F079         	movff	SetMemoryChar@AddressFirst,WriteEEPROM_1Byte@address
 33924  009186  0100               	movlb	0	; () banked
 33925  009188  6B7A               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33926  00918A  C085  F07B         	movff	SetMemoryChar@Data,WriteEEPROM_1Byte@data
 33927  00918E  EC13  F046         	call	_WriteEEPROM_1Byte	;wreg free
 33928                           
 33929                           ;EEPROM.c: 461: Test = GetMemoryChar(AddressFirst);
 33930  009192  0100               	movlb	0	; () banked
 33931  009194  5183               	movf	SetMemoryChar@AddressFirst& (0+255),w,b
 33932  009196  EC87  F049         	call	_GetMemoryChar
 33933  00919A  0100               	movlb	0	; () banked
 33934  00919C  517D               	movf	?_GetMemoryChar& (0+255),w,b
 33935  00919E  0100               	movlb	0	; () banked
 33936  0091A0  6F84               	movwf	SetMemoryChar@Test& (0+255),b
 33937                           
 33938                           ; BSR set to: 0
 33939                           ;EEPROM.c: 463: if(Test == Data)
 33940  0091A2  0100               	movlb	0	; () banked
 33941  0091A4  5185               	movf	SetMemoryChar@Data& (0+255),w,b
 33942  0091A6  0100               	movlb	0	; () banked
 33943  0091A8  1984               	xorwf	SetMemoryChar@Test& (0+255),w,b
 33944  0091AA  A4D8               	btfss	status,2,c
 33945  0091AC  D002               	goto	l12569
 33946                           
 33947                           ; BSR set to: 0
 33948                           ;EEPROM.c: 464: {
 33949                           ;EEPROM.c: 465: return 1;
 33950  0091AE  0E01               	movlw	1
 33951                           
 33952                           ; BSR set to: 0
 33953  0091B0  0012               	return	
 33954  0091B2                     l12569:
 33955                           
 33956                           ; BSR set to: 0
 33957                           ;EEPROM.c: 466: }
 33958                           ;EEPROM.c: 467: return 0;
 33959  0091B2  0E00               	movlw	0
 33960  0091B4  0012               	return	
 33961                           
 33962                           ; BSR set to: 0
 33963                           
 33964                           ; BSR set to: 0
 33965  0091B6  0012               	return		;funcret
 33966  0091B8                     __end_of_SetMemoryChar:
 33967                           	opt stack 0
 33968                           tblptru	equ	0xFF8
 33969                           tblptrh	equ	0xFF7
 33970                           tblptrl	equ	0xFF6
 33971                           tablat	equ	0xFF5
 33972                           prodh	equ	0xFF4
 33973                           prodl	equ	0xFF3
 33974                           intcon	equ	0xFF2
 33975                           intcon2	equ	0xFF1
 33976                           indf0	equ	0xFEF
 33977                           postinc0	equ	0xFEE
 33978                           plusw0	equ	0xFEB
 33979                           fsr0h	equ	0xFEA
 33980                           fsr0l	equ	0xFE9
 33981                           wreg	equ	0xFE8
 33982                           indf1	equ	0xFE7
 33983                           postdec1	equ	0xFE5
 33984                           fsr1h	equ	0xFE2
 33985                           fsr1l	equ	0xFE1
 33986                           indf2	equ	0xFDF
 33987                           postinc2	equ	0xFDE
 33988                           postdec2	equ	0xFDD
 33989                           plusw2	equ	0xFDB
 33990                           fsr2h	equ	0xFDA
 33991                           fsr2l	equ	0xFD9
 33992                           status	equ	0xFD8
 33993                           
 33994 ;; *************** function _WriteEEPROM_1Byte *****************
 33995 ;; Defined at:
 33996 ;;		line 102 in file "EEPROM.c"
 33997 ;; Parameters:    Size  Location     Type
 33998 ;;  address         2   25[BANK0 ] unsigned int 
 33999 ;;  data            1   27[BANK0 ] unsigned char 
 34000 ;; Auto vars:     Size  Location     Type
 34001 ;;  PEIEstatus      1   29[BANK0 ] unsigned char 
 34002 ;;  GIEstatus       1   28[BANK0 ] unsigned char 
 34003 ;; Return value:  Size  Location     Type
 34004 ;;		None               void
 34005 ;; Registers used:
 34006 ;;		wreg, status,2, status,0, cstack
 34007 ;; Tracked objects:
 34008 ;;		On entry : 0/0
 34009 ;;		On exit  : 0/0
 34010 ;;		Unchanged: 0/0
 34011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34012 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34013 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34015 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34016 ;;Total ram usage:        5 bytes
 34017 ;; Hardware stack levels used:    1
 34018 ;; Hardware stack levels required when called:    7
 34019 ;; This function calls:
 34020 ;;		_EEPROM_UNLOCK
 34021 ;; This function is called by:
 34022 ;;		_SetMemoryLong
 34023 ;;		_SetMemoryChar
 34024 ;;		_SetMemoryInt
 34025 ;; This function uses a non-reentrant model
 34026 ;;
 34027                           
 34028                           	psect	text92
 34029  008C26                     __ptext92:
 34030                           	opt stack 0
 34031  008C26                     _WriteEEPROM_1Byte:
 34032                           	opt stack 19
 34033                           
 34034                           ;EEPROM.c: 104: unsigned char GIEstatus = INTCONbits.GIE;
 34035                           
 34036                           ; BSR set to: 0
 34037                           ;incstack = 0
 34038  008C26  0E00               	movlw	0
 34039  008C28  BEF2               	btfsc	intcon,7,c	;volatile
 34040  008C2A  0E01               	movlw	1
 34041  008C2C  0100               	movlb	0	; () banked
 34042  008C2E  6F7C               	movwf	WriteEEPROM_1Byte@GIEstatus& (0+255),b
 34043                           
 34044                           ;EEPROM.c: 105: unsigned char PEIEstatus = INTCONbits.PEIE;
 34045  008C30  0E00               	movlw	0
 34046  008C32  BCF2               	btfsc	intcon,6,c	;volatile
 34047  008C34  0E01               	movlw	1
 34048  008C36  0100               	movlb	0	; () banked
 34049  008C38  6F7D               	movwf	WriteEEPROM_1Byte@PEIEstatus& (0+255),b
 34050                           
 34051                           ; BSR set to: 0
 34052                           ;EEPROM.c: 106: INTCONbits.GIE = 0;
 34053  008C3A  9EF2               	bcf	intcon,7,c	;volatile
 34054                           
 34055                           ; BSR set to: 0
 34056                           ;EEPROM.c: 107: INTCONbits.PEIE = 0;
 34057  008C3C  9CF2               	bcf	intcon,6,c	;volatile
 34058                           
 34059                           ; BSR set to: 0
 34060                           ;EEPROM.c: 108: EEADRH = (unsigned char)((address & 0x300) >> 8);
 34061  008C3E  0100               	movlb	0	; () banked
 34062  008C40  517A               	movf	(WriteEEPROM_1Byte@address+1)& (0+255),w,b
 34063  008C42  0B03               	andlw	3
 34064  008C44  6EAA               	movwf	4010,c	;volatile
 34065                           
 34066                           ; BSR set to: 0
 34067                           ;EEPROM.c: 109: EEADR = (unsigned char)(address & 0xFF);
 34068  008C46  C079  FFA9         	movff	WriteEEPROM_1Byte@address,4009	;volatile
 34069                           
 34070                           ; BSR set to: 0
 34071                           ;EEPROM.c: 110: EEDATA = data;
 34072  008C4A  C07B  FFA8         	movff	WriteEEPROM_1Byte@data,4008	;volatile
 34073                           
 34074                           ; BSR set to: 0
 34075                           ;EEPROM.c: 111: EECON1bits.EEPGD = 0;
 34076  008C4E  9EA6               	bcf	4006,7,c	;volatile
 34077                           
 34078                           ; BSR set to: 0
 34079                           ;EEPROM.c: 112: EECON1bits.CFGS = 0;
 34080  008C50  9CA6               	bcf	4006,6,c	;volatile
 34081                           
 34082                           ; BSR set to: 0
 34083                           ;EEPROM.c: 113: EECON1bits.WREN =1;
 34084  008C52  84A6               	bsf	4006,2,c	;volatile
 34085                           
 34086                           ; BSR set to: 0
 34087                           ;EEPROM.c: 114: INTCONbits.GIE =0;
 34088  008C54  9EF2               	bcf	intcon,7,c	;volatile
 34089                           
 34090                           ; BSR set to: 0
 34091                           ;EEPROM.c: 115: EEPROM_UNLOCK();
 34092  008C56  EC00  F04A         	call	_EEPROM_UNLOCK	;wreg free
 34093                           
 34094                           ;EEPROM.c: 116: EECON1bits.WR =1;
 34095  008C5A  82A6               	bsf	4006,1,c	;volatile
 34096                           
 34097                           ;EEPROM.c: 117: while(EECON1bits.WR);
 34098  008C5C  D000               	goto	l928
 34099  008C5E                     l928:
 34100  008C5E  B2A6               	btfsc	4006,1,c	;volatile
 34101  008C60  D7FE               	goto	l928
 34102                           
 34103                           ;EEPROM.c: 118: EECON1bits.WREN =0;
 34104  008C62  94A6               	bcf	4006,2,c	;volatile
 34105                           
 34106                           ;EEPROM.c: 119: if(GIEstatus)
 34107  008C64  0100               	movlb	0	; () banked
 34108  008C66  517C               	movf	WriteEEPROM_1Byte@GIEstatus& (0+255),w,b
 34109  008C68  0100               	movlb	0	; () banked
 34110  008C6A  B4D8               	btfsc	status,2,c
 34111  008C6C  D002               	goto	l12491
 34112                           
 34113                           ; BSR set to: 0
 34114                           ;EEPROM.c: 120: {
 34115                           ;EEPROM.c: 121: INTCONbits.GIE =1;
 34116  008C6E  8EF2               	bsf	intcon,7,c	;volatile
 34117  008C70  D000               	goto	l12491
 34118  008C72                     l12491:
 34119                           
 34120                           ; BSR set to: 0
 34121                           ;EEPROM.c: 122: }
 34122                           ;EEPROM.c: 123: if(PEIEstatus)
 34123  008C72  0100               	movlb	0	; () banked
 34124  008C74  517D               	movf	WriteEEPROM_1Byte@PEIEstatus& (0+255),w,b
 34125  008C76  0100               	movlb	0	; () banked
 34126  008C78  B4D8               	btfsc	status,2,c
 34127  008C7A  0012               	return	
 34128                           
 34129                           ; BSR set to: 0
 34130                           ;EEPROM.c: 124: {
 34131                           ;EEPROM.c: 125: PEIEstatus = INTCONbits.PEIE;
 34132  008C7C  0E00               	movlw	0
 34133  008C7E  BCF2               	btfsc	intcon,6,c	;volatile
 34134  008C80  0E01               	movlw	1
 34135  008C82  0100               	movlb	0	; () banked
 34136  008C84  6F7D               	movwf	WriteEEPROM_1Byte@PEIEstatus& (0+255),b
 34137  008C86  0012               	return	
 34138                           
 34139                           ; BSR set to: 0
 34140                           
 34141                           ; BSR set to: 0
 34142  008C88  0012               	return		;funcret
 34143  008C8A                     __end_of_WriteEEPROM_1Byte:
 34144                           	opt stack 0
 34145                           tblptru	equ	0xFF8
 34146                           tblptrh	equ	0xFF7
 34147                           tblptrl	equ	0xFF6
 34148                           tablat	equ	0xFF5
 34149                           prodh	equ	0xFF4
 34150                           prodl	equ	0xFF3
 34151                           intcon	equ	0xFF2
 34152                           intcon2	equ	0xFF1
 34153                           indf0	equ	0xFEF
 34154                           postinc0	equ	0xFEE
 34155                           plusw0	equ	0xFEB
 34156                           fsr0h	equ	0xFEA
 34157                           fsr0l	equ	0xFE9
 34158                           wreg	equ	0xFE8
 34159                           indf1	equ	0xFE7
 34160                           postdec1	equ	0xFE5
 34161                           fsr1h	equ	0xFE2
 34162                           fsr1l	equ	0xFE1
 34163                           indf2	equ	0xFDF
 34164                           postinc2	equ	0xFDE
 34165                           postdec2	equ	0xFDD
 34166                           plusw2	equ	0xFDB
 34167                           fsr2h	equ	0xFDA
 34168                           fsr2l	equ	0xFD9
 34169                           status	equ	0xFD8
 34170                           
 34171 ;; *************** function _EEPROM_UNLOCK *****************
 34172 ;; Defined at:
 34173 ;;		line 87 in file "EEPROM.c"
 34174 ;; Parameters:    Size  Location     Type
 34175 ;;		None
 34176 ;; Auto vars:     Size  Location     Type
 34177 ;;		None
 34178 ;; Return value:  Size  Location     Type
 34179 ;;		None               void
 34180 ;; Registers used:
 34181 ;;		wreg, status,2
 34182 ;; Tracked objects:
 34183 ;;		On entry : 0/0
 34184 ;;		On exit  : 0/0
 34185 ;;		Unchanged: 0/0
 34186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34191 ;;Total ram usage:        0 bytes
 34192 ;; Hardware stack levels used:    1
 34193 ;; Hardware stack levels required when called:    6
 34194 ;; This function calls:
 34195 ;;		Nothing
 34196 ;; This function is called by:
 34197 ;;		_WriteEEPROM_1Byte
 34198 ;; This function uses a non-reentrant model
 34199 ;;
 34200                           
 34201                           	psect	text93
 34202  009400                     __ptext93:
 34203                           	opt stack 0
 34204  009400                     _EEPROM_UNLOCK:
 34205                           	opt stack 19
 34206                           
 34207                           ;EEPROM.c: 89: EECON2 = 0x55;
 34208                           
 34209                           ; BSR set to: 0
 34210                           ;incstack = 0
 34211  009400  0E55               	movlw	85
 34212  009402  6EA7               	movwf	4007,c	;volatile
 34213                           
 34214                           ;EEPROM.c: 90: EECON2 = 0xAA;
 34215  009404  0EAA               	movlw	170
 34216  009406  6EA7               	movwf	4007,c	;volatile
 34217                           
 34218                           ;EEPROM.c: 91: EECON1bits.WR =1;
 34219  009408  82A6               	bsf	4006,1,c	;volatile
 34220                           
 34221                           ;EEPROM.c: 92: while(EECON1bits.WR);
 34222  00940A  D000               	goto	l922
 34223  00940C                     l922:
 34224  00940C  B2A6               	btfsc	4006,1,c	;volatile
 34225  00940E  D7FE               	goto	l922
 34226                           
 34227                           ;EEPROM.c: 93: __nop();
 34228  009410  F000               	nop	
 34229                           
 34230                           ;EEPROM.c: 94: __nop();
 34231  009412  F000               	nop	
 34232  009414  0012               	return		;funcret
 34233  009416                     __end_of_EEPROM_UNLOCK:
 34234                           	opt stack 0
 34235                           tblptru	equ	0xFF8
 34236                           tblptrh	equ	0xFF7
 34237                           tblptrl	equ	0xFF6
 34238                           tablat	equ	0xFF5
 34239                           prodh	equ	0xFF4
 34240                           prodl	equ	0xFF3
 34241                           intcon	equ	0xFF2
 34242                           intcon2	equ	0xFF1
 34243                           indf0	equ	0xFEF
 34244                           postinc0	equ	0xFEE
 34245                           plusw0	equ	0xFEB
 34246                           fsr0h	equ	0xFEA
 34247                           fsr0l	equ	0xFE9
 34248                           wreg	equ	0xFE8
 34249                           indf1	equ	0xFE7
 34250                           postdec1	equ	0xFE5
 34251                           fsr1h	equ	0xFE2
 34252                           fsr1l	equ	0xFE1
 34253                           indf2	equ	0xFDF
 34254                           postinc2	equ	0xFDE
 34255                           postdec2	equ	0xFDD
 34256                           plusw2	equ	0xFDB
 34257                           fsr2h	equ	0xFDA
 34258                           fsr2l	equ	0xFD9
 34259                           status	equ	0xFD8
 34260                           
 34261 ;; *************** function _GetMemoryChar *****************
 34262 ;; Defined at:
 34263 ;;		line 440 in file "EEPROM.c"
 34264 ;; Parameters:    Size  Location     Type
 34265 ;;  AddressFirst    1    wreg     unsigned char 
 34266 ;; Auto vars:     Size  Location     Type
 34267 ;;  AddressFirst    1   33[BANK0 ] unsigned char 
 34268 ;;  H               1   34[BANK0 ] unsigned char 
 34269 ;; Return value:  Size  Location     Type
 34270 ;;                  4   29[BANK0 ] unsigned long 
 34271 ;; Registers used:
 34272 ;;		wreg, status,2, status,0, cstack
 34273 ;; Tracked objects:
 34274 ;;		On entry : 0/0
 34275 ;;		On exit  : 0/0
 34276 ;;		Unchanged: 0/0
 34277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34278 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34279 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34281 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34282 ;;Total ram usage:        6 bytes
 34283 ;; Hardware stack levels used:    1
 34284 ;; Hardware stack levels required when called:    7
 34285 ;; This function calls:
 34286 ;;		_ReadEEPROM_1Byte
 34287 ;; This function is called by:
 34288 ;;		_GetEEPROM
 34289 ;;		_SetMemoryChar
 34290 ;; This function uses a non-reentrant model
 34291 ;;
 34292                           
 34293                           	psect	text94
 34294  00930E                     __ptext94:
 34295                           	opt stack 0
 34296  00930E                     _GetMemoryChar:
 34297                           	opt stack 19
 34298                           
 34299                           ;incstack = 0
 34300                           ;GetMemoryChar@AddressFirst stored from wreg
 34301  00930E  0100               	movlb	0	; () banked
 34302  009310  6F81               	movwf	GetMemoryChar@AddressFirst& (0+255),b
 34303                           
 34304                           ; BSR set to: 0
 34305                           ;EEPROM.c: 442: unsigned char H;
 34306                           ;EEPROM.c: 444: H = ReadEEPROM_1Byte(AddressFirst);
 34307  009312  C081  F079         	movff	GetMemoryChar@AddressFirst,ReadEEPROM_1Byte@address
 34308  009316  0100               	movlb	0	; () banked
 34309  009318  6B7A               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 34310  00931A  ECE0  F045         	call	_ReadEEPROM_1Byte	;wreg free
 34311  00931E  0100               	movlb	0	; () banked
 34312  009320  5179               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 34313  009322  0100               	movlb	0	; () banked
 34314  009324  6F82               	movwf	GetMemoryChar@H& (0+255),b
 34315                           
 34316                           ; BSR set to: 0
 34317                           ;EEPROM.c: 446: return H;
 34318  009326  0100               	movlb	0	; () banked
 34319  009328  5182               	movf	GetMemoryChar@H& (0+255),w,b
 34320  00932A  0100               	movlb	0	; () banked
 34321  00932C  6F7D               	movwf	?_GetMemoryChar& (0+255),b
 34322  00932E  6B7E               	clrf	(?_GetMemoryChar+1)& (0+255),b
 34323  009330  6B7F               	clrf	(?_GetMemoryChar+2)& (0+255),b
 34324  009332  6B80               	clrf	(?_GetMemoryChar+3)& (0+255),b
 34325  009334  0012               	return	
 34326                           
 34327                           ; BSR set to: 0
 34328                           
 34329                           ; BSR set to: 0
 34330  009336  0012               	return		;funcret
 34331  009338                     __end_of_GetMemoryChar:
 34332                           	opt stack 0
 34333                           tblptru	equ	0xFF8
 34334                           tblptrh	equ	0xFF7
 34335                           tblptrl	equ	0xFF6
 34336                           tablat	equ	0xFF5
 34337                           prodh	equ	0xFF4
 34338                           prodl	equ	0xFF3
 34339                           intcon	equ	0xFF2
 34340                           intcon2	equ	0xFF1
 34341                           indf0	equ	0xFEF
 34342                           postinc0	equ	0xFEE
 34343                           plusw0	equ	0xFEB
 34344                           fsr0h	equ	0xFEA
 34345                           fsr0l	equ	0xFE9
 34346                           wreg	equ	0xFE8
 34347                           indf1	equ	0xFE7
 34348                           postdec1	equ	0xFE5
 34349                           fsr1h	equ	0xFE2
 34350                           fsr1l	equ	0xFE1
 34351                           indf2	equ	0xFDF
 34352                           postinc2	equ	0xFDE
 34353                           postdec2	equ	0xFDD
 34354                           plusw2	equ	0xFDB
 34355                           fsr2h	equ	0xFDA
 34356                           fsr2l	equ	0xFD9
 34357                           status	equ	0xFD8
 34358                           
 34359 ;; *************** function _ReadEEPROM_1Byte *****************
 34360 ;; Defined at:
 34361 ;;		line 55 in file "EEPROM.c"
 34362 ;; Parameters:    Size  Location     Type
 34363 ;;  address         2   25[BANK0 ] unsigned int 
 34364 ;; Auto vars:     Size  Location     Type
 34365 ;;  PEIEstatus      1   28[BANK0 ] unsigned char 
 34366 ;;  GIEstatus       1   27[BANK0 ] unsigned char 
 34367 ;; Return value:  Size  Location     Type
 34368 ;;                  2   25[BANK0 ] unsigned int 
 34369 ;; Registers used:
 34370 ;;		wreg, status,2, status,0
 34371 ;; Tracked objects:
 34372 ;;		On entry : 0/0
 34373 ;;		On exit  : 0/0
 34374 ;;		Unchanged: 0/0
 34375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34376 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34377 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34379 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34380 ;;Total ram usage:        4 bytes
 34381 ;; Hardware stack levels used:    1
 34382 ;; Hardware stack levels required when called:    6
 34383 ;; This function calls:
 34384 ;;		Nothing
 34385 ;; This function is called by:
 34386 ;;		_GetMemoryLong
 34387 ;;		_GetMemoryChar
 34388 ;;		_GetMemoryInt
 34389 ;; This function uses a non-reentrant model
 34390 ;;
 34391                           
 34392                           	psect	text95
 34393  008BC0                     __ptext95:
 34394                           	opt stack 0
 34395  008BC0                     _ReadEEPROM_1Byte:
 34396                           	opt stack 19
 34397                           
 34398                           ;EEPROM.c: 57: unsigned char GIEstatus = INTCONbits.GIE;
 34399                           
 34400                           ; BSR set to: 0
 34401                           ;incstack = 0
 34402  008BC0  0E00               	movlw	0
 34403  008BC2  BEF2               	btfsc	intcon,7,c	;volatile
 34404  008BC4  0E01               	movlw	1
 34405  008BC6  0100               	movlb	0	; () banked
 34406  008BC8  6F7B               	movwf	ReadEEPROM_1Byte@GIEstatus& (0+255),b
 34407                           
 34408                           ;EEPROM.c: 58: unsigned char PEIEstatus = INTCONbits.PEIE;
 34409  008BCA  0E00               	movlw	0
 34410  008BCC  BCF2               	btfsc	intcon,6,c	;volatile
 34411  008BCE  0E01               	movlw	1
 34412  008BD0  0100               	movlb	0	; () banked
 34413  008BD2  6F7C               	movwf	ReadEEPROM_1Byte@PEIEstatus& (0+255),b
 34414                           
 34415                           ; BSR set to: 0
 34416                           ;EEPROM.c: 59: INTCONbits.GIE = 0;
 34417  008BD4  9EF2               	bcf	intcon,7,c	;volatile
 34418                           
 34419                           ; BSR set to: 0
 34420                           ;EEPROM.c: 60: INTCONbits.PEIE = 0;
 34421  008BD6  9CF2               	bcf	intcon,6,c	;volatile
 34422                           
 34423                           ; BSR set to: 0
 34424                           ;EEPROM.c: 61: EECON1bits.EEPGD = 0;
 34425  008BD8  9EA6               	bcf	4006,7,c	;volatile
 34426                           
 34427                           ; BSR set to: 0
 34428                           ;EEPROM.c: 62: EECON1bits.CFGS = 0;
 34429  008BDA  9CA6               	bcf	4006,6,c	;volatile
 34430                           
 34431                           ; BSR set to: 0
 34432                           ;EEPROM.c: 63: EEADRH = (unsigned char)((address & 0x300) >> 8);
 34433  008BDC  0100               	movlb	0	; () banked
 34434  008BDE  517A               	movf	(ReadEEPROM_1Byte@address+1)& (0+255),w,b
 34435  008BE0  0B03               	andlw	3
 34436  008BE2  6EAA               	movwf	4010,c	;volatile
 34437                           
 34438                           ; BSR set to: 0
 34439                           ;EEPROM.c: 64: EEADR = (unsigned char)(address & 0xFF);
 34440  008BE4  C079  FFA9         	movff	ReadEEPROM_1Byte@address,4009	;volatile
 34441                           
 34442                           ; BSR set to: 0
 34443                           ;EEPROM.c: 65: INTCONbits.GIE =0;
 34444  008BE8  9EF2               	bcf	intcon,7,c	;volatile
 34445                           
 34446                           ; BSR set to: 0
 34447                           ;EEPROM.c: 66: EECON1bits.RD = 1;
 34448  008BEA  80A6               	bsf	4006,0,c	;volatile
 34449                           
 34450                           ;EEPROM.c: 67: while(EECON1bits.RD);
 34451  008BEC  D000               	goto	l914
 34452  008BEE                     l914:
 34453  008BEE  B0A6               	btfsc	4006,0,c	;volatile
 34454  008BF0  D7FE               	goto	l914
 34455                           
 34456                           ;EEPROM.c: 68: __nop();
 34457  008BF2  F000               	nop	
 34458                           
 34459                           ;EEPROM.c: 69: __nop();
 34460  008BF4  F000               	nop	
 34461                           
 34462                           ;EEPROM.c: 70: if(GIEstatus)
 34463  008BF6  0100               	movlb	0	; () banked
 34464  008BF8  517B               	movf	ReadEEPROM_1Byte@GIEstatus& (0+255),w,b
 34465  008BFA  0100               	movlb	0	; () banked
 34466  008BFC  B4D8               	btfsc	status,2,c
 34467  008BFE  D002               	goto	l12451
 34468                           
 34469                           ; BSR set to: 0
 34470                           ;EEPROM.c: 71: {
 34471                           ;EEPROM.c: 72: INTCONbits.GIE =1;
 34472  008C00  8EF2               	bsf	intcon,7,c	;volatile
 34473  008C02  D000               	goto	l12451
 34474  008C04                     l12451:
 34475                           
 34476                           ; BSR set to: 0
 34477                           ;EEPROM.c: 73: }
 34478                           ;EEPROM.c: 74: if(PEIEstatus)
 34479  008C04  0100               	movlb	0	; () banked
 34480  008C06  517C               	movf	ReadEEPROM_1Byte@PEIEstatus& (0+255),w,b
 34481  008C08  0100               	movlb	0	; () banked
 34482  008C0A  B4D8               	btfsc	status,2,c
 34483  008C0C  D006               	goto	l12455
 34484                           
 34485                           ; BSR set to: 0
 34486                           ;EEPROM.c: 75: {
 34487                           ;EEPROM.c: 76: PEIEstatus = INTCONbits.PEIE;
 34488  008C0E  0E00               	movlw	0
 34489  008C10  BCF2               	btfsc	intcon,6,c	;volatile
 34490  008C12  0E01               	movlw	1
 34491  008C14  0100               	movlb	0	; () banked
 34492  008C16  6F7C               	movwf	ReadEEPROM_1Byte@PEIEstatus& (0+255),b
 34493  008C18  D000               	goto	l12455
 34494  008C1A                     l12455:
 34495                           
 34496                           ; BSR set to: 0
 34497                           ;EEPROM.c: 77: }
 34498                           ;EEPROM.c: 78: return (EEDATA);
 34499  008C1A  CFA8 F079          	movff	4008,?_ReadEEPROM_1Byte	;volatile
 34500  008C1E  0100               	movlb	0	; () banked
 34501  008C20  6B7A               	clrf	(?_ReadEEPROM_1Byte+1)& (0+255),b
 34502  008C22  0012               	return	
 34503                           
 34504                           ; BSR set to: 0
 34505                           
 34506                           ; BSR set to: 0
 34507  008C24  0012               	return		;funcret
 34508  008C26                     __end_of_ReadEEPROM_1Byte:
 34509                           	opt stack 0
 34510                           tblptru	equ	0xFF8
 34511                           tblptrh	equ	0xFF7
 34512                           tblptrl	equ	0xFF6
 34513                           tablat	equ	0xFF5
 34514                           prodh	equ	0xFF4
 34515                           prodl	equ	0xFF3
 34516                           intcon	equ	0xFF2
 34517                           intcon2	equ	0xFF1
 34518                           indf0	equ	0xFEF
 34519                           postinc0	equ	0xFEE
 34520                           plusw0	equ	0xFEB
 34521                           fsr0h	equ	0xFEA
 34522                           fsr0l	equ	0xFE9
 34523                           wreg	equ	0xFE8
 34524                           indf1	equ	0xFE7
 34525                           postdec1	equ	0xFE5
 34526                           fsr1h	equ	0xFE2
 34527                           fsr1l	equ	0xFE1
 34528                           indf2	equ	0xFDF
 34529                           postinc2	equ	0xFDE
 34530                           postdec2	equ	0xFDD
 34531                           plusw2	equ	0xFDB
 34532                           fsr2h	equ	0xFDA
 34533                           fsr2l	equ	0xFD9
 34534                           status	equ	0xFD8
 34535                           
 34536 ;; *************** function _InitADC *****************
 34537 ;; Defined at:
 34538 ;;		line 135 in file "ADC.c"
 34539 ;; Parameters:    Size  Location     Type
 34540 ;;		None
 34541 ;; Auto vars:     Size  Location     Type
 34542 ;;		None
 34543 ;; Return value:  Size  Location     Type
 34544 ;;		None               void
 34545 ;; Registers used:
 34546 ;;		wreg, status,2, cstack
 34547 ;; Tracked objects:
 34548 ;;		On entry : 0/0
 34549 ;;		On exit  : 0/0
 34550 ;;		Unchanged: 0/0
 34551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34556 ;;Total ram usage:        0 bytes
 34557 ;; Hardware stack levels used:    1
 34558 ;; Hardware stack levels required when called:    7
 34559 ;; This function calls:
 34560 ;;		_ResetADC
 34561 ;; This function is called by:
 34562 ;;		_Init_System
 34563 ;; This function uses a non-reentrant model
 34564 ;;
 34565                           
 34566                           	psect	text96
 34567  009416                     __ptext96:
 34568                           	opt stack 0
 34569  009416                     _InitADC:
 34570                           	opt stack 22
 34571                           
 34572                           ;ADC.c: 137: ResetADC();
 34573                           
 34574                           ; BSR set to: 0
 34575                           ;incstack = 0
 34576  009416  EC80  F04A         	call	_ResetADC	;wreg free
 34577                           
 34578                           ;ADC.c: 138: ADCON2bits.ADFM = 1;
 34579  00941A  8EC0               	bsf	4032,7,c	;volatile
 34580                           
 34581                           ;ADC.c: 139: ADCON2bits.ACQT = 0x7;
 34582  00941C  86C0               	bsf	4032,3,c	;volatile
 34583  00941E  88C0               	bsf	4032,4,c	;volatile
 34584  009420  8AC0               	bsf	4032,5,c	;volatile
 34585                           
 34586                           ;ADC.c: 140: ADCON2bits.ADCS = 0x4;
 34587  009422  50C0               	movf	4032,w,c	;volatile
 34588  009424  0BF8               	andlw	-8
 34589  009426  0904               	iorlw	4
 34590  009428  6EC0               	movwf	4032,c	;volatile
 34591  00942A  0012               	return		;funcret
 34592  00942C                     __end_of_InitADC:
 34593                           	opt stack 0
 34594                           tblptru	equ	0xFF8
 34595                           tblptrh	equ	0xFF7
 34596                           tblptrl	equ	0xFF6
 34597                           tablat	equ	0xFF5
 34598                           prodh	equ	0xFF4
 34599                           prodl	equ	0xFF3
 34600                           intcon	equ	0xFF2
 34601                           intcon2	equ	0xFF1
 34602                           indf0	equ	0xFEF
 34603                           postinc0	equ	0xFEE
 34604                           plusw0	equ	0xFEB
 34605                           fsr0h	equ	0xFEA
 34606                           fsr0l	equ	0xFE9
 34607                           wreg	equ	0xFE8
 34608                           indf1	equ	0xFE7
 34609                           postdec1	equ	0xFE5
 34610                           fsr1h	equ	0xFE2
 34611                           fsr1l	equ	0xFE1
 34612                           indf2	equ	0xFDF
 34613                           postinc2	equ	0xFDE
 34614                           postdec2	equ	0xFDD
 34615                           plusw2	equ	0xFDB
 34616                           fsr2h	equ	0xFDA
 34617                           fsr2l	equ	0xFD9
 34618                           status	equ	0xFD8
 34619                           
 34620 ;; *************** function _ResetADC *****************
 34621 ;; Defined at:
 34622 ;;		line 123 in file "ADC.c"
 34623 ;; Parameters:    Size  Location     Type
 34624 ;;		None
 34625 ;; Auto vars:     Size  Location     Type
 34626 ;;		None
 34627 ;; Return value:  Size  Location     Type
 34628 ;;		None               void
 34629 ;; Registers used:
 34630 ;;		wreg, status,2
 34631 ;; Tracked objects:
 34632 ;;		On entry : 0/0
 34633 ;;		On exit  : 0/0
 34634 ;;		Unchanged: 0/0
 34635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34640 ;;Total ram usage:        0 bytes
 34641 ;; Hardware stack levels used:    1
 34642 ;; Hardware stack levels required when called:    6
 34643 ;; This function calls:
 34644 ;;		Nothing
 34645 ;; This function is called by:
 34646 ;;		_InitADC
 34647 ;; This function uses a non-reentrant model
 34648 ;;
 34649                           
 34650                           	psect	text97
 34651  009500                     __ptext97:
 34652                           	opt stack 0
 34653  009500                     _ResetADC:
 34654                           	opt stack 22
 34655                           
 34656                           ;ADC.c: 125: ADCON0 =0;
 34657                           
 34658                           ;incstack = 0
 34659  009500  0E00               	movlw	0
 34660  009502  6EC2               	movwf	4034,c	;volatile
 34661                           
 34662                           ;ADC.c: 126: ADCON1 =0;
 34663  009504  0E00               	movlw	0
 34664  009506  6EC1               	movwf	4033,c	;volatile
 34665                           
 34666                           ;ADC.c: 127: ADCON2 =0;
 34667  009508  0E00               	movlw	0
 34668  00950A  6EC0               	movwf	4032,c	;volatile
 34669  00950C  0012               	return		;funcret
 34670  00950E                     __end_of_ResetADC:
 34671                           	opt stack 0
 34672                           tblptru	equ	0xFF8
 34673                           tblptrh	equ	0xFF7
 34674                           tblptrl	equ	0xFF6
 34675                           tablat	equ	0xFF5
 34676                           prodh	equ	0xFF4
 34677                           prodl	equ	0xFF3
 34678                           intcon	equ	0xFF2
 34679                           intcon2	equ	0xFF1
 34680                           indf0	equ	0xFEF
 34681                           postinc0	equ	0xFEE
 34682                           plusw0	equ	0xFEB
 34683                           fsr0h	equ	0xFEA
 34684                           fsr0l	equ	0xFE9
 34685                           wreg	equ	0xFE8
 34686                           indf1	equ	0xFE7
 34687                           postdec1	equ	0xFE5
 34688                           fsr1h	equ	0xFE2
 34689                           fsr1l	equ	0xFE1
 34690                           indf2	equ	0xFDF
 34691                           postinc2	equ	0xFDE
 34692                           postdec2	equ	0xFDD
 34693                           plusw2	equ	0xFDB
 34694                           fsr2h	equ	0xFDA
 34695                           fsr2l	equ	0xFD9
 34696                           status	equ	0xFD8
 34697                           
 34698 ;; *************** function _EEPROMinitialized *****************
 34699 ;; Defined at:
 34700 ;;		line 288 in file "EEPROM.c"
 34701 ;; Parameters:    Size  Location     Type
 34702 ;;		None
 34703 ;; Auto vars:     Size  Location     Type
 34704 ;;		None
 34705 ;; Return value:  Size  Location     Type
 34706 ;;                  1    wreg      unsigned char 
 34707 ;; Registers used:
 34708 ;;		wreg, status,2, status,0
 34709 ;; Tracked objects:
 34710 ;;		On entry : 0/0
 34711 ;;		On exit  : 0/0
 34712 ;;		Unchanged: 0/0
 34713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34718 ;;Total ram usage:        0 bytes
 34719 ;; Hardware stack levels used:    1
 34720 ;; Hardware stack levels required when called:    6
 34721 ;; This function calls:
 34722 ;;		Nothing
 34723 ;; This function is called by:
 34724 ;;		_Init_System
 34725 ;; This function uses a non-reentrant model
 34726 ;;
 34727                           
 34728                           	psect	text98
 34729  009456                     __ptext98:
 34730                           	opt stack 0
 34731  009456                     _EEPROMinitialized:
 34732                           	opt stack 23
 34733                           
 34734                           ;EEPROM.c: 290: if(Global.EEPROMinitFlag == 59)
 34735                           
 34736                           ;incstack = 0
 34737  009456  0E3B               	movlw	59
 34738  009458  0104               	movlb	4	; () banked
 34739  00945A  192D               	xorwf	(_Global+45)& (0+255),w,b
 34740  00945C  A4D8               	btfss	status,2,c
 34741  00945E  D002               	goto	l14451
 34742                           
 34743                           ; BSR set to: 4
 34744                           ;EEPROM.c: 291: {
 34745                           ;EEPROM.c: 292: return 1;
 34746  009460  0E01               	movlw	1
 34747                           
 34748                           ; BSR set to: 4
 34749  009462  0012               	return	
 34750  009464                     l14451:
 34751                           
 34752                           ; BSR set to: 4
 34753                           ;EEPROM.c: 293: }
 34754                           ;EEPROM.c: 294: return 0;
 34755  009464  0E00               	movlw	0
 34756  009466  0012               	return	
 34757                           
 34758                           ; BSR set to: 4
 34759                           
 34760                           ; BSR set to: 4
 34761  009468  0012               	return		;funcret
 34762  00946A                     __end_of_EEPROMinitialized:
 34763                           	opt stack 0
 34764                           tblptru	equ	0xFF8
 34765                           tblptrh	equ	0xFF7
 34766                           tblptrl	equ	0xFF6
 34767                           tablat	equ	0xFF5
 34768                           prodh	equ	0xFF4
 34769                           prodl	equ	0xFF3
 34770                           intcon	equ	0xFF2
 34771                           intcon2	equ	0xFF1
 34772                           indf0	equ	0xFEF
 34773                           postinc0	equ	0xFEE
 34774                           plusw0	equ	0xFEB
 34775                           fsr0h	equ	0xFEA
 34776                           fsr0l	equ	0xFE9
 34777                           wreg	equ	0xFE8
 34778                           indf1	equ	0xFE7
 34779                           postdec1	equ	0xFE5
 34780                           fsr1h	equ	0xFE2
 34781                           fsr1l	equ	0xFE1
 34782                           indf2	equ	0xFDF
 34783                           postinc2	equ	0xFDE
 34784                           postdec2	equ	0xFDD
 34785                           plusw2	equ	0xFDB
 34786                           fsr2h	equ	0xFDA
 34787                           fsr2l	equ	0xFD9
 34788                           status	equ	0xFD8
 34789                           
 34790 ;; *************** function _InitApp *****************
 34791 ;; Defined at:
 34792 ;;		line 62 in file "user.c"
 34793 ;; Parameters:    Size  Location     Type
 34794 ;;		None
 34795 ;; Auto vars:     Size  Location     Type
 34796 ;;		None
 34797 ;; Return value:  Size  Location     Type
 34798 ;;		None               void
 34799 ;; Registers used:
 34800 ;;		wreg, status,2, status,0
 34801 ;; Tracked objects:
 34802 ;;		On entry : 0/0
 34803 ;;		On exit  : 0/0
 34804 ;;		Unchanged: 0/0
 34805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34810 ;;Total ram usage:        0 bytes
 34811 ;; Hardware stack levels used:    1
 34812 ;; Hardware stack levels required when called:    6
 34813 ;; This function calls:
 34814 ;;		Nothing
 34815 ;; This function is called by:
 34816 ;;		_main
 34817 ;; This function uses a non-reentrant model
 34818 ;;
 34819                           
 34820                           	psect	text99
 34821  009036                     __ptext99:
 34822                           	opt stack 0
 34823  009036                     _InitApp:
 34824                           	opt stack 24
 34825                           
 34826                           ;user.c: 64: LATA = 0;
 34827                           
 34828                           ; BSR set to: 4
 34829                           ;incstack = 0
 34830  009036  0E00               	movlw	0
 34831  009038  6E89               	movwf	3977,c	;volatile
 34832                           
 34833                           ;user.c: 65: LATB = 0;
 34834  00903A  0E00               	movlw	0
 34835  00903C  6E8A               	movwf	3978,c	;volatile
 34836                           
 34837                           ;user.c: 66: LATC = 0;
 34838  00903E  0E00               	movlw	0
 34839  009040  6E8B               	movwf	3979,c	;volatile
 34840                           
 34841                           ;user.c: 67: LATA |= 0x04;
 34842  009042  8489               	bsf	3977,2,c	;volatile
 34843                           
 34844                           ;user.c: 69: TRISAbits.TRISA0 = 1;
 34845  009044  8092               	bsf	3986,0,c	;volatile
 34846                           
 34847                           ;user.c: 70: TRISAbits.TRISA1 = 1;
 34848  009046  8292               	bsf	3986,1,c	;volatile
 34849                           
 34850                           ;user.c: 71: TRISAbits.TRISA2 = 0;
 34851  009048  9492               	bcf	3986,2,c	;volatile
 34852                           
 34853                           ;user.c: 72: TRISAbits.TRISA3 = 0;
 34854  00904A  9692               	bcf	3986,3,c	;volatile
 34855                           
 34856                           ;user.c: 73: TRISAbits.TRISA4 = 0;
 34857  00904C  9892               	bcf	3986,4,c	;volatile
 34858                           
 34859                           ;user.c: 74: TRISAbits.TRISA5 = 0;
 34860  00904E  9A92               	bcf	3986,5,c	;volatile
 34861                           
 34862                           ;user.c: 75: TRISCbits.TRISC0 = 1;
 34863  009050  8094               	bsf	3988,0,c	;volatile
 34864                           
 34865                           ;user.c: 76: TRISCbits.TRISC1 = 0;
 34866  009052  9294               	bcf	3988,1,c	;volatile
 34867                           
 34868                           ;user.c: 77: TRISCbits.TRISC2 = 0;
 34869  009054  9494               	bcf	3988,2,c	;volatile
 34870                           
 34871                           ;user.c: 78: TRISCbits.TRISC3 = 0;
 34872  009056  9694               	bcf	3988,3,c	;volatile
 34873                           
 34874                           ;user.c: 79: TRISCbits.TRISC4 = 0;
 34875  009058  9894               	bcf	3988,4,c	;volatile
 34876                           
 34877                           ;user.c: 80: TRISCbits.TRISC5 = 0;
 34878  00905A  9A94               	bcf	3988,5,c	;volatile
 34879                           
 34880                           ;user.c: 81: TRISCbits.TRISC6 = 0;
 34881  00905C  9C94               	bcf	3988,6,c	;volatile
 34882                           
 34883                           ;user.c: 82: TRISCbits.TRISC7 = 1;
 34884  00905E  8E94               	bsf	3988,7,c	;volatile
 34885                           
 34886                           ;user.c: 83: TRISBbits.TRISB0 = 1;
 34887  009060  8093               	bsf	3987,0,c	;volatile
 34888                           
 34889                           ;user.c: 84: TRISBbits.TRISB1 = 1;
 34890  009062  8293               	bsf	3987,1,c	;volatile
 34891                           
 34892                           ;user.c: 85: TRISBbits.TRISB2 = 1;
 34893  009064  8493               	bsf	3987,2,c	;volatile
 34894                           
 34895                           ;user.c: 86: TRISBbits.TRISB3 = 1;
 34896  009066  8693               	bsf	3987,3,c	;volatile
 34897                           
 34898                           ;user.c: 87: TRISBbits.TRISB4 = 1;
 34899  009068  8893               	bsf	3987,4,c	;volatile
 34900                           
 34901                           ;user.c: 88: TRISBbits.TRISB5 = 1;
 34902  00906A  8A93               	bsf	3987,5,c	;volatile
 34903                           
 34904                           ;user.c: 91: ANSEL = 0x01;
 34905  00906C  0E01               	movlw	1
 34906  00906E  6E7E               	movwf	3966,c	;volatile
 34907                           
 34908                           ;user.c: 92: ANSELH = 0x00;
 34909  009070  0E00               	movlw	0
 34910  009072  6E7F               	movwf	3967,c	;volatile
 34911                           
 34912                           ;user.c: 95: INTCON2bits.RBPU = 0;
 34913  009074  9EF1               	bcf	intcon2,7,c	;volatile
 34914                           
 34915                           ;user.c: 97: WPUB = 0x0F;
 34916  009076  0E0F               	movlw	15
 34917  009078  6E7C               	movwf	3964,c	;volatile
 34918  00907A  0012               	return		;funcret
 34919  00907C                     __end_of_InitApp:
 34920                           	opt stack 0
 34921                           tblptru	equ	0xFF8
 34922                           tblptrh	equ	0xFF7
 34923                           tblptrl	equ	0xFF6
 34924                           tablat	equ	0xFF5
 34925                           prodh	equ	0xFF4
 34926                           prodl	equ	0xFF3
 34927                           intcon	equ	0xFF2
 34928                           intcon2	equ	0xFF1
 34929                           indf0	equ	0xFEF
 34930                           postinc0	equ	0xFEE
 34931                           plusw0	equ	0xFEB
 34932                           fsr0h	equ	0xFEA
 34933                           fsr0l	equ	0xFE9
 34934                           wreg	equ	0xFE8
 34935                           indf1	equ	0xFE7
 34936                           postdec1	equ	0xFE5
 34937                           fsr1h	equ	0xFE2
 34938                           fsr1l	equ	0xFE1
 34939                           indf2	equ	0xFDF
 34940                           postinc2	equ	0xFDE
 34941                           postdec2	equ	0xFDD
 34942                           plusw2	equ	0xFDB
 34943                           fsr2h	equ	0xFDA
 34944                           fsr2l	equ	0xFD9
 34945                           status	equ	0xFD8
 34946                           
 34947 ;; *************** function _ConfigureOscillator *****************
 34948 ;; Defined at:
 34949 ;;		line 43 in file "system.c"
 34950 ;; Parameters:    Size  Location     Type
 34951 ;;		None
 34952 ;; Auto vars:     Size  Location     Type
 34953 ;;		None
 34954 ;; Return value:  Size  Location     Type
 34955 ;;		None               void
 34956 ;; Registers used:
 34957 ;;		None
 34958 ;; Tracked objects:
 34959 ;;		On entry : 0/0
 34960 ;;		On exit  : 0/0
 34961 ;;		Unchanged: 0/0
 34962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34967 ;;Total ram usage:        0 bytes
 34968 ;; Hardware stack levels used:    1
 34969 ;; Hardware stack levels required when called:    6
 34970 ;; This function calls:
 34971 ;;		Nothing
 34972 ;; This function is called by:
 34973 ;;		_main
 34974 ;; This function uses a non-reentrant model
 34975 ;;
 34976                           
 34977                           	psect	text100
 34978  00957A                     __ptext100:
 34979                           	opt stack 0
 34980  00957A                     _ConfigureOscillator:
 34981                           	opt stack 24
 34982                           
 34983                           ;incstack = 0
 34984  00957A  0012               	return		;funcret
 34985  00957C                     __end_of_ConfigureOscillator:
 34986                           	opt stack 0
 34987                           tblptru	equ	0xFF8
 34988                           tblptrh	equ	0xFF7
 34989                           tblptrl	equ	0xFF6
 34990                           tablat	equ	0xFF5
 34991                           prodh	equ	0xFF4
 34992                           prodl	equ	0xFF3
 34993                           intcon	equ	0xFF2
 34994                           intcon2	equ	0xFF1
 34995                           indf0	equ	0xFEF
 34996                           postinc0	equ	0xFEE
 34997                           plusw0	equ	0xFEB
 34998                           fsr0h	equ	0xFEA
 34999                           fsr0l	equ	0xFE9
 35000                           wreg	equ	0xFE8
 35001                           indf1	equ	0xFE7
 35002                           postdec1	equ	0xFE5
 35003                           fsr1h	equ	0xFE2
 35004                           fsr1l	equ	0xFE1
 35005                           indf2	equ	0xFDF
 35006                           postinc2	equ	0xFDE
 35007                           postdec2	equ	0xFDD
 35008                           plusw2	equ	0xFDB
 35009                           fsr2h	equ	0xFDA
 35010                           fsr2l	equ	0xFD9
 35011                           status	equ	0xFD8
 35012                           
 35013 ;; *************** function _low_isr *****************
 35014 ;; Defined at:
 35015 ;;		line 608 in file "interrupts.c"
 35016 ;; Parameters:    Size  Location     Type
 35017 ;;		None
 35018 ;; Auto vars:     Size  Location     Type
 35019 ;;  data            1   25[COMRAM] unsigned char 
 35020 ;; Return value:  Size  Location     Type
 35021 ;;		None               void
 35022 ;; Registers used:
 35023 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35024 ;; Tracked objects:
 35025 ;;		On entry : 0/0
 35026 ;;		On exit  : 0/0
 35027 ;;		Unchanged: 0/0
 35028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35031 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35032 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35033 ;;Total ram usage:       18 bytes
 35034 ;; Hardware stack levels used:    1
 35035 ;; Hardware stack levels required when called:    5
 35036 ;; This function calls:
 35037 ;;		_EraseScreen
 35038 ;;		_IsCharacter
 35039 ;;		i1_BlueConnected
 35040 ;;		i1_ReadUSART
 35041 ;;		i1_UARTchar
 35042 ;;		i1_UARTstring
 35043 ;;		i1_UARTstringCRLN
 35044 ;;		i1_cleanBuffer
 35045 ;; This function is called by:
 35046 ;;		Interrupt level 1
 35047 ;; This function uses a non-reentrant model
 35048 ;;
 35049                           
 35050                           	psect	intcodelo
 35051  000018                     __pintcodelo:
 35052                           	opt stack 0
 35053  000018                     _low_isr:
 35054                           	opt stack 17
 35055                           
 35056                           ;incstack = 0
 35057  000018  CFD8 F009          	movff	status,??_low_isr
 35058  00001C  CFE8 F00A          	movff	wreg,??_low_isr+1
 35059  000020  CFE0 F00B          	movff	bsr,??_low_isr+2
 35060  000024  CFFA F00C          	movff	pclath,??_low_isr+3
 35061  000028  CFFB F00D          	movff	pclatu,??_low_isr+4
 35062  00002C  CFE9 F00E          	movff	fsr0l,??_low_isr+5
 35063  000030  CFEA F00F          	movff	fsr0h,??_low_isr+6
 35064  000034  CFE1 F010          	movff	fsr1l,??_low_isr+7
 35065  000038  CFE2 F011          	movff	fsr1h,??_low_isr+8
 35066  00003C  CFD9 F012          	movff	fsr2l,??_low_isr+9
 35067  000040  CFDA F013          	movff	fsr2h,??_low_isr+10
 35068  000044  CFF3 F014          	movff	prodl,??_low_isr+11
 35069  000048  CFF4 F015          	movff	prodh,??_low_isr+12
 35070  00004C  CFF6 F016          	movff	tblptrl,??_low_isr+13
 35071  000050  CFF7 F017          	movff	tblptrh,??_low_isr+14
 35072  000054  CFF8 F018          	movff	tblptru,??_low_isr+15
 35073  000058  CFF5 F019          	movff	tablat,??_low_isr+16
 35074                           
 35075                           ;interrupts.c: 617: char data = 0;
 35076  00005C  0E00               	movlw	0
 35077  00005E  6E1A               	movwf	low_isr@data,c
 35078                           
 35079                           ;interrupts.c: 619: INTCONbits.PEIE = 0;
 35080  000060  9CF2               	bcf	intcon,6,c	;volatile
 35081                           
 35082                           ;interrupts.c: 621: if(PIR1bits.RCIF)
 35083  000062  AA9E               	btfss	3998,5,c	;volatile
 35084  000064  D093               	goto	i1l1338
 35085                           
 35086                           ;interrupts.c: 622: {
 35087                           ;interrupts.c: 624: data = ReadUSART();
 35088  000066  EC16  F04A         	call	i1_ReadUSART	;wreg free
 35089  00006A  6E1A               	movwf	low_isr@data,c
 35090                           
 35091                           ;interrupts.c: 626: if(!BlueConnected())
 35092  00006C  EC87  F04A         	call	i1_BlueConnected	;wreg free
 35093  000070  0900               	iorlw	0
 35094  000072  A4D8               	btfss	status,2,c
 35095  000074  D00F               	goto	i1l12363
 35096                           
 35097                           ;interrupts.c: 627: {
 35098                           ;interrupts.c: 628: if(CommandStringPos < 255)
 35099  000076  2826               	incf	_CommandStringPos,w,c
 35100  000078  B4D8               	btfsc	status,2,c
 35101  00007A  D086               	goto	i1l12413
 35102                           
 35103                           ;interrupts.c: 629: {
 35104                           ;interrupts.c: 630: CommandString[CommandStringPos] = data;
 35105  00007C  5026               	movf	_CommandStringPos,w,c
 35106  00007E  0D01               	mullw	1
 35107  000080  0E00               	movlw	low _CommandString
 35108  000082  24F3               	addwf	prodl,w,c
 35109  000084  6ED9               	movwf	fsr2l,c
 35110  000086  0E05               	movlw	high _CommandString
 35111  000088  20F4               	addwfc	prodh,w,c
 35112  00008A  6EDA               	movwf	fsr2h,c
 35113  00008C  C01A  FFDF         	movff	low_isr@data,indf2
 35114                           
 35115                           ;interrupts.c: 631: CommandStringPos++;
 35116  000090  2A26               	incf	_CommandStringPos,f,c
 35117                           
 35118                           ;interrupts.c: 632: }
 35119                           ;interrupts.c: 633: }
 35120  000092  D07A               	goto	i1l12413
 35121  000094                     i1l12363:
 35122                           
 35123                           ;interrupts.c: 634: else
 35124                           ;interrupts.c: 635: {
 35125                           ;interrupts.c: 636: if(data != '\r' && data != '\n')
 35126  000094  0E0D               	movlw	13
 35127  000096  181A               	xorwf	low_isr@data,w,c
 35128  000098  B4D8               	btfsc	status,2,c
 35129  00009A  D063               	goto	i1l12403
 35130  00009C  0E0A               	movlw	10
 35131  00009E  181A               	xorwf	low_isr@data,w,c
 35132  0000A0  B4D8               	btfsc	status,2,c
 35133  0000A2  D05F               	goto	i1l12403
 35134                           
 35135                           ;interrupts.c: 637: {
 35136                           ;interrupts.c: 638: if((data == 127 || data == 8) && (ReceivedStringPos > 0))
 35137  0000A4  0E7F               	movlw	127
 35138  0000A6  181A               	xorwf	low_isr@data,w,c
 35139  0000A8  B4D8               	btfsc	status,2,c
 35140  0000AA  D004               	goto	i1l12371
 35141  0000AC  0E08               	movlw	8
 35142  0000AE  181A               	xorwf	low_isr@data,w,c
 35143  0000B0  A4D8               	btfss	status,2,c
 35144  0000B2  D01F               	goto	i1l12383
 35145  0000B4                     i1l12371:
 35146  0000B4  0100               	movlb	0	; () banked
 35147  0000B6  51E0               	movf	_ReceivedStringPos& (0+255),w,b
 35148  0000B8  B4D8               	btfsc	status,2,c
 35149  0000BA  D01B               	goto	i1l12383
 35150                           
 35151                           ; BSR set to: 0
 35152                           ;interrupts.c: 639: {
 35153                           ;interrupts.c: 641: EraseScreen(ReceivedStringPos + 1);
 35154  0000BC  0100               	movlb	0	; () banked
 35155  0000BE  29E0               	incf	_ReceivedStringPos& (0+255),w,b
 35156  0000C0  EC9C  F049         	call	_EraseScreen
 35157                           
 35158                           ;interrupts.c: 642: ReceivedStringPos--;
 35159  0000C4  0100               	movlb	0	; () banked
 35160  0000C6  07E0               	decf	_ReceivedStringPos& (0+255),f,b
 35161                           
 35162                           ; BSR set to: 0
 35163                           ;interrupts.c: 643: ReceivedString[ReceivedStringPos] = '\0';
 35164  0000C8  0100               	movlb	0	; () banked
 35165  0000CA  51E0               	movf	_ReceivedStringPos& (0+255),w,b
 35166  0000CC  0D01               	mullw	1
 35167  0000CE  0E00               	movlw	low _ReceivedString
 35168  0000D0  24F3               	addwf	prodl,w,c
 35169  0000D2  6ED9               	movwf	fsr2l,c
 35170  0000D4  0E06               	movlw	high _ReceivedString
 35171  0000D6  20F4               	addwfc	prodh,w,c
 35172  0000D8  6EDA               	movwf	fsr2h,c
 35173  0000DA  0E00               	movlw	0
 35174  0000DC  6EDF               	movwf	indf2,c
 35175                           
 35176                           ; BSR set to: 0
 35177                           ;interrupts.c: 644: UARTchar('>');
 35178  0000DE  0E3E               	movlw	62
 35179  0000E0  ECF4  F049         	call	i1_UARTchar
 35180                           
 35181                           ;interrupts.c: 645: UARTstring(ReceivedString);
 35182  0000E4  0E00               	movlw	low _ReceivedString
 35183  0000E6  6E02               	movwf	i1UARTstring@data,c
 35184  0000E8  0E06               	movlw	high _ReceivedString
 35185  0000EA  6E03               	movwf	i1UARTstring@data+1,c
 35186  0000EC  EC00  F047         	call	i1_UARTstring	;wreg free
 35187                           
 35188                           ;interrupts.c: 646: }
 35189  0000F0  D04B               	goto	i1l12413
 35190  0000F2                     i1l12383:
 35191                           
 35192                           ;interrupts.c: 647: else if(ReceivedStringPos < 255)
 35193  0000F2  0100               	movlb	0	; () banked
 35194  0000F4  29E0               	incf	_ReceivedStringPos& (0+255),w,b
 35195  0000F6  B4D8               	btfsc	status,2,c
 35196  0000F8  D01B               	goto	i1l12395
 35197                           
 35198                           ; BSR set to: 0
 35199                           ;interrupts.c: 648: {
 35200                           ;interrupts.c: 649: if(!NewReceivedString)
 35201  0000FA  0100               	movlb	0	; () banked
 35202  0000FC  51DF               	movf	_NewReceivedString& (0+255),w,b	;volatile
 35203  0000FE  A4D8               	btfss	status,2,c
 35204  000100  D043               	goto	i1l12413
 35205                           
 35206                           ; BSR set to: 0
 35207                           ;interrupts.c: 650: {
 35208                           ;interrupts.c: 651: if(IsCharacter(data))
 35209  000102  501A               	movf	low_isr@data,w,c
 35210  000104  ECE8  F049         	call	_IsCharacter
 35211  000108  0900               	iorlw	0
 35212  00010A  B4D8               	btfsc	status,2,c
 35213  00010C  D03D               	goto	i1l12413
 35214                           
 35215                           ;interrupts.c: 652: {
 35216                           ;interrupts.c: 653: UARTchar(data);
 35217  00010E  501A               	movf	low_isr@data,w,c
 35218  000110  ECF4  F049         	call	i1_UARTchar
 35219                           
 35220                           ;interrupts.c: 654: ReceivedString[ReceivedStringPos] = data;
 35221  000114  0100               	movlb	0	; () banked
 35222  000116  51E0               	movf	_ReceivedStringPos& (0+255),w,b
 35223  000118  0D01               	mullw	1
 35224  00011A  0E00               	movlw	low _ReceivedString
 35225  00011C  24F3               	addwf	prodl,w,c
 35226  00011E  6ED9               	movwf	fsr2l,c
 35227  000120  0E06               	movlw	high _ReceivedString
 35228  000122  20F4               	addwfc	prodh,w,c
 35229  000124  6EDA               	movwf	fsr2h,c
 35230  000126  C01A  FFDF         	movff	low_isr@data,indf2
 35231                           
 35232                           ; BSR set to: 0
 35233                           ;interrupts.c: 655: ReceivedStringPos++;
 35234  00012A  0100               	movlb	0	; () banked
 35235  00012C  2BE0               	incf	_ReceivedStringPos& (0+255),f,b
 35236                           
 35237                           ; BSR set to: 0
 35238                           ;interrupts.c: 656: }
 35239                           ;interrupts.c: 657: }
 35240                           ;interrupts.c: 658: }
 35241                           
 35242                           ; BSR set to: 0
 35243  00012E  D02C               	goto	i1l12413
 35244  000130                     i1l12395:
 35245                           
 35246                           ; BSR set to: 0
 35247                           ;interrupts.c: 659: else
 35248                           ;interrupts.c: 660: {
 35249                           ;interrupts.c: 661: cleanBuffer(ReceivedString,255);
 35250  000130  0E00               	movlw	low _ReceivedString
 35251  000132  6E01               	movwf	i1cleanBuffer@data,c
 35252  000134  0E06               	movlw	high _ReceivedString
 35253  000136  6E02               	movwf	i1cleanBuffer@data+1,c
 35254  000138  0E00               	movlw	0
 35255  00013A  6E04               	movwf	i1cleanBuffer@count+1,c
 35256  00013C  6803               	setf	i1cleanBuffer@count,c
 35257  00013E  ECA0  F048         	call	i1_cleanBuffer	;wreg free
 35258                           
 35259                           ;interrupts.c: 662: ReceivedStringPos = 0;
 35260  000142  0E00               	movlw	0
 35261  000144  0100               	movlb	0	; () banked
 35262  000146  6FE0               	movwf	_ReceivedStringPos& (0+255),b
 35263                           
 35264                           ; BSR set to: 0
 35265                           ;interrupts.c: 663: UARTstring(CRLN);
 35266  000148  0ED1               	movlw	low _CRLN
 35267  00014A  6E02               	movwf	i1UARTstring@data,c
 35268  00014C  0EF0               	movlw	high _CRLN
 35269  00014E  6E03               	movwf	i1UARTstring@data+1,c
 35270  000150  EC00  F047         	call	i1_UARTstring	;wreg free
 35271                           
 35272                           ;interrupts.c: 664: UARTstringCRLN((unsigned char *)"Buffer Overflow");
 35273  000154  0E77               	movlw	low STR_1
 35274  000156  6E04               	movwf	i1UARTstringCRLN@data,c
 35275  000158  0EFB               	movlw	high STR_1
 35276  00015A  6E05               	movwf	i1UARTstringCRLN@data+1,c
 35277  00015C  EC45  F046         	call	i1_UARTstringCRLN	;wreg free
 35278                           
 35279                           ;interrupts.c: 665: }
 35280                           ;interrupts.c: 666: }
 35281  000160  D013               	goto	i1l12413
 35282  000162                     i1l12403:
 35283                           
 35284                           ;interrupts.c: 667: else if(ReceivedStringPos > 0 && (NewReceivedString == 0))
 35285  000162  0100               	movlb	0	; () banked
 35286  000164  51E0               	movf	_ReceivedStringPos& (0+255),w,b
 35287  000166  B4D8               	btfsc	status,2,c
 35288  000168  D00F               	goto	i1l12413
 35289                           
 35290                           ; BSR set to: 0
 35291  00016A  0100               	movlb	0	; () banked
 35292  00016C  51DF               	movf	_NewReceivedString& (0+255),w,b	;volatile
 35293  00016E  A4D8               	btfss	status,2,c
 35294  000170  D00B               	goto	i1l12413
 35295                           
 35296                           ; BSR set to: 0
 35297                           ;interrupts.c: 668: {
 35298                           ;interrupts.c: 669: PIE1bits.RCIE = 0;
 35299  000172  9A9D               	bcf	3997,5,c	;volatile
 35300                           
 35301                           ; BSR set to: 0
 35302                           ;interrupts.c: 670: UARTstring(CRLN);
 35303  000174  0ED1               	movlw	low _CRLN
 35304  000176  6E02               	movwf	i1UARTstring@data,c
 35305  000178  0EF0               	movlw	high _CRLN
 35306  00017A  6E03               	movwf	i1UARTstring@data+1,c
 35307  00017C  EC00  F047         	call	i1_UARTstring	;wreg free
 35308                           
 35309                           ;interrupts.c: 671: NewReceivedString = 1;
 35310  000180  0E01               	movlw	1
 35311  000182  0100               	movlb	0	; () banked
 35312  000184  6FDF               	movwf	_NewReceivedString& (0+255),b	;volatile
 35313                           
 35314                           ; BSR set to: 0
 35315                           
 35316                           ; BSR set to: 0
 35317  000186  D000               	goto	i1l12413
 35318  000188                     i1l12413:
 35319                           
 35320                           ;interrupts.c: 672: }
 35321                           ;interrupts.c: 673: }
 35322                           ;interrupts.c: 674: PIR1bits.RCIF = 0;
 35323  000188  9A9E               	bcf	3998,5,c	;volatile
 35324                           
 35325                           ;interrupts.c: 675: }
 35326  00018A  D00F               	goto	i1l1353
 35327  00018C                     i1l1338:
 35328                           
 35329                           ;interrupts.c: 676: else if(PIR1bits.TMR1IF)
 35330  00018C  A09E               	btfss	3998,0,c	;volatile
 35331  00018E  D00B               	goto	i1l1354
 35332                           
 35333                           ;interrupts.c: 677: {
 35334                           ;interrupts.c: 678: Timer1_Postscaler++;
 35335  000190  2A38               	incf	_Timer1_Postscaler,f,c
 35336                           
 35337                           ;interrupts.c: 679: if(Timer1_Postscaler == 3)
 35338  000192  0E03               	movlw	3
 35339  000194  1838               	xorwf	_Timer1_Postscaler,w,c
 35340  000196  A4D8               	btfss	status,2,c
 35341  000198  D004               	goto	i1l12423
 35342                           
 35343                           ;interrupts.c: 680: {
 35344                           ;interrupts.c: 681: (LATC &= ~0x04);
 35345  00019A  948B               	bcf	3979,2,c	;volatile
 35346                           
 35347                           ;interrupts.c: 682: (LATC &= ~0x02);
 35348  00019C  928B               	bcf	3979,1,c	;volatile
 35349                           
 35350                           ;interrupts.c: 683: (T1CONbits.TMR1ON = 0);
 35351  00019E  90CD               	bcf	4045,0,c	;volatile
 35352  0001A0  D000               	goto	i1l12423
 35353  0001A2                     i1l12423:
 35354                           
 35355                           ;interrupts.c: 684: }
 35356                           ;interrupts.c: 685: PIR1bits.TMR1IF = 0;
 35357  0001A2  909E               	bcf	3998,0,c	;volatile
 35358                           
 35359                           ;interrupts.c: 686: }
 35360  0001A4  D002               	goto	i1l1353
 35361  0001A6                     i1l1354:
 35362                           
 35363                           ;interrupts.c: 687: else
 35364                           ;interrupts.c: 688: {
 35365                           ;interrupts.c: 690: __nop();
 35366  0001A6  F000               	nop	
 35367  0001A8  D000               	goto	i1l1353
 35368  0001AA                     i1l1353:
 35369                           
 35370                           ;interrupts.c: 691: }
 35371                           ;interrupts.c: 692: INTCONbits.PEIE = 1;
 35372  0001AA  8CF2               	bsf	intcon,6,c	;volatile
 35373  0001AC  C019  FFF5         	movff	??_low_isr+16,tablat
 35374  0001B0  C018  FFF8         	movff	??_low_isr+15,tblptru
 35375  0001B4  C017  FFF7         	movff	??_low_isr+14,tblptrh
 35376  0001B8  C016  FFF6         	movff	??_low_isr+13,tblptrl
 35377  0001BC  C015  FFF4         	movff	??_low_isr+12,prodh
 35378  0001C0  C014  FFF3         	movff	??_low_isr+11,prodl
 35379  0001C4  C013  FFDA         	movff	??_low_isr+10,fsr2h
 35380  0001C8  C012  FFD9         	movff	??_low_isr+9,fsr2l
 35381  0001CC  C011  FFE2         	movff	??_low_isr+8,fsr1h
 35382  0001D0  C010  FFE1         	movff	??_low_isr+7,fsr1l
 35383  0001D4  C00F  FFEA         	movff	??_low_isr+6,fsr0h
 35384  0001D8  C00E  FFE9         	movff	??_low_isr+5,fsr0l
 35385  0001DC  C00D  FFFB         	movff	??_low_isr+4,pclatu
 35386  0001E0  C00C  FFFA         	movff	??_low_isr+3,pclath
 35387  0001E4  C00B  FFE0         	movff	??_low_isr+2,bsr
 35388  0001E8  C00A  FFE8         	movff	??_low_isr+1,wreg
 35389  0001EC  C009  FFD8         	movff	??_low_isr,status
 35390  0001F0  0010               	retfie	
 35391  0001F2                     __end_of_low_isr:
 35392                           	opt stack 0
 35393                           pclatu	equ	0xFFB
 35394                           pclath	equ	0xFFA
 35395                           tblptru	equ	0xFF8
 35396                           tblptrh	equ	0xFF7
 35397                           tblptrl	equ	0xFF6
 35398                           tablat	equ	0xFF5
 35399                           prodh	equ	0xFF4
 35400                           prodl	equ	0xFF3
 35401                           intcon	equ	0xFF2
 35402                           intcon2	equ	0xFF1
 35403                           indf0	equ	0xFEF
 35404                           postinc0	equ	0xFEE
 35405                           plusw0	equ	0xFEB
 35406                           fsr0h	equ	0xFEA
 35407                           fsr0l	equ	0xFE9
 35408                           wreg	equ	0xFE8
 35409                           indf1	equ	0xFE7
 35410                           postdec1	equ	0xFE5
 35411                           fsr1h	equ	0xFE2
 35412                           fsr1l	equ	0xFE1
 35413                           bsr	equ	0xFE0
 35414                           indf2	equ	0xFDF
 35415                           postinc2	equ	0xFDE
 35416                           postdec2	equ	0xFDD
 35417                           plusw2	equ	0xFDB
 35418                           fsr2h	equ	0xFDA
 35419                           fsr2l	equ	0xFD9
 35420                           status	equ	0xFD8
 35421                           
 35422 ;; *************** function i1_cleanBuffer *****************
 35423 ;; Defined at:
 35424 ;;		line 127 in file "MISC.c"
 35425 ;; Parameters:    Size  Location     Type
 35426 ;;  data            2    0[COMRAM] PTR unsigned char 
 35427 ;;		 -> UseBluetooth@rfchannelSTR(10), UseBluetooth@buf(100), BluetoothInitialSetup@RFchannel(10), BluetoothInitialSetup
      +@buf(50), 
 35428 ;;		 -> CommandString(255), StringAddEqual@temp(255), ReceivedString(255), main@BluetoothString(255), 
 35429 ;;  count           2    2[COMRAM] int 
 35430 ;; Auto vars:     Size  Location     Type
 35431 ;;  cleanBuffer     1    7[COMRAM] unsigned char 
 35432 ;; Return value:  Size  Location     Type
 35433 ;;		None               void
 35434 ;; Registers used:
 35435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35436 ;; Tracked objects:
 35437 ;;		On entry : 0/0
 35438 ;;		On exit  : 0/0
 35439 ;;		Unchanged: 0/0
 35440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35441 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35443 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35444 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35445 ;;Total ram usage:        8 bytes
 35446 ;; Hardware stack levels used:    1
 35447 ;; Hardware stack levels required when called:    2
 35448 ;; This function calls:
 35449 ;;		Nothing
 35450 ;; This function is called by:
 35451 ;;		_low_isr
 35452 ;; This function uses a non-reentrant model
 35453 ;;
 35454                           
 35455                           	psect	text102
 35456  009140                     __ptext102:
 35457                           	opt stack 0
 35458  009140                     i1_cleanBuffer:
 35459                           	opt stack 19
 35460                           
 35461                           ;MISC.c: 129: unsigned char i=0;
 35462                           
 35463                           ;incstack = 0
 35464  009140  0E00               	movlw	0
 35465  009142  6E08               	movwf	i1cleanBuffer@i,c
 35466                           
 35467                           ;MISC.c: 130: for(i=0; i<count;i++)
 35468  009144  0E00               	movlw	0
 35469  009146  6E08               	movwf	i1cleanBuffer@i,c
 35470  009148  D00C               	goto	i1l11685
 35471  00914A                     i1l11681:
 35472                           
 35473                           ;MISC.c: 131: {
 35474                           ;MISC.c: 132: data[i]= 0;
 35475  00914A  5008               	movf	i1cleanBuffer@i,w,c
 35476  00914C  0D01               	mullw	1
 35477  00914E  50F3               	movf	prodl,w,c
 35478  009150  2401               	addwf	i1cleanBuffer@data,w,c
 35479  009152  6ED9               	movwf	fsr2l,c
 35480  009154  50F4               	movf	prodh,w,c
 35481  009156  2002               	addwfc	i1cleanBuffer@data+1,w,c
 35482  009158  6EDA               	movwf	fsr2h,c
 35483  00915A  0E00               	movlw	0
 35484  00915C  6EDF               	movwf	indf2,c
 35485  00915E  2A08               	incf	i1cleanBuffer@i,f,c
 35486  009160  D000               	goto	i1l11685
 35487  009162                     i1l11685:
 35488  009162  5008               	movf	i1cleanBuffer@i,w,c
 35489  009164  6E05               	movwf	??i1_cleanBuffer& (0+255),c
 35490  009166  6A06               	clrf	(??i1_cleanBuffer+1)& (0+255),c
 35491  009168  5003               	movf	i1cleanBuffer@count,w,c
 35492  00916A  5C05               	subwf	??i1_cleanBuffer,w,c
 35493  00916C  5006               	movf	??i1_cleanBuffer+1,w,c
 35494  00916E  0A80               	xorlw	128
 35495  009170  6E07               	movwf	(??i1_cleanBuffer+2)& (0+255),c
 35496  009172  5004               	movf	i1cleanBuffer@count+1,w,c
 35497  009174  0A80               	xorlw	128
 35498  009176  5807               	subwfb	(??i1_cleanBuffer+2)& (0+255),w,c
 35499  009178  A0D8               	btfss	status,0,c
 35500  00917A  D7E7               	goto	i1l11681
 35501  00917C  0012               	return		;funcret
 35502  00917E                     __end_ofi1_cleanBuffer:
 35503                           	opt stack 0
 35504                           pclatu	equ	0xFFB
 35505                           pclath	equ	0xFFA
 35506                           tblptru	equ	0xFF8
 35507                           tblptrh	equ	0xFF7
 35508                           tblptrl	equ	0xFF6
 35509                           tablat	equ	0xFF5
 35510                           prodh	equ	0xFF4
 35511                           prodl	equ	0xFF3
 35512                           intcon	equ	0xFF2
 35513                           intcon2	equ	0xFF1
 35514                           indf0	equ	0xFEF
 35515                           postinc0	equ	0xFEE
 35516                           plusw0	equ	0xFEB
 35517                           fsr0h	equ	0xFEA
 35518                           fsr0l	equ	0xFE9
 35519                           wreg	equ	0xFE8
 35520                           indf1	equ	0xFE7
 35521                           postdec1	equ	0xFE5
 35522                           fsr1h	equ	0xFE2
 35523                           fsr1l	equ	0xFE1
 35524                           bsr	equ	0xFE0
 35525                           indf2	equ	0xFDF
 35526                           postinc2	equ	0xFDE
 35527                           postdec2	equ	0xFDD
 35528                           plusw2	equ	0xFDB
 35529                           fsr2h	equ	0xFDA
 35530                           fsr2l	equ	0xFD9
 35531                           status	equ	0xFD8
 35532                           
 35533 ;; *************** function i1_UARTstringCRLN *****************
 35534 ;; Defined at:
 35535 ;;		line 262 in file "UART.c"
 35536 ;; Parameters:    Size  Location     Type
 35537 ;;  data            2    3[COMRAM] PTR unsigned char 
 35538 ;;		 -> STR_148(36), STR_146(27), STR_132(13), STR_101(13), 
 35539 ;;		 -> STR_98(21), STR_91(17), STR_82(29), STR_81(18), 
 35540 ;;		 -> STR_80(29), STR_77(44), STR_72(46), STR_71(42), 
 35541 ;;		 -> STR_70(50), STR_69(50), STR_67(31), STR_66(31), 
 35542 ;;		 -> STR_65(37), STR_64(37), STR_63(37), STR_59(18), 
 35543 ;;		 -> STR_58(14), STR_57(9), STR_56(20), STR_55(16), 
 35544 ;;		 -> STR_54(7), STR_53(35), STR_52(37), STR_49(47), 
 35545 ;;		 -> STR_44(17), STR_43(9), STR_42(18), STR_41(9), 
 35546 ;;		 -> STR_40(22), STR_39(11), STR_38(20), STR_37(7), 
 35547 ;;		 -> STR_36(31), STR_34(33), STR_30(32), STR_26(31), 
 35548 ;;		 -> STR_25(31), STR_23(29), STR_21(29), SYNTAX_ERR(14), 
 35549 ;;		 -> UseBluetooth@buf(100), STR_1(16), 
 35550 ;; Auto vars:     Size  Location     Type
 35551 ;;		None
 35552 ;; Return value:  Size  Location     Type
 35553 ;;		None               void
 35554 ;; Registers used:
 35555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35556 ;; Tracked objects:
 35557 ;;		On entry : 0/0
 35558 ;;		On exit  : 0/0
 35559 ;;		Unchanged: 0/0
 35560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35564 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35565 ;;Total ram usage:        2 bytes
 35566 ;; Hardware stack levels used:    1
 35567 ;; Hardware stack levels required when called:    4
 35568 ;; This function calls:
 35569 ;;		i1_UARTchar
 35570 ;;		i1_UARTstring
 35571 ;; This function is called by:
 35572 ;;		_low_isr
 35573 ;; This function uses a non-reentrant model
 35574 ;;
 35575                           
 35576                           	psect	text103
 35577  008C8A                     __ptext103:
 35578                           	opt stack 0
 35579  008C8A                     i1_UARTstringCRLN:
 35580                           	opt stack 17
 35581                           
 35582                           ;UART.c: 264: while(*data != 0)
 35583                           
 35584                           ;incstack = 0
 35585  008C8A  D016               	goto	i1l11713
 35586  008C8C                     i1l11709:
 35587                           
 35588                           ;UART.c: 265: {
 35589                           ;UART.c: 266: UARTchar(*data);
 35590  008C8C  C004  FFF6         	movff	i1UARTstringCRLN@data,tblptrl
 35591  008C90  C005  FFF7         	movff	i1UARTstringCRLN@data+1,tblptrh
 35592  008C94  0E00               	movlw	low (__mediumconst shr (0+16))
 35593  008C96  6EF8               	movwf	tblptru,c
 35594  008C98  0E0F               	movlw	(high __ramtop+-1)
 35595  008C9A  64F7               	cpfsgt	tblptrh,c
 35596  008C9C  D003               	bra	i1u1340_27
 35597  008C9E  0008               	tblrd		*
 35598  008CA0  50F5               	movf	tablat,w,c
 35599  008CA2  D005               	bra	i1u1340_20
 35600  008CA4                     i1u1340_27:
 35601  008CA4  CFF6 FFE9          	movff	tblptrl,fsr0l
 35602  008CA8  CFF7 FFEA          	movff	tblptrh,fsr0h
 35603  008CAC  50EF               	movf	indf0,w,c
 35604  008CAE                     i1u1340_20:
 35605  008CAE  ECF4  F049         	call	i1_UARTchar
 35606                           
 35607                           ;UART.c: 267: *data++;
 35608  008CB2  4A04               	infsnz	i1UARTstringCRLN@data,f,c
 35609  008CB4  2A05               	incf	i1UARTstringCRLN@data+1,f,c
 35610  008CB6  D000               	goto	i1l11713
 35611  008CB8                     i1l11713:
 35612  008CB8  C004  FFF6         	movff	i1UARTstringCRLN@data,tblptrl
 35613  008CBC  C005  FFF7         	movff	i1UARTstringCRLN@data+1,tblptrh
 35614  008CC0  0E00               	movlw	low (__mediumconst shr (0+16))
 35615  008CC2  6EF8               	movwf	tblptru,c
 35616  008CC4  0E0F               	movlw	(high __ramtop+-1)
 35617  008CC6  64F7               	cpfsgt	tblptrh,c
 35618  008CC8  D003               	bra	i1u1341_27
 35619  008CCA  0008               	tblrd		*
 35620  008CCC  50F5               	movf	tablat,w,c
 35621  008CCE  D005               	bra	i1u1341_20
 35622  008CD0                     i1u1341_27:
 35623  008CD0  CFF6 FFE9          	movff	tblptrl,fsr0l
 35624  008CD4  CFF7 FFEA          	movff	tblptrh,fsr0h
 35625  008CD8  50EF               	movf	indf0,w,c
 35626  008CDA                     i1u1341_20:
 35627  008CDA  0900               	iorlw	0
 35628  008CDC  A4D8               	btfss	status,2,c
 35629  008CDE  D7D6               	goto	i1l11709
 35630                           
 35631                           ;UART.c: 268: }
 35632                           ;UART.c: 269: UARTstring(CRLN);
 35633  008CE0  0ED1               	movlw	low _CRLN
 35634  008CE2  6E02               	movwf	i1UARTstring@data,c
 35635  008CE4  0EF0               	movlw	high _CRLN
 35636  008CE6  6E03               	movwf	i1UARTstring@data+1,c
 35637  008CE8  EC00  F047         	call	i1_UARTstring	;wreg free
 35638  008CEC  0012               	return		;funcret
 35639  008CEE                     __end_ofi1_UARTstringCRLN:
 35640                           	opt stack 0
 35641                           pclatu	equ	0xFFB
 35642                           pclath	equ	0xFFA
 35643                           tblptru	equ	0xFF8
 35644                           tblptrh	equ	0xFF7
 35645                           tblptrl	equ	0xFF6
 35646                           tablat	equ	0xFF5
 35647                           prodh	equ	0xFF4
 35648                           prodl	equ	0xFF3
 35649                           intcon	equ	0xFF2
 35650                           intcon2	equ	0xFF1
 35651                           indf0	equ	0xFEF
 35652                           postinc0	equ	0xFEE
 35653                           plusw0	equ	0xFEB
 35654                           fsr0h	equ	0xFEA
 35655                           fsr0l	equ	0xFE9
 35656                           wreg	equ	0xFE8
 35657                           indf1	equ	0xFE7
 35658                           postdec1	equ	0xFE5
 35659                           fsr1h	equ	0xFE2
 35660                           fsr1l	equ	0xFE1
 35661                           bsr	equ	0xFE0
 35662                           indf2	equ	0xFDF
 35663                           postinc2	equ	0xFDE
 35664                           postdec2	equ	0xFDD
 35665                           plusw2	equ	0xFDB
 35666                           fsr2h	equ	0xFDA
 35667                           fsr2l	equ	0xFD9
 35668                           status	equ	0xFD8
 35669                           
 35670 ;; *************** function i1_UARTstring *****************
 35671 ;; Defined at:
 35672 ;;		line 202 in file "UART.c"
 35673 ;; Parameters:    Size  Location     Type
 35674 ;;  data            2    1[COMRAM] PTR unsigned char 
 35675 ;;		 -> STR_147(28), STR_90(13), STR_79(32), STR_68(14), 
 35676 ;;		 -> SYNTAX_ERR(14), STR_18(5), STR_16(5), STR_14(6), 
 35677 ;;		 -> STR_12(6), STR_10(9), STR_8(21), STR_6(10), 
 35678 ;;		 -> BluetoothInitialSetup@buf(50), STR_2(4), CRLN(3), ReceivedString(255), 
 35679 ;; Auto vars:     Size  Location     Type
 35680 ;;		None
 35681 ;; Return value:  Size  Location     Type
 35682 ;;		None               void
 35683 ;; Registers used:
 35684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35685 ;; Tracked objects:
 35686 ;;		On entry : 0/0
 35687 ;;		On exit  : 0/0
 35688 ;;		Unchanged: 0/0
 35689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35694 ;;Total ram usage:        2 bytes
 35695 ;; Hardware stack levels used:    1
 35696 ;; Hardware stack levels required when called:    3
 35697 ;; This function calls:
 35698 ;;		i1_UARTchar
 35699 ;; This function is called by:
 35700 ;;		_low_isr
 35701 ;;		i1_UARTstringCRLN
 35702 ;; This function uses a non-reentrant model
 35703 ;;
 35704                           
 35705                           	psect	text104
 35706  008E00                     __ptext104:
 35707                           	opt stack 0
 35708  008E00                     i1_UARTstring:
 35709                           	opt stack 17
 35710                           
 35711                           ;UART.c: 204: while(*data != 0)
 35712                           
 35713                           ;incstack = 0
 35714  008E00  D016               	goto	i1l10609
 35715  008E02                     i1l10605:
 35716                           
 35717                           ;UART.c: 205: {
 35718                           ;UART.c: 206: UARTchar(*data);
 35719  008E02  C002  FFF6         	movff	i1UARTstring@data,tblptrl
 35720  008E06  C003  FFF7         	movff	i1UARTstring@data+1,tblptrh
 35721  008E0A  0E00               	movlw	low (__mediumconst shr (0+16))
 35722  008E0C  6EF8               	movwf	tblptru,c
 35723  008E0E  0E0F               	movlw	(high __ramtop+-1)
 35724  008E10  64F7               	cpfsgt	tblptrh,c
 35725  008E12  D003               	bra	i1u1179_27
 35726  008E14  0008               	tblrd		*
 35727  008E16  50F5               	movf	tablat,w,c
 35728  008E18  D005               	bra	i1u1179_20
 35729  008E1A                     i1u1179_27:
 35730  008E1A  CFF6 FFE9          	movff	tblptrl,fsr0l
 35731  008E1E  CFF7 FFEA          	movff	tblptrh,fsr0h
 35732  008E22  50EF               	movf	indf0,w,c
 35733  008E24                     i1u1179_20:
 35734  008E24  ECF4  F049         	call	i1_UARTchar
 35735                           
 35736                           ;UART.c: 207: *data++;
 35737  008E28  4A02               	infsnz	i1UARTstring@data,f,c
 35738  008E2A  2A03               	incf	i1UARTstring@data+1,f,c
 35739  008E2C  D000               	goto	i1l10609
 35740  008E2E                     i1l10609:
 35741  008E2E  C002  FFF6         	movff	i1UARTstring@data,tblptrl
 35742  008E32  C003  FFF7         	movff	i1UARTstring@data+1,tblptrh
 35743  008E36  0E00               	movlw	low (__mediumconst shr (0+16))
 35744  008E38  6EF8               	movwf	tblptru,c
 35745  008E3A  0E0F               	movlw	(high __ramtop+-1)
 35746  008E3C  64F7               	cpfsgt	tblptrh,c
 35747  008E3E  D003               	bra	i1u1180_27
 35748  008E40  0008               	tblrd		*
 35749  008E42  50F5               	movf	tablat,w,c
 35750  008E44  D005               	bra	i1u1180_20
 35751  008E46                     i1u1180_27:
 35752  008E46  CFF6 FFE9          	movff	tblptrl,fsr0l
 35753  008E4A  CFF7 FFEA          	movff	tblptrh,fsr0h
 35754  008E4E  50EF               	movf	indf0,w,c
 35755  008E50                     i1u1180_20:
 35756  008E50  0900               	iorlw	0
 35757  008E52  A4D8               	btfss	status,2,c
 35758  008E54  D7D6               	goto	i1l10605
 35759  008E56  0012               	return		;funcret
 35760  008E58                     __end_ofi1_UARTstring:
 35761                           	opt stack 0
 35762                           pclatu	equ	0xFFB
 35763                           pclath	equ	0xFFA
 35764                           tblptru	equ	0xFF8
 35765                           tblptrh	equ	0xFF7
 35766                           tblptrl	equ	0xFF6
 35767                           tablat	equ	0xFF5
 35768                           prodh	equ	0xFF4
 35769                           prodl	equ	0xFF3
 35770                           intcon	equ	0xFF2
 35771                           intcon2	equ	0xFF1
 35772                           indf0	equ	0xFEF
 35773                           postinc0	equ	0xFEE
 35774                           plusw0	equ	0xFEB
 35775                           fsr0h	equ	0xFEA
 35776                           fsr0l	equ	0xFE9
 35777                           wreg	equ	0xFE8
 35778                           indf1	equ	0xFE7
 35779                           postdec1	equ	0xFE5
 35780                           fsr1h	equ	0xFE2
 35781                           fsr1l	equ	0xFE1
 35782                           bsr	equ	0xFE0
 35783                           indf2	equ	0xFDF
 35784                           postinc2	equ	0xFDE
 35785                           postdec2	equ	0xFDD
 35786                           plusw2	equ	0xFDB
 35787                           fsr2h	equ	0xFDA
 35788                           fsr2l	equ	0xFD9
 35789                           status	equ	0xFD8
 35790                           
 35791 ;; *************** function i1_ReadUSART *****************
 35792 ;; Defined at:
 35793 ;;		line 227 in file "UART.c"
 35794 ;; Parameters:    Size  Location     Type
 35795 ;;		None
 35796 ;; Auto vars:     Size  Location     Type
 35797 ;;  ReadUSART       1    0[COMRAM] unsigned char 
 35798 ;; Return value:  Size  Location     Type
 35799 ;;                  1    wreg      unsigned char 
 35800 ;; Registers used:
 35801 ;;		wreg, status,2
 35802 ;; Tracked objects:
 35803 ;;		On entry : 0/0
 35804 ;;		On exit  : 0/0
 35805 ;;		Unchanged: 0/0
 35806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35811 ;;Total ram usage:        1 bytes
 35812 ;; Hardware stack levels used:    1
 35813 ;; Hardware stack levels required when called:    2
 35814 ;; This function calls:
 35815 ;;		Nothing
 35816 ;; This function is called by:
 35817 ;;		_low_isr
 35818 ;; This function uses a non-reentrant model
 35819 ;;
 35820                           
 35821                           	psect	text105
 35822  00942C                     __ptext105:
 35823                           	opt stack 0
 35824  00942C                     i1_ReadUSART:
 35825                           	opt stack 19
 35826                           
 35827                           ;UART.c: 229: unsigned char data;
 35828                           ;UART.c: 231: if(RCSTAbits.OERR)
 35829                           
 35830                           ;incstack = 0
 35831  00942C  A2AB               	btfss	4011,1,c	;volatile
 35832  00942E  D004               	goto	i1l661
 35833                           
 35834                           ;UART.c: 232: {
 35835                           ;UART.c: 234: RCSTAbits.CREN = 0;
 35836  009430  98AB               	bcf	4011,4,c	;volatile
 35837                           
 35838                           ;UART.c: 235: RCSTAbits.CREN = 1;
 35839  009432  88AB               	bsf	4011,4,c	;volatile
 35840                           
 35841                           ;UART.c: 236: return 0;
 35842  009434  0E00               	movlw	0
 35843  009436  0012               	return	
 35844  009438                     i1l661:
 35845                           
 35846                           ;UART.c: 237: }
 35847                           ;UART.c: 239: data = RCREG;
 35848  009438  CFAE F001          	movff	4014,i1ReadUSART@data	;volatile
 35849                           
 35850                           ;UART.c: 240: return (data);
 35851  00943C  5001               	movf	i1ReadUSART@data,w,c
 35852  00943E  0012               	return	
 35853  009440  0012               	return		;funcret
 35854  009442                     __end_ofi1_ReadUSART:
 35855                           	opt stack 0
 35856                           pclatu	equ	0xFFB
 35857                           pclath	equ	0xFFA
 35858                           tblptru	equ	0xFF8
 35859                           tblptrh	equ	0xFF7
 35860                           tblptrl	equ	0xFF6
 35861                           tablat	equ	0xFF5
 35862                           prodh	equ	0xFF4
 35863                           prodl	equ	0xFF3
 35864                           intcon	equ	0xFF2
 35865                           intcon2	equ	0xFF1
 35866                           indf0	equ	0xFEF
 35867                           postinc0	equ	0xFEE
 35868                           plusw0	equ	0xFEB
 35869                           fsr0h	equ	0xFEA
 35870                           fsr0l	equ	0xFE9
 35871                           wreg	equ	0xFE8
 35872                           indf1	equ	0xFE7
 35873                           postdec1	equ	0xFE5
 35874                           fsr1h	equ	0xFE2
 35875                           fsr1l	equ	0xFE1
 35876                           bsr	equ	0xFE0
 35877                           indf2	equ	0xFDF
 35878                           postinc2	equ	0xFDE
 35879                           postdec2	equ	0xFDD
 35880                           plusw2	equ	0xFDB
 35881                           fsr2h	equ	0xFDA
 35882                           fsr2l	equ	0xFD9
 35883                           status	equ	0xFD8
 35884                           
 35885 ;; *************** function i1_BlueConnected *****************
 35886 ;; Defined at:
 35887 ;;		line 88 in file "Bluetooth.c"
 35888 ;; Parameters:    Size  Location     Type
 35889 ;;		None
 35890 ;; Auto vars:     Size  Location     Type
 35891 ;;		None
 35892 ;; Return value:  Size  Location     Type
 35893 ;;                  1    wreg      unsigned char 
 35894 ;; Registers used:
 35895 ;;		wreg
 35896 ;; Tracked objects:
 35897 ;;		On entry : 0/0
 35898 ;;		On exit  : 0/0
 35899 ;;		Unchanged: 0/0
 35900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35905 ;;Total ram usage:        0 bytes
 35906 ;; Hardware stack levels used:    1
 35907 ;; Hardware stack levels required when called:    2
 35908 ;; This function calls:
 35909 ;;		Nothing
 35910 ;; This function is called by:
 35911 ;;		_low_isr
 35912 ;; This function uses a non-reentrant model
 35913 ;;
 35914                           
 35915                           	psect	text106
 35916  00950E                     __ptext106:
 35917                           	opt stack 0
 35918  00950E                     i1_BlueConnected:
 35919                           	opt stack 19
 35920                           
 35921                           ;Bluetooth.c: 91: if((PORTA & 0x02) == 0x02)
 35922                           
 35923                           ;incstack = 0
 35924  00950E  A280               	btfss	3968,1,c	;volatile
 35925  009510  D002               	goto	i1l11737
 35926                           
 35927                           ;Bluetooth.c: 92: {
 35928                           ;Bluetooth.c: 93: return 1;
 35929  009512  0E01               	movlw	1
 35930  009514  0012               	return	
 35931  009516                     i1l11737:
 35932                           
 35933                           ;Bluetooth.c: 94: }
 35934                           ;Bluetooth.c: 95: return 0;
 35935  009516  0E00               	movlw	0
 35936  009518  0012               	return	
 35937  00951A  0012               	return		;funcret
 35938  00951C                     __end_ofi1_BlueConnected:
 35939                           	opt stack 0
 35940                           pclatu	equ	0xFFB
 35941                           pclath	equ	0xFFA
 35942                           tblptru	equ	0xFF8
 35943                           tblptrh	equ	0xFF7
 35944                           tblptrl	equ	0xFF6
 35945                           tablat	equ	0xFF5
 35946                           prodh	equ	0xFF4
 35947                           prodl	equ	0xFF3
 35948                           intcon	equ	0xFF2
 35949                           intcon2	equ	0xFF1
 35950                           indf0	equ	0xFEF
 35951                           postinc0	equ	0xFEE
 35952                           plusw0	equ	0xFEB
 35953                           fsr0h	equ	0xFEA
 35954                           fsr0l	equ	0xFE9
 35955                           wreg	equ	0xFE8
 35956                           indf1	equ	0xFE7
 35957                           postdec1	equ	0xFE5
 35958                           fsr1h	equ	0xFE2
 35959                           fsr1l	equ	0xFE1
 35960                           bsr	equ	0xFE0
 35961                           indf2	equ	0xFDF
 35962                           postinc2	equ	0xFDE
 35963                           postdec2	equ	0xFDD
 35964                           plusw2	equ	0xFDB
 35965                           fsr2h	equ	0xFDA
 35966                           fsr2l	equ	0xFD9
 35967                           status	equ	0xFD8
 35968                           
 35969 ;; *************** function _IsCharacter *****************
 35970 ;; Defined at:
 35971 ;;		line 113 in file "MISC.c"
 35972 ;; Parameters:    Size  Location     Type
 35973 ;;  data            1    wreg     unsigned char 
 35974 ;; Auto vars:     Size  Location     Type
 35975 ;;  data            1    0[COMRAM] unsigned char 
 35976 ;; Return value:  Size  Location     Type
 35977 ;;                  1    wreg      unsigned char 
 35978 ;; Registers used:
 35979 ;;		wreg, status,2, status,0
 35980 ;; Tracked objects:
 35981 ;;		On entry : 0/0
 35982 ;;		On exit  : 0/0
 35983 ;;		Unchanged: 0/0
 35984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35988 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35989 ;;Total ram usage:        1 bytes
 35990 ;; Hardware stack levels used:    1
 35991 ;; Hardware stack levels required when called:    2
 35992 ;; This function calls:
 35993 ;;		Nothing
 35994 ;; This function is called by:
 35995 ;;		_low_isr
 35996 ;; This function uses a non-reentrant model
 35997 ;;
 35998                           
 35999                           	psect	text107
 36000  0093D0                     __ptext107:
 36001                           	opt stack 0
 36002  0093D0                     _IsCharacter:
 36003                           	opt stack 19
 36004                           
 36005                           ;incstack = 0
 36006                           ;IsCharacter@data stored from wreg
 36007  0093D0  6E01               	movwf	IsCharacter@data,c
 36008                           
 36009                           ;MISC.c: 115: if(data >= 32 && data <= 126)
 36010  0093D2  0E1F               	movlw	31
 36011  0093D4  6401               	cpfsgt	IsCharacter@data,c
 36012  0093D6  D005               	goto	i1l11495
 36013  0093D8  0E7F               	movlw	127
 36014  0093DA  6001               	cpfslt	IsCharacter@data,c
 36015  0093DC  D002               	goto	i1l11495
 36016                           
 36017                           ;MISC.c: 116: {
 36018                           ;MISC.c: 117: return 1;
 36019  0093DE  0E01               	movlw	1
 36020  0093E0  0012               	return	
 36021  0093E2                     i1l11495:
 36022                           
 36023                           ;MISC.c: 118: }
 36024                           ;MISC.c: 119: return 0;
 36025  0093E2  0E00               	movlw	0
 36026  0093E4  0012               	return	
 36027  0093E6  0012               	return		;funcret
 36028  0093E8                     __end_of_IsCharacter:
 36029                           	opt stack 0
 36030                           pclatu	equ	0xFFB
 36031                           pclath	equ	0xFFA
 36032                           tblptru	equ	0xFF8
 36033                           tblptrh	equ	0xFF7
 36034                           tblptrl	equ	0xFF6
 36035                           tablat	equ	0xFF5
 36036                           prodh	equ	0xFF4
 36037                           prodl	equ	0xFF3
 36038                           intcon	equ	0xFF2
 36039                           intcon2	equ	0xFF1
 36040                           indf0	equ	0xFEF
 36041                           postinc0	equ	0xFEE
 36042                           plusw0	equ	0xFEB
 36043                           fsr0h	equ	0xFEA
 36044                           fsr0l	equ	0xFE9
 36045                           wreg	equ	0xFE8
 36046                           indf1	equ	0xFE7
 36047                           postdec1	equ	0xFE5
 36048                           fsr1h	equ	0xFE2
 36049                           fsr1l	equ	0xFE1
 36050                           bsr	equ	0xFE0
 36051                           indf2	equ	0xFDF
 36052                           postinc2	equ	0xFDE
 36053                           postdec2	equ	0xFDD
 36054                           plusw2	equ	0xFDB
 36055                           fsr2h	equ	0xFDA
 36056                           fsr2l	equ	0xFD9
 36057                           status	equ	0xFD8
 36058                           
 36059 ;; *************** function _EraseScreen *****************
 36060 ;; Defined at:
 36061 ;;		line 308 in file "UART.c"
 36062 ;; Parameters:    Size  Location     Type
 36063 ;;  characters      1    wreg     unsigned char 
 36064 ;; Auto vars:     Size  Location     Type
 36065 ;;  characters      1    1[COMRAM] unsigned char 
 36066 ;;  i               1    2[COMRAM] unsigned char 
 36067 ;; Return value:  Size  Location     Type
 36068 ;;		None               void
 36069 ;; Registers used:
 36070 ;;		wreg, status,2, status,0, cstack
 36071 ;; Tracked objects:
 36072 ;;		On entry : 0/0
 36073 ;;		On exit  : 0/0
 36074 ;;		Unchanged: 0/0
 36075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36079 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36080 ;;Total ram usage:        2 bytes
 36081 ;; Hardware stack levels used:    1
 36082 ;; Hardware stack levels required when called:    3
 36083 ;; This function calls:
 36084 ;;		i1_UARTchar
 36085 ;; This function is called by:
 36086 ;;		_low_isr
 36087 ;; This function uses a non-reentrant model
 36088 ;;
 36089                           
 36090                           	psect	text108
 36091  009338                     __ptext108:
 36092                           	opt stack 0
 36093  009338                     _EraseScreen:
 36094                           	opt stack 18
 36095                           
 36096                           ;incstack = 0
 36097                           ;EraseScreen@characters stored from wreg
 36098  009338  6E02               	movwf	EraseScreen@characters,c
 36099                           
 36100                           ;UART.c: 310: unsigned char i;
 36101                           ;UART.c: 312: UARTchar('\r');
 36102  00933A  0E0D               	movlw	13
 36103  00933C  ECF4  F049         	call	i1_UARTchar
 36104                           
 36105                           ;UART.c: 313: for (i = 0; i < characters; i++)
 36106  009340  0E00               	movlw	0
 36107  009342  6E03               	movwf	EraseScreen@i,c
 36108  009344  D005               	goto	i1l11507
 36109  009346                     i1l11503:
 36110                           
 36111                           ;UART.c: 314: {
 36112                           ;UART.c: 315: UARTchar(' ');
 36113  009346  0E20               	movlw	32
 36114  009348  ECF4  F049         	call	i1_UARTchar
 36115  00934C  2A03               	incf	EraseScreen@i,f,c
 36116  00934E  D000               	goto	i1l11507
 36117  009350                     i1l11507:
 36118  009350  5002               	movf	EraseScreen@characters,w,c
 36119  009352  5C03               	subwf	EraseScreen@i,w,c
 36120  009354  A0D8               	btfss	status,0,c
 36121  009356  D7F7               	goto	i1l11503
 36122                           
 36123                           ;UART.c: 316: }
 36124                           ;UART.c: 317: UARTchar('\r');
 36125  009358  0E0D               	movlw	13
 36126  00935A  ECF4  F049         	call	i1_UARTchar
 36127  00935E  0012               	return		;funcret
 36128  009360                     __end_of_EraseScreen:
 36129                           	opt stack 0
 36130                           pclatu	equ	0xFFB
 36131                           pclath	equ	0xFFA
 36132                           tblptru	equ	0xFF8
 36133                           tblptrh	equ	0xFF7
 36134                           tblptrl	equ	0xFF6
 36135                           tablat	equ	0xFF5
 36136                           prodh	equ	0xFF4
 36137                           prodl	equ	0xFF3
 36138                           intcon	equ	0xFF2
 36139                           intcon2	equ	0xFF1
 36140                           indf0	equ	0xFEF
 36141                           postinc0	equ	0xFEE
 36142                           plusw0	equ	0xFEB
 36143                           fsr0h	equ	0xFEA
 36144                           fsr0l	equ	0xFE9
 36145                           wreg	equ	0xFE8
 36146                           indf1	equ	0xFE7
 36147                           postdec1	equ	0xFE5
 36148                           fsr1h	equ	0xFE2
 36149                           fsr1l	equ	0xFE1
 36150                           bsr	equ	0xFE0
 36151                           indf2	equ	0xFDF
 36152                           postinc2	equ	0xFDE
 36153                           postdec2	equ	0xFDD
 36154                           plusw2	equ	0xFDB
 36155                           fsr2h	equ	0xFDA
 36156                           fsr2l	equ	0xFD9
 36157                           status	equ	0xFD8
 36158                           
 36159 ;; *************** function i1_UARTchar *****************
 36160 ;; Defined at:
 36161 ;;		line 188 in file "UART.c"
 36162 ;; Parameters:    Size  Location     Type
 36163 ;;  data            1    wreg     unsigned char 
 36164 ;; Auto vars:     Size  Location     Type
 36165 ;;  data            1    0[COMRAM] unsigned char 
 36166 ;; Return value:  Size  Location     Type
 36167 ;;		None               void
 36168 ;; Registers used:
 36169 ;;		wreg, status,2
 36170 ;; Tracked objects:
 36171 ;;		On entry : 0/0
 36172 ;;		On exit  : 0/0
 36173 ;;		Unchanged: 0/0
 36174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36176 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36178 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36179 ;;Total ram usage:        1 bytes
 36180 ;; Hardware stack levels used:    1
 36181 ;; Hardware stack levels required when called:    2
 36182 ;; This function calls:
 36183 ;;		Nothing
 36184 ;; This function is called by:
 36185 ;;		_EraseScreen
 36186 ;;		_low_isr
 36187 ;;		i1_UARTstring
 36188 ;;		i1_UARTstringCRLN
 36189 ;; This function uses a non-reentrant model
 36190 ;;
 36191                           
 36192                           	psect	text109
 36193  0093E8                     __ptext109:
 36194                           	opt stack 0
 36195  0093E8                     i1_UARTchar:
 36196                           	opt stack 17
 36197                           
 36198                           ;incstack = 0
 36199                           ;i1UARTchar@data stored from wreg
 36200  0093E8  6E01               	movwf	i1UARTchar@data,c
 36201                           
 36202                           ;UART.c: 190: if(data != 0)
 36203  0093EA  5001               	movf	i1UARTchar@data,w,c
 36204  0093EC  B4D8               	btfsc	status,2,c
 36205  0093EE  0012               	return	
 36206                           
 36207                           ;UART.c: 191: {
 36208                           ;UART.c: 192: TXREG = data;
 36209  0093F0  C001  FFAD         	movff	i1UARTchar@data,4013	;volatile
 36210                           
 36211                           ;UART.c: 193: while(!TXSTAbits.TRMT);
 36212  0093F4  D000               	goto	i1l646
 36213  0093F6                     i1l646:
 36214  0093F6  B2AC               	btfsc	4012,1,c	;volatile
 36215  0093F8  0012               	return	
 36216  0093FA  D7FD               	goto	i1l646
 36217  0093FC  0012               	return	
 36218  0093FE  0012               	return		;funcret
 36219  009400                     __end_ofi1_UARTchar:
 36220                           	opt stack 0
 36221                           pclatu	equ	0xFFB
 36222                           pclath	equ	0xFFA
 36223                           tblptru	equ	0xFF8
 36224                           tblptrh	equ	0xFF7
 36225                           tblptrl	equ	0xFF6
 36226                           tablat	equ	0xFF5
 36227                           prodh	equ	0xFF4
 36228                           prodl	equ	0xFF3
 36229                           intcon	equ	0xFF2
 36230                           intcon2	equ	0xFF1
 36231                           indf0	equ	0xFEF
 36232                           postinc0	equ	0xFEE
 36233                           plusw0	equ	0xFEB
 36234                           fsr0h	equ	0xFEA
 36235                           fsr0l	equ	0xFE9
 36236                           wreg	equ	0xFE8
 36237                           indf1	equ	0xFE7
 36238                           postdec1	equ	0xFE5
 36239                           fsr1h	equ	0xFE2
 36240                           fsr1l	equ	0xFE1
 36241                           bsr	equ	0xFE0
 36242                           indf2	equ	0xFDF
 36243                           postinc2	equ	0xFDE
 36244                           postdec2	equ	0xFDD
 36245                           plusw2	equ	0xFDB
 36246                           fsr2h	equ	0xFDA
 36247                           fsr2l	equ	0xFD9
 36248                           status	equ	0xFD8
 36249                           
 36250 ;; *************** function _high_isr *****************
 36251 ;; Defined at:
 36252 ;;		line 59 in file "interrupts.c"
 36253 ;; Parameters:    Size  Location     Type
 36254 ;;		None
 36255 ;; Auto vars:     Size  Location     Type
 36256 ;;  Time0           2   35[COMRAM] unsigned int 
 36257 ;;  IRpin           1   34[COMRAM] unsigned char 
 36258 ;; Return value:  Size  Location     Type
 36259 ;;		None               void
 36260 ;; Registers used:
 36261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36262 ;; Tracked objects:
 36263 ;;		On entry : 0/0
 36264 ;;		On exit  : 0/0
 36265 ;;		Unchanged: 0/0
 36266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36268 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36269 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36270 ;;      Totals:         3      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36271 ;;Total ram usage:       21 bytes
 36272 ;; Hardware stack levels used:    1
 36273 ;; Hardware stack levels required when called:    1
 36274 ;; This function calls:
 36275 ;;		_IRrawToNEC
 36276 ;;		_ResetTimer3
 36277 ;;		_SetTimer0
 36278 ;;		i2_ReadIRpin
 36279 ;;		i2_ResetTimer0
 36280 ;;		i2_cleanBuffer16bit
 36281 ;; This function is called by:
 36282 ;;		Interrupt level 2
 36283 ;; This function uses a non-reentrant model
 36284 ;;
 36285                           
 36286                           	psect	intcode
 36287  000008                     __pintcode:
 36288                           	opt stack 0
 36289  000008                     _high_isr:
 36290                           	opt stack 17
 36291                           
 36292                           ;incstack = 0
 36293  000008  CFFA F06B          	movff	pclath,??_high_isr+4
 36294  00000C  CFFB F06C          	movff	pclatu,??_high_isr+5
 36295  000010  CFE9 F06D          	movff	fsr0l,??_high_isr+6
 36296  000014  EFA5  F01E         	goto	int_func
 36297                           pclatu	equ	0xFFB
 36298                           pclath	equ	0xFFA
 36299                           tblptru	equ	0xFF8
 36300                           tblptrh	equ	0xFF7
 36301                           tblptrl	equ	0xFF6
 36302                           tablat	equ	0xFF5
 36303                           prodh	equ	0xFF4
 36304                           prodl	equ	0xFF3
 36305                           intcon	equ	0xFF2
 36306                           intcon2	equ	0xFF1
 36307                           indf0	equ	0xFEF
 36308                           postinc0	equ	0xFEE
 36309                           plusw0	equ	0xFEB
 36310                           fsr0h	equ	0xFEA
 36311                           fsr0l	equ	0xFE9
 36312                           wreg	equ	0xFE8
 36313                           indf1	equ	0xFE7
 36314                           postdec1	equ	0xFE5
 36315                           fsr1h	equ	0xFE2
 36316                           fsr1l	equ	0xFE1
 36317                           bsr	equ	0xFE0
 36318                           indf2	equ	0xFDF
 36319                           postinc2	equ	0xFDE
 36320                           postdec2	equ	0xFDD
 36321                           plusw2	equ	0xFDB
 36322                           fsr2h	equ	0xFDA
 36323                           fsr2l	equ	0xFD9
 36324                           status	equ	0xFD8
 36325                           
 36326                           	psect	intcode_body
 36327  003D4A                     __pintcode_body:
 36328                           	opt stack 17
 36329  003D4A                     int_func:
 36330                           	opt stack 17
 36331  003D4A  CFEA F06E          	movff	fsr0h,??_high_isr+7
 36332  003D4E  CFE1 F06F          	movff	fsr1l,??_high_isr+8
 36333  003D52  CFE2 F070          	movff	fsr1h,??_high_isr+9
 36334  003D56  CFD9 F071          	movff	fsr2l,??_high_isr+10
 36335  003D5A  CFDA F072          	movff	fsr2h,??_high_isr+11
 36336  003D5E  CFF3 F073          	movff	prodl,??_high_isr+12
 36337  003D62  CFF4 F074          	movff	prodh,??_high_isr+13
 36338  003D66  CFF6 F075          	movff	tblptrl,??_high_isr+14
 36339  003D6A  CFF7 F076          	movff	tblptrh,??_high_isr+15
 36340  003D6E  CFF8 F077          	movff	tblptru,??_high_isr+16
 36341  003D72  CFF5 F078          	movff	tablat,??_high_isr+17
 36342                           
 36343                           ;interrupts.c: 68: unsigned char IRpin;
 36344                           ;interrupts.c: 69: unsigned int Time0;
 36345                           ;interrupts.c: 71: INTCONbits.GIE = 0;
 36346  003D76  9EF2               	bcf	intcon,7,c	;volatile
 36347                           
 36348                           ;interrupts.c: 73: if(INTCONbits.RBIF)
 36349  003D78  A0F2               	btfss	intcon,0,c	;volatile
 36350  003D7A  D083               	goto	i2l1211
 36351                           
 36352                           ;interrupts.c: 74: {
 36353                           ;interrupts.c: 75: __nop();
 36354  003D7C  F000               	nop	
 36355                           
 36356                           ;interrupts.c: 76: __nop();
 36357  003D7E  F000               	nop	
 36358                           
 36359                           ;interrupts.c: 77: IRtimeout = 0;
 36360  003D80  0E00               	movlw	0
 36361  003D82  0102               	movlb	2	; () banked
 36362  003D84  6FCA               	movwf	_IRtimeout& (0+255),b
 36363  003D86  0E00               	movlw	0
 36364  003D88  6FCB               	movwf	(_IRtimeout+1)& (0+255),b
 36365  003D8A  0E00               	movlw	0
 36366  003D8C  6FCC               	movwf	(_IRtimeout+2)& (0+255),b
 36367  003D8E  0E00               	movlw	0
 36368  003D90  6FCD               	movwf	(_IRtimeout+3)& (0+255),b
 36369                           
 36370                           ; BSR set to: 2
 36371                           ;interrupts.c: 78: IRpin = ReadIRpin();
 36372  003D92  EC8E  F04A         	call	i2_ReadIRpin	;wreg free
 36373  003D96  6E23               	movwf	high_isr@IRpin,c
 36374                           
 36375                           ;interrupts.c: 79: if(IRpin != IRpinOLD)
 36376  003D98  502E               	movf	_IRpinOLD,w,c
 36377  003D9A  1823               	xorwf	high_isr@IRpin,w,c
 36378  003D9C  B4D8               	btfsc	status,2,c
 36379  003D9E  D06B               	goto	i2l1212
 36380                           
 36381                           ;interrupts.c: 80: {
 36382                           ;interrupts.c: 81: (T0CONbits.TMR0ON = 1);
 36383  003DA0  8ED5               	bsf	4053,7,c	;volatile
 36384                           
 36385                           ;interrupts.c: 82: (INTCONbits.TMR0IE = 1);
 36386  003DA2  8AF2               	bsf	intcon,5,c	;volatile
 36387                           
 36388                           ;interrupts.c: 83: ReceivingIR = 19;
 36389  003DA4  0E13               	movlw	19
 36390  003DA6  6E44               	movwf	_ReceivingIR,c	;volatile
 36391                           
 36392                           ;interrupts.c: 84: IR_New_Code = 0;
 36393  003DA8  0E00               	movlw	0
 36394  003DAA  0100               	movlb	0	; () banked
 36395  003DAC  6FE5               	movwf	_IR_New_Code& (0+255),b
 36396                           
 36397                           ; BSR set to: 0
 36398                           ;interrupts.c: 85: Time0 = TMR0L;
 36399  003DAE  CFD6 F024          	movff	4054,high_isr@Time0	;volatile
 36400  003DB2  6A25               	clrf	high_isr@Time0+1,c
 36401                           
 36402                           ;interrupts.c: 86: Time0 += (TMR0H << 8);
 36403  003DB4  50D7               	movf	4055,w,c	;volatile
 36404  003DB6  2625               	addwf	high_isr@Time0+1,f,c
 36405                           
 36406                           ; BSR set to: 0
 36407                           ;interrupts.c: 87: if(IRrawCodeNum < 100)
 36408  003DB8  0E64               	movlw	100
 36409  003DBA  602F               	cpfslt	_IRrawCodeNum,c
 36410  003DBC  D057               	goto	i2l1213
 36411                           
 36412                           ; BSR set to: 0
 36413                           ;interrupts.c: 88: {
 36414                           ;interrupts.c: 89: if((IRrawCodeNum > 0) && (IRrawCodeNum <= 100))
 36415  003DBE  502F               	movf	_IRrawCodeNum,w,c
 36416  003DC0  B4D8               	btfsc	status,2,c
 36417  003DC2  D04C               	goto	i2l16477
 36418                           
 36419                           ; BSR set to: 0
 36420  003DC4  0E65               	movlw	101
 36421  003DC6  602F               	cpfslt	_IRrawCodeNum,c
 36422  003DC8  D049               	goto	i2l16477
 36423                           
 36424                           ; BSR set to: 0
 36425                           ;interrupts.c: 90: {
 36426                           ;interrupts.c: 91: IRRawCode[IRrawCodeNum - 1] = Time0;
 36427  003DCA  0EFE               	movlw	254
 36428  003DCC  0100               	movlb	0	; () banked
 36429  003DCE  6F67               	movwf	??_high_isr& (0+255),b
 36430  003DD0  0EFF               	movlw	255
 36431  003DD2  0100               	movlb	0	; () banked
 36432  003DD4  6F68               	movwf	(??_high_isr+1)& (0+255),b
 36433  003DD6  502F               	movf	_IRrawCodeNum,w,c
 36434  003DD8  0100               	movlb	0	; () banked
 36435  003DDA  6F69               	movwf	(??_high_isr+2)& (0+255),b
 36436  003DDC  6B6A               	clrf	(??_high_isr+3)& (0+255),b
 36437  003DDE  90D8               	bcf	status,0,c
 36438  003DE0  0100               	movlb	0	; () banked
 36439  003DE2  3769               	rlcf	(??_high_isr+2)& (0+255),f,b
 36440  003DE4  376A               	rlcf	(??_high_isr+3)& (0+255),f,b
 36441  003DE6  0100               	movlb	0	; () banked
 36442  003DE8  5167               	movf	??_high_isr& (0+255),w,b
 36443  003DEA  0100               	movlb	0	; () banked
 36444  003DEC  2769               	addwf	(??_high_isr+2)& (0+255),f,b
 36445  003DEE  0100               	movlb	0	; () banked
 36446  003DF0  5168               	movf	(??_high_isr+1)& (0+255),w,b
 36447  003DF2  0100               	movlb	0	; () banked
 36448  003DF4  236A               	addwfc	(??_high_isr+3)& (0+255),f,b
 36449  003DF6  0E00               	movlw	low _IRRawCode
 36450  003DF8  0100               	movlb	0	; () banked
 36451  003DFA  2569               	addwf	(??_high_isr+2)& (0+255),w,b
 36452  003DFC  6ED9               	movwf	fsr2l,c
 36453  003DFE  0E07               	movlw	high _IRRawCode
 36454  003E00  0100               	movlb	0	; () banked
 36455  003E02  216A               	addwfc	(??_high_isr+3)& (0+255),w,b
 36456  003E04  6EDA               	movwf	fsr2h,c
 36457  003E06  C024  FFDE         	movff	high_isr@Time0,postinc2
 36458  003E0A  C025  FFDD         	movff	high_isr@Time0+1,postdec2
 36459                           
 36460                           ; BSR set to: 0
 36461                           ;interrupts.c: 92: if((Time0 <= 21000 && Time0 >= 19000))
 36462  003E0E  0E09               	movlw	9
 36463  003E10  5C24               	subwf	high_isr@Time0,w,c
 36464  003E12  0E52               	movlw	82
 36465  003E14  5825               	subwfb	high_isr@Time0+1,w,c
 36466  003E16  B0D8               	btfsc	status,0,c
 36467  003E18  D00A               	goto	i2l16467
 36468                           
 36469                           ; BSR set to: 0
 36470  003E1A  0E38               	movlw	56
 36471  003E1C  5C24               	subwf	high_isr@Time0,w,c
 36472  003E1E  0E4A               	movlw	74
 36473  003E20  5825               	subwfb	high_isr@Time0+1,w,c
 36474  003E22  A0D8               	btfss	status,0,c
 36475  003E24  D004               	goto	i2l16467
 36476                           
 36477                           ; BSR set to: 0
 36478                           ;interrupts.c: 93: {
 36479                           ;interrupts.c: 95: (IOCBbits.IOCB4 = 0);
 36480  003E26  987D               	bcf	3965,4,c	;volatile
 36481                           
 36482                           ;interrupts.c: 96: INTCONbits.RBIE = 0;
 36483  003E28  96F2               	bcf	intcon,3,c	;volatile
 36484                           
 36485                           ;interrupts.c: 98: INTCONbits.TMR0IF = 1;
 36486  003E2A  84F2               	bsf	intcon,2,c	;volatile
 36487                           
 36488                           ;interrupts.c: 99: }
 36489  003E2C  D01A               	goto	i2l16479
 36490  003E2E                     i2l16467:
 36491                           
 36492                           ; BSR set to: 0
 36493                           ;interrupts.c: 100: else if(Time0 <= 50000 && Time0 >= 45000)
 36494  003E2E  0E51               	movlw	81
 36495  003E30  5C24               	subwf	high_isr@Time0,w,c
 36496  003E32  0EC3               	movlw	195
 36497  003E34  5825               	subwfb	high_isr@Time0+1,w,c
 36498  003E36  B0D8               	btfsc	status,0,c
 36499  003E38  D00E               	goto	i2l16475
 36500                           
 36501                           ; BSR set to: 0
 36502  003E3A  0EC8               	movlw	200
 36503  003E3C  5C24               	subwf	high_isr@Time0,w,c
 36504  003E3E  0EAF               	movlw	175
 36505  003E40  5825               	subwfb	high_isr@Time0+1,w,c
 36506  003E42  A0D8               	btfss	status,0,c
 36507  003E44  D008               	goto	i2l16475
 36508                           
 36509                           ; BSR set to: 0
 36510                           ;interrupts.c: 101: {
 36511                           ;interrupts.c: 103: (IOCBbits.IOCB4 = 0);
 36512  003E46  987D               	bcf	3965,4,c	;volatile
 36513                           
 36514                           ;interrupts.c: 104: INTCONbits.RBIE = 0;
 36515  003E48  96F2               	bcf	intcon,3,c	;volatile
 36516                           
 36517                           ; BSR set to: 0
 36518                           ;interrupts.c: 106: SetTimer0(0x8FFF);
 36519  003E4A  0E8F               	movlw	143
 36520  003E4C  6E1C               	movwf	SetTimer0@temp+1,c
 36521  003E4E  681B               	setf	SetTimer0@temp,c
 36522  003E50  ECA9  F04A         	call	_SetTimer0	;wreg free
 36523                           
 36524                           ;interrupts.c: 107: }
 36525  003E54  D006               	goto	i2l16479
 36526  003E56                     i2l16475:
 36527                           
 36528                           ;interrupts.c: 108: else
 36529                           ;interrupts.c: 109: {
 36530                           ;interrupts.c: 110: ResetTimer0();
 36531  003E56  ECA4  F04A         	call	i2_ResetTimer0	;wreg free
 36532                           
 36533                           ;interrupts.c: 111: }
 36534                           ;interrupts.c: 112: }
 36535  003E5A  D003               	goto	i2l16479
 36536  003E5C                     i2l16477:
 36537                           
 36538                           ;interrupts.c: 113: else
 36539                           ;interrupts.c: 114: {
 36540                           ;interrupts.c: 115: ResetTimer0();
 36541  003E5C  ECA4  F04A         	call	i2_ResetTimer0	;wreg free
 36542  003E60  D000               	goto	i2l16479
 36543  003E62                     i2l16479:
 36544                           
 36545                           ;interrupts.c: 116: }
 36546                           ;interrupts.c: 117: if(IRrawCodeNum <= 100)
 36547  003E62  0E65               	movlw	101
 36548  003E64  602F               	cpfslt	_IRrawCodeNum,c
 36549  003E66  D004               	goto	i2l1221
 36550                           
 36551                           ;interrupts.c: 118: {
 36552                           ;interrupts.c: 119: IRrawCodeNum++;
 36553  003E68  2A2F               	incf	_IRrawCodeNum,f,c
 36554                           
 36555                           ;interrupts.c: 120: }
 36556                           ;interrupts.c: 121: }
 36557  003E6A  D002               	goto	i2l1221
 36558  003E6C                     i2l1213:
 36559                           
 36560                           ; BSR set to: 0
 36561                           ;interrupts.c: 122: else
 36562                           ;interrupts.c: 123: {
 36563                           ;interrupts.c: 124: (IOCBbits.IOCB4 = 0);
 36564  003E6C  987D               	bcf	3965,4,c	;volatile
 36565                           
 36566                           ;interrupts.c: 125: INTCONbits.RBIE = 0;
 36567  003E6E  96F2               	bcf	intcon,3,c	;volatile
 36568  003E70                     i2l1221:
 36569                           
 36570                           ;interrupts.c: 126: }
 36571                           ;interrupts.c: 127: IRpinOLD = IRpin;
 36572  003E70  C023  F02E         	movff	high_isr@IRpin,_IRpinOLD
 36573                           
 36574                           ;interrupts.c: 128: }
 36575  003E74  D002               	goto	i2l16483
 36576  003E76                     i2l1212:
 36577                           
 36578                           ;interrupts.c: 129: else
 36579                           ;interrupts.c: 130: {
 36580                           ;interrupts.c: 132: __nop();
 36581  003E76  F000               	nop	
 36582  003E78  D000               	goto	i2l16483
 36583  003E7A                     i2l16483:
 36584                           
 36585                           ;interrupts.c: 133: }
 36586                           ;interrupts.c: 135: ReadIRpin();
 36587  003E7A  EC8E  F04A         	call	i2_ReadIRpin	;wreg free
 36588                           
 36589                           ;interrupts.c: 136: INTCONbits.RBIF = 0;
 36590  003E7E  90F2               	bcf	intcon,0,c	;volatile
 36591                           
 36592                           ;interrupts.c: 137: }
 36593  003E80  D21A               	goto	i2l1223
 36594  003E82                     i2l1211:
 36595                           
 36596                           ;interrupts.c: 138: else if(INTCONbits.TMR0IF)
 36597  003E82  A4F2               	btfss	intcon,2,c	;volatile
 36598  003E84  D030               	goto	i2l1224
 36599                           
 36600                           ;interrupts.c: 139: {
 36601                           ;interrupts.c: 141: (INTCONbits.TMR0IE = 0);
 36602  003E86  9AF2               	bcf	intcon,5,c	;volatile
 36603                           
 36604                           ;interrupts.c: 142: (T0CONbits.TMR0ON = 0);
 36605  003E88  9ED5               	bcf	4053,7,c	;volatile
 36606                           
 36607                           ;interrupts.c: 143: if(IRrawCodeNum >= (4))
 36608  003E8A  0E03               	movlw	3
 36609  003E8C  642F               	cpfsgt	_IRrawCodeNum,c
 36610  003E8E  D00E               	goto	i2l1225
 36611                           
 36612                           ;interrupts.c: 144: {
 36613                           ;interrupts.c: 145: IR_New_Code = IRrawToNEC(IRRawCode, &IR_NEC, 1);
 36614  003E90  0E00               	movlw	low _IRRawCode
 36615  003E92  6E1B               	movwf	IRrawToNEC@Raw,c
 36616  003E94  0E07               	movlw	high _IRRawCode
 36617  003E96  6E1C               	movwf	IRrawToNEC@Raw+1,c
 36618  003E98  0EE1               	movlw	low _IR_NEC
 36619  003E9A  6E1D               	movwf	IRrawToNEC@NEC,c
 36620  003E9C  0E00               	movlw	high _IR_NEC
 36621  003E9E  6E1E               	movwf	IRrawToNEC@NEC+1,c
 36622  003EA0  0E01               	movlw	1
 36623  003EA2  6E1F               	movwf	IRrawToNEC@Invert,c
 36624  003EA4  EC50  F028         	call	_IRrawToNEC	;wreg free
 36625  003EA8  0100               	movlb	0	; () banked
 36626  003EAA  6FE5               	movwf	_IR_New_Code& (0+255),b
 36627  003EAC                     i2l1225:
 36628                           
 36629                           ;interrupts.c: 146: }
 36630                           ;interrupts.c: 147: cleanBuffer16bit(IRRawCode,100);
 36631  003EAC  0E00               	movlw	low _IRRawCode
 36632  003EAE  6E1B               	movwf	i2cleanBuffer16bit@data,c
 36633  003EB0  0E07               	movlw	high _IRRawCode
 36634  003EB2  6E1C               	movwf	i2cleanBuffer16bit@data+1,c
 36635  003EB4  0E00               	movlw	0
 36636  003EB6  6E1E               	movwf	i2cleanBuffer16bit@count+1,c
 36637  003EB8  0E64               	movlw	100
 36638  003EBA  6E1D               	movwf	i2cleanBuffer16bit@count,c
 36639  003EBC  EC60  F048         	call	i2_cleanBuffer16bit	;wreg free
 36640                           
 36641                           ;interrupts.c: 148: IRrawCodeNum = 0;
 36642  003EC0  0E00               	movlw	0
 36643  003EC2  6E2F               	movwf	_IRrawCodeNum,c
 36644                           
 36645                           ;interrupts.c: 149: if(!IR_New_Code)
 36646  003EC4  0100               	movlb	0	; () banked
 36647  003EC6  51E5               	movf	_IR_New_Code& (0+255),w,b
 36648  003EC8  A4D8               	btfss	status,2,c
 36649  003ECA  D009               	goto	i2l16507
 36650                           
 36651                           ; BSR set to: 0
 36652                           ;interrupts.c: 150: {
 36653                           ;interrupts.c: 151: ReadIRpin();
 36654  003ECC  EC8E  F04A         	call	i2_ReadIRpin	;wreg free
 36655                           
 36656                           ;interrupts.c: 152: IRpinOLD = ReadIRpin();
 36657  003ED0  EC8E  F04A         	call	i2_ReadIRpin	;wreg free
 36658  003ED4  6E2E               	movwf	_IRpinOLD,c
 36659                           
 36660                           ;interrupts.c: 153: INTCONbits.RBIF = 0;
 36661  003ED6  90F2               	bcf	intcon,0,c	;volatile
 36662                           
 36663                           ;interrupts.c: 154: (IOCBbits.IOCB4 = 1);
 36664  003ED8  887D               	bsf	3965,4,c	;volatile
 36665                           
 36666                           ;interrupts.c: 155: INTCONbits.RBIE = 1;
 36667  003EDA  86F2               	bsf	intcon,3,c	;volatile
 36668  003EDC  D000               	goto	i2l16507
 36669  003EDE                     i2l16507:
 36670                           
 36671                           ;interrupts.c: 156: }
 36672                           ;interrupts.c: 157: ReceivingIR = 13;
 36673  003EDE  0E0D               	movlw	13
 36674  003EE0  6E44               	movwf	_ReceivingIR,c	;volatile
 36675                           
 36676                           ;interrupts.c: 158: INTCONbits.TMR0IF = 0;
 36677  003EE2  94F2               	bcf	intcon,2,c	;volatile
 36678                           
 36679                           ;interrupts.c: 159: }
 36680  003EE4  D1E8               	goto	i2l1223
 36681  003EE6                     i2l1224:
 36682                           
 36683                           ;interrupts.c: 160: else if(PIR1bits.TMR2IF)
 36684  003EE6  A29E               	btfss	3998,1,c	;volatile
 36685  003EE8  D1D3               	goto	i2l1228
 36686                           
 36687                           ;interrupts.c: 161: {
 36688                           ;interrupts.c: 164: Timer2_Postscaler++;
 36689  003EEA  2A39               	incf	_Timer2_Postscaler,f,c
 36690                           
 36691                           ;interrupts.c: 165: if(RF_IR == 55)
 36692  003EEC  0E37               	movlw	55
 36693  003EEE  1842               	xorwf	_RF_IR,w,c
 36694  003EF0  A4D8               	btfss	status,2,c
 36695  003EF2  D10C               	goto	i2l16745
 36696                           
 36697                           ;interrupts.c: 166: {
 36698                           ;interrupts.c: 168: if(Timer2_Postscaler >= RF_IR_Postscaler)
 36699  003EF4  5043               	movf	_RF_IR_Postscaler,w,c	;volatile
 36700  003EF6  5C39               	subwf	_Timer2_Postscaler,w,c
 36701  003EF8  A0D8               	btfss	status,0,c
 36702  003EFA  D103               	goto	i2l16741
 36703                           
 36704                           ;interrupts.c: 169: {
 36705                           ;interrupts.c: 170: Timer2_Postscaler = 0;
 36706  003EFC  0E00               	movlw	0
 36707  003EFE  6E39               	movwf	_Timer2_Postscaler,c
 36708                           
 36709                           ;interrupts.c: 171: if(RFsendCode[RFcodeBit] != 99)
 36710  003F00  5034               	movf	_RFcodeBit,w,c
 36711  003F02  0D01               	mullw	1
 36712  003F04  0ECE               	movlw	low _RFsendCode
 36713  003F06  24F3               	addwf	prodl,w,c
 36714  003F08  6ED9               	movwf	fsr2l,c
 36715  003F0A  0E02               	movlw	high _RFsendCode
 36716  003F0C  20F4               	addwfc	prodh,w,c
 36717  003F0E  6EDA               	movwf	fsr2h,c
 36718  003F10  0E63               	movlw	99
 36719  003F12  18DE               	xorwf	postinc2,w,c
 36720  003F14  B4D8               	btfsc	status,2,c
 36721  003F16  D0B3               	goto	i2l16691
 36722                           
 36723                           ;interrupts.c: 172: {
 36724                           ;interrupts.c: 174: if(RFsendFlag)
 36725  003F18  5036               	movf	_RFsendFlag,w,c	;volatile
 36726  003F1A  B4D8               	btfsc	status,2,c
 36727  003F1C  D0F2               	goto	i2l16741
 36728                           
 36729                           ;interrupts.c: 175: {
 36730                           ;interrupts.c: 176: if(RFsendCode[RFcodeBit] == 0)
 36731  003F1E  5034               	movf	_RFcodeBit,w,c
 36732  003F20  0D01               	mullw	1
 36733  003F22  0ECE               	movlw	low _RFsendCode
 36734  003F24  24F3               	addwf	prodl,w,c
 36735  003F26  6ED9               	movwf	fsr2l,c
 36736  003F28  0E02               	movlw	high _RFsendCode
 36737  003F2A  20F4               	addwfc	prodh,w,c
 36738  003F2C  6EDA               	movwf	fsr2h,c
 36739  003F2E  50DF               	movf	indf2,w,c
 36740  003F30  A4D8               	btfss	status,2,c
 36741  003F32  D03F               	goto	i2l16583
 36742                           
 36743                           ;interrupts.c: 177: {
 36744                           ;interrupts.c: 179: if(RFConfig == 1)
 36745  003F34  0433               	decf	_RFConfig,w,c
 36746  003F36  A4D8               	btfss	status,2,c
 36747  003F38  D025               	goto	i2l16561
 36748                           
 36749                           ;interrupts.c: 180: {
 36750                           ;interrupts.c: 181: if(RFcodePlace == 1)
 36751  003F3A  0435               	decf	_RFcodePlace,w,c
 36752  003F3C  A4D8               	btfss	status,2,c
 36753  003F3E  D007               	goto	i2l16535
 36754  003F40  D077               	goto	i2l16649
 36755  003F42                     i2l16531:
 36756                           
 36757                           ;interrupts.c: 184: (PR2 = 8);
 36758  003F42  0E08               	movlw	8
 36759  003F44                     L26:
 36760  003F44  6ECB               	movwf	4043,c	;volatile
 36761  003F46  D076               	goto	i2l16653
 36762  003F48                     L28:
 36763                           
 36764                           ;interrupts.c: 186: (TMR2 = 0);
 36765  003F48  0E00               	movlw	0
 36766  003F4A  6ECC               	movwf	4044,c	;volatile
 36767                           
 36768                           ;interrupts.c: 187: }
 36769  003F4C  D0DA               	goto	i2l16741
 36770  003F4E                     i2l16535:
 36771                           
 36772                           ;interrupts.c: 188: else if(RFcodePlace == 2)
 36773  003F4E  0E02               	movlw	2
 36774  003F50  1835               	xorwf	_RFcodePlace,w,c
 36775  003F52  A4D8               	btfss	status,2,c
 36776  003F54  D004               	goto	i2l16543
 36777  003F56  D074               	goto	L42
 36778                           
 36779                           ;interrupts.c: 189: {
 36780                           ;interrupts.c: 190: (LATC &= ~0x20);
 36781  003F58  D03E               	goto	i2l16591
 36782  003F5A                     i2l16541:
 36783                           
 36784                           ;interrupts.c: 192: RFcodePlace++;
 36785  003F5A  2A35               	incf	_RFcodePlace,f,c
 36786                           
 36787                           ;interrupts.c: 193: }
 36788  003F5C  D0D2               	goto	i2l16741
 36789  003F5E                     i2l16543:
 36790                           
 36791                           ;interrupts.c: 194: else if(RFcodePlace == 3)
 36792  003F5E  0E03               	movlw	3
 36793  003F60  1835               	xorwf	_RFcodePlace,w,c
 36794  003F62  A4D8               	btfss	status,2,c
 36795  003F64  D002               	goto	i2l16551
 36796  003F66  D064               	goto	i2l16649
 36797                           
 36798                           ;interrupts.c: 195: {
 36799                           ;interrupts.c: 196: (LATC |= 0x20);
 36800  003F68  D7EC               	goto	i2l16531
 36801  003F6A                     i2l16551:
 36802                           
 36803                           ;interrupts.c: 201: else if(RFcodePlace == 4)
 36804  003F6A  0E04               	movlw	4
 36805  003F6C  1835               	xorwf	_RFcodePlace,w,c
 36806  003F6E  A4D8               	btfss	status,2,c
 36807  003F70  D004               	goto	i2l1241
 36808                           
 36809                           ;interrupts.c: 202: {
 36810                           ;interrupts.c: 203: (LATC &= ~0x20);
 36811  003F72  9A8B               	bcf	3979,5,c	;volatile
 36812                           
 36813                           ;interrupts.c: 204: (PR2 = 24);
 36814  003F74  0E18               	movlw	24
 36815  003F76  D051               	goto	L27
 36816  003F78  D016               	goto	i2l16577
 36817  003F7A                     i2l1241:
 36818                           
 36819                           ;interrupts.c: 208: else
 36820                           ;interrupts.c: 209: {
 36821                           ;interrupts.c: 211: (T2CONbits.TMR2ON = 0);
 36822  003F7A  94CA               	bcf	4042,2,c	;volatile
 36823  003F7C  D07B               	goto	i2l16689
 36824  003F7E                     L31:
 36825                           
 36826                           ;interrupts.c: 213: RFsendFlag = 0;
 36827  003F7E  0E00               	movlw	0
 36828  003F80  6E36               	movwf	_RFsendFlag,c	;volatile
 36829                           
 36830                           ; BSR set to: 0
 36831                           ;interrupts.c: 214: }
 36832                           ;interrupts.c: 215: }
 36833                           
 36834                           ; BSR set to: 0
 36835                           
 36836                           ; BSR set to: 0
 36837                           
 36838                           ; BSR set to: 0
 36839  003F82  D0BF               	goto	i2l16741
 36840  003F84                     i2l16561:
 36841                           
 36842                           ;interrupts.c: 216: else if(RFConfig == 2)
 36843  003F84  0E02               	movlw	2
 36844  003F86  1833               	xorwf	_RFConfig,w,c
 36845  003F88  A4D8               	btfss	status,2,c
 36846  003F8A  D7F7               	goto	i2l1241
 36847                           
 36848                           ;interrupts.c: 217: {
 36849                           ;interrupts.c: 219: if(RFcodePlace == 1)
 36850  003F8C  0435               	decf	_RFcodePlace,w,c
 36851  003F8E  A4D8               	btfss	status,2,c
 36852  003F90  D003               	goto	i2l16571
 36853                           
 36854                           ;interrupts.c: 220: {
 36855                           ;interrupts.c: 221: (LATC |= 0x20);
 36856  003F92  8A8B               	bsf	3979,5,c	;volatile
 36857                           
 36858                           ;interrupts.c: 222: (PR2 = 11);
 36859  003F94  0E0B               	movlw	11
 36860  003F96  D7D6               	goto	L26
 36861  003F98                     i2l16571:
 36862                           
 36863                           ;interrupts.c: 226: else if(RFcodePlace == 2)
 36864  003F98  0E02               	movlw	2
 36865  003F9A  1835               	xorwf	_RFcodePlace,w,c
 36866  003F9C  A4D8               	btfss	status,2,c
 36867  003F9E  D7ED               	goto	i2l1241
 36868                           
 36869                           ;interrupts.c: 227: {
 36870                           ;interrupts.c: 228: (LATC &= ~0x20);
 36871  003FA0  9A8B               	bcf	3979,5,c	;volatile
 36872                           
 36873                           ;interrupts.c: 229: (PR2 = 29);
 36874  003FA2  0E1D               	movlw	29
 36875  003FA4  D03A               	goto	L27
 36876  003FA6                     i2l16577:
 36877                           
 36878                           ;interrupts.c: 230: RFcodePlace = 1;
 36879  003FA6  0E01               	movlw	1
 36880  003FA8  6E35               	movwf	_RFcodePlace,c
 36881                           
 36882                           ;interrupts.c: 231: RFcodeBit++;
 36883  003FAA  2A34               	incf	_RFcodeBit,f,c
 36884                           
 36885                           ; BSR set to: 0
 36886                           ;interrupts.c: 239: }
 36887                           ;interrupts.c: 240: }
 36888                           
 36889                           ; BSR set to: 0
 36890                           
 36891                           ;interrupts.c: 238: RFsendFlag = 0;
 36892                           
 36893                           ;interrupts.c: 237: Sent = 1;
 36894                           
 36895                           ;interrupts.c: 233: else
 36896                           ;interrupts.c: 234: {
 36897                           ;interrupts.c: 236: (T2CONbits.TMR2ON = 0);
 36898                           
 36899                           ;interrupts.c: 232: }
 36900  003FAC  D0AA               	goto	i2l16741
 36901                           
 36902                           ;interrupts.c: 241: else
 36903                           ;interrupts.c: 242: {
 36904                           ;interrupts.c: 244: (T2CONbits.TMR2ON = 0);
 36905  003FAE  D062               	goto	i2l16689
 36906                           
 36907                           ; BSR set to: 0
 36908                           ;interrupts.c: 247: }
 36909                           ;interrupts.c: 248: }
 36910                           
 36911                           ; BSR set to: 0
 36912                           
 36913                           ;interrupts.c: 246: RFsendFlag = 0;
 36914                           
 36915                           ;interrupts.c: 245: Sent = 1;
 36916  003FB0  D0A8               	goto	i2l16741
 36917  003FB2                     i2l16583:
 36918                           
 36919                           ;interrupts.c: 249: else if(RFsendCode[RFcodeBit] == 1)
 36920  003FB2  5034               	movf	_RFcodeBit,w,c
 36921  003FB4  0D01               	mullw	1
 36922  003FB6  0ECE               	movlw	low _RFsendCode
 36923  003FB8  24F3               	addwf	prodl,w,c
 36924  003FBA  6ED9               	movwf	fsr2l,c
 36925  003FBC  0E02               	movlw	high _RFsendCode
 36926  003FBE  20F4               	addwfc	prodh,w,c
 36927  003FC0  6EDA               	movwf	fsr2h,c
 36928  003FC2  04DE               	decf	postinc2,w,c
 36929  003FC4  A4D8               	btfss	status,2,c
 36930  003FC6  D02E               	goto	i2l16645
 36931                           
 36932                           ;interrupts.c: 250: {
 36933                           ;interrupts.c: 251: if(RFConfig == 1)
 36934  003FC8  0433               	decf	_RFConfig,w,c
 36935  003FCA  A4D8               	btfss	status,2,c
 36936  003FCC  D016               	goto	i2l16623
 36937                           
 36938                           ;interrupts.c: 252: {
 36939                           ;interrupts.c: 253: if(RFcodePlace == 1)
 36940  003FCE  0435               	decf	_RFcodePlace,w,c
 36941  003FD0  A4D8               	btfss	status,2,c
 36942  003FD2  D004               	goto	i2l16595
 36943  003FD4  D03C               	goto	L43
 36944  003FD6                     i2l16591:
 36945                           
 36946                           ;interrupts.c: 256: (PR2 = 24);
 36947  003FD6  0E18               	movlw	24
 36948  003FD8  6ECB               	movwf	4043,c	;volatile
 36949  003FDA  D7BF               	goto	i2l16541
 36950  003FDC                     i2l16595:
 36951                           
 36952                           ;interrupts.c: 259: else if(RFcodePlace == 2)
 36953  003FDC  0E02               	movlw	2
 36954  003FDE  1835               	xorwf	_RFcodePlace,w,c
 36955  003FE0  A4D8               	btfss	status,2,c
 36956  003FE2  D031               	goto	i2l16663
 36957                           
 36958                           ;interrupts.c: 260: {
 36959                           ;interrupts.c: 261: (LATC &= ~0x20);
 36960  003FE4  9A8B               	bcf	3979,5,c	;volatile
 36961  003FE6  D7AD               	goto	i2l16531
 36962                           
 36963                           ;interrupts.c: 265: }
 36964                           
 36965                           ;interrupts.c: 264: (TMR2 = 0);
 36966                           
 36967                           ;interrupts.c: 263: RFcodePlace++;
 36968                           
 36969                           ;interrupts.c: 262: (PR2 = 8);
 36970  003FE8  D02E               	goto	i2l16663
 36971                           
 36972                           ;interrupts.c: 267: {
 36973                           ;interrupts.c: 268: (LATC |= 0x20);
 36974                           
 36975                           ;interrupts.c: 266: else if(RFcodePlace == 3)
 36976  003FEA  D7F5               	goto	i2l16591
 36977                           
 36978                           ;interrupts.c: 269: (PR2 = 24);
 36979  003FEC  D7B6               	goto	i2l16541
 36980                           
 36981                           ;interrupts.c: 271: }
 36982                           
 36983                           ;interrupts.c: 270: RFcodePlace++;
 36984  003FEE  D032               	goto	i2l16671
 36985  003FF0                     i2l16615:
 36986                           
 36987                           ;interrupts.c: 275: (PR2 = 8);
 36988  003FF0  0E08               	movlw	8
 36989  003FF2  6ECB               	movwf	4043,c	;volatile
 36990  003FF4  D035               	goto	i2l16677
 36991                           
 36992                           ;interrupts.c: 277: RFcodeBit++;
 36993                           
 36994                           ;interrupts.c: 276: RFcodePlace = 1;
 36995  003FF6  D7A8               	goto	L28
 36996                           
 36997                           ; BSR set to: 0
 36998                           ;interrupts.c: 286: }
 36999                           ;interrupts.c: 287: }
 37000                           
 37001                           ; BSR set to: 0
 37002                           
 37003                           ; BSR set to: 0
 37004                           
 37005                           ; BSR set to: 0
 37006                           
 37007                           ;interrupts.c: 285: RFsendFlag = 0;
 37008                           
 37009                           ;interrupts.c: 284: Sent = 1;
 37010                           
 37011                           ;interrupts.c: 280: else
 37012                           ;interrupts.c: 281: {
 37013                           ;interrupts.c: 283: (T2CONbits.TMR2ON = 0);
 37014                           
 37015                           ;interrupts.c: 279: }
 37016                           
 37017                           ;interrupts.c: 278: (TMR2 = 0);
 37018  003FF8  D084               	goto	i2l16741
 37019  003FFA                     i2l16623:
 37020                           
 37021                           ;interrupts.c: 288: else if(RFConfig == 2)
 37022  003FFA  0E02               	movlw	2
 37023  003FFC  1833               	xorwf	_RFConfig,w,c
 37024  003FFE  A4D8               	btfss	status,2,c
 37025  004000  D7BC               	goto	i2l1241
 37026                           
 37027                           ;interrupts.c: 289: {
 37028                           ;interrupts.c: 291: if(RFcodePlace == 1)
 37029  004002  0435               	decf	_RFcodePlace,w,c
 37030  004004  A4D8               	btfss	status,2,c
 37031  004006  D003               	goto	i2l16633
 37032                           
 37033                           ;interrupts.c: 292: {
 37034                           ;interrupts.c: 293: (LATC |= 0x20);
 37035  004008  8A8B               	bsf	3979,5,c	;volatile
 37036                           
 37037                           ;interrupts.c: 294: (PR2 = 29);
 37038  00400A  0E1D               	movlw	29
 37039  00400C  D79B               	goto	L26
 37040  00400E                     i2l16633:
 37041                           
 37042                           ;interrupts.c: 298: else if(RFcodePlace == 2)
 37043  00400E  0E02               	movlw	2
 37044  004010  1835               	xorwf	_RFcodePlace,w,c
 37045  004012  A4D8               	btfss	status,2,c
 37046  004014  D004               	goto	i2l1265
 37047                           
 37048                           ;interrupts.c: 299: {
 37049                           ;interrupts.c: 300: (LATC &= ~0x20);
 37050  004016  9A8B               	bcf	3979,5,c	;volatile
 37051                           
 37052                           ;interrupts.c: 301: (PR2 = 11);
 37053  004018  0E0B               	movlw	11
 37054  00401A                     L27:
 37055  00401A  6ECB               	movwf	4043,c	;volatile
 37056  00401C  D7C4               	goto	i2l16577
 37057  00401E                     i2l1265:
 37058                           
 37059                           ;interrupts.c: 305: else
 37060                           ;interrupts.c: 306: {
 37061                           ;interrupts.c: 308: (T2CONbits.TMR2ON = 0);
 37062  00401E  94CA               	bcf	4042,2,c	;volatile
 37063  004020  D029               	goto	i2l16689
 37064                           
 37065                           ; BSR set to: 0
 37066                           ;interrupts.c: 319: }
 37067                           ;interrupts.c: 320: }
 37068                           
 37069                           ; BSR set to: 0
 37070                           
 37071                           ;interrupts.c: 318: RFsendFlag = 0;
 37072                           
 37073                           ;interrupts.c: 317: Sent = 1;
 37074                           
 37075                           ;interrupts.c: 313: else
 37076                           ;interrupts.c: 314: {
 37077                           ;interrupts.c: 316: (T2CONbits.TMR2ON = 0);
 37078                           
 37079                           ; BSR set to: 0
 37080                           ;interrupts.c: 311: }
 37081                           ;interrupts.c: 312: }
 37082                           
 37083                           ; BSR set to: 0
 37084                           
 37085                           ;interrupts.c: 310: RFsendFlag = 0;
 37086                           
 37087                           ;interrupts.c: 309: Sent = 1;
 37088  004022  D06F               	goto	i2l16741
 37089  004024                     i2l16645:
 37090                           
 37091                           ;interrupts.c: 321: else
 37092                           ;interrupts.c: 322: {
 37093                           ;interrupts.c: 323: if(RFConfig == 1)
 37094  004024  0433               	decf	_RFConfig,w,c
 37095  004026  A4D8               	btfss	status,2,c
 37096  004028  D020               	goto	i2l16683
 37097                           
 37098                           ;interrupts.c: 324: {
 37099                           ;interrupts.c: 326: if(RFcodePlace == 1)
 37100  00402A  0435               	decf	_RFcodePlace,w,c
 37101  00402C  A4D8               	btfss	status,2,c
 37102  00402E  D004               	goto	i2l16655
 37103  004030                     i2l16649:
 37104                           
 37105                           ;interrupts.c: 327: {
 37106                           ;interrupts.c: 328: (LATC |= 0x20);
 37107  004030  8A8B               	bsf	3979,5,c	;volatile
 37108  004032  D787               	goto	i2l16531
 37109  004034                     i2l16653:
 37110                           
 37111                           ;interrupts.c: 330: RFcodePlace++;
 37112  004034  2A35               	incf	_RFcodePlace,f,c
 37113  004036  D788               	goto	L28
 37114  004038                     i2l16655:
 37115                           
 37116                           ;interrupts.c: 333: else if(RFcodePlace == 2)
 37117  004038  0E02               	movlw	2
 37118  00403A  1835               	xorwf	_RFcodePlace,w,c
 37119  00403C  A4D8               	btfss	status,2,c
 37120  00403E  D003               	goto	i2l16663
 37121  004040                     L42:
 37122                           
 37123                           ;interrupts.c: 334: {
 37124                           ;interrupts.c: 335: (LATC &= ~0x20);
 37125  004040  9A8B               	bcf	3979,5,c	;volatile
 37126  004042  D7C9               	goto	i2l16591
 37127                           
 37128                           ;interrupts.c: 336: (PR2 = 24);
 37129  004044  D78A               	goto	i2l16541
 37130  004046                     i2l16663:
 37131                           
 37132                           ;interrupts.c: 339: else if(RFcodePlace == 3)
 37133  004046  0E03               	movlw	3
 37134  004048  1835               	xorwf	_RFcodePlace,w,c
 37135  00404A  A4D8               	btfss	status,2,c
 37136  00404C  D003               	goto	i2l16671
 37137  00404E                     L43:
 37138                           
 37139                           ;interrupts.c: 340: {
 37140                           ;interrupts.c: 341: (LATC |= 0x20);
 37141  00404E  8A8B               	bsf	3979,5,c	;volatile
 37142  004050  D7C2               	goto	i2l16591
 37143                           
 37144                           ;interrupts.c: 342: (PR2 = 24);
 37145  004052  D783               	goto	i2l16541
 37146  004054                     i2l16671:
 37147                           
 37148                           ;interrupts.c: 345: else if(RFcodePlace == 4)
 37149  004054  0E04               	movlw	4
 37150  004056  1835               	xorwf	_RFcodePlace,w,c
 37151  004058  A4D8               	btfss	status,2,c
 37152  00405A  D78F               	goto	i2l1241
 37153                           
 37154                           ;interrupts.c: 346: {
 37155                           ;interrupts.c: 347: (LATC &= ~0x20);
 37156  00405C  9A8B               	bcf	3979,5,c	;volatile
 37157  00405E  D7C8               	goto	i2l16615
 37158  004060                     i2l16677:
 37159                           
 37160                           ;interrupts.c: 349: RFcodePlace = 1;
 37161  004060  0E01               	movlw	1
 37162  004062  6E35               	movwf	_RFcodePlace,c
 37163                           
 37164                           ;interrupts.c: 350: RFcodeBit++;
 37165  004064  2A34               	incf	_RFcodeBit,f,c
 37166  004066  D770               	goto	L28
 37167                           
 37168                           ; BSR set to: 0
 37169                           ;interrupts.c: 359: }
 37170                           ;interrupts.c: 360: }
 37171                           
 37172                           ; BSR set to: 0
 37173                           
 37174                           ; BSR set to: 0
 37175                           
 37176                           ; BSR set to: 0
 37177                           
 37178                           ;interrupts.c: 358: RFsendFlag = 0;
 37179                           
 37180                           ;interrupts.c: 357: Sent = 1;
 37181                           
 37182                           ;interrupts.c: 353: else
 37183                           ;interrupts.c: 354: {
 37184                           ;interrupts.c: 356: (T2CONbits.TMR2ON = 0);
 37185                           
 37186                           ;interrupts.c: 352: }
 37187                           
 37188                           ;interrupts.c: 351: (TMR2 = 0);
 37189  004068  D04C               	goto	i2l16741
 37190  00406A                     i2l16683:
 37191                           
 37192                           ;interrupts.c: 361: else if(RFConfig == 2)
 37193  00406A  0E02               	movlw	2
 37194  00406C  1833               	xorwf	_RFConfig,w,c
 37195  00406E  A4D8               	btfss	status,2,c
 37196  004070  D784               	goto	i2l1241
 37197  004072  D783               	goto	i2l1241
 37198  004074                     i2l16689:
 37199                           
 37200                           ;interrupts.c: 372: Sent = 1;
 37201  004074  0E01               	movlw	1
 37202  004076  0100               	movlb	0	; () banked
 37203  004078  6FE6               	movwf	_Sent& (0+255),b	;volatile
 37204  00407A  D781               	goto	L31
 37205                           
 37206                           ; BSR set to: 0
 37207                           ;interrupts.c: 374: }
 37208                           ;interrupts.c: 375: }
 37209                           ;interrupts.c: 376: }
 37210                           ;interrupts.c: 377: }
 37211                           
 37212                           ; BSR set to: 0
 37213                           
 37214                           ; BSR set to: 0
 37215                           
 37216                           ; BSR set to: 0
 37217                           
 37218                           ; BSR set to: 0
 37219                           
 37220                           ;interrupts.c: 373: RFsendFlag = 0;
 37221  00407C  D042               	goto	i2l16741
 37222  00407E                     i2l16691:
 37223                           
 37224                           ;interrupts.c: 378: else
 37225                           ;interrupts.c: 379: {
 37226                           ;interrupts.c: 381: if(RFcodePlace == 1)
 37227  00407E  0435               	decf	_RFcodePlace,w,c
 37228  004080  A4D8               	btfss	status,2,c
 37229  004082  D016               	goto	i2l16709
 37230                           
 37231                           ;interrupts.c: 382: {
 37232                           ;interrupts.c: 383: if(RFConfig == 1)
 37233  004084  0433               	decf	_RFConfig,w,c
 37234  004086  A4D8               	btfss	status,2,c
 37235  004088  D003               	goto	i2l16699
 37236                           
 37237                           ;interrupts.c: 384: {
 37238                           ;interrupts.c: 385: (LATC |= 0x20);
 37239  00408A  8A8B               	bsf	3979,5,c	;volatile
 37240                           
 37241                           ;interrupts.c: 386: (PR2 = 8);
 37242  00408C  0E08               	movlw	8
 37243  00408E  D006               	goto	L29
 37244  004090                     i2l16699:
 37245                           
 37246                           ;interrupts.c: 388: else if(RFConfig == 2)
 37247  004090  0E02               	movlw	2
 37248  004092  1833               	xorwf	_RFConfig,w,c
 37249  004094  A4D8               	btfss	status,2,c
 37250  004096  D004               	goto	i2l1285
 37251                           
 37252                           ;interrupts.c: 389: {
 37253                           ;interrupts.c: 390: (LATC &= ~0x20);
 37254  004098  9A8B               	bcf	3979,5,c	;volatile
 37255                           
 37256                           ;interrupts.c: 391: (PR2 = 11);
 37257  00409A  0E0B               	movlw	11
 37258  00409C                     L29:
 37259  00409C  6ECB               	movwf	4043,c	;volatile
 37260                           
 37261                           ;interrupts.c: 392: }
 37262  00409E  D005               	goto	i2l1284
 37263  0040A0                     i2l1285:
 37264                           
 37265                           ;interrupts.c: 393: else
 37266                           ;interrupts.c: 394: {
 37267                           ;interrupts.c: 396: (T2CONbits.TMR2ON = 0);
 37268  0040A0  94CA               	bcf	4042,2,c	;volatile
 37269                           
 37270                           ;interrupts.c: 397: Sent = 1;
 37271  0040A2  0E01               	movlw	1
 37272  0040A4  0100               	movlb	0	; () banked
 37273  0040A6  6FE6               	movwf	_Sent& (0+255),b	;volatile
 37274  0040A8  D000               	goto	i2l1284
 37275  0040AA                     i2l1284:
 37276                           
 37277                           ;interrupts.c: 398: }
 37278                           ;interrupts.c: 399: (TMR2 = 0);
 37279  0040AA  0E00               	movlw	0
 37280  0040AC  6ECC               	movwf	4044,c	;volatile
 37281  0040AE  D755               	goto	i2l16541
 37282  0040B0                     i2l16709:
 37283                           
 37284                           ;interrupts.c: 402: else if( RFcodePlace == 2)
 37285  0040B0  0E02               	movlw	2
 37286  0040B2  1835               	xorwf	_RFcodePlace,w,c
 37287  0040B4  A4D8               	btfss	status,2,c
 37288  0040B6  D01C               	goto	i2l16729
 37289                           
 37290                           ;interrupts.c: 403: {
 37291                           ;interrupts.c: 404: if(RFConfig == 1)
 37292  0040B8  0433               	decf	_RFConfig,w,c
 37293  0040BA  A4D8               	btfss	status,2,c
 37294  0040BC  D003               	goto	i2l16717
 37295                           
 37296                           ;interrupts.c: 405: {
 37297                           ;interrupts.c: 406: (LATC &= ~0x20);
 37298  0040BE  9A8B               	bcf	3979,5,c	;volatile
 37299                           
 37300                           ;interrupts.c: 407: (PR2 = 250);
 37301  0040C0  0EFA               	movlw	250
 37302  0040C2  D005               	goto	L30
 37303  0040C4                     i2l16717:
 37304                           
 37305                           ;interrupts.c: 409: else if(RFConfig == 2)
 37306  0040C4  0E02               	movlw	2
 37307  0040C6  1833               	xorwf	_RFConfig,w,c
 37308  0040C8  A4D8               	btfss	status,2,c
 37309  0040CA  D003               	goto	i2l1291
 37310                           
 37311                           ;interrupts.c: 410: {
 37312                           ;interrupts.c: 411: (PR2 = 149);
 37313  0040CC  0E95               	movlw	149
 37314  0040CE                     L30:
 37315  0040CE  6ECB               	movwf	4043,c	;volatile
 37316                           
 37317                           ;interrupts.c: 412: }
 37318  0040D0  D005               	goto	i2l16723
 37319  0040D2                     i2l1291:
 37320                           
 37321                           ;interrupts.c: 413: else
 37322                           ;interrupts.c: 414: {
 37323                           ;interrupts.c: 416: (T2CONbits.TMR2ON = 0);
 37324  0040D2  94CA               	bcf	4042,2,c	;volatile
 37325                           
 37326                           ;interrupts.c: 417: Sent = 1;
 37327  0040D4  0E01               	movlw	1
 37328  0040D6  0100               	movlb	0	; () banked
 37329  0040D8  6FE6               	movwf	_Sent& (0+255),b	;volatile
 37330                           
 37331                           ; BSR set to: 0
 37332  0040DA  D000               	goto	i2l16723
 37333  0040DC                     i2l16723:
 37334                           
 37335                           ;interrupts.c: 418: }
 37336                           ;interrupts.c: 419: RFcodePlace++;
 37337  0040DC  2A35               	incf	_RFcodePlace,f,c
 37338                           
 37339                           ;interrupts.c: 420: Sendcount--;
 37340  0040DE  0637               	decf	_Sendcount,f,c	;volatile
 37341                           
 37342                           ;interrupts.c: 421: if(Sendcount)
 37343  0040E0  5037               	movf	_Sendcount,w,c	;volatile
 37344  0040E2  B4D8               	btfsc	status,2,c
 37345  0040E4  D00E               	goto	i2l16741
 37346                           
 37347                           ;interrupts.c: 422: {
 37348                           ;interrupts.c: 424: RFcodePlace = 1;
 37349  0040E6  0E01               	movlw	1
 37350  0040E8  6E35               	movwf	_RFcodePlace,c
 37351                           
 37352                           ;interrupts.c: 425: RFcodeBit = 0;
 37353  0040EA  0E00               	movlw	0
 37354  0040EC  6E34               	movwf	_RFcodeBit,c
 37355                           
 37356                           ;interrupts.c: 426: }
 37357                           ;interrupts.c: 427: }
 37358  0040EE  D009               	goto	i2l16741
 37359  0040F0                     i2l16729:
 37360                           
 37361                           ;interrupts.c: 428: else
 37362                           ;interrupts.c: 429: {
 37363                           ;interrupts.c: 431: ResetTimer3();
 37364  0040F0  ECAE  F04A         	call	_ResetTimer3	;wreg free
 37365                           
 37366                           ;interrupts.c: 432: PIR2bits.TMR3IF = 0;
 37367  0040F4  92A1               	bcf	4001,1,c	;volatile
 37368                           
 37369                           ;interrupts.c: 433: Timer3_Postscaler = 0;
 37370  0040F6  0E00               	movlw	0
 37371  0040F8  6E3A               	movwf	_Timer3_Postscaler,c
 37372                           
 37373                           ;interrupts.c: 434: (T3CONbits.TMR3ON = 1);
 37374  0040FA  80B1               	bsf	4017,0,c	;volatile
 37375                           
 37376                           ;interrupts.c: 435: (T2CONbits.TMR2ON = 0);
 37377  0040FC  94CA               	bcf	4042,2,c	;volatile
 37378  0040FE  D73F               	goto	L31
 37379                           
 37380                           ;interrupts.c: 436: RFsendFlag = 0;
 37381  004100  D000               	goto	i2l16741
 37382  004102                     i2l16741:
 37383                           
 37384                           ;interrupts.c: 437: }
 37385                           ;interrupts.c: 438: }
 37386                           ;interrupts.c: 439: }
 37387                           ;interrupts.c: 440: if(RFsendFlag)
 37388  004102  5036               	movf	_RFsendFlag,w,c	;volatile
 37389  004104  B4D8               	btfsc	status,2,c
 37390  004106  D0C2               	goto	i2l16869
 37391                           
 37392                           ;interrupts.c: 441: {
 37393                           ;interrupts.c: 443: (T2CONbits.TMR2ON = 1);
 37394  004108  84CA               	bsf	4042,2,c	;volatile
 37395                           
 37396                           ;interrupts.c: 444: }
 37397                           ;interrupts.c: 445: }
 37398  00410A  D0C0               	goto	i2l16869
 37399  00410C                     i2l16745:
 37400                           
 37401                           ;interrupts.c: 446: else
 37402                           ;interrupts.c: 447: {
 37403                           ;interrupts.c: 449: if(Timer2_Postscaler >= RF_IR_Postscaler)
 37404  00410C  5043               	movf	_RF_IR_Postscaler,w,c	;volatile
 37405  00410E  5C39               	subwf	_Timer2_Postscaler,w,c
 37406  004110  A0D8               	btfss	status,0,c
 37407  004112  D0BC               	goto	i2l16869
 37408                           
 37409                           ;interrupts.c: 450: {
 37410                           ;interrupts.c: 451: Timer2_Postscaler = 0;
 37411  004114  0E00               	movlw	0
 37412  004116  6E39               	movwf	_Timer2_Postscaler,c
 37413                           
 37414                           ;interrupts.c: 452: if(IRcodePlace == 7)
 37415  004118  0E07               	movlw	7
 37416  00411A  1841               	xorwf	_IRcodePlace,w,c
 37417  00411C  A4D8               	btfss	status,2,c
 37418  00411E  D00D               	goto	i2l16761
 37419                           
 37420                           ;interrupts.c: 453: {
 37421                           ;interrupts.c: 454: IRbitPosition = 32;
 37422  004120  0E20               	movlw	32
 37423  004122  6E40               	movwf	_IRbitPosition,c	;volatile
 37424                           
 37425                           ;interrupts.c: 455: (IRmod = 0);
 37426  004124  0E00               	movlw	0
 37427  004126  0100               	movlb	0	; () banked
 37428  004128  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37429                           
 37430                           ; BSR set to: 0
 37431                           ;interrupts.c: 456: (LATC &= ~0x08);
 37432  00412A  968B               	bcf	3979,3,c	;volatile
 37433                           
 37434                           ; BSR set to: 0
 37435                           ;interrupts.c: 457: IRcodePlace = 8;
 37436  00412C  0E08               	movlw	8
 37437  00412E  6E41               	movwf	_IRcodePlace,c
 37438                           
 37439                           ; BSR set to: 0
 37440                           ;interrupts.c: 458: RF_IR_Postscaler = 4;
 37441  004130  0E04               	movlw	4
 37442  004132  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37443                           
 37444                           ; BSR set to: 0
 37445                           ;interrupts.c: 459: (PR2 = 75);
 37446  004134  0E4B               	movlw	75
 37447  004136  6ECB               	movwf	4043,c	;volatile
 37448                           
 37449                           ;interrupts.c: 460: }
 37450  004138  D0A9               	goto	i2l16869
 37451  00413A                     i2l16761:
 37452                           
 37453                           ;interrupts.c: 461: else if(IRcodePlace == 8 || IRcodePlace == 10)
 37454  00413A  0E08               	movlw	8
 37455  00413C  1841               	xorwf	_IRcodePlace,w,c
 37456  00413E  B4D8               	btfsc	status,2,c
 37457  004140  D004               	goto	i2l16765
 37458  004142  0E0A               	movlw	10
 37459  004144  1841               	xorwf	_IRcodePlace,w,c
 37460  004146  A4D8               	btfss	status,2,c
 37461  004148  D013               	goto	i2l16775
 37462  00414A                     i2l16765:
 37463                           
 37464                           ;interrupts.c: 462: {
 37465                           ;interrupts.c: 463: (IRmod = 1);
 37466  00414A  0E01               	movlw	1
 37467  00414C  0100               	movlb	0	; () banked
 37468  00414E  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37469                           
 37470                           ;interrupts.c: 464: RF_IR_Postscaler = 1;
 37471  004150  0E01               	movlw	1
 37472  004152  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37473                           
 37474                           ; BSR set to: 0
 37475                           ;interrupts.c: 465: IRbit = (unsigned char) (IRsendCode & 0x01);
 37476  004154  0102               	movlb	2	; () banked
 37477  004156  51E2               	movf	_IRsendCode& (0+255),w,b
 37478  004158  0B01               	andlw	1
 37479  00415A  6E2C               	movwf	_IRbit,c
 37480                           
 37481                           ; BSR set to: 2
 37482                           ;interrupts.c: 466: IRsendCode >>= 1;
 37483  00415C  0102               	movlb	2	; () banked
 37484  00415E  90D8               	bcf	status,0,c
 37485  004160  33E5               	rrcf	(_IRsendCode+3)& (0+255),f,b
 37486  004162  33E4               	rrcf	(_IRsendCode+2)& (0+255),f,b
 37487  004164  33E3               	rrcf	(_IRsendCode+1)& (0+255),f,b
 37488  004166  33E2               	rrcf	_IRsendCode& (0+255),f,b
 37489                           
 37490                           ; BSR set to: 2
 37491                           ;interrupts.c: 467: (PR2 = 38);
 37492  004168  0E26               	movlw	38
 37493  00416A  6ECB               	movwf	4043,c	;volatile
 37494                           
 37495                           ; BSR set to: 2
 37496                           ;interrupts.c: 468: IRcodePlace = 9;
 37497  00416C  0E09               	movlw	9
 37498  00416E  D07A               	goto	L41
 37499  004170                     i2l16775:
 37500                           
 37501                           ;interrupts.c: 470: else if(IRcodePlace == 9)
 37502  004170  0E09               	movlw	9
 37503  004172  1841               	xorwf	_IRcodePlace,w,c
 37504  004174  A4D8               	btfss	status,2,c
 37505  004176  D017               	goto	i2l16797
 37506                           
 37507                           ;interrupts.c: 471: {
 37508                           ;interrupts.c: 472: (IRmod = 0);
 37509  004178  0E00               	movlw	0
 37510  00417A  0100               	movlb	0	; () banked
 37511  00417C  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37512                           
 37513                           ; BSR set to: 0
 37514                           ;interrupts.c: 473: (LATC &= ~0x08);
 37515  00417E  968B               	bcf	3979,3,c	;volatile
 37516                           
 37517                           ; BSR set to: 0
 37518                           ;interrupts.c: 474: RF_IR_Postscaler = 1;
 37519  004180  0E01               	movlw	1
 37520  004182  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37521                           
 37522                           ; BSR set to: 0
 37523                           ;interrupts.c: 475: if(IRbit)
 37524  004184  502C               	movf	_IRbit,w,c
 37525  004186  B4D8               	btfsc	status,2,c
 37526  004188  D002               	goto	i2l16787
 37527                           
 37528                           ; BSR set to: 0
 37529                           ;interrupts.c: 476: {
 37530                           ;interrupts.c: 478: (PR2 = 113);
 37531  00418A  0E71               	movlw	113
 37532  00418C  D001               	goto	L33
 37533  00418E                     i2l16787:
 37534                           
 37535                           ; BSR set to: 0
 37536                           ;interrupts.c: 480: else
 37537                           ;interrupts.c: 481: {
 37538                           ;interrupts.c: 483: (PR2 = 38);
 37539  00418E  0E26               	movlw	38
 37540  004190                     L33:
 37541  004190  6ECB               	movwf	4043,c	;volatile
 37542  004192  D000               	goto	i2l16789
 37543  004194                     i2l16789:
 37544                           
 37545                           ; BSR set to: 0
 37546                           ;interrupts.c: 484: }
 37547                           ;interrupts.c: 485: IRbitPosition--;
 37548  004194  0640               	decf	_IRbitPosition,f,c	;volatile
 37549                           
 37550                           ; BSR set to: 0
 37551                           ;interrupts.c: 486: if(IRbitPosition == 0)
 37552  004196  5040               	movf	_IRbitPosition,w,c	;volatile
 37553  004198  A4D8               	btfss	status,2,c
 37554  00419A  D002               	goto	i2l16795
 37555                           
 37556                           ; BSR set to: 0
 37557                           ;interrupts.c: 487: {
 37558                           ;interrupts.c: 488: IRcodePlace = 11;
 37559  00419C  0E0B               	movlw	11
 37560  00419E  D062               	goto	L41
 37561  0041A0                     i2l16795:
 37562                           
 37563                           ; BSR set to: 0
 37564                           ;interrupts.c: 490: else
 37565                           ;interrupts.c: 491: {
 37566                           ;interrupts.c: 492: IRcodePlace = 10;
 37567  0041A0  0E0A               	movlw	10
 37568  0041A2  D060               	goto	L41
 37569                           
 37570                           ; BSR set to: 0
 37571                           ;interrupts.c: 493: }
 37572                           ;interrupts.c: 494: }
 37573  0041A4  D073               	goto	i2l16869
 37574  0041A6                     i2l16797:
 37575                           
 37576                           ;interrupts.c: 495: else if(IRcodePlace == 11)
 37577  0041A6  0E0B               	movlw	11
 37578  0041A8  1841               	xorwf	_IRcodePlace,w,c
 37579  0041AA  A4D8               	btfss	status,2,c
 37580  0041AC  D007               	goto	i2l16801
 37581                           
 37582                           ;interrupts.c: 496: {
 37583                           ;interrupts.c: 497: (IRmod = 1);
 37584  0041AE  0E01               	movlw	1
 37585  0041B0  0100               	movlb	0	; () banked
 37586  0041B2  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37587                           
 37588                           ;interrupts.c: 498: (PR2 = 38);
 37589  0041B4  0E26               	movlw	38
 37590  0041B6  6ECB               	movwf	4043,c	;volatile
 37591                           
 37592                           ;interrupts.c: 499: IRcodePlace = 12;
 37593  0041B8  0E0C               	movlw	12
 37594  0041BA  D054               	goto	L41
 37595  0041BC                     i2l16801:
 37596                           
 37597                           ;interrupts.c: 501: else if(IRcodePlace == 12)
 37598  0041BC  0E0C               	movlw	12
 37599  0041BE  1841               	xorwf	_IRcodePlace,w,c
 37600  0041C0  A4D8               	btfss	status,2,c
 37601  0041C2  D011               	goto	i2l16815
 37602                           
 37603                           ;interrupts.c: 502: {
 37604                           ;interrupts.c: 503: (IRmod = 0);
 37605  0041C4  0E00               	movlw	0
 37606  0041C6  0100               	movlb	0	; () banked
 37607  0041C8  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37608                           
 37609                           ; BSR set to: 0
 37610                           ;interrupts.c: 504: (LATC &= ~0x08);
 37611  0041CA  968B               	bcf	3979,3,c	;volatile
 37612                           
 37613                           ; BSR set to: 0
 37614                           ;interrupts.c: 505: if(!IRrepeatflag)
 37615  0041CC  5031               	movf	_IRrepeatflag,w,c
 37616  0041CE  A4D8               	btfss	status,2,c
 37617  0041D0  D003               	goto	i2l16813
 37618                           
 37619                           ; BSR set to: 0
 37620                           ;interrupts.c: 506: {
 37621                           ;interrupts.c: 508: IRcodePlace = 13;
 37622  0041D2  0E0D               	movlw	13
 37623  0041D4  6E41               	movwf	_IRcodePlace,c
 37624  0041D6  D057               	goto	i2l16865
 37625  0041D8                     i2l16813:
 37626                           
 37627                           ; BSR set to: 0
 37628                           ;interrupts.c: 512: else
 37629                           ;interrupts.c: 513: {
 37630                           ;interrupts.c: 514: RF_IR_Postscaler = 11;
 37631  0041D8  0E0B               	movlw	11
 37632  0041DA  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37633                           
 37634                           ;interrupts.c: 515: (PR2 = 242);
 37635  0041DC  0EF2               	movlw	242
 37636  0041DE  6ECB               	movwf	4043,c	;volatile
 37637                           
 37638                           ;interrupts.c: 516: IRcodePlace = 14;
 37639  0041E0  0E0E               	movlw	14
 37640  0041E2  D040               	goto	L41
 37641                           
 37642                           ; BSR set to: 0
 37643                           ;interrupts.c: 517: }
 37644                           ;interrupts.c: 518: }
 37645  0041E4  D053               	goto	i2l16869
 37646  0041E6                     i2l16815:
 37647                           
 37648                           ;interrupts.c: 519: else if(IRcodePlace == 14 || IRcodePlace == 18)
 37649  0041E6  0E0E               	movlw	14
 37650  0041E8  1841               	xorwf	_IRcodePlace,w,c
 37651  0041EA  B4D8               	btfsc	status,2,c
 37652  0041EC  D004               	goto	i2l16819
 37653  0041EE  0E12               	movlw	18
 37654  0041F0  1841               	xorwf	_IRcodePlace,w,c
 37655  0041F2  A4D8               	btfss	status,2,c
 37656  0041F4  D009               	goto	i2l16821
 37657  0041F6                     i2l16819:
 37658                           
 37659                           ;interrupts.c: 520: {
 37660                           ;interrupts.c: 521: (IRmod = 1);
 37661  0041F6  0E01               	movlw	1
 37662  0041F8  0100               	movlb	0	; () banked
 37663  0041FA  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37664                           
 37665                           ;interrupts.c: 522: RF_IR_Postscaler = 4;
 37666  0041FC  0E04               	movlw	4
 37667  0041FE  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37668                           
 37669                           ;interrupts.c: 523: (PR2 = 150);
 37670  004200  0E96               	movlw	150
 37671  004202  6ECB               	movwf	4043,c	;volatile
 37672                           
 37673                           ;interrupts.c: 524: IRcodePlace = 15;
 37674  004204  0E0F               	movlw	15
 37675  004206  D02E               	goto	L41
 37676  004208                     i2l16821:
 37677                           
 37678                           ;interrupts.c: 526: else if(IRcodePlace == 15)
 37679  004208  0E0F               	movlw	15
 37680  00420A  1841               	xorwf	_IRcodePlace,w,c
 37681  00420C  A4D8               	btfss	status,2,c
 37682  00420E  D00A               	goto	i2l16833
 37683                           
 37684                           ;interrupts.c: 527: {
 37685                           ;interrupts.c: 528: (IRmod = 0);
 37686  004210  0E00               	movlw	0
 37687  004212  0100               	movlb	0	; () banked
 37688  004214  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37689                           
 37690                           ; BSR set to: 0
 37691                           ;interrupts.c: 529: (LATC &= ~0x08);
 37692  004216  968B               	bcf	3979,3,c	;volatile
 37693                           
 37694                           ; BSR set to: 0
 37695                           ;interrupts.c: 530: RF_IR_Postscaler = 1;
 37696  004218  0E01               	movlw	1
 37697  00421A  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37698                           
 37699                           ; BSR set to: 0
 37700                           ;interrupts.c: 531: (PR2 = 149);
 37701  00421C  0E95               	movlw	149
 37702  00421E  6ECB               	movwf	4043,c	;volatile
 37703                           
 37704                           ; BSR set to: 0
 37705                           ;interrupts.c: 532: IRcodePlace = 16;
 37706  004220  0E10               	movlw	16
 37707  004222  D020               	goto	L41
 37708  004224                     i2l16833:
 37709                           
 37710                           ;interrupts.c: 534: else if(IRcodePlace == 16)
 37711  004224  0E10               	movlw	16
 37712  004226  1841               	xorwf	_IRcodePlace,w,c
 37713  004228  A4D8               	btfss	status,2,c
 37714  00422A  D009               	goto	i2l16837
 37715                           
 37716                           ;interrupts.c: 535: {
 37717                           ;interrupts.c: 536: (IRmod = 1);
 37718  00422C  0E01               	movlw	1
 37719  00422E  0100               	movlb	0	; () banked
 37720  004230  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37721                           
 37722                           ;interrupts.c: 537: RF_IR_Postscaler = 1;
 37723  004232  0E01               	movlw	1
 37724  004234  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37725                           
 37726                           ;interrupts.c: 538: (PR2 = 38);
 37727  004236  0E26               	movlw	38
 37728  004238  6ECB               	movwf	4043,c	;volatile
 37729                           
 37730                           ;interrupts.c: 539: IRcodePlace = 17;
 37731  00423A  0E11               	movlw	17
 37732  00423C  D013               	goto	L41
 37733  00423E                     i2l16837:
 37734                           
 37735                           ;interrupts.c: 541: else if(IRcodePlace == 17)
 37736  00423E  0E11               	movlw	17
 37737  004240  1841               	xorwf	_IRcodePlace,w,c
 37738  004242  A4D8               	btfss	status,2,c
 37739  004244  D011               	goto	i2l16853
 37740                           
 37741                           ;interrupts.c: 542: {
 37742                           ;interrupts.c: 543: (IRmod = 0);
 37743  004246  0E00               	movlw	0
 37744  004248  0100               	movlb	0	; () banked
 37745  00424A  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37746                           
 37747                           ; BSR set to: 0
 37748                           ;interrupts.c: 544: (LATC &= ~0x08);
 37749  00424C  968B               	bcf	3979,3,c	;volatile
 37750                           
 37751                           ; BSR set to: 0
 37752                           ;interrupts.c: 545: RF_IR_Postscaler = 26;
 37753  00424E  0E1A               	movlw	26
 37754  004250  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37755                           
 37756                           ; BSR set to: 0
 37757                           ;interrupts.c: 546: (PR2 = 246);
 37758  004252  0EF6               	movlw	246
 37759  004254  6ECB               	movwf	4043,c	;volatile
 37760                           
 37761                           ; BSR set to: 0
 37762                           ;interrupts.c: 547: IRrepeatAmount--;
 37763  004256  0630               	decf	_IRrepeatAmount,f,c
 37764                           
 37765                           ;interrupts.c: 548: if(IRrepeatAmount)
 37766  004258  5030               	movf	_IRrepeatAmount,w,c
 37767  00425A  B4D8               	btfsc	status,2,c
 37768  00425C  D002               	goto	i2l16851
 37769                           
 37770                           ; BSR set to: 0
 37771                           ;interrupts.c: 549: {
 37772                           ;interrupts.c: 550: IRcodePlace = 18;
 37773  00425E  0E12               	movlw	18
 37774  004260  D001               	goto	L41
 37775  004262                     i2l16851:
 37776                           
 37777                           ; BSR set to: 0
 37778                           ;interrupts.c: 552: else
 37779                           ;interrupts.c: 553: {
 37780                           ;interrupts.c: 554: IRcodePlace = 13;
 37781  004262  0E0D               	movlw	13
 37782  004264                     L41:
 37783  004264  6E41               	movwf	_IRcodePlace,c
 37784                           
 37785                           ; BSR set to: 0
 37786                           ;interrupts.c: 555: }
 37787                           ;interrupts.c: 556: }
 37788  004266  D012               	goto	i2l16869
 37789  004268                     i2l16853:
 37790                           
 37791                           ;interrupts.c: 557: else if(IRcodePlace == 13)
 37792  004268  0E0D               	movlw	13
 37793  00426A  1841               	xorwf	_IRcodePlace,w,c
 37794  00426C  A4D8               	btfss	status,2,c
 37795  00426E  D005               	goto	i2l16859
 37796  004270  D00A               	goto	i2l16865
 37797  004272                     i2l16857:
 37798                           
 37799                           ;interrupts.c: 561: Sent = 1;
 37800  004272  0E01               	movlw	1
 37801  004274  0100               	movlb	0	; () banked
 37802  004276  6FE6               	movwf	_Sent& (0+255),b	;volatile
 37803                           
 37804                           ;interrupts.c: 562: }
 37805  004278  D009               	goto	i2l16869
 37806  00427A                     i2l16859:
 37807                           
 37808                           ;interrupts.c: 563: else
 37809                           ;interrupts.c: 564: {
 37810                           ;interrupts.c: 566: (IRmod = 0);
 37811  00427A  0E00               	movlw	0
 37812  00427C  0100               	movlb	0	; () banked
 37813  00427E  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37814                           
 37815                           ; BSR set to: 0
 37816                           ;interrupts.c: 567: (LATC &= ~0x08);
 37817  004280  968B               	bcf	3979,3,c	;volatile
 37818                           
 37819                           ; BSR set to: 0
 37820                           ;interrupts.c: 568: IRcodePlace = 0;
 37821  004282  0E00               	movlw	0
 37822  004284  6E41               	movwf	_IRcodePlace,c
 37823  004286                     i2l16865:
 37824                           
 37825                           ; BSR set to: 0
 37826                           ;interrupts.c: 569: (T2CONbits.TMR2ON = 0);
 37827  004286  94CA               	bcf	4042,2,c	;volatile
 37828  004288  D7F4               	goto	i2l16857
 37829                           
 37830                           ; BSR set to: 0
 37831                           
 37832                           ; BSR set to: 0
 37833                           
 37834                           ; BSR set to: 0
 37835                           
 37836                           ; BSR set to: 0
 37837                           
 37838                           ; BSR set to: 0
 37839                           
 37840                           ; BSR set to: 0
 37841                           
 37842                           ; BSR set to: 0
 37843                           
 37844                           ; BSR set to: 0
 37845                           
 37846                           ; BSR set to: 0
 37847                           
 37848                           ; BSR set to: 0
 37849                           
 37850                           ; BSR set to: 0
 37851                           
 37852                           ; BSR set to: 0
 37853                           ;interrupts.c: 570: Sent = 1;
 37854  00428A  D000               	goto	i2l16869
 37855  00428C                     i2l16869:
 37856                           
 37857                           ;interrupts.c: 571: }
 37858                           ;interrupts.c: 572: }
 37859                           ;interrupts.c: 573: }
 37860                           ;interrupts.c: 574: PIR1bits.TMR2IF = 0;
 37861  00428C  929E               	bcf	3998,1,c	;volatile
 37862                           
 37863                           ;interrupts.c: 575: }
 37864  00428E  D013               	goto	i2l1223
 37865  004290                     i2l1228:
 37866                           
 37867                           ;interrupts.c: 576: else if(PIR2bits.TMR3IF)
 37868  004290  A2A1               	btfss	4001,1,c	;volatile
 37869  004292  D00F               	goto	i2l1331
 37870                           
 37871                           ;interrupts.c: 577: {
 37872                           ;interrupts.c: 578: (T3CONbits.TMR3ON = 0);
 37873  004294  90B1               	bcf	4017,0,c	;volatile
 37874                           
 37875                           ;interrupts.c: 579: if(Timer3_Postscaler < 4)
 37876  004296  0E04               	movlw	4
 37877  004298  603A               	cpfslt	_Timer3_Postscaler,c
 37878  00429A  D005               	goto	i2l16881
 37879                           
 37880                           ;interrupts.c: 580: {
 37881                           ;interrupts.c: 581: ResetTimer3();
 37882  00429C  ECAE  F04A         	call	_ResetTimer3	;wreg free
 37883                           
 37884                           ;interrupts.c: 582: (T3CONbits.TMR3ON = 1);
 37885  0042A0  80B1               	bsf	4017,0,c	;volatile
 37886                           
 37887                           ;interrupts.c: 583: Timer3_Postscaler++;
 37888  0042A2  2A3A               	incf	_Timer3_Postscaler,f,c
 37889                           
 37890                           ;interrupts.c: 584: }
 37891  0042A4  D004               	goto	i2l16883
 37892  0042A6                     i2l16881:
 37893                           
 37894                           ;interrupts.c: 585: else
 37895                           ;interrupts.c: 586: {
 37896                           ;interrupts.c: 591: Sent = 1;
 37897  0042A6  0E01               	movlw	1
 37898  0042A8  0100               	movlb	0	; () banked
 37899  0042AA  6FE6               	movwf	_Sent& (0+255),b	;volatile
 37900  0042AC  D000               	goto	i2l16883
 37901  0042AE                     i2l16883:
 37902                           
 37903                           ;interrupts.c: 592: }
 37904                           ;interrupts.c: 593: PIR2bits.TMR3IF = 0;
 37905  0042AE  92A1               	bcf	4001,1,c	;volatile
 37906                           
 37907                           ;interrupts.c: 594: }
 37908  0042B0  D002               	goto	i2l1223
 37909  0042B2                     i2l1331:
 37910                           
 37911                           ;interrupts.c: 595: else
 37912                           ;interrupts.c: 596: {
 37913                           ;interrupts.c: 598: __nop();
 37914  0042B2  F000               	nop	
 37915  0042B4  D000               	goto	i2l1223
 37916  0042B6                     i2l1223:
 37917                           
 37918                           ;interrupts.c: 599: }
 37919                           ;interrupts.c: 601: INTCONbits.GIE = 1;
 37920  0042B6  8EF2               	bsf	intcon,7,c	;volatile
 37921  0042B8  C078  FFF5         	movff	??_high_isr+17,tablat
 37922  0042BC  C077  FFF8         	movff	??_high_isr+16,tblptru
 37923  0042C0  C076  FFF7         	movff	??_high_isr+15,tblptrh
 37924  0042C4  C075  FFF6         	movff	??_high_isr+14,tblptrl
 37925  0042C8  C074  FFF4         	movff	??_high_isr+13,prodh
 37926  0042CC  C073  FFF3         	movff	??_high_isr+12,prodl
 37927  0042D0  C072  FFDA         	movff	??_high_isr+11,fsr2h
 37928  0042D4  C071  FFD9         	movff	??_high_isr+10,fsr2l
 37929  0042D8  C070  FFE2         	movff	??_high_isr+9,fsr1h
 37930  0042DC  C06F  FFE1         	movff	??_high_isr+8,fsr1l
 37931  0042E0  C06E  FFEA         	movff	??_high_isr+7,fsr0h
 37932  0042E4  C06D  FFE9         	movff	??_high_isr+6,fsr0l
 37933  0042E8  C06C  FFFB         	movff	??_high_isr+5,pclatu
 37934  0042EC  C06B  FFFA         	movff	??_high_isr+4,pclath
 37935  0042F0  0011               	retfie		f
 37936  0042F2                     __end_of_high_isr:
 37937                           	opt stack 0
 37938                           pclatu	equ	0xFFB
 37939                           pclath	equ	0xFFA
 37940                           tblptru	equ	0xFF8
 37941                           tblptrh	equ	0xFF7
 37942                           tblptrl	equ	0xFF6
 37943                           tablat	equ	0xFF5
 37944                           prodh	equ	0xFF4
 37945                           prodl	equ	0xFF3
 37946                           intcon	equ	0xFF2
 37947                           intcon2	equ	0xFF1
 37948                           indf0	equ	0xFEF
 37949                           postinc0	equ	0xFEE
 37950                           plusw0	equ	0xFEB
 37951                           fsr0h	equ	0xFEA
 37952                           fsr0l	equ	0xFE9
 37953                           wreg	equ	0xFE8
 37954                           indf1	equ	0xFE7
 37955                           postdec1	equ	0xFE5
 37956                           fsr1h	equ	0xFE2
 37957                           fsr1l	equ	0xFE1
 37958                           bsr	equ	0xFE0
 37959                           indf2	equ	0xFDF
 37960                           postinc2	equ	0xFDE
 37961                           postdec2	equ	0xFDD
 37962                           plusw2	equ	0xFDB
 37963                           fsr2h	equ	0xFDA
 37964                           fsr2l	equ	0xFD9
 37965                           status	equ	0xFD8
 37966                           
 37967 ;; *************** function i2_cleanBuffer16bit *****************
 37968 ;; Defined at:
 37969 ;;		line 141 in file "MISC.c"
 37970 ;; Parameters:    Size  Location     Type
 37971 ;;  data            2   26[COMRAM] PTR unsigned int 
 37972 ;;		 -> IRRawCode(200), 
 37973 ;;  count           2   28[COMRAM] int 
 37974 ;; Auto vars:     Size  Location     Type
 37975 ;;  cleanBuffer1    1   33[COMRAM] unsigned char 
 37976 ;; Return value:  Size  Location     Type
 37977 ;;		None               void
 37978 ;; Registers used:
 37979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37980 ;; Tracked objects:
 37981 ;;		On entry : 0/0
 37982 ;;		On exit  : 0/0
 37983 ;;		Unchanged: 0/0
 37984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37985 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37987 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37988 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37989 ;;Total ram usage:        8 bytes
 37990 ;; Hardware stack levels used:    1
 37991 ;; This function calls:
 37992 ;;		Nothing
 37993 ;; This function is called by:
 37994 ;;		_high_isr
 37995 ;; This function uses a non-reentrant model
 37996 ;;
 37997                           
 37998                           	psect	text111
 37999  0090C0                     __ptext111:
 38000                           	opt stack 0
 38001  0090C0                     i2_cleanBuffer16bit:
 38002                           	opt stack 17
 38003                           
 38004                           ;MISC.c: 143: unsigned char i=0;
 38005                           
 38006                           ;incstack = 0
 38007  0090C0  0E00               	movlw	0
 38008  0090C2  6E22               	movwf	i2cleanBuffer16bit@i,c
 38009                           
 38010                           ;MISC.c: 144: for(i=0; i<count;i++)
 38011  0090C4  0E00               	movlw	0
 38012  0090C6  6E22               	movwf	i2cleanBuffer16bit@i,c
 38013  0090C8  D00E               	goto	i2l11693
 38014  0090CA                     i2l11689:
 38015                           
 38016                           ;MISC.c: 145: {
 38017                           ;MISC.c: 146: data[i]= 0;
 38018  0090CA  5022               	movf	i2cleanBuffer16bit@i,w,c
 38019  0090CC  0D02               	mullw	2
 38020  0090CE  50F3               	movf	prodl,w,c
 38021  0090D0  241B               	addwf	i2cleanBuffer16bit@data,w,c
 38022  0090D2  6ED9               	movwf	fsr2l,c
 38023  0090D4  50F4               	movf	prodh,w,c
 38024  0090D6  201C               	addwfc	i2cleanBuffer16bit@data+1,w,c
 38025  0090D8  6EDA               	movwf	fsr2h,c
 38026  0090DA  0E00               	movlw	0
 38027  0090DC  6EDE               	movwf	postinc2,c
 38028  0090DE  0E00               	movlw	0
 38029  0090E0  6EDD               	movwf	postdec2,c
 38030  0090E2  2A22               	incf	i2cleanBuffer16bit@i,f,c
 38031  0090E4  D000               	goto	i2l11693
 38032  0090E6                     i2l11693:
 38033  0090E6  5022               	movf	i2cleanBuffer16bit@i,w,c
 38034  0090E8  6E1F               	movwf	??i2_cleanBuffer16bit& (0+255),c
 38035  0090EA  6A20               	clrf	(??i2_cleanBuffer16bit+1)& (0+255),c
 38036  0090EC  501D               	movf	i2cleanBuffer16bit@count,w,c
 38037  0090EE  5C1F               	subwf	??i2_cleanBuffer16bit,w,c
 38038  0090F0  5020               	movf	??i2_cleanBuffer16bit+1,w,c
 38039  0090F2  0A80               	xorlw	128
 38040  0090F4  6E21               	movwf	(??i2_cleanBuffer16bit+2)& (0+255),c
 38041  0090F6  501E               	movf	i2cleanBuffer16bit@count+1,w,c
 38042  0090F8  0A80               	xorlw	128
 38043  0090FA  5821               	subwfb	(??i2_cleanBuffer16bit+2)& (0+255),w,c
 38044  0090FC  A0D8               	btfss	status,0,c
 38045  0090FE  D7E5               	goto	i2l11689
 38046  009100  0012               	return		;funcret
 38047  009102                     __end_ofi2_cleanBuffer16bit:
 38048                           	opt stack 0
 38049                           pclatu	equ	0xFFB
 38050                           pclath	equ	0xFFA
 38051                           tblptru	equ	0xFF8
 38052                           tblptrh	equ	0xFF7
 38053                           tblptrl	equ	0xFF6
 38054                           tablat	equ	0xFF5
 38055                           prodh	equ	0xFF4
 38056                           prodl	equ	0xFF3
 38057                           intcon	equ	0xFF2
 38058                           intcon2	equ	0xFF1
 38059                           indf0	equ	0xFEF
 38060                           postinc0	equ	0xFEE
 38061                           plusw0	equ	0xFEB
 38062                           fsr0h	equ	0xFEA
 38063                           fsr0l	equ	0xFE9
 38064                           wreg	equ	0xFE8
 38065                           indf1	equ	0xFE7
 38066                           postdec1	equ	0xFE5
 38067                           fsr1h	equ	0xFE2
 38068                           fsr1l	equ	0xFE1
 38069                           bsr	equ	0xFE0
 38070                           indf2	equ	0xFDF
 38071                           postinc2	equ	0xFDE
 38072                           postdec2	equ	0xFDD
 38073                           plusw2	equ	0xFDB
 38074                           fsr2h	equ	0xFDA
 38075                           fsr2l	equ	0xFD9
 38076                           status	equ	0xFD8
 38077                           
 38078 ;; *************** function i2_ResetTimer0 *****************
 38079 ;; Defined at:
 38080 ;;		line 79 in file "Timer.c"
 38081 ;; Parameters:    Size  Location     Type
 38082 ;;		None
 38083 ;; Auto vars:     Size  Location     Type
 38084 ;;		None
 38085 ;; Return value:  Size  Location     Type
 38086 ;;		None               void
 38087 ;; Registers used:
 38088 ;;		wreg, status,2
 38089 ;; Tracked objects:
 38090 ;;		On entry : 0/0
 38091 ;;		On exit  : 0/0
 38092 ;;		Unchanged: 0/0
 38093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38098 ;;Total ram usage:        0 bytes
 38099 ;; Hardware stack levels used:    1
 38100 ;; This function calls:
 38101 ;;		Nothing
 38102 ;; This function is called by:
 38103 ;;		_high_isr
 38104 ;; This function uses a non-reentrant model
 38105 ;;
 38106                           
 38107                           	psect	text112
 38108  009548                     __ptext112:
 38109                           	opt stack 0
 38110  009548                     i2_ResetTimer0:
 38111                           	opt stack 17
 38112                           
 38113                           ;Timer.c: 85: TMR0H = 0;
 38114                           
 38115                           ;incstack = 0
 38116  009548  0E00               	movlw	0
 38117  00954A  6ED7               	movwf	4055,c	;volatile
 38118                           
 38119                           ;Timer.c: 86: TMR0L = 2;
 38120  00954C  0E02               	movlw	2
 38121  00954E  6ED6               	movwf	4054,c	;volatile
 38122  009550  0012               	return		;funcret
 38123  009552                     __end_ofi2_ResetTimer0:
 38124                           	opt stack 0
 38125                           pclatu	equ	0xFFB
 38126                           pclath	equ	0xFFA
 38127                           tblptru	equ	0xFF8
 38128                           tblptrh	equ	0xFF7
 38129                           tblptrl	equ	0xFF6
 38130                           tablat	equ	0xFF5
 38131                           prodh	equ	0xFF4
 38132                           prodl	equ	0xFF3
 38133                           intcon	equ	0xFF2
 38134                           intcon2	equ	0xFF1
 38135                           indf0	equ	0xFEF
 38136                           postinc0	equ	0xFEE
 38137                           plusw0	equ	0xFEB
 38138                           fsr0h	equ	0xFEA
 38139                           fsr0l	equ	0xFE9
 38140                           wreg	equ	0xFE8
 38141                           indf1	equ	0xFE7
 38142                           postdec1	equ	0xFE5
 38143                           fsr1h	equ	0xFE2
 38144                           fsr1l	equ	0xFE1
 38145                           bsr	equ	0xFE0
 38146                           indf2	equ	0xFDF
 38147                           postinc2	equ	0xFDE
 38148                           postdec2	equ	0xFDD
 38149                           plusw2	equ	0xFDB
 38150                           fsr2h	equ	0xFDA
 38151                           fsr2l	equ	0xFD9
 38152                           status	equ	0xFD8
 38153                           
 38154 ;; *************** function i2_ReadIRpin *****************
 38155 ;; Defined at:
 38156 ;;		line 107 in file "IR.c"
 38157 ;; Parameters:    Size  Location     Type
 38158 ;;		None
 38159 ;; Auto vars:     Size  Location     Type
 38160 ;;		None
 38161 ;; Return value:  Size  Location     Type
 38162 ;;                  1    wreg      unsigned char 
 38163 ;; Registers used:
 38164 ;;		wreg
 38165 ;; Tracked objects:
 38166 ;;		On entry : 0/0
 38167 ;;		On exit  : 0/0
 38168 ;;		Unchanged: 0/0
 38169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38174 ;;Total ram usage:        0 bytes
 38175 ;; Hardware stack levels used:    1
 38176 ;; This function calls:
 38177 ;;		Nothing
 38178 ;; This function is called by:
 38179 ;;		_high_isr
 38180 ;; This function uses a non-reentrant model
 38181 ;;
 38182                           
 38183                           	psect	text113
 38184  00951C                     __ptext113:
 38185                           	opt stack 0
 38186  00951C                     i2_ReadIRpin:
 38187                           	opt stack 17
 38188                           
 38189                           ;IR.c: 110: if((PORTB & 0x10) == 0x10)
 38190                           
 38191                           ;incstack = 0
 38192  00951C  A881               	btfss	3969,4,c	;volatile
 38193  00951E  D002               	goto	i2l11727
 38194                           
 38195                           ;IR.c: 111: {
 38196                           ;IR.c: 112: return (1);
 38197  009520  0E01               	movlw	1
 38198                           
 38199                           ;IR.c: 113: }
 38200  009522  0012               	return	
 38201  009524                     i2l11727:
 38202                           
 38203                           ;IR.c: 114: else
 38204                           ;IR.c: 115: {
 38205                           ;IR.c: 116: return 0;
 38206  009524  0E00               	movlw	0
 38207  009526  0012               	return	
 38208  009528  0012               	return		;funcret
 38209  00952A                     __end_ofi2_ReadIRpin:
 38210                           	opt stack 0
 38211                           pclatu	equ	0xFFB
 38212                           pclath	equ	0xFFA
 38213                           tblptru	equ	0xFF8
 38214                           tblptrh	equ	0xFF7
 38215                           tblptrl	equ	0xFF6
 38216                           tablat	equ	0xFF5
 38217                           prodh	equ	0xFF4
 38218                           prodl	equ	0xFF3
 38219                           intcon	equ	0xFF2
 38220                           intcon2	equ	0xFF1
 38221                           indf0	equ	0xFEF
 38222                           postinc0	equ	0xFEE
 38223                           plusw0	equ	0xFEB
 38224                           fsr0h	equ	0xFEA
 38225                           fsr0l	equ	0xFE9
 38226                           wreg	equ	0xFE8
 38227                           indf1	equ	0xFE7
 38228                           postdec1	equ	0xFE5
 38229                           fsr1h	equ	0xFE2
 38230                           fsr1l	equ	0xFE1
 38231                           bsr	equ	0xFE0
 38232                           indf2	equ	0xFDF
 38233                           postinc2	equ	0xFDE
 38234                           postdec2	equ	0xFDD
 38235                           plusw2	equ	0xFDB
 38236                           fsr2h	equ	0xFDA
 38237                           fsr2l	equ	0xFD9
 38238                           status	equ	0xFD8
 38239                           
 38240 ;; *************** function _SetTimer0 *****************
 38241 ;; Defined at:
 38242 ;;		line 94 in file "Timer.c"
 38243 ;; Parameters:    Size  Location     Type
 38244 ;;  temp            2   26[COMRAM] unsigned int 
 38245 ;; Auto vars:     Size  Location     Type
 38246 ;;		None
 38247 ;; Return value:  Size  Location     Type
 38248 ;;		None               void
 38249 ;; Registers used:
 38250 ;;		wreg, status,2
 38251 ;; Tracked objects:
 38252 ;;		On entry : 0/0
 38253 ;;		On exit  : 0/0
 38254 ;;		Unchanged: 0/0
 38255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38259 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38260 ;;Total ram usage:        2 bytes
 38261 ;; Hardware stack levels used:    1
 38262 ;; This function calls:
 38263 ;;		Nothing
 38264 ;; This function is called by:
 38265 ;;		_high_isr
 38266 ;; This function uses a non-reentrant model
 38267 ;;
 38268                           
 38269                           	psect	text114
 38270  009552                     __ptext114:
 38271                           	opt stack 0
 38272  009552                     _SetTimer0:
 38273                           	opt stack 17
 38274                           
 38275                           ;Timer.c: 100: TMR0H = (temp & 0xFF00)>> 8;;
 38276                           
 38277                           ;incstack = 0
 38278  009552  501C               	movf	SetTimer0@temp+1,w,c
 38279  009554  6ED7               	movwf	4055,c	;volatile
 38280                           
 38281                           ;Timer.c: 101: TMR0L = temp & 0xFF;
 38282  009556  C01B  FFD6         	movff	SetTimer0@temp,4054	;volatile
 38283  00955A  0012               	return		;funcret
 38284  00955C                     __end_of_SetTimer0:
 38285                           	opt stack 0
 38286                           pclatu	equ	0xFFB
 38287                           pclath	equ	0xFFA
 38288                           tblptru	equ	0xFF8
 38289                           tblptrh	equ	0xFF7
 38290                           tblptrl	equ	0xFF6
 38291                           tablat	equ	0xFF5
 38292                           prodh	equ	0xFF4
 38293                           prodl	equ	0xFF3
 38294                           intcon	equ	0xFF2
 38295                           intcon2	equ	0xFF1
 38296                           indf0	equ	0xFEF
 38297                           postinc0	equ	0xFEE
 38298                           plusw0	equ	0xFEB
 38299                           fsr0h	equ	0xFEA
 38300                           fsr0l	equ	0xFE9
 38301                           wreg	equ	0xFE8
 38302                           indf1	equ	0xFE7
 38303                           postdec1	equ	0xFE5
 38304                           fsr1h	equ	0xFE2
 38305                           fsr1l	equ	0xFE1
 38306                           bsr	equ	0xFE0
 38307                           indf2	equ	0xFDF
 38308                           postinc2	equ	0xFDE
 38309                           postdec2	equ	0xFDD
 38310                           plusw2	equ	0xFDB
 38311                           fsr2h	equ	0xFDA
 38312                           fsr2l	equ	0xFD9
 38313                           status	equ	0xFD8
 38314                           
 38315 ;; *************** function _ResetTimer3 *****************
 38316 ;; Defined at:
 38317 ;;		line 175 in file "Timer.c"
 38318 ;; Parameters:    Size  Location     Type
 38319 ;;		None
 38320 ;; Auto vars:     Size  Location     Type
 38321 ;;		None
 38322 ;; Return value:  Size  Location     Type
 38323 ;;		None               void
 38324 ;; Registers used:
 38325 ;;		wreg, status,2
 38326 ;; Tracked objects:
 38327 ;;		On entry : 0/0
 38328 ;;		On exit  : 0/0
 38329 ;;		Unchanged: 0/0
 38330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38335 ;;Total ram usage:        0 bytes
 38336 ;; Hardware stack levels used:    1
 38337 ;; This function calls:
 38338 ;;		Nothing
 38339 ;; This function is called by:
 38340 ;;		_high_isr
 38341 ;; This function uses a non-reentrant model
 38342 ;;
 38343                           
 38344                           	psect	text115
 38345  00955C                     __ptext115:
 38346                           	opt stack 0
 38347  00955C                     _ResetTimer3:
 38348                           	opt stack 17
 38349                           
 38350                           ;Timer.c: 181: TMR3H = 0;
 38351                           
 38352                           ;incstack = 0
 38353  00955C  0E00               	movlw	0
 38354  00955E  6EB3               	movwf	4019,c	;volatile
 38355                           
 38356                           ;Timer.c: 182: TMR3L = 2;
 38357  009560  0E02               	movlw	2
 38358  009562  6EB2               	movwf	4018,c	;volatile
 38359  009564  0012               	return		;funcret
 38360  009566                     __end_of_ResetTimer3:
 38361                           	opt stack 0
 38362                           pclatu	equ	0xFFB
 38363                           pclath	equ	0xFFA
 38364                           tblptru	equ	0xFF8
 38365                           tblptrh	equ	0xFF7
 38366                           tblptrl	equ	0xFF6
 38367                           tablat	equ	0xFF5
 38368                           prodh	equ	0xFF4
 38369                           prodl	equ	0xFF3
 38370                           intcon	equ	0xFF2
 38371                           intcon2	equ	0xFF1
 38372                           indf0	equ	0xFEF
 38373                           postinc0	equ	0xFEE
 38374                           plusw0	equ	0xFEB
 38375                           fsr0h	equ	0xFEA
 38376                           fsr0l	equ	0xFE9
 38377                           wreg	equ	0xFE8
 38378                           indf1	equ	0xFE7
 38379                           postdec1	equ	0xFE5
 38380                           fsr1h	equ	0xFE2
 38381                           fsr1l	equ	0xFE1
 38382                           bsr	equ	0xFE0
 38383                           indf2	equ	0xFDF
 38384                           postinc2	equ	0xFDE
 38385                           postdec2	equ	0xFDD
 38386                           plusw2	equ	0xFDB
 38387                           fsr2h	equ	0xFDA
 38388                           fsr2l	equ	0xFD9
 38389                           status	equ	0xFD8
 38390                           
 38391 ;; *************** function _IRrawToNEC *****************
 38392 ;; Defined at:
 38393 ;;		line 125 in file "IR.c"
 38394 ;; Parameters:    Size  Location     Type
 38395 ;;  Raw             2   26[COMRAM] PTR unsigned int 
 38396 ;;		 -> IRRawCode(200), 
 38397 ;;  NEC             2   28[COMRAM] PTR unsigned long 
 38398 ;;		 -> IR_NEC(4), 
 38399 ;;  Invert          1   30[COMRAM] unsigned char 
 38400 ;; Auto vars:     Size  Location     Type
 38401 ;;  NECtemp         4    0[BANK0 ] unsigned long 
 38402 ;;  StartBit        1    6[BANK0 ] unsigned char 
 38403 ;;  i               1    5[BANK0 ] unsigned char 
 38404 ;;  first           1    4[BANK0 ] unsigned char 
 38405 ;; Return value:  Size  Location     Type
 38406 ;;                  1    wreg      unsigned char 
 38407 ;; Registers used:
 38408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38409 ;; Tracked objects:
 38410 ;;		On entry : 0/0
 38411 ;;		On exit  : 0/0
 38412 ;;		Unchanged: 0/0
 38413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38414 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38415 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38416 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38417 ;;      Totals:         7       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38418 ;;Total ram usage:       14 bytes
 38419 ;; Hardware stack levels used:    1
 38420 ;; This function calls:
 38421 ;;		Nothing
 38422 ;; This function is called by:
 38423 ;;		_high_isr
 38424 ;; This function uses a non-reentrant model
 38425 ;;
 38426                           
 38427                           	psect	text116
 38428  0050A0                     __ptext116:
 38429                           	opt stack 0
 38430  0050A0                     _IRrawToNEC:
 38431                           	opt stack 17
 38432                           
 38433                           ;IR.c: 153: unsigned char i;
 38434                           ;IR.c: 154: unsigned char first =0;
 38435                           
 38436                           ;incstack = 0
 38437  0050A0  0E00               	movlw	0
 38438  0050A2  0100               	movlb	0	; () banked
 38439  0050A4  6F64               	movwf	IRrawToNEC@first& (0+255),b
 38440                           
 38441                           ;IR.c: 155: unsigned char StartBit=100;
 38442  0050A6  0E64               	movlw	100
 38443  0050A8  0100               	movlb	0	; () banked
 38444  0050AA  6F66               	movwf	IRrawToNEC@StartBit& (0+255),b
 38445                           
 38446                           ;IR.c: 156: unsigned long NECtemp = 0;
 38447  0050AC  0E00               	movlw	0
 38448  0050AE  0100               	movlb	0	; () banked
 38449  0050B0  6F60               	movwf	IRrawToNEC@NECtemp& (0+255),b
 38450  0050B2  0E00               	movlw	0
 38451  0050B4  6F61               	movwf	(IRrawToNEC@NECtemp+1)& (0+255),b
 38452  0050B6  0E00               	movlw	0
 38453  0050B8  6F62               	movwf	(IRrawToNEC@NECtemp+2)& (0+255),b
 38454  0050BA  0E00               	movlw	0
 38455  0050BC  6F63               	movwf	(IRrawToNEC@NECtemp+3)& (0+255),b
 38456                           
 38457                           ;IR.c: 159: for (i =0; i < 100; i++)
 38458  0050BE  0E00               	movlw	0
 38459  0050C0  0100               	movlb	0	; () banked
 38460  0050C2  6F65               	movwf	IRrawToNEC@i& (0+255),b
 38461  0050C4                     i2l16129:
 38462                           
 38463                           ; BSR set to: 0
 38464  0050C4  0E63               	movlw	99
 38465  0050C6  0100               	movlb	0	; () banked
 38466  0050C8  6565               	cpfsgt	IRrawToNEC@i& (0+255),b
 38467  0050CA  D001               	goto	i2l16133
 38468                           
 38469                           ; BSR set to: 0
 38470  0050CC  D046               	goto	i2l16153
 38471  0050CE                     i2l16133:
 38472                           
 38473                           ; BSR set to: 0
 38474                           ;IR.c: 160: {
 38475                           ;IR.c: 161: if(Raw[i] >= 45000 && Raw[i] <= 50000 )
 38476  0050CE  0100               	movlb	0	; () banked
 38477  0050D0  5165               	movf	IRrawToNEC@i& (0+255),w,b
 38478  0050D2  0D02               	mullw	2
 38479  0050D4  50F3               	movf	prodl,w,c
 38480  0050D6  241B               	addwf	IRrawToNEC@Raw,w,c
 38481  0050D8  6ED9               	movwf	fsr2l,c
 38482  0050DA  50F4               	movf	prodh,w,c
 38483  0050DC  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38484  0050DE  6EDA               	movwf	fsr2h,c
 38485  0050E0  0EC8               	movlw	200
 38486  0050E2  5CDE               	subwf	postinc2,w,c
 38487  0050E4  0EAF               	movlw	175
 38488  0050E6  58DE               	subwfb	postinc2,w,c
 38489  0050E8  A0D8               	btfss	status,0,c
 38490  0050EA  D012               	goto	i2l16143
 38491                           
 38492                           ; BSR set to: 0
 38493  0050EC  0100               	movlb	0	; () banked
 38494  0050EE  5165               	movf	IRrawToNEC@i& (0+255),w,b
 38495  0050F0  0D02               	mullw	2
 38496  0050F2  50F3               	movf	prodl,w,c
 38497  0050F4  241B               	addwf	IRrawToNEC@Raw,w,c
 38498  0050F6  6ED9               	movwf	fsr2l,c
 38499  0050F8  50F4               	movf	prodh,w,c
 38500  0050FA  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38501  0050FC  6EDA               	movwf	fsr2h,c
 38502  0050FE  0E51               	movlw	81
 38503  005100  5CDE               	subwf	postinc2,w,c
 38504  005102  0EC3               	movlw	195
 38505  005104  58DE               	subwfb	postinc2,w,c
 38506  005106  B0D8               	btfsc	status,0,c
 38507  005108  D003               	goto	i2l16143
 38508                           
 38509                           ; BSR set to: 0
 38510                           ;IR.c: 162: {
 38511                           ;IR.c: 164: return 2;
 38512  00510A  0E02               	movlw	2
 38513                           
 38514                           ; BSR set to: 0
 38515  00510C  0012               	return	
 38516                           
 38517                           ; BSR set to: 0
 38518                           ;IR.c: 165: }
 38519  00510E  D022               	goto	i2l16149
 38520  005110                     i2l16143:
 38521                           
 38522                           ; BSR set to: 0
 38523                           ;IR.c: 166: else if(Raw[i] >= 4000 && Raw[i] <= 5000 )
 38524  005110  0100               	movlb	0	; () banked
 38525  005112  5165               	movf	IRrawToNEC@i& (0+255),w,b
 38526  005114  0D02               	mullw	2
 38527  005116  50F3               	movf	prodl,w,c
 38528  005118  241B               	addwf	IRrawToNEC@Raw,w,c
 38529  00511A  6ED9               	movwf	fsr2l,c
 38530  00511C  50F4               	movf	prodh,w,c
 38531  00511E  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38532  005120  6EDA               	movwf	fsr2h,c
 38533  005122  0EA0               	movlw	160
 38534  005124  5CDE               	subwf	postinc2,w,c
 38535  005126  0E0F               	movlw	15
 38536  005128  58DE               	subwfb	postinc2,w,c
 38537  00512A  A0D8               	btfss	status,0,c
 38538  00512C  D013               	goto	i2l16149
 38539                           
 38540                           ; BSR set to: 0
 38541  00512E  0100               	movlb	0	; () banked
 38542  005130  5165               	movf	IRrawToNEC@i& (0+255),w,b
 38543  005132  0D02               	mullw	2
 38544  005134  50F3               	movf	prodl,w,c
 38545  005136  241B               	addwf	IRrawToNEC@Raw,w,c
 38546  005138  6ED9               	movwf	fsr2l,c
 38547  00513A  50F4               	movf	prodh,w,c
 38548  00513C  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38549  00513E  6EDA               	movwf	fsr2h,c
 38550  005140  0E89               	movlw	137
 38551  005142  5CDE               	subwf	postinc2,w,c
 38552  005144  0E13               	movlw	19
 38553  005146  58DE               	subwfb	postinc2,w,c
 38554  005148  B0D8               	btfsc	status,0,c
 38555  00514A  D004               	goto	i2l16149
 38556                           
 38557                           ; BSR set to: 0
 38558                           ;IR.c: 167: {
 38559                           ;IR.c: 169: StartBit = i;
 38560  00514C  C065  F066         	movff	IRrawToNEC@i,IRrawToNEC@StartBit
 38561                           
 38562                           ;IR.c: 170: break;
 38563  005150  D004               	goto	i2l16153
 38564                           
 38565                           ; BSR set to: 0
 38566  005152  D000               	goto	i2l16149
 38567  005154                     i2l16149:
 38568                           
 38569                           ; BSR set to: 0
 38570  005154  0100               	movlb	0	; () banked
 38571  005156  2B65               	incf	IRrawToNEC@i& (0+255),f,b
 38572  005158  D7B5               	goto	i2l16129
 38573  00515A                     i2l16153:
 38574                           
 38575                           ; BSR set to: 0
 38576                           ;IR.c: 171: }
 38577                           ;IR.c: 172: }
 38578                           ;IR.c: 173: if((100 - StartBit) < 50)
 38579  00515A  0100               	movlb	0	; () banked
 38580  00515C  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38581  00515E  6E20               	movwf	??_IRrawToNEC& (0+255),c
 38582  005160  6A21               	clrf	(??_IRrawToNEC+1)& (0+255),c
 38583  005162  1E20               	comf	??_IRrawToNEC,f,c
 38584  005164  1E21               	comf	??_IRrawToNEC+1,f,c
 38585  005166  4A20               	infsnz	??_IRrawToNEC,f,c
 38586  005168  2A21               	incf	??_IRrawToNEC+1,f,c
 38587  00516A  0E64               	movlw	100
 38588  00516C  2620               	addwf	??_IRrawToNEC,f,c
 38589  00516E  0E00               	movlw	0
 38590  005170  2221               	addwfc	??_IRrawToNEC+1,f,c
 38591  005172  BE21               	btfsc	??_IRrawToNEC+1,7,c
 38592  005174  D006               	goto	i2l16155
 38593  005176  5021               	movf	??_IRrawToNEC+1,w,c
 38594  005178  E106               	bnz	i2l16159
 38595  00517A  0E32               	movlw	50
 38596  00517C  5C20               	subwf	??_IRrawToNEC,w,c
 38597  00517E  B0D8               	btfsc	status,0,c
 38598  005180  D002               	goto	i2l16159
 38599  005182                     i2l16155:
 38600                           
 38601                           ; BSR set to: 0
 38602                           ;IR.c: 174: {
 38603                           ;IR.c: 176: return 0;
 38604  005182  0E00               	movlw	0
 38605                           
 38606                           ; BSR set to: 0
 38607  005184  0012               	return	
 38608  005186                     i2l16159:
 38609                           
 38610                           ; BSR set to: 0
 38611                           ;IR.c: 177: }
 38612                           ;IR.c: 179: StartBit++;
 38613  005186  0100               	movlb	0	; () banked
 38614  005188  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 38615                           
 38616                           ; BSR set to: 0
 38617                           ;IR.c: 180: if(Raw[StartBit] >= 925 && Raw[StartBit] <= 1250 )
 38618  00518A  0100               	movlb	0	; () banked
 38619  00518C  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38620  00518E  0D02               	mullw	2
 38621  005190  50F3               	movf	prodl,w,c
 38622  005192  241B               	addwf	IRrawToNEC@Raw,w,c
 38623  005194  6ED9               	movwf	fsr2l,c
 38624  005196  50F4               	movf	prodh,w,c
 38625  005198  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38626  00519A  6EDA               	movwf	fsr2h,c
 38627  00519C  0E9D               	movlw	157
 38628  00519E  5CDE               	subwf	postinc2,w,c
 38629  0051A0  0E03               	movlw	3
 38630  0051A2  58DE               	subwfb	postinc2,w,c
 38631  0051A4  A0D8               	btfss	status,0,c
 38632  0051A6  D06E               	goto	i2l16181
 38633                           
 38634                           ; BSR set to: 0
 38635  0051A8  0100               	movlb	0	; () banked
 38636  0051AA  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38637  0051AC  0D02               	mullw	2
 38638  0051AE  50F3               	movf	prodl,w,c
 38639  0051B0  241B               	addwf	IRrawToNEC@Raw,w,c
 38640  0051B2  6ED9               	movwf	fsr2l,c
 38641  0051B4  50F4               	movf	prodh,w,c
 38642  0051B6  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38643  0051B8  6EDA               	movwf	fsr2h,c
 38644  0051BA  0EE3               	movlw	227
 38645  0051BC  5CDE               	subwf	postinc2,w,c
 38646  0051BE  0E04               	movlw	4
 38647  0051C0  58DE               	subwfb	postinc2,w,c
 38648  0051C2  B0D8               	btfsc	status,0,c
 38649  0051C4  D05F               	goto	i2l16181
 38650                           
 38651                           ; BSR set to: 0
 38652                           ;IR.c: 181: {
 38653                           ;IR.c: 183: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 38654  0051C6  0100               	movlb	0	; () banked
 38655  0051C8  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38656  0051CA  0D02               	mullw	2
 38657  0051CC  50F3               	movf	prodl,w,c
 38658  0051CE  241B               	addwf	IRrawToNEC@Raw,w,c
 38659  0051D0  6ED9               	movwf	fsr2l,c
 38660  0051D2  50F4               	movf	prodh,w,c
 38661  0051D4  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38662  0051D6  6EDA               	movwf	fsr2h,c
 38663  0051D8  0E01               	movlw	1
 38664  0051DA  50DB               	movf	plusw2,w,c
 38665  0051DC  E104               	bnz	i2u2020_40
 38666  0051DE  0E7D               	movlw	125
 38667  0051E0  5CDE               	subwf	postinc2,w,c
 38668  0051E2  A0D8               	btfss	status,0,c
 38669  0051E4  D070               	goto	i2l16189
 38670  0051E6                     i2u2020_40:
 38671                           
 38672                           ; BSR set to: 0
 38673  0051E6  0100               	movlb	0	; () banked
 38674  0051E8  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38675  0051EA  0D02               	mullw	2
 38676  0051EC  50F3               	movf	prodl,w,c
 38677  0051EE  241B               	addwf	IRrawToNEC@Raw,w,c
 38678  0051F0  6ED9               	movwf	fsr2l,c
 38679  0051F2  50F4               	movf	prodh,w,c
 38680  0051F4  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38681  0051F6  6EDA               	movwf	fsr2h,c
 38682  0051F8  0E59               	movlw	89
 38683  0051FA  5CDE               	subwf	postinc2,w,c
 38684  0051FC  0E02               	movlw	2
 38685  0051FE  58DE               	subwfb	postinc2,w,c
 38686  005200  B0D8               	btfsc	status,0,c
 38687  005202  D061               	goto	i2l16189
 38688                           
 38689                           ; BSR set to: 0
 38690                           ;IR.c: 184: {
 38691                           ;IR.c: 186: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 38692  005204  0100               	movlb	0	; () banked
 38693  005206  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38694  005208  0D02               	mullw	2
 38695  00520A  50F3               	movf	prodl,w,c
 38696  00520C  241B               	addwf	IRrawToNEC@Raw,w,c
 38697  00520E  6ED9               	movwf	fsr2l,c
 38698  005210  50F4               	movf	prodh,w,c
 38699  005212  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38700  005214  6EDA               	movwf	fsr2h,c
 38701  005216  0E01               	movlw	1
 38702  005218  50DB               	movf	plusw2,w,c
 38703  00521A  E104               	bnz	i2u2022_40
 38704  00521C  0E7D               	movlw	125
 38705  00521E  5CDE               	subwf	postinc2,w,c
 38706  005220  A0D8               	btfss	status,0,c
 38707  005222  D051               	goto	i2l16189
 38708  005224                     i2u2022_40:
 38709                           
 38710                           ; BSR set to: 0
 38711  005224  0100               	movlb	0	; () banked
 38712  005226  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38713  005228  0D02               	mullw	2
 38714  00522A  50F3               	movf	prodl,w,c
 38715  00522C  241B               	addwf	IRrawToNEC@Raw,w,c
 38716  00522E  6ED9               	movwf	fsr2l,c
 38717  005230  50F4               	movf	prodh,w,c
 38718  005232  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38719  005234  6EDA               	movwf	fsr2h,c
 38720  005236  0E59               	movlw	89
 38721  005238  5CDE               	subwf	postinc2,w,c
 38722  00523A  0E02               	movlw	2
 38723  00523C  58DE               	subwfb	postinc2,w,c
 38724  00523E  B0D8               	btfsc	status,0,c
 38725  005240  D042               	goto	i2l16189
 38726                           
 38727                           ; BSR set to: 0
 38728                           ;IR.c: 187: {
 38729                           ;IR.c: 189: if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 38730  005242  0100               	movlb	0	; () banked
 38731  005244  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38732  005246  0D02               	mullw	2
 38733  005248  50F3               	movf	prodl,w,c
 38734  00524A  241B               	addwf	IRrawToNEC@Raw,w,c
 38735  00524C  6ED9               	movwf	fsr2l,c
 38736  00524E  50F4               	movf	prodh,w,c
 38737  005250  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38738  005252  6EDA               	movwf	fsr2h,c
 38739  005254  0EC8               	movlw	200
 38740  005256  5CDE               	subwf	postinc2,w,c
 38741  005258  0EAF               	movlw	175
 38742  00525A  58DE               	subwfb	postinc2,w,c
 38743  00525C  A0D8               	btfss	status,0,c
 38744  00525E  D033               	goto	i2l16189
 38745                           
 38746                           ; BSR set to: 0
 38747  005260  0100               	movlb	0	; () banked
 38748  005262  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38749  005264  0D02               	mullw	2
 38750  005266  50F3               	movf	prodl,w,c
 38751  005268  241B               	addwf	IRrawToNEC@Raw,w,c
 38752  00526A  6ED9               	movwf	fsr2l,c
 38753  00526C  50F4               	movf	prodh,w,c
 38754  00526E  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38755  005270  6EDA               	movwf	fsr2h,c
 38756  005272  0E51               	movlw	81
 38757  005274  5CDE               	subwf	postinc2,w,c
 38758  005276  0EC3               	movlw	195
 38759  005278  58DE               	subwfb	postinc2,w,c
 38760  00527A  B0D8               	btfsc	status,0,c
 38761  00527C  D024               	goto	i2l16189
 38762                           
 38763                           ; BSR set to: 0
 38764                           ;IR.c: 190: {
 38765                           ;IR.c: 192: return 2;
 38766  00527E  0E02               	movlw	2
 38767                           
 38768                           ; BSR set to: 0
 38769  005280  0012               	return	
 38770                           
 38771                           ; BSR set to: 0
 38772                           ;IR.c: 193: }
 38773                           ;IR.c: 194: }
 38774                           ;IR.c: 195: }
 38775                           ;IR.c: 197: }
 38776                           
 38777                           ; BSR set to: 0
 38778                           
 38779                           ; BSR set to: 0
 38780  005282  D021               	goto	i2l16189
 38781  005284                     i2l16181:
 38782                           
 38783                           ; BSR set to: 0
 38784                           ;IR.c: 198: else if(Raw[StartBit] < 1750 || Raw[StartBit] > 2750 )
 38785  005284  0100               	movlb	0	; () banked
 38786  005286  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38787  005288  0D02               	mullw	2
 38788  00528A  50F3               	movf	prodl,w,c
 38789  00528C  241B               	addwf	IRrawToNEC@Raw,w,c
 38790  00528E  6ED9               	movwf	fsr2l,c
 38791  005290  50F4               	movf	prodh,w,c
 38792  005292  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38793  005294  6EDA               	movwf	fsr2h,c
 38794  005296  0ED6               	movlw	214
 38795  005298  5CDE               	subwf	postinc2,w,c
 38796  00529A  0E06               	movlw	6
 38797  00529C  58DE               	subwfb	postinc2,w,c
 38798  00529E  A0D8               	btfss	status,0,c
 38799  0052A0  D00F               	goto	i2l16185
 38800                           
 38801                           ; BSR set to: 0
 38802  0052A2  0100               	movlb	0	; () banked
 38803  0052A4  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38804  0052A6  0D02               	mullw	2
 38805  0052A8  50F3               	movf	prodl,w,c
 38806  0052AA  241B               	addwf	IRrawToNEC@Raw,w,c
 38807  0052AC  6ED9               	movwf	fsr2l,c
 38808  0052AE  50F4               	movf	prodh,w,c
 38809  0052B0  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38810  0052B2  6EDA               	movwf	fsr2h,c
 38811  0052B4  0EBF               	movlw	191
 38812  0052B6  5CDE               	subwf	postinc2,w,c
 38813  0052B8  0E0A               	movlw	10
 38814  0052BA  58DE               	subwfb	postinc2,w,c
 38815  0052BC  A0D8               	btfss	status,0,c
 38816  0052BE  D003               	goto	i2l16189
 38817  0052C0                     i2l16185:
 38818                           
 38819                           ; BSR set to: 0
 38820                           ;IR.c: 199: {
 38821                           ;IR.c: 201: return 0;
 38822  0052C0  0E00               	movlw	0
 38823                           
 38824                           ; BSR set to: 0
 38825  0052C2  0012               	return	
 38826                           
 38827                           ; BSR set to: 0
 38828  0052C4  D000               	goto	i2l16189
 38829  0052C6                     i2l16189:
 38830                           
 38831                           ; BSR set to: 0
 38832                           ;IR.c: 202: }
 38833                           ;IR.c: 204: StartBit++;
 38834  0052C6  0100               	movlb	0	; () banked
 38835  0052C8  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 38836                           
 38837                           ; BSR set to: 0
 38838                           ;IR.c: 205: for(i = StartBit; i < 100;i++)
 38839  0052CA  C066  F065         	movff	IRrawToNEC@StartBit,IRrawToNEC@i
 38840  0052CE                     i2l16193:
 38841                           
 38842                           ; BSR set to: 0
 38843  0052CE  0E63               	movlw	99
 38844  0052D0  0100               	movlb	0	; () banked
 38845  0052D2  6565               	cpfsgt	IRrawToNEC@i& (0+255),b
 38846  0052D4  D001               	goto	i2l16197
 38847                           
 38848                           ; BSR set to: 0
 38849  0052D6  D0E0               	goto	i2l16273
 38850  0052D8                     i2l16197:
 38851                           
 38852                           ; BSR set to: 0
 38853                           ;IR.c: 206: {
 38854                           ;IR.c: 207: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 38855  0052D8  0100               	movlb	0	; () banked
 38856  0052DA  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38857  0052DC  0D02               	mullw	2
 38858  0052DE  50F3               	movf	prodl,w,c
 38859  0052E0  241B               	addwf	IRrawToNEC@Raw,w,c
 38860  0052E2  6ED9               	movwf	fsr2l,c
 38861  0052E4  50F4               	movf	prodh,w,c
 38862  0052E6  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38863  0052E8  6EDA               	movwf	fsr2h,c
 38864  0052EA  0E01               	movlw	1
 38865  0052EC  50DB               	movf	plusw2,w,c
 38866  0052EE  E104               	bnz	i2u2029_40
 38867  0052F0  0E7D               	movlw	125
 38868  0052F2  5CDE               	subwf	postinc2,w,c
 38869  0052F4  A0D8               	btfss	status,0,c
 38870  0052F6  D02A               	goto	i2l16213
 38871  0052F8                     i2u2029_40:
 38872                           
 38873                           ; BSR set to: 0
 38874  0052F8  0100               	movlb	0	; () banked
 38875  0052FA  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38876  0052FC  0D02               	mullw	2
 38877  0052FE  50F3               	movf	prodl,w,c
 38878  005300  241B               	addwf	IRrawToNEC@Raw,w,c
 38879  005302  6ED9               	movwf	fsr2l,c
 38880  005304  50F4               	movf	prodh,w,c
 38881  005306  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38882  005308  6EDA               	movwf	fsr2h,c
 38883  00530A  0E59               	movlw	89
 38884  00530C  5CDE               	subwf	postinc2,w,c
 38885  00530E  0E02               	movlw	2
 38886  005310  58DE               	subwfb	postinc2,w,c
 38887  005312  B0D8               	btfsc	status,0,c
 38888  005314  D01B               	goto	i2l16213
 38889                           
 38890                           ; BSR set to: 0
 38891                           ;IR.c: 208: {
 38892                           ;IR.c: 209: if(!first)
 38893  005316  0100               	movlb	0	; () banked
 38894  005318  5164               	movf	IRrawToNEC@first& (0+255),w,b
 38895  00531A  0100               	movlb	0	; () banked
 38896  00531C  A4D8               	btfss	status,2,c
 38897  00531E  D002               	goto	i2l16205
 38898                           
 38899                           ; BSR set to: 0
 38900                           ;IR.c: 210: {
 38901                           ;IR.c: 212: first = 1;
 38902  005320  0E01               	movlw	1
 38903  005322  D049               	goto	L44
 38904  005324                     i2l16205:
 38905                           
 38906                           ; BSR set to: 0
 38907                           ;IR.c: 214: else
 38908                           ;IR.c: 215: {
 38909                           ;IR.c: 217: first = 0;
 38910  005324  0E00               	movlw	0
 38911  005326  0100               	movlb	0	; () banked
 38912  005328  6F64               	movwf	IRrawToNEC@first& (0+255),b
 38913                           
 38914                           ; BSR set to: 0
 38915                           ;IR.c: 218: NECtemp <<= 1;
 38916  00532A  0100               	movlb	0	; () banked
 38917  00532C  90D8               	bcf	status,0,c
 38918  00532E  3760               	rlcf	IRrawToNEC@NECtemp& (0+255),f,b
 38919  005330  3761               	rlcf	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 38920  005332  3762               	rlcf	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 38921  005334  3763               	rlcf	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 38922                           
 38923                           ; BSR set to: 0
 38924                           ;IR.c: 219: if(!Invert)
 38925  005336  501F               	movf	IRrawToNEC@Invert,w,c
 38926  005338  A4D8               	btfss	status,2,c
 38927  00533A  D0A9               	goto	i2l16269
 38928                           
 38929                           ; BSR set to: 0
 38930                           ;IR.c: 220: {
 38931                           ;IR.c: 221: NECtemp++;
 38932  00533C  0E01               	movlw	1
 38933  00533E  0100               	movlb	0	; () banked
 38934  005340  2760               	addwf	IRrawToNEC@NECtemp& (0+255),f,b
 38935  005342  0E00               	movlw	0
 38936  005344  2361               	addwfc	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 38937  005346  2362               	addwfc	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 38938  005348  2363               	addwfc	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 38939                           
 38940                           ; BSR set to: 0
 38941                           ;IR.c: 222: }
 38942                           ;IR.c: 223: }
 38943                           ;IR.c: 224: }
 38944                           
 38945                           ; BSR set to: 0
 38946  00534A  D0A1               	goto	i2l16269
 38947  00534C                     i2l16213:
 38948                           
 38949                           ; BSR set to: 0
 38950                           ;IR.c: 225: else if(Raw[StartBit] >= 700 && Raw[StartBit] <= 950)
 38951  00534C  0100               	movlb	0	; () banked
 38952  00534E  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38953  005350  0D02               	mullw	2
 38954  005352  50F3               	movf	prodl,w,c
 38955  005354  241B               	addwf	IRrawToNEC@Raw,w,c
 38956  005356  6ED9               	movwf	fsr2l,c
 38957  005358  50F4               	movf	prodh,w,c
 38958  00535A  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38959  00535C  6EDA               	movwf	fsr2h,c
 38960  00535E  0EBC               	movlw	188
 38961  005360  5CDE               	subwf	postinc2,w,c
 38962  005362  0E02               	movlw	2
 38963  005364  58DE               	subwfb	postinc2,w,c
 38964  005366  A0D8               	btfss	status,0,c
 38965  005368  D02C               	goto	i2l16231
 38966                           
 38967                           ; BSR set to: 0
 38968  00536A  0100               	movlb	0	; () banked
 38969  00536C  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38970  00536E  0D02               	mullw	2
 38971  005370  50F3               	movf	prodl,w,c
 38972  005372  241B               	addwf	IRrawToNEC@Raw,w,c
 38973  005374  6ED9               	movwf	fsr2l,c
 38974  005376  50F4               	movf	prodh,w,c
 38975  005378  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38976  00537A  6EDA               	movwf	fsr2h,c
 38977  00537C  0EB7               	movlw	183
 38978  00537E  5CDE               	subwf	postinc2,w,c
 38979  005380  0E03               	movlw	3
 38980  005382  58DE               	subwfb	postinc2,w,c
 38981  005384  B0D8               	btfsc	status,0,c
 38982  005386  D01D               	goto	i2l16231
 38983                           
 38984                           ; BSR set to: 0
 38985                           ;IR.c: 226: {
 38986                           ;IR.c: 227: if(first)
 38987  005388  0100               	movlb	0	; () banked
 38988  00538A  5164               	movf	IRrawToNEC@first& (0+255),w,b
 38989  00538C  0100               	movlb	0	; () banked
 38990  00538E  B4D8               	btfsc	status,2,c
 38991  005390  D015               	goto	i2l16227
 38992                           
 38993                           ; BSR set to: 0
 38994                           ;IR.c: 228: {
 38995                           ;IR.c: 230: NECtemp <<= 1;
 38996  005392  0100               	movlb	0	; () banked
 38997  005394  90D8               	bcf	status,0,c
 38998  005396  3760               	rlcf	IRrawToNEC@NECtemp& (0+255),f,b
 38999  005398  3761               	rlcf	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 39000  00539A  3762               	rlcf	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 39001  00539C  3763               	rlcf	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 39002                           
 39003                           ; BSR set to: 0
 39004                           ;IR.c: 231: if(Invert)
 39005  00539E  501F               	movf	IRrawToNEC@Invert,w,c
 39006  0053A0  B4D8               	btfsc	status,2,c
 39007  0053A2  D008               	goto	i2l16225
 39008                           
 39009                           ; BSR set to: 0
 39010                           ;IR.c: 232: {
 39011                           ;IR.c: 233: NECtemp++;
 39012  0053A4  0E01               	movlw	1
 39013  0053A6  0100               	movlb	0	; () banked
 39014  0053A8  2760               	addwf	IRrawToNEC@NECtemp& (0+255),f,b
 39015  0053AA  0E00               	movlw	0
 39016  0053AC  2361               	addwfc	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 39017  0053AE  2362               	addwfc	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 39018  0053B0  2363               	addwfc	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 39019  0053B2  D000               	goto	i2l16225
 39020  0053B4                     i2l16225:
 39021                           
 39022                           ; BSR set to: 0
 39023                           ;IR.c: 234: }
 39024                           ;IR.c: 235: first = 0;
 39025  0053B4  0E00               	movlw	0
 39026  0053B6                     L44:
 39027  0053B6  0100               	movlb	0	; () banked
 39028  0053B8  6F64               	movwf	IRrawToNEC@first& (0+255),b
 39029                           
 39030                           ;IR.c: 236: }
 39031  0053BA  D069               	goto	i2l16269
 39032  0053BC                     i2l16227:
 39033                           
 39034                           ; BSR set to: 0
 39035                           ;IR.c: 237: else
 39036                           ;IR.c: 238: {
 39037                           ;IR.c: 240: return 0;
 39038  0053BC  0E00               	movlw	0
 39039                           
 39040                           ; BSR set to: 0
 39041  0053BE  0012               	return	
 39042                           
 39043                           ; BSR set to: 0
 39044                           ;IR.c: 241: }
 39045                           ;IR.c: 242: }
 39046  0053C0  D066               	goto	i2l16269
 39047  0053C2                     i2l16231:
 39048                           
 39049                           ; BSR set to: 0
 39050                           ;IR.c: 243: else if(Raw[StartBit] == 0 && first == 1)
 39051  0053C2  0100               	movlb	0	; () banked
 39052  0053C4  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39053  0053C6  0D02               	mullw	2
 39054  0053C8  50F3               	movf	prodl,w,c
 39055  0053CA  241B               	addwf	IRrawToNEC@Raw,w,c
 39056  0053CC  6ED9               	movwf	fsr2l,c
 39057  0053CE  50F4               	movf	prodh,w,c
 39058  0053D0  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39059  0053D2  6EDA               	movwf	fsr2h,c
 39060  0053D4  50DE               	movf	postinc2,w,c
 39061  0053D6  10DE               	iorwf	postinc2,w,c
 39062  0053D8  A4D8               	btfss	status,2,c
 39063  0053DA  D013               	goto	i2l16243
 39064                           
 39065                           ; BSR set to: 0
 39066  0053DC  0100               	movlb	0	; () banked
 39067  0053DE  0564               	decf	IRrawToNEC@first& (0+255),w,b
 39068  0053E0  A4D8               	btfss	status,2,c
 39069  0053E2  D00F               	goto	i2l16243
 39070  0053E4                     i2l16235:
 39071                           
 39072                           ; BSR set to: 0
 39073                           ;IR.c: 244: {
 39074                           ;IR.c: 249: *NEC = NECtemp;
 39075  0053E4  C01D  FFD9         	movff	IRrawToNEC@NEC,fsr2l
 39076  0053E8  C01E  FFDA         	movff	IRrawToNEC@NEC+1,fsr2h
 39077  0053EC  C060  FFDE         	movff	IRrawToNEC@NECtemp,postinc2
 39078  0053F0  C061  FFDE         	movff	IRrawToNEC@NECtemp+1,postinc2
 39079  0053F4  C062  FFDE         	movff	IRrawToNEC@NECtemp+2,postinc2
 39080  0053F8  C063  FFDE         	movff	IRrawToNEC@NECtemp+3,postinc2
 39081  0053FC  D021               	goto	i2l16249
 39082                           
 39083                           ; BSR set to: 0
 39084                           
 39085                           ; BSR set to: 0
 39086                           ;IR.c: 250: return 1;
 39087  0053FE  0012               	return	
 39088                           
 39089                           ; BSR set to: 0
 39090                           ;IR.c: 251: }
 39091  005400  D046               	goto	i2l16269
 39092  005402                     i2l16243:
 39093                           
 39094                           ; BSR set to: 0
 39095                           ;IR.c: 252: else if(Raw[StartBit] >= 19000 && Raw[StartBit] <= 21000)
 39096  005402  0100               	movlb	0	; () banked
 39097  005404  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39098  005406  0D02               	mullw	2
 39099  005408  50F3               	movf	prodl,w,c
 39100  00540A  241B               	addwf	IRrawToNEC@Raw,w,c
 39101  00540C  6ED9               	movwf	fsr2l,c
 39102  00540E  50F4               	movf	prodh,w,c
 39103  005410  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39104  005412  6EDA               	movwf	fsr2h,c
 39105  005414  0E38               	movlw	56
 39106  005416  5CDE               	subwf	postinc2,w,c
 39107  005418  0E4A               	movlw	74
 39108  00541A  58DE               	subwfb	postinc2,w,c
 39109  00541C  A0D8               	btfss	status,0,c
 39110  00541E  D013               	goto	i2l16255
 39111                           
 39112                           ; BSR set to: 0
 39113  005420  0100               	movlb	0	; () banked
 39114  005422  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39115  005424  0D02               	mullw	2
 39116  005426  50F3               	movf	prodl,w,c
 39117  005428  241B               	addwf	IRrawToNEC@Raw,w,c
 39118  00542A  6ED9               	movwf	fsr2l,c
 39119  00542C  50F4               	movf	prodh,w,c
 39120  00542E  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39121  005430  6EDA               	movwf	fsr2h,c
 39122  005432  0E09               	movlw	9
 39123  005434  5CDE               	subwf	postinc2,w,c
 39124  005436  0E52               	movlw	82
 39125  005438  58DE               	subwfb	postinc2,w,c
 39126  00543A  B0D8               	btfsc	status,0,c
 39127  00543C  D004               	goto	i2l16255
 39128  00543E  D7D2               	goto	i2l16235
 39129  005440                     i2l16249:
 39130                           
 39131                           ; BSR set to: 0
 39132                           ;IR.c: 256: return 1;
 39133  005440  0E01               	movlw	1
 39134                           
 39135                           ; BSR set to: 0
 39136  005442  0012               	return	
 39137                           
 39138                           ; BSR set to: 0
 39139                           ;IR.c: 257: }
 39140  005444  D024               	goto	i2l16269
 39141  005446                     i2l16255:
 39142                           
 39143                           ; BSR set to: 0
 39144                           ;IR.c: 258: else if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 39145  005446  0100               	movlb	0	; () banked
 39146  005448  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39147  00544A  0D02               	mullw	2
 39148  00544C  50F3               	movf	prodl,w,c
 39149  00544E  241B               	addwf	IRrawToNEC@Raw,w,c
 39150  005450  6ED9               	movwf	fsr2l,c
 39151  005452  50F4               	movf	prodh,w,c
 39152  005454  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39153  005456  6EDA               	movwf	fsr2h,c
 39154  005458  0EC8               	movlw	200
 39155  00545A  5CDE               	subwf	postinc2,w,c
 39156  00545C  0EAF               	movlw	175
 39157  00545E  58DE               	subwfb	postinc2,w,c
 39158  005460  A0D8               	btfss	status,0,c
 39159  005462  D012               	goto	i2l16265
 39160                           
 39161                           ; BSR set to: 0
 39162  005464  0100               	movlb	0	; () banked
 39163  005466  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39164  005468  0D02               	mullw	2
 39165  00546A  50F3               	movf	prodl,w,c
 39166  00546C  241B               	addwf	IRrawToNEC@Raw,w,c
 39167  00546E  6ED9               	movwf	fsr2l,c
 39168  005470  50F4               	movf	prodh,w,c
 39169  005472  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39170  005474  6EDA               	movwf	fsr2h,c
 39171  005476  0E51               	movlw	81
 39172  005478  5CDE               	subwf	postinc2,w,c
 39173  00547A  0EC3               	movlw	195
 39174  00547C  58DE               	subwfb	postinc2,w,c
 39175  00547E  B0D8               	btfsc	status,0,c
 39176  005480  D003               	goto	i2l16265
 39177                           
 39178                           ; BSR set to: 0
 39179                           ;IR.c: 259: {
 39180                           ;IR.c: 261: return 2;
 39181  005482  0E02               	movlw	2
 39182                           
 39183                           ; BSR set to: 0
 39184  005484  0012               	return	
 39185                           
 39186                           ; BSR set to: 0
 39187                           ;IR.c: 262: }
 39188  005486  D003               	goto	i2l16269
 39189  005488                     i2l16265:
 39190                           
 39191                           ; BSR set to: 0
 39192                           ;IR.c: 263: else
 39193                           ;IR.c: 264: {
 39194                           ;IR.c: 265: return 0;
 39195  005488  0E00               	movlw	0
 39196                           
 39197                           ; BSR set to: 0
 39198  00548A  0012               	return	
 39199                           
 39200                           ; BSR set to: 0
 39201                           
 39202                           ; BSR set to: 0
 39203                           
 39204                           ; BSR set to: 0
 39205                           
 39206                           ; BSR set to: 0
 39207  00548C  D000               	goto	i2l16269
 39208  00548E                     i2l16269:
 39209                           
 39210                           ; BSR set to: 0
 39211                           ;IR.c: 266: }
 39212                           ;IR.c: 267: StartBit++;
 39213  00548E  0100               	movlb	0	; () banked
 39214  005490  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 39215  005492  0100               	movlb	0	; () banked
 39216  005494  2B65               	incf	IRrawToNEC@i& (0+255),f,b
 39217  005496  D71B               	goto	i2l16193
 39218  005498                     i2l16273:
 39219                           
 39220                           ; BSR set to: 0
 39221                           ;IR.c: 268: }
 39222                           ;IR.c: 270: return 0;
 39223  005498  0E00               	movlw	0
 39224  00549A  0012               	return	
 39225                           
 39226                           ; BSR set to: 0
 39227                           
 39228                           ; BSR set to: 0
 39229  00549C  0012               	return		;funcret
 39230  00549E                     __end_of_IRrawToNEC:
 39231                           	opt stack 0
 39232                           pclatu	equ	0xFFB
 39233                           pclath	equ	0xFFA
 39234                           tblptru	equ	0xFF8
 39235                           tblptrh	equ	0xFF7
 39236                           tblptrl	equ	0xFF6
 39237                           tablat	equ	0xFF5
 39238                           prodh	equ	0xFF4
 39239                           prodl	equ	0xFF3
 39240                           intcon	equ	0xFF2
 39241                           intcon2	equ	0xFF1
 39242                           indf0	equ	0xFEF
 39243                           postinc0	equ	0xFEE
 39244                           plusw0	equ	0xFEB
 39245                           fsr0h	equ	0xFEA
 39246                           fsr0l	equ	0xFE9
 39247                           wreg	equ	0xFE8
 39248                           indf1	equ	0xFE7
 39249                           postdec1	equ	0xFE5
 39250                           fsr1h	equ	0xFE2
 39251                           fsr1l	equ	0xFE1
 39252                           bsr	equ	0xFE0
 39253                           indf2	equ	0xFDF
 39254                           postinc2	equ	0xFDE
 39255                           postdec2	equ	0xFDD
 39256                           plusw2	equ	0xFDB
 39257                           fsr2h	equ	0xFDA
 39258                           fsr2l	equ	0xFD9
 39259                           status	equ	0xFD8
 39260                           pclatu	equ	0xFFB
 39261                           pclath	equ	0xFFA
 39262                           tblptru	equ	0xFF8
 39263                           tblptrh	equ	0xFF7
 39264                           tblptrl	equ	0xFF6
 39265                           tablat	equ	0xFF5
 39266                           prodh	equ	0xFF4
 39267                           prodl	equ	0xFF3
 39268                           intcon	equ	0xFF2
 39269                           intcon2	equ	0xFF1
 39270                           indf0	equ	0xFEF
 39271                           postinc0	equ	0xFEE
 39272                           plusw0	equ	0xFEB
 39273                           fsr0h	equ	0xFEA
 39274                           fsr0l	equ	0xFE9
 39275                           wreg	equ	0xFE8
 39276                           indf1	equ	0xFE7
 39277                           postdec1	equ	0xFE5
 39278                           fsr1h	equ	0xFE2
 39279                           fsr1l	equ	0xFE1
 39280                           bsr	equ	0xFE0
 39281                           indf2	equ	0xFDF
 39282                           postinc2	equ	0xFDE
 39283                           postdec2	equ	0xFDD
 39284                           plusw2	equ	0xFDB
 39285                           fsr2h	equ	0xFDA
 39286                           fsr2l	equ	0xFD9
 39287                           status	equ	0xFD8
 39288                           
 39289                           	psect	rparam
 39290  0000                     pclatu	equ	0xFFB
 39291                           pclath	equ	0xFFA
 39292                           tblptru	equ	0xFF8
 39293                           tblptrh	equ	0xFF7
 39294                           tblptrl	equ	0xFF6
 39295                           tablat	equ	0xFF5
 39296                           prodh	equ	0xFF4
 39297                           prodl	equ	0xFF3
 39298                           intcon	equ	0xFF2
 39299                           intcon2	equ	0xFF1
 39300                           indf0	equ	0xFEF
 39301                           postinc0	equ	0xFEE
 39302                           plusw0	equ	0xFEB
 39303                           fsr0h	equ	0xFEA
 39304                           fsr0l	equ	0xFE9
 39305                           wreg	equ	0xFE8
 39306                           indf1	equ	0xFE7
 39307                           postdec1	equ	0xFE5
 39308                           fsr1h	equ	0xFE2
 39309                           fsr1l	equ	0xFE1
 39310                           bsr	equ	0xFE0
 39311                           indf2	equ	0xFDF
 39312                           postinc2	equ	0xFDE
 39313                           postdec2	equ	0xFDD
 39314                           plusw2	equ	0xFDB
 39315                           fsr2h	equ	0xFDA
 39316                           fsr2l	equ	0xFD9
 39317                           status	equ	0xFD8


Data Sizes:
    Strings     3115
    Constant    627
    Data        64
    BSS         904
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      68
    BANK0           160    123     135
    BANK1           256    255     256
    BANK2           256    152     230
    BANK3           256    255     255
    BANK4           256      0     136
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0     200
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_149(CODE[7]), sprintf@c(BANK1[1]), PCBVersion(CODE[5]), FirmVersion(CODE[9]), 
		 -> GetNumber@temp(BANK0[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_104(CODE[19]), STR_102(CODE[15]), STR_88(CODE[29]), STR_87(CODE[16]), 
		 -> STR_86(CODE[21]), STR_84(CODE[20]), STR_76(CODE[44]), STR_75(CODE[54]), 
		 -> STR_74(CODE[54]), STR_73(CODE[63]), STR_51(CODE[44]), STR_50(CODE[46]), 
		 -> STR_48(CODE[44]), STR_47(CODE[21]), STR_33(CODE[17]), STR_32(CODE[17]), 
		 -> STR_31(CODE[20]), STR_29(CODE[23]), STR_28(CODE[21]), STR_27(CODE[21]), 
		 -> STR_17(CODE[28]), STR_4(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 100
		 -> UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@buf(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    SendRF_wait@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(CODE[16]), Conf2_ChannelH_3_ON(CODE[16]), Conf2_ChannelH_2_OFF(CODE[16]), Conf2_ChannelH_2_ON(CODE[16]), 
		 -> Conf2_ChannelH_1_OFF(CODE[16]), Conf2_ChannelH_1_ON(CODE[16]), Conf2_ChannelD_OFF(CODE[16]), Conf2_ChannelD_ON(CODE[16]), 
		 -> Conf2_ChannelB_OFF(CODE[16]), Conf2_ChannelB_ON(CODE[16]), Conf1_ChannelF(CODE[12]), Conf1_ChannelE(CODE[12]), 
		 -> Conf1_ChannelD(CODE[12]), 

    SendRF@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(CODE[16]), Conf2_ChannelH_3_ON(CODE[16]), Conf2_ChannelH_2_OFF(CODE[16]), Conf2_ChannelH_2_ON(CODE[16]), 
		 -> Conf2_ChannelH_1_OFF(CODE[16]), Conf2_ChannelH_1_ON(CODE[16]), Conf2_ChannelD_OFF(CODE[16]), Conf2_ChannelD_ON(CODE[16]), 
		 -> Conf2_ChannelB_OFF(CODE[16]), Conf2_ChannelB_ON(CODE[16]), Conf1_ChannelF(CODE[12]), Conf1_ChannelE(CODE[12]), 
		 -> Conf1_ChannelD(CODE[12]), 

    UseBluetooth@String	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    DecodeNEC@address	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecAddress(BANK2[1]), IRaddress(BANK1[1]), 

    DecodeNEC@command	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecCommand(BANK2[1]), IRcommand(COMRAM[1]), 

    UseIRCode@Code	PTR unsigned char  size(2) Largest target is 1
		 -> IR_New_Code(BANK0[1]), 

    IRrawToNEC@NEC	PTR unsigned long  size(2) Largest target is 4
		 -> IR_NEC(BANK0[4]), 

    IRrawToNEC@Raw	PTR unsigned int  size(2) Largest target is 200
		 -> IRRawCode(BANK7[200]), 

    GetEEPROM@Temp	PTR struct EEdata size(2) Largest target is 136
		 -> SyncEEPROMToGlobal@Temp(BANK1[136]), 

    InternalADC_Read@ADCcounts	PTR unsigned int  size(2) Largest target is 2
		 -> ReadVoltage@temp(BANK0[2]), 

    UARTcommandMenu@Desc	PTR unsigned char  size(2) Largest target is 49
		 -> STR_145(CODE[32]), STR_144(CODE[31]), STR_143(CODE[32]), STR_142(CODE[31]), 
		 -> STR_141(CODE[32]), STR_140(CODE[31]), STR_139(CODE[20]), STR_138(CODE[19]), 
		 -> STR_137(CODE[23]), STR_136(CODE[22]), STR_135(CODE[19]), STR_134(CODE[19]), 
		 -> STR_133(CODE[19]), STR_131(CODE[40]), STR_129(CODE[46]), STR_127(CODE[46]), 
		 -> STR_125(CODE[46]), STR_123(CODE[46]), STR_121(CODE[46]), STR_119(CODE[46]), 
		 -> STR_117(CODE[49]), STR_115(CODE[49]), STR_113(CODE[49]), STR_111(CODE[49]), 
		 -> STR_109(CODE[49]), STR_107(CODE[49]), STR_105(CODE[24]), STR_103(CODE[25]), 
		 -> STR_100(CODE[28]), STR_97(CODE[26]), STR_95(CODE[32]), STR_93(CODE[10]), 

    UARTcommandMenu@Command	PTR unsigned char  size(2) Largest target is 100
		 -> STR_130(CODE[5]), STR_128(CODE[13]), STR_126(CODE[13]), STR_124(CODE[13]), 
		 -> STR_122(CODE[13]), STR_120(CODE[13]), STR_118(CODE[13]), STR_116(CODE[11]), 
		 -> STR_114(CODE[11]), STR_112(CODE[11]), STR_110(CODE[11]), STR_108(CODE[11]), 
		 -> STR_106(CODE[11]), STR_99(CODE[8]), STR_96(CODE[8]), STR_94(CODE[6]), 
		 -> STR_92(CODE[4]), Conf2_ChannelH_3_OFF_STR(CODE[21]), Conf2_ChannelH_3_ON_STR(CODE[20]), Conf2_ChannelH_2_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_2_ON_STR(CODE[20]), Conf2_ChannelH_1_OFF_STR(CODE[21]), Conf2_ChannelH_1_ON_STR(CODE[20]), Conf2_ChannelD_OFF_STR(CODE[19]), 
		 -> Conf2_ChannelD_ON_STR(CODE[18]), Conf2_ChannelB_OFF_STR(CODE[19]), Conf2_ChannelB_ON_STR(CODE[18]), Conf1_ChannelF_STR(CODE[15]), 
		 -> Conf1_ChannelE_STR(CODE[15]), Conf1_ChannelD_STR(CODE[15]), UseBluetooth@buf(BANK2[100]), 

    UARTstringCRLN@data	PTR unsigned char  size(2) Largest target is 100
		 -> STR_148(CODE[36]), STR_146(CODE[27]), STR_132(CODE[13]), STR_101(CODE[13]), 
		 -> STR_98(CODE[21]), STR_91(CODE[17]), STR_82(CODE[29]), STR_81(CODE[18]), 
		 -> STR_80(CODE[29]), STR_77(CODE[44]), STR_72(CODE[46]), STR_71(CODE[42]), 
		 -> STR_70(CODE[50]), STR_69(CODE[50]), STR_67(CODE[31]), STR_66(CODE[31]), 
		 -> STR_65(CODE[37]), STR_64(CODE[37]), STR_63(CODE[37]), STR_59(CODE[18]), 
		 -> STR_58(CODE[14]), STR_57(CODE[9]), STR_56(CODE[20]), STR_55(CODE[16]), 
		 -> STR_54(CODE[7]), STR_53(CODE[35]), STR_52(CODE[37]), STR_49(CODE[47]), 
		 -> STR_44(CODE[17]), STR_43(CODE[9]), STR_42(CODE[18]), STR_41(CODE[9]), 
		 -> STR_40(CODE[22]), STR_39(CODE[11]), STR_38(CODE[20]), STR_37(CODE[7]), 
		 -> STR_36(CODE[31]), STR_34(CODE[33]), STR_30(CODE[32]), STR_26(CODE[31]), 
		 -> STR_25(CODE[31]), STR_23(CODE[29]), STR_21(CODE[29]), SYNTAX_ERR(CODE[14]), 
		 -> UseBluetooth@buf(BANK2[100]), STR_1(CODE[16]), 

    UARTstring@data	PTR unsigned char  size(2) Largest target is 255
		 -> STR_147(CODE[28]), STR_90(CODE[13]), STR_79(CODE[32]), STR_68(CODE[14]), 
		 -> SYNTAX_ERR(CODE[14]), STR_18(CODE[5]), STR_16(CODE[5]), STR_14(CODE[6]), 
		 -> STR_12(CODE[6]), STR_10(CODE[9]), STR_8(CODE[21]), STR_6(CODE[10]), 
		 -> BluetoothInitialSetup@buf(BANK1[50]), STR_2(CODE[4]), CRLN(CODE[3]), ReceivedString(BANK6[255]), 

    GetStringAfterComma@result	PTR unsigned char  size(2) Largest target is 10
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    GetStringAfterComma@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    StringAddEqual@Input	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    GetNumber@result	PTR unsigned long  size(2) Largest target is 4
		 -> UseBluetooth@temp(BANK2[4]), UseBluetooth@EnteredNEC(BANK2[4]), 

    GetNumber@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    lowercaseChar@Input	PTR unsigned char  size(2) Largest target is 1
		 -> GetNumber@tempThis(BANK0[1]), StringContainsCaseInsensitive@tempThat(BANK0[1]), StringContainsCaseInsensitive@tempThis(BANK0[1]), StringMatchCaseInsensitive@tempThat(BANK0[1]), 
		 -> StringMatchCaseInsensitive@tempThis(BANK0[1]), 

    lowercaseString@Input	PTR unsigned char  size(2) Largest target is 10
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    StringContainsCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_62(CODE[7]), STR_61(CODE[9]), STR_60(CODE[7]), STR_46(CODE[4]), 
		 -> STR_45(CODE[13]), STR_24(CODE[4]), STR_22(CODE[6]), STR_20(CODE[6]), 
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    StringContainsCaseInsensitive@This	PTR unsigned char  size(2) Largest target is 255
		 -> Conf2_Channels(CODE[4]), Conf1_Channels(CODE[4]), main@BluetoothString(BANK3[255]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_35(CODE[2]), STR_19(CODE[4]), STR_15(CODE[4]), STR_13(CODE[4]), 
		 -> STR_11(CODE[4]), STR_9(CODE[4]), STR_7(CODE[4]), STR_5(CODE[4]), 
		 -> BluetoothInitialSetup@buf(BANK1[50]), STR_3(CODE[4]), 

    StringContains@This	PTR unsigned char  size(2) Largest target is 255
		 -> CommandString(BANK5[255]), main@BluetoothString(BANK3[255]), 

    StringMatchCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_85(CODE[8]), STR_83(CODE[8]), STR_78(CODE[6]), Conf2_ChannelH_3_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_3_ON_STR(CODE[20]), Conf2_ChannelH_2_OFF_STR(CODE[21]), Conf2_ChannelH_2_ON_STR(CODE[20]), Conf2_ChannelH_1_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_1_ON_STR(CODE[20]), Conf2_ChannelD_OFF_STR(CODE[19]), Conf2_ChannelD_ON_STR(CODE[18]), Conf2_ChannelB_OFF_STR(CODE[19]), 
		 -> Conf2_ChannelB_ON_STR(CODE[18]), Conf1_ChannelF_STR(CODE[15]), Conf1_ChannelE_STR(CODE[15]), Conf1_ChannelD_STR(CODE[15]), 

    StringMatchCaseInsensitive@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    StringMatch@That	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_89(CODE[4]), 

    StringMatch@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    BufferCopy@from	PTR unsigned char  size(2) Largest target is 255
		 -> StringAddEqual@temp(BANK1[255]), ReceivedString(BANK6[255]), 

    BufferCopy@to	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    cleanBuffer16bit@data	PTR unsigned int  size(2) Largest target is 200
		 -> IRRawCode(BANK7[200]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 255
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@RFchannel(BANK1[10]), BluetoothInitialSetup@buf(BANK1[50]), 
		 -> CommandString(BANK5[255]), StringAddEqual@temp(BANK1[255]), ReceivedString(BANK6[255]), main@BluetoothString(BANK3[255]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_cleanBuffer16bit

Critical Paths under _low_isr in COMRAM

    _low_isr->i1_cleanBuffer
    i1_UARTstringCRLN->i1_UARTstring
    i1_UARTstring->i1_UARTchar
    _EraseScreen->i1_UARTchar

Critical Paths under _main in BANK0

    _SendRF_Channel->_SendRF_wait
    _ReadCodeButtons->_delayUS
    _UseBluetooth->_sprintf
    _WaitForIRsignal->_delayUS
    _UARTstringCRLN->_UARTstring
    _UARTcommandMenu->_UARTstring
    _StringMatchCaseInsensitive->_lowercaseChar
    _StringContainsCaseInsensitive->_lowercaseChar
    _StringAddEqual->_BufferCopy
    _BufferCopy->_cleanBuffer
    _SendRF_wait->_SendRF
    _SendNEC_wait->_SendNEC_bytes
    _SendNEC_bytes->_Reverse_4Byte
    _ReadVoltage->___ftmul
    ___lwtoft->___ftpack
    ___ftdiv->___lwtoft
    _InternalADC_Read->_delayUS
    _GetNumber->___lmul
    _EncodeNEC->_Reverse_Byte
    _DecodeNEC->_Reverse_Byte
    _SyncEEPROMToGlobal->_GetEEPROM
    _GetEEPROM->_GetMemoryLong
    _InitUART->_Round
    _Round->___fttol
    ___altoft->___ftpack
    _ClearUSART->_ReadUSART
    _InitIR->_cleanBuffer16bit
    _BluetoothInitialSetup->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftadd
    ___ftsub->___ftadd
    ___ftadd->_fround
    _EnterCommandMode->_delayUS
    _UARTstring->_UARTchar
    _ResetBlue->_delayUS
    _SyncGlobalToEEPROM->_SetEEPROM
    _SetEEPROM->_SetMemoryLong
    _SetMemoryLong->_GetMemoryLong
    _GetMemoryLong->_ReadEEPROM_1Byte
    _SetMemoryChar->_GetMemoryChar
    _GetMemoryChar->_ReadEEPROM_1Byte

Critical Paths under _high_isr in BANK0

    _high_isr->_IRrawToNEC

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _UseBluetooth->_StringAddEqual
    _BluetoothInitialSetup->_sprintf
    _SyncGlobalToEEPROM->_SetEEPROM

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_UseBluetooth

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               260   260      0  402513
                                            147 BANK2      5     5      0
                                              0 BANK3    255   255      0
                         _BufferCopy
                         _ClearUSART
                _ConfigureOscillator
                            _InitApp
                        _Init_System
                          _ReadIRpin
                        _ReadVoltage
                           _UARTchar
                         _UARTstring
                       _UseBluetooth
                          _UseIRCode
                            ___ftadd
                             ___ftge
                            ___ftsub
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _UseIRCode                                           12     6      6   23412
                                             90 BANK0     12     6      6
                          _DecodeNEC
                         _LEDTimerON
                    _ReadCodeButtons
                          _ReadIRpin
                     _ReadPushButton
                     _SendRF_Channel
                 _SyncGlobalToEEPROM
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SendRF_Channel                                       1     1      0    8911
                                             38 BANK0      1     1      0
                        _SendRF_wait
 ---------------------------------------------------------------------------------
 (2) _ReadPushButton                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadCodeButtons                                      1     1      0    2809
                                             34 BANK0      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _UseBluetooth                                       147   144      3  184425
                                              0 BANK2    147   144      3
                         _ClearUSART
                          _DecodeNEC
                          _EncodeNEC
                          _GetNumber
                _GetStringAfterComma
                        _ReadVoltage
                       _SendNEC_wait
                        _SendRF_wait
                     _StringAddEqual
                     _StringContains
      _StringContainsCaseInsensitive
                        _StringMatch
         _StringMatchCaseInsensitive
                 _SyncGlobalToEEPROM
                           _UARTchar
                    _UARTcommandMenu
                         _UARTstring
                     _UARTstringCRLN
                    _WaitForIRsignal
                        _cleanBuffer
                            _delayUS
                    _lowercaseString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lowercaseString                                      3     1      2     204
                                             25 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _WaitForIRsignal                                      1     1      0   18786
                                             34 BANK0      1     1      0
                         _LEDTimerON
                           _UARTchar
                         _UARTstring
                     _UARTstringCRLN
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _UARTstringCRLN                                       2     0      2   10355
                                             28 BANK0      2     0      2
                           _UARTchar
                         _UARTstring
 ---------------------------------------------------------------------------------
 (2) _UARTcommandMenu                                     11     7      4   10828
                                             28 BANK0     11     7      4
                           _UARTchar
                         _UARTstring
 ---------------------------------------------------------------------------------
 (2) _StringMatchCaseInsensitive                           6     2      4    3257
                                             28 BANK0      6     2      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _StringMatch                                          5     1      4     315
                                             25 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringContainsCaseInsensitive                        7     3      4    2370
                                             28 BANK0      7     3      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _StringAddEqual                                     263   261      2   10768
                                             40 BANK0      8     6      2
                                              0 BANK1    255   255      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _BufferCopy                                           7     1      6    5168
                                             33 BANK0      7     1      6
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _SendRF_wait                                          5     0      5    8880
                                             33 BANK0      5     0      5
                         _LEDTimerON
                          _ReadIRpin
                             _SendRF
 ---------------------------------------------------------------------------------
 (4) _SendRF                                               8     3      5     748
                                             25 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _LEDTimerON                                           0     0      0       0
                        _ResetTimer1
 ---------------------------------------------------------------------------------
 (5) _ResetTimer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SendNEC_wait                                         6     1      5    4838
                                             46 BANK0      6     1      5
                   _CheckReceivingIR
                          _ReadIRpin
                      _SendNEC_bytes
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _SendNEC_bytes                                        5     0      5    1477
                                             41 BANK0      5     0      5
                      _Reverse_4Byte
 ---------------------------------------------------------------------------------
 (4) _Reverse_4Byte                                       16    12      4    1199
                                             25 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (3) _CheckReceivingIR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadVoltage                                          8     5      3   17366
                                             66 BANK0      8     5      3
                   _InternalADC_Read
                  _VoltageDividerOFF
                   _VoltageDividerON
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2692
                                             33 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3272
                                             36 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) _VoltageDividerON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _VoltageDividerOFF                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InternalADC_Read                                     6     4      2    3032
                                             34 BANK0      6     4      2
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _GetStringAfterComma                                  8     3      5     726
                                             25 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _GetNumber                                           20    15      5    3766
                                             37 BANK0     20    15      5
                           _IsLetter
                             ___lmul
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (3) _lowercaseChar                                        3     1      2     478
                                             25 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     404
                                             25 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _IsLetter                                             1     1      0      62
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EncodeNEC                                           41    37      4     720
                                             29 BANK0     41    37      4
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (2) _DecodeNEC                                           15     7      8    1614
                                             29 BANK0     15     7      8
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (3) _Reverse_Byte                                         4     4      0     306
                                             25 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0  147920
                  _EEPROMinitialized
                            _InitADC
                      _InitBluetooth
                             _InitIR
                         _InitTimers
                           _InitUART
                   _SetEEPROMdefault
                 _SyncEEPROMToGlobal
                 _SyncGlobalToEEPROM
                           _UARTchar
                         _UARTstring
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _SyncEEPROMToGlobal                                 143   143      0    3407
                                             70 BANK0      4     4      0
                                              0 BANK1    139   139      0
                          _GetEEPROM
 ---------------------------------------------------------------------------------
 (3) _GetEEPROM                                            8     6      2    2507
                                             62 BANK0      8     6      2
                      _GetMemoryChar
                      _GetMemoryLong
 ---------------------------------------------------------------------------------
 (2) _SetEEPROMdefault                                     5     5      0    6941
                                             90 BANK0      5     5      0
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (2) _InitUART                                            18    14      4   13617
                                            110 BANK0      8     4      4
                                              0 BANK1     10    10      0
                         _ClearUSART
                   _Local_CloseUSART
                          _OpenUSART
                              _Round
                            ___fttol
                            ___lldiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) _Round                                                7     4      3    8302
                                            103 BANK0      7     4      3
                           ___altoft
                            ___ftadd
                            ___fttol
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    2865
                                             33 BANK0     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     387
                                             25 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _Local_CloseUSART                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearUSART                                           0     0      0      34
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (3) _ReadUSART                                            1     1      0      34
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitTimers                                           0     0      0       0
                         _InitTimer1
                         _InitTimer2
                         _InitTimer3
 ---------------------------------------------------------------------------------
 (3) _InitTimer3                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitIR                                               0     0      0     371
                         _InitTimer0
                          _ReadIRpin
                        _ResetTimer0
                   _cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (3) _cleanBuffer16bit                                     8     4      4     371
                                             25 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _ResetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ReadIRpin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitBluetooth                                        0     0      0  107289
                _BluetoothConfigured
              _BluetoothInitialSetup
                          _ResetBlue
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _BluetoothInitialSetup                               61    61      0   93859
                                             30 BANK1     61    61      0
                   _EnterCommandMode
                     _StringContains
                         _UARTstring
                        _cleanBuffer
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             51    37     14   61903
                                            103 BANK0     20     6     14
                                              0 BANK1     30    30      0
                        _ReadVoltage (ARG)
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3   12847
                                             66 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             25 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3   12568
                                             66 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2850
                                             39 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    5496
                                             51 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             25 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             31 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     608
                                             25 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     827
                                             25 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2840
                                             33 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     848
                                             38 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1011
                                             25 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     756
                                             88 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lltoft (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    5057
                                             88 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4539
                                             76 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2584
                                             25 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     142
                                             25 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6    1276
                                             25 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (4) _EnterCommandMode                                     1     1      0   17088
                                             34 BANK0      1     1      0
                      _BlueConnected
                          _ResetBlue
                     _StringContains
                         _UARTstring
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _cleanBuffer                                          8     4      4    4221
                                             25 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _UARTstring                                           2     0      2    5566
                                             26 BANK0      2     0      2
                           _UARTchar
 ---------------------------------------------------------------------------------
 (5) _UARTchar                                             1     1      0      62
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _StringContains                                       6     2      4    1738
                                             25 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _ResetBlue                                            0     0      0    2763
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _delayUS                                              9     5      4    2763
                                             25 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (5) _BlueConnected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BluetoothConfigured                                  0     0      0    6446
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (2) _SyncGlobalToEEPROM                                   0     0      0    6446
                          _SetEEPROM
 ---------------------------------------------------------------------------------
 (3) _SetEEPROM                                          151    11    140    6446
                                             79 BANK0     11    11      0
                                              0 BANK1    140     0    140
                      _SetMemoryChar
                      _SetMemoryLong
 ---------------------------------------------------------------------------------
 (4) _SetMemoryLong                                       17    12      5    2845
                                             62 BANK0     17    12      5
                      _GetMemoryLong
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _GetMemoryLong                                       33    29      4     969
                                             29 BANK0     33    29      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (4) _SetMemoryChar                                        3     2      1    2445
                                             35 BANK0      3     2      1
                      _GetMemoryChar
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _WriteEEPROM_1Byte                                    5     2      3    1242
                                             25 BANK0      5     2      3
                      _EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (6) _EEPROM_UNLOCK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _GetMemoryChar                                        6     2      4     737
                                             29 BANK0      6     2      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (6) _ReadEEPROM_1Byte                                     4     2      2     672
                                             25 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
                           _ResetADC
 ---------------------------------------------------------------------------------
 (3) _ResetADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EEPROMinitialized                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                             18    18      0    1023
                                              8 COMRAM    18    18      0
                        _EraseScreen
                        _IsCharacter
                    i1_BlueConnected
                        i1_ReadUSART
                         i1_UARTchar
                       i1_UARTstring
                   i1_UARTstringCRLN
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (10) i1_cleanBuffer                                       8     4      4     143
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (10) i1_UARTstringCRLN                                    2     0      2     308
                                              3 COMRAM     2     0      2
                         i1_UARTchar
                       i1_UARTstring
 ---------------------------------------------------------------------------------
 (11) i1_UARTstring                                        2     0      2     193
                                              1 COMRAM     2     0      2
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (10) i1_ReadUSART                                         1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i1_BlueConnected                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _IsCharacter                                         1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EraseScreen                                         2     2      0      90
                                              1 COMRAM     2     2      0
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (12) i1_UARTchar                                          1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _high_isr                                           21    21      0    2684
                                             34 COMRAM     3     3      0
                                              7 BANK0     18    18      0
                         _IRrawToNEC
                        _ResetTimer3
                          _SetTimer0
                        i2_ReadIRpin
                      i2_ResetTimer0
                 i2_cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (14) i2_cleanBuffer16bit                                  8     4      4     143
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (14) i2_ResetTimer0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_ReadIRpin                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _SetTimer0                                           2     0      2     108
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _ResetTimer3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _IRrawToNEC                                         14     9      5    2207
                                             26 COMRAM     7     2      5
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BufferCopy
     _cleanBuffer
   _ClearUSART
     _ReadUSART
   _ConfigureOscillator
   _InitApp
   _Init_System
     _EEPROMinitialized
     _InitADC
       _ResetADC
     _InitBluetooth
       _BluetoothConfigured
         _SyncGlobalToEEPROM
           _SetEEPROM
             _SetMemoryChar
               _GetMemoryChar
                 _ReadEEPROM_1Byte
               _WriteEEPROM_1Byte
                 _EEPROM_UNLOCK
             _SetMemoryLong
               _GetMemoryLong
                 _ReadEEPROM_1Byte
               _WriteEEPROM_1Byte
                 _EEPROM_UNLOCK
       _BluetoothInitialSetup
         _EnterCommandMode
           _BlueConnected
           _ResetBlue
             _delayUS
           _StringContains
           _UARTstring
             _UARTchar
           _cleanBuffer
           _delayUS
         _StringContains
         _UARTstring
           _UARTchar
         _cleanBuffer
         _delayUS
         _sprintf
           _ReadVoltage (ARG)
             _InternalADC_Read
               _delayUS
             _VoltageDividerOFF
             _VoltageDividerON
             ___ftdiv
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lwtoft
               ___ftpack
             _delayUS
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftsub (ARG)
             ___ftadd
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_ (ARG)
           __tdiv_to_l_ (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _ResetBlue
         _delayUS
       _cleanBuffer
     _InitIR
       _InitTimer0
       _ReadIRpin
       _ResetTimer0
       _cleanBuffer16bit
     _InitTimers
       _InitTimer1
       _InitTimer2
       _InitTimer3
     _InitUART
       _ClearUSART
         _ReadUSART
       _Local_CloseUSART
       _OpenUSART
       _Round
         ___altoft
           ___ftpack
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___fttol
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___lltoft
         ___ftpack
     _SetEEPROMdefault
       _SyncGlobalToEEPROM
         _SetEEPROM
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
     _SyncEEPROMToGlobal
       _GetEEPROM
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _UARTchar
     _UARTstring
       _UARTchar
     _cleanBuffer
   _ReadIRpin
   _ReadVoltage
     _InternalADC_Read
       _delayUS
     _VoltageDividerOFF
     _VoltageDividerON
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lwtoft
       ___ftpack
     _delayUS
   _UARTchar
   _UARTstring
     _UARTchar
   _UseBluetooth
     _ClearUSART
       _ReadUSART
     _DecodeNEC
       _Reverse_Byte
     _EncodeNEC
       _Reverse_Byte
     _GetNumber
       _IsLetter
       ___lmul
       _lowercaseChar
     _GetStringAfterComma
     _ReadVoltage
       _InternalADC_Read
         _delayUS
       _VoltageDividerOFF
       _VoltageDividerON
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
       _delayUS
     _SendNEC_wait
       _CheckReceivingIR
       _ReadIRpin
       _SendNEC_bytes
         _Reverse_4Byte
       _delayUS
     _SendRF_wait
       _LEDTimerON
         _ResetTimer1
       _ReadIRpin
       _SendRF
     _StringAddEqual
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _StringContains
     _StringContainsCaseInsensitive
       _lowercaseChar
     _StringMatch
     _StringMatchCaseInsensitive
       _lowercaseChar
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _UARTchar
     _UARTcommandMenu
       _UARTchar
       _UARTstring
         _UARTchar
     _UARTstring
       _UARTchar
     _UARTstringCRLN
       _UARTchar
       _UARTstring
         _UARTchar
     _WaitForIRsignal
       _LEDTimerON
         _ResetTimer1
       _UARTchar
       _UARTstring
         _UARTchar
       _UARTstringCRLN
         _UARTchar
         _UARTstring
           _UARTchar
       _delayUS
     _cleanBuffer
     _delayUS
     _lowercaseString
     _sprintf
       _ReadVoltage (ARG)
         _InternalADC_Read
           _delayUS
         _VoltageDividerOFF
         _VoltageDividerON
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft
           ___ftpack
         _delayUS
       ___awdiv (ARG)
         ___awmod (ARG)
       ___ftadd (ARG)
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _UseIRCode
     _DecodeNEC
       _Reverse_Byte
     _LEDTimerON
       _ResetTimer1
     _ReadCodeButtons
       _delayUS
     _ReadIRpin
     _ReadPushButton
     _SendRF_Channel
       _SendRF_wait
         _LEDTimerON
           _ResetTimer1
         _ReadIRpin
         _SendRF
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _delayUS
   ___ftadd
     ___ftpack
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftge
   ___ftsub
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lltoft (ARG)
       ___ftpack
   _cleanBuffer
   _delayUS

 _low_isr (ROOT)
   _EraseScreen
     i1_UARTchar
   _IsCharacter
   i1_BlueConnected
   i1_ReadUSART
   i1_UARTchar
   i1_UARTstring
     i1_UARTchar
   i1_UARTstringCRLN
     i1_UARTchar
     i1_UARTstring
       i1_UARTchar
   i1_cleanBuffer

 _high_isr (ROOT)
   _IRrawToNEC
   _ResetTimer3
   _SetTimer0
   i2_ReadIRpin
   i2_ResetTimer0
   i2_cleanBuffer16bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      C8      20       78.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      FF      18       99.6%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      FF      16       99.6%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      88      14       53.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100     FF      FF      12       99.6%
BITBANK2           100      0       0       9        0.0%
BANK2              100     98      E6      10       89.8%
BITBANK1           100      0       0       7        0.0%
BANK1              100     FF     100       8      100.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7B      87       5       84.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     25      44       1       71.6%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     6FE       6        0.0%
DATA                 0      0     6FE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Apr 10 12:43:50 2015

                       BufferCopy@shift 0086                      UARTstringCRLN@data 007C  
                __end_of_Conf1_ChannelD F0A3                  __end_of_Conf1_ChannelE F0AF  
                __end_of_Conf1_ChannelF F0BB                   UseBluetooth@StringPos 0202  
                          ___altoft@exp 0089                  __end_of_Conf1_Channels F0CD  
               __size_of_StringContains 00B2                           ??_EraseScreen 0002  
                           _IRcodePlace 0041                           ___altoft@sign 008A  
                  ?_BluetoothConfigured 0001                                      _SN 003C  
                          ___awdiv@sign 0084                     ?_SyncGlobalToEEPROM 0001  
                                    bsr 000FE0                  __end_of_Conf2_Channels F0D1  
                   ___wmul@multiplicand 0089                            __CFG_CP0$OFF 000000  
                          __CFG_CP1$OFF 000000                            __CFG_CP2$OFF 000000  
                          __CFG_CP3$OFF 000000                            ___ftadd@exp1 00B7  
                          ___ftadd@exp2 00B6                             ?_LEDTimerON 0001  
                    lowercaseChar@Input 0079                            ___ftadd@sign 00B5  
                            _SYNTAX_ERR F089                                     l134 55D2  
                                   l136 565E                                     l139 56BE  
                                   l640 89EC                                     l641 89EE  
 StringContainsCaseInsensitive@tempThat 0082                                     l298 8ED2  
                                   l634 89B8                                     l299 8EC2  
                                   l661 93C4                                     l741 84D2  
                                   l646 9392                                     l638 89DC  
                                   l479 632A                                     l914 8BEE  
                                   l922 940C                                     l928 8C5E  
 StringContainsCaseInsensitive@tempThis 0081                                     l961 6634  
                                   l953 6552                                     l958 6546  
                                   l968 6622                                     l994 671C  
                          __CFG_CPB$OFF 000000                                     _PR2 000FCB  
                          __CFG_CPD$OFF 000000              StringAddEqual@NullPosition 008C  
                  lowercaseString@Input 0079                              _IRrawToNEC 50A0  
                         _IRbitPosition 0040                     __end_of_IsCharacter 93E8  
                          __CFG_BORV$27 000000                            ___awmod@sign 007E  
                                   prod 000FF3                                     wreg 000FE8  
                            _IRsendCode 02E2                              _IRsendFlag 0032  
                         _InitBluetooth 8E58                            __CFG_LVP$OFF 000000  
                          ___ftdiv@cntr 008D                            ___ftdiv@sign 0092  
                                  l2113 7B86                                    l2236 2C5C  
                                  l2275 2AA0                                    l2284 2CCC  
                                  l1820 4DB6                                    l1644 8F4E  
                                  l2705 5CCE                                    l2714 5CF8  
                                  l2618 6B3C                                    l2732 68DC  
                                  l1916 1246                                    l2661 76DE  
                                  l2733 6920                                    l2725 70D0  
                                  l2690 5B86                                    l1882 099A  
                                  l2819 7F6E                                    l2739 69A8  
                                  l1875 0716                                    l2764 927A  
                                  l1884 09EA                                    l2829 8454  
                                  l1877 0772                                    l2694 5BC0  
                                  l2696 5BEA                                    STR_1 FB77  
                                  STR_2 FCE7                                    STR_3 FCF3  
                                  STR_4 F923                                    STR_5 FCFB  
                                  STR_6 FC74                                    STR_7 FCFB  
                                  STR_8 F9AD                                    STR_9 FCFB  
                  ??_SyncGlobalToEEPROM 00BA                                    _CRLN F0D1  
                                  _LATA 000F89                                    _LATB 000F8A  
                                  _LATC 000F8B                                    _TMR2 000FCC  
                                  _WPUB 000F7C                          ?i2_ResetTimer0 0001  
                                  _Sent 00E6              WriteEEPROM_1Byte@GIEstatus 007C  
                            _ClearUSART 94BA               SetMemoryChar@AddressFirst 0083  
                                  _main 549E                            ___ftpack@arg 0079  
                          ___ftpack@exp 007C                                    fsr0h 000FEA  
                                  fsr1h 000FE2                                    indf0 000FEF  
                                  fsr0l 000FE9                                    fsr2h 000FDA  
                                  indf1 000FE7                              SetEEPROM@i 00B8  
                                  fsr1l 000FE1                                    indf2 000FDF  
                            SetEEPROM@j 00B9                              SetEEPROM@k 00B7  
                                  fsr2l 000FD9                              _RFsendCode 02CE  
                            _RFsendFlag 0036                                    pclat 000FFA  
                      i1_UARTstringCRLN 8C8A                             _RFcodePlace 0035  
                                  prodh 000FF4                     main@BluetoothString 0300  
                                  prodl 000FF3                                    start 01F2  
                         __CFG_IESO$OFF 000000                        Reverse_Byte@This 007C  
                          _sprintf$3802 0100                        Reverse_Byte@temp 007B  
                         __CFG_MCLRE$ON 000000                            ___ftmul@cntr 00A0  
                        UARTstring@data 007A                             ?i1_UARTchar 0001  
                          ___param_bank 000010                            ___ftmul@sign 00A1  
                       __end_of_InitADC 942C                         __end_of_InitApp 907C  
                    i2_cleanBuffer16bit 90C0   __end_of_StringContainsCaseInsensitive 75F8  
__size_of_StringContainsCaseInsensitive 0126           _StringContainsCaseInsensitive 74D2  
               __size_of_ReadPushButton 000E                   ??_BluetoothConfigured 00BA  
                          ___fttol@exp1 00C6                           ??_Init_System 00DB  
                          ___fttol@lval 00C2                    _Conf2_ChannelH_1_OFF EFFC  
                     IRrawToNEC@NECtemp 0060                    _Conf2_ChannelH_2_OFF F01C  
                  _Conf2_ChannelH_3_OFF F03C                                   l13003 46F2  
                                 l13021 92AA                                   l13031 684E  
                                 l13009 47C8                                   l13131 6B02  
                                 l13115 6AB2                                   l13107 6A5C  
                                 l14011 8496                                   l13213 7248  
                                 l13205 720A                                   l13037 6888  
                                 l13207 721C                                   l13223 7EE8  
                                 l13127 6AEE                                   l13119 6AC6  
                                 l13071 696E                                   l14103 6C50  
                                 l14015 84A8                                   l14007 848C  
                                 l13153 7D66                                   l12521 7612  
                                 l13145 8F7C                                   l13209 722A  
                                 l13225 7EFA                                   l13137 6B20  
                                 l14105 6C56                                   l14121 6CCC  
                                 l12451 8C04                                   l13163 7DEC  
                                 l13235 7F5A                                   l13227 7F04  
                                 l13251 8440                                   l13243 83DE  
                                 l13139 6B32                                   l13067 695A  
                                 l13059 6932                                   l14211 4E10  
                                 l14131 8816                                   l15011 7720  
                                 l13157 7DA8                                   l12533 768C  
                                 l12525 7628                                   l12621 5BCE  
                                 l13245 83F0                                   l13093 6A06  
                                 l13077 698C                                   l14117 6CC6  
                                 l14109 6C60                                   l15005 794E  
                                 l15021 7784                                   l12455 8C1A  
                                 l12543 76EA                                   l12535 76BE  
                                 l12527 7638                                   l12615 5B94  
                                 l13247 83FA                                   l13087 69E0  
                                 l13079 699E                                   l12711 6F4C  
                                 l12703 6F10                                   l13511 24D4  
                                 l13431 21DC                                   l14071 6BAA  
                                 l14151 9488                                   l15031 77E8  
                                 l15023 778C                                   l15103 6008  
                                 l13409 7E98                                   l12537 76CE  
                                 l12529 766A                                   l13177 7144  
                                 l13257 890A                                   l12801 8256  
                                 l12721 6F90                                   l12713 6F54  
                                 l13433 21F4                                   l13425 21B8  
                                 l14225 4E86                                   l13273 94EC  
                                 l14065 6B9A                                   l14313 8A3A  
                                 l15041 7824                                   l15017 7752  
                                 l15105 602C                                   l12491 8C72  
                                 l13283 9030                                   l12811 8D7A  
                                 l12643 5C52                                   l12627 5BE0  
                                 l13195 71D8                                   l13259 891C  
                                 l12707 6F30                                   l13451 22AC  
                                 l13427 21CE                                   l13419 2198  
                                 l14083 6C08                                   l14075 6BB4  
                                 l14411 6714                                   l14403 6688  
                                 l15051 833E                                   l14323 6FF2  
                                 l14139 8860                                   l15027 7798  
                                 l15115 60A2                                   l15107 6050  
                                 l12901 6572                                   l14165 93B2  
                                 l13381 7DFA                                   l12549 7708  
                                 l12645 5C62                                   l12637 5C22  
                                 l12733 7C72                                   l12717 6F74  
                                 l13701 2D1E                                   l13621 29A6  
                                 l13605 2928                                   l13613 295E  
                                 l13541 263E                                   l13461 22EC  
                                 l13445 2298                                   l13437 2216  
                                 l14253 4F72                                   l14501 74C0  
                                 l14069 6BA4                                   l14421 6738  
                                 l14309 8A12                                   l15037 7806  
                                 l16005 1A64                                   l15125 60F8  
                                 l15109 6074                                   l12911 6594  
                                 l12823 826A                                   l12815 8DA8  
                                 l12807 8D5A                                   l13391 7E10  
                                 l12663 5D24                                   l12655 5CAE  
                                 l12647 5C72                                   l13199 71EC  
                                 l13631 2A52                                   l13615 2972  
                                 l13607 2942                                   l13551 26D4  
                                 l13543 2670                                   l13535 25F8  
                                 l13527 2588                                   l13471 236A  
                                 l13463 22F4                                   l13447 229E  
                                 l14239 4EFC                                   l14087 6C0E  
                                 l14431 6752                                   l15215 870A  
                                 l16111 2154                                   l16007 1A86  
                                 l15071 94A6                                   l15135 614E  
                                 l15119 60CA                                   l12569 91B2  
                                 l12921 65AE                                   l12905 6584  
                                 l12841 82EE                                   l12673 5D74  
                                 l12657 5CBE                                   l12649 5C7E  
                                 l12745 7CA8                                   l12761 7D02  
                                 l13713 2D74                                   l13705 2D2C  
                                 l13561 2752                                   l13545 2686  
                                 l13465 2338                                   l13449 22A6  
                                 l14281 5080                                   l14505 74C6  
                                 l14097 6C40                                   l14441 6804  
                                 l14425 6742                                   l14409 6710  
                                 l15321 88C4                                   l14329 702C  
                                 l14601 8AB2                                   l16017 1AAC  
                                 l15145 61A4                                   l15129 6120  
                                 l15161 6222                                   l15401 5F06  
                                 l14451 9464                                   l12915 659E  
                                 l12835 82DA                                   l12819 8DD6  
                                 l12747 7CB6                                   l12739 7C8A  
                                 l12683 6E86                                   l13723 2DC8  
                                 l13715 2D7A                                   l13731 2DE4  
                                 l13651 2AD8                                   l13643 2AA6  
                                 l13619 299E                                   l13571 2802  
                                 l13563 2780                                   l13555 2702  
                                 l13539 2628                                   l13483 23D2  
                                 l13475 237E                                   l13459 22E0  
                                 l14179 4CC4                                   l14099 6C46  
                                 l14427 6748                                   l14419 6732  
                                 l15059 83A4                                   l13811 7BAA  
                                 l16051 1C48                                   l16027 1B28  
                                 l15155 61FA                                   l15139 6176  
                                 l12597 7B5E                                   l12917 65A4  
                                 l12933 662E                                   l12909 658E  
                                 l12765 7D18                                   l12757 7CF2  
                                 l12749 7CC0                                   l12781 81DE  
                                 l13741 2E52                                   l13709 2D6C  
                                 l13637 2A6E                                   l13629 2A42  
                                 l13557 270E                                   l13565 2794  
                                 l13485 23F0                                   l13477 2398  
                                 l13469 235E                                   l14269 5014  
                                 l14189 4D40                                   l14509 74CC  
                                 l14461 73D8                                   l14437 67FE  
                                 l14349 708E                                   l15181 8604  
                                 l15165 85B2                                   l13821 7BD4  
                                 l14605 8AB6                                   l15229 8758  
                                 l16109 1E4A                                   l16061 1C5E  
                                 l16045 1C14                                   l15093 8F46  
                                 l15085 8F2E                                   l15149 61CC  
                                 l15413 5FBE                                   l15421 5FD4  
                                 l15405 5F10                                   l12871 64BE  
                                 l12943 94FA                                   l12847 82F8  
                                 l13751 2E98                                   l13743 2E5E  
                                 l13719 2D88                                   l13655 2B2A  
                                 l13639 2A82                                   l13591 28D2  
                                 l13583 2856                                   l13575 2810  
                                 l13495 2424                                   l13903 8CFC  
                                 l14463 73DE                                   l14359 70E2  
                                 l14375 80D0                                   l15175 85F0  
                                 l15183 860A                                   l13807 7B96  
                                 l14607 8AC4                                   l14623 864A  
                                 l14703 90A8                                   l16055 1C52  
                                 l15511 0660                                   l15503 05DC  
                                 l15343 5DC4                                   l16303 554C  
                                 l12929 6628                                   l12881 64DA  
                                 l12865 6492                                   l12849 8300  
                                 l12793 8230                                   l12785 81F2  
                                 l12777 81CC                                   l12689 6EC0  
                                 l13761 2EDA                                   l13753 2EA4  
                                 l13737 2E1A                                   l13729 2DD0  
                                 l13681 2C84                                   l13673 2C4C  
                                 l13665 2C20                                   l13569 27FC  
                                 l13489 240A                                   l13497 2478  
                                 l14473 7430                                   l14457 73CE  
                                 l14377 80E4                                   l15169 85DC  
                                 l13825 7C16                                   l14297 9128  
                                 l14617 8AEA                                   l14641 86B0  
                                 l14705 90B0                                   l16065 1C74  
                                 l15521 06A0                                   l15089 8F3A  
                                 l15417 5FCE                                   l15425 5FDA  
                                 l15353 5E1A                                   l12875 64CA  
                                 l12787 8200                                   l12971 5ACE  
                                 l12963 59DA                                   l13667 2C30  
                                 l13587 28A8                                   l13579 2850  
                                 l13907 8D20                                   l13851 8546  
                                 l14491 745C                                   l14483 7446  
                                 l14467 73E8                                   l14803 49FE  
                                 l15179 85FC                                   l15187 8614  
                                 l13835 7C48                                   l13819 7BCC  
                                 l14651 86D6                                   l14635 869E  
                                 l16083 1D7A                                   l16075 1C8A  
                                 l15507 061E                                   l15515 0684  
                                 l15451 02EA                                   l16323 559A  
                                 l16315 5586                                   l12893 654C  
                                 l12885 64E4                                   l12789 820A  
                                 l12797 8240                                   l13773 2F38  
                                 l13685 2CAC                                   l14485 744C  
                                 l14477 7436                                   l14397 6678  
                                 l14821 4ABE                                   l14741 48EE  
                                 l14717 4862                                   l14725 488C  
                                 l14709 4828                                   l13837 7C4E  
                                 l14901 6330                                   l16093 1DDA  
                                 l16069 1C7E                                   l15701 1146  
                                 l15373 5E6C                                   l15357 5E24  
                                 l15429 5FE8                                   l16317 558A  
                                 l12879 64D4                                   l12991 454E  
                                 l13775 2F4A                                   l13783 3056  
                                 l13767 2F04                                   l13759 2ECE  
                                 l13695 2CEE                                   l13599 290C  
                                 l13791 3098                                   l14495 7466  
                                 l14479 743C                                   l14399 667E  
                                 l14815 4AB0                                   l14735 48BC  
                                 l13863 878A                                   l14911 635E  
                                 l14903 6336                                   l14639 86A2  
                                 l16095 1DE0                                   l16079 1D70  
                                 l15623 0D84                                   l15455 032C  
                                 l15463 0392                                   l15367 5E5C  
                                 l15383 5EA4                                   l16319 5590  
                                 l12985 4478                                   l13777 2FD4  
                                 l13785 306A                                   l13793 30BC  
                                 l13961 89BC                                   l13953 89A4  
                                 l13849 8534                                   l14489 7456  
                                 l14833 4B18                                   l14825 4ADC  
                                 l14753 4922                                   l14729 4898  
                                 l14913 6366                                   l14905 6352  
                                 l14681 75B8                                   l14657 74DA  
                                 l15705 115A                                   l15617 0D60  
                                 l15393 5EF0                                   l15369 5E62  
                                 l16345 568A                                   l12995 457A  
                                 l13699 2D18                                   l14843 4B98  
                                 l14763 494E                                   l13875 87B2  
                                 l13883 87D8                                   l13867 8798  
                                 l14923 63BE                                   l14675 758A  
                                 l16099 1DEA                                   l15731 121C  
                                 l15723 11E4                                   l15627 0D92  
                                 l15555 0862                                   l15491 0516  
                                 l15483 0492                                   l15475 040E  
                                 l15459 036E                                   l15395 5EF6  
                                 l16355 56FE                                   l16339 5624  
                                 l16291 5504                                   l13789 307E  
                                 l13973 89E0                                   l13965 89C6  
                                 l13957 89AE                                   l13949 8998  
                                 l14845 4BEC                                   l14829 4AFA  
                                 l14853 4BF6                                   l14773 4984  
                                 l14757 493C                                   l14749 4902  
                                 l14933 6428                                   l14917 6398  
                                 l14597 8A7A                                   l15805 139A  
                                 l15741 1272                                   l15717 11C2  
                                 l15709 117C                                   l15653 0F22  
                                 l15573 098A                                   l15557 0874  
                                 l15469 03AE                                   l16381 57B4  
                                 l16373 578E                                   l16349 56B6  
                                 l14863 4C40                                   l14855 4BFE  
                                 l14783 49A0                                   l14791 49BC  
                                 l14951 7868                                   l14927 63CA  
                                 l14687 75C2                                   l15911 17B4  
                                 l15751 1296                                   l15823 1404  
                                 l15663 0F64                                   l15495 0558  
                                 l15487 04D4                                   l15479 0450  
                                 l15399 5F00                                   l16295 5534  
                                 l13969 89D0                                   l13897 9378  
                                 l14785 49A8                                   l14937 642E  
                                 l14881 6276                                   l14689 75CA  
                                 l13985 8AF2                                   l14697 907E  
                                 l15913 17BA                                   l15841 146E  
                                 l15809 13B2                                   l15761 12C0  
                                 l15681 10AA                                   l15673 104A  
                                 l15585 0A9C                                   l14867 4C5E  
                                 l14795 49CE                                   l14779 498A  
                                 l14971 78B8                                   l14947 7846  
                                 l15931 18CC                                   l15923 185A  
                                 l15819 13E4                                   l15747 1288  
                                 l15755 12A8                                   l15683 10B2  
                                 l15667 0F98                                   l15579 09AC  
                                 l15499 059A                                   l16395 57CA  
                                 l16299 5542                                   l14797 49D6  
                                 l14965 78A6                                   l14885 628A  
                                 l14877 626A                                   l13989 8B20  
                                 l15941 18FE                                   l15917 17C4  
                                 l15853 1514                                   l15837 1464  
                                 l15829 141C                                   l15765 12CE  
                                 l15677 1088                                   l14991 7900  
                                 l14959 787C                                   l14895 62D2  
                                 l15863 1548                                   l15871 15F4  
                                 l15951 193E                                   l16399 57F4  
                                 l14985 78EC                                   l14977 78D6  
                                 l14889 6296                                   l15929 189E  
                                 l15873 1604                                   l15849 150E  
                                 l15697 1124                                   l15689 10E6  
                                 l14899 630C                                   l15859 1530  
                                 l15787 1332                                   l15955 1960  
                                 l15869 15EE                                   l15797 1378  
                                 l14999 7926                                   l15887 1704  
                                 l15879 1620                           ??_ReadVoltage 00A5  
                                 l15977 19D8                                   l15889 1742  
                                 l15995 1A44                                   l15987 1A1E  
                                 l15899 1774                                   ?_main 0001  
                __size_ofi1_cleanBuffer 003E                         __end_of___awdiv 7D24  
                                 _EEADR 000FA9                         __end_of___ftadd 5D9C  
                                 STR_10 FC88                                   STR_11 FCFB  
                                 STR_20 FCC6                                   STR_12 FCC0  
                                 STR_13 FCFB                                   STR_21 F82A  
                                 STR_14 FCC0                                   STR_22 FCCC  
                                 STR_30 F6F5                                   STR_15 FCFB  
                                 STR_31 FA53                                   STR_23 F847  
                                 STR_32 F9DB                                   STR_24 FCEF  
                                 STR_16 FCDD                                   STR_40 F997  
                                 STR_33 F4C3                                   STR_41 FC91  
                                 STR_17 F881                                   STR_25 F715  
                                 STR_18 FCD8                                   STR_42 FAEE  
                                 STR_26 F734                                   STR_34 F634  
                                 STR_50 F338                                   STR_51 F4A8  
                                 STR_35 FCED                                   STR_43 FC6B  
                                 STR_19 FCF7                                   STR_27 F9D7  
                                 STR_60 FCB9                                   STR_44 FB46  
                                 STR_28 F9C2                                   STR_36 F7EE  
                                 STR_52 F5C8                         __end_of___awmod 8262  
                                 STR_37 FCB2                                   STR_61 FC9A  
                                 STR_45 FC1A                                   STR_29 F953  
                                 STR_53 F611                                   STR_54 FCB2  
                                 STR_46 FA8B                                   STR_62 FCB9  
                                 STR_38 FA2B                                   STR_70 F1B1  
                                 STR_39 FC69                                   STR_55 FB57  
                                 STR_47 F9EC                                   STR_63 F57E  
                                 STR_71 F52C                                   STR_64 F57E  
                                 STR_56 FA7B                                   STR_80 F80D  
                                 STR_48 F4A8                                   STR_72 F47A  
                                 STR_57 FC91                                   STR_81 FB12  
                                 STR_65 F5A3                                   STR_49 F309  
                                 STR_73 F0D4                                   STR_82 F80D  
                                 STR_90 F8E3                                   STR_58 FB96  
                                 STR_66 F7B0                                   STR_74 F113  
                                 STR_83 FCA3                                   STR_91 FB35  
                                 STR_59 FB00                                   STR_67 F7CF  
                                 STR_75 F149                                   STR_92 FCEB  
                                 STR_68 FBA4                                   STR_84 FA67  
                                 STR_76 F4D4                                   STR_85 F902  
                                 STR_93 FC7E                                   STR_77 F500  
                                 STR_69 F17F                                   STR_94 FCD2  
                                 STR_78 FCD2                                   STR_86 FA16  
                                 STR_87 FB67                                   STR_79 F6D5  
                                 STR_95 F6B5                                   STR_96 F902  
                                 STR_88 F864                                   STR_89 FCEB  
                                 STR_97 F8F0                                   STR_98 FA01  
                                 STR_99 FCA3                         __end_of___ftdiv 710A  
                   ?i2_cleanBuffer16bit 001B                         __end_of___ftneg 9288  
                                 _ANSEL 000F7E                         __end_of___lldiv 7F80  
                       __end_of___ftmul 6FB8                         ___awdiv@divisor 0081  
                       __end_of___llmod 8466                         __end_of___ftsub 8FA8  
                       __end_of___fttol 725C                                   u20611 580C  
                   __end_of_FirmVersion F0C4                                   u15110 829A  
               ReadEEPROM_1Byte@address 0079                                   u15130 82D0  
                                 u16100 3A72                                   u16020 3712  
                                 u15117 8290                                   u16005 359A  
                                 u16110 3ADE                                   u16030 377E  
                                 u16015 35F4                                   u15080 8DCA  
                                 u16120 3B4A                                   u16040 37EA  
                                 u15137 82C6                                   u16105 3A66  
                                 u16025 3706                                   u15090 8DF8  
                                 u16130 3BB6                                   u16050 3856  
                                 u16115 3AD2                                   u16035 3772  
                                 u16140 3C22                                   u16060 38C2  
                                 u17100 8B14                                   u15501 6864  
                                 u16125 3B3E                                   u16045 37DE  
                                 u16150 3C8E                                   u16070 392E  
                                 u17110 8B42                                   u15087 8DC0  
                                 u17015 812C                                   u16135 3BAA  
                                 u16055 384A                                   u16160 3D12  
                                 u16080 399A                                   u15097 8DEE  
                                 u16145 3C16                                   u16065 38B6  
                                 u16250 232E                                   u16090 3A06  
                                 u16155 3C82                                   u16075 3922  
                                 u17107 8B0A                                   u14660 7AA2  
                                 u16340 251A                                   u16165 3D06  
                                 u16085 398E                                   u17117 8B38  
                                 u15710 716A                                   u14911 6E9C  
                                 u16095 39FA                                   u14665 7A96  
                                 u14681 5B34                                   u15481 682A  
                                 u16345 250E                                   u16257 2324  
                                 u16290 23C2                                   u14691 5B52  
                                 u15715 7160                                   u17501 6FCE  
                                 u16560 2A98                                   u16297 23B8  
                                 u17521 7008                                   u15905 3216  
                                 u15851 8FFA                                   u15691 7120  
                                 u14891 6E62                                   u15915 3270  
                                 u19300 06F4                                   u18325 4B1C  
                                 u15925 32CA                                   u15935 3324  
                                 u19320 0750                                   u15945 337E  
                                 u15955 33D8                                   u15875 3108  
                                 u17900 7580                                   u19420 0C0E  
                                 u15965 3432                                   u15885 3162  
                                 u15975 348C                                   u15895 31BC  
                                 u18720 8384                                   u17920 75AC  
                                 u18640 7742                                   u15985 34E6  
                                 u17770 79D8                                   u18650 7774  
                                 u15995 3540                                   u17907 7576  
                                 u18725 8378                                   u17950 75EC  
                                 u17870 74FC                                   u17775 79CC  
                                 u17927 75A2                                   u18647 7738  
                                 u19391 0B0A                                   u17880 7522  
                                 u18657 776A                                   u17957 75E2  
                                 u17877 74F2                                   u17887 7518  
                                 i1l661 9438                                   i1l646 93F6  
                   __end_of_EraseScreen 9360                         ___awdiv@counter 0083  
                                 _RCREG 000FAE                                   _RCSTA 000FAB  
                                 _TMR0H 000FD7                                   _TMR1H 000FCF  
                                 _TMR0L 000FD6                                   _TMR3H 000FB3  
                                 _TMR1L 000FCE                                   _TMR3L 000FB2  
                                 _SPBRG 000FAF                              _BufferCopy 876C  
                                 _PORTA 000F80                                   _PORTB 000F81  
                                 _PORTC 000F82                                   _RF_IR 0042  
                          InitUART@Baud 00CE                                   _IRbit 002C  
                                 _IRmod 00DE                                   _TXREG 000FAD  
                                 _TXSTA 000FAC                     _ConfigureOscillator 957A  
                       __end_of_delayUS 8F04                           __CFG_PWRT$OFF 000000  
                      _InternalADC_Read 8466                           __CFG_WRT0$OFF 000000  
                         __CFG_WRT1$OFF 000000                           __CFG_WRT2$OFF 000000  
                   ___lmul@multiplicand 007D                           __CFG_WRT3$OFF 000000  
                     _NewReceivedString 00DF                            ___lltoft@exp 0089  
                        __CFG_EBTR0$OFF 000000                          __CFG_FCMEN$OFF 000000  
                        ?_InitBluetooth 0001                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                          __CFG_EBTR3$OFF 000000  
                            SendRF@Code 0079                            InitUART@temp 0106  
                          _IRrawCodeNum 002F                                   _Round 8B5A  
                         __CFG_WRTB$OFF 000000                   _BluetoothInitialSetup 4C7C  
              __end_of_Local_CloseUSART 94BA                           __CFG_WRTC$OFF 000000  
                 __end_of_BlueConnected 9500                           __CFG_WRTD$OFF 000000  
                      ?_lowercaseString 0079                        __end_of_UARTchar 939C  
                        __CFG_EBTRB$OFF 000000                         __end_of_dpowers EE89  
                                 _scale 42F2                              SendRF@size 007C  
                       __end_of_isdigit 92B6                           ___ftpack@sign 007D  
                                 main@i 0297                         __end_of_low_isr 01F2  
                                 tablat 000FF5                        _RF_IR_Postscaler 0043  
                                 plusw0 000FEB                                   plusw2 000FDB  
                           ?_UARTstring 007A                 InternalADC_Read@channel 0087  
                                 status 000FD8                    ??i2_cleanBuffer16bit 001F  
                       __end_of_sprintf 30CC                          __CFG_HFOFST$ON 000000  
           WriteEEPROM_1Byte@PEIEstatus 007D                    __size_of_cleanBuffer 005A  
                   __size_of_LEDTimerON 0012                   __end_of_GetMemoryChar 9338  
                  ?_ConfigureOscillator 0001                   __end_of_GetMemoryLong 6E4C  
                         ??_SendRF_wait 0086                      StringContains@That 007B  
                    StringContains@This 0079                            __end_of_CRLN F0D4  
                         high_isr@IRpin 0023                         __initialization 7F80  
                    StringAddEqual@temp 0100                   __end_of_EEPROM_UNLOCK 9416  
                      __end_of_IsLetter 937E                              _InitTimer0 948E  
                            _InitTimer1 94D6                      _Conf1_ChannelD_STR F05C  
                            _InitTimer2 94C8                              _InitTimer3 9534  
                    __size_of_GetEEPROM 018E                           high_isr@Time0 0024  
                    _Conf1_ChannelE_STR F06B                      _Conf1_ChannelF_STR F07A  
      __end_of_Conf2_ChannelH_1_OFF_STR EF0C                              _InitTimers 9442  
                          _IRrepeatflag 0031                      __size_of_DecodeNEC 00AE  
                          __end_of_main 5846                   __end_of_Reverse_4Byte 3D4A  
                      ??_UARTstringCRLN 007E                        __end_of_InitUART 7A6A  
      __end_of_Conf2_ChannelH_2_OFF_STR EF21                  WaitForIRsignal@timeout 0082  
          __size_of_GetStringAfterComma 011E                          GetNumber@count 0091  
      __end_of_Conf2_ChannelH_3_OFF_STR EF36                             _IsCharacter 93D0  
                                ??_main 00DB                           ___fttol@sign1 00C1  
                      __end_of_ResetADC 950E                       GetNumber@negative 0090  
                         __activetblptr 000003                      SendRF@RepeatAmount 007D  
                           ?_IRrawToNEC 001B                      __size_of_GetNumber 0486  
                       _WaitForIRsignal 86DC                    __size_of__tdiv_to_l_ 01A6  
                    __size_of_EncodeNEC 014E                     __end_of_Init_System 8902  
                     SetEEPROMdefault@i 00BD                       SetEEPROMdefault@j 00BE  
                     SetEEPROMdefault@k 00BC                   _Conf2_ChannelB_ON_STR EF98  
                         ?_SendNEC_wait 008E                   _Conf2_ChannelD_ON_STR EFAA  
                __size_of_SendNEC_bytes 0086                                  ?_Round 00C7  
                   __end_of_ReadVoltage 80F8                       GetNumber@tempThis 0094  
                            UseIRCode@i 00C5                              UseIRCode@j 00C4  
                        _StringAddEqual 625A                                  _ADCON0 000FC2  
                                _ADCON1 000FC1                                  _ADCON2 000FC0  
                   __size_ofi1_UARTchar 0018                        __end_of___altoft 85AA  
                      ___llmod@dividend 0086                                  ?_scale 00A2  
                                STR_100 F89D                                  STR_101 FBBF  
                                STR_110 FC53                                  STR_102 FB87  
                                STR_103 F90A                                  STR_111 F2A7  
                                STR_112 FC27                                  STR_120 FBF3  
                                STR_104 FADB                                  STR_105 F93B  
                                STR_121 F3F0                                  STR_113 F1E3  
                                STR_130 FCE2                                  STR_114 FC3D  
                                STR_106 FC32                                  STR_122 FC00  
                                _ADRESH 000FC4                                  STR_131 F556  
                                STR_123 F41E                                  STR_115 F245  
                                STR_107 F214                                  STR_116 FC5E  
                                STR_108 FC48                                  STR_124 FBCC  
                                STR_132 FBB2                                  STR_140 F753  
                                _EEADRH 000FAA                                  STR_133 FA8F  
                                STR_141 F655                                  STR_125 F366  
                                STR_117 F2D8                                  STR_109 F276  
                                STR_126 FBE6                                  STR_118 FBD9  
                                STR_150 FB24                                  STR_134 FAA2  
                                STR_142 F772                                  _ADRESL 000FC3  
                                STR_135 FAB5                                  STR_143 F675  
                                STR_127 F3C2                                  STR_119 F394  
                                STR_128 FC0D                                  STR_136 F981  
                                STR_144 F791                                  STR_137 F96A  
                                STR_145 F695                                  STR_129 F44C  
                                STR_138 FAC8                                  STR_146 F8D5  
                                STR_139 FA3F                                  STR_147 F8B9  
                                STR_148 F5ED                                  STR_149 FCAB  
                                _EEDATA 000FA8                                  _EECON2 000FA7  
                      ___awdiv@dividend 007F                         ??i2_ResetTimer0 001B  
                      __end_of___ftpack 7718                                  _ANSELH 000F7F  
                     ?_VoltageDividerON 0001                   _Conf2_ChannelB_Status 0027  
                         ??_ResetTimer0 0079                           ??_ResetTimer1 0079  
                         ??_ResetTimer3 001B                        __end_of___lltoft 8982  
                                i1l1353 01AA                                  i1l1354 01A6  
                                i1l1338 018C                                  i2l1211 3E82  
                                i2l1212 3E76                                  i2l1221 3E70  
                                i2l1213 3E6C                                  i2l1223 42B6  
                                i2l1224 3EE6                                  i2l1241 3F7A  
                                i2l1225 3EAC                                  i2l1331 42B2  
                                i2l1228 4290                                  i2l1265 401E  
                                i2l1291 40D2                                  i2l1284 40AA  
                                i2l1285 40A0                          __CFG_WDTEN$OFF 000000  
                      __end_of___lwtoft 92E2                      __size_of_ReadUSART 0018  
                 _Conf2_ChannelD_Status 0028                           SetTimer0@temp 001B  
                                _IR_NEC 00E1                      __size_of_ReadIRpin 000E  
                                _SPBRGH 000FB0                      ??_VoltageDividerON 0079  
                         i1_cleanBuffer 9140                             ?_ClearUSART 0001  
                        SetMemoryLong@H 00AB                          SetMemoryLong@L 00AE  
                    __size_of_SetEEPROM 01EC                               ??_InitADC 0079  
                             ??_InitApp 0079                   ??_ConfigureOscillator 0079  
                                _Global 0400                                  _InitIR 8FA8  
                                _SendRF 7B64                          __CFG_XINST$OFF 000000  
                       _UARTcommandMenu 7718                GetStringAfterComma@count 0080  
                      __end_of__powers_ EED7                           InitUART@spbrg 0103  
                      __end_of_high_isr 42F2                         _ReadCodeButtons 8F04  
                    __size_of_OpenUSART 007C                          _StringContains 8262  
                                ___ftge 7D24                                  ___lmul 89FE  
              SendNEC_wait@RepeatAmount 0092                                  ___wmul 91B8  
            __end_of_SyncEEPROMToGlobal 6814                               ??___awdiv 0083  
                           _FirmVersion F0BB                               ??___ftadd 00B2  
                        __CFG_STVREN$ON 000000                               ??___awmod 007D  
                             ??___ftdiv 008A             ?_StringMatchCaseInsensitive 007C  
                             ??___ftneg 007C                               ??___lldiv 0081  
                             ??___ftmul 0099                             _EraseScreen 9338  
                             ??___llmod 008E                               ??___ftsub 00BE  
                             ??___fttol 00BC                       cleanBuffer16bit@i 0080  
                    __size_of_SetTimer0 000A                      __size_of_ResetBlue 0032  
                   __end_of_SendRF_wait 9140                            ?i1_ReadUSART 0001  
                                _fround 5846                       ?_SetEEPROMdefault 0001  
                                clear_0 7F86                                  clear_1 7F94  
                                clear_2 7FA8                                  clear_3 7FBA  
                                clear_4 7FC6                                  clear_5 7FD6  
                                clear_6 7FE2                        ___awdiv@quotient 0085  
                             ??_delayUS 007D                         ___awmod@divisor 007B  
                    __size_of_UseIRCode 0266                         ___awmod@counter 007D  
                    ??_SetEEPROMdefault 00BA                   ___ftmul@f3_as_product 009D  
                   __size_of_UARTstring 005A                         ??_InitBluetooth 00DB  
                           ?_BufferCopy 0081                       ?_cleanBuffer16bit 0079  
                          __pdataCOMRAM 003C                               ??_isdigit 0079  
                        ??_SendNEC_wait 0093                  ?_BluetoothInitialSetup 0001  
                __end_of_StringAddEqual 645A                            __mediumconst EE60  
                        EncodeNEC@temp1 0095                          EncodeNEC@temp2 0099  
                        EncodeNEC@temp3 009D                          EncodeNEC@temp4 00A1  
                          ?i2_ReadIRpin 0001                               ??_low_isr 0009  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                      ??_cleanBuffer16bit 007D  
                    IRrawToNEC@StartBit 0066                  SyncEEPROMToGlobal@Temp 0103  
                      _CommandStringPos 0026                       __end_of_GetEEPROM 6CDC  
                 __end_of_lowercaseChar 930E                       __end_of_DecodeNEC 83C2  
                             ??_sprintf 00D5                         __CFG_FOSC$HSPLL 000000  
                        ?i1_cleanBuffer 0001                    UARTcommandMenu@place 0086  
                    UseBluetooth@String 0200                              __accesstop 0060  
               __end_of__initialization 803A                              ___altoft@c 0081  
                            Round@input 00C7                         __CFG_PBADEN$OFF 000000  
                            ___ftadd@f1 00AC                              ___ftadd@f2 00AF  
                            ___ftge@ff1 0079                              ___ftge@ff2 007C  
                    UseBluetooth@device 0284                           ___rparam_used 000001  
                   StringAddEqual@Input 0088                              ___ftdiv@f1 0084  
                            ___ftdiv@f2 0087                              ___ftdiv@f3 008E  
                   StringContains@begin 007E                              ___ftneg@f1 0079  
                     __end_of_GetNumber 4C7C                  __end_of_StringContains 8314  
                    UseBluetooth@rfconf 028B                       __end_of_EncodeNEC 73AA  
             __size_of_ReadEEPROM_1Byte 0066                     __end_of_ResetTimer0 9548  
                   __end_of_ResetTimer1 9534                     __end_of_ResetTimer3 9566  
                   __size_of_IRrawToNEC 03FE                              ___ftmul@f1 0093  
                            ___ftmul@f2 0096                           _SendNEC_bytes 87F6  
                            ___ftsub@f1 00B8                              ___ftsub@f2 00BB  
                            ___fttol@f1 00B8                          __pcstackCOMRAM 0001  
                           ?_InitTimer0 0001                             ?_InitTimer1 0001  
                           ?_InitTimer2 0001                             ?_InitTimer3 0001  
                           ?_InitTimers 0001                      _Conf2_ChannelB_OFF EFBC  
                    _Conf2_ChannelD_OFF EFDC                           __end_of_Round 8BC0  
                        _ReadPushButton 949E                  i2cleanBuffer16bit@data 001B  
                          __pidataBANK0 957C                            __pidataBANK2 91F0  
             __size_of_EnterCommandMode 00C8                              ___lltoft@c 0081  
                             ?_UARTchar 0001                 __end_of_WaitForIRsignal 876C  
                         __end_of_scale 47F6         __end_of_Conf2_ChannelH_1_ON_STR EF4A  
                           _Init_System 887C                     SyncEEPROMToGlobal@i 0101  
                   SyncEEPROMToGlobal@j 0102                     SyncEEPROMToGlobal@k 0100  
       __end_of_Conf2_ChannelH_2_ON_STR EF5E         __end_of_Conf2_ChannelH_3_ON_STR EF72  
              _Conf2_ChannelH_1_OFF_STR EEF7                       __end_of_ReadUSART 93D0  
                     __end_of_ReadIRpin 94F2                           ?i1_UARTstring 0002  
                          ??_LEDTimerON 0079                              ___lwtoft@c 0081  
             __size_of_CheckReceivingIR 0012                             _ReadVoltage 8040  
              _Conf2_ChannelH_2_OFF_STR EF0C                       __end_of_SetEEPROM 6646  
                       ReadVoltage@temp 00A8                     __size_of_ClearUSART 000E  
                            __div_to_l_ 69BA                __end_ofi1_UARTstringCRLN 8CEE  
              _Conf2_ChannelH_3_OFF_STR EF21                         GetNumber@result 0088  
                       ?_StringAddEqual 0088                                 ??_Round 00CA  
                         ReadUSART@data 0079                       __end_of_OpenUSART 89FE  
                       __div_to_l_@exp1 0084                         __div_to_l_@cntr 0083  
                               ??_scale 00A5                               ?_IsLetter 0001  
                       __div_to_l_@quot 007F                            sprintf@width 0119  
                __size_of_SetMemoryChar 003A                       __end_of_SetTimer0 955C  
                            __pbssBANK0 00DB                              __pbssBANK1 01FF  
                            __pbssBANK2 02CE                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              __pbssBANK6 0600  
                            __pbssBANK7 0700                  __size_of_SetMemoryLong 00FA  
                     _EEPROMinitialized 9456                               ?_InitUART 00CE  
                     __end_of_ResetBlue 9258                 __end_of_UARTcommandMenu 7836  
                _Conf2_ChannelB_OFF_STR EF72                       __end_of_UseIRCode 6002  
                    ReadVoltage@voltage 00A5                 __end_of_ReadCodeButtons 8F58  
                           _ReceivingIR 0044                      ?_EEPROMinitialized 0001  
                         ??_StringMatch 007D                  _Conf2_ChannelD_OFF_STR EF85  
                         __div_to_l_@f1 0079                           __div_to_l_@f2 007C  
              __size_ofi1_BlueConnected 000E                   WriteEEPROM_1Byte@data 007B  
                             ?_ResetADC 0001                      __end_of_LEDTimerON 947C  
                               ?_InitIR 0001                         ?_StringContains 0079  
                        ?_SendNEC_bytes 0089                  __end_of_ReadPushButton 94AC  
              __end_of_InternalADC_Read 8508                     __size_of_BufferCopy 008A  
                               ?_SendRF 0079                             _SendRF_wait 9102  
                          ??i1_UARTchar 0001                                 ?___ftge 0079  
                   ??_EEPROMinitialized 0079                                 ?___lmul 0079  
                               ?___wmul 0087                           ?_Reverse_Byte 0001  
                            ??_UARTchar 0079                       _VoltageDividerOFF 9576  
                             ?___altoft 0081                                 ?_fround 00A2  
                        ___lmul@product 0081                          ??i1_UARTstring 0004  
                             ?___ftpack 0079                   EnterCommandMode@count 0082  
                 cleanBuffer16bit@count 007B                               ?___lltoft 0081  
                    __end_of_PCBVersion F0C9                      ?_VoltageDividerOFF 0001  
             SendNEC_bytes@RepeatAmount 008D                               ?___lwtoft 0081  
                               i1l10605 8E02                                 i1l11503 9346  
                               i1l10609 8E2E                                 i1l11507 9350  
                               i1l12403 0162                                 i1l12413 0188  
                               i1l12423 01A2                                 i1l11713 8CB8  
                               i1l12371 00B4                                 i1l12363 0094  
                               i1l11709 8C8C                                 i1l11495 93E2  
                               i1l12383 00F2                                 i1l11737 9516  
                               i1l11681 914A                                 i1l12395 0130  
                               i1l11685 9162                                 i2l11727 9524  
                               i2l11693 90E6                                 i2l11689 90CA  
                               i2l16205 5324                                 i2l16213 534C  
                               i2l16133 50CE                                 i2l16231 53C2  
                               i2l16143 5110                                 i2l16225 53B4  
                               i2l16153 515A                                 i2l16129 50C4  
                               i2l16235 53E4                                 i2l16243 5402  
                               i2l16227 53BC                                 i2l16155 5182  
                               i2l16181 5284                                 i2l16149 5154  
                               i2l16255 5446                                 i2l16159 5186  
                               i2l16265 5488                                 i2l16249 5440  
                               i2l16273 5498                                 i2l16193 52CE  
                               i2l16185 52C0                                 i2l16531 3F42  
                               i2l16507 3EDE                                 i2l16269 548E  
                               i2l16197 52D8                                 i2l16189 52C6  
                               i2l16541 3F5A                                 i2l16615 3FF0  
                               i2l16623 3FFA                                 i2l16551 3F6A  
                               i2l16543 3F5E                                 i2l16535 3F4E  
                               i2l16801 41BC                                 i2l16633 400E  
                               i2l16561 3F84                                 i2l16723 40DC  
                               i2l16571 3F98                                 i2l16483 3E7A  
                               i2l16475 3E56                                 i2l16467 3E2E  
                               i2l16821 4208                                 i2l16813 41D8  
                               i2l16717 40C4                                 i2l16709 40B0  
                               i2l16653 4034                                 i2l16645 4024  
                               i2l16741 4102                                 i2l16477 3E5C  
                               i2l16815 41E6                                 i2l16671 4054  
                               i2l16663 4046                                 i2l16655 4038  
                               i2l16591 3FD6                                 i2l16583 3FB2  
                               i2l16479 3E62                                 i2l16833 4224  
                               i2l16761 413A                                 i2l16729 40F0  
                               i2l16649 4030                                 i2l16577 3FA6  
                               i2l16745 410C                                 i2l16851 4262  
                               i2l16819 41F6                                 i2l16683 406A  
                               i2l16595 3FDC                                 i2l16691 407E  
                               i2l16853 4268                                 i2l16837 423E  
                               i2l16765 414A                                 i2l16677 4060  
                               i2l16775 4170                                 i2l16881 42A6  
                               i2l16865 4286                                 i2l16857 4272  
                               i2l16689 4074                                 i2l16883 42AE  
                               i2l16859 427A                                 i2l16795 41A0  
                               i2l16787 418E                                 i2l16699 4090  
                               i2l16789 4194                                 i2l16797 41A6  
                               i2l16869 428C                        i1UARTstring@data 0002  
                         UseIRCode@Code 00BA                       _ReceivedStringPos 00E0  
                   ??_VoltageDividerOFF 0079                         SetMemoryLong@MH 00AC  
                       SetMemoryLong@ML 00AD                       ?_Local_CloseUSART 0001  
             __end_of_EEPROMinitialized 946A                 BluetoothInitialSetup@ok 015A  
                   __size_of_InitTimer0 0010                     __size_of_InitTimer1 000E  
                   __size_of_InitTimer2 000E                     __size_of_InitTimer3 000A  
                       ??i1_cleanBuffer 0005                              ??_IsLetter 0079  
                   __size_of_InitTimers 0014                               ?_high_isr 0001  
                    __end_ofi1_UARTchar 9400                     _GetStringAfterComma 7836  
                    ??_Local_CloseUSART 0079             __size_of_SyncGlobalToEEPROM 0046  
                            ??_InitUART 00D2                             _ResetTimer0 953E  
                           _ResetTimer1 952A                             _ResetTimer3 955C  
   __size_of_StringMatchCaseInsensitive 0094                            ??_UARTstring 007C  
                               SendRF@i 0080                           ?_UseBluetooth 0200  
                               _InitADC 9416                                 _InitApp 9036  
                        UseBluetooth@ok 0289                             low_isr@data 001A  
           __end_of_BluetoothConfigured 93B8                 UseBluetooth@tempRFArray 028A  
                            ??_ResetADC 0079                          InitUART@config 0105  
                     __end_of__npowers_ EEB0                                 __Hparam 0000  
                            _scale$3801 00A5                         ?_ReadPushButton 0001  
                       __size_of_InitIR 0048                                 __Lparam 0000  
                  __end_of_SendNEC_wait 8648                 __size_of_SendRF_Channel 0258  
                       __size_of_SendRF 00F0                            SendRF@Config 007B  
             __end_of_VoltageDividerOFF 957A                       i1cleanBuffer@data 0001  
                        ??_Reverse_Byte 0079                         __size_of___ftge 00CE  
                               ___awdiv 7C54                         __size_of___lmul 007A  
                               ___ftadd 5B1E                                 ___awmod 81AE  
                               ___ftdiv 6FB8                                 ___ftneg 9258  
                               ___lldiv 7EBA                     __end_of_StringMatch 8AF0  
                  ?_GetStringAfterComma 0079                         __size_of___wmul 0038  
                               ___ftmul 6E4C                                 ___llmod 83C2  
                               ___ftsub 8F58                                 ___fttol 710A  
                         _SetMemoryChar 917E                            ?_IsCharacter 0001  
                         _SetMemoryLong 7A6A                        ?_WaitForIRsignal 0001  
                            ??___altoft 0085                                 __pcinit 7F80  
                               _delayUS 8EAE                              ??___ftpack 007E  
                       __size_of_fround 02D8                                 __ramtop 1000  
                            ??___lltoft 0085                                 __ptext0 549E  
                               __ptext1 5D9C                                 __ptext2 6002  
                               __ptext3 949E                                 __ptext4 8F04  
                               __ptext5 01F6                                 __ptext6 907C  
                               __ptext7 86DC                                 __ptext8 8AF0  
                               __ptext9 7718                              ??___lwtoft 0084  
                             _T0CONbits 000FD5                    __size_ofi1_ReadUSART 0016  
                     __end_of_hexpowers EEF7                               _T1CONbits 000FCD  
                           ?__div_to_l_ 0079                       SetMemoryChar@Data 0085  
                               _dpowers EE61                            ??_IRrawToNEC 0020  
                             _T2CONbits 000FCA                      __end_of_UARTstring 8E00  
                     SetMemoryChar@Test 0084                                 _isdigit 9288  
                             _T3CONbits 000FB1                        ___awmod@dividend 0079  
             GetMemoryLong@AddressFirst 009D                                 _low_isr 0018  
                          DecodeNEC@Nec 007D                           SetEEPROM@Temp 0100  
                         SetEEPROM@fail 00B1                           SetEEPROM@burn 0188  
                         SetEEPROM@temp 00B5                                 _sprintf 2188  
                  __size_ofi2_ReadIRpin 000E                              ??_high_isr 0067  
                        __pintcode_body 3D4A                    end_of_initialization 803A  
                      SendNEC_wait@code 008E                           ??_cleanBuffer 007D  
                           _ProductName 0298                        ?_UARTcommandMenu 007C  
                       i1ReadUSART@data 0001                            ??_ClearUSART 007A  
                        ??_UseBluetooth 0203                               i1u1180_20 8E50  
                             i1u1340_20 8CAE                               i1u1180_27 8E46  
                             i1u1340_27 8CA4                               i1u1341_20 8CDA  
                             i1u1341_27 8CD0                                 int_func 3D4A  
                             i1u1179_20 8E24                               i1u1179_27 8E1A  
                      ?_ReadCodeButtons 0001             __size_ofi2_cleanBuffer16bit 0042  
                       ??_SendNEC_bytes 008E                               i2u2020_40 51E6  
                             i2u2022_40 5224                __size_of_lowercaseString 0044  
                             i2u2029_40 52F8                         ___lldiv@divisor 007D  
                 EraseScreen@characters 0002                      __end_of_SYNTAX_ERR F097  
                      _ReadEEPROM_1Byte 8BC0                         ___lldiv@counter 0085  
                    __end_of_IRrawToNEC 549E                  main@BluetoothStringPos 0295  
                             _RCSTAbits 000FAB                                 postdec1 000FE5  
                               postdec2 000FDD                   ??_GetStringAfterComma 007E  
                      _EnterCommandMode 7DF2                                 postinc0 000FEE  
                               postinc2 000FDE                          ?_SetMemoryChar 0083  
             __size_of_VoltageDividerON 0006                  __size_of_BlueConnected 000E  
                          ?_EraseScreen 0001                          ?_SetMemoryLong 009E  
                     ??i1_BlueConnected 0001                          __tdiv_to_l_@f1 0079  
                        __tdiv_to_l_@f2 007C                               _IRRawCode 0700  
                         ??__tdiv_to_l_ 007F                 ??_BluetoothInitialSetup 00DB  
                     SetMemoryLong@Data 009E                        _CheckReceivingIR 947C  
                     SetMemoryLong@Test 00A7                       GetMemoryLong@temp 0095  
                          ??_BufferCopy 0087                      __end_of_ClearUSART 94C8  
                             _IRaddress 01FF                  __size_of_GetMemoryChar 002A  
                             _TRISAbits 000F92                               _TRISBbits 000F93  
                    _SyncEEPROMToGlobal 6646                               _TRISCbits 000F94  
                        BufferCopy@from 0081                              main@IRtask 0293  
                __size_of_GetMemoryLong 0170                               _IRcodeBit 002D  
            __size_of_EEPROMinitialized 0014                  __size_of_EEPROM_UNLOCK 0016  
     StringContainsCaseInsensitive@That 007E       StringContainsCaseInsensitive@This 007C  
                             _IRcommand 003B             __end_of_ConfigureOscillator 957C  
                __size_of_Reverse_4Byte 0C7E               __size_of_SetEEPROMdefault 0128  
                             _RFcodeBit 0034                     ?_SyncEEPROMToGlobal 0001  
                 __end_ofi2_ResetTimer0 9552                               _GetEEPROM 6B4E  
                     main@Bluetoothtask 0294                    __end_ofi1_UARTstring 8E58  
                             _DecodeNEC 8314                             ___ftdiv@exp 0091  
            ReadEEPROM_1Byte@PEIEstatus 007C                               _IRtimeout 02CA  
                             _TXSTAbits 000FAC               __size_of_cleanBuffer16bit 005E  
                   UseBluetooth@tempNec 027E                             _StringMatch 8A78  
                   __size_of__div_to_l_ 0194                     UseBluetooth@timeout 0282  
    __end_of_StringMatchCaseInsensitive 86DC              _StringMatchCaseInsensitive 8648  
                   __end_of_cleanBuffer 8DA6                       _Timer1_Postscaler 0038  
                        _IRrepeatAmount 0030                      __end_of_BufferCopy 87F6  
                           ___ftmul@exp 009C                            ??_InitTimer0 0079  
                          ??_InitTimer1 0079                            ??_InitTimer2 0079  
                          ??_InitTimer3 0079                          __end_of_InitIR 8FF0  
                          ??_InitTimers 0079              __size_of_VoltageDividerOFF 0004  
                        __end_of_SendRF 7C54                     _Conf2_ChannelH_1_ON F00C  
                   _Conf2_ChannelH_2_ON F02C                     _Conf2_ChannelH_3_ON F04C  
                             _GetNumber 47F6                               _EncodeNEC 725C  
        GetStringAfterComma@CommaNumber 007B                          __end_of___ftge 7DF2  
                          ?_Init_System 0001                          __end_of___lmul 8A78  
               i2cleanBuffer16bit@count 001D                          _ReceivedString 0600  
                        __end_of___wmul 91F0                    ??_SyncEEPROMToGlobal 00A6  
                           _BAUDCONbits 000FB8                           __pidataCOMRAM 9566  
                      ??_StringAddEqual 008A                       __size_of_UARTchar 001E  
                          ?_ReadVoltage 00A2                          __end_of_fround 5B1E  
                      IRrawToNEC@Invert 001F                       ?i1_UARTstringCRLN 0004  
                   start_initialization 7F80                               _ReadUSART 93B8  
               __size_of_UARTstringCRLN 006A                       _Timer2_Postscaler 0039  
                             _ReadIRpin 94E4                   __end_of_InitBluetooth 8EAE  
                      UseBluetooth@temp 028E                     __end_of__tdiv_to_l_ 69BA  
                             _SetEEPROM 645A                           GetNumber@This 0085  
                    ??i1_UARTstringCRLN 0006                           _BlueConnected 94F2  
                         GetNumber@temp 0095                    __end_of_Reverse_Byte 81AE  
                    __end_of_InitTimer0 949E                      __end_of_InitTimer1 94E4  
                    __end_of_InitTimer2 94D6                      __end_of_InitTimer3 953E  
                    __end_of_InitTimers 9456                        ??_StringContains 007D  
                            ?_GetEEPROM 009E                               _OpenUSART 8982  
                     __size_of_IsLetter 001E                   __size_of_SendNEC_wait 009E  
                            ?_DecodeNEC 007D                         ___llmod@divisor 008A  
                     __size_of_InitUART 0116                         ___llmod@counter 008E  
                             _SetTimer0 9552                               _ResetBlue 9226  
                             _Sendcount 0037                                ??_InitIR 0081  
                        _SendRF_Channel 6002                 GetStringAfterComma@This 0079  
                          ?_SendRF_wait 0081                               _UseIRCode 5D9C  
                         _GetMemoryChar 930E                                ??_SendRF 007E  
                     _Timer3_Postscaler 003A               StringAddEqual@firstnumber 008D  
                       ??_SetMemoryChar 0084                           _GetMemoryLong 6CDC  
                     ?_InternalADC_Read 0082                         ??_SetMemoryLong 00A3  
                              ??___ftge 007F                       __size_of_ResetADC 000E  
                              ??___lmul 0081                           _EEPROM_UNLOCK 9400  
                              ??___wmul 008B      StringContainsCaseInsensitive@begin 0080  
                     ??_lowercaseString 007B                              ?_GetNumber 0085  
                    ??_InternalADC_Read 0084                              ?_EncodeNEC 007D  
                         _Reverse_4Byte 30CC      StringMatchCaseInsensitive@tempThat 0081  
    StringMatchCaseInsensitive@tempThis 0080                  __size_of_lowercaseChar 002C  
                           __pdataBANK0 00E6                             __pdataBANK2 0298  
                      __CFG_LPT1OSC$OFF 000000                                ??_fround 00A5  
                         sprintf@tmpval 010C                     UARTcommandMenu@Desc 007E  
                  GetNumber@CommaNumber 0087                WriteEEPROM_1Byte@address 0079  
                  __size_of_IsCharacter 0018                    __end_of_UseBluetooth 2188  
                     __size_of___altoft 00A2                              fround@prec 00AB  
                     __size_of___ftpack 0120               SetMemoryLong@AddressFirst 00A2  
                             Round@temp 00CA                        cleanBuffer@count 007B  
                     __size_of___lltoft 0080                             __pbssCOMRAM 0026  
                            ?_ReadUSART 0001          ?_StringContainsCaseInsensitive 007C  
                     __size_of___lwtoft 002C                              ?_ReadIRpin 0001  
        __end_of_Conf2_ChannelB_OFF_STR EF85                           __pcstackBANK0 0060  
                         __pcstackBANK1 0100                           __pcstackBANK2 0200  
                         __pcstackBANK3 0300                            _SendNEC_wait 85AA  
                            ?_SetEEPROM 0100                       _Conf2_ChannelB_ON EFCC  
                     _Conf2_ChannelD_ON EFEC                          ?_BlueConnected 0001  
                          _isdigit$3475 007A          __end_of_Conf2_ChannelD_OFF_STR EF98  
        StringMatchCaseInsensitive@That 007E          StringMatchCaseInsensitive@This 007C  
              GetNumber@tempCommaNumber 008F                 _Conf2_ChannelH_1_ON_STR EF36  
                          ?_ResetTimer0 0001                            ?_ResetTimer1 0001  
                          ?_ResetTimer3 0001                             _cleanBuffer 8D4C  
               _Conf2_ChannelH_2_ON_STR EF4A                        ??_ReadPushButton 0079  
                            ?_OpenUSART 0079                 _Conf2_ChannelH_3_ON_STR EF5E  
                     __size_of_high_isr 42EA                             sprintf@flag 011B  
                           sprintf@fval 0116                             sprintf@prec 010A  
                __end_of_SendRF_Channel 625A                                ?_InitADC 0001  
                              ?_InitApp 0001                              ?_SetTimer0 001B  
                            ?_ResetBlue 0001                          ?_GetMemoryChar 007D  
                        ?_GetMemoryLong 007D                 _Conf2_ChannelH_1_Status 0029  
                            ?_UseIRCode 00BA                 _Conf2_ChannelH_2_Status 002A  
                     __CFG_CCP2MX$PORTC 000000                 _Conf2_ChannelH_3_Status 002B  
                        ?_EEPROM_UNLOCK 0001                         SendRF_wait@Code 0081  
             __size_of_Local_CloseUSART 000E                               __pintcode 0008  
                         __pmediumconst EE60                          ?_Reverse_4Byte 0079  
                      _VoltageDividerON 9570                                ?___awdiv 007F  
                             __ptext100 957A                               __ptext102 9140  
                             __ptext111 90C0                               __ptext103 8C8A  
                             __ptext112 9548                               __ptext104 8E00  
                             __ptext113 951C                               __ptext105 942C  
                             __ptext114 9552                               __ptext106 950E  
                             __ptext115 955C                               __ptext107 93D0  
                             __ptext116 50A0                               __ptext108 9338  
                             __ptext109 93E8                                ?___ftadd 00AC  
                     SendRF_wait@Config 0083                             IRrawToNEC@i 0065  
                              ?___awmod 0079                                ?___ftdiv 0084  
                  cleanBuffer16bit@data 0079                                ?___ftneg 0079  
                       SendRF_wait@size 0084                                ?___lldiv 0079  
                              ?___ftmul 0093                                ?___llmod 0086  
                              ?___ftsub 00B8                               __npowers_ EE89  
                              ?___fttol 00B8                            UseIRCode@NEC 00BC  
                           __pintcodelo 0018                                ?_delayUS 0079  
                  __size_of_EraseScreen 0028                             __tdiv_to_l_ 6814  
                          ??__div_to_l_ 007F                       SendRF_wait@amount 0085  
                         IRrawToNEC@NEC 001D                       _WriteEEPROM_1Byte 8C26  
                              ?_isdigit 0001               __end_of_Conf2_ChannelB_ON EFDC  
             __end_of_Conf2_ChannelD_ON EFFC                           IRrawToNEC@Raw 001B  
                         UseBluetooth@i 0292                __end_of_ReadEEPROM_1Byte 8C26  
                              ?_low_isr 0001                      ?_WriteEEPROM_1Byte 0079  
                        __size_of_Round 0066                               _hexpowers EED7  
            __end_of_SyncGlobalToEEPROM 9036                   __size_ofi1_UARTstring 0058  
              __end_of_EnterCommandMode 7EBA                                ?_sprintf 00C7  
                        __size_of_scale 0504                           _lowercaseChar 92E2  
              UseBluetooth@rfchannelSTR 0273                        _SetEEPROMdefault 73AA  
                             delayUS@US 0079                   __end_ofi1_cleanBuffer 917E  
                       IsCharacter@data 0001                             ??_GetEEPROM 00A0  
                   ??_WriteEEPROM_1Byte 007C                             ??_DecodeNEC 0085  
                        ___wmul@product 008B                                _IOCBbits 000F7D  
                       i1_BlueConnected 950E                __end_of_CheckReceivingIR 948E  
                      _cleanBuffer16bit 8CEE                         ?_SendRF_Channel 0001  
                              _IPR1bits 000F9F                                _IPR2bits 000FA2  
                              _PIE1bits 000F9D                                _PIE2bits 000FA0  
                          cleanBuffer@i 0080                                _PIR1bits 000F9E  
                    __end_of__div_to_l_ 6B4E                                _PIR2bits 000FA1  
                              _RCONbits 000FD0                    i1UARTstringCRLN@data 0004  
                      __CFG_WDTPS$32768 000000                          UseIRCode@found 00C3  
                           ??_GetNumber 008A                             ??_EncodeNEC 0081  
                        DecodeNEC@temp1 008B                          DecodeNEC@temp2 0089  
                        DecodeNEC@temp3 008A                                _RFConfig 0033  
                              _UARTchar 937E            ??_StringMatchCaseInsensitive 0080  
                         ??i1_ReadUSART 0001            __size_of_BluetoothConfigured 001C  
              BluetoothInitialSetup@buf 0128               ReadEEPROM_1Byte@GIEstatus 007B  
             __end_of_WriteEEPROM_1Byte 8C8A                              _ADCON0bits 000FC2  
                            _ADCON1bits 000FC1                              _ADCON2bits 000FC0  
                     ___wmul@multiplier 0087                            i1_UARTstring 8E00  
                  __size_of_Init_System 0086                                _IRpinOLD 002E  
        __size_of_BluetoothInitialSetup 0424                     ReadCodeButtons@temp 0082  
         __end_of_BluetoothInitialSetup 50A0                   __size_of_Reverse_Byte 00B6  
                        _UARTstringCRLN 8AF0                         ??_BlueConnected 0079  
                           ??_ReadUSART 0079                           ??i2_ReadIRpin 001B  
                  __size_of_ReadVoltage 00B8                             ??_ReadIRpin 0079  
              __size_of_WaitForIRsignal 0090                         StringAddEqual@i 008E  
                       StringAddEqual@j 008F                             ??_SetEEPROM 00AF  
                        ?_lowercaseChar 0079                       ___lmul@multiplier 0079  
                           _INTCON2bits 000FF1                                _IsLetter 9360  
                             copy_data0 7FFC                               copy_data1 802E  
            __end_ofi2_cleanBuffer16bit 9102                           _CommandString 0500  
                              _InitUART 7954                         UseBluetooth@buf 020F  
                       UseBluetooth@set 027D                             ??_OpenUSART 007B  
                          GetNumber@Hex 0092                         IRrawToNEC@first 0064  
                       ??_GetMemoryChar 0081                         OpenUSART@config 007B  
                       ??_GetMemoryLong 0081                      SendNEC_wait@toggle 0093  
                           ??_SetTimer0 001D             __end_of_GetStringAfterComma 7954  
                            _EECON1bits 000FA6                            ?_StringMatch 0079  
                           ??_ResetBlue 0082                        __size_of_InitADC 0016  
                       ??_EEPROM_UNLOCK 0079                                _ResetADC 9500  
                 __end_of_SendNEC_bytes 887C                        __size_of_InitApp 0046  
                              __Hrparam 0000                             ??_UseIRCode 00C0  
                       ??_Reverse_4Byte 007D                                __Lrparam 0000  
                        i1cleanBuffer@i 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_UARTcommandMenu 011E                    __size_of_SendRF_wait 003E  
                 __size_of_UseBluetooth 1F92                __size_of_ReadCodeButtons 0054  
                          _Reverse_Byte 80F8               InternalADC_Read@ADCcounts 0082  
                    i1cleanBuffer@count 0003                       Reverse_4Byte@This 0079  
                         GetEEPROM@Temp 009E                        __size_of___awdiv 00D0  
                      __size_of___ftadd 027E                        __size_of___awmod 00B4  
                      __size_of___ftdiv 0152                         cleanBuffer@data 0079  
                      __size_of___ftneg 0030                        __size_of___lldiv 00C6  
                              ___altoft 8508                        __size_of___ftmul 016C  
                      __size_of___llmod 00A4                        __size_of___ftsub 0050  
                      __size_of___fttol 0152                       Reverse_4Byte@temp 0085  
                              ___ftpack 75F8              InternalADC_Read@AnaChanSel 0086  
                           _fround$3800 00A5                             _fround$3799 00A8  
                              ___lltoft 8902                  __end_of_UARTstringCRLN 8B5A  
                      __size_of_delayUS 0056           __end_of_Conf2_ChannelB_ON_STR EFAA  
                              ___lwtoft 92B6           __end_of_Conf2_ChannelD_ON_STR EFBC  
                     main@VoltageStatus 0296                              sprintf@idx 0103  
                            sprintf@len 0106                              sprintf@exp 0110  
                            sprintf@val 0112                  UseBluetooth@NecAddress 028C  
                   __end_ofi1_ReadUSART 9442                        __size_of_isdigit 002E  
                UseBluetooth@NecCommand 028D                        __size_of_low_isr 01DA  
                              __ptext10 8648                                __ptext11 8A78  
                              __ptext20 87F6                                __ptext12 74D2  
                              __ptext21 30CC                                __ptext13 625A  
                              __ptext30 47F6                                __ptext22 947C  
                              __ptext14 876C                                __ptext31 92E2  
                              __ptext23 8040                                __ptext15 9102  
                              __ptext40 73AA                                __ptext32 89FE  
                              __ptext24 92B6                                __ptext16 7B64  
                              __ptext41 7954                                __ptext33 9360  
                              __ptext25 6FB8                                __ptext17 946A  
                              __ptext50 94C8                                __ptext42 8B5A  
                              __ptext34 725C                                __ptext26 9570  
                              __ptext18 952A                                __ptext51 94D6  
                              __ptext43 8508                                __ptext35 8314  
                              __ptext27 9576                                __ptext19 85AA  
                              __ptext60 42F2                                __ptext52 8FA8  
                              __ptext44 8982                                __ptext36 80F8  
                              __ptext28 8466                                __ptext61 9288  
                              __ptext53 8CEE                                __ptext45 94AC  
                              __ptext37 887C                                __ptext29 7836  
                              __ptext70 83C2                                __ptext62 5846  
                              __ptext54 953E                                __ptext46 94BA  
                              __ptext38 6646                                __ptext71 7EBA  
                              __ptext63 91B8                                __ptext55 94E4  
                              __ptext47 93B8                                __ptext39 6B4E  
                              __ptext80 8DA6                                __ptext72 710A  
                              __ptext64 6E4C                                __ptext56 948E  
                              __ptext48 9442                                __ptext81 937E  
                              __ptext73 8F58                                __ptext65 81AE  
                              __ptext57 8E58                                __ptext49 9534  
                              __ptext90 6CDC                                __ptext82 8262  
                              __ptext74 5B1E                                __ptext66 7C54  
                              __ptext58 4C7C                                __ptext91 917E  
                              __ptext83 9226                                __ptext75 75F8  
                              __ptext67 6814                                __ptext59 2188  
                              __ptext92 8C26                                __ptext84 8EAE  
                              __ptext76 9258                                __ptext68 69BA  
                              __ptext93 9400                                __ptext85 94F2  
                              __ptext77 7D24                                __ptext69 8902  
                     SendNEC_bytes@code 0089                                __ptext94 930E  
                              __ptext86 939C                                __ptext78 7DF2  
                              __ptext95 8BC0                                __ptext87 8FF0  
                              __ptext79 8D4C                                __ptext96 9416  
                              __ptext88 645A                                __ptext97 9500  
                              __ptext89 7A6A                 __end_ofi1_BlueConnected 951C  
                              __ptext98 9456                                __ptext99 9036  
                              __powers_ EEB0                                _high_isr 0008  
            __end_of_Conf1_ChannelD_STR F06B              __end_of_Conf1_ChannelE_STR F07A  
            __end_of_Conf1_ChannelF_STR F089                        __size_of_sprintf 0F44  
                   __end_ofi2_ReadIRpin 952A                         _lowercaseString 907C  
                            GetEEPROM@i 00A4                              GetEEPROM@j 00A5  
                            GetEEPROM@k 00A3                           __size_of_main 03A8  
                 SendRF_Channel@channel 0086                            _UseBluetooth 01F6  
                              delayUS@i 007E                    __size_of_ResetTimer0 000A  
                  __size_of_ResetTimer1 000A                    __size_of_ResetTimer3 000A  
             __size_ofi1_UARTstringCRLN 0064               GetMemoryChar@AddressFirst 0081  
          __size_of_ConfigureOscillator 0002                  UseBluetooth@EnteredNEC 0285  
                      _Local_CloseUSART 94AC                         GetMemoryLong@MH 009A  
                       GetMemoryLong@ML 009B                  UseBluetooth@EmptyPlace 0283  
                          BufferCopy@to 0083             __size_of_SyncEEPROMToGlobal 01CE  
            __size_of_WriteEEPROM_1Byte 0064                              _LEDTimerON 946A  
                       ?_UARTstringCRLN 007C                  __size_ofi2_ResetTimer0 000A  
                            _INTCONbits 000FF2               __size_of_InternalADC_Read 00A2  
                        OpenUSART@spbrg 0079                         ??_lowercaseChar 007B  
                          UARTchar@data 0079                         StringMatch@That 007B  
                       StringMatch@This 0079                                isdigit@c 007B  
                              scale@scl 00A8                      GetEEPROM@Arrayspot 00A2  
                    SetEEPROM@Arrayspot 00B6                        EncodeNEC@address 00A5  
              __end_of_VoltageDividerON 9576                     i2cleanBuffer16bit@i 0022  
          __end_of_Conf2_ChannelH_1_OFF F00C            __end_of_Conf2_ChannelH_2_OFF F02C  
          __end_of_Conf2_ChannelH_3_OFF F04C                                intlevel1 0000  
                              intlevel2 0000                              _PCBVersion F0C4  
                             sprintf@ap 0108                               sprintf@cp 0104  
                      __tdiv_to_l_@exp1 0087                               sprintf@sp 00C7  
                      __tdiv_to_l_@cntr 0086                            ?_cleanBuffer 0079  
    GetStringAfterComma@tempCommaNumber 007F                        __tdiv_to_l_@quot 0082  
                     ??_WaitForIRsignal 0082                        EncodeNEC@command 007D  
                      ___lldiv@dividend 0079                            IsLetter@data 0079  
       ??_StringContainsCaseInsensitive 0080                          _BatteryVoltage 00DB  
                        GetMemoryChar@H 0082                             _IR_New_Code 00E5  
                            i1_UARTchar 93E8                          GetMemoryLong@H 0099  
                        GetMemoryLong@L 009C                  __size_of_InitBluetooth 0056  
                           BufferCopy@i 0087                   __end_of_SetMemoryChar 91B8  
                 __end_of_SetMemoryLong 7B64          BluetoothInitialSetup@RFchannel 011E  
                         ??_IsCharacter 0001                           _InitUART$3798 0100  
              __end_of_SetEEPROMdefault 74D2                          _Conf1_ChannelD F097  
                        _Conf1_ChannelE F0A3                          _Conf1_ChannelF F0AF  
                            GetNumber@i 0093                          _Conf1_Channels F0C9  
                           i1_ReadUSART 942C                        DecodeNEC@address 0081  
                          ?__tdiv_to_l_ 0079                        UARTcommandMenu@i 0085  
                UARTcommandMenu@Command 007C                       ??_UARTcommandMenu 0080  
           __end_of_Conf2_ChannelH_1_ON F01C             __end_of_Conf2_ChannelH_2_ON F03C  
           __end_of_Conf2_ChannelH_3_ON F05C                          _Conf2_Channels F0CD  
                              sprintf@c 011D                __end_of_cleanBuffer16bit 8D4C  
                              sprintf@f 00C9                        DecodeNEC@command 0083  
                     ??_ReadCodeButtons 0082                        ___lldiv@quotient 0081  
                           i2_ReadIRpin 951C                       ?_ReadEEPROM_1Byte 0079  
                          EraseScreen@i 0003                 __end_of_lowercaseString 90C0  
                      ?i1_BlueConnected 0001                 __size_of_StringAddEqual 0200  
                        i1UARTchar@data 0001                        ??_SendRF_Channel 0086  
                    ??_ReadEEPROM_1Byte 007B                       ?_EnterCommandMode 0001  
            __end_of_Conf2_ChannelB_OFF EFCC              __end_of_Conf2_ChannelD_OFF EFEC  
                   _BluetoothConfigured 939C                      ??_EnterCommandMode 0082  
                            _UARTstring 8DA6                           i2_ResetTimer0 9548  
                     ?_CheckReceivingIR 0001               GetStringAfterComma@result 007C  
                    _SyncGlobalToEEPROM 8FF0                      ??_CheckReceivingIR 0079  
                       BufferCopy@count 0085                    __size_of_StringMatch 0078  
