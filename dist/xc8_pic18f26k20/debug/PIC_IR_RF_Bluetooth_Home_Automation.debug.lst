

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Apr 04 02:12:59 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    92                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    93  0000                     
    94                           	psect	idataBANK0
    95  003920                     __pidataBANK0:
    96                           	opt stack 0
    97                           
    98                           ;initializer for _SN
    99  003920  0001               	dw	1
   100  003922  0000               	dw	0
   101                           
   102                           ;initializer for _Sent
   103  003924  01                 	db	1
   104                           
   105                           ;initializer for _ChannelF
   106  003925  03                 	db	3
   107  003926  00                 	db	0
   108  003927  03                 	db	3
   109  003928  03                 	db	3
   110  003929  03                 	db	3
   111  00392A  03                 	db	3
   112  00392B  00                 	db	0
   113  00392C  00                 	db	0
   114  00392D  01                 	db	1
   115  00392E  00                 	db	0
   116  00392F  00                 	db	0
   117  003930  00                 	db	0
   118                           
   119                           	psect	idataBANK1
   120  003772                     __pidataBANK1:
   121                           	opt stack 0
   122                           
   123                           ;initializer for _ProductName
   124  003772  48                 	db	72
   125  003773  6F                 	db	111
   126  003774  6D                 	db	109
   127  003775  65                 	db	101
   128  003776  20                 	db	32
   129  003777  41                 	db	65
   130  003778  75                 	db	117
   131  003779  74                 	db	116
   132  00377A  6F                 	db	111
   133  00377B  6D                 	db	109
   134  00377C  61                 	db	97
   135  00377D  74                 	db	116
   136  00377E  69                 	db	105
   137  00377F  6F                 	db	111
   138  003780  6E                 	db	110
   139  003781  00                 	db	0
   140  003782  00                 	db	0
   141  003783  00                 	db	0
   142  003784  00                 	db	0
   143  003785  00                 	db	0
   144  003786  00                 	db	0
   145  003787  00                 	db	0
   146  003788  00                 	db	0
   147  003789  00                 	db	0
   148  00378A  00                 	db	0
   149  00378B  00                 	db	0
   150  00378C  00                 	db	0
   151  00378D  00                 	db	0
   152  00378E  00                 	db	0
   153  00378F  00                 	db	0
   154  003790  00                 	db	0
   155  003791  00                 	db	0
   156  003792  00                 	db	0
   157  003793  00                 	db	0
   158  003794  00                 	db	0
   159  003795  00                 	db	0
   160  003796  00                 	db	0
   161  003797  00                 	db	0
   162  003798  00                 	db	0
   163  003799  00                 	db	0
   164  00379A  00                 	db	0
   165  00379B  00                 	db	0
   166  00379C  00                 	db	0
   167  00379D  00                 	db	0
   168  00379E  00                 	db	0
   169  00379F  00                 	db	0
   170  0037A0  00                 	db	0
   171  0037A1  00                 	db	0
   172  0037A2  00                 	db	0
   173  0037A3  00                 	db	0
   174                           
   175                           	psect	smallconst
   176  001000                     __psmallconst:
   177                           	opt stack 0
   178  001000  00                 	db	0
   179  001001                     _dpowers:
   180                           	opt stack 0
   181  001001  0001               	dw	1
   182  001003  0000               	dw	0
   183  001005  000A               	dw	10
   184  001007  0000               	dw	0
   185  001009  0064               	dw	100
   186  00100B  0000               	dw	0
   187  00100D  03E8               	dw	1000
   188  00100F  0000               	dw	0
   189  001011  2710               	dw	10000
   190  001013  0000               	dw	0
   191  001015  86A0               	dw	34464
   192  001017  0001               	dw	1
   193  001019  4240               	dw	16960
   194  00101B  000F               	dw	15
   195  00101D  9680               	dw	38528
   196  00101F  0098               	dw	152
   197  001021  E100               	dw	57600
   198  001023  05F5               	dw	1525
   199  001025  CA00               	dw	51712
   200  001027  3B9A               	dw	15258
   201  001029                     __end_of_dpowers:
   202                           	opt stack 0
   203  001029                     _Version:
   204                           	opt stack 0
   205  001029  31                 	db	49
   206  00102A  2E                 	db	46
   207  00102B  30                 	db	48
   208  00102C  5F                 	db	95
   209  00102D  44                 	db	68
   210  00102E  57                 	db	87
   211  00102F  30                 	db	48
   212  001030  61                 	db	97
   213  001031  00                 	db	0
   214  001032                     __end_of_Version:
   215                           	opt stack 0
   216  0000                     _ANSEL	set	3966
   217  0000                     _ANSELH	set	3967
   218  0000                     _IOCBbits	set	3965
   219  0000                     _LATA	set	3977
   220  0000                     _LATB	set	3978
   221  0000                     _LATC	set	3979
   222  0000                     _PORTA	set	3968
   223  0000                     _PORTB	set	3969
   224  0000                     _PORTC	set	3970
   225  0000                     _TRISAbits	set	3986
   226  0000                     _TRISBbits	set	3987
   227  0000                     _TRISCbits	set	3988
   228  0000                     _WPUB	set	3964
   229  0000                     _ADCON0	set	4034
   230  0000                     _ADCON0bits	set	4034
   231  0000                     _ADCON1	set	4033
   232  0000                     _ADCON1bits	set	4033
   233  0000                     _ADCON2	set	4032
   234  0000                     _ADCON2bits	set	4032
   235  0000                     _ADRESH	set	4036
   236  0000                     _ADRESL	set	4035
   237  0000                     _BAUDCONbits	set	4024
   238  0000                     _EEADR	set	4009
   239  0000                     _EEADRH	set	4010
   240  0000                     _EECON1bits	set	4006
   241  0000                     _EECON2	set	4007
   242  0000                     _EEDATA	set	4008
   243  0000                     _IPR1bits	set	3999
   244  0000                     _IPR2bits	set	4002
   245  0000                     _PIE1bits	set	3997
   246  0000                     _PIE2bits	set	4000
   247  0000                     _PIR1bits	set	3998
   248  0000                     _PIR2bits	set	4001
   249  0000                     _PR2	set	4043
   250  0000                     _RCONbits	set	4048
   251  0000                     _RCREG	set	4014
   252  0000                     _RCSTA	set	4011
   253  0000                     _RCSTAbits	set	4011
   254  0000                     _SPBRG	set	4015
   255  0000                     _SPBRGH	set	4016
   256  0000                     _T1CONbits	set	4045
   257  0000                     _T2CONbits	set	4042
   258  0000                     _T3CONbits	set	4017
   259  0000                     _TMR1H	set	4047
   260  0000                     _TMR1L	set	4046
   261  0000                     _TMR2	set	4044
   262  0000                     _TMR3H	set	4019
   263  0000                     _TMR3L	set	4018
   264  0000                     _TXREG	set	4013
   265  0000                     _TXSTA	set	4012
   266  0000                     _TXSTAbits	set	4012
   267  0000                     _T0CONbits	set	4053
   268  0000                     _TMR0H	set	4055
   269  0000                     _TMR0L	set	4054
   270  0000                     _INTCON2bits	set	4081
   271  0000                     _INTCONbits	set	4082
   272  001032                     STR_14:
   273  001032  42                 	db	66	;'B'
   274  001033  54                 	db	84	;'T'
   275  001034  4E                 	db	78	;'N'
   276  001035  61                 	db	97	;'a'
   277  001036  6D                 	db	109	;'m'
   278  001037  65                 	db	101	;'e'
   279  001038  3D                 	db	61	;'='
   280  001039  48                 	db	72	;'H'
   281  00103A  6F                 	db	111	;'o'
   282  00103B  6D                 	db	109	;'m'
   283  00103C  65                 	db	101	;'e'
   284  00103D  20                 	db	32
   285  00103E  41                 	db	65	;'A'
   286  00103F  75                 	db	117	;'u'
   287  001040  74                 	db	116	;'t'
   288  001041  6F                 	db	111	;'o'
   289  001042  6D                 	db	109	;'m'
   290  001043  61                 	db	97	;'a'
   291  001044  74                 	db	116	;'t'
   292  001045  69                 	db	105	;'i'
   293  001046  6F                 	db	111	;'o'
   294  001047  6E                 	db	110	;'n'
   295  001048  20                 	db	32
   296  001049  25                 	db	37
   297  00104A  6C                 	db	108	;'l'
   298  00104B  64                 	db	100	;'d'
   299  00104C  0D                 	db	13
   300  00104D  00                 	db	0
   301  00104E                     STR_3:
   302  00104E  53                 	db	83	;'S'
   303  00104F  4E                 	db	78	;'N'
   304  001050  2C                 	db	44
   305  001051  48                 	db	72	;'H'
   306  001052  6F                 	db	111	;'o'
   307  001053  6D                 	db	109	;'m'
   308  001054  65                 	db	101	;'e'
   309  001055  20                 	db	32
   310  001056  41                 	db	65	;'A'
   311  001057  75                 	db	117	;'u'
   312  001058  74                 	db	116	;'t'
   313  001059  6F                 	db	111	;'o'
   314  00105A  6D                 	db	109	;'m'
   315  00105B  61                 	db	97	;'a'
   316  00105C  74                 	db	116	;'t'
   317  00105D  69                 	db	105	;'i'
   318  00105E  6F                 	db	111	;'o'
   319  00105F  6E                 	db	110	;'n'
   320  001060  20                 	db	32
   321  001061  25                 	db	37
   322  001062  6C                 	db	108	;'l'
   323  001063  64                 	db	100	;'d'
   324  001064  0D                 	db	13
   325  001065  00                 	db	0
   326  001066                     STR_5:
   327  001066  53                 	db	83	;'S'
   328  001067  53                 	db	83	;'S'
   329  001068  2C                 	db	44
   330  001069  20                 	db	32
   331  00106A  48                 	db	72	;'H'
   332  00106B  6F                 	db	111	;'o'
   333  00106C  6D                 	db	109	;'m'
   334  00106D  65                 	db	101	;'e'
   335  00106E  20                 	db	32
   336  00106F  41                 	db	65	;'A'
   337  001070  75                 	db	117	;'u'
   338  001071  74                 	db	116	;'t'
   339  001072  6F                 	db	111	;'o'
   340  001073  6D                 	db	109	;'m'
   341  001074  61                 	db	97	;'a'
   342  001075  74                 	db	116	;'t'
   343  001076  69                 	db	105	;'i'
   344  001077  6F                 	db	111	;'o'
   345  001078  6E                 	db	110	;'n'
   346  001079  0D                 	db	13
   347  00107A  00                 	db	0
   348  00107B                     STR_7:
   349  00107B  53                 	db	83	;'S'
   350  00107C  59                 	db	89	;'Y'
   351  00107D  2C                 	db	44
   352  00107E  30                 	db	48	;'0'
   353  00107F  30                 	db	48	;'0'
   354  001080  31                 	db	49	;'1'
   355  001081  30                 	db	48	;'0'
   356  001082  0D                 	db	13
   357  001083  00                 	db	0
   358  001084                     STR_9:
   359  001084  53                 	db	83	;'S'
   360  001085  7E                 	db	126
   361  001086  2C                 	db	44
   362  001087  30                 	db	48	;'0'
   363  001088  0D                 	db	13
   364  001089  00                 	db	0
   365  00108A                     STR_15:
   366  00108A  2D                 	db	45
   367  00108B  2D                 	db	45
   368  00108C  2D                 	db	45
   369  00108D  0D                 	db	13
   370  00108E  00                 	db	0
   371  00108F                     STR_13:
   372  00108F  44                 	db	68	;'D'
   373  001090  2C                 	db	44
   374  001091  30                 	db	48	;'0'
   375  001092  0D                 	db	13
   376  001093  00                 	db	0
   377  001094                     STR_1:
   378  001094  24                 	db	36
   379  001095  24                 	db	36
   380  001096  24                 	db	36
   381  001097  00                 	db	0
   382  001098                     STR_2:
   383  001098  43                 	db	67	;'C'
   384  001099  4D                 	db	77	;'M'
   385  00109A  44                 	db	68	;'D'
   386  00109B  00                 	db	0
   387  00109C                     STR_16:
   388  00109C  45                 	db	69	;'E'
   389  00109D  4E                 	db	78	;'N'
   390  00109E  44                 	db	68	;'D'
   391  00109F  00                 	db	0
   392  0010A0                     STR_4:
   393  0010A0  41                 	db	65	;'A'
   394  0010A1  4F                 	db	79	;'O'
   395  0010A2  4B                 	db	75	;'K'
   396  0010A3  00                 	db	0
   397  0000                     
   398                           ; #config settings
   399  0010A4  00                 	db	0	; dummy byte at the end
   400  0000                     
   401                           	psect	cinit
   402  003116                     __pcinit:
   403                           	opt stack 0
   404  003116                     start_initialization:
   405                           	opt stack 0
   406  003116                     __initialization:
   407                           	opt stack 0
   408                           
   409                           ; Clear objects allocated to BANK3 (255 bytes)
   410  003116  EE03  F000         	lfsr	0,__pbssBANK3
   411  00311A  EE10 F0FF          	lfsr	1,255
   412  00311E                     clear_0:
   413  00311E  6AEE               	clrf	postinc0,c
   414  003120  50E5               	movf	postdec1,w,c
   415  003122  50E1               	movf	fsr1l,w,c
   416  003124  E1FC               	bnz	clear_0
   417  003126  50E2               	movf	fsr1h,w,c
   418  003128  E1FA               	bnz	clear_0
   419                           
   420                           ; Clear objects allocated to BANK2 (255 bytes)
   421  00312A  EE02  F000         	lfsr	0,__pbssBANK2
   422  00312E  EE10 F0FF          	lfsr	1,255
   423  003132                     clear_1:
   424  003132  6AEE               	clrf	postinc0,c
   425  003134  50E5               	movf	postdec1,w,c
   426  003136  50E1               	movf	fsr1l,w,c
   427  003138  E1FC               	bnz	clear_1
   428  00313A  50E2               	movf	fsr1h,w,c
   429  00313C  E1FA               	bnz	clear_1
   430                           
   431                           ; Clear objects allocated to BANK1 (144 bytes)
   432  00313E  EE01  F000         	lfsr	0,__pbssBANK1
   433  003142  0E90               	movlw	144
   434  003144                     clear_2:
   435  003144  6AEE               	clrf	postinc0,c
   436  003146  06E8               	decf	wreg,f,c
   437  003148  E1FD               	bnz	clear_2
   438                           
   439                           ; Clear objects allocated to BANK0 (13 bytes)
   440  00314A  EE00  F0E1         	lfsr	0,__pbssBANK0
   441  00314E  0E0D               	movlw	13
   442  003150                     clear_3:
   443  003150  6AEE               	clrf	postinc0,c
   444  003152  06E8               	decf	wreg,f,c
   445  003154  E1FD               	bnz	clear_3
   446                           
   447                           ; Clear objects allocated to COMRAM (32 bytes)
   448  003156  EE00  F025         	lfsr	0,__pbssCOMRAM
   449  00315A  0E20               	movlw	32
   450  00315C                     clear_4:
   451  00315C  6AEE               	clrf	postinc0,c
   452  00315E  06E8               	decf	wreg,f,c
   453  003160  E1FD               	bnz	clear_4
   454                           
   455                           ; Initialize objects allocated to BANK1 (50 bytes)
   456                           ; load TBLPTR registers with __pidataBANK1
   457  003162  0E72               	movlw	low __pidataBANK1
   458  003164  6EF6               	movwf	tblptrl,c
   459  003166  0E37               	movlw	high __pidataBANK1
   460  003168  6EF7               	movwf	tblptrh,c
   461  00316A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   462  00316C  6EF8               	movwf	tblptru,c
   463  00316E  EE01  F090         	lfsr	0,__pdataBANK1
   464  003172  EE10 F032          	lfsr	1,50
   465  003176                     copy_data0:
   466  003176  0009               	tblrd		*+
   467  003178  CFF5 FFEE          	movff	tablat,postinc0
   468  00317C  50E5               	movf	postdec1,w,c
   469  00317E  50E1               	movf	fsr1l,w,c
   470  003180  E1FA               	bnz	copy_data0
   471                           
   472                           ; Initialize objects allocated to BANK0 (17 bytes)
   473                           ; load TBLPTR registers with __pidataBANK0
   474  003182  0E20               	movlw	low __pidataBANK0
   475  003184  6EF6               	movwf	tblptrl,c
   476  003186  0E39               	movlw	high __pidataBANK0
   477  003188  6EF7               	movwf	tblptrh,c
   478  00318A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   479  00318C  6EF8               	movwf	tblptru,c
   480  00318E  EE00  F0D0         	lfsr	0,__pdataBANK0
   481  003192  EE10 F011          	lfsr	1,17
   482  003196                     copy_data1:
   483  003196  0009               	tblrd		*+
   484  003198  CFF5 FFEE          	movff	tablat,postinc0
   485  00319C  50E5               	movf	postdec1,w,c
   486  00319E  50E1               	movf	fsr1l,w,c
   487  0031A0  E1FA               	bnz	copy_data1
   488  0031A2                     end_of_initialization:
   489                           	opt stack 0
   490  0031A2                     __end_of__initialization:
   491                           	opt stack 0
   492  0031A2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   493  0031A4  6EF8               	movwf	tblptru,c
   494  0031A6  0100               	movlb	0
   495  0031A8  EFF6  F014         	goto	_main	;jump to C main() function
   496                           tblptru	equ	0xFF8
   497                           tblptrh	equ	0xFF7
   498                           tblptrl	equ	0xFF6
   499                           tablat	equ	0xFF5
   500                           postinc0	equ	0xFEE
   501                           wreg	equ	0xFE8
   502                           postdec1	equ	0xFE5
   503                           fsr1h	equ	0xFE2
   504                           fsr1l	equ	0xFE1
   505                           
   506                           	psect	bssCOMRAM
   507  000025                     __pbssCOMRAM:
   508                           	opt stack 0
   509  000025                     _RFsendCode:
   510                           	opt stack 0
   511  000025                     	ds	20
   512  000039                     _CommandStringPos:
   513                           	opt stack 0
   514  000039                     	ds	1
   515  00003A                     _IRpinOLD:
   516                           	opt stack 0
   517  00003A                     	ds	1
   518  00003B                     _IRrawCodeNum:
   519                           	opt stack 0
   520  00003B                     	ds	1
   521  00003C                     _NewReceivedString:
   522                           	opt stack 0
   523  00003C                     	ds	1
   524  00003D                     _RFcodeBit:
   525                           	opt stack 0
   526  00003D                     	ds	1
   527  00003E                     _RFcodePlace:
   528                           	opt stack 0
   529  00003E                     	ds	1
   530  00003F                     _RFsendFlag:
   531                           	opt stack 0
   532  00003F                     	ds	1
   533  000040                     _ReceivedStringPos:
   534                           	opt stack 0
   535  000040                     	ds	1
   536  000041                     _Sendcount:
   537                           	opt stack 0
   538  000041                     	ds	1
   539  000042                     _Timer1_Postscaler:
   540                           	opt stack 0
   541  000042                     	ds	1
   542  000043                     _Timer2_Postscaler:
   543                           	opt stack 0
   544  000043                     	ds	1
   545  000044                     _Timer3_Postscaler:
   546                           	opt stack 0
   547  000044                     	ds	1
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1h	equ	0xFE2
   556                           fsr1l	equ	0xFE1
   557                           
   558                           	psect	bssBANK0
   559  0000E1                     __pbssBANK0:
   560                           	opt stack 0
   561  0000E1                     _Global:
   562                           	opt stack 0
   563  0000E1                     	ds	5
   564  0000E6                     _BatteryVoltage:
   565                           	opt stack 0
   566  0000E6                     	ds	3
   567  0000E9                     _IR_NEC:
   568                           	opt stack 0
   569  0000E9                     	ds	4
   570  0000ED                     _IR_New_Code:
   571                           	opt stack 0
   572  0000ED                     	ds	1
   573                           tblptru	equ	0xFF8
   574                           tblptrh	equ	0xFF7
   575                           tblptrl	equ	0xFF6
   576                           tablat	equ	0xFF5
   577                           postinc0	equ	0xFEE
   578                           wreg	equ	0xFE8
   579                           postdec1	equ	0xFE5
   580                           fsr1h	equ	0xFE2
   581                           fsr1l	equ	0xFE1
   582                           
   583                           	psect	dataBANK0
   584  0000D0                     __pdataBANK0:
   585                           	opt stack 0
   586  0000D0                     _SN:
   587                           	opt stack 0
   588  0000D0                     	ds	4
   589  0000D4                     _Sent:
   590                           	opt stack 0
   591  0000D4                     	ds	1
   592  0000D5                     _ChannelF:
   593                           	opt stack 0
   594  0000D5                     	ds	12
   595                           tblptru	equ	0xFF8
   596                           tblptrh	equ	0xFF7
   597                           tblptrl	equ	0xFF6
   598                           tablat	equ	0xFF5
   599                           postinc0	equ	0xFEE
   600                           wreg	equ	0xFE8
   601                           postdec1	equ	0xFE5
   602                           fsr1h	equ	0xFE2
   603                           fsr1l	equ	0xFE1
   604                           
   605                           	psect	bssBANK1
   606  000100                     __pbssBANK1:
   607                           	opt stack 0
   608  000100                     _IRRawCode:
   609                           	opt stack 0
   610  000100                     	ds	144
   611                           tblptru	equ	0xFF8
   612                           tblptrh	equ	0xFF7
   613                           tblptrl	equ	0xFF6
   614                           tablat	equ	0xFF5
   615                           postinc0	equ	0xFEE
   616                           wreg	equ	0xFE8
   617                           postdec1	equ	0xFE5
   618                           fsr1h	equ	0xFE2
   619                           fsr1l	equ	0xFE1
   620                           
   621                           	psect	dataBANK1
   622  000190                     __pdataBANK1:
   623                           	opt stack 0
   624  000190                     _ProductName:
   625                           	opt stack 0
   626  000190                     	ds	50
   627                           tblptru	equ	0xFF8
   628                           tblptrh	equ	0xFF7
   629                           tblptrl	equ	0xFF6
   630                           tablat	equ	0xFF5
   631                           postinc0	equ	0xFEE
   632                           wreg	equ	0xFE8
   633                           postdec1	equ	0xFE5
   634                           fsr1h	equ	0xFE2
   635                           fsr1l	equ	0xFE1
   636                           
   637                           	psect	bssBANK2
   638  000200                     __pbssBANK2:
   639                           	opt stack 0
   640  000200                     _CommandString:
   641                           	opt stack 0
   642  000200                     	ds	255
   643                           tblptru	equ	0xFF8
   644                           tblptrh	equ	0xFF7
   645                           tblptrl	equ	0xFF6
   646                           tablat	equ	0xFF5
   647                           postinc0	equ	0xFEE
   648                           wreg	equ	0xFE8
   649                           postdec1	equ	0xFE5
   650                           fsr1h	equ	0xFE2
   651                           fsr1l	equ	0xFE1
   652                           
   653                           	psect	bssBANK3
   654  000300                     __pbssBANK3:
   655                           	opt stack 0
   656  000300                     _ReceivedString:
   657                           	opt stack 0
   658  000300                     	ds	255
   659                           tblptru	equ	0xFF8
   660                           tblptrh	equ	0xFF7
   661                           tblptrl	equ	0xFF6
   662                           tablat	equ	0xFF5
   663                           postinc0	equ	0xFEE
   664                           wreg	equ	0xFE8
   665                           postdec1	equ	0xFE5
   666                           fsr1h	equ	0xFE2
   667                           fsr1l	equ	0xFE1
   668                           
   669                           	psect	cstackBANK0
   670  000060                     __pcstackBANK0:
   671                           	opt stack 0
   672  000060                     ??_high_isr:
   673                           
   674                           ; 0 bytes @ 0x0
   675  000060                     	ds	18
   676  000072                     ?_ReadEEPROM_1Byte:
   677                           	opt stack 0
   678  000072                     ?___ftpack:
   679                           	opt stack 0
   680  000072                     ?___lldiv:
   681                           	opt stack 0
   682  000072                     UARTchar@data:
   683                           	opt stack 0
   684  000072                     cleanBuffer@data:
   685                           	opt stack 0
   686  000072                     cleanBuffer16bit@data:
   687                           	opt stack 0
   688  000072                     StringContains@This:
   689                           	opt stack 0
   690  000072                     OpenUSART@spbrg:
   691                           	opt stack 0
   692  000072                     ReadEEPROM_1Byte@address:
   693                           	opt stack 0
   694  000072                     WriteEEPROM_1Byte@address:
   695                           	opt stack 0
   696  000072                     SendRF@Code:
   697                           	opt stack 0
   698  000072                     ___ftpack@arg:
   699                           	opt stack 0
   700  000072                     ___ftge@ff1:
   701                           	opt stack 0
   702  000072                     delayUS@US:
   703                           	opt stack 0
   704  000072                     ___lldiv@dividend:
   705                           	opt stack 0
   706                           
   707                           ; 4 bytes @ 0x12
   708  000072                     	ds	1
   709  000073                     UARTstring@data:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x13
   713  000073                     	ds	1
   714  000074                     OpenUSART@config:
   715                           	opt stack 0
   716  000074                     ReadEEPROM_1Byte@GIEstatus:
   717                           	opt stack 0
   718  000074                     WriteEEPROM_1Byte@data:
   719                           	opt stack 0
   720  000074                     SendRF@size:
   721                           	opt stack 0
   722  000074                     cleanBuffer@count:
   723                           	opt stack 0
   724  000074                     cleanBuffer16bit@count:
   725                           	opt stack 0
   726  000074                     StringContains@That:
   727                           	opt stack 0
   728                           
   729                           ; 2 bytes @ 0x14
   730  000074                     	ds	1
   731  000075                     ?_GetMemoryChar:
   732                           	opt stack 0
   733  000075                     ?_GetMemoryLong:
   734                           	opt stack 0
   735  000075                     WriteEEPROM_1Byte@GIEstatus:
   736                           	opt stack 0
   737  000075                     SendRF@RepeatAmount:
   738                           	opt stack 0
   739  000075                     ___ftpack@exp:
   740                           	opt stack 0
   741  000075                     ___ftge@ff2:
   742                           	opt stack 0
   743                           
   744                           ; 3 bytes @ 0x15
   745  000075                     	ds	1
   746  000076                     ??_delayUS:
   747  000076                     ??_cleanBuffer:
   748  000076                     ??_cleanBuffer16bit:
   749  000076                     ??_StringContains:
   750  000076                     SendRF@i:
   751                           	opt stack 0
   752  000076                     ___ftpack@sign:
   753                           	opt stack 0
   754  000076                     ___lldiv@divisor:
   755                           	opt stack 0
   756                           
   757                           ; 4 bytes @ 0x16
   758  000076                     	ds	1
   759  000077                     ??___ftpack:
   760  000077                     SendRF_wait@Code:
   761                           	opt stack 0
   762  000077                     delayUS@i:
   763                           	opt stack 0
   764                           
   765                           ; 4 bytes @ 0x17
   766  000077                     	ds	1
   767  000078                     ??___ftge:
   768                           
   769                           ; 0 bytes @ 0x18
   770  000078                     	ds	1
   771  000079                     ??_GetMemoryLong:
   772  000079                     cleanBuffer@i:
   773                           	opt stack 0
   774  000079                     cleanBuffer16bit@i:
   775                           	opt stack 0
   776  000079                     GetMemoryChar@AddressFirst:
   777                           	opt stack 0
   778  000079                     SendRF_wait@size:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x19
   782  000079                     	ds	1
   783  00007A                     ?___ftadd:
   784                           	opt stack 0
   785  00007A                     ?___altoft:
   786                           	opt stack 0
   787  00007A                     ?___lltoft:
   788                           	opt stack 0
   789  00007A                     ?___lwtoft:
   790                           	opt stack 0
   791  00007A                     GetMemoryChar@H:
   792                           	opt stack 0
   793  00007A                     SendRF_wait@amount:
   794                           	opt stack 0
   795  00007A                     ___lwtoft@c:
   796                           	opt stack 0
   797  00007A                     ___ftadd@f1:
   798                           	opt stack 0
   799  00007A                     ___altoft@c:
   800                           	opt stack 0
   801  00007A                     ___lldiv@quotient:
   802                           	opt stack 0
   803  00007A                     ___lltoft@c:
   804                           	opt stack 0
   805                           
   806                           ; 4 bytes @ 0x1A
   807  00007A                     	ds	1
   808  00007B                     delayUS@j:
   809                           	opt stack 0
   810  00007B                     SetMemoryChar@AddressFirst:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0x1B
   814  00007B                     	ds	1
   815  00007C                     SetMemoryChar@Test:
   816                           	opt stack 0
   817  00007C                     EnterCommandMode@count:
   818                           	opt stack 0
   819  00007C                     InternalADC_Read@ADCcounts:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0x1C
   823  00007C                     	ds	1
   824  00007D                     ?___ftdiv:
   825                           	opt stack 0
   826  00007D                     SetMemoryChar@Data:
   827                           	opt stack 0
   828  00007D                     ___ftadd@f2:
   829                           	opt stack 0
   830  00007D                     ___ftdiv@f1:
   831                           	opt stack 0
   832                           
   833                           ; 3 bytes @ 0x1D
   834  00007D                     	ds	1
   835  00007E                     ??_InternalADC_Read:
   836  00007E                     ??___altoft:
   837  00007E                     ??___lltoft:
   838  00007E                     ___lldiv@counter:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0x1E
   842  00007E                     	ds	1
   843  00007F                     ?___llmod:
   844                           	opt stack 0
   845  00007F                     ___llmod@dividend:
   846                           	opt stack 0
   847                           
   848                           ; 4 bytes @ 0x1F
   849  00007F                     	ds	1
   850  000080                     ??___ftadd:
   851  000080                     InternalADC_Read@AnaChanSel:
   852                           	opt stack 0
   853  000080                     ___ftdiv@f2:
   854                           	opt stack 0
   855                           
   856                           ; 3 bytes @ 0x20
   857  000080                     	ds	1
   858  000081                     InternalADC_Read@channel:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0x21
   862  000081                     	ds	1
   863  000082                     ___altoft@exp:
   864                           	opt stack 0
   865  000082                     ___lltoft@exp:
   866                           	opt stack 0
   867                           
   868                           ; 1 bytes @ 0x22
   869  000082                     	ds	1
   870  000083                     ??___ftdiv:
   871  000083                     ___altoft@sign:
   872                           	opt stack 0
   873  000083                     ___ftadd@sign:
   874                           	opt stack 0
   875  000083                     ___llmod@divisor:
   876                           	opt stack 0
   877                           
   878                           ; 4 bytes @ 0x23
   879  000083                     	ds	1
   880  000084                     ___ftadd@exp2:
   881                           	opt stack 0
   882                           
   883                           ; 1 bytes @ 0x24
   884  000084                     	ds	1
   885  000085                     ___ftadd@exp1:
   886                           	opt stack 0
   887                           
   888                           ; 1 bytes @ 0x25
   889  000085                     	ds	1
   890  000086                     ?___fttol:
   891                           	opt stack 0
   892  000086                     ___ftdiv@cntr:
   893                           	opt stack 0
   894  000086                     ___fttol@f1:
   895                           	opt stack 0
   896                           
   897                           ; 3 bytes @ 0x26
   898  000086                     	ds	1
   899  000087                     ___llmod@counter:
   900                           	opt stack 0
   901  000087                     ___ftdiv@f3:
   902                           	opt stack 0
   903                           
   904                           ; 3 bytes @ 0x27
   905  000087                     	ds	1
   906  000088                     ?_sprintf:
   907                           	opt stack 0
   908  000088                     sprintf@sp:
   909                           	opt stack 0
   910                           
   911                           ; 2 bytes @ 0x28
   912  000088                     	ds	2
   913  00008A                     ??___fttol:
   914  00008A                     ___ftdiv@exp:
   915                           	opt stack 0
   916  00008A                     sprintf@f:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0x2A
   920  00008A                     	ds	1
   921  00008B                     ___ftdiv@sign:
   922                           	opt stack 0
   923                           
   924                           ; 1 bytes @ 0x2B
   925  00008B                     	ds	1
   926  00008C                     ?___ftmul:
   927                           	opt stack 0
   928  00008C                     ___ftmul@f1:
   929                           	opt stack 0
   930                           
   931                           ; 3 bytes @ 0x2C
   932  00008C                     	ds	1
   933  00008D                     GetMemoryLong@temp:
   934                           	opt stack 0
   935                           
   936                           ; 4 bytes @ 0x2D
   937  00008D                     	ds	2
   938  00008F                     ___fttol@sign1:
   939                           	opt stack 0
   940  00008F                     ___ftmul@f2:
   941                           	opt stack 0
   942                           
   943                           ; 3 bytes @ 0x2F
   944  00008F                     	ds	1
   945  000090                     ??_sprintf:
   946  000090                     ___fttol@lval:
   947                           	opt stack 0
   948                           
   949                           ; 4 bytes @ 0x30
   950  000090                     	ds	1
   951  000091                     GetMemoryLong@H:
   952                           	opt stack 0
   953                           
   954                           ; 1 bytes @ 0x31
   955  000091                     	ds	1
   956  000092                     ??___ftmul:
   957  000092                     GetMemoryLong@MH:
   958                           	opt stack 0
   959  000092                     sprintf@prec:
   960                           	opt stack 0
   961                           
   962                           ; 2 bytes @ 0x32
   963  000092                     	ds	1
   964  000093                     GetMemoryLong@ML:
   965                           	opt stack 0
   966                           
   967                           ; 1 bytes @ 0x33
   968  000093                     	ds	1
   969  000094                     GetMemoryLong@L:
   970                           	opt stack 0
   971  000094                     ___fttol@exp1:
   972                           	opt stack 0
   973  000094                     sprintf@ap:
   974                           	opt stack 0
   975                           
   976                           ; 2 bytes @ 0x34
   977  000094                     	ds	1
   978  000095                     ?_Round:
   979                           	opt stack 0
   980  000095                     GetMemoryLong@AddressFirst:
   981                           	opt stack 0
   982  000095                     ___ftmul@exp:
   983                           	opt stack 0
   984  000095                     Round@input:
   985                           	opt stack 0
   986                           
   987                           ; 3 bytes @ 0x35
   988  000095                     	ds	1
   989  000096                     ?_GetEEPROM:
   990                           	opt stack 0
   991  000096                     sprintf@flag:
   992                           	opt stack 0
   993  000096                     ___ftmul@f3_as_product:
   994                           	opt stack 0
   995  000096                     SetMemoryLong@Data:
   996                           	opt stack 0
   997                           
   998                           ; 4 bytes @ 0x36
   999  000096                     	ds	1
  1000  000097                     sprintf@val:
  1001                           	opt stack 0
  1002                           
  1003                           ; 4 bytes @ 0x37
  1004  000097                     	ds	1
  1005  000098                     Round@temp:
  1006                           	opt stack 0
  1007                           
  1008                           ; 4 bytes @ 0x38
  1009  000098                     	ds	1
  1010  000099                     ___ftmul@cntr:
  1011                           	opt stack 0
  1012                           
  1013                           ; 1 bytes @ 0x39
  1014  000099                     	ds	1
  1015  00009A                     SetMemoryLong@AddressFirst:
  1016                           	opt stack 0
  1017  00009A                     ___ftmul@sign:
  1018                           	opt stack 0
  1019                           
  1020                           ; 1 bytes @ 0x3A
  1021  00009A                     	ds	1
  1022  00009B                     ??_SetMemoryLong:
  1023  00009B                     ?_ReadVoltage:
  1024                           	opt stack 0
  1025  00009B                     sprintf@c:
  1026                           	opt stack 0
  1027  00009B                     GetEEPROM@Temp:
  1028                           	opt stack 0
  1029                           
  1030                           ; 5 bytes @ 0x3B
  1031  00009B                     	ds	1
  1032  00009C                     InitUART@Baud:
  1033                           	opt stack 0
  1034  00009C                     BluetoothInitialSetup@buf:
  1035                           	opt stack 0
  1036                           
  1037                           ; 50 bytes @ 0x3C
  1038  00009C                     	ds	2
  1039  00009E                     ReadVoltage@voltage:
  1040                           	opt stack 0
  1041                           
  1042                           ; 3 bytes @ 0x3E
  1043  00009E                     	ds	1
  1044  00009F                     SetMemoryLong@Test:
  1045                           	opt stack 0
  1046                           
  1047                           ; 4 bytes @ 0x3F
  1048  00009F                     	ds	1
  1049  0000A0                     ??_InitUART:
  1050  0000A0                     SyncEEPROMToGlobal@Temp:
  1051                           	opt stack 0
  1052                           
  1053                           ; 5 bytes @ 0x40
  1054  0000A0                     	ds	1
  1055  0000A1                     ReadVoltage@temp:
  1056                           	opt stack 0
  1057                           
  1058                           ; 2 bytes @ 0x41
  1059  0000A1                     	ds	2
  1060  0000A3                     SetMemoryLong@H:
  1061                           	opt stack 0
  1062                           
  1063                           ; 1 bytes @ 0x43
  1064  0000A3                     	ds	1
  1065  0000A4                     SetMemoryLong@MH:
  1066                           	opt stack 0
  1067  0000A4                     _InitUART$2764:
  1068                           	opt stack 0
  1069                           
  1070                           ; 3 bytes @ 0x44
  1071  0000A4                     	ds	1
  1072  0000A5                     SetMemoryLong@ML:
  1073                           	opt stack 0
  1074                           
  1075                           ; 1 bytes @ 0x45
  1076  0000A5                     	ds	1
  1077  0000A6                     SetMemoryLong@L:
  1078                           	opt stack 0
  1079                           
  1080                           ; 1 bytes @ 0x46
  1081  0000A6                     	ds	1
  1082  0000A7                     ?_SetEEPROM:
  1083                           	opt stack 0
  1084  0000A7                     InitUART@spbrg:
  1085                           	opt stack 0
  1086  0000A7                     SetEEPROM@Temp:
  1087                           	opt stack 0
  1088                           
  1089                           ; 5 bytes @ 0x47
  1090  0000A7                     	ds	2
  1091  0000A9                     InitUART@config:
  1092                           	opt stack 0
  1093                           
  1094                           ; 1 bytes @ 0x49
  1095  0000A9                     	ds	1
  1096  0000AA                     InitUART@temp:
  1097                           	opt stack 0
  1098                           
  1099                           ; 4 bytes @ 0x4A
  1100  0000AA                     	ds	2
  1101  0000AC                     SetEEPROM@burn:
  1102                           	opt stack 0
  1103                           
  1104                           ; 4 bytes @ 0x4C
  1105  0000AC                     	ds	4
  1106  0000B0                     SetEEPROM@fail:
  1107                           	opt stack 0
  1108                           
  1109                           ; 4 bytes @ 0x50
  1110  0000B0                     	ds	4
  1111  0000B4                     UseIRCode@Code:
  1112                           	opt stack 0
  1113                           
  1114                           ; 2 bytes @ 0x54
  1115  0000B4                     	ds	2
  1116  0000B6                     UseIRCode@NEC:
  1117                           	opt stack 0
  1118                           
  1119                           ; 4 bytes @ 0x56
  1120  0000B6                     	ds	4
  1121  0000BA                     
  1122                           ; 0 bytes @ 0x5A
  1123  0000BA                     	ds	1
  1124  0000BB                     UseIRCode@i:
  1125                           	opt stack 0
  1126                           
  1127                           ; 1 bytes @ 0x5B
  1128  0000BB                     	ds	19
  1129  0000CE                     BluetoothInitialSetup@ok:
  1130                           	opt stack 0
  1131                           
  1132                           ; 1 bytes @ 0x6E
  1133  0000CE                     	ds	1
  1134  0000CF                     main@i:
  1135                           	opt stack 0
  1136                           
  1137                           ; 1 bytes @ 0x6F
  1138  0000CF                     	ds	1
  1139                           tblptru	equ	0xFF8
  1140                           tblptrh	equ	0xFF7
  1141                           tblptrl	equ	0xFF6
  1142                           tablat	equ	0xFF5
  1143                           postinc0	equ	0xFEE
  1144                           wreg	equ	0xFE8
  1145                           postdec1	equ	0xFE5
  1146                           fsr1h	equ	0xFE2
  1147                           fsr1l	equ	0xFE1
  1148                           
  1149                           	psect	cstackCOMRAM
  1150  000001                     __pcstackCOMRAM:
  1151                           	opt stack 0
  1152  000001                     IsCharacter@data:
  1153                           	opt stack 0
  1154  000001                     ReadUSART@data:
  1155                           	opt stack 0
  1156                           
  1157                           ; 1 bytes @ 0x0
  1158  000001                     	ds	1
  1159  000002                     ??_low_isr:
  1160                           
  1161                           ; 0 bytes @ 0x1
  1162  000002                     	ds	17
  1163  000013                     low_isr@data:
  1164                           	opt stack 0
  1165                           
  1166                           ; 1 bytes @ 0x12
  1167  000013                     	ds	1
  1168  000014                     IRrawToNEC@Raw:
  1169                           	opt stack 0
  1170                           
  1171                           ; 2 bytes @ 0x13
  1172  000014                     	ds	2
  1173  000016                     IRrawToNEC@NEC:
  1174                           	opt stack 0
  1175                           
  1176                           ; 2 bytes @ 0x15
  1177  000016                     	ds	2
  1178  000018                     IRrawToNEC@Invert:
  1179                           	opt stack 0
  1180                           
  1181                           ; 1 bytes @ 0x17
  1182  000018                     	ds	1
  1183  000019                     ??_IRrawToNEC:
  1184                           
  1185                           ; 0 bytes @ 0x18
  1186  000019                     	ds	2
  1187  00001B                     IRrawToNEC@NECtemp:
  1188                           	opt stack 0
  1189                           
  1190                           ; 4 bytes @ 0x1A
  1191  00001B                     	ds	4
  1192  00001F                     IRrawToNEC@first:
  1193                           	opt stack 0
  1194                           
  1195                           ; 1 bytes @ 0x1E
  1196  00001F                     	ds	1
  1197  000020                     IRrawToNEC@i:
  1198                           	opt stack 0
  1199                           
  1200                           ; 1 bytes @ 0x1F
  1201  000020                     	ds	1
  1202  000021                     IRrawToNEC@StartBit:
  1203                           	opt stack 0
  1204                           
  1205                           ; 1 bytes @ 0x20
  1206  000021                     	ds	1
  1207  000022                     high_isr@IRpin:
  1208                           	opt stack 0
  1209                           
  1210                           ; 1 bytes @ 0x21
  1211  000022                     	ds	1
  1212  000023                     high_isr@Time0:
  1213                           	opt stack 0
  1214                           
  1215                           ; 2 bytes @ 0x22
  1216  000023                     	ds	2
  1217                           tblptru	equ	0xFF8
  1218                           tblptrh	equ	0xFF7
  1219                           tblptrl	equ	0xFF6
  1220                           tablat	equ	0xFF5
  1221                           postinc0	equ	0xFEE
  1222                           wreg	equ	0xFE8
  1223                           postdec1	equ	0xFE5
  1224                           fsr1h	equ	0xFE2
  1225                           fsr1l	equ	0xFE1
  1226                           
  1227 ;;
  1228 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1229 ;;
  1230 ;; *************** function _main *****************
  1231 ;; Defined at:
  1232 ;;		line 64 in file "main.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;		None
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;  i               1  111[BANK0 ] unsigned char 
  1237 ;; Return value:  Size  Location     Type
  1238 ;;		None               void
  1239 ;; Registers used:
  1240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1249 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1250 ;;Total ram usage:        1 bytes
  1251 ;; Hardware stack levels required when called:   12
  1252 ;; This function calls:
  1253 ;;		_ConfigureOscillator
  1254 ;;		_InitApp
  1255 ;;		_Init_System
  1256 ;;		_ReadVoltage
  1257 ;;		_UseIRCode
  1258 ;;		___ftge
  1259 ;;		_delayUS
  1260 ;; This function is called by:
  1261 ;;		Startup code after reset
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text0
  1266  0029EC                     __ptext0:
  1267                           	opt stack 0
  1268  0029EC                     _main:
  1269                           	opt stack 19
  1270                           
  1271                           ;main.c: 66: unsigned char i=0;
  1272                           
  1273                           ;incstack = 0
  1274  0029EC  0E00               	movlw	0
  1275  0029EE  0100               	movlb	0	; () banked
  1276  0029F0  6FCF               	movwf	main@i& (0+255),b
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;main.c: 68: ConfigureOscillator();
  1280  0029F2  EC04  F01D         	call	_ConfigureOscillator	;wreg free
  1281                           
  1282                           ;main.c: 69: InitApp();
  1283  0029F6  EC9D  F01B         	call	_InitApp	;wreg free
  1284                           
  1285                           ;main.c: 70: Init_System();
  1286  0029FA  EC89  F01A         	call	_Init_System	;wreg free
  1287                           
  1288                           ;main.c: 73: for(i =0;i<10;i++)
  1289  0029FE  0E00               	movlw	0
  1290  002A00  0100               	movlb	0	; () banked
  1291  002A02  6FCF               	movwf	main@i& (0+255),b
  1292  002A04                     l4692:
  1293                           
  1294                           ; BSR set to: 0
  1295  002A04  0E09               	movlw	9
  1296  002A06  0100               	movlb	0	; () banked
  1297  002A08  65CF               	cpfsgt	main@i& (0+255),b
  1298  002A0A  D001               	goto	l4696
  1299                           
  1300                           ; BSR set to: 0
  1301  002A0C  D01D               	goto	l4708
  1302  002A0E                     l4696:
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;main.c: 74: {
  1306                           ;main.c: 75: (LATC |= 0x02);
  1307  002A0E  828B               	bsf	3979,1,c	;volatile
  1308                           
  1309                           ;main.c: 76: (LATC &= ~0x04);
  1310  002A10  948B               	bcf	3979,2,c	;volatile
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;main.c: 77: delayUS(10000);
  1314  002A12  0E10               	movlw	16
  1315  002A14  0100               	movlb	0	; () banked
  1316  002A16  6F72               	movwf	delayUS@US& (0+255),b
  1317  002A18  0E27               	movlw	39
  1318  002A1A  6F73               	movwf	(delayUS@US+1)& (0+255),b
  1319  002A1C  0E00               	movlw	0
  1320  002A1E  6F74               	movwf	(delayUS@US+2)& (0+255),b
  1321  002A20  0E00               	movlw	0
  1322  002A22  6F75               	movwf	(delayUS@US+3)& (0+255),b
  1323  002A24  EC97  F019         	call	_delayUS	;wreg free
  1324                           
  1325                           ;main.c: 78: (LATC &= ~0x02);
  1326  002A28  928B               	bcf	3979,1,c	;volatile
  1327                           
  1328                           ;main.c: 79: (LATC |= 0x04);
  1329  002A2A  848B               	bsf	3979,2,c	;volatile
  1330                           
  1331                           ;main.c: 80: delayUS(10000);
  1332  002A2C  0E10               	movlw	16
  1333  002A2E  0100               	movlb	0	; () banked
  1334  002A30  6F72               	movwf	delayUS@US& (0+255),b
  1335  002A32  0E27               	movlw	39
  1336  002A34  6F73               	movwf	(delayUS@US+1)& (0+255),b
  1337  002A36  0E00               	movlw	0
  1338  002A38  6F74               	movwf	(delayUS@US+2)& (0+255),b
  1339  002A3A  0E00               	movlw	0
  1340  002A3C  6F75               	movwf	(delayUS@US+3)& (0+255),b
  1341  002A3E  EC97  F019         	call	_delayUS	;wreg free
  1342  002A42  0100               	movlb	0	; () banked
  1343  002A44  2BCF               	incf	main@i& (0+255),f,b
  1344  002A46  D7DE               	goto	l4692
  1345  002A48                     l4708:
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;main.c: 81: }
  1349                           ;main.c: 82: (LATC &= ~0x04);
  1350  002A48  948B               	bcf	3979,2,c	;volatile
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;main.c: 84: BatteryVoltage = ReadVoltage();
  1354  002A4A  EC9C  F016         	call	_ReadVoltage	;wreg free
  1355  002A4E  C09B  F0E6         	movff	?_ReadVoltage,_BatteryVoltage
  1356  002A52  C09C  F0E7         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  1357  002A56  C09D  F0E8         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  1358                           
  1359                           ;main.c: 85: if(BatteryVoltage < 3.7 )
  1360  002A5A  C0E6  F072         	movff	_BatteryVoltage,___ftge@ff1
  1361  002A5E  C0E7  F073         	movff	_BatteryVoltage+1,___ftge@ff1+1
  1362  002A62  C0E8  F074         	movff	_BatteryVoltage+2,___ftge@ff1+2
  1363  002A66  0ECD               	movlw	205
  1364  002A68  0100               	movlb	0	; () banked
  1365  002A6A  6F75               	movwf	___ftge@ff2& (0+255),b
  1366  002A6C  0E6C               	movlw	108
  1367  002A6E  0100               	movlb	0	; () banked
  1368  002A70  6F76               	movwf	(___ftge@ff2+1)& (0+255),b
  1369  002A72  0E40               	movlw	64
  1370  002A74  0100               	movlb	0	; () banked
  1371  002A76  6F77               	movwf	(___ftge@ff2+2)& (0+255),b
  1372  002A78  EC6E  F015         	call	___ftge	;wreg free
  1373  002A7C  0100               	movlb	0	; () banked
  1374  002A7E  A0D8               	btfss	status,0,c
  1375  002A80  D014               	goto	l4718
  1376                           
  1377                           ;main.c: 89: else if (BatteryVoltage > 30.0)
  1378                           
  1379                           ;main.c: 88: }
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;main.c: 86: {
  1383                           ;main.c: 87: __nop();
  1384  002A82  0E00               	movlw	0
  1385  002A84  0100               	movlb	0	; () banked
  1386  002A86  6F72               	movwf	___ftge@ff1& (0+255),b
  1387  002A88  0EF0               	movlw	240
  1388  002A8A  0100               	movlb	0	; () banked
  1389  002A8C  6F73               	movwf	(___ftge@ff1+1)& (0+255),b
  1390  002A8E  0E41               	movlw	65
  1391  002A90  0100               	movlb	0	; () banked
  1392  002A92  6F74               	movwf	(___ftge@ff1+2)& (0+255),b
  1393  002A94  C0E6  F075         	movff	_BatteryVoltage,___ftge@ff2
  1394  002A98  C0E7  F076         	movff	_BatteryVoltage+1,___ftge@ff2+1
  1395  002A9C  C0E8  F077         	movff	_BatteryVoltage+2,___ftge@ff2+2
  1396  002AA0  EC6E  F015         	call	___ftge	;wreg free
  1397  002AA4  0100               	movlb	0	; () banked
  1398  002AA6  B0D8               	btfsc	status,0,c
  1399  002AA8  D002               	goto	l4720
  1400  002AAA                     l4718:
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;main.c: 90: {
  1404                           ;main.c: 91: __nop();
  1405  002AAA  F000               	nop	
  1406  002AAC  D000               	goto	l4720
  1407  002AAE                     l4720:
  1408                           
  1409                           ;main.c: 95: {
  1410                           ;main.c: 96: if(IR_New_Code)
  1411  002AAE  0100               	movlb	0	; () banked
  1412  002AB0  51ED               	movf	_IR_New_Code& (0+255),w,b
  1413  002AB2  B4D8               	btfsc	status,2,c
  1414  002AB4  D7FC               	goto	l4720
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;main.c: 97: {
  1418                           ;main.c: 98: UseIRCode(&IR_New_Code, IR_NEC);
  1419  002AB6  0EED               	movlw	low _IR_New_Code
  1420  002AB8  0100               	movlb	0	; () banked
  1421  002ABA  6FB4               	movwf	UseIRCode@Code& (0+255),b
  1422  002ABC  0E00               	movlw	high _IR_New_Code
  1423  002ABE  0100               	movlb	0	; () banked
  1424  002AC0  6FB5               	movwf	(UseIRCode@Code+1)& (0+255),b
  1425  002AC2  C0E9  F0B6         	movff	_IR_NEC,UseIRCode@NEC
  1426  002AC6  C0EA  F0B7         	movff	_IR_NEC+1,UseIRCode@NEC+1
  1427  002ACA  C0EB  F0B8         	movff	_IR_NEC+2,UseIRCode@NEC+2
  1428  002ACE  C0EC  F0B9         	movff	_IR_NEC+3,UseIRCode@NEC+3
  1429  002AD2  ECE0  F00F         	call	_UseIRCode	;wreg free
  1430  002AD6  D7EB               	goto	l4720
  1431  002AD8  EFA5  F000         	goto	start
  1432  002ADC                     __end_of_main:
  1433                           	opt stack 0
  1434                           tblptru	equ	0xFF8
  1435                           tblptrh	equ	0xFF7
  1436                           tblptrl	equ	0xFF6
  1437                           tablat	equ	0xFF5
  1438                           postinc0	equ	0xFEE
  1439                           wreg	equ	0xFE8
  1440                           postdec1	equ	0xFE5
  1441                           fsr1h	equ	0xFE2
  1442                           fsr1l	equ	0xFE1
  1443                           status	equ	0xFD8
  1444                           
  1445 ;; *************** function ___ftge *****************
  1446 ;; Defined at:
  1447 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  ff1             3   18[BANK0 ] float 
  1450 ;;  ff2             3   21[BANK0 ] float 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;		None               void
  1455 ;; Registers used:
  1456 ;;		wreg, status,2, status,0
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1462 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;Total ram usage:        9 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; Hardware stack levels required when called:    4
  1469 ;; This function calls:
  1470 ;;		Nothing
  1471 ;; This function is called by:
  1472 ;;		_main
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	text1
  1477  002ADC                     __ptext1:
  1478                           	opt stack 0
  1479  002ADC                     ___ftge:
  1480                           	opt stack 26
  1481                           
  1482                           ;incstack = 0
  1483  002ADC  0100               	movlb	0	; () banked
  1484  002ADE  AF74               	btfss	(___ftge@ff1+2)& (0+255),7,b
  1485  002AE0  D01E               	goto	l4646
  1486                           
  1487                           ; BSR set to: 0
  1488  002AE2  C072  F078         	movff	___ftge@ff1,??___ftge
  1489  002AE6  C073  F079         	movff	___ftge@ff1+1,??___ftge+1
  1490  002AEA  C074  F07A         	movff	___ftge@ff1+2,??___ftge+2
  1491  002AEE  0100               	movlb	0	; () banked
  1492  002AF0  1F78               	comf	??___ftge& (0+255),f,b
  1493  002AF2  1F79               	comf	(??___ftge+1)& (0+255),f,b
  1494  002AF4  1F7A               	comf	(??___ftge+2)& (0+255),f,b
  1495  002AF6  2B78               	incf	??___ftge& (0+255),f,b
  1496  002AF8  0E00               	movlw	0
  1497  002AFA  2379               	addwfc	(??___ftge+1)& (0+255),f,b
  1498  002AFC  237A               	addwfc	(??___ftge+2)& (0+255),f,b
  1499  002AFE  0E00               	movlw	0
  1500  002B00  0100               	movlb	0	; () banked
  1501  002B02  2578               	addwf	??___ftge& (0+255),w,b
  1502  002B04  0100               	movlb	0	; () banked
  1503  002B06  6F72               	movwf	___ftge@ff1& (0+255),b
  1504  002B08  0E00               	movlw	0
  1505  002B0A  0100               	movlb	0	; () banked
  1506  002B0C  2179               	addwfc	(??___ftge+1)& (0+255),w,b
  1507  002B0E  0100               	movlb	0	; () banked
  1508  002B10  6F73               	movwf	(___ftge@ff1+1)& (0+255),b
  1509  002B12  0E80               	movlw	128
  1510  002B14  0100               	movlb	0	; () banked
  1511  002B16  217A               	addwfc	(??___ftge+2)& (0+255),w,b
  1512  002B18  0100               	movlb	0	; () banked
  1513  002B1A  6F74               	movwf	(___ftge@ff1+2)& (0+255),b
  1514  002B1C  D000               	goto	l4646
  1515  002B1E                     l4646:
  1516                           
  1517                           ; BSR set to: 0
  1518  002B1E  0100               	movlb	0	; () banked
  1519  002B20  AF77               	btfss	(___ftge@ff2+2)& (0+255),7,b
  1520  002B22  D01E               	goto	l4650
  1521                           
  1522                           ; BSR set to: 0
  1523  002B24  C075  F078         	movff	___ftge@ff2,??___ftge
  1524  002B28  C076  F079         	movff	___ftge@ff2+1,??___ftge+1
  1525  002B2C  C077  F07A         	movff	___ftge@ff2+2,??___ftge+2
  1526  002B30  0100               	movlb	0	; () banked
  1527  002B32  1F78               	comf	??___ftge& (0+255),f,b
  1528  002B34  1F79               	comf	(??___ftge+1)& (0+255),f,b
  1529  002B36  1F7A               	comf	(??___ftge+2)& (0+255),f,b
  1530  002B38  2B78               	incf	??___ftge& (0+255),f,b
  1531  002B3A  0E00               	movlw	0
  1532  002B3C  2379               	addwfc	(??___ftge+1)& (0+255),f,b
  1533  002B3E  237A               	addwfc	(??___ftge+2)& (0+255),f,b
  1534  002B40  0E00               	movlw	0
  1535  002B42  0100               	movlb	0	; () banked
  1536  002B44  2578               	addwf	??___ftge& (0+255),w,b
  1537  002B46  0100               	movlb	0	; () banked
  1538  002B48  6F75               	movwf	___ftge@ff2& (0+255),b
  1539  002B4A  0E00               	movlw	0
  1540  002B4C  0100               	movlb	0	; () banked
  1541  002B4E  2179               	addwfc	(??___ftge+1)& (0+255),w,b
  1542  002B50  0100               	movlb	0	; () banked
  1543  002B52  6F76               	movwf	(___ftge@ff2+1)& (0+255),b
  1544  002B54  0E80               	movlw	128
  1545  002B56  0100               	movlb	0	; () banked
  1546  002B58  217A               	addwfc	(??___ftge+2)& (0+255),w,b
  1547  002B5A  0100               	movlb	0	; () banked
  1548  002B5C  6F77               	movwf	(___ftge@ff2+2)& (0+255),b
  1549  002B5E  D000               	goto	l4650
  1550  002B60                     l4650:
  1551                           
  1552                           ; BSR set to: 0
  1553  002B60  0E00               	movlw	0
  1554  002B62  0100               	movlb	0	; () banked
  1555  002B64  1B72               	xorwf	___ftge@ff1& (0+255),f,b
  1556  002B66  0E00               	movlw	0
  1557  002B68  0100               	movlb	0	; () banked
  1558  002B6A  1B73               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  1559  002B6C  0E80               	movlw	128
  1560  002B6E  0100               	movlb	0	; () banked
  1561  002B70  1B74               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  1562                           
  1563                           ; BSR set to: 0
  1564  002B72  0E00               	movlw	0
  1565  002B74  0100               	movlb	0	; () banked
  1566  002B76  1B75               	xorwf	___ftge@ff2& (0+255),f,b
  1567  002B78  0E00               	movlw	0
  1568  002B7A  0100               	movlb	0	; () banked
  1569  002B7C  1B76               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  1570  002B7E  0E80               	movlw	128
  1571  002B80  0100               	movlb	0	; () banked
  1572  002B82  1B77               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  1573  002B84  0100               	movlb	0	; () banked
  1574  002B86  5175               	movf	___ftge@ff2& (0+255),w,b
  1575  002B88  0100               	movlb	0	; () banked
  1576  002B8A  5D72               	subwf	___ftge@ff1& (0+255),w,b
  1577  002B8C  0100               	movlb	0	; () banked
  1578  002B8E  5176               	movf	(___ftge@ff2+1)& (0+255),w,b
  1579  002B90  0100               	movlb	0	; () banked
  1580  002B92  5973               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  1581  002B94  0100               	movlb	0	; () banked
  1582  002B96  5177               	movf	(___ftge@ff2+2)& (0+255),w,b
  1583  002B98  0100               	movlb	0	; () banked
  1584  002B9A  5974               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  1585  002B9C  B0D8               	btfsc	status,0,c
  1586  002B9E  D002               	goto	l4656
  1587                           
  1588                           ; BSR set to: 0
  1589  002BA0  90D8               	bcf	status,0,c
  1590  002BA2  0012               	return	
  1591  002BA4                     l4656:
  1592                           
  1593                           ; BSR set to: 0
  1594  002BA4  80D8               	bsf	status,0,c
  1595                           
  1596                           ; BSR set to: 0
  1597  002BA6  0012               	return	
  1598                           
  1599                           ; BSR set to: 0
  1600                           
  1601                           ; BSR set to: 0
  1602  002BA8  0012               	return		;funcret
  1603  002BAA                     __end_of___ftge:
  1604                           	opt stack 0
  1605                           tblptru	equ	0xFF8
  1606                           tblptrh	equ	0xFF7
  1607                           tblptrl	equ	0xFF6
  1608                           tablat	equ	0xFF5
  1609                           postinc0	equ	0xFEE
  1610                           wreg	equ	0xFE8
  1611                           postdec1	equ	0xFE5
  1612                           fsr1h	equ	0xFE2
  1613                           fsr1l	equ	0xFE1
  1614                           status	equ	0xFD8
  1615                           
  1616 ;; *************** function _UseIRCode *****************
  1617 ;; Defined at:
  1618 ;;		line 264 in file "IR.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  Code            2   84[BANK0 ] PTR unsigned char 
  1621 ;;		 -> IR_New_Code(1), 
  1622 ;;  NEC             4   86[BANK0 ] unsigned long 
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  i               1   91[BANK0 ] unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;		None               void
  1627 ;; Registers used:
  1628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1634 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;Total ram usage:        8 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    9
  1641 ;; This function calls:
  1642 ;;		_LEDTimerON
  1643 ;;		_ReadPushButton
  1644 ;;		_SendRF_wait
  1645 ;;		_SyncGlobalToEEPROM
  1646 ;;		_delayUS
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text2
  1653  001FC0                     __ptext2:
  1654                           	opt stack 0
  1655  001FC0                     _UseIRCode:
  1656                           	opt stack 21
  1657                           
  1658                           ;IR.c: 266: unsigned char i = 0;
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;incstack = 0
  1662  001FC0  0E00               	movlw	0
  1663  001FC2  0100               	movlb	0	; () banked
  1664  001FC4  6FBB               	movwf	UseIRCode@i& (0+255),b
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;IR.c: 268: if(*Code == 2)
  1668  001FC6  C0B4  FFD9         	movff	UseIRCode@Code,fsr2l
  1669  001FCA  C0B5  FFDA         	movff	UseIRCode@Code+1,fsr2h
  1670  001FCE  0E02               	movlw	2
  1671  001FD0  18DE               	xorwf	postinc2,w,c
  1672  001FD2  A4D8               	btfss	status,2,c
  1673  001FD4  D028               	goto	l4400
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;IR.c: 269: {
  1677                           ;IR.c: 271: if(NEC == Global.NECcode)
  1678  001FD6  0100               	movlb	0	; () banked
  1679  001FD8  51B6               	movf	UseIRCode@NEC& (0+255),w,b
  1680  001FDA  0100               	movlb	0	; () banked
  1681  001FDC  19E2               	xorwf	(_Global+1)& (0+255),w,b
  1682  001FDE  E10F               	bnz	u3891
  1683  001FE0  0100               	movlb	0	; () banked
  1684  001FE2  51B7               	movf	(UseIRCode@NEC+1)& (0+255),w,b
  1685  001FE4  0100               	movlb	0	; () banked
  1686  001FE6  19E3               	xorwf	(_Global+2)& (0+255),w,b
  1687  001FE8  E10A               	bnz	u3891
  1688  001FEA  0100               	movlb	0	; () banked
  1689  001FEC  51B8               	movf	(UseIRCode@NEC+2)& (0+255),w,b
  1690  001FEE  0100               	movlb	0	; () banked
  1691  001FF0  19E4               	xorwf	(_Global+3)& (0+255),w,b
  1692  001FF2  E105               	bnz	u3891
  1693  001FF4  0100               	movlb	0	; () banked
  1694  001FF6  51B9               	movf	(UseIRCode@NEC+3)& (0+255),w,b
  1695  001FF8  0100               	movlb	0	; () banked
  1696  001FFA  19E5               	xorwf	(_Global+4)& (0+255),w,b
  1697  001FFC  A4D8               	btfss	status,2,c
  1698  001FFE                     u3891:
  1699  001FFE  D098               	goto	l4450
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;IR.c: 272: {
  1703                           ;IR.c: 273: SendRF_wait(ChannelF,12,8);
  1704  002000  0ED5               	movlw	low _ChannelF
  1705  002002  0100               	movlb	0	; () banked
  1706  002004  6F77               	movwf	SendRF_wait@Code& (0+255),b
  1707  002006  0E00               	movlw	high _ChannelF
  1708  002008  0100               	movlb	0	; () banked
  1709  00200A  6F78               	movwf	(SendRF_wait@Code+1)& (0+255),b
  1710  00200C  0E0C               	movlw	12
  1711  00200E  0100               	movlb	0	; () banked
  1712  002010  6F79               	movwf	SendRF_wait@size& (0+255),b
  1713  002012  0E08               	movlw	8
  1714  002014  0100               	movlb	0	; () banked
  1715  002016  6F7A               	movwf	SendRF_wait@amount& (0+255),b
  1716  002018  EC2A  F01C         	call	_SendRF_wait	;wreg free
  1717                           
  1718                           ;IR.c: 274: (LATC |= 0x02);
  1719  00201C  828B               	bsf	3979,1,c	;volatile
  1720                           
  1721                           ;IR.c: 275: (LATC |= 0x04);
  1722  00201E  848B               	bsf	3979,2,c	;volatile
  1723                           
  1724                           ;IR.c: 276: LEDTimerON();
  1725  002020  ECE0  F01C         	call	_LEDTimerON	;wreg free
  1726                           
  1727                           ;IR.c: 277: }
  1728                           ;IR.c: 278: }
  1729  002024  D085               	goto	l4450
  1730  002026                     l4400:
  1731                           
  1732                           ;IR.c: 279: else
  1733                           ;IR.c: 280: {
  1734                           ;IR.c: 282: if(ReadPushButton())
  1735  002026  ECA1  F01C         	call	_ReadPushButton	;wreg free
  1736  00202A  0900               	iorlw	0
  1737  00202C  B4D8               	btfsc	status,2,c
  1738  00202E  D055               	goto	l4438
  1739                           
  1740                           ;IR.c: 283: {
  1741                           ;IR.c: 284: Global.NECcode = NEC;
  1742  002030  C0B6  F0E2         	movff	UseIRCode@NEC,_Global+1
  1743  002034  C0B7  F0E3         	movff	UseIRCode@NEC+1,_Global+2
  1744  002038  C0B8  F0E4         	movff	UseIRCode@NEC+2,_Global+3
  1745  00203C  C0B9  F0E5         	movff	UseIRCode@NEC+3,_Global+4
  1746                           
  1747                           ;IR.c: 285: if(SyncGlobalToEEPROM())
  1748  002040  EC02  F01B         	call	_SyncGlobalToEEPROM	;wreg free
  1749  002044  0900               	iorlw	0
  1750  002046  B4D8               	btfsc	status,2,c
  1751  002048  D024               	goto	l4422
  1752                           
  1753                           ;IR.c: 286: {
  1754                           ;IR.c: 288: for(i =0;i<10;i++)
  1755  00204A  0E00               	movlw	0
  1756  00204C  0100               	movlb	0	; () banked
  1757  00204E  6FBB               	movwf	UseIRCode@i& (0+255),b
  1758  002050                     l4408:
  1759                           
  1760                           ; BSR set to: 0
  1761  002050  0E09               	movlw	9
  1762  002052  0100               	movlb	0	; () banked
  1763  002054  65BB               	cpfsgt	UseIRCode@i& (0+255),b
  1764  002056  D001               	goto	l4412
  1765                           
  1766                           ; BSR set to: 0
  1767  002058  D06B               	goto	l4450
  1768  00205A                     l4412:
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;IR.c: 289: {
  1772                           ;IR.c: 290: (LATC |= 0x04);
  1773  00205A  848B               	bsf	3979,2,c	;volatile
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;IR.c: 291: delayUS(10000);
  1777  00205C  0E10               	movlw	16
  1778  00205E  0100               	movlb	0	; () banked
  1779  002060  6F72               	movwf	delayUS@US& (0+255),b
  1780  002062  0E27               	movlw	39
  1781  002064  6F73               	movwf	(delayUS@US+1)& (0+255),b
  1782  002066  0E00               	movlw	0
  1783  002068  6F74               	movwf	(delayUS@US+2)& (0+255),b
  1784  00206A  0E00               	movlw	0
  1785  00206C  6F75               	movwf	(delayUS@US+3)& (0+255),b
  1786  00206E  EC97  F019         	call	_delayUS	;wreg free
  1787                           
  1788                           ;IR.c: 292: (LATC &= ~0x04);
  1789  002072  948B               	bcf	3979,2,c	;volatile
  1790                           
  1791                           ;IR.c: 293: delayUS(10000);
  1792  002074  0E10               	movlw	16
  1793  002076  0100               	movlb	0	; () banked
  1794  002078  6F72               	movwf	delayUS@US& (0+255),b
  1795  00207A  0E27               	movlw	39
  1796  00207C  6F73               	movwf	(delayUS@US+1)& (0+255),b
  1797  00207E  0E00               	movlw	0
  1798  002080  6F74               	movwf	(delayUS@US+2)& (0+255),b
  1799  002082  0E00               	movlw	0
  1800  002084  6F75               	movwf	(delayUS@US+3)& (0+255),b
  1801  002086  EC97  F019         	call	_delayUS	;wreg free
  1802  00208A  0100               	movlb	0	; () banked
  1803  00208C  2BBB               	incf	UseIRCode@i& (0+255),f,b
  1804  00208E  D7E0               	goto	l4408
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;IR.c: 294: }
  1808                           ;IR.c: 295: }
  1809                           
  1810                           ; BSR set to: 0
  1811  002090  D04F               	goto	l4450
  1812  002092                     l4422:
  1813                           
  1814                           ;IR.c: 296: else
  1815                           ;IR.c: 297: {
  1816                           ;IR.c: 299: for(i =0;i<10;i++)
  1817  002092  0E00               	movlw	0
  1818  002094  0100               	movlb	0	; () banked
  1819  002096  6FBB               	movwf	UseIRCode@i& (0+255),b
  1820  002098                     l4424:
  1821                           
  1822                           ; BSR set to: 0
  1823  002098  0E09               	movlw	9
  1824  00209A  0100               	movlb	0	; () banked
  1825  00209C  65BB               	cpfsgt	UseIRCode@i& (0+255),b
  1826  00209E  D001               	goto	l4428
  1827                           
  1828                           ; BSR set to: 0
  1829  0020A0  D047               	goto	l4450
  1830  0020A2                     l4428:
  1831                           
  1832                           ; BSR set to: 0
  1833                           ;IR.c: 300: {
  1834                           ;IR.c: 301: (LATC |= 0x02);
  1835  0020A2  828B               	bsf	3979,1,c	;volatile
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;IR.c: 302: delayUS(10000);
  1839  0020A4  0E10               	movlw	16
  1840  0020A6  0100               	movlb	0	; () banked
  1841  0020A8  6F72               	movwf	delayUS@US& (0+255),b
  1842  0020AA  0E27               	movlw	39
  1843  0020AC  6F73               	movwf	(delayUS@US+1)& (0+255),b
  1844  0020AE  0E00               	movlw	0
  1845  0020B0  6F74               	movwf	(delayUS@US+2)& (0+255),b
  1846  0020B2  0E00               	movlw	0
  1847  0020B4  6F75               	movwf	(delayUS@US+3)& (0+255),b
  1848  0020B6  EC97  F019         	call	_delayUS	;wreg free
  1849                           
  1850                           ;IR.c: 303: (LATC &= ~0x02);
  1851  0020BA  928B               	bcf	3979,1,c	;volatile
  1852                           
  1853                           ;IR.c: 304: delayUS(10000);
  1854  0020BC  0E10               	movlw	16
  1855  0020BE  0100               	movlb	0	; () banked
  1856  0020C0  6F72               	movwf	delayUS@US& (0+255),b
  1857  0020C2  0E27               	movlw	39
  1858  0020C4  6F73               	movwf	(delayUS@US+1)& (0+255),b
  1859  0020C6  0E00               	movlw	0
  1860  0020C8  6F74               	movwf	(delayUS@US+2)& (0+255),b
  1861  0020CA  0E00               	movlw	0
  1862  0020CC  6F75               	movwf	(delayUS@US+3)& (0+255),b
  1863  0020CE  EC97  F019         	call	_delayUS	;wreg free
  1864  0020D2  0100               	movlb	0	; () banked
  1865  0020D4  2BBB               	incf	UseIRCode@i& (0+255),f,b
  1866  0020D6  D7E0               	goto	l4424
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;IR.c: 305: }
  1870                           ;IR.c: 306: }
  1871                           ;IR.c: 307: }
  1872                           
  1873                           ; BSR set to: 0
  1874                           
  1875                           ; BSR set to: 0
  1876  0020D8  D02B               	goto	l4450
  1877  0020DA                     l4438:
  1878                           
  1879                           ;IR.c: 308: else
  1880                           ;IR.c: 309: {
  1881                           ;IR.c: 310: if(NEC == Global.NECcode)
  1882  0020DA  0100               	movlb	0	; () banked
  1883  0020DC  51B6               	movf	UseIRCode@NEC& (0+255),w,b
  1884  0020DE  0100               	movlb	0	; () banked
  1885  0020E0  19E2               	xorwf	(_Global+1)& (0+255),w,b
  1886  0020E2  E122               	bnz	l4446
  1887  0020E4  0100               	movlb	0	; () banked
  1888  0020E6  51B7               	movf	(UseIRCode@NEC+1)& (0+255),w,b
  1889  0020E8  0100               	movlb	0	; () banked
  1890  0020EA  19E3               	xorwf	(_Global+2)& (0+255),w,b
  1891  0020EC  E11D               	bnz	l4446
  1892  0020EE  0100               	movlb	0	; () banked
  1893  0020F0  51B8               	movf	(UseIRCode@NEC+2)& (0+255),w,b
  1894  0020F2  0100               	movlb	0	; () banked
  1895  0020F4  19E4               	xorwf	(_Global+3)& (0+255),w,b
  1896  0020F6  E118               	bnz	l4446
  1897  0020F8  0100               	movlb	0	; () banked
  1898  0020FA  51B9               	movf	(UseIRCode@NEC+3)& (0+255),w,b
  1899  0020FC  0100               	movlb	0	; () banked
  1900  0020FE  19E5               	xorwf	(_Global+4)& (0+255),w,b
  1901  002100  A4D8               	btfss	status,2,c
  1902  002102  D012               	goto	l4446
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;IR.c: 311: {
  1906                           ;IR.c: 312: SendRF_wait(ChannelF,12,8);
  1907  002104  0ED5               	movlw	low _ChannelF
  1908  002106  0100               	movlb	0	; () banked
  1909  002108  6F77               	movwf	SendRF_wait@Code& (0+255),b
  1910  00210A  0E00               	movlw	high _ChannelF
  1911  00210C  0100               	movlb	0	; () banked
  1912  00210E  6F78               	movwf	(SendRF_wait@Code+1)& (0+255),b
  1913  002110  0E0C               	movlw	12
  1914  002112  0100               	movlb	0	; () banked
  1915  002114  6F79               	movwf	SendRF_wait@size& (0+255),b
  1916  002116  0E08               	movlw	8
  1917  002118  0100               	movlb	0	; () banked
  1918  00211A  6F7A               	movwf	SendRF_wait@amount& (0+255),b
  1919  00211C  EC2A  F01C         	call	_SendRF_wait	;wreg free
  1920                           
  1921                           ;IR.c: 313: (LATC |= 0x04);
  1922  002120  848B               	bsf	3979,2,c	;volatile
  1923                           
  1924                           ;IR.c: 314: LEDTimerON();
  1925  002122  ECE0  F01C         	call	_LEDTimerON	;wreg free
  1926                           
  1927                           ;IR.c: 315: }
  1928  002126  D004               	goto	l4450
  1929  002128                     l4446:
  1930                           
  1931                           ;IR.c: 316: else
  1932                           ;IR.c: 317: {
  1933                           ;IR.c: 318: (LATC |= 0x02);
  1934  002128  828B               	bsf	3979,1,c	;volatile
  1935                           
  1936                           ;IR.c: 319: LEDTimerON();
  1937  00212A  ECE0  F01C         	call	_LEDTimerON	;wreg free
  1938  00212E  D000               	goto	l4450
  1939  002130                     l4450:
  1940                           
  1941                           ;IR.c: 320: }
  1942                           ;IR.c: 321: }
  1943                           ;IR.c: 322: }
  1944                           ;IR.c: 324: *Code = 0;
  1945  002130  C0B4  FFD9         	movff	UseIRCode@Code,fsr2l
  1946  002134  C0B5  FFDA         	movff	UseIRCode@Code+1,fsr2h
  1947  002138  0E00               	movlw	0
  1948  00213A  6EDF               	movwf	indf2,c
  1949                           
  1950                           ;IR.c: 325: INTCONbits.RBIE = 1;
  1951  00213C  86F2               	bsf	intcon,3,c	;volatile
  1952  00213E  0012               	return		;funcret
  1953  002140                     __end_of_UseIRCode:
  1954                           	opt stack 0
  1955                           tblptru	equ	0xFF8
  1956                           tblptrh	equ	0xFF7
  1957                           tblptrl	equ	0xFF6
  1958                           tablat	equ	0xFF5
  1959                           intcon	equ	0xFF2
  1960                           postinc0	equ	0xFEE
  1961                           wreg	equ	0xFE8
  1962                           postdec1	equ	0xFE5
  1963                           fsr1h	equ	0xFE2
  1964                           fsr1l	equ	0xFE1
  1965                           indf2	equ	0xFDF
  1966                           postinc2	equ	0xFDE
  1967                           fsr2h	equ	0xFDA
  1968                           fsr2l	equ	0xFD9
  1969                           status	equ	0xFD8
  1970                           
  1971 ;; *************** function _SendRF_wait *****************
  1972 ;; Defined at:
  1973 ;;		line 109 in file "RF.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  Code            2   23[BANK0 ] PTR unsigned char 
  1976 ;;		 -> ChannelF(12), 
  1977 ;;  size            1   25[BANK0 ] unsigned char 
  1978 ;;  amount          1   26[BANK0 ] unsigned char 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;		None
  1981 ;; Return value:  Size  Location     Type
  1982 ;;		None               void
  1983 ;; Registers used:
  1984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1990 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;Total ram usage:        4 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:    5
  1997 ;; This function calls:
  1998 ;;		_SendRF
  1999 ;; This function is called by:
  2000 ;;		_UseIRCode
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text3
  2005  003854                     __ptext3:
  2006                           	opt stack 0
  2007  003854                     _SendRF_wait:
  2008                           	opt stack 24
  2009                           
  2010                           ;RF.c: 111: INTCONbits.RBIE = 0;
  2011                           
  2012                           ;incstack = 0
  2013  003854  96F2               	bcf	intcon,3,c	;volatile
  2014                           
  2015                           ;RF.c: 112: while(SendRF(Code, size, amount) == 2);
  2016  003856  D000               	goto	l4222
  2017  003858                     l4222:
  2018  003858  C077  F072         	movff	SendRF_wait@Code,SendRF@Code
  2019  00385C  C078  F073         	movff	SendRF_wait@Code+1,SendRF@Code+1
  2020  003860  C079  F074         	movff	SendRF_wait@size,SendRF@size
  2021  003864  C07A  F075         	movff	SendRF_wait@amount,SendRF@RepeatAmount
  2022  003868  EC3E  F018         	call	_SendRF	;wreg free
  2023  00386C  0A02               	xorlw	2
  2024  00386E  B4D8               	btfsc	status,2,c
  2025  003870  D7F3               	goto	l4222
  2026                           
  2027                           ;RF.c: 113: INTCONbits.RBIF = 0;
  2028  003872  90F2               	bcf	intcon,0,c	;volatile
  2029                           
  2030                           ;RF.c: 114: INTCONbits.RBIE = 1;
  2031  003874  86F2               	bsf	intcon,3,c	;volatile
  2032  003876  0012               	return		;funcret
  2033  003878                     __end_of_SendRF_wait:
  2034                           	opt stack 0
  2035                           tblptru	equ	0xFF8
  2036                           tblptrh	equ	0xFF7
  2037                           tblptrl	equ	0xFF6
  2038                           tablat	equ	0xFF5
  2039                           intcon	equ	0xFF2
  2040                           postinc0	equ	0xFEE
  2041                           wreg	equ	0xFE8
  2042                           postdec1	equ	0xFE5
  2043                           fsr1h	equ	0xFE2
  2044                           fsr1l	equ	0xFE1
  2045                           indf2	equ	0xFDF
  2046                           postinc2	equ	0xFDE
  2047                           fsr2h	equ	0xFDA
  2048                           fsr2l	equ	0xFD9
  2049                           status	equ	0xFD8
  2050                           
  2051 ;; *************** function _SendRF *****************
  2052 ;; Defined at:
  2053 ;;		line 58 in file "RF.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  Code            2   18[BANK0 ] PTR unsigned char 
  2056 ;;		 -> ChannelF(12), 
  2057 ;;  size            1   20[BANK0 ] unsigned char 
  2058 ;;  RepeatAmount    1   21[BANK0 ] unsigned char 
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  i               1   22[BANK0 ] unsigned char 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      unsigned char 
  2063 ;; Registers used:
  2064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2070 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2071 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;Total ram usage:        5 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:    4
  2077 ;; This function calls:
  2078 ;;		Nothing
  2079 ;; This function is called by:
  2080 ;;		_SendRF_wait
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text4
  2085  00307C                     __ptext4:
  2086                           	opt stack 0
  2087  00307C                     _SendRF:
  2088                           	opt stack 24
  2089                           
  2090                           ;RF.c: 60: unsigned char i;
  2091                           ;RF.c: 61: if(Sent == 1)
  2092                           
  2093                           ;incstack = 0
  2094  00307C  0100               	movlb	0	; () banked
  2095  00307E  05D4               	decf	_Sent& (0+255),w,b	;volatile
  2096  003080  A4D8               	btfss	status,2,c
  2097  003082  D046               	goto	l4070
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;RF.c: 62: {
  2101                           ;RF.c: 64: Sent = 0;
  2102  003084  0E00               	movlw	0
  2103  003086  0100               	movlb	0	; () banked
  2104  003088  6FD4               	movwf	_Sent& (0+255),b	;volatile
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;RF.c: 65: Sendcount = RepeatAmount;
  2108  00308A  C075  F041         	movff	SendRF@RepeatAmount,_Sendcount	;volatile
  2109                           
  2110                           ;RF.c: 66: RFsendFlag = 1;
  2111  00308E  0E01               	movlw	1
  2112  003090  6E3F               	movwf	_RFsendFlag,c	;volatile
  2113                           
  2114                           ;RF.c: 67: RFcodeBit = 0;
  2115  003092  0E00               	movlw	0
  2116  003094  6E3D               	movwf	_RFcodeBit,c
  2117                           
  2118                           ;RF.c: 68: RFcodePlace = 1;
  2119  003096  0E01               	movlw	1
  2120  003098  6E3E               	movwf	_RFcodePlace,c
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;RF.c: 71: if(size >= 20)
  2124  00309A  0E13               	movlw	19
  2125  00309C  0100               	movlb	0	; () banked
  2126  00309E  6574               	cpfsgt	SendRF@size& (0+255),b
  2127  0030A0  D002               	goto	l4050
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;RF.c: 72: {
  2131                           ;RF.c: 73: return 0;
  2132  0030A2  0E00               	movlw	0
  2133                           
  2134                           ; BSR set to: 0
  2135  0030A4  0012               	return	
  2136  0030A6                     l4050:
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;RF.c: 74: }
  2140                           ;RF.c: 75: for(i=0;i<size;i++)
  2141  0030A6  0E00               	movlw	0
  2142  0030A8  0100               	movlb	0	; () banked
  2143  0030AA  6F76               	movwf	SendRF@i& (0+255),b
  2144  0030AC  D019               	goto	l4056
  2145  0030AE                     l4052:
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;RF.c: 76: {
  2149                           ;RF.c: 77: RFsendCode[i] = Code[i];
  2150  0030AE  0100               	movlb	0	; () banked
  2151  0030B0  5176               	movf	SendRF@i& (0+255),w,b
  2152  0030B2  0D01               	mullw	1
  2153  0030B4  50F3               	movf	prodl,w,c
  2154  0030B6  0100               	movlb	0	; () banked
  2155  0030B8  2572               	addwf	SendRF@Code& (0+255),w,b
  2156  0030BA  6ED9               	movwf	fsr2l,c
  2157  0030BC  50F4               	movf	prodh,w,c
  2158  0030BE  0100               	movlb	0	; () banked
  2159  0030C0  2173               	addwfc	(SendRF@Code+1)& (0+255),w,b
  2160  0030C2  6EDA               	movwf	fsr2h,c
  2161  0030C4  0100               	movlb	0	; () banked
  2162  0030C6  5176               	movf	SendRF@i& (0+255),w,b
  2163  0030C8  0D01               	mullw	1
  2164  0030CA  0E25               	movlw	low _RFsendCode
  2165  0030CC  24F3               	addwf	prodl,w,c
  2166  0030CE  6EE1               	movwf	fsr1l,c
  2167  0030D0  0E00               	movlw	high _RFsendCode
  2168  0030D2  20F4               	addwfc	prodh,w,c
  2169  0030D4  6EE2               	movwf	fsr1h,c
  2170  0030D6  CFDF FFE7          	movff	indf2,indf1
  2171                           
  2172                           ; BSR set to: 0
  2173  0030DA  0100               	movlb	0	; () banked
  2174  0030DC  2B76               	incf	SendRF@i& (0+255),f,b
  2175  0030DE  D000               	goto	l4056
  2176  0030E0                     l4056:
  2177                           
  2178                           ; BSR set to: 0
  2179  0030E0  0100               	movlb	0	; () banked
  2180  0030E2  5174               	movf	SendRF@size& (0+255),w,b
  2181  0030E4  0100               	movlb	0	; () banked
  2182  0030E6  5D76               	subwf	SendRF@i& (0+255),w,b
  2183  0030E8  A0D8               	btfss	status,0,c
  2184  0030EA  D7E1               	goto	l4052
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;RF.c: 78: }
  2188                           ;RF.c: 79: RFsendCode[i] = 99;
  2189                           
  2190                           ; BSR set to: 0
  2191  0030EC  0100               	movlb	0	; () banked
  2192  0030EE  5176               	movf	SendRF@i& (0+255),w,b
  2193  0030F0  0D01               	mullw	1
  2194  0030F2  0E25               	movlw	low _RFsendCode
  2195  0030F4  24F3               	addwf	prodl,w,c
  2196  0030F6  6ED9               	movwf	fsr2l,c
  2197  0030F8  0E00               	movlw	high _RFsendCode
  2198  0030FA  20F4               	addwfc	prodh,w,c
  2199  0030FC  6EDA               	movwf	fsr2h,c
  2200  0030FE  0E63               	movlw	99
  2201  003100  6EDF               	movwf	indf2,c
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;RF.c: 81: (TMR2 = 0);
  2205  003102  0E00               	movlw	0
  2206  003104  6ECC               	movwf	4044,c	;volatile
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;RF.c: 82: (PR2 = 240);
  2210  003106  0EF0               	movlw	240
  2211  003108  6ECB               	movwf	4043,c	;volatile
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;RF.c: 83: (T2CONbits.TMR2ON = 1);
  2215  00310A  84CA               	bsf	4042,2,c	;volatile
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;RF.c: 84: return 1;
  2219  00310C  0E01               	movlw	1
  2220                           
  2221                           ; BSR set to: 0
  2222  00310E  0012               	return	
  2223  003110                     l4070:
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;RF.c: 85: }
  2227                           ;RF.c: 86: return 2;
  2228  003110  0E02               	movlw	2
  2229  003112  0012               	return	
  2230                           
  2231                           ; BSR set to: 0
  2232                           
  2233                           ; BSR set to: 0
  2234  003114  0012               	return		;funcret
  2235  003116                     __end_of_SendRF:
  2236                           	opt stack 0
  2237                           tblptru	equ	0xFF8
  2238                           tblptrh	equ	0xFF7
  2239                           tblptrl	equ	0xFF6
  2240                           tablat	equ	0xFF5
  2241                           prodh	equ	0xFF4
  2242                           prodl	equ	0xFF3
  2243                           intcon	equ	0xFF2
  2244                           postinc0	equ	0xFEE
  2245                           wreg	equ	0xFE8
  2246                           indf1	equ	0xFE7
  2247                           postdec1	equ	0xFE5
  2248                           fsr1h	equ	0xFE2
  2249                           fsr1l	equ	0xFE1
  2250                           indf2	equ	0xFDF
  2251                           postinc2	equ	0xFDE
  2252                           fsr2h	equ	0xFDA
  2253                           fsr2l	equ	0xFD9
  2254                           status	equ	0xFD8
  2255                           
  2256 ;; *************** function _ReadPushButton *****************
  2257 ;; Defined at:
  2258 ;;		line 50 in file "Button.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;		None
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      unsigned char 
  2265 ;; Registers used:
  2266 ;;		wreg
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;Total ram usage:        0 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    4
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_UseIRCode
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text5
  2287  003942                     __ptext5:
  2288                           	opt stack 0
  2289  003942                     _ReadPushButton:
  2290                           	opt stack 25
  2291                           
  2292                           ;Button.c: 53: if((PORTC & 0x01) != 0x01)
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;incstack = 0
  2296  003942  B082               	btfsc	3970,0,c	;volatile
  2297  003944  D002               	goto	l4230
  2298                           
  2299                           ;Button.c: 54: {
  2300                           ;Button.c: 55: return 1;
  2301  003946  0E01               	movlw	1
  2302  003948  0012               	return	
  2303  00394A                     l4230:
  2304                           
  2305                           ;Button.c: 56: }
  2306                           ;Button.c: 57: return 0;
  2307  00394A  0E00               	movlw	0
  2308  00394C  0012               	return	
  2309  00394E  0012               	return		;funcret
  2310  003950                     __end_of_ReadPushButton:
  2311                           	opt stack 0
  2312                           tblptru	equ	0xFF8
  2313                           tblptrh	equ	0xFF7
  2314                           tblptrl	equ	0xFF6
  2315                           tablat	equ	0xFF5
  2316                           prodh	equ	0xFF4
  2317                           prodl	equ	0xFF3
  2318                           intcon	equ	0xFF2
  2319                           postinc0	equ	0xFEE
  2320                           wreg	equ	0xFE8
  2321                           indf1	equ	0xFE7
  2322                           postdec1	equ	0xFE5
  2323                           fsr1h	equ	0xFE2
  2324                           fsr1l	equ	0xFE1
  2325                           indf2	equ	0xFDF
  2326                           postinc2	equ	0xFDE
  2327                           fsr2h	equ	0xFDA
  2328                           fsr2l	equ	0xFD9
  2329                           status	equ	0xFD8
  2330                           
  2331 ;; *************** function _LEDTimerON *****************
  2332 ;; Defined at:
  2333 ;;		line 132 in file "Timer.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;		None
  2338 ;; Return value:  Size  Location     Type
  2339 ;;		None               void
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2351 ;;Total ram usage:        0 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; Hardware stack levels required when called:    5
  2354 ;; This function calls:
  2355 ;;		_ResetTimer1
  2356 ;; This function is called by:
  2357 ;;		_UseIRCode
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text6
  2362  0039C0                     __ptext6:
  2363                           	opt stack 0
  2364  0039C0                     _LEDTimerON:
  2365                           	opt stack 24
  2366                           
  2367                           ;Timer.c: 134: Timer1_Postscaler = 0;
  2368                           
  2369                           ;incstack = 0
  2370  0039C0  0E00               	movlw	0
  2371  0039C2  6E42               	movwf	_Timer1_Postscaler,c
  2372                           
  2373                           ;Timer.c: 135: ResetTimer1();
  2374  0039C4  ECE6  F01C         	call	_ResetTimer1	;wreg free
  2375                           
  2376                           ;Timer.c: 136: (T1CONbits.TMR1ON = TRUE);
  2377  0039C8  80CD               	bsf	4045,0,c	;volatile
  2378  0039CA  0012               	return		;funcret
  2379  0039CC                     __end_of_LEDTimerON:
  2380                           	opt stack 0
  2381                           tblptru	equ	0xFF8
  2382                           tblptrh	equ	0xFF7
  2383                           tblptrl	equ	0xFF6
  2384                           tablat	equ	0xFF5
  2385                           prodh	equ	0xFF4
  2386                           prodl	equ	0xFF3
  2387                           intcon	equ	0xFF2
  2388                           postinc0	equ	0xFEE
  2389                           wreg	equ	0xFE8
  2390                           indf1	equ	0xFE7
  2391                           postdec1	equ	0xFE5
  2392                           fsr1h	equ	0xFE2
  2393                           fsr1l	equ	0xFE1
  2394                           indf2	equ	0xFDF
  2395                           postinc2	equ	0xFDE
  2396                           fsr2h	equ	0xFDA
  2397                           fsr2l	equ	0xFD9
  2398                           status	equ	0xFD8
  2399                           
  2400 ;; *************** function _ResetTimer1 *****************
  2401 ;; Defined at:
  2402 ;;		line 106 in file "Timer.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;		None               void
  2409 ;; Registers used:
  2410 ;;		wreg, status,2
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;Total ram usage:        0 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:    4
  2423 ;; This function calls:
  2424 ;;		Nothing
  2425 ;; This function is called by:
  2426 ;;		_LEDTimerON
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text7
  2431  0039CC                     __ptext7:
  2432                           	opt stack 0
  2433  0039CC                     _ResetTimer1:
  2434                           	opt stack 24
  2435                           
  2436                           ;Timer.c: 112: TMR1H = 0;
  2437                           
  2438                           ;incstack = 0
  2439  0039CC  0E00               	movlw	0
  2440  0039CE  6ECF               	movwf	4047,c	;volatile
  2441                           
  2442                           ;Timer.c: 113: TMR1L = 2;
  2443  0039D0  0E02               	movlw	2
  2444  0039D2  6ECE               	movwf	4046,c	;volatile
  2445  0039D4  0012               	return		;funcret
  2446  0039D6                     __end_of_ResetTimer1:
  2447                           	opt stack 0
  2448                           tblptru	equ	0xFF8
  2449                           tblptrh	equ	0xFF7
  2450                           tblptrl	equ	0xFF6
  2451                           tablat	equ	0xFF5
  2452                           prodh	equ	0xFF4
  2453                           prodl	equ	0xFF3
  2454                           intcon	equ	0xFF2
  2455                           postinc0	equ	0xFEE
  2456                           wreg	equ	0xFE8
  2457                           indf1	equ	0xFE7
  2458                           postdec1	equ	0xFE5
  2459                           fsr1h	equ	0xFE2
  2460                           fsr1l	equ	0xFE1
  2461                           indf2	equ	0xFDF
  2462                           postinc2	equ	0xFDE
  2463                           fsr2h	equ	0xFDA
  2464                           fsr2l	equ	0xFD9
  2465                           status	equ	0xFD8
  2466                           
  2467 ;; *************** function _ReadVoltage *****************
  2468 ;; Defined at:
  2469 ;;		line 58 in file "ADC.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  voltage         3   62[BANK0 ] unsigned char 
  2474 ;;  temp            2   65[BANK0 ] unsigned int 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  3   59[BANK0 ] unsigned int 
  2477 ;; Registers used:
  2478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2484 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2488 ;;Total ram usage:        8 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    6
  2491 ;; This function calls:
  2492 ;;		_InternalADC_Read
  2493 ;;		_VoltageDividerOFF
  2494 ;;		_VoltageDividerON
  2495 ;;		___ftdiv
  2496 ;;		___ftmul
  2497 ;;		___lwtoft
  2498 ;;		_delayUS
  2499 ;; This function is called by:
  2500 ;;		_main
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text8
  2505  002D38                     __ptext8:
  2506                           	opt stack 0
  2507  002D38                     _ReadVoltage:
  2508                           	opt stack 24
  2509                           
  2510                           ;ADC.c: 60: unsigned int temp;
  2511                           ;ADC.c: 61: double voltage;
  2512                           ;ADC.c: 63: VoltageDividerON();
  2513                           
  2514                           ;incstack = 0
  2515  002D38  ECFF  F01C         	call	_VoltageDividerON	;wreg free
  2516                           
  2517                           ;ADC.c: 64: delayUS(5);
  2518  002D3C  0E05               	movlw	5
  2519  002D3E  0100               	movlb	0	; () banked
  2520  002D40  6F72               	movwf	delayUS@US& (0+255),b
  2521  002D42  0E00               	movlw	0
  2522  002D44  6F73               	movwf	(delayUS@US+1)& (0+255),b
  2523  002D46  0E00               	movlw	0
  2524  002D48  6F74               	movwf	(delayUS@US+2)& (0+255),b
  2525  002D4A  0E00               	movlw	0
  2526  002D4C  6F75               	movwf	(delayUS@US+3)& (0+255),b
  2527  002D4E  EC97  F019         	call	_delayUS	;wreg free
  2528                           
  2529                           ;ADC.c: 65: if(InternalADC_Read(0, &temp))
  2530  002D52  0EA1               	movlw	low ReadVoltage@temp
  2531  002D54  0100               	movlb	0	; () banked
  2532  002D56  6F7C               	movwf	InternalADC_Read@ADCcounts& (0+255),b
  2533  002D58  0E00               	movlw	high ReadVoltage@temp
  2534  002D5A  0100               	movlb	0	; () banked
  2535  002D5C  6F7D               	movwf	(InternalADC_Read@ADCcounts+1)& (0+255),b
  2536  002D5E  0E00               	movlw	0
  2537  002D60  EC9C  F017         	call	_InternalADC_Read
  2538  002D64  0900               	iorlw	0
  2539  002D66  B4D8               	btfsc	status,2,c
  2540  002D68  D02F               	goto	l4378
  2541                           
  2542                           ;ADC.c: 66: {
  2543                           ;ADC.c: 67: voltage = ((double)temp / 1024.0) * 11 * 3.3;
  2544  002D6A  0E00               	movlw	0
  2545  002D6C  0100               	movlb	0	; () banked
  2546  002D6E  6F80               	movwf	___ftdiv@f2& (0+255),b
  2547  002D70  0E80               	movlw	128
  2548  002D72  0100               	movlb	0	; () banked
  2549  002D74  6F81               	movwf	(___ftdiv@f2+1)& (0+255),b
  2550  002D76  0E44               	movlw	68
  2551  002D78  0100               	movlb	0	; () banked
  2552  002D7A  6F82               	movwf	(___ftdiv@f2+2)& (0+255),b
  2553  002D7C  C0A1  F07A         	movff	ReadVoltage@temp,___lwtoft@c
  2554  002D80  C0A2  F07B         	movff	ReadVoltage@temp+1,___lwtoft@c+1
  2555  002D84  ECEB  F01B         	call	___lwtoft	;wreg free
  2556  002D88  C07A  F07D         	movff	?___lwtoft,___ftdiv@f1
  2557  002D8C  C07B  F07E         	movff	?___lwtoft+1,___ftdiv@f1+1
  2558  002D90  C07C  F07F         	movff	?___lwtoft+2,___ftdiv@f1+2
  2559  002D94  EC0E  F012         	call	___ftdiv	;wreg free
  2560  002D98  C07D  F08C         	movff	?___ftdiv,___ftmul@f1
  2561  002D9C  C07E  F08D         	movff	?___ftdiv+1,___ftmul@f1+1
  2562  002DA0  C07F  F08E         	movff	?___ftdiv+2,___ftmul@f1+2
  2563  002DA4  0E33               	movlw	51
  2564  002DA6  0100               	movlb	0	; () banked
  2565  002DA8  6F8F               	movwf	___ftmul@f2& (0+255),b
  2566  002DAA  0E11               	movlw	17
  2567  002DAC  0100               	movlb	0	; () banked
  2568  002DAE  6F90               	movwf	(___ftmul@f2+1)& (0+255),b
  2569  002DB0  0E42               	movlw	66
  2570  002DB2  0100               	movlb	0	; () banked
  2571  002DB4  6F91               	movwf	(___ftmul@f2+2)& (0+255),b
  2572  002DB6  EC58  F011         	call	___ftmul	;wreg free
  2573  002DBA  C08C  F09E         	movff	?___ftmul,ReadVoltage@voltage
  2574  002DBE  C08D  F09F         	movff	?___ftmul+1,ReadVoltage@voltage+1
  2575  002DC2  C08E  F0A0         	movff	?___ftmul+2,ReadVoltage@voltage+2
  2576                           
  2577                           ;ADC.c: 68: }
  2578  002DC6  D00A               	goto	l4380
  2579  002DC8                     l4378:
  2580                           
  2581                           ;ADC.c: 69: else
  2582                           ;ADC.c: 70: {
  2583                           ;ADC.c: 71: voltage = 0.0;
  2584  002DC8  0E00               	movlw	0
  2585  002DCA  0100               	movlb	0	; () banked
  2586  002DCC  6F9E               	movwf	ReadVoltage@voltage& (0+255),b
  2587  002DCE  0E00               	movlw	0
  2588  002DD0  0100               	movlb	0	; () banked
  2589  002DD2  6F9F               	movwf	(ReadVoltage@voltage+1)& (0+255),b
  2590  002DD4  0E00               	movlw	0
  2591  002DD6  0100               	movlb	0	; () banked
  2592  002DD8  6FA0               	movwf	(ReadVoltage@voltage+2)& (0+255),b
  2593  002DDA  D000               	goto	l4380
  2594  002DDC                     l4380:
  2595                           
  2596                           ;ADC.c: 72: }
  2597                           ;ADC.c: 73: VoltageDividerOFF();
  2598  002DDC  EC02  F01D         	call	_VoltageDividerOFF	;wreg free
  2599                           
  2600                           ;ADC.c: 74: return voltage;
  2601  002DE0  C09E  F09B         	movff	ReadVoltage@voltage,?_ReadVoltage
  2602  002DE4  C09F  F09C         	movff	ReadVoltage@voltage+1,?_ReadVoltage+1
  2603  002DE8  C0A0  F09D         	movff	ReadVoltage@voltage+2,?_ReadVoltage+2
  2604  002DEC  0012               	return	
  2605  002DEE  0012               	return		;funcret
  2606  002DF0                     __end_of_ReadVoltage:
  2607                           	opt stack 0
  2608                           tblptru	equ	0xFF8
  2609                           tblptrh	equ	0xFF7
  2610                           tblptrl	equ	0xFF6
  2611                           tablat	equ	0xFF5
  2612                           prodh	equ	0xFF4
  2613                           prodl	equ	0xFF3
  2614                           intcon	equ	0xFF2
  2615                           postinc0	equ	0xFEE
  2616                           wreg	equ	0xFE8
  2617                           indf1	equ	0xFE7
  2618                           postdec1	equ	0xFE5
  2619                           fsr1h	equ	0xFE2
  2620                           fsr1l	equ	0xFE1
  2621                           indf2	equ	0xFDF
  2622                           postinc2	equ	0xFDE
  2623                           fsr2h	equ	0xFDA
  2624                           fsr2l	equ	0xFD9
  2625                           status	equ	0xFD8
  2626                           
  2627 ;; *************** function ___lwtoft *****************
  2628 ;; Defined at:
  2629 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  c               2   26[BANK0 ] unsigned int 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  3   26[BANK0 ] float 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0, cstack
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2643 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;Total ram usage:        3 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    5
  2650 ;; This function calls:
  2651 ;;		___ftpack
  2652 ;; This function is called by:
  2653 ;;		_ReadVoltage
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           	psect	text9
  2658  0037D6                     __ptext9:
  2659                           	opt stack 0
  2660  0037D6                     ___lwtoft:
  2661                           	opt stack 24
  2662                           
  2663                           ;incstack = 0
  2664  0037D6  C07A  F072         	movff	___lwtoft@c,___ftpack@arg
  2665  0037DA  C07B  F073         	movff	___lwtoft@c+1,___ftpack@arg+1
  2666  0037DE  0100               	movlb	0	; () banked
  2667  0037E0  6B74               	clrf	(___ftpack@arg+2)& (0+255),b
  2668  0037E2  0E8E               	movlw	142
  2669  0037E4  0100               	movlb	0	; () banked
  2670  0037E6  6F75               	movwf	___ftpack@exp& (0+255),b
  2671  0037E8  0E00               	movlw	0
  2672  0037EA  0100               	movlb	0	; () banked
  2673  0037EC  6F76               	movwf	___ftpack@sign& (0+255),b
  2674  0037EE  EC60  F013         	call	___ftpack	;wreg free
  2675  0037F2  C072  F07A         	movff	?___ftpack,?___lwtoft
  2676  0037F6  C073  F07B         	movff	?___ftpack+1,?___lwtoft+1
  2677  0037FA  C074  F07C         	movff	?___ftpack+2,?___lwtoft+2
  2678  0037FE  0012               	return	
  2679  003800  0012               	return		;funcret
  2680  003802                     __end_of___lwtoft:
  2681                           	opt stack 0
  2682                           tblptru	equ	0xFF8
  2683                           tblptrh	equ	0xFF7
  2684                           tblptrl	equ	0xFF6
  2685                           tablat	equ	0xFF5
  2686                           prodh	equ	0xFF4
  2687                           prodl	equ	0xFF3
  2688                           intcon	equ	0xFF2
  2689                           postinc0	equ	0xFEE
  2690                           wreg	equ	0xFE8
  2691                           indf1	equ	0xFE7
  2692                           postdec1	equ	0xFE5
  2693                           fsr1h	equ	0xFE2
  2694                           fsr1l	equ	0xFE1
  2695                           indf2	equ	0xFDF
  2696                           postinc2	equ	0xFDE
  2697                           fsr2h	equ	0xFDA
  2698                           fsr2l	equ	0xFD9
  2699                           status	equ	0xFD8
  2700                           
  2701 ;; *************** function ___ftmul *****************
  2702 ;; Defined at:
  2703 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  f1              3   44[BANK0 ] float 
  2706 ;;  f2              3   47[BANK0 ] float 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  f3_as_produc    3   54[BANK0 ] unsigned um
  2709 ;;  sign            1   58[BANK0 ] unsigned char 
  2710 ;;  cntr            1   57[BANK0 ] unsigned char 
  2711 ;;  exp             1   53[BANK0 ] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  3   44[BANK0 ] float 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2721 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2722 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2723 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2724 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;Total ram usage:       15 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    5
  2728 ;; This function calls:
  2729 ;;		___ftpack
  2730 ;; This function is called by:
  2731 ;;		_ReadVoltage
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text10
  2736  0022B0                     __ptext10:
  2737                           	opt stack 0
  2738  0022B0                     ___ftmul:
  2739                           	opt stack 24
  2740                           
  2741                           ;incstack = 0
  2742  0022B0  C08E  F092         	movff	___ftmul@f1+2,??___ftmul
  2743  0022B4  0100               	movlb	0	; () banked
  2744  0022B6  6B93               	clrf	(??___ftmul+1)& (0+255),b
  2745  0022B8  6B94               	clrf	(??___ftmul+2)& (0+255),b
  2746  0022BA  0100               	movlb	0	; () banked
  2747  0022BC  358D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  2748  0022BE  0100               	movlb	0	; () banked
  2749  0022C0  3792               	rlcf	??___ftmul& (0+255),f,b
  2750  0022C2  E301               	bnc	u3811
  2751  0022C4  8193               	bsf	(??___ftmul+1)& (0+255),0,b
  2752  0022C6                     u3811:
  2753  0022C6  0100               	movlb	0	; () banked
  2754  0022C8  5192               	movf	??___ftmul& (0+255),w,b
  2755  0022CA  0100               	movlb	0	; () banked
  2756  0022CC  6F95               	movwf	___ftmul@exp& (0+255),b
  2757  0022CE  0100               	movlb	0	; () banked
  2758  0022D0  5195               	movf	___ftmul@exp& (0+255),w,b
  2759  0022D2  A4D8               	btfss	status,2,c
  2760  0022D4  D00A               	goto	l4286
  2761                           
  2762                           ; BSR set to: 0
  2763  0022D6  0E00               	movlw	0
  2764  0022D8  0100               	movlb	0	; () banked
  2765  0022DA  6F8C               	movwf	?___ftmul& (0+255),b
  2766  0022DC  0E00               	movlw	0
  2767  0022DE  0100               	movlb	0	; () banked
  2768  0022E0  6F8D               	movwf	(?___ftmul+1)& (0+255),b
  2769  0022E2  0E00               	movlw	0
  2770  0022E4  0100               	movlb	0	; () banked
  2771  0022E6  6F8E               	movwf	(?___ftmul+2)& (0+255),b
  2772                           
  2773                           ; BSR set to: 0
  2774  0022E8  0012               	return	
  2775  0022EA                     l4286:
  2776                           
  2777                           ; BSR set to: 0
  2778  0022EA  C091  F092         	movff	___ftmul@f2+2,??___ftmul
  2779  0022EE  0100               	movlb	0	; () banked
  2780  0022F0  6B93               	clrf	(??___ftmul+1)& (0+255),b
  2781  0022F2  6B94               	clrf	(??___ftmul+2)& (0+255),b
  2782  0022F4  0100               	movlb	0	; () banked
  2783  0022F6  3590               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  2784  0022F8  0100               	movlb	0	; () banked
  2785  0022FA  3792               	rlcf	??___ftmul& (0+255),f,b
  2786  0022FC  E301               	bnc	u3831
  2787  0022FE  8193               	bsf	(??___ftmul+1)& (0+255),0,b
  2788  002300                     u3831:
  2789  002300  0100               	movlb	0	; () banked
  2790  002302  5192               	movf	??___ftmul& (0+255),w,b
  2791  002304  0100               	movlb	0	; () banked
  2792  002306  6F9A               	movwf	___ftmul@sign& (0+255),b
  2793  002308  0100               	movlb	0	; () banked
  2794  00230A  519A               	movf	___ftmul@sign& (0+255),w,b
  2795  00230C  A4D8               	btfss	status,2,c
  2796  00230E  D00A               	goto	l4292
  2797                           
  2798                           ; BSR set to: 0
  2799  002310  0E00               	movlw	0
  2800  002312  0100               	movlb	0	; () banked
  2801  002314  6F8C               	movwf	?___ftmul& (0+255),b
  2802  002316  0E00               	movlw	0
  2803  002318  0100               	movlb	0	; () banked
  2804  00231A  6F8D               	movwf	(?___ftmul+1)& (0+255),b
  2805  00231C  0E00               	movlw	0
  2806  00231E  0100               	movlb	0	; () banked
  2807  002320  6F8E               	movwf	(?___ftmul+2)& (0+255),b
  2808                           
  2809                           ; BSR set to: 0
  2810  002322  0012               	return	
  2811  002324                     l4292:
  2812                           
  2813                           ; BSR set to: 0
  2814  002324  0100               	movlb	0	; () banked
  2815  002326  519A               	movf	___ftmul@sign& (0+255),w,b
  2816  002328  0F7B               	addlw	123
  2817  00232A  0100               	movlb	0	; () banked
  2818  00232C  2795               	addwf	___ftmul@exp& (0+255),f,b
  2819                           
  2820                           ; BSR set to: 0
  2821  00232E  C08E  F09A         	movff	___ftmul@f1+2,___ftmul@sign
  2822  002332  0100               	movlb	0	; () banked
  2823  002334  5191               	movf	(___ftmul@f2+2)& (0+255),w,b
  2824  002336  0100               	movlb	0	; () banked
  2825  002338  1B9A               	xorwf	___ftmul@sign& (0+255),f,b
  2826  00233A  0E80               	movlw	128
  2827  00233C  0100               	movlb	0	; () banked
  2828  00233E  179A               	andwf	___ftmul@sign& (0+255),f,b
  2829                           
  2830                           ; BSR set to: 0
  2831  002340  0100               	movlb	0	; () banked
  2832  002342  8F8D               	bsf	(___ftmul@f1+1)& (0+255),7,b
  2833                           
  2834                           ; BSR set to: 0
  2835  002344  0100               	movlb	0	; () banked
  2836  002346  8F90               	bsf	(___ftmul@f2+1)& (0+255),7,b
  2837                           
  2838                           ; BSR set to: 0
  2839  002348  0EFF               	movlw	255
  2840  00234A  0100               	movlb	0	; () banked
  2841  00234C  178F               	andwf	___ftmul@f2& (0+255),f,b
  2842  00234E  0EFF               	movlw	255
  2843  002350  0100               	movlb	0	; () banked
  2844  002352  1790               	andwf	(___ftmul@f2+1)& (0+255),f,b
  2845  002354  0E00               	movlw	0
  2846  002356  0100               	movlb	0	; () banked
  2847  002358  1791               	andwf	(___ftmul@f2+2)& (0+255),f,b
  2848                           
  2849                           ; BSR set to: 0
  2850  00235A  0E00               	movlw	0
  2851  00235C  0100               	movlb	0	; () banked
  2852  00235E  6F96               	movwf	___ftmul@f3_as_product& (0+255),b
  2853  002360  0E00               	movlw	0
  2854  002362  0100               	movlb	0	; () banked
  2855  002364  6F97               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  2856  002366  0E00               	movlw	0
  2857  002368  0100               	movlb	0	; () banked
  2858  00236A  6F98               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  2859                           
  2860                           ; BSR set to: 0
  2861  00236C  0E07               	movlw	7
  2862  00236E  0100               	movlb	0	; () banked
  2863  002370  6F99               	movwf	___ftmul@cntr& (0+255),b
  2864  002372  D000               	goto	l4306
  2865  002374                     l4306:
  2866                           
  2867                           ; BSR set to: 0
  2868  002374  0100               	movlb	0	; () banked
  2869  002376  A18C               	btfss	___ftmul@f1& (0+255),0,b
  2870  002378  D00D               	goto	l4310
  2871                           
  2872                           ; BSR set to: 0
  2873  00237A  0100               	movlb	0	; () banked
  2874  00237C  518F               	movf	___ftmul@f2& (0+255),w,b
  2875  00237E  0100               	movlb	0	; () banked
  2876  002380  2796               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2877  002382  0100               	movlb	0	; () banked
  2878  002384  5190               	movf	(___ftmul@f2+1)& (0+255),w,b
  2879  002386  0100               	movlb	0	; () banked
  2880  002388  2397               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2881  00238A  0100               	movlb	0	; () banked
  2882  00238C  5191               	movf	(___ftmul@f2+2)& (0+255),w,b
  2883  00238E  0100               	movlb	0	; () banked
  2884  002390  2398               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2885  002392  D000               	goto	l4310
  2886  002394                     l4310:
  2887                           
  2888                           ; BSR set to: 0
  2889  002394  0100               	movlb	0	; () banked
  2890  002396  90D8               	bcf	status,0,c
  2891  002398  338E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2892  00239A  338D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2893  00239C  338C               	rrcf	___ftmul@f1& (0+255),f,b
  2894  00239E  0100               	movlb	0	; () banked
  2895  0023A0  90D8               	bcf	status,0,c
  2896  0023A2  378F               	rlcf	___ftmul@f2& (0+255),f,b
  2897  0023A4  3790               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  2898  0023A6  3791               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  2899                           
  2900                           ; BSR set to: 0
  2901  0023A8  0100               	movlb	0	; () banked
  2902  0023AA  2F99               	decfsz	___ftmul@cntr& (0+255),f,b
  2903  0023AC  D7E3               	goto	l4306
  2904  0023AE  D000               	goto	l4314
  2905  0023B0                     l4314:
  2906                           
  2907                           ; BSR set to: 0
  2908  0023B0  0E09               	movlw	9
  2909  0023B2  0100               	movlb	0	; () banked
  2910  0023B4  6F99               	movwf	___ftmul@cntr& (0+255),b
  2911  0023B6  D000               	goto	l4316
  2912  0023B8                     l4316:
  2913                           
  2914                           ; BSR set to: 0
  2915  0023B8  0100               	movlb	0	; () banked
  2916  0023BA  A18C               	btfss	___ftmul@f1& (0+255),0,b
  2917  0023BC  D00D               	goto	l4320
  2918                           
  2919                           ; BSR set to: 0
  2920  0023BE  0100               	movlb	0	; () banked
  2921  0023C0  518F               	movf	___ftmul@f2& (0+255),w,b
  2922  0023C2  0100               	movlb	0	; () banked
  2923  0023C4  2796               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2924  0023C6  0100               	movlb	0	; () banked
  2925  0023C8  5190               	movf	(___ftmul@f2+1)& (0+255),w,b
  2926  0023CA  0100               	movlb	0	; () banked
  2927  0023CC  2397               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2928  0023CE  0100               	movlb	0	; () banked
  2929  0023D0  5191               	movf	(___ftmul@f2+2)& (0+255),w,b
  2930  0023D2  0100               	movlb	0	; () banked
  2931  0023D4  2398               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2932  0023D6  D000               	goto	l4320
  2933  0023D8                     l4320:
  2934                           
  2935                           ; BSR set to: 0
  2936  0023D8  0100               	movlb	0	; () banked
  2937  0023DA  90D8               	bcf	status,0,c
  2938  0023DC  338E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2939  0023DE  338D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2940  0023E0  338C               	rrcf	___ftmul@f1& (0+255),f,b
  2941  0023E2  0100               	movlb	0	; () banked
  2942  0023E4  90D8               	bcf	status,0,c
  2943  0023E6  3398               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2944  0023E8  3397               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2945  0023EA  3396               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2946                           
  2947                           ; BSR set to: 0
  2948  0023EC  0100               	movlb	0	; () banked
  2949  0023EE  2F99               	decfsz	___ftmul@cntr& (0+255),f,b
  2950  0023F0  D7E3               	goto	l4316
  2951  0023F2  D000               	goto	l4324
  2952  0023F4                     l4324:
  2953                           
  2954                           ; BSR set to: 0
  2955  0023F4  C096  F072         	movff	___ftmul@f3_as_product,___ftpack@arg
  2956  0023F8  C097  F073         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2957  0023FC  C098  F074         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2958  002400  C095  F075         	movff	___ftmul@exp,___ftpack@exp
  2959  002404  C09A  F076         	movff	___ftmul@sign,___ftpack@sign
  2960  002408  EC60  F013         	call	___ftpack	;wreg free
  2961  00240C  C072  F08C         	movff	?___ftpack,?___ftmul
  2962  002410  C073  F08D         	movff	?___ftpack+1,?___ftmul+1
  2963  002414  C074  F08E         	movff	?___ftpack+2,?___ftmul+2
  2964  002418  0012               	return	
  2965  00241A  0012               	return		;funcret
  2966  00241C                     __end_of___ftmul:
  2967                           	opt stack 0
  2968                           tblptru	equ	0xFF8
  2969                           tblptrh	equ	0xFF7
  2970                           tblptrl	equ	0xFF6
  2971                           tablat	equ	0xFF5
  2972                           prodh	equ	0xFF4
  2973                           prodl	equ	0xFF3
  2974                           intcon	equ	0xFF2
  2975                           postinc0	equ	0xFEE
  2976                           wreg	equ	0xFE8
  2977                           indf1	equ	0xFE7
  2978                           postdec1	equ	0xFE5
  2979                           fsr1h	equ	0xFE2
  2980                           fsr1l	equ	0xFE1
  2981                           indf2	equ	0xFDF
  2982                           postinc2	equ	0xFDE
  2983                           fsr2h	equ	0xFDA
  2984                           fsr2l	equ	0xFD9
  2985                           status	equ	0xFD8
  2986                           
  2987 ;; *************** function ___ftdiv *****************
  2988 ;; Defined at:
  2989 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;  f1              3   29[BANK0 ] float 
  2992 ;;  f2              3   32[BANK0 ] float 
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  f3              3   39[BANK0 ] float 
  2995 ;;  sign            1   43[BANK0 ] unsigned char 
  2996 ;;  exp             1   42[BANK0 ] unsigned char 
  2997 ;;  cntr            1   38[BANK0 ] unsigned char 
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  3   29[BANK0 ] float 
  3000 ;; Registers used:
  3001 ;;		wreg, status,2, status,0, cstack
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3007 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3010 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;Total ram usage:       15 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; Hardware stack levels required when called:    5
  3014 ;; This function calls:
  3015 ;;		___ftpack
  3016 ;; This function is called by:
  3017 ;;		_ReadVoltage
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text11
  3022  00241C                     __ptext11:
  3023                           	opt stack 0
  3024  00241C                     ___ftdiv:
  3025                           	opt stack 24
  3026                           
  3027                           ;incstack = 0
  3028  00241C  C07F  F083         	movff	___ftdiv@f1+2,??___ftdiv
  3029  002420  0100               	movlb	0	; () banked
  3030  002422  6B84               	clrf	(??___ftdiv+1)& (0+255),b
  3031  002424  6B85               	clrf	(??___ftdiv+2)& (0+255),b
  3032  002426  0100               	movlb	0	; () banked
  3033  002428  357E               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3034  00242A  0100               	movlb	0	; () banked
  3035  00242C  3783               	rlcf	??___ftdiv& (0+255),f,b
  3036  00242E  E301               	bnc	u3761
  3037  002430  8184               	bsf	(??___ftdiv+1)& (0+255),0,b
  3038  002432                     u3761:
  3039  002432  0100               	movlb	0	; () banked
  3040  002434  5183               	movf	??___ftdiv& (0+255),w,b
  3041  002436  0100               	movlb	0	; () banked
  3042  002438  6F8A               	movwf	___ftdiv@exp& (0+255),b
  3043  00243A  0100               	movlb	0	; () banked
  3044  00243C  518A               	movf	___ftdiv@exp& (0+255),w,b
  3045  00243E  A4D8               	btfss	status,2,c
  3046  002440  D00A               	goto	l4240
  3047                           
  3048                           ; BSR set to: 0
  3049  002442  0E00               	movlw	0
  3050  002444  0100               	movlb	0	; () banked
  3051  002446  6F7D               	movwf	?___ftdiv& (0+255),b
  3052  002448  0E00               	movlw	0
  3053  00244A  0100               	movlb	0	; () banked
  3054  00244C  6F7E               	movwf	(?___ftdiv+1)& (0+255),b
  3055  00244E  0E00               	movlw	0
  3056  002450  0100               	movlb	0	; () banked
  3057  002452  6F7F               	movwf	(?___ftdiv+2)& (0+255),b
  3058                           
  3059                           ; BSR set to: 0
  3060  002454  0012               	return	
  3061  002456                     l4240:
  3062                           
  3063                           ; BSR set to: 0
  3064  002456  C082  F083         	movff	___ftdiv@f2+2,??___ftdiv
  3065  00245A  0100               	movlb	0	; () banked
  3066  00245C  6B84               	clrf	(??___ftdiv+1)& (0+255),b
  3067  00245E  6B85               	clrf	(??___ftdiv+2)& (0+255),b
  3068  002460  0100               	movlb	0	; () banked
  3069  002462  3581               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3070  002464  0100               	movlb	0	; () banked
  3071  002466  3783               	rlcf	??___ftdiv& (0+255),f,b
  3072  002468  E301               	bnc	u3781
  3073  00246A  8184               	bsf	(??___ftdiv+1)& (0+255),0,b
  3074  00246C                     u3781:
  3075  00246C  0100               	movlb	0	; () banked
  3076  00246E  5183               	movf	??___ftdiv& (0+255),w,b
  3077  002470  0100               	movlb	0	; () banked
  3078  002472  6F8B               	movwf	___ftdiv@sign& (0+255),b
  3079  002474  0100               	movlb	0	; () banked
  3080  002476  518B               	movf	___ftdiv@sign& (0+255),w,b
  3081  002478  A4D8               	btfss	status,2,c
  3082  00247A  D00A               	goto	l4246
  3083                           
  3084                           ; BSR set to: 0
  3085  00247C  0E00               	movlw	0
  3086  00247E  0100               	movlb	0	; () banked
  3087  002480  6F7D               	movwf	?___ftdiv& (0+255),b
  3088  002482  0E00               	movlw	0
  3089  002484  0100               	movlb	0	; () banked
  3090  002486  6F7E               	movwf	(?___ftdiv+1)& (0+255),b
  3091  002488  0E00               	movlw	0
  3092  00248A  0100               	movlb	0	; () banked
  3093  00248C  6F7F               	movwf	(?___ftdiv+2)& (0+255),b
  3094                           
  3095                           ; BSR set to: 0
  3096  00248E  0012               	return	
  3097  002490                     l4246:
  3098                           
  3099                           ; BSR set to: 0
  3100  002490  0E00               	movlw	0
  3101  002492  0100               	movlb	0	; () banked
  3102  002494  6F87               	movwf	___ftdiv@f3& (0+255),b
  3103  002496  0E00               	movlw	0
  3104  002498  0100               	movlb	0	; () banked
  3105  00249A  6F88               	movwf	(___ftdiv@f3+1)& (0+255),b
  3106  00249C  0E00               	movlw	0
  3107  00249E  0100               	movlb	0	; () banked
  3108  0024A0  6F89               	movwf	(___ftdiv@f3+2)& (0+255),b
  3109                           
  3110                           ; BSR set to: 0
  3111  0024A2  0100               	movlb	0	; () banked
  3112  0024A4  518B               	movf	___ftdiv@sign& (0+255),w,b
  3113  0024A6  0F89               	addlw	137
  3114  0024A8  0100               	movlb	0	; () banked
  3115  0024AA  5F8A               	subwf	___ftdiv@exp& (0+255),f,b
  3116                           
  3117                           ; BSR set to: 0
  3118  0024AC  C07F  F08B         	movff	___ftdiv@f1+2,___ftdiv@sign
  3119                           
  3120                           ; BSR set to: 0
  3121  0024B0  0100               	movlb	0	; () banked
  3122  0024B2  5182               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3123  0024B4  0100               	movlb	0	; () banked
  3124  0024B6  1B8B               	xorwf	___ftdiv@sign& (0+255),f,b
  3125                           
  3126                           ; BSR set to: 0
  3127  0024B8  0E80               	movlw	128
  3128  0024BA  0100               	movlb	0	; () banked
  3129  0024BC  178B               	andwf	___ftdiv@sign& (0+255),f,b
  3130                           
  3131                           ; BSR set to: 0
  3132  0024BE  0100               	movlb	0	; () banked
  3133  0024C0  8F7E               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3134                           
  3135                           ; BSR set to: 0
  3136  0024C2  0EFF               	movlw	255
  3137  0024C4  0100               	movlb	0	; () banked
  3138  0024C6  177D               	andwf	___ftdiv@f1& (0+255),f,b
  3139  0024C8  0EFF               	movlw	255
  3140  0024CA  0100               	movlb	0	; () banked
  3141  0024CC  177E               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3142  0024CE  0E00               	movlw	0
  3143  0024D0  0100               	movlb	0	; () banked
  3144  0024D2  177F               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3145                           
  3146                           ; BSR set to: 0
  3147  0024D4  0100               	movlb	0	; () banked
  3148  0024D6  8F81               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3149                           
  3150                           ; BSR set to: 0
  3151  0024D8  0EFF               	movlw	255
  3152  0024DA  0100               	movlb	0	; () banked
  3153  0024DC  1780               	andwf	___ftdiv@f2& (0+255),f,b
  3154  0024DE  0EFF               	movlw	255
  3155  0024E0  0100               	movlb	0	; () banked
  3156  0024E2  1781               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3157  0024E4  0E00               	movlw	0
  3158  0024E6  0100               	movlb	0	; () banked
  3159  0024E8  1782               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3160                           
  3161                           ; BSR set to: 0
  3162  0024EA  0E18               	movlw	24
  3163  0024EC  0100               	movlb	0	; () banked
  3164  0024EE  6F86               	movwf	___ftdiv@cntr& (0+255),b
  3165  0024F0  D000               	goto	l4266
  3166  0024F2                     l4266:
  3167                           
  3168                           ; BSR set to: 0
  3169  0024F2  0100               	movlb	0	; () banked
  3170  0024F4  90D8               	bcf	status,0,c
  3171  0024F6  3787               	rlcf	___ftdiv@f3& (0+255),f,b
  3172  0024F8  3788               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3173  0024FA  3789               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3174                           
  3175                           ; BSR set to: 0
  3176  0024FC  0100               	movlb	0	; () banked
  3177  0024FE  5180               	movf	___ftdiv@f2& (0+255),w,b
  3178  002500  0100               	movlb	0	; () banked
  3179  002502  5D7D               	subwf	___ftdiv@f1& (0+255),w,b
  3180  002504  0100               	movlb	0	; () banked
  3181  002506  5181               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3182  002508  0100               	movlb	0	; () banked
  3183  00250A  597E               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3184  00250C  0100               	movlb	0	; () banked
  3185  00250E  5182               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3186  002510  0100               	movlb	0	; () banked
  3187  002512  597F               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3188  002514  A0D8               	btfss	status,0,c
  3189  002516  D00E               	goto	l1288
  3190                           
  3191                           ; BSR set to: 0
  3192  002518  0100               	movlb	0	; () banked
  3193  00251A  5180               	movf	___ftdiv@f2& (0+255),w,b
  3194  00251C  0100               	movlb	0	; () banked
  3195  00251E  5F7D               	subwf	___ftdiv@f1& (0+255),f,b
  3196  002520  0100               	movlb	0	; () banked
  3197  002522  5181               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3198  002524  0100               	movlb	0	; () banked
  3199  002526  5B7E               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3200  002528  0100               	movlb	0	; () banked
  3201  00252A  5182               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3202  00252C  0100               	movlb	0	; () banked
  3203  00252E  5B7F               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3204                           
  3205                           ; BSR set to: 0
  3206  002530  0100               	movlb	0	; () banked
  3207  002532  8187               	bsf	___ftdiv@f3& (0+255),0,b
  3208  002534                     l1288:
  3209                           
  3210                           ; BSR set to: 0
  3211  002534  0100               	movlb	0	; () banked
  3212  002536  90D8               	bcf	status,0,c
  3213  002538  377D               	rlcf	___ftdiv@f1& (0+255),f,b
  3214  00253A  377E               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3215  00253C  377F               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3216                           
  3217                           ; BSR set to: 0
  3218  00253E  0100               	movlb	0	; () banked
  3219  002540  2F86               	decfsz	___ftdiv@cntr& (0+255),f,b
  3220  002542  D7D7               	goto	l4266
  3221  002544  D000               	goto	l4276
  3222  002546                     l4276:
  3223                           
  3224                           ; BSR set to: 0
  3225  002546  C087  F072         	movff	___ftdiv@f3,___ftpack@arg
  3226  00254A  C088  F073         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3227  00254E  C089  F074         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3228  002552  C08A  F075         	movff	___ftdiv@exp,___ftpack@exp
  3229  002556  C08B  F076         	movff	___ftdiv@sign,___ftpack@sign
  3230  00255A  EC60  F013         	call	___ftpack	;wreg free
  3231  00255E  C072  F07D         	movff	?___ftpack,?___ftdiv
  3232  002562  C073  F07E         	movff	?___ftpack+1,?___ftdiv+1
  3233  002566  C074  F07F         	movff	?___ftpack+2,?___ftdiv+2
  3234  00256A  0012               	return	
  3235  00256C  0012               	return		;funcret
  3236  00256E                     __end_of___ftdiv:
  3237                           	opt stack 0
  3238                           tblptru	equ	0xFF8
  3239                           tblptrh	equ	0xFF7
  3240                           tblptrl	equ	0xFF6
  3241                           tablat	equ	0xFF5
  3242                           prodh	equ	0xFF4
  3243                           prodl	equ	0xFF3
  3244                           intcon	equ	0xFF2
  3245                           postinc0	equ	0xFEE
  3246                           wreg	equ	0xFE8
  3247                           indf1	equ	0xFE7
  3248                           postdec1	equ	0xFE5
  3249                           fsr1h	equ	0xFE2
  3250                           fsr1l	equ	0xFE1
  3251                           indf2	equ	0xFDF
  3252                           postinc2	equ	0xFDE
  3253                           fsr2h	equ	0xFDA
  3254                           fsr2l	equ	0xFD9
  3255                           status	equ	0xFD8
  3256                           
  3257 ;; *************** function _VoltageDividerON *****************
  3258 ;; Defined at:
  3259 ;;		line 146 in file "ADC.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;		None
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;		None               void
  3266 ;; Registers used:
  3267 ;;		status,2, status,0
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;Total ram usage:        0 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    4
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_ReadVoltage
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text12
  3288  0039FE                     __ptext12:
  3289                           	opt stack 0
  3290  0039FE                     _VoltageDividerON:
  3291                           	opt stack 25
  3292                           
  3293                           ;ADC.c: 148: TRISBbits.TRISB5 = 0;
  3294                           
  3295                           ;incstack = 0
  3296  0039FE  9A93               	bcf	3987,5,c	;volatile
  3297                           
  3298                           ;ADC.c: 149: LATB &= ~0x20;
  3299  003A00  9A8A               	bcf	3978,5,c	;volatile
  3300  003A02  0012               	return		;funcret
  3301  003A04                     __end_of_VoltageDividerON:
  3302                           	opt stack 0
  3303                           tblptru	equ	0xFF8
  3304                           tblptrh	equ	0xFF7
  3305                           tblptrl	equ	0xFF6
  3306                           tablat	equ	0xFF5
  3307                           prodh	equ	0xFF4
  3308                           prodl	equ	0xFF3
  3309                           intcon	equ	0xFF2
  3310                           postinc0	equ	0xFEE
  3311                           wreg	equ	0xFE8
  3312                           indf1	equ	0xFE7
  3313                           postdec1	equ	0xFE5
  3314                           fsr1h	equ	0xFE2
  3315                           fsr1l	equ	0xFE1
  3316                           indf2	equ	0xFDF
  3317                           postinc2	equ	0xFDE
  3318                           fsr2h	equ	0xFDA
  3319                           fsr2l	equ	0xFD9
  3320                           status	equ	0xFD8
  3321                           
  3322 ;; *************** function _VoltageDividerOFF *****************
  3323 ;; Defined at:
  3324 ;;		line 157 in file "ADC.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;		None               void
  3331 ;; Registers used:
  3332 ;;		None
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;Total ram usage:        0 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    4
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		_ReadVoltage
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text13
  3353  003A04                     __ptext13:
  3354                           	opt stack 0
  3355  003A04                     _VoltageDividerOFF:
  3356                           	opt stack 25
  3357                           
  3358                           ;ADC.c: 159: TRISBbits.TRISB5 = 1;
  3359                           
  3360                           ;incstack = 0
  3361  003A04  8A93               	bsf	3987,5,c	;volatile
  3362  003A06  0012               	return		;funcret
  3363  003A08                     __end_of_VoltageDividerOFF:
  3364                           	opt stack 0
  3365                           tblptru	equ	0xFF8
  3366                           tblptrh	equ	0xFF7
  3367                           tblptrl	equ	0xFF6
  3368                           tablat	equ	0xFF5
  3369                           prodh	equ	0xFF4
  3370                           prodl	equ	0xFF3
  3371                           intcon	equ	0xFF2
  3372                           postinc0	equ	0xFEE
  3373                           wreg	equ	0xFE8
  3374                           indf1	equ	0xFE7
  3375                           postdec1	equ	0xFE5
  3376                           fsr1h	equ	0xFE2
  3377                           fsr1l	equ	0xFE1
  3378                           indf2	equ	0xFDF
  3379                           postinc2	equ	0xFDE
  3380                           fsr2h	equ	0xFDA
  3381                           fsr2l	equ	0xFD9
  3382                           status	equ	0xFD8
  3383                           
  3384 ;; *************** function _InternalADC_Read *****************
  3385 ;; Defined at:
  3386 ;;		line 82 in file "ADC.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  channel         1    wreg     unsigned char 
  3389 ;;  ADCcounts       2   28[BANK0 ] PTR unsigned int 
  3390 ;;		 -> ReadVoltage@temp(2), 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  channel         1   33[BANK0 ] unsigned char 
  3393 ;;  AnaChanSel      1   32[BANK0 ] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      unsigned char 
  3396 ;; Registers used:
  3397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3403 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3404 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3405 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3407 ;;Total ram usage:        6 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    5
  3410 ;; This function calls:
  3411 ;;		_delayUS
  3412 ;; This function is called by:
  3413 ;;		_ReadVoltage
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text14
  3418  002F38                     __ptext14:
  3419                           	opt stack 0
  3420  002F38                     _InternalADC_Read:
  3421                           	opt stack 24
  3422                           
  3423                           ;incstack = 0
  3424                           ;InternalADC_Read@channel stored from wreg
  3425  002F38  0100               	movlb	0	; () banked
  3426  002F3A  6F81               	movwf	InternalADC_Read@channel& (0+255),b
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;ADC.c: 84: unsigned char AnaChanSel = 1;
  3430  002F3C  0E01               	movlw	1
  3431  002F3E  0100               	movlb	0	; () banked
  3432  002F40  6F80               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;ADC.c: 85: if(channel > 0b1100)
  3436  002F42  0E0C               	movlw	12
  3437  002F44  0100               	movlb	0	; () banked
  3438  002F46  6581               	cpfsgt	InternalADC_Read@channel& (0+255),b
  3439  002F48  D00A               	goto	l4186
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;ADC.c: 86: {
  3443                           ;ADC.c: 87: *ADCcounts = 0;
  3444  002F4A  C07C  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
  3445  002F4E  C07D  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
  3446  002F52  0E00               	movlw	0
  3447  002F54  6EDE               	movwf	postinc2,c
  3448  002F56  0E00               	movlw	0
  3449  002F58  6EDD               	movwf	postdec2,c
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;ADC.c: 88: return 0;
  3453  002F5A  0E00               	movlw	0
  3454                           
  3455                           ; BSR set to: 0
  3456  002F5C  0012               	return	
  3457  002F5E                     l4186:
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;ADC.c: 89: }
  3461                           ;ADC.c: 90: if(channel > 1)
  3462  002F5E  0E01               	movlw	1
  3463  002F60  0100               	movlb	0	; () banked
  3464  002F62  6581               	cpfsgt	InternalADC_Read@channel& (0+255),b
  3465  002F64  D001               	goto	l4190
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;ADC.c: 93: }
  3469  002F66  D009               	goto	l4194
  3470  002F68                     l4190:
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;ADC.c: 94: else if (channel == 0)
  3474  002F68  0100               	movlb	0	; () banked
  3475  002F6A  5181               	movf	InternalADC_Read@channel& (0+255),w,b
  3476  002F6C  0100               	movlb	0	; () banked
  3477  002F6E  A4D8               	btfss	status,2,c
  3478  002F70  D004               	goto	l4194
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;ADC.c: 95: {
  3482                           ;ADC.c: 96: AnaChanSel = 0;
  3483  002F72  0E00               	movlw	0
  3484  002F74  0100               	movlb	0	; () banked
  3485  002F76  6F80               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
  3486                           
  3487                           ; BSR set to: 0
  3488  002F78  D000               	goto	l4194
  3489  002F7A                     l4194:
  3490                           
  3491                           ; BSR set to: 0
  3492                           ;ADC.c: 97: }
  3493                           ;ADC.c: 99: ADCON0 |= (AnaChanSel << 2);
  3494  002F7A  0100               	movlb	0	; () banked
  3495  002F7C  4580               	rlncf	InternalADC_Read@AnaChanSel& (0+255),w,b
  3496  002F7E  46E8               	rlncf	wreg,f,c
  3497  002F80  0BFC               	andlw	252
  3498  002F82  12C2               	iorwf	4034,f,c	;volatile
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;ADC.c: 101: ADCON1bits.VCFG0 = 0;
  3502  002F84  98C1               	bcf	4033,4,c	;volatile
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;ADC.c: 102: ADCON1bits.VCFG1 = 0;
  3506  002F86  9AC1               	bcf	4033,5,c	;volatile
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;ADC.c: 104: (ADCON0bits.ADON = 1);
  3510  002F88  80C2               	bsf	4034,0,c	;volatile
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;ADC.c: 105: delayUS(50);
  3514  002F8A  0E32               	movlw	50
  3515  002F8C  0100               	movlb	0	; () banked
  3516  002F8E  6F72               	movwf	delayUS@US& (0+255),b
  3517  002F90  0E00               	movlw	0
  3518  002F92  6F73               	movwf	(delayUS@US+1)& (0+255),b
  3519  002F94  0E00               	movlw	0
  3520  002F96  6F74               	movwf	(delayUS@US+2)& (0+255),b
  3521  002F98  0E00               	movlw	0
  3522  002F9A  6F75               	movwf	(delayUS@US+3)& (0+255),b
  3523  002F9C  EC97  F019         	call	_delayUS	;wreg free
  3524                           
  3525                           ;ADC.c: 107: ADCON0bits.GO = 1;
  3526  002FA0  82C2               	bsf	4034,1,c	;volatile
  3527                           
  3528                           ;ADC.c: 108: while(ADCON0bits.GO);
  3529  002FA2  D000               	goto	l296
  3530  002FA4                     l296:
  3531  002FA4  B2C2               	btfsc	4034,1,c	;volatile
  3532  002FA6  D7FE               	goto	l296
  3533                           
  3534                           ;ADC.c: 109: (ADCON0bits.ADON = 0);
  3535  002FA8  90C2               	bcf	4034,0,c	;volatile
  3536                           
  3537                           ;ADC.c: 111: *ADCcounts = ((ADRESH << 8) + ADRESL);
  3538  002FAA  50C3               	movf	4035,w,c	;volatile
  3539  002FAC  CFC4 F07E          	movff	4036,??_InternalADC_Read	;volatile
  3540  002FB0  0100               	movlb	0	; () banked
  3541  002FB2  6B7F               	clrf	(??_InternalADC_Read+1)& (0+255),b
  3542  002FB4  C07E  F07F         	movff	??_InternalADC_Read,??_InternalADC_Read+1
  3543  002FB8  0100               	movlb	0	; () banked
  3544  002FBA  6B7E               	clrf	??_InternalADC_Read& (0+255),b
  3545  002FBC  0100               	movlb	0	; () banked
  3546  002FBE  277E               	addwf	??_InternalADC_Read& (0+255),f,b
  3547  002FC0  0E00               	movlw	0
  3548  002FC2  237F               	addwfc	(??_InternalADC_Read+1)& (0+255),f,b
  3549  002FC4  C07C  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
  3550  002FC8  C07D  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
  3551  002FCC  C07E  FFDE         	movff	??_InternalADC_Read,postinc2
  3552  002FD0  C07F  FFDD         	movff	??_InternalADC_Read+1,postdec2
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;ADC.c: 112: return 1;
  3556  002FD4  0E01               	movlw	1
  3557  002FD6  0012               	return	
  3558                           
  3559                           ; BSR set to: 0
  3560                           
  3561                           ; BSR set to: 0
  3562  002FD8  0012               	return		;funcret
  3563  002FDA                     __end_of_InternalADC_Read:
  3564                           	opt stack 0
  3565                           tblptru	equ	0xFF8
  3566                           tblptrh	equ	0xFF7
  3567                           tblptrl	equ	0xFF6
  3568                           tablat	equ	0xFF5
  3569                           prodh	equ	0xFF4
  3570                           prodl	equ	0xFF3
  3571                           intcon	equ	0xFF2
  3572                           postinc0	equ	0xFEE
  3573                           wreg	equ	0xFE8
  3574                           indf1	equ	0xFE7
  3575                           postdec1	equ	0xFE5
  3576                           fsr1h	equ	0xFE2
  3577                           fsr1l	equ	0xFE1
  3578                           indf2	equ	0xFDF
  3579                           postinc2	equ	0xFDE
  3580                           postdec2	equ	0xFDD
  3581                           fsr2h	equ	0xFDA
  3582                           fsr2l	equ	0xFD9
  3583                           status	equ	0xFD8
  3584                           
  3585 ;; *************** function _Init_System *****************
  3586 ;; Defined at:
  3587 ;;		line 98 in file "user.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;		None
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;		None
  3592 ;; Return value:  Size  Location     Type
  3593 ;;		None               void
  3594 ;; Registers used:
  3595 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3605 ;;Total ram usage:        0 bytes
  3606 ;; Hardware stack levels used:    1
  3607 ;; Hardware stack levels required when called:   11
  3608 ;; This function calls:
  3609 ;;		_InitADC
  3610 ;;		_InitBluetooth
  3611 ;;		_InitIR
  3612 ;;		_InitTimers
  3613 ;;		_InitUART
  3614 ;;		_SyncEEPROMToGlobal
  3615 ;;		_cleanBuffer
  3616 ;; This function is called by:
  3617 ;;		_main
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text15
  3622  003512                     __ptext15:
  3623                           	opt stack 0
  3624  003512                     _Init_System:
  3625                           	opt stack 19
  3626                           
  3627                           ;user.c: 100: cleanBuffer(&ReceivedString, 255);
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;incstack = 0
  3631  003512  0E00               	movlw	low _ReceivedString
  3632  003514  0100               	movlb	0	; () banked
  3633  003516  6F72               	movwf	cleanBuffer@data& (0+255),b
  3634  003518  0E03               	movlw	high _ReceivedString
  3635  00351A  0100               	movlb	0	; () banked
  3636  00351C  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
  3637  00351E  0E00               	movlw	0
  3638  003520  0100               	movlb	0	; () banked
  3639  003522  6F75               	movwf	(cleanBuffer@count+1)& (0+255),b
  3640  003524  6974               	setf	cleanBuffer@count& (0+255),b
  3641  003526  EC2F  F01A         	call	_cleanBuffer	;wreg free
  3642                           
  3643                           ;user.c: 103: IPR1bits.RCIP = 0;
  3644  00352A  9A9F               	bcf	3999,5,c	;volatile
  3645                           
  3646                           ;user.c: 104: INTCON2bits.RBIP = 1;
  3647  00352C  80F1               	bsf	intcon2,0,c	;volatile
  3648                           
  3649                           ;user.c: 105: INTCON2bits.TMR0IP = 1;
  3650  00352E  84F1               	bsf	intcon2,2,c	;volatile
  3651                           
  3652                           ;user.c: 106: IPR1bits.TMR2IP = 1;
  3653  003530  829F               	bsf	3999,1,c	;volatile
  3654                           
  3655                           ;user.c: 107: IPR1bits.TMR1IP = 0;
  3656  003532  909F               	bcf	3999,0,c	;volatile
  3657                           
  3658                           ;user.c: 108: IPR2bits.TMR3IP = 1;
  3659  003534  82A2               	bsf	4002,1,c	;volatile
  3660                           
  3661                           ;user.c: 111: RCONbits.IPEN = 1;
  3662  003536  8ED0               	bsf	4048,7,c	;volatile
  3663                           
  3664                           ;user.c: 112: INTCONbits.PEIE = 1;
  3665  003538  8CF2               	bsf	intcon,6,c	;volatile
  3666                           
  3667                           ;user.c: 113: INTCONbits.GIE = 1;
  3668  00353A  8EF2               	bsf	intcon,7,c	;volatile
  3669                           
  3670                           ;user.c: 115: SyncEEPROMToGlobal();
  3671  00353C  EC16  F01C         	call	_SyncEEPROMToGlobal	;wreg free
  3672                           
  3673                           ;user.c: 116: InitADC();
  3674  003540  EC70  F01C         	call	_InitADC	;wreg free
  3675                           
  3676                           ;user.c: 117: InitIR();
  3677  003544  ECDE  F01A         	call	_InitIR	;wreg free
  3678                           
  3679                           ;user.c: 118: InitUART(115200);
  3680  003548  0E00               	movlw	0
  3681  00354A  0100               	movlb	0	; () banked
  3682  00354C  6F9C               	movwf	InitUART@Baud& (0+255),b
  3683  00354E  0EC2               	movlw	194
  3684  003550  6F9D               	movwf	(InitUART@Baud+1)& (0+255),b
  3685  003552  0E01               	movlw	1
  3686  003554  6F9E               	movwf	(InitUART@Baud+2)& (0+255),b
  3687  003556  0E00               	movlw	0
  3688  003558  6F9F               	movwf	(InitUART@Baud+3)& (0+255),b
  3689  00355A  ECF0  F013         	call	_InitUART	;wreg free
  3690                           
  3691                           ;user.c: 119: InitBluetooth();
  3692  00355E  ECB4  F01A         	call	_InitBluetooth	;wreg free
  3693                           
  3694                           ;user.c: 120: InitTimers();
  3695  003562  EC86  F01C         	call	_InitTimers	;wreg free
  3696  003566  0012               	return		;funcret
  3697  003568                     __end_of_Init_System:
  3698                           	opt stack 0
  3699                           tblptru	equ	0xFF8
  3700                           tblptrh	equ	0xFF7
  3701                           tblptrl	equ	0xFF6
  3702                           tablat	equ	0xFF5
  3703                           prodh	equ	0xFF4
  3704                           prodl	equ	0xFF3
  3705                           intcon	equ	0xFF2
  3706                           intcon2	equ	0xFF1
  3707                           postinc0	equ	0xFEE
  3708                           wreg	equ	0xFE8
  3709                           indf1	equ	0xFE7
  3710                           postdec1	equ	0xFE5
  3711                           fsr1h	equ	0xFE2
  3712                           fsr1l	equ	0xFE1
  3713                           indf2	equ	0xFDF
  3714                           postinc2	equ	0xFDE
  3715                           postdec2	equ	0xFDD
  3716                           fsr2h	equ	0xFDA
  3717                           fsr2l	equ	0xFD9
  3718                           status	equ	0xFD8
  3719                           
  3720 ;; *************** function _SyncEEPROMToGlobal *****************
  3721 ;; Defined at:
  3722 ;;		line 172 in file "EEPROM.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;		None
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  Temp            5   64[BANK0 ] struct EEdata
  3727 ;; Return value:  Size  Location     Type
  3728 ;;		None               void
  3729 ;; Registers used:
  3730 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3740 ;;Total ram usage:        5 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    7
  3743 ;; This function calls:
  3744 ;;		_GetEEPROM
  3745 ;; This function is called by:
  3746 ;;		_Init_System
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text16
  3751  00382C                     __ptext16:
  3752                           	opt stack 0
  3753  00382C                     _SyncEEPROMToGlobal:
  3754                           	opt stack 22
  3755                           
  3756                           ;EEPROM.c: 174: GBLdata Temp;
  3757                           ;EEPROM.c: 176: Temp = GetEEPROM();
  3758                           
  3759                           ;incstack = 0
  3760  00382C  EC63  F01B         	call	_GetEEPROM	;wreg free
  3761  003830  EE20  F0A0         	lfsr	2,SyncEEPROMToGlobal@Temp
  3762  003834  0E04               	movlw	4
  3763  003836                     u3671:
  3764  003836  CFEB FFDB          	movff	plusw0,plusw2
  3765  00383A  06E8               	decf	wreg,f,c
  3766  00383C  E2FC               	bc	u3671
  3767                           
  3768                           ;EEPROM.c: 178: Global.BlueToothFlag = Temp.BlueToothFlag;
  3769  00383E  C0A0  F0E1         	movff	SyncEEPROMToGlobal@Temp,_Global
  3770                           
  3771                           ;EEPROM.c: 179: Global.NECcode = Temp.NECcode;
  3772  003842  C0A1  F0E2         	movff	SyncEEPROMToGlobal@Temp+1,_Global+1
  3773  003846  C0A2  F0E3         	movff	SyncEEPROMToGlobal@Temp+2,_Global+2
  3774  00384A  C0A3  F0E4         	movff	SyncEEPROMToGlobal@Temp+3,_Global+3
  3775  00384E  C0A4  F0E5         	movff	SyncEEPROMToGlobal@Temp+4,_Global+4
  3776  003852  0012               	return		;funcret
  3777  003854                     __end_of_SyncEEPROMToGlobal:
  3778                           	opt stack 0
  3779                           tblptru	equ	0xFF8
  3780                           tblptrh	equ	0xFF7
  3781                           tblptrl	equ	0xFF6
  3782                           tablat	equ	0xFF5
  3783                           prodh	equ	0xFF4
  3784                           prodl	equ	0xFF3
  3785                           intcon	equ	0xFF2
  3786                           intcon2	equ	0xFF1
  3787                           postinc0	equ	0xFEE
  3788                           plusw0	equ	0xFEB
  3789                           wreg	equ	0xFE8
  3790                           indf1	equ	0xFE7
  3791                           postdec1	equ	0xFE5
  3792                           fsr1h	equ	0xFE2
  3793                           fsr1l	equ	0xFE1
  3794                           indf2	equ	0xFDF
  3795                           postinc2	equ	0xFDE
  3796                           postdec2	equ	0xFDD
  3797                           plusw2	equ	0xFDB
  3798                           fsr2h	equ	0xFDA
  3799                           fsr2l	equ	0xFD9
  3800                           status	equ	0xFD8
  3801                           
  3802 ;; *************** function _GetEEPROM *****************
  3803 ;; Defined at:
  3804 ;;		line 118 in file "EEPROM.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;		None
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;  Temp            5   59[BANK0 ] struct EEdata
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  5   54[BANK0 ] struct EEdata
  3811 ;; Registers used:
  3812 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3818 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3822 ;;Total ram usage:       10 bytes
  3823 ;; Hardware stack levels used:    1
  3824 ;; Hardware stack levels required when called:    6
  3825 ;; This function calls:
  3826 ;;		_GetMemoryChar
  3827 ;;		_GetMemoryLong
  3828 ;; This function is called by:
  3829 ;;		_SyncEEPROMToGlobal
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	text17
  3834  0036C6                     __ptext17:
  3835                           	opt stack 0
  3836  0036C6                     _GetEEPROM:
  3837                           	opt stack 22
  3838                           
  3839                           ;EEPROM.c: 120: GBLdata Temp;
  3840                           ;EEPROM.c: 121: Temp.BlueToothFlag = GetMemoryChar(0);
  3841                           
  3842                           ;incstack = 0
  3843  0036C6  0E00               	movlw	0
  3844  0036C8  EC01  F01C         	call	_GetMemoryChar
  3845  0036CC  0100               	movlb	0	; () banked
  3846  0036CE  5175               	movf	?_GetMemoryChar& (0+255),w,b
  3847  0036D0  0100               	movlb	0	; () banked
  3848  0036D2  6F9B               	movwf	GetEEPROM@Temp& (0+255),b
  3849                           
  3850                           ;EEPROM.c: 122: Temp.NECcode = GetMemoryLong(1);
  3851  0036D4  0E01               	movlw	1
  3852  0036D6  ECA0  F010         	call	_GetMemoryLong
  3853  0036DA  C075  F09C         	movff	?_GetMemoryLong,GetEEPROM@Temp+1
  3854  0036DE  C076  F09D         	movff	?_GetMemoryLong+1,GetEEPROM@Temp+2
  3855  0036E2  C077  F09E         	movff	?_GetMemoryLong+2,GetEEPROM@Temp+3
  3856  0036E6  C078  F09F         	movff	?_GetMemoryLong+3,GetEEPROM@Temp+4
  3857                           
  3858                           ;EEPROM.c: 123: return Temp;
  3859  0036EA  EE20  F09B         	lfsr	2,GetEEPROM@Temp
  3860  0036EE  EE00  F096         	lfsr	0,?_GetEEPROM
  3861  0036F2  0E04               	movlw	4
  3862  0036F4                     u3471:
  3863  0036F4  CFDB FFEB          	movff	plusw2,plusw0
  3864  0036F8  06E8               	decf	wreg,f,c
  3865  0036FA  E2FC               	bc	u3471
  3866  0036FC  0012               	return	
  3867  0036FE  0012               	return		;funcret
  3868  003700                     __end_of_GetEEPROM:
  3869                           	opt stack 0
  3870                           tblptru	equ	0xFF8
  3871                           tblptrh	equ	0xFF7
  3872                           tblptrl	equ	0xFF6
  3873                           tablat	equ	0xFF5
  3874                           prodh	equ	0xFF4
  3875                           prodl	equ	0xFF3
  3876                           intcon	equ	0xFF2
  3877                           intcon2	equ	0xFF1
  3878                           postinc0	equ	0xFEE
  3879                           plusw0	equ	0xFEB
  3880                           wreg	equ	0xFE8
  3881                           indf1	equ	0xFE7
  3882                           postdec1	equ	0xFE5
  3883                           fsr1h	equ	0xFE2
  3884                           fsr1l	equ	0xFE1
  3885                           indf2	equ	0xFDF
  3886                           postinc2	equ	0xFDE
  3887                           postdec2	equ	0xFDD
  3888                           plusw2	equ	0xFDB
  3889                           fsr2h	equ	0xFDA
  3890                           fsr2l	equ	0xFD9
  3891                           status	equ	0xFD8
  3892                           
  3893 ;; *************** function _InitUART *****************
  3894 ;; Defined at:
  3895 ;;		line 78 in file "UART.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;  Baud            4   60[BANK0 ] unsigned long 
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;  temp            4   74[BANK0 ] unsigned long 
  3900 ;;  spbrg           2   71[BANK0 ] unsigned int 
  3901 ;;  config          1   73[BANK0 ] unsigned char 
  3902 ;; Return value:  Size  Location     Type
  3903 ;;		None               void
  3904 ;; Registers used:
  3905 ;;		wreg, status,2, status,0, cstack
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3911 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;Total ram usage:       18 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:    7
  3918 ;; This function calls:
  3919 ;;		_Local_CloseUSART
  3920 ;;		_OpenUSART
  3921 ;;		_Round
  3922 ;;		___fttol
  3923 ;;		___lldiv
  3924 ;;		___lltoft
  3925 ;; This function is called by:
  3926 ;;		_Init_System
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text18
  3931  0027E0                     __ptext18:
  3932                           	opt stack 0
  3933  0027E0                     _InitUART:
  3934                           	opt stack 22
  3935                           
  3936                           ;UART.c: 80: unsigned long temp;
  3937                           ;UART.c: 81: unsigned char config = 0;
  3938                           
  3939                           ;incstack = 0
  3940  0027E0  0E00               	movlw	0
  3941  0027E2  0100               	movlb	0	; () banked
  3942  0027E4  6FA9               	movwf	InitUART@config& (0+255),b
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;UART.c: 82: unsigned int spbrg;
  3946                           ;UART.c: 84: Local_CloseUSART();
  3947  0027E6  ECA8  F01C         	call	_Local_CloseUSART	;wreg free
  3948                           
  3949                           ;UART.c: 89: config |= 0b00001000;
  3950  0027EA  0100               	movlb	0	; () banked
  3951  0027EC  87A9               	bsf	InitUART@config& (0+255),3,b
  3952                           
  3953                           ; BSR set to: 0
  3954                           ;UART.c: 90: config |= 0b00010000;
  3955  0027EE  0100               	movlb	0	; () banked
  3956  0027F0  89A9               	bsf	InitUART@config& (0+255),4,b
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;UART.c: 91: config &= ~0b00000010;
  3960  0027F2  0100               	movlb	0	; () banked
  3961  0027F4  93A9               	bcf	InitUART@config& (0+255),1,b
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;UART.c: 94: temp = (64000000L / Baud) - 1;
  3965  0027F6  0E00               	movlw	0
  3966  0027F8  0100               	movlb	0	; () banked
  3967  0027FA  6F72               	movwf	___lldiv@dividend& (0+255),b
  3968  0027FC  0E90               	movlw	144
  3969  0027FE  6F73               	movwf	(___lldiv@dividend+1)& (0+255),b
  3970  002800  0ED0               	movlw	208
  3971  002802  6F74               	movwf	(___lldiv@dividend+2)& (0+255),b
  3972  002804  0E03               	movlw	3
  3973  002806  6F75               	movwf	(___lldiv@dividend+3)& (0+255),b
  3974  002808  C09C  F076         	movff	InitUART@Baud,___lldiv@divisor
  3975  00280C  C09D  F077         	movff	InitUART@Baud+1,___lldiv@divisor+1
  3976  002810  C09E  F078         	movff	InitUART@Baud+2,___lldiv@divisor+2
  3977  002814  C09F  F079         	movff	InitUART@Baud+3,___lldiv@divisor+3
  3978  002818  EC39  F016         	call	___lldiv	;wreg free
  3979  00281C  0EFF               	movlw	255
  3980  00281E  0100               	movlb	0	; () banked
  3981  002820  2572               	addwf	?___lldiv& (0+255),w,b
  3982  002822  0100               	movlb	0	; () banked
  3983  002824  6FAA               	movwf	InitUART@temp& (0+255),b
  3984  002826  0EFF               	movlw	255
  3985  002828  0100               	movlb	0	; () banked
  3986  00282A  2173               	addwfc	(?___lldiv+1)& (0+255),w,b
  3987  00282C  0100               	movlb	0	; () banked
  3988  00282E  6FAB               	movwf	(InitUART@temp+1)& (0+255),b
  3989  002830  0EFF               	movlw	255
  3990  002832  0100               	movlb	0	; () banked
  3991  002834  2174               	addwfc	(?___lldiv+2)& (0+255),w,b
  3992  002836  0100               	movlb	0	; () banked
  3993  002838  6FAC               	movwf	(InitUART@temp+2)& (0+255),b
  3994  00283A  0EFF               	movlw	255
  3995  00283C  0100               	movlb	0	; () banked
  3996  00283E  2175               	addwfc	(?___lldiv+3)& (0+255),w,b
  3997  002840  0100               	movlb	0	; () banked
  3998  002842  6FAD               	movwf	(InitUART@temp+3)& (0+255),b
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;UART.c: 95: temp = (temp >> 2) - 1;
  4002  002844  C0AA  F0A0         	movff	InitUART@temp,??_InitUART
  4003  002848  C0AB  F0A1         	movff	InitUART@temp+1,??_InitUART+1
  4004  00284C  C0AC  F0A2         	movff	InitUART@temp+2,??_InitUART+2
  4005  002850  C0AD  F0A3         	movff	InitUART@temp+3,??_InitUART+3
  4006  002854  0E03               	movlw	3
  4007  002856  D006               	goto	u3680
  4008  002858                     u3685:
  4009  002858  0100               	movlb	0	; () banked
  4010  00285A  90D8               	bcf	status,0,c
  4011  00285C  33A3               	rrcf	(??_InitUART+3)& (0+255),f,b
  4012  00285E  33A2               	rrcf	(??_InitUART+2)& (0+255),f,b
  4013  002860  33A1               	rrcf	(??_InitUART+1)& (0+255),f,b
  4014  002862  33A0               	rrcf	??_InitUART& (0+255),f,b
  4015  002864                     u3680:
  4016  002864  2EE8               	decfsz	wreg,f,c
  4017  002866  D7F8               	goto	u3685
  4018  002868  0EFF               	movlw	255
  4019  00286A  0100               	movlb	0	; () banked
  4020  00286C  25A0               	addwf	??_InitUART& (0+255),w,b
  4021  00286E  0100               	movlb	0	; () banked
  4022  002870  6FAA               	movwf	InitUART@temp& (0+255),b
  4023  002872  0EFF               	movlw	255
  4024  002874  0100               	movlb	0	; () banked
  4025  002876  21A1               	addwfc	(??_InitUART+1)& (0+255),w,b
  4026  002878  0100               	movlb	0	; () banked
  4027  00287A  6FAB               	movwf	(InitUART@temp+1)& (0+255),b
  4028  00287C  0EFF               	movlw	255
  4029  00287E  0100               	movlb	0	; () banked
  4030  002880  21A2               	addwfc	(??_InitUART+2)& (0+255),w,b
  4031  002882  0100               	movlb	0	; () banked
  4032  002884  6FAC               	movwf	(InitUART@temp+2)& (0+255),b
  4033  002886  0EFF               	movlw	255
  4034  002888  0100               	movlb	0	; () banked
  4035  00288A  21A3               	addwfc	(??_InitUART+3)& (0+255),w,b
  4036  00288C  0100               	movlb	0	; () banked
  4037  00288E  6FAD               	movwf	(InitUART@temp+3)& (0+255),b
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;UART.c: 96: spbrg = (unsigned int) Round(temp);
  4041  002890  C0AA  F07A         	movff	InitUART@temp,___lltoft@c
  4042  002894  C0AB  F07B         	movff	InitUART@temp+1,___lltoft@c+1
  4043  002898  C0AC  F07C         	movff	InitUART@temp+2,___lltoft@c+2
  4044  00289C  C0AD  F07D         	movff	InitUART@temp+3,___lltoft@c+3
  4045  0028A0  EC19  F019         	call	___lltoft	;wreg free
  4046  0028A4  C07A  F095         	movff	?___lltoft,Round@input
  4047  0028A8  C07B  F096         	movff	?___lltoft+1,Round@input+1
  4048  0028AC  C07C  F097         	movff	?___lltoft+2,Round@input+2
  4049  0028B0  ECCD  F019         	call	_Round	;wreg free
  4050  0028B4  C095  F0A4         	movff	?_Round,_InitUART$2764
  4051  0028B8  C096  F0A5         	movff	?_Round+1,_InitUART$2764+1
  4052  0028BC  C097  F0A6         	movff	?_Round+2,_InitUART$2764+2
  4053                           
  4054                           ;UART.c: 96: spbrg = (unsigned int) Round(temp);
  4055  0028C0  C0A4  F086         	movff	_InitUART$2764,___fttol@f1
  4056  0028C4  C0A5  F087         	movff	_InitUART$2764+1,___fttol@f1+1
  4057  0028C8  C0A6  F088         	movff	_InitUART$2764+2,___fttol@f1+2
  4058  0028CC  ECB7  F012         	call	___fttol	;wreg free
  4059  0028D0  C086  F0A7         	movff	?___fttol,InitUART@spbrg
  4060  0028D4  C087  F0A8         	movff	?___fttol+1,InitUART@spbrg+1
  4061                           
  4062                           ;UART.c: 98: BAUDCONbits.BRG16 = 1;
  4063  0028D8  86B8               	bsf	4024,3,c	;volatile
  4064                           
  4065                           ;UART.c: 100: OpenUSART(config, spbrg);
  4066  0028DA  C0A7  F072         	movff	InitUART@spbrg,OpenUSART@spbrg
  4067  0028DE  C0A8  F073         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
  4068  0028E2  0100               	movlb	0	; () banked
  4069  0028E4  51A9               	movf	InitUART@config& (0+255),w,b
  4070  0028E6  EC59  F019         	call	_OpenUSART
  4071                           
  4072                           ;UART.c: 102: PIR1bits.RCIF = 0;
  4073  0028EA  9A9E               	bcf	3998,5,c	;volatile
  4074                           
  4075                           ;UART.c: 103: PIE1bits.RCIE = 1;
  4076  0028EC  8A9D               	bsf	3997,5,c	;volatile
  4077                           
  4078                           ;UART.c: 104: INTCONbits.PEIE = 1;
  4079  0028EE  8CF2               	bsf	intcon,6,c	;volatile
  4080  0028F0  0012               	return		;funcret
  4081  0028F2                     __end_of_InitUART:
  4082                           	opt stack 0
  4083                           tblptru	equ	0xFF8
  4084                           tblptrh	equ	0xFF7
  4085                           tblptrl	equ	0xFF6
  4086                           tablat	equ	0xFF5
  4087                           prodh	equ	0xFF4
  4088                           prodl	equ	0xFF3
  4089                           intcon	equ	0xFF2
  4090                           intcon2	equ	0xFF1
  4091                           postinc0	equ	0xFEE
  4092                           plusw0	equ	0xFEB
  4093                           wreg	equ	0xFE8
  4094                           indf1	equ	0xFE7
  4095                           postdec1	equ	0xFE5
  4096                           fsr1h	equ	0xFE2
  4097                           fsr1l	equ	0xFE1
  4098                           indf2	equ	0xFDF
  4099                           postinc2	equ	0xFDE
  4100                           postdec2	equ	0xFDD
  4101                           plusw2	equ	0xFDB
  4102                           fsr2h	equ	0xFDA
  4103                           fsr2l	equ	0xFD9
  4104                           status	equ	0xFD8
  4105                           
  4106 ;; *************** function ___lltoft *****************
  4107 ;; Defined at:
  4108 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  c               4   26[BANK0 ] unsigned long 
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;  exp             1   34[BANK0 ] unsigned char 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  3   26[BANK0 ] float 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2, status,0, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4122 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4124 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4125 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4126 ;;Total ram usage:        9 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; Hardware stack levels required when called:    5
  4129 ;; This function calls:
  4130 ;;		___ftpack
  4131 ;; This function is called by:
  4132 ;;		_InitUART
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           	psect	text19
  4137  003232                     __ptext19:
  4138                           	opt stack 0
  4139  003232                     ___lltoft:
  4140                           	opt stack 23
  4141                           
  4142                           ;incstack = 0
  4143  003232  0E8E               	movlw	142
  4144  003234  0100               	movlb	0	; () banked
  4145  003236  6F82               	movwf	___lltoft@exp& (0+255),b
  4146  003238  D009               	goto	l4078
  4147  00323A                     l4076:
  4148                           
  4149                           ; BSR set to: 0
  4150  00323A  0100               	movlb	0	; () banked
  4151  00323C  90D8               	bcf	status,0,c
  4152  00323E  337D               	rrcf	(___lltoft@c+3)& (0+255),f,b
  4153  003240  337C               	rrcf	(___lltoft@c+2)& (0+255),f,b
  4154  003242  337B               	rrcf	(___lltoft@c+1)& (0+255),f,b
  4155  003244  337A               	rrcf	___lltoft@c& (0+255),f,b
  4156  003246  0100               	movlb	0	; () banked
  4157  003248  2B82               	incf	___lltoft@exp& (0+255),f,b
  4158  00324A  D000               	goto	l4078
  4159  00324C                     l4078:
  4160                           
  4161                           ; BSR set to: 0
  4162  00324C  0E00               	movlw	0
  4163  00324E  0100               	movlb	0	; () banked
  4164  003250  157A               	andwf	___lltoft@c& (0+255),w,b
  4165  003252  0100               	movlb	0	; () banked
  4166  003254  6F7E               	movwf	??___lltoft& (0+255),b
  4167  003256  0E00               	movlw	0
  4168  003258  0100               	movlb	0	; () banked
  4169  00325A  157B               	andwf	(___lltoft@c+1)& (0+255),w,b
  4170  00325C  0100               	movlb	0	; () banked
  4171  00325E  6F7F               	movwf	(??___lltoft+1)& (0+255),b
  4172  003260  0E00               	movlw	0
  4173  003262  0100               	movlb	0	; () banked
  4174  003264  157C               	andwf	(___lltoft@c+2)& (0+255),w,b
  4175  003266  0100               	movlb	0	; () banked
  4176  003268  6F80               	movwf	(??___lltoft+2)& (0+255),b
  4177  00326A  0EFF               	movlw	255
  4178  00326C  0100               	movlb	0	; () banked
  4179  00326E  157D               	andwf	(___lltoft@c+3)& (0+255),w,b
  4180  003270  0100               	movlb	0	; () banked
  4181  003272  6F81               	movwf	(??___lltoft+3)& (0+255),b
  4182  003274  0100               	movlb	0	; () banked
  4183  003276  517E               	movf	??___lltoft& (0+255),w,b
  4184  003278  0100               	movlb	0	; () banked
  4185  00327A  117F               	iorwf	(??___lltoft+1)& (0+255),w,b
  4186  00327C  0100               	movlb	0	; () banked
  4187  00327E  1180               	iorwf	(??___lltoft+2)& (0+255),w,b
  4188  003280  0100               	movlb	0	; () banked
  4189  003282  1181               	iorwf	(??___lltoft+3)& (0+255),w,b
  4190  003284  A4D8               	btfss	status,2,c
  4191  003286  D7D9               	goto	l4076
  4192                           
  4193                           ; BSR set to: 0
  4194                           
  4195                           ; BSR set to: 0
  4196  003288  C07A  F072         	movff	___lltoft@c,___ftpack@arg
  4197  00328C  C07B  F073         	movff	___lltoft@c+1,___ftpack@arg+1
  4198  003290  C07C  F074         	movff	___lltoft@c+2,___ftpack@arg+2
  4199  003294  C082  F075         	movff	___lltoft@exp,___ftpack@exp
  4200  003298  0E00               	movlw	0
  4201  00329A  0100               	movlb	0	; () banked
  4202  00329C  6F76               	movwf	___ftpack@sign& (0+255),b
  4203  00329E  EC60  F013         	call	___ftpack	;wreg free
  4204  0032A2  C072  F07A         	movff	?___ftpack,?___lltoft
  4205  0032A6  C073  F07B         	movff	?___ftpack+1,?___lltoft+1
  4206  0032AA  C074  F07C         	movff	?___ftpack+2,?___lltoft+2
  4207  0032AE  0012               	return	
  4208  0032B0  0012               	return		;funcret
  4209  0032B2                     __end_of___lltoft:
  4210                           	opt stack 0
  4211                           tblptru	equ	0xFF8
  4212                           tblptrh	equ	0xFF7
  4213                           tblptrl	equ	0xFF6
  4214                           tablat	equ	0xFF5
  4215                           prodh	equ	0xFF4
  4216                           prodl	equ	0xFF3
  4217                           intcon	equ	0xFF2
  4218                           intcon2	equ	0xFF1
  4219                           postinc0	equ	0xFEE
  4220                           plusw0	equ	0xFEB
  4221                           wreg	equ	0xFE8
  4222                           indf1	equ	0xFE7
  4223                           postdec1	equ	0xFE5
  4224                           fsr1h	equ	0xFE2
  4225                           fsr1l	equ	0xFE1
  4226                           indf2	equ	0xFDF
  4227                           postinc2	equ	0xFDE
  4228                           postdec2	equ	0xFDD
  4229                           plusw2	equ	0xFDB
  4230                           fsr2h	equ	0xFDA
  4231                           fsr2l	equ	0xFD9
  4232                           status	equ	0xFD8
  4233                           
  4234 ;; *************** function _Round *****************
  4235 ;; Defined at:
  4236 ;;		line 111 in file "MISC.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  input           3   53[BANK0 ] float 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  temp            4   56[BANK0 ] long 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  3   53[BANK0 ] long 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2, status,0, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4250 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4251 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4253 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;Total ram usage:        7 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    6
  4257 ;; This function calls:
  4258 ;;		___altoft
  4259 ;;		___ftadd
  4260 ;;		___fttol
  4261 ;; This function is called by:
  4262 ;;		_InitUART
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text20
  4267  00339A                     __ptext20:
  4268                           	opt stack 0
  4269  00339A                     _Round:
  4270                           	opt stack 22
  4271                           
  4272                           ;MISC.c: 113: long temp = (long)(input + 0.5);
  4273                           
  4274                           ;incstack = 0
  4275  00339A  0E00               	movlw	0
  4276  00339C  0100               	movlb	0	; () banked
  4277  00339E  6F7D               	movwf	___ftadd@f2& (0+255),b
  4278  0033A0  0E00               	movlw	0
  4279  0033A2  0100               	movlb	0	; () banked
  4280  0033A4  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  4281  0033A6  0E3F               	movlw	63
  4282  0033A8  0100               	movlb	0	; () banked
  4283  0033AA  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  4284  0033AC  C095  F07A         	movff	Round@input,___ftadd@f1
  4285  0033B0  C096  F07B         	movff	Round@input+1,___ftadd@f1+1
  4286  0033B4  C097  F07C         	movff	Round@input+2,___ftadd@f1+2
  4287  0033B8  EC7F  F00D         	call	___ftadd	;wreg free
  4288  0033BC  C07A  F086         	movff	?___ftadd,___fttol@f1
  4289  0033C0  C07B  F087         	movff	?___ftadd+1,___fttol@f1+1
  4290  0033C4  C07C  F088         	movff	?___ftadd+2,___fttol@f1+2
  4291  0033C8  ECB7  F012         	call	___fttol	;wreg free
  4292  0033CC  C086  F098         	movff	?___fttol,Round@temp
  4293  0033D0  C087  F099         	movff	?___fttol+1,Round@temp+1
  4294  0033D4  C088  F09A         	movff	?___fttol+2,Round@temp+2
  4295  0033D8  C089  F09B         	movff	?___fttol+3,Round@temp+3
  4296                           
  4297                           ;MISC.c: 115: return temp;
  4298  0033DC  C098  F07A         	movff	Round@temp,___altoft@c
  4299  0033E0  C099  F07B         	movff	Round@temp+1,___altoft@c+1
  4300  0033E4  C09A  F07C         	movff	Round@temp+2,___altoft@c+2
  4301  0033E8  C09B  F07D         	movff	Round@temp+3,___altoft@c+3
  4302  0033EC  ECED  F017         	call	___altoft	;wreg free
  4303  0033F0  C07A  F095         	movff	?___altoft,?_Round
  4304  0033F4  C07B  F096         	movff	?___altoft+1,?_Round+1
  4305  0033F8  C07C  F097         	movff	?___altoft+2,?_Round+2
  4306  0033FC  0012               	return	
  4307  0033FE  0012               	return		;funcret
  4308  003400                     __end_of_Round:
  4309                           	opt stack 0
  4310                           tblptru	equ	0xFF8
  4311                           tblptrh	equ	0xFF7
  4312                           tblptrl	equ	0xFF6
  4313                           tablat	equ	0xFF5
  4314                           prodh	equ	0xFF4
  4315                           prodl	equ	0xFF3
  4316                           intcon	equ	0xFF2
  4317                           intcon2	equ	0xFF1
  4318                           postinc0	equ	0xFEE
  4319                           plusw0	equ	0xFEB
  4320                           wreg	equ	0xFE8
  4321                           indf1	equ	0xFE7
  4322                           postdec1	equ	0xFE5
  4323                           fsr1h	equ	0xFE2
  4324                           fsr1l	equ	0xFE1
  4325                           indf2	equ	0xFDF
  4326                           postinc2	equ	0xFDE
  4327                           postdec2	equ	0xFDD
  4328                           plusw2	equ	0xFDB
  4329                           fsr2h	equ	0xFDA
  4330                           fsr2l	equ	0xFD9
  4331                           status	equ	0xFD8
  4332                           
  4333 ;; *************** function ___fttol *****************
  4334 ;; Defined at:
  4335 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;  f1              3   38[BANK0 ] float 
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;  lval            4   48[BANK0 ] unsigned long 
  4340 ;;  exp1            1   52[BANK0 ] unsigned char 
  4341 ;;  sign1           1   47[BANK0 ] unsigned char 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  4   38[BANK0 ] long 
  4344 ;; Registers used:
  4345 ;;		wreg, status,2, status,0
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4351 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;Total ram usage:       15 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; Hardware stack levels required when called:    4
  4358 ;; This function calls:
  4359 ;;		Nothing
  4360 ;; This function is called by:
  4361 ;;		_Round
  4362 ;;		_InitUART
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           	psect	text21
  4367  00256E                     __ptext21:
  4368                           	opt stack 0
  4369  00256E                     ___fttol:
  4370                           	opt stack 24
  4371                           
  4372                           ;incstack = 0
  4373  00256E  C088  F08A         	movff	___fttol@f1+2,??___fttol
  4374  002572  0100               	movlb	0	; () banked
  4375  002574  6B8B               	clrf	(??___fttol+1)& (0+255),b
  4376  002576  6B8C               	clrf	(??___fttol+2)& (0+255),b
  4377  002578  0100               	movlb	0	; () banked
  4378  00257A  3587               	rlcf	(___fttol@f1+1)& (0+255),w,b
  4379  00257C  0100               	movlb	0	; () banked
  4380  00257E  378A               	rlcf	??___fttol& (0+255),f,b
  4381  002580  E301               	bnc	u3301
  4382  002582  818B               	bsf	(??___fttol+1)& (0+255),0,b
  4383  002584                     u3301:
  4384  002584  0100               	movlb	0	; () banked
  4385  002586  518A               	movf	??___fttol& (0+255),w,b
  4386  002588  0100               	movlb	0	; () banked
  4387  00258A  6F94               	movwf	___fttol@exp1& (0+255),b
  4388  00258C  0100               	movlb	0	; () banked
  4389  00258E  5194               	movf	___fttol@exp1& (0+255),w,b
  4390  002590  A4D8               	btfss	status,2,c
  4391  002592  D00A               	goto	l3776
  4392                           
  4393                           ; BSR set to: 0
  4394  002594  0E00               	movlw	0
  4395  002596  0100               	movlb	0	; () banked
  4396  002598  6F86               	movwf	?___fttol& (0+255),b
  4397  00259A  0E00               	movlw	0
  4398  00259C  6F87               	movwf	(?___fttol+1)& (0+255),b
  4399  00259E  0E00               	movlw	0
  4400  0025A0  6F88               	movwf	(?___fttol+2)& (0+255),b
  4401  0025A2  0E00               	movlw	0
  4402  0025A4  6F89               	movwf	(?___fttol+3)& (0+255),b
  4403                           
  4404                           ; BSR set to: 0
  4405  0025A6  0012               	return	
  4406  0025A8                     l3776:
  4407                           
  4408                           ; BSR set to: 0
  4409  0025A8  0E17               	movlw	23
  4410  0025AA  0100               	movlb	0	; () banked
  4411  0025AC  6F8A               	movwf	??___fttol& (0+255),b
  4412  0025AE  C086  F08B         	movff	___fttol@f1,??___fttol+1
  4413  0025B2  C087  F08C         	movff	___fttol@f1+1,??___fttol+2
  4414  0025B6  C088  F08D         	movff	___fttol@f1+2,??___fttol+3
  4415  0025BA  0100               	movlb	0	; () banked
  4416  0025BC  298A               	incf	??___fttol& (0+255),w,b
  4417  0025BE  0100               	movlb	0	; () banked
  4418  0025C0  6F8E               	movwf	(??___fttol+4)& (0+255),b
  4419  0025C2  D005               	goto	u3320
  4420  0025C4                     u3325:
  4421  0025C4  0100               	movlb	0	; () banked
  4422  0025C6  90D8               	bcf	status,0,c
  4423  0025C8  338D               	rrcf	(??___fttol+3)& (0+255),f,b
  4424  0025CA  338C               	rrcf	(??___fttol+2)& (0+255),f,b
  4425  0025CC  338B               	rrcf	(??___fttol+1)& (0+255),f,b
  4426  0025CE                     u3320:
  4427  0025CE  0100               	movlb	0	; () banked
  4428  0025D0  2F8E               	decfsz	(??___fttol+4)& (0+255),f,b
  4429  0025D2  D7F8               	goto	u3325
  4430  0025D4  0100               	movlb	0	; () banked
  4431  0025D6  518B               	movf	(??___fttol+1)& (0+255),w,b
  4432  0025D8  0100               	movlb	0	; () banked
  4433  0025DA  6F8F               	movwf	___fttol@sign1& (0+255),b
  4434                           
  4435                           ; BSR set to: 0
  4436  0025DC  0100               	movlb	0	; () banked
  4437  0025DE  8F87               	bsf	(___fttol@f1+1)& (0+255),7,b
  4438                           
  4439                           ; BSR set to: 0
  4440  0025E0  0EFF               	movlw	255
  4441  0025E2  0100               	movlb	0	; () banked
  4442  0025E4  1786               	andwf	___fttol@f1& (0+255),f,b
  4443  0025E6  0EFF               	movlw	255
  4444  0025E8  0100               	movlb	0	; () banked
  4445  0025EA  1787               	andwf	(___fttol@f1+1)& (0+255),f,b
  4446  0025EC  0E00               	movlw	0
  4447  0025EE  0100               	movlb	0	; () banked
  4448  0025F0  1788               	andwf	(___fttol@f1+2)& (0+255),f,b
  4449                           
  4450                           ; BSR set to: 0
  4451  0025F2  0100               	movlb	0	; () banked
  4452  0025F4  5186               	movf	___fttol@f1& (0+255),w,b
  4453  0025F6  0100               	movlb	0	; () banked
  4454  0025F8  6F90               	movwf	___fttol@lval& (0+255),b
  4455  0025FA  0100               	movlb	0	; () banked
  4456  0025FC  5187               	movf	(___fttol@f1+1)& (0+255),w,b
  4457  0025FE  0100               	movlb	0	; () banked
  4458  002600  6F91               	movwf	(___fttol@lval+1)& (0+255),b
  4459  002602  0100               	movlb	0	; () banked
  4460  002604  5188               	movf	(___fttol@f1+2)& (0+255),w,b
  4461  002606  0100               	movlb	0	; () banked
  4462  002608  6F92               	movwf	(___fttol@lval+2)& (0+255),b
  4463  00260A  0100               	movlb	0	; () banked
  4464  00260C  6B93               	clrf	(___fttol@lval+3)& (0+255),b
  4465                           
  4466                           ; BSR set to: 0
  4467  00260E  0E8E               	movlw	142
  4468  002610  0100               	movlb	0	; () banked
  4469  002612  5F94               	subwf	___fttol@exp1& (0+255),f,b
  4470                           
  4471                           ; BSR set to: 0
  4472  002614  0100               	movlb	0	; () banked
  4473  002616  AF94               	btfss	___fttol@exp1& (0+255),7,b
  4474  002618  D01B               	goto	l3798
  4475                           
  4476                           ; BSR set to: 0
  4477  00261A  0100               	movlb	0	; () banked
  4478  00261C  5194               	movf	___fttol@exp1& (0+255),w,b
  4479  00261E  0A80               	xorlw	128
  4480  002620  0F8F               	addlw	143
  4481  002622  B0D8               	btfsc	status,0,c
  4482  002624  D00B               	goto	l3794
  4483                           
  4484                           ; BSR set to: 0
  4485  002626  0E00               	movlw	0
  4486  002628  0100               	movlb	0	; () banked
  4487  00262A  6F86               	movwf	?___fttol& (0+255),b
  4488  00262C  0E00               	movlw	0
  4489  00262E  6F87               	movwf	(?___fttol+1)& (0+255),b
  4490  002630  0E00               	movlw	0
  4491  002632  6F88               	movwf	(?___fttol+2)& (0+255),b
  4492  002634  0E00               	movlw	0
  4493  002636  6F89               	movwf	(?___fttol+3)& (0+255),b
  4494                           
  4495                           ; BSR set to: 0
  4496  002638  0012               	return	
  4497                           
  4498                           ; BSR set to: 0
  4499  00263A  D000               	goto	l3794
  4500  00263C                     l3794:
  4501                           
  4502                           ; BSR set to: 0
  4503  00263C  0100               	movlb	0	; () banked
  4504  00263E  90D8               	bcf	status,0,c
  4505  002640  3393               	rrcf	(___fttol@lval+3)& (0+255),f,b
  4506  002642  3392               	rrcf	(___fttol@lval+2)& (0+255),f,b
  4507  002644  3391               	rrcf	(___fttol@lval+1)& (0+255),f,b
  4508  002646  3390               	rrcf	___fttol@lval& (0+255),f,b
  4509                           
  4510                           ; BSR set to: 0
  4511  002648  0100               	movlb	0	; () banked
  4512  00264A  3F94               	incfsz	___fttol@exp1& (0+255),f,b
  4513  00264C  D7F7               	goto	l3794
  4514                           
  4515                           ; BSR set to: 0
  4516  00264E  D01F               	goto	l3808
  4517  002650                     l3798:
  4518                           
  4519                           ; BSR set to: 0
  4520  002650  0E17               	movlw	23
  4521  002652  0100               	movlb	0	; () banked
  4522  002654  6594               	cpfsgt	___fttol@exp1& (0+255),b
  4523  002656  D014               	goto	l3806
  4524                           
  4525                           ; BSR set to: 0
  4526  002658  0E00               	movlw	0
  4527  00265A  0100               	movlb	0	; () banked
  4528  00265C  6F86               	movwf	?___fttol& (0+255),b
  4529  00265E  0E00               	movlw	0
  4530  002660  6F87               	movwf	(?___fttol+1)& (0+255),b
  4531  002662  0E00               	movlw	0
  4532  002664  6F88               	movwf	(?___fttol+2)& (0+255),b
  4533  002666  0E00               	movlw	0
  4534  002668  6F89               	movwf	(?___fttol+3)& (0+255),b
  4535                           
  4536                           ; BSR set to: 0
  4537  00266A  0012               	return	
  4538                           
  4539                           ; BSR set to: 0
  4540  00266C  D009               	goto	l3806
  4541  00266E                     l3804:
  4542                           
  4543                           ; BSR set to: 0
  4544  00266E  0100               	movlb	0	; () banked
  4545  002670  90D8               	bcf	status,0,c
  4546  002672  3790               	rlcf	___fttol@lval& (0+255),f,b
  4547  002674  3791               	rlcf	(___fttol@lval+1)& (0+255),f,b
  4548  002676  3792               	rlcf	(___fttol@lval+2)& (0+255),f,b
  4549  002678  3793               	rlcf	(___fttol@lval+3)& (0+255),f,b
  4550  00267A  0100               	movlb	0	; () banked
  4551  00267C  0794               	decf	___fttol@exp1& (0+255),f,b
  4552  00267E  D000               	goto	l3806
  4553  002680                     l3806:
  4554                           
  4555                           ; BSR set to: 0
  4556  002680  0100               	movlb	0	; () banked
  4557  002682  5194               	movf	___fttol@exp1& (0+255),w,b
  4558  002684  0100               	movlb	0	; () banked
  4559  002686  B4D8               	btfsc	status,2,c
  4560  002688  D002               	goto	l3808
  4561  00268A  D7F1               	goto	l3804
  4562                           
  4563                           ; BSR set to: 0
  4564  00268C  D000               	goto	l3808
  4565  00268E                     l3808:
  4566                           
  4567                           ; BSR set to: 0
  4568  00268E  0100               	movlb	0	; () banked
  4569  002690  518F               	movf	___fttol@sign1& (0+255),w,b
  4570  002692  0100               	movlb	0	; () banked
  4571  002694  B4D8               	btfsc	status,2,c
  4572  002696  D00A               	goto	l3812
  4573                           
  4574                           ; BSR set to: 0
  4575  002698  0100               	movlb	0	; () banked
  4576  00269A  1F93               	comf	(___fttol@lval+3)& (0+255),f,b
  4577  00269C  1F92               	comf	(___fttol@lval+2)& (0+255),f,b
  4578  00269E  1F91               	comf	(___fttol@lval+1)& (0+255),f,b
  4579  0026A0  6D90               	negf	___fttol@lval& (0+255),b
  4580  0026A2  0E00               	movlw	0
  4581  0026A4  2391               	addwfc	(___fttol@lval+1)& (0+255),f,b
  4582  0026A6  2392               	addwfc	(___fttol@lval+2)& (0+255),f,b
  4583  0026A8  2393               	addwfc	(___fttol@lval+3)& (0+255),f,b
  4584  0026AA  D000               	goto	l3812
  4585  0026AC                     l3812:
  4586                           
  4587                           ; BSR set to: 0
  4588  0026AC  C090  F086         	movff	___fttol@lval,?___fttol
  4589  0026B0  C091  F087         	movff	___fttol@lval+1,?___fttol+1
  4590  0026B4  C092  F088         	movff	___fttol@lval+2,?___fttol+2
  4591  0026B8  C093  F089         	movff	___fttol@lval+3,?___fttol+3
  4592  0026BC  0012               	return	
  4593                           
  4594                           ; BSR set to: 0
  4595                           
  4596                           ; BSR set to: 0
  4597  0026BE  0012               	return		;funcret
  4598  0026C0                     __end_of___fttol:
  4599                           	opt stack 0
  4600                           tblptru	equ	0xFF8
  4601                           tblptrh	equ	0xFF7
  4602                           tblptrl	equ	0xFF6
  4603                           tablat	equ	0xFF5
  4604                           prodh	equ	0xFF4
  4605                           prodl	equ	0xFF3
  4606                           intcon	equ	0xFF2
  4607                           intcon2	equ	0xFF1
  4608                           postinc0	equ	0xFEE
  4609                           plusw0	equ	0xFEB
  4610                           wreg	equ	0xFE8
  4611                           indf1	equ	0xFE7
  4612                           postdec1	equ	0xFE5
  4613                           fsr1h	equ	0xFE2
  4614                           fsr1l	equ	0xFE1
  4615                           indf2	equ	0xFDF
  4616                           postinc2	equ	0xFDE
  4617                           postdec2	equ	0xFDD
  4618                           plusw2	equ	0xFDB
  4619                           fsr2h	equ	0xFDA
  4620                           fsr2l	equ	0xFD9
  4621                           status	equ	0xFD8
  4622                           
  4623 ;; *************** function ___ftadd *****************
  4624 ;; Defined at:
  4625 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  f1              3   26[BANK0 ] float 
  4628 ;;  f2              3   29[BANK0 ] float 
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;  exp1            1   37[BANK0 ] unsigned char 
  4631 ;;  exp2            1   36[BANK0 ] unsigned char 
  4632 ;;  sign            1   35[BANK0 ] unsigned char 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  3   26[BANK0 ] float 
  4635 ;; Registers used:
  4636 ;;		wreg, status,2, status,0, cstack
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4642 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4643 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4644 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4645 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;Total ram usage:       12 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:    5
  4649 ;; This function calls:
  4650 ;;		___ftpack
  4651 ;; This function is called by:
  4652 ;;		_Round
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text22
  4657  001AFE                     __ptext22:
  4658                           	opt stack 0
  4659  001AFE                     ___ftadd:
  4660                           	opt stack 22
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;incstack = 0
  4664  001AFE  C07C  F080         	movff	___ftadd@f1+2,??___ftadd
  4665  001B02  0100               	movlb	0	; () banked
  4666  001B04  6B81               	clrf	(??___ftadd+1)& (0+255),b
  4667  001B06  6B82               	clrf	(??___ftadd+2)& (0+255),b
  4668  001B08  0100               	movlb	0	; () banked
  4669  001B0A  357B               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  4670  001B0C  0100               	movlb	0	; () banked
  4671  001B0E  3780               	rlcf	??___ftadd& (0+255),f,b
  4672  001B10  E301               	bnc	u3091
  4673  001B12  8181               	bsf	(??___ftadd+1)& (0+255),0,b
  4674  001B14                     u3091:
  4675  001B14  0100               	movlb	0	; () banked
  4676  001B16  5180               	movf	??___ftadd& (0+255),w,b
  4677  001B18  0100               	movlb	0	; () banked
  4678  001B1A  6F85               	movwf	___ftadd@exp1& (0+255),b
  4679  001B1C  C07F  F080         	movff	___ftadd@f2+2,??___ftadd
  4680  001B20  0100               	movlb	0	; () banked
  4681  001B22  6B81               	clrf	(??___ftadd+1)& (0+255),b
  4682  001B24  6B82               	clrf	(??___ftadd+2)& (0+255),b
  4683  001B26  0100               	movlb	0	; () banked
  4684  001B28  357E               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  4685  001B2A  0100               	movlb	0	; () banked
  4686  001B2C  3780               	rlcf	??___ftadd& (0+255),f,b
  4687  001B2E  E301               	bnc	u3101
  4688  001B30  8181               	bsf	(??___ftadd+1)& (0+255),0,b
  4689  001B32                     u3101:
  4690  001B32  0100               	movlb	0	; () banked
  4691  001B34  5180               	movf	??___ftadd& (0+255),w,b
  4692  001B36  0100               	movlb	0	; () banked
  4693  001B38  6F84               	movwf	___ftadd@exp2& (0+255),b
  4694                           
  4695                           ; BSR set to: 0
  4696  001B3A  0100               	movlb	0	; () banked
  4697  001B3C  5185               	movf	___ftadd@exp1& (0+255),w,b
  4698  001B3E  0100               	movlb	0	; () banked
  4699  001B40  B4D8               	btfsc	status,2,c
  4700  001B42  D011               	goto	l1253
  4701                           
  4702                           ; BSR set to: 0
  4703  001B44  0100               	movlb	0	; () banked
  4704  001B46  5184               	movf	___ftadd@exp2& (0+255),w,b
  4705  001B48  0100               	movlb	0	; () banked
  4706  001B4A  5D85               	subwf	___ftadd@exp1& (0+255),w,b
  4707  001B4C  B0D8               	btfsc	status,0,c
  4708  001B4E  D012               	goto	l3708
  4709                           
  4710                           ; BSR set to: 0
  4711  001B50  0100               	movlb	0	; () banked
  4712  001B52  5185               	movf	___ftadd@exp1& (0+255),w,b
  4713  001B54  0800               	sublw	0
  4714  001B56  0100               	movlb	0	; () banked
  4715  001B58  2584               	addwf	___ftadd@exp2& (0+255),w,b
  4716  001B5A  0100               	movlb	0	; () banked
  4717  001B5C  6F80               	movwf	??___ftadd& (0+255),b
  4718  001B5E  0E18               	movlw	24
  4719  001B60  0100               	movlb	0	; () banked
  4720  001B62  6580               	cpfsgt	??___ftadd& (0+255),b
  4721  001B64  D007               	goto	l3708
  4722  001B66                     l1253:
  4723                           
  4724                           ; BSR set to: 0
  4725  001B66  C07D  F07A         	movff	___ftadd@f2,?___ftadd
  4726  001B6A  C07E  F07B         	movff	___ftadd@f2+1,?___ftadd+1
  4727  001B6E  C07F  F07C         	movff	___ftadd@f2+2,?___ftadd+2
  4728  001B72  0012               	return	
  4729  001B74                     l3708:
  4730                           
  4731                           ; BSR set to: 0
  4732  001B74  0100               	movlb	0	; () banked
  4733  001B76  5184               	movf	___ftadd@exp2& (0+255),w,b
  4734  001B78  0100               	movlb	0	; () banked
  4735  001B7A  B4D8               	btfsc	status,2,c
  4736  001B7C  D011               	goto	l1257
  4737                           
  4738                           ; BSR set to: 0
  4739  001B7E  0100               	movlb	0	; () banked
  4740  001B80  5185               	movf	___ftadd@exp1& (0+255),w,b
  4741  001B82  0100               	movlb	0	; () banked
  4742  001B84  5D84               	subwf	___ftadd@exp2& (0+255),w,b
  4743  001B86  B0D8               	btfsc	status,0,c
  4744  001B88  D012               	goto	l3714
  4745                           
  4746                           ; BSR set to: 0
  4747  001B8A  0100               	movlb	0	; () banked
  4748  001B8C  5184               	movf	___ftadd@exp2& (0+255),w,b
  4749  001B8E  0800               	sublw	0
  4750  001B90  0100               	movlb	0	; () banked
  4751  001B92  2585               	addwf	___ftadd@exp1& (0+255),w,b
  4752  001B94  0100               	movlb	0	; () banked
  4753  001B96  6F80               	movwf	??___ftadd& (0+255),b
  4754  001B98  0E18               	movlw	24
  4755  001B9A  0100               	movlb	0	; () banked
  4756  001B9C  6580               	cpfsgt	??___ftadd& (0+255),b
  4757  001B9E  D007               	goto	l3714
  4758  001BA0                     l1257:
  4759                           
  4760                           ; BSR set to: 0
  4761  001BA0  C07A  F07A         	movff	___ftadd@f1,?___ftadd
  4762  001BA4  C07B  F07B         	movff	___ftadd@f1+1,?___ftadd+1
  4763  001BA8  C07C  F07C         	movff	___ftadd@f1+2,?___ftadd+2
  4764  001BAC  0012               	return	
  4765  001BAE                     l3714:
  4766                           
  4767                           ; BSR set to: 0
  4768  001BAE  0E06               	movlw	6
  4769  001BB0  0100               	movlb	0	; () banked
  4770  001BB2  6F83               	movwf	___ftadd@sign& (0+255),b
  4771                           
  4772                           ; BSR set to: 0
  4773  001BB4  0100               	movlb	0	; () banked
  4774  001BB6  AF7C               	btfss	(___ftadd@f1+2)& (0+255),7,b
  4775  001BB8  D003               	goto	l3720
  4776                           
  4777                           ; BSR set to: 0
  4778  001BBA  0100               	movlb	0	; () banked
  4779  001BBC  8F83               	bsf	___ftadd@sign& (0+255),7,b
  4780  001BBE  D000               	goto	l3720
  4781  001BC0                     l3720:
  4782                           
  4783                           ; BSR set to: 0
  4784  001BC0  0100               	movlb	0	; () banked
  4785  001BC2  AF7F               	btfss	(___ftadd@f2+2)& (0+255),7,b
  4786  001BC4  D002               	goto	l1259
  4787                           
  4788                           ; BSR set to: 0
  4789  001BC6  0100               	movlb	0	; () banked
  4790  001BC8  8D83               	bsf	___ftadd@sign& (0+255),6,b
  4791  001BCA                     l1259:
  4792                           
  4793                           ; BSR set to: 0
  4794  001BCA  0100               	movlb	0	; () banked
  4795  001BCC  8F7B               	bsf	(___ftadd@f1+1)& (0+255),7,b
  4796                           
  4797                           ; BSR set to: 0
  4798  001BCE  0EFF               	movlw	255
  4799  001BD0  0100               	movlb	0	; () banked
  4800  001BD2  177A               	andwf	___ftadd@f1& (0+255),f,b
  4801  001BD4  0EFF               	movlw	255
  4802  001BD6  0100               	movlb	0	; () banked
  4803  001BD8  177B               	andwf	(___ftadd@f1+1)& (0+255),f,b
  4804  001BDA  0E00               	movlw	0
  4805  001BDC  0100               	movlb	0	; () banked
  4806  001BDE  177C               	andwf	(___ftadd@f1+2)& (0+255),f,b
  4807  001BE0  0100               	movlb	0	; () banked
  4808  001BE2  8F7E               	bsf	(___ftadd@f2+1)& (0+255),7,b
  4809                           
  4810                           ; BSR set to: 0
  4811  001BE4  0EFF               	movlw	255
  4812  001BE6  0100               	movlb	0	; () banked
  4813  001BE8  177D               	andwf	___ftadd@f2& (0+255),f,b
  4814  001BEA  0EFF               	movlw	255
  4815  001BEC  0100               	movlb	0	; () banked
  4816  001BEE  177E               	andwf	(___ftadd@f2+1)& (0+255),f,b
  4817  001BF0  0E00               	movlw	0
  4818  001BF2  0100               	movlb	0	; () banked
  4819  001BF4  177F               	andwf	(___ftadd@f2+2)& (0+255),f,b
  4820                           
  4821                           ; BSR set to: 0
  4822  001BF6  0100               	movlb	0	; () banked
  4823  001BF8  5184               	movf	___ftadd@exp2& (0+255),w,b
  4824  001BFA  0100               	movlb	0	; () banked
  4825  001BFC  5D85               	subwf	___ftadd@exp1& (0+255),w,b
  4826  001BFE  B0D8               	btfsc	status,0,c
  4827  001C00  D028               	goto	l3740
  4828  001C02                     l3730:
  4829                           
  4830                           ; BSR set to: 0
  4831  001C02  0100               	movlb	0	; () banked
  4832  001C04  90D8               	bcf	status,0,c
  4833  001C06  377D               	rlcf	___ftadd@f2& (0+255),f,b
  4834  001C08  377E               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  4835  001C0A  377F               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  4836  001C0C  0100               	movlb	0	; () banked
  4837  001C0E  0784               	decf	___ftadd@exp2& (0+255),f,b
  4838                           
  4839                           ; BSR set to: 0
  4840  001C10  0100               	movlb	0	; () banked
  4841  001C12  5185               	movf	___ftadd@exp1& (0+255),w,b
  4842  001C14  0100               	movlb	0	; () banked
  4843  001C16  1984               	xorwf	___ftadd@exp2& (0+255),w,b
  4844  001C18  B4D8               	btfsc	status,2,c
  4845  001C1A  D013               	goto	l3738
  4846                           
  4847                           ; BSR set to: 0
  4848  001C1C  0100               	movlb	0	; () banked
  4849  001C1E  0783               	decf	___ftadd@sign& (0+255),f,b
  4850  001C20  C083  F080         	movff	___ftadd@sign,??___ftadd
  4851  001C24  0E07               	movlw	7
  4852  001C26  0100               	movlb	0	; () banked
  4853  001C28  1780               	andwf	??___ftadd& (0+255),f,b
  4854  001C2A  B4D8               	btfsc	status,2,c
  4855  001C2C  D00A               	goto	l3738
  4856  001C2E  D7E9               	goto	l3730
  4857                           
  4858                           ; BSR set to: 0
  4859                           
  4860                           ; BSR set to: 0
  4861  001C30  D008               	goto	l3738
  4862  001C32                     l3736:
  4863                           
  4864                           ; BSR set to: 0
  4865  001C32  0100               	movlb	0	; () banked
  4866  001C34  90D8               	bcf	status,0,c
  4867  001C36  337C               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  4868  001C38  337B               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  4869  001C3A  337A               	rrcf	___ftadd@f1& (0+255),f,b
  4870  001C3C  0100               	movlb	0	; () banked
  4871  001C3E  2B85               	incf	___ftadd@exp1& (0+255),f,b
  4872  001C40  D000               	goto	l3738
  4873  001C42                     l3738:
  4874                           
  4875                           ; BSR set to: 0
  4876  001C42  0100               	movlb	0	; () banked
  4877  001C44  5184               	movf	___ftadd@exp2& (0+255),w,b
  4878  001C46  0100               	movlb	0	; () banked
  4879  001C48  1985               	xorwf	___ftadd@exp1& (0+255),w,b
  4880  001C4A  B4D8               	btfsc	status,2,c
  4881  001C4C  D030               	goto	l1268
  4882  001C4E  D7F1               	goto	l3736
  4883                           
  4884                           ; BSR set to: 0
  4885  001C50  D02E               	goto	l1268
  4886  001C52                     l3740:
  4887                           
  4888                           ; BSR set to: 0
  4889  001C52  0100               	movlb	0	; () banked
  4890  001C54  5185               	movf	___ftadd@exp1& (0+255),w,b
  4891  001C56  0100               	movlb	0	; () banked
  4892  001C58  5D84               	subwf	___ftadd@exp2& (0+255),w,b
  4893  001C5A  B0D8               	btfsc	status,0,c
  4894  001C5C  D028               	goto	l1268
  4895  001C5E                     l3742:
  4896                           
  4897                           ; BSR set to: 0
  4898  001C5E  0100               	movlb	0	; () banked
  4899  001C60  90D8               	bcf	status,0,c
  4900  001C62  377A               	rlcf	___ftadd@f1& (0+255),f,b
  4901  001C64  377B               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  4902  001C66  377C               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  4903  001C68  0100               	movlb	0	; () banked
  4904  001C6A  0785               	decf	___ftadd@exp1& (0+255),f,b
  4905                           
  4906                           ; BSR set to: 0
  4907  001C6C  0100               	movlb	0	; () banked
  4908  001C6E  5185               	movf	___ftadd@exp1& (0+255),w,b
  4909  001C70  0100               	movlb	0	; () banked
  4910  001C72  1984               	xorwf	___ftadd@exp2& (0+255),w,b
  4911  001C74  B4D8               	btfsc	status,2,c
  4912  001C76  D013               	goto	l3750
  4913                           
  4914                           ; BSR set to: 0
  4915  001C78  0100               	movlb	0	; () banked
  4916  001C7A  0783               	decf	___ftadd@sign& (0+255),f,b
  4917  001C7C  C083  F080         	movff	___ftadd@sign,??___ftadd
  4918  001C80  0E07               	movlw	7
  4919  001C82  0100               	movlb	0	; () banked
  4920  001C84  1780               	andwf	??___ftadd& (0+255),f,b
  4921  001C86  B4D8               	btfsc	status,2,c
  4922  001C88  D00A               	goto	l3750
  4923  001C8A  D7E9               	goto	l3742
  4924                           
  4925                           ; BSR set to: 0
  4926                           
  4927                           ; BSR set to: 0
  4928  001C8C  D008               	goto	l3750
  4929  001C8E                     l3748:
  4930                           
  4931                           ; BSR set to: 0
  4932  001C8E  0100               	movlb	0	; () banked
  4933  001C90  90D8               	bcf	status,0,c
  4934  001C92  337F               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  4935  001C94  337E               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  4936  001C96  337D               	rrcf	___ftadd@f2& (0+255),f,b
  4937  001C98  0100               	movlb	0	; () banked
  4938  001C9A  2B84               	incf	___ftadd@exp2& (0+255),f,b
  4939  001C9C  D000               	goto	l3750
  4940  001C9E                     l3750:
  4941                           
  4942                           ; BSR set to: 0
  4943  001C9E  0100               	movlb	0	; () banked
  4944  001CA0  5184               	movf	___ftadd@exp2& (0+255),w,b
  4945  001CA2  0100               	movlb	0	; () banked
  4946  001CA4  1985               	xorwf	___ftadd@exp1& (0+255),w,b
  4947  001CA6  B4D8               	btfsc	status,2,c
  4948  001CA8  D002               	goto	l1268
  4949  001CAA  D7F1               	goto	l3748
  4950                           
  4951                           ; BSR set to: 0
  4952  001CAC  D000               	goto	l1268
  4953  001CAE                     l1268:
  4954                           
  4955                           ; BSR set to: 0
  4956  001CAE  0100               	movlb	0	; () banked
  4957  001CB0  AF83               	btfss	___ftadd@sign& (0+255),7,b
  4958  001CB2  D012               	goto	l1277
  4959                           
  4960                           ; BSR set to: 0
  4961  001CB4  0EFF               	movlw	255
  4962  001CB6  0100               	movlb	0	; () banked
  4963  001CB8  1B7A               	xorwf	___ftadd@f1& (0+255),f,b
  4964  001CBA  0EFF               	movlw	255
  4965  001CBC  0100               	movlb	0	; () banked
  4966  001CBE  1B7B               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  4967  001CC0  0EFF               	movlw	255
  4968  001CC2  0100               	movlb	0	; () banked
  4969  001CC4  1B7C               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  4970  001CC6  0E01               	movlw	1
  4971  001CC8  0100               	movlb	0	; () banked
  4972  001CCA  277A               	addwf	___ftadd@f1& (0+255),f,b
  4973  001CCC  0E00               	movlw	0
  4974  001CCE  0100               	movlb	0	; () banked
  4975  001CD0  237B               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  4976  001CD2  0E00               	movlw	0
  4977  001CD4  0100               	movlb	0	; () banked
  4978  001CD6  237C               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  4979  001CD8                     l1277:
  4980                           
  4981                           ; BSR set to: 0
  4982  001CD8  0100               	movlb	0	; () banked
  4983  001CDA  AD83               	btfss	___ftadd@sign& (0+255),6,b
  4984  001CDC  D013               	goto	l3756
  4985                           
  4986                           ; BSR set to: 0
  4987  001CDE  0EFF               	movlw	255
  4988  001CE0  0100               	movlb	0	; () banked
  4989  001CE2  1B7D               	xorwf	___ftadd@f2& (0+255),f,b
  4990  001CE4  0EFF               	movlw	255
  4991  001CE6  0100               	movlb	0	; () banked
  4992  001CE8  1B7E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  4993  001CEA  0EFF               	movlw	255
  4994  001CEC  0100               	movlb	0	; () banked
  4995  001CEE  1B7F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  4996  001CF0  0E01               	movlw	1
  4997  001CF2  0100               	movlb	0	; () banked
  4998  001CF4  277D               	addwf	___ftadd@f2& (0+255),f,b
  4999  001CF6  0E00               	movlw	0
  5000  001CF8  0100               	movlb	0	; () banked
  5001  001CFA  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5002  001CFC  0E00               	movlw	0
  5003  001CFE  0100               	movlb	0	; () banked
  5004  001D00  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5005  001D02  D000               	goto	l3756
  5006  001D04                     l3756:
  5007                           
  5008                           ; BSR set to: 0
  5009  001D04  0E00               	movlw	0
  5010  001D06  0100               	movlb	0	; () banked
  5011  001D08  6F83               	movwf	___ftadd@sign& (0+255),b
  5012                           
  5013                           ; BSR set to: 0
  5014  001D0A  0100               	movlb	0	; () banked
  5015  001D0C  517A               	movf	___ftadd@f1& (0+255),w,b
  5016  001D0E  0100               	movlb	0	; () banked
  5017  001D10  277D               	addwf	___ftadd@f2& (0+255),f,b
  5018  001D12  0100               	movlb	0	; () banked
  5019  001D14  517B               	movf	(___ftadd@f1+1)& (0+255),w,b
  5020  001D16  0100               	movlb	0	; () banked
  5021  001D18  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5022  001D1A  0100               	movlb	0	; () banked
  5023  001D1C  517C               	movf	(___ftadd@f1+2)& (0+255),w,b
  5024  001D1E  0100               	movlb	0	; () banked
  5025  001D20  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5026                           
  5027                           ; BSR set to: 0
  5028  001D22  0100               	movlb	0	; () banked
  5029  001D24  AF7F               	btfss	(___ftadd@f2+2)& (0+255),7,b
  5030  001D26  D016               	goto	l3766
  5031                           
  5032                           ; BSR set to: 0
  5033  001D28  0EFF               	movlw	255
  5034  001D2A  0100               	movlb	0	; () banked
  5035  001D2C  1B7D               	xorwf	___ftadd@f2& (0+255),f,b
  5036  001D2E  0EFF               	movlw	255
  5037  001D30  0100               	movlb	0	; () banked
  5038  001D32  1B7E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  5039  001D34  0EFF               	movlw	255
  5040  001D36  0100               	movlb	0	; () banked
  5041  001D38  1B7F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  5042  001D3A  0E01               	movlw	1
  5043  001D3C  0100               	movlb	0	; () banked
  5044  001D3E  277D               	addwf	___ftadd@f2& (0+255),f,b
  5045  001D40  0E00               	movlw	0
  5046  001D42  0100               	movlb	0	; () banked
  5047  001D44  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5048  001D46  0E00               	movlw	0
  5049  001D48  0100               	movlb	0	; () banked
  5050  001D4A  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5051                           
  5052                           ; BSR set to: 0
  5053  001D4C  0E01               	movlw	1
  5054  001D4E  0100               	movlb	0	; () banked
  5055  001D50  6F83               	movwf	___ftadd@sign& (0+255),b
  5056  001D52  D000               	goto	l3766
  5057  001D54                     l3766:
  5058                           
  5059                           ; BSR set to: 0
  5060  001D54  C07D  F072         	movff	___ftadd@f2,___ftpack@arg
  5061  001D58  C07E  F073         	movff	___ftadd@f2+1,___ftpack@arg+1
  5062  001D5C  C07F  F074         	movff	___ftadd@f2+2,___ftpack@arg+2
  5063  001D60  C085  F075         	movff	___ftadd@exp1,___ftpack@exp
  5064  001D64  C083  F076         	movff	___ftadd@sign,___ftpack@sign
  5065  001D68  EC60  F013         	call	___ftpack	;wreg free
  5066  001D6C  C072  F07A         	movff	?___ftpack,?___ftadd
  5067  001D70  C073  F07B         	movff	?___ftpack+1,?___ftadd+1
  5068  001D74  C074  F07C         	movff	?___ftpack+2,?___ftadd+2
  5069  001D78  0012               	return	
  5070  001D7A  0012               	return		;funcret
  5071  001D7C                     __end_of___ftadd:
  5072                           	opt stack 0
  5073                           tblptru	equ	0xFF8
  5074                           tblptrh	equ	0xFF7
  5075                           tblptrl	equ	0xFF6
  5076                           tablat	equ	0xFF5
  5077                           prodh	equ	0xFF4
  5078                           prodl	equ	0xFF3
  5079                           intcon	equ	0xFF2
  5080                           intcon2	equ	0xFF1
  5081                           postinc0	equ	0xFEE
  5082                           plusw0	equ	0xFEB
  5083                           wreg	equ	0xFE8
  5084                           indf1	equ	0xFE7
  5085                           postdec1	equ	0xFE5
  5086                           fsr1h	equ	0xFE2
  5087                           fsr1l	equ	0xFE1
  5088                           indf2	equ	0xFDF
  5089                           postinc2	equ	0xFDE
  5090                           postdec2	equ	0xFDD
  5091                           plusw2	equ	0xFDB
  5092                           fsr2h	equ	0xFDA
  5093                           fsr2l	equ	0xFD9
  5094                           status	equ	0xFD8
  5095                           
  5096 ;; *************** function ___altoft *****************
  5097 ;; Defined at:
  5098 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;  c               4   26[BANK0 ] long 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  sign            1   35[BANK0 ] unsigned char 
  5103 ;;  exp             1   34[BANK0 ] unsigned char 
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  3   26[BANK0 ] float 
  5106 ;; Registers used:
  5107 ;;		wreg, status,2, status,0, cstack
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5113 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5114 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5115 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5116 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5117 ;;Total ram usage:       10 bytes
  5118 ;; Hardware stack levels used:    1
  5119 ;; Hardware stack levels required when called:    5
  5120 ;; This function calls:
  5121 ;;		___ftpack
  5122 ;; This function is called by:
  5123 ;;		_Round
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           	psect	text23
  5128  002FDA                     __ptext23:
  5129                           	opt stack 0
  5130  002FDA                     ___altoft:
  5131                           	opt stack 22
  5132                           
  5133                           ;incstack = 0
  5134  002FDA  0E00               	movlw	0
  5135  002FDC  0100               	movlb	0	; () banked
  5136  002FDE  6F83               	movwf	___altoft@sign& (0+255),b
  5137  002FE0  0E8E               	movlw	142
  5138  002FE2  0100               	movlb	0	; () banked
  5139  002FE4  6F82               	movwf	___altoft@exp& (0+255),b
  5140                           
  5141                           ; BSR set to: 0
  5142  002FE6  0100               	movlb	0	; () banked
  5143  002FE8  AF7D               	btfss	(___altoft@c+3)& (0+255),7,b
  5144  002FEA  D016               	goto	l3694
  5145                           
  5146                           ; BSR set to: 0
  5147  002FEC  0100               	movlb	0	; () banked
  5148  002FEE  1F7D               	comf	(___altoft@c+3)& (0+255),f,b
  5149  002FF0  1F7C               	comf	(___altoft@c+2)& (0+255),f,b
  5150  002FF2  1F7B               	comf	(___altoft@c+1)& (0+255),f,b
  5151  002FF4  6D7A               	negf	___altoft@c& (0+255),b
  5152  002FF6  0E00               	movlw	0
  5153  002FF8  237B               	addwfc	(___altoft@c+1)& (0+255),f,b
  5154  002FFA  237C               	addwfc	(___altoft@c+2)& (0+255),f,b
  5155  002FFC  237D               	addwfc	(___altoft@c+3)& (0+255),f,b
  5156                           
  5157                           ; BSR set to: 0
  5158  002FFE  0E01               	movlw	1
  5159  003000  0100               	movlb	0	; () banked
  5160  003002  6F83               	movwf	___altoft@sign& (0+255),b
  5161                           
  5162                           ; BSR set to: 0
  5163  003004  D009               	goto	l3694
  5164  003006                     l3692:
  5165                           
  5166                           ; BSR set to: 0
  5167  003006  0100               	movlb	0	; () banked
  5168  003008  90D8               	bcf	status,0,c
  5169  00300A  337D               	rrcf	(___altoft@c+3)& (0+255),f,b
  5170  00300C  337C               	rrcf	(___altoft@c+2)& (0+255),f,b
  5171  00300E  337B               	rrcf	(___altoft@c+1)& (0+255),f,b
  5172  003010  337A               	rrcf	___altoft@c& (0+255),f,b
  5173  003012  0100               	movlb	0	; () banked
  5174  003014  2B82               	incf	___altoft@exp& (0+255),f,b
  5175  003016  D000               	goto	l3694
  5176  003018                     l3694:
  5177                           
  5178                           ; BSR set to: 0
  5179  003018  0E00               	movlw	0
  5180  00301A  0100               	movlb	0	; () banked
  5181  00301C  157A               	andwf	___altoft@c& (0+255),w,b
  5182  00301E  0100               	movlb	0	; () banked
  5183  003020  6F7E               	movwf	??___altoft& (0+255),b
  5184  003022  0E00               	movlw	0
  5185  003024  0100               	movlb	0	; () banked
  5186  003026  157B               	andwf	(___altoft@c+1)& (0+255),w,b
  5187  003028  0100               	movlb	0	; () banked
  5188  00302A  6F7F               	movwf	(??___altoft+1)& (0+255),b
  5189  00302C  0E00               	movlw	0
  5190  00302E  0100               	movlb	0	; () banked
  5191  003030  157C               	andwf	(___altoft@c+2)& (0+255),w,b
  5192  003032  0100               	movlb	0	; () banked
  5193  003034  6F80               	movwf	(??___altoft+2)& (0+255),b
  5194  003036  0EFF               	movlw	255
  5195  003038  0100               	movlb	0	; () banked
  5196  00303A  157D               	andwf	(___altoft@c+3)& (0+255),w,b
  5197  00303C  0100               	movlb	0	; () banked
  5198  00303E  6F81               	movwf	(??___altoft+3)& (0+255),b
  5199  003040  0100               	movlb	0	; () banked
  5200  003042  517E               	movf	??___altoft& (0+255),w,b
  5201  003044  0100               	movlb	0	; () banked
  5202  003046  117F               	iorwf	(??___altoft+1)& (0+255),w,b
  5203  003048  0100               	movlb	0	; () banked
  5204  00304A  1180               	iorwf	(??___altoft+2)& (0+255),w,b
  5205  00304C  0100               	movlb	0	; () banked
  5206  00304E  1181               	iorwf	(??___altoft+3)& (0+255),w,b
  5207  003050  A4D8               	btfss	status,2,c
  5208  003052  D7D9               	goto	l3692
  5209                           
  5210                           ; BSR set to: 0
  5211                           
  5212                           ; BSR set to: 0
  5213  003054  C07A  F072         	movff	___altoft@c,___ftpack@arg
  5214  003058  C07B  F073         	movff	___altoft@c+1,___ftpack@arg+1
  5215  00305C  C07C  F074         	movff	___altoft@c+2,___ftpack@arg+2
  5216  003060  C082  F075         	movff	___altoft@exp,___ftpack@exp
  5217  003064  C083  F076         	movff	___altoft@sign,___ftpack@sign
  5218  003068  EC60  F013         	call	___ftpack	;wreg free
  5219  00306C  C072  F07A         	movff	?___ftpack,?___altoft
  5220  003070  C073  F07B         	movff	?___ftpack+1,?___altoft+1
  5221  003074  C074  F07C         	movff	?___ftpack+2,?___altoft+2
  5222  003078  0012               	return	
  5223  00307A  0012               	return		;funcret
  5224  00307C                     __end_of___altoft:
  5225                           	opt stack 0
  5226                           tblptru	equ	0xFF8
  5227                           tblptrh	equ	0xFF7
  5228                           tblptrl	equ	0xFF6
  5229                           tablat	equ	0xFF5
  5230                           prodh	equ	0xFF4
  5231                           prodl	equ	0xFF3
  5232                           intcon	equ	0xFF2
  5233                           intcon2	equ	0xFF1
  5234                           postinc0	equ	0xFEE
  5235                           plusw0	equ	0xFEB
  5236                           wreg	equ	0xFE8
  5237                           indf1	equ	0xFE7
  5238                           postdec1	equ	0xFE5
  5239                           fsr1h	equ	0xFE2
  5240                           fsr1l	equ	0xFE1
  5241                           indf2	equ	0xFDF
  5242                           postinc2	equ	0xFDE
  5243                           postdec2	equ	0xFDD
  5244                           plusw2	equ	0xFDB
  5245                           fsr2h	equ	0xFDA
  5246                           fsr2l	equ	0xFD9
  5247                           status	equ	0xFD8
  5248                           
  5249 ;; *************** function ___ftpack *****************
  5250 ;; Defined at:
  5251 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;  arg             3   18[BANK0 ] unsigned um
  5254 ;;  exp             1   21[BANK0 ] unsigned char 
  5255 ;;  sign            1   22[BANK0 ] unsigned char 
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;		None
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  3   18[BANK0 ] float 
  5260 ;; Registers used:
  5261 ;;		wreg, status,2, status,0
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5267 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5271 ;;Total ram usage:        8 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; Hardware stack levels required when called:    4
  5274 ;; This function calls:
  5275 ;;		Nothing
  5276 ;; This function is called by:
  5277 ;;		___altoft
  5278 ;;		___ftadd
  5279 ;;		___ftdiv
  5280 ;;		___ftmul
  5281 ;;		___lltoft
  5282 ;;		___lwtoft
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           	psect	text24
  5287  0026C0                     __ptext24:
  5288                           	opt stack 0
  5289  0026C0                     ___ftpack:
  5290                           	opt stack 24
  5291                           
  5292                           ;incstack = 0
  5293  0026C0  0100               	movlb	0	; () banked
  5294  0026C2  5175               	movf	___ftpack@exp& (0+255),w,b
  5295  0026C4  0100               	movlb	0	; () banked
  5296  0026C6  B4D8               	btfsc	status,2,c
  5297  0026C8  D008               	goto	l3500
  5298                           
  5299                           ; BSR set to: 0
  5300  0026CA  0100               	movlb	0	; () banked
  5301  0026CC  5172               	movf	___ftpack@arg& (0+255),w,b
  5302  0026CE  0100               	movlb	0	; () banked
  5303  0026D0  1173               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  5304  0026D2  0100               	movlb	0	; () banked
  5305  0026D4  1174               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  5306  0026D6  A4D8               	btfss	status,2,c
  5307  0026D8  D013               	goto	l3506
  5308  0026DA                     l3500:
  5309                           
  5310                           ; BSR set to: 0
  5311  0026DA  0E00               	movlw	0
  5312  0026DC  0100               	movlb	0	; () banked
  5313  0026DE  6F72               	movwf	?___ftpack& (0+255),b
  5314  0026E0  0E00               	movlw	0
  5315  0026E2  0100               	movlb	0	; () banked
  5316  0026E4  6F73               	movwf	(?___ftpack+1)& (0+255),b
  5317  0026E6  0E00               	movlw	0
  5318  0026E8  0100               	movlb	0	; () banked
  5319  0026EA  6F74               	movwf	(?___ftpack+2)& (0+255),b
  5320                           
  5321                           ; BSR set to: 0
  5322  0026EC  0012               	return	
  5323                           
  5324                           ; BSR set to: 0
  5325  0026EE  D008               	goto	l3506
  5326  0026F0                     l3504:
  5327                           
  5328                           ; BSR set to: 0
  5329  0026F0  0100               	movlb	0	; () banked
  5330  0026F2  2B75               	incf	___ftpack@exp& (0+255),f,b
  5331  0026F4  0100               	movlb	0	; () banked
  5332  0026F6  90D8               	bcf	status,0,c
  5333  0026F8  3374               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  5334  0026FA  3373               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  5335  0026FC  3372               	rrcf	___ftpack@arg& (0+255),f,b
  5336  0026FE  D000               	goto	l3506
  5337  002700                     l3506:
  5338                           
  5339                           ; BSR set to: 0
  5340  002700  0E00               	movlw	0
  5341  002702  0100               	movlb	0	; () banked
  5342  002704  1572               	andwf	___ftpack@arg& (0+255),w,b
  5343  002706  0100               	movlb	0	; () banked
  5344  002708  6F77               	movwf	??___ftpack& (0+255),b
  5345  00270A  0E00               	movlw	0
  5346  00270C  0100               	movlb	0	; () banked
  5347  00270E  1573               	andwf	(___ftpack@arg+1)& (0+255),w,b
  5348  002710  0100               	movlb	0	; () banked
  5349  002712  6F78               	movwf	(??___ftpack+1)& (0+255),b
  5350  002714  0EFE               	movlw	254
  5351  002716  0100               	movlb	0	; () banked
  5352  002718  1574               	andwf	(___ftpack@arg+2)& (0+255),w,b
  5353  00271A  0100               	movlb	0	; () banked
  5354  00271C  6F79               	movwf	(??___ftpack+2)& (0+255),b
  5355  00271E  0100               	movlb	0	; () banked
  5356  002720  5177               	movf	??___ftpack& (0+255),w,b
  5357  002722  0100               	movlb	0	; () banked
  5358  002724  1178               	iorwf	(??___ftpack+1)& (0+255),w,b
  5359  002726  0100               	movlb	0	; () banked
  5360  002728  1179               	iorwf	(??___ftpack+2)& (0+255),w,b
  5361  00272A  B4D8               	btfsc	status,2,c
  5362  00272C  D013               	goto	l3512
  5363  00272E  D7E0               	goto	l3504
  5364                           
  5365                           ; BSR set to: 0
  5366  002730  D011               	goto	l3512
  5367  002732                     l3508:
  5368                           
  5369                           ; BSR set to: 0
  5370  002732  0100               	movlb	0	; () banked
  5371  002734  2B75               	incf	___ftpack@exp& (0+255),f,b
  5372                           
  5373                           ; BSR set to: 0
  5374  002736  0E01               	movlw	1
  5375  002738  0100               	movlb	0	; () banked
  5376  00273A  2772               	addwf	___ftpack@arg& (0+255),f,b
  5377  00273C  0E00               	movlw	0
  5378  00273E  0100               	movlb	0	; () banked
  5379  002740  2373               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  5380  002742  0E00               	movlw	0
  5381  002744  0100               	movlb	0	; () banked
  5382  002746  2374               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  5383  002748  0100               	movlb	0	; () banked
  5384  00274A  90D8               	bcf	status,0,c
  5385  00274C  3374               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  5386  00274E  3373               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  5387  002750  3372               	rrcf	___ftpack@arg& (0+255),f,b
  5388  002752  D000               	goto	l3512
  5389  002754                     l3512:
  5390                           
  5391                           ; BSR set to: 0
  5392  002754  0E00               	movlw	0
  5393  002756  0100               	movlb	0	; () banked
  5394  002758  1572               	andwf	___ftpack@arg& (0+255),w,b
  5395  00275A  0100               	movlb	0	; () banked
  5396  00275C  6F77               	movwf	??___ftpack& (0+255),b
  5397  00275E  0E00               	movlw	0
  5398  002760  0100               	movlb	0	; () banked
  5399  002762  1573               	andwf	(___ftpack@arg+1)& (0+255),w,b
  5400  002764  0100               	movlb	0	; () banked
  5401  002766  6F78               	movwf	(??___ftpack+1)& (0+255),b
  5402  002768  0EFF               	movlw	255
  5403  00276A  0100               	movlb	0	; () banked
  5404  00276C  1574               	andwf	(___ftpack@arg+2)& (0+255),w,b
  5405  00276E  0100               	movlb	0	; () banked
  5406  002770  6F79               	movwf	(??___ftpack+2)& (0+255),b
  5407  002772  0100               	movlb	0	; () banked
  5408  002774  5177               	movf	??___ftpack& (0+255),w,b
  5409  002776  0100               	movlb	0	; () banked
  5410  002778  1178               	iorwf	(??___ftpack+1)& (0+255),w,b
  5411  00277A  0100               	movlb	0	; () banked
  5412  00277C  1179               	iorwf	(??___ftpack+2)& (0+255),w,b
  5413  00277E  B4D8               	btfsc	status,2,c
  5414  002780  D00A               	goto	l3516
  5415  002782  D7D7               	goto	l3508
  5416                           
  5417                           ; BSR set to: 0
  5418  002784  D008               	goto	l3516
  5419  002786                     l3514:
  5420                           
  5421                           ; BSR set to: 0
  5422  002786  0100               	movlb	0	; () banked
  5423  002788  0775               	decf	___ftpack@exp& (0+255),f,b
  5424  00278A  0100               	movlb	0	; () banked
  5425  00278C  90D8               	bcf	status,0,c
  5426  00278E  3772               	rlcf	___ftpack@arg& (0+255),f,b
  5427  002790  3773               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  5428  002792  3774               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  5429  002794  D000               	goto	l3516
  5430  002796                     l3516:
  5431                           
  5432                           ; BSR set to: 0
  5433  002796  0100               	movlb	0	; () banked
  5434  002798  BF73               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  5435  00279A  D005               	goto	l1224
  5436                           
  5437                           ; BSR set to: 0
  5438  00279C  0E02               	movlw	2
  5439  00279E  0100               	movlb	0	; () banked
  5440  0027A0  6175               	cpfslt	___ftpack@exp& (0+255),b
  5441  0027A2  D7F1               	goto	l3514
  5442  0027A4  D000               	goto	l1224
  5443  0027A6                     l1224:
  5444                           
  5445                           ; BSR set to: 0
  5446  0027A6  0100               	movlb	0	; () banked
  5447  0027A8  B175               	btfsc	___ftpack@exp& (0+255),0,b
  5448  0027AA  D003               	goto	l3522
  5449                           
  5450                           ; BSR set to: 0
  5451  0027AC  0100               	movlb	0	; () banked
  5452  0027AE  9F73               	bcf	(___ftpack@arg+1)& (0+255),7,b
  5453  0027B0  D000               	goto	l3522
  5454  0027B2                     l3522:
  5455                           
  5456                           ; BSR set to: 0
  5457  0027B2  0100               	movlb	0	; () banked
  5458  0027B4  90D8               	bcf	status,0,c
  5459  0027B6  3375               	rrcf	___ftpack@exp& (0+255),f,b
  5460  0027B8  0100               	movlb	0	; () banked
  5461  0027BA  5175               	movf	___ftpack@exp& (0+255),w,b
  5462  0027BC  0100               	movlb	0	; () banked
  5463  0027BE  1374               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  5464                           
  5465                           ; BSR set to: 0
  5466  0027C0  0100               	movlb	0	; () banked
  5467  0027C2  5176               	movf	___ftpack@sign& (0+255),w,b
  5468  0027C4  0100               	movlb	0	; () banked
  5469  0027C6  B4D8               	btfsc	status,2,c
  5470  0027C8  D003               	goto	l3528
  5471                           
  5472                           ; BSR set to: 0
  5473  0027CA  0100               	movlb	0	; () banked
  5474  0027CC  8F74               	bsf	(___ftpack@arg+2)& (0+255),7,b
  5475  0027CE  D000               	goto	l3528
  5476  0027D0                     l3528:
  5477                           
  5478                           ; BSR set to: 0
  5479  0027D0  C072  F072         	movff	___ftpack@arg,?___ftpack
  5480  0027D4  C073  F073         	movff	___ftpack@arg+1,?___ftpack+1
  5481  0027D8  C074  F074         	movff	___ftpack@arg+2,?___ftpack+2
  5482  0027DC  0012               	return	
  5483                           
  5484                           ; BSR set to: 0
  5485                           
  5486                           ; BSR set to: 0
  5487  0027DE  0012               	return		;funcret
  5488  0027E0                     __end_of___ftpack:
  5489                           	opt stack 0
  5490                           tblptru	equ	0xFF8
  5491                           tblptrh	equ	0xFF7
  5492                           tblptrl	equ	0xFF6
  5493                           tablat	equ	0xFF5
  5494                           prodh	equ	0xFF4
  5495                           prodl	equ	0xFF3
  5496                           intcon	equ	0xFF2
  5497                           intcon2	equ	0xFF1
  5498                           postinc0	equ	0xFEE
  5499                           plusw0	equ	0xFEB
  5500                           wreg	equ	0xFE8
  5501                           indf1	equ	0xFE7
  5502                           postdec1	equ	0xFE5
  5503                           fsr1h	equ	0xFE2
  5504                           fsr1l	equ	0xFE1
  5505                           indf2	equ	0xFDF
  5506                           postinc2	equ	0xFDE
  5507                           postdec2	equ	0xFDD
  5508                           plusw2	equ	0xFDB
  5509                           fsr2h	equ	0xFDA
  5510                           fsr2l	equ	0xFD9
  5511                           status	equ	0xFD8
  5512                           
  5513 ;; *************** function _OpenUSART *****************
  5514 ;; Defined at:
  5515 ;;		line 112 in file "UART.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;  config          1    wreg     unsigned char 
  5518 ;;  spbrg           2   18[BANK0 ] unsigned int 
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;  config          1   20[BANK0 ] unsigned char 
  5521 ;; Return value:  Size  Location     Type
  5522 ;;		None               void
  5523 ;; Registers used:
  5524 ;;		wreg, status,2
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5530 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5531 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5533 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5534 ;;Total ram usage:        3 bytes
  5535 ;; Hardware stack levels used:    1
  5536 ;; Hardware stack levels required when called:    4
  5537 ;; This function calls:
  5538 ;;		Nothing
  5539 ;; This function is called by:
  5540 ;;		_InitUART
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           	psect	text25
  5545  0032B2                     __ptext25:
  5546                           	opt stack 0
  5547  0032B2                     _OpenUSART:
  5548                           	opt stack 24
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;incstack = 0
  5552                           ;OpenUSART@config stored from wreg
  5553  0032B2  0100               	movlb	0	; () banked
  5554  0032B4  6F74               	movwf	OpenUSART@config& (0+255),b
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;UART.c: 114: TXSTA = 0;
  5558  0032B6  0E00               	movlw	0
  5559  0032B8  6EAC               	movwf	4012,c	;volatile
  5560                           
  5561                           ;UART.c: 115: RCSTA = 0;
  5562  0032BA  0E00               	movlw	0
  5563  0032BC  6EAB               	movwf	4011,c	;volatile
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;UART.c: 117: if(config&0x01)
  5567  0032BE  0100               	movlb	0	; () banked
  5568  0032C0  A174               	btfss	OpenUSART@config& (0+255),0,b
  5569  0032C2  D002               	goto	l3836
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;UART.c: 118: {
  5573                           ;UART.c: 119: TXSTAbits.SYNC = 1;
  5574  0032C4  88AC               	bsf	4012,4,c	;volatile
  5575  0032C6  D000               	goto	l3836
  5576  0032C8                     l3836:
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;UART.c: 120: }
  5580                           ;UART.c: 122: if(config&0x02)
  5581  0032C8  0100               	movlb	0	; () banked
  5582  0032CA  A374               	btfss	OpenUSART@config& (0+255),1,b
  5583  0032CC  D003               	goto	l3840
  5584                           
  5585                           ; BSR set to: 0
  5586                           ;UART.c: 123: {
  5587                           ;UART.c: 124: TXSTAbits.TX9 = 1;
  5588  0032CE  8CAC               	bsf	4012,6,c	;volatile
  5589                           
  5590                           ;UART.c: 125: RCSTAbits.RX9 = 1;
  5591  0032D0  8CAB               	bsf	4011,6,c	;volatile
  5592  0032D2  D000               	goto	l3840
  5593  0032D4                     l3840:
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;UART.c: 126: }
  5597                           ;UART.c: 128: if(config&0x04)
  5598  0032D4  0100               	movlb	0	; () banked
  5599  0032D6  A574               	btfss	OpenUSART@config& (0+255),2,b
  5600  0032D8  D002               	goto	l3844
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;UART.c: 129: {
  5604                           ;UART.c: 130: TXSTAbits.CSRC = 1;
  5605  0032DA  8EAC               	bsf	4012,7,c	;volatile
  5606  0032DC  D000               	goto	l3844
  5607  0032DE                     l3844:
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;UART.c: 131: }
  5611                           ;UART.c: 133: if(config&0x08)
  5612  0032DE  0100               	movlb	0	; () banked
  5613  0032E0  A774               	btfss	OpenUSART@config& (0+255),3,b
  5614  0032E2  D002               	goto	l214
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;UART.c: 134: {
  5618                           ;UART.c: 135: RCSTAbits.CREN = 1;
  5619  0032E4  88AB               	bsf	4011,4,c	;volatile
  5620                           
  5621                           ;UART.c: 136: }
  5622  0032E6  D002               	goto	l3848
  5623  0032E8                     l214:
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;UART.c: 137: else
  5627                           ;UART.c: 138: {
  5628                           ;UART.c: 139: RCSTAbits.SREN = 1;
  5629  0032E8  8AAB               	bsf	4011,5,c	;volatile
  5630  0032EA  D000               	goto	l3848
  5631  0032EC                     l3848:
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;UART.c: 140: }
  5635                           ;UART.c: 142: if(config&0x10)
  5636  0032EC  0100               	movlb	0	; () banked
  5637  0032EE  A974               	btfss	OpenUSART@config& (0+255),4,b
  5638  0032F0  D002               	goto	l3852
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;UART.c: 143: {
  5642                           ;UART.c: 144: TXSTAbits.BRGH = 1;
  5643  0032F2  84AC               	bsf	4012,2,c	;volatile
  5644  0032F4  D000               	goto	l3852
  5645  0032F6                     l3852:
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;UART.c: 145: }
  5649                           ;UART.c: 147: if(config&0x20)
  5650  0032F6  0100               	movlb	0	; () banked
  5651  0032F8  AB74               	btfss	OpenUSART@config& (0+255),5,b
  5652  0032FA  D002               	goto	l3856
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;UART.c: 148: {
  5656                           ;UART.c: 149: RCSTAbits.ADEN = 1;
  5657  0032FC  86AB               	bsf	4011,3,c	;volatile
  5658  0032FE  D000               	goto	l3856
  5659  003300                     l3856:
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;UART.c: 150: }
  5663                           ;UART.c: 152: if(config&0x40)
  5664  003300  0100               	movlb	0	; () banked
  5665  003302  AD74               	btfss	OpenUSART@config& (0+255),6,b
  5666  003304  D003               	goto	l218
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;UART.c: 153: {
  5670                           ;UART.c: 154: PIR1bits.RCIF = 0;
  5671  003306  9A9E               	bcf	3998,5,c	;volatile
  5672                           
  5673                           ;UART.c: 155: PIE1bits.RCIE = 1;
  5674  003308  8A9D               	bsf	3997,5,c	;volatile
  5675                           
  5676                           ;UART.c: 157: }
  5677  00330A  D002               	goto	l3860
  5678  00330C                     l218:
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;UART.c: 158: else
  5682                           ;UART.c: 159: {
  5683                           ;UART.c: 160: PIE1bits.RCIE = 0;
  5684  00330C  9A9D               	bcf	3997,5,c	;volatile
  5685  00330E  D000               	goto	l3860
  5686  003310                     l3860:
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;UART.c: 161: }
  5690                           ;UART.c: 163: if(config&0x80)
  5691  003310  0100               	movlb	0	; () banked
  5692  003312  AF74               	btfss	OpenUSART@config& (0+255),7,b
  5693  003314  D003               	goto	l220
  5694                           
  5695                           ; BSR set to: 0
  5696                           ;UART.c: 164: {
  5697                           ;UART.c: 165: PIR1bits.TXIF = 0;
  5698  003316  989E               	bcf	3998,4,c	;volatile
  5699                           
  5700                           ;UART.c: 166: PIE1bits.TXIE = 1;
  5701  003318  889D               	bsf	3997,4,c	;volatile
  5702                           
  5703                           ;UART.c: 167: }
  5704  00331A  D001               	goto	l221
  5705  00331C                     l220:
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;UART.c: 168: else
  5709                           ;UART.c: 169: {
  5710                           ;UART.c: 170: PIE1bits.TXIE = 0;
  5711  00331C  989D               	bcf	3997,4,c	;volatile
  5712  00331E                     l221:
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;UART.c: 171: }
  5716                           ;UART.c: 173: SPBRG = spbrg;
  5717  00331E  C072  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;UART.c: 174: SPBRGH = spbrg >> 8;
  5721  003322  0100               	movlb	0	; () banked
  5722  003324  5173               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
  5723  003326  6EB0               	movwf	4016,c	;volatile
  5724                           
  5725                           ; BSR set to: 0
  5726                           ;UART.c: 176: TXSTAbits.TXEN = 1;
  5727  003328  8AAC               	bsf	4012,5,c	;volatile
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;UART.c: 177: RCSTAbits.SPEN = 1;
  5731  00332A  8EAB               	bsf	4011,7,c	;volatile
  5732                           
  5733                           ; BSR set to: 0
  5734  00332C  0012               	return		;funcret
  5735  00332E                     __end_of_OpenUSART:
  5736                           	opt stack 0
  5737                           tblptru	equ	0xFF8
  5738                           tblptrh	equ	0xFF7
  5739                           tblptrl	equ	0xFF6
  5740                           tablat	equ	0xFF5
  5741                           prodh	equ	0xFF4
  5742                           prodl	equ	0xFF3
  5743                           intcon	equ	0xFF2
  5744                           intcon2	equ	0xFF1
  5745                           postinc0	equ	0xFEE
  5746                           plusw0	equ	0xFEB
  5747                           wreg	equ	0xFE8
  5748                           indf1	equ	0xFE7
  5749                           postdec1	equ	0xFE5
  5750                           fsr1h	equ	0xFE2
  5751                           fsr1l	equ	0xFE1
  5752                           indf2	equ	0xFDF
  5753                           postinc2	equ	0xFDE
  5754                           postdec2	equ	0xFDD
  5755                           plusw2	equ	0xFDB
  5756                           fsr2h	equ	0xFDA
  5757                           fsr2l	equ	0xFD9
  5758                           status	equ	0xFD8
  5759                           
  5760 ;; *************** function _Local_CloseUSART *****************
  5761 ;; Defined at:
  5762 ;;		line 62 in file "UART.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;		None
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;		None
  5767 ;; Return value:  Size  Location     Type
  5768 ;;		None               void
  5769 ;; Registers used:
  5770 ;;		None
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5780 ;;Total ram usage:        0 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; Hardware stack levels required when called:    4
  5783 ;; This function calls:
  5784 ;;		Nothing
  5785 ;; This function is called by:
  5786 ;;		_InitUART
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text26
  5791  003950                     __ptext26:
  5792                           	opt stack 0
  5793  003950                     _Local_CloseUSART:
  5794                           	opt stack 24
  5795                           
  5796                           ;UART.c: 64: PIE1bits.RCIE = 0;
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;incstack = 0
  5800  003950  9A9D               	bcf	3997,5,c	;volatile
  5801                           
  5802                           ;UART.c: 65: PIE1bits.TXIE = 0;
  5803  003952  989D               	bcf	3997,4,c	;volatile
  5804                           
  5805                           ;UART.c: 66: RCSTAbits.SPEN = 0;
  5806  003954  9EAB               	bcf	4011,7,c	;volatile
  5807                           
  5808                           ;UART.c: 67: RCSTAbits.CREN = 0;
  5809  003956  98AB               	bcf	4011,4,c	;volatile
  5810                           
  5811                           ;UART.c: 68: RCSTAbits.FERR = 0;
  5812  003958  94AB               	bcf	4011,2,c	;volatile
  5813                           
  5814                           ;UART.c: 69: TXSTAbits.TXEN = 0;
  5815  00395A  9AAC               	bcf	4012,5,c	;volatile
  5816  00395C  0012               	return		;funcret
  5817  00395E                     __end_of_Local_CloseUSART:
  5818                           	opt stack 0
  5819                           tblptru	equ	0xFF8
  5820                           tblptrh	equ	0xFF7
  5821                           tblptrl	equ	0xFF6
  5822                           tablat	equ	0xFF5
  5823                           prodh	equ	0xFF4
  5824                           prodl	equ	0xFF3
  5825                           intcon	equ	0xFF2
  5826                           intcon2	equ	0xFF1
  5827                           postinc0	equ	0xFEE
  5828                           plusw0	equ	0xFEB
  5829                           wreg	equ	0xFE8
  5830                           indf1	equ	0xFE7
  5831                           postdec1	equ	0xFE5
  5832                           fsr1h	equ	0xFE2
  5833                           fsr1l	equ	0xFE1
  5834                           indf2	equ	0xFDF
  5835                           postinc2	equ	0xFDE
  5836                           postdec2	equ	0xFDD
  5837                           plusw2	equ	0xFDB
  5838                           fsr2h	equ	0xFDA
  5839                           fsr2l	equ	0xFD9
  5840                           status	equ	0xFD8
  5841                           
  5842 ;; *************** function _InitTimers *****************
  5843 ;; Defined at:
  5844 ;;		line 49 in file "Timer.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;		None
  5847 ;; Auto vars:     Size  Location     Type
  5848 ;;		None
  5849 ;; Return value:  Size  Location     Type
  5850 ;;		None               void
  5851 ;; Registers used:
  5852 ;;		wreg, status,2, cstack
  5853 ;; Tracked objects:
  5854 ;;		On entry : 0/0
  5855 ;;		On exit  : 0/0
  5856 ;;		Unchanged: 0/0
  5857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5862 ;;Total ram usage:        0 bytes
  5863 ;; Hardware stack levels used:    1
  5864 ;; Hardware stack levels required when called:    5
  5865 ;; This function calls:
  5866 ;;		_InitTimer1
  5867 ;;		_InitTimer2
  5868 ;;		_InitTimer3
  5869 ;; This function is called by:
  5870 ;;		_Init_System
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           	psect	text27
  5875  00390C                     __ptext27:
  5876                           	opt stack 0
  5877  00390C                     _InitTimers:
  5878                           	opt stack 24
  5879                           
  5880                           ;Timer.c: 51: InitTimer1();
  5881                           
  5882                           ;incstack = 0
  5883  00390C  ECB6  F01C         	call	_InitTimer1	;wreg free
  5884                           
  5885                           ;Timer.c: 52: (PIE1bits.TMR1IE = TRUE);
  5886  003910  809D               	bsf	3997,0,c	;volatile
  5887                           
  5888                           ;Timer.c: 53: InitTimer2();
  5889  003912  ECAF  F01C         	call	_InitTimer2	;wreg free
  5890                           
  5891                           ;Timer.c: 54: (PIE1bits.TMR2IE = TRUE);
  5892  003916  829D               	bsf	3997,1,c	;volatile
  5893                           
  5894                           ;Timer.c: 55: InitTimer3();
  5895  003918  ECEB  F01C         	call	_InitTimer3	;wreg free
  5896                           
  5897                           ;Timer.c: 56: (PIE2bits.TMR3IE = TRUE);
  5898  00391C  82A0               	bsf	4000,1,c	;volatile
  5899  00391E  0012               	return		;funcret
  5900  003920                     __end_of_InitTimers:
  5901                           	opt stack 0
  5902                           tblptru	equ	0xFF8
  5903                           tblptrh	equ	0xFF7
  5904                           tblptrl	equ	0xFF6
  5905                           tablat	equ	0xFF5
  5906                           prodh	equ	0xFF4
  5907                           prodl	equ	0xFF3
  5908                           intcon	equ	0xFF2
  5909                           intcon2	equ	0xFF1
  5910                           postinc0	equ	0xFEE
  5911                           plusw0	equ	0xFEB
  5912                           wreg	equ	0xFE8
  5913                           indf1	equ	0xFE7
  5914                           postdec1	equ	0xFE5
  5915                           fsr1h	equ	0xFE2
  5916                           fsr1l	equ	0xFE1
  5917                           indf2	equ	0xFDF
  5918                           postinc2	equ	0xFDE
  5919                           postdec2	equ	0xFDD
  5920                           plusw2	equ	0xFDB
  5921                           fsr2h	equ	0xFDA
  5922                           fsr2l	equ	0xFD9
  5923                           status	equ	0xFD8
  5924                           
  5925 ;; *************** function _InitTimer3 *****************
  5926 ;; Defined at:
  5927 ;;		line 144 in file "Timer.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;		None
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;		None
  5932 ;; Return value:  Size  Location     Type
  5933 ;;		None               void
  5934 ;; Registers used:
  5935 ;;		wreg, status,2
  5936 ;; Tracked objects:
  5937 ;;		On entry : 0/0
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5945 ;;Total ram usage:        0 bytes
  5946 ;; Hardware stack levels used:    1
  5947 ;; Hardware stack levels required when called:    4
  5948 ;; This function calls:
  5949 ;;		Nothing
  5950 ;; This function is called by:
  5951 ;;		_InitTimers
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           	psect	text28
  5956  0039D6                     __ptext28:
  5957                           	opt stack 0
  5958  0039D6                     _InitTimer3:
  5959                           	opt stack 24
  5960                           
  5961                           ;Timer.c: 146: T3CONbits.RD16 = TRUE;
  5962                           
  5963                           ;incstack = 0
  5964  0039D6  8EB1               	bsf	4017,7,c	;volatile
  5965                           
  5966                           ;Timer.c: 147: T3CONbits.T3CKPS = 0x3;
  5967  0039D8  0E30               	movlw	48
  5968  0039DA  12B1               	iorwf	4017,f,c	;volatile
  5969                           
  5970                           ;Timer.c: 148: T3CONbits.TMR3CS = FALSE;
  5971  0039DC  92B1               	bcf	4017,1,c	;volatile
  5972  0039DE  0012               	return		;funcret
  5973  0039E0                     __end_of_InitTimer3:
  5974                           	opt stack 0
  5975                           tblptru	equ	0xFF8
  5976                           tblptrh	equ	0xFF7
  5977                           tblptrl	equ	0xFF6
  5978                           tablat	equ	0xFF5
  5979                           prodh	equ	0xFF4
  5980                           prodl	equ	0xFF3
  5981                           intcon	equ	0xFF2
  5982                           intcon2	equ	0xFF1
  5983                           postinc0	equ	0xFEE
  5984                           plusw0	equ	0xFEB
  5985                           wreg	equ	0xFE8
  5986                           indf1	equ	0xFE7
  5987                           postdec1	equ	0xFE5
  5988                           fsr1h	equ	0xFE2
  5989                           fsr1l	equ	0xFE1
  5990                           indf2	equ	0xFDF
  5991                           postinc2	equ	0xFDE
  5992                           postdec2	equ	0xFDD
  5993                           plusw2	equ	0xFDB
  5994                           fsr2h	equ	0xFDA
  5995                           fsr2l	equ	0xFD9
  5996                           status	equ	0xFD8
  5997                           
  5998 ;; *************** function _InitTimer2 *****************
  5999 ;; Defined at:
  6000 ;;		line 121 in file "Timer.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;		None
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;		None
  6005 ;; Return value:  Size  Location     Type
  6006 ;;		None               void
  6007 ;; Registers used:
  6008 ;;		wreg, status,2
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6018 ;;Total ram usage:        0 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; Hardware stack levels required when called:    4
  6021 ;; This function calls:
  6022 ;;		Nothing
  6023 ;; This function is called by:
  6024 ;;		_InitTimers
  6025 ;; This function uses a non-reentrant model
  6026 ;;
  6027                           
  6028                           	psect	text29
  6029  00395E                     __ptext29:
  6030                           	opt stack 0
  6031  00395E                     _InitTimer2:
  6032                           	opt stack 24
  6033                           
  6034                           ;Timer.c: 123: T2CONbits.T2OUTPS = 0xE;
  6035                           
  6036                           ;incstack = 0
  6037  00395E  50CA               	movf	4042,w,c	;volatile
  6038  003960  0B87               	andlw	-121
  6039  003962  0970               	iorlw	112
  6040  003964  6ECA               	movwf	4042,c	;volatile
  6041                           
  6042                           ;Timer.c: 124: T2CONbits.T2CKPS = 0x3;
  6043  003966  0E03               	movlw	3
  6044  003968  12CA               	iorwf	4042,f,c	;volatile
  6045  00396A  0012               	return		;funcret
  6046  00396C                     __end_of_InitTimer2:
  6047                           	opt stack 0
  6048                           tblptru	equ	0xFF8
  6049                           tblptrh	equ	0xFF7
  6050                           tblptrl	equ	0xFF6
  6051                           tablat	equ	0xFF5
  6052                           prodh	equ	0xFF4
  6053                           prodl	equ	0xFF3
  6054                           intcon	equ	0xFF2
  6055                           intcon2	equ	0xFF1
  6056                           postinc0	equ	0xFEE
  6057                           plusw0	equ	0xFEB
  6058                           wreg	equ	0xFE8
  6059                           indf1	equ	0xFE7
  6060                           postdec1	equ	0xFE5
  6061                           fsr1h	equ	0xFE2
  6062                           fsr1l	equ	0xFE1
  6063                           indf2	equ	0xFDF
  6064                           postinc2	equ	0xFDE
  6065                           postdec2	equ	0xFDD
  6066                           plusw2	equ	0xFDB
  6067                           fsr2h	equ	0xFDA
  6068                           fsr2l	equ	0xFD9
  6069                           status	equ	0xFD8
  6070                           
  6071 ;; *************** function _InitTimer1 *****************
  6072 ;; Defined at:
  6073 ;;		line 92 in file "Timer.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;		None
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;		None
  6078 ;; Return value:  Size  Location     Type
  6079 ;;		None               void
  6080 ;; Registers used:
  6081 ;;		wreg, status,2
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;Total ram usage:        0 bytes
  6092 ;; Hardware stack levels used:    1
  6093 ;; Hardware stack levels required when called:    4
  6094 ;; This function calls:
  6095 ;;		Nothing
  6096 ;; This function is called by:
  6097 ;;		_InitTimers
  6098 ;; This function uses a non-reentrant model
  6099 ;;
  6100                           
  6101                           	psect	text30
  6102  00396C                     __ptext30:
  6103                           	opt stack 0
  6104  00396C                     _InitTimer1:
  6105                           	opt stack 24
  6106                           
  6107                           ;Timer.c: 94: T1CONbits.RD16 = TRUE;
  6108                           
  6109                           ;incstack = 0
  6110  00396C  8ECD               	bsf	4045,7,c	;volatile
  6111                           
  6112                           ;Timer.c: 95: T1CONbits.T1RUN = FALSE;
  6113  00396E  9CCD               	bcf	4045,6,c	;volatile
  6114                           
  6115                           ;Timer.c: 96: T1CONbits.T1CKPS = 0x3;
  6116  003970  0E30               	movlw	48
  6117  003972  12CD               	iorwf	4045,f,c	;volatile
  6118                           
  6119                           ;Timer.c: 97: T1CONbits.T1OSCEN = FALSE;
  6120  003974  96CD               	bcf	4045,3,c	;volatile
  6121                           
  6122                           ;Timer.c: 98: T1CONbits.TMR1CS = FALSE;
  6123  003976  92CD               	bcf	4045,1,c	;volatile
  6124  003978  0012               	return		;funcret
  6125  00397A                     __end_of_InitTimer1:
  6126                           	opt stack 0
  6127                           tblptru	equ	0xFF8
  6128                           tblptrh	equ	0xFF7
  6129                           tblptrl	equ	0xFF6
  6130                           tablat	equ	0xFF5
  6131                           prodh	equ	0xFF4
  6132                           prodl	equ	0xFF3
  6133                           intcon	equ	0xFF2
  6134                           intcon2	equ	0xFF1
  6135                           postinc0	equ	0xFEE
  6136                           plusw0	equ	0xFEB
  6137                           wreg	equ	0xFE8
  6138                           indf1	equ	0xFE7
  6139                           postdec1	equ	0xFE5
  6140                           fsr1h	equ	0xFE2
  6141                           fsr1l	equ	0xFE1
  6142                           indf2	equ	0xFDF
  6143                           postinc2	equ	0xFDE
  6144                           postdec2	equ	0xFDD
  6145                           plusw2	equ	0xFDB
  6146                           fsr2h	equ	0xFDA
  6147                           fsr2l	equ	0xFD9
  6148                           status	equ	0xFD8
  6149                           
  6150 ;; *************** function _InitIR *****************
  6151 ;; Defined at:
  6152 ;;		line 65 in file "IR.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;		None
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;		None
  6157 ;; Return value:  Size  Location     Type
  6158 ;;		None               void
  6159 ;; Registers used:
  6160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6170 ;;Total ram usage:        0 bytes
  6171 ;; Hardware stack levels used:    1
  6172 ;; Hardware stack levels required when called:    5
  6173 ;; This function calls:
  6174 ;;		_InitTimer0
  6175 ;;		_ReadIRpin
  6176 ;;		_ResetTimer0
  6177 ;;		_cleanBuffer16bit
  6178 ;; This function is called by:
  6179 ;;		_Init_System
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183                           	psect	text31
  6184  0035BC                     __ptext31:
  6185                           	opt stack 0
  6186  0035BC                     _InitIR:
  6187                           	opt stack 24
  6188                           
  6189                           ;IR.c: 68: IOCBbits.IOCB4 = 1;
  6190                           
  6191                           ;incstack = 0
  6192  0035BC  887D               	bsf	3965,4,c	;volatile
  6193                           
  6194                           ;IR.c: 70: IRpinOLD = ReadIRpin();
  6195  0035BE  ECBD  F01C         	call	_ReadIRpin	;wreg free
  6196  0035C2  6E3A               	movwf	_IRpinOLD,c
  6197                           
  6198                           ;IR.c: 72: InitTimer0();
  6199  0035C4  EC99  F01C         	call	_InitTimer0	;wreg free
  6200                           
  6201                           ;IR.c: 74: cleanBuffer16bit(IRRawCode, 72);
  6202  0035C8  0E00               	movlw	low _IRRawCode
  6203  0035CA  0100               	movlb	0	; () banked
  6204  0035CC  6F72               	movwf	cleanBuffer16bit@data& (0+255),b
  6205  0035CE  0E01               	movlw	high _IRRawCode
  6206  0035D0  0100               	movlb	0	; () banked
  6207  0035D2  6F73               	movwf	(cleanBuffer16bit@data+1)& (0+255),b
  6208  0035D4  0E00               	movlw	0
  6209  0035D6  0100               	movlb	0	; () banked
  6210  0035D8  6F75               	movwf	(cleanBuffer16bit@count+1)& (0+255),b
  6211  0035DA  0E48               	movlw	72
  6212  0035DC  6F74               	movwf	cleanBuffer16bit@count& (0+255),b
  6213  0035DE  EC00  F01A         	call	_cleanBuffer16bit	;wreg free
  6214                           
  6215                           ;IR.c: 75: IR_NEC = 0;
  6216  0035E2  0E00               	movlw	0
  6217  0035E4  0100               	movlb	0	; () banked
  6218  0035E6  6FE9               	movwf	_IR_NEC& (0+255),b
  6219  0035E8  0E00               	movlw	0
  6220  0035EA  6FEA               	movwf	(_IR_NEC+1)& (0+255),b
  6221  0035EC  0E00               	movlw	0
  6222  0035EE  6FEB               	movwf	(_IR_NEC+2)& (0+255),b
  6223  0035F0  0E00               	movlw	0
  6224  0035F2  6FEC               	movwf	(_IR_NEC+3)& (0+255),b
  6225                           
  6226                           ; BSR set to: 0
  6227                           ;IR.c: 76: (T0CONbits.TMR0ON = 0);
  6228  0035F4  9ED5               	bcf	4053,7,c	;volatile
  6229                           
  6230                           ; BSR set to: 0
  6231                           ;IR.c: 78: ResetTimer0();
  6232  0035F6  ECF0  F01C         	call	_ResetTimer0	;wreg free
  6233                           
  6234                           ;IR.c: 80: (INTCONbits.TMR0IE = 0);
  6235  0035FA  9AF2               	bcf	intcon,5,c	;volatile
  6236                           
  6237                           ;IR.c: 81: INTCONbits.TMR0IF = 0;
  6238  0035FC  94F2               	bcf	intcon,2,c	;volatile
  6239                           
  6240                           ;IR.c: 83: INTCONbits.RBIF = 0;
  6241  0035FE  90F2               	bcf	intcon,0,c	;volatile
  6242                           
  6243                           ;IR.c: 84: INTCONbits.RBIE = 1;
  6244  003600  86F2               	bsf	intcon,3,c	;volatile
  6245  003602  0012               	return		;funcret
  6246  003604                     __end_of_InitIR:
  6247                           	opt stack 0
  6248                           tblptru	equ	0xFF8
  6249                           tblptrh	equ	0xFF7
  6250                           tblptrl	equ	0xFF6
  6251                           tablat	equ	0xFF5
  6252                           prodh	equ	0xFF4
  6253                           prodl	equ	0xFF3
  6254                           intcon	equ	0xFF2
  6255                           intcon2	equ	0xFF1
  6256                           postinc0	equ	0xFEE
  6257                           plusw0	equ	0xFEB
  6258                           wreg	equ	0xFE8
  6259                           indf1	equ	0xFE7
  6260                           postdec1	equ	0xFE5
  6261                           fsr1h	equ	0xFE2
  6262                           fsr1l	equ	0xFE1
  6263                           indf2	equ	0xFDF
  6264                           postinc2	equ	0xFDE
  6265                           postdec2	equ	0xFDD
  6266                           plusw2	equ	0xFDB
  6267                           fsr2h	equ	0xFDA
  6268                           fsr2l	equ	0xFD9
  6269                           status	equ	0xFD8
  6270                           
  6271 ;; *************** function _cleanBuffer16bit *****************
  6272 ;; Defined at:
  6273 ;;		line 97 in file "MISC.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;  data            2   18[BANK0 ] PTR unsigned int 
  6276 ;;		 -> IRRawCode(144), 
  6277 ;;  count           2   20[BANK0 ] int 
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;  i               1   25[BANK0 ] unsigned char 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;		None               void
  6282 ;; Registers used:
  6283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6289 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6291 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6292 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6293 ;;Total ram usage:        8 bytes
  6294 ;; Hardware stack levels used:    1
  6295 ;; Hardware stack levels required when called:    4
  6296 ;; This function calls:
  6297 ;;		Nothing
  6298 ;; This function is called by:
  6299 ;;		_InitIR
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text32
  6304  003400                     __ptext32:
  6305                           	opt stack 0
  6306  003400                     _cleanBuffer16bit:
  6307                           	opt stack 24
  6308                           
  6309                           ;MISC.c: 99: unsigned char i=0;
  6310                           
  6311                           ;incstack = 0
  6312  003400  0E00               	movlw	0
  6313  003402  0100               	movlb	0	; () banked
  6314  003404  6F79               	movwf	cleanBuffer16bit@i& (0+255),b
  6315                           
  6316                           ;MISC.c: 100: for(i=0; i<count;i++)
  6317  003406  0E00               	movlw	0
  6318  003408  0100               	movlb	0	; () banked
  6319  00340A  6F79               	movwf	cleanBuffer16bit@i& (0+255),b
  6320  00340C  D012               	goto	l3822
  6321  00340E                     l3818:
  6322                           
  6323                           ; BSR set to: 0
  6324                           ;MISC.c: 101: {
  6325                           ;MISC.c: 102: data[i]= 0;
  6326  00340E  0100               	movlb	0	; () banked
  6327  003410  5179               	movf	cleanBuffer16bit@i& (0+255),w,b
  6328  003412  0D02               	mullw	2
  6329  003414  50F3               	movf	prodl,w,c
  6330  003416  0100               	movlb	0	; () banked
  6331  003418  2572               	addwf	cleanBuffer16bit@data& (0+255),w,b
  6332  00341A  6ED9               	movwf	fsr2l,c
  6333  00341C  50F4               	movf	prodh,w,c
  6334  00341E  0100               	movlb	0	; () banked
  6335  003420  2173               	addwfc	(cleanBuffer16bit@data+1)& (0+255),w,b
  6336  003422  6EDA               	movwf	fsr2h,c
  6337  003424  0E00               	movlw	0
  6338  003426  6EDE               	movwf	postinc2,c
  6339  003428  0E00               	movlw	0
  6340  00342A  6EDD               	movwf	postdec2,c
  6341                           
  6342                           ; BSR set to: 0
  6343  00342C  0100               	movlb	0	; () banked
  6344  00342E  2B79               	incf	cleanBuffer16bit@i& (0+255),f,b
  6345  003430  D000               	goto	l3822
  6346  003432                     l3822:
  6347                           
  6348                           ; BSR set to: 0
  6349  003432  0100               	movlb	0	; () banked
  6350  003434  5179               	movf	cleanBuffer16bit@i& (0+255),w,b
  6351  003436  0100               	movlb	0	; () banked
  6352  003438  6F76               	movwf	??_cleanBuffer16bit& (0+255),b
  6353  00343A  6B77               	clrf	(??_cleanBuffer16bit+1)& (0+255),b
  6354  00343C  0100               	movlb	0	; () banked
  6355  00343E  5174               	movf	cleanBuffer16bit@count& (0+255),w,b
  6356  003440  0100               	movlb	0	; () banked
  6357  003442  5D76               	subwf	??_cleanBuffer16bit& (0+255),w,b
  6358  003444  0100               	movlb	0	; () banked
  6359  003446  5177               	movf	(??_cleanBuffer16bit+1)& (0+255),w,b
  6360  003448  0A80               	xorlw	128
  6361  00344A  0100               	movlb	0	; () banked
  6362  00344C  6F78               	movwf	(??_cleanBuffer16bit+2)& (0+255),b
  6363  00344E  0100               	movlb	0	; () banked
  6364  003450  5175               	movf	(cleanBuffer16bit@count+1)& (0+255),w,b
  6365  003452  0A80               	xorlw	128
  6366  003454  0100               	movlb	0	; () banked
  6367  003456  5978               	subwfb	(??_cleanBuffer16bit+2)& (0+255),w,b
  6368  003458  A0D8               	btfss	status,0,c
  6369  00345A  D7D9               	goto	l3818
  6370                           
  6371                           ; BSR set to: 0
  6372                           
  6373                           ; BSR set to: 0
  6374  00345C  0012               	return		;funcret
  6375  00345E                     __end_of_cleanBuffer16bit:
  6376                           	opt stack 0
  6377                           tblptru	equ	0xFF8
  6378                           tblptrh	equ	0xFF7
  6379                           tblptrl	equ	0xFF6
  6380                           tablat	equ	0xFF5
  6381                           prodh	equ	0xFF4
  6382                           prodl	equ	0xFF3
  6383                           intcon	equ	0xFF2
  6384                           intcon2	equ	0xFF1
  6385                           postinc0	equ	0xFEE
  6386                           plusw0	equ	0xFEB
  6387                           wreg	equ	0xFE8
  6388                           indf1	equ	0xFE7
  6389                           postdec1	equ	0xFE5
  6390                           fsr1h	equ	0xFE2
  6391                           fsr1l	equ	0xFE1
  6392                           indf2	equ	0xFDF
  6393                           postinc2	equ	0xFDE
  6394                           postdec2	equ	0xFDD
  6395                           plusw2	equ	0xFDB
  6396                           fsr2h	equ	0xFDA
  6397                           fsr2l	equ	0xFD9
  6398                           status	equ	0xFD8
  6399                           
  6400 ;; *************** function _ResetTimer0 *****************
  6401 ;; Defined at:
  6402 ;;		line 77 in file "Timer.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;		None
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;		None
  6407 ;; Return value:  Size  Location     Type
  6408 ;;		None               void
  6409 ;; Registers used:
  6410 ;;		wreg, status,2
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6420 ;;Total ram usage:        0 bytes
  6421 ;; Hardware stack levels used:    1
  6422 ;; Hardware stack levels required when called:    4
  6423 ;; This function calls:
  6424 ;;		Nothing
  6425 ;; This function is called by:
  6426 ;;		_InitIR
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           	psect	text33
  6431  0039E0                     __ptext33:
  6432                           	opt stack 0
  6433  0039E0                     _ResetTimer0:
  6434                           	opt stack 24
  6435                           
  6436                           ;Timer.c: 83: TMR0H = 0;
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;incstack = 0
  6440  0039E0  0E00               	movlw	0
  6441  0039E2  6ED7               	movwf	4055,c	;volatile
  6442                           
  6443                           ;Timer.c: 84: TMR0L = 2;
  6444  0039E4  0E02               	movlw	2
  6445  0039E6  6ED6               	movwf	4054,c	;volatile
  6446  0039E8  0012               	return		;funcret
  6447  0039EA                     __end_of_ResetTimer0:
  6448                           	opt stack 0
  6449                           tblptru	equ	0xFF8
  6450                           tblptrh	equ	0xFF7
  6451                           tblptrl	equ	0xFF6
  6452                           tablat	equ	0xFF5
  6453                           prodh	equ	0xFF4
  6454                           prodl	equ	0xFF3
  6455                           intcon	equ	0xFF2
  6456                           intcon2	equ	0xFF1
  6457                           postinc0	equ	0xFEE
  6458                           plusw0	equ	0xFEB
  6459                           wreg	equ	0xFE8
  6460                           indf1	equ	0xFE7
  6461                           postdec1	equ	0xFE5
  6462                           fsr1h	equ	0xFE2
  6463                           fsr1l	equ	0xFE1
  6464                           indf2	equ	0xFDF
  6465                           postinc2	equ	0xFDE
  6466                           postdec2	equ	0xFDD
  6467                           plusw2	equ	0xFDB
  6468                           fsr2h	equ	0xFDA
  6469                           fsr2l	equ	0xFD9
  6470                           status	equ	0xFD8
  6471                           
  6472 ;; *************** function _ReadIRpin *****************
  6473 ;; Defined at:
  6474 ;;		line 92 in file "IR.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;		None
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;		None
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  1    wreg      unsigned char 
  6481 ;; Registers used:
  6482 ;;		wreg
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6492 ;;Total ram usage:        0 bytes
  6493 ;; Hardware stack levels used:    1
  6494 ;; Hardware stack levels required when called:    4
  6495 ;; This function calls:
  6496 ;;		Nothing
  6497 ;; This function is called by:
  6498 ;;		_InitIR
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           	psect	text34
  6503  00397A                     __ptext34:
  6504                           	opt stack 0
  6505  00397A                     _ReadIRpin:
  6506                           	opt stack 24
  6507                           
  6508                           ;IR.c: 95: if((PORTB & 0x10) == 0x10)
  6509                           
  6510                           ;incstack = 0
  6511  00397A  A881               	btfss	3969,4,c	;volatile
  6512  00397C  D002               	goto	l3910
  6513                           
  6514                           ;IR.c: 96: {
  6515                           ;IR.c: 97: return (1);
  6516  00397E  0E01               	movlw	1
  6517                           
  6518                           ;IR.c: 98: }
  6519  003980  0012               	return	
  6520  003982                     l3910:
  6521                           
  6522                           ;IR.c: 99: else
  6523                           ;IR.c: 100: {
  6524                           ;IR.c: 101: return 0;
  6525  003982  0E00               	movlw	0
  6526  003984  0012               	return	
  6527  003986  0012               	return		;funcret
  6528  003988                     __end_of_ReadIRpin:
  6529                           	opt stack 0
  6530                           tblptru	equ	0xFF8
  6531                           tblptrh	equ	0xFF7
  6532                           tblptrl	equ	0xFF6
  6533                           tablat	equ	0xFF5
  6534                           prodh	equ	0xFF4
  6535                           prodl	equ	0xFF3
  6536                           intcon	equ	0xFF2
  6537                           intcon2	equ	0xFF1
  6538                           postinc0	equ	0xFEE
  6539                           plusw0	equ	0xFEB
  6540                           wreg	equ	0xFE8
  6541                           indf1	equ	0xFE7
  6542                           postdec1	equ	0xFE5
  6543                           fsr1h	equ	0xFE2
  6544                           fsr1l	equ	0xFE1
  6545                           indf2	equ	0xFDF
  6546                           postinc2	equ	0xFDE
  6547                           postdec2	equ	0xFDD
  6548                           plusw2	equ	0xFDB
  6549                           fsr2h	equ	0xFDA
  6550                           fsr2l	equ	0xFD9
  6551                           status	equ	0xFD8
  6552                           
  6553 ;; *************** function _InitTimer0 *****************
  6554 ;; Defined at:
  6555 ;;		line 64 in file "Timer.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;		None
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;		None
  6560 ;; Return value:  Size  Location     Type
  6561 ;;		None               void
  6562 ;; Registers used:
  6563 ;;		wreg, status,2
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6573 ;;Total ram usage:        0 bytes
  6574 ;; Hardware stack levels used:    1
  6575 ;; Hardware stack levels required when called:    4
  6576 ;; This function calls:
  6577 ;;		Nothing
  6578 ;; This function is called by:
  6579 ;;		_InitIR
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text35
  6584  003932                     __ptext35:
  6585                           	opt stack 0
  6586  003932                     _InitTimer0:
  6587                           	opt stack 24
  6588                           
  6589                           ;Timer.c: 66: T0CONbits.T08BIT = FALSE;
  6590                           
  6591                           ;incstack = 0
  6592  003932  9CD5               	bcf	4053,6,c	;volatile
  6593                           
  6594                           ;Timer.c: 67: T0CONbits.T0CS = FALSE;
  6595  003934  9AD5               	bcf	4053,5,c	;volatile
  6596                           
  6597                           ;Timer.c: 68: T0CONbits.PSA = FALSE;
  6598  003936  96D5               	bcf	4053,3,c	;volatile
  6599                           
  6600                           ;Timer.c: 69: T0CONbits.T0PS = 0x4;
  6601  003938  50D5               	movf	4053,w,c	;volatile
  6602  00393A  0BF8               	andlw	-8
  6603  00393C  0904               	iorlw	4
  6604  00393E  6ED5               	movwf	4053,c	;volatile
  6605  003940  0012               	return		;funcret
  6606  003942                     __end_of_InitTimer0:
  6607                           	opt stack 0
  6608                           tblptru	equ	0xFF8
  6609                           tblptrh	equ	0xFF7
  6610                           tblptrl	equ	0xFF6
  6611                           tablat	equ	0xFF5
  6612                           prodh	equ	0xFF4
  6613                           prodl	equ	0xFF3
  6614                           intcon	equ	0xFF2
  6615                           intcon2	equ	0xFF1
  6616                           postinc0	equ	0xFEE
  6617                           plusw0	equ	0xFEB
  6618                           wreg	equ	0xFE8
  6619                           indf1	equ	0xFE7
  6620                           postdec1	equ	0xFE5
  6621                           fsr1h	equ	0xFE2
  6622                           fsr1l	equ	0xFE1
  6623                           indf2	equ	0xFDF
  6624                           postinc2	equ	0xFDE
  6625                           postdec2	equ	0xFDD
  6626                           plusw2	equ	0xFDB
  6627                           fsr2h	equ	0xFDA
  6628                           fsr2l	equ	0xFD9
  6629                           status	equ	0xFD8
  6630                           
  6631 ;; *************** function _InitBluetooth *****************
  6632 ;; Defined at:
  6633 ;;		line 59 in file "Bluetooth.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;		None
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;		None
  6638 ;; Return value:  Size  Location     Type
  6639 ;;		None               void
  6640 ;; Registers used:
  6641 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6651 ;;Total ram usage:        0 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:   10
  6654 ;; This function calls:
  6655 ;;		_BluetoothConfigured
  6656 ;;		_BluetoothInitialSetup
  6657 ;;		_ResetBlue
  6658 ;;		_cleanBuffer
  6659 ;; This function is called by:
  6660 ;;		_Init_System
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           	psect	text36
  6665  003568                     __ptext36:
  6666                           	opt stack 0
  6667  003568                     _InitBluetooth:
  6668                           	opt stack 19
  6669                           
  6670                           ;Bluetooth.c: 61: cleanBuffer(&ReceivedString,255);
  6671                           
  6672                           ;incstack = 0
  6673  003568  0E00               	movlw	low _ReceivedString
  6674  00356A  0100               	movlb	0	; () banked
  6675  00356C  6F72               	movwf	cleanBuffer@data& (0+255),b
  6676  00356E  0E03               	movlw	high _ReceivedString
  6677  003570  0100               	movlb	0	; () banked
  6678  003572  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
  6679  003574  0E00               	movlw	0
  6680  003576  0100               	movlb	0	; () banked
  6681  003578  6F75               	movwf	(cleanBuffer@count+1)& (0+255),b
  6682  00357A  6974               	setf	cleanBuffer@count& (0+255),b
  6683  00357C  EC2F  F01A         	call	_cleanBuffer	;wreg free
  6684                           
  6685                           ;Bluetooth.c: 62: ReceivedStringPos = 0;
  6686  003580  0E00               	movlw	0
  6687  003582  6E40               	movwf	_ReceivedStringPos,c
  6688                           
  6689                           ;Bluetooth.c: 63: cleanBuffer(&CommandString,255);
  6690  003584  0E00               	movlw	low _CommandString
  6691  003586  0100               	movlb	0	; () banked
  6692  003588  6F72               	movwf	cleanBuffer@data& (0+255),b
  6693  00358A  0E02               	movlw	high _CommandString
  6694  00358C  0100               	movlb	0	; () banked
  6695  00358E  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
  6696  003590  0E00               	movlw	0
  6697  003592  0100               	movlb	0	; () banked
  6698  003594  6F75               	movwf	(cleanBuffer@count+1)& (0+255),b
  6699  003596  6974               	setf	cleanBuffer@count& (0+255),b
  6700  003598  EC2F  F01A         	call	_cleanBuffer	;wreg free
  6701                           
  6702                           ;Bluetooth.c: 64: CommandStringPos = 0;
  6703  00359C  0E00               	movlw	0
  6704  00359E  6E39               	movwf	_CommandStringPos,c
  6705                           
  6706                           ;Bluetooth.c: 66: LATA &= ~0x10;
  6707  0035A0  9889               	bcf	3977,4,c	;volatile
  6708                           
  6709                           ;Bluetooth.c: 67: ResetBlue();
  6710  0035A2  ECD2  F01B         	call	_ResetBlue	;wreg free
  6711                           
  6712                           ;Bluetooth.c: 68: LATA |= 0x08;
  6713  0035A6  8689               	bsf	3977,3,c	;volatile
  6714                           
  6715                           ;Bluetooth.c: 69: LATA &= ~0x10;
  6716  0035A8  9889               	bcf	3977,4,c	;volatile
  6717                           
  6718                           ;Bluetooth.c: 70: if(!BluetoothConfigured())
  6719  0035AA  EC4B  F01C         	call	_BluetoothConfigured	;wreg free
  6720  0035AE  0900               	iorlw	0
  6721  0035B0  A4D8               	btfss	status,2,c
  6722  0035B2  0012               	return	
  6723                           
  6724                           ;Bluetooth.c: 71: {
  6725                           ;Bluetooth.c: 72: BluetoothInitialSetup();
  6726  0035B4  EC53  F008         	call	_BluetoothInitialSetup	;wreg free
  6727  0035B8  0012               	return	
  6728  0035BA  0012               	return		;funcret
  6729  0035BC                     __end_of_InitBluetooth:
  6730                           	opt stack 0
  6731                           tblptru	equ	0xFF8
  6732                           tblptrh	equ	0xFF7
  6733                           tblptrl	equ	0xFF6
  6734                           tablat	equ	0xFF5
  6735                           prodh	equ	0xFF4
  6736                           prodl	equ	0xFF3
  6737                           intcon	equ	0xFF2
  6738                           intcon2	equ	0xFF1
  6739                           postinc0	equ	0xFEE
  6740                           plusw0	equ	0xFEB
  6741                           wreg	equ	0xFE8
  6742                           indf1	equ	0xFE7
  6743                           postdec1	equ	0xFE5
  6744                           fsr1h	equ	0xFE2
  6745                           fsr1l	equ	0xFE1
  6746                           indf2	equ	0xFDF
  6747                           postinc2	equ	0xFDE
  6748                           postdec2	equ	0xFDD
  6749                           plusw2	equ	0xFDB
  6750                           fsr2h	equ	0xFDA
  6751                           fsr2l	equ	0xFD9
  6752                           status	equ	0xFD8
  6753                           
  6754 ;; *************** function _BluetoothInitialSetup *****************
  6755 ;; Defined at:
  6756 ;;		line 142 in file "Bluetooth.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;		None
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;  buf            50   60[BANK0 ] unsigned char [50]
  6761 ;;  ok              1  110[BANK0 ] unsigned char 
  6762 ;; Return value:  Size  Location     Type
  6763 ;;                  1    wreg      unsigned char 
  6764 ;; Registers used:
  6765 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/0
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6772 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6774 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6775 ;;Total ram usage:       51 bytes
  6776 ;; Hardware stack levels used:    1
  6777 ;; Hardware stack levels required when called:    7
  6778 ;; This function calls:
  6779 ;;		_EnterCommandMode
  6780 ;;		_StringContains
  6781 ;;		_UARTstring
  6782 ;;		_cleanBuffer
  6783 ;;		_delayUS
  6784 ;;		_sprintf
  6785 ;; This function is called by:
  6786 ;;		_InitBluetooth
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text37
  6791  0010A6                     __ptext37:
  6792                           	opt stack 0
  6793  0010A6                     _BluetoothInitialSetup:
  6794                           	opt stack 21
  6795                           
  6796                           ;Bluetooth.c: 144: unsigned char buf[50];
  6797                           ;Bluetooth.c: 145: unsigned char ok = 1;
  6798                           
  6799                           ;incstack = 0
  6800  0010A6  0E01               	movlw	1
  6801  0010A8  0100               	movlb	0	; () banked
  6802  0010AA  6FCE               	movwf	BluetoothInitialSetup@ok& (0+255),b
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;Bluetooth.c: 147: cleanBuffer(buf,50);
  6806  0010AC  0E9C               	movlw	low BluetoothInitialSetup@buf
  6807  0010AE  0100               	movlb	0	; () banked
  6808  0010B0  6F72               	movwf	cleanBuffer@data& (0+255),b
  6809  0010B2  0E00               	movlw	high BluetoothInitialSetup@buf
  6810  0010B4  0100               	movlb	0	; () banked
  6811  0010B6  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
  6812  0010B8  0E00               	movlw	0
  6813  0010BA  0100               	movlb	0	; () banked
  6814  0010BC  6F75               	movwf	(cleanBuffer@count+1)& (0+255),b
  6815  0010BE  0E32               	movlw	50
  6816  0010C0  6F74               	movwf	cleanBuffer@count& (0+255),b
  6817  0010C2  EC2F  F01A         	call	_cleanBuffer	;wreg free
  6818                           
  6819                           ;Bluetooth.c: 149: if(!EnterCommandMode())
  6820  0010C6  ECD5  F015         	call	_EnterCommandMode	;wreg free
  6821  0010CA  0900               	iorlw	0
  6822  0010CC  B4D8               	btfsc	status,2,c
  6823  0010CE  0012               	return	
  6824  0010D0  D001               	goto	l3936
  6825                           
  6826                           ;Bluetooth.c: 150: {
  6827                           ;Bluetooth.c: 151: return 0;
  6828                           ;	Return value of _BluetoothInitialSetup is never used
  6829  0010D2  0012               	return	
  6830  0010D4                     l3936:
  6831                           
  6832                           ;Bluetooth.c: 152: }
  6833                           ;Bluetooth.c: 153: sprintf(buf,"SN,Home Automation %ld\r",SN);
  6834  0010D4  0E9C               	movlw	low BluetoothInitialSetup@buf
  6835  0010D6  0100               	movlb	0	; () banked
  6836  0010D8  6F88               	movwf	sprintf@sp& (0+255),b
  6837  0010DA  0E00               	movlw	high BluetoothInitialSetup@buf
  6838  0010DC  0100               	movlb	0	; () banked
  6839  0010DE  6F89               	movwf	(sprintf@sp+1)& (0+255),b
  6840  0010E0  0E4E               	movlw	low STR_3
  6841  0010E2  0100               	movlb	0	; () banked
  6842  0010E4  6F8A               	movwf	sprintf@f& (0+255),b
  6843  0010E6  0E10               	movlw	high STR_3
  6844  0010E8  0100               	movlb	0	; () banked
  6845  0010EA  6F8B               	movwf	(sprintf@f+1)& (0+255),b
  6846  0010EC  C0D0  F08C         	movff	_SN,?_sprintf+4
  6847  0010F0  C0D1  F08D         	movff	_SN+1,?_sprintf+5
  6848  0010F4  C0D2  F08E         	movff	_SN+2,?_sprintf+6
  6849  0010F8  C0D3  F08F         	movff	_SN+3,?_sprintf+7
  6850  0010FC  ECBE  F00E         	call	_sprintf	;wreg free
  6851                           
  6852                           ;Bluetooth.c: 154: UARTstring(buf);
  6853  001100  0E9C               	movlw	low BluetoothInitialSetup@buf
  6854  001102  0100               	movlb	0	; () banked
  6855  001104  6F73               	movwf	UARTstring@data& (0+255),b
  6856  001106  0E00               	movlw	high BluetoothInitialSetup@buf
  6857  001108  0100               	movlb	0	; () banked
  6858  00110A  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6859  00110C  EC5C  F01A         	call	_UARTstring	;wreg free
  6860                           
  6861                           ;Bluetooth.c: 155: delayUS(50000);
  6862  001110  0E50               	movlw	80
  6863  001112  0100               	movlb	0	; () banked
  6864  001114  6F72               	movwf	delayUS@US& (0+255),b
  6865  001116  0EC3               	movlw	195
  6866  001118  6F73               	movwf	(delayUS@US+1)& (0+255),b
  6867  00111A  0E00               	movlw	0
  6868  00111C  6F74               	movwf	(delayUS@US+2)& (0+255),b
  6869  00111E  0E00               	movlw	0
  6870  001120  6F75               	movwf	(delayUS@US+3)& (0+255),b
  6871  001122  EC97  F019         	call	_delayUS	;wreg free
  6872                           
  6873                           ;Bluetooth.c: 156: if(!StringContains(CommandString,"AOK"))
  6874  001126  0E00               	movlw	low _CommandString
  6875  001128  0100               	movlb	0	; () banked
  6876  00112A  6F72               	movwf	StringContains@This& (0+255),b
  6877  00112C  0E02               	movlw	high _CommandString
  6878  00112E  0100               	movlb	0	; () banked
  6879  001130  6F73               	movwf	(StringContains@This+1)& (0+255),b
  6880  001132  0EA0               	movlw	low STR_4
  6881  001134  0100               	movlb	0	; () banked
  6882  001136  6F74               	movwf	StringContains@That& (0+255),b
  6883  001138  0E10               	movlw	high STR_4
  6884  00113A  0100               	movlb	0	; () banked
  6885  00113C  6F75               	movwf	(StringContains@That+1)& (0+255),b
  6886  00113E  EC4A  F017         	call	_StringContains	;wreg free
  6887  001142  0900               	iorlw	0
  6888  001144  A4D8               	btfss	status,2,c
  6889  001146  D004               	goto	l3946
  6890                           
  6891                           ;Bluetooth.c: 157: {
  6892                           ;Bluetooth.c: 158: ok = 0;
  6893  001148  0E00               	movlw	0
  6894  00114A  0100               	movlb	0	; () banked
  6895  00114C  6FCE               	movwf	BluetoothInitialSetup@ok& (0+255),b
  6896  00114E  D000               	goto	l3946
  6897  001150                     l3946:
  6898                           
  6899                           ;Bluetooth.c: 159: }
  6900                           ;Bluetooth.c: 160: cleanBuffer(&CommandString,CommandStringPos);
  6901  001150  0E00               	movlw	low _CommandString
  6902  001152  0100               	movlb	0	; () banked
  6903  001154  6F72               	movwf	cleanBuffer@data& (0+255),b
  6904  001156  0E02               	movlw	high _CommandString
  6905  001158  0100               	movlb	0	; () banked
  6906  00115A  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
  6907  00115C  C039  F074         	movff	_CommandStringPos,cleanBuffer@count
  6908  001160  0100               	movlb	0	; () banked
  6909  001162  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
  6910  001164  EC2F  F01A         	call	_cleanBuffer	;wreg free
  6911                           
  6912                           ;Bluetooth.c: 161: CommandStringPos = 0;
  6913  001168  0E00               	movlw	0
  6914  00116A  6E39               	movwf	_CommandStringPos,c
  6915                           
  6916                           ;Bluetooth.c: 163: if(ok)
  6917  00116C  0100               	movlb	0	; () banked
  6918  00116E  51CE               	movf	BluetoothInitialSetup@ok& (0+255),w,b
  6919  001170  0100               	movlb	0	; () banked
  6920  001172  B4D8               	btfsc	status,2,c
  6921  001174  D028               	goto	l3960
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;Bluetooth.c: 164: {
  6925                           ;Bluetooth.c: 165: UARTstring("SS, Home Automation\r");
  6926  001176  0E66               	movlw	low STR_5
  6927  001178  0100               	movlb	0	; () banked
  6928  00117A  6F73               	movwf	UARTstring@data& (0+255),b
  6929  00117C  0E10               	movlw	high STR_5
  6930  00117E  0100               	movlb	0	; () banked
  6931  001180  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6932  001182  EC5C  F01A         	call	_UARTstring	;wreg free
  6933                           
  6934                           ;Bluetooth.c: 166: delayUS(50000);
  6935  001186  0E50               	movlw	80
  6936  001188  0100               	movlb	0	; () banked
  6937  00118A  6F72               	movwf	delayUS@US& (0+255),b
  6938  00118C  0EC3               	movlw	195
  6939  00118E  6F73               	movwf	(delayUS@US+1)& (0+255),b
  6940  001190  0E00               	movlw	0
  6941  001192  6F74               	movwf	(delayUS@US+2)& (0+255),b
  6942  001194  0E00               	movlw	0
  6943  001196  6F75               	movwf	(delayUS@US+3)& (0+255),b
  6944  001198  EC97  F019         	call	_delayUS	;wreg free
  6945                           
  6946                           ;Bluetooth.c: 167: if(!StringContains(CommandString,"AOK"))
  6947  00119C  0E00               	movlw	low _CommandString
  6948  00119E  0100               	movlb	0	; () banked
  6949  0011A0  6F72               	movwf	StringContains@This& (0+255),b
  6950  0011A2  0E02               	movlw	high _CommandString
  6951  0011A4  0100               	movlb	0	; () banked
  6952  0011A6  6F73               	movwf	(StringContains@This+1)& (0+255),b
  6953  0011A8  0EA0               	movlw	low STR_4
  6954  0011AA  0100               	movlb	0	; () banked
  6955  0011AC  6F74               	movwf	StringContains@That& (0+255),b
  6956  0011AE  0E10               	movlw	high STR_4
  6957  0011B0  0100               	movlb	0	; () banked
  6958  0011B2  6F75               	movwf	(StringContains@That+1)& (0+255),b
  6959  0011B4  EC4A  F017         	call	_StringContains	;wreg free
  6960  0011B8  0900               	iorlw	0
  6961  0011BA  A4D8               	btfss	status,2,c
  6962  0011BC  D004               	goto	l3960
  6963                           
  6964                           ;Bluetooth.c: 168: {
  6965                           ;Bluetooth.c: 169: ok = 0;
  6966  0011BE  0E00               	movlw	0
  6967  0011C0  0100               	movlb	0	; () banked
  6968  0011C2  6FCE               	movwf	BluetoothInitialSetup@ok& (0+255),b
  6969                           
  6970                           ; BSR set to: 0
  6971  0011C4  D000               	goto	l3960
  6972  0011C6                     l3960:
  6973                           
  6974                           ;Bluetooth.c: 170: }
  6975                           ;Bluetooth.c: 171: }
  6976                           ;Bluetooth.c: 172: cleanBuffer(&CommandString,CommandStringPos);
  6977  0011C6  0E00               	movlw	low _CommandString
  6978  0011C8  0100               	movlb	0	; () banked
  6979  0011CA  6F72               	movwf	cleanBuffer@data& (0+255),b
  6980  0011CC  0E02               	movlw	high _CommandString
  6981  0011CE  0100               	movlb	0	; () banked
  6982  0011D0  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
  6983  0011D2  C039  F074         	movff	_CommandStringPos,cleanBuffer@count
  6984  0011D6  0100               	movlb	0	; () banked
  6985  0011D8  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
  6986  0011DA  EC2F  F01A         	call	_cleanBuffer	;wreg free
  6987                           
  6988                           ;Bluetooth.c: 173: CommandStringPos = 0;
  6989  0011DE  0E00               	movlw	0
  6990  0011E0  6E39               	movwf	_CommandStringPos,c
  6991                           
  6992                           ;Bluetooth.c: 175: if(ok)
  6993  0011E2  0100               	movlb	0	; () banked
  6994  0011E4  51CE               	movf	BluetoothInitialSetup@ok& (0+255),w,b
  6995  0011E6  0100               	movlb	0	; () banked
  6996  0011E8  B4D8               	btfsc	status,2,c
  6997  0011EA  D028               	goto	l3974
  6998                           
  6999                           ; BSR set to: 0
  7000                           ;Bluetooth.c: 176: {
  7001                           ;Bluetooth.c: 177: UARTstring("SY,0010\r");
  7002  0011EC  0E7B               	movlw	low STR_7
  7003  0011EE  0100               	movlb	0	; () banked
  7004  0011F0  6F73               	movwf	UARTstring@data& (0+255),b
  7005  0011F2  0E10               	movlw	high STR_7
  7006  0011F4  0100               	movlb	0	; () banked
  7007  0011F6  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  7008  0011F8  EC5C  F01A         	call	_UARTstring	;wreg free
  7009                           
  7010                           ;Bluetooth.c: 178: delayUS(50000);
  7011  0011FC  0E50               	movlw	80
  7012  0011FE  0100               	movlb	0	; () banked
  7013  001200  6F72               	movwf	delayUS@US& (0+255),b
  7014  001202  0EC3               	movlw	195
  7015  001204  6F73               	movwf	(delayUS@US+1)& (0+255),b
  7016  001206  0E00               	movlw	0
  7017  001208  6F74               	movwf	(delayUS@US+2)& (0+255),b
  7018  00120A  0E00               	movlw	0
  7019  00120C  6F75               	movwf	(delayUS@US+3)& (0+255),b
  7020  00120E  EC97  F019         	call	_delayUS	;wreg free
  7021                           
  7022                           ;Bluetooth.c: 179: if(!StringContains(CommandString,"AOK"))
  7023  001212  0E00               	movlw	low _CommandString
  7024  001214  0100               	movlb	0	; () banked
  7025  001216  6F72               	movwf	StringContains@This& (0+255),b
  7026  001218  0E02               	movlw	high _CommandString
  7027  00121A  0100               	movlb	0	; () banked
  7028  00121C  6F73               	movwf	(StringContains@This+1)& (0+255),b
  7029  00121E  0EA0               	movlw	low STR_4
  7030  001220  0100               	movlb	0	; () banked
  7031  001222  6F74               	movwf	StringContains@That& (0+255),b
  7032  001224  0E10               	movlw	high STR_4
  7033  001226  0100               	movlb	0	; () banked
  7034  001228  6F75               	movwf	(StringContains@That+1)& (0+255),b
  7035  00122A  EC4A  F017         	call	_StringContains	;wreg free
  7036  00122E  0900               	iorlw	0
  7037  001230  A4D8               	btfss	status,2,c
  7038  001232  D004               	goto	l3974
  7039                           
  7040                           ;Bluetooth.c: 180: {
  7041                           ;Bluetooth.c: 181: ok = 0;
  7042  001234  0E00               	movlw	0
  7043  001236  0100               	movlb	0	; () banked
  7044  001238  6FCE               	movwf	BluetoothInitialSetup@ok& (0+255),b
  7045                           
  7046                           ; BSR set to: 0
  7047  00123A  D000               	goto	l3974
  7048  00123C                     l3974:
  7049                           
  7050                           ;Bluetooth.c: 182: }
  7051                           ;Bluetooth.c: 183: }
  7052                           ;Bluetooth.c: 184: cleanBuffer(&CommandString,CommandStringPos);
  7053  00123C  0E00               	movlw	low _CommandString
  7054  00123E  0100               	movlb	0	; () banked
  7055  001240  6F72               	movwf	cleanBuffer@data& (0+255),b
  7056  001242  0E02               	movlw	high _CommandString
  7057  001244  0100               	movlb	0	; () banked
  7058  001246  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
  7059  001248  C039  F074         	movff	_CommandStringPos,cleanBuffer@count
  7060  00124C  0100               	movlb	0	; () banked
  7061  00124E  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
  7062  001250  EC2F  F01A         	call	_cleanBuffer	;wreg free
  7063                           
  7064                           ;Bluetooth.c: 185: CommandStringPos = 0;
  7065  001254  0E00               	movlw	0
  7066  001256  6E39               	movwf	_CommandStringPos,c
  7067                           
  7068                           ;Bluetooth.c: 187: if(ok)
  7069  001258  0100               	movlb	0	; () banked
  7070  00125A  51CE               	movf	BluetoothInitialSetup@ok& (0+255),w,b
  7071  00125C  0100               	movlb	0	; () banked
  7072  00125E  B4D8               	btfsc	status,2,c
  7073  001260  D028               	goto	l3988
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;Bluetooth.c: 188: {
  7077                           ;Bluetooth.c: 189: UARTstring("S~,0\r");
  7078  001262  0E84               	movlw	low STR_9
  7079  001264  0100               	movlb	0	; () banked
  7080  001266  6F73               	movwf	UARTstring@data& (0+255),b
  7081  001268  0E10               	movlw	high STR_9
  7082  00126A  0100               	movlb	0	; () banked
  7083  00126C  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  7084  00126E  EC5C  F01A         	call	_UARTstring	;wreg free
  7085                           
  7086                           ;Bluetooth.c: 190: delayUS(50000);
  7087  001272  0E50               	movlw	80
  7088  001274  0100               	movlb	0	; () banked
  7089  001276  6F72               	movwf	delayUS@US& (0+255),b
  7090  001278  0EC3               	movlw	195
  7091  00127A  6F73               	movwf	(delayUS@US+1)& (0+255),b
  7092  00127C  0E00               	movlw	0
  7093  00127E  6F74               	movwf	(delayUS@US+2)& (0+255),b
  7094  001280  0E00               	movlw	0
  7095  001282  6F75               	movwf	(delayUS@US+3)& (0+255),b
  7096  001284  EC97  F019         	call	_delayUS	;wreg free
  7097                           
  7098                           ;Bluetooth.c: 191: if(!StringContains(CommandString,"AOK"))
  7099  001288  0E00               	movlw	low _CommandString
  7100  00128A  0100               	movlb	0	; () banked
  7101  00128C  6F72               	movwf	StringContains@This& (0+255),b
  7102  00128E  0E02               	movlw	high _CommandString
  7103  001290  0100               	movlb	0	; () banked
  7104  001292  6F73               	movwf	(StringContains@This+1)& (0+255),b
  7105  001294  0EA0               	movlw	low STR_4
  7106  001296  0100               	movlb	0	; () banked
  7107  001298  6F74               	movwf	StringContains@That& (0+255),b
  7108  00129A  0E10               	movlw	high STR_4
  7109  00129C  0100               	movlb	0	; () banked
  7110  00129E  6F75               	movwf	(StringContains@That+1)& (0+255),b
  7111  0012A0  EC4A  F017         	call	_StringContains	;wreg free
  7112  0012A4  0900               	iorlw	0
  7113  0012A6  A4D8               	btfss	status,2,c
  7114  0012A8  D004               	goto	l3988
  7115                           
  7116                           ;Bluetooth.c: 192: {
  7117                           ;Bluetooth.c: 193: ok = 0;
  7118  0012AA  0E00               	movlw	0
  7119  0012AC  0100               	movlb	0	; () banked
  7120  0012AE  6FCE               	movwf	BluetoothInitialSetup@ok& (0+255),b
  7121                           
  7122                           ; BSR set to: 0
  7123  0012B0  D000               	goto	l3988
  7124  0012B2                     l3988:
  7125                           
  7126                           ;Bluetooth.c: 194: }
  7127                           ;Bluetooth.c: 195: }
  7128                           ;Bluetooth.c: 196: cleanBuffer(&CommandString,CommandStringPos);
  7129  0012B2  0E00               	movlw	low _CommandString
  7130  0012B4  0100               	movlb	0	; () banked
  7131  0012B6  6F72               	movwf	cleanBuffer@data& (0+255),b
  7132  0012B8  0E02               	movlw	high _CommandString
  7133  0012BA  0100               	movlb	0	; () banked
  7134  0012BC  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
  7135  0012BE  C039  F074         	movff	_CommandStringPos,cleanBuffer@count
  7136  0012C2  0100               	movlb	0	; () banked
  7137  0012C4  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
  7138  0012C6  EC2F  F01A         	call	_cleanBuffer	;wreg free
  7139                           
  7140                           ;Bluetooth.c: 197: CommandStringPos = 0;
  7141  0012CA  0E00               	movlw	0
  7142  0012CC  6E39               	movwf	_CommandStringPos,c
  7143                           
  7144                           ;Bluetooth.c: 199: if(ok)
  7145  0012CE  0100               	movlb	0	; () banked
  7146  0012D0  51CE               	movf	BluetoothInitialSetup@ok& (0+255),w,b
  7147  0012D2  0100               	movlb	0	; () banked
  7148  0012D4  B4D8               	btfsc	status,2,c
  7149  0012D6  D028               	goto	l4002
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;Bluetooth.c: 200: {
  7153                           ;Bluetooth.c: 201: UARTstring("S~,0\r");
  7154  0012D8  0E84               	movlw	low STR_9
  7155  0012DA  0100               	movlb	0	; () banked
  7156  0012DC  6F73               	movwf	UARTstring@data& (0+255),b
  7157  0012DE  0E10               	movlw	high STR_9
  7158  0012E0  0100               	movlb	0	; () banked
  7159  0012E2  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  7160  0012E4  EC5C  F01A         	call	_UARTstring	;wreg free
  7161                           
  7162                           ;Bluetooth.c: 202: delayUS(50000);
  7163  0012E8  0E50               	movlw	80
  7164  0012EA  0100               	movlb	0	; () banked
  7165  0012EC  6F72               	movwf	delayUS@US& (0+255),b
  7166  0012EE  0EC3               	movlw	195
  7167  0012F0  6F73               	movwf	(delayUS@US+1)& (0+255),b
  7168  0012F2  0E00               	movlw	0
  7169  0012F4  6F74               	movwf	(delayUS@US+2)& (0+255),b
  7170  0012F6  0E00               	movlw	0
  7171  0012F8  6F75               	movwf	(delayUS@US+3)& (0+255),b
  7172  0012FA  EC97  F019         	call	_delayUS	;wreg free
  7173                           
  7174                           ;Bluetooth.c: 203: if(!StringContains(CommandString,"AOK"))
  7175  0012FE  0E00               	movlw	low _CommandString
  7176  001300  0100               	movlb	0	; () banked
  7177  001302  6F72               	movwf	StringContains@This& (0+255),b
  7178  001304  0E02               	movlw	high _CommandString
  7179  001306  0100               	movlb	0	; () banked
  7180  001308  6F73               	movwf	(StringContains@This+1)& (0+255),b
  7181  00130A  0EA0               	movlw	low STR_4
  7182  00130C  0100               	movlb	0	; () banked
  7183  00130E  6F74               	movwf	StringContains@That& (0+255),b
  7184  001310  0E10               	movlw	high STR_4
  7185  001312  0100               	movlb	0	; () banked
  7186  001314  6F75               	movwf	(StringContains@That+1)& (0+255),b
  7187  001316  EC4A  F017         	call	_StringContains	;wreg free
  7188  00131A  0900               	iorlw	0
  7189  00131C  A4D8               	btfss	status,2,c
  7190  00131E  D004               	goto	l4002
  7191                           
  7192                           ;Bluetooth.c: 204: {
  7193                           ;Bluetooth.c: 205: ok = 0;
  7194  001320  0E00               	movlw	0
  7195  001322  0100               	movlb	0	; () banked
  7196  001324  6FCE               	movwf	BluetoothInitialSetup@ok& (0+255),b
  7197                           
  7198                           ; BSR set to: 0
  7199  001326  D000               	goto	l4002
  7200  001328                     l4002:
  7201                           
  7202                           ;Bluetooth.c: 206: }
  7203                           ;Bluetooth.c: 207: }
  7204                           ;Bluetooth.c: 208: cleanBuffer(&CommandString,CommandStringPos);
  7205  001328  0E00               	movlw	low _CommandString
  7206  00132A  0100               	movlb	0	; () banked
  7207  00132C  6F72               	movwf	cleanBuffer@data& (0+255),b
  7208  00132E  0E02               	movlw	high _CommandString
  7209  001330  0100               	movlb	0	; () banked
  7210  001332  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
  7211  001334  C039  F074         	movff	_CommandStringPos,cleanBuffer@count
  7212  001338  0100               	movlb	0	; () banked
  7213  00133A  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
  7214  00133C  EC2F  F01A         	call	_cleanBuffer	;wreg free
  7215                           
  7216                           ;Bluetooth.c: 209: CommandStringPos = 0;
  7217  001340  0E00               	movlw	0
  7218  001342  6E39               	movwf	_CommandStringPos,c
  7219                           
  7220                           ;Bluetooth.c: 211: if(ok)
  7221  001344  0100               	movlb	0	; () banked
  7222  001346  51CE               	movf	BluetoothInitialSetup@ok& (0+255),w,b
  7223  001348  0100               	movlb	0	; () banked
  7224  00134A  B4D8               	btfsc	status,2,c
  7225  00134C  D03E               	goto	l4018
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;Bluetooth.c: 212: {
  7229                           ;Bluetooth.c: 213: UARTstring("D,0\r");
  7230  00134E  0E8F               	movlw	low STR_13
  7231  001350  0100               	movlb	0	; () banked
  7232  001352  6F73               	movwf	UARTstring@data& (0+255),b
  7233  001354  0E10               	movlw	high STR_13
  7234  001356  0100               	movlb	0	; () banked
  7235  001358  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  7236  00135A  EC5C  F01A         	call	_UARTstring	;wreg free
  7237                           
  7238                           ;Bluetooth.c: 214: delayUS(50000);
  7239  00135E  0E50               	movlw	80
  7240  001360  0100               	movlb	0	; () banked
  7241  001362  6F72               	movwf	delayUS@US& (0+255),b
  7242  001364  0EC3               	movlw	195
  7243  001366  6F73               	movwf	(delayUS@US+1)& (0+255),b
  7244  001368  0E00               	movlw	0
  7245  00136A  6F74               	movwf	(delayUS@US+2)& (0+255),b
  7246  00136C  0E00               	movlw	0
  7247  00136E  6F75               	movwf	(delayUS@US+3)& (0+255),b
  7248  001370  EC97  F019         	call	_delayUS	;wreg free
  7249                           
  7250                           ;Bluetooth.c: 215: sprintf(buf,"BTName=Home Automation %ld\r",SN);
  7251  001374  0E9C               	movlw	low BluetoothInitialSetup@buf
  7252  001376  0100               	movlb	0	; () banked
  7253  001378  6F88               	movwf	sprintf@sp& (0+255),b
  7254  00137A  0E00               	movlw	high BluetoothInitialSetup@buf
  7255  00137C  0100               	movlb	0	; () banked
  7256  00137E  6F89               	movwf	(sprintf@sp+1)& (0+255),b
  7257  001380  0E32               	movlw	low STR_14
  7258  001382  0100               	movlb	0	; () banked
  7259  001384  6F8A               	movwf	sprintf@f& (0+255),b
  7260  001386  0E10               	movlw	high STR_14
  7261  001388  0100               	movlb	0	; () banked
  7262  00138A  6F8B               	movwf	(sprintf@f+1)& (0+255),b
  7263  00138C  C0D0  F08C         	movff	_SN,?_sprintf+4
  7264  001390  C0D1  F08D         	movff	_SN+1,?_sprintf+5
  7265  001394  C0D2  F08E         	movff	_SN+2,?_sprintf+6
  7266  001398  C0D3  F08F         	movff	_SN+3,?_sprintf+7
  7267  00139C  ECBE  F00E         	call	_sprintf	;wreg free
  7268                           
  7269                           ;Bluetooth.c: 216: if(!StringContains(CommandString, buf))
  7270  0013A0  0E00               	movlw	low _CommandString
  7271  0013A2  0100               	movlb	0	; () banked
  7272  0013A4  6F72               	movwf	StringContains@This& (0+255),b
  7273  0013A6  0E02               	movlw	high _CommandString
  7274  0013A8  0100               	movlb	0	; () banked
  7275  0013AA  6F73               	movwf	(StringContains@This+1)& (0+255),b
  7276  0013AC  0E9C               	movlw	low BluetoothInitialSetup@buf
  7277  0013AE  0100               	movlb	0	; () banked
  7278  0013B0  6F74               	movwf	StringContains@That& (0+255),b
  7279  0013B2  0E00               	movlw	high BluetoothInitialSetup@buf
  7280  0013B4  0100               	movlb	0	; () banked
  7281  0013B6  6F75               	movwf	(StringContains@That+1)& (0+255),b
  7282  0013B8  EC4A  F017         	call	_StringContains	;wreg free
  7283  0013BC  0900               	iorlw	0
  7284  0013BE  A4D8               	btfss	status,2,c
  7285  0013C0  D004               	goto	l4018
  7286                           
  7287                           ;Bluetooth.c: 217: {
  7288                           ;Bluetooth.c: 218: ok = 0;
  7289  0013C2  0E00               	movlw	0
  7290  0013C4  0100               	movlb	0	; () banked
  7291  0013C6  6FCE               	movwf	BluetoothInitialSetup@ok& (0+255),b
  7292                           
  7293                           ; BSR set to: 0
  7294  0013C8  D000               	goto	l4018
  7295  0013CA                     l4018:
  7296                           
  7297                           ;Bluetooth.c: 219: }
  7298                           ;Bluetooth.c: 220: }
  7299                           ;Bluetooth.c: 221: cleanBuffer(&CommandString,CommandStringPos);
  7300  0013CA  0E00               	movlw	low _CommandString
  7301  0013CC  0100               	movlb	0	; () banked
  7302  0013CE  6F72               	movwf	cleanBuffer@data& (0+255),b
  7303  0013D0  0E02               	movlw	high _CommandString
  7304  0013D2  0100               	movlb	0	; () banked
  7305  0013D4  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
  7306  0013D6  C039  F074         	movff	_CommandStringPos,cleanBuffer@count
  7307  0013DA  0100               	movlb	0	; () banked
  7308  0013DC  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
  7309  0013DE  EC2F  F01A         	call	_cleanBuffer	;wreg free
  7310                           
  7311                           ;Bluetooth.c: 222: CommandStringPos = 0;
  7312  0013E2  0E00               	movlw	0
  7313  0013E4  6E39               	movwf	_CommandStringPos,c
  7314                           
  7315                           ;Bluetooth.c: 224: UARTstring("---\r");
  7316  0013E6  0E8A               	movlw	low STR_15
  7317  0013E8  0100               	movlb	0	; () banked
  7318  0013EA  6F73               	movwf	UARTstring@data& (0+255),b
  7319  0013EC  0E10               	movlw	high STR_15
  7320  0013EE  0100               	movlb	0	; () banked
  7321  0013F0  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  7322  0013F2  EC5C  F01A         	call	_UARTstring	;wreg free
  7323                           
  7324                           ;Bluetooth.c: 225: delayUS(50000);
  7325  0013F6  0E50               	movlw	80
  7326  0013F8  0100               	movlb	0	; () banked
  7327  0013FA  6F72               	movwf	delayUS@US& (0+255),b
  7328  0013FC  0EC3               	movlw	195
  7329  0013FE  6F73               	movwf	(delayUS@US+1)& (0+255),b
  7330  001400  0E00               	movlw	0
  7331  001402  6F74               	movwf	(delayUS@US+2)& (0+255),b
  7332  001404  0E00               	movlw	0
  7333  001406  6F75               	movwf	(delayUS@US+3)& (0+255),b
  7334  001408  EC97  F019         	call	_delayUS	;wreg free
  7335                           
  7336                           ;Bluetooth.c: 226: if(!StringContains(CommandString, "END"))
  7337  00140C  0E00               	movlw	low _CommandString
  7338  00140E  0100               	movlb	0	; () banked
  7339  001410  6F72               	movwf	StringContains@This& (0+255),b
  7340  001412  0E02               	movlw	high _CommandString
  7341  001414  0100               	movlb	0	; () banked
  7342  001416  6F73               	movwf	(StringContains@This+1)& (0+255),b
  7343  001418  0E9C               	movlw	low STR_16
  7344  00141A  0100               	movlb	0	; () banked
  7345  00141C  6F74               	movwf	StringContains@That& (0+255),b
  7346  00141E  0E10               	movlw	high STR_16
  7347  001420  0100               	movlb	0	; () banked
  7348  001422  6F75               	movwf	(StringContains@That+1)& (0+255),b
  7349  001424  EC4A  F017         	call	_StringContains	;wreg free
  7350  001428  0900               	iorlw	0
  7351  00142A  A4D8               	btfss	status,2,c
  7352  00142C  D004               	goto	l4030
  7353                           
  7354                           ;Bluetooth.c: 227: {
  7355                           ;Bluetooth.c: 228: ok = 0;
  7356  00142E  0E00               	movlw	0
  7357  001430  0100               	movlb	0	; () banked
  7358  001432  6FCE               	movwf	BluetoothInitialSetup@ok& (0+255),b
  7359  001434  D000               	goto	l4030
  7360  001436                     l4030:
  7361                           
  7362                           ;Bluetooth.c: 229: }
  7363                           ;Bluetooth.c: 230: cleanBuffer(&CommandString,CommandStringPos);
  7364  001436  0E00               	movlw	low _CommandString
  7365  001438  0100               	movlb	0	; () banked
  7366  00143A  6F72               	movwf	cleanBuffer@data& (0+255),b
  7367  00143C  0E02               	movlw	high _CommandString
  7368  00143E  0100               	movlb	0	; () banked
  7369  001440  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
  7370  001442  C039  F074         	movff	_CommandStringPos,cleanBuffer@count
  7371  001446  0100               	movlb	0	; () banked
  7372  001448  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
  7373  00144A  EC2F  F01A         	call	_cleanBuffer	;wreg free
  7374                           
  7375                           ;Bluetooth.c: 231: CommandStringPos = 0;
  7376  00144E  0E00               	movlw	0
  7377  001450  6E39               	movwf	_CommandStringPos,c
  7378                           
  7379                           ;Bluetooth.c: 234: {
  7380                           ;Bluetooth.c: 235: return 1;
  7381                           ;	Return value of _BluetoothInitialSetup is never used
  7382  001452  0012               	return	
  7383                           
  7384                           ;Bluetooth.c: 236: }
  7385                           ;Bluetooth.c: 237: return 0;
  7386                           ;	Return value of _BluetoothInitialSetup is never used
  7387  001454  0012               	return		;funcret
  7388  001456                     __end_of_BluetoothInitialSetup:
  7389                           	opt stack 0
  7390                           tblptru	equ	0xFF8
  7391                           tblptrh	equ	0xFF7
  7392                           tblptrl	equ	0xFF6
  7393                           tablat	equ	0xFF5
  7394                           prodh	equ	0xFF4
  7395                           prodl	equ	0xFF3
  7396                           intcon	equ	0xFF2
  7397                           intcon2	equ	0xFF1
  7398                           postinc0	equ	0xFEE
  7399                           plusw0	equ	0xFEB
  7400                           wreg	equ	0xFE8
  7401                           indf1	equ	0xFE7
  7402                           postdec1	equ	0xFE5
  7403                           fsr1h	equ	0xFE2
  7404                           fsr1l	equ	0xFE1
  7405                           indf2	equ	0xFDF
  7406                           postinc2	equ	0xFDE
  7407                           postdec2	equ	0xFDD
  7408                           plusw2	equ	0xFDB
  7409                           fsr2h	equ	0xFDA
  7410                           fsr2l	equ	0xFD9
  7411                           status	equ	0xFD8
  7412                           
  7413 ;; *************** function _sprintf *****************
  7414 ;; Defined at:
  7415 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;  sp              2   40[BANK0 ] PTR unsigned char 
  7418 ;;		 -> BluetoothInitialSetup@buf(50), 
  7419 ;;  f               2   42[BANK0 ] PTR const unsigned char 
  7420 ;;		 -> STR_14(28), STR_3(24), 
  7421 ;; Auto vars:     Size  Location     Type
  7422 ;;  val             4   55[BANK0 ] unsigned long 
  7423 ;;  tmpval          4    0        struct .
  7424 ;;  cp              3    0        PTR const unsigned char 
  7425 ;;  ap              2   52[BANK0 ] PTR void [1]
  7426 ;;		 -> ?_sprintf(2), 
  7427 ;;  prec            2   50[BANK0 ] int 
  7428 ;;  len             2    0        unsigned int 
  7429 ;;  c               1   59[BANK0 ] char 
  7430 ;;  flag            1   54[BANK0 ] unsigned char 
  7431 ;; Return value:  Size  Location     Type
  7432 ;;                  2   40[BANK0 ] int 
  7433 ;; Registers used:
  7434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7435 ;; Tracked objects:
  7436 ;;		On entry : 0/0
  7437 ;;		On exit  : 0/0
  7438 ;;		Unchanged: 0/0
  7439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7440 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7441 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7442 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7443 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7444 ;;Total ram usage:       20 bytes
  7445 ;; Hardware stack levels used:    1
  7446 ;; Hardware stack levels required when called:    5
  7447 ;; This function calls:
  7448 ;;		___lldiv
  7449 ;;		___llmod
  7450 ;; This function is called by:
  7451 ;;		_BluetoothInitialSetup
  7452 ;; This function uses a non-reentrant model
  7453 ;;
  7454                           
  7455                           	psect	text38
  7456  001D7C                     __ptext38:
  7457                           	opt stack 0
  7458  001D7C                     _sprintf:
  7459                           	opt stack 22
  7460                           
  7461                           ;doprnt.c: 494: va_list ap;
  7462                           ;doprnt.c: 499: signed char c;
  7463                           ;doprnt.c: 504: int prec;
  7464                           ;doprnt.c: 508: unsigned char flag;
  7465                           ;doprnt.c: 523: union {
  7466                           ;doprnt.c: 524: unsigned long vd;
  7467                           ;doprnt.c: 525: double integ;
  7468                           ;doprnt.c: 526: } tmpval;
  7469                           ;doprnt.c: 528: unsigned long val;
  7470                           ;doprnt.c: 529: unsigned len;
  7471                           ;doprnt.c: 530: const char * cp;
  7472                           ;doprnt.c: 533: *ap = __va_start();
  7473                           
  7474                           ;incstack = 0
  7475  001D7C  0E8C               	movlw	low (?_sprintf+4)
  7476  001D7E  0100               	movlb	0	; () banked
  7477  001D80  6F94               	movwf	sprintf@ap& (0+255),b
  7478  001D82  0E00               	movlw	high (?_sprintf+4)
  7479  001D84  0100               	movlb	0	; () banked
  7480  001D86  6F95               	movwf	(sprintf@ap+1)& (0+255),b
  7481                           
  7482                           ;doprnt.c: 536: while(c = *f++) {
  7483  001D88  D103               	goto	l3678
  7484  001D8A                     l3620:
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;doprnt.c: 538: if(c != '%')
  7488  001D8A  0E25               	movlw	37
  7489  001D8C  0100               	movlb	0	; () banked
  7490  001D8E  199B               	xorwf	sprintf@c& (0+255),w,b
  7491  001D90  B4D8               	btfsc	status,2,c
  7492  001D92  D00A               	goto	l3626
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;doprnt.c: 540: {
  7496                           ;doprnt.c: 541: ((*sp++ = (c)));
  7497  001D94  C088  FFD9         	movff	sprintf@sp,fsr2l
  7498  001D98  C089  FFDA         	movff	sprintf@sp+1,fsr2h
  7499  001D9C  C09B  FFDF         	movff	sprintf@c,indf2
  7500                           
  7501                           ; BSR set to: 0
  7502  001DA0  0100               	movlb	0	; () banked
  7503  001DA2  4B88               	infsnz	sprintf@sp& (0+255),f,b
  7504  001DA4  2B89               	incf	(sprintf@sp+1)& (0+255),f,b
  7505                           
  7506                           ;doprnt.c: 542: continue;
  7507  001DA6  D0F4               	goto	l3678
  7508  001DA8                     l3626:
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;doprnt.c: 543: }
  7512                           ;doprnt.c: 548: flag = 0;
  7513  001DA8  0E00               	movlw	0
  7514  001DAA  0100               	movlb	0	; () banked
  7515  001DAC  6F96               	movwf	sprintf@flag& (0+255),b
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;doprnt.c: 635: switch(c = *f++) {
  7519                           
  7520                           ;doprnt.c: 633: loop:
  7521  001DAE  D007               	goto	l3632
  7522                           
  7523                           ; BSR set to: 0
  7524                           ;doprnt.c: 638: goto alldone;
  7525                           
  7526                           ;doprnt.c: 637: case 0:
  7527  001DB0  D0FF               	goto	l3680
  7528  001DB2                     l3628:
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;doprnt.c: 643: flag |= 0x10;
  7532  001DB2  0100               	movlb	0	; () banked
  7533  001DB4  8996               	bsf	sprintf@flag& (0+255),4,b
  7534                           
  7535                           ;doprnt.c: 644: goto loop;
  7536  001DB6  D003               	goto	l3632
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;doprnt.c: 698: case 'i':
  7540                           ;doprnt.c: 699: break;
  7541                           
  7542                           ; BSR set to: 0
  7543                           
  7544                           ;doprnt.c: 697: case 'd':
  7545  001DB8  D01B               	goto	l889
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;doprnt.c: 813: continue;
  7549                           
  7550                           ;doprnt.c: 802: default:
  7551  001DBA  D0EA               	goto	l3678
  7552                           
  7553                           ; BSR set to: 0
  7554                           ;doprnt.c: 822: }
  7555  001DBC  D019               	goto	l889
  7556  001DBE                     l3632:
  7557                           
  7558                           ; BSR set to: 0
  7559  001DBE  C08A  FFF6         	movff	sprintf@f,tblptrl
  7560  001DC2  C08B  FFF7         	movff	sprintf@f+1,tblptrh
  7561  001DC6  0100               	movlb	0	; () banked
  7562  001DC8  4B8A               	infsnz	sprintf@f& (0+255),f,b
  7563  001DCA  2B8B               	incf	(sprintf@f+1)& (0+255),f,b
  7564  001DCC                     	if	0	;tblptru may be non-zero
  7565  001DCC                     	endif
  7566  001DCC                     	if	0	;tblptru may be non-zero
  7567  001DCC                     	endif
  7568  001DCC  0008               	tblrd		*
  7569  001DCE  CFF5 F09B          	movff	tablat,sprintf@c
  7570  001DD2  0100               	movlb	0	; () banked
  7571  001DD4  519B               	movf	sprintf@c& (0+255),w,b
  7572                           
  7573                           ; Switch size 1, requested type "space"
  7574                           ; Number of cases is 4, Range of values is 0 to 108
  7575                           ; switch strategies available:
  7576                           ; Name         Instructions Cycles
  7577                           ; simple_byte           13     7 (average)
  7578                           ;	Chosen strategy is simple_byte
  7579  001DD6  0A00               	xorlw	0	; case 0
  7580  001DD8  B4D8               	btfsc	status,2,c
  7581  001DDA  D0EA               	goto	l3680
  7582  001DDC  0A64               	xorlw	100	; case 100
  7583  001DDE  B4D8               	btfsc	status,2,c
  7584  001DE0  D007               	goto	l889
  7585  001DE2  0A0D               	xorlw	13	; case 105
  7586  001DE4  B4D8               	btfsc	status,2,c
  7587  001DE6  D004               	goto	l889
  7588  001DE8  0A05               	xorlw	5	; case 108
  7589  001DEA  B4D8               	btfsc	status,2,c
  7590  001DEC  D7E2               	goto	l3628
  7591  001DEE  D0D0               	goto	l3678
  7592  001DF0                     l889:
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;doprnt.c: 1253: {
  7596                           ;doprnt.c: 1255: if(flag & 0x10)
  7597  001DF0  0100               	movlb	0	; () banked
  7598  001DF2  A996               	btfss	sprintf@flag& (0+255),4,b
  7599  001DF4  D00E               	goto	l3638
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  7603  001DF6  C094  FFD9         	movff	sprintf@ap,fsr2l
  7604  001DFA  C095  FFDA         	movff	sprintf@ap+1,fsr2h
  7605  001DFE  CFDE F097          	movff	postinc2,sprintf@val
  7606  001E02  CFDE F098          	movff	postinc2,sprintf@val+1
  7607  001E06  CFDE F099          	movff	postinc2,sprintf@val+2
  7608  001E0A  CFDE F09A          	movff	postinc2,sprintf@val+3
  7609                           
  7610                           ; BSR set to: 0
  7611  001E0E  0E04               	movlw	4
  7612  001E10  D00F               	goto	L1
  7613  001E12                     l3638:
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;doprnt.c: 1257: else
  7617                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7618  001E12  C094  FFD9         	movff	sprintf@ap,fsr2l
  7619  001E16  C095  FFDA         	movff	sprintf@ap+1,fsr2h
  7620  001E1A  CFDE F097          	movff	postinc2,sprintf@val
  7621  001E1E  CFDD F098          	movff	postdec2,sprintf@val+1
  7622  001E22  0100               	movlb	0	; () banked
  7623  001E24  0E00               	movlw	0
  7624  001E26  BF98               	btfsc	(sprintf@val+1)& (0+255),7,b
  7625  001E28  0EFF               	movlw	-1
  7626  001E2A  6F99               	movwf	(sprintf@val+2)& (0+255),b
  7627  001E2C  6F9A               	movwf	(sprintf@val+3)& (0+255),b
  7628                           
  7629                           ; BSR set to: 0
  7630  001E2E  0E02               	movlw	2
  7631  001E30                     L1:
  7632  001E30  0100               	movlb	0	; () banked
  7633  001E32  2794               	addwf	sprintf@ap& (0+255),f,b
  7634  001E34  0E00               	movlw	0
  7635  001E36  2395               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7636  001E38  D000               	goto	l3642
  7637  001E3A                     l3642:
  7638                           
  7639                           ; BSR set to: 0
  7640                           ;doprnt.c: 1261: if((long)val < 0) {
  7641  001E3A  0100               	movlb	0	; () banked
  7642  001E3C  AF9A               	btfss	(sprintf@val+3)& (0+255),7,b
  7643  001E3E  D00D               	goto	l3648
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;doprnt.c: 1262: flag |= 0x03;
  7647  001E40  0E03               	movlw	3
  7648  001E42  0100               	movlb	0	; () banked
  7649  001E44  1396               	iorwf	sprintf@flag& (0+255),f,b
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;doprnt.c: 1263: val = -val;
  7653  001E46  0100               	movlb	0	; () banked
  7654  001E48  1F9A               	comf	(sprintf@val+3)& (0+255),f,b
  7655  001E4A  1F99               	comf	(sprintf@val+2)& (0+255),f,b
  7656  001E4C  1F98               	comf	(sprintf@val+1)& (0+255),f,b
  7657  001E4E  6D97               	negf	sprintf@val& (0+255),b
  7658  001E50  0E00               	movlw	0
  7659  001E52  2398               	addwfc	(sprintf@val+1)& (0+255),f,b
  7660  001E54  2399               	addwfc	(sprintf@val+2)& (0+255),f,b
  7661  001E56  239A               	addwfc	(sprintf@val+3)& (0+255),f,b
  7662  001E58  D000               	goto	l3648
  7663  001E5A                     l3648:
  7664                           
  7665                           ; BSR set to: 0
  7666                           ;doprnt.c: 1264: }
  7667                           ;doprnt.c: 1266: }
  7668                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7669  001E5A  0E01               	movlw	1
  7670  001E5C  0100               	movlb	0	; () banked
  7671  001E5E  6F9B               	movwf	sprintf@c& (0+255),b
  7672  001E60                     l3650:
  7673                           
  7674                           ; BSR set to: 0
  7675  001E60  0E0A               	movlw	10
  7676  001E62  0100               	movlb	0	; () banked
  7677  001E64  199B               	xorwf	sprintf@c& (0+255),w,b
  7678  001E66  B4D8               	btfsc	status,2,c
  7679  001E68  D022               	goto	l3662
  7680  001E6A  D001               	goto	l3654
  7681                           
  7682                           ; BSR set to: 0
  7683  001E6C  D020               	goto	l3662
  7684  001E6E                     l3654:
  7685                           
  7686                           ; BSR set to: 0
  7687                           ;doprnt.c: 1306: if(val < dpowers[c])
  7688  001E6E  0100               	movlb	0	; () banked
  7689  001E70  519B               	movf	sprintf@c& (0+255),w,b
  7690  001E72  0D04               	mullw	4
  7691  001E74  0E01               	movlw	low _dpowers
  7692  001E76  24F3               	addwf	prodl,w,c
  7693  001E78  6EF6               	movwf	tblptrl,c
  7694  001E7A  0E10               	movlw	high _dpowers
  7695  001E7C  20F4               	addwfc	prodh,w,c
  7696  001E7E  6EF7               	movwf	tblptrh,c
  7697  001E80                     	if	0	;There are less than 3 active tblptr bytes
  7698  001E80                     	endif
  7699  001E80  0009               	tblrd		*+
  7700  001E82  50F5               	movf	tablat,w,c
  7701  001E84  0100               	movlb	0	; () banked
  7702  001E86  5D97               	subwf	sprintf@val& (0+255),w,b
  7703  001E88  0009               	tblrd		*+
  7704  001E8A  50F5               	movf	tablat,w,c
  7705  001E8C  0100               	movlb	0	; () banked
  7706  001E8E  5998               	subwfb	(sprintf@val+1)& (0+255),w,b
  7707  001E90  0009               	tblrd		*+
  7708  001E92  50F5               	movf	tablat,w,c
  7709  001E94  0100               	movlb	0	; () banked
  7710  001E96  5999               	subwfb	(sprintf@val+2)& (0+255),w,b
  7711  001E98  0009               	tblrd		*+
  7712  001E9A  50F5               	movf	tablat,w,c
  7713  001E9C  0100               	movlb	0	; () banked
  7714  001E9E  599A               	subwfb	(sprintf@val+3)& (0+255),w,b
  7715  001EA0  A0D8               	btfss	status,0,c
  7716  001EA2  D005               	goto	l3662
  7717  001EA4  D001               	goto	l3658
  7718                           
  7719                           ; BSR set to: 0
  7720                           ;doprnt.c: 1307: break;
  7721  001EA6  D003               	goto	l3662
  7722  001EA8                     l3658:
  7723                           
  7724                           ; BSR set to: 0
  7725  001EA8  0100               	movlb	0	; () banked
  7726  001EAA  2B9B               	incf	sprintf@c& (0+255),f,b
  7727  001EAC  D7D9               	goto	l3650
  7728  001EAE                     l3662:
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;doprnt.c: 1422: {
  7732                           ;doprnt.c: 1438: if(flag & 0x03)
  7733  001EAE  C096  F090         	movff	sprintf@flag,??_sprintf
  7734  001EB2  0E03               	movlw	3
  7735  001EB4  0100               	movlb	0	; () banked
  7736  001EB6  1790               	andwf	??_sprintf& (0+255),f,b
  7737  001EB8  B4D8               	btfsc	status,2,c
  7738  001EBA  D00A               	goto	l3668
  7739                           
  7740                           ; BSR set to: 0
  7741                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7742  001EBC  C088  FFD9         	movff	sprintf@sp,fsr2l
  7743  001EC0  C089  FFDA         	movff	sprintf@sp+1,fsr2h
  7744  001EC4  0E2D               	movlw	45
  7745  001EC6  6EDF               	movwf	indf2,c
  7746                           
  7747                           ; BSR set to: 0
  7748  001EC8  0100               	movlb	0	; () banked
  7749  001ECA  4B88               	infsnz	sprintf@sp& (0+255),f,b
  7750  001ECC  2B89               	incf	(sprintf@sp+1)& (0+255),f,b
  7751  001ECE  D000               	goto	l3668
  7752  001ED0                     l3668:
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;doprnt.c: 1469: }
  7756                           ;doprnt.c: 1472: prec = c;
  7757  001ED0  0100               	movlb	0	; () banked
  7758  001ED2  519B               	movf	sprintf@c& (0+255),w,b
  7759  001ED4  0100               	movlb	0	; () banked
  7760  001ED6  6F92               	movwf	sprintf@prec& (0+255),b
  7761  001ED8  6B93               	clrf	(sprintf@prec+1)& (0+255),b
  7762  001EDA  BF92               	btfsc	sprintf@prec& (0+255),7,b
  7763  001EDC  0793               	decf	(sprintf@prec+1)& (0+255),f,b
  7764                           
  7765                           ;doprnt.c: 1474: while(prec--) {
  7766  001EDE  D04B               	goto	l3676
  7767  001EE0                     l3670:
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;doprnt.c: 1478: {
  7771                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7772  001EE0  C092  F090         	movff	sprintf@prec,??_sprintf
  7773  001EE4  C093  F091         	movff	sprintf@prec+1,??_sprintf+1
  7774  001EE8  0100               	movlb	0	; () banked
  7775  001EEA  90D8               	bcf	status,0,c
  7776  001EEC  3790               	rlcf	??_sprintf& (0+255),f,b
  7777  001EEE  3791               	rlcf	(??_sprintf+1)& (0+255),f,b
  7778  001EF0  0100               	movlb	0	; () banked
  7779  001EF2  90D8               	bcf	status,0,c
  7780  001EF4  3790               	rlcf	??_sprintf& (0+255),f,b
  7781  001EF6  3791               	rlcf	(??_sprintf+1)& (0+255),f,b
  7782  001EF8  0E01               	movlw	low _dpowers
  7783  001EFA  0100               	movlb	0	; () banked
  7784  001EFC  2590               	addwf	??_sprintf& (0+255),w,b
  7785  001EFE  6EF6               	movwf	tblptrl,c
  7786  001F00  0E10               	movlw	high _dpowers
  7787  001F02  2191               	addwfc	(??_sprintf+1)& (0+255),w,b
  7788  001F04  6EF7               	movwf	tblptrh,c
  7789  001F06                     	if	0	;There are less than 3 active tblptr bytes
  7790  001F06                     	endif
  7791  001F06  0009               	tblrd		*+
  7792  001F08  CFF5 F076          	movff	tablat,___lldiv@divisor
  7793  001F0C  0009               	tblrd		*+
  7794  001F0E  CFF5 F077          	movff	tablat,___lldiv@divisor+1
  7795  001F12  0009               	tblrd		*+
  7796  001F14  CFF5 F078          	movff	tablat,___lldiv@divisor+2
  7797  001F18  000A               	tblrd		*-
  7798  001F1A  CFF5 F079          	movff	tablat,___lldiv@divisor+3
  7799  001F1E  C097  F072         	movff	sprintf@val,___lldiv@dividend
  7800  001F22  C098  F073         	movff	sprintf@val+1,___lldiv@dividend+1
  7801  001F26  C099  F074         	movff	sprintf@val+2,___lldiv@dividend+2
  7802  001F2A  C09A  F075         	movff	sprintf@val+3,___lldiv@dividend+3
  7803  001F2E  EC39  F016         	call	___lldiv	;wreg free
  7804  001F32  C072  F07F         	movff	?___lldiv,___llmod@dividend
  7805  001F36  C073  F080         	movff	?___lldiv+1,___llmod@dividend+1
  7806  001F3A  C074  F081         	movff	?___lldiv+2,___llmod@dividend+2
  7807  001F3E  C075  F082         	movff	?___lldiv+3,___llmod@dividend+3
  7808  001F42  0E0A               	movlw	10
  7809  001F44  0100               	movlb	0	; () banked
  7810  001F46  6F83               	movwf	___llmod@divisor& (0+255),b
  7811  001F48  0E00               	movlw	0
  7812  001F4A  6F84               	movwf	(___llmod@divisor+1)& (0+255),b
  7813  001F4C  0E00               	movlw	0
  7814  001F4E  6F85               	movwf	(___llmod@divisor+2)& (0+255),b
  7815  001F50  0E00               	movlw	0
  7816  001F52  6F86               	movwf	(___llmod@divisor+3)& (0+255),b
  7817  001F54  ECF8  F016         	call	___llmod	;wreg free
  7818  001F58  0100               	movlb	0	; () banked
  7819  001F5A  517F               	movf	?___llmod& (0+255),w,b
  7820  001F5C  0F30               	addlw	48
  7821  001F5E  0100               	movlb	0	; () banked
  7822  001F60  6F9B               	movwf	sprintf@c& (0+255),b
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;doprnt.c: 1523: }
  7826                           ;doprnt.c: 1524: ((*sp++ = (c)));
  7827  001F62  C088  FFD9         	movff	sprintf@sp,fsr2l
  7828  001F66  C089  FFDA         	movff	sprintf@sp+1,fsr2h
  7829  001F6A  C09B  FFDF         	movff	sprintf@c,indf2
  7830                           
  7831                           ; BSR set to: 0
  7832  001F6E  0100               	movlb	0	; () banked
  7833  001F70  4B88               	infsnz	sprintf@sp& (0+255),f,b
  7834  001F72  2B89               	incf	(sprintf@sp+1)& (0+255),f,b
  7835  001F74  D000               	goto	l3676
  7836  001F76                     l3676:
  7837                           
  7838                           ; BSR set to: 0
  7839  001F76  0100               	movlb	0	; () banked
  7840  001F78  0792               	decf	sprintf@prec& (0+255),f,b
  7841  001F7A  A0D8               	btfss	status,0,c
  7842  001F7C  0793               	decf	(sprintf@prec+1)& (0+255),f,b
  7843  001F7E  0100               	movlb	0	; () banked
  7844  001F80  2992               	incf	sprintf@prec& (0+255),w,b
  7845  001F82  E1AE               	bnz	l3670
  7846  001F84  0100               	movlb	0	; () banked
  7847  001F86  2993               	incf	(sprintf@prec+1)& (0+255),w,b
  7848  001F88  B4D8               	btfsc	status,2,c
  7849  001F8A  D002               	goto	l3678
  7850  001F8C  D7A9               	goto	l3670
  7851                           
  7852                           ; BSR set to: 0
  7853  001F8E  D000               	goto	l3678
  7854  001F90                     l3678:
  7855                           
  7856                           ; BSR set to: 0
  7857  001F90  C08A  FFF6         	movff	sprintf@f,tblptrl
  7858  001F94  C08B  FFF7         	movff	sprintf@f+1,tblptrh
  7859  001F98  0100               	movlb	0	; () banked
  7860  001F9A  4B8A               	infsnz	sprintf@f& (0+255),f,b
  7861  001F9C  2B8B               	incf	(sprintf@f+1)& (0+255),f,b
  7862  001F9E                     	if	0	;tblptru may be non-zero
  7863  001F9E                     	endif
  7864  001F9E                     	if	0	;tblptru may be non-zero
  7865  001F9E                     	endif
  7866  001F9E  0008               	tblrd		*
  7867  001FA0  CFF5 F09B          	movff	tablat,sprintf@c
  7868  001FA4  0100               	movlb	0	; () banked
  7869  001FA6  519B               	movf	sprintf@c& (0+255),w,b
  7870  001FA8  B4D8               	btfsc	status,2,c
  7871  001FAA  D002               	goto	l3680
  7872  001FAC  D6EE               	goto	l3620
  7873                           
  7874                           ; BSR set to: 0
  7875  001FAE  D000               	goto	l3680
  7876  001FB0                     l3680:
  7877                           
  7878                           ; BSR set to: 0
  7879                           ;doprnt.c: 1538: *sp = 0;
  7880  001FB0  C088  FFD9         	movff	sprintf@sp,fsr2l
  7881  001FB4  C089  FFDA         	movff	sprintf@sp+1,fsr2h
  7882  001FB8  0E00               	movlw	0
  7883  001FBA  6EDF               	movwf	indf2,c
  7884  001FBC  0012               	return	
  7885                           
  7886                           ; BSR set to: 0
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;doprnt.c: 1540: return 0;
  7890                           ;	Return value of _sprintf is never used
  7891  001FBE  0012               	return		;funcret
  7892  001FC0                     __end_of_sprintf:
  7893                           	opt stack 0
  7894                           tblptru	equ	0xFF8
  7895                           tblptrh	equ	0xFF7
  7896                           tblptrl	equ	0xFF6
  7897                           tablat	equ	0xFF5
  7898                           prodh	equ	0xFF4
  7899                           prodl	equ	0xFF3
  7900                           intcon	equ	0xFF2
  7901                           intcon2	equ	0xFF1
  7902                           postinc0	equ	0xFEE
  7903                           plusw0	equ	0xFEB
  7904                           wreg	equ	0xFE8
  7905                           indf1	equ	0xFE7
  7906                           postdec1	equ	0xFE5
  7907                           fsr1h	equ	0xFE2
  7908                           fsr1l	equ	0xFE1
  7909                           indf2	equ	0xFDF
  7910                           postinc2	equ	0xFDE
  7911                           postdec2	equ	0xFDD
  7912                           plusw2	equ	0xFDB
  7913                           fsr2h	equ	0xFDA
  7914                           fsr2l	equ	0xFD9
  7915                           status	equ	0xFD8
  7916                           
  7917 ;; *************** function ___llmod *****************
  7918 ;; Defined at:
  7919 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;  dividend        4   31[BANK0 ] unsigned long 
  7922 ;;  divisor         4   35[BANK0 ] unsigned long 
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;  counter         1   39[BANK0 ] unsigned char 
  7925 ;; Return value:  Size  Location     Type
  7926 ;;                  4   31[BANK0 ] unsigned long 
  7927 ;; Registers used:
  7928 ;;		wreg, status,2, status,0
  7929 ;; Tracked objects:
  7930 ;;		On entry : 0/0
  7931 ;;		On exit  : 0/0
  7932 ;;		Unchanged: 0/0
  7933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7934 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7937 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7938 ;;Total ram usage:        9 bytes
  7939 ;; Hardware stack levels used:    1
  7940 ;; Hardware stack levels required when called:    4
  7941 ;; This function calls:
  7942 ;;		Nothing
  7943 ;; This function is called by:
  7944 ;;		_sprintf
  7945 ;; This function uses a non-reentrant model
  7946 ;;
  7947                           
  7948                           	psect	text39
  7949  002DF0                     __ptext39:
  7950                           	opt stack 0
  7951  002DF0                     ___llmod:
  7952                           	opt stack 22
  7953                           
  7954                           ; BSR set to: 0
  7955                           ;incstack = 0
  7956  002DF0  0100               	movlb	0	; () banked
  7957  002DF2  5183               	movf	___llmod@divisor& (0+255),w,b
  7958  002DF4  0100               	movlb	0	; () banked
  7959  002DF6  1184               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7960  002DF8  0100               	movlb	0	; () banked
  7961  002DFA  1185               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7962  002DFC  0100               	movlb	0	; () banked
  7963  002DFE  1186               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  7964  002E00  B4D8               	btfsc	status,2,c
  7965  002E02  D03F               	goto	l1370
  7966                           
  7967                           ; BSR set to: 0
  7968  002E04  0E01               	movlw	1
  7969  002E06  0100               	movlb	0	; () banked
  7970  002E08  6F87               	movwf	___llmod@counter& (0+255),b
  7971  002E0A  D009               	goto	l3560
  7972  002E0C                     l3558:
  7973                           
  7974                           ; BSR set to: 0
  7975  002E0C  0100               	movlb	0	; () banked
  7976  002E0E  90D8               	bcf	status,0,c
  7977  002E10  3783               	rlcf	___llmod@divisor& (0+255),f,b
  7978  002E12  3784               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7979  002E14  3785               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7980  002E16  3786               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7981  002E18  0100               	movlb	0	; () banked
  7982  002E1A  2B87               	incf	___llmod@counter& (0+255),f,b
  7983  002E1C  D000               	goto	l3560
  7984  002E1E                     l3560:
  7985                           
  7986                           ; BSR set to: 0
  7987  002E1E  0100               	movlb	0	; () banked
  7988  002E20  BF86               	btfsc	(___llmod@divisor+3)& (0+255),7,b
  7989  002E22  D002               	goto	l3562
  7990  002E24  D7F3               	goto	l3558
  7991                           
  7992                           ; BSR set to: 0
  7993  002E26  D000               	goto	l3562
  7994  002E28                     l3562:
  7995                           
  7996                           ; BSR set to: 0
  7997  002E28  0100               	movlb	0	; () banked
  7998  002E2A  5183               	movf	___llmod@divisor& (0+255),w,b
  7999  002E2C  0100               	movlb	0	; () banked
  8000  002E2E  5D7F               	subwf	___llmod@dividend& (0+255),w,b
  8001  002E30  0100               	movlb	0	; () banked
  8002  002E32  5184               	movf	(___llmod@divisor+1)& (0+255),w,b
  8003  002E34  0100               	movlb	0	; () banked
  8004  002E36  5980               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  8005  002E38  0100               	movlb	0	; () banked
  8006  002E3A  5185               	movf	(___llmod@divisor+2)& (0+255),w,b
  8007  002E3C  0100               	movlb	0	; () banked
  8008  002E3E  5981               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  8009  002E40  0100               	movlb	0	; () banked
  8010  002E42  5186               	movf	(___llmod@divisor+3)& (0+255),w,b
  8011  002E44  0100               	movlb	0	; () banked
  8012  002E46  5982               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  8013  002E48  A0D8               	btfss	status,0,c
  8014  002E4A  D011               	goto	l3566
  8015                           
  8016                           ; BSR set to: 0
  8017  002E4C  0100               	movlb	0	; () banked
  8018  002E4E  5183               	movf	___llmod@divisor& (0+255),w,b
  8019  002E50  0100               	movlb	0	; () banked
  8020  002E52  5F7F               	subwf	___llmod@dividend& (0+255),f,b
  8021  002E54  0100               	movlb	0	; () banked
  8022  002E56  5184               	movf	(___llmod@divisor+1)& (0+255),w,b
  8023  002E58  0100               	movlb	0	; () banked
  8024  002E5A  5B80               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  8025  002E5C  0100               	movlb	0	; () banked
  8026  002E5E  5185               	movf	(___llmod@divisor+2)& (0+255),w,b
  8027  002E60  0100               	movlb	0	; () banked
  8028  002E62  5B81               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  8029  002E64  0100               	movlb	0	; () banked
  8030  002E66  5186               	movf	(___llmod@divisor+3)& (0+255),w,b
  8031  002E68  0100               	movlb	0	; () banked
  8032  002E6A  5B82               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  8033  002E6C  D000               	goto	l3566
  8034  002E6E                     l3566:
  8035                           
  8036                           ; BSR set to: 0
  8037  002E6E  0100               	movlb	0	; () banked
  8038  002E70  90D8               	bcf	status,0,c
  8039  002E72  3386               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  8040  002E74  3385               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  8041  002E76  3384               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  8042  002E78  3383               	rrcf	___llmod@divisor& (0+255),f,b
  8043                           
  8044                           ; BSR set to: 0
  8045  002E7A  0100               	movlb	0	; () banked
  8046  002E7C  2F87               	decfsz	___llmod@counter& (0+255),f,b
  8047  002E7E  D7D4               	goto	l3562
  8048  002E80  D000               	goto	l1370
  8049  002E82                     l1370:
  8050                           
  8051                           ; BSR set to: 0
  8052  002E82  C07F  F07F         	movff	___llmod@dividend,?___llmod
  8053  002E86  C080  F080         	movff	___llmod@dividend+1,?___llmod+1
  8054  002E8A  C081  F081         	movff	___llmod@dividend+2,?___llmod+2
  8055  002E8E  C082  F082         	movff	___llmod@dividend+3,?___llmod+3
  8056                           
  8057                           ; BSR set to: 0
  8058  002E92  0012               	return		;funcret
  8059  002E94                     __end_of___llmod:
  8060                           	opt stack 0
  8061                           tblptru	equ	0xFF8
  8062                           tblptrh	equ	0xFF7
  8063                           tblptrl	equ	0xFF6
  8064                           tablat	equ	0xFF5
  8065                           prodh	equ	0xFF4
  8066                           prodl	equ	0xFF3
  8067                           intcon	equ	0xFF2
  8068                           intcon2	equ	0xFF1
  8069                           postinc0	equ	0xFEE
  8070                           plusw0	equ	0xFEB
  8071                           wreg	equ	0xFE8
  8072                           indf1	equ	0xFE7
  8073                           postdec1	equ	0xFE5
  8074                           fsr1h	equ	0xFE2
  8075                           fsr1l	equ	0xFE1
  8076                           indf2	equ	0xFDF
  8077                           postinc2	equ	0xFDE
  8078                           postdec2	equ	0xFDD
  8079                           plusw2	equ	0xFDB
  8080                           fsr2h	equ	0xFDA
  8081                           fsr2l	equ	0xFD9
  8082                           status	equ	0xFD8
  8083                           
  8084 ;; *************** function ___lldiv *****************
  8085 ;; Defined at:
  8086 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  8087 ;; Parameters:    Size  Location     Type
  8088 ;;  dividend        4   18[BANK0 ] unsigned long 
  8089 ;;  divisor         4   22[BANK0 ] unsigned long 
  8090 ;; Auto vars:     Size  Location     Type
  8091 ;;  quotient        4   26[BANK0 ] unsigned long 
  8092 ;;  counter         1   30[BANK0 ] unsigned char 
  8093 ;; Return value:  Size  Location     Type
  8094 ;;                  4   18[BANK0 ] unsigned long 
  8095 ;; Registers used:
  8096 ;;		wreg, status,2, status,0
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8102 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8103 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8105 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8106 ;;Total ram usage:       13 bytes
  8107 ;; Hardware stack levels used:    1
  8108 ;; Hardware stack levels required when called:    4
  8109 ;; This function calls:
  8110 ;;		Nothing
  8111 ;; This function is called by:
  8112 ;;		_InitUART
  8113 ;;		_sprintf
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           	psect	text40
  8118  002C72                     __ptext40:
  8119                           	opt stack 0
  8120  002C72                     ___lldiv:
  8121                           	opt stack 24
  8122                           
  8123                           ; BSR set to: 0
  8124                           ;incstack = 0
  8125  002C72  0E00               	movlw	0
  8126  002C74  0100               	movlb	0	; () banked
  8127  002C76  6F7A               	movwf	___lldiv@quotient& (0+255),b
  8128  002C78  0E00               	movlw	0
  8129  002C7A  6F7B               	movwf	(___lldiv@quotient+1)& (0+255),b
  8130  002C7C  0E00               	movlw	0
  8131  002C7E  6F7C               	movwf	(___lldiv@quotient+2)& (0+255),b
  8132  002C80  0E00               	movlw	0
  8133  002C82  6F7D               	movwf	(___lldiv@quotient+3)& (0+255),b
  8134                           
  8135                           ; BSR set to: 0
  8136  002C84  0100               	movlb	0	; () banked
  8137  002C86  5176               	movf	___lldiv@divisor& (0+255),w,b
  8138  002C88  0100               	movlb	0	; () banked
  8139  002C8A  1177               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8140  002C8C  0100               	movlb	0	; () banked
  8141  002C8E  1178               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8142  002C90  0100               	movlb	0	; () banked
  8143  002C92  1179               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8144  002C94  B4D8               	btfsc	status,2,c
  8145  002C96  D047               	goto	l1360
  8146                           
  8147                           ; BSR set to: 0
  8148  002C98  0E01               	movlw	1
  8149  002C9A  0100               	movlb	0	; () banked
  8150  002C9C  6F7E               	movwf	___lldiv@counter& (0+255),b
  8151  002C9E  D009               	goto	l3540
  8152  002CA0                     l3538:
  8153                           
  8154                           ; BSR set to: 0
  8155  002CA0  0100               	movlb	0	; () banked
  8156  002CA2  90D8               	bcf	status,0,c
  8157  002CA4  3776               	rlcf	___lldiv@divisor& (0+255),f,b
  8158  002CA6  3777               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8159  002CA8  3778               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8160  002CAA  3779               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8161  002CAC  0100               	movlb	0	; () banked
  8162  002CAE  2B7E               	incf	___lldiv@counter& (0+255),f,b
  8163  002CB0  D000               	goto	l3540
  8164  002CB2                     l3540:
  8165                           
  8166                           ; BSR set to: 0
  8167  002CB2  0100               	movlb	0	; () banked
  8168  002CB4  BF79               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  8169  002CB6  D002               	goto	l3542
  8170  002CB8  D7F3               	goto	l3538
  8171                           
  8172                           ; BSR set to: 0
  8173  002CBA  D000               	goto	l3542
  8174  002CBC                     l3542:
  8175                           
  8176                           ; BSR set to: 0
  8177  002CBC  0100               	movlb	0	; () banked
  8178  002CBE  90D8               	bcf	status,0,c
  8179  002CC0  377A               	rlcf	___lldiv@quotient& (0+255),f,b
  8180  002CC2  377B               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8181  002CC4  377C               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8182  002CC6  377D               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8183                           
  8184                           ; BSR set to: 0
  8185  002CC8  0100               	movlb	0	; () banked
  8186  002CCA  5176               	movf	___lldiv@divisor& (0+255),w,b
  8187  002CCC  0100               	movlb	0	; () banked
  8188  002CCE  5D72               	subwf	___lldiv@dividend& (0+255),w,b
  8189  002CD0  0100               	movlb	0	; () banked
  8190  002CD2  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8191  002CD4  0100               	movlb	0	; () banked
  8192  002CD6  5973               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8193  002CD8  0100               	movlb	0	; () banked
  8194  002CDA  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8195  002CDC  0100               	movlb	0	; () banked
  8196  002CDE  5974               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8197  002CE0  0100               	movlb	0	; () banked
  8198  002CE2  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8199  002CE4  0100               	movlb	0	; () banked
  8200  002CE6  5975               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8201  002CE8  A0D8               	btfss	status,0,c
  8202  002CEA  D013               	goto	l3550
  8203                           
  8204                           ; BSR set to: 0
  8205  002CEC  0100               	movlb	0	; () banked
  8206  002CEE  5176               	movf	___lldiv@divisor& (0+255),w,b
  8207  002CF0  0100               	movlb	0	; () banked
  8208  002CF2  5F72               	subwf	___lldiv@dividend& (0+255),f,b
  8209  002CF4  0100               	movlb	0	; () banked
  8210  002CF6  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8211  002CF8  0100               	movlb	0	; () banked
  8212  002CFA  5B73               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8213  002CFC  0100               	movlb	0	; () banked
  8214  002CFE  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8215  002D00  0100               	movlb	0	; () banked
  8216  002D02  5B74               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8217  002D04  0100               	movlb	0	; () banked
  8218  002D06  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8219  002D08  0100               	movlb	0	; () banked
  8220  002D0A  5B75               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8221                           
  8222                           ; BSR set to: 0
  8223  002D0C  0100               	movlb	0	; () banked
  8224  002D0E  817A               	bsf	___lldiv@quotient& (0+255),0,b
  8225  002D10  D000               	goto	l3550
  8226  002D12                     l3550:
  8227                           
  8228                           ; BSR set to: 0
  8229  002D12  0100               	movlb	0	; () banked
  8230  002D14  90D8               	bcf	status,0,c
  8231  002D16  3379               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8232  002D18  3378               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8233  002D1A  3377               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8234  002D1C  3376               	rrcf	___lldiv@divisor& (0+255),f,b
  8235                           
  8236                           ; BSR set to: 0
  8237  002D1E  0100               	movlb	0	; () banked
  8238  002D20  2F7E               	decfsz	___lldiv@counter& (0+255),f,b
  8239  002D22  D7CC               	goto	l3542
  8240  002D24  D000               	goto	l1360
  8241  002D26                     l1360:
  8242                           
  8243                           ; BSR set to: 0
  8244  002D26  C07A  F072         	movff	___lldiv@quotient,?___lldiv
  8245  002D2A  C07B  F073         	movff	___lldiv@quotient+1,?___lldiv+1
  8246  002D2E  C07C  F074         	movff	___lldiv@quotient+2,?___lldiv+2
  8247  002D32  C07D  F075         	movff	___lldiv@quotient+3,?___lldiv+3
  8248                           
  8249                           ; BSR set to: 0
  8250  002D36  0012               	return		;funcret
  8251  002D38                     __end_of___lldiv:
  8252                           	opt stack 0
  8253                           tblptru	equ	0xFF8
  8254                           tblptrh	equ	0xFF7
  8255                           tblptrl	equ	0xFF6
  8256                           tablat	equ	0xFF5
  8257                           prodh	equ	0xFF4
  8258                           prodl	equ	0xFF3
  8259                           intcon	equ	0xFF2
  8260                           intcon2	equ	0xFF1
  8261                           postinc0	equ	0xFEE
  8262                           plusw0	equ	0xFEB
  8263                           wreg	equ	0xFE8
  8264                           indf1	equ	0xFE7
  8265                           postdec1	equ	0xFE5
  8266                           fsr1h	equ	0xFE2
  8267                           fsr1l	equ	0xFE1
  8268                           indf2	equ	0xFDF
  8269                           postinc2	equ	0xFDE
  8270                           postdec2	equ	0xFDD
  8271                           plusw2	equ	0xFDB
  8272                           fsr2h	equ	0xFDA
  8273                           fsr2l	equ	0xFD9
  8274                           status	equ	0xFD8
  8275                           
  8276 ;; *************** function _EnterCommandMode *****************
  8277 ;; Defined at:
  8278 ;;		line 109 in file "Bluetooth.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;		None
  8281 ;; Auto vars:     Size  Location     Type
  8282 ;;  count           1   28[BANK0 ] unsigned char 
  8283 ;; Return value:  Size  Location     Type
  8284 ;;                  1    wreg      unsigned char 
  8285 ;; Registers used:
  8286 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8287 ;; Tracked objects:
  8288 ;;		On entry : 0/0
  8289 ;;		On exit  : 0/0
  8290 ;;		Unchanged: 0/0
  8291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8293 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8295 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8296 ;;Total ram usage:        1 bytes
  8297 ;; Hardware stack levels used:    1
  8298 ;; Hardware stack levels required when called:    6
  8299 ;; This function calls:
  8300 ;;		_BlueConnected
  8301 ;;		_ResetBlue
  8302 ;;		_StringContains
  8303 ;;		_UARTstring
  8304 ;;		_cleanBuffer
  8305 ;;		_delayUS
  8306 ;; This function is called by:
  8307 ;;		_BluetoothInitialSetup
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           	psect	text41
  8312  002BAA                     __ptext41:
  8313                           	opt stack 0
  8314  002BAA                     _EnterCommandMode:
  8315                           	opt stack 21
  8316                           
  8317                           ;Bluetooth.c: 111: unsigned char count = 0;
  8318                           
  8319                           ; BSR set to: 0
  8320                           ;incstack = 0
  8321  002BAA  0E00               	movlw	0
  8322  002BAC  0100               	movlb	0	; () banked
  8323  002BAE  6F7C               	movwf	EnterCommandMode@count& (0+255),b
  8324                           
  8325                           ;Bluetooth.c: 112: while(BlueConnected())
  8326  002BB0  D00B               	goto	l3592
  8327  002BB2                     l3582:
  8328                           
  8329                           ;Bluetooth.c: 113: {
  8330                           ;Bluetooth.c: 114: ResetBlue();
  8331  002BB2  ECD2  F01B         	call	_ResetBlue	;wreg free
  8332                           
  8333                           ;Bluetooth.c: 115: count++;
  8334  002BB6  0100               	movlb	0	; () banked
  8335  002BB8  2B7C               	incf	EnterCommandMode@count& (0+255),f,b
  8336                           
  8337                           ; BSR set to: 0
  8338                           ;Bluetooth.c: 116: if(count > 4)
  8339  002BBA  0E04               	movlw	4
  8340  002BBC  0100               	movlb	0	; () banked
  8341  002BBE  657C               	cpfsgt	EnterCommandMode@count& (0+255),b
  8342  002BC0  D003               	goto	l3592
  8343                           
  8344                           ; BSR set to: 0
  8345                           ;Bluetooth.c: 117: {
  8346                           ;Bluetooth.c: 119: return 0;
  8347  002BC2  0E00               	movlw	0
  8348                           
  8349                           ; BSR set to: 0
  8350  002BC4  0012               	return	
  8351                           
  8352                           ; BSR set to: 0
  8353  002BC6  D000               	goto	l3592
  8354  002BC8                     l3592:
  8355                           
  8356                           ; BSR set to: 0
  8357  002BC8  ECC4  F01C         	call	_BlueConnected	;wreg free
  8358  002BCC  0900               	iorlw	0
  8359  002BCE  A4D8               	btfss	status,2,c
  8360  002BD0  D7F0               	goto	l3582
  8361                           
  8362                           ;Bluetooth.c: 120: }
  8363                           ;Bluetooth.c: 121: }
  8364                           ;Bluetooth.c: 123: delayUS(50000);
  8365  002BD2  0E50               	movlw	80
  8366  002BD4  0100               	movlb	0	; () banked
  8367  002BD6  6F72               	movwf	delayUS@US& (0+255),b
  8368  002BD8  0EC3               	movlw	195
  8369  002BDA  6F73               	movwf	(delayUS@US+1)& (0+255),b
  8370  002BDC  0E00               	movlw	0
  8371  002BDE  6F74               	movwf	(delayUS@US+2)& (0+255),b
  8372  002BE0  0E00               	movlw	0
  8373  002BE2  6F75               	movwf	(delayUS@US+3)& (0+255),b
  8374  002BE4  EC97  F019         	call	_delayUS	;wreg free
  8375                           
  8376                           ;Bluetooth.c: 124: UARTstring("$$$");
  8377  002BE8  0E94               	movlw	low STR_1
  8378  002BEA  0100               	movlb	0	; () banked
  8379  002BEC  6F73               	movwf	UARTstring@data& (0+255),b
  8380  002BEE  0E10               	movlw	high STR_1
  8381  002BF0  0100               	movlb	0	; () banked
  8382  002BF2  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  8383  002BF4  EC5C  F01A         	call	_UARTstring	;wreg free
  8384                           
  8385                           ;Bluetooth.c: 125: delayUS(50000);
  8386  002BF8  0E50               	movlw	80
  8387  002BFA  0100               	movlb	0	; () banked
  8388  002BFC  6F72               	movwf	delayUS@US& (0+255),b
  8389  002BFE  0EC3               	movlw	195
  8390  002C00  6F73               	movwf	(delayUS@US+1)& (0+255),b
  8391  002C02  0E00               	movlw	0
  8392  002C04  6F74               	movwf	(delayUS@US+2)& (0+255),b
  8393  002C06  0E00               	movlw	0
  8394  002C08  6F75               	movwf	(delayUS@US+3)& (0+255),b
  8395  002C0A  EC97  F019         	call	_delayUS	;wreg free
  8396                           
  8397                           ;Bluetooth.c: 126: if(StringContains(CommandString,"CMD"))
  8398  002C0E  0E00               	movlw	low _CommandString
  8399  002C10  0100               	movlb	0	; () banked
  8400  002C12  6F72               	movwf	StringContains@This& (0+255),b
  8401  002C14  0E02               	movlw	high _CommandString
  8402  002C16  0100               	movlb	0	; () banked
  8403  002C18  6F73               	movwf	(StringContains@This+1)& (0+255),b
  8404  002C1A  0E98               	movlw	low STR_2
  8405  002C1C  0100               	movlb	0	; () banked
  8406  002C1E  6F74               	movwf	StringContains@That& (0+255),b
  8407  002C20  0E10               	movlw	high STR_2
  8408  002C22  0100               	movlb	0	; () banked
  8409  002C24  6F75               	movwf	(StringContains@That+1)& (0+255),b
  8410  002C26  EC4A  F017         	call	_StringContains	;wreg free
  8411  002C2A  0900               	iorlw	0
  8412  002C2C  B4D8               	btfsc	status,2,c
  8413  002C2E  D010               	goto	l3610
  8414                           
  8415                           ;Bluetooth.c: 127: {
  8416                           ;Bluetooth.c: 128: cleanBuffer(&CommandString,CommandStringPos);
  8417  002C30  0E00               	movlw	low _CommandString
  8418  002C32  0100               	movlb	0	; () banked
  8419  002C34  6F72               	movwf	cleanBuffer@data& (0+255),b
  8420  002C36  0E02               	movlw	high _CommandString
  8421  002C38  0100               	movlb	0	; () banked
  8422  002C3A  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
  8423  002C3C  C039  F074         	movff	_CommandStringPos,cleanBuffer@count
  8424  002C40  0100               	movlb	0	; () banked
  8425  002C42  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
  8426  002C44  EC2F  F01A         	call	_cleanBuffer	;wreg free
  8427                           
  8428                           ;Bluetooth.c: 129: CommandStringPos = 0;
  8429  002C48  0E00               	movlw	0
  8430  002C4A  6E39               	movwf	_CommandStringPos,c
  8431                           
  8432                           ;Bluetooth.c: 130: return 1;
  8433  002C4C  0E01               	movlw	1
  8434  002C4E  0012               	return	
  8435  002C50                     l3610:
  8436                           
  8437                           ;Bluetooth.c: 131: }
  8438                           ;Bluetooth.c: 132: cleanBuffer(&CommandString,CommandStringPos);
  8439  002C50  0E00               	movlw	low _CommandString
  8440  002C52  0100               	movlb	0	; () banked
  8441  002C54  6F72               	movwf	cleanBuffer@data& (0+255),b
  8442  002C56  0E02               	movlw	high _CommandString
  8443  002C58  0100               	movlb	0	; () banked
  8444  002C5A  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
  8445  002C5C  C039  F074         	movff	_CommandStringPos,cleanBuffer@count
  8446  002C60  0100               	movlb	0	; () banked
  8447  002C62  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
  8448  002C64  EC2F  F01A         	call	_cleanBuffer	;wreg free
  8449                           
  8450                           ;Bluetooth.c: 133: CommandStringPos = 0;
  8451  002C68  0E00               	movlw	0
  8452  002C6A  6E39               	movwf	_CommandStringPos,c
  8453                           
  8454                           ;Bluetooth.c: 134: return 0;
  8455  002C6C  0E00               	movlw	0
  8456  002C6E  0012               	return	
  8457  002C70  0012               	return		;funcret
  8458  002C72                     __end_of_EnterCommandMode:
  8459                           	opt stack 0
  8460                           tblptru	equ	0xFF8
  8461                           tblptrh	equ	0xFF7
  8462                           tblptrl	equ	0xFF6
  8463                           tablat	equ	0xFF5
  8464                           prodh	equ	0xFF4
  8465                           prodl	equ	0xFF3
  8466                           intcon	equ	0xFF2
  8467                           intcon2	equ	0xFF1
  8468                           postinc0	equ	0xFEE
  8469                           plusw0	equ	0xFEB
  8470                           wreg	equ	0xFE8
  8471                           indf1	equ	0xFE7
  8472                           postdec1	equ	0xFE5
  8473                           fsr1h	equ	0xFE2
  8474                           fsr1l	equ	0xFE1
  8475                           indf2	equ	0xFDF
  8476                           postinc2	equ	0xFDE
  8477                           postdec2	equ	0xFDD
  8478                           plusw2	equ	0xFDB
  8479                           fsr2h	equ	0xFDA
  8480                           fsr2l	equ	0xFD9
  8481                           status	equ	0xFD8
  8482                           
  8483 ;; *************** function _cleanBuffer *****************
  8484 ;; Defined at:
  8485 ;;		line 83 in file "MISC.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;  data            2   18[BANK0 ] PTR unsigned char 
  8488 ;;		 -> BluetoothInitialSetup@buf(50), CommandString(255), ReceivedString(255), 
  8489 ;;  count           2   20[BANK0 ] int 
  8490 ;; Auto vars:     Size  Location     Type
  8491 ;;  i               1   25[BANK0 ] unsigned char 
  8492 ;; Return value:  Size  Location     Type
  8493 ;;		None               void
  8494 ;; Registers used:
  8495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8496 ;; Tracked objects:
  8497 ;;		On entry : 0/0
  8498 ;;		On exit  : 0/0
  8499 ;;		Unchanged: 0/0
  8500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8501 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8502 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8503 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8504 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8505 ;;Total ram usage:        8 bytes
  8506 ;; Hardware stack levels used:    1
  8507 ;; Hardware stack levels required when called:    4
  8508 ;; This function calls:
  8509 ;;		Nothing
  8510 ;; This function is called by:
  8511 ;;		_Init_System
  8512 ;;		_InitBluetooth
  8513 ;;		_EnterCommandMode
  8514 ;;		_BluetoothInitialSetup
  8515 ;;		_BufferCopy
  8516 ;; This function uses a non-reentrant model
  8517 ;;
  8518                           
  8519                           	psect	text42
  8520  00345E                     __ptext42:
  8521                           	opt stack 0
  8522  00345E                     _cleanBuffer:
  8523                           	opt stack 25
  8524                           
  8525                           ;MISC.c: 85: unsigned char i=0;
  8526                           
  8527                           ;incstack = 0
  8528  00345E  0E00               	movlw	0
  8529  003460  0100               	movlb	0	; () banked
  8530  003462  6F79               	movwf	cleanBuffer@i& (0+255),b
  8531                           
  8532                           ;MISC.c: 86: for(i=0; i<count;i++)
  8533  003464  0E00               	movlw	0
  8534  003466  0100               	movlb	0	; () banked
  8535  003468  6F79               	movwf	cleanBuffer@i& (0+255),b
  8536  00346A  D010               	goto	l3426
  8537  00346C                     l3422:
  8538                           
  8539                           ; BSR set to: 0
  8540                           ;MISC.c: 87: {
  8541                           ;MISC.c: 88: data[i]= 0;
  8542  00346C  0100               	movlb	0	; () banked
  8543  00346E  5179               	movf	cleanBuffer@i& (0+255),w,b
  8544  003470  0D01               	mullw	1
  8545  003472  50F3               	movf	prodl,w,c
  8546  003474  0100               	movlb	0	; () banked
  8547  003476  2572               	addwf	cleanBuffer@data& (0+255),w,b
  8548  003478  6ED9               	movwf	fsr2l,c
  8549  00347A  50F4               	movf	prodh,w,c
  8550  00347C  0100               	movlb	0	; () banked
  8551  00347E  2173               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
  8552  003480  6EDA               	movwf	fsr2h,c
  8553  003482  0E00               	movlw	0
  8554  003484  6EDF               	movwf	indf2,c
  8555                           
  8556                           ; BSR set to: 0
  8557  003486  0100               	movlb	0	; () banked
  8558  003488  2B79               	incf	cleanBuffer@i& (0+255),f,b
  8559  00348A  D000               	goto	l3426
  8560  00348C                     l3426:
  8561                           
  8562                           ; BSR set to: 0
  8563  00348C  0100               	movlb	0	; () banked
  8564  00348E  5179               	movf	cleanBuffer@i& (0+255),w,b
  8565  003490  0100               	movlb	0	; () banked
  8566  003492  6F76               	movwf	??_cleanBuffer& (0+255),b
  8567  003494  6B77               	clrf	(??_cleanBuffer+1)& (0+255),b
  8568  003496  0100               	movlb	0	; () banked
  8569  003498  5174               	movf	cleanBuffer@count& (0+255),w,b
  8570  00349A  0100               	movlb	0	; () banked
  8571  00349C  5D76               	subwf	??_cleanBuffer& (0+255),w,b
  8572  00349E  0100               	movlb	0	; () banked
  8573  0034A0  5177               	movf	(??_cleanBuffer+1)& (0+255),w,b
  8574  0034A2  0A80               	xorlw	128
  8575  0034A4  0100               	movlb	0	; () banked
  8576  0034A6  6F78               	movwf	(??_cleanBuffer+2)& (0+255),b
  8577  0034A8  0100               	movlb	0	; () banked
  8578  0034AA  5175               	movf	(cleanBuffer@count+1)& (0+255),w,b
  8579  0034AC  0A80               	xorlw	128
  8580  0034AE  0100               	movlb	0	; () banked
  8581  0034B0  5978               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
  8582  0034B2  A0D8               	btfss	status,0,c
  8583  0034B4  D7DB               	goto	l3422
  8584                           
  8585                           ; BSR set to: 0
  8586                           
  8587                           ; BSR set to: 0
  8588  0034B6  0012               	return		;funcret
  8589  0034B8                     __end_of_cleanBuffer:
  8590                           	opt stack 0
  8591                           tblptru	equ	0xFF8
  8592                           tblptrh	equ	0xFF7
  8593                           tblptrl	equ	0xFF6
  8594                           tablat	equ	0xFF5
  8595                           prodh	equ	0xFF4
  8596                           prodl	equ	0xFF3
  8597                           intcon	equ	0xFF2
  8598                           intcon2	equ	0xFF1
  8599                           postinc0	equ	0xFEE
  8600                           plusw0	equ	0xFEB
  8601                           wreg	equ	0xFE8
  8602                           indf1	equ	0xFE7
  8603                           postdec1	equ	0xFE5
  8604                           fsr1h	equ	0xFE2
  8605                           fsr1l	equ	0xFE1
  8606                           indf2	equ	0xFDF
  8607                           postinc2	equ	0xFDE
  8608                           postdec2	equ	0xFDD
  8609                           plusw2	equ	0xFDB
  8610                           fsr2h	equ	0xFDA
  8611                           fsr2l	equ	0xFD9
  8612                           status	equ	0xFD8
  8613                           
  8614 ;; *************** function _UARTstring *****************
  8615 ;; Defined at:
  8616 ;;		line 200 in file "UART.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  data            2   19[BANK0 ] PTR unsigned char 
  8619 ;;		 -> STR_15(5), STR_13(5), STR_11(6), STR_9(6), 
  8620 ;;		 -> STR_7(9), STR_5(21), BluetoothInitialSetup@buf(50), STR_1(4), 
  8621 ;; Auto vars:     Size  Location     Type
  8622 ;;		None
  8623 ;; Return value:  Size  Location     Type
  8624 ;;		None               void
  8625 ;; Registers used:
  8626 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8627 ;; Tracked objects:
  8628 ;;		On entry : 0/0
  8629 ;;		On exit  : 0/0
  8630 ;;		Unchanged: 0/0
  8631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8632 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8635 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8636 ;;Total ram usage:        2 bytes
  8637 ;; Hardware stack levels used:    1
  8638 ;; Hardware stack levels required when called:    5
  8639 ;; This function calls:
  8640 ;;		_UARTchar
  8641 ;; This function is called by:
  8642 ;;		_EnterCommandMode
  8643 ;;		_BluetoothInitialSetup
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647                           	psect	text43
  8648  0034B8                     __ptext43:
  8649                           	opt stack 0
  8650  0034B8                     _UARTstring:
  8651                           	opt stack 22
  8652                           
  8653                           ;UART.c: 202: while(*data != 0)
  8654                           
  8655                           ; BSR set to: 0
  8656                           ;incstack = 0
  8657  0034B8  D017               	goto	l3460
  8658  0034BA                     l3456:
  8659                           
  8660                           ;UART.c: 203: {
  8661                           ;UART.c: 204: UARTchar(*data);
  8662  0034BA  C073  FFF6         	movff	UARTstring@data,tblptrl
  8663  0034BE  C074  FFF7         	movff	UARTstring@data+1,tblptrh
  8664  0034C2  0E00               	movlw	low (__smallconst shr (0+16))
  8665  0034C4  6EF8               	movwf	tblptru,c
  8666  0034C6  0E0F               	movlw	(high __ramtop+-1)
  8667  0034C8  64F7               	cpfsgt	tblptrh,c
  8668  0034CA  D003               	bra	u2717
  8669  0034CC  0008               	tblrd		*
  8670  0034CE  50F5               	movf	tablat,w,c
  8671  0034D0  D005               	bra	u2710
  8672  0034D2                     u2717:
  8673  0034D2  CFF6 FFE9          	movff	tblptrl,fsr0l
  8674  0034D6  CFF7 FFEA          	movff	tblptrh,fsr0h
  8675  0034DA  50EF               	movf	indf0,w,c
  8676  0034DC                     u2710:
  8677  0034DC  EC3C  F01C         	call	_UARTchar
  8678                           
  8679                           ;UART.c: 205: *data++;
  8680  0034E0  0100               	movlb	0	; () banked
  8681  0034E2  4B73               	infsnz	UARTstring@data& (0+255),f,b
  8682  0034E4  2B74               	incf	(UARTstring@data+1)& (0+255),f,b
  8683  0034E6  D000               	goto	l3460
  8684  0034E8                     l3460:
  8685  0034E8  C073  FFF6         	movff	UARTstring@data,tblptrl
  8686  0034EC  C074  FFF7         	movff	UARTstring@data+1,tblptrh
  8687  0034F0  0E00               	movlw	low (__smallconst shr (0+16))
  8688  0034F2  6EF8               	movwf	tblptru,c
  8689  0034F4  0E0F               	movlw	(high __ramtop+-1)
  8690  0034F6  64F7               	cpfsgt	tblptrh,c
  8691  0034F8  D003               	bra	u2727
  8692  0034FA  0008               	tblrd		*
  8693  0034FC  50F5               	movf	tablat,w,c
  8694  0034FE  D005               	bra	u2720
  8695  003500                     u2727:
  8696  003500  CFF6 FFE9          	movff	tblptrl,fsr0l
  8697  003504  CFF7 FFEA          	movff	tblptrh,fsr0h
  8698  003508  50EF               	movf	indf0,w,c
  8699  00350A                     u2720:
  8700  00350A  0900               	iorlw	0
  8701  00350C  A4D8               	btfss	status,2,c
  8702  00350E  D7D5               	goto	l3456
  8703  003510  0012               	return		;funcret
  8704  003512                     __end_of_UARTstring:
  8705                           	opt stack 0
  8706                           tblptru	equ	0xFF8
  8707                           tblptrh	equ	0xFF7
  8708                           tblptrl	equ	0xFF6
  8709                           tablat	equ	0xFF5
  8710                           prodh	equ	0xFF4
  8711                           prodl	equ	0xFF3
  8712                           intcon	equ	0xFF2
  8713                           intcon2	equ	0xFF1
  8714                           indf0	equ	0xFEF
  8715                           postinc0	equ	0xFEE
  8716                           plusw0	equ	0xFEB
  8717                           fsr0h	equ	0xFEA
  8718                           fsr0l	equ	0xFE9
  8719                           wreg	equ	0xFE8
  8720                           indf1	equ	0xFE7
  8721                           postdec1	equ	0xFE5
  8722                           fsr1h	equ	0xFE2
  8723                           fsr1l	equ	0xFE1
  8724                           indf2	equ	0xFDF
  8725                           postinc2	equ	0xFDE
  8726                           postdec2	equ	0xFDD
  8727                           plusw2	equ	0xFDB
  8728                           fsr2h	equ	0xFDA
  8729                           fsr2l	equ	0xFD9
  8730                           status	equ	0xFD8
  8731                           
  8732 ;; *************** function _UARTchar *****************
  8733 ;; Defined at:
  8734 ;;		line 185 in file "UART.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;  data            1    wreg     unsigned char 
  8737 ;; Auto vars:     Size  Location     Type
  8738 ;;  data            1   18[BANK0 ] unsigned char 
  8739 ;; Return value:  Size  Location     Type
  8740 ;;		None               void
  8741 ;; Registers used:
  8742 ;;		wreg, status,2
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8751 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8752 ;;Total ram usage:        1 bytes
  8753 ;; Hardware stack levels used:    1
  8754 ;; Hardware stack levels required when called:    4
  8755 ;; This function calls:
  8756 ;;		Nothing
  8757 ;; This function is called by:
  8758 ;;		_UARTstring
  8759 ;;		_UARTstringWAIT
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           	psect	text44
  8764  003878                     __ptext44:
  8765                           	opt stack 0
  8766  003878                     _UARTchar:
  8767                           	opt stack 22
  8768                           
  8769                           ;incstack = 0
  8770                           ;UARTchar@data stored from wreg
  8771  003878  0100               	movlb	0	; () banked
  8772  00387A  6F72               	movwf	UARTchar@data& (0+255),b
  8773                           
  8774                           ; BSR set to: 0
  8775                           ;UART.c: 187: if(data == 0)
  8776  00387C  0100               	movlb	0	; () banked
  8777  00387E  5172               	movf	UARTchar@data& (0+255),w,b
  8778  003880  0100               	movlb	0	; () banked
  8779  003882  A4D8               	btfss	status,2,c
  8780  003884  D002               	goto	l3378
  8781                           
  8782                           ; BSR set to: 0
  8783                           ;UART.c: 188: {
  8784                           ;UART.c: 189: __nop();
  8785  003886  F000               	nop	
  8786  003888  D000               	goto	l3378
  8787  00388A                     l3378:
  8788                           
  8789                           ;UART.c: 190: }
  8790                           ;UART.c: 191: TXREG = data;
  8791  00388A  C072  FFAD         	movff	UARTchar@data,4013	;volatile
  8792                           
  8793                           ;UART.c: 192: while(!TXSTAbits.TRMT);
  8794  00388E  D000               	goto	l226
  8795  003890                     l226:
  8796  003890  A2AC               	btfss	4012,1,c	;volatile
  8797  003892  D7FE               	goto	l226
  8798  003894  0012               	return		;funcret
  8799  003896                     __end_of_UARTchar:
  8800                           	opt stack 0
  8801                           tblptru	equ	0xFF8
  8802                           tblptrh	equ	0xFF7
  8803                           tblptrl	equ	0xFF6
  8804                           tablat	equ	0xFF5
  8805                           prodh	equ	0xFF4
  8806                           prodl	equ	0xFF3
  8807                           intcon	equ	0xFF2
  8808                           intcon2	equ	0xFF1
  8809                           indf0	equ	0xFEF
  8810                           postinc0	equ	0xFEE
  8811                           plusw0	equ	0xFEB
  8812                           fsr0h	equ	0xFEA
  8813                           fsr0l	equ	0xFE9
  8814                           wreg	equ	0xFE8
  8815                           indf1	equ	0xFE7
  8816                           postdec1	equ	0xFE5
  8817                           fsr1h	equ	0xFE2
  8818                           fsr1l	equ	0xFE1
  8819                           indf2	equ	0xFDF
  8820                           postinc2	equ	0xFDE
  8821                           postdec2	equ	0xFDD
  8822                           plusw2	equ	0xFDB
  8823                           fsr2h	equ	0xFDA
  8824                           fsr2l	equ	0xFD9
  8825                           status	equ	0xFD8
  8826                           
  8827 ;; *************** function _StringContains *****************
  8828 ;; Defined at:
  8829 ;;		line 173 in file "MISC.c"
  8830 ;; Parameters:    Size  Location     Type
  8831 ;;  This            2   18[BANK0 ] PTR unsigned char 
  8832 ;;		 -> CommandString(255), 
  8833 ;;  That            2   20[BANK0 ] PTR const unsigned char 
  8834 ;;		 -> STR_16(4), STR_12(4), STR_10(4), STR_8(4), 
  8835 ;;		 -> STR_6(4), STR_4(4), BluetoothInitialSetup@buf(50), STR_2(4), 
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;		None
  8838 ;; Return value:  Size  Location     Type
  8839 ;;                  1    wreg      unsigned char 
  8840 ;; Registers used:
  8841 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8842 ;; Tracked objects:
  8843 ;;		On entry : 0/0
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8847 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8850 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8851 ;;Total ram usage:        5 bytes
  8852 ;; Hardware stack levels used:    1
  8853 ;; Hardware stack levels required when called:    4
  8854 ;; This function calls:
  8855 ;;		Nothing
  8856 ;; This function is called by:
  8857 ;;		_EnterCommandMode
  8858 ;;		_BluetoothInitialSetup
  8859 ;; This function uses a non-reentrant model
  8860 ;;
  8861                           
  8862                           	psect	text45
  8863  002E94                     __ptext45:
  8864                           	opt stack 0
  8865  002E94                     _StringContains:
  8866                           	opt stack 23
  8867                           
  8868                           ;MISC.c: 175: while(*This != 0)
  8869                           
  8870                           ;incstack = 0
  8871  002E94  D047               	goto	l3448
  8872                           
  8873                           ;MISC.c: 176: {
  8874                           ;MISC.c: 177: while(*This == *That)
  8875  002E96  D026               	goto	l3444
  8876  002E98                     l3430:
  8877                           
  8878                           ;MISC.c: 178: {
  8879                           ;MISC.c: 179: That++;
  8880  002E98  0100               	movlb	0	; () banked
  8881  002E9A  4B74               	infsnz	StringContains@That& (0+255),f,b
  8882  002E9C  2B75               	incf	(StringContains@That+1)& (0+255),f,b
  8883                           
  8884                           ;MISC.c: 180: This++;
  8885  002E9E  0100               	movlb	0	; () banked
  8886  002EA0  4B72               	infsnz	StringContains@This& (0+255),f,b
  8887  002EA2  2B73               	incf	(StringContains@This+1)& (0+255),f,b
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;MISC.c: 181: if(*That == 0)
  8891  002EA4  C074  FFF6         	movff	StringContains@That,tblptrl
  8892  002EA8  C075  FFF7         	movff	StringContains@That+1,tblptrh
  8893  002EAC  0E00               	movlw	low (__smallconst shr (0+16))
  8894  002EAE  6EF8               	movwf	tblptru,c
  8895  002EB0  0E0F               	movlw	(high __ramtop+-1)
  8896  002EB2  64F7               	cpfsgt	tblptrh,c
  8897  002EB4  D003               	bra	u2657
  8898  002EB6  0008               	tblrd		*
  8899  002EB8  50F5               	movf	tablat,w,c
  8900  002EBA  D005               	bra	u2650
  8901  002EBC                     u2657:
  8902  002EBC  CFF6 FFE9          	movff	tblptrl,fsr0l
  8903  002EC0  CFF7 FFEA          	movff	tblptrh,fsr0h
  8904  002EC4  50EF               	movf	indf0,w,c
  8905  002EC6                     u2650:
  8906  002EC6  0900               	iorlw	0
  8907  002EC8  A4D8               	btfss	status,2,c
  8908  002ECA  D002               	goto	l3438
  8909                           
  8910                           ;MISC.c: 182: {
  8911                           ;MISC.c: 183: return 1;
  8912  002ECC  0E01               	movlw	1
  8913  002ECE  0012               	return	
  8914  002ED0                     l3438:
  8915                           
  8916                           ;MISC.c: 184: }
  8917                           ;MISC.c: 185: if(*This == 0)
  8918  002ED0  C072  FFD9         	movff	StringContains@This,fsr2l
  8919  002ED4  C073  FFDA         	movff	StringContains@This+1,fsr2h
  8920  002ED8  50DF               	movf	indf2,w,c
  8921  002EDA  A4D8               	btfss	status,2,c
  8922  002EDC  D003               	goto	l3444
  8923                           
  8924                           ;MISC.c: 186: {
  8925                           ;MISC.c: 187: return 0;
  8926  002EDE  0E00               	movlw	0
  8927  002EE0  0012               	return	
  8928  002EE2  D000               	goto	l3444
  8929  002EE4                     l3444:
  8930  002EE4  C072  FFD9         	movff	StringContains@This,fsr2l
  8931  002EE8  C073  FFDA         	movff	StringContains@This+1,fsr2h
  8932  002EEC  50DF               	movf	indf2,w,c
  8933  002EEE  0100               	movlb	0	; () banked
  8934  002EF0  6F76               	movwf	??_StringContains& (0+255),b
  8935  002EF2  C074  FFF6         	movff	StringContains@That,tblptrl
  8936  002EF6  C075  FFF7         	movff	StringContains@That+1,tblptrh
  8937  002EFA  0E00               	movlw	low (__smallconst shr (0+16))
  8938  002EFC  6EF8               	movwf	tblptru,c
  8939  002EFE  0E0F               	movlw	(high __ramtop+-1)
  8940  002F00  64F7               	cpfsgt	tblptrh,c
  8941  002F02  D003               	bra	u2687
  8942  002F04  0008               	tblrd		*
  8943  002F06  50F5               	movf	tablat,w,c
  8944  002F08  D005               	bra	u2680
  8945  002F0A                     u2687:
  8946  002F0A  CFF6 FFE9          	movff	tblptrl,fsr0l
  8947  002F0E  CFF7 FFEA          	movff	tblptrh,fsr0h
  8948  002F12  50EF               	movf	indf0,w,c
  8949  002F14                     u2680:
  8950  002F14  0100               	movlb	0	; () banked
  8951  002F16  1976               	xorwf	??_StringContains& (0+255),w,b
  8952  002F18  B4D8               	btfsc	status,2,c
  8953  002F1A  D7BE               	goto	l3430
  8954                           
  8955                           ; BSR set to: 0
  8956                           ;MISC.c: 188: }
  8957                           ;MISC.c: 189: }
  8958                           ;MISC.c: 190: This++;
  8959                           
  8960                           ; BSR set to: 0
  8961  002F1C  0100               	movlb	0	; () banked
  8962  002F1E  4B72               	infsnz	StringContains@This& (0+255),f,b
  8963  002F20  2B73               	incf	(StringContains@This+1)& (0+255),f,b
  8964  002F22  D000               	goto	l3448
  8965  002F24                     l3448:
  8966  002F24  C072  FFD9         	movff	StringContains@This,fsr2l
  8967  002F28  C073  FFDA         	movff	StringContains@This+1,fsr2h
  8968  002F2C  50DF               	movf	indf2,w,c
  8969  002F2E  A4D8               	btfss	status,2,c
  8970  002F30  D7D9               	goto	l3444
  8971                           
  8972                           ;MISC.c: 191: }
  8973                           ;MISC.c: 192: return 0;
  8974  002F32  0E00               	movlw	0
  8975  002F34  0012               	return	
  8976  002F36  0012               	return		;funcret
  8977  002F38                     __end_of_StringContains:
  8978                           	opt stack 0
  8979                           tblptru	equ	0xFF8
  8980                           tblptrh	equ	0xFF7
  8981                           tblptrl	equ	0xFF6
  8982                           tablat	equ	0xFF5
  8983                           prodh	equ	0xFF4
  8984                           prodl	equ	0xFF3
  8985                           intcon	equ	0xFF2
  8986                           intcon2	equ	0xFF1
  8987                           indf0	equ	0xFEF
  8988                           postinc0	equ	0xFEE
  8989                           plusw0	equ	0xFEB
  8990                           fsr0h	equ	0xFEA
  8991                           fsr0l	equ	0xFE9
  8992                           wreg	equ	0xFE8
  8993                           indf1	equ	0xFE7
  8994                           postdec1	equ	0xFE5
  8995                           fsr1h	equ	0xFE2
  8996                           fsr1l	equ	0xFE1
  8997                           indf2	equ	0xFDF
  8998                           postinc2	equ	0xFDE
  8999                           postdec2	equ	0xFDD
  9000                           plusw2	equ	0xFDB
  9001                           fsr2h	equ	0xFDA
  9002                           fsr2l	equ	0xFD9
  9003                           status	equ	0xFD8
  9004                           
  9005 ;; *************** function _ResetBlue *****************
  9006 ;; Defined at:
  9007 ;;		line 96 in file "Bluetooth.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;		None
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;		None
  9012 ;; Return value:  Size  Location     Type
  9013 ;;		None               void
  9014 ;; Registers used:
  9015 ;;		wreg, status,2, status,0, cstack
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/0
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9025 ;;Total ram usage:        0 bytes
  9026 ;; Hardware stack levels used:    1
  9027 ;; Hardware stack levels required when called:    5
  9028 ;; This function calls:
  9029 ;;		_delayUS
  9030 ;; This function is called by:
  9031 ;;		_InitBluetooth
  9032 ;;		_EnterCommandMode
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036                           	psect	text46
  9037  0037A4                     __ptext46:
  9038                           	opt stack 0
  9039  0037A4                     _ResetBlue:
  9040                           	opt stack 23
  9041                           
  9042                           ;Bluetooth.c: 98: LATA &= ~0x04;
  9043                           
  9044                           ;incstack = 0
  9045  0037A4  9489               	bcf	3977,2,c	;volatile
  9046                           
  9047                           ;Bluetooth.c: 99: delayUS(50000);
  9048  0037A6  0E50               	movlw	80
  9049  0037A8  0100               	movlb	0	; () banked
  9050  0037AA  6F72               	movwf	delayUS@US& (0+255),b
  9051  0037AC  0EC3               	movlw	195
  9052  0037AE  6F73               	movwf	(delayUS@US+1)& (0+255),b
  9053  0037B0  0E00               	movlw	0
  9054  0037B2  6F74               	movwf	(delayUS@US+2)& (0+255),b
  9055  0037B4  0E00               	movlw	0
  9056  0037B6  6F75               	movwf	(delayUS@US+3)& (0+255),b
  9057  0037B8  EC97  F019         	call	_delayUS	;wreg free
  9058                           
  9059                           ;Bluetooth.c: 100: LATA |= 0x04;
  9060  0037BC  8489               	bsf	3977,2,c	;volatile
  9061                           
  9062                           ;Bluetooth.c: 101: delayUS(50000);
  9063  0037BE  0E50               	movlw	80
  9064  0037C0  0100               	movlb	0	; () banked
  9065  0037C2  6F72               	movwf	delayUS@US& (0+255),b
  9066  0037C4  0EC3               	movlw	195
  9067  0037C6  6F73               	movwf	(delayUS@US+1)& (0+255),b
  9068  0037C8  0E00               	movlw	0
  9069  0037CA  6F74               	movwf	(delayUS@US+2)& (0+255),b
  9070  0037CC  0E00               	movlw	0
  9071  0037CE  6F75               	movwf	(delayUS@US+3)& (0+255),b
  9072  0037D0  EC97  F019         	call	_delayUS	;wreg free
  9073  0037D4  0012               	return		;funcret
  9074  0037D6                     __end_of_ResetBlue:
  9075                           	opt stack 0
  9076                           tblptru	equ	0xFF8
  9077                           tblptrh	equ	0xFF7
  9078                           tblptrl	equ	0xFF6
  9079                           tablat	equ	0xFF5
  9080                           prodh	equ	0xFF4
  9081                           prodl	equ	0xFF3
  9082                           intcon	equ	0xFF2
  9083                           intcon2	equ	0xFF1
  9084                           indf0	equ	0xFEF
  9085                           postinc0	equ	0xFEE
  9086                           plusw0	equ	0xFEB
  9087                           fsr0h	equ	0xFEA
  9088                           fsr0l	equ	0xFE9
  9089                           wreg	equ	0xFE8
  9090                           indf1	equ	0xFE7
  9091                           postdec1	equ	0xFE5
  9092                           fsr1h	equ	0xFE2
  9093                           fsr1l	equ	0xFE1
  9094                           indf2	equ	0xFDF
  9095                           postinc2	equ	0xFDE
  9096                           postdec2	equ	0xFDD
  9097                           plusw2	equ	0xFDB
  9098                           fsr2h	equ	0xFDA
  9099                           fsr2l	equ	0xFD9
  9100                           status	equ	0xFD8
  9101                           
  9102 ;; *************** function _delayUS *****************
  9103 ;; Defined at:
  9104 ;;		line 49 in file "MISC.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;  US              4   18[BANK0 ] long 
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;  i               4   23[BANK0 ] long 
  9109 ;;  j               1   27[BANK0 ] unsigned char 
  9110 ;; Return value:  Size  Location     Type
  9111 ;;		None               void
  9112 ;; Registers used:
  9113 ;;		wreg, status,2, status,0
  9114 ;; Tracked objects:
  9115 ;;		On entry : 0/0
  9116 ;;		On exit  : 0/0
  9117 ;;		Unchanged: 0/0
  9118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9119 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9120 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9121 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9122 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9123 ;;Total ram usage:       10 bytes
  9124 ;; Hardware stack levels used:    1
  9125 ;; Hardware stack levels required when called:    4
  9126 ;; This function calls:
  9127 ;;		Nothing
  9128 ;; This function is called by:
  9129 ;;		_main
  9130 ;;		_ReadVoltage
  9131 ;;		_InternalADC_Read
  9132 ;;		_UseIRCode
  9133 ;;		_ResetBlue
  9134 ;;		_EnterCommandMode
  9135 ;;		_BluetoothInitialSetup
  9136 ;;		_ReadCodeButtons
  9137 ;; This function uses a non-reentrant model
  9138 ;;
  9139                           
  9140                           	psect	text47
  9141  00332E                     __ptext47:
  9142                           	opt stack 0
  9143  00332E                     _delayUS:
  9144                           	opt stack 26
  9145                           
  9146                           ;MISC.c: 51: long i;
  9147                           ;MISC.c: 52: unsigned char j;
  9148                           ;MISC.c: 53: for(i=0;i<US;i+=5)
  9149                           
  9150                           ;incstack = 0
  9151  00332E  0E00               	movlw	0
  9152  003330  0100               	movlb	0	; () banked
  9153  003332  6F77               	movwf	delayUS@i& (0+255),b
  9154  003334  0E00               	movlw	0
  9155  003336  6F78               	movwf	(delayUS@i+1)& (0+255),b
  9156  003338  0E00               	movlw	0
  9157  00333A  6F79               	movwf	(delayUS@i+2)& (0+255),b
  9158  00333C  0E00               	movlw	0
  9159  00333E  6F7A               	movwf	(delayUS@i+3)& (0+255),b
  9160  003340  D013               	goto	l102
  9161  003342                     l3362:
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;MISC.c: 54: {
  9165                           ;MISC.c: 55: for(j=0;j<64;j++)
  9166  003342  0E00               	movlw	0
  9167  003344  0100               	movlb	0	; () banked
  9168  003346  6F7B               	movwf	delayUS@j& (0+255),b
  9169  003348                     l3364:
  9170                           
  9171                           ; BSR set to: 0
  9172  003348  0E3F               	movlw	63
  9173  00334A  0100               	movlb	0	; () banked
  9174  00334C  657B               	cpfsgt	delayUS@j& (0+255),b
  9175  00334E  D001               	goto	l104
  9176                           
  9177                           ; BSR set to: 0
  9178  003350  D004               	goto	l3372
  9179  003352                     l104:
  9180                           
  9181                           ; BSR set to: 0
  9182                           ;MISC.c: 56: {
  9183                           ;MISC.c: 57: __nop();
  9184  003352  F000               	nop	
  9185  003354  0100               	movlb	0	; () banked
  9186  003356  2B7B               	incf	delayUS@j& (0+255),f,b
  9187  003358  D7F7               	goto	l3364
  9188  00335A                     l3372:
  9189                           
  9190                           ; BSR set to: 0
  9191  00335A  0E05               	movlw	5
  9192  00335C  0100               	movlb	0	; () banked
  9193  00335E  2777               	addwf	delayUS@i& (0+255),f,b
  9194  003360  0E00               	movlw	0
  9195  003362  2378               	addwfc	(delayUS@i+1)& (0+255),f,b
  9196  003364  2379               	addwfc	(delayUS@i+2)& (0+255),f,b
  9197  003366  237A               	addwfc	(delayUS@i+3)& (0+255),f,b
  9198  003368                     l102:
  9199                           
  9200                           ; BSR set to: 0
  9201  003368  0100               	movlb	0	; () banked
  9202  00336A  5172               	movf	delayUS@US& (0+255),w,b
  9203  00336C  0100               	movlb	0	; () banked
  9204  00336E  5D77               	subwf	delayUS@i& (0+255),w,b
  9205  003370  0100               	movlb	0	; () banked
  9206  003372  5173               	movf	(delayUS@US+1)& (0+255),w,b
  9207  003374  0100               	movlb	0	; () banked
  9208  003376  5978               	subwfb	(delayUS@i+1)& (0+255),w,b
  9209  003378  0100               	movlb	0	; () banked
  9210  00337A  5174               	movf	(delayUS@US+2)& (0+255),w,b
  9211  00337C  0100               	movlb	0	; () banked
  9212  00337E  5979               	subwfb	(delayUS@i+2)& (0+255),w,b
  9213  003380  0100               	movlb	0	; () banked
  9214  003382  517A               	movf	(delayUS@i+3)& (0+255),w,b
  9215  003384  0A80               	xorlw	128
  9216  003386  0100               	movlb	0	; () banked
  9217  003388  6F76               	movwf	??_delayUS& (0+255),b
  9218  00338A  0100               	movlb	0	; () banked
  9219  00338C  5175               	movf	(delayUS@US+3)& (0+255),w,b
  9220  00338E  0A80               	xorlw	128
  9221  003390  0100               	movlb	0	; () banked
  9222  003392  5976               	subwfb	??_delayUS& (0+255),w,b
  9223  003394  A0D8               	btfss	status,0,c
  9224  003396  D7D5               	goto	l3362
  9225                           
  9226                           ; BSR set to: 0
  9227                           
  9228                           ; BSR set to: 0
  9229  003398  0012               	return		;funcret
  9230  00339A                     __end_of_delayUS:
  9231                           	opt stack 0
  9232                           tblptru	equ	0xFF8
  9233                           tblptrh	equ	0xFF7
  9234                           tblptrl	equ	0xFF6
  9235                           tablat	equ	0xFF5
  9236                           prodh	equ	0xFF4
  9237                           prodl	equ	0xFF3
  9238                           intcon	equ	0xFF2
  9239                           intcon2	equ	0xFF1
  9240                           indf0	equ	0xFEF
  9241                           postinc0	equ	0xFEE
  9242                           plusw0	equ	0xFEB
  9243                           fsr0h	equ	0xFEA
  9244                           fsr0l	equ	0xFE9
  9245                           wreg	equ	0xFE8
  9246                           indf1	equ	0xFE7
  9247                           postdec1	equ	0xFE5
  9248                           fsr1h	equ	0xFE2
  9249                           fsr1l	equ	0xFE1
  9250                           indf2	equ	0xFDF
  9251                           postinc2	equ	0xFDE
  9252                           postdec2	equ	0xFDD
  9253                           plusw2	equ	0xFDB
  9254                           fsr2h	equ	0xFDA
  9255                           fsr2l	equ	0xFD9
  9256                           status	equ	0xFD8
  9257                           
  9258 ;; *************** function _BlueConnected *****************
  9259 ;; Defined at:
  9260 ;;		line 81 in file "Bluetooth.c"
  9261 ;; Parameters:    Size  Location     Type
  9262 ;;		None
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;		None
  9265 ;; Return value:  Size  Location     Type
  9266 ;;                  1    wreg      unsigned char 
  9267 ;; Registers used:
  9268 ;;		wreg
  9269 ;; Tracked objects:
  9270 ;;		On entry : 0/0
  9271 ;;		On exit  : 0/0
  9272 ;;		Unchanged: 0/0
  9273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9278 ;;Total ram usage:        0 bytes
  9279 ;; Hardware stack levels used:    1
  9280 ;; Hardware stack levels required when called:    4
  9281 ;; This function calls:
  9282 ;;		Nothing
  9283 ;; This function is called by:
  9284 ;;		_EnterCommandMode
  9285 ;; This function uses a non-reentrant model
  9286 ;;
  9287                           
  9288                           	psect	text48
  9289  003988                     __ptext48:
  9290                           	opt stack 0
  9291  003988                     _BlueConnected:
  9292                           	opt stack 22
  9293                           
  9294                           ;Bluetooth.c: 84: if((PORTA & 0x02) == 0x02)
  9295                           
  9296                           ; BSR set to: 0
  9297                           ;incstack = 0
  9298  003988  A280               	btfss	3968,1,c	;volatile
  9299  00398A  D002               	goto	l3486
  9300                           
  9301                           ;Bluetooth.c: 85: {
  9302                           ;Bluetooth.c: 86: return 1;
  9303  00398C  0E01               	movlw	1
  9304  00398E  0012               	return	
  9305  003990                     l3486:
  9306                           
  9307                           ;Bluetooth.c: 87: }
  9308                           ;Bluetooth.c: 88: return 0;
  9309  003990  0E00               	movlw	0
  9310  003992  0012               	return	
  9311  003994  0012               	return		;funcret
  9312  003996                     __end_of_BlueConnected:
  9313                           	opt stack 0
  9314                           tblptru	equ	0xFF8
  9315                           tblptrh	equ	0xFF7
  9316                           tblptrl	equ	0xFF6
  9317                           tablat	equ	0xFF5
  9318                           prodh	equ	0xFF4
  9319                           prodl	equ	0xFF3
  9320                           intcon	equ	0xFF2
  9321                           intcon2	equ	0xFF1
  9322                           indf0	equ	0xFEF
  9323                           postinc0	equ	0xFEE
  9324                           plusw0	equ	0xFEB
  9325                           fsr0h	equ	0xFEA
  9326                           fsr0l	equ	0xFE9
  9327                           wreg	equ	0xFE8
  9328                           indf1	equ	0xFE7
  9329                           postdec1	equ	0xFE5
  9330                           fsr1h	equ	0xFE2
  9331                           fsr1l	equ	0xFE1
  9332                           indf2	equ	0xFDF
  9333                           postinc2	equ	0xFDE
  9334                           postdec2	equ	0xFDD
  9335                           plusw2	equ	0xFDB
  9336                           fsr2h	equ	0xFDA
  9337                           fsr2l	equ	0xFD9
  9338                           status	equ	0xFD8
  9339                           
  9340 ;; *************** function _BluetoothConfigured *****************
  9341 ;; Defined at:
  9342 ;;		line 245 in file "Bluetooth.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;		None
  9345 ;; Auto vars:     Size  Location     Type
  9346 ;;		None
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  1    wreg      unsigned char 
  9349 ;; Registers used:
  9350 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  9351 ;; Tracked objects:
  9352 ;;		On entry : 0/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9360 ;;Total ram usage:        0 bytes
  9361 ;; Hardware stack levels used:    1
  9362 ;; Hardware stack levels required when called:    9
  9363 ;; This function calls:
  9364 ;;		_SyncGlobalToEEPROM
  9365 ;; This function is called by:
  9366 ;;		_InitBluetooth
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           	psect	text49
  9371  003896                     __ptext49:
  9372                           	opt stack 0
  9373  003896                     _BluetoothConfigured:
  9374                           	opt stack 19
  9375                           
  9376                           ;Bluetooth.c: 247: if(Global.BlueToothFlag != 1)
  9377                           
  9378                           ;incstack = 0
  9379  003896  0100               	movlb	0	; () banked
  9380  003898  05E1               	decf	_Global& (0+255),w,b
  9381  00389A  B4D8               	btfsc	status,2,c
  9382  00389C  D007               	goto	l3924
  9383                           
  9384                           ; BSR set to: 0
  9385                           ;Bluetooth.c: 248: {
  9386                           ;Bluetooth.c: 249: Global.BlueToothFlag = 1;
  9387  00389E  0E01               	movlw	1
  9388  0038A0  0100               	movlb	0	; () banked
  9389  0038A2  6FE1               	movwf	_Global& (0+255),b
  9390                           
  9391                           ; BSR set to: 0
  9392                           ;Bluetooth.c: 250: SyncGlobalToEEPROM();
  9393  0038A4  EC02  F01B         	call	_SyncGlobalToEEPROM	;wreg free
  9394                           
  9395                           ;Bluetooth.c: 251: return 0;
  9396  0038A8  0E00               	movlw	0
  9397  0038AA  0012               	return	
  9398  0038AC                     l3924:
  9399                           
  9400                           ;Bluetooth.c: 252: }
  9401                           ;Bluetooth.c: 253: return 1;
  9402  0038AC  0E01               	movlw	1
  9403  0038AE  0012               	return	
  9404  0038B0  0012               	return		;funcret
  9405  0038B2                     __end_of_BluetoothConfigured:
  9406                           	opt stack 0
  9407                           tblptru	equ	0xFF8
  9408                           tblptrh	equ	0xFF7
  9409                           tblptrl	equ	0xFF6
  9410                           tablat	equ	0xFF5
  9411                           prodh	equ	0xFF4
  9412                           prodl	equ	0xFF3
  9413                           intcon	equ	0xFF2
  9414                           intcon2	equ	0xFF1
  9415                           indf0	equ	0xFEF
  9416                           postinc0	equ	0xFEE
  9417                           plusw0	equ	0xFEB
  9418                           fsr0h	equ	0xFEA
  9419                           fsr0l	equ	0xFE9
  9420                           wreg	equ	0xFE8
  9421                           indf1	equ	0xFE7
  9422                           postdec1	equ	0xFE5
  9423                           fsr1h	equ	0xFE2
  9424                           fsr1l	equ	0xFE1
  9425                           indf2	equ	0xFDF
  9426                           postinc2	equ	0xFDE
  9427                           postdec2	equ	0xFDD
  9428                           plusw2	equ	0xFDB
  9429                           fsr2h	equ	0xFDA
  9430                           fsr2l	equ	0xFD9
  9431                           status	equ	0xFD8
  9432                           
  9433 ;; *************** function _SyncGlobalToEEPROM *****************
  9434 ;; Defined at:
  9435 ;;		line 158 in file "EEPROM.c"
  9436 ;; Parameters:    Size  Location     Type
  9437 ;;		None
  9438 ;; Auto vars:     Size  Location     Type
  9439 ;;		None
  9440 ;; Return value:  Size  Location     Type
  9441 ;;                  1    wreg      unsigned char 
  9442 ;; Registers used:
  9443 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  9444 ;; Tracked objects:
  9445 ;;		On entry : 0/0
  9446 ;;		On exit  : 0/0
  9447 ;;		Unchanged: 0/0
  9448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9453 ;;Total ram usage:        0 bytes
  9454 ;; Hardware stack levels used:    1
  9455 ;; Hardware stack levels required when called:    8
  9456 ;; This function calls:
  9457 ;;		_SetEEPROM
  9458 ;; This function is called by:
  9459 ;;		_UseIRCode
  9460 ;;		_BluetoothConfigured
  9461 ;; This function uses a non-reentrant model
  9462 ;;
  9463                           
  9464                           	psect	text50
  9465  003604                     __ptext50:
  9466                           	opt stack 0
  9467  003604                     _SyncGlobalToEEPROM:
  9468                           	opt stack 21
  9469                           
  9470                           ;EEPROM.c: 160: if(!SetEEPROM(Global,0x00000003))
  9471                           
  9472                           ;incstack = 0
  9473  003604  EE20  F0E1         	lfsr	2,_Global
  9474  003608  EE00  F0A7         	lfsr	0,SetEEPROM@Temp
  9475  00360C  0E04               	movlw	4
  9476  00360E                     u2931:
  9477  00360E  CFDB FFEB          	movff	plusw2,plusw0
  9478  003612  06E8               	decf	wreg,f,c
  9479  003614  E2FC               	bc	u2931
  9480  003616  0E03               	movlw	3
  9481  003618  0100               	movlb	0	; () banked
  9482  00361A  6FAC               	movwf	SetEEPROM@burn& (0+255),b
  9483  00361C  0E00               	movlw	0
  9484  00361E  6FAD               	movwf	(SetEEPROM@burn+1)& (0+255),b
  9485  003620  0E00               	movlw	0
  9486  003622  6FAE               	movwf	(SetEEPROM@burn+2)& (0+255),b
  9487  003624  0E00               	movlw	0
  9488  003626  6FAF               	movwf	(SetEEPROM@burn+3)& (0+255),b
  9489  003628  ECD6  F018         	call	_SetEEPROM	;wreg free
  9490  00362C  0100               	movlb	0	; () banked
  9491  00362E  51A7               	movf	?_SetEEPROM& (0+255),w,b
  9492  003630  0100               	movlb	0	; () banked
  9493  003632  11A8               	iorwf	(?_SetEEPROM+1)& (0+255),w,b
  9494  003634  0100               	movlb	0	; () banked
  9495  003636  11A9               	iorwf	(?_SetEEPROM+2)& (0+255),w,b
  9496  003638  0100               	movlb	0	; () banked
  9497  00363A  11AA               	iorwf	(?_SetEEPROM+3)& (0+255),w,b
  9498  00363C  A4D8               	btfss	status,2,c
  9499  00363E  D002               	goto	l3576
  9500                           
  9501                           ; BSR set to: 0
  9502                           ;EEPROM.c: 161: {
  9503                           ;EEPROM.c: 162: return 1;
  9504  003640  0E01               	movlw	1
  9505                           
  9506                           ; BSR set to: 0
  9507  003642  0012               	return	
  9508  003644                     l3576:
  9509                           
  9510                           ; BSR set to: 0
  9511                           ;EEPROM.c: 163: }
  9512                           ;EEPROM.c: 164: return 0;
  9513  003644  0E00               	movlw	0
  9514  003646  0012               	return	
  9515                           
  9516                           ; BSR set to: 0
  9517                           
  9518                           ; BSR set to: 0
  9519  003648  0012               	return		;funcret
  9520  00364A                     __end_of_SyncGlobalToEEPROM:
  9521                           	opt stack 0
  9522                           tblptru	equ	0xFF8
  9523                           tblptrh	equ	0xFF7
  9524                           tblptrl	equ	0xFF6
  9525                           tablat	equ	0xFF5
  9526                           prodh	equ	0xFF4
  9527                           prodl	equ	0xFF3
  9528                           intcon	equ	0xFF2
  9529                           intcon2	equ	0xFF1
  9530                           indf0	equ	0xFEF
  9531                           postinc0	equ	0xFEE
  9532                           plusw0	equ	0xFEB
  9533                           fsr0h	equ	0xFEA
  9534                           fsr0l	equ	0xFE9
  9535                           wreg	equ	0xFE8
  9536                           indf1	equ	0xFE7
  9537                           postdec1	equ	0xFE5
  9538                           fsr1h	equ	0xFE2
  9539                           fsr1l	equ	0xFE1
  9540                           indf2	equ	0xFDF
  9541                           postinc2	equ	0xFDE
  9542                           postdec2	equ	0xFDD
  9543                           plusw2	equ	0xFDB
  9544                           fsr2h	equ	0xFDA
  9545                           fsr2l	equ	0xFD9
  9546                           status	equ	0xFD8
  9547                           
  9548 ;; *************** function _SetEEPROM *****************
  9549 ;; Defined at:
  9550 ;;		line 131 in file "EEPROM.c"
  9551 ;; Parameters:    Size  Location     Type
  9552 ;;  Temp            5   71[BANK0 ] struct EEdata
  9553 ;;  burn            4   76[BANK0 ] unsigned long 
  9554 ;; Auto vars:     Size  Location     Type
  9555 ;;  fail            4   80[BANK0 ] unsigned long 
  9556 ;; Return value:  Size  Location     Type
  9557 ;;                  4   71[BANK0 ] unsigned long 
  9558 ;; Registers used:
  9559 ;;		wreg, status,2, status,0, cstack
  9560 ;; Tracked objects:
  9561 ;;		On entry : 0/0
  9562 ;;		On exit  : 0/0
  9563 ;;		Unchanged: 0/0
  9564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9565 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9566 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9568 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9569 ;;Total ram usage:       13 bytes
  9570 ;; Hardware stack levels used:    1
  9571 ;; Hardware stack levels required when called:    7
  9572 ;; This function calls:
  9573 ;;		_SetMemoryChar
  9574 ;;		_SetMemoryLong
  9575 ;; This function is called by:
  9576 ;;		_SyncGlobalToEEPROM
  9577 ;; This function uses a non-reentrant model
  9578 ;;
  9579                           
  9580                           	psect	text51
  9581  0031AC                     __ptext51:
  9582                           	opt stack 0
  9583  0031AC                     _SetEEPROM:
  9584                           	opt stack 21
  9585                           
  9586                           ;EEPROM.c: 133: unsigned long fail = 0;
  9587                           
  9588                           ; BSR set to: 0
  9589                           ;incstack = 0
  9590  0031AC  0E00               	movlw	0
  9591  0031AE  0100               	movlb	0	; () banked
  9592  0031B0  6FB0               	movwf	SetEEPROM@fail& (0+255),b
  9593  0031B2  0E00               	movlw	0
  9594  0031B4  6FB1               	movwf	(SetEEPROM@fail+1)& (0+255),b
  9595  0031B6  0E00               	movlw	0
  9596  0031B8  6FB2               	movwf	(SetEEPROM@fail+2)& (0+255),b
  9597  0031BA  0E00               	movlw	0
  9598  0031BC  6FB3               	movwf	(SetEEPROM@fail+3)& (0+255),b
  9599                           
  9600                           ; BSR set to: 0
  9601                           ;EEPROM.c: 134: if(burn & 0x00000001)
  9602  0031BE  0100               	movlb	0	; () banked
  9603  0031C0  A1AC               	btfss	SetEEPROM@burn& (0+255),0,b
  9604  0031C2  D012               	goto	l3470
  9605                           
  9606                           ; BSR set to: 0
  9607                           ;EEPROM.c: 135: {
  9608                           ;EEPROM.c: 136: if(!SetMemoryChar(Temp.BlueToothFlag,0))
  9609  0031C4  0E00               	movlw	0
  9610  0031C6  0100               	movlb	0	; () banked
  9611  0031C8  6F7B               	movwf	SetMemoryChar@AddressFirst& (0+255),b
  9612  0031CA  0100               	movlb	0	; () banked
  9613  0031CC  51A7               	movf	SetEEPROM@Temp& (0+255),w,b
  9614  0031CE  EC80  F01B         	call	_SetMemoryChar
  9615  0031D2  0900               	iorlw	0
  9616  0031D4  A4D8               	btfss	status,2,c
  9617  0031D6  D008               	goto	l3470
  9618                           
  9619                           ;EEPROM.c: 137: {
  9620                           ;EEPROM.c: 139: fail += 0x00000001;
  9621  0031D8  0E01               	movlw	1
  9622  0031DA  0100               	movlb	0	; () banked
  9623  0031DC  27B0               	addwf	SetEEPROM@fail& (0+255),f,b
  9624  0031DE  0E00               	movlw	0
  9625  0031E0  23B1               	addwfc	(SetEEPROM@fail+1)& (0+255),f,b
  9626  0031E2  23B2               	addwfc	(SetEEPROM@fail+2)& (0+255),f,b
  9627  0031E4  23B3               	addwfc	(SetEEPROM@fail+3)& (0+255),f,b
  9628                           
  9629                           ; BSR set to: 0
  9630  0031E6  D000               	goto	l3470
  9631  0031E8                     l3470:
  9632                           
  9633                           ;EEPROM.c: 140: }
  9634                           ;EEPROM.c: 141: }
  9635                           ;EEPROM.c: 142: if(burn & 0x00000002)
  9636  0031E8  0100               	movlb	0	; () banked
  9637  0031EA  A3AC               	btfss	SetEEPROM@burn& (0+255),1,b
  9638  0031EC  D018               	goto	l3476
  9639                           
  9640                           ; BSR set to: 0
  9641                           ;EEPROM.c: 143: {
  9642                           ;EEPROM.c: 144: if(!SetMemoryLong(Temp.NECcode,1))
  9643  0031EE  C0A8  F096         	movff	SetEEPROM@Temp+1,SetMemoryLong@Data
  9644  0031F2  C0A9  F097         	movff	SetEEPROM@Temp+2,SetMemoryLong@Data+1
  9645  0031F6  C0AA  F098         	movff	SetEEPROM@Temp+3,SetMemoryLong@Data+2
  9646  0031FA  C0AB  F099         	movff	SetEEPROM@Temp+4,SetMemoryLong@Data+3
  9647  0031FE  0E01               	movlw	1
  9648  003200  0100               	movlb	0	; () banked
  9649  003202  6F9A               	movwf	SetMemoryLong@AddressFirst& (0+255),b
  9650  003204  EC79  F014         	call	_SetMemoryLong	;wreg free
  9651  003208  0900               	iorlw	0
  9652  00320A  A4D8               	btfss	status,2,c
  9653  00320C  D008               	goto	l3476
  9654                           
  9655                           ;EEPROM.c: 145: {
  9656                           ;EEPROM.c: 147: fail += 0x00000002;
  9657  00320E  0E02               	movlw	2
  9658  003210  0100               	movlb	0	; () banked
  9659  003212  27B0               	addwf	SetEEPROM@fail& (0+255),f,b
  9660  003214  0E00               	movlw	0
  9661  003216  23B1               	addwfc	(SetEEPROM@fail+1)& (0+255),f,b
  9662  003218  23B2               	addwfc	(SetEEPROM@fail+2)& (0+255),f,b
  9663  00321A  23B3               	addwfc	(SetEEPROM@fail+3)& (0+255),f,b
  9664                           
  9665                           ; BSR set to: 0
  9666  00321C  D000               	goto	l3476
  9667  00321E                     l3476:
  9668                           
  9669                           ;EEPROM.c: 148: }
  9670                           ;EEPROM.c: 149: }
  9671                           ;EEPROM.c: 150: return fail;
  9672  00321E  C0B0  F0A7         	movff	SetEEPROM@fail,?_SetEEPROM
  9673  003222  C0B1  F0A8         	movff	SetEEPROM@fail+1,?_SetEEPROM+1
  9674  003226  C0B2  F0A9         	movff	SetEEPROM@fail+2,?_SetEEPROM+2
  9675  00322A  C0B3  F0AA         	movff	SetEEPROM@fail+3,?_SetEEPROM+3
  9676  00322E  0012               	return	
  9677  003230  0012               	return		;funcret
  9678  003232                     __end_of_SetEEPROM:
  9679                           	opt stack 0
  9680                           tblptru	equ	0xFF8
  9681                           tblptrh	equ	0xFF7
  9682                           tblptrl	equ	0xFF6
  9683                           tablat	equ	0xFF5
  9684                           prodh	equ	0xFF4
  9685                           prodl	equ	0xFF3
  9686                           intcon	equ	0xFF2
  9687                           intcon2	equ	0xFF1
  9688                           indf0	equ	0xFEF
  9689                           postinc0	equ	0xFEE
  9690                           plusw0	equ	0xFEB
  9691                           fsr0h	equ	0xFEA
  9692                           fsr0l	equ	0xFE9
  9693                           wreg	equ	0xFE8
  9694                           indf1	equ	0xFE7
  9695                           postdec1	equ	0xFE5
  9696                           fsr1h	equ	0xFE2
  9697                           fsr1l	equ	0xFE1
  9698                           indf2	equ	0xFDF
  9699                           postinc2	equ	0xFDE
  9700                           postdec2	equ	0xFDD
  9701                           plusw2	equ	0xFDB
  9702                           fsr2h	equ	0xFDA
  9703                           fsr2l	equ	0xFD9
  9704                           status	equ	0xFD8
  9705                           
  9706 ;; *************** function _SetMemoryLong *****************
  9707 ;; Defined at:
  9708 ;;		line 210 in file "EEPROM.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;  Data            4   54[BANK0 ] unsigned long 
  9711 ;;  AddressFirst    1   58[BANK0 ] unsigned char 
  9712 ;; Auto vars:     Size  Location     Type
  9713 ;;  Test            4   63[BANK0 ] unsigned long 
  9714 ;;  L               1   70[BANK0 ] unsigned char 
  9715 ;;  ML              1   69[BANK0 ] unsigned char 
  9716 ;;  MH              1   68[BANK0 ] unsigned char 
  9717 ;;  H               1   67[BANK0 ] unsigned char 
  9718 ;; Return value:  Size  Location     Type
  9719 ;;                  1    wreg      unsigned char 
  9720 ;; Registers used:
  9721 ;;		wreg, status,2, status,0, cstack
  9722 ;; Tracked objects:
  9723 ;;		On entry : 0/0
  9724 ;;		On exit  : 0/0
  9725 ;;		Unchanged: 0/0
  9726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9727 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9728 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9729 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9730 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9731 ;;Total ram usage:       17 bytes
  9732 ;; Hardware stack levels used:    1
  9733 ;; Hardware stack levels required when called:    6
  9734 ;; This function calls:
  9735 ;;		_GetMemoryLong
  9736 ;;		_WriteEEPROM_1Byte
  9737 ;; This function is called by:
  9738 ;;		_SetEEPROM
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           	psect	text52
  9743  0028F2                     __ptext52:
  9744                           	opt stack 0
  9745  0028F2                     _SetMemoryLong:
  9746                           	opt stack 21
  9747                           
  9748                           ;EEPROM.c: 212: unsigned char H;
  9749                           ;EEPROM.c: 213: unsigned char MH;
  9750                           ;EEPROM.c: 214: unsigned char ML;
  9751                           ;EEPROM.c: 215: unsigned char L;
  9752                           ;EEPROM.c: 216: unsigned long Test;
  9753                           ;EEPROM.c: 218: H = (unsigned char) ((Data & 0XFF000000) >> 24);
  9754                           
  9755                           ;incstack = 0
  9756  0028F2  0E00               	movlw	0
  9757  0028F4  0100               	movlb	0	; () banked
  9758  0028F6  1596               	andwf	SetMemoryLong@Data& (0+255),w,b
  9759  0028F8  0100               	movlb	0	; () banked
  9760  0028FA  6F9B               	movwf	??_SetMemoryLong& (0+255),b
  9761  0028FC  0E00               	movlw	0
  9762  0028FE  0100               	movlb	0	; () banked
  9763  002900  1597               	andwf	(SetMemoryLong@Data+1)& (0+255),w,b
  9764  002902  0100               	movlb	0	; () banked
  9765  002904  6F9C               	movwf	(??_SetMemoryLong+1)& (0+255),b
  9766  002906  0E00               	movlw	0
  9767  002908  0100               	movlb	0	; () banked
  9768  00290A  1598               	andwf	(SetMemoryLong@Data+2)& (0+255),w,b
  9769  00290C  0100               	movlb	0	; () banked
  9770  00290E  6F9D               	movwf	(??_SetMemoryLong+2)& (0+255),b
  9771  002910  0EFF               	movlw	255
  9772  002912  0100               	movlb	0	; () banked
  9773  002914  1599               	andwf	(SetMemoryLong@Data+3)& (0+255),w,b
  9774  002916  0100               	movlb	0	; () banked
  9775  002918  6F9E               	movwf	(??_SetMemoryLong+3)& (0+255),b
  9776  00291A  0E19               	movlw	25
  9777  00291C  D006               	goto	u2620
  9778  00291E                     u2625:
  9779  00291E  0100               	movlb	0	; () banked
  9780  002920  90D8               	bcf	status,0,c
  9781  002922  339E               	rrcf	(??_SetMemoryLong+3)& (0+255),f,b
  9782  002924  339D               	rrcf	(??_SetMemoryLong+2)& (0+255),f,b
  9783  002926  339C               	rrcf	(??_SetMemoryLong+1)& (0+255),f,b
  9784  002928  339B               	rrcf	??_SetMemoryLong& (0+255),f,b
  9785  00292A                     u2620:
  9786  00292A  2EE8               	decfsz	wreg,f,c
  9787  00292C  D7F8               	goto	u2625
  9788  00292E  0100               	movlb	0	; () banked
  9789  002930  519B               	movf	??_SetMemoryLong& (0+255),w,b
  9790  002932  0100               	movlb	0	; () banked
  9791  002934  6FA3               	movwf	SetMemoryLong@H& (0+255),b
  9792                           
  9793                           ; BSR set to: 0
  9794                           ;EEPROM.c: 219: MH = (unsigned char) ((Data & 0X00FF0000) >> 16);
  9795  002936  C098  F0A4         	movff	SetMemoryLong@Data+2,SetMemoryLong@MH
  9796                           
  9797                           ; BSR set to: 0
  9798                           ;EEPROM.c: 220: ML = (unsigned char) ((Data & 0X0000FF00) >> 8);
  9799  00293A  C097  F0A5         	movff	SetMemoryLong@Data+1,SetMemoryLong@ML
  9800                           
  9801                           ; BSR set to: 0
  9802                           ;EEPROM.c: 221: L = (unsigned char) (Data & 0X000000FF);
  9803  00293E  C096  F0A6         	movff	SetMemoryLong@Data,SetMemoryLong@L
  9804                           
  9805                           ; BSR set to: 0
  9806                           ;EEPROM.c: 224: WriteEEPROM_1Byte(AddressFirst, H);
  9807  002942  C09A  F072         	movff	SetMemoryLong@AddressFirst,WriteEEPROM_1Byte@address
  9808  002946  0100               	movlb	0	; () banked
  9809  002948  6B73               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
  9810  00294A  C0A3  F074         	movff	SetMemoryLong@H,WriteEEPROM_1Byte@data
  9811  00294E  EC25  F01B         	call	_WriteEEPROM_1Byte	;wreg free
  9812                           
  9813                           ;EEPROM.c: 225: WriteEEPROM_1Byte((AddressFirst + 1), MH);
  9814  002952  0E01               	movlw	1
  9815  002954  0100               	movlb	0	; () banked
  9816  002956  259A               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
  9817  002958  0100               	movlb	0	; () banked
  9818  00295A  6F72               	movwf	WriteEEPROM_1Byte@address& (0+255),b
  9819  00295C  0100               	movlb	0	; () banked
  9820  00295E  6B73               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
  9821  002960  0E00               	movlw	0
  9822  002962  2373               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
  9823  002964  C0A4  F074         	movff	SetMemoryLong@MH,WriteEEPROM_1Byte@data
  9824  002968  EC25  F01B         	call	_WriteEEPROM_1Byte	;wreg free
  9825                           
  9826                           ;EEPROM.c: 226: WriteEEPROM_1Byte((AddressFirst + 2), ML);
  9827  00296C  0E02               	movlw	2
  9828  00296E  0100               	movlb	0	; () banked
  9829  002970  259A               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
  9830  002972  0100               	movlb	0	; () banked
  9831  002974  6F72               	movwf	WriteEEPROM_1Byte@address& (0+255),b
  9832  002976  0100               	movlb	0	; () banked
  9833  002978  6B73               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
  9834  00297A  0E00               	movlw	0
  9835  00297C  2373               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
  9836  00297E  C0A5  F074         	movff	SetMemoryLong@ML,WriteEEPROM_1Byte@data
  9837  002982  EC25  F01B         	call	_WriteEEPROM_1Byte	;wreg free
  9838                           
  9839                           ;EEPROM.c: 227: WriteEEPROM_1Byte((AddressFirst + 3), L);
  9840  002986  0E03               	movlw	3
  9841  002988  0100               	movlb	0	; () banked
  9842  00298A  259A               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
  9843  00298C  0100               	movlb	0	; () banked
  9844  00298E  6F72               	movwf	WriteEEPROM_1Byte@address& (0+255),b
  9845  002990  0100               	movlb	0	; () banked
  9846  002992  6B73               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
  9847  002994  0E00               	movlw	0
  9848  002996  2373               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
  9849  002998  C0A6  F074         	movff	SetMemoryLong@L,WriteEEPROM_1Byte@data
  9850  00299C  EC25  F01B         	call	_WriteEEPROM_1Byte	;wreg free
  9851                           
  9852                           ;EEPROM.c: 230: Test = GetMemoryLong(AddressFirst);
  9853  0029A0  0100               	movlb	0	; () banked
  9854  0029A2  519A               	movf	SetMemoryLong@AddressFirst& (0+255),w,b
  9855  0029A4  ECA0  F010         	call	_GetMemoryLong
  9856  0029A8  C075  F09F         	movff	?_GetMemoryLong,SetMemoryLong@Test
  9857  0029AC  C076  F0A0         	movff	?_GetMemoryLong+1,SetMemoryLong@Test+1
  9858  0029B0  C077  F0A1         	movff	?_GetMemoryLong+2,SetMemoryLong@Test+2
  9859  0029B4  C078  F0A2         	movff	?_GetMemoryLong+3,SetMemoryLong@Test+3
  9860                           
  9861                           ;EEPROM.c: 232: if(Test == Data)
  9862  0029B8  0100               	movlb	0	; () banked
  9863  0029BA  5196               	movf	SetMemoryLong@Data& (0+255),w,b
  9864  0029BC  0100               	movlb	0	; () banked
  9865  0029BE  199F               	xorwf	SetMemoryLong@Test& (0+255),w,b
  9866  0029C0  E112               	bnz	l3416
  9867  0029C2  0100               	movlb	0	; () banked
  9868  0029C4  5197               	movf	(SetMemoryLong@Data+1)& (0+255),w,b
  9869  0029C6  0100               	movlb	0	; () banked
  9870  0029C8  19A0               	xorwf	(SetMemoryLong@Test+1)& (0+255),w,b
  9871  0029CA  E10D               	bnz	l3416
  9872  0029CC  0100               	movlb	0	; () banked
  9873  0029CE  5198               	movf	(SetMemoryLong@Data+2)& (0+255),w,b
  9874  0029D0  0100               	movlb	0	; () banked
  9875  0029D2  19A1               	xorwf	(SetMemoryLong@Test+2)& (0+255),w,b
  9876  0029D4  E108               	bnz	l3416
  9877  0029D6  0100               	movlb	0	; () banked
  9878  0029D8  5199               	movf	(SetMemoryLong@Data+3)& (0+255),w,b
  9879  0029DA  0100               	movlb	0	; () banked
  9880  0029DC  19A2               	xorwf	(SetMemoryLong@Test+3)& (0+255),w,b
  9881  0029DE  A4D8               	btfss	status,2,c
  9882  0029E0  D002               	goto	l3416
  9883                           
  9884                           ; BSR set to: 0
  9885                           ;EEPROM.c: 233: {
  9886                           ;EEPROM.c: 234: return 1;
  9887  0029E2  0E01               	movlw	1
  9888                           
  9889                           ; BSR set to: 0
  9890  0029E4  0012               	return	
  9891  0029E6                     l3416:
  9892                           
  9893                           ; BSR set to: 0
  9894                           ;EEPROM.c: 235: }
  9895                           ;EEPROM.c: 236: return 0;
  9896  0029E6  0E00               	movlw	0
  9897  0029E8  0012               	return	
  9898                           
  9899                           ; BSR set to: 0
  9900                           
  9901                           ; BSR set to: 0
  9902  0029EA  0012               	return		;funcret
  9903  0029EC                     __end_of_SetMemoryLong:
  9904                           	opt stack 0
  9905                           tblptru	equ	0xFF8
  9906                           tblptrh	equ	0xFF7
  9907                           tblptrl	equ	0xFF6
  9908                           tablat	equ	0xFF5
  9909                           prodh	equ	0xFF4
  9910                           prodl	equ	0xFF3
  9911                           intcon	equ	0xFF2
  9912                           intcon2	equ	0xFF1
  9913                           indf0	equ	0xFEF
  9914                           postinc0	equ	0xFEE
  9915                           plusw0	equ	0xFEB
  9916                           fsr0h	equ	0xFEA
  9917                           fsr0l	equ	0xFE9
  9918                           wreg	equ	0xFE8
  9919                           indf1	equ	0xFE7
  9920                           postdec1	equ	0xFE5
  9921                           fsr1h	equ	0xFE2
  9922                           fsr1l	equ	0xFE1
  9923                           indf2	equ	0xFDF
  9924                           postinc2	equ	0xFDE
  9925                           postdec2	equ	0xFDD
  9926                           plusw2	equ	0xFDB
  9927                           fsr2h	equ	0xFDA
  9928                           fsr2l	equ	0xFD9
  9929                           status	equ	0xFD8
  9930                           
  9931 ;; *************** function _GetMemoryLong *****************
  9932 ;; Defined at:
  9933 ;;		line 187 in file "EEPROM.c"
  9934 ;; Parameters:    Size  Location     Type
  9935 ;;  AddressFirst    1    wreg     unsigned char 
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;  AddressFirst    1   53[BANK0 ] unsigned char 
  9938 ;;  temp            4   45[BANK0 ] unsigned long 
  9939 ;;  L               1   52[BANK0 ] unsigned char 
  9940 ;;  ML              1   51[BANK0 ] unsigned char 
  9941 ;;  MH              1   50[BANK0 ] unsigned char 
  9942 ;;  H               1   49[BANK0 ] unsigned char 
  9943 ;; Return value:  Size  Location     Type
  9944 ;;                  4   21[BANK0 ] unsigned long 
  9945 ;; Registers used:
  9946 ;;		wreg, status,2, status,0, cstack
  9947 ;; Tracked objects:
  9948 ;;		On entry : 0/0
  9949 ;;		On exit  : 0/0
  9950 ;;		Unchanged: 0/0
  9951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9952 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9953 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9954 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9955 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9956 ;;Total ram usage:       33 bytes
  9957 ;; Hardware stack levels used:    1
  9958 ;; Hardware stack levels required when called:    5
  9959 ;; This function calls:
  9960 ;;		_ReadEEPROM_1Byte
  9961 ;; This function is called by:
  9962 ;;		_GetEEPROM
  9963 ;;		_SetMemoryLong
  9964 ;; This function uses a non-reentrant model
  9965 ;;
  9966                           
  9967                           	psect	text53
  9968  002140                     __ptext53:
  9969                           	opt stack 0
  9970  002140                     _GetMemoryLong:
  9971                           	opt stack 21
  9972                           
  9973                           ; BSR set to: 0
  9974                           ;incstack = 0
  9975                           ;GetMemoryLong@AddressFirst stored from wreg
  9976  002140  0100               	movlb	0	; () banked
  9977  002142  6F95               	movwf	GetMemoryLong@AddressFirst& (0+255),b
  9978                           
  9979                           ; BSR set to: 0
  9980                           ;EEPROM.c: 189: unsigned char H;
  9981                           ;EEPROM.c: 190: unsigned char MH;
  9982                           ;EEPROM.c: 191: unsigned char ML;
  9983                           ;EEPROM.c: 192: unsigned char L;
  9984                           ;EEPROM.c: 193: unsigned long temp =0;
  9985  002144  0E00               	movlw	0
  9986  002146  0100               	movlb	0	; () banked
  9987  002148  6F8D               	movwf	GetMemoryLong@temp& (0+255),b
  9988  00214A  0E00               	movlw	0
  9989  00214C  6F8E               	movwf	(GetMemoryLong@temp+1)& (0+255),b
  9990  00214E  0E00               	movlw	0
  9991  002150  6F8F               	movwf	(GetMemoryLong@temp+2)& (0+255),b
  9992  002152  0E00               	movlw	0
  9993  002154  6F90               	movwf	(GetMemoryLong@temp+3)& (0+255),b
  9994                           
  9995                           ; BSR set to: 0
  9996                           ;EEPROM.c: 195: H = ReadEEPROM_1Byte(AddressFirst);
  9997  002156  C095  F072         	movff	GetMemoryLong@AddressFirst,ReadEEPROM_1Byte@address
  9998  00215A  0100               	movlb	0	; () banked
  9999  00215C  6B73               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 10000  00215E  EC45  F01B         	call	_ReadEEPROM_1Byte	;wreg free
 10001  002162  0100               	movlb	0	; () banked
 10002  002164  5172               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 10003  002166  0100               	movlb	0	; () banked
 10004  002168  6F91               	movwf	GetMemoryLong@H& (0+255),b
 10005                           
 10006                           ; BSR set to: 0
 10007                           ;EEPROM.c: 196: MH = ReadEEPROM_1Byte(AddressFirst + 1);
 10008  00216A  0E01               	movlw	1
 10009  00216C  0100               	movlb	0	; () banked
 10010  00216E  2595               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 10011  002170  0100               	movlb	0	; () banked
 10012  002172  6F72               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 10013  002174  0100               	movlb	0	; () banked
 10014  002176  6B73               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 10015  002178  0E00               	movlw	0
 10016  00217A  2373               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 10017  00217C  EC45  F01B         	call	_ReadEEPROM_1Byte	;wreg free
 10018  002180  0100               	movlb	0	; () banked
 10019  002182  5172               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 10020  002184  0100               	movlb	0	; () banked
 10021  002186  6F92               	movwf	GetMemoryLong@MH& (0+255),b
 10022                           
 10023                           ; BSR set to: 0
 10024                           ;EEPROM.c: 197: ML = ReadEEPROM_1Byte(AddressFirst + 2);
 10025  002188  0E02               	movlw	2
 10026  00218A  0100               	movlb	0	; () banked
 10027  00218C  2595               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 10028  00218E  0100               	movlb	0	; () banked
 10029  002190  6F72               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 10030  002192  0100               	movlb	0	; () banked
 10031  002194  6B73               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 10032  002196  0E00               	movlw	0
 10033  002198  2373               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 10034  00219A  EC45  F01B         	call	_ReadEEPROM_1Byte	;wreg free
 10035  00219E  0100               	movlb	0	; () banked
 10036  0021A0  5172               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 10037  0021A2  0100               	movlb	0	; () banked
 10038  0021A4  6F93               	movwf	GetMemoryLong@ML& (0+255),b
 10039                           
 10040                           ; BSR set to: 0
 10041                           ;EEPROM.c: 198: L = ReadEEPROM_1Byte(AddressFirst + 3);
 10042  0021A6  0E03               	movlw	3
 10043  0021A8  0100               	movlb	0	; () banked
 10044  0021AA  2595               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 10045  0021AC  0100               	movlb	0	; () banked
 10046  0021AE  6F72               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 10047  0021B0  0100               	movlb	0	; () banked
 10048  0021B2  6B73               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 10049  0021B4  0E00               	movlw	0
 10050  0021B6  2373               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 10051  0021B8  EC45  F01B         	call	_ReadEEPROM_1Byte	;wreg free
 10052  0021BC  0100               	movlb	0	; () banked
 10053  0021BE  5172               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 10054  0021C0  0100               	movlb	0	; () banked
 10055  0021C2  6F94               	movwf	GetMemoryLong@L& (0+255),b
 10056                           
 10057                           ; BSR set to: 0
 10058                           ;EEPROM.c: 200: temp = (((unsigned long) H << 24) + ((unsigned long)MH << 16)
 10059                           ;EEPROM.c: 201: + ((unsigned long)ML << 8) + (unsigned long)L);
 10060  0021C4  C093  F079         	movff	GetMemoryLong@ML,??_GetMemoryLong
 10061  0021C8  0100               	movlb	0	; () banked
 10062  0021CA  6B7A               	clrf	(??_GetMemoryLong+1)& (0+255),b
 10063  0021CC  6B7B               	clrf	(??_GetMemoryLong+2)& (0+255),b
 10064  0021CE  6B7C               	clrf	(??_GetMemoryLong+3)& (0+255),b
 10065  0021D0  C07B  F07C         	movff	??_GetMemoryLong+2,??_GetMemoryLong+3
 10066  0021D4  C07A  F07B         	movff	??_GetMemoryLong+1,??_GetMemoryLong+2
 10067  0021D8  C079  F07A         	movff	??_GetMemoryLong,??_GetMemoryLong+1
 10068  0021DC  0100               	movlb	0	; () banked
 10069  0021DE  6B79               	clrf	??_GetMemoryLong& (0+255),b
 10070  0021E0  C092  F07D         	movff	GetMemoryLong@MH,??_GetMemoryLong+4
 10071  0021E4  0100               	movlb	0	; () banked
 10072  0021E6  6B7E               	clrf	(??_GetMemoryLong+5)& (0+255),b
 10073  0021E8  6B7F               	clrf	(??_GetMemoryLong+6)& (0+255),b
 10074  0021EA  6B80               	clrf	(??_GetMemoryLong+7)& (0+255),b
 10075  0021EC  C07E  F080         	movff	??_GetMemoryLong+5,??_GetMemoryLong+7
 10076  0021F0  C07D  F07F         	movff	??_GetMemoryLong+4,??_GetMemoryLong+6
 10077  0021F4  0100               	movlb	0	; () banked
 10078  0021F6  6B7E               	clrf	(??_GetMemoryLong+5)& (0+255),b
 10079  0021F8  6B7D               	clrf	(??_GetMemoryLong+4)& (0+255),b
 10080  0021FA  C091  F081         	movff	GetMemoryLong@H,??_GetMemoryLong+8
 10081  0021FE  0100               	movlb	0	; () banked
 10082  002200  6B82               	clrf	(??_GetMemoryLong+9)& (0+255),b
 10083  002202  6B83               	clrf	(??_GetMemoryLong+10)& (0+255),b
 10084  002204  6B84               	clrf	(??_GetMemoryLong+11)& (0+255),b
 10085  002206  C081  F084         	movff	??_GetMemoryLong+8,??_GetMemoryLong+11
 10086  00220A  0100               	movlb	0	; () banked
 10087  00220C  6B83               	clrf	(??_GetMemoryLong+10)& (0+255),b
 10088  00220E  6B82               	clrf	(??_GetMemoryLong+9)& (0+255),b
 10089  002210  6B81               	clrf	(??_GetMemoryLong+8)& (0+255),b
 10090  002212  0100               	movlb	0	; () banked
 10091  002214  517D               	movf	(??_GetMemoryLong+4)& (0+255),w,b
 10092  002216  0100               	movlb	0	; () banked
 10093  002218  2581               	addwf	(??_GetMemoryLong+8)& (0+255),w,b
 10094  00221A  0100               	movlb	0	; () banked
 10095  00221C  6F85               	movwf	(??_GetMemoryLong+12)& (0+255),b
 10096  00221E  0100               	movlb	0	; () banked
 10097  002220  517E               	movf	(??_GetMemoryLong+5)& (0+255),w,b
 10098  002222  0100               	movlb	0	; () banked
 10099  002224  2182               	addwfc	(??_GetMemoryLong+9)& (0+255),w,b
 10100  002226  0100               	movlb	0	; () banked
 10101  002228  6F86               	movwf	(??_GetMemoryLong+13)& (0+255),b
 10102  00222A  0100               	movlb	0	; () banked
 10103  00222C  517F               	movf	(??_GetMemoryLong+6)& (0+255),w,b
 10104  00222E  0100               	movlb	0	; () banked
 10105  002230  2183               	addwfc	(??_GetMemoryLong+10)& (0+255),w,b
 10106  002232  0100               	movlb	0	; () banked
 10107  002234  6F87               	movwf	(??_GetMemoryLong+14)& (0+255),b
 10108  002236  0100               	movlb	0	; () banked
 10109  002238  5180               	movf	(??_GetMemoryLong+7)& (0+255),w,b
 10110  00223A  0100               	movlb	0	; () banked
 10111  00223C  2184               	addwfc	(??_GetMemoryLong+11)& (0+255),w,b
 10112  00223E  0100               	movlb	0	; () banked
 10113  002240  6F88               	movwf	(??_GetMemoryLong+15)& (0+255),b
 10114  002242  0100               	movlb	0	; () banked
 10115  002244  5179               	movf	??_GetMemoryLong& (0+255),w,b
 10116  002246  0100               	movlb	0	; () banked
 10117  002248  2585               	addwf	(??_GetMemoryLong+12)& (0+255),w,b
 10118  00224A  0100               	movlb	0	; () banked
 10119  00224C  6F89               	movwf	(??_GetMemoryLong+16)& (0+255),b
 10120  00224E  0100               	movlb	0	; () banked
 10121  002250  517A               	movf	(??_GetMemoryLong+1)& (0+255),w,b
 10122  002252  0100               	movlb	0	; () banked
 10123  002254  2186               	addwfc	(??_GetMemoryLong+13)& (0+255),w,b
 10124  002256  0100               	movlb	0	; () banked
 10125  002258  6F8A               	movwf	(??_GetMemoryLong+17)& (0+255),b
 10126  00225A  0100               	movlb	0	; () banked
 10127  00225C  517B               	movf	(??_GetMemoryLong+2)& (0+255),w,b
 10128  00225E  0100               	movlb	0	; () banked
 10129  002260  2187               	addwfc	(??_GetMemoryLong+14)& (0+255),w,b
 10130  002262  0100               	movlb	0	; () banked
 10131  002264  6F8B               	movwf	(??_GetMemoryLong+18)& (0+255),b
 10132  002266  0100               	movlb	0	; () banked
 10133  002268  517C               	movf	(??_GetMemoryLong+3)& (0+255),w,b
 10134  00226A  0100               	movlb	0	; () banked
 10135  00226C  2188               	addwfc	(??_GetMemoryLong+15)& (0+255),w,b
 10136  00226E  0100               	movlb	0	; () banked
 10137  002270  6F8C               	movwf	(??_GetMemoryLong+19)& (0+255),b
 10138  002272  0100               	movlb	0	; () banked
 10139  002274  5194               	movf	GetMemoryLong@L& (0+255),w,b
 10140  002276  0100               	movlb	0	; () banked
 10141  002278  2589               	addwf	(??_GetMemoryLong+16)& (0+255),w,b
 10142  00227A  0100               	movlb	0	; () banked
 10143  00227C  6F8D               	movwf	GetMemoryLong@temp& (0+255),b
 10144  00227E  0E00               	movlw	0
 10145  002280  0100               	movlb	0	; () banked
 10146  002282  218A               	addwfc	(??_GetMemoryLong+17)& (0+255),w,b
 10147  002284  0100               	movlb	0	; () banked
 10148  002286  6F8E               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 10149  002288  0E00               	movlw	0
 10150  00228A  0100               	movlb	0	; () banked
 10151  00228C  218B               	addwfc	(??_GetMemoryLong+18)& (0+255),w,b
 10152  00228E  0100               	movlb	0	; () banked
 10153  002290  6F8F               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 10154  002292  0E00               	movlw	0
 10155  002294  0100               	movlb	0	; () banked
 10156  002296  218C               	addwfc	(??_GetMemoryLong+19)& (0+255),w,b
 10157  002298  0100               	movlb	0	; () banked
 10158  00229A  6F90               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 10159                           
 10160                           ; BSR set to: 0
 10161                           ;EEPROM.c: 202: return temp;
 10162  00229C  C08D  F075         	movff	GetMemoryLong@temp,?_GetMemoryLong
 10163  0022A0  C08E  F076         	movff	GetMemoryLong@temp+1,?_GetMemoryLong+1
 10164  0022A4  C08F  F077         	movff	GetMemoryLong@temp+2,?_GetMemoryLong+2
 10165  0022A8  C090  F078         	movff	GetMemoryLong@temp+3,?_GetMemoryLong+3
 10166  0022AC  0012               	return	
 10167                           
 10168                           ; BSR set to: 0
 10169                           
 10170                           ; BSR set to: 0
 10171  0022AE  0012               	return		;funcret
 10172  0022B0                     __end_of_GetMemoryLong:
 10173                           	opt stack 0
 10174                           tblptru	equ	0xFF8
 10175                           tblptrh	equ	0xFF7
 10176                           tblptrl	equ	0xFF6
 10177                           tablat	equ	0xFF5
 10178                           prodh	equ	0xFF4
 10179                           prodl	equ	0xFF3
 10180                           intcon	equ	0xFF2
 10181                           intcon2	equ	0xFF1
 10182                           indf0	equ	0xFEF
 10183                           postinc0	equ	0xFEE
 10184                           plusw0	equ	0xFEB
 10185                           fsr0h	equ	0xFEA
 10186                           fsr0l	equ	0xFE9
 10187                           wreg	equ	0xFE8
 10188                           indf1	equ	0xFE7
 10189                           postdec1	equ	0xFE5
 10190                           fsr1h	equ	0xFE2
 10191                           fsr1l	equ	0xFE1
 10192                           indf2	equ	0xFDF
 10193                           postinc2	equ	0xFDE
 10194                           postdec2	equ	0xFDD
 10195                           plusw2	equ	0xFDB
 10196                           fsr2h	equ	0xFDA
 10197                           fsr2l	equ	0xFD9
 10198                           status	equ	0xFD8
 10199                           
 10200 ;; *************** function _SetMemoryChar *****************
 10201 ;; Defined at:
 10202 ;;		line 304 in file "EEPROM.c"
 10203 ;; Parameters:    Size  Location     Type
 10204 ;;  Data            1    wreg     unsigned char 
 10205 ;;  AddressFirst    1   27[BANK0 ] unsigned char 
 10206 ;; Auto vars:     Size  Location     Type
 10207 ;;  Data            1   29[BANK0 ] unsigned char 
 10208 ;;  Test            1   28[BANK0 ] unsigned char 
 10209 ;; Return value:  Size  Location     Type
 10210 ;;                  1    wreg      unsigned char 
 10211 ;; Registers used:
 10212 ;;		wreg, status,2, status,0, cstack
 10213 ;; Tracked objects:
 10214 ;;		On entry : 0/0
 10215 ;;		On exit  : 0/0
 10216 ;;		Unchanged: 0/0
 10217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10218 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10219 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10221 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10222 ;;Total ram usage:        3 bytes
 10223 ;; Hardware stack levels used:    1
 10224 ;; Hardware stack levels required when called:    6
 10225 ;; This function calls:
 10226 ;;		_GetMemoryChar
 10227 ;;		_WriteEEPROM_1Byte
 10228 ;; This function is called by:
 10229 ;;		_SetEEPROM
 10230 ;; This function uses a non-reentrant model
 10231 ;;
 10232                           
 10233                           	psect	text54
 10234  003700                     __ptext54:
 10235                           	opt stack 0
 10236  003700                     _SetMemoryChar:
 10237                           	opt stack 21
 10238                           
 10239                           ; BSR set to: 0
 10240                           ;incstack = 0
 10241                           ;SetMemoryChar@Data stored from wreg
 10242  003700  0100               	movlb	0	; () banked
 10243  003702  6F7D               	movwf	SetMemoryChar@Data& (0+255),b
 10244                           
 10245                           ; BSR set to: 0
 10246                           ;EEPROM.c: 306: unsigned char Test;
 10247                           ;EEPROM.c: 308: WriteEEPROM_1Byte(AddressFirst, Data);
 10248  003704  C07B  F072         	movff	SetMemoryChar@AddressFirst,WriteEEPROM_1Byte@address
 10249  003708  0100               	movlb	0	; () banked
 10250  00370A  6B73               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 10251  00370C  C07D  F074         	movff	SetMemoryChar@Data,WriteEEPROM_1Byte@data
 10252  003710  EC25  F01B         	call	_WriteEEPROM_1Byte	;wreg free
 10253                           
 10254                           ;EEPROM.c: 311: Test = GetMemoryChar(AddressFirst);
 10255  003714  0100               	movlb	0	; () banked
 10256  003716  517B               	movf	SetMemoryChar@AddressFirst& (0+255),w,b
 10257  003718  EC01  F01C         	call	_GetMemoryChar
 10258  00371C  0100               	movlb	0	; () banked
 10259  00371E  5175               	movf	?_GetMemoryChar& (0+255),w,b
 10260  003720  0100               	movlb	0	; () banked
 10261  003722  6F7C               	movwf	SetMemoryChar@Test& (0+255),b
 10262                           
 10263                           ; BSR set to: 0
 10264                           ;EEPROM.c: 313: if(Test == Data)
 10265  003724  0100               	movlb	0	; () banked
 10266  003726  517D               	movf	SetMemoryChar@Data& (0+255),w,b
 10267  003728  0100               	movlb	0	; () banked
 10268  00372A  197C               	xorwf	SetMemoryChar@Test& (0+255),w,b
 10269  00372C  A4D8               	btfss	status,2,c
 10270  00372E  D002               	goto	l3388
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;EEPROM.c: 314: {
 10274                           ;EEPROM.c: 315: return 1;
 10275  003730  0E01               	movlw	1
 10276                           
 10277                           ; BSR set to: 0
 10278  003732  0012               	return	
 10279  003734                     l3388:
 10280                           
 10281                           ; BSR set to: 0
 10282                           ;EEPROM.c: 316: }
 10283                           ;EEPROM.c: 317: return 0;
 10284  003734  0E00               	movlw	0
 10285  003736  0012               	return	
 10286                           
 10287                           ; BSR set to: 0
 10288                           
 10289                           ; BSR set to: 0
 10290  003738  0012               	return		;funcret
 10291  00373A                     __end_of_SetMemoryChar:
 10292                           	opt stack 0
 10293                           tblptru	equ	0xFF8
 10294                           tblptrh	equ	0xFF7
 10295                           tblptrl	equ	0xFF6
 10296                           tablat	equ	0xFF5
 10297                           prodh	equ	0xFF4
 10298                           prodl	equ	0xFF3
 10299                           intcon	equ	0xFF2
 10300                           intcon2	equ	0xFF1
 10301                           indf0	equ	0xFEF
 10302                           postinc0	equ	0xFEE
 10303                           plusw0	equ	0xFEB
 10304                           fsr0h	equ	0xFEA
 10305                           fsr0l	equ	0xFE9
 10306                           wreg	equ	0xFE8
 10307                           indf1	equ	0xFE7
 10308                           postdec1	equ	0xFE5
 10309                           fsr1h	equ	0xFE2
 10310                           fsr1l	equ	0xFE1
 10311                           indf2	equ	0xFDF
 10312                           postinc2	equ	0xFDE
 10313                           postdec2	equ	0xFDD
 10314                           plusw2	equ	0xFDB
 10315                           fsr2h	equ	0xFDA
 10316                           fsr2l	equ	0xFD9
 10317                           status	equ	0xFD8
 10318                           
 10319 ;; *************** function _WriteEEPROM_1Byte *****************
 10320 ;; Defined at:
 10321 ;;		line 93 in file "EEPROM.c"
 10322 ;; Parameters:    Size  Location     Type
 10323 ;;  address         2   18[BANK0 ] unsigned int 
 10324 ;;  data            1   20[BANK0 ] unsigned char 
 10325 ;; Auto vars:     Size  Location     Type
 10326 ;;  GIEstatus       1   21[BANK0 ] unsigned char 
 10327 ;; Return value:  Size  Location     Type
 10328 ;;		None               void
 10329 ;; Registers used:
 10330 ;;		wreg, status,2, status,0, cstack
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10336 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10337 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10339 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10340 ;;Total ram usage:        4 bytes
 10341 ;; Hardware stack levels used:    1
 10342 ;; Hardware stack levels required when called:    5
 10343 ;; This function calls:
 10344 ;;		_EEPROM_UNLOCK
 10345 ;; This function is called by:
 10346 ;;		_SetMemoryLong
 10347 ;;		_SetMemoryChar
 10348 ;;		_SetMemoryInt
 10349 ;; This function uses a non-reentrant model
 10350 ;;
 10351                           
 10352                           	psect	text55
 10353  00364A                     __ptext55:
 10354                           	opt stack 0
 10355  00364A                     _WriteEEPROM_1Byte:
 10356                           	opt stack 21
 10357                           
 10358                           ;EEPROM.c: 95: unsigned char GIEstatus = INTCONbits.GIE;
 10359                           
 10360                           ; BSR set to: 0
 10361                           ;incstack = 0
 10362  00364A  0E00               	movlw	0
 10363  00364C  BEF2               	btfsc	intcon,7,c	;volatile
 10364  00364E  0E01               	movlw	1
 10365  003650  0100               	movlb	0	; () banked
 10366  003652  6F75               	movwf	WriteEEPROM_1Byte@GIEstatus& (0+255),b
 10367                           
 10368                           ; BSR set to: 0
 10369                           ;EEPROM.c: 96: EEADRH = (unsigned char)((address & 0x300) >> 8);
 10370  003654  0100               	movlb	0	; () banked
 10371  003656  5173               	movf	(WriteEEPROM_1Byte@address+1)& (0+255),w,b
 10372  003658  0B03               	andlw	3
 10373  00365A  6EAA               	movwf	4010,c	;volatile
 10374                           
 10375                           ; BSR set to: 0
 10376                           ;EEPROM.c: 97: EEADR = (unsigned char)(address & 0xFF);
 10377  00365C  C072  FFA9         	movff	WriteEEPROM_1Byte@address,4009	;volatile
 10378                           
 10379                           ; BSR set to: 0
 10380                           ;EEPROM.c: 98: EEDATA = data;
 10381  003660  C074  FFA8         	movff	WriteEEPROM_1Byte@data,4008	;volatile
 10382                           
 10383                           ; BSR set to: 0
 10384                           ;EEPROM.c: 99: EECON1bits.EEPGD = 0;
 10385  003664  9EA6               	bcf	4006,7,c	;volatile
 10386                           
 10387                           ; BSR set to: 0
 10388                           ;EEPROM.c: 100: EECON1bits.CFGS = 0;
 10389  003666  9CA6               	bcf	4006,6,c	;volatile
 10390                           
 10391                           ; BSR set to: 0
 10392                           ;EEPROM.c: 101: EECON1bits.WREN =1;
 10393  003668  84A6               	bsf	4006,2,c	;volatile
 10394                           
 10395                           ; BSR set to: 0
 10396                           ;EEPROM.c: 102: INTCONbits.GIE =0;
 10397  00366A  9EF2               	bcf	intcon,7,c	;volatile
 10398                           
 10399                           ; BSR set to: 0
 10400                           ;EEPROM.c: 103: EEPROM_UNLOCK();
 10401  00366C  EC65  F01C         	call	_EEPROM_UNLOCK	;wreg free
 10402                           
 10403                           ;EEPROM.c: 104: EECON1bits.WR =1;
 10404  003670  82A6               	bsf	4006,1,c	;volatile
 10405                           
 10406                           ;EEPROM.c: 105: while(EECON1bits.WR);
 10407  003672  D000               	goto	l417
 10408  003674                     l417:
 10409  003674  B2A6               	btfsc	4006,1,c	;volatile
 10410  003676  D7FE               	goto	l417
 10411                           
 10412                           ;EEPROM.c: 106: EECON1bits.WREN =0;
 10413  003678  94A6               	bcf	4006,2,c	;volatile
 10414                           
 10415                           ;EEPROM.c: 107: if(GIEstatus)
 10416  00367A  0100               	movlb	0	; () banked
 10417  00367C  5175               	movf	WriteEEPROM_1Byte@GIEstatus& (0+255),w,b
 10418  00367E  0100               	movlb	0	; () banked
 10419  003680  B4D8               	btfsc	status,2,c
 10420  003682  0012               	return	
 10421                           
 10422                           ; BSR set to: 0
 10423                           ;EEPROM.c: 108: {
 10424                           ;EEPROM.c: 109: INTCONbits.GIE =1;
 10425  003684  8EF2               	bsf	intcon,7,c	;volatile
 10426  003686  0012               	return	
 10427                           
 10428                           ; BSR set to: 0
 10429                           
 10430                           ; BSR set to: 0
 10431  003688  0012               	return		;funcret
 10432  00368A                     __end_of_WriteEEPROM_1Byte:
 10433                           	opt stack 0
 10434                           tblptru	equ	0xFF8
 10435                           tblptrh	equ	0xFF7
 10436                           tblptrl	equ	0xFF6
 10437                           tablat	equ	0xFF5
 10438                           prodh	equ	0xFF4
 10439                           prodl	equ	0xFF3
 10440                           intcon	equ	0xFF2
 10441                           intcon2	equ	0xFF1
 10442                           indf0	equ	0xFEF
 10443                           postinc0	equ	0xFEE
 10444                           plusw0	equ	0xFEB
 10445                           fsr0h	equ	0xFEA
 10446                           fsr0l	equ	0xFE9
 10447                           wreg	equ	0xFE8
 10448                           indf1	equ	0xFE7
 10449                           postdec1	equ	0xFE5
 10450                           fsr1h	equ	0xFE2
 10451                           fsr1l	equ	0xFE1
 10452                           indf2	equ	0xFDF
 10453                           postinc2	equ	0xFDE
 10454                           postdec2	equ	0xFDD
 10455                           plusw2	equ	0xFDB
 10456                           fsr2h	equ	0xFDA
 10457                           fsr2l	equ	0xFD9
 10458                           status	equ	0xFD8
 10459                           
 10460 ;; *************** function _EEPROM_UNLOCK *****************
 10461 ;; Defined at:
 10462 ;;		line 78 in file "EEPROM.c"
 10463 ;; Parameters:    Size  Location     Type
 10464 ;;		None
 10465 ;; Auto vars:     Size  Location     Type
 10466 ;;		None
 10467 ;; Return value:  Size  Location     Type
 10468 ;;		None               void
 10469 ;; Registers used:
 10470 ;;		wreg, status,2
 10471 ;; Tracked objects:
 10472 ;;		On entry : 0/0
 10473 ;;		On exit  : 0/0
 10474 ;;		Unchanged: 0/0
 10475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10480 ;;Total ram usage:        0 bytes
 10481 ;; Hardware stack levels used:    1
 10482 ;; Hardware stack levels required when called:    4
 10483 ;; This function calls:
 10484 ;;		Nothing
 10485 ;; This function is called by:
 10486 ;;		_WriteEEPROM_1Byte
 10487 ;; This function uses a non-reentrant model
 10488 ;;
 10489                           
 10490                           	psect	text56
 10491  0038CA                     __ptext56:
 10492                           	opt stack 0
 10493  0038CA                     _EEPROM_UNLOCK:
 10494                           	opt stack 21
 10495                           
 10496                           ;EEPROM.c: 80: EECON2 = 0x55;
 10497                           
 10498                           ; BSR set to: 0
 10499                           ;incstack = 0
 10500  0038CA  0E55               	movlw	85
 10501  0038CC  6EA7               	movwf	4007,c	;volatile
 10502                           
 10503                           ;EEPROM.c: 81: EECON2 = 0xAA;
 10504  0038CE  0EAA               	movlw	170
 10505  0038D0  6EA7               	movwf	4007,c	;volatile
 10506                           
 10507                           ;EEPROM.c: 82: EECON1bits.WR =1;
 10508  0038D2  82A6               	bsf	4006,1,c	;volatile
 10509                           
 10510                           ;EEPROM.c: 83: while(EECON1bits.WR);
 10511  0038D4  D000               	goto	l411
 10512  0038D6                     l411:
 10513  0038D6  B2A6               	btfsc	4006,1,c	;volatile
 10514  0038D8  D7FE               	goto	l411
 10515                           
 10516                           ;EEPROM.c: 84: __nop();
 10517  0038DA  F000               	nop	
 10518                           
 10519                           ;EEPROM.c: 85: __nop();
 10520  0038DC  F000               	nop	
 10521  0038DE  0012               	return		;funcret
 10522  0038E0                     __end_of_EEPROM_UNLOCK:
 10523                           	opt stack 0
 10524                           tblptru	equ	0xFF8
 10525                           tblptrh	equ	0xFF7
 10526                           tblptrl	equ	0xFF6
 10527                           tablat	equ	0xFF5
 10528                           prodh	equ	0xFF4
 10529                           prodl	equ	0xFF3
 10530                           intcon	equ	0xFF2
 10531                           intcon2	equ	0xFF1
 10532                           indf0	equ	0xFEF
 10533                           postinc0	equ	0xFEE
 10534                           plusw0	equ	0xFEB
 10535                           fsr0h	equ	0xFEA
 10536                           fsr0l	equ	0xFE9
 10537                           wreg	equ	0xFE8
 10538                           indf1	equ	0xFE7
 10539                           postdec1	equ	0xFE5
 10540                           fsr1h	equ	0xFE2
 10541                           fsr1l	equ	0xFE1
 10542                           indf2	equ	0xFDF
 10543                           postinc2	equ	0xFDE
 10544                           postdec2	equ	0xFDD
 10545                           plusw2	equ	0xFDB
 10546                           fsr2h	equ	0xFDA
 10547                           fsr2l	equ	0xFD9
 10548                           status	equ	0xFD8
 10549                           
 10550 ;; *************** function _GetMemoryChar *****************
 10551 ;; Defined at:
 10552 ;;		line 290 in file "EEPROM.c"
 10553 ;; Parameters:    Size  Location     Type
 10554 ;;  AddressFirst    1    wreg     unsigned char 
 10555 ;; Auto vars:     Size  Location     Type
 10556 ;;  AddressFirst    1   25[BANK0 ] unsigned char 
 10557 ;;  H               1   26[BANK0 ] unsigned char 
 10558 ;; Return value:  Size  Location     Type
 10559 ;;                  4   21[BANK0 ] unsigned long 
 10560 ;; Registers used:
 10561 ;;		wreg, status,2, status,0, cstack
 10562 ;; Tracked objects:
 10563 ;;		On entry : 0/0
 10564 ;;		On exit  : 0/0
 10565 ;;		Unchanged: 0/0
 10566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10567 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10568 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10570 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10571 ;;Total ram usage:        6 bytes
 10572 ;; Hardware stack levels used:    1
 10573 ;; Hardware stack levels required when called:    5
 10574 ;; This function calls:
 10575 ;;		_ReadEEPROM_1Byte
 10576 ;; This function is called by:
 10577 ;;		_GetEEPROM
 10578 ;;		_SetMemoryChar
 10579 ;; This function uses a non-reentrant model
 10580 ;;
 10581                           
 10582                           	psect	text57
 10583  003802                     __ptext57:
 10584                           	opt stack 0
 10585  003802                     _GetMemoryChar:
 10586                           	opt stack 21
 10587                           
 10588                           ;incstack = 0
 10589                           ;GetMemoryChar@AddressFirst stored from wreg
 10590  003802  0100               	movlb	0	; () banked
 10591  003804  6F79               	movwf	GetMemoryChar@AddressFirst& (0+255),b
 10592                           
 10593                           ; BSR set to: 0
 10594                           ;EEPROM.c: 292: unsigned char H;
 10595                           ;EEPROM.c: 294: H = ReadEEPROM_1Byte(AddressFirst);
 10596  003806  C079  F072         	movff	GetMemoryChar@AddressFirst,ReadEEPROM_1Byte@address
 10597  00380A  0100               	movlb	0	; () banked
 10598  00380C  6B73               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 10599  00380E  EC45  F01B         	call	_ReadEEPROM_1Byte	;wreg free
 10600  003812  0100               	movlb	0	; () banked
 10601  003814  5172               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 10602  003816  0100               	movlb	0	; () banked
 10603  003818  6F7A               	movwf	GetMemoryChar@H& (0+255),b
 10604                           
 10605                           ; BSR set to: 0
 10606                           ;EEPROM.c: 296: return H;
 10607  00381A  0100               	movlb	0	; () banked
 10608  00381C  517A               	movf	GetMemoryChar@H& (0+255),w,b
 10609  00381E  0100               	movlb	0	; () banked
 10610  003820  6F75               	movwf	?_GetMemoryChar& (0+255),b
 10611  003822  6B76               	clrf	(?_GetMemoryChar+1)& (0+255),b
 10612  003824  6B77               	clrf	(?_GetMemoryChar+2)& (0+255),b
 10613  003826  6B78               	clrf	(?_GetMemoryChar+3)& (0+255),b
 10614  003828  0012               	return	
 10615                           
 10616                           ; BSR set to: 0
 10617                           
 10618                           ; BSR set to: 0
 10619  00382A  0012               	return		;funcret
 10620  00382C                     __end_of_GetMemoryChar:
 10621                           	opt stack 0
 10622                           tblptru	equ	0xFF8
 10623                           tblptrh	equ	0xFF7
 10624                           tblptrl	equ	0xFF6
 10625                           tablat	equ	0xFF5
 10626                           prodh	equ	0xFF4
 10627                           prodl	equ	0xFF3
 10628                           intcon	equ	0xFF2
 10629                           intcon2	equ	0xFF1
 10630                           indf0	equ	0xFEF
 10631                           postinc0	equ	0xFEE
 10632                           plusw0	equ	0xFEB
 10633                           fsr0h	equ	0xFEA
 10634                           fsr0l	equ	0xFE9
 10635                           wreg	equ	0xFE8
 10636                           indf1	equ	0xFE7
 10637                           postdec1	equ	0xFE5
 10638                           fsr1h	equ	0xFE2
 10639                           fsr1l	equ	0xFE1
 10640                           indf2	equ	0xFDF
 10641                           postinc2	equ	0xFDE
 10642                           postdec2	equ	0xFDD
 10643                           plusw2	equ	0xFDB
 10644                           fsr2h	equ	0xFDA
 10645                           fsr2l	equ	0xFD9
 10646                           status	equ	0xFD8
 10647                           
 10648 ;; *************** function _ReadEEPROM_1Byte *****************
 10649 ;; Defined at:
 10650 ;;		line 53 in file "EEPROM.c"
 10651 ;; Parameters:    Size  Location     Type
 10652 ;;  address         2   18[BANK0 ] unsigned int 
 10653 ;; Auto vars:     Size  Location     Type
 10654 ;;  GIEstatus       1   20[BANK0 ] unsigned char 
 10655 ;; Return value:  Size  Location     Type
 10656 ;;                  2   18[BANK0 ] unsigned int 
 10657 ;; Registers used:
 10658 ;;		wreg, status,2, status,0
 10659 ;; Tracked objects:
 10660 ;;		On entry : 0/0
 10661 ;;		On exit  : 0/0
 10662 ;;		Unchanged: 0/0
 10663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10664 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10665 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10667 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10668 ;;Total ram usage:        3 bytes
 10669 ;; Hardware stack levels used:    1
 10670 ;; Hardware stack levels required when called:    4
 10671 ;; This function calls:
 10672 ;;		Nothing
 10673 ;; This function is called by:
 10674 ;;		_GetMemoryLong
 10675 ;;		_GetMemoryChar
 10676 ;;		_GetMemoryInt
 10677 ;; This function uses a non-reentrant model
 10678 ;;
 10679                           
 10680                           	psect	text58
 10681  00368A                     __ptext58:
 10682                           	opt stack 0
 10683  00368A                     _ReadEEPROM_1Byte:
 10684                           	opt stack 21
 10685                           
 10686                           ;EEPROM.c: 55: unsigned char GIEstatus = INTCONbits.GIE;
 10687                           
 10688                           ; BSR set to: 0
 10689                           ;incstack = 0
 10690  00368A  0E00               	movlw	0
 10691  00368C  BEF2               	btfsc	intcon,7,c	;volatile
 10692  00368E  0E01               	movlw	1
 10693  003690  0100               	movlb	0	; () banked
 10694  003692  6F74               	movwf	ReadEEPROM_1Byte@GIEstatus& (0+255),b
 10695                           
 10696                           ; BSR set to: 0
 10697                           ;EEPROM.c: 56: EECON1bits.EEPGD = 0;
 10698  003694  9EA6               	bcf	4006,7,c	;volatile
 10699                           
 10700                           ; BSR set to: 0
 10701                           ;EEPROM.c: 57: EECON1bits.CFGS = 0;
 10702  003696  9CA6               	bcf	4006,6,c	;volatile
 10703                           
 10704                           ; BSR set to: 0
 10705                           ;EEPROM.c: 58: EEADRH = (unsigned char)((address & 0x300) >> 8);
 10706  003698  0100               	movlb	0	; () banked
 10707  00369A  5173               	movf	(ReadEEPROM_1Byte@address+1)& (0+255),w,b
 10708  00369C  0B03               	andlw	3
 10709  00369E  6EAA               	movwf	4010,c	;volatile
 10710                           
 10711                           ; BSR set to: 0
 10712                           ;EEPROM.c: 59: EEADR = (unsigned char)(address & 0xFF);
 10713  0036A0  C072  FFA9         	movff	ReadEEPROM_1Byte@address,4009	;volatile
 10714                           
 10715                           ; BSR set to: 0
 10716                           ;EEPROM.c: 60: INTCONbits.GIE =0;
 10717  0036A4  9EF2               	bcf	intcon,7,c	;volatile
 10718                           
 10719                           ; BSR set to: 0
 10720                           ;EEPROM.c: 61: EECON1bits.RD = 1;
 10721  0036A6  80A6               	bsf	4006,0,c	;volatile
 10722                           
 10723                           ;EEPROM.c: 62: while(EECON1bits.RD);
 10724  0036A8  D000               	goto	l404
 10725  0036AA                     l404:
 10726  0036AA  B0A6               	btfsc	4006,0,c	;volatile
 10727  0036AC  D7FE               	goto	l404
 10728                           
 10729                           ;EEPROM.c: 63: __nop();
 10730  0036AE  F000               	nop	
 10731                           
 10732                           ;EEPROM.c: 64: __nop();
 10733  0036B0  F000               	nop	
 10734                           
 10735                           ;EEPROM.c: 65: if(GIEstatus)
 10736  0036B2  0100               	movlb	0	; () banked
 10737  0036B4  5174               	movf	ReadEEPROM_1Byte@GIEstatus& (0+255),w,b
 10738  0036B6  0100               	movlb	0	; () banked
 10739  0036B8  A4D8               	btfss	status,2,c
 10740                           
 10741                           ; BSR set to: 0
 10742                           ;EEPROM.c: 66: {
 10743                           ;EEPROM.c: 67: INTCONbits.GIE =1;
 10744  0036BA  8EF2               	bsf	intcon,7,c	;volatile
 10745                           
 10746                           ; BSR set to: 0
 10747                           ;EEPROM.c: 68: }
 10748                           ;EEPROM.c: 69: return (EEDATA);
 10749  0036BC  CFA8 F072          	movff	4008,?_ReadEEPROM_1Byte	;volatile
 10750  0036C0  0100               	movlb	0	; () banked
 10751  0036C2  6B73               	clrf	(?_ReadEEPROM_1Byte+1)& (0+255),b
 10752                           
 10753                           ; BSR set to: 0
 10754  0036C4  0012               	return		;funcret
 10755  0036C6                     __end_of_ReadEEPROM_1Byte:
 10756                           	opt stack 0
 10757                           tblptru	equ	0xFF8
 10758                           tblptrh	equ	0xFF7
 10759                           tblptrl	equ	0xFF6
 10760                           tablat	equ	0xFF5
 10761                           prodh	equ	0xFF4
 10762                           prodl	equ	0xFF3
 10763                           intcon	equ	0xFF2
 10764                           intcon2	equ	0xFF1
 10765                           indf0	equ	0xFEF
 10766                           postinc0	equ	0xFEE
 10767                           plusw0	equ	0xFEB
 10768                           fsr0h	equ	0xFEA
 10769                           fsr0l	equ	0xFE9
 10770                           wreg	equ	0xFE8
 10771                           indf1	equ	0xFE7
 10772                           postdec1	equ	0xFE5
 10773                           fsr1h	equ	0xFE2
 10774                           fsr1l	equ	0xFE1
 10775                           indf2	equ	0xFDF
 10776                           postinc2	equ	0xFDE
 10777                           postdec2	equ	0xFDD
 10778                           plusw2	equ	0xFDB
 10779                           fsr2h	equ	0xFDA
 10780                           fsr2l	equ	0xFD9
 10781                           status	equ	0xFD8
 10782                           
 10783 ;; *************** function _InitADC *****************
 10784 ;; Defined at:
 10785 ;;		line 133 in file "ADC.c"
 10786 ;; Parameters:    Size  Location     Type
 10787 ;;		None
 10788 ;; Auto vars:     Size  Location     Type
 10789 ;;		None
 10790 ;; Return value:  Size  Location     Type
 10791 ;;		None               void
 10792 ;; Registers used:
 10793 ;;		wreg, status,2, cstack
 10794 ;; Tracked objects:
 10795 ;;		On entry : 0/0
 10796 ;;		On exit  : 0/0
 10797 ;;		Unchanged: 0/0
 10798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10803 ;;Total ram usage:        0 bytes
 10804 ;; Hardware stack levels used:    1
 10805 ;; Hardware stack levels required when called:    5
 10806 ;; This function calls:
 10807 ;;		_ResetADC
 10808 ;; This function is called by:
 10809 ;;		_Init_System
 10810 ;; This function uses a non-reentrant model
 10811 ;;
 10812                           
 10813                           	psect	text59
 10814  0038E0                     __ptext59:
 10815                           	opt stack 0
 10816  0038E0                     _InitADC:
 10817                           	opt stack 24
 10818                           
 10819                           ;ADC.c: 135: ResetADC();
 10820                           
 10821                           ; BSR set to: 0
 10822                           ;incstack = 0
 10823  0038E0  ECCB  F01C         	call	_ResetADC	;wreg free
 10824                           
 10825                           ;ADC.c: 136: ADCON2bits.ADFM = 1;
 10826  0038E4  8EC0               	bsf	4032,7,c	;volatile
 10827                           
 10828                           ;ADC.c: 137: ADCON2bits.ACQT = 0x7;
 10829  0038E6  86C0               	bsf	4032,3,c	;volatile
 10830  0038E8  88C0               	bsf	4032,4,c	;volatile
 10831  0038EA  8AC0               	bsf	4032,5,c	;volatile
 10832                           
 10833                           ;ADC.c: 138: ADCON2bits.ADCS = 0x4;
 10834  0038EC  50C0               	movf	4032,w,c	;volatile
 10835  0038EE  0BF8               	andlw	-8
 10836  0038F0  0904               	iorlw	4
 10837  0038F2  6EC0               	movwf	4032,c	;volatile
 10838  0038F4  0012               	return		;funcret
 10839  0038F6                     __end_of_InitADC:
 10840                           	opt stack 0
 10841                           tblptru	equ	0xFF8
 10842                           tblptrh	equ	0xFF7
 10843                           tblptrl	equ	0xFF6
 10844                           tablat	equ	0xFF5
 10845                           prodh	equ	0xFF4
 10846                           prodl	equ	0xFF3
 10847                           intcon	equ	0xFF2
 10848                           intcon2	equ	0xFF1
 10849                           indf0	equ	0xFEF
 10850                           postinc0	equ	0xFEE
 10851                           plusw0	equ	0xFEB
 10852                           fsr0h	equ	0xFEA
 10853                           fsr0l	equ	0xFE9
 10854                           wreg	equ	0xFE8
 10855                           indf1	equ	0xFE7
 10856                           postdec1	equ	0xFE5
 10857                           fsr1h	equ	0xFE2
 10858                           fsr1l	equ	0xFE1
 10859                           indf2	equ	0xFDF
 10860                           postinc2	equ	0xFDE
 10861                           postdec2	equ	0xFDD
 10862                           plusw2	equ	0xFDB
 10863                           fsr2h	equ	0xFDA
 10864                           fsr2l	equ	0xFD9
 10865                           status	equ	0xFD8
 10866                           
 10867 ;; *************** function _ResetADC *****************
 10868 ;; Defined at:
 10869 ;;		line 121 in file "ADC.c"
 10870 ;; Parameters:    Size  Location     Type
 10871 ;;		None
 10872 ;; Auto vars:     Size  Location     Type
 10873 ;;		None
 10874 ;; Return value:  Size  Location     Type
 10875 ;;		None               void
 10876 ;; Registers used:
 10877 ;;		wreg, status,2
 10878 ;; Tracked objects:
 10879 ;;		On entry : 0/0
 10880 ;;		On exit  : 0/0
 10881 ;;		Unchanged: 0/0
 10882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10887 ;;Total ram usage:        0 bytes
 10888 ;; Hardware stack levels used:    1
 10889 ;; Hardware stack levels required when called:    4
 10890 ;; This function calls:
 10891 ;;		Nothing
 10892 ;; This function is called by:
 10893 ;;		_InitADC
 10894 ;; This function uses a non-reentrant model
 10895 ;;
 10896                           
 10897                           	psect	text60
 10898  003996                     __ptext60:
 10899                           	opt stack 0
 10900  003996                     _ResetADC:
 10901                           	opt stack 24
 10902                           
 10903                           ;ADC.c: 123: ADCON0 =0;
 10904                           
 10905                           ;incstack = 0
 10906  003996  0E00               	movlw	0
 10907  003998  6EC2               	movwf	4034,c	;volatile
 10908                           
 10909                           ;ADC.c: 124: ADCON1 =0;
 10910  00399A  0E00               	movlw	0
 10911  00399C  6EC1               	movwf	4033,c	;volatile
 10912                           
 10913                           ;ADC.c: 125: ADCON2 =0;
 10914  00399E  0E00               	movlw	0
 10915  0039A0  6EC0               	movwf	4032,c	;volatile
 10916  0039A2  0012               	return		;funcret
 10917  0039A4                     __end_of_ResetADC:
 10918                           	opt stack 0
 10919                           tblptru	equ	0xFF8
 10920                           tblptrh	equ	0xFF7
 10921                           tblptrl	equ	0xFF6
 10922                           tablat	equ	0xFF5
 10923                           prodh	equ	0xFF4
 10924                           prodl	equ	0xFF3
 10925                           intcon	equ	0xFF2
 10926                           intcon2	equ	0xFF1
 10927                           indf0	equ	0xFEF
 10928                           postinc0	equ	0xFEE
 10929                           plusw0	equ	0xFEB
 10930                           fsr0h	equ	0xFEA
 10931                           fsr0l	equ	0xFE9
 10932                           wreg	equ	0xFE8
 10933                           indf1	equ	0xFE7
 10934                           postdec1	equ	0xFE5
 10935                           fsr1h	equ	0xFE2
 10936                           fsr1l	equ	0xFE1
 10937                           indf2	equ	0xFDF
 10938                           postinc2	equ	0xFDE
 10939                           postdec2	equ	0xFDD
 10940                           plusw2	equ	0xFDB
 10941                           fsr2h	equ	0xFDA
 10942                           fsr2l	equ	0xFD9
 10943                           status	equ	0xFD8
 10944                           
 10945 ;; *************** function _InitApp *****************
 10946 ;; Defined at:
 10947 ;;		line 60 in file "user.c"
 10948 ;; Parameters:    Size  Location     Type
 10949 ;;		None
 10950 ;; Auto vars:     Size  Location     Type
 10951 ;;		None
 10952 ;; Return value:  Size  Location     Type
 10953 ;;		None               void
 10954 ;; Registers used:
 10955 ;;		wreg, status,2
 10956 ;; Tracked objects:
 10957 ;;		On entry : 0/0
 10958 ;;		On exit  : 0/0
 10959 ;;		Unchanged: 0/0
 10960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10965 ;;Total ram usage:        0 bytes
 10966 ;; Hardware stack levels used:    1
 10967 ;; Hardware stack levels required when called:    4
 10968 ;; This function calls:
 10969 ;;		Nothing
 10970 ;; This function is called by:
 10971 ;;		_main
 10972 ;; This function uses a non-reentrant model
 10973 ;;
 10974                           
 10975                           	psect	text61
 10976  00373A                     __ptext61:
 10977                           	opt stack 0
 10978  00373A                     _InitApp:
 10979                           	opt stack 26
 10980                           
 10981                           ;user.c: 62: TRISAbits.TRISA0 = 1;
 10982                           
 10983                           ;incstack = 0
 10984  00373A  8092               	bsf	3986,0,c	;volatile
 10985                           
 10986                           ;user.c: 63: TRISAbits.TRISA1 = 1;
 10987  00373C  8292               	bsf	3986,1,c	;volatile
 10988                           
 10989                           ;user.c: 64: TRISAbits.TRISA2 = 0;
 10990  00373E  9492               	bcf	3986,2,c	;volatile
 10991                           
 10992                           ;user.c: 65: TRISAbits.TRISA3 = 0;
 10993  003740  9692               	bcf	3986,3,c	;volatile
 10994                           
 10995                           ;user.c: 66: TRISAbits.TRISA4 = 0;
 10996  003742  9892               	bcf	3986,4,c	;volatile
 10997                           
 10998                           ;user.c: 67: TRISAbits.TRISA5 = 0;
 10999  003744  9A92               	bcf	3986,5,c	;volatile
 11000                           
 11001                           ;user.c: 68: TRISCbits.TRISC0 = 1;
 11002  003746  8094               	bsf	3988,0,c	;volatile
 11003                           
 11004                           ;user.c: 69: TRISCbits.TRISC1 = 0;
 11005  003748  9294               	bcf	3988,1,c	;volatile
 11006                           
 11007                           ;user.c: 70: TRISCbits.TRISC2 = 0;
 11008  00374A  9494               	bcf	3988,2,c	;volatile
 11009                           
 11010                           ;user.c: 71: TRISCbits.TRISC3 = 0;
 11011  00374C  9694               	bcf	3988,3,c	;volatile
 11012                           
 11013                           ;user.c: 72: TRISCbits.TRISC4 = 0;
 11014  00374E  9894               	bcf	3988,4,c	;volatile
 11015                           
 11016                           ;user.c: 73: TRISCbits.TRISC5 = 0;
 11017  003750  9A94               	bcf	3988,5,c	;volatile
 11018                           
 11019                           ;user.c: 74: TRISCbits.TRISC6 = 0;
 11020  003752  9C94               	bcf	3988,6,c	;volatile
 11021                           
 11022                           ;user.c: 75: TRISCbits.TRISC7 = 1;
 11023  003754  8E94               	bsf	3988,7,c	;volatile
 11024                           
 11025                           ;user.c: 76: TRISBbits.TRISB0 = 1;
 11026  003756  8093               	bsf	3987,0,c	;volatile
 11027                           
 11028                           ;user.c: 77: TRISBbits.TRISB1 = 1;
 11029  003758  8293               	bsf	3987,1,c	;volatile
 11030                           
 11031                           ;user.c: 78: TRISBbits.TRISB2 = 1;
 11032  00375A  8493               	bsf	3987,2,c	;volatile
 11033                           
 11034                           ;user.c: 79: TRISBbits.TRISB3 = 1;
 11035  00375C  8693               	bsf	3987,3,c	;volatile
 11036                           
 11037                           ;user.c: 80: TRISBbits.TRISB4 = 1;
 11038  00375E  8893               	bsf	3987,4,c	;volatile
 11039                           
 11040                           ;user.c: 81: TRISBbits.TRISB5 = 1;
 11041  003760  8A93               	bsf	3987,5,c	;volatile
 11042                           
 11043                           ;user.c: 84: ANSEL = 0x01;
 11044  003762  0E01               	movlw	1
 11045  003764  6E7E               	movwf	3966,c	;volatile
 11046                           
 11047                           ;user.c: 85: ANSELH = 0x00;
 11048  003766  0E00               	movlw	0
 11049  003768  6E7F               	movwf	3967,c	;volatile
 11050                           
 11051                           ;user.c: 88: INTCON2bits.RBPU = 0;
 11052  00376A  9EF1               	bcf	intcon2,7,c	;volatile
 11053                           
 11054                           ;user.c: 90: WPUB = 0x0F;
 11055  00376C  0E0F               	movlw	15
 11056  00376E  6E7C               	movwf	3964,c	;volatile
 11057  003770  0012               	return		;funcret
 11058  003772                     __end_of_InitApp:
 11059                           	opt stack 0
 11060                           tblptru	equ	0xFF8
 11061                           tblptrh	equ	0xFF7
 11062                           tblptrl	equ	0xFF6
 11063                           tablat	equ	0xFF5
 11064                           prodh	equ	0xFF4
 11065                           prodl	equ	0xFF3
 11066                           intcon	equ	0xFF2
 11067                           intcon2	equ	0xFF1
 11068                           indf0	equ	0xFEF
 11069                           postinc0	equ	0xFEE
 11070                           plusw0	equ	0xFEB
 11071                           fsr0h	equ	0xFEA
 11072                           fsr0l	equ	0xFE9
 11073                           wreg	equ	0xFE8
 11074                           indf1	equ	0xFE7
 11075                           postdec1	equ	0xFE5
 11076                           fsr1h	equ	0xFE2
 11077                           fsr1l	equ	0xFE1
 11078                           indf2	equ	0xFDF
 11079                           postinc2	equ	0xFDE
 11080                           postdec2	equ	0xFDD
 11081                           plusw2	equ	0xFDB
 11082                           fsr2h	equ	0xFDA
 11083                           fsr2l	equ	0xFD9
 11084                           status	equ	0xFD8
 11085                           
 11086 ;; *************** function _ConfigureOscillator *****************
 11087 ;; Defined at:
 11088 ;;		line 41 in file "system.c"
 11089 ;; Parameters:    Size  Location     Type
 11090 ;;		None
 11091 ;; Auto vars:     Size  Location     Type
 11092 ;;		None
 11093 ;; Return value:  Size  Location     Type
 11094 ;;		None               void
 11095 ;; Registers used:
 11096 ;;		None
 11097 ;; Tracked objects:
 11098 ;;		On entry : 0/0
 11099 ;;		On exit  : 0/0
 11100 ;;		Unchanged: 0/0
 11101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11106 ;;Total ram usage:        0 bytes
 11107 ;; Hardware stack levels used:    1
 11108 ;; Hardware stack levels required when called:    4
 11109 ;; This function calls:
 11110 ;;		Nothing
 11111 ;; This function is called by:
 11112 ;;		_main
 11113 ;; This function uses a non-reentrant model
 11114 ;;
 11115                           
 11116                           	psect	text62
 11117  003A08                     __ptext62:
 11118                           	opt stack 0
 11119  003A08                     _ConfigureOscillator:
 11120                           	opt stack 26
 11121                           
 11122                           ;incstack = 0
 11123  003A08  0012               	return		;funcret
 11124  003A0A                     __end_of_ConfigureOscillator:
 11125                           	opt stack 0
 11126                           tblptru	equ	0xFF8
 11127                           tblptrh	equ	0xFF7
 11128                           tblptrl	equ	0xFF6
 11129                           tablat	equ	0xFF5
 11130                           prodh	equ	0xFF4
 11131                           prodl	equ	0xFF3
 11132                           intcon	equ	0xFF2
 11133                           intcon2	equ	0xFF1
 11134                           indf0	equ	0xFEF
 11135                           postinc0	equ	0xFEE
 11136                           plusw0	equ	0xFEB
 11137                           fsr0h	equ	0xFEA
 11138                           fsr0l	equ	0xFE9
 11139                           wreg	equ	0xFE8
 11140                           indf1	equ	0xFE7
 11141                           postdec1	equ	0xFE5
 11142                           fsr1h	equ	0xFE2
 11143                           fsr1l	equ	0xFE1
 11144                           indf2	equ	0xFDF
 11145                           postinc2	equ	0xFDE
 11146                           postdec2	equ	0xFDD
 11147                           plusw2	equ	0xFDB
 11148                           fsr2h	equ	0xFDA
 11149                           fsr2l	equ	0xFD9
 11150                           status	equ	0xFD8
 11151                           
 11152 ;; *************** function _low_isr *****************
 11153 ;; Defined at:
 11154 ;;		line 331 in file "interrupts.c"
 11155 ;; Parameters:    Size  Location     Type
 11156 ;;		None
 11157 ;; Auto vars:     Size  Location     Type
 11158 ;;  data            1   18[COMRAM] unsigned char 
 11159 ;; Return value:  Size  Location     Type
 11160 ;;		None               void
 11161 ;; Registers used:
 11162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11163 ;; Tracked objects:
 11164 ;;		On entry : 0/0
 11165 ;;		On exit  : 0/0
 11166 ;;		Unchanged: 0/0
 11167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11169 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11170 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11171 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11172 ;;Total ram usage:       18 bytes
 11173 ;; Hardware stack levels used:    1
 11174 ;; Hardware stack levels required when called:    3
 11175 ;; This function calls:
 11176 ;;		_IsCharacter
 11177 ;;		_ReadUSART
 11178 ;;		i1_BlueConnected
 11179 ;; This function is called by:
 11180 ;;		Interrupt level 1
 11181 ;; This function uses a non-reentrant model
 11182 ;;
 11183                           
 11184                           	psect	intcodelo
 11185  000018                     __pintcodelo:
 11186                           	opt stack 0
 11187  000018                     _low_isr:
 11188                           	opt stack 19
 11189                           
 11190                           ;incstack = 0
 11191  000018  CFD8 F002          	movff	status,??_low_isr
 11192  00001C  CFE8 F003          	movff	wreg,??_low_isr+1
 11193  000020  CFE0 F004          	movff	bsr,??_low_isr+2
 11194  000024  CFFA F005          	movff	pclath,??_low_isr+3
 11195  000028  CFFB F006          	movff	pclatu,??_low_isr+4
 11196  00002C  CFE9 F007          	movff	fsr0l,??_low_isr+5
 11197  000030  CFEA F008          	movff	fsr0h,??_low_isr+6
 11198  000034  CFE1 F009          	movff	fsr1l,??_low_isr+7
 11199  000038  CFE2 F00A          	movff	fsr1h,??_low_isr+8
 11200  00003C  CFD9 F00B          	movff	fsr2l,??_low_isr+9
 11201  000040  CFDA F00C          	movff	fsr2h,??_low_isr+10
 11202  000044  CFF3 F00D          	movff	prodl,??_low_isr+11
 11203  000048  CFF4 F00E          	movff	prodh,??_low_isr+12
 11204  00004C  CFF6 F00F          	movff	tblptrl,??_low_isr+13
 11205  000050  CFF7 F010          	movff	tblptrh,??_low_isr+14
 11206  000054  CFF8 F011          	movff	tblptru,??_low_isr+15
 11207  000058  CFF5 F012          	movff	tablat,??_low_isr+16
 11208                           
 11209                           ;interrupts.c: 340: char data = 0;
 11210  00005C  0E00               	movlw	0
 11211  00005E  6E13               	movwf	low_isr@data,c
 11212                           
 11213                           ;interrupts.c: 342: INTCONbits.PEIE = 0;
 11214  000060  9CF2               	bcf	intcon,6,c	;volatile
 11215                           
 11216                           ;interrupts.c: 344: if(PIR1bits.RCIF)
 11217  000062  AA9E               	btfss	3998,5,c	;volatile
 11218  000064  D03F               	goto	i1l607
 11219                           
 11220                           ;interrupts.c: 345: {
 11221                           ;interrupts.c: 347: data = ReadUSART();
 11222  000066  EC7B  F01C         	call	_ReadUSART	;wreg free
 11223  00006A  6E13               	movwf	low_isr@data,c
 11224                           
 11225                           ;interrupts.c: 349: if(!BlueConnected())
 11226  00006C  ECD2  F01C         	call	i1_BlueConnected	;wreg free
 11227  000070  0900               	iorlw	0
 11228  000072  A4D8               	btfss	status,2,c
 11229  000074  D00F               	goto	i1l5000
 11230                           
 11231                           ;interrupts.c: 350: {
 11232                           ;interrupts.c: 351: if(CommandStringPos < 255)
 11233  000076  2839               	incf	_CommandStringPos,w,c
 11234  000078  B4D8               	btfsc	status,2,c
 11235  00007A  D032               	goto	i1l5018
 11236                           
 11237                           ;interrupts.c: 352: {
 11238                           ;interrupts.c: 353: CommandString[CommandStringPos] = data;
 11239  00007C  5039               	movf	_CommandStringPos,w,c
 11240  00007E  0D01               	mullw	1
 11241  000080  0E00               	movlw	low _CommandString
 11242  000082  24F3               	addwf	prodl,w,c
 11243  000084  6ED9               	movwf	fsr2l,c
 11244  000086  0E02               	movlw	high _CommandString
 11245  000088  20F4               	addwfc	prodh,w,c
 11246  00008A  6EDA               	movwf	fsr2h,c
 11247  00008C  C013  FFDF         	movff	low_isr@data,indf2
 11248                           
 11249                           ;interrupts.c: 354: CommandStringPos++;
 11250  000090  2A39               	incf	_CommandStringPos,f,c
 11251                           
 11252                           ;interrupts.c: 355: }
 11253                           ;interrupts.c: 356: }
 11254  000092  D026               	goto	i1l5018
 11255  000094                     i1l5000:
 11256                           
 11257                           ;interrupts.c: 357: else
 11258                           ;interrupts.c: 358: {
 11259                           ;interrupts.c: 359: if(IsCharacter(data))
 11260  000094  5013               	movf	low_isr@data,w,c
 11261  000096  EC59  F01C         	call	_IsCharacter
 11262  00009A  0900               	iorlw	0
 11263  00009C  B4D8               	btfsc	status,2,c
 11264  00009E  D020               	goto	i1l5018
 11265                           
 11266                           ;interrupts.c: 360: {
 11267                           ;interrupts.c: 361: if(data != '\r' && data != '\n')
 11268  0000A0  0E0D               	movlw	13
 11269  0000A2  1813               	xorwf	low_isr@data,w,c
 11270  0000A4  B4D8               	btfsc	status,2,c
 11271  0000A6  D016               	goto	i1l5014
 11272  0000A8  0E0A               	movlw	10
 11273  0000AA  1813               	xorwf	low_isr@data,w,c
 11274  0000AC  B4D8               	btfsc	status,2,c
 11275  0000AE  D012               	goto	i1l5014
 11276                           
 11277                           ;interrupts.c: 362: {
 11278                           ;interrupts.c: 363: if(ReceivedStringPos < 255 && NewReceivedString == 0)
 11279  0000B0  2840               	incf	_ReceivedStringPos,w,c
 11280  0000B2  B4D8               	btfsc	status,2,c
 11281  0000B4  D015               	goto	i1l5018
 11282  0000B6  503C               	movf	_NewReceivedString,w,c
 11283  0000B8  A4D8               	btfss	status,2,c
 11284  0000BA  D012               	goto	i1l5018
 11285                           
 11286                           ;interrupts.c: 364: {
 11287                           ;interrupts.c: 365: ReceivedString[ReceivedStringPos] = data;
 11288  0000BC  5040               	movf	_ReceivedStringPos,w,c
 11289  0000BE  0D01               	mullw	1
 11290  0000C0  0E00               	movlw	low _ReceivedString
 11291  0000C2  24F3               	addwf	prodl,w,c
 11292  0000C4  6ED9               	movwf	fsr2l,c
 11293  0000C6  0E03               	movlw	high _ReceivedString
 11294  0000C8  20F4               	addwfc	prodh,w,c
 11295  0000CA  6EDA               	movwf	fsr2h,c
 11296  0000CC  C013  FFDF         	movff	low_isr@data,indf2
 11297                           
 11298                           ;interrupts.c: 366: ReceivedStringPos++;
 11299  0000D0  2A40               	incf	_ReceivedStringPos,f,c
 11300                           
 11301                           ;interrupts.c: 367: }
 11302                           ;interrupts.c: 368: }
 11303  0000D2  D006               	goto	i1l5018
 11304  0000D4                     i1l5014:
 11305                           
 11306                           ;interrupts.c: 369: else if(ReceivedStringPos > 0)
 11307  0000D4  5040               	movf	_ReceivedStringPos,w,c
 11308  0000D6  B4D8               	btfsc	status,2,c
 11309  0000D8  D003               	goto	i1l5018
 11310                           
 11311                           ;interrupts.c: 370: {
 11312                           ;interrupts.c: 371: NewReceivedString = 1;
 11313  0000DA  0E01               	movlw	1
 11314  0000DC  6E3C               	movwf	_NewReceivedString,c
 11315  0000DE  D000               	goto	i1l5018
 11316  0000E0                     i1l5018:
 11317                           
 11318                           ;interrupts.c: 372: }
 11319                           ;interrupts.c: 373: }
 11320                           ;interrupts.c: 374: }
 11321                           ;interrupts.c: 375: PIR1bits.RCIF = 0;
 11322  0000E0  9A9E               	bcf	3998,5,c	;volatile
 11323                           
 11324                           ;interrupts.c: 376: }
 11325  0000E2  D00F               	goto	i1l616
 11326  0000E4                     i1l607:
 11327                           
 11328                           ;interrupts.c: 377: else if(PIR1bits.TMR1IF)
 11329  0000E4  A09E               	btfss	3998,0,c	;volatile
 11330  0000E6  D00B               	goto	i1l617
 11331                           
 11332                           ;interrupts.c: 378: {
 11333                           ;interrupts.c: 379: Timer1_Postscaler++;
 11334  0000E8  2A42               	incf	_Timer1_Postscaler,f,c
 11335                           
 11336                           ;interrupts.c: 380: if(Timer1_Postscaler == 3)
 11337  0000EA  0E03               	movlw	3
 11338  0000EC  1842               	xorwf	_Timer1_Postscaler,w,c
 11339  0000EE  A4D8               	btfss	status,2,c
 11340  0000F0  D004               	goto	i1l5028
 11341                           
 11342                           ;interrupts.c: 381: {
 11343                           ;interrupts.c: 382: (LATC &= ~0x04);
 11344  0000F2  948B               	bcf	3979,2,c	;volatile
 11345                           
 11346                           ;interrupts.c: 383: (LATC &= ~0x02);
 11347  0000F4  928B               	bcf	3979,1,c	;volatile
 11348                           
 11349                           ;interrupts.c: 384: (T1CONbits.TMR1ON = 0);
 11350  0000F6  90CD               	bcf	4045,0,c	;volatile
 11351  0000F8  D000               	goto	i1l5028
 11352  0000FA                     i1l5028:
 11353                           
 11354                           ;interrupts.c: 385: }
 11355                           ;interrupts.c: 386: PIR1bits.TMR1IF = 0;
 11356  0000FA  909E               	bcf	3998,0,c	;volatile
 11357                           
 11358                           ;interrupts.c: 387: }
 11359  0000FC  D002               	goto	i1l616
 11360  0000FE                     i1l617:
 11361                           
 11362                           ;interrupts.c: 388: else
 11363                           ;interrupts.c: 389: {
 11364                           ;interrupts.c: 391: __nop();
 11365  0000FE  F000               	nop	
 11366  000100  D000               	goto	i1l616
 11367  000102                     i1l616:
 11368                           
 11369                           ;interrupts.c: 392: }
 11370                           ;interrupts.c: 393: INTCONbits.PEIE = 1;
 11371  000102  8CF2               	bsf	intcon,6,c	;volatile
 11372  000104  C012  FFF5         	movff	??_low_isr+16,tablat
 11373  000108  C011  FFF8         	movff	??_low_isr+15,tblptru
 11374  00010C  C010  FFF7         	movff	??_low_isr+14,tblptrh
 11375  000110  C00F  FFF6         	movff	??_low_isr+13,tblptrl
 11376  000114  C00E  FFF4         	movff	??_low_isr+12,prodh
 11377  000118  C00D  FFF3         	movff	??_low_isr+11,prodl
 11378  00011C  C00C  FFDA         	movff	??_low_isr+10,fsr2h
 11379  000120  C00B  FFD9         	movff	??_low_isr+9,fsr2l
 11380  000124  C00A  FFE2         	movff	??_low_isr+8,fsr1h
 11381  000128  C009  FFE1         	movff	??_low_isr+7,fsr1l
 11382  00012C  C008  FFEA         	movff	??_low_isr+6,fsr0h
 11383  000130  C007  FFE9         	movff	??_low_isr+5,fsr0l
 11384  000134  C006  FFFB         	movff	??_low_isr+4,pclatu
 11385  000138  C005  FFFA         	movff	??_low_isr+3,pclath
 11386  00013C  C004  FFE0         	movff	??_low_isr+2,bsr
 11387  000140  C003  FFE8         	movff	??_low_isr+1,wreg
 11388  000144  C002  FFD8         	movff	??_low_isr,status
 11389  000148  0010               	retfie	
 11390  00014A                     __end_of_low_isr:
 11391                           	opt stack 0
 11392                           pclatu	equ	0xFFB
 11393                           pclath	equ	0xFFA
 11394                           tblptru	equ	0xFF8
 11395                           tblptrh	equ	0xFF7
 11396                           tblptrl	equ	0xFF6
 11397                           tablat	equ	0xFF5
 11398                           prodh	equ	0xFF4
 11399                           prodl	equ	0xFF3
 11400                           intcon	equ	0xFF2
 11401                           intcon2	equ	0xFF1
 11402                           indf0	equ	0xFEF
 11403                           postinc0	equ	0xFEE
 11404                           plusw0	equ	0xFEB
 11405                           fsr0h	equ	0xFEA
 11406                           fsr0l	equ	0xFE9
 11407                           wreg	equ	0xFE8
 11408                           indf1	equ	0xFE7
 11409                           postdec1	equ	0xFE5
 11410                           fsr1h	equ	0xFE2
 11411                           fsr1l	equ	0xFE1
 11412                           bsr	equ	0xFE0
 11413                           indf2	equ	0xFDF
 11414                           postinc2	equ	0xFDE
 11415                           postdec2	equ	0xFDD
 11416                           plusw2	equ	0xFDB
 11417                           fsr2h	equ	0xFDA
 11418                           fsr2l	equ	0xFD9
 11419                           status	equ	0xFD8
 11420                           
 11421 ;; *************** function i1_BlueConnected *****************
 11422 ;; Defined at:
 11423 ;;		line 81 in file "Bluetooth.c"
 11424 ;; Parameters:    Size  Location     Type
 11425 ;;		None
 11426 ;; Auto vars:     Size  Location     Type
 11427 ;;		None
 11428 ;; Return value:  Size  Location     Type
 11429 ;;                  1    wreg      unsigned char 
 11430 ;; Registers used:
 11431 ;;		wreg
 11432 ;; Tracked objects:
 11433 ;;		On entry : 0/0
 11434 ;;		On exit  : 0/0
 11435 ;;		Unchanged: 0/0
 11436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11441 ;;Total ram usage:        0 bytes
 11442 ;; Hardware stack levels used:    1
 11443 ;; Hardware stack levels required when called:    2
 11444 ;; This function calls:
 11445 ;;		Nothing
 11446 ;; This function is called by:
 11447 ;;		_low_isr
 11448 ;; This function uses a non-reentrant model
 11449 ;;
 11450                           
 11451                           	psect	text64
 11452  0039A4                     __ptext64:
 11453                           	opt stack 0
 11454  0039A4                     i1_BlueConnected:
 11455                           	opt stack 19
 11456                           
 11457                           ;Bluetooth.c: 84: if((PORTA & 0x02) == 0x02)
 11458                           
 11459                           ;incstack = 0
 11460  0039A4  A280               	btfss	3968,1,c	;volatile
 11461  0039A6  D002               	goto	i1l4680
 11462                           
 11463                           ;Bluetooth.c: 85: {
 11464                           ;Bluetooth.c: 86: return 1;
 11465  0039A8  0E01               	movlw	1
 11466  0039AA  0012               	return	
 11467  0039AC                     i1l4680:
 11468                           
 11469                           ;Bluetooth.c: 87: }
 11470                           ;Bluetooth.c: 88: return 0;
 11471  0039AC  0E00               	movlw	0
 11472  0039AE  0012               	return	
 11473  0039B0  0012               	return		;funcret
 11474  0039B2                     __end_ofi1_BlueConnected:
 11475                           	opt stack 0
 11476                           pclatu	equ	0xFFB
 11477                           pclath	equ	0xFFA
 11478                           tblptru	equ	0xFF8
 11479                           tblptrh	equ	0xFF7
 11480                           tblptrl	equ	0xFF6
 11481                           tablat	equ	0xFF5
 11482                           prodh	equ	0xFF4
 11483                           prodl	equ	0xFF3
 11484                           intcon	equ	0xFF2
 11485                           intcon2	equ	0xFF1
 11486                           indf0	equ	0xFEF
 11487                           postinc0	equ	0xFEE
 11488                           plusw0	equ	0xFEB
 11489                           fsr0h	equ	0xFEA
 11490                           fsr0l	equ	0xFE9
 11491                           wreg	equ	0xFE8
 11492                           indf1	equ	0xFE7
 11493                           postdec1	equ	0xFE5
 11494                           fsr1h	equ	0xFE2
 11495                           fsr1l	equ	0xFE1
 11496                           bsr	equ	0xFE0
 11497                           indf2	equ	0xFDF
 11498                           postinc2	equ	0xFDE
 11499                           postdec2	equ	0xFDD
 11500                           plusw2	equ	0xFDB
 11501                           fsr2h	equ	0xFDA
 11502                           fsr2l	equ	0xFD9
 11503                           status	equ	0xFD8
 11504                           
 11505 ;; *************** function _ReadUSART *****************
 11506 ;; Defined at:
 11507 ;;		line 214 in file "UART.c"
 11508 ;; Parameters:    Size  Location     Type
 11509 ;;		None
 11510 ;; Auto vars:     Size  Location     Type
 11511 ;;  data            1    0[COMRAM] unsigned char 
 11512 ;; Return value:  Size  Location     Type
 11513 ;;                  1    wreg      unsigned char 
 11514 ;; Registers used:
 11515 ;;		wreg, status,2
 11516 ;; Tracked objects:
 11517 ;;		On entry : 0/0
 11518 ;;		On exit  : 0/0
 11519 ;;		Unchanged: 0/0
 11520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11525 ;;Total ram usage:        1 bytes
 11526 ;; Hardware stack levels used:    1
 11527 ;; Hardware stack levels required when called:    2
 11528 ;; This function calls:
 11529 ;;		Nothing
 11530 ;; This function is called by:
 11531 ;;		_low_isr
 11532 ;; This function uses a non-reentrant model
 11533 ;;
 11534                           
 11535                           	psect	text65
 11536  0038F6                     __ptext65:
 11537                           	opt stack 0
 11538  0038F6                     _ReadUSART:
 11539                           	opt stack 19
 11540                           
 11541                           ;UART.c: 216: unsigned char data;
 11542                           ;UART.c: 218: if(RCSTAbits.OERR)
 11543                           
 11544                           ;incstack = 0
 11545  0038F6  A2AB               	btfss	4011,1,c	;volatile
 11546  0038F8  D004               	goto	i1l238
 11547                           
 11548                           ;UART.c: 219: {
 11549                           ;UART.c: 221: RCSTAbits.CREN = 0;
 11550  0038FA  98AB               	bcf	4011,4,c	;volatile
 11551                           
 11552                           ;UART.c: 222: RCSTAbits.CREN = 1;
 11553  0038FC  88AB               	bsf	4011,4,c	;volatile
 11554                           
 11555                           ;UART.c: 223: return 0;
 11556  0038FE  0E00               	movlw	0
 11557  003900  0012               	return	
 11558  003902                     i1l238:
 11559                           
 11560                           ;UART.c: 224: }
 11561                           ;UART.c: 226: data = RCREG;
 11562  003902  CFAE F001          	movff	4014,ReadUSART@data	;volatile
 11563                           
 11564                           ;UART.c: 227: return (data);
 11565  003906  5001               	movf	ReadUSART@data,w,c
 11566  003908  0012               	return	
 11567  00390A  0012               	return		;funcret
 11568  00390C                     __end_of_ReadUSART:
 11569                           	opt stack 0
 11570                           pclatu	equ	0xFFB
 11571                           pclath	equ	0xFFA
 11572                           tblptru	equ	0xFF8
 11573                           tblptrh	equ	0xFF7
 11574                           tblptrl	equ	0xFF6
 11575                           tablat	equ	0xFF5
 11576                           prodh	equ	0xFF4
 11577                           prodl	equ	0xFF3
 11578                           intcon	equ	0xFF2
 11579                           intcon2	equ	0xFF1
 11580                           indf0	equ	0xFEF
 11581                           postinc0	equ	0xFEE
 11582                           plusw0	equ	0xFEB
 11583                           fsr0h	equ	0xFEA
 11584                           fsr0l	equ	0xFE9
 11585                           wreg	equ	0xFE8
 11586                           indf1	equ	0xFE7
 11587                           postdec1	equ	0xFE5
 11588                           fsr1h	equ	0xFE2
 11589                           fsr1l	equ	0xFE1
 11590                           bsr	equ	0xFE0
 11591                           indf2	equ	0xFDF
 11592                           postinc2	equ	0xFDE
 11593                           postdec2	equ	0xFDD
 11594                           plusw2	equ	0xFDB
 11595                           fsr2h	equ	0xFDA
 11596                           fsr2l	equ	0xFD9
 11597                           status	equ	0xFD8
 11598                           
 11599 ;; *************** function _IsCharacter *****************
 11600 ;; Defined at:
 11601 ;;		line 69 in file "MISC.c"
 11602 ;; Parameters:    Size  Location     Type
 11603 ;;  data            1    wreg     unsigned char 
 11604 ;; Auto vars:     Size  Location     Type
 11605 ;;  data            1    0[COMRAM] unsigned char 
 11606 ;; Return value:  Size  Location     Type
 11607 ;;                  1    wreg      unsigned char 
 11608 ;; Registers used:
 11609 ;;		wreg, status,2, status,0
 11610 ;; Tracked objects:
 11611 ;;		On entry : 0/0
 11612 ;;		On exit  : 0/0
 11613 ;;		Unchanged: 0/0
 11614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11619 ;;Total ram usage:        1 bytes
 11620 ;; Hardware stack levels used:    1
 11621 ;; Hardware stack levels required when called:    2
 11622 ;; This function calls:
 11623 ;;		Nothing
 11624 ;; This function is called by:
 11625 ;;		_low_isr
 11626 ;; This function uses a non-reentrant model
 11627 ;;
 11628                           
 11629                           	psect	text66
 11630  0038B2                     __ptext66:
 11631                           	opt stack 0
 11632  0038B2                     _IsCharacter:
 11633                           	opt stack 19
 11634                           
 11635                           ;incstack = 0
 11636                           ;IsCharacter@data stored from wreg
 11637  0038B2  6E01               	movwf	IsCharacter@data,c
 11638                           
 11639                           ;MISC.c: 71: if(data >= 32 && data <= 126)
 11640  0038B4  0E1F               	movlw	31
 11641  0038B6  6401               	cpfsgt	IsCharacter@data,c
 11642  0038B8  D005               	goto	i1l4462
 11643  0038BA  0E7F               	movlw	127
 11644  0038BC  6001               	cpfslt	IsCharacter@data,c
 11645  0038BE  D002               	goto	i1l4462
 11646                           
 11647                           ;MISC.c: 72: {
 11648                           ;MISC.c: 73: return 1;
 11649  0038C0  0E01               	movlw	1
 11650  0038C2  0012               	return	
 11651  0038C4                     i1l4462:
 11652                           
 11653                           ;MISC.c: 74: }
 11654                           ;MISC.c: 75: return 0;
 11655  0038C4  0E00               	movlw	0
 11656  0038C6  0012               	return	
 11657  0038C8  0012               	return		;funcret
 11658  0038CA                     __end_of_IsCharacter:
 11659                           	opt stack 0
 11660                           pclatu	equ	0xFFB
 11661                           pclath	equ	0xFFA
 11662                           tblptru	equ	0xFF8
 11663                           tblptrh	equ	0xFF7
 11664                           tblptrl	equ	0xFF6
 11665                           tablat	equ	0xFF5
 11666                           prodh	equ	0xFF4
 11667                           prodl	equ	0xFF3
 11668                           intcon	equ	0xFF2
 11669                           intcon2	equ	0xFF1
 11670                           indf0	equ	0xFEF
 11671                           postinc0	equ	0xFEE
 11672                           plusw0	equ	0xFEB
 11673                           fsr0h	equ	0xFEA
 11674                           fsr0l	equ	0xFE9
 11675                           wreg	equ	0xFE8
 11676                           indf1	equ	0xFE7
 11677                           postdec1	equ	0xFE5
 11678                           fsr1h	equ	0xFE2
 11679                           fsr1l	equ	0xFE1
 11680                           bsr	equ	0xFE0
 11681                           indf2	equ	0xFDF
 11682                           postinc2	equ	0xFDE
 11683                           postdec2	equ	0xFDD
 11684                           plusw2	equ	0xFDB
 11685                           fsr2h	equ	0xFDA
 11686                           fsr2l	equ	0xFD9
 11687                           status	equ	0xFD8
 11688                           
 11689 ;; *************** function _high_isr *****************
 11690 ;; Defined at:
 11691 ;;		line 57 in file "interrupts.c"
 11692 ;; Parameters:    Size  Location     Type
 11693 ;;		None
 11694 ;; Auto vars:     Size  Location     Type
 11695 ;;  Time0           2   34[COMRAM] unsigned int 
 11696 ;;  IRpin           1   33[COMRAM] unsigned char 
 11697 ;; Return value:  Size  Location     Type
 11698 ;;		None               void
 11699 ;; Registers used:
 11700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11701 ;; Tracked objects:
 11702 ;;		On entry : 0/0
 11703 ;;		On exit  : 0/0
 11704 ;;		Unchanged: 0/0
 11705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11707 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11708 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11709 ;;      Totals:         3      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11710 ;;Total ram usage:       21 bytes
 11711 ;; Hardware stack levels used:    1
 11712 ;; Hardware stack levels required when called:    1
 11713 ;; This function calls:
 11714 ;;		_IRrawToNEC
 11715 ;;		_ResetTimer3
 11716 ;;		i2_ReadIRpin
 11717 ;;		i2_ResetTimer0
 11718 ;; This function is called by:
 11719 ;;		Interrupt level 2
 11720 ;; This function uses a non-reentrant model
 11721 ;;
 11722                           
 11723                           	psect	intcode
 11724  000008                     __pintcode:
 11725                           	opt stack 0
 11726  000008                     _high_isr:
 11727                           	opt stack 19
 11728                           
 11729                           ;incstack = 0
 11730  000008  CFFA F064          	movff	pclath,??_high_isr+4
 11731  00000C  CFFB F065          	movff	pclatu,??_high_isr+5
 11732  000010  CFE9 F066          	movff	fsr0l,??_high_isr+6
 11733  000014  EFFC  F00B         	goto	int_func
 11734                           pclatu	equ	0xFFB
 11735                           pclath	equ	0xFFA
 11736                           tblptru	equ	0xFF8
 11737                           tblptrh	equ	0xFF7
 11738                           tblptrl	equ	0xFF6
 11739                           tablat	equ	0xFF5
 11740                           prodh	equ	0xFF4
 11741                           prodl	equ	0xFF3
 11742                           intcon	equ	0xFF2
 11743                           intcon2	equ	0xFF1
 11744                           indf0	equ	0xFEF
 11745                           postinc0	equ	0xFEE
 11746                           plusw0	equ	0xFEB
 11747                           fsr0h	equ	0xFEA
 11748                           fsr0l	equ	0xFE9
 11749                           wreg	equ	0xFE8
 11750                           indf1	equ	0xFE7
 11751                           postdec1	equ	0xFE5
 11752                           fsr1h	equ	0xFE2
 11753                           fsr1l	equ	0xFE1
 11754                           bsr	equ	0xFE0
 11755                           indf2	equ	0xFDF
 11756                           postinc2	equ	0xFDE
 11757                           postdec2	equ	0xFDD
 11758                           plusw2	equ	0xFDB
 11759                           fsr2h	equ	0xFDA
 11760                           fsr2l	equ	0xFD9
 11761                           status	equ	0xFD8
 11762                           
 11763                           	psect	intcode_body
 11764  0017F8                     __pintcode_body:
 11765                           	opt stack 19
 11766  0017F8                     int_func:
 11767                           	opt stack 19
 11768  0017F8  CFEA F067          	movff	fsr0h,??_high_isr+7
 11769  0017FC  CFE1 F068          	movff	fsr1l,??_high_isr+8
 11770  001800  CFE2 F069          	movff	fsr1h,??_high_isr+9
 11771  001804  CFD9 F06A          	movff	fsr2l,??_high_isr+10
 11772  001808  CFDA F06B          	movff	fsr2h,??_high_isr+11
 11773  00180C  CFF3 F06C          	movff	prodl,??_high_isr+12
 11774  001810  CFF4 F06D          	movff	prodh,??_high_isr+13
 11775  001814  CFF6 F06E          	movff	tblptrl,??_high_isr+14
 11776  001818  CFF7 F06F          	movff	tblptrh,??_high_isr+15
 11777  00181C  CFF8 F070          	movff	tblptru,??_high_isr+16
 11778  001820  CFF5 F071          	movff	tablat,??_high_isr+17
 11779                           
 11780                           ;interrupts.c: 66: unsigned char IRpin;
 11781                           ;interrupts.c: 67: unsigned int Time0;
 11782                           ;interrupts.c: 69: INTCONbits.GIE = 0;
 11783  001824  9EF2               	bcf	intcon,7,c	;volatile
 11784                           
 11785                           ;interrupts.c: 71: if(INTCONbits.RBIF)
 11786  001826  A0F2               	btfss	intcon,0,c	;volatile
 11787  001828  D061               	goto	i2l546
 11788                           
 11789                           ;interrupts.c: 72: {
 11790                           ;interrupts.c: 73: __nop();
 11791  00182A  F000               	nop	
 11792                           
 11793                           ;interrupts.c: 74: __nop();
 11794  00182C  F000               	nop	
 11795                           
 11796                           ;interrupts.c: 75: __nop();
 11797  00182E  F000               	nop	
 11798                           
 11799                           ;interrupts.c: 76: IRpin = ReadIRpin();
 11800  001830  ECD9  F01C         	call	i2_ReadIRpin	;wreg free
 11801  001834  6E22               	movwf	high_isr@IRpin,c
 11802                           
 11803                           ;interrupts.c: 77: if(IRpin != IRpinOLD)
 11804  001836  503A               	movf	_IRpinOLD,w,c
 11805  001838  1822               	xorwf	high_isr@IRpin,w,c
 11806  00183A  B4D8               	btfsc	status,2,c
 11807  00183C  D055               	goto	i2l547
 11808                           
 11809                           ;interrupts.c: 78: {
 11810                           ;interrupts.c: 79: (T0CONbits.TMR0ON = 1);
 11811  00183E  8ED5               	bsf	4053,7,c	;volatile
 11812                           
 11813                           ;interrupts.c: 80: (INTCONbits.TMR0IE = 1);
 11814  001840  8AF2               	bsf	intcon,5,c	;volatile
 11815                           
 11816                           ;interrupts.c: 81: Time0 = TMR0L;
 11817  001842  CFD6 F023          	movff	4054,high_isr@Time0	;volatile
 11818  001846  6A24               	clrf	high_isr@Time0+1,c
 11819                           
 11820                           ;interrupts.c: 82: Time0 += (TMR0H << 8);
 11821  001848  50D7               	movf	4055,w,c	;volatile
 11822  00184A  2624               	addwf	high_isr@Time0+1,f,c
 11823                           
 11824                           ;interrupts.c: 83: if(IRrawCodeNum < 72)
 11825  00184C  0E48               	movlw	72
 11826  00184E  603B               	cpfslt	_IRrawCodeNum,c
 11827  001850  D047               	goto	i2l548
 11828                           
 11829                           ;interrupts.c: 84: {
 11830                           ;interrupts.c: 85: if(IRrawCodeNum > 0)
 11831  001852  503B               	movf	_IRrawCodeNum,w,c
 11832  001854  B4D8               	btfsc	status,2,c
 11833  001856  D03F               	goto	i2l5082
 11834                           
 11835                           ;interrupts.c: 86: {
 11836                           ;interrupts.c: 87: IRRawCode[IRrawCodeNum - 1] = Time0;
 11837  001858  0EFE               	movlw	254
 11838  00185A  0100               	movlb	0	; () banked
 11839  00185C  6F60               	movwf	??_high_isr& (0+255),b
 11840  00185E  0EFF               	movlw	255
 11841  001860  0100               	movlb	0	; () banked
 11842  001862  6F61               	movwf	(??_high_isr+1)& (0+255),b
 11843  001864  503B               	movf	_IRrawCodeNum,w,c
 11844  001866  0100               	movlb	0	; () banked
 11845  001868  6F62               	movwf	(??_high_isr+2)& (0+255),b
 11846  00186A  6B63               	clrf	(??_high_isr+3)& (0+255),b
 11847  00186C  90D8               	bcf	status,0,c
 11848  00186E  0100               	movlb	0	; () banked
 11849  001870  3762               	rlcf	(??_high_isr+2)& (0+255),f,b
 11850  001872  3763               	rlcf	(??_high_isr+3)& (0+255),f,b
 11851  001874  0100               	movlb	0	; () banked
 11852  001876  5160               	movf	??_high_isr& (0+255),w,b
 11853  001878  0100               	movlb	0	; () banked
 11854  00187A  2762               	addwf	(??_high_isr+2)& (0+255),f,b
 11855  00187C  0100               	movlb	0	; () banked
 11856  00187E  5161               	movf	(??_high_isr+1)& (0+255),w,b
 11857  001880  0100               	movlb	0	; () banked
 11858  001882  2363               	addwfc	(??_high_isr+3)& (0+255),f,b
 11859  001884  0E00               	movlw	low _IRRawCode
 11860  001886  0100               	movlb	0	; () banked
 11861  001888  2562               	addwf	(??_high_isr+2)& (0+255),w,b
 11862  00188A  6ED9               	movwf	fsr2l,c
 11863  00188C  0E01               	movlw	high _IRRawCode
 11864  00188E  0100               	movlb	0	; () banked
 11865  001890  2163               	addwfc	(??_high_isr+3)& (0+255),w,b
 11866  001892  6EDA               	movwf	fsr2h,c
 11867  001894  C023  FFDE         	movff	high_isr@Time0,postinc2
 11868  001898  C024  FFDD         	movff	high_isr@Time0+1,postdec2
 11869                           
 11870                           ; BSR set to: 0
 11871                           ;interrupts.c: 88: if((Time0 <= 21000 && Time0 >= 19000) ||
 11872                           ;interrupts.c: 89: (Time0 <= 50000 && Time0 >= 45000))
 11873  00189C  0E09               	movlw	9
 11874  00189E  5C23               	subwf	high_isr@Time0,w,c
 11875  0018A0  0E52               	movlw	82
 11876  0018A2  5824               	subwfb	high_isr@Time0+1,w,c
 11877  0018A4  B0D8               	btfsc	status,0,c
 11878  0018A6  D006               	goto	i2l5076
 11879                           
 11880                           ; BSR set to: 0
 11881  0018A8  0E38               	movlw	56
 11882  0018AA  5C23               	subwf	high_isr@Time0,w,c
 11883  0018AC  0E4A               	movlw	74
 11884  0018AE  5824               	subwfb	high_isr@Time0+1,w,c
 11885  0018B0  B0D8               	btfsc	status,0,c
 11886  0018B2  D00C               	goto	i2l552
 11887  0018B4                     i2l5076:
 11888                           
 11889                           ; BSR set to: 0
 11890  0018B4  0E51               	movlw	81
 11891  0018B6  5C23               	subwf	high_isr@Time0,w,c
 11892  0018B8  0EC3               	movlw	195
 11893  0018BA  5824               	subwfb	high_isr@Time0+1,w,c
 11894  0018BC  B0D8               	btfsc	status,0,c
 11895  0018BE  D008               	goto	i2l5080
 11896                           
 11897                           ; BSR set to: 0
 11898  0018C0  0EC8               	movlw	200
 11899  0018C2  5C23               	subwf	high_isr@Time0,w,c
 11900  0018C4  0EAF               	movlw	175
 11901  0018C6  5824               	subwfb	high_isr@Time0+1,w,c
 11902  0018C8  A0D8               	btfss	status,0,c
 11903  0018CA  D002               	goto	i2l5080
 11904  0018CC                     i2l552:
 11905                           
 11906                           ; BSR set to: 0
 11907                           ;interrupts.c: 90: {
 11908                           ;interrupts.c: 91: INTCONbits.RBIE = 0;
 11909  0018CC  96F2               	bcf	intcon,3,c	;volatile
 11910                           
 11911                           ;interrupts.c: 92: }
 11912  0018CE  D006               	goto	i2l5084
 11913  0018D0                     i2l5080:
 11914                           
 11915                           ; BSR set to: 0
 11916                           ;interrupts.c: 93: else
 11917                           ;interrupts.c: 94: {
 11918                           ;interrupts.c: 95: ResetTimer0();
 11919  0018D0  ECF5  F01C         	call	i2_ResetTimer0	;wreg free
 11920                           
 11921                           ;interrupts.c: 96: }
 11922                           ;interrupts.c: 97: }
 11923  0018D4  D003               	goto	i2l5084
 11924  0018D6                     i2l5082:
 11925                           
 11926                           ;interrupts.c: 98: else
 11927                           ;interrupts.c: 99: {
 11928                           ;interrupts.c: 100: ResetTimer0();
 11929  0018D6  ECF5  F01C         	call	i2_ResetTimer0	;wreg free
 11930  0018DA  D000               	goto	i2l5084
 11931  0018DC                     i2l5084:
 11932                           
 11933                           ;interrupts.c: 101: }
 11934                           ;interrupts.c: 102: IRrawCodeNum++;
 11935  0018DC  2A3B               	incf	_IRrawCodeNum,f,c
 11936                           
 11937                           ;interrupts.c: 103: }
 11938  0018DE  D001               	goto	i2l557
 11939  0018E0                     i2l548:
 11940                           
 11941                           ;interrupts.c: 104: else
 11942                           ;interrupts.c: 105: {
 11943                           ;interrupts.c: 106: INTCONbits.RBIE = 0;
 11944  0018E0  96F2               	bcf	intcon,3,c	;volatile
 11945  0018E2                     i2l557:
 11946                           
 11947                           ;interrupts.c: 107: }
 11948                           ;interrupts.c: 108: IRpinOLD = IRpin;
 11949  0018E2  C022  F03A         	movff	high_isr@IRpin,_IRpinOLD
 11950                           
 11951                           ;interrupts.c: 109: }
 11952  0018E6  D001               	goto	i2l558
 11953  0018E8                     i2l547:
 11954                           
 11955                           ;interrupts.c: 110: else
 11956                           ;interrupts.c: 111: {
 11957                           ;interrupts.c: 113: __nop();
 11958  0018E8  F000               	nop	
 11959  0018EA                     i2l558:
 11960                           
 11961                           ;interrupts.c: 114: }
 11962                           ;interrupts.c: 116: INTCONbits.RBIF = 0;
 11963  0018EA  90F2               	bcf	intcon,0,c	;volatile
 11964  0018EC                     i2l546:
 11965                           
 11966                           ;interrupts.c: 117: }
 11967                           ;interrupts.c: 119: if(INTCONbits.TMR0IF)
 11968  0018EC  A4F2               	btfss	intcon,2,c	;volatile
 11969  0018EE  D01A               	goto	i2l5098
 11970                           
 11971                           ;interrupts.c: 120: {
 11972                           ;interrupts.c: 122: (INTCONbits.TMR0IE = 0);
 11973  0018F0  9AF2               	bcf	intcon,5,c	;volatile
 11974                           
 11975                           ;interrupts.c: 123: (T0CONbits.TMR0ON = 0);
 11976  0018F2  9ED5               	bcf	4053,7,c	;volatile
 11977                           
 11978                           ;interrupts.c: 124: IR_New_Code = IRrawToNEC(&IRRawCode, &IR_NEC, 1);
 11979  0018F4  0E00               	movlw	low _IRRawCode
 11980  0018F6  6E14               	movwf	IRrawToNEC@Raw,c
 11981  0018F8  0E01               	movlw	high _IRRawCode
 11982  0018FA  6E15               	movwf	IRrawToNEC@Raw+1,c
 11983  0018FC  0EE9               	movlw	low _IR_NEC
 11984  0018FE  6E16               	movwf	IRrawToNEC@NEC,c
 11985  001900  0E00               	movlw	high _IR_NEC
 11986  001902  6E17               	movwf	IRrawToNEC@NEC+1,c
 11987  001904  0E01               	movlw	1
 11988  001906  6E18               	movwf	IRrawToNEC@Invert,c
 11989  001908  EC2B  F00A         	call	_IRrawToNEC	;wreg free
 11990  00190C  0100               	movlb	0	; () banked
 11991  00190E  6FED               	movwf	_IR_New_Code& (0+255),b
 11992                           
 11993                           ; BSR set to: 0
 11994                           ;interrupts.c: 125: if(!IR_New_Code)
 11995  001910  0100               	movlb	0	; () banked
 11996  001912  51ED               	movf	_IR_New_Code& (0+255),w,b
 11997  001914  A4D8               	btfss	status,2,c
 11998  001916  D002               	goto	i2l5094
 11999                           
 12000                           ; BSR set to: 0
 12001                           ;interrupts.c: 126: {
 12002                           ;interrupts.c: 127: INTCONbits.RBIE = 1;
 12003  001918  86F2               	bsf	intcon,3,c	;volatile
 12004  00191A  D000               	goto	i2l5094
 12005  00191C                     i2l5094:
 12006                           
 12007                           ; BSR set to: 0
 12008                           ;interrupts.c: 128: }
 12009                           ;interrupts.c: 129: IRrawCodeNum = 0;
 12010  00191C  0E00               	movlw	0
 12011  00191E  6E3B               	movwf	_IRrawCodeNum,c
 12012                           
 12013                           ; BSR set to: 0
 12014                           ;interrupts.c: 131: INTCONbits.TMR0IF = 0;
 12015  001920  94F2               	bcf	intcon,2,c	;volatile
 12016  001922  D000               	goto	i2l5098
 12017  001924                     i2l5098:
 12018                           
 12019                           ;interrupts.c: 132: }
 12020                           ;interrupts.c: 133: if(PIR1bits.TMR2IF)
 12021  001924  A29E               	btfss	3998,1,c	;volatile
 12022  001926  D0BB               	goto	i2l561
 12023                           
 12024                           ;interrupts.c: 134: {
 12025                           ;interrupts.c: 137: Timer2_Postscaler++;
 12026  001928  2A43               	incf	_Timer2_Postscaler,f,c
 12027                           
 12028                           ;interrupts.c: 138: if(Timer2_Postscaler > 1)
 12029  00192A  0E01               	movlw	1
 12030  00192C  6443               	cpfsgt	_Timer2_Postscaler,c
 12031  00192E  D0B1               	goto	i2l5254
 12032                           
 12033                           ;interrupts.c: 139: {
 12034                           ;interrupts.c: 140: Timer2_Postscaler = 0;
 12035  001930  0E00               	movlw	0
 12036  001932  6E43               	movwf	_Timer2_Postscaler,c
 12037                           
 12038                           ;interrupts.c: 141: if(RFsendCode[RFcodeBit] != 99)
 12039  001934  503D               	movf	_RFcodeBit,w,c
 12040  001936  0D01               	mullw	1
 12041  001938  0E25               	movlw	low _RFsendCode
 12042  00193A  24F3               	addwf	prodl,w,c
 12043  00193C  6ED9               	movwf	fsr2l,c
 12044  00193E  0E00               	movlw	high _RFsendCode
 12045  001940  20F4               	addwfc	prodh,w,c
 12046  001942  6EDA               	movwf	fsr2h,c
 12047  001944  0E63               	movlw	99
 12048  001946  18DE               	xorwf	postinc2,w,c
 12049  001948  B4D8               	btfsc	status,2,c
 12050  00194A  D081               	goto	i2l5220
 12051                           
 12052                           ;interrupts.c: 142: {
 12053                           ;interrupts.c: 144: if(RFsendFlag)
 12054  00194C  503F               	movf	_RFsendFlag,w,c	;volatile
 12055  00194E  B4D8               	btfsc	status,2,c
 12056  001950  D0A0               	goto	i2l5254
 12057                           
 12058                           ;interrupts.c: 145: {
 12059                           ;interrupts.c: 146: if(RFsendCode[RFcodeBit] == 0)
 12060  001952  503D               	movf	_RFcodeBit,w,c
 12061  001954  0D01               	mullw	1
 12062  001956  0E25               	movlw	low _RFsendCode
 12063  001958  24F3               	addwf	prodl,w,c
 12064  00195A  6ED9               	movwf	fsr2l,c
 12065  00195C  0E00               	movlw	high _RFsendCode
 12066  00195E  20F4               	addwfc	prodh,w,c
 12067  001960  6EDA               	movwf	fsr2h,c
 12068  001962  50DF               	movf	indf2,w,c
 12069  001964  A4D8               	btfss	status,2,c
 12070  001966  D025               	goto	i2l5146
 12071                           
 12072                           ;interrupts.c: 147: {
 12073                           ;interrupts.c: 148: if(RFcodePlace == 1)
 12074  001968  043E               	decf	_RFcodePlace,w,c
 12075  00196A  A4D8               	btfss	status,2,c
 12076  00196C  D007               	goto	i2l5120
 12077  00196E  D072               	goto	i2l5222
 12078  001970                     i2l5116:
 12079                           
 12080                           ;interrupts.c: 151: (PR2 = 8);
 12081  001970  0E08               	movlw	8
 12082  001972  6ECB               	movwf	4043,c	;volatile
 12083  001974  D071               	goto	i2l5226
 12084  001976                     L2:
 12085                           
 12086                           ;interrupts.c: 153: (TMR2 = 0);
 12087  001976  0E00               	movlw	0
 12088  001978  6ECC               	movwf	4044,c	;volatile
 12089                           
 12090                           ;interrupts.c: 154: }
 12091  00197A  D08B               	goto	i2l5254
 12092  00197C                     i2l5120:
 12093                           
 12094                           ;interrupts.c: 155: else if(RFcodePlace == 2)
 12095  00197C  0E02               	movlw	2
 12096  00197E  183E               	xorwf	_RFcodePlace,w,c
 12097  001980  A4D8               	btfss	status,2,c
 12098  001982  D004               	goto	i2l5128
 12099  001984  D04B               	goto	L3
 12100                           
 12101                           ;interrupts.c: 156: {
 12102                           ;interrupts.c: 157: (LATC &= ~0x20);
 12103  001986  D024               	goto	i2l5152
 12104  001988                     i2l5126:
 12105                           
 12106                           ;interrupts.c: 159: RFcodePlace++;
 12107  001988  2A3E               	incf	_RFcodePlace,f,c
 12108                           
 12109                           ;interrupts.c: 160: }
 12110  00198A  D083               	goto	i2l5254
 12111  00198C                     i2l5128:
 12112                           
 12113                           ;interrupts.c: 161: else if(RFcodePlace == 3)
 12114  00198C  0E03               	movlw	3
 12115  00198E  183E               	xorwf	_RFcodePlace,w,c
 12116  001990  A4D8               	btfss	status,2,c
 12117  001992  D002               	goto	i2l5136
 12118  001994  D05F               	goto	i2l5222
 12119                           
 12120                           ;interrupts.c: 162: {
 12121                           ;interrupts.c: 163: (LATC |= 0x20);
 12122  001996  D7EC               	goto	i2l5116
 12123  001998                     i2l5136:
 12124                           
 12125                           ;interrupts.c: 168: else if(RFcodePlace == 4)
 12126  001998  0E04               	movlw	4
 12127  00199A  183E               	xorwf	_RFcodePlace,w,c
 12128  00199C  A4D8               	btfss	status,2,c
 12129  00199E  D053               	goto	i2l5218
 12130                           
 12131                           ;interrupts.c: 169: {
 12132                           ;interrupts.c: 170: (LATC &= ~0x20);
 12133  0019A0  9A8B               	bcf	3979,5,c	;volatile
 12134                           
 12135                           ;interrupts.c: 171: (PR2 = 24);
 12136  0019A2  0E18               	movlw	24
 12137  0019A4  6ECB               	movwf	4043,c	;volatile
 12138                           
 12139                           ;interrupts.c: 172: RFcodePlace = 1;
 12140  0019A6  0E01               	movlw	1
 12141  0019A8  6E3E               	movwf	_RFcodePlace,c
 12142                           
 12143                           ;interrupts.c: 173: RFcodeBit++;
 12144  0019AA  2A3D               	incf	_RFcodeBit,f,c
 12145                           
 12146                           ;interrupts.c: 174: }
 12147  0019AC  D072               	goto	i2l5254
 12148  0019AE  D04B               	goto	i2l5218
 12149                           
 12150                           ;interrupts.c: 180: }
 12151                           ;interrupts.c: 181: }
 12152                           
 12153                           ;interrupts.c: 179: RFsendFlag = 0;
 12154                           
 12155                           ;interrupts.c: 175: else
 12156                           ;interrupts.c: 176: {
 12157                           ;interrupts.c: 178: RFcodePlace = 1;
 12158  0019B0  D070               	goto	i2l5254
 12159  0019B2                     i2l5146:
 12160                           
 12161                           ;interrupts.c: 182: else if(RFsendCode[RFcodeBit] == 1)
 12162  0019B2  503D               	movf	_RFcodeBit,w,c
 12163  0019B4  0D01               	mullw	1
 12164  0019B6  0E25               	movlw	low _RFsendCode
 12165  0019B8  24F3               	addwf	prodl,w,c
 12166  0019BA  6ED9               	movwf	fsr2l,c
 12167  0019BC  0E00               	movlw	high _RFsendCode
 12168  0019BE  20F4               	addwfc	prodh,w,c
 12169  0019C0  6EDA               	movwf	fsr2h,c
 12170  0019C2  04DE               	decf	postinc2,w,c
 12171  0019C4  A4D8               	btfss	status,2,c
 12172  0019C6  D021               	goto	i2l5184
 12173                           
 12174                           ;interrupts.c: 183: {
 12175                           ;interrupts.c: 184: if(RFcodePlace == 1)
 12176  0019C8  043E               	decf	_RFcodePlace,w,c
 12177  0019CA  A4D8               	btfss	status,2,c
 12178  0019CC  D004               	goto	i2l5156
 12179  0019CE  D00D               	goto	i2l5166
 12180  0019D0                     i2l5152:
 12181                           
 12182                           ;interrupts.c: 187: (PR2 = 24);
 12183  0019D0  0E18               	movlw	24
 12184  0019D2  6ECB               	movwf	4043,c	;volatile
 12185  0019D4  D7D9               	goto	i2l5126
 12186  0019D6                     i2l5156:
 12187                           
 12188                           ;interrupts.c: 190: else if(RFcodePlace == 2)
 12189  0019D6  0E02               	movlw	2
 12190  0019D8  183E               	xorwf	_RFcodePlace,w,c
 12191  0019DA  A4D8               	btfss	status,2,c
 12192  0019DC  D002               	goto	i2l5164
 12193                           
 12194                           ;interrupts.c: 191: {
 12195                           ;interrupts.c: 192: (LATC &= ~0x20);
 12196  0019DE  9A8B               	bcf	3979,5,c	;volatile
 12197  0019E0  D7C7               	goto	i2l5116
 12198  0019E2                     i2l5164:
 12199                           
 12200                           ;interrupts.c: 197: else if(RFcodePlace == 3)
 12201  0019E2  0E03               	movlw	3
 12202  0019E4  183E               	xorwf	_RFcodePlace,w,c
 12203  0019E6  A4D8               	btfss	status,2,c
 12204  0019E8  D003               	goto	i2l5172
 12205  0019EA                     i2l5166:
 12206                           
 12207                           ;interrupts.c: 198: {
 12208                           ;interrupts.c: 199: (LATC |= 0x20);
 12209  0019EA  8A8B               	bsf	3979,5,c	;volatile
 12210  0019EC  D7F1               	goto	i2l5152
 12211                           
 12212                           ;interrupts.c: 200: (PR2 = 24);
 12213  0019EE  D7CC               	goto	i2l5126
 12214  0019F0                     i2l5172:
 12215                           
 12216                           ;interrupts.c: 203: else if(RFcodePlace == 4)
 12217  0019F0  0E04               	movlw	4
 12218  0019F2  183E               	xorwf	_RFcodePlace,w,c
 12219  0019F4  A4D8               	btfss	status,2,c
 12220  0019F6  D027               	goto	i2l5218
 12221                           
 12222                           ;interrupts.c: 204: {
 12223                           ;interrupts.c: 205: (LATC &= ~0x20);
 12224  0019F8  9A8B               	bcf	3979,5,c	;volatile
 12225                           
 12226                           ;interrupts.c: 206: (PR2 = 8);
 12227  0019FA  0E08               	movlw	8
 12228  0019FC  6ECB               	movwf	4043,c	;volatile
 12229                           
 12230                           ;interrupts.c: 207: RFcodePlace = 1;
 12231  0019FE  0E01               	movlw	1
 12232  001A00  6E3E               	movwf	_RFcodePlace,c
 12233                           
 12234                           ;interrupts.c: 208: RFcodeBit++;
 12235  001A02  2A3D               	incf	_RFcodeBit,f,c
 12236  001A04  D7B8               	goto	L2
 12237                           
 12238                           ;interrupts.c: 210: }
 12239                           
 12240                           ;interrupts.c: 209: (TMR2 = 0);
 12241  001A06  D01F               	goto	i2l5218
 12242                           
 12243                           ;interrupts.c: 216: }
 12244                           ;interrupts.c: 217: }
 12245                           
 12246                           ;interrupts.c: 215: RFsendFlag = 0;
 12247                           
 12248                           ;interrupts.c: 211: else
 12249                           ;interrupts.c: 212: {
 12250                           ;interrupts.c: 214: RFcodePlace = 1;
 12251  001A08  D044               	goto	i2l5254
 12252  001A0A                     i2l5184:
 12253                           
 12254                           ;interrupts.c: 218: else
 12255                           ;interrupts.c: 219: {
 12256                           ;interrupts.c: 221: if(RFcodePlace == 1)
 12257  001A0A  043E               	decf	_RFcodePlace,w,c
 12258  001A0C  A4D8               	btfss	status,2,c
 12259  001A0E  D002               	goto	i2l5192
 12260  001A10  D021               	goto	i2l5222
 12261                           
 12262                           ;interrupts.c: 222: {
 12263                           ;interrupts.c: 223: (LATC |= 0x20);
 12264  001A12  D7AE               	goto	i2l5116
 12265  001A14                     i2l5192:
 12266                           
 12267                           ;interrupts.c: 228: else if(RFcodePlace == 2)
 12268  001A14  0E02               	movlw	2
 12269  001A16  183E               	xorwf	_RFcodePlace,w,c
 12270  001A18  A4D8               	btfss	status,2,c
 12271  001A1A  D003               	goto	i2l5200
 12272  001A1C                     L3:
 12273                           
 12274                           ;interrupts.c: 229: {
 12275                           ;interrupts.c: 230: (LATC &= ~0x20);
 12276  001A1C  9A8B               	bcf	3979,5,c	;volatile
 12277  001A1E  D7D8               	goto	i2l5152
 12278                           
 12279                           ;interrupts.c: 231: (PR2 = 24);
 12280  001A20  D7B3               	goto	i2l5126
 12281  001A22                     i2l5200:
 12282                           
 12283                           ;interrupts.c: 234: else if(RFcodePlace == 3)
 12284  001A22  0E03               	movlw	3
 12285  001A24  183E               	xorwf	_RFcodePlace,w,c
 12286  001A26  A4D8               	btfss	status,2,c
 12287  001A28  D003               	goto	i2l5208
 12288  001A2A  D7DF               	goto	i2l5166
 12289                           
 12290                           ;interrupts.c: 235: {
 12291                           ;interrupts.c: 236: (LATC |= 0x20);
 12292  001A2C  D7D1               	goto	i2l5152
 12293                           
 12294                           ;interrupts.c: 237: (PR2 = 24);
 12295  001A2E  D7AC               	goto	i2l5126
 12296  001A30                     i2l5208:
 12297                           
 12298                           ;interrupts.c: 240: else if(RFcodePlace == 4)
 12299  001A30  0E04               	movlw	4
 12300  001A32  183E               	xorwf	_RFcodePlace,w,c
 12301  001A34  A4D8               	btfss	status,2,c
 12302  001A36  D007               	goto	i2l5218
 12303                           
 12304                           ;interrupts.c: 241: {
 12305                           ;interrupts.c: 242: (LATC &= ~0x20);
 12306  001A38  9A8B               	bcf	3979,5,c	;volatile
 12307                           
 12308                           ;interrupts.c: 243: (PR2 = 8);
 12309  001A3A  0E08               	movlw	8
 12310  001A3C  6ECB               	movwf	4043,c	;volatile
 12311                           
 12312                           ;interrupts.c: 244: RFcodePlace = 1;
 12313  001A3E  0E01               	movlw	1
 12314  001A40  6E3E               	movwf	_RFcodePlace,c
 12315                           
 12316                           ;interrupts.c: 245: RFcodeBit++;
 12317  001A42  2A3D               	incf	_RFcodeBit,f,c
 12318  001A44  D798               	goto	L2
 12319  001A46                     i2l5218:
 12320                           
 12321                           ;interrupts.c: 248: else
 12322                           ;interrupts.c: 249: {
 12323                           ;interrupts.c: 251: RFcodePlace = 1;
 12324  001A46  0E01               	movlw	1
 12325  001A48  6E3E               	movwf	_RFcodePlace,c
 12326  001A4A  D020               	goto	i2l5252
 12327                           
 12328                           ;interrupts.c: 253: }
 12329                           ;interrupts.c: 254: }
 12330                           ;interrupts.c: 255: }
 12331                           ;interrupts.c: 256: }
 12332                           
 12333                           ;interrupts.c: 252: RFsendFlag = 0;
 12334  001A4C  D022               	goto	i2l5254
 12335  001A4E                     i2l5220:
 12336                           
 12337                           ;interrupts.c: 257: else
 12338                           ;interrupts.c: 258: {
 12339                           ;interrupts.c: 260: if(RFcodePlace == 1)
 12340  001A4E  043E               	decf	_RFcodePlace,w,c
 12341  001A50  A4D8               	btfss	status,2,c
 12342  001A52  D004               	goto	i2l5228
 12343  001A54                     i2l5222:
 12344                           
 12345                           ;interrupts.c: 261: {
 12346                           ;interrupts.c: 262: (LATC |= 0x20);
 12347  001A54  8A8B               	bsf	3979,5,c	;volatile
 12348  001A56  D78C               	goto	i2l5116
 12349  001A58                     i2l5226:
 12350                           
 12351                           ;interrupts.c: 264: RFcodePlace++;
 12352  001A58  2A3E               	incf	_RFcodePlace,f,c
 12353  001A5A  D78D               	goto	L2
 12354  001A5C                     i2l5228:
 12355                           
 12356                           ;interrupts.c: 267: else if( RFcodePlace == 2)
 12357  001A5C  0E02               	movlw	2
 12358  001A5E  183E               	xorwf	_RFcodePlace,w,c
 12359  001A60  A4D8               	btfss	status,2,c
 12360  001A62  D00D               	goto	i2l5242
 12361                           
 12362                           ;interrupts.c: 268: {
 12363                           ;interrupts.c: 269: (LATC &= ~0x20);
 12364  001A64  9A8B               	bcf	3979,5,c	;volatile
 12365                           
 12366                           ;interrupts.c: 270: (PR2 = 240);
 12367  001A66  0EF0               	movlw	240
 12368  001A68  6ECB               	movwf	4043,c	;volatile
 12369                           
 12370                           ;interrupts.c: 271: RFcodePlace++;
 12371  001A6A  2A3E               	incf	_RFcodePlace,f,c
 12372                           
 12373                           ;interrupts.c: 272: Sendcount--;
 12374  001A6C  0641               	decf	_Sendcount,f,c	;volatile
 12375                           
 12376                           ;interrupts.c: 273: if(Sendcount)
 12377  001A6E  5041               	movf	_Sendcount,w,c	;volatile
 12378  001A70  B4D8               	btfsc	status,2,c
 12379  001A72  D00F               	goto	i2l5254
 12380                           
 12381                           ;interrupts.c: 274: {
 12382                           ;interrupts.c: 276: RFcodePlace = 1;
 12383  001A74  0E01               	movlw	1
 12384  001A76  6E3E               	movwf	_RFcodePlace,c
 12385                           
 12386                           ;interrupts.c: 277: RFcodeBit = 0;
 12387  001A78  0E00               	movlw	0
 12388  001A7A  6E3D               	movwf	_RFcodeBit,c
 12389                           
 12390                           ;interrupts.c: 278: }
 12391                           ;interrupts.c: 279: }
 12392  001A7C  D00A               	goto	i2l5254
 12393  001A7E                     i2l5242:
 12394                           
 12395                           ;interrupts.c: 280: else
 12396                           ;interrupts.c: 281: {
 12397                           ;interrupts.c: 283: ResetTimer3();
 12398  001A7E  ECFA  F01C         	call	_ResetTimer3	;wreg free
 12399                           
 12400                           ;interrupts.c: 284: PIR2bits.TMR3IF = 0;
 12401  001A82  92A1               	bcf	4001,1,c	;volatile
 12402                           
 12403                           ;interrupts.c: 285: Timer3_Postscaler = 0;
 12404  001A84  0E00               	movlw	0
 12405  001A86  6E44               	movwf	_Timer3_Postscaler,c
 12406                           
 12407                           ;interrupts.c: 286: (T3CONbits.TMR3ON = 1);
 12408  001A88  80B1               	bsf	4017,0,c	;volatile
 12409                           
 12410                           ;interrupts.c: 287: (T2CONbits.TMR2ON = 0);
 12411  001A8A  94CA               	bcf	4042,2,c	;volatile
 12412  001A8C                     i2l5252:
 12413                           
 12414                           ;interrupts.c: 288: RFsendFlag = 0;
 12415  001A8C  0E00               	movlw	0
 12416  001A8E  6E3F               	movwf	_RFsendFlag,c	;volatile
 12417  001A90  D000               	goto	i2l5254
 12418  001A92                     i2l5254:
 12419                           
 12420                           ;interrupts.c: 289: }
 12421                           ;interrupts.c: 290: }
 12422                           ;interrupts.c: 291: }
 12423                           ;interrupts.c: 292: PIR1bits.TMR2IF = 0;
 12424  001A92  929E               	bcf	3998,1,c	;volatile
 12425                           
 12426                           ;interrupts.c: 293: if(RFsendFlag)
 12427  001A94  503F               	movf	_RFsendFlag,w,c	;volatile
 12428  001A96  B4D8               	btfsc	status,2,c
 12429  001A98  D002               	goto	i2l561
 12430                           
 12431                           ;interrupts.c: 294: {
 12432                           ;interrupts.c: 296: (T2CONbits.TMR2ON = 1);
 12433  001A9A  84CA               	bsf	4042,2,c	;volatile
 12434  001A9C  D000               	goto	i2l561
 12435  001A9E                     i2l561:
 12436                           
 12437                           ;interrupts.c: 297: }
 12438                           ;interrupts.c: 298: }
 12439                           ;interrupts.c: 299: if(PIR2bits.TMR3IF)
 12440  001A9E  A2A1               	btfss	4001,1,c	;volatile
 12441  001AA0  D00F               	goto	i2l600
 12442                           
 12443                           ;interrupts.c: 300: {
 12444                           ;interrupts.c: 301: (T3CONbits.TMR3ON = 0);
 12445  001AA2  90B1               	bcf	4017,0,c	;volatile
 12446                           
 12447                           ;interrupts.c: 302: if(Timer3_Postscaler < 6)
 12448  001AA4  0E06               	movlw	6
 12449  001AA6  6044               	cpfslt	_Timer3_Postscaler,c
 12450  001AA8  D005               	goto	i2l5270
 12451                           
 12452                           ;interrupts.c: 303: {
 12453                           ;interrupts.c: 304: ResetTimer3();
 12454  001AAA  ECFA  F01C         	call	_ResetTimer3	;wreg free
 12455                           
 12456                           ;interrupts.c: 305: (T3CONbits.TMR3ON = 1);
 12457  001AAE  80B1               	bsf	4017,0,c	;volatile
 12458                           
 12459                           ;interrupts.c: 306: Timer3_Postscaler++;
 12460  001AB0  2A44               	incf	_Timer3_Postscaler,f,c
 12461                           
 12462                           ;interrupts.c: 307: }
 12463  001AB2  D004               	goto	i2l5272
 12464  001AB4                     i2l5270:
 12465                           
 12466                           ;interrupts.c: 308: else
 12467                           ;interrupts.c: 309: {
 12468                           ;interrupts.c: 314: Sent = 1;
 12469  001AB4  0E01               	movlw	1
 12470  001AB6  0100               	movlb	0	; () banked
 12471  001AB8  6FD4               	movwf	_Sent& (0+255),b	;volatile
 12472  001ABA  D000               	goto	i2l5272
 12473  001ABC                     i2l5272:
 12474                           
 12475                           ;interrupts.c: 315: }
 12476                           ;interrupts.c: 316: PIR2bits.TMR3IF = 0;
 12477  001ABC  92A1               	bcf	4001,1,c	;volatile
 12478                           
 12479                           ;interrupts.c: 317: }
 12480  001ABE  D001               	goto	i2l603
 12481  001AC0                     i2l600:
 12482                           
 12483                           ;interrupts.c: 318: else
 12484                           ;interrupts.c: 319: {
 12485                           ;interrupts.c: 321: __nop();
 12486  001AC0  F000               	nop	
 12487  001AC2                     i2l603:
 12488                           
 12489                           ;interrupts.c: 322: }
 12490                           ;interrupts.c: 324: INTCONbits.GIE = 1;
 12491  001AC2  8EF2               	bsf	intcon,7,c	;volatile
 12492  001AC4  C071  FFF5         	movff	??_high_isr+17,tablat
 12493  001AC8  C070  FFF8         	movff	??_high_isr+16,tblptru
 12494  001ACC  C06F  FFF7         	movff	??_high_isr+15,tblptrh
 12495  001AD0  C06E  FFF6         	movff	??_high_isr+14,tblptrl
 12496  001AD4  C06D  FFF4         	movff	??_high_isr+13,prodh
 12497  001AD8  C06C  FFF3         	movff	??_high_isr+12,prodl
 12498  001ADC  C06B  FFDA         	movff	??_high_isr+11,fsr2h
 12499  001AE0  C06A  FFD9         	movff	??_high_isr+10,fsr2l
 12500  001AE4  C069  FFE2         	movff	??_high_isr+9,fsr1h
 12501  001AE8  C068  FFE1         	movff	??_high_isr+8,fsr1l
 12502  001AEC  C067  FFEA         	movff	??_high_isr+7,fsr0h
 12503  001AF0  C066  FFE9         	movff	??_high_isr+6,fsr0l
 12504  001AF4  C065  FFFB         	movff	??_high_isr+5,pclatu
 12505  001AF8  C064  FFFA         	movff	??_high_isr+4,pclath
 12506  001AFC  0011               	retfie		f
 12507  001AFE                     __end_of_high_isr:
 12508                           	opt stack 0
 12509                           pclatu	equ	0xFFB
 12510                           pclath	equ	0xFFA
 12511                           tblptru	equ	0xFF8
 12512                           tblptrh	equ	0xFF7
 12513                           tblptrl	equ	0xFF6
 12514                           tablat	equ	0xFF5
 12515                           prodh	equ	0xFF4
 12516                           prodl	equ	0xFF3
 12517                           intcon	equ	0xFF2
 12518                           intcon2	equ	0xFF1
 12519                           indf0	equ	0xFEF
 12520                           postinc0	equ	0xFEE
 12521                           plusw0	equ	0xFEB
 12522                           fsr0h	equ	0xFEA
 12523                           fsr0l	equ	0xFE9
 12524                           wreg	equ	0xFE8
 12525                           indf1	equ	0xFE7
 12526                           postdec1	equ	0xFE5
 12527                           fsr1h	equ	0xFE2
 12528                           fsr1l	equ	0xFE1
 12529                           bsr	equ	0xFE0
 12530                           indf2	equ	0xFDF
 12531                           postinc2	equ	0xFDE
 12532                           postdec2	equ	0xFDD
 12533                           plusw2	equ	0xFDB
 12534                           fsr2h	equ	0xFDA
 12535                           fsr2l	equ	0xFD9
 12536                           status	equ	0xFD8
 12537                           
 12538 ;; *************** function i2_ResetTimer0 *****************
 12539 ;; Defined at:
 12540 ;;		line 77 in file "Timer.c"
 12541 ;; Parameters:    Size  Location     Type
 12542 ;;		None
 12543 ;; Auto vars:     Size  Location     Type
 12544 ;;		None
 12545 ;; Return value:  Size  Location     Type
 12546 ;;		None               void
 12547 ;; Registers used:
 12548 ;;		wreg, status,2
 12549 ;; Tracked objects:
 12550 ;;		On entry : 0/0
 12551 ;;		On exit  : 0/0
 12552 ;;		Unchanged: 0/0
 12553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12558 ;;Total ram usage:        0 bytes
 12559 ;; Hardware stack levels used:    1
 12560 ;; This function calls:
 12561 ;;		Nothing
 12562 ;; This function is called by:
 12563 ;;		_high_isr
 12564 ;; This function uses a non-reentrant model
 12565 ;;
 12566                           
 12567                           	psect	text68
 12568  0039EA                     __ptext68:
 12569                           	opt stack 0
 12570  0039EA                     i2_ResetTimer0:
 12571                           	opt stack 19
 12572                           
 12573                           ;Timer.c: 83: TMR0H = 0;
 12574                           
 12575                           ;incstack = 0
 12576  0039EA  0E00               	movlw	0
 12577  0039EC  6ED7               	movwf	4055,c	;volatile
 12578                           
 12579                           ;Timer.c: 84: TMR0L = 2;
 12580  0039EE  0E02               	movlw	2
 12581  0039F0  6ED6               	movwf	4054,c	;volatile
 12582  0039F2  0012               	return		;funcret
 12583  0039F4                     __end_ofi2_ResetTimer0:
 12584                           	opt stack 0
 12585                           pclatu	equ	0xFFB
 12586                           pclath	equ	0xFFA
 12587                           tblptru	equ	0xFF8
 12588                           tblptrh	equ	0xFF7
 12589                           tblptrl	equ	0xFF6
 12590                           tablat	equ	0xFF5
 12591                           prodh	equ	0xFF4
 12592                           prodl	equ	0xFF3
 12593                           intcon	equ	0xFF2
 12594                           intcon2	equ	0xFF1
 12595                           indf0	equ	0xFEF
 12596                           postinc0	equ	0xFEE
 12597                           plusw0	equ	0xFEB
 12598                           fsr0h	equ	0xFEA
 12599                           fsr0l	equ	0xFE9
 12600                           wreg	equ	0xFE8
 12601                           indf1	equ	0xFE7
 12602                           postdec1	equ	0xFE5
 12603                           fsr1h	equ	0xFE2
 12604                           fsr1l	equ	0xFE1
 12605                           bsr	equ	0xFE0
 12606                           indf2	equ	0xFDF
 12607                           postinc2	equ	0xFDE
 12608                           postdec2	equ	0xFDD
 12609                           plusw2	equ	0xFDB
 12610                           fsr2h	equ	0xFDA
 12611                           fsr2l	equ	0xFD9
 12612                           status	equ	0xFD8
 12613                           
 12614 ;; *************** function i2_ReadIRpin *****************
 12615 ;; Defined at:
 12616 ;;		line 92 in file "IR.c"
 12617 ;; Parameters:    Size  Location     Type
 12618 ;;		None
 12619 ;; Auto vars:     Size  Location     Type
 12620 ;;		None
 12621 ;; Return value:  Size  Location     Type
 12622 ;;                  1    wreg      unsigned char 
 12623 ;; Registers used:
 12624 ;;		wreg
 12625 ;; Tracked objects:
 12626 ;;		On entry : 0/0
 12627 ;;		On exit  : 0/0
 12628 ;;		Unchanged: 0/0
 12629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12634 ;;Total ram usage:        0 bytes
 12635 ;; Hardware stack levels used:    1
 12636 ;; This function calls:
 12637 ;;		Nothing
 12638 ;; This function is called by:
 12639 ;;		_high_isr
 12640 ;; This function uses a non-reentrant model
 12641 ;;
 12642                           
 12643                           	psect	text69
 12644  0039B2                     __ptext69:
 12645                           	opt stack 0
 12646  0039B2                     i2_ReadIRpin:
 12647                           	opt stack 19
 12648                           
 12649                           ;IR.c: 95: if((PORTB & 0x10) == 0x10)
 12650                           
 12651                           ;incstack = 0
 12652  0039B2  A881               	btfss	3969,4,c	;volatile
 12653  0039B4  D002               	goto	i2l4670
 12654                           
 12655                           ;IR.c: 96: {
 12656                           ;IR.c: 97: return (1);
 12657  0039B6  0E01               	movlw	1
 12658                           
 12659                           ;IR.c: 98: }
 12660  0039B8  0012               	return	
 12661  0039BA                     i2l4670:
 12662                           
 12663                           ;IR.c: 99: else
 12664                           ;IR.c: 100: {
 12665                           ;IR.c: 101: return 0;
 12666  0039BA  0E00               	movlw	0
 12667  0039BC  0012               	return	
 12668  0039BE  0012               	return		;funcret
 12669  0039C0                     __end_ofi2_ReadIRpin:
 12670                           	opt stack 0
 12671                           pclatu	equ	0xFFB
 12672                           pclath	equ	0xFFA
 12673                           tblptru	equ	0xFF8
 12674                           tblptrh	equ	0xFF7
 12675                           tblptrl	equ	0xFF6
 12676                           tablat	equ	0xFF5
 12677                           prodh	equ	0xFF4
 12678                           prodl	equ	0xFF3
 12679                           intcon	equ	0xFF2
 12680                           intcon2	equ	0xFF1
 12681                           indf0	equ	0xFEF
 12682                           postinc0	equ	0xFEE
 12683                           plusw0	equ	0xFEB
 12684                           fsr0h	equ	0xFEA
 12685                           fsr0l	equ	0xFE9
 12686                           wreg	equ	0xFE8
 12687                           indf1	equ	0xFE7
 12688                           postdec1	equ	0xFE5
 12689                           fsr1h	equ	0xFE2
 12690                           fsr1l	equ	0xFE1
 12691                           bsr	equ	0xFE0
 12692                           indf2	equ	0xFDF
 12693                           postinc2	equ	0xFDE
 12694                           postdec2	equ	0xFDD
 12695                           plusw2	equ	0xFDB
 12696                           fsr2h	equ	0xFDA
 12697                           fsr2l	equ	0xFD9
 12698                           status	equ	0xFD8
 12699                           
 12700 ;; *************** function _ResetTimer3 *****************
 12701 ;; Defined at:
 12702 ;;		line 156 in file "Timer.c"
 12703 ;; Parameters:    Size  Location     Type
 12704 ;;		None
 12705 ;; Auto vars:     Size  Location     Type
 12706 ;;		None
 12707 ;; Return value:  Size  Location     Type
 12708 ;;		None               void
 12709 ;; Registers used:
 12710 ;;		wreg, status,2
 12711 ;; Tracked objects:
 12712 ;;		On entry : 0/0
 12713 ;;		On exit  : 0/0
 12714 ;;		Unchanged: 0/0
 12715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12720 ;;Total ram usage:        0 bytes
 12721 ;; Hardware stack levels used:    1
 12722 ;; This function calls:
 12723 ;;		Nothing
 12724 ;; This function is called by:
 12725 ;;		_high_isr
 12726 ;; This function uses a non-reentrant model
 12727 ;;
 12728                           
 12729                           	psect	text70
 12730  0039F4                     __ptext70:
 12731                           	opt stack 0
 12732  0039F4                     _ResetTimer3:
 12733                           	opt stack 19
 12734                           
 12735                           ;Timer.c: 162: TMR3H = 0;
 12736                           
 12737                           ;incstack = 0
 12738  0039F4  0E00               	movlw	0
 12739  0039F6  6EB3               	movwf	4019,c	;volatile
 12740                           
 12741                           ;Timer.c: 163: TMR3L = 2;
 12742  0039F8  0E02               	movlw	2
 12743  0039FA  6EB2               	movwf	4018,c	;volatile
 12744  0039FC  0012               	return		;funcret
 12745  0039FE                     __end_of_ResetTimer3:
 12746                           	opt stack 0
 12747                           pclatu	equ	0xFFB
 12748                           pclath	equ	0xFFA
 12749                           tblptru	equ	0xFF8
 12750                           tblptrh	equ	0xFF7
 12751                           tblptrl	equ	0xFF6
 12752                           tablat	equ	0xFF5
 12753                           prodh	equ	0xFF4
 12754                           prodl	equ	0xFF3
 12755                           intcon	equ	0xFF2
 12756                           intcon2	equ	0xFF1
 12757                           indf0	equ	0xFEF
 12758                           postinc0	equ	0xFEE
 12759                           plusw0	equ	0xFEB
 12760                           fsr0h	equ	0xFEA
 12761                           fsr0l	equ	0xFE9
 12762                           wreg	equ	0xFE8
 12763                           indf1	equ	0xFE7
 12764                           postdec1	equ	0xFE5
 12765                           fsr1h	equ	0xFE2
 12766                           fsr1l	equ	0xFE1
 12767                           bsr	equ	0xFE0
 12768                           indf2	equ	0xFDF
 12769                           postinc2	equ	0xFDE
 12770                           postdec2	equ	0xFDD
 12771                           plusw2	equ	0xFDB
 12772                           fsr2h	equ	0xFDA
 12773                           fsr2l	equ	0xFD9
 12774                           status	equ	0xFD8
 12775                           
 12776 ;; *************** function _IRrawToNEC *****************
 12777 ;; Defined at:
 12778 ;;		line 110 in file "IR.c"
 12779 ;; Parameters:    Size  Location     Type
 12780 ;;  Raw             2   19[COMRAM] PTR unsigned int 
 12781 ;;		 -> IRRawCode(144), 
 12782 ;;  NEC             2   21[COMRAM] PTR unsigned long 
 12783 ;;		 -> IR_NEC(4), 
 12784 ;;  Invert          1   23[COMRAM] unsigned char 
 12785 ;; Auto vars:     Size  Location     Type
 12786 ;;  NECtemp         4   26[COMRAM] unsigned long 
 12787 ;;  StartBit        1   32[COMRAM] unsigned char 
 12788 ;;  i               1   31[COMRAM] unsigned char 
 12789 ;;  first           1   30[COMRAM] unsigned char 
 12790 ;; Return value:  Size  Location     Type
 12791 ;;                  1    wreg      unsigned char 
 12792 ;; Registers used:
 12793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12794 ;; Tracked objects:
 12795 ;;		On entry : 0/0
 12796 ;;		On exit  : 0/0
 12797 ;;		Unchanged: 0/0
 12798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12799 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12800 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12801 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12802 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12803 ;;Total ram usage:       14 bytes
 12804 ;; Hardware stack levels used:    1
 12805 ;; This function calls:
 12806 ;;		Nothing
 12807 ;; This function is called by:
 12808 ;;		_high_isr
 12809 ;; This function uses a non-reentrant model
 12810 ;;
 12811                           
 12812                           	psect	text71
 12813  001456                     __ptext71:
 12814                           	opt stack 0
 12815  001456                     _IRrawToNEC:
 12816                           	opt stack 19
 12817                           
 12818                           ;IR.c: 138: unsigned char i;
 12819                           ;IR.c: 139: unsigned char first =0;
 12820                           
 12821                           ;incstack = 0
 12822  001456  0E00               	movlw	0
 12823  001458  6E1F               	movwf	IRrawToNEC@first,c
 12824                           
 12825                           ;IR.c: 140: unsigned char StartBit=72;
 12826  00145A  0E48               	movlw	72
 12827  00145C  6E21               	movwf	IRrawToNEC@StartBit,c
 12828                           
 12829                           ;IR.c: 141: unsigned long NECtemp = 0;
 12830  00145E  0E00               	movlw	0
 12831  001460  6E1B               	movwf	IRrawToNEC@NECtemp,c
 12832  001462  0E00               	movlw	0
 12833  001464  6E1C               	movwf	IRrawToNEC@NECtemp+1,c
 12834  001466  0E00               	movlw	0
 12835  001468  6E1D               	movwf	IRrawToNEC@NECtemp+2,c
 12836  00146A  0E00               	movlw	0
 12837  00146C  6E1E               	movwf	IRrawToNEC@NECtemp+3,c
 12838                           
 12839                           ;IR.c: 144: for (i =0; i < 72; i++)
 12840  00146E  0E00               	movlw	0
 12841  001470  6E20               	movwf	IRrawToNEC@i,c
 12842  001472                     i2l4494:
 12843  001472  0E47               	movlw	71
 12844  001474  6420               	cpfsgt	IRrawToNEC@i,c
 12845  001476  D001               	goto	i2l4498
 12846  001478  D041               	goto	i2l4518
 12847  00147A                     i2l4498:
 12848                           
 12849                           ;IR.c: 145: {
 12850                           ;IR.c: 146: if(Raw[i] >= 45000 && Raw[i] <= 50000 )
 12851  00147A  5020               	movf	IRrawToNEC@i,w,c
 12852  00147C  0D02               	mullw	2
 12853  00147E  50F3               	movf	prodl,w,c
 12854  001480  2414               	addwf	IRrawToNEC@Raw,w,c
 12855  001482  6ED9               	movwf	fsr2l,c
 12856  001484  50F4               	movf	prodh,w,c
 12857  001486  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 12858  001488  6EDA               	movwf	fsr2h,c
 12859  00148A  0EC8               	movlw	200
 12860  00148C  5CDE               	subwf	postinc2,w,c
 12861  00148E  0EAF               	movlw	175
 12862  001490  58DE               	subwfb	postinc2,w,c
 12863  001492  A0D8               	btfss	status,0,c
 12864  001494  D011               	goto	i2l4508
 12865  001496  5020               	movf	IRrawToNEC@i,w,c
 12866  001498  0D02               	mullw	2
 12867  00149A  50F3               	movf	prodl,w,c
 12868  00149C  2414               	addwf	IRrawToNEC@Raw,w,c
 12869  00149E  6ED9               	movwf	fsr2l,c
 12870  0014A0  50F4               	movf	prodh,w,c
 12871  0014A2  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 12872  0014A4  6EDA               	movwf	fsr2h,c
 12873  0014A6  0E51               	movlw	81
 12874  0014A8  5CDE               	subwf	postinc2,w,c
 12875  0014AA  0EC3               	movlw	195
 12876  0014AC  58DE               	subwfb	postinc2,w,c
 12877  0014AE  B0D8               	btfsc	status,0,c
 12878  0014B0  D003               	goto	i2l4508
 12879                           
 12880                           ;IR.c: 147: {
 12881                           ;IR.c: 149: return 2;
 12882  0014B2  0E02               	movlw	2
 12883  0014B4  0012               	return	
 12884                           
 12885                           ;IR.c: 150: }
 12886  0014B6  D020               	goto	i2l4514
 12887  0014B8                     i2l4508:
 12888                           
 12889                           ;IR.c: 151: else if(Raw[i] >= 4000 && Raw[i] <= 5000 )
 12890  0014B8  5020               	movf	IRrawToNEC@i,w,c
 12891  0014BA  0D02               	mullw	2
 12892  0014BC  50F3               	movf	prodl,w,c
 12893  0014BE  2414               	addwf	IRrawToNEC@Raw,w,c
 12894  0014C0  6ED9               	movwf	fsr2l,c
 12895  0014C2  50F4               	movf	prodh,w,c
 12896  0014C4  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 12897  0014C6  6EDA               	movwf	fsr2h,c
 12898  0014C8  0EA0               	movlw	160
 12899  0014CA  5CDE               	subwf	postinc2,w,c
 12900  0014CC  0E0F               	movlw	15
 12901  0014CE  58DE               	subwfb	postinc2,w,c
 12902  0014D0  A0D8               	btfss	status,0,c
 12903  0014D2  D012               	goto	i2l4514
 12904  0014D4  5020               	movf	IRrawToNEC@i,w,c
 12905  0014D6  0D02               	mullw	2
 12906  0014D8  50F3               	movf	prodl,w,c
 12907  0014DA  2414               	addwf	IRrawToNEC@Raw,w,c
 12908  0014DC  6ED9               	movwf	fsr2l,c
 12909  0014DE  50F4               	movf	prodh,w,c
 12910  0014E0  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 12911  0014E2  6EDA               	movwf	fsr2h,c
 12912  0014E4  0E89               	movlw	137
 12913  0014E6  5CDE               	subwf	postinc2,w,c
 12914  0014E8  0E13               	movlw	19
 12915  0014EA  58DE               	subwfb	postinc2,w,c
 12916  0014EC  B0D8               	btfsc	status,0,c
 12917  0014EE  D004               	goto	i2l4514
 12918                           
 12919                           ;IR.c: 152: {
 12920                           ;IR.c: 154: StartBit = i;
 12921  0014F0  C020  F021         	movff	IRrawToNEC@i,IRrawToNEC@StartBit
 12922                           
 12923                           ;IR.c: 155: break;
 12924  0014F4  D003               	goto	i2l4518
 12925  0014F6  D000               	goto	i2l4514
 12926  0014F8                     i2l4514:
 12927  0014F8  2A20               	incf	IRrawToNEC@i,f,c
 12928  0014FA  D7BB               	goto	i2l4494
 12929  0014FC                     i2l4518:
 12930                           
 12931                           ;IR.c: 156: }
 12932                           ;IR.c: 157: }
 12933                           ;IR.c: 158: if(72 - StartBit < 72)
 12934  0014FC  5021               	movf	IRrawToNEC@StartBit,w,c
 12935  0014FE  6E19               	movwf	??_IRrawToNEC& (0+255),c
 12936  001500  6A1A               	clrf	(??_IRrawToNEC+1)& (0+255),c
 12937  001502  1E19               	comf	??_IRrawToNEC,f,c
 12938  001504  1E1A               	comf	??_IRrawToNEC+1,f,c
 12939  001506  4A19               	infsnz	??_IRrawToNEC,f,c
 12940  001508  2A1A               	incf	??_IRrawToNEC+1,f,c
 12941  00150A  0E48               	movlw	72
 12942  00150C  2619               	addwf	??_IRrawToNEC,f,c
 12943  00150E  0E00               	movlw	0
 12944  001510  221A               	addwfc	??_IRrawToNEC+1,f,c
 12945  001512  BE1A               	btfsc	??_IRrawToNEC+1,7,c
 12946  001514  D006               	goto	i2l4520
 12947  001516  501A               	movf	??_IRrawToNEC+1,w,c
 12948  001518  E106               	bnz	i2l4524
 12949  00151A  0E48               	movlw	72
 12950  00151C  5C19               	subwf	??_IRrawToNEC,w,c
 12951  00151E  B0D8               	btfsc	status,0,c
 12952  001520  D002               	goto	i2l4524
 12953  001522                     i2l4520:
 12954                           
 12955                           ;IR.c: 159: {
 12956                           ;IR.c: 161: return 0;
 12957  001522  0E00               	movlw	0
 12958  001524  0012               	return	
 12959  001526                     i2l4524:
 12960                           
 12961                           ;IR.c: 162: }
 12962                           ;IR.c: 164: StartBit++;
 12963  001526  2A21               	incf	IRrawToNEC@StartBit,f,c
 12964                           
 12965                           ;IR.c: 165: if(Raw[StartBit] >= 925 && Raw[StartBit] <= 1250 )
 12966  001528  5021               	movf	IRrawToNEC@StartBit,w,c
 12967  00152A  0D02               	mullw	2
 12968  00152C  50F3               	movf	prodl,w,c
 12969  00152E  2414               	addwf	IRrawToNEC@Raw,w,c
 12970  001530  6ED9               	movwf	fsr2l,c
 12971  001532  50F4               	movf	prodh,w,c
 12972  001534  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 12973  001536  6EDA               	movwf	fsr2h,c
 12974  001538  0E9D               	movlw	157
 12975  00153A  5CDE               	subwf	postinc2,w,c
 12976  00153C  0E03               	movlw	3
 12977  00153E  58DE               	subwfb	postinc2,w,c
 12978  001540  A0D8               	btfss	status,0,c
 12979  001542  D067               	goto	i2l4546
 12980  001544  5021               	movf	IRrawToNEC@StartBit,w,c
 12981  001546  0D02               	mullw	2
 12982  001548  50F3               	movf	prodl,w,c
 12983  00154A  2414               	addwf	IRrawToNEC@Raw,w,c
 12984  00154C  6ED9               	movwf	fsr2l,c
 12985  00154E  50F4               	movf	prodh,w,c
 12986  001550  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 12987  001552  6EDA               	movwf	fsr2h,c
 12988  001554  0EE3               	movlw	227
 12989  001556  5CDE               	subwf	postinc2,w,c
 12990  001558  0E04               	movlw	4
 12991  00155A  58DE               	subwfb	postinc2,w,c
 12992  00155C  B0D8               	btfsc	status,0,c
 12993  00155E  D059               	goto	i2l4546
 12994                           
 12995                           ;IR.c: 166: {
 12996                           ;IR.c: 168: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 12997  001560  5021               	movf	IRrawToNEC@StartBit,w,c
 12998  001562  0D02               	mullw	2
 12999  001564  50F3               	movf	prodl,w,c
 13000  001566  2414               	addwf	IRrawToNEC@Raw,w,c
 13001  001568  6ED9               	movwf	fsr2l,c
 13002  00156A  50F4               	movf	prodh,w,c
 13003  00156C  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 13004  00156E  6EDA               	movwf	fsr2h,c
 13005  001570  0E01               	movlw	1
 13006  001572  50DB               	movf	plusw2,w,c
 13007  001574  E104               	bnz	i2u409_40
 13008  001576  0E7D               	movlw	125
 13009  001578  5CDE               	subwf	postinc2,w,c
 13010  00157A  A0D8               	btfss	status,0,c
 13011  00157C  D069               	goto	i2l4554
 13012  00157E                     i2u409_40:
 13013  00157E  5021               	movf	IRrawToNEC@StartBit,w,c
 13014  001580  0D02               	mullw	2
 13015  001582  50F3               	movf	prodl,w,c
 13016  001584  2414               	addwf	IRrawToNEC@Raw,w,c
 13017  001586  6ED9               	movwf	fsr2l,c
 13018  001588  50F4               	movf	prodh,w,c
 13019  00158A  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 13020  00158C  6EDA               	movwf	fsr2h,c
 13021  00158E  0E59               	movlw	89
 13022  001590  5CDE               	subwf	postinc2,w,c
 13023  001592  0E02               	movlw	2
 13024  001594  58DE               	subwfb	postinc2,w,c
 13025  001596  B0D8               	btfsc	status,0,c
 13026  001598  D05B               	goto	i2l4554
 13027                           
 13028                           ;IR.c: 169: {
 13029                           ;IR.c: 171: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 13030  00159A  5021               	movf	IRrawToNEC@StartBit,w,c
 13031  00159C  0D02               	mullw	2
 13032  00159E  50F3               	movf	prodl,w,c
 13033  0015A0  2414               	addwf	IRrawToNEC@Raw,w,c
 13034  0015A2  6ED9               	movwf	fsr2l,c
 13035  0015A4  50F4               	movf	prodh,w,c
 13036  0015A6  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 13037  0015A8  6EDA               	movwf	fsr2h,c
 13038  0015AA  0E01               	movlw	1
 13039  0015AC  50DB               	movf	plusw2,w,c
 13040  0015AE  E104               	bnz	i2u411_40
 13041  0015B0  0E7D               	movlw	125
 13042  0015B2  5CDE               	subwf	postinc2,w,c
 13043  0015B4  A0D8               	btfss	status,0,c
 13044  0015B6  D04C               	goto	i2l4554
 13045  0015B8                     i2u411_40:
 13046  0015B8  5021               	movf	IRrawToNEC@StartBit,w,c
 13047  0015BA  0D02               	mullw	2
 13048  0015BC  50F3               	movf	prodl,w,c
 13049  0015BE  2414               	addwf	IRrawToNEC@Raw,w,c
 13050  0015C0  6ED9               	movwf	fsr2l,c
 13051  0015C2  50F4               	movf	prodh,w,c
 13052  0015C4  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 13053  0015C6  6EDA               	movwf	fsr2h,c
 13054  0015C8  0E59               	movlw	89
 13055  0015CA  5CDE               	subwf	postinc2,w,c
 13056  0015CC  0E02               	movlw	2
 13057  0015CE  58DE               	subwfb	postinc2,w,c
 13058  0015D0  B0D8               	btfsc	status,0,c
 13059  0015D2  D03E               	goto	i2l4554
 13060                           
 13061                           ;IR.c: 172: {
 13062                           ;IR.c: 174: if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 13063  0015D4  5021               	movf	IRrawToNEC@StartBit,w,c
 13064  0015D6  0D02               	mullw	2
 13065  0015D8  50F3               	movf	prodl,w,c
 13066  0015DA  2414               	addwf	IRrawToNEC@Raw,w,c
 13067  0015DC  6ED9               	movwf	fsr2l,c
 13068  0015DE  50F4               	movf	prodh,w,c
 13069  0015E0  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 13070  0015E2  6EDA               	movwf	fsr2h,c
 13071  0015E4  0EC8               	movlw	200
 13072  0015E6  5CDE               	subwf	postinc2,w,c
 13073  0015E8  0EAF               	movlw	175
 13074  0015EA  58DE               	subwfb	postinc2,w,c
 13075  0015EC  A0D8               	btfss	status,0,c
 13076  0015EE  D030               	goto	i2l4554
 13077  0015F0  5021               	movf	IRrawToNEC@StartBit,w,c
 13078  0015F2  0D02               	mullw	2
 13079  0015F4  50F3               	movf	prodl,w,c
 13080  0015F6  2414               	addwf	IRrawToNEC@Raw,w,c
 13081  0015F8  6ED9               	movwf	fsr2l,c
 13082  0015FA  50F4               	movf	prodh,w,c
 13083  0015FC  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 13084  0015FE  6EDA               	movwf	fsr2h,c
 13085  001600  0E51               	movlw	81
 13086  001602  5CDE               	subwf	postinc2,w,c
 13087  001604  0EC3               	movlw	195
 13088  001606  58DE               	subwfb	postinc2,w,c
 13089  001608  B0D8               	btfsc	status,0,c
 13090  00160A  D022               	goto	i2l4554
 13091                           
 13092                           ;IR.c: 175: {
 13093                           ;IR.c: 177: return 2;
 13094  00160C  0E02               	movlw	2
 13095  00160E  0012               	return	
 13096                           
 13097                           ;IR.c: 178: }
 13098                           ;IR.c: 179: }
 13099                           ;IR.c: 180: }
 13100                           ;IR.c: 182: }
 13101  001610  D01F               	goto	i2l4554
 13102  001612                     i2l4546:
 13103                           
 13104                           ;IR.c: 183: else if(Raw[StartBit] < 1750 || Raw[StartBit] > 2750 )
 13105  001612  5021               	movf	IRrawToNEC@StartBit,w,c
 13106  001614  0D02               	mullw	2
 13107  001616  50F3               	movf	prodl,w,c
 13108  001618  2414               	addwf	IRrawToNEC@Raw,w,c
 13109  00161A  6ED9               	movwf	fsr2l,c
 13110  00161C  50F4               	movf	prodh,w,c
 13111  00161E  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 13112  001620  6EDA               	movwf	fsr2h,c
 13113  001622  0ED6               	movlw	214
 13114  001624  5CDE               	subwf	postinc2,w,c
 13115  001626  0E06               	movlw	6
 13116  001628  58DE               	subwfb	postinc2,w,c
 13117  00162A  A0D8               	btfss	status,0,c
 13118  00162C  D00E               	goto	i2l4550
 13119  00162E  5021               	movf	IRrawToNEC@StartBit,w,c
 13120  001630  0D02               	mullw	2
 13121  001632  50F3               	movf	prodl,w,c
 13122  001634  2414               	addwf	IRrawToNEC@Raw,w,c
 13123  001636  6ED9               	movwf	fsr2l,c
 13124  001638  50F4               	movf	prodh,w,c
 13125  00163A  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 13126  00163C  6EDA               	movwf	fsr2h,c
 13127  00163E  0EBF               	movlw	191
 13128  001640  5CDE               	subwf	postinc2,w,c
 13129  001642  0E0A               	movlw	10
 13130  001644  58DE               	subwfb	postinc2,w,c
 13131  001646  A0D8               	btfss	status,0,c
 13132  001648  D003               	goto	i2l4554
 13133  00164A                     i2l4550:
 13134                           
 13135                           ;IR.c: 184: {
 13136                           ;IR.c: 186: return 0;
 13137  00164A  0E00               	movlw	0
 13138  00164C  0012               	return	
 13139  00164E  D000               	goto	i2l4554
 13140  001650                     i2l4554:
 13141                           
 13142                           ;IR.c: 187: }
 13143                           ;IR.c: 189: StartBit++;
 13144  001650  2A21               	incf	IRrawToNEC@StartBit,f,c
 13145                           
 13146                           ;IR.c: 190: for(i = StartBit; i < 72;i++)
 13147  001652  C021  F020         	movff	IRrawToNEC@StartBit,IRrawToNEC@i
 13148  001656                     i2l4558:
 13149  001656  0E47               	movlw	71
 13150  001658  6420               	cpfsgt	IRrawToNEC@i,c
 13151  00165A  D001               	goto	i2l4562
 13152  00165C  D0CA               	goto	i2l4638
 13153  00165E                     i2l4562:
 13154                           
 13155                           ;IR.c: 191: {
 13156                           ;IR.c: 192: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 13157  00165E  5021               	movf	IRrawToNEC@StartBit,w,c
 13158  001660  0D02               	mullw	2
 13159  001662  50F3               	movf	prodl,w,c
 13160  001664  2414               	addwf	IRrawToNEC@Raw,w,c
 13161  001666  6ED9               	movwf	fsr2l,c
 13162  001668  50F4               	movf	prodh,w,c
 13163  00166A  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 13164  00166C  6EDA               	movwf	fsr2h,c
 13165  00166E  0E01               	movlw	1
 13166  001670  50DB               	movf	plusw2,w,c
 13167  001672  E104               	bnz	i2u418_40
 13168  001674  0E7D               	movlw	125
 13169  001676  5CDE               	subwf	postinc2,w,c
 13170  001678  A0D8               	btfss	status,0,c
 13171  00167A  D024               	goto	i2l4578
 13172  00167C                     i2u418_40:
 13173  00167C  5021               	movf	IRrawToNEC@StartBit,w,c
 13174  00167E  0D02               	mullw	2
 13175  001680  50F3               	movf	prodl,w,c
 13176  001682  2414               	addwf	IRrawToNEC@Raw,w,c
 13177  001684  6ED9               	movwf	fsr2l,c
 13178  001686  50F4               	movf	prodh,w,c
 13179  001688  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 13180  00168A  6EDA               	movwf	fsr2h,c
 13181  00168C  0E59               	movlw	89
 13182  00168E  5CDE               	subwf	postinc2,w,c
 13183  001690  0E02               	movlw	2
 13184  001692  58DE               	subwfb	postinc2,w,c
 13185  001694  B0D8               	btfsc	status,0,c
 13186  001696  D016               	goto	i2l4578
 13187                           
 13188                           ;IR.c: 193: {
 13189                           ;IR.c: 194: if(!first)
 13190  001698  501F               	movf	IRrawToNEC@first,w,c
 13191  00169A  A4D8               	btfss	status,2,c
 13192  00169C  D002               	goto	i2l4570
 13193                           
 13194                           ;IR.c: 195: {
 13195                           ;IR.c: 197: first = 1;
 13196  00169E  0E01               	movlw	1
 13197  0016A0  D040               	goto	L4
 13198  0016A2                     i2l4570:
 13199                           
 13200                           ;IR.c: 199: else
 13201                           ;IR.c: 200: {
 13202                           ;IR.c: 202: first = 0;
 13203  0016A2  0E00               	movlw	0
 13204  0016A4  6E1F               	movwf	IRrawToNEC@first,c
 13205                           
 13206                           ;IR.c: 203: NECtemp <<= 1;
 13207  0016A6  90D8               	bcf	status,0,c
 13208  0016A8  361B               	rlcf	IRrawToNEC@NECtemp,f,c
 13209  0016AA  361C               	rlcf	IRrawToNEC@NECtemp+1,f,c
 13210  0016AC  361D               	rlcf	IRrawToNEC@NECtemp+2,f,c
 13211  0016AE  361E               	rlcf	IRrawToNEC@NECtemp+3,f,c
 13212                           
 13213                           ;IR.c: 204: if(!Invert)
 13214  0016B0  5018               	movf	IRrawToNEC@Invert,w,c
 13215  0016B2  A4D8               	btfss	status,2,c
 13216  0016B4  D09B               	goto	i2l4634
 13217                           
 13218                           ;IR.c: 205: {
 13219                           ;IR.c: 206: NECtemp++;
 13220  0016B6  0E01               	movlw	1
 13221  0016B8  261B               	addwf	IRrawToNEC@NECtemp,f,c
 13222  0016BA  0E00               	movlw	0
 13223  0016BC  221C               	addwfc	IRrawToNEC@NECtemp+1,f,c
 13224  0016BE  221D               	addwfc	IRrawToNEC@NECtemp+2,f,c
 13225  0016C0  221E               	addwfc	IRrawToNEC@NECtemp+3,f,c
 13226                           
 13227                           ;IR.c: 207: }
 13228                           ;IR.c: 208: }
 13229                           ;IR.c: 209: }
 13230  0016C2  D094               	goto	i2l4634
 13231  0016C4                     i2l4578:
 13232                           
 13233                           ;IR.c: 210: else if(Raw[StartBit] >= 700 && Raw[StartBit] <= 950)
 13234  0016C4  5021               	movf	IRrawToNEC@StartBit,w,c
 13235  0016C6  0D02               	mullw	2
 13236  0016C8  50F3               	movf	prodl,w,c
 13237  0016CA  2414               	addwf	IRrawToNEC@Raw,w,c
 13238  0016CC  6ED9               	movwf	fsr2l,c
 13239  0016CE  50F4               	movf	prodh,w,c
 13240  0016D0  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 13241  0016D2  6EDA               	movwf	fsr2h,c
 13242  0016D4  0EBC               	movlw	188
 13243  0016D6  5CDE               	subwf	postinc2,w,c
 13244  0016D8  0E02               	movlw	2
 13245  0016DA  58DE               	subwfb	postinc2,w,c
 13246  0016DC  A0D8               	btfss	status,0,c
 13247  0016DE  D026               	goto	i2l4596
 13248  0016E0  5021               	movf	IRrawToNEC@StartBit,w,c
 13249  0016E2  0D02               	mullw	2
 13250  0016E4  50F3               	movf	prodl,w,c
 13251  0016E6  2414               	addwf	IRrawToNEC@Raw,w,c
 13252  0016E8  6ED9               	movwf	fsr2l,c
 13253  0016EA  50F4               	movf	prodh,w,c
 13254  0016EC  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 13255  0016EE  6EDA               	movwf	fsr2h,c
 13256  0016F0  0EB7               	movlw	183
 13257  0016F2  5CDE               	subwf	postinc2,w,c
 13258  0016F4  0E03               	movlw	3
 13259  0016F6  58DE               	subwfb	postinc2,w,c
 13260  0016F8  B0D8               	btfsc	status,0,c
 13261  0016FA  D018               	goto	i2l4596
 13262                           
 13263                           ;IR.c: 211: {
 13264                           ;IR.c: 212: if(first)
 13265  0016FC  501F               	movf	IRrawToNEC@first,w,c
 13266  0016FE  B4D8               	btfsc	status,2,c
 13267  001700  D012               	goto	i2l4592
 13268                           
 13269                           ;IR.c: 213: {
 13270                           ;IR.c: 215: NECtemp <<= 1;
 13271  001702  90D8               	bcf	status,0,c
 13272  001704  361B               	rlcf	IRrawToNEC@NECtemp,f,c
 13273  001706  361C               	rlcf	IRrawToNEC@NECtemp+1,f,c
 13274  001708  361D               	rlcf	IRrawToNEC@NECtemp+2,f,c
 13275  00170A  361E               	rlcf	IRrawToNEC@NECtemp+3,f,c
 13276                           
 13277                           ;IR.c: 216: if(Invert)
 13278  00170C  5018               	movf	IRrawToNEC@Invert,w,c
 13279  00170E  B4D8               	btfsc	status,2,c
 13280  001710  D007               	goto	i2l4590
 13281                           
 13282                           ;IR.c: 217: {
 13283                           ;IR.c: 218: NECtemp++;
 13284  001712  0E01               	movlw	1
 13285  001714  261B               	addwf	IRrawToNEC@NECtemp,f,c
 13286  001716  0E00               	movlw	0
 13287  001718  221C               	addwfc	IRrawToNEC@NECtemp+1,f,c
 13288  00171A  221D               	addwfc	IRrawToNEC@NECtemp+2,f,c
 13289  00171C  221E               	addwfc	IRrawToNEC@NECtemp+3,f,c
 13290  00171E  D000               	goto	i2l4590
 13291  001720                     i2l4590:
 13292                           
 13293                           ;IR.c: 219: }
 13294                           ;IR.c: 220: first = 0;
 13295  001720  0E00               	movlw	0
 13296  001722                     L4:
 13297  001722  6E1F               	movwf	IRrawToNEC@first,c
 13298                           
 13299                           ;IR.c: 221: }
 13300  001724  D063               	goto	i2l4634
 13301  001726                     i2l4592:
 13302                           
 13303                           ;IR.c: 222: else
 13304                           ;IR.c: 223: {
 13305                           ;IR.c: 225: return 0;
 13306  001726  0E00               	movlw	0
 13307  001728  0012               	return	
 13308                           
 13309                           ;IR.c: 226: }
 13310                           ;IR.c: 227: }
 13311  00172A  D060               	goto	i2l4634
 13312  00172C                     i2l4596:
 13313                           
 13314                           ;IR.c: 228: else if(Raw[StartBit] == 0 && first == 1)
 13315  00172C  5021               	movf	IRrawToNEC@StartBit,w,c
 13316  00172E  0D02               	mullw	2
 13317  001730  50F3               	movf	prodl,w,c
 13318  001732  2414               	addwf	IRrawToNEC@Raw,w,c
 13319  001734  6ED9               	movwf	fsr2l,c
 13320  001736  50F4               	movf	prodh,w,c
 13321  001738  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 13322  00173A  6EDA               	movwf	fsr2h,c
 13323  00173C  50DE               	movf	postinc2,w,c
 13324  00173E  10DE               	iorwf	postinc2,w,c
 13325  001740  A4D8               	btfss	status,2,c
 13326  001742  D012               	goto	i2l4608
 13327  001744  041F               	decf	IRrawToNEC@first,w,c
 13328  001746  A4D8               	btfss	status,2,c
 13329  001748  D00F               	goto	i2l4608
 13330  00174A                     i2l4600:
 13331                           
 13332                           ;IR.c: 229: {
 13333                           ;IR.c: 234: *NEC = NECtemp;
 13334  00174A  C016  FFD9         	movff	IRrawToNEC@NEC,fsr2l
 13335  00174E  C017  FFDA         	movff	IRrawToNEC@NEC+1,fsr2h
 13336  001752  C01B  FFDE         	movff	IRrawToNEC@NECtemp,postinc2
 13337  001756  C01C  FFDE         	movff	IRrawToNEC@NECtemp+1,postinc2
 13338  00175A  C01D  FFDE         	movff	IRrawToNEC@NECtemp+2,postinc2
 13339  00175E  C01E  FFDE         	movff	IRrawToNEC@NECtemp+3,postinc2
 13340  001762  D01F               	goto	i2l4614
 13341                           
 13342                           ;IR.c: 235: return 1;
 13343  001764  0012               	return	
 13344                           
 13345                           ;IR.c: 236: }
 13346  001766  D042               	goto	i2l4634
 13347  001768                     i2l4608:
 13348                           
 13349                           ;IR.c: 237: else if(Raw[StartBit] >= 19000 && Raw[StartBit] <= 21000)
 13350  001768  5021               	movf	IRrawToNEC@StartBit,w,c
 13351  00176A  0D02               	mullw	2
 13352  00176C  50F3               	movf	prodl,w,c
 13353  00176E  2414               	addwf	IRrawToNEC@Raw,w,c
 13354  001770  6ED9               	movwf	fsr2l,c
 13355  001772  50F4               	movf	prodh,w,c
 13356  001774  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 13357  001776  6EDA               	movwf	fsr2h,c
 13358  001778  0E38               	movlw	56
 13359  00177A  5CDE               	subwf	postinc2,w,c
 13360  00177C  0E4A               	movlw	74
 13361  00177E  58DE               	subwfb	postinc2,w,c
 13362  001780  A0D8               	btfss	status,0,c
 13363  001782  D012               	goto	i2l4620
 13364  001784  5021               	movf	IRrawToNEC@StartBit,w,c
 13365  001786  0D02               	mullw	2
 13366  001788  50F3               	movf	prodl,w,c
 13367  00178A  2414               	addwf	IRrawToNEC@Raw,w,c
 13368  00178C  6ED9               	movwf	fsr2l,c
 13369  00178E  50F4               	movf	prodh,w,c
 13370  001790  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 13371  001792  6EDA               	movwf	fsr2h,c
 13372  001794  0E09               	movlw	9
 13373  001796  5CDE               	subwf	postinc2,w,c
 13374  001798  0E52               	movlw	82
 13375  00179A  58DE               	subwfb	postinc2,w,c
 13376  00179C  B0D8               	btfsc	status,0,c
 13377  00179E  D004               	goto	i2l4620
 13378  0017A0  D7D4               	goto	i2l4600
 13379  0017A2                     i2l4614:
 13380                           
 13381                           ;IR.c: 241: return 1;
 13382  0017A2  0E01               	movlw	1
 13383  0017A4  0012               	return	
 13384                           
 13385                           ;IR.c: 242: }
 13386  0017A6  D022               	goto	i2l4634
 13387  0017A8                     i2l4620:
 13388                           
 13389                           ;IR.c: 243: else if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 13390  0017A8  5021               	movf	IRrawToNEC@StartBit,w,c
 13391  0017AA  0D02               	mullw	2
 13392  0017AC  50F3               	movf	prodl,w,c
 13393  0017AE  2414               	addwf	IRrawToNEC@Raw,w,c
 13394  0017B0  6ED9               	movwf	fsr2l,c
 13395  0017B2  50F4               	movf	prodh,w,c
 13396  0017B4  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 13397  0017B6  6EDA               	movwf	fsr2h,c
 13398  0017B8  0EC8               	movlw	200
 13399  0017BA  5CDE               	subwf	postinc2,w,c
 13400  0017BC  0EAF               	movlw	175
 13401  0017BE  58DE               	subwfb	postinc2,w,c
 13402  0017C0  A0D8               	btfss	status,0,c
 13403  0017C2  D011               	goto	i2l4630
 13404  0017C4  5021               	movf	IRrawToNEC@StartBit,w,c
 13405  0017C6  0D02               	mullw	2
 13406  0017C8  50F3               	movf	prodl,w,c
 13407  0017CA  2414               	addwf	IRrawToNEC@Raw,w,c
 13408  0017CC  6ED9               	movwf	fsr2l,c
 13409  0017CE  50F4               	movf	prodh,w,c
 13410  0017D0  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 13411  0017D2  6EDA               	movwf	fsr2h,c
 13412  0017D4  0E51               	movlw	81
 13413  0017D6  5CDE               	subwf	postinc2,w,c
 13414  0017D8  0EC3               	movlw	195
 13415  0017DA  58DE               	subwfb	postinc2,w,c
 13416  0017DC  B0D8               	btfsc	status,0,c
 13417  0017DE  D003               	goto	i2l4630
 13418                           
 13419                           ;IR.c: 244: {
 13420                           ;IR.c: 246: return 2;
 13421  0017E0  0E02               	movlw	2
 13422  0017E2  0012               	return	
 13423                           
 13424                           ;IR.c: 247: }
 13425  0017E4  D003               	goto	i2l4634
 13426  0017E6                     i2l4630:
 13427                           
 13428                           ;IR.c: 248: else
 13429                           ;IR.c: 249: {
 13430                           ;IR.c: 250: return 0;
 13431  0017E6  0E00               	movlw	0
 13432  0017E8  0012               	return	
 13433  0017EA  D000               	goto	i2l4634
 13434  0017EC                     i2l4634:
 13435                           
 13436                           ;IR.c: 251: }
 13437                           ;IR.c: 252: StartBit++;
 13438  0017EC  2A21               	incf	IRrawToNEC@StartBit,f,c
 13439  0017EE  2A20               	incf	IRrawToNEC@i,f,c
 13440  0017F0  D732               	goto	i2l4558
 13441  0017F2                     i2l4638:
 13442                           
 13443                           ;IR.c: 253: }
 13444                           ;IR.c: 255: return 0;
 13445  0017F2  0E00               	movlw	0
 13446  0017F4  0012               	return	
 13447  0017F6  0012               	return		;funcret
 13448  0017F8                     __end_of_IRrawToNEC:
 13449                           	opt stack 0
 13450                           pclatu	equ	0xFFB
 13451                           pclath	equ	0xFFA
 13452                           tblptru	equ	0xFF8
 13453                           tblptrh	equ	0xFF7
 13454                           tblptrl	equ	0xFF6
 13455                           tablat	equ	0xFF5
 13456                           prodh	equ	0xFF4
 13457                           prodl	equ	0xFF3
 13458                           intcon	equ	0xFF2
 13459                           intcon2	equ	0xFF1
 13460                           indf0	equ	0xFEF
 13461                           postinc0	equ	0xFEE
 13462                           plusw0	equ	0xFEB
 13463                           fsr0h	equ	0xFEA
 13464                           fsr0l	equ	0xFE9
 13465                           wreg	equ	0xFE8
 13466                           indf1	equ	0xFE7
 13467                           postdec1	equ	0xFE5
 13468                           fsr1h	equ	0xFE2
 13469                           fsr1l	equ	0xFE1
 13470                           bsr	equ	0xFE0
 13471                           indf2	equ	0xFDF
 13472                           postinc2	equ	0xFDE
 13473                           postdec2	equ	0xFDD
 13474                           plusw2	equ	0xFDB
 13475                           fsr2h	equ	0xFDA
 13476                           fsr2l	equ	0xFD9
 13477                           status	equ	0xFD8
 13478                           pclatu	equ	0xFFB
 13479                           pclath	equ	0xFFA
 13480                           tblptru	equ	0xFF8
 13481                           tblptrh	equ	0xFF7
 13482                           tblptrl	equ	0xFF6
 13483                           tablat	equ	0xFF5
 13484                           prodh	equ	0xFF4
 13485                           prodl	equ	0xFF3
 13486                           intcon	equ	0xFF2
 13487                           intcon2	equ	0xFF1
 13488                           indf0	equ	0xFEF
 13489                           postinc0	equ	0xFEE
 13490                           plusw0	equ	0xFEB
 13491                           fsr0h	equ	0xFEA
 13492                           fsr0l	equ	0xFE9
 13493                           wreg	equ	0xFE8
 13494                           indf1	equ	0xFE7
 13495                           postdec1	equ	0xFE5
 13496                           fsr1h	equ	0xFE2
 13497                           fsr1l	equ	0xFE1
 13498                           bsr	equ	0xFE0
 13499                           indf2	equ	0xFDF
 13500                           postinc2	equ	0xFDE
 13501                           postdec2	equ	0xFDD
 13502                           plusw2	equ	0xFDB
 13503                           fsr2h	equ	0xFDA
 13504                           fsr2l	equ	0xFD9
 13505                           status	equ	0xFD8
 13506                           
 13507                           	psect	rparam
 13508  0000                     pclatu	equ	0xFFB
 13509                           pclath	equ	0xFFA
 13510                           tblptru	equ	0xFF8
 13511                           tblptrh	equ	0xFF7
 13512                           tblptrl	equ	0xFF6
 13513                           tablat	equ	0xFF5
 13514                           prodh	equ	0xFF4
 13515                           prodl	equ	0xFF3
 13516                           intcon	equ	0xFF2
 13517                           intcon2	equ	0xFF1
 13518                           indf0	equ	0xFEF
 13519                           postinc0	equ	0xFEE
 13520                           plusw0	equ	0xFEB
 13521                           fsr0h	equ	0xFEA
 13522                           fsr0l	equ	0xFE9
 13523                           wreg	equ	0xFE8
 13524                           indf1	equ	0xFE7
 13525                           postdec1	equ	0xFE5
 13526                           fsr1h	equ	0xFE2
 13527                           fsr1l	equ	0xFE1
 13528                           bsr	equ	0xFE0
 13529                           indf2	equ	0xFDF
 13530                           postinc2	equ	0xFDE
 13531                           postdec2	equ	0xFDD
 13532                           plusw2	equ	0xFDB
 13533                           fsr2h	equ	0xFDA
 13534                           fsr2l	equ	0xFD9
 13535                           status	equ	0xFD8


Data Sizes:
    Strings     114
    Constant    49
    Data        67
    BSS         699
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      68
    BANK0           160    112     142
    BANK1           256      0     194
    BANK2           256      0     255
    BANK3           256      0     255
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_14(CODE[28]), STR_3(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> BluetoothInitialSetup@buf(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    SendRF_wait@Code	PTR unsigned char  size(2) Largest target is 12
		 -> ChannelF(BANK0[12]), 

    SendRF@Code	PTR unsigned char  size(2) Largest target is 12
		 -> ChannelF(BANK0[12]), 

    UseIRCode@Code	PTR unsigned char  size(2) Largest target is 1
		 -> IR_New_Code(BANK0[1]), 

    IRrawToNEC@NEC	PTR unsigned long  size(2) Largest target is 4
		 -> IR_NEC(BANK0[4]), 

    IRrawToNEC@Raw	PTR unsigned int  size(2) Largest target is 144
		 -> IRRawCode(BANK1[144]), 

    InternalADC_Read@ADCcounts	PTR unsigned int  size(2) Largest target is 2
		 -> ReadVoltage@temp(BANK0[2]), 

    UARTstring@data	PTR unsigned char  size(2) Largest target is 50
		 -> STR_15(CODE[5]), STR_13(CODE[5]), STR_11(CODE[6]), STR_9(CODE[6]), 
		 -> STR_7(CODE[9]), STR_5(CODE[21]), BluetoothInitialSetup@buf(BANK0[50]), STR_1(CODE[4]), 

    StringContains@This	PTR unsigned char  size(2) Largest target is 255
		 -> CommandString(BANK2[255]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_16(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), 
		 -> STR_6(CODE[4]), STR_4(CODE[4]), BluetoothInitialSetup@buf(BANK0[50]), STR_2(CODE[4]), 

    cleanBuffer16bit@data	PTR unsigned int  size(2) Largest target is 144
		 -> IRRawCode(BANK1[144]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 255
		 -> BluetoothInitialSetup@buf(BANK0[50]), CommandString(BANK2[255]), ReceivedString(BANK3[255]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_IRrawToNEC

Critical Paths under _low_isr in COMRAM

    _low_isr->_IsCharacter
    _low_isr->_ReadUSART

Critical Paths under _main in BANK0

    _SendRF_wait->_SendRF
    _ReadVoltage->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___ftdiv
    ___ftdiv->___lwtoft
    _InternalADC_Read->_delayUS
    _SyncEEPROMToGlobal->_GetEEPROM
    _GetEEPROM->_GetMemoryLong
    _InitUART->_Round
    ___lltoft->___ftpack
    _Round->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftpack
    ___altoft->___ftpack
    _InitIR->_cleanBuffer16bit
    _InitBluetooth->_BluetoothInitialSetup
    _BluetoothInitialSetup->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    _EnterCommandMode->_delayUS
    _UARTstring->_UARTchar
    _ResetBlue->_delayUS
    _SyncGlobalToEEPROM->_SetEEPROM
    _SetEEPROM->_SetMemoryLong
    _SetMemoryLong->_GetMemoryLong
    _GetMemoryLong->_ReadEEPROM_1Byte
    _SetMemoryChar->_GetMemoryChar
    _GetMemoryChar->_ReadEEPROM_1Byte

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   45286
                                            111 BANK0      1     1      0
                _ConfigureOscillator
                            _InitApp
                        _Init_System
                        _ReadVoltage
                          _UseIRCode
                             ___ftge
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     348
                                             18 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _UseIRCode                                            8     2      6    5794
                                             84 BANK0      8     2      6
                         _LEDTimerON
                     _ReadPushButton
                        _SendRF_wait
                 _SyncGlobalToEEPROM
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SendRF_wait                                          4     0      4     721
                                             23 BANK0      4     0      4
                             _SendRF
 ---------------------------------------------------------------------------------
 (3) _SendRF                                               5     1      4     337
                                             18 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _ReadPushButton                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LEDTimerON                                           0     0      0       0
                        _ResetTimer1
 ---------------------------------------------------------------------------------
 (3) _ResetTimer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadVoltage                                          8     5      3    8971
                                             59 BANK0      8     5      3
                   _InternalADC_Read
                  _VoltageDividerOFF
                   _VoltageDividerON
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    1860
                                             26 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2297
                                             44 BANK0     15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2251
                                             29 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _VoltageDividerON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _VoltageDividerOFF                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InternalADC_Read                                     6     4      2    1339
                                             28 BANK0      6     4      2
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0   28974
                            _InitADC
                      _InitBluetooth
                             _InitIR
                         _InitTimers
                           _InitUART
                 _SyncEEPROMToGlobal
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _SyncEEPROMToGlobal                                   5     5      0    1218
                                             64 BANK0      5     5      0
                          _GetEEPROM
 ---------------------------------------------------------------------------------
 (3) _GetEEPROM                                           10     5      5    1172
                                             54 BANK0     10     5      5
                      _GetMemoryChar
                      _GetMemoryLong
 ---------------------------------------------------------------------------------
 (2) _InitUART                                            18    14      4    8428
                                             60 BANK0     18    14      4
                   _Local_CloseUSART
                          _OpenUSART
                              _Round
                            ___fttol
                            ___lldiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    1907
                                             26 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _Round                                                7     4      3    5323
                                             53 BANK0      7     4      3
                           ___altoft
                            ___ftadd
                            ___fttol
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     358
                                             38 BANK0     15    11      4
                            ___ftadd (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    2891
                                             26 BANK0     12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    1976
                                             26 BANK0     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1785
                                             18 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     273
                                             18 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _Local_CloseUSART                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimers                                           0     0      0       0
                         _InitTimer1
                         _InitTimer2
                         _InitTimer3
 ---------------------------------------------------------------------------------
 (3) _InitTimer3                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitIR                                               0     0      0     197
                         _InitTimer0
                          _ReadIRpin
                        _ResetTimer0
                   _cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (3) _cleanBuffer16bit                                     8     4      4     197
                                             18 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _ResetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ReadIRpin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitBluetooth                                        0     0      0   17556
                _BluetoothConfigured
              _BluetoothInitialSetup
                          _ResetBlue
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _BluetoothInitialSetup                               51    51      0   11217
                                             60 BANK0     51    51      0
                   _EnterCommandMode
                     _StringContains
                         _UARTstring
                        _cleanBuffer
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             29    21      8    1375
                                             40 BANK0     20    12      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     265
                                             31 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     374
                                             18 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _EnterCommandMode                                     1     1      0    5377
                                             28 BANK0      1     1      0
                      _BlueConnected
                          _ResetBlue
                     _StringContains
                         _UARTstring
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _cleanBuffer                                          8     4      4    1575
                                             18 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _UARTstring                                           2     0      2     513
                                             19 BANK0      2     0      2
                           _UARTchar
 ---------------------------------------------------------------------------------
 (5) _UARTchar                                             1     1      0      44
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _StringContains                                       5     1      4     961
                                             18 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _ResetBlue                                            0     0      0    1152
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _delayUS                                             10     6      4    1152
                                             18 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _BlueConnected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BluetoothConfigured                                  0     0      0    3612
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (2) _SyncGlobalToEEPROM                                   0     0      0    3612
                          _SetEEPROM
 ---------------------------------------------------------------------------------
 (3) _SetEEPROM                                           13     4      9    3612
                                             71 BANK0     13     4      9
                      _SetMemoryChar
                      _SetMemoryLong
 ---------------------------------------------------------------------------------
 (4) _SetMemoryLong                                       17    12      5    1914
                                             54 BANK0     17    12      5
                      _GetMemoryLong
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _GetMemoryLong                                       33    29      4     642
                                             21 BANK0     33    29      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (4) _SetMemoryChar                                        3     2      1    1478
                                             27 BANK0      3     2      1
                      _GetMemoryChar
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _WriteEEPROM_1Byte                                    4     1      3     831
                                             18 BANK0      4     1      3
                      _EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (6) _EEPROM_UNLOCK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _GetMemoryChar                                        6     2      4     483
                                             21 BANK0      6     2      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (6) _ReadEEPROM_1Byte                                     3     1      2     438
                                             18 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
                           _ResetADC
 ---------------------------------------------------------------------------------
 (3) _ResetADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                             18    18      0     179
                                              1 COMRAM    18    18      0
                        _IsCharacter
                          _ReadUSART
                    i1_BlueConnected
 ---------------------------------------------------------------------------------
 (10) i1_BlueConnected                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ReadUSART                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _IsCharacter                                         1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _high_isr                                           21    21      0    1767
                                             33 COMRAM     3     3      0
                                              0 BANK0     18    18      0
                         _IRrawToNEC
                        _ResetTimer3
                        i2_ReadIRpin
                      i2_ResetTimer0
 ---------------------------------------------------------------------------------
 (12) i2_ResetTimer0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_ReadIRpin                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ResetTimer3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _IRrawToNEC                                         14     9      5    1541
                                             19 COMRAM    14     9      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _Init_System
     _InitADC
       _ResetADC
     _InitBluetooth
       _BluetoothConfigured
         _SyncGlobalToEEPROM
           _SetEEPROM
             _SetMemoryChar
               _GetMemoryChar
                 _ReadEEPROM_1Byte
               _WriteEEPROM_1Byte
                 _EEPROM_UNLOCK
             _SetMemoryLong
               _GetMemoryLong
                 _ReadEEPROM_1Byte
               _WriteEEPROM_1Byte
                 _EEPROM_UNLOCK
       _BluetoothInitialSetup
         _EnterCommandMode
           _BlueConnected
           _ResetBlue
             _delayUS
           _StringContains
           _UARTstring
             _UARTchar
           _cleanBuffer
           _delayUS
         _StringContains
         _UARTstring
           _UARTchar
         _cleanBuffer
         _delayUS
         _sprintf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
       _ResetBlue
         _delayUS
       _cleanBuffer
     _InitIR
       _InitTimer0
       _ReadIRpin
       _ResetTimer0
       _cleanBuffer16bit
     _InitTimers
       _InitTimer1
       _InitTimer2
       _InitTimer3
     _InitUART
       _Local_CloseUSART
       _OpenUSART
       _Round
         ___altoft
           ___ftpack
         ___ftadd
           ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftpack
       ___lldiv
       ___lltoft
         ___ftpack
     _SyncEEPROMToGlobal
       _GetEEPROM
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
     _cleanBuffer
   _ReadVoltage
     _InternalADC_Read
       _delayUS
     _VoltageDividerOFF
     _VoltageDividerON
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _delayUS
   _UseIRCode
     _LEDTimerON
       _ResetTimer1
     _ReadPushButton
     _SendRF_wait
       _SendRF
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _delayUS
   ___ftge
   _delayUS

 _low_isr (ROOT)
   _IsCharacter
   _ReadUSART
   i1_BlueConnected

 _high_isr (ROOT)
   _IRrawToNEC
   _ResetTimer3
   i2_ReadIRpin
   i2_ResetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FF      12       99.6%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FF      10       99.6%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      C2       8       75.8%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     70      8E       5       88.8%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      44       1       71.6%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     392       6        0.0%
DATA                 0      0     392       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Apr 04 02:12:59 2015

                  ___altoft@exp 0082         __size_of_StringContains 00A4                   ___altoft@sign 0083  
          ?_BluetoothConfigured 0001                              _SN 00D0             ?_SyncGlobalToEEPROM 0001  
                            bsr 000FE0                    __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000  
                  __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000                    ___ftadd@exp1 0085  
                  ___ftadd@exp2 0084                     ?_LEDTimerON 0001                    ___ftadd@sign 0083  
                           l102 3368                             l104 3352                             l220 331C  
                           l221 331E                             l214 32E8                             l226 3890  
                           l218 330C                             l411 38D6                             l404 36AA  
                           l417 3674                             l296 2FA4                             l889 1DF0  
                  __CFG_CPB$OFF 000000                             _PR2 000FCB                    __CFG_CPD$OFF 000000  
                    _IRrawToNEC 1456             __end_of_IsCharacter 38CA                    __CFG_BORV$18 000000  
                           prod 000FF3                             wreg 000FE8                   _InitBluetooth 3568  
                  __CFG_LVP$OFF 000000                    ___ftdiv@cntr 0086                    ___ftdiv@sign 008B  
                          l1224 27A6                            l1253 1B66                            l1360 2D26  
                          l1257 1BA0                            l1370 2E82                            l4002 1328  
                          l1259 1BCA                            l1268 1CAE                            l1277 1CD8  
                          l4030 1436                            l1288 2534                            l4018 13CA  
                          l4050 30A6                            l3500 26DA                            l4052 30AE  
                          l3430 2E98                            l3422 346C                            l4310 2394  
                          l4230 394A                            l4070 3110                            l4222 3858  
                          l3416 29E6                            l3512 2754                            l3504 26F0  
                          l4240 2456                            l4320 23D8                            l4056 30E0  
                          l4400 2026                            l3362 3342                            l3426 348C  
                          l3610 2C50                            l3522 27B2                            l3514 2786  
                          l3506 2700                            l4314 23B0                            l4306 2374  
                          l3372 335A                            l3364 3348                            l3444 2EE4  
                          l3460 34E8                            l3540 2CB2                            l3620 1D8A  
                          l3516 2796                            l3508 2732                            l4076 323A  
                          l4324 23F4                            l4316 23B8                            l4412 205A  
                          l3470 31E8                            l3438 2ED0                            l3550 2D12  
                          l3542 2CBC                            l4078 324C                            l4190 2F68  
                          l4246 2490                            l4422 2092                            l3448 2F24  
                          l3456 34BA                            l3560 2E1E                            l3632 1DBE  
                          l3528 27D0                            l3720 1BC0                            l4424 2098  
                          l4408 2050                            l3378 388A                            l3538 2CA0  
                          l3562 2E28                            l3650 1E60                            l3642 1E3A  
                          l3626 1DA8                            l3730 1C02                            l3714 1BAE  
                          l4194 2F7A                            l4186 2F5E                            l4266 24F2  
                          l4450 2130                            l3388 3734                            l3476 321E  
                          l3628 1DB2                            l3740 1C52                            l3708 1B74  
                          l3812 26AC                            l3804 266E                            l4276 2546  
                          l4292 2324                            l4380 2DDC                            l4428 20A2  
                          l3486 3990                            l3582 2BB2                            l3566 2E6E  
                          l3558 2E0C                            l3670 1EE0                            l3662 1EAE  
                          l3654 1E6E                            l3638 1E12                            l3910 3982  
                          l3822 3432                            l3750 1C9E                            l3742 1C5E  
                          l3806 2680                            l4286 22EA                            l4446 2128  
                          l4438 20DA                            l3576 3644                            l3592 2BC8  
                          l3648 1E5A                            l3680 1FB0                            l3840 32D4  
                          l3736 1C32                            l3808 268E                            l4720 2AAE  
                          l3658 1EA8                            l3818 340E                            l3738 1C42  
                          l4378 2DC8                            l4650 2B60                            l3924 38AC  
                          l3676 1F76                            l3668 1ED0                            l3860 3310  
                          l3852 32F6                            l3844 32DE                            l3836 32C8  
                          l3692 3006                            l3756 1D04                            l3748 1C8E  
                          l4708 2A48                            l3678 1F90                            l3694 3018  
                          l3766 1D54                            l4646 2B1E                            l4718 2AAA  
                          l3960 11C6                            l3936 10D4                            l3856 3300  
                          l3848 32EC                            l3776 25A8                            l4656 2BA4  
                          l3946 1150                            l3794 263C                            l4692 2A04  
                          l3974 123C                            l3798 2650                            l4696 2A0E  
                          l3988 12B2                            STR_1 1094                            STR_2 1098  
                          STR_3 104E                            STR_4 10A0                            STR_5 1066  
                          STR_6 10A0                            STR_7 107B                            STR_8 10A0  
                          STR_9 1084            ??_SyncGlobalToEEPROM 00B4                            u3101 1B32  
                          _LATA 000F89                            _LATB 000F8A                            _LATC 000F8B  
                          u3301 2584                            u3320 25CE                            u3091 1B14  
                          u2620 292A                            u3325 25C4                            u2710 34DC  
                          u2720 350A                            u2625 291E                            u2650 2EC6  
                          u2717 34D2                            u2727 3500                            u3471 36F4  
                          u2680 2F14                            u2657 2EBC                            u2931 360E  
                          u3811 22C6                            u2687 2F0A                            u3671 3836  
                          u3831 2300                            u3680 2864                            u3761 2432  
                          u3685 2858                            u3781 246C                            u3891 1FFE  
                          _TMR2 000FCC                            _WPUB 000F7C                  ?i2_ResetTimer0 0001  
                          _Sent 00D4      WriteEEPROM_1Byte@GIEstatus 0075       SetMemoryChar@AddressFirst 007B  
                          _main 29EC                    ___ftpack@arg 0072                    ___ftpack@exp 0075  
                          fsr0h 000FEA                            fsr1h 000FE2                            indf0 000FEF  
                          fsr0l 000FE9                            fsr2h 000FDA                            indf1 000FE7  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                    _RFsendCode 0025                      _RFsendFlag 003F                            pclat 000FFA  
                   _RFcodePlace 003E                            prodh 000FF4                            prodl 000FF3  
                          start 014A                   __CFG_IESO$OFF 000000                   __CFG_MCLRE$ON 000000  
                  ___ftmul@cntr 0099                  UARTstring@data 0073                    ___param_bank 000010  
                  ___ftmul@sign 009A                 __end_of_InitADC 38F6                 __end_of_InitApp 3772  
       __size_of_ReadPushButton 000E           ??_BluetoothConfigured 00B4                    ___fttol@exp1 0094  
                 ??_Init_System 00CF                    ___fttol@lval 0090               IRrawToNEC@NECtemp 001B  
               __end_of_Version 1032                   ??_ReadVoltage 009E                           ?_main 0001  
                         _EEADR 000FA9                 __end_of___ftadd 1D7C                           STR_10 10A0  
                         STR_11 1084                           STR_12 10A0                           STR_13 108F  
                         STR_14 1032                           STR_15 108A                           STR_16 109C  
               __end_of___ftdiv 256E                           _ANSEL 000F7E                 __end_of___lldiv 2D38  
               __end_of___ftmul 241C                 __end_of___llmod 2E94                 __end_of___fttol 26C0  
       ReadEEPROM_1Byte@address 0072                           i1l238 3902                           i1l607 00E4  
                         i1l616 0102                           i1l617 00FE                           i2l600 1AC0  
                         i2l603 1AC2                           i2l552 18CC                           i2l561 1A9E  
                         i2l546 18EC                           i2l547 18E8                           i2l548 18E0  
                         i2l557 18E2                           i2l558 18EA                           _RCREG 000FAE  
                         _RCSTA 000FAB                           _TMR0H 000FD7                           _TMR1H 000FCF  
                         _TMR0L 000FD6                           _TMR3H 000FB3                           _TMR1L 000FCE  
                         _TMR3L 000FB2                           _SPBRG 000FAF                           _PORTA 000F80  
                         _PORTB 000F81                           _PORTC 000F82                    InitUART@Baud 009C  
                         _TXREG 000FAD                           _TXSTA 000FAC             _ConfigureOscillator 3A08  
               __end_of_delayUS 339A                   __CFG_PWRT$OFF 000000                _InternalADC_Read 2F38  
                 __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000  
                 __CFG_WRT3$OFF 000000               _NewReceivedString 003C                    ___lltoft@exp 0082  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  ?_InitBluetooth 0001  
                __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000  
                    SendRF@Code 0072                    InitUART@temp 00AA                    _IRrawCodeNum 003B  
                         _Round 339A                   __CFG_WRTB$OFF 000000           _BluetoothInitialSetup 10A6  
      __end_of_Local_CloseUSART 395E                   __CFG_WRTC$OFF 000000           __end_of_BlueConnected 3996  
                 __CFG_WRTD$OFF 000000                __end_of_UARTchar 3896                  __CFG_EBTRB$OFF 000000  
               __end_of_dpowers 1029                      SendRF@size 0074                   ___ftpack@sign 0076  
                         main@i 00CF                 __end_of_low_isr 014A                           tablat 000FF5  
                         plusw0 000FEB                           plusw2 000FDB                     ?_UARTstring 0073  
       InternalADC_Read@channel 0081                           status 000FD8                 __end_of_sprintf 1FC0  
                __CFG_HFOFST$ON 000000            __size_of_cleanBuffer 005A             __size_of_LEDTimerON 000C  
         __end_of_GetMemoryChar 382C                  __CFG_PBADEN$ON 000000            ?_ConfigureOscillator 0001  
         __end_of_GetMemoryLong 22B0                   ??_SendRF_wait 007B              StringContains@That 0074  
            StringContains@This 0072                   high_isr@IRpin 0022                 __initialization 3116  
         __end_of_EEPROM_UNLOCK 38E0                      _InitTimer0 3932                      _InitTimer1 396C  
                    _InitTimer2 395E                      _InitTimer3 39D6              __size_of_GetEEPROM 003A  
                 high_isr@Time0 0023                      _InitTimers 390C                    __end_of_main 2ADC  
              __end_of_InitUART 28F2                     _IsCharacter 38B2                          ??_main 00CF  
                 ___fttol@sign1 008F                __end_of_ResetADC 39A4                   __activetblptr 000002  
            SendRF@RepeatAmount 0075                     ?_IRrawToNEC 0014             __end_of_Init_System 3568  
                        ?_Round 0095             __end_of_ReadVoltage 2DF0                      UseIRCode@i 00BB  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
              __end_of___altoft 307C                ___llmod@dividend 007F                          _ADRESH 000FC4  
                        _EEADRH 000FAA                          _ADRESL 000FC3                          _EEDATA 000FA8  
                        _EECON2 000FA7                 ??i2_ResetTimer0 0014                __end_of___ftpack 27E0  
                        _ANSELH 000F7F               ?_VoltageDividerON 0001                   ??_ResetTimer0 0072  
                 ??_ResetTimer1 0072                   ??_ResetTimer3 0014                __end_of___lltoft 32B2  
                        i1l5000 0094                          i1l5014 00D4                          i1l5018 00E0  
                        i1l5028 00FA                          i1l4462 38C4                          i1l4680 39AC  
                __CFG_WDTEN$OFF 000000                          i2l5200 1A22                          i2l5120 197C  
                        i2l5116 1970                          i2l5220 1A4E                          i2l5222 1A54  
                        i2l5126 1988                          i2l4600 174A                          i2l4520 1522  
                        i2l5208 1A30                          i2l5152 19D0                          i2l5136 1998  
                        i2l5128 198C                          i2l5080 18D0                          i2l4514 14F8  
                        i2l5242 1A7E                          i2l5226 1A58                          i2l5218 1A46  
                        i2l5146 19B2                          i2l5082 18D6                          i2l4620 17A8  
                        i2l4524 1526                          i2l4508 14B8                          i2l5252 1A8C  
                        i2l5228 1A5C                          i2l5172 19F0                          i2l5164 19E2  
                        i2l5156 19D6                          i2l5084 18DC                          i2l5076 18B4  
                        i2l4630 17E6                          i2l4614 17A2                          i2l4550 164A  
                        i2l4518 14FC                          i2l5270 1AB4                          i2l5166 19EA  
                        i2l5254 1A92                          i2l5094 191C                          i2l4608 1768  
                        i2l5272 1ABC                          i2l5192 1A14                          i2l5184 1A0A  
                        i2l4634 17EC                          i2l4570 16A2                          i2l4562 165E  
                        i2l4554 1650                          i2l4546 1612                          i2l5098 1924  
                        i2l4590 1720                          i2l4638 17F2                          i2l4558 1656  
                        i2l4494 1472                          i2l4670 39BA                          i2l4592 1726  
                        i2l4578 16C4                          i2l4498 147A                          i2l4596 172C  
              __end_of___lwtoft 3802              __size_of_ReadUSART 0016                          _IR_NEC 00E9  
            __size_of_ReadIRpin 000E                          _SPBRGH 000FB0              ??_VoltageDividerON 0072  
                SetMemoryLong@H 00A3                  SetMemoryLong@L 00A6              __size_of_SetEEPROM 0086  
                     ??_InitADC 0072                       ??_InitApp 0072           ??_ConfigureOscillator 0072  
                        _Global 00E1                          _InitIR 35BC                          _SendRF 307C  
                __CFG_XINST$OFF 000000                   InitUART@spbrg 00A7                __end_of_high_isr 1AFE  
            __size_of_OpenUSART 007C                  _StringContains 2E94                          ___ftge 2ADC  
    __end_of_SyncEEPROMToGlobal 3854                       ??___ftadd 0080                  __CFG_STVREN$ON 000000  
                     ??___ftdiv 0083                       ??___lldiv 007A                       ??___ftmul 0092  
                     ??___llmod 0087                       ??___fttol 008A               cleanBuffer16bit@i 0079  
            __size_of_ResetBlue 0032             __end_of_SendRF_wait 3878                          clear_0 311E  
                        clear_1 3132                          clear_2 3144                          clear_3 3150  
                        clear_4 315C                       ??_delayUS 0076              __size_of_UseIRCode 0180  
         ___ftmul@f3_as_product 0096             __size_of_UARTstring 005A                 ??_InitBluetooth 00CF  
             ?_cleanBuffer16bit 0072          ?_BluetoothInitialSetup 0001                    __mediumconst 0000  
                  ?i2_ReadIRpin 0001                       ??_low_isr 0002                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8              ??_cleanBuffer16bit 0076  
            IRrawToNEC@StartBit 0021          SyncEEPROMToGlobal@Temp 00A0                _CommandStringPos 0039  
             __end_of_GetEEPROM 3700                       ??_sprintf 0090                 __CFG_FOSC$HSPLL 000000  
                    __accesstop 0060         __end_of__initialization 31A2                      ___altoft@c 007A  
                    Round@input 0095                      ___ftadd@f1 007A                      ___ftadd@f2 007D  
                    ___ftge@ff1 0072                      ___ftge@ff2 0075                   ___rparam_used 000001  
                    ___ftdiv@f1 007D                      ___ftdiv@f2 0080                      ___ftdiv@f3 0087  
        __end_of_StringContains 2F38       __size_of_ReadEEPROM_1Byte 003C             __end_of_ResetTimer0 39EA  
           __end_of_ResetTimer1 39D6             __end_of_ResetTimer3 39FE             __size_of_IRrawToNEC 03A2  
                    ___ftmul@f1 008C                      ___ftmul@f2 008F                      ___fttol@f1 0086  
                __pcstackCOMRAM 0001                     ?_InitTimer0 0001                     ?_InitTimer1 0001  
                   ?_InitTimer2 0001                     ?_InitTimer3 0001                     ?_InitTimers 0001  
                 __end_of_Round 3400                  _ReadPushButton 3942                    __pidataBANK0 3920  
                  __pidataBANK1 3772       __size_of_EnterCommandMode 00C8                      ___lltoft@c 007A  
                     ?_UARTchar 0001                     _Init_System 3512               __end_of_ReadUSART 390C  
             __end_of_ReadIRpin 3988                    ??_LEDTimerON 0072                      ___lwtoft@c 007A  
                   _ReadVoltage 2D38               __end_of_SetEEPROM 3232                 ReadVoltage@temp 00A1  
                       ??_Round 0098                   ReadUSART@data 0001               __end_of_OpenUSART 332E  
        __size_of_SetMemoryChar 003A                      __pbssBANK0 00E1                      __pbssBANK1 0100  
                    __pbssBANK2 0200                      __pbssBANK3 0300          __size_of_SetMemoryLong 00FA  
                     ?_InitUART 009C               __end_of_ResetBlue 37D6               __end_of_UseIRCode 2140  
            ReadVoltage@voltage 009E        __size_ofi1_BlueConnected 000E           WriteEEPROM_1Byte@data 0074  
                     ?_ResetADC 0001              __end_of_LEDTimerON 39CC                         ?_InitIR 0001  
               ?_StringContains 0072          __end_of_ReadPushButton 3950        __end_of_InternalADC_Read 2FDA  
                       ?_SendRF 0072                     _SendRF_wait 3854                         ?___ftge 0072  
                    ??_UARTchar 0072               _VoltageDividerOFF 3A04                       ?___altoft 007A  
                     ?___ftpack 0072           EnterCommandMode@count 007C           cleanBuffer16bit@count 0074  
                     ?___lltoft 007A              ?_VoltageDividerOFF 0001                       ?___lwtoft 007A  
                 UseIRCode@Code 00B4               _ReceivedStringPos 0040             ??_VoltageDividerOFF 0072  
               SetMemoryLong@MH 00A4                 SetMemoryLong@ML 00A5               ?_Local_CloseUSART 0001  
       BluetoothInitialSetup@ok 00CE             __size_of_InitTimer0 0010             __size_of_InitTimer1 000E  
           __size_of_InitTimer2 000E             __size_of_InitTimer3 000A             __size_of_InitTimers 0014  
                     ?_high_isr 0001              ??_Local_CloseUSART 0072     __size_of_SyncGlobalToEEPROM 0046  
                    ??_InitUART 00A0                     _ResetTimer0 39E0                     _ResetTimer1 39CC  
                   _ResetTimer3 39F4                    ??_UARTstring 0075                         SendRF@i 0076  
                       _InitADC 38E0                         _InitApp 373A                     low_isr@data 0013  
   __end_of_BluetoothConfigured 38B2                      ??_ResetADC 0072                  InitUART@config 00A9  
                       __Hparam 0000                 ?_ReadPushButton 0001                 __size_of_InitIR 0048  
                       __Lparam 0000                 __size_of_SendRF 009A       __end_of_VoltageDividerOFF 3A08  
                       _Version 1029                 __size_of___ftge 00CE                         ___ftadd 1AFE  
                       ___ftdiv 241C                         ___lldiv 2C72                         ___ftmul 22B0  
                       ___llmod 2DF0                         ___fttol 256E                   _SetMemoryChar 3700  
                  ?_IsCharacter 0001                    __psmallconst 1000                   _SetMemoryLong 28F2  
                    ??___altoft 007E                         __pcinit 3116                         _delayUS 332E  
                    ??___ftpack 0077                         __ramtop 1000                      ??___lltoft 007E  
                       __ptext0 29EC                         __ptext1 2ADC                         __ptext2 1FC0  
                       __ptext3 3854                         __ptext4 307C                         __ptext5 3942  
                       __ptext6 39C0                         __ptext7 39CC                         __ptext8 2D38  
                       __ptext9 37D6                      ??___lwtoft 007D                       _T0CONbits 000FD5  
                     _T1CONbits 000FCD               SetMemoryChar@Data 007D                         _dpowers 1001  
                  ??_IRrawToNEC 0019                       _T2CONbits 000FCA              __end_of_UARTstring 3512  
             SetMemoryChar@Test 007C                       _T3CONbits 000FB1       GetMemoryLong@AddressFirst 0095  
                       _low_isr 0018                   SetEEPROM@Temp 00A7                   SetEEPROM@fail 00B0  
                 SetEEPROM@burn 00AC                         _sprintf 1D7C            __size_ofi2_ReadIRpin 000E  
                    ??_high_isr 0060                  __pintcode_body 17F8            end_of_initialization 31A2  
                 ??_cleanBuffer 0076                     _ProductName 0190                   __Lmediumconst 0000  
                       int_func 17F8                 ___lldiv@divisor 0076                _ReadEEPROM_1Byte 368A  
               ___lldiv@counter 007E              __end_of_IRrawToNEC 17F8                       _RCSTAbits 000FAB  
                       postdec1 000FE5                         postdec2 000FDD                _EnterCommandMode 2BAA  
                       postinc0 000FEE                         postinc2 000FDE                  ?_SetMemoryChar 007B  
     __size_of_VoltageDividerON 0006          __size_of_BlueConnected 000E                  ?_SetMemoryLong 0096  
             ??i1_BlueConnected 0001                       _IRRawCode 0100         ??_BluetoothInitialSetup 009C  
             SetMemoryLong@Data 0096               SetMemoryLong@Test 009F               GetMemoryLong@temp 008D  
        __size_of_GetMemoryChar 002A                       _TRISAbits 000F92                       _TRISBbits 000F93  
            _SyncEEPROMToGlobal 382C                       _TRISCbits 000F94          __size_of_GetMemoryLong 0170  
        __size_of_EEPROM_UNLOCK 0016     __end_of_ConfigureOscillator 3A0A                       _RFcodeBit 003D  
           ?_SyncEEPROMToGlobal 0001           __end_ofi2_ResetTimer0 39F4                       _GetEEPROM 36C6  
                   ___ftdiv@exp 008A                       _TXSTAbits 000FAC       __size_of_cleanBuffer16bit 005E  
           __end_of_cleanBuffer 34B8               _Timer1_Postscaler 0042                     ___ftmul@exp 0095  
                  ??_InitTimer0 0072                    ??_InitTimer1 0072                    ??_InitTimer2 0072  
                  ??_InitTimer3 0072                  __end_of_InitIR 3604                    ??_InitTimers 0072  
    __size_of_VoltageDividerOFF 0004                  __end_of_SendRF 3116                  __end_of___ftge 2BAA  
                  ?_Init_System 0001                  _ReceivedString 0300            ??_SyncEEPROMToGlobal 00A0  
                   _BAUDCONbits 000FB8               __size_of_UARTchar 001E                    ?_ReadVoltage 009B  
              IRrawToNEC@Invert 0018             start_initialization 3116                       _ReadUSART 38F6  
             _Timer2_Postscaler 0043                       _ReadIRpin 397A           __end_of_InitBluetooth 35BC  
                     _SetEEPROM 31AC                   _BlueConnected 3988              __end_of_InitTimer0 3942  
            __end_of_InitTimer1 397A              __end_of_InitTimer2 396C              __end_of_InitTimer3 39E0  
            __end_of_InitTimers 3920                ??_StringContains 0076                      ?_GetEEPROM 0096  
                     _OpenUSART 32B2                 ___llmod@divisor 0083               __size_of_InitUART 0112  
               ___llmod@counter 0087                       _ResetBlue 37A4                       _Sendcount 0041  
                      ??_InitIR 007A                    ?_SendRF_wait 0077                       _UseIRCode 1FC0  
                 _GetMemoryChar 3802                        ??_SendRF 0076               _Timer3_Postscaler 0044  
               ??_SetMemoryChar 007C                   _GetMemoryLong 2140               ?_InternalADC_Read 007C  
               ??_SetMemoryLong 009B                        ??___ftge 0078               __size_of_ResetADC 000E  
                 _EEPROM_UNLOCK 38CA              ??_InternalADC_Read 007E                     __pdataBANK0 00D0  
                   __pdataBANK1 0190                __CFG_LPT1OSC$OFF 000000        WriteEEPROM_1Byte@address 0072  
          __size_of_IsCharacter 0018               __size_of___altoft 00A2               __size_of___ftpack 0120  
     SetMemoryLong@AddressFirst 009A                       Round@temp 0098                cleanBuffer@count 0074  
             __size_of___lltoft 0080                     __pbssCOMRAM 0025                      ?_ReadUSART 0001  
             __size_of___lwtoft 002C                      ?_ReadIRpin 0001                   __pcstackBANK0 0060  
                    ?_SetEEPROM 00A7                  ?_BlueConnected 0001                    ?_ResetTimer0 0001  
                  ?_ResetTimer1 0001                    ?_ResetTimer3 0001                     _cleanBuffer 345E  
              ??_ReadPushButton 0072                      ?_OpenUSART 0072               __size_of_high_isr 1AF6  
                   sprintf@flag 0096                     sprintf@prec 0092                        ?_InitADC 0001  
                      ?_InitApp 0001                      ?_ResetBlue 0001                  ?_GetMemoryChar 0075  
                ?_GetMemoryLong 0075                      ?_UseIRCode 00B4               __CFG_CCP2MX$PORTC 000000  
                ?_EEPROM_UNLOCK 0001                 SendRF_wait@Code 0077       __size_of_Local_CloseUSART 000E  
                     __pintcode 0008                _VoltageDividerON 39FE                        ?___ftadd 007A  
                   IRrawToNEC@i 0020                        ?___ftdiv 007D            cleanBuffer16bit@data 0072  
               SendRF_wait@size 0079                        ?___lldiv 0072                        ?___ftmul 008C  
                      ?___llmod 007F                        ?___fttol 0086                    UseIRCode@NEC 00B6  
                   __pintcodelo 0018                        ?_delayUS 0072               SendRF_wait@amount 007A  
                   __smallconst 1000                   IRrawToNEC@NEC 0016               _WriteEEPROM_1Byte 364A  
                 IRrawToNEC@Raw 0014        __end_of_ReadEEPROM_1Byte 36C6                        ?_low_isr 0001  
            ?_WriteEEPROM_1Byte 0072                  __size_of_Round 0066      __end_of_SyncGlobalToEEPROM 364A  
      __end_of_EnterCommandMode 2C72                        ?_sprintf 0088                       delayUS@US 0072  
               IsCharacter@data 0001                     ??_GetEEPROM 009B             ??_WriteEEPROM_1Byte 0075  
                      _IOCBbits 000F7D                 i1_BlueConnected 39A4                _cleanBuffer16bit 3400  
                      _IPR1bits 000F9F                        _IPR2bits 000FA2                        _PIE1bits 000F9D  
                      _PIE2bits 000FA0                    cleanBuffer@i 0079                        i2u411_40 15B8  
                      i2u409_40 157E                        _PIR1bits 000F9E                        i2u418_40 167C  
                      _PIR2bits 000FA1                        _RCONbits 000FD0                __CFG_WDTPS$32768 000000  
                      _UARTchar 3878    __size_of_BluetoothConfigured 001C        BluetoothInitialSetup@buf 009C  
     ReadEEPROM_1Byte@GIEstatus 0074       __end_of_WriteEEPROM_1Byte 368A                      _ADCON0bits 000FC2  
                    _ADCON1bits 000FC1                      _ADCON2bits 000FC0            __size_of_Init_System 0056  
                      _IRpinOLD 003A  __size_of_BluetoothInitialSetup 03B0   __end_of_BluetoothInitialSetup 1456  
               ??_BlueConnected 0072                        _ChannelF 00D5                     ??_ReadUSART 0001  
                 ??i2_ReadIRpin 0014            __size_of_ReadVoltage 00B8                     ??_ReadIRpin 0072  
                   ??_SetEEPROM 00B0                     _INTCON2bits 000FF1                       copy_data0 3176  
                     copy_data1 3196                   _CommandString 0200                        _InitUART 27E0  
                   ??_OpenUSART 0074                 IRrawToNEC@first 001F                 ??_GetMemoryChar 0079  
               OpenUSART@config 0074                 ??_GetMemoryLong 0079                      _EECON1bits 000FA6  
                   ??_ResetBlue 007C                __size_of_InitADC 0016                 ??_EEPROM_UNLOCK 0072  
                      _ResetADC 3996                __size_of_InitApp 0038                        __Hrparam 0000  
                   ??_UseIRCode 00BA                        __Lrparam 0000              __CFG_BOREN$SBORDIS 000000  
          __size_of_SendRF_wait 0024       InternalADC_Read@ADCcounts 007C                   GetEEPROM@Temp 009B  
              __size_of___ftadd 027E                __size_of___ftdiv 0152                 cleanBuffer@data 0072  
              __size_of___lldiv 00C6                        ___altoft 2FDA                __size_of___ftmul 016C  
              __size_of___llmod 00A4                __size_of___fttol 0152                        ___ftpack 26C0  
    InternalADC_Read@AnaChanSel 0080                        ___lltoft 3232                __size_of_delayUS 006C  
                      ___lwtoft 37D6                      sprintf@val 0097                __size_of_low_isr 0132  
                      __ptext10 22B0                        __ptext11 241C                        __ptext20 339A  
                      __ptext12 39FE                        __ptext21 256E                        __ptext13 3A04  
                      __ptext30 396C                        __ptext22 1AFE                        __ptext14 2F38  
                      __ptext31 35BC                        __ptext23 2FDA                        __ptext15 3512  
                      __ptext40 2C72                        __ptext32 3400                        __ptext24 26C0  
                      __ptext16 382C                        __ptext41 2BAA                        __ptext33 39E0  
                      __ptext25 32B2                        __ptext17 36C6                        __ptext50 3604  
                      __ptext42 345E                        __ptext34 397A                        __ptext26 3950  
                      __ptext18 27E0                        __ptext51 31AC                        __ptext43 34B8  
                      __ptext35 3932                        __ptext27 390C                        __ptext19 3232  
                      __ptext60 3996                        __ptext52 28F2                        __ptext44 3878  
                      __ptext36 3568                        __ptext28 39D6                        __ptext61 373A  
                      __ptext53 2140                        __ptext45 2E94                        __ptext37 10A6  
                      __ptext29 395E                        __ptext70 39F4                        __ptext62 3A08  
                      __ptext54 3700                        __ptext46 37A4                        __ptext38 1D7C  
                      __ptext71 1456                        __ptext55 364A                        __ptext47 332E  
                      __ptext39 2DF0                        __ptext64 39A4                        __ptext56 38CA  
                      __ptext48 3988                        __ptext65 38F6                        __ptext57 3802  
                      __ptext49 3896                        __ptext66 38B2                        __ptext58 368A  
                      __ptext59 38E0                        __ptext68 39EA                        __ptext69 39B2  
       __end_ofi1_BlueConnected 39B2                        _high_isr 0008                __size_of_sprintf 0244  
           __end_ofi2_ReadIRpin 39C0                   __size_of_main 00F0                        delayUS@i 0077  
                      delayUS@j 007B            __size_of_ResetTimer0 000A            __size_of_ResetTimer1 000A  
          __size_of_ResetTimer3 000A       GetMemoryChar@AddressFirst 0079    __size_of_ConfigureOscillator 0002  
              _Local_CloseUSART 3950                 GetMemoryLong@MH 0092                 GetMemoryLong@ML 0093  
   __size_of_SyncEEPROMToGlobal 0028      __size_of_WriteEEPROM_1Byte 0040                      _LEDTimerON 39C0  
        __size_ofi2_ResetTimer0 000A                      _INTCONbits 000FF2       __size_of_InternalADC_Read 00A2  
                OpenUSART@spbrg 0072                    UARTchar@data 0072        __end_of_VoltageDividerON 3A04  
                      intlevel1 0000                        intlevel2 0000                       sprintf@ap 0094  
                     sprintf@sp 0088                    ?_cleanBuffer 0072                ___lldiv@dividend 0072  
                _BatteryVoltage 00E6                  GetMemoryChar@H 007A                     _IR_New_Code 00ED  
                GetMemoryLong@H 0091                  GetMemoryLong@L 0094          __size_of_InitBluetooth 0054  
         __end_of_SetMemoryChar 373A           __end_of_SetMemoryLong 29EC                   ??_IsCharacter 0001  
                 _InitUART$2764 00A4                        sprintf@c 009B        __end_of_cleanBuffer16bit 345E  
                      sprintf@f 008A                ___lldiv@quotient 007A                     i2_ReadIRpin 39B2  
             ?_ReadEEPROM_1Byte 0072                ?i1_BlueConnected 0001              ??_ReadEEPROM_1Byte 0074  
             ?_EnterCommandMode 0001             _BluetoothConfigured 3896              ??_EnterCommandMode 007C  
                    _UARTstring 34B8                   i2_ResetTimer0 39EA              _SyncGlobalToEEPROM 3604  
