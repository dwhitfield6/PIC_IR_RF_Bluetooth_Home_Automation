

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Apr 08 11:54:34 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   117                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   123                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   124  0000                     
   125                           	psect	idataCOMRAM
   126  005BF0                     __pidataCOMRAM:
   127                           	opt stack 0
   128                           
   129                           ;initializer for _IRbitPosition
   130  005BF0  20                 	db	32
   131                           
   132                           ;initializer for _IRcodePlace
   133  005BF1  01                 	db	1
   134                           
   135                           ;initializer for _RF_IR
   136  005BF2  37                 	db	55
   137                           
   138                           ;initializer for _RF_IR_Postscaler
   139  005BF3  02                 	db	2
   140                           
   141                           ;initializer for _ReceivingIR
   142  005BF4  0D                 	db	13
   143                           
   144                           	psect	idataBANK0
   145  005BF5                     __pidataBANK0:
   146                           	opt stack 0
   147                           
   148                           ;initializer for _SN
   149  005BF5  0001               	dw	1
   150  005BF7  0000               	dw	0
   151                           
   152                           ;initializer for _Sent
   153  005BF9  01                 	db	1
   154                           
   155                           	psect	idataBANK1
   156  005920                     __pidataBANK1:
   157                           	opt stack 0
   158                           
   159                           ;initializer for _ProductName
   160  005920  48                 	db	72
   161  005921  6F                 	db	111
   162  005922  6D                 	db	109
   163  005923  65                 	db	101
   164  005924  20                 	db	32
   165  005925  41                 	db	65
   166  005926  75                 	db	117
   167  005927  74                 	db	116
   168  005928  6F                 	db	111
   169  005929  6D                 	db	109
   170  00592A  61                 	db	97
   171  00592B  74                 	db	116
   172  00592C  69                 	db	105
   173  00592D  6F                 	db	111
   174  00592E  6E                 	db	110
   175  00592F  00                 	db	0
   176  005930  00                 	db	0
   177  005931  00                 	db	0
   178  005932  00                 	db	0
   179  005933  00                 	db	0
   180  005934  00                 	db	0
   181  005935  00                 	db	0
   182  005936  00                 	db	0
   183  005937  00                 	db	0
   184  005938  00                 	db	0
   185  005939  00                 	db	0
   186  00593A  00                 	db	0
   187  00593B  00                 	db	0
   188  00593C  00                 	db	0
   189  00593D  00                 	db	0
   190  00593E  00                 	db	0
   191  00593F  00                 	db	0
   192  005940  00                 	db	0
   193  005941  00                 	db	0
   194  005942  00                 	db	0
   195  005943  00                 	db	0
   196  005944  00                 	db	0
   197  005945  00                 	db	0
   198  005946  00                 	db	0
   199  005947  00                 	db	0
   200  005948  00                 	db	0
   201  005949  00                 	db	0
   202  00594A  00                 	db	0
   203  00594B  00                 	db	0
   204  00594C  00                 	db	0
   205  00594D  00                 	db	0
   206  00594E  00                 	db	0
   207  00594F  00                 	db	0
   208  005950  00                 	db	0
   209  005951  00                 	db	0
   210                           
   211                           	psect	mediumconst
   212  00F962                     __pmediumconst:
   213                           	opt stack 0
   214  00F962  00                 	db	0
   215  00F963                     _dpowers:
   216                           	opt stack 0
   217  00F963  0001               	dw	1
   218  00F965  0000               	dw	0
   219  00F967  000A               	dw	10
   220  00F969  0000               	dw	0
   221  00F96B  0064               	dw	100
   222  00F96D  0000               	dw	0
   223  00F96F  03E8               	dw	1000
   224  00F971  0000               	dw	0
   225  00F973  2710               	dw	10000
   226  00F975  0000               	dw	0
   227  00F977  86A0               	dw	34464
   228  00F979  0001               	dw	1
   229  00F97B  4240               	dw	16960
   230  00F97D  000F               	dw	15
   231  00F97F  9680               	dw	38528
   232  00F981  0098               	dw	152
   233  00F983  E100               	dw	57600
   234  00F985  05F5               	dw	1525
   235  00F987  CA00               	dw	51712
   236  00F989  3B9A               	dw	15258
   237  00F98B                     __end_of_dpowers:
   238                           	opt stack 0
   239  00F98B                     _hexpowers:
   240                           	opt stack 0
   241  00F98B  0001               	dw	1
   242  00F98D  0000               	dw	0
   243  00F98F  0010               	dw	16
   244  00F991  0000               	dw	0
   245  00F993  0100               	dw	256
   246  00F995  0000               	dw	0
   247  00F997  1000               	dw	4096
   248  00F999  0000               	dw	0
   249  00F99B  0000               	dw	0
   250  00F99D  0001               	dw	1
   251  00F99F  0000               	dw	0
   252  00F9A1  0010               	dw	16
   253  00F9A3  0000               	dw	0
   254  00F9A5  0100               	dw	256
   255  00F9A7  0000               	dw	0
   256  00F9A9  1000               	dw	4096
   257  00F9AB                     __end_of_hexpowers:
   258                           	opt stack 0
   259  00F9AB                     _Version:
   260                           	opt stack 0
   261  00F9AB  31                 	db	49
   262  00F9AC  2E                 	db	46
   263  00F9AD  30                 	db	48
   264  00F9AE  5F                 	db	95
   265  00F9AF  44                 	db	68
   266  00F9B0  57                 	db	87
   267  00F9B1  30                 	db	48
   268  00F9B2  61                 	db	97
   269  00F9B3  00                 	db	0
   270  00F9B4                     __end_of_Version:
   271                           	opt stack 0
   272  00F9B4                     _SYNTAX_ERR:
   273                           	opt stack 0
   274  00F9B4  53                 	db	83
   275  00F9B5  79                 	db	121
   276  00F9B6  6E                 	db	110
   277  00F9B7  74                 	db	116
   278  00F9B8  61                 	db	97
   279  00F9B9  78                 	db	120
   280  00F9BA  20                 	db	32
   281  00F9BB  45                 	db	69
   282  00F9BC  72                 	db	114
   283  00F9BD  72                 	db	114
   284  00F9BE  6F                 	db	111
   285  00F9BF  72                 	db	114
   286  00F9C0  20                 	db	32
   287  00F9C1  69                 	db	105
   288  00F9C2  6E                 	db	110
   289  00F9C3  20                 	db	32
   290  00F9C4  63                 	db	99
   291  00F9C5  6F                 	db	111
   292  00F9C6  6D                 	db	109
   293  00F9C7  6D                 	db	109
   294  00F9C8  61                 	db	97
   295  00F9C9  6E                 	db	110
   296  00F9CA  64                 	db	100
   297  00F9CB  00                 	db	0
   298  00F9CC                     __end_of_SYNTAX_ERR:
   299                           	opt stack 0
   300  00F9CC                     _Conf2_ChannelH_1_OFF_STR:
   301                           	opt stack 0
   302  00F9CC  43                 	db	67
   303  00F9CD  6F                 	db	111
   304  00F9CE  6E                 	db	110
   305  00F9CF  66                 	db	102
   306  00F9D0  32                 	db	50
   307  00F9D1  5F                 	db	95
   308  00F9D2  43                 	db	67
   309  00F9D3  68                 	db	104
   310  00F9D4  61                 	db	97
   311  00F9D5  6E                 	db	110
   312  00F9D6  6E                 	db	110
   313  00F9D7  65                 	db	101
   314  00F9D8  6C                 	db	108
   315  00F9D9  48                 	db	72
   316  00F9DA  5F                 	db	95
   317  00F9DB  31                 	db	49
   318  00F9DC  5F                 	db	95
   319  00F9DD  4F                 	db	79
   320  00F9DE  46                 	db	70
   321  00F9DF  46                 	db	70
   322  00F9E0  00                 	db	0
   323  00F9E1                     __end_of_Conf2_ChannelH_1_OFF_STR:
   324                           	opt stack 0
   325  00F9E1                     _Conf2_ChannelH_2_OFF_STR:
   326                           	opt stack 0
   327  00F9E1  43                 	db	67
   328  00F9E2  6F                 	db	111
   329  00F9E3  6E                 	db	110
   330  00F9E4  66                 	db	102
   331  00F9E5  32                 	db	50
   332  00F9E6  5F                 	db	95
   333  00F9E7  43                 	db	67
   334  00F9E8  68                 	db	104
   335  00F9E9  61                 	db	97
   336  00F9EA  6E                 	db	110
   337  00F9EB  6E                 	db	110
   338  00F9EC  65                 	db	101
   339  00F9ED  6C                 	db	108
   340  00F9EE  48                 	db	72
   341  00F9EF  5F                 	db	95
   342  00F9F0  32                 	db	50
   343  00F9F1  5F                 	db	95
   344  00F9F2  4F                 	db	79
   345  00F9F3  46                 	db	70
   346  00F9F4  46                 	db	70
   347  00F9F5  00                 	db	0
   348  00F9F6                     __end_of_Conf2_ChannelH_2_OFF_STR:
   349                           	opt stack 0
   350  00F9F6                     _Conf2_ChannelH_3_OFF_STR:
   351                           	opt stack 0
   352  00F9F6  43                 	db	67
   353  00F9F7  6F                 	db	111
   354  00F9F8  6E                 	db	110
   355  00F9F9  66                 	db	102
   356  00F9FA  32                 	db	50
   357  00F9FB  5F                 	db	95
   358  00F9FC  43                 	db	67
   359  00F9FD  68                 	db	104
   360  00F9FE  61                 	db	97
   361  00F9FF  6E                 	db	110
   362  00FA00  6E                 	db	110
   363  00FA01  65                 	db	101
   364  00FA02  6C                 	db	108
   365  00FA03  48                 	db	72
   366  00FA04  5F                 	db	95
   367  00FA05  33                 	db	51
   368  00FA06  5F                 	db	95
   369  00FA07  4F                 	db	79
   370  00FA08  46                 	db	70
   371  00FA09  46                 	db	70
   372  00FA0A  00                 	db	0
   373  00FA0B                     __end_of_Conf2_ChannelH_3_OFF_STR:
   374                           	opt stack 0
   375  00FA0B                     _Conf2_ChannelH_1_ON_STR:
   376                           	opt stack 0
   377  00FA0B  43                 	db	67
   378  00FA0C  6F                 	db	111
   379  00FA0D  6E                 	db	110
   380  00FA0E  66                 	db	102
   381  00FA0F  32                 	db	50
   382  00FA10  5F                 	db	95
   383  00FA11  43                 	db	67
   384  00FA12  68                 	db	104
   385  00FA13  61                 	db	97
   386  00FA14  6E                 	db	110
   387  00FA15  6E                 	db	110
   388  00FA16  65                 	db	101
   389  00FA17  6C                 	db	108
   390  00FA18  48                 	db	72
   391  00FA19  5F                 	db	95
   392  00FA1A  31                 	db	49
   393  00FA1B  5F                 	db	95
   394  00FA1C  4F                 	db	79
   395  00FA1D  4E                 	db	78
   396  00FA1E  00                 	db	0
   397  00FA1F                     __end_of_Conf2_ChannelH_1_ON_STR:
   398                           	opt stack 0
   399  00FA1F                     _Conf2_ChannelH_2_ON_STR:
   400                           	opt stack 0
   401  00FA1F  43                 	db	67
   402  00FA20  6F                 	db	111
   403  00FA21  6E                 	db	110
   404  00FA22  66                 	db	102
   405  00FA23  32                 	db	50
   406  00FA24  5F                 	db	95
   407  00FA25  43                 	db	67
   408  00FA26  68                 	db	104
   409  00FA27  61                 	db	97
   410  00FA28  6E                 	db	110
   411  00FA29  6E                 	db	110
   412  00FA2A  65                 	db	101
   413  00FA2B  6C                 	db	108
   414  00FA2C  48                 	db	72
   415  00FA2D  5F                 	db	95
   416  00FA2E  32                 	db	50
   417  00FA2F  5F                 	db	95
   418  00FA30  4F                 	db	79
   419  00FA31  4E                 	db	78
   420  00FA32  00                 	db	0
   421  00FA33                     __end_of_Conf2_ChannelH_2_ON_STR:
   422                           	opt stack 0
   423  00FA33                     _Conf2_ChannelH_3_ON_STR:
   424                           	opt stack 0
   425  00FA33  43                 	db	67
   426  00FA34  6F                 	db	111
   427  00FA35  6E                 	db	110
   428  00FA36  66                 	db	102
   429  00FA37  32                 	db	50
   430  00FA38  5F                 	db	95
   431  00FA39  43                 	db	67
   432  00FA3A  68                 	db	104
   433  00FA3B  61                 	db	97
   434  00FA3C  6E                 	db	110
   435  00FA3D  6E                 	db	110
   436  00FA3E  65                 	db	101
   437  00FA3F  6C                 	db	108
   438  00FA40  48                 	db	72
   439  00FA41  5F                 	db	95
   440  00FA42  33                 	db	51
   441  00FA43  5F                 	db	95
   442  00FA44  4F                 	db	79
   443  00FA45  4E                 	db	78
   444  00FA46  00                 	db	0
   445  00FA47                     __end_of_Conf2_ChannelH_3_ON_STR:
   446                           	opt stack 0
   447  00FA47                     _Conf2_ChannelB_OFF_STR:
   448                           	opt stack 0
   449  00FA47  43                 	db	67
   450  00FA48  6F                 	db	111
   451  00FA49  6E                 	db	110
   452  00FA4A  66                 	db	102
   453  00FA4B  32                 	db	50
   454  00FA4C  5F                 	db	95
   455  00FA4D  43                 	db	67
   456  00FA4E  68                 	db	104
   457  00FA4F  61                 	db	97
   458  00FA50  6E                 	db	110
   459  00FA51  6E                 	db	110
   460  00FA52  65                 	db	101
   461  00FA53  6C                 	db	108
   462  00FA54  42                 	db	66
   463  00FA55  5F                 	db	95
   464  00FA56  4F                 	db	79
   465  00FA57  46                 	db	70
   466  00FA58  46                 	db	70
   467  00FA59  00                 	db	0
   468  00FA5A                     __end_of_Conf2_ChannelB_OFF_STR:
   469                           	opt stack 0
   470  00FA5A                     _Conf2_ChannelD_OFF_STR:
   471                           	opt stack 0
   472  00FA5A  43                 	db	67
   473  00FA5B  6F                 	db	111
   474  00FA5C  6E                 	db	110
   475  00FA5D  66                 	db	102
   476  00FA5E  32                 	db	50
   477  00FA5F  5F                 	db	95
   478  00FA60  43                 	db	67
   479  00FA61  68                 	db	104
   480  00FA62  61                 	db	97
   481  00FA63  6E                 	db	110
   482  00FA64  6E                 	db	110
   483  00FA65  65                 	db	101
   484  00FA66  6C                 	db	108
   485  00FA67  44                 	db	68
   486  00FA68  5F                 	db	95
   487  00FA69  4F                 	db	79
   488  00FA6A  46                 	db	70
   489  00FA6B  46                 	db	70
   490  00FA6C  00                 	db	0
   491  00FA6D                     __end_of_Conf2_ChannelD_OFF_STR:
   492                           	opt stack 0
   493  00FA6D                     _Conf2_ChannelB_ON_STR:
   494                           	opt stack 0
   495  00FA6D  43                 	db	67
   496  00FA6E  6F                 	db	111
   497  00FA6F  6E                 	db	110
   498  00FA70  66                 	db	102
   499  00FA71  32                 	db	50
   500  00FA72  5F                 	db	95
   501  00FA73  43                 	db	67
   502  00FA74  68                 	db	104
   503  00FA75  61                 	db	97
   504  00FA76  6E                 	db	110
   505  00FA77  6E                 	db	110
   506  00FA78  65                 	db	101
   507  00FA79  6C                 	db	108
   508  00FA7A  42                 	db	66
   509  00FA7B  5F                 	db	95
   510  00FA7C  4F                 	db	79
   511  00FA7D  4E                 	db	78
   512  00FA7E  00                 	db	0
   513  00FA7F                     __end_of_Conf2_ChannelB_ON_STR:
   514                           	opt stack 0
   515  00FA7F                     _Conf2_ChannelD_ON_STR:
   516                           	opt stack 0
   517  00FA7F  43                 	db	67
   518  00FA80  6F                 	db	111
   519  00FA81  6E                 	db	110
   520  00FA82  66                 	db	102
   521  00FA83  32                 	db	50
   522  00FA84  5F                 	db	95
   523  00FA85  43                 	db	67
   524  00FA86  68                 	db	104
   525  00FA87  61                 	db	97
   526  00FA88  6E                 	db	110
   527  00FA89  6E                 	db	110
   528  00FA8A  65                 	db	101
   529  00FA8B  6C                 	db	108
   530  00FA8C  44                 	db	68
   531  00FA8D  5F                 	db	95
   532  00FA8E  4F                 	db	79
   533  00FA8F  4E                 	db	78
   534  00FA90  00                 	db	0
   535  00FA91                     __end_of_Conf2_ChannelD_ON_STR:
   536                           	opt stack 0
   537  00FA91                     _Conf2_ChannelB_OFF:
   538                           	opt stack 0
   539  00FA91  00                 	db	0
   540  00FA92  01                 	db	1
   541  00FA93  01                 	db	1
   542  00FA94  00                 	db	0
   543  00FA95  01                 	db	1
   544  00FA96  00                 	db	0
   545  00FA97  00                 	db	0
   546  00FA98  00                 	db	0
   547  00FA99  00                 	db	0
   548  00FA9A  00                 	db	0
   549  00FA9B  00                 	db	0
   550  00FA9C  01                 	db	1
   551  00FA9D  00                 	db	0
   552  00FA9E  01                 	db	1
   553  00FA9F  00                 	db	0
   554  00FAA0  00                 	db	0
   555  00FAA1                     __end_of_Conf2_ChannelB_OFF:
   556                           	opt stack 0
   557  00FAA1                     _Conf2_ChannelB_ON:
   558                           	opt stack 0
   559  00FAA1  00                 	db	0
   560  00FAA2  01                 	db	1
   561  00FAA3  01                 	db	1
   562  00FAA4  00                 	db	0
   563  00FAA5  01                 	db	1
   564  00FAA6  00                 	db	0
   565  00FAA7  00                 	db	0
   566  00FAA8  00                 	db	0
   567  00FAA9  00                 	db	0
   568  00FAAA  00                 	db	0
   569  00FAAB  01                 	db	1
   570  00FAAC  00                 	db	0
   571  00FAAD  00                 	db	0
   572  00FAAE  01                 	db	1
   573  00FAAF  00                 	db	0
   574  00FAB0  00                 	db	0
   575  00FAB1                     __end_of_Conf2_ChannelB_ON:
   576                           	opt stack 0
   577  00FAB1                     _Conf2_ChannelD_OFF:
   578                           	opt stack 0
   579  00FAB1  00                 	db	0
   580  00FAB2  01                 	db	1
   581  00FAB3  01                 	db	1
   582  00FAB4  00                 	db	0
   583  00FAB5  01                 	db	1
   584  00FAB6  00                 	db	0
   585  00FAB7  00                 	db	0
   586  00FAB8  00                 	db	0
   587  00FAB9  00                 	db	0
   588  00FABA  00                 	db	0
   589  00FABB  00                 	db	0
   590  00FABC  01                 	db	1
   591  00FABD  00                 	db	0
   592  00FABE  00                 	db	0
   593  00FABF  00                 	db	0
   594  00FAC0  01                 	db	1
   595  00FAC1                     __end_of_Conf2_ChannelD_OFF:
   596                           	opt stack 0
   597  00FAC1                     _Conf2_ChannelD_ON:
   598                           	opt stack 0
   599  00FAC1  00                 	db	0
   600  00FAC2  01                 	db	1
   601  00FAC3  01                 	db	1
   602  00FAC4  00                 	db	0
   603  00FAC5  01                 	db	1
   604  00FAC6  00                 	db	0
   605  00FAC7  00                 	db	0
   606  00FAC8  00                 	db	0
   607  00FAC9  00                 	db	0
   608  00FACA  00                 	db	0
   609  00FACB  01                 	db	1
   610  00FACC  00                 	db	0
   611  00FACD  00                 	db	0
   612  00FACE  00                 	db	0
   613  00FACF  00                 	db	0
   614  00FAD0  01                 	db	1
   615  00FAD1                     __end_of_Conf2_ChannelD_ON:
   616                           	opt stack 0
   617  00FAD1                     _Conf2_ChannelH_1_OFF:
   618                           	opt stack 0
   619  00FAD1  00                 	db	0
   620  00FAD2  01                 	db	1
   621  00FAD3  01                 	db	1
   622  00FAD4  00                 	db	0
   623  00FAD5  01                 	db	1
   624  00FAD6  00                 	db	0
   625  00FAD7  00                 	db	0
   626  00FAD8  00                 	db	0
   627  00FAD9  00                 	db	0
   628  00FADA  01                 	db	1
   629  00FADB  00                 	db	0
   630  00FADC  00                 	db	0
   631  00FADD  00                 	db	0
   632  00FADE  00                 	db	0
   633  00FADF  00                 	db	0
   634  00FAE0  00                 	db	0
   635  00FAE1                     __end_of_Conf2_ChannelH_1_OFF:
   636                           	opt stack 0
   637  00FAE1                     _Conf2_ChannelH_1_ON:
   638                           	opt stack 0
   639  00FAE1  00                 	db	0
   640  00FAE2  01                 	db	1
   641  00FAE3  01                 	db	1
   642  00FAE4  00                 	db	0
   643  00FAE5  01                 	db	1
   644  00FAE6  00                 	db	0
   645  00FAE7  00                 	db	0
   646  00FAE8  00                 	db	0
   647  00FAE9  01                 	db	1
   648  00FAEA  00                 	db	0
   649  00FAEB  00                 	db	0
   650  00FAEC  00                 	db	0
   651  00FAED  00                 	db	0
   652  00FAEE  00                 	db	0
   653  00FAEF  00                 	db	0
   654  00FAF0  00                 	db	0
   655  00FAF1                     __end_of_Conf2_ChannelH_1_ON:
   656                           	opt stack 0
   657  00FAF1                     _Conf2_ChannelH_2_OFF:
   658                           	opt stack 0
   659  00FAF1  00                 	db	0
   660  00FAF2  01                 	db	1
   661  00FAF3  01                 	db	1
   662  00FAF4  00                 	db	0
   663  00FAF5  01                 	db	1
   664  00FAF6  00                 	db	0
   665  00FAF7  00                 	db	0
   666  00FAF8  00                 	db	0
   667  00FAF9  00                 	db	0
   668  00FAFA  00                 	db	0
   669  00FAFB  00                 	db	0
   670  00FAFC  01                 	db	1
   671  00FAFD  00                 	db	0
   672  00FAFE  00                 	db	0
   673  00FAFF  00                 	db	0
   674  00FB00  00                 	db	0
   675  00FB01                     __end_of_Conf2_ChannelH_2_OFF:
   676                           	opt stack 0
   677  00FB01                     _Conf2_ChannelH_2_ON:
   678                           	opt stack 0
   679  00FB01  00                 	db	0
   680  00FB02  01                 	db	1
   681  00FB03  01                 	db	1
   682  00FB04  00                 	db	0
   683  00FB05  01                 	db	1
   684  00FB06  00                 	db	0
   685  00FB07  00                 	db	0
   686  00FB08  00                 	db	0
   687  00FB09  00                 	db	0
   688  00FB0A  00                 	db	0
   689  00FB0B  01                 	db	1
   690  00FB0C  00                 	db	0
   691  00FB0D  00                 	db	0
   692  00FB0E  00                 	db	0
   693  00FB0F  00                 	db	0
   694  00FB10  00                 	db	0
   695  00FB11                     __end_of_Conf2_ChannelH_2_ON:
   696                           	opt stack 0
   697  00FB11                     _Conf2_ChannelH_3_OFF:
   698                           	opt stack 0
   699  00FB11  00                 	db	0
   700  00FB12  01                 	db	1
   701  00FB13  01                 	db	1
   702  00FB14  00                 	db	0
   703  00FB15  01                 	db	1
   704  00FB16  00                 	db	0
   705  00FB17  01                 	db	1
   706  00FB18  00                 	db	0
   707  00FB19  00                 	db	0
   708  00FB1A  00                 	db	0
   709  00FB1B  00                 	db	0
   710  00FB1C  00                 	db	0
   711  00FB1D  00                 	db	0
   712  00FB1E  00                 	db	0
   713  00FB1F  00                 	db	0
   714  00FB20  00                 	db	0
   715  00FB21                     __end_of_Conf2_ChannelH_3_OFF:
   716                           	opt stack 0
   717  00FB21                     _Conf2_ChannelH_3_ON:
   718                           	opt stack 0
   719  00FB21  00                 	db	0
   720  00FB22  01                 	db	1
   721  00FB23  01                 	db	1
   722  00FB24  00                 	db	0
   723  00FB25  01                 	db	1
   724  00FB26  00                 	db	0
   725  00FB27  00                 	db	0
   726  00FB28  01                 	db	1
   727  00FB29  00                 	db	0
   728  00FB2A  00                 	db	0
   729  00FB2B  00                 	db	0
   730  00FB2C  00                 	db	0
   731  00FB2D  00                 	db	0
   732  00FB2E  00                 	db	0
   733  00FB2F  00                 	db	0
   734  00FB30  00                 	db	0
   735  00FB31                     __end_of_Conf2_ChannelH_3_ON:
   736                           	opt stack 0
   737  00FB31                     _Conf1_ChannelD_STR:
   738                           	opt stack 0
   739  00FB31  43                 	db	67
   740  00FB32  6F                 	db	111
   741  00FB33  6E                 	db	110
   742  00FB34  66                 	db	102
   743  00FB35  31                 	db	49
   744  00FB36  5F                 	db	95
   745  00FB37  43                 	db	67
   746  00FB38  68                 	db	104
   747  00FB39  61                 	db	97
   748  00FB3A  6E                 	db	110
   749  00FB3B  6E                 	db	110
   750  00FB3C  65                 	db	101
   751  00FB3D  6C                 	db	108
   752  00FB3E  44                 	db	68
   753  00FB3F  00                 	db	0
   754  00FB40                     __end_of_Conf1_ChannelD_STR:
   755                           	opt stack 0
   756  00FB40                     _Conf1_ChannelE_STR:
   757                           	opt stack 0
   758  00FB40  43                 	db	67
   759  00FB41  6F                 	db	111
   760  00FB42  6E                 	db	110
   761  00FB43  66                 	db	102
   762  00FB44  31                 	db	49
   763  00FB45  5F                 	db	95
   764  00FB46  43                 	db	67
   765  00FB47  68                 	db	104
   766  00FB48  61                 	db	97
   767  00FB49  6E                 	db	110
   768  00FB4A  6E                 	db	110
   769  00FB4B  65                 	db	101
   770  00FB4C  6C                 	db	108
   771  00FB4D  45                 	db	69
   772  00FB4E  00                 	db	0
   773  00FB4F                     __end_of_Conf1_ChannelE_STR:
   774                           	opt stack 0
   775  00FB4F                     _Conf1_ChannelF_STR:
   776                           	opt stack 0
   777  00FB4F  43                 	db	67
   778  00FB50  6F                 	db	111
   779  00FB51  6E                 	db	110
   780  00FB52  66                 	db	102
   781  00FB53  31                 	db	49
   782  00FB54  5F                 	db	95
   783  00FB55  43                 	db	67
   784  00FB56  68                 	db	104
   785  00FB57  61                 	db	97
   786  00FB58  6E                 	db	110
   787  00FB59  6E                 	db	110
   788  00FB5A  65                 	db	101
   789  00FB5B  6C                 	db	108
   790  00FB5C  46                 	db	70
   791  00FB5D  00                 	db	0
   792  00FB5E                     __end_of_Conf1_ChannelF_STR:
   793                           	opt stack 0
   794  00FB5E                     _Conf1_ChannelD:
   795                           	opt stack 0
   796  00FB5E  03                 	db	3
   797  00FB5F  03                 	db	3
   798  00FB60  03                 	db	3
   799  00FB61  03                 	db	3
   800  00FB62  03                 	db	3
   801  00FB63  03                 	db	3
   802  00FB64  00                 	db	0
   803  00FB65  00                 	db	0
   804  00FB66  01                 	db	1
   805  00FB67  00                 	db	0
   806  00FB68  00                 	db	0
   807  00FB69  00                 	db	0
   808  00FB6A                     __end_of_Conf1_ChannelD:
   809                           	opt stack 0
   810  00FB6A                     _Conf1_ChannelE:
   811                           	opt stack 0
   812  00FB6A  00                 	db	0
   813  00FB6B  03                 	db	3
   814  00FB6C  03                 	db	3
   815  00FB6D  03                 	db	3
   816  00FB6E  03                 	db	3
   817  00FB6F  03                 	db	3
   818  00FB70  00                 	db	0
   819  00FB71  00                 	db	0
   820  00FB72  01                 	db	1
   821  00FB73  00                 	db	0
   822  00FB74  00                 	db	0
   823  00FB75  00                 	db	0
   824  00FB76                     __end_of_Conf1_ChannelE:
   825                           	opt stack 0
   826  00FB76                     _Conf1_ChannelF:
   827                           	opt stack 0
   828  00FB76  03                 	db	3
   829  00FB77  00                 	db	0
   830  00FB78  03                 	db	3
   831  00FB79  03                 	db	3
   832  00FB7A  03                 	db	3
   833  00FB7B  03                 	db	3
   834  00FB7C  00                 	db	0
   835  00FB7D  00                 	db	0
   836  00FB7E  01                 	db	1
   837  00FB7F  00                 	db	0
   838  00FB80  00                 	db	0
   839  00FB81  00                 	db	0
   840  00FB82                     __end_of_Conf1_ChannelF:
   841                           	opt stack 0
   842  00FB82                     _CRLN:
   843                           	opt stack 0
   844  00FB82  0D                 	db	13
   845  00FB83  0A                 	db	10
   846  00FB84  00                 	db	0
   847  00FB85                     __end_of_CRLN:
   848                           	opt stack 0
   849  0000                     _ADCON0	set	4034
   850  0000                     _ADCON0bits	set	4034
   851  0000                     _ADCON1	set	4033
   852  0000                     _ADCON1bits	set	4033
   853  0000                     _ADCON2	set	4032
   854  0000                     _ADCON2bits	set	4032
   855  0000                     _ADRESH	set	4036
   856  0000                     _ADRESL	set	4035
   857  0000                     _ANSEL	set	3966
   858  0000                     _ANSELH	set	3967
   859  0000                     _BAUDCONbits	set	4024
   860  0000                     _EEADR	set	4009
   861  0000                     _EEADRH	set	4010
   862  0000                     _EECON1bits	set	4006
   863  0000                     _EECON2	set	4007
   864  0000                     _EEDATA	set	4008
   865  0000                     _INTCON2bits	set	4081
   866  0000                     _INTCONbits	set	4082
   867  0000                     _IOCBbits	set	3965
   868  0000                     _IPR1bits	set	3999
   869  0000                     _IPR2bits	set	4002
   870  0000                     _LATA	set	3977
   871  0000                     _LATB	set	3978
   872  0000                     _LATC	set	3979
   873  0000                     _PIE1bits	set	3997
   874  0000                     _PIE2bits	set	4000
   875  0000                     _PIR1bits	set	3998
   876  0000                     _PIR2bits	set	4001
   877  0000                     _PORTA	set	3968
   878  0000                     _PORTB	set	3969
   879  0000                     _PORTC	set	3970
   880  0000                     _PR2	set	4043
   881  0000                     _RCONbits	set	4048
   882  0000                     _RCREG	set	4014
   883  0000                     _RCSTA	set	4011
   884  0000                     _RCSTAbits	set	4011
   885  0000                     _SPBRG	set	4015
   886  0000                     _SPBRGH	set	4016
   887  0000                     _T0CONbits	set	4053
   888  0000                     _T1CONbits	set	4045
   889  0000                     _T2CONbits	set	4042
   890  0000                     _T3CONbits	set	4017
   891  0000                     _TMR0H	set	4055
   892  0000                     _TMR0L	set	4054
   893  0000                     _TMR1H	set	4047
   894  0000                     _TMR1L	set	4046
   895  0000                     _TMR2	set	4044
   896  0000                     _TMR3H	set	4019
   897  0000                     _TMR3L	set	4018
   898  0000                     _TRISAbits	set	3986
   899  0000                     _TRISBbits	set	3987
   900  0000                     _TRISCbits	set	3988
   901  0000                     _TXREG	set	4013
   902  0000                     _TXSTA	set	4012
   903  0000                     _TXSTAbits	set	4012
   904  0000                     _WPUB	set	3964
   905  00FB85                     STR_55:
   906  00FB85  7E                 	db	126
   907  00FB86  7E                 	db	126
   908  00FB87  7E                 	db	126
   909  00FB88  7E                 	db	126
   910  00FB89  7E                 	db	126
   911  00FB8A  7E                 	db	126
   912  00FB8B  7E                 	db	126
   913  00FB8C  7E                 	db	126
   914  00FB8D  7E                 	db	126
   915  00FB8E  7E                 	db	126
   916  00FB8F  7E                 	db	126
   917  00FB90  7E                 	db	126
   918  00FB91  7E                 	db	126
   919  00FB92  7E                 	db	126
   920  00FB93  7E                 	db	126
   921  00FB94  7E                 	db	126
   922  00FB95  7E                 	db	126
   923  00FB96  7E                 	db	126
   924  00FB97  7E                 	db	126
   925  00FB98  7E                 	db	126
   926  00FB99  7E                 	db	126
   927  00FB9A  7E                 	db	126
   928  00FB9B  7E                 	db	126
   929  00FB9C  7E                 	db	126
   930  00FB9D  7E                 	db	126
   931  00FB9E  43                 	db	67	;'C'
   932  00FB9F  6F                 	db	111	;'o'
   933  00FBA0  6D                 	db	109	;'m'
   934  00FBA1  6D                 	db	109	;'m'
   935  00FBA2  61                 	db	97	;'a'
   936  00FBA3  6E                 	db	110	;'n'
   937  00FBA4  64                 	db	100	;'d'
   938  00FBA5  20                 	db	32
   939  00FBA6  4D                 	db	77	;'M'
   940  00FBA7  65                 	db	101	;'e'
   941  00FBA8  6E                 	db	110	;'n'
   942  00FBA9  75                 	db	117	;'u'
   943  00FBAA  7E                 	db	126
   944  00FBAB  7E                 	db	126
   945  00FBAC  7E                 	db	126
   946  00FBAD  7E                 	db	126
   947  00FBAE  7E                 	db	126
   948  00FBAF  7E                 	db	126
   949  00FBB0  7E                 	db	126
   950  00FBB1  7E                 	db	126
   951  00FBB2  7E                 	db	126
   952  00FBB3  7E                 	db	126
   953  00FBB4  7E                 	db	126
   954  00FBB5  7E                 	db	126
   955  00FBB6  7E                 	db	126
   956  00FBB7  7E                 	db	126
   957  00FBB8  7E                 	db	126
   958  00FBB9  7E                 	db	126
   959  00FBBA  7E                 	db	126
   960  00FBBB  7E                 	db	126
   961  00FBBC  7E                 	db	126
   962  00FBBD  7E                 	db	126
   963  00FBBE  7E                 	db	126
   964  00FBBF  7E                 	db	126
   965  00FBC0  7E                 	db	126
   966  00FBC1  7E                 	db	126
   967  00FBC2  7E                 	db	126
   968  00FBC3  7E                 	db	126
   969  00FBC4  00                 	db	0
   970  00FBC5                     STR_46:
   971  00FBC5  59                 	db	89	;'Y'
   972  00FBC6  6F                 	db	111	;'o'
   973  00FBC7  75                 	db	117	;'u'
   974  00FBC8  20                 	db	32
   975  00FBC9  74                 	db	116	;'t'
   976  00FBCA  6F                 	db	111	;'o'
   977  00FBCB  6F                 	db	111	;'o'
   978  00FBCC  6B                 	db	107	;'k'
   979  00FBCD  20                 	db	32
   980  00FBCE  74                 	db	116	;'t'
   981  00FBCF  6F                 	db	111	;'o'
   982  00FBD0  6F                 	db	111	;'o'
   983  00FBD1  20                 	db	32
   984  00FBD2  6C                 	db	108	;'l'
   985  00FBD3  6F                 	db	111	;'o'
   986  00FBD4  6E                 	db	110	;'n'
   987  00FBD5  67                 	db	103	;'g'
   988  00FBD6  20                 	db	32
   989  00FBD7  68                 	db	104	;'h'
   990  00FBD8  69                 	db	105	;'i'
   991  00FBD9  74                 	db	116	;'t'
   992  00FBDA  20                 	db	32
   993  00FBDB  61                 	db	97	;'a'
   994  00FBDC  20                 	db	32
   995  00FBDD  62                 	db	98	;'b'
   996  00FBDE  75                 	db	117	;'u'
   997  00FBDF  74                 	db	116	;'t'
   998  00FBE0  74                 	db	116	;'t'
   999  00FBE1  6F                 	db	111	;'o'
  1000  00FBE2  6E                 	db	110	;'n'
  1001  00FBE3  20                 	db	32
  1002  00FBE4  6F                 	db	111	;'o'
  1003  00FBE5  6E                 	db	110	;'n'
  1004  00FBE6  20                 	db	32
  1005  00FBE7  74                 	db	116	;'t'
  1006  00FBE8  68                 	db	104	;'h'
  1007  00FBE9  65                 	db	101	;'e'
  1008  00FBEA  20                 	db	32
  1009  00FBEB  72                 	db	114	;'r'
  1010  00FBEC  65                 	db	101	;'e'
  1011  00FBED  6D                 	db	109	;'m'
  1012  00FBEE  6F                 	db	111	;'o'
  1013  00FBEF  74                 	db	116	;'t'
  1014  00FBF0  65                 	db	101	;'e'
  1015  00FBF1  00                 	db	0
  1016  00FBF2                     STR_48:
  1017  00FBF2  45                 	db	69	;'E'
  1018  00FBF3  72                 	db	114	;'r'
  1019  00FBF4  72                 	db	114	;'r'
  1020  00FBF5  6F                 	db	111	;'o'
  1021  00FBF6  72                 	db	114	;'r'
  1022  00FBF7  3A                 	db	58	;':'
  1023  00FBF8  20                 	db	32
  1024  00FBF9  52                 	db	82	;'R'
  1025  00FBFA  65                 	db	101	;'e'
  1026  00FBFB  6D                 	db	109	;'m'
  1027  00FBFC  6F                 	db	111	;'o'
  1028  00FBFD  74                 	db	116	;'t'
  1029  00FBFE  65                 	db	101	;'e'
  1030  00FBFF  20                 	db	32
  1031  00FC00  62                 	db	98	;'b'
  1032  00FC01  75                 	db	117	;'u'
  1033  00FC02  74                 	db	116	;'t'
  1034  00FC03  74                 	db	116	;'t'
  1035  00FC04  6F                 	db	111	;'o'
  1036  00FC05  6E                 	db	110	;'n'
  1037  00FC06  20                 	db	32
  1038  00FC07  6E                 	db	110	;'n'
  1039  00FC08  6F                 	db	111	;'o'
  1040  00FC09  74                 	db	116	;'t'
  1041  00FC0A  20                 	db	32
  1042  00FC0B  73                 	db	115	;'s'
  1043  00FC0C  70                 	db	112	;'p'
  1044  00FC0D  65                 	db	101	;'e'
  1045  00FC0E  63                 	db	99	;'c'
  1046  00FC0F  69                 	db	105	;'i'
  1047  00FC10  66                 	db	102	;'f'
  1048  00FC11  69                 	db	105	;'i'
  1049  00FC12  65                 	db	101	;'e'
  1050  00FC13  64                 	db	100	;'d'
  1051  00FC14  00                 	db	0
  1052  00FC15                     STR_34:
  1053  00FC15  45                 	db	69	;'E'
  1054  00FC16  72                 	db	114	;'r'
  1055  00FC17  72                 	db	114	;'r'
  1056  00FC18  6F                 	db	111	;'o'
  1057  00FC19  72                 	db	114	;'r'
  1058  00FC1A  3A                 	db	58	;':'
  1059  00FC1B  20                 	db	32
  1060  00FC1C  63                 	db	99	;'c'
  1061  00FC1D  6F                 	db	111	;'o'
  1062  00FC1E  75                 	db	117	;'u'
  1063  00FC1F  6C                 	db	108	;'l'
  1064  00FC20  64                 	db	100	;'d'
  1065  00FC21  20                 	db	32
  1066  00FC22  6E                 	db	110	;'n'
  1067  00FC23  6F                 	db	111	;'o'
  1068  00FC24  74                 	db	116	;'t'
  1069  00FC25  20                 	db	32
  1070  00FC26  64                 	db	100	;'d'
  1071  00FC27  65                 	db	101	;'e'
  1072  00FC28  63                 	db	99	;'c'
  1073  00FC29  6F                 	db	111	;'o'
  1074  00FC2A  64                 	db	100	;'d'
  1075  00FC2B  65                 	db	101	;'e'
  1076  00FC2C  20                 	db	32
  1077  00FC2D  4E                 	db	78	;'N'
  1078  00FC2E  45                 	db	69	;'E'
  1079  00FC2F  43                 	db	67	;'C'
  1080  00FC30  20                 	db	32
  1081  00FC31  63                 	db	99	;'c'
  1082  00FC32  6F                 	db	111	;'o'
  1083  00FC33  64                 	db	100	;'d'
  1084  00FC34  65                 	db	101	;'e'
  1085  00FC35  00                 	db	0
  1086  00FC36                     STR_68:
  1087  00FC36  52                 	db	82	;'R'
  1088  00FC37  43                 	db	67	;'C'
  1089  00FC38  2D                 	db	45
  1090  00FC39  30                 	db	48	;'0'
  1091  00FC3A  31                 	db	49	;'1'
  1092  00FC3B  35                 	db	53	;'5'
  1093  00FC3C  2A                 	db	42
  1094  00FC3D  33                 	db	51	;'3'
  1095  00FC3E  20                 	db	32
  1096  00FC3F  43                 	db	67	;'C'
  1097  00FC40  68                 	db	104	;'h'
  1098  00FC41  61                 	db	97	;'a'
  1099  00FC42  6E                 	db	110	;'n'
  1100  00FC43  6E                 	db	110	;'n'
  1101  00FC44  65                 	db	101	;'e'
  1102  00FC45  6C                 	db	108	;'l'
  1103  00FC46  20                 	db	32
  1104  00FC47  48                 	db	72	;'H'
  1105  00FC48  20                 	db	32
  1106  00FC49  64                 	db	100	;'d'
  1107  00FC4A  65                 	db	101	;'e'
  1108  00FC4B  76                 	db	118	;'v'
  1109  00FC4C  69                 	db	105	;'i'
  1110  00FC4D  63                 	db	99	;'c'
  1111  00FC4E  65                 	db	101	;'e'
  1112  00FC4F  20                 	db	32
  1113  00FC50  31                 	db	49	;'1'
  1114  00FC51  20                 	db	32
  1115  00FC52  4F                 	db	79	;'O'
  1116  00FC53  46                 	db	70	;'F'
  1117  00FC54  46                 	db	70	;'F'
  1118  00FC55  00                 	db	0
  1119  00FC56                     STR_70:
  1120  00FC56  52                 	db	82	;'R'
  1121  00FC57  43                 	db	67	;'C'
  1122  00FC58  2D                 	db	45
  1123  00FC59  30                 	db	48	;'0'
  1124  00FC5A  31                 	db	49	;'1'
  1125  00FC5B  35                 	db	53	;'5'
  1126  00FC5C  2A                 	db	42
  1127  00FC5D  33                 	db	51	;'3'
  1128  00FC5E  20                 	db	32
  1129  00FC5F  43                 	db	67	;'C'
  1130  00FC60  68                 	db	104	;'h'
  1131  00FC61  61                 	db	97	;'a'
  1132  00FC62  6E                 	db	110	;'n'
  1133  00FC63  6E                 	db	110	;'n'
  1134  00FC64  65                 	db	101	;'e'
  1135  00FC65  6C                 	db	108	;'l'
  1136  00FC66  20                 	db	32
  1137  00FC67  48                 	db	72	;'H'
  1138  00FC68  20                 	db	32
  1139  00FC69  64                 	db	100	;'d'
  1140  00FC6A  65                 	db	101	;'e'
  1141  00FC6B  76                 	db	118	;'v'
  1142  00FC6C  69                 	db	105	;'i'
  1143  00FC6D  63                 	db	99	;'c'
  1144  00FC6E  65                 	db	101	;'e'
  1145  00FC6F  20                 	db	32
  1146  00FC70  32                 	db	50	;'2'
  1147  00FC71  20                 	db	32
  1148  00FC72  4F                 	db	79	;'O'
  1149  00FC73  46                 	db	70	;'F'
  1150  00FC74  46                 	db	70	;'F'
  1151  00FC75  00                 	db	0
  1152  00FC76                     STR_72:
  1153  00FC76  52                 	db	82	;'R'
  1154  00FC77  43                 	db	67	;'C'
  1155  00FC78  2D                 	db	45
  1156  00FC79  30                 	db	48	;'0'
  1157  00FC7A  31                 	db	49	;'1'
  1158  00FC7B  35                 	db	53	;'5'
  1159  00FC7C  2A                 	db	42
  1160  00FC7D  33                 	db	51	;'3'
  1161  00FC7E  20                 	db	32
  1162  00FC7F  43                 	db	67	;'C'
  1163  00FC80  68                 	db	104	;'h'
  1164  00FC81  61                 	db	97	;'a'
  1165  00FC82  6E                 	db	110	;'n'
  1166  00FC83  6E                 	db	110	;'n'
  1167  00FC84  65                 	db	101	;'e'
  1168  00FC85  6C                 	db	108	;'l'
  1169  00FC86  20                 	db	32
  1170  00FC87  48                 	db	72	;'H'
  1171  00FC88  20                 	db	32
  1172  00FC89  64                 	db	100	;'d'
  1173  00FC8A  65                 	db	101	;'e'
  1174  00FC8B  76                 	db	118	;'v'
  1175  00FC8C  69                 	db	105	;'i'
  1176  00FC8D  63                 	db	99	;'c'
  1177  00FC8E  65                 	db	101	;'e'
  1178  00FC8F  20                 	db	32
  1179  00FC90  33                 	db	51	;'3'
  1180  00FC91  20                 	db	32
  1181  00FC92  4F                 	db	79	;'O'
  1182  00FC93  46                 	db	70	;'F'
  1183  00FC94  46                 	db	70	;'F'
  1184  00FC95  00                 	db	0
  1185  00FC96                     STR_30:
  1186  00FC96  45                 	db	69	;'E'
  1187  00FC97  72                 	db	114	;'r'
  1188  00FC98  72                 	db	114	;'r'
  1189  00FC99  6F                 	db	111	;'o'
  1190  00FC9A  72                 	db	114	;'r'
  1191  00FC9B  3A                 	db	58	;':'
  1192  00FC9C  20                 	db	32
  1193  00FC9D  63                 	db	99	;'c'
  1194  00FC9E  6F                 	db	111	;'o'
  1195  00FC9F  75                 	db	117	;'u'
  1196  00FCA0  6C                 	db	108	;'l'
  1197  00FCA1  64                 	db	100	;'d'
  1198  00FCA2  20                 	db	32
  1199  00FCA3  6E                 	db	110	;'n'
  1200  00FCA4  6F                 	db	111	;'o'
  1201  00FCA5  74                 	db	116	;'t'
  1202  00FCA6  20                 	db	32
  1203  00FCA7  64                 	db	100	;'d'
  1204  00FCA8  65                 	db	101	;'e'
  1205  00FCA9  63                 	db	99	;'c'
  1206  00FCAA  6F                 	db	111	;'o'
  1207  00FCAB  64                 	db	100	;'d'
  1208  00FCAC  65                 	db	101	;'e'
  1209  00FCAD  20                 	db	32
  1210  00FCAE  41                 	db	65	;'A'
  1211  00FCAF  64                 	db	100	;'d'
  1212  00FCB0  64                 	db	100	;'d'
  1213  00FCB1  72                 	db	114	;'r'
  1214  00FCB2  65                 	db	101	;'e'
  1215  00FCB3  73                 	db	115	;'s'
  1216  00FCB4  73                 	db	115	;'s'
  1217  00FCB5  00                 	db	0
  1218  00FCB6                     STR_67:
  1219  00FCB6  52                 	db	82	;'R'
  1220  00FCB7  43                 	db	67	;'C'
  1221  00FCB8  2D                 	db	45
  1222  00FCB9  30                 	db	48	;'0'
  1223  00FCBA  31                 	db	49	;'1'
  1224  00FCBB  35                 	db	53	;'5'
  1225  00FCBC  2A                 	db	42
  1226  00FCBD  33                 	db	51	;'3'
  1227  00FCBE  20                 	db	32
  1228  00FCBF  43                 	db	67	;'C'
  1229  00FCC0  68                 	db	104	;'h'
  1230  00FCC1  61                 	db	97	;'a'
  1231  00FCC2  6E                 	db	110	;'n'
  1232  00FCC3  6E                 	db	110	;'n'
  1233  00FCC4  65                 	db	101	;'e'
  1234  00FCC5  6C                 	db	108	;'l'
  1235  00FCC6  20                 	db	32
  1236  00FCC7  48                 	db	72	;'H'
  1237  00FCC8  20                 	db	32
  1238  00FCC9  64                 	db	100	;'d'
  1239  00FCCA  65                 	db	101	;'e'
  1240  00FCCB  76                 	db	118	;'v'
  1241  00FCCC  69                 	db	105	;'i'
  1242  00FCCD  63                 	db	99	;'c'
  1243  00FCCE  65                 	db	101	;'e'
  1244  00FCCF  20                 	db	32
  1245  00FCD0  31                 	db	49	;'1'
  1246  00FCD1  20                 	db	32
  1247  00FCD2  4F                 	db	79	;'O'
  1248  00FCD3  4E                 	db	78	;'N'
  1249  00FCD4  00                 	db	0
  1250  00FCD5                     STR_69:
  1251  00FCD5  52                 	db	82	;'R'
  1252  00FCD6  43                 	db	67	;'C'
  1253  00FCD7  2D                 	db	45
  1254  00FCD8  30                 	db	48	;'0'
  1255  00FCD9  31                 	db	49	;'1'
  1256  00FCDA  35                 	db	53	;'5'
  1257  00FCDB  2A                 	db	42
  1258  00FCDC  33                 	db	51	;'3'
  1259  00FCDD  20                 	db	32
  1260  00FCDE  43                 	db	67	;'C'
  1261  00FCDF  68                 	db	104	;'h'
  1262  00FCE0  61                 	db	97	;'a'
  1263  00FCE1  6E                 	db	110	;'n'
  1264  00FCE2  6E                 	db	110	;'n'
  1265  00FCE3  65                 	db	101	;'e'
  1266  00FCE4  6C                 	db	108	;'l'
  1267  00FCE5  20                 	db	32
  1268  00FCE6  48                 	db	72	;'H'
  1269  00FCE7  20                 	db	32
  1270  00FCE8  64                 	db	100	;'d'
  1271  00FCE9  65                 	db	101	;'e'
  1272  00FCEA  76                 	db	118	;'v'
  1273  00FCEB  69                 	db	105	;'i'
  1274  00FCEC  63                 	db	99	;'c'
  1275  00FCED  65                 	db	101	;'e'
  1276  00FCEE  20                 	db	32
  1277  00FCEF  32                 	db	50	;'2'
  1278  00FCF0  20                 	db	32
  1279  00FCF1  4F                 	db	79	;'O'
  1280  00FCF2  4E                 	db	78	;'N'
  1281  00FCF3  00                 	db	0
  1282  00FCF4                     STR_71:
  1283  00FCF4  52                 	db	82	;'R'
  1284  00FCF5  43                 	db	67	;'C'
  1285  00FCF6  2D                 	db	45
  1286  00FCF7  30                 	db	48	;'0'
  1287  00FCF8  31                 	db	49	;'1'
  1288  00FCF9  35                 	db	53	;'5'
  1289  00FCFA  2A                 	db	42
  1290  00FCFB  33                 	db	51	;'3'
  1291  00FCFC  20                 	db	32
  1292  00FCFD  43                 	db	67	;'C'
  1293  00FCFE  68                 	db	104	;'h'
  1294  00FCFF  61                 	db	97	;'a'
  1295  00FD00  6E                 	db	110	;'n'
  1296  00FD01  6E                 	db	110	;'n'
  1297  00FD02  65                 	db	101	;'e'
  1298  00FD03  6C                 	db	108	;'l'
  1299  00FD04  20                 	db	32
  1300  00FD05  48                 	db	72	;'H'
  1301  00FD06  20                 	db	32
  1302  00FD07  64                 	db	100	;'d'
  1303  00FD08  65                 	db	101	;'e'
  1304  00FD09  76                 	db	118	;'v'
  1305  00FD0A  69                 	db	105	;'i'
  1306  00FD0B  63                 	db	99	;'c'
  1307  00FD0C  65                 	db	101	;'e'
  1308  00FD0D  20                 	db	32
  1309  00FD0E  33                 	db	51	;'3'
  1310  00FD0F  20                 	db	32
  1311  00FD10  4F                 	db	79	;'O'
  1312  00FD11  4E                 	db	78	;'N'
  1313  00FD12  00                 	db	0
  1314  00FD13                     STR_35:
  1315  00FD13  4E                 	db	78	;'N'
  1316  00FD14  45                 	db	69	;'E'
  1317  00FD15  43                 	db	67	;'C'
  1318  00FD16  20                 	db	32
  1319  00FD17  63                 	db	99	;'c'
  1320  00FD18  6F                 	db	111	;'o'
  1321  00FD19  64                 	db	100	;'d'
  1322  00FD1A  65                 	db	101	;'e'
  1323  00FD1B  20                 	db	32
  1324  00FD1C  6E                 	db	110	;'n'
  1325  00FD1D  6F                 	db	111	;'o'
  1326  00FD1E  74                 	db	116	;'t'
  1327  00FD1F  20                 	db	32
  1328  00FD20  65                 	db	101	;'e'
  1329  00FD21  6E                 	db	110	;'n'
  1330  00FD22  74                 	db	116	;'t'
  1331  00FD23  65                 	db	101	;'e'
  1332  00FD24  72                 	db	114	;'r'
  1333  00FD25  65                 	db	101	;'e'
  1334  00FD26  64                 	db	100	;'d'
  1335  00FD27  20                 	db	32
  1336  00FD28  63                 	db	99	;'c'
  1337  00FD29  6F                 	db	111	;'o'
  1338  00FD2A  72                 	db	114	;'r'
  1339  00FD2B  72                 	db	114	;'r'
  1340  00FD2C  65                 	db	101	;'e'
  1341  00FD2D  63                 	db	99	;'c'
  1342  00FD2E  74                 	db	116	;'t'
  1343  00FD2F  6C                 	db	108	;'l'
  1344  00FD30  79                 	db	121	;'y'
  1345  00FD31  00                 	db	0
  1346  00FD32                     STR_23:
  1347  00FD32  43                 	db	67	;'C'
  1348  00FD33  6F                 	db	111	;'o'
  1349  00FD34  6E                 	db	110	;'n'
  1350  00FD35  66                 	db	102	;'f'
  1351  00FD36  69                 	db	105	;'i'
  1352  00FD37  67                 	db	103	;'g'
  1353  00FD38  75                 	db	117	;'u'
  1354  00FD39  72                 	db	114	;'r'
  1355  00FD3A  61                 	db	97	;'a'
  1356  00FD3B  74                 	db	116	;'t'
  1357  00FD3C  69                 	db	105	;'i'
  1358  00FD3D  6F                 	db	111	;'o'
  1359  00FD3E  6E                 	db	110	;'n'
  1360  00FD3F  20                 	db	32
  1361  00FD40  31                 	db	49	;'1'
  1362  00FD41  20                 	db	32
  1363  00FD42  52                 	db	82	;'R'
  1364  00FD43  46                 	db	70	;'F'
  1365  00FD44  20                 	db	32
  1366  00FD45  63                 	db	99	;'c'
  1367  00FD46  6F                 	db	111	;'o'
  1368  00FD47  64                 	db	100	;'d'
  1369  00FD48  65                 	db	101	;'e'
  1370  00FD49  20                 	db	32
  1371  00FD4A  73                 	db	115	;'s'
  1372  00FD4B  65                 	db	101	;'e'
  1373  00FD4C  6E                 	db	110	;'n'
  1374  00FD4D  74                 	db	116	;'t'
  1375  00FD4E  00                 	db	0
  1376  00FD4F                     STR_25:
  1377  00FD4F  43                 	db	67	;'C'
  1378  00FD50  6F                 	db	111	;'o'
  1379  00FD51  6E                 	db	110	;'n'
  1380  00FD52  66                 	db	102	;'f'
  1381  00FD53  69                 	db	105	;'i'
  1382  00FD54  67                 	db	103	;'g'
  1383  00FD55  75                 	db	117	;'u'
  1384  00FD56  72                 	db	114	;'r'
  1385  00FD57  61                 	db	97	;'a'
  1386  00FD58  74                 	db	116	;'t'
  1387  00FD59  69                 	db	105	;'i'
  1388  00FD5A  6F                 	db	111	;'o'
  1389  00FD5B  6E                 	db	110	;'n'
  1390  00FD5C  20                 	db	32
  1391  00FD5D  32                 	db	50	;'2'
  1392  00FD5E  20                 	db	32
  1393  00FD5F  52                 	db	82	;'R'
  1394  00FD60  46                 	db	70	;'F'
  1395  00FD61  20                 	db	32
  1396  00FD62  63                 	db	99	;'c'
  1397  00FD63  6F                 	db	111	;'o'
  1398  00FD64  64                 	db	100	;'d'
  1399  00FD65  65                 	db	101	;'e'
  1400  00FD66  20                 	db	32
  1401  00FD67  73                 	db	115	;'s'
  1402  00FD68  65                 	db	101	;'e'
  1403  00FD69  6E                 	db	110	;'n'
  1404  00FD6A  74                 	db	116	;'t'
  1405  00FD6B  00                 	db	0
  1406  00FD6C                     STR_19:
  1407  00FD6C  42                 	db	66	;'B'
  1408  00FD6D  54                 	db	84	;'T'
  1409  00FD6E  4E                 	db	78	;'N'
  1410  00FD6F  61                 	db	97	;'a'
  1411  00FD70  6D                 	db	109	;'m'
  1412  00FD71  65                 	db	101	;'e'
  1413  00FD72  3D                 	db	61	;'='
  1414  00FD73  48                 	db	72	;'H'
  1415  00FD74  6F                 	db	111	;'o'
  1416  00FD75  6D                 	db	109	;'m'
  1417  00FD76  65                 	db	101	;'e'
  1418  00FD77  20                 	db	32
  1419  00FD78  41                 	db	65	;'A'
  1420  00FD79  75                 	db	117	;'u'
  1421  00FD7A  74                 	db	116	;'t'
  1422  00FD7B  6F                 	db	111	;'o'
  1423  00FD7C  6D                 	db	109	;'m'
  1424  00FD7D  61                 	db	97	;'a'
  1425  00FD7E  74                 	db	116	;'t'
  1426  00FD7F  69                 	db	105	;'i'
  1427  00FD80  6F                 	db	111	;'o'
  1428  00FD81  6E                 	db	110	;'n'
  1429  00FD82  20                 	db	32
  1430  00FD83  25                 	db	37
  1431  00FD84  6C                 	db	108	;'l'
  1432  00FD85  64                 	db	100	;'d'
  1433  00FD86  0D                 	db	13
  1434  00FD87  00                 	db	0
  1435  00FD88                     STR_45:
  1436  00FD88  48                 	db	72	;'H'
  1437  00FD89  69                 	db	105	;'i'
  1438  00FD8A  74                 	db	116	;'t'
  1439  00FD8B  20                 	db	32
  1440  00FD8C  52                 	db	82	;'R'
  1441  00FD8D  65                 	db	101	;'e'
  1442  00FD8E  6D                 	db	109	;'m'
  1443  00FD8F  6F                 	db	111	;'o'
  1444  00FD90  74                 	db	116	;'t'
  1445  00FD91  65                 	db	101	;'e'
  1446  00FD92  20                 	db	32
  1447  00FD93  43                 	db	67	;'C'
  1448  00FD94  6F                 	db	111	;'o'
  1449  00FD95  6E                 	db	110	;'n'
  1450  00FD96  74                 	db	116	;'t'
  1451  00FD97  72                 	db	114	;'r'
  1452  00FD98  6F                 	db	111	;'o'
  1453  00FD99  6C                 	db	108	;'l'
  1454  00FD9A  20                 	db	32
  1455  00FD9B  62                 	db	98	;'b'
  1456  00FD9C  75                 	db	117	;'u'
  1457  00FD9D  74                 	db	116	;'t'
  1458  00FD9E  74                 	db	116	;'t'
  1459  00FD9F  6F                 	db	111	;'o'
  1460  00FDA0  6E                 	db	110	;'n'
  1461  00FDA1  00                 	db	0
  1462  00FDA2                     STR_6:
  1463  00FDA2  53                 	db	83	;'S'
  1464  00FDA3  4E                 	db	78	;'N'
  1465  00FDA4  2C                 	db	44
  1466  00FDA5  48                 	db	72	;'H'
  1467  00FDA6  6F                 	db	111	;'o'
  1468  00FDA7  6D                 	db	109	;'m'
  1469  00FDA8  65                 	db	101	;'e'
  1470  00FDA9  20                 	db	32
  1471  00FDAA  41                 	db	65	;'A'
  1472  00FDAB  75                 	db	117	;'u'
  1473  00FDAC  74                 	db	116	;'t'
  1474  00FDAD  6F                 	db	111	;'o'
  1475  00FDAE  6D                 	db	109	;'m'
  1476  00FDAF  61                 	db	97	;'a'
  1477  00FDB0  74                 	db	116	;'t'
  1478  00FDB1  69                 	db	105	;'i'
  1479  00FDB2  6F                 	db	111	;'o'
  1480  00FDB3  6E                 	db	110	;'n'
  1481  00FDB4  20                 	db	32
  1482  00FDB5  25                 	db	37
  1483  00FDB6  6C                 	db	108	;'l'
  1484  00FDB7  64                 	db	100	;'d'
  1485  00FDB8  0D                 	db	13
  1486  00FDB9  00                 	db	0
  1487  00FDBA                     STR_47:
  1488  00FDBA  52                 	db	82	;'R'
  1489  00FDBB  65                 	db	101	;'e'
  1490  00FDBC  6D                 	db	109	;'m'
  1491  00FDBD  6F                 	db	111	;'o'
  1492  00FDBE  74                 	db	116	;'t'
  1493  00FDBF  65                 	db	101	;'e'
  1494  00FDC0  42                 	db	66	;'B'
  1495  00FDC1  75                 	db	117	;'u'
  1496  00FDC2  74                 	db	116	;'t'
  1497  00FDC3  74                 	db	116	;'t'
  1498  00FDC4  6F                 	db	111	;'o'
  1499  00FDC5  6E                 	db	110	;'n'
  1500  00FDC6  25                 	db	37
  1501  00FDC7  64                 	db	100	;'d'
  1502  00FDC8  20                 	db	32
  1503  00FDC9  3D                 	db	61	;'='
  1504  00FDCA  20                 	db	32
  1505  00FDCB  6F                 	db	111	;'o'
  1506  00FDCC  78                 	db	120	;'x'
  1507  00FDCD  25                 	db	37
  1508  00FDCE  6C                 	db	108	;'l'
  1509  00FDCF  58                 	db	88	;'X'
  1510  00FDD0  20                 	db	32
  1511  00FDD1  00                 	db	0
  1512  00FDD2                     STR_29:
  1513  00FDD2  53                 	db	83	;'S'
  1514  00FDD3  65                 	db	101	;'e'
  1515  00FDD4  6E                 	db	110	;'n'
  1516  00FDD5  74                 	db	116	;'t'
  1517  00FDD6  20                 	db	32
  1518  00FDD7  4E                 	db	78	;'N'
  1519  00FDD8  45                 	db	69	;'E'
  1520  00FDD9  43                 	db	67	;'C'
  1521  00FDDA  20                 	db	32
  1522  00FDDB  63                 	db	99	;'c'
  1523  00FDDC  6F                 	db	111	;'o'
  1524  00FDDD  64                 	db	100	;'d'
  1525  00FDDE  65                 	db	101	;'e'
  1526  00FDDF  20                 	db	32
  1527  00FDE0  3D                 	db	61	;'='
  1528  00FDE1  20                 	db	32
  1529  00FDE2  30                 	db	48	;'0'
  1530  00FDE3  78                 	db	120	;'x'
  1531  00FDE4  25                 	db	37
  1532  00FDE5  6C                 	db	108	;'l'
  1533  00FDE6  58                 	db	88	;'X'
  1534  00FDE7  20                 	db	32
  1535  00FDE8  00                 	db	0
  1536  00FDE9                     STR_39:
  1537  00FDE9  4E                 	db	78	;'N'
  1538  00FDEA  45                 	db	69	;'E'
  1539  00FDEB  43                 	db	67	;'C'
  1540  00FDEC  20                 	db	32
  1541  00FDED  3D                 	db	61	;'='
  1542  00FDEE  20                 	db	32
  1543  00FDEF  61                 	db	97	;'a'
  1544  00FDF0  64                 	db	100	;'d'
  1545  00FDF1  64                 	db	100	;'d'
  1546  00FDF2  72                 	db	114	;'r'
  1547  00FDF3  65                 	db	101	;'e'
  1548  00FDF4  73                 	db	115	;'s'
  1549  00FDF5  73                 	db	115	;'s'
  1550  00FDF6  2C                 	db	44
  1551  00FDF7  63                 	db	99	;'c'
  1552  00FDF8  6F                 	db	111	;'o'
  1553  00FDF9  6D                 	db	109	;'m'
  1554  00FDFA  6D                 	db	109	;'m'
  1555  00FDFB  61                 	db	97	;'a'
  1556  00FDFC  6E                 	db	110	;'n'
  1557  00FDFD  64                 	db	100	;'d'
  1558  00FDFE  20                 	db	32
  1559  00FDFF  00                 	db	0
  1560  00FE00                     STR_64:
  1561  00FE00  52                 	db	82	;'R'
  1562  00FE01  46                 	db	70	;'F'
  1563  00FE02  4B                 	db	75	;'K'
  1564  00FE03  33                 	db	51	;'3'
  1565  00FE04  30                 	db	48	;'0'
  1566  00FE05  36                 	db	54	;'6'
  1567  00FE06  4C                 	db	76	;'L'
  1568  00FE07  43                 	db	67	;'C'
  1569  00FE08  20                 	db	32
  1570  00FE09  43                 	db	67	;'C'
  1571  00FE0A  68                 	db	104	;'h'
  1572  00FE0B  61                 	db	97	;'a'
  1573  00FE0C  6E                 	db	110	;'n'
  1574  00FE0D  6E                 	db	110	;'n'
  1575  00FE0E  65                 	db	101	;'e'
  1576  00FE0F  6C                 	db	108	;'l'
  1577  00FE10  20                 	db	32
  1578  00FE11  42                 	db	66	;'B'
  1579  00FE12  20                 	db	32
  1580  00FE13  4F                 	db	79	;'O'
  1581  00FE14  46                 	db	70	;'F'
  1582  00FE15  46                 	db	70	;'F'
  1583  00FE16  00                 	db	0
  1584  00FE17                     STR_53:
  1585  00FE17  45                 	db	69	;'E'
  1586  00FE18  6E                 	db	110	;'n'
  1587  00FE19  74                 	db	116	;'t'
  1588  00FE1A  65                 	db	101	;'e'
  1589  00FE1B  72                 	db	114	;'r'
  1590  00FE1C  20                 	db	32
  1591  00FE1D  27                 	db	39
  1592  00FE1E  3F                 	db	63	;'?'
  1593  00FE1F  5E                 	db	94	;'^'
  1594  00FE20  20                 	db	32
  1595  00FE21  43                 	db	67	;'C'
  1596  00FE22  6F                 	db	111	;'o'
  1597  00FE23  6D                 	db	109	;'m'
  1598  00FE24  6D                 	db	109	;'m'
  1599  00FE25  61                 	db	97	;'a'
  1600  00FE26  6E                 	db	110	;'n'
  1601  00FE27  64                 	db	100	;'d'
  1602  00FE28  20                 	db	32
  1603  00FE29  4D                 	db	77	;'M'
  1604  00FE2A  65                 	db	101	;'e'
  1605  00FE2B  6E                 	db	110	;'n'
  1606  00FE2C  75                 	db	117	;'u'
  1607  00FE2D  00                 	db	0
  1608  00FE2E                     STR_63:
  1609  00FE2E  52                 	db	82	;'R'
  1610  00FE2F  46                 	db	70	;'F'
  1611  00FE30  4B                 	db	75	;'K'
  1612  00FE31  33                 	db	51	;'3'
  1613  00FE32  30                 	db	48	;'0'
  1614  00FE33  36                 	db	54	;'6'
  1615  00FE34  4C                 	db	76	;'L'
  1616  00FE35  43                 	db	67	;'C'
  1617  00FE36  20                 	db	32
  1618  00FE37  43                 	db	67	;'C'
  1619  00FE38  68                 	db	104	;'h'
  1620  00FE39  61                 	db	97	;'a'
  1621  00FE3A  6E                 	db	110	;'n'
  1622  00FE3B  6E                 	db	110	;'n'
  1623  00FE3C  65                 	db	101	;'e'
  1624  00FE3D  6C                 	db	108	;'l'
  1625  00FE3E  20                 	db	32
  1626  00FE3F  42                 	db	66	;'B'
  1627  00FE40  20                 	db	32
  1628  00FE41  4F                 	db	79	;'O'
  1629  00FE42  4E                 	db	78	;'N'
  1630  00FE43  00                 	db	0
  1631  00FE44                     STR_10:
  1632  00FE44  53                 	db	83	;'S'
  1633  00FE45  53                 	db	83	;'S'
  1634  00FE46  2C                 	db	44
  1635  00FE47  20                 	db	32
  1636  00FE48  48                 	db	72	;'H'
  1637  00FE49  6F                 	db	111	;'o'
  1638  00FE4A  6D                 	db	109	;'m'
  1639  00FE4B  65                 	db	101	;'e'
  1640  00FE4C  20                 	db	32
  1641  00FE4D  41                 	db	65	;'A'
  1642  00FE4E  75                 	db	117	;'u'
  1643  00FE4F  74                 	db	116	;'t'
  1644  00FE50  6F                 	db	111	;'o'
  1645  00FE51  6D                 	db	109	;'m'
  1646  00FE52  61                 	db	97	;'a'
  1647  00FE53  74                 	db	116	;'t'
  1648  00FE54  69                 	db	105	;'i'
  1649  00FE55  6F                 	db	111	;'o'
  1650  00FE56  6E                 	db	110	;'n'
  1651  00FE57  0D                 	db	13
  1652  00FE58  00                 	db	0
  1653  00FE59                     STR_37:
  1654  00FE59  4E                 	db	78	;'N'
  1655  00FE5A  45                 	db	69	;'E'
  1656  00FE5B  43                 	db	67	;'C'
  1657  00FE5C  20                 	db	32
  1658  00FE5D  3D                 	db	61	;'='
  1659  00FE5E  20                 	db	32
  1660  00FE5F  28                 	db	40
  1661  00FE60  33                 	db	51	;'3'
  1662  00FE61  32                 	db	50	;'2'
  1663  00FE62  20                 	db	32
  1664  00FE63  62                 	db	98	;'b'
  1665  00FE64  69                 	db	105	;'i'
  1666  00FE65  74                 	db	116	;'t'
  1667  00FE66  20                 	db	32
  1668  00FE67  63                 	db	99	;'c'
  1669  00FE68  6F                 	db	111	;'o'
  1670  00FE69  64                 	db	100	;'d'
  1671  00FE6A  65                 	db	101	;'e'
  1672  00FE6B  29                 	db	41
  1673  00FE6C  20                 	db	32
  1674  00FE6D  00                 	db	0
  1675  00FE6E                     STR_66:
  1676  00FE6E  54                 	db	84	;'T'
  1677  00FE6F  52                 	db	82	;'R'
  1678  00FE70  30                 	db	48	;'0'
  1679  00FE71  30                 	db	48	;'0'
  1680  00FE72  39                 	db	57	;'9'
  1681  00FE73  20                 	db	32
  1682  00FE74  43                 	db	67	;'C'
  1683  00FE75  68                 	db	104	;'h'
  1684  00FE76  61                 	db	97	;'a'
  1685  00FE77  6E                 	db	110	;'n'
  1686  00FE78  6E                 	db	110	;'n'
  1687  00FE79  65                 	db	101	;'e'
  1688  00FE7A  6C                 	db	108	;'l'
  1689  00FE7B  20                 	db	32
  1690  00FE7C  44                 	db	68	;'D'
  1691  00FE7D  20                 	db	32
  1692  00FE7E  4F                 	db	79	;'O'
  1693  00FE7F  46                 	db	70	;'F'
  1694  00FE80  46                 	db	70	;'F'
  1695  00FE81  00                 	db	0
  1696  00FE82                     STR_60:
  1697  00FE82  52                 	db	82	;'R'
  1698  00FE83  46                 	db	70	;'F'
  1699  00FE84  4B                 	db	75	;'K'
  1700  00FE85  31                 	db	49	;'1'
  1701  00FE86  30                 	db	48	;'0'
  1702  00FE87  30                 	db	48	;'0'
  1703  00FE88  4C                 	db	76	;'L'
  1704  00FE89  43                 	db	67	;'C'
  1705  00FE8A  20                 	db	32
  1706  00FE8B  43                 	db	67	;'C'
  1707  00FE8C  68                 	db	104	;'h'
  1708  00FE8D  61                 	db	97	;'a'
  1709  00FE8E  6E                 	db	110	;'n'
  1710  00FE8F  6E                 	db	110	;'n'
  1711  00FE90  65                 	db	101	;'e'
  1712  00FE91  6C                 	db	108	;'l'
  1713  00FE92  20                 	db	32
  1714  00FE93  44                 	db	68	;'D'
  1715  00FE94  00                 	db	0
  1716  00FE95                     STR_61:
  1717  00FE95  52                 	db	82	;'R'
  1718  00FE96  46                 	db	70	;'F'
  1719  00FE97  4B                 	db	75	;'K'
  1720  00FE98  31                 	db	49	;'1'
  1721  00FE99  30                 	db	48	;'0'
  1722  00FE9A  30                 	db	48	;'0'
  1723  00FE9B  4C                 	db	76	;'L'
  1724  00FE9C  43                 	db	67	;'C'
  1725  00FE9D  20                 	db	32
  1726  00FE9E  43                 	db	67	;'C'
  1727  00FE9F  68                 	db	104	;'h'
  1728  00FEA0  61                 	db	97	;'a'
  1729  00FEA1  6E                 	db	110	;'n'
  1730  00FEA2  6E                 	db	110	;'n'
  1731  00FEA3  65                 	db	101	;'e'
  1732  00FEA4  6C                 	db	108	;'l'
  1733  00FEA5  20                 	db	32
  1734  00FEA6  45                 	db	69	;'E'
  1735  00FEA7  00                 	db	0
  1736  00FEA8                     STR_62:
  1737  00FEA8  52                 	db	82	;'R'
  1738  00FEA9  46                 	db	70	;'F'
  1739  00FEAA  4B                 	db	75	;'K'
  1740  00FEAB  31                 	db	49	;'1'
  1741  00FEAC  30                 	db	48	;'0'
  1742  00FEAD  30                 	db	48	;'0'
  1743  00FEAE  4C                 	db	76	;'L'
  1744  00FEAF  43                 	db	67	;'C'
  1745  00FEB0  20                 	db	32
  1746  00FEB1  43                 	db	67	;'C'
  1747  00FEB2  68                 	db	104	;'h'
  1748  00FEB3  61                 	db	97	;'a'
  1749  00FEB4  6E                 	db	110	;'n'
  1750  00FEB5  6E                 	db	110	;'n'
  1751  00FEB6  65                 	db	101	;'e'
  1752  00FEB7  6C                 	db	108	;'l'
  1753  00FEB8  20                 	db	32
  1754  00FEB9  46                 	db	70	;'F'
  1755  00FEBA  00                 	db	0
  1756  00FEBB                     STR_65:
  1757  00FEBB  54                 	db	84	;'T'
  1758  00FEBC  52                 	db	82	;'R'
  1759  00FEBD  30                 	db	48	;'0'
  1760  00FEBE  30                 	db	48	;'0'
  1761  00FEBF  39                 	db	57	;'9'
  1762  00FEC0  20                 	db	32
  1763  00FEC1  43                 	db	67	;'C'
  1764  00FEC2  68                 	db	104	;'h'
  1765  00FEC3  61                 	db	97	;'a'
  1766  00FEC4  6E                 	db	110	;'n'
  1767  00FEC5  6E                 	db	110	;'n'
  1768  00FEC6  65                 	db	101	;'e'
  1769  00FEC7  6C                 	db	108	;'l'
  1770  00FEC8  20                 	db	32
  1771  00FEC9  44                 	db	68	;'D'
  1772  00FECA  20                 	db	32
  1773  00FECB  4F                 	db	79	;'O'
  1774  00FECC  4E                 	db	78	;'N'
  1775  00FECD  00                 	db	0
  1776  00FECE                     STR_41:
  1777  00FECE  4E                 	db	78	;'N'
  1778  00FECF  45                 	db	69	;'E'
  1779  00FED0  43                 	db	67	;'C'
  1780  00FED1  20                 	db	32
  1781  00FED2  3D                 	db	61	;'='
  1782  00FED3  20                 	db	32
  1783  00FED4  30                 	db	48	;'0'
  1784  00FED5  78                 	db	120	;'x'
  1785  00FED6  31                 	db	49	;'1'
  1786  00FED7  43                 	db	67	;'C'
  1787  00FED8  45                 	db	69	;'E'
  1788  00FED9  33                 	db	51	;'3'
  1789  00FEDA  35                 	db	53	;'5'
  1790  00FEDB  30                 	db	48	;'0'
  1791  00FEDC  61                 	db	97	;'a'
  1792  00FEDD  66                 	db	102	;'f'
  1793  00FEDE  20                 	db	32
  1794  00FEDF  00                 	db	0
  1795  00FEE0                     STR_31:
  1796  00FEE0  73                 	db	115	;'s'
  1797  00FEE1  65                 	db	101	;'e'
  1798  00FEE2  6E                 	db	110	;'n'
  1799  00FEE3  74                 	db	116	;'t'
  1800  00FEE4  20                 	db	32
  1801  00FEE5  4E                 	db	78	;'N'
  1802  00FEE6  45                 	db	69	;'E'
  1803  00FEE7  43                 	db	67	;'C'
  1804  00FEE8  20                 	db	32
  1805  00FEE9  63                 	db	99	;'c'
  1806  00FEEA  6F                 	db	111	;'o'
  1807  00FEEB  64                 	db	100	;'d'
  1808  00FEEC  65                 	db	101	;'e'
  1809  00FEED  20                 	db	32
  1810  00FEEE  25                 	db	37
  1811  00FEEF  6C                 	db	108	;'l'
  1812  00FEF0  58                 	db	88	;'X'
  1813  00FEF1  00                 	db	0
  1814  00FEF2                     STR_73:
  1815  00FEF2  30                 	db	48	;'0'
  1816  00FEF3  31                 	db	49	;'1'
  1817  00FEF4  32                 	db	50	;'2'
  1818  00FEF5  33                 	db	51	;'3'
  1819  00FEF6  34                 	db	52	;'4'
  1820  00FEF7  35                 	db	53	;'5'
  1821  00FEF8  36                 	db	54	;'6'
  1822  00FEF9  37                 	db	55	;'7'
  1823  00FEFA  38                 	db	56	;'8'
  1824  00FEFB  39                 	db	57	;'9'
  1825  00FEFC  41                 	db	65	;'A'
  1826  00FEFD  42                 	db	66	;'B'
  1827  00FEFE  43                 	db	67	;'C'
  1828  00FEFF  44                 	db	68	;'D'
  1829  00FF00  45                 	db	69	;'E'
  1830  00FF01  46                 	db	70	;'F'
  1831  00FF02  00                 	db	0
  1832  00FF03                     STR_43:
  1833  00FF03  4E                 	db	78	;'N'
  1834  00FF04  45                 	db	69	;'E'
  1835  00FF05  43                 	db	67	;'C'
  1836  00FF06  20                 	db	32
  1837  00FF07  3D                 	db	61	;'='
  1838  00FF08  20                 	db	32
  1839  00FF09  30                 	db	48	;'0'
  1840  00FF0A  78                 	db	120	;'x'
  1841  00FF0B  33                 	db	51	;'3'
  1842  00FF0C  38                 	db	56	;'8'
  1843  00FF0D  2C                 	db	44
  1844  00FF0E  20                 	db	32
  1845  00FF0F  30                 	db	48	;'0'
  1846  00FF10  78                 	db	120	;'x'
  1847  00FF11  41                 	db	65	;'A'
  1848  00FF12  20                 	db	32
  1849  00FF13  00                 	db	0
  1850  00FF14                     STR_28:
  1851  00FF14  4E                 	db	78	;'N'
  1852  00FF15  45                 	db	69	;'E'
  1853  00FF16  43                 	db	67	;'C'
  1854  00FF17  20                 	db	32
  1855  00FF18  63                 	db	99	;'c'
  1856  00FF19  6F                 	db	111	;'o'
  1857  00FF1A  6D                 	db	109	;'m'
  1858  00FF1B  6D                 	db	109	;'m'
  1859  00FF1C  61                 	db	97	;'a'
  1860  00FF1D  6E                 	db	110	;'n'
  1861  00FF1E  64                 	db	100	;'d'
  1862  00FF1F  3A                 	db	58	;':'
  1863  00FF20  20                 	db	32
  1864  00FF21  25                 	db	37
  1865  00FF22  58                 	db	88	;'X'
  1866  00FF23  20                 	db	32
  1867  00FF24  00                 	db	0
  1868  00FF25                     STR_27:
  1869  00FF25  4E                 	db	78	;'N'
  1870  00FF26  45                 	db	69	;'E'
  1871  00FF27  43                 	db	67	;'C'
  1872  00FF28  20                 	db	32
  1873  00FF29  61                 	db	97	;'a'
  1874  00FF2A  64                 	db	100	;'d'
  1875  00FF2B  64                 	db	100	;'d'
  1876  00FF2C  72                 	db	114	;'r'
  1877  00FF2D  65                 	db	101	;'e'
  1878  00FF2E  73                 	db	115	;'s'
  1879  00FF2F  73                 	db	115	;'s'
  1880  00FF30  3A                 	db	58	;':'
  1881  00FF31  20                 	db	32
  1882  00FF32  25                 	db	37
  1883  00FF33  58                 	db	88	;'X'
  1884  00FF34  20                 	db	32
  1885  00FF35  00                 	db	0
  1886  00FF36                     STR_56:
  1887  00FF36  53                 	db	83	;'S'
  1888  00FF37  79                 	db	121	;'y'
  1889  00FF38  73                 	db	115	;'s'
  1890  00FF39  74                 	db	116	;'t'
  1891  00FF3A  65                 	db	101	;'e'
  1892  00FF3B  6D                 	db	109	;'m'
  1893  00FF3C  20                 	db	32
  1894  00FF3D  63                 	db	99	;'c'
  1895  00FF3E  6F                 	db	111	;'o'
  1896  00FF3F  6D                 	db	109	;'m'
  1897  00FF40  6D                 	db	109	;'m'
  1898  00FF41  61                 	db	97	;'a'
  1899  00FF42  6E                 	db	110	;'n'
  1900  00FF43  64                 	db	100	;'d'
  1901  00FF44  73                 	db	115	;'s'
  1902  00FF45  3A                 	db	58	;':'
  1903  00FF46  00                 	db	0
  1904  00FF47                     STR_50:
  1905  00FF47  52                 	db	82	;'R'
  1906  00FF48  65                 	db	101	;'e'
  1907  00FF49  6D                 	db	109	;'m'
  1908  00FF4A  6F                 	db	111	;'o'
  1909  00FF4B  74                 	db	116	;'t'
  1910  00FF4C  65                 	db	101	;'e'
  1911  00FF4D  42                 	db	66	;'B'
  1912  00FF4E  75                 	db	117	;'u'
  1913  00FF4F  74                 	db	116	;'t'
  1914  00FF50  74                 	db	116	;'t'
  1915  00FF51  6F                 	db	111	;'o'
  1916  00FF52  6E                 	db	110	;'n'
  1917  00FF53  27                 	db	39
  1918  00FF54  78                 	db	120	;'x'
  1919  00FF55  27                 	db	39
  1920  00FF56  00                 	db	0
  1921  00FF57                     STR_3:
  1922  00FF57  42                 	db	66	;'B'
  1923  00FF58  75                 	db	117	;'u'
  1924  00FF59  66                 	db	102	;'f'
  1925  00FF5A  66                 	db	102	;'f'
  1926  00FF5B  65                 	db	101	;'e'
  1927  00FF5C  72                 	db	114	;'r'
  1928  00FF5D  20                 	db	32
  1929  00FF5E  4F                 	db	79	;'O'
  1930  00FF5F  76                 	db	118	;'v'
  1931  00FF60  65                 	db	101	;'e'
  1932  00FF61  72                 	db	114	;'r'
  1933  00FF62  66                 	db	102	;'f'
  1934  00FF63  6C                 	db	108	;'l'
  1935  00FF64  6F                 	db	111	;'o'
  1936  00FF65  77                 	db	119	;'w'
  1937  00FF66  00                 	db	0
  1938  00FF67                     STR_52:
  1939  00FF67  52                 	db	82	;'R'
  1940  00FF68  65                 	db	101	;'e'
  1941  00FF69  6D                 	db	109	;'m'
  1942  00FF6A  6F                 	db	111	;'o'
  1943  00FF6B  74                 	db	116	;'t'
  1944  00FF6C  65                 	db	101	;'e'
  1945  00FF6D  42                 	db	66	;'B'
  1946  00FF6E  75                 	db	117	;'u'
  1947  00FF6F  74                 	db	116	;'t'
  1948  00FF70  74                 	db	116	;'t'
  1949  00FF71  6F                 	db	111	;'o'
  1950  00FF72  6E                 	db	110	;'n'
  1951  00FF73  31                 	db	49	;'1'
  1952  00FF74  00                 	db	0
  1953  00FF75                     STR_59:
  1954  00FF75  52                 	db	82	;'R'
  1955  00FF76  46                 	db	70	;'F'
  1956  00FF77  20                 	db	32
  1957  00FF78  63                 	db	99	;'c'
  1958  00FF79  6F                 	db	111	;'o'
  1959  00FF7A  6D                 	db	109	;'m'
  1960  00FF7B  6D                 	db	109	;'m'
  1961  00FF7C  61                 	db	97	;'a'
  1962  00FF7D  6E                 	db	110	;'n'
  1963  00FF7E  64                 	db	100	;'d'
  1964  00FF7F  73                 	db	115	;'s'
  1965  00FF80  3A                 	db	58	;':'
  1966  00FF81  00                 	db	0
  1967  00FF82                     STR_44:
  1968  00FF82  52                 	db	82	;'R'
  1969  00FF83  65                 	db	101	;'e'
  1970  00FF84  6D                 	db	109	;'m'
  1971  00FF85  6F                 	db	111	;'o'
  1972  00FF86  74                 	db	116	;'t'
  1973  00FF87  65                 	db	101	;'e'
  1974  00FF88  42                 	db	66	;'B'
  1975  00FF89  75                 	db	117	;'u'
  1976  00FF8A  74                 	db	116	;'t'
  1977  00FF8B  74                 	db	116	;'t'
  1978  00FF8C  6F                 	db	111	;'o'
  1979  00FF8D  6E                 	db	110	;'n'
  1980  00FF8E  00                 	db	0
  1981  00FF8F                     STR_38:
  1982  00FF8F  20                 	db	32
  1983  00FF90  20                 	db	32
  1984  00FF91  20                 	db	32
  1985  00FF92  20                 	db	32
  1986  00FF93  20                 	db	32
  1987  00FF94  20                 	db	32
  1988  00FF95  20                 	db	32
  1989  00FF96  20                 	db	32
  1990  00FF97  6F                 	db	111	;'o'
  1991  00FF98  72                 	db	114	;'r'
  1992  00FF99  00                 	db	0
  1993  00FF9A                     STR_8:
  1994  00FF9A  53                 	db	83	;'S'
  1995  00FF9B  55                 	db	85	;'U'
  1996  00FF9C  2C                 	db	44
  1997  00FF9D  20                 	db	32
  1998  00FF9E  31                 	db	49	;'1'
  1999  00FF9F  31                 	db	49	;'1'
  2000  00FFA0  35                 	db	53	;'5'
  2001  00FFA1  4B                 	db	75	;'K'
  2002  00FFA2  0D                 	db	13
  2003  00FFA3  00                 	db	0
  2004  00FFA4                     STR_58:
  2005  00FFA4  48                 	db	72	;'H'
  2006  00FFA5  65                 	db	101	;'e'
  2007  00FFA6  6C                 	db	108	;'l'
  2008  00FFA7  70                 	db	112	;'p'
  2009  00FFA8  20                 	db	32
  2010  00FFA9  4D                 	db	77	;'M'
  2011  00FFAA  65                 	db	101	;'e'
  2012  00FFAB  6E                 	db	110	;'n'
  2013  00FFAC  75                 	db	117	;'u'
  2014  00FFAD  00                 	db	0
  2015  00FFAE                     STR_12:
  2016  00FFAE  53                 	db	83	;'S'
  2017  00FFAF  59                 	db	89	;'Y'
  2018  00FFB0  2C                 	db	44
  2019  00FFB1  30                 	db	48	;'0'
  2020  00FFB2  30                 	db	48	;'0'
  2021  00FFB3  31                 	db	49	;'1'
  2022  00FFB4  30                 	db	48	;'0'
  2023  00FFB5  0D                 	db	13
  2024  00FFB6  00                 	db	0
  2025  00FFB7                     STR_40:
  2026  00FFB7  45                 	db	69	;'E'
  2027  00FFB8  78                 	db	120	;'x'
  2028  00FFB9  61                 	db	97	;'a'
  2029  00FFBA  6D                 	db	109	;'m'
  2030  00FFBB  70                 	db	112	;'p'
  2031  00FFBC  6C                 	db	108	;'l'
  2032  00FFBD  65                 	db	101	;'e'
  2033  00FFBE  3A                 	db	58	;':'
  2034  00FFBF  00                 	db	0
  2035  00FFC0                     STR_36:
  2036  00FFC0  55                 	db	85	;'U'
  2037  00FFC1  73                 	db	115	;'s'
  2038  00FFC2  61                 	db	97	;'a'
  2039  00FFC3  67                 	db	103	;'g'
  2040  00FFC4  65                 	db	101	;'e'
  2041  00FFC5  3A                 	db	58	;':'
  2042  00FFC6  00                 	db	0
  2043  00FFC7                     STR_14:
  2044  00FFC7  53                 	db	83	;'S'
  2045  00FFC8  7E                 	db	126
  2046  00FFC9  2C                 	db	44
  2047  00FFCA  30                 	db	48	;'0'
  2048  00FFCB  0D                 	db	13
  2049  00FFCC  00                 	db	0
  2050  00FFCD                     STR_22:
  2051  00FFCD  43                 	db	67	;'C'
  2052  00FFCE  6F                 	db	111	;'o'
  2053  00FFCF  6E                 	db	110	;'n'
  2054  00FFD0  66                 	db	102	;'f'
  2055  00FFD1  31                 	db	49	;'1'
  2056  00FFD2  00                 	db	0
  2057  00FFD3                     STR_24:
  2058  00FFD3  43                 	db	67	;'C'
  2059  00FFD4  6F                 	db	111	;'o'
  2060  00FFD5  6E                 	db	110	;'n'
  2061  00FFD6  66                 	db	102	;'f'
  2062  00FFD7  32                 	db	50	;'2'
  2063  00FFD8  00                 	db	0
  2064  00FFD9                     STR_20:
  2065  00FFD9  2D                 	db	45
  2066  00FFDA  2D                 	db	45
  2067  00FFDB  2D                 	db	45
  2068  00FFDC  0D                 	db	13
  2069  00FFDD  00                 	db	0
  2070  00FFDE                     STR_18:
  2071  00FFDE  44                 	db	68	;'D'
  2072  00FFDF  2C                 	db	44
  2073  00FFE0  30                 	db	48	;'0'
  2074  00FFE1  0D                 	db	13
  2075  00FFE2  00                 	db	0
  2076  00FFE3                     STR_4:
  2077  00FFE3  24                 	db	36
  2078  00FFE4  24                 	db	36
  2079  00FFE5  24                 	db	36
  2080  00FFE6  00                 	db	0
  2081  00FFE7                     STR_54:
  2082  00FFE7  3F                 	db	63	;'?'
  2083  00FFE8  3F                 	db	63	;'?'
  2084  00FFE9  3F                 	db	63	;'?'
  2085  00FFEA  00                 	db	0
  2086  00FFEB                     STR_26:
  2087  00FFEB  4E                 	db	78	;'N'
  2088  00FFEC  45                 	db	69	;'E'
  2089  00FFED  43                 	db	67	;'C'
  2090  00FFEE  00                 	db	0
  2091  00FFEF                     STR_5:
  2092  00FFEF  43                 	db	67	;'C'
  2093  00FFF0  4D                 	db	77	;'M'
  2094  00FFF1  44                 	db	68	;'D'
  2095  00FFF2  00                 	db	0
  2096  00FFF3                     STR_21:
  2097  00FFF3  45                 	db	69	;'E'
  2098  00FFF4  4E                 	db	78	;'N'
  2099  00FFF5  44                 	db	68	;'D'
  2100  00FFF6  00                 	db	0
  2101  00FFF7                     STR_7:
  2102  00FFF7  41                 	db	65	;'A'
  2103  00FFF8  4F                 	db	79	;'O'
  2104  00FFF9  4B                 	db	75	;'K'
  2105  00FFFA  00                 	db	0
  2106  00FFFB                     STR_1:
  2107  00FFFB  0D                 	db	13
  2108  00FFFC  0A                 	db	10
  2109  00FFFD  00                 	db	0
  2110  0000                     
  2111                           ; #config settings
  2112  00FFFE  00                 	db	0	; dummy byte at the end
  2113  0000                     
  2114                           	psect	cinit
  2115  00480A                     __pcinit:
  2116                           	opt stack 0
  2117  00480A                     start_initialization:
  2118                           	opt stack 0
  2119  00480A                     __initialization:
  2120                           	opt stack 0
  2121                           
  2122                           ; Clear objects allocated to BANK4 (144 bytes)
  2123  00480A  EE04  F000         	lfsr	0,__pbssBANK4
  2124  00480E  0E90               	movlw	144
  2125  004810                     clear_0:
  2126  004810  6AEE               	clrf	postinc0,c
  2127  004812  06E8               	decf	wreg,f,c
  2128  004814  E1FD               	bnz	clear_0
  2129                           
  2130                           ; Clear objects allocated to BANK3 (255 bytes)
  2131  004816  EE03  F000         	lfsr	0,__pbssBANK3
  2132  00481A  EE10 F0FF          	lfsr	1,255
  2133  00481E                     clear_1:
  2134  00481E  6AEE               	clrf	postinc0,c
  2135  004820  50E5               	movf	postdec1,w,c
  2136  004822  50E1               	movf	fsr1l,w,c
  2137  004824  E1FC               	bnz	clear_1
  2138  004826  50E2               	movf	fsr1h,w,c
  2139  004828  E1FA               	bnz	clear_1
  2140                           
  2141                           ; Clear objects allocated to BANK2 (255 bytes)
  2142  00482A  EE02  F000         	lfsr	0,__pbssBANK2
  2143  00482E  EE10 F0FF          	lfsr	1,255
  2144  004832                     clear_2:
  2145  004832  6AEE               	clrf	postinc0,c
  2146  004834  50E5               	movf	postdec1,w,c
  2147  004836  50E1               	movf	fsr1l,w,c
  2148  004838  E1FC               	bnz	clear_2
  2149  00483A  50E2               	movf	fsr1h,w,c
  2150  00483C  E1FA               	bnz	clear_2
  2151                           
  2152                           ; Clear objects allocated to BANK1 (65 bytes)
  2153  00483E  EE01  F067         	lfsr	0,__pbssBANK1
  2154  004842  0E41               	movlw	65
  2155  004844                     clear_3:
  2156  004844  6AEE               	clrf	postinc0,c
  2157  004846  06E8               	decf	wreg,f,c
  2158  004848  E1FD               	bnz	clear_3
  2159                           
  2160                           ; Clear objects allocated to BANK0 (20 bytes)
  2161  00484A  EE00  F0D5         	lfsr	0,__pbssBANK0
  2162  00484E  0E14               	movlw	20
  2163  004850                     clear_4:
  2164  004850  6AEE               	clrf	postinc0,c
  2165  004852  06E8               	decf	wreg,f,c
  2166  004854  E1FD               	bnz	clear_4
  2167                           
  2168                           ; Clear objects allocated to COMRAM (18 bytes)
  2169  004856  EE00  F02C         	lfsr	0,__pbssCOMRAM
  2170  00485A  0E12               	movlw	18
  2171  00485C                     clear_5:
  2172  00485C  6AEE               	clrf	postinc0,c
  2173  00485E  06E8               	decf	wreg,f,c
  2174  004860  E1FD               	bnz	clear_5
  2175                           
  2176                           ; Initialize objects allocated to BANK1 (50 bytes)
  2177                           ; load TBLPTR registers with __pidataBANK1
  2178  004862  0E20               	movlw	low __pidataBANK1
  2179  004864  6EF6               	movwf	tblptrl,c
  2180  004866  0E59               	movlw	high __pidataBANK1
  2181  004868  6EF7               	movwf	tblptrh,c
  2182  00486A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2183  00486C  6EF8               	movwf	tblptru,c
  2184  00486E  EE01  F0A8         	lfsr	0,__pdataBANK1
  2185  004872  EE10 F032          	lfsr	1,50
  2186  004876                     copy_data0:
  2187  004876  0009               	tblrd		*+
  2188  004878  CFF5 FFEE          	movff	tablat,postinc0
  2189  00487C  50E5               	movf	postdec1,w,c
  2190  00487E  50E1               	movf	fsr1l,w,c
  2191  004880  E1FA               	bnz	copy_data0
  2192                           
  2193                           ; Initialize objects allocated to BANK0 (5 bytes)
  2194                           ; load TBLPTR registers with __pidataBANK0
  2195  004882  0EF5               	movlw	low __pidataBANK0
  2196  004884  6EF6               	movwf	tblptrl,c
  2197  004886  0E5B               	movlw	high __pidataBANK0
  2198  004888  6EF7               	movwf	tblptrh,c
  2199  00488A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2200  00488C  6EF8               	movwf	tblptru,c
  2201  00488E  EE00  F0E9         	lfsr	0,__pdataBANK0
  2202  004892  EE10 F005          	lfsr	1,5
  2203  004896                     copy_data1:
  2204  004896  0009               	tblrd		*+
  2205  004898  CFF5 FFEE          	movff	tablat,postinc0
  2206  00489C  50E5               	movf	postdec1,w,c
  2207  00489E  50E1               	movf	fsr1l,w,c
  2208  0048A0  E1FA               	bnz	copy_data1
  2209                           
  2210                           ; Initialize objects allocated to COMRAM (5 bytes)
  2211                           ; load TBLPTR registers with __pidataCOMRAM
  2212  0048A2  0EF0               	movlw	low __pidataCOMRAM
  2213  0048A4  6EF6               	movwf	tblptrl,c
  2214  0048A6  0E5B               	movlw	high __pidataCOMRAM
  2215  0048A8  6EF7               	movwf	tblptrh,c
  2216  0048AA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2217  0048AC  6EF8               	movwf	tblptru,c
  2218  0048AE  EE00  F03E         	lfsr	0,__pdataCOMRAM
  2219  0048B2  EE10 F005          	lfsr	1,5
  2220  0048B6                     copy_data2:
  2221  0048B6  0009               	tblrd		*+
  2222  0048B8  CFF5 FFEE          	movff	tablat,postinc0
  2223  0048BC  50E5               	movf	postdec1,w,c
  2224  0048BE  50E1               	movf	fsr1l,w,c
  2225  0048C0  E1FA               	bnz	copy_data2
  2226  0048C2                     end_of_initialization:
  2227                           	opt stack 0
  2228  0048C2                     __end_of__initialization:
  2229                           	opt stack 0
  2230  0048C2  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2231  0048C4  6EF8               	movwf	tblptru,c
  2232  0048C6  0100               	movlb	0
  2233  0048C8  EF58  F01F         	goto	_main	;jump to C main() function
  2234                           tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           postinc0	equ	0xFEE
  2239                           wreg	equ	0xFE8
  2240                           postdec1	equ	0xFE5
  2241                           fsr1h	equ	0xFE2
  2242                           fsr1l	equ	0xFE1
  2243                           
  2244                           	psect	bssCOMRAM
  2245  00002C                     __pbssCOMRAM:
  2246                           	opt stack 0
  2247  00002C                     _IRsendCode:
  2248                           	opt stack 0
  2249  00002C                     	ds	4
  2250  000030                     _CommandStringPos:
  2251                           	opt stack 0
  2252  000030                     	ds	1
  2253  000031                     _IRbit:
  2254                           	opt stack 0
  2255  000031                     	ds	1
  2256  000032                     _IRpinOLD:
  2257                           	opt stack 0
  2258  000032                     	ds	1
  2259  000033                     _IRrawCodeNum:
  2260                           	opt stack 0
  2261  000033                     	ds	1
  2262  000034                     _IRrepeatAmount:
  2263                           	opt stack 0
  2264  000034                     	ds	1
  2265  000035                     _IRrepeatflag:
  2266                           	opt stack 0
  2267  000035                     	ds	1
  2268  000036                     _RFConfig:
  2269                           	opt stack 0
  2270  000036                     	ds	1
  2271  000037                     _RFcodeBit:
  2272                           	opt stack 0
  2273  000037                     	ds	1
  2274  000038                     _RFcodePlace:
  2275                           	opt stack 0
  2276  000038                     	ds	1
  2277  000039                     _RFsendFlag:
  2278                           	opt stack 0
  2279  000039                     	ds	1
  2280  00003A                     _Sendcount:
  2281                           	opt stack 0
  2282  00003A                     	ds	1
  2283  00003B                     _Timer1_Postscaler:
  2284                           	opt stack 0
  2285  00003B                     	ds	1
  2286  00003C                     _Timer2_Postscaler:
  2287                           	opt stack 0
  2288  00003C                     	ds	1
  2289  00003D                     _Timer3_Postscaler:
  2290                           	opt stack 0
  2291  00003D                     	ds	1
  2292                           tblptru	equ	0xFF8
  2293                           tblptrh	equ	0xFF7
  2294                           tblptrl	equ	0xFF6
  2295                           tablat	equ	0xFF5
  2296                           postinc0	equ	0xFEE
  2297                           wreg	equ	0xFE8
  2298                           postdec1	equ	0xFE5
  2299                           fsr1h	equ	0xFE2
  2300                           fsr1l	equ	0xFE1
  2301                           
  2302                           	psect	dataCOMRAM
  2303  00003E                     __pdataCOMRAM:
  2304                           	opt stack 0
  2305  00003E                     _IRbitPosition:
  2306                           	opt stack 0
  2307  00003E                     	ds	1
  2308  00003F                     _IRcodePlace:
  2309                           	opt stack 0
  2310  00003F                     	ds	1
  2311  000040                     _RF_IR:
  2312                           	opt stack 0
  2313  000040                     	ds	1
  2314  000041                     _RF_IR_Postscaler:
  2315                           	opt stack 0
  2316  000041                     	ds	1
  2317  000042                     _ReceivingIR:
  2318                           	opt stack 0
  2319  000042                     	ds	1
  2320                           tblptru	equ	0xFF8
  2321                           tblptrh	equ	0xFF7
  2322                           tblptrl	equ	0xFF6
  2323                           tablat	equ	0xFF5
  2324                           postinc0	equ	0xFEE
  2325                           wreg	equ	0xFE8
  2326                           postdec1	equ	0xFE5
  2327                           fsr1h	equ	0xFE2
  2328                           fsr1l	equ	0xFE1
  2329                           
  2330                           	psect	bssBANK0
  2331  0000D5                     __pbssBANK0:
  2332                           	opt stack 0
  2333  0000D5                     _BatteryVoltage:
  2334                           	opt stack 0
  2335  0000D5                     	ds	3
  2336  0000D8                     _Conf2_ChannelB_Status:
  2337                           	opt stack 0
  2338  0000D8                     	ds	1
  2339  0000D9                     _Conf2_ChannelD_Status:
  2340                           	opt stack 0
  2341  0000D9                     	ds	1
  2342  0000DA                     _Conf2_ChannelH_1_Status:
  2343                           	opt stack 0
  2344  0000DA                     	ds	1
  2345  0000DB                     _Conf2_ChannelH_2_Status:
  2346                           	opt stack 0
  2347  0000DB                     	ds	1
  2348  0000DC                     _Conf2_ChannelH_3_Status:
  2349                           	opt stack 0
  2350  0000DC                     	ds	1
  2351  0000DD                     _IRcodeBit:
  2352                           	opt stack 0
  2353  0000DD                     	ds	1
  2354  0000DE                     _IRmod:
  2355                           	opt stack 0
  2356  0000DE                     	ds	1
  2357  0000DF                     _IRsendFlag:
  2358                           	opt stack 0
  2359  0000DF                     	ds	1
  2360  0000E0                     _NewReceivedString:
  2361                           	opt stack 0
  2362  0000E0                     	ds	1
  2363  0000E1                     _ReceivedStringPos:
  2364                           	opt stack 0
  2365  0000E1                     	ds	1
  2366  0000E2                     _IR_NEC:
  2367                           	opt stack 0
  2368  0000E2                     	ds	4
  2369  0000E6                     _IR_New_Code:
  2370                           	opt stack 0
  2371  0000E6                     	ds	1
  2372  0000E7                     _IRaddress:
  2373                           	opt stack 0
  2374  0000E7                     	ds	1
  2375  0000E8                     _IRcommand:
  2376                           	opt stack 0
  2377  0000E8                     	ds	1
  2378                           tblptru	equ	0xFF8
  2379                           tblptrh	equ	0xFF7
  2380                           tblptrl	equ	0xFF6
  2381                           tablat	equ	0xFF5
  2382                           postinc0	equ	0xFEE
  2383                           wreg	equ	0xFE8
  2384                           postdec1	equ	0xFE5
  2385                           fsr1h	equ	0xFE2
  2386                           fsr1l	equ	0xFE1
  2387                           
  2388                           	psect	dataBANK0
  2389  0000E9                     __pdataBANK0:
  2390                           	opt stack 0
  2391  0000E9                     _SN:
  2392                           	opt stack 0
  2393  0000E9                     	ds	4
  2394  0000ED                     _Sent:
  2395                           	opt stack 0
  2396  0000ED                     	ds	1
  2397                           tblptru	equ	0xFF8
  2398                           tblptrh	equ	0xFF7
  2399                           tblptrl	equ	0xFF6
  2400                           tablat	equ	0xFF5
  2401                           postinc0	equ	0xFEE
  2402                           wreg	equ	0xFE8
  2403                           postdec1	equ	0xFE5
  2404                           fsr1h	equ	0xFE2
  2405                           fsr1l	equ	0xFE1
  2406                           
  2407                           	psect	bssBANK1
  2408  000167                     __pbssBANK1:
  2409                           	opt stack 0
  2410  000167                     _Global:
  2411                           	opt stack 0
  2412  000167                     	ds	45
  2413  000194                     _RFsendCode:
  2414                           	opt stack 0
  2415  000194                     	ds	20
  2416                           tblptru	equ	0xFF8
  2417                           tblptrh	equ	0xFF7
  2418                           tblptrl	equ	0xFF6
  2419                           tablat	equ	0xFF5
  2420                           postinc0	equ	0xFEE
  2421                           wreg	equ	0xFE8
  2422                           postdec1	equ	0xFE5
  2423                           fsr1h	equ	0xFE2
  2424                           fsr1l	equ	0xFE1
  2425                           
  2426                           	psect	dataBANK1
  2427  0001A8                     __pdataBANK1:
  2428                           	opt stack 0
  2429  0001A8                     _ProductName:
  2430                           	opt stack 0
  2431  0001A8                     	ds	50
  2432                           tblptru	equ	0xFF8
  2433                           tblptrh	equ	0xFF7
  2434                           tblptrl	equ	0xFF6
  2435                           tablat	equ	0xFF5
  2436                           postinc0	equ	0xFEE
  2437                           wreg	equ	0xFE8
  2438                           postdec1	equ	0xFE5
  2439                           fsr1h	equ	0xFE2
  2440                           fsr1l	equ	0xFE1
  2441                           
  2442                           	psect	bssBANK2
  2443  000200                     __pbssBANK2:
  2444                           	opt stack 0
  2445  000200                     _ReceivedString:
  2446                           	opt stack 0
  2447  000200                     	ds	255
  2448                           tblptru	equ	0xFF8
  2449                           tblptrh	equ	0xFF7
  2450                           tblptrl	equ	0xFF6
  2451                           tablat	equ	0xFF5
  2452                           postinc0	equ	0xFEE
  2453                           wreg	equ	0xFE8
  2454                           postdec1	equ	0xFE5
  2455                           fsr1h	equ	0xFE2
  2456                           fsr1l	equ	0xFE1
  2457                           
  2458                           	psect	bssBANK3
  2459  000300                     __pbssBANK3:
  2460                           	opt stack 0
  2461  000300                     _CommandString:
  2462                           	opt stack 0
  2463  000300                     	ds	255
  2464                           tblptru	equ	0xFF8
  2465                           tblptrh	equ	0xFF7
  2466                           tblptrl	equ	0xFF6
  2467                           tablat	equ	0xFF5
  2468                           postinc0	equ	0xFEE
  2469                           wreg	equ	0xFE8
  2470                           postdec1	equ	0xFE5
  2471                           fsr1h	equ	0xFE2
  2472                           fsr1l	equ	0xFE1
  2473                           
  2474                           	psect	bssBANK4
  2475  000400                     __pbssBANK4:
  2476                           	opt stack 0
  2477  000400                     _IRRawCode:
  2478                           	opt stack 0
  2479  000400                     	ds	144
  2480                           tblptru	equ	0xFF8
  2481                           tblptrh	equ	0xFF7
  2482                           tblptrl	equ	0xFF6
  2483                           tablat	equ	0xFF5
  2484                           postinc0	equ	0xFEE
  2485                           wreg	equ	0xFE8
  2486                           postdec1	equ	0xFE5
  2487                           fsr1h	equ	0xFE2
  2488                           fsr1l	equ	0xFE1
  2489                           
  2490                           	psect	cstackBANK4
  2491  000490                     __pcstackBANK4:
  2492                           	opt stack 0
  2493  000490                     UseBluetooth@buf:
  2494                           	opt stack 0
  2495                           
  2496                           ; 50 bytes @ 0x0
  2497  000490                     	ds	50
  2498  0004C2                     UseBluetooth@timeout:
  2499                           	opt stack 0
  2500                           
  2501                           ; 1 bytes @ 0x32
  2502  0004C2                     	ds	1
  2503  0004C3                     UseBluetooth@ok:
  2504                           	opt stack 0
  2505                           
  2506                           ; 1 bytes @ 0x33
  2507  0004C3                     	ds	1
  2508  0004C4                     UseBluetooth@NecAddress:
  2509                           	opt stack 0
  2510                           
  2511                           ; 1 bytes @ 0x34
  2512  0004C4                     	ds	1
  2513  0004C5                     UseBluetooth@NecCommand:
  2514                           	opt stack 0
  2515                           
  2516                           ; 1 bytes @ 0x35
  2517  0004C5                     	ds	1
  2518  0004C6                     UseBluetooth@temp:
  2519                           	opt stack 0
  2520                           
  2521                           ; 4 bytes @ 0x36
  2522  0004C6                     	ds	4
  2523  0004CA                     UseBluetooth@EnteredNEC:
  2524                           	opt stack 0
  2525                           
  2526                           ; 4 bytes @ 0x3A
  2527  0004CA                     	ds	4
  2528                           tblptru	equ	0xFF8
  2529                           tblptrh	equ	0xFF7
  2530                           tblptrl	equ	0xFF6
  2531                           tablat	equ	0xFF5
  2532                           postinc0	equ	0xFEE
  2533                           wreg	equ	0xFE8
  2534                           postdec1	equ	0xFE5
  2535                           fsr1h	equ	0xFE2
  2536                           fsr1l	equ	0xFE1
  2537                           
  2538                           	psect	cstackBANK1
  2539  000100                     __pcstackBANK1:
  2540                           	opt stack 0
  2541  000100                     ?_SetEEPROM:
  2542                           	opt stack 0
  2543  000100                     GetEEPROM@Temp:
  2544                           	opt stack 0
  2545  000100                     SetEEPROM@Temp:
  2546                           	opt stack 0
  2547  000100                     StringAddEqual@temp:
  2548                           	opt stack 0
  2549                           
  2550                           ; 100 bytes @ 0x0
  2551  000100                     	ds	45
  2552  00012D                     SetEEPROM@burn:
  2553                           	opt stack 0
  2554  00012D                     SyncEEPROMToGlobal@Temp:
  2555                           	opt stack 0
  2556                           
  2557                           ; 45 bytes @ 0x2D
  2558  00012D                     	ds	55
  2559  000164                     StringAddEqual@firstnumber:
  2560                           	opt stack 0
  2561                           
  2562                           ; 1 bytes @ 0x64
  2563  000164                     	ds	1
  2564  000165                     StringAddEqual@i:
  2565                           	opt stack 0
  2566                           
  2567                           ; 1 bytes @ 0x65
  2568  000165                     	ds	1
  2569  000166                     StringAddEqual@j:
  2570                           	opt stack 0
  2571                           
  2572                           ; 1 bytes @ 0x66
  2573  000166                     	ds	1
  2574                           tblptru	equ	0xFF8
  2575                           tblptrh	equ	0xFF7
  2576                           tblptrl	equ	0xFF6
  2577                           tablat	equ	0xFF5
  2578                           postinc0	equ	0xFEE
  2579                           wreg	equ	0xFE8
  2580                           postdec1	equ	0xFE5
  2581                           fsr1h	equ	0xFE2
  2582                           fsr1l	equ	0xFE1
  2583                           
  2584                           	psect	cstackBANK0
  2585  000060                     __pcstackBANK0:
  2586                           	opt stack 0
  2587  000060                     ??_high_isr:
  2588                           
  2589                           ; 0 bytes @ 0x0
  2590  000060                     	ds	18
  2591  000072                     ??_Reverse_Byte:
  2592  000072                     ?_ReadEEPROM_1Byte:
  2593                           	opt stack 0
  2594  000072                     ?___ftpack:
  2595                           	opt stack 0
  2596  000072                     ?_Reverse_4Byte:
  2597                           	opt stack 0
  2598  000072                     ?___lmul:
  2599                           	opt stack 0
  2600  000072                     ?___lldiv:
  2601                           	opt stack 0
  2602  000072                     IsLetter@data:
  2603                           	opt stack 0
  2604  000072                     UARTchar@data:
  2605                           	opt stack 0
  2606  000072                     cleanBuffer@data:
  2607                           	opt stack 0
  2608  000072                     cleanBuffer16bit@data:
  2609                           	opt stack 0
  2610  000072                     StringMatch@This:
  2611                           	opt stack 0
  2612  000072                     StringContains@This:
  2613                           	opt stack 0
  2614  000072                     lowercaseChar@Input:
  2615                           	opt stack 0
  2616  000072                     OpenUSART@spbrg:
  2617                           	opt stack 0
  2618  000072                     ReadEEPROM_1Byte@address:
  2619                           	opt stack 0
  2620  000072                     WriteEEPROM_1Byte@address:
  2621                           	opt stack 0
  2622  000072                     SendRF@Code:
  2623                           	opt stack 0
  2624  000072                     ___ftpack@arg:
  2625                           	opt stack 0
  2626  000072                     ___ftge@ff1:
  2627                           	opt stack 0
  2628  000072                     delayUS@US:
  2629                           	opt stack 0
  2630  000072                     Reverse_4Byte@This:
  2631                           	opt stack 0
  2632  000072                     ___lmul@multiplier:
  2633                           	opt stack 0
  2634  000072                     ___lldiv@dividend:
  2635                           	opt stack 0
  2636                           
  2637                           ; 4 bytes @ 0x12
  2638  000072                     	ds	1
  2639  000073                     UARTstring@data:
  2640                           	opt stack 0
  2641                           
  2642                           ; 2 bytes @ 0x13
  2643  000073                     	ds	1
  2644  000074                     Reverse_Byte@temp:
  2645                           	opt stack 0
  2646  000074                     OpenUSART@config:
  2647                           	opt stack 0
  2648  000074                     ReadEEPROM_1Byte@GIEstatus:
  2649                           	opt stack 0
  2650  000074                     WriteEEPROM_1Byte@data:
  2651                           	opt stack 0
  2652  000074                     SendRF@Config:
  2653                           	opt stack 0
  2654  000074                     cleanBuffer@count:
  2655                           	opt stack 0
  2656  000074                     cleanBuffer16bit@count:
  2657                           	opt stack 0
  2658  000074                     StringMatch@That:
  2659                           	opt stack 0
  2660  000074                     StringContains@That:
  2661                           	opt stack 0
  2662                           
  2663                           ; 2 bytes @ 0x14
  2664  000074                     	ds	1
  2665  000075                     ?_GetMemoryChar:
  2666                           	opt stack 0
  2667  000075                     ?_GetMemoryLong:
  2668                           	opt stack 0
  2669  000075                     Reverse_Byte@This:
  2670                           	opt stack 0
  2671  000075                     WriteEEPROM_1Byte@GIEstatus:
  2672                           	opt stack 0
  2673  000075                     SendRF@size:
  2674                           	opt stack 0
  2675  000075                     ___ftpack@exp:
  2676                           	opt stack 0
  2677  000075                     StringMatchCaseInsensitive@This:
  2678                           	opt stack 0
  2679  000075                     StringContainsCaseInsensitive@This:
  2680                           	opt stack 0
  2681  000075                     UARTstringCRLN@data:
  2682                           	opt stack 0
  2683  000075                     UARTcommandMenu@Command:
  2684                           	opt stack 0
  2685  000075                     ___ftge@ff2:
  2686                           	opt stack 0
  2687                           
  2688                           ; 3 bytes @ 0x15
  2689  000075                     	ds	1
  2690  000076                     ??_delayUS:
  2691  000076                     ??_cleanBuffer:
  2692  000076                     ??_cleanBuffer16bit:
  2693  000076                     ??_StringMatch:
  2694  000076                     ??_StringContains:
  2695  000076                     ??_Reverse_4Byte:
  2696  000076                     ?_EncodeNEC:
  2697                           	opt stack 0
  2698  000076                     EncodeNEC@command:
  2699                           	opt stack 0
  2700  000076                     SendRF@RepeatAmount:
  2701                           	opt stack 0
  2702  000076                     ___ftpack@sign:
  2703                           	opt stack 0
  2704  000076                     DecodeNEC@Nec:
  2705                           	opt stack 0
  2706  000076                     ___lmul@multiplicand:
  2707                           	opt stack 0
  2708  000076                     ___lldiv@divisor:
  2709                           	opt stack 0
  2710                           
  2711                           ; 4 bytes @ 0x16
  2712  000076                     	ds	1
  2713  000077                     ??___ftpack:
  2714  000077                     ??_SendRF:
  2715  000077                     StringContains@begin:
  2716                           	opt stack 0
  2717  000077                     StringMatchCaseInsensitive@That:
  2718                           	opt stack 0
  2719  000077                     StringContainsCaseInsensitive@That:
  2720                           	opt stack 0
  2721  000077                     UARTcommandMenu@Desc:
  2722                           	opt stack 0
  2723  000077                     delayUS@i:
  2724                           	opt stack 0
  2725                           
  2726                           ; 4 bytes @ 0x17
  2727  000077                     	ds	1
  2728  000078                     ??___ftge:
  2729                           
  2730                           ; 0 bytes @ 0x18
  2731  000078                     	ds	1
  2732  000079                     ??_GetMemoryLong:
  2733  000079                     ??_UARTcommandMenu:
  2734  000079                     cleanBuffer@i:
  2735                           	opt stack 0
  2736  000079                     cleanBuffer16bit@i:
  2737                           	opt stack 0
  2738  000079                     StringMatchCaseInsensitive@tempThis:
  2739                           	opt stack 0
  2740  000079                     StringContainsCaseInsensitive@begin:
  2741                           	opt stack 0
  2742  000079                     GetMemoryChar@AddressFirst:
  2743                           	opt stack 0
  2744  000079                     SendRF@i:
  2745                           	opt stack 0
  2746                           
  2747                           ; 1 bytes @ 0x19
  2748  000079                     	ds	1
  2749  00007A                     ??_EncodeNEC:
  2750  00007A                     ?___ftadd:
  2751                           	opt stack 0
  2752  00007A                     ?___altoft:
  2753                           	opt stack 0
  2754  00007A                     ?___lltoft:
  2755                           	opt stack 0
  2756  00007A                     ?___lwtoft:
  2757                           	opt stack 0
  2758  00007A                     StringMatchCaseInsensitive@tempThat:
  2759                           	opt stack 0
  2760  00007A                     StringContainsCaseInsensitive@tempThis:
  2761                           	opt stack 0
  2762  00007A                     GetMemoryChar@H:
  2763                           	opt stack 0
  2764  00007A                     BufferCopy@from:
  2765                           	opt stack 0
  2766  00007A                     DecodeNEC@address:
  2767                           	opt stack 0
  2768  00007A                     SendRF_wait@Code:
  2769                           	opt stack 0
  2770  00007A                     ___lwtoft@c:
  2771                           	opt stack 0
  2772  00007A                     ___ftadd@f1:
  2773                           	opt stack 0
  2774  00007A                     ___lmul@product:
  2775                           	opt stack 0
  2776  00007A                     ___altoft@c:
  2777                           	opt stack 0
  2778  00007A                     ___lldiv@quotient:
  2779                           	opt stack 0
  2780  00007A                     ___lltoft@c:
  2781                           	opt stack 0
  2782                           
  2783                           ; 4 bytes @ 0x1A
  2784  00007A                     	ds	1
  2785  00007B                     StringContainsCaseInsensitive@tempThat:
  2786                           	opt stack 0
  2787  00007B                     SetMemoryChar@AddressFirst:
  2788                           	opt stack 0
  2789  00007B                     ReadCodeButtons@temp:
  2790                           	opt stack 0
  2791  00007B                     EnterCommandMode@count:
  2792                           	opt stack 0
  2793  00007B                     InternalADC_Read@ADCcounts:
  2794                           	opt stack 0
  2795                           
  2796                           ; 2 bytes @ 0x1B
  2797  00007B                     	ds	1
  2798  00007C                     SetMemoryChar@Test:
  2799                           	opt stack 0
  2800  00007C                     SendRF_wait@Config:
  2801                           	opt stack 0
  2802  00007C                     BufferCopy@to:
  2803                           	opt stack 0
  2804  00007C                     DecodeNEC@command:
  2805                           	opt stack 0
  2806                           
  2807                           ; 2 bytes @ 0x1C
  2808  00007C                     	ds	1
  2809  00007D                     ??_InternalADC_Read:
  2810  00007D                     ?___ftdiv:
  2811                           	opt stack 0
  2812  00007D                     SetMemoryChar@Data:
  2813                           	opt stack 0
  2814  00007D                     SendRF_wait@size:
  2815                           	opt stack 0
  2816  00007D                     ___ftadd@f2:
  2817                           	opt stack 0
  2818  00007D                     ___ftdiv@f1:
  2819                           	opt stack 0
  2820                           
  2821                           ; 3 bytes @ 0x1D
  2822  00007D                     	ds	1
  2823  00007E                     ??_DecodeNEC:
  2824  00007E                     ??___altoft:
  2825  00007E                     ??___lltoft:
  2826  00007E                     BufferCopy@count:
  2827                           	opt stack 0
  2828  00007E                     UARTcommandMenu@i:
  2829                           	opt stack 0
  2830  00007E                     SendRF_wait@amount:
  2831                           	opt stack 0
  2832  00007E                     ___lldiv@counter:
  2833                           	opt stack 0
  2834  00007E                     GetNumber@This:
  2835                           	opt stack 0
  2836  00007E                     Reverse_4Byte@temp:
  2837                           	opt stack 0
  2838                           
  2839                           ; 4 bytes @ 0x1E
  2840  00007E                     	ds	1
  2841  00007F                     ?___llmod:
  2842                           	opt stack 0
  2843  00007F                     BufferCopy@shift:
  2844                           	opt stack 0
  2845  00007F                     UARTcommandMenu@place:
  2846                           	opt stack 0
  2847  00007F                     InternalADC_Read@AnaChanSel:
  2848                           	opt stack 0
  2849  00007F                     SendRF_Channel@channel:
  2850                           	opt stack 0
  2851  00007F                     ___llmod@dividend:
  2852                           	opt stack 0
  2853                           
  2854                           ; 4 bytes @ 0x1F
  2855  00007F                     	ds	1
  2856  000080                     ??___ftadd:
  2857  000080                     BufferCopy@i:
  2858                           	opt stack 0
  2859  000080                     GetNumber@CommaNumber:
  2860                           	opt stack 0
  2861  000080                     InternalADC_Read@channel:
  2862                           	opt stack 0
  2863  000080                     ___ftdiv@f2:
  2864                           	opt stack 0
  2865                           
  2866                           ; 3 bytes @ 0x20
  2867  000080                     	ds	1
  2868  000081                     GetNumber@result:
  2869                           	opt stack 0
  2870  000081                     StringAddEqual@Input:
  2871                           	opt stack 0
  2872                           
  2873                           ; 2 bytes @ 0x21
  2874  000081                     	ds	1
  2875  000082                     DecodeNEC@temp2:
  2876                           	opt stack 0
  2877  000082                     ___altoft@exp:
  2878                           	opt stack 0
  2879  000082                     ___lltoft@exp:
  2880                           	opt stack 0
  2881  000082                     SendNEC_bytes@code:
  2882                           	opt stack 0
  2883                           
  2884                           ; 4 bytes @ 0x22
  2885  000082                     	ds	1
  2886  000083                     ??___ftdiv:
  2887  000083                     ??_GetNumber:
  2888  000083                     ??_StringAddEqual:
  2889  000083                     DecodeNEC@temp3:
  2890                           	opt stack 0
  2891  000083                     ___altoft@sign:
  2892                           	opt stack 0
  2893  000083                     ___ftadd@sign:
  2894                           	opt stack 0
  2895  000083                     ___llmod@divisor:
  2896                           	opt stack 0
  2897                           
  2898                           ; 4 bytes @ 0x23
  2899  000083                     	ds	1
  2900  000084                     DecodeNEC@temp1:
  2901                           	opt stack 0
  2902  000084                     ___ftadd@exp2:
  2903                           	opt stack 0
  2904                           
  2905                           ; 1 bytes @ 0x24
  2906  000084                     	ds	1
  2907  000085                     ___ftadd@exp1:
  2908                           	opt stack 0
  2909                           
  2910                           ; 1 bytes @ 0x25
  2911  000085                     	ds	1
  2912  000086                     ?___fttol:
  2913                           	opt stack 0
  2914  000086                     SendNEC_bytes@RepeatAmount:
  2915                           	opt stack 0
  2916  000086                     ___ftdiv@cntr:
  2917                           	opt stack 0
  2918  000086                     ___fttol@f1:
  2919                           	opt stack 0
  2920                           
  2921                           ; 3 bytes @ 0x26
  2922  000086                     	ds	1
  2923  000087                     ___llmod@counter:
  2924                           	opt stack 0
  2925  000087                     ___ftdiv@f3:
  2926                           	opt stack 0
  2927  000087                     SendNEC_wait@code:
  2928                           	opt stack 0
  2929                           
  2930                           ; 4 bytes @ 0x27
  2931  000087                     	ds	1
  2932  000088                     ?_sprintf:
  2933                           	opt stack 0
  2934  000088                     GetNumber@tempCommaNumber:
  2935                           	opt stack 0
  2936  000088                     sprintf@sp:
  2937                           	opt stack 0
  2938                           
  2939                           ; 2 bytes @ 0x28
  2940  000088                     	ds	1
  2941  000089                     GetNumber@Hex:
  2942                           	opt stack 0
  2943                           
  2944                           ; 1 bytes @ 0x29
  2945  000089                     	ds	1
  2946  00008A                     ??___fttol:
  2947  00008A                     GetNumber@negative:
  2948                           	opt stack 0
  2949  00008A                     ___ftdiv@exp:
  2950                           	opt stack 0
  2951  00008A                     sprintf@f:
  2952                           	opt stack 0
  2953                           
  2954                           ; 2 bytes @ 0x2A
  2955  00008A                     	ds	1
  2956  00008B                     GetNumber@count:
  2957                           	opt stack 0
  2958  00008B                     SendNEC_wait@RepeatAmount:
  2959                           	opt stack 0
  2960  00008B                     ___ftdiv@sign:
  2961                           	opt stack 0
  2962                           
  2963                           ; 1 bytes @ 0x2B
  2964  00008B                     	ds	1
  2965  00008C                     ?___ftmul:
  2966                           	opt stack 0
  2967  00008C                     GetNumber@i:
  2968                           	opt stack 0
  2969  00008C                     SendNEC_wait@toggle:
  2970                           	opt stack 0
  2971  00008C                     ___ftmul@f1:
  2972                           	opt stack 0
  2973                           
  2974                           ; 3 bytes @ 0x2C
  2975  00008C                     	ds	1
  2976  00008D                     GetNumber@tempThis:
  2977                           	opt stack 0
  2978  00008D                     GetMemoryLong@temp:
  2979                           	opt stack 0
  2980                           
  2981                           ; 4 bytes @ 0x2D
  2982  00008D                     	ds	1
  2983  00008E                     GetNumber@temp:
  2984                           	opt stack 0
  2985  00008E                     EncodeNEC@temp1:
  2986                           	opt stack 0
  2987                           
  2988                           ; 4 bytes @ 0x2E
  2989  00008E                     	ds	1
  2990  00008F                     ___fttol@sign1:
  2991                           	opt stack 0
  2992  00008F                     ___ftmul@f2:
  2993                           	opt stack 0
  2994                           
  2995                           ; 3 bytes @ 0x2F
  2996  00008F                     	ds	1
  2997  000090                     ___fttol@lval:
  2998                           	opt stack 0
  2999                           
  3000                           ; 4 bytes @ 0x30
  3001  000090                     	ds	1
  3002  000091                     GetMemoryLong@H:
  3003                           	opt stack 0
  3004                           
  3005                           ; 1 bytes @ 0x31
  3006  000091                     	ds	1
  3007  000092                     ??___ftmul:
  3008  000092                     GetMemoryLong@MH:
  3009                           	opt stack 0
  3010  000092                     EncodeNEC@temp2:
  3011                           	opt stack 0
  3012                           
  3013                           ; 4 bytes @ 0x32
  3014  000092                     	ds	1
  3015  000093                     GetMemoryLong@ML:
  3016                           	opt stack 0
  3017                           
  3018                           ; 1 bytes @ 0x33
  3019  000093                     	ds	1
  3020  000094                     ??_sprintf:
  3021  000094                     GetMemoryLong@L:
  3022                           	opt stack 0
  3023  000094                     ___fttol@exp1:
  3024                           	opt stack 0
  3025                           
  3026                           ; 1 bytes @ 0x34
  3027  000094                     	ds	1
  3028  000095                     ?_Round:
  3029                           	opt stack 0
  3030  000095                     GetMemoryLong@AddressFirst:
  3031                           	opt stack 0
  3032  000095                     ___ftmul@exp:
  3033                           	opt stack 0
  3034  000095                     Round@input:
  3035                           	opt stack 0
  3036                           
  3037                           ; 3 bytes @ 0x35
  3038  000095                     	ds	1
  3039  000096                     ?_GetEEPROM:
  3040                           	opt stack 0
  3041  000096                     sprintf@idx:
  3042                           	opt stack 0
  3043  000096                     ___ftmul@f3_as_product:
  3044                           	opt stack 0
  3045  000096                     SetMemoryLong@Data:
  3046                           	opt stack 0
  3047  000096                     EncodeNEC@temp3:
  3048                           	opt stack 0
  3049                           
  3050                           ; 4 bytes @ 0x36
  3051  000096                     	ds	1
  3052  000097                     sprintf@prec:
  3053                           	opt stack 0
  3054                           
  3055                           ; 2 bytes @ 0x37
  3056  000097                     	ds	1
  3057  000098                     Round@temp:
  3058                           	opt stack 0
  3059                           
  3060                           ; 4 bytes @ 0x38
  3061  000098                     	ds	1
  3062  000099                     ___ftmul@cntr:
  3063                           	opt stack 0
  3064  000099                     sprintf@ap:
  3065                           	opt stack 0
  3066                           
  3067                           ; 2 bytes @ 0x39
  3068  000099                     	ds	1
  3069  00009A                     SetMemoryLong@AddressFirst:
  3070                           	opt stack 0
  3071  00009A                     ___ftmul@sign:
  3072                           	opt stack 0
  3073  00009A                     EncodeNEC@temp4:
  3074                           	opt stack 0
  3075                           
  3076                           ; 4 bytes @ 0x3A
  3077  00009A                     	ds	1
  3078  00009B                     ??_SetMemoryLong:
  3079  00009B                     ?_ReadVoltage:
  3080                           	opt stack 0
  3081  00009B                     sprintf@val:
  3082                           	opt stack 0
  3083                           
  3084                           ; 4 bytes @ 0x3B
  3085  00009B                     	ds	1
  3086  00009C                     InitUART@Baud:
  3087                           	opt stack 0
  3088                           
  3089                           ; 4 bytes @ 0x3C
  3090  00009C                     	ds	2
  3091  00009E                     EncodeNEC@address:
  3092                           	opt stack 0
  3093  00009E                     ReadVoltage@voltage:
  3094                           	opt stack 0
  3095                           
  3096                           ; 3 bytes @ 0x3E
  3097  00009E                     	ds	1
  3098  00009F                     sprintf@flag:
  3099                           	opt stack 0
  3100  00009F                     SetMemoryLong@Test:
  3101                           	opt stack 0
  3102                           
  3103                           ; 4 bytes @ 0x3F
  3104  00009F                     	ds	1
  3105  0000A0                     ??_InitUART:
  3106  0000A0                     sprintf@c:
  3107                           	opt stack 0
  3108                           
  3109                           ; 1 bytes @ 0x40
  3110  0000A0                     	ds	1
  3111  0000A1                     ReadVoltage@temp:
  3112                           	opt stack 0
  3113  0000A1                     BluetoothInitialSetup@buf:
  3114                           	opt stack 0
  3115                           
  3116                           ; 50 bytes @ 0x41
  3117  0000A1                     	ds	2
  3118  0000A3                     SetMemoryLong@H:
  3119                           	opt stack 0
  3120                           
  3121                           ; 1 bytes @ 0x43
  3122  0000A3                     	ds	1
  3123  0000A4                     SetMemoryLong@MH:
  3124                           	opt stack 0
  3125  0000A4                     _InitUART$3620:
  3126                           	opt stack 0
  3127                           
  3128                           ; 3 bytes @ 0x44
  3129  0000A4                     	ds	1
  3130  0000A5                     SetMemoryLong@ML:
  3131                           	opt stack 0
  3132                           
  3133                           ; 1 bytes @ 0x45
  3134  0000A5                     	ds	1
  3135  0000A6                     SetMemoryLong@L:
  3136                           	opt stack 0
  3137                           
  3138                           ; 1 bytes @ 0x46
  3139  0000A6                     	ds	1
  3140  0000A7                     InitUART@spbrg:
  3141                           	opt stack 0
  3142  0000A7                     SetEEPROM@fail:
  3143                           	opt stack 0
  3144                           
  3145                           ; 4 bytes @ 0x47
  3146  0000A7                     	ds	2
  3147  0000A9                     InitUART@config:
  3148                           	opt stack 0
  3149                           
  3150                           ; 1 bytes @ 0x49
  3151  0000A9                     	ds	1
  3152  0000AA                     InitUART@temp:
  3153                           	opt stack 0
  3154                           
  3155                           ; 4 bytes @ 0x4A
  3156  0000AA                     	ds	1
  3157  0000AB                     UseIRCode@Code:
  3158                           	opt stack 0
  3159                           
  3160                           ; 2 bytes @ 0x4B
  3161  0000AB                     	ds	2
  3162  0000AD                     UseIRCode@NEC:
  3163                           	opt stack 0
  3164                           
  3165                           ; 4 bytes @ 0x4D
  3166  0000AD                     	ds	4
  3167  0000B1                     
  3168                           ; 0 bytes @ 0x51
  3169  0000B1                     	ds	1
  3170  0000B2                     UseIRCode@i:
  3171                           	opt stack 0
  3172                           
  3173                           ; 1 bytes @ 0x52
  3174  0000B2                     	ds	17
  3175  0000C3                     
  3176                           ; 0 bytes @ 0x63
  3177  0000C3                     	ds	16
  3178  0000D3                     BluetoothInitialSetup@ok:
  3179                           	opt stack 0
  3180                           
  3181                           ; 1 bytes @ 0x73
  3182  0000D3                     	ds	1
  3183  0000D4                     main@i:
  3184                           	opt stack 0
  3185                           
  3186                           ; 1 bytes @ 0x74
  3187  0000D4                     	ds	1
  3188                           tblptru	equ	0xFF8
  3189                           tblptrh	equ	0xFF7
  3190                           tblptrl	equ	0xFF6
  3191                           tablat	equ	0xFF5
  3192                           postinc0	equ	0xFEE
  3193                           wreg	equ	0xFE8
  3194                           postdec1	equ	0xFE5
  3195                           fsr1h	equ	0xFE2
  3196                           fsr1l	equ	0xFE1
  3197                           
  3198                           	psect	cstackCOMRAM
  3199  000001                     __pcstackCOMRAM:
  3200                           	opt stack 0
  3201  000001                     IsCharacter@data:
  3202                           	opt stack 0
  3203  000001                     ReadUSART@data:
  3204                           	opt stack 0
  3205  000001                     i1UARTchar@data:
  3206                           	opt stack 0
  3207  000001                     i1cleanBuffer@data:
  3208                           	opt stack 0
  3209                           
  3210                           ; 2 bytes @ 0x0
  3211  000001                     	ds	1
  3212  000002                     EraseScreen@characters:
  3213                           	opt stack 0
  3214  000002                     i1UARTstring@data:
  3215                           	opt stack 0
  3216                           
  3217                           ; 2 bytes @ 0x1
  3218  000002                     	ds	1
  3219  000003                     EraseScreen@i:
  3220                           	opt stack 0
  3221  000003                     i1cleanBuffer@count:
  3222                           	opt stack 0
  3223                           
  3224                           ; 2 bytes @ 0x2
  3225  000003                     	ds	1
  3226  000004                     i1UARTstringCRLN@data:
  3227                           	opt stack 0
  3228                           
  3229                           ; 2 bytes @ 0x3
  3230  000004                     	ds	1
  3231  000005                     ??i1_cleanBuffer:
  3232                           
  3233                           ; 0 bytes @ 0x4
  3234  000005                     	ds	1
  3235  000006                     
  3236                           ; 0 bytes @ 0x5
  3237  000006                     	ds	2
  3238  000008                     i1cleanBuffer@i:
  3239                           	opt stack 0
  3240                           
  3241                           ; 1 bytes @ 0x7
  3242  000008                     	ds	1
  3243  000009                     ??_low_isr:
  3244                           
  3245                           ; 0 bytes @ 0x8
  3246  000009                     	ds	17
  3247  00001A                     low_isr@data:
  3248                           	opt stack 0
  3249                           
  3250                           ; 1 bytes @ 0x19
  3251  00001A                     	ds	1
  3252  00001B                     IRrawToNEC@Raw:
  3253                           	opt stack 0
  3254                           
  3255                           ; 2 bytes @ 0x1A
  3256  00001B                     	ds	2
  3257  00001D                     IRrawToNEC@NEC:
  3258                           	opt stack 0
  3259                           
  3260                           ; 2 bytes @ 0x1C
  3261  00001D                     	ds	2
  3262  00001F                     IRrawToNEC@Invert:
  3263                           	opt stack 0
  3264                           
  3265                           ; 1 bytes @ 0x1E
  3266  00001F                     	ds	1
  3267  000020                     ??_IRrawToNEC:
  3268                           
  3269                           ; 0 bytes @ 0x1F
  3270  000020                     	ds	2
  3271  000022                     IRrawToNEC@NECtemp:
  3272                           	opt stack 0
  3273                           
  3274                           ; 4 bytes @ 0x21
  3275  000022                     	ds	4
  3276  000026                     IRrawToNEC@first:
  3277                           	opt stack 0
  3278                           
  3279                           ; 1 bytes @ 0x25
  3280  000026                     	ds	1
  3281  000027                     IRrawToNEC@i:
  3282                           	opt stack 0
  3283                           
  3284                           ; 1 bytes @ 0x26
  3285  000027                     	ds	1
  3286  000028                     IRrawToNEC@StartBit:
  3287                           	opt stack 0
  3288                           
  3289                           ; 1 bytes @ 0x27
  3290  000028                     	ds	1
  3291  000029                     high_isr@IRpin:
  3292                           	opt stack 0
  3293                           
  3294                           ; 1 bytes @ 0x28
  3295  000029                     	ds	1
  3296  00002A                     high_isr@Time0:
  3297                           	opt stack 0
  3298                           
  3299                           ; 2 bytes @ 0x29
  3300  00002A                     	ds	2
  3301                           tblptru	equ	0xFF8
  3302                           tblptrh	equ	0xFF7
  3303                           tblptrl	equ	0xFF6
  3304                           tablat	equ	0xFF5
  3305                           postinc0	equ	0xFEE
  3306                           wreg	equ	0xFE8
  3307                           postdec1	equ	0xFE5
  3308                           fsr1h	equ	0xFE2
  3309                           fsr1l	equ	0xFE1
  3310                           
  3311 ;;
  3312 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3313 ;;
  3314 ;; *************** function _main *****************
  3315 ;; Defined at:
  3316 ;;		line 65 in file "main.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;		None
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  i               1  116[BANK0 ] unsigned char 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;		None               void
  3323 ;; Registers used:
  3324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3333 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;Total ram usage:        1 bytes
  3335 ;; Hardware stack levels required when called:   14
  3336 ;; This function calls:
  3337 ;;		_ConfigureOscillator
  3338 ;;		_InitApp
  3339 ;;		_Init_System
  3340 ;;		_ReadVoltage
  3341 ;;		_UARTchar
  3342 ;;		_UARTstring
  3343 ;;		_UseBluetooth
  3344 ;;		_UseIRCode
  3345 ;;		___ftge
  3346 ;;		_cleanBuffer
  3347 ;;		_delayUS
  3348 ;; This function is called by:
  3349 ;;		Startup code after reset
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text0
  3354  003EB0                     __ptext0:
  3355                           	opt stack 0
  3356  003EB0                     _main:
  3357                           	opt stack 17
  3358                           
  3359                           ;main.c: 67: unsigned char i=0;
  3360                           
  3361                           ;incstack = 0
  3362  003EB0  0E00               	movlw	0
  3363  003EB2  0100               	movlb	0	; () banked
  3364  003EB4  6FD4               	movwf	main@i& (0+255),b
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;main.c: 69: ConfigureOscillator();
  3368  003EB6  ECFF  F02D         	call	_ConfigureOscillator	;wreg free
  3369                           
  3370                           ;main.c: 70: InitApp();
  3371  003EBA  ECBB  F02B         	call	_InitApp	;wreg free
  3372                           
  3373                           ;main.c: 71: Init_System();
  3374  003EBE  EC6F  F029         	call	_Init_System	;wreg free
  3375                           
  3376                           ;main.c: 74: for(i =0;i<10;i++)
  3377  003EC2  0E00               	movlw	0
  3378  003EC4  0100               	movlb	0	; () banked
  3379  003EC6  6FD4               	movwf	main@i& (0+255),b
  3380  003EC8                     l10347:
  3381                           
  3382                           ; BSR set to: 0
  3383  003EC8  0E09               	movlw	9
  3384  003ECA  0100               	movlb	0	; () banked
  3385  003ECC  65D4               	cpfsgt	main@i& (0+255),b
  3386  003ECE  D001               	goto	l10351
  3387                           
  3388                           ; BSR set to: 0
  3389  003ED0  D01D               	goto	l10363
  3390  003ED2                     l10351:
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;main.c: 75: {
  3394                           ;main.c: 76: (LATC |= 0x02);
  3395  003ED2  828B               	bsf	3979,1,c	;volatile
  3396                           
  3397                           ;main.c: 77: (LATC &= ~0x04);
  3398  003ED4  948B               	bcf	3979,2,c	;volatile
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;main.c: 78: delayUS(50000);
  3402  003ED6  0E50               	movlw	80
  3403  003ED8  0100               	movlb	0	; () banked
  3404  003EDA  6F72               	movwf	delayUS@US& (0+255),b
  3405  003EDC  0EC3               	movlw	195
  3406  003EDE  6F73               	movwf	(delayUS@US+1)& (0+255),b
  3407  003EE0  0E00               	movlw	0
  3408  003EE2  6F74               	movwf	(delayUS@US+2)& (0+255),b
  3409  003EE4  0E00               	movlw	0
  3410  003EE6  6F75               	movwf	(delayUS@US+3)& (0+255),b
  3411  003EE8  EC1F  F02B         	call	_delayUS	;wreg free
  3412                           
  3413                           ;main.c: 79: (LATC &= ~0x02);
  3414  003EEC  928B               	bcf	3979,1,c	;volatile
  3415                           
  3416                           ;main.c: 80: (LATC |= 0x04);
  3417  003EEE  848B               	bsf	3979,2,c	;volatile
  3418                           
  3419                           ;main.c: 81: delayUS(50000);
  3420  003EF0  0E50               	movlw	80
  3421  003EF2  0100               	movlb	0	; () banked
  3422  003EF4  6F72               	movwf	delayUS@US& (0+255),b
  3423  003EF6  0EC3               	movlw	195
  3424  003EF8  6F73               	movwf	(delayUS@US+1)& (0+255),b
  3425  003EFA  0E00               	movlw	0
  3426  003EFC  6F74               	movwf	(delayUS@US+2)& (0+255),b
  3427  003EFE  0E00               	movlw	0
  3428  003F00  6F75               	movwf	(delayUS@US+3)& (0+255),b
  3429  003F02  EC1F  F02B         	call	_delayUS	;wreg free
  3430  003F06  0100               	movlb	0	; () banked
  3431  003F08  2BD4               	incf	main@i& (0+255),f,b
  3432  003F0A  D7DE               	goto	l10347
  3433  003F0C                     l10363:
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;main.c: 82: }
  3437                           ;main.c: 83: (LATC &= ~0x04);
  3438  003F0C  948B               	bcf	3979,2,c	;volatile
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;main.c: 85: BatteryVoltage = ReadVoltage();
  3442  003F0E  EC66  F024         	call	_ReadVoltage	;wreg free
  3443  003F12  C09B  F0D5         	movff	?_ReadVoltage,_BatteryVoltage
  3444  003F16  C09C  F0D6         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  3445  003F1A  C09D  F0D7         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  3446                           
  3447                           ;main.c: 86: if(BatteryVoltage < 3.7 )
  3448  003F1E  C0D5  F072         	movff	_BatteryVoltage,___ftge@ff1
  3449  003F22  C0D6  F073         	movff	_BatteryVoltage+1,___ftge@ff1+1
  3450  003F26  C0D7  F074         	movff	_BatteryVoltage+2,___ftge@ff1+2
  3451  003F2A  0ECD               	movlw	205
  3452  003F2C  0100               	movlb	0	; () banked
  3453  003F2E  6F75               	movwf	___ftge@ff2& (0+255),b
  3454  003F30  0E6C               	movlw	108
  3455  003F32  0100               	movlb	0	; () banked
  3456  003F34  6F76               	movwf	(___ftge@ff2+1)& (0+255),b
  3457  003F36  0E40               	movlw	64
  3458  003F38  0100               	movlb	0	; () banked
  3459  003F3A  6F77               	movwf	(___ftge@ff2+2)& (0+255),b
  3460  003F3C  EC73  F022         	call	___ftge	;wreg free
  3461  003F40  0100               	movlb	0	; () banked
  3462  003F42  A0D8               	btfss	status,0,c
  3463  003F44  D014               	goto	l10373
  3464                           
  3465                           ;main.c: 90: else if (BatteryVoltage > 30.0)
  3466                           
  3467                           ;main.c: 89: }
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;main.c: 87: {
  3471                           ;main.c: 88: __nop();
  3472  003F46  0E00               	movlw	0
  3473  003F48  0100               	movlb	0	; () banked
  3474  003F4A  6F72               	movwf	___ftge@ff1& (0+255),b
  3475  003F4C  0EF0               	movlw	240
  3476  003F4E  0100               	movlb	0	; () banked
  3477  003F50  6F73               	movwf	(___ftge@ff1+1)& (0+255),b
  3478  003F52  0E41               	movlw	65
  3479  003F54  0100               	movlb	0	; () banked
  3480  003F56  6F74               	movwf	(___ftge@ff1+2)& (0+255),b
  3481  003F58  C0D5  F075         	movff	_BatteryVoltage,___ftge@ff2
  3482  003F5C  C0D6  F076         	movff	_BatteryVoltage+1,___ftge@ff2+1
  3483  003F60  C0D7  F077         	movff	_BatteryVoltage+2,___ftge@ff2+2
  3484  003F64  EC73  F022         	call	___ftge	;wreg free
  3485  003F68  0100               	movlb	0	; () banked
  3486  003F6A  B0D8               	btfsc	status,0,c
  3487  003F6C  D002               	goto	l10375
  3488  003F6E                     l10373:
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;main.c: 91: {
  3492                           ;main.c: 92: __nop();
  3493  003F6E  F000               	nop	
  3494  003F70  D000               	goto	l10375
  3495  003F72                     l10375:
  3496                           
  3497                           ;main.c: 96: {
  3498                           ;main.c: 97: if(IR_New_Code)
  3499  003F72  0100               	movlb	0	; () banked
  3500  003F74  51E6               	movf	_IR_New_Code& (0+255),w,b
  3501  003F76  B4D8               	btfsc	status,2,c
  3502  003F78  D011               	goto	l10379
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;main.c: 98: {
  3506                           ;main.c: 99: UseIRCode(&IR_New_Code, IR_NEC);
  3507  003F7A  0EE6               	movlw	low _IR_New_Code
  3508  003F7C  0100               	movlb	0	; () banked
  3509  003F7E  6FAB               	movwf	UseIRCode@Code& (0+255),b
  3510  003F80  0E00               	movlw	high _IR_New_Code
  3511  003F82  0100               	movlb	0	; () banked
  3512  003F84  6FAC               	movwf	(UseIRCode@Code+1)& (0+255),b
  3513  003F86  C0E2  F0AD         	movff	_IR_NEC,UseIRCode@NEC
  3514  003F8A  C0E3  F0AE         	movff	_IR_NEC+1,UseIRCode@NEC+1
  3515  003F8E  C0E4  F0AF         	movff	_IR_NEC+2,UseIRCode@NEC+2
  3516  003F92  C0E5  F0B0         	movff	_IR_NEC+3,UseIRCode@NEC+3
  3517  003F96  EC3D  F01A         	call	_UseIRCode	;wreg free
  3518  003F9A  D000               	goto	l10379
  3519  003F9C                     l10379:
  3520                           
  3521                           ;main.c: 100: }
  3522                           ;main.c: 101: if(NewReceivedString)
  3523  003F9C  0100               	movlb	0	; () banked
  3524  003F9E  51E0               	movf	_NewReceivedString& (0+255),w,b
  3525  003FA0  B4D8               	btfsc	status,2,c
  3526  003FA2  D7E7               	goto	l10375
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;main.c: 102: {
  3530                           ;main.c: 103: UseBluetooth();
  3531  003FA4  EC35  F007         	call	_UseBluetooth	;wreg free
  3532                           
  3533                           ;main.c: 104: cleanBuffer(ReceivedString, ReceivedStringPos);
  3534  003FA8  0E00               	movlw	low _ReceivedString
  3535  003FAA  0100               	movlb	0	; () banked
  3536  003FAC  6F72               	movwf	cleanBuffer@data& (0+255),b
  3537  003FAE  0E02               	movlw	high _ReceivedString
  3538  003FB0  0100               	movlb	0	; () banked
  3539  003FB2  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
  3540  003FB4  C0E1  F074         	movff	_ReceivedStringPos,cleanBuffer@count
  3541  003FB8  0100               	movlb	0	; () banked
  3542  003FBA  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
  3543  003FBC  EC6E  F02A         	call	_cleanBuffer	;wreg free
  3544                           
  3545                           ;main.c: 105: ReceivedStringPos = 0;
  3546  003FC0  0E00               	movlw	0
  3547  003FC2  0100               	movlb	0	; () banked
  3548  003FC4  6FE1               	movwf	_ReceivedStringPos& (0+255),b
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;main.c: 106: UARTstring(CRLN);
  3552  003FC6  0E82               	movlw	low _CRLN
  3553  003FC8  0100               	movlb	0	; () banked
  3554  003FCA  6F73               	movwf	UARTstring@data& (0+255),b
  3555  003FCC  0EFB               	movlw	high _CRLN
  3556  003FCE  0100               	movlb	0	; () banked
  3557  003FD0  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  3558  003FD2  EC9B  F02A         	call	_UARTstring	;wreg free
  3559                           
  3560                           ;main.c: 107: UARTchar('>');
  3561  003FD6  0E3E               	movlw	62
  3562  003FD8  EC26  F02D         	call	_UARTchar
  3563                           
  3564                           ;main.c: 108: NewReceivedString = 0;
  3565  003FDC  0E00               	movlw	0
  3566  003FDE  0100               	movlb	0	; () banked
  3567  003FE0  6FE0               	movwf	_NewReceivedString& (0+255),b
  3568                           
  3569                           ; BSR set to: 0
  3570                           
  3571                           ; BSR set to: 0
  3572  003FE2  D7C7               	goto	l10375
  3573                           
  3574                           ; BSR set to: 0
  3575                           
  3576                           ; BSR set to: 0
  3577  003FE4  EFF4  F000         	goto	start
  3578  003FE8                     __end_of_main:
  3579                           	opt stack 0
  3580                           tblptru	equ	0xFF8
  3581                           tblptrh	equ	0xFF7
  3582                           tblptrl	equ	0xFF6
  3583                           tablat	equ	0xFF5
  3584                           postinc0	equ	0xFEE
  3585                           wreg	equ	0xFE8
  3586                           postdec1	equ	0xFE5
  3587                           fsr1h	equ	0xFE2
  3588                           fsr1l	equ	0xFE1
  3589                           status	equ	0xFD8
  3590                           
  3591 ;; *************** function ___ftge *****************
  3592 ;; Defined at:
  3593 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  ff1             3   18[BANK0 ] float 
  3596 ;;  ff2             3   21[BANK0 ] float 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;		None
  3599 ;; Return value:  Size  Location     Type
  3600 ;;		None               void
  3601 ;; Registers used:
  3602 ;;		wreg, status,2, status,0
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3608 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;Total ram usage:        9 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:    6
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_main
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text1
  3623  0044E6                     __ptext1:
  3624                           	opt stack 0
  3625  0044E6                     ___ftge:
  3626                           	opt stack 24
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;incstack = 0
  3630  0044E6  0100               	movlb	0	; () banked
  3631  0044E8  AF74               	btfss	(___ftge@ff1+2)& (0+255),7,b
  3632  0044EA  D01E               	goto	l7937
  3633                           
  3634                           ; BSR set to: 0
  3635  0044EC  C072  F078         	movff	___ftge@ff1,??___ftge
  3636  0044F0  C073  F079         	movff	___ftge@ff1+1,??___ftge+1
  3637  0044F4  C074  F07A         	movff	___ftge@ff1+2,??___ftge+2
  3638  0044F8  0100               	movlb	0	; () banked
  3639  0044FA  1F78               	comf	??___ftge& (0+255),f,b
  3640  0044FC  1F79               	comf	(??___ftge+1)& (0+255),f,b
  3641  0044FE  1F7A               	comf	(??___ftge+2)& (0+255),f,b
  3642  004500  2B78               	incf	??___ftge& (0+255),f,b
  3643  004502  0E00               	movlw	0
  3644  004504  2379               	addwfc	(??___ftge+1)& (0+255),f,b
  3645  004506  237A               	addwfc	(??___ftge+2)& (0+255),f,b
  3646  004508  0E00               	movlw	0
  3647  00450A  0100               	movlb	0	; () banked
  3648  00450C  2578               	addwf	??___ftge& (0+255),w,b
  3649  00450E  0100               	movlb	0	; () banked
  3650  004510  6F72               	movwf	___ftge@ff1& (0+255),b
  3651  004512  0E00               	movlw	0
  3652  004514  0100               	movlb	0	; () banked
  3653  004516  2179               	addwfc	(??___ftge+1)& (0+255),w,b
  3654  004518  0100               	movlb	0	; () banked
  3655  00451A  6F73               	movwf	(___ftge@ff1+1)& (0+255),b
  3656  00451C  0E80               	movlw	128
  3657  00451E  0100               	movlb	0	; () banked
  3658  004520  217A               	addwfc	(??___ftge+2)& (0+255),w,b
  3659  004522  0100               	movlb	0	; () banked
  3660  004524  6F74               	movwf	(___ftge@ff1+2)& (0+255),b
  3661  004526  D000               	goto	l7937
  3662  004528                     l7937:
  3663                           
  3664                           ; BSR set to: 0
  3665  004528  0100               	movlb	0	; () banked
  3666  00452A  AF77               	btfss	(___ftge@ff2+2)& (0+255),7,b
  3667  00452C  D01E               	goto	l7941
  3668                           
  3669                           ; BSR set to: 0
  3670  00452E  C075  F078         	movff	___ftge@ff2,??___ftge
  3671  004532  C076  F079         	movff	___ftge@ff2+1,??___ftge+1
  3672  004536  C077  F07A         	movff	___ftge@ff2+2,??___ftge+2
  3673  00453A  0100               	movlb	0	; () banked
  3674  00453C  1F78               	comf	??___ftge& (0+255),f,b
  3675  00453E  1F79               	comf	(??___ftge+1)& (0+255),f,b
  3676  004540  1F7A               	comf	(??___ftge+2)& (0+255),f,b
  3677  004542  2B78               	incf	??___ftge& (0+255),f,b
  3678  004544  0E00               	movlw	0
  3679  004546  2379               	addwfc	(??___ftge+1)& (0+255),f,b
  3680  004548  237A               	addwfc	(??___ftge+2)& (0+255),f,b
  3681  00454A  0E00               	movlw	0
  3682  00454C  0100               	movlb	0	; () banked
  3683  00454E  2578               	addwf	??___ftge& (0+255),w,b
  3684  004550  0100               	movlb	0	; () banked
  3685  004552  6F75               	movwf	___ftge@ff2& (0+255),b
  3686  004554  0E00               	movlw	0
  3687  004556  0100               	movlb	0	; () banked
  3688  004558  2179               	addwfc	(??___ftge+1)& (0+255),w,b
  3689  00455A  0100               	movlb	0	; () banked
  3690  00455C  6F76               	movwf	(___ftge@ff2+1)& (0+255),b
  3691  00455E  0E80               	movlw	128
  3692  004560  0100               	movlb	0	; () banked
  3693  004562  217A               	addwfc	(??___ftge+2)& (0+255),w,b
  3694  004564  0100               	movlb	0	; () banked
  3695  004566  6F77               	movwf	(___ftge@ff2+2)& (0+255),b
  3696  004568  D000               	goto	l7941
  3697  00456A                     l7941:
  3698                           
  3699                           ; BSR set to: 0
  3700  00456A  0E00               	movlw	0
  3701  00456C  0100               	movlb	0	; () banked
  3702  00456E  1B72               	xorwf	___ftge@ff1& (0+255),f,b
  3703  004570  0E00               	movlw	0
  3704  004572  0100               	movlb	0	; () banked
  3705  004574  1B73               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  3706  004576  0E80               	movlw	128
  3707  004578  0100               	movlb	0	; () banked
  3708  00457A  1B74               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  3709                           
  3710                           ; BSR set to: 0
  3711  00457C  0E00               	movlw	0
  3712  00457E  0100               	movlb	0	; () banked
  3713  004580  1B75               	xorwf	___ftge@ff2& (0+255),f,b
  3714  004582  0E00               	movlw	0
  3715  004584  0100               	movlb	0	; () banked
  3716  004586  1B76               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  3717  004588  0E80               	movlw	128
  3718  00458A  0100               	movlb	0	; () banked
  3719  00458C  1B77               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  3720  00458E  0100               	movlb	0	; () banked
  3721  004590  5175               	movf	___ftge@ff2& (0+255),w,b
  3722  004592  0100               	movlb	0	; () banked
  3723  004594  5D72               	subwf	___ftge@ff1& (0+255),w,b
  3724  004596  0100               	movlb	0	; () banked
  3725  004598  5176               	movf	(___ftge@ff2+1)& (0+255),w,b
  3726  00459A  0100               	movlb	0	; () banked
  3727  00459C  5973               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  3728  00459E  0100               	movlb	0	; () banked
  3729  0045A0  5177               	movf	(___ftge@ff2+2)& (0+255),w,b
  3730  0045A2  0100               	movlb	0	; () banked
  3731  0045A4  5974               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  3732  0045A6  B0D8               	btfsc	status,0,c
  3733  0045A8  D002               	goto	l7947
  3734                           
  3735                           ; BSR set to: 0
  3736  0045AA  90D8               	bcf	status,0,c
  3737  0045AC  0012               	return	
  3738  0045AE                     l7947:
  3739                           
  3740                           ; BSR set to: 0
  3741  0045AE  80D8               	bsf	status,0,c
  3742                           
  3743                           ; BSR set to: 0
  3744  0045B0  0012               	return	
  3745                           
  3746                           ; BSR set to: 0
  3747                           
  3748                           ; BSR set to: 0
  3749  0045B2  0012               	return		;funcret
  3750  0045B4                     __end_of___ftge:
  3751                           	opt stack 0
  3752                           tblptru	equ	0xFF8
  3753                           tblptrh	equ	0xFF7
  3754                           tblptrl	equ	0xFF6
  3755                           tablat	equ	0xFF5
  3756                           postinc0	equ	0xFEE
  3757                           wreg	equ	0xFE8
  3758                           postdec1	equ	0xFE5
  3759                           fsr1h	equ	0xFE2
  3760                           fsr1l	equ	0xFE1
  3761                           status	equ	0xFD8
  3762                           
  3763 ;; *************** function _UseIRCode *****************
  3764 ;; Defined at:
  3765 ;;		line 276 in file "IR.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  Code            2   75[BANK0 ] PTR unsigned char 
  3768 ;;		 -> IR_New_Code(1), 
  3769 ;;  NEC             4   77[BANK0 ] unsigned long 
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;  i               1   82[BANK0 ] unsigned char 
  3772 ;; Return value:  Size  Location     Type
  3773 ;;		None               void
  3774 ;; Registers used:
  3775 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3781 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;Total ram usage:        8 bytes
  3786 ;; Hardware stack levels used:    1
  3787 ;; Hardware stack levels required when called:   11
  3788 ;; This function calls:
  3789 ;;		_DecodeNEC
  3790 ;;		_LEDTimerON
  3791 ;;		_ReadCodeButtons
  3792 ;;		_ReadIRpin
  3793 ;;		_ReadPushButton
  3794 ;;		_SendRF_Channel
  3795 ;;		_SyncGlobalToEEPROM
  3796 ;;		_delayUS
  3797 ;; This function is called by:
  3798 ;;		_main
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text2
  3803  00347A                     __ptext2:
  3804                           	opt stack 0
  3805  00347A                     _UseIRCode:
  3806                           	opt stack 19
  3807                           
  3808                           ;IR.c: 278: unsigned char i;
  3809                           ;IR.c: 280: if(*Code == 2)
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;incstack = 0
  3813  00347A  C0AB  FFD9         	movff	UseIRCode@Code,fsr2l
  3814  00347E  C0AC  FFDA         	movff	UseIRCode@Code+1,fsr2h
  3815  003482  0E02               	movlw	2
  3816  003484  18DE               	xorwf	postinc2,w,c
  3817  003486  A4D8               	btfss	status,2,c
  3818  003488  D01E               	goto	l10045
  3819                           
  3820                           ;IR.c: 281: {
  3821                           ;IR.c: 283: if(NEC == Global.SWNECcode)
  3822  00348A  0100               	movlb	0	; () banked
  3823  00348C  51AD               	movf	UseIRCode@NEC& (0+255),w,b
  3824  00348E  0101               	movlb	1	; () banked
  3825  003490  1968               	xorwf	(_Global+1)& (0+255),w,b
  3826  003492  E10F               	bnz	u11201
  3827  003494  0100               	movlb	0	; () banked
  3828  003496  51AE               	movf	(UseIRCode@NEC+1)& (0+255),w,b
  3829  003498  0101               	movlb	1	; () banked
  3830  00349A  1969               	xorwf	(_Global+2)& (0+255),w,b
  3831  00349C  E10A               	bnz	u11201
  3832  00349E  0100               	movlb	0	; () banked
  3833  0034A0  51AF               	movf	(UseIRCode@NEC+2)& (0+255),w,b
  3834  0034A2  0101               	movlb	1	; () banked
  3835  0034A4  196A               	xorwf	(_Global+3)& (0+255),w,b
  3836  0034A6  E105               	bnz	u11201
  3837  0034A8  0100               	movlb	0	; () banked
  3838  0034AA  51B0               	movf	(UseIRCode@NEC+3)& (0+255),w,b
  3839  0034AC  0101               	movlb	1	; () banked
  3840  0034AE  196B               	xorwf	(_Global+4)& (0+255),w,b
  3841  0034B0  A4D8               	btfss	status,2,c
  3842  0034B2                     u11201:
  3843  0034B2  D0B1               	goto	l10099
  3844                           
  3845                           ; BSR set to: 1
  3846                           ;IR.c: 284: {
  3847                           ;IR.c: 285: (LATC |= 0x02);
  3848  0034B4  828B               	bsf	3979,1,c	;volatile
  3849                           
  3850                           ; BSR set to: 1
  3851                           ;IR.c: 286: SendRF_Channel(ReadCodeButtons());
  3852  0034B6  EC4A  F02B         	call	_ReadCodeButtons	;wreg free
  3853  0034BA  ECAB  F017         	call	_SendRF_Channel
  3854                           
  3855                           ;IR.c: 287: (LATC |= 0x04);
  3856  0034BE  848B               	bsf	3979,2,c	;volatile
  3857                           
  3858                           ;IR.c: 288: LEDTimerON();
  3859  0034C0  ECD6  F02D         	call	_LEDTimerON	;wreg free
  3860                           
  3861                           ;IR.c: 289: }
  3862                           ;IR.c: 290: }
  3863  0034C4  D0A8               	goto	l10099
  3864  0034C6                     l10045:
  3865                           
  3866                           ;IR.c: 291: else
  3867                           ;IR.c: 292: {
  3868                           ;IR.c: 294: if(ReadPushButton())
  3869  0034C6  EC97  F02D         	call	_ReadPushButton	;wreg free
  3870  0034CA  0900               	iorlw	0
  3871  0034CC  B4D8               	btfsc	status,2,c
  3872  0034CE  D06C               	goto	l10085
  3873                           
  3874                           ;IR.c: 295: {
  3875                           ;IR.c: 296: Global.SWNECcode = NEC;
  3876  0034D0  C0AD  F168         	movff	UseIRCode@NEC,_Global+1
  3877  0034D4  C0AE  F169         	movff	UseIRCode@NEC+1,_Global+2
  3878  0034D8  C0AF  F16A         	movff	UseIRCode@NEC+2,_Global+3
  3879  0034DC  C0B0  F16B         	movff	UseIRCode@NEC+3,_Global+4
  3880                           
  3881                           ;IR.c: 297: if(SyncGlobalToEEPROM())
  3882  0034E0  EC98  F02B         	call	_SyncGlobalToEEPROM	;wreg free
  3883  0034E4  0900               	iorlw	0
  3884  0034E6  B4D8               	btfsc	status,2,c
  3885  0034E8  D024               	goto	l10067
  3886                           
  3887                           ;IR.c: 298: {
  3888                           ;IR.c: 300: for(i =0;i<10;i++)
  3889  0034EA  0E00               	movlw	0
  3890  0034EC  0100               	movlb	0	; () banked
  3891  0034EE  6FB2               	movwf	UseIRCode@i& (0+255),b
  3892  0034F0                     l10053:
  3893                           
  3894                           ; BSR set to: 0
  3895  0034F0  0E09               	movlw	9
  3896  0034F2  0100               	movlb	0	; () banked
  3897  0034F4  65B2               	cpfsgt	UseIRCode@i& (0+255),b
  3898  0034F6  D001               	goto	l10057
  3899                           
  3900                           ; BSR set to: 0
  3901  0034F8  D040               	goto	l10083
  3902  0034FA                     l10057:
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;IR.c: 301: {
  3906                           ;IR.c: 302: (LATC |= 0x04);
  3907  0034FA  848B               	bsf	3979,2,c	;volatile
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;IR.c: 303: delayUS(50000);
  3911  0034FC  0E50               	movlw	80
  3912  0034FE  0100               	movlb	0	; () banked
  3913  003500  6F72               	movwf	delayUS@US& (0+255),b
  3914  003502  0EC3               	movlw	195
  3915  003504  6F73               	movwf	(delayUS@US+1)& (0+255),b
  3916  003506  0E00               	movlw	0
  3917  003508  6F74               	movwf	(delayUS@US+2)& (0+255),b
  3918  00350A  0E00               	movlw	0
  3919  00350C  6F75               	movwf	(delayUS@US+3)& (0+255),b
  3920  00350E  EC1F  F02B         	call	_delayUS	;wreg free
  3921                           
  3922                           ;IR.c: 304: (LATC &= ~0x04);
  3923  003512  948B               	bcf	3979,2,c	;volatile
  3924                           
  3925                           ;IR.c: 305: delayUS(50000);
  3926  003514  0E50               	movlw	80
  3927  003516  0100               	movlb	0	; () banked
  3928  003518  6F72               	movwf	delayUS@US& (0+255),b
  3929  00351A  0EC3               	movlw	195
  3930  00351C  6F73               	movwf	(delayUS@US+1)& (0+255),b
  3931  00351E  0E00               	movlw	0
  3932  003520  6F74               	movwf	(delayUS@US+2)& (0+255),b
  3933  003522  0E00               	movlw	0
  3934  003524  6F75               	movwf	(delayUS@US+3)& (0+255),b
  3935  003526  EC1F  F02B         	call	_delayUS	;wreg free
  3936  00352A  0100               	movlb	0	; () banked
  3937  00352C  2BB2               	incf	UseIRCode@i& (0+255),f,b
  3938  00352E  D7E0               	goto	l10053
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;IR.c: 306: }
  3942                           ;IR.c: 307: }
  3943                           
  3944                           ; BSR set to: 0
  3945  003530  D024               	goto	l10083
  3946  003532                     l10067:
  3947                           
  3948                           ;IR.c: 308: else
  3949                           ;IR.c: 309: {
  3950                           ;IR.c: 311: for(i =0;i<10;i++)
  3951  003532  0E00               	movlw	0
  3952  003534  0100               	movlb	0	; () banked
  3953  003536  6FB2               	movwf	UseIRCode@i& (0+255),b
  3954  003538                     l10069:
  3955                           
  3956                           ; BSR set to: 0
  3957  003538  0E09               	movlw	9
  3958  00353A  0100               	movlb	0	; () banked
  3959  00353C  65B2               	cpfsgt	UseIRCode@i& (0+255),b
  3960  00353E  D001               	goto	l10073
  3961                           
  3962                           ; BSR set to: 0
  3963  003540  D01C               	goto	l10083
  3964  003542                     l10073:
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;IR.c: 312: {
  3968                           ;IR.c: 313: (LATC |= 0x02);
  3969  003542  828B               	bsf	3979,1,c	;volatile
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;IR.c: 314: delayUS(50000);
  3973  003544  0E50               	movlw	80
  3974  003546  0100               	movlb	0	; () banked
  3975  003548  6F72               	movwf	delayUS@US& (0+255),b
  3976  00354A  0EC3               	movlw	195
  3977  00354C  6F73               	movwf	(delayUS@US+1)& (0+255),b
  3978  00354E  0E00               	movlw	0
  3979  003550  6F74               	movwf	(delayUS@US+2)& (0+255),b
  3980  003552  0E00               	movlw	0
  3981  003554  6F75               	movwf	(delayUS@US+3)& (0+255),b
  3982  003556  EC1F  F02B         	call	_delayUS	;wreg free
  3983                           
  3984                           ;IR.c: 315: (LATC &= ~0x02);
  3985  00355A  928B               	bcf	3979,1,c	;volatile
  3986                           
  3987                           ;IR.c: 316: delayUS(50000);
  3988  00355C  0E50               	movlw	80
  3989  00355E  0100               	movlb	0	; () banked
  3990  003560  6F72               	movwf	delayUS@US& (0+255),b
  3991  003562  0EC3               	movlw	195
  3992  003564  6F73               	movwf	(delayUS@US+1)& (0+255),b
  3993  003566  0E00               	movlw	0
  3994  003568  6F74               	movwf	(delayUS@US+2)& (0+255),b
  3995  00356A  0E00               	movlw	0
  3996  00356C  6F75               	movwf	(delayUS@US+3)& (0+255),b
  3997  00356E  EC1F  F02B         	call	_delayUS	;wreg free
  3998  003572  0100               	movlb	0	; () banked
  3999  003574  2BB2               	incf	UseIRCode@i& (0+255),f,b
  4000  003576  D7E0               	goto	l10069
  4001                           
  4002                           ; BSR set to: 0
  4003                           
  4004                           ; BSR set to: 0
  4005  003578  D000               	goto	l10083
  4006  00357A                     l10083:
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;IR.c: 317: }
  4010                           ;IR.c: 318: }
  4011                           ;IR.c: 319: DecodeNEC(NEC, &IRaddress, &IRcommand);
  4012  00357A  C0AD  F076         	movff	UseIRCode@NEC,DecodeNEC@Nec
  4013  00357E  C0AE  F077         	movff	UseIRCode@NEC+1,DecodeNEC@Nec+1
  4014  003582  C0AF  F078         	movff	UseIRCode@NEC+2,DecodeNEC@Nec+2
  4015  003586  C0B0  F079         	movff	UseIRCode@NEC+3,DecodeNEC@Nec+3
  4016  00358A  0EE7               	movlw	low _IRaddress
  4017  00358C  0100               	movlb	0	; () banked
  4018  00358E  6F7A               	movwf	DecodeNEC@address& (0+255),b
  4019  003590  0E00               	movlw	high _IRaddress
  4020  003592  0100               	movlb	0	; () banked
  4021  003594  6F7B               	movwf	(DecodeNEC@address+1)& (0+255),b
  4022  003596  0EE8               	movlw	low _IRcommand
  4023  003598  0100               	movlb	0	; () banked
  4024  00359A  6F7C               	movwf	DecodeNEC@command& (0+255),b
  4025  00359C  0E00               	movlw	high _IRcommand
  4026  00359E  0100               	movlb	0	; () banked
  4027  0035A0  6F7D               	movwf	(DecodeNEC@command+1)& (0+255),b
  4028  0035A2  EC76  F025         	call	_DecodeNEC	;wreg free
  4029                           
  4030                           ;IR.c: 320: }
  4031  0035A6  D037               	goto	l10099
  4032  0035A8                     l10085:
  4033                           
  4034                           ;IR.c: 321: else
  4035                           ;IR.c: 322: {
  4036                           ;IR.c: 323: if(NEC == Global.SWNECcode)
  4037  0035A8  0100               	movlb	0	; () banked
  4038  0035AA  51AD               	movf	UseIRCode@NEC& (0+255),w,b
  4039  0035AC  0101               	movlb	1	; () banked
  4040  0035AE  1968               	xorwf	(_Global+1)& (0+255),w,b
  4041  0035B0  E12E               	bnz	l10095
  4042  0035B2  0100               	movlb	0	; () banked
  4043  0035B4  51AE               	movf	(UseIRCode@NEC+1)& (0+255),w,b
  4044  0035B6  0101               	movlb	1	; () banked
  4045  0035B8  1969               	xorwf	(_Global+2)& (0+255),w,b
  4046  0035BA  E129               	bnz	l10095
  4047  0035BC  0100               	movlb	0	; () banked
  4048  0035BE  51AF               	movf	(UseIRCode@NEC+2)& (0+255),w,b
  4049  0035C0  0101               	movlb	1	; () banked
  4050  0035C2  196A               	xorwf	(_Global+3)& (0+255),w,b
  4051  0035C4  E124               	bnz	l10095
  4052  0035C6  0100               	movlb	0	; () banked
  4053  0035C8  51B0               	movf	(UseIRCode@NEC+3)& (0+255),w,b
  4054  0035CA  0101               	movlb	1	; () banked
  4055  0035CC  196B               	xorwf	(_Global+4)& (0+255),w,b
  4056  0035CE  A4D8               	btfss	status,2,c
  4057  0035D0  D01E               	goto	l10095
  4058                           
  4059                           ; BSR set to: 1
  4060                           ;IR.c: 324: {
  4061                           ;IR.c: 325: (LATC |= 0x04);
  4062  0035D2  848B               	bsf	3979,2,c	;volatile
  4063                           
  4064                           ; BSR set to: 1
  4065                           ;IR.c: 326: SendRF_Channel(ReadCodeButtons());
  4066  0035D4  EC4A  F02B         	call	_ReadCodeButtons	;wreg free
  4067  0035D8  ECAB  F017         	call	_SendRF_Channel
  4068                           
  4069                           ;IR.c: 327: DecodeNEC(NEC, &IRaddress, &IRcommand);
  4070  0035DC  C0AD  F076         	movff	UseIRCode@NEC,DecodeNEC@Nec
  4071  0035E0  C0AE  F077         	movff	UseIRCode@NEC+1,DecodeNEC@Nec+1
  4072  0035E4  C0AF  F078         	movff	UseIRCode@NEC+2,DecodeNEC@Nec+2
  4073  0035E8  C0B0  F079         	movff	UseIRCode@NEC+3,DecodeNEC@Nec+3
  4074  0035EC  0EE7               	movlw	low _IRaddress
  4075  0035EE  0100               	movlb	0	; () banked
  4076  0035F0  6F7A               	movwf	DecodeNEC@address& (0+255),b
  4077  0035F2  0E00               	movlw	high _IRaddress
  4078  0035F4  0100               	movlb	0	; () banked
  4079  0035F6  6F7B               	movwf	(DecodeNEC@address+1)& (0+255),b
  4080  0035F8  0EE8               	movlw	low _IRcommand
  4081  0035FA  0100               	movlb	0	; () banked
  4082  0035FC  6F7C               	movwf	DecodeNEC@command& (0+255),b
  4083  0035FE  0E00               	movlw	high _IRcommand
  4084  003600  0100               	movlb	0	; () banked
  4085  003602  6F7D               	movwf	(DecodeNEC@command+1)& (0+255),b
  4086  003604  EC76  F025         	call	_DecodeNEC	;wreg free
  4087                           
  4088                           ;IR.c: 328: LEDTimerON();
  4089  003608  ECD6  F02D         	call	_LEDTimerON	;wreg free
  4090                           
  4091                           ;IR.c: 329: }
  4092  00360C  D004               	goto	l10099
  4093  00360E                     l10095:
  4094                           
  4095                           ;IR.c: 330: else
  4096                           ;IR.c: 331: {
  4097                           ;IR.c: 332: (LATC |= 0x02);
  4098  00360E  828B               	bsf	3979,1,c	;volatile
  4099                           
  4100                           ;IR.c: 333: LEDTimerON();
  4101  003610  ECD6  F02D         	call	_LEDTimerON	;wreg free
  4102  003614  D000               	goto	l10099
  4103  003616                     l10099:
  4104                           
  4105                           ;IR.c: 334: }
  4106                           ;IR.c: 335: }
  4107                           ;IR.c: 336: }
  4108                           ;IR.c: 337: *Code = 0;
  4109  003616  C0AB  FFD9         	movff	UseIRCode@Code,fsr2l
  4110  00361A  C0AC  FFDA         	movff	UseIRCode@Code+1,fsr2h
  4111  00361E  0E00               	movlw	0
  4112  003620  6EDF               	movwf	indf2,c
  4113                           
  4114                           ;IR.c: 338: IRpinOLD = ReadIRpin();
  4115  003622  ECB3  F02D         	call	_ReadIRpin	;wreg free
  4116  003626  6E32               	movwf	_IRpinOLD,c
  4117                           
  4118                           ;IR.c: 339: INTCONbits.RBIF = 0;
  4119  003628  90F2               	bcf	intcon,0,c	;volatile
  4120                           
  4121                           ;IR.c: 340: (IOCBbits.IOCB4 = 1);
  4122  00362A  887D               	bsf	3965,4,c	;volatile
  4123                           
  4124                           ;IR.c: 341: INTCONbits.RBIE = 1;
  4125  00362C  86F2               	bsf	intcon,3,c	;volatile
  4126  00362E  0012               	return		;funcret
  4127  003630                     __end_of_UseIRCode:
  4128                           	opt stack 0
  4129                           tblptru	equ	0xFF8
  4130                           tblptrh	equ	0xFF7
  4131                           tblptrl	equ	0xFF6
  4132                           tablat	equ	0xFF5
  4133                           intcon	equ	0xFF2
  4134                           postinc0	equ	0xFEE
  4135                           wreg	equ	0xFE8
  4136                           postdec1	equ	0xFE5
  4137                           fsr1h	equ	0xFE2
  4138                           fsr1l	equ	0xFE1
  4139                           indf2	equ	0xFDF
  4140                           postinc2	equ	0xFDE
  4141                           fsr2h	equ	0xFDA
  4142                           fsr2l	equ	0xFD9
  4143                           status	equ	0xFD8
  4144                           
  4145 ;; *************** function _SendRF_Channel *****************
  4146 ;; Defined at:
  4147 ;;		line 162 in file "RF.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  channel         1    wreg     unsigned char 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  channel         1   31[BANK0 ] unsigned char 
  4152 ;; Return value:  Size  Location     Type
  4153 ;;		None               void
  4154 ;; Registers used:
  4155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4162 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4164 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4165 ;;Total ram usage:        1 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:    8
  4168 ;; This function calls:
  4169 ;;		_SendRF_wait
  4170 ;; This function is called by:
  4171 ;;		_UseIRCode
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text3
  4176  002F56                     __ptext3:
  4177                           	opt stack 0
  4178  002F56                     _SendRF_Channel:
  4179                           	opt stack 21
  4180                           
  4181                           ;incstack = 0
  4182                           ;SendRF_Channel@channel stored from wreg
  4183  002F56  0100               	movlb	0	; () banked
  4184  002F58  6F7F               	movwf	SendRF_Channel@channel& (0+255),b
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;RF.c: 164: switch (channel)
  4188  002F5A  D121               	goto	l9903
  4189  002F5C                     l9845:
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;RF.c: 168: SendRF_wait(Conf1_ChannelD,1,12,8);
  4193  002F5C  0E5E               	movlw	low _Conf1_ChannelD
  4194  002F5E  0100               	movlb	0	; () banked
  4195  002F60  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  4196  002F62  0EFB               	movlw	high _Conf1_ChannelD
  4197  002F64  0100               	movlb	0	; () banked
  4198  002F66  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  4199  002F68  0E01               	movlw	1
  4200  002F6A  0100               	movlb	0	; () banked
  4201  002F6C  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  4202  002F6E  0E0C               	movlw	12
  4203  002F70  0100               	movlb	0	; () banked
  4204  002F72  6F7D               	movwf	SendRF_wait@size& (0+255),b
  4205  002F74  0E08               	movlw	8
  4206  002F76  0100               	movlb	0	; () banked
  4207  002F78  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  4208  002F7A  EC74  F02C         	call	_SendRF_wait	;wreg free
  4209                           
  4210                           ;RF.c: 169: break;
  4211  002F7E  0012               	return	
  4212  002F80                     l9847:
  4213                           
  4214                           ;RF.c: 172: SendRF_wait(Conf1_ChannelE,1,12,8);
  4215  002F80  0E6A               	movlw	low _Conf1_ChannelE
  4216  002F82  0100               	movlb	0	; () banked
  4217  002F84  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  4218  002F86  0EFB               	movlw	high _Conf1_ChannelE
  4219  002F88  0100               	movlb	0	; () banked
  4220  002F8A  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  4221  002F8C  0E01               	movlw	1
  4222  002F8E  0100               	movlb	0	; () banked
  4223  002F90  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  4224  002F92  0E0C               	movlw	12
  4225  002F94  0100               	movlb	0	; () banked
  4226  002F96  6F7D               	movwf	SendRF_wait@size& (0+255),b
  4227  002F98  0E08               	movlw	8
  4228  002F9A  0100               	movlb	0	; () banked
  4229  002F9C  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  4230  002F9E  EC74  F02C         	call	_SendRF_wait	;wreg free
  4231                           
  4232                           ;RF.c: 173: break;
  4233  002FA2  0012               	return	
  4234  002FA4                     l9849:
  4235                           
  4236                           ;RF.c: 176: SendRF_wait(Conf1_ChannelF,1,12,8);
  4237  002FA4  0E76               	movlw	low _Conf1_ChannelF
  4238  002FA6  0100               	movlb	0	; () banked
  4239  002FA8  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  4240  002FAA  0EFB               	movlw	high _Conf1_ChannelF
  4241  002FAC  0100               	movlb	0	; () banked
  4242  002FAE  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  4243  002FB0  0E01               	movlw	1
  4244  002FB2  0100               	movlb	0	; () banked
  4245  002FB4  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  4246  002FB6  0E0C               	movlw	12
  4247  002FB8  0100               	movlb	0	; () banked
  4248  002FBA  6F7D               	movwf	SendRF_wait@size& (0+255),b
  4249  002FBC  0E08               	movlw	8
  4250  002FBE  0100               	movlb	0	; () banked
  4251  002FC0  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  4252  002FC2  EC74  F02C         	call	_SendRF_wait	;wreg free
  4253                           
  4254                           ;RF.c: 177: break;
  4255  002FC6  0012               	return	
  4256  002FC8                     l9851:
  4257                           
  4258                           ;RF.c: 180: if(Conf2_ChannelB_Status)
  4259  002FC8  0100               	movlb	0	; () banked
  4260  002FCA  51D8               	movf	_Conf2_ChannelB_Status& (0+255),w,b
  4261  002FCC  0100               	movlb	0	; () banked
  4262  002FCE  B4D8               	btfsc	status,2,c
  4263  002FD0  D015               	goto	l9857
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;RF.c: 181: {
  4267                           ;RF.c: 182: SendRF_wait(Conf2_ChannelB_OFF,2,16,8);
  4268  002FD2  0E91               	movlw	low _Conf2_ChannelB_OFF
  4269  002FD4  0100               	movlb	0	; () banked
  4270  002FD6  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  4271  002FD8  0EFA               	movlw	high _Conf2_ChannelB_OFF
  4272  002FDA  0100               	movlb	0	; () banked
  4273  002FDC  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  4274  002FDE  0E02               	movlw	2
  4275  002FE0  0100               	movlb	0	; () banked
  4276  002FE2  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  4277  002FE4  0E10               	movlw	16
  4278  002FE6  0100               	movlb	0	; () banked
  4279  002FE8  6F7D               	movwf	SendRF_wait@size& (0+255),b
  4280  002FEA  0E08               	movlw	8
  4281  002FEC  0100               	movlb	0	; () banked
  4282  002FEE  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  4283  002FF0  EC74  F02C         	call	_SendRF_wait	;wreg free
  4284                           
  4285                           ;RF.c: 183: Conf2_ChannelB_Status = 0;
  4286  002FF4  0E00               	movlw	0
  4287  002FF6  0100               	movlb	0	; () banked
  4288  002FF8  6FD8               	movwf	_Conf2_ChannelB_Status& (0+255),b
  4289                           
  4290                           ;RF.c: 184: }
  4291  002FFA  0012               	return	
  4292  002FFC                     l9857:
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;RF.c: 185: else
  4296                           ;RF.c: 186: {
  4297                           ;RF.c: 187: SendRF_wait(Conf2_ChannelB_ON,2,16,8);
  4298  002FFC  0EA1               	movlw	low _Conf2_ChannelB_ON
  4299  002FFE  0100               	movlb	0	; () banked
  4300  003000  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  4301  003002  0EFA               	movlw	high _Conf2_ChannelB_ON
  4302  003004  0100               	movlb	0	; () banked
  4303  003006  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  4304  003008  0E02               	movlw	2
  4305  00300A  0100               	movlb	0	; () banked
  4306  00300C  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  4307  00300E  0E10               	movlw	16
  4308  003010  0100               	movlb	0	; () banked
  4309  003012  6F7D               	movwf	SendRF_wait@size& (0+255),b
  4310  003014  0E08               	movlw	8
  4311  003016  0100               	movlb	0	; () banked
  4312  003018  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  4313  00301A  EC74  F02C         	call	_SendRF_wait	;wreg free
  4314                           
  4315                           ;RF.c: 188: Conf2_ChannelB_Status = 1;
  4316  00301E  0E01               	movlw	1
  4317  003020  0100               	movlb	0	; () banked
  4318  003022  6FD8               	movwf	_Conf2_ChannelB_Status& (0+255),b
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;RF.c: 189: }
  4322                           ;RF.c: 190: break;
  4323  003024  0012               	return	
  4324  003026                     l9861:
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;RF.c: 193: if(Conf2_ChannelD_Status)
  4328  003026  0100               	movlb	0	; () banked
  4329  003028  51D9               	movf	_Conf2_ChannelD_Status& (0+255),w,b
  4330  00302A  0100               	movlb	0	; () banked
  4331  00302C  B4D8               	btfsc	status,2,c
  4332  00302E  D015               	goto	l9867
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;RF.c: 194: {
  4336                           ;RF.c: 195: SendRF_wait(Conf2_ChannelD_OFF,2,16,8);
  4337  003030  0EB1               	movlw	low _Conf2_ChannelD_OFF
  4338  003032  0100               	movlb	0	; () banked
  4339  003034  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  4340  003036  0EFA               	movlw	high _Conf2_ChannelD_OFF
  4341  003038  0100               	movlb	0	; () banked
  4342  00303A  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  4343  00303C  0E02               	movlw	2
  4344  00303E  0100               	movlb	0	; () banked
  4345  003040  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  4346  003042  0E10               	movlw	16
  4347  003044  0100               	movlb	0	; () banked
  4348  003046  6F7D               	movwf	SendRF_wait@size& (0+255),b
  4349  003048  0E08               	movlw	8
  4350  00304A  0100               	movlb	0	; () banked
  4351  00304C  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  4352  00304E  EC74  F02C         	call	_SendRF_wait	;wreg free
  4353                           
  4354                           ;RF.c: 196: Conf2_ChannelD_Status = 0;
  4355  003052  0E00               	movlw	0
  4356  003054  0100               	movlb	0	; () banked
  4357  003056  6FD9               	movwf	_Conf2_ChannelD_Status& (0+255),b
  4358                           
  4359                           ;RF.c: 197: }
  4360  003058  0012               	return	
  4361  00305A                     l9867:
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;RF.c: 198: else
  4365                           ;RF.c: 199: {
  4366                           ;RF.c: 200: SendRF_wait(Conf2_ChannelD_ON,2,16,8);
  4367  00305A  0EC1               	movlw	low _Conf2_ChannelD_ON
  4368  00305C  0100               	movlb	0	; () banked
  4369  00305E  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  4370  003060  0EFA               	movlw	high _Conf2_ChannelD_ON
  4371  003062  0100               	movlb	0	; () banked
  4372  003064  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  4373  003066  0E02               	movlw	2
  4374  003068  0100               	movlb	0	; () banked
  4375  00306A  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  4376  00306C  0E10               	movlw	16
  4377  00306E  0100               	movlb	0	; () banked
  4378  003070  6F7D               	movwf	SendRF_wait@size& (0+255),b
  4379  003072  0E08               	movlw	8
  4380  003074  0100               	movlb	0	; () banked
  4381  003076  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  4382  003078  EC74  F02C         	call	_SendRF_wait	;wreg free
  4383                           
  4384                           ;RF.c: 201: Conf2_ChannelD_Status = 1;
  4385  00307C  0E01               	movlw	1
  4386  00307E  0100               	movlb	0	; () banked
  4387  003080  6FD9               	movwf	_Conf2_ChannelD_Status& (0+255),b
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;RF.c: 202: }
  4391                           ;RF.c: 203: break;
  4392  003082  0012               	return	
  4393  003084                     l9871:
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;RF.c: 206: if(Conf2_ChannelH_1_Status)
  4397  003084  0100               	movlb	0	; () banked
  4398  003086  51DA               	movf	_Conf2_ChannelH_1_Status& (0+255),w,b
  4399  003088  0100               	movlb	0	; () banked
  4400  00308A  B4D8               	btfsc	status,2,c
  4401  00308C  D015               	goto	l9877
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;RF.c: 207: {
  4405                           ;RF.c: 208: SendRF_wait(Conf2_ChannelH_1_ON,2,16,8);
  4406  00308E  0EE1               	movlw	low _Conf2_ChannelH_1_ON
  4407  003090  0100               	movlb	0	; () banked
  4408  003092  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  4409  003094  0EFA               	movlw	high _Conf2_ChannelH_1_ON
  4410  003096  0100               	movlb	0	; () banked
  4411  003098  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  4412  00309A  0E02               	movlw	2
  4413  00309C  0100               	movlb	0	; () banked
  4414  00309E  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  4415  0030A0  0E10               	movlw	16
  4416  0030A2  0100               	movlb	0	; () banked
  4417  0030A4  6F7D               	movwf	SendRF_wait@size& (0+255),b
  4418  0030A6  0E08               	movlw	8
  4419  0030A8  0100               	movlb	0	; () banked
  4420  0030AA  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  4421  0030AC  EC74  F02C         	call	_SendRF_wait	;wreg free
  4422                           
  4423                           ;RF.c: 209: Conf2_ChannelH_1_Status = 0;
  4424  0030B0  0E00               	movlw	0
  4425  0030B2  0100               	movlb	0	; () banked
  4426  0030B4  6FDA               	movwf	_Conf2_ChannelH_1_Status& (0+255),b
  4427                           
  4428                           ;RF.c: 210: }
  4429  0030B6  0012               	return	
  4430  0030B8                     l9877:
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;RF.c: 211: else
  4434                           ;RF.c: 212: {
  4435                           ;RF.c: 213: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,8);
  4436  0030B8  0ED1               	movlw	low _Conf2_ChannelH_1_OFF
  4437  0030BA  0100               	movlb	0	; () banked
  4438  0030BC  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  4439  0030BE  0EFA               	movlw	high _Conf2_ChannelH_1_OFF
  4440  0030C0  0100               	movlb	0	; () banked
  4441  0030C2  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  4442  0030C4  0E02               	movlw	2
  4443  0030C6  0100               	movlb	0	; () banked
  4444  0030C8  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  4445  0030CA  0E10               	movlw	16
  4446  0030CC  0100               	movlb	0	; () banked
  4447  0030CE  6F7D               	movwf	SendRF_wait@size& (0+255),b
  4448  0030D0  0E08               	movlw	8
  4449  0030D2  0100               	movlb	0	; () banked
  4450  0030D4  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  4451  0030D6  EC74  F02C         	call	_SendRF_wait	;wreg free
  4452                           
  4453                           ;RF.c: 214: Conf2_ChannelH_1_Status = 1;
  4454  0030DA  0E01               	movlw	1
  4455  0030DC  0100               	movlb	0	; () banked
  4456  0030DE  6FDA               	movwf	_Conf2_ChannelH_1_Status& (0+255),b
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;RF.c: 215: }
  4460                           ;RF.c: 216: break;
  4461  0030E0  0012               	return	
  4462  0030E2                     l9881:
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;RF.c: 219: if(Conf2_ChannelH_2_Status)
  4466  0030E2  0100               	movlb	0	; () banked
  4467  0030E4  51DB               	movf	_Conf2_ChannelH_2_Status& (0+255),w,b
  4468  0030E6  0100               	movlb	0	; () banked
  4469  0030E8  B4D8               	btfsc	status,2,c
  4470  0030EA  D015               	goto	l9887
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;RF.c: 220: {
  4474                           ;RF.c: 221: SendRF_wait(Conf2_ChannelH_2_ON,2,16,8);
  4475  0030EC  0E01               	movlw	low _Conf2_ChannelH_2_ON
  4476  0030EE  0100               	movlb	0	; () banked
  4477  0030F0  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  4478  0030F2  0EFB               	movlw	high _Conf2_ChannelH_2_ON
  4479  0030F4  0100               	movlb	0	; () banked
  4480  0030F6  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  4481  0030F8  0E02               	movlw	2
  4482  0030FA  0100               	movlb	0	; () banked
  4483  0030FC  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  4484  0030FE  0E10               	movlw	16
  4485  003100  0100               	movlb	0	; () banked
  4486  003102  6F7D               	movwf	SendRF_wait@size& (0+255),b
  4487  003104  0E08               	movlw	8
  4488  003106  0100               	movlb	0	; () banked
  4489  003108  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  4490  00310A  EC74  F02C         	call	_SendRF_wait	;wreg free
  4491                           
  4492                           ;RF.c: 222: Conf2_ChannelH_2_Status = 0;
  4493  00310E  0E00               	movlw	0
  4494  003110  0100               	movlb	0	; () banked
  4495  003112  6FDB               	movwf	_Conf2_ChannelH_2_Status& (0+255),b
  4496                           
  4497                           ;RF.c: 223: }
  4498  003114  0012               	return	
  4499  003116                     l9887:
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;RF.c: 224: else
  4503                           ;RF.c: 225: {
  4504                           ;RF.c: 226: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,8);
  4505  003116  0EF1               	movlw	low _Conf2_ChannelH_2_OFF
  4506  003118  0100               	movlb	0	; () banked
  4507  00311A  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  4508  00311C  0EFA               	movlw	high _Conf2_ChannelH_2_OFF
  4509  00311E  0100               	movlb	0	; () banked
  4510  003120  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  4511  003122  0E02               	movlw	2
  4512  003124  0100               	movlb	0	; () banked
  4513  003126  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  4514  003128  0E10               	movlw	16
  4515  00312A  0100               	movlb	0	; () banked
  4516  00312C  6F7D               	movwf	SendRF_wait@size& (0+255),b
  4517  00312E  0E08               	movlw	8
  4518  003130  0100               	movlb	0	; () banked
  4519  003132  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  4520  003134  EC74  F02C         	call	_SendRF_wait	;wreg free
  4521                           
  4522                           ;RF.c: 227: Conf2_ChannelH_2_Status = 1;
  4523  003138  0E01               	movlw	1
  4524  00313A  0100               	movlb	0	; () banked
  4525  00313C  6FDB               	movwf	_Conf2_ChannelH_2_Status& (0+255),b
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;RF.c: 228: }
  4529                           ;RF.c: 229: break;
  4530  00313E  0012               	return	
  4531  003140                     l9891:
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;RF.c: 232: if(Conf2_ChannelH_3_Status)
  4535  003140  0100               	movlb	0	; () banked
  4536  003142  51DC               	movf	_Conf2_ChannelH_3_Status& (0+255),w,b
  4537  003144  0100               	movlb	0	; () banked
  4538  003146  B4D8               	btfsc	status,2,c
  4539  003148  D015               	goto	l9897
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;RF.c: 233: {
  4543                           ;RF.c: 234: SendRF_wait(Conf2_ChannelH_3_ON,2,16,8);
  4544  00314A  0E21               	movlw	low _Conf2_ChannelH_3_ON
  4545  00314C  0100               	movlb	0	; () banked
  4546  00314E  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  4547  003150  0EFB               	movlw	high _Conf2_ChannelH_3_ON
  4548  003152  0100               	movlb	0	; () banked
  4549  003154  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  4550  003156  0E02               	movlw	2
  4551  003158  0100               	movlb	0	; () banked
  4552  00315A  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  4553  00315C  0E10               	movlw	16
  4554  00315E  0100               	movlb	0	; () banked
  4555  003160  6F7D               	movwf	SendRF_wait@size& (0+255),b
  4556  003162  0E08               	movlw	8
  4557  003164  0100               	movlb	0	; () banked
  4558  003166  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  4559  003168  EC74  F02C         	call	_SendRF_wait	;wreg free
  4560                           
  4561                           ;RF.c: 235: Conf2_ChannelH_3_Status = 0;
  4562  00316C  0E00               	movlw	0
  4563  00316E  0100               	movlb	0	; () banked
  4564  003170  6FDC               	movwf	_Conf2_ChannelH_3_Status& (0+255),b
  4565                           
  4566                           ;RF.c: 236: }
  4567  003172  0012               	return	
  4568  003174                     l9897:
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;RF.c: 237: else
  4572                           ;RF.c: 238: {
  4573                           ;RF.c: 239: SendRF_wait(Conf2_ChannelH_3_OFF,2,16,8);
  4574  003174  0E11               	movlw	low _Conf2_ChannelH_3_OFF
  4575  003176  0100               	movlb	0	; () banked
  4576  003178  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  4577  00317A  0EFB               	movlw	high _Conf2_ChannelH_3_OFF
  4578  00317C  0100               	movlb	0	; () banked
  4579  00317E  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  4580  003180  0E02               	movlw	2
  4581  003182  0100               	movlb	0	; () banked
  4582  003184  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  4583  003186  0E10               	movlw	16
  4584  003188  0100               	movlb	0	; () banked
  4585  00318A  6F7D               	movwf	SendRF_wait@size& (0+255),b
  4586  00318C  0E08               	movlw	8
  4587  00318E  0100               	movlb	0	; () banked
  4588  003190  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  4589  003192  EC74  F02C         	call	_SendRF_wait	;wreg free
  4590                           
  4591                           ;RF.c: 240: Conf2_ChannelH_3_Status = 1;
  4592  003196  0E01               	movlw	1
  4593  003198  0100               	movlb	0	; () banked
  4594  00319A  6FDC               	movwf	_Conf2_ChannelH_3_Status& (0+255),b
  4595                           
  4596                           ; BSR set to: 0
  4597                           ;RF.c: 252: }
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;RF.c: 251: break;
  4601                           
  4602                           ;RF.c: 244: case 9:
  4603                           ;RF.c: 245: case 10:
  4604                           ;RF.c: 246: case 11:
  4605                           ;RF.c: 247: case 12:
  4606                           ;RF.c: 248: case 13:
  4607                           ;RF.c: 249: case 14:
  4608                           ;RF.c: 250: default:
  4609                           
  4610                           ; BSR set to: 0
  4611                           
  4612                           ; BSR set to: 0
  4613                           
  4614                           ; BSR set to: 0
  4615                           
  4616                           ; BSR set to: 0
  4617                           
  4618                           ; BSR set to: 0
  4619                           
  4620                           ; BSR set to: 0
  4621                           
  4622                           ; BSR set to: 0
  4623                           
  4624                           ;RF.c: 243: case 8:
  4625                           
  4626                           ; BSR set to: 0
  4627                           ;RF.c: 241: }
  4628                           ;RF.c: 242: break;
  4629  00319C  0012               	return	
  4630  00319E                     l9903:
  4631                           
  4632                           ; BSR set to: 0
  4633  00319E  0100               	movlb	0	; () banked
  4634  0031A0  517F               	movf	SendRF_Channel@channel& (0+255),w,b
  4635                           
  4636                           ; Switch size 1, requested type "space"
  4637                           ; Number of cases is 15, Range of values is 0 to 14
  4638                           ; switch strategies available:
  4639                           ; Name         Instructions Cycles
  4640                           ; simple_byte           46    24 (average)
  4641                           ;	Chosen strategy is simple_byte
  4642  0031A2  0A00               	xorlw	0	; case 0
  4643  0031A4  B4D8               	btfsc	status,2,c
  4644  0031A6  D6DA               	goto	l9845
  4645  0031A8  0A01               	xorlw	1	; case 1
  4646  0031AA  B4D8               	btfsc	status,2,c
  4647  0031AC  D6E9               	goto	l9847
  4648  0031AE  0A03               	xorlw	3	; case 2
  4649  0031B0  B4D8               	btfsc	status,2,c
  4650  0031B2  D6F8               	goto	l9849
  4651  0031B4  0A01               	xorlw	1	; case 3
  4652  0031B6  B4D8               	btfsc	status,2,c
  4653  0031B8  D707               	goto	l9851
  4654  0031BA  0A07               	xorlw	7	; case 4
  4655  0031BC  B4D8               	btfsc	status,2,c
  4656  0031BE  D733               	goto	l9861
  4657  0031C0  0A01               	xorlw	1	; case 5
  4658  0031C2  B4D8               	btfsc	status,2,c
  4659  0031C4  D75F               	goto	l9871
  4660  0031C6  0A03               	xorlw	3	; case 6
  4661  0031C8  B4D8               	btfsc	status,2,c
  4662  0031CA  D78B               	goto	l9881
  4663  0031CC  0A01               	xorlw	1	; case 7
  4664  0031CE  B4D8               	btfsc	status,2,c
  4665  0031D0  D7B7               	goto	l9891
  4666  0031D2  0A0F               	xorlw	15	; case 8
  4667  0031D4  B4D8               	btfsc	status,2,c
  4668  0031D6  0012               	return	
  4669  0031D8  0A01               	xorlw	1	; case 9
  4670  0031DA  B4D8               	btfsc	status,2,c
  4671  0031DC  0012               	return	
  4672  0031DE  0A03               	xorlw	3	; case 10
  4673  0031E0  B4D8               	btfsc	status,2,c
  4674  0031E2  0012               	return	
  4675  0031E4  0A01               	xorlw	1	; case 11
  4676  0031E6  B4D8               	btfsc	status,2,c
  4677  0031E8  0012               	return	
  4678  0031EA  0A07               	xorlw	7	; case 12
  4679  0031EC  B4D8               	btfsc	status,2,c
  4680  0031EE  0012               	return	
  4681  0031F0  0A01               	xorlw	1	; case 13
  4682  0031F2  B4D8               	btfsc	status,2,c
  4683  0031F4  0012               	return	
  4684  0031F6  0A03               	xorlw	3	; case 14
  4685  0031F8  0012               	return	
  4686                           
  4687                           ; BSR set to: 0
  4688  0031FA  0012               	return		;funcret
  4689  0031FC                     __end_of_SendRF_Channel:
  4690                           	opt stack 0
  4691                           tblptru	equ	0xFF8
  4692                           tblptrh	equ	0xFF7
  4693                           tblptrl	equ	0xFF6
  4694                           tablat	equ	0xFF5
  4695                           intcon	equ	0xFF2
  4696                           postinc0	equ	0xFEE
  4697                           wreg	equ	0xFE8
  4698                           postdec1	equ	0xFE5
  4699                           fsr1h	equ	0xFE2
  4700                           fsr1l	equ	0xFE1
  4701                           indf2	equ	0xFDF
  4702                           postinc2	equ	0xFDE
  4703                           fsr2h	equ	0xFDA
  4704                           fsr2l	equ	0xFD9
  4705                           status	equ	0xFD8
  4706                           
  4707 ;; *************** function _ReadPushButton *****************
  4708 ;; Defined at:
  4709 ;;		line 50 in file "Button.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;		None
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;		None
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  1    wreg      unsigned char 
  4716 ;; Registers used:
  4717 ;;		wreg
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4727 ;;Total ram usage:        0 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; Hardware stack levels required when called:    6
  4730 ;; This function calls:
  4731 ;;		Nothing
  4732 ;; This function is called by:
  4733 ;;		_UseIRCode
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text4
  4738  005B2E                     __ptext4:
  4739                           	opt stack 0
  4740  005B2E                     _ReadPushButton:
  4741                           	opt stack 23
  4742                           
  4743                           ;Button.c: 53: if((PORTC & 0x01) != 0x01)
  4744                           
  4745                           ;incstack = 0
  4746  005B2E  B082               	btfsc	3970,0,c	;volatile
  4747  005B30  D002               	goto	l7195
  4748                           
  4749                           ;Button.c: 54: {
  4750                           ;Button.c: 55: return 1;
  4751  005B32  0E01               	movlw	1
  4752  005B34  0012               	return	
  4753  005B36                     l7195:
  4754                           
  4755                           ;Button.c: 56: }
  4756                           ;Button.c: 57: return 0;
  4757  005B36  0E00               	movlw	0
  4758  005B38  0012               	return	
  4759  005B3A  0012               	return		;funcret
  4760  005B3C                     __end_of_ReadPushButton:
  4761                           	opt stack 0
  4762                           tblptru	equ	0xFF8
  4763                           tblptrh	equ	0xFF7
  4764                           tblptrl	equ	0xFF6
  4765                           tablat	equ	0xFF5
  4766                           intcon	equ	0xFF2
  4767                           postinc0	equ	0xFEE
  4768                           wreg	equ	0xFE8
  4769                           postdec1	equ	0xFE5
  4770                           fsr1h	equ	0xFE2
  4771                           fsr1l	equ	0xFE1
  4772                           indf2	equ	0xFDF
  4773                           postinc2	equ	0xFDE
  4774                           fsr2h	equ	0xFDA
  4775                           fsr2l	equ	0xFD9
  4776                           status	equ	0xFD8
  4777                           
  4778 ;; *************** function _ReadCodeButtons *****************
  4779 ;; Defined at:
  4780 ;;		line 65 in file "Button.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;		None
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  temp            1   27[BANK0 ] unsigned char 
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      unsigned char 
  4787 ;; Registers used:
  4788 ;;		wreg, status,2, status,0, cstack
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4795 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4797 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4798 ;;Total ram usage:        1 bytes
  4799 ;; Hardware stack levels used:    1
  4800 ;; Hardware stack levels required when called:    7
  4801 ;; This function calls:
  4802 ;;		_delayUS
  4803 ;; This function is called by:
  4804 ;;		_UseIRCode
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           	psect	text5
  4809  005694                     __ptext5:
  4810                           	opt stack 0
  4811  005694                     _ReadCodeButtons:
  4812                           	opt stack 22
  4813                           
  4814                           ;Button.c: 67: unsigned char temp = 0;
  4815                           
  4816                           ;incstack = 0
  4817  005694  0E00               	movlw	0
  4818  005696  0100               	movlb	0	; () banked
  4819  005698  6F7B               	movwf	ReadCodeButtons@temp& (0+255),b
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;Button.c: 69: (LATC &= ~0x10);
  4823  00569A  988B               	bcf	3979,4,c	;volatile
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;Button.c: 70: delayUS(5);
  4827  00569C  0E05               	movlw	5
  4828  00569E  0100               	movlb	0	; () banked
  4829  0056A0  6F72               	movwf	delayUS@US& (0+255),b
  4830  0056A2  0E00               	movlw	0
  4831  0056A4  6F73               	movwf	(delayUS@US+1)& (0+255),b
  4832  0056A6  0E00               	movlw	0
  4833  0056A8  6F74               	movwf	(delayUS@US+2)& (0+255),b
  4834  0056AA  0E00               	movlw	0
  4835  0056AC  6F75               	movwf	(delayUS@US+3)& (0+255),b
  4836  0056AE  EC1F  F02B         	call	_delayUS	;wreg free
  4837                           
  4838                           ;Button.c: 73: if((PORTB & 0x01) != 0x01)
  4839  0056B2  B081               	btfsc	3969,0,c	;volatile
  4840  0056B4  D004               	goto	l9827
  4841                           
  4842                           ;Button.c: 74: {
  4843                           ;Button.c: 75: temp +=8;
  4844  0056B6  0E08               	movlw	8
  4845  0056B8  0100               	movlb	0	; () banked
  4846  0056BA  277B               	addwf	ReadCodeButtons@temp& (0+255),f,b
  4847  0056BC  D000               	goto	l9827
  4848  0056BE                     l9827:
  4849                           
  4850                           ;Button.c: 76: }
  4851                           ;Button.c: 77: if((PORTB & 0x02) != 0x02)
  4852  0056BE  B281               	btfsc	3969,1,c	;volatile
  4853  0056C0  D004               	goto	l9831
  4854                           
  4855                           ;Button.c: 78: {
  4856                           ;Button.c: 79: temp +=4;
  4857  0056C2  0E04               	movlw	4
  4858  0056C4  0100               	movlb	0	; () banked
  4859  0056C6  277B               	addwf	ReadCodeButtons@temp& (0+255),f,b
  4860  0056C8  D000               	goto	l9831
  4861  0056CA                     l9831:
  4862                           
  4863                           ;Button.c: 80: }
  4864                           ;Button.c: 81: if((PORTB & 0x04) != 0x04)
  4865  0056CA  B481               	btfsc	3969,2,c	;volatile
  4866  0056CC  D004               	goto	l9835
  4867                           
  4868                           ;Button.c: 82: {
  4869                           ;Button.c: 83: temp +=2;
  4870  0056CE  0E02               	movlw	2
  4871  0056D0  0100               	movlb	0	; () banked
  4872  0056D2  277B               	addwf	ReadCodeButtons@temp& (0+255),f,b
  4873  0056D4  D000               	goto	l9835
  4874  0056D6                     l9835:
  4875                           
  4876                           ;Button.c: 84: }
  4877                           ;Button.c: 85: if((PORTB & 0x08) != 0x08)
  4878  0056D6  B681               	btfsc	3969,3,c	;volatile
  4879  0056D8  D002               	goto	l1250
  4880                           
  4881                           ;Button.c: 86: {
  4882                           ;Button.c: 87: temp +=1;
  4883  0056DA  0100               	movlb	0	; () banked
  4884  0056DC  2B7B               	incf	ReadCodeButtons@temp& (0+255),f,b
  4885  0056DE                     l1250:
  4886                           
  4887                           ;Button.c: 88: }
  4888                           ;Button.c: 89: (LATC |= 0x10);
  4889  0056DE  888B               	bsf	3979,4,c	;volatile
  4890                           
  4891                           ;Button.c: 90: return temp;
  4892  0056E0  0100               	movlb	0	; () banked
  4893  0056E2  517B               	movf	ReadCodeButtons@temp& (0+255),w,b
  4894  0056E4  0012               	return	
  4895                           
  4896                           ; BSR set to: 0
  4897                           
  4898                           ; BSR set to: 0
  4899  0056E6  0012               	return		;funcret
  4900  0056E8                     __end_of_ReadCodeButtons:
  4901                           	opt stack 0
  4902                           tblptru	equ	0xFF8
  4903                           tblptrh	equ	0xFF7
  4904                           tblptrl	equ	0xFF6
  4905                           tablat	equ	0xFF5
  4906                           intcon	equ	0xFF2
  4907                           postinc0	equ	0xFEE
  4908                           wreg	equ	0xFE8
  4909                           postdec1	equ	0xFE5
  4910                           fsr1h	equ	0xFE2
  4911                           fsr1l	equ	0xFE1
  4912                           indf2	equ	0xFDF
  4913                           postinc2	equ	0xFDE
  4914                           fsr2h	equ	0xFDA
  4915                           fsr2l	equ	0xFD9
  4916                           status	equ	0xFD8
  4917                           
  4918 ;; *************** function _LEDTimerON *****************
  4919 ;; Defined at:
  4920 ;;		line 132 in file "Timer.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;		None
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;		None
  4925 ;; Return value:  Size  Location     Type
  4926 ;;		None               void
  4927 ;; Registers used:
  4928 ;;		wreg, status,2, cstack
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4938 ;;Total ram usage:        0 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    7
  4941 ;; This function calls:
  4942 ;;		_ResetTimer1
  4943 ;; This function is called by:
  4944 ;;		_UseIRCode
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           	psect	text6
  4949  005BAC                     __ptext6:
  4950                           	opt stack 0
  4951  005BAC                     _LEDTimerON:
  4952                           	opt stack 22
  4953                           
  4954                           ;Timer.c: 134: Timer1_Postscaler = 0;
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;incstack = 0
  4958  005BAC  0E00               	movlw	0
  4959  005BAE  6E3B               	movwf	_Timer1_Postscaler,c
  4960                           
  4961                           ;Timer.c: 135: ResetTimer1();
  4962  005BB0  ECDC  F02D         	call	_ResetTimer1	;wreg free
  4963                           
  4964                           ;Timer.c: 136: (T1CONbits.TMR1ON = TRUE);
  4965  005BB4  80CD               	bsf	4045,0,c	;volatile
  4966  005BB6  0012               	return		;funcret
  4967  005BB8                     __end_of_LEDTimerON:
  4968                           	opt stack 0
  4969                           tblptru	equ	0xFF8
  4970                           tblptrh	equ	0xFF7
  4971                           tblptrl	equ	0xFF6
  4972                           tablat	equ	0xFF5
  4973                           intcon	equ	0xFF2
  4974                           postinc0	equ	0xFEE
  4975                           wreg	equ	0xFE8
  4976                           postdec1	equ	0xFE5
  4977                           fsr1h	equ	0xFE2
  4978                           fsr1l	equ	0xFE1
  4979                           indf2	equ	0xFDF
  4980                           postinc2	equ	0xFDE
  4981                           fsr2h	equ	0xFDA
  4982                           fsr2l	equ	0xFD9
  4983                           status	equ	0xFD8
  4984                           
  4985 ;; *************** function _ResetTimer1 *****************
  4986 ;; Defined at:
  4987 ;;		line 106 in file "Timer.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;		None
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;		None
  4992 ;; Return value:  Size  Location     Type
  4993 ;;		None               void
  4994 ;; Registers used:
  4995 ;;		wreg, status,2
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5005 ;;Total ram usage:        0 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:    6
  5008 ;; This function calls:
  5009 ;;		Nothing
  5010 ;; This function is called by:
  5011 ;;		_LEDTimerON
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           	psect	text7
  5016  005BB8                     __ptext7:
  5017                           	opt stack 0
  5018  005BB8                     _ResetTimer1:
  5019                           	opt stack 22
  5020                           
  5021                           ;Timer.c: 112: TMR1H = 0;
  5022                           
  5023                           ;incstack = 0
  5024  005BB8  0E00               	movlw	0
  5025  005BBA  6ECF               	movwf	4047,c	;volatile
  5026                           
  5027                           ;Timer.c: 113: TMR1L = 2;
  5028  005BBC  0E02               	movlw	2
  5029  005BBE  6ECE               	movwf	4046,c	;volatile
  5030  005BC0  0012               	return		;funcret
  5031  005BC2                     __end_of_ResetTimer1:
  5032                           	opt stack 0
  5033                           tblptru	equ	0xFF8
  5034                           tblptrh	equ	0xFF7
  5035                           tblptrl	equ	0xFF6
  5036                           tablat	equ	0xFF5
  5037                           intcon	equ	0xFF2
  5038                           postinc0	equ	0xFEE
  5039                           wreg	equ	0xFE8
  5040                           postdec1	equ	0xFE5
  5041                           fsr1h	equ	0xFE2
  5042                           fsr1l	equ	0xFE1
  5043                           indf2	equ	0xFDF
  5044                           postinc2	equ	0xFDE
  5045                           fsr2h	equ	0xFDA
  5046                           fsr2l	equ	0xFD9
  5047                           status	equ	0xFD8
  5048                           
  5049 ;; *************** function _UseBluetooth *****************
  5050 ;; Defined at:
  5051 ;;		line 273 in file "Bluetooth.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;		None
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;  buf            50    0[BANK4 ] unsigned char [50]
  5056 ;;  EnteredNEC      4   58[BANK4 ] unsigned long 
  5057 ;;  temp            4   54[BANK4 ] unsigned long 
  5058 ;;  NecCommand      1   53[BANK4 ] unsigned char 
  5059 ;;  NecAddress      1   52[BANK4 ] unsigned char 
  5060 ;;  ok              1   51[BANK4 ] unsigned char 
  5061 ;;  timeout         1   50[BANK4 ] unsigned char 
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  1    wreg      unsigned char 
  5064 ;; Registers used:
  5065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5072 ;;      Locals:         0       0       0       0       0      62       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Totals:         0       0       0       0       0      62       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;Total ram usage:       62 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; Hardware stack levels required when called:    9
  5078 ;; This function calls:
  5079 ;;		_DecodeNEC
  5080 ;;		_EncodeNEC
  5081 ;;		_GetNumber
  5082 ;;		_SendNEC_wait
  5083 ;;		_SendRF_wait
  5084 ;;		_StringAddEqual
  5085 ;;		_StringContainsCaseInsensitive
  5086 ;;		_StringMatch
  5087 ;;		_StringMatchCaseInsensitive
  5088 ;;		_UARTchar
  5089 ;;		_UARTcommandMenu
  5090 ;;		_UARTstring
  5091 ;;		_UARTstringCRLN
  5092 ;;		_cleanBuffer
  5093 ;;		_sprintf
  5094 ;; This function is called by:
  5095 ;;		_main
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text8
  5100  000E6A                     __ptext8:
  5101                           	opt stack 0
  5102  000E6A                     _UseBluetooth:
  5103                           	opt stack 21
  5104                           
  5105                           ;Bluetooth.c: 275: unsigned char ok = 1;
  5106                           
  5107                           ;incstack = 0
  5108  000E6A  0E01               	movlw	1
  5109  000E6C  0104               	movlb	4	; () banked
  5110  000E6E  6FC3               	movwf	UseBluetooth@ok& (0+255),b
  5111                           
  5112                           ;Bluetooth.c: 277: unsigned long EnteredNEC = 0;
  5113  000E70  0E00               	movlw	0
  5114  000E72  0104               	movlb	4	; () banked
  5115  000E74  6FCA               	movwf	UseBluetooth@EnteredNEC& (0+255),b
  5116  000E76  0E00               	movlw	0
  5117  000E78  6FCB               	movwf	(UseBluetooth@EnteredNEC+1)& (0+255),b
  5118  000E7A  0E00               	movlw	0
  5119  000E7C  6FCC               	movwf	(UseBluetooth@EnteredNEC+2)& (0+255),b
  5120  000E7E  0E00               	movlw	0
  5121  000E80  6FCD               	movwf	(UseBluetooth@EnteredNEC+3)& (0+255),b
  5122                           
  5123                           ;Bluetooth.c: 278: unsigned char NecAddress = 0;
  5124  000E82  0E00               	movlw	0
  5125  000E84  0104               	movlb	4	; () banked
  5126  000E86  6FC4               	movwf	UseBluetooth@NecAddress& (0+255),b
  5127                           
  5128                           ;Bluetooth.c: 279: unsigned char NecCommand = 0;
  5129  000E88  0E00               	movlw	0
  5130  000E8A  0104               	movlb	4	; () banked
  5131  000E8C  6FC5               	movwf	UseBluetooth@NecCommand& (0+255),b
  5132                           
  5133                           ;Bluetooth.c: 280: unsigned long temp = 0;
  5134  000E8E  0E00               	movlw	0
  5135  000E90  0104               	movlb	4	; () banked
  5136  000E92  6FC6               	movwf	UseBluetooth@temp& (0+255),b
  5137  000E94  0E00               	movlw	0
  5138  000E96  6FC7               	movwf	(UseBluetooth@temp+1)& (0+255),b
  5139  000E98  0E00               	movlw	0
  5140  000E9A  6FC8               	movwf	(UseBluetooth@temp+2)& (0+255),b
  5141  000E9C  0E00               	movlw	0
  5142  000E9E  6FC9               	movwf	(UseBluetooth@temp+3)& (0+255),b
  5143                           
  5144                           ;Bluetooth.c: 281: unsigned char buf[50];
  5145                           ;Bluetooth.c: 282: unsigned char timeout =0;
  5146  000EA0  0E00               	movlw	0
  5147  000EA2  0104               	movlb	4	; () banked
  5148  000EA4  6FC2               	movwf	UseBluetooth@timeout& (0+255),b
  5149                           
  5150                           ; BSR set to: 4
  5151                           ;Bluetooth.c: 284: cleanBuffer(buf,50);
  5152  000EA6  0E90               	movlw	low UseBluetooth@buf
  5153  000EA8  0100               	movlb	0	; () banked
  5154  000EAA  6F72               	movwf	cleanBuffer@data& (0+255),b
  5155  000EAC  0E04               	movlw	high UseBluetooth@buf
  5156  000EAE  0100               	movlb	0	; () banked
  5157  000EB0  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
  5158  000EB2  0E00               	movlw	0
  5159  000EB4  0100               	movlb	0	; () banked
  5160  000EB6  6F75               	movwf	(cleanBuffer@count+1)& (0+255),b
  5161  000EB8  0E32               	movlw	50
  5162  000EBA  6F74               	movwf	cleanBuffer@count& (0+255),b
  5163  000EBC  EC6E  F02A         	call	_cleanBuffer	;wreg free
  5164                           
  5165                           ;Bluetooth.c: 286: if(StringContainsCaseInsensitive(ReceivedString,"Conf1"))
  5166  000EC0  0E00               	movlw	low _ReceivedString
  5167  000EC2  0100               	movlb	0	; () banked
  5168  000EC4  6F75               	movwf	StringContainsCaseInsensitive@This& (0+255),b
  5169  000EC6  0E02               	movlw	high _ReceivedString
  5170  000EC8  0100               	movlb	0	; () banked
  5171  000ECA  6F76               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
  5172  000ECC  0ECD               	movlw	low STR_22
  5173  000ECE  0100               	movlb	0	; () banked
  5174  000ED0  6F77               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  5175  000ED2  0EFF               	movlw	high STR_22
  5176  000ED4  0100               	movlb	0	; () banked
  5177  000ED6  6F78               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  5178  000ED8  ECCD  F025         	call	_StringContainsCaseInsensitive	;wreg free
  5179  000EDC  0900               	iorlw	0
  5180  000EDE  B4D8               	btfsc	status,2,c
  5181  000EE0  D07E               	goto	l10133
  5182                           
  5183                           ;Bluetooth.c: 287: {
  5184                           ;Bluetooth.c: 288: if(StringMatchCaseInsensitive(ReceivedString,Conf1_ChannelD_STR))
  5185  000EE2  0E00               	movlw	low _ReceivedString
  5186  000EE4  0100               	movlb	0	; () banked
  5187  000EE6  6F75               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  5188  000EE8  0E02               	movlw	high _ReceivedString
  5189  000EEA  0100               	movlb	0	; () banked
  5190  000EEC  6F76               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  5191  000EEE  0E31               	movlw	low _Conf1_ChannelD_STR
  5192  000EF0  0100               	movlb	0	; () banked
  5193  000EF2  6F77               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  5194  000EF4  0EFB               	movlw	high _Conf1_ChannelD_STR
  5195  000EF6  0100               	movlb	0	; () banked
  5196  000EF8  6F78               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  5197  000EFA  EC66  F027         	call	_StringMatchCaseInsensitive	;wreg free
  5198  000EFE  0900               	iorlw	0
  5199  000F00  B4D8               	btfsc	status,2,c
  5200  000F02  D012               	goto	l10119
  5201                           
  5202                           ;Bluetooth.c: 289: {
  5203                           ;Bluetooth.c: 291: SendRF_wait(Conf1_ChannelD,1,12,8);
  5204  000F04  0E5E               	movlw	low _Conf1_ChannelD
  5205  000F06  0100               	movlb	0	; () banked
  5206  000F08  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  5207  000F0A  0EFB               	movlw	high _Conf1_ChannelD
  5208  000F0C  0100               	movlb	0	; () banked
  5209  000F0E  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5210  000F10  0E01               	movlw	1
  5211  000F12  0100               	movlb	0	; () banked
  5212  000F14  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  5213  000F16  0E0C               	movlw	12
  5214  000F18  0100               	movlb	0	; () banked
  5215  000F1A  6F7D               	movwf	SendRF_wait@size& (0+255),b
  5216  000F1C  0E08               	movlw	8
  5217  000F1E  0100               	movlb	0	; () banked
  5218  000F20  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  5219  000F22  EC74  F02C         	call	_SendRF_wait	;wreg free
  5220                           
  5221                           ;Bluetooth.c: 292: }
  5222  000F26  D04A               	goto	l1420
  5223  000F28                     l10119:
  5224                           
  5225                           ;Bluetooth.c: 293: else if(StringMatchCaseInsensitive(ReceivedString,Conf1_ChannelE_STR)
      +                          )
  5226  000F28  0E00               	movlw	low _ReceivedString
  5227  000F2A  0100               	movlb	0	; () banked
  5228  000F2C  6F75               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  5229  000F2E  0E02               	movlw	high _ReceivedString
  5230  000F30  0100               	movlb	0	; () banked
  5231  000F32  6F76               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  5232  000F34  0E40               	movlw	low _Conf1_ChannelE_STR
  5233  000F36  0100               	movlb	0	; () banked
  5234  000F38  6F77               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  5235  000F3A  0EFB               	movlw	high _Conf1_ChannelE_STR
  5236  000F3C  0100               	movlb	0	; () banked
  5237  000F3E  6F78               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  5238  000F40  EC66  F027         	call	_StringMatchCaseInsensitive	;wreg free
  5239  000F44  0900               	iorlw	0
  5240  000F46  B4D8               	btfsc	status,2,c
  5241  000F48  D012               	goto	l10123
  5242                           
  5243                           ;Bluetooth.c: 294: {
  5244                           ;Bluetooth.c: 296: SendRF_wait(Conf1_ChannelE,1,12,8);
  5245  000F4A  0E6A               	movlw	low _Conf1_ChannelE
  5246  000F4C  0100               	movlb	0	; () banked
  5247  000F4E  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  5248  000F50  0EFB               	movlw	high _Conf1_ChannelE
  5249  000F52  0100               	movlb	0	; () banked
  5250  000F54  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5251  000F56  0E01               	movlw	1
  5252  000F58  0100               	movlb	0	; () banked
  5253  000F5A  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  5254  000F5C  0E0C               	movlw	12
  5255  000F5E  0100               	movlb	0	; () banked
  5256  000F60  6F7D               	movwf	SendRF_wait@size& (0+255),b
  5257  000F62  0E08               	movlw	8
  5258  000F64  0100               	movlb	0	; () banked
  5259  000F66  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  5260  000F68  EC74  F02C         	call	_SendRF_wait	;wreg free
  5261                           
  5262                           ;Bluetooth.c: 297: }
  5263  000F6C  D027               	goto	l1420
  5264  000F6E                     l10123:
  5265                           
  5266                           ;Bluetooth.c: 298: else if(StringMatchCaseInsensitive(ReceivedString,Conf1_ChannelF_STR)
      +                          )
  5267  000F6E  0E00               	movlw	low _ReceivedString
  5268  000F70  0100               	movlb	0	; () banked
  5269  000F72  6F75               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  5270  000F74  0E02               	movlw	high _ReceivedString
  5271  000F76  0100               	movlb	0	; () banked
  5272  000F78  6F76               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  5273  000F7A  0E4F               	movlw	low _Conf1_ChannelF_STR
  5274  000F7C  0100               	movlb	0	; () banked
  5275  000F7E  6F77               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  5276  000F80  0EFB               	movlw	high _Conf1_ChannelF_STR
  5277  000F82  0100               	movlb	0	; () banked
  5278  000F84  6F78               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  5279  000F86  EC66  F027         	call	_StringMatchCaseInsensitive	;wreg free
  5280  000F8A  0900               	iorlw	0
  5281  000F8C  B4D8               	btfsc	status,2,c
  5282  000F8E  D012               	goto	l10127
  5283                           
  5284                           ;Bluetooth.c: 299: {
  5285                           ;Bluetooth.c: 301: SendRF_wait(Conf1_ChannelF,1,12,8);
  5286  000F90  0E76               	movlw	low _Conf1_ChannelF
  5287  000F92  0100               	movlb	0	; () banked
  5288  000F94  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  5289  000F96  0EFB               	movlw	high _Conf1_ChannelF
  5290  000F98  0100               	movlb	0	; () banked
  5291  000F9A  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5292  000F9C  0E01               	movlw	1
  5293  000F9E  0100               	movlb	0	; () banked
  5294  000FA0  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  5295  000FA2  0E0C               	movlw	12
  5296  000FA4  0100               	movlb	0	; () banked
  5297  000FA6  6F7D               	movwf	SendRF_wait@size& (0+255),b
  5298  000FA8  0E08               	movlw	8
  5299  000FAA  0100               	movlb	0	; () banked
  5300  000FAC  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  5301  000FAE  EC74  F02C         	call	_SendRF_wait	;wreg free
  5302                           
  5303                           ;Bluetooth.c: 302: }
  5304  000FB2  D004               	goto	l1420
  5305  000FB4                     l10127:
  5306                           
  5307                           ;Bluetooth.c: 303: else
  5308                           ;Bluetooth.c: 304: {
  5309                           ;Bluetooth.c: 306: ok = 0;
  5310  000FB4  0E00               	movlw	0
  5311  000FB6  0104               	movlb	4	; () banked
  5312  000FB8  6FC3               	movwf	UseBluetooth@ok& (0+255),b
  5313                           
  5314                           ; BSR set to: 4
  5315  000FBA  D000               	goto	l1420
  5316  000FBC                     l1420:
  5317                           
  5318                           ;Bluetooth.c: 307: }
  5319                           ;Bluetooth.c: 308: if(ok)
  5320  000FBC  0104               	movlb	4	; () banked
  5321  000FBE  51C3               	movf	UseBluetooth@ok& (0+255),w,b
  5322  000FC0  0104               	movlb	4	; () banked
  5323  000FC2  B4D8               	btfsc	status,2,c
  5324  000FC4  EF26  F00C         	goto	l10285
  5325                           
  5326                           ; BSR set to: 4
  5327                           ;Bluetooth.c: 309: {
  5328                           ;Bluetooth.c: 310: UARTstringCRLN("Configuration 1 RF code sent");
  5329  000FC8  0E32               	movlw	low STR_23
  5330  000FCA  0100               	movlb	0	; () banked
  5331  000FCC  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  5332  000FCE  0EFD               	movlw	high STR_23
  5333  000FD0  0100               	movlb	0	; () banked
  5334  000FD2  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  5335  000FD4  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  5336                           
  5337                           ;Bluetooth.c: 311: return 1;
  5338                           ;	Return value of _UseBluetooth is never used
  5339  000FD8  0012               	return	
  5340                           
  5341                           ;Bluetooth.c: 312: }
  5342                           ;Bluetooth.c: 313: }
  5343  000FDA  EF26  F00C         	goto	l10285
  5344  000FDE                     l10133:
  5345                           
  5346                           ;Bluetooth.c: 314: else if(StringContainsCaseInsensitive(ReceivedString,"Conf2"))
  5347  000FDE  0E00               	movlw	low _ReceivedString
  5348  000FE0  0100               	movlb	0	; () banked
  5349  000FE2  6F75               	movwf	StringContainsCaseInsensitive@This& (0+255),b
  5350  000FE4  0E02               	movlw	high _ReceivedString
  5351  000FE6  0100               	movlb	0	; () banked
  5352  000FE8  6F76               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
  5353  000FEA  0ED3               	movlw	low STR_24
  5354  000FEC  0100               	movlb	0	; () banked
  5355  000FEE  6F77               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  5356  000FF0  0EFF               	movlw	high STR_24
  5357  000FF2  0100               	movlb	0	; () banked
  5358  000FF4  6F78               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  5359  000FF6  ECCD  F025         	call	_StringContainsCaseInsensitive	;wreg free
  5360  000FFA  0900               	iorlw	0
  5361  000FFC  B4D8               	btfsc	status,2,c
  5362  000FFE  D171               	goto	l10181
  5363                           
  5364                           ;Bluetooth.c: 315: {
  5365                           ;Bluetooth.c: 316: if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelB_ON_STR))
  5366  001000  0E00               	movlw	low _ReceivedString
  5367  001002  0100               	movlb	0	; () banked
  5368  001004  6F75               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  5369  001006  0E02               	movlw	high _ReceivedString
  5370  001008  0100               	movlb	0	; () banked
  5371  00100A  6F76               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  5372  00100C  0E6D               	movlw	low _Conf2_ChannelB_ON_STR
  5373  00100E  0100               	movlb	0	; () banked
  5374  001010  6F77               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  5375  001012  0EFA               	movlw	high _Conf2_ChannelB_ON_STR
  5376  001014  0100               	movlb	0	; () banked
  5377  001016  6F78               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  5378  001018  EC66  F027         	call	_StringMatchCaseInsensitive	;wreg free
  5379  00101C  0900               	iorlw	0
  5380  00101E  B4D8               	btfsc	status,2,c
  5381  001020  D012               	goto	l10139
  5382                           
  5383                           ;Bluetooth.c: 317: {
  5384                           ;Bluetooth.c: 319: SendRF_wait(Conf2_ChannelB_ON,2,16,8);
  5385  001022  0EA1               	movlw	low _Conf2_ChannelB_ON
  5386  001024  0100               	movlb	0	; () banked
  5387  001026  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  5388  001028  0EFA               	movlw	high _Conf2_ChannelB_ON
  5389  00102A  0100               	movlb	0	; () banked
  5390  00102C  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5391  00102E  0E02               	movlw	2
  5392  001030  0100               	movlb	0	; () banked
  5393  001032  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  5394  001034  0E10               	movlw	16
  5395  001036  0100               	movlb	0	; () banked
  5396  001038  6F7D               	movwf	SendRF_wait@size& (0+255),b
  5397  00103A  0E08               	movlw	8
  5398  00103C  0100               	movlb	0	; () banked
  5399  00103E  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  5400  001040  EC74  F02C         	call	_SendRF_wait	;wreg free
  5401                           
  5402                           ;Bluetooth.c: 320: }
  5403  001044  D13F               	goto	l1430
  5404  001046                     l10139:
  5405                           
  5406                           ;Bluetooth.c: 321: else if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelB_OFF_
      +                          STR))
  5407  001046  0E00               	movlw	low _ReceivedString
  5408  001048  0100               	movlb	0	; () banked
  5409  00104A  6F75               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  5410  00104C  0E02               	movlw	high _ReceivedString
  5411  00104E  0100               	movlb	0	; () banked
  5412  001050  6F76               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  5413  001052  0E47               	movlw	low _Conf2_ChannelB_OFF_STR
  5414  001054  0100               	movlb	0	; () banked
  5415  001056  6F77               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  5416  001058  0EFA               	movlw	high _Conf2_ChannelB_OFF_STR
  5417  00105A  0100               	movlb	0	; () banked
  5418  00105C  6F78               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  5419  00105E  EC66  F027         	call	_StringMatchCaseInsensitive	;wreg free
  5420  001062  0900               	iorlw	0
  5421  001064  B4D8               	btfsc	status,2,c
  5422  001066  D012               	goto	l10143
  5423                           
  5424                           ;Bluetooth.c: 322: {
  5425                           ;Bluetooth.c: 324: SendRF_wait(Conf2_ChannelB_OFF,2,16,8);
  5426  001068  0E91               	movlw	low _Conf2_ChannelB_OFF
  5427  00106A  0100               	movlb	0	; () banked
  5428  00106C  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  5429  00106E  0EFA               	movlw	high _Conf2_ChannelB_OFF
  5430  001070  0100               	movlb	0	; () banked
  5431  001072  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5432  001074  0E02               	movlw	2
  5433  001076  0100               	movlb	0	; () banked
  5434  001078  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  5435  00107A  0E10               	movlw	16
  5436  00107C  0100               	movlb	0	; () banked
  5437  00107E  6F7D               	movwf	SendRF_wait@size& (0+255),b
  5438  001080  0E08               	movlw	8
  5439  001082  0100               	movlb	0	; () banked
  5440  001084  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  5441  001086  EC74  F02C         	call	_SendRF_wait	;wreg free
  5442                           
  5443                           ;Bluetooth.c: 325: }
  5444  00108A  D11C               	goto	l1430
  5445  00108C                     l10143:
  5446                           
  5447                           ;Bluetooth.c: 326: else if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelD_ON_S
      +                          TR))
  5448  00108C  0E00               	movlw	low _ReceivedString
  5449  00108E  0100               	movlb	0	; () banked
  5450  001090  6F75               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  5451  001092  0E02               	movlw	high _ReceivedString
  5452  001094  0100               	movlb	0	; () banked
  5453  001096  6F76               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  5454  001098  0E7F               	movlw	low _Conf2_ChannelD_ON_STR
  5455  00109A  0100               	movlb	0	; () banked
  5456  00109C  6F77               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  5457  00109E  0EFA               	movlw	high _Conf2_ChannelD_ON_STR
  5458  0010A0  0100               	movlb	0	; () banked
  5459  0010A2  6F78               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  5460  0010A4  EC66  F027         	call	_StringMatchCaseInsensitive	;wreg free
  5461  0010A8  0900               	iorlw	0
  5462  0010AA  B4D8               	btfsc	status,2,c
  5463  0010AC  D012               	goto	l10147
  5464                           
  5465                           ;Bluetooth.c: 327: {
  5466                           ;Bluetooth.c: 329: SendRF_wait(Conf2_ChannelD_ON,2,16,8);
  5467  0010AE  0EC1               	movlw	low _Conf2_ChannelD_ON
  5468  0010B0  0100               	movlb	0	; () banked
  5469  0010B2  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  5470  0010B4  0EFA               	movlw	high _Conf2_ChannelD_ON
  5471  0010B6  0100               	movlb	0	; () banked
  5472  0010B8  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5473  0010BA  0E02               	movlw	2
  5474  0010BC  0100               	movlb	0	; () banked
  5475  0010BE  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  5476  0010C0  0E10               	movlw	16
  5477  0010C2  0100               	movlb	0	; () banked
  5478  0010C4  6F7D               	movwf	SendRF_wait@size& (0+255),b
  5479  0010C6  0E08               	movlw	8
  5480  0010C8  0100               	movlb	0	; () banked
  5481  0010CA  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  5482  0010CC  EC74  F02C         	call	_SendRF_wait	;wreg free
  5483                           
  5484                           ;Bluetooth.c: 330: }
  5485  0010D0  D0F9               	goto	l1430
  5486  0010D2                     l10147:
  5487                           
  5488                           ;Bluetooth.c: 331: else if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelD_OFF_
      +                          STR))
  5489  0010D2  0E00               	movlw	low _ReceivedString
  5490  0010D4  0100               	movlb	0	; () banked
  5491  0010D6  6F75               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  5492  0010D8  0E02               	movlw	high _ReceivedString
  5493  0010DA  0100               	movlb	0	; () banked
  5494  0010DC  6F76               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  5495  0010DE  0E5A               	movlw	low _Conf2_ChannelD_OFF_STR
  5496  0010E0  0100               	movlb	0	; () banked
  5497  0010E2  6F77               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  5498  0010E4  0EFA               	movlw	high _Conf2_ChannelD_OFF_STR
  5499  0010E6  0100               	movlb	0	; () banked
  5500  0010E8  6F78               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  5501  0010EA  EC66  F027         	call	_StringMatchCaseInsensitive	;wreg free
  5502  0010EE  0900               	iorlw	0
  5503  0010F0  B4D8               	btfsc	status,2,c
  5504  0010F2  D012               	goto	l10151
  5505                           
  5506                           ;Bluetooth.c: 332: {
  5507                           ;Bluetooth.c: 334: SendRF_wait(Conf2_ChannelD_OFF,2,16,8);
  5508  0010F4  0EB1               	movlw	low _Conf2_ChannelD_OFF
  5509  0010F6  0100               	movlb	0	; () banked
  5510  0010F8  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  5511  0010FA  0EFA               	movlw	high _Conf2_ChannelD_OFF
  5512  0010FC  0100               	movlb	0	; () banked
  5513  0010FE  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5514  001100  0E02               	movlw	2
  5515  001102  0100               	movlb	0	; () banked
  5516  001104  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  5517  001106  0E10               	movlw	16
  5518  001108  0100               	movlb	0	; () banked
  5519  00110A  6F7D               	movwf	SendRF_wait@size& (0+255),b
  5520  00110C  0E08               	movlw	8
  5521  00110E  0100               	movlb	0	; () banked
  5522  001110  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  5523  001112  EC74  F02C         	call	_SendRF_wait	;wreg free
  5524                           
  5525                           ;Bluetooth.c: 335: }
  5526  001116  D0D6               	goto	l1430
  5527  001118                     l10151:
  5528                           
  5529                           ;Bluetooth.c: 336: else if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelH_1_ON
      +                          _STR))
  5530  001118  0E00               	movlw	low _ReceivedString
  5531  00111A  0100               	movlb	0	; () banked
  5532  00111C  6F75               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  5533  00111E  0E02               	movlw	high _ReceivedString
  5534  001120  0100               	movlb	0	; () banked
  5535  001122  6F76               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  5536  001124  0E0B               	movlw	low _Conf2_ChannelH_1_ON_STR
  5537  001126  0100               	movlb	0	; () banked
  5538  001128  6F77               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  5539  00112A  0EFA               	movlw	high _Conf2_ChannelH_1_ON_STR
  5540  00112C  0100               	movlb	0	; () banked
  5541  00112E  6F78               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  5542  001130  EC66  F027         	call	_StringMatchCaseInsensitive	;wreg free
  5543  001134  0900               	iorlw	0
  5544  001136  B4D8               	btfsc	status,2,c
  5545  001138  D012               	goto	l10155
  5546                           
  5547                           ;Bluetooth.c: 337: {
  5548                           ;Bluetooth.c: 339: SendRF_wait(Conf2_ChannelH_1_ON,2,16,8);
  5549  00113A  0EE1               	movlw	low _Conf2_ChannelH_1_ON
  5550  00113C  0100               	movlb	0	; () banked
  5551  00113E  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  5552  001140  0EFA               	movlw	high _Conf2_ChannelH_1_ON
  5553  001142  0100               	movlb	0	; () banked
  5554  001144  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5555  001146  0E02               	movlw	2
  5556  001148  0100               	movlb	0	; () banked
  5557  00114A  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  5558  00114C  0E10               	movlw	16
  5559  00114E  0100               	movlb	0	; () banked
  5560  001150  6F7D               	movwf	SendRF_wait@size& (0+255),b
  5561  001152  0E08               	movlw	8
  5562  001154  0100               	movlb	0	; () banked
  5563  001156  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  5564  001158  EC74  F02C         	call	_SendRF_wait	;wreg free
  5565                           
  5566                           ;Bluetooth.c: 340: }
  5567  00115C  D0B3               	goto	l1430
  5568  00115E                     l10155:
  5569                           
  5570                           ;Bluetooth.c: 341: else if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelH_1_OF
      +                          F_STR))
  5571  00115E  0E00               	movlw	low _ReceivedString
  5572  001160  0100               	movlb	0	; () banked
  5573  001162  6F75               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  5574  001164  0E02               	movlw	high _ReceivedString
  5575  001166  0100               	movlb	0	; () banked
  5576  001168  6F76               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  5577  00116A  0ECC               	movlw	low _Conf2_ChannelH_1_OFF_STR
  5578  00116C  0100               	movlb	0	; () banked
  5579  00116E  6F77               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  5580  001170  0EF9               	movlw	high _Conf2_ChannelH_1_OFF_STR
  5581  001172  0100               	movlb	0	; () banked
  5582  001174  6F78               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  5583  001176  EC66  F027         	call	_StringMatchCaseInsensitive	;wreg free
  5584  00117A  0900               	iorlw	0
  5585  00117C  B4D8               	btfsc	status,2,c
  5586  00117E  D012               	goto	l10159
  5587                           
  5588                           ;Bluetooth.c: 342: {
  5589                           ;Bluetooth.c: 344: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,8);
  5590  001180  0ED1               	movlw	low _Conf2_ChannelH_1_OFF
  5591  001182  0100               	movlb	0	; () banked
  5592  001184  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  5593  001186  0EFA               	movlw	high _Conf2_ChannelH_1_OFF
  5594  001188  0100               	movlb	0	; () banked
  5595  00118A  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5596  00118C  0E02               	movlw	2
  5597  00118E  0100               	movlb	0	; () banked
  5598  001190  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  5599  001192  0E10               	movlw	16
  5600  001194  0100               	movlb	0	; () banked
  5601  001196  6F7D               	movwf	SendRF_wait@size& (0+255),b
  5602  001198  0E08               	movlw	8
  5603  00119A  0100               	movlb	0	; () banked
  5604  00119C  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  5605  00119E  EC74  F02C         	call	_SendRF_wait	;wreg free
  5606                           
  5607                           ;Bluetooth.c: 345: }
  5608  0011A2  D090               	goto	l1430
  5609  0011A4                     l10159:
  5610                           
  5611                           ;Bluetooth.c: 346: else if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelH_2_ON
      +                          _STR))
  5612  0011A4  0E00               	movlw	low _ReceivedString
  5613  0011A6  0100               	movlb	0	; () banked
  5614  0011A8  6F75               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  5615  0011AA  0E02               	movlw	high _ReceivedString
  5616  0011AC  0100               	movlb	0	; () banked
  5617  0011AE  6F76               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  5618  0011B0  0E1F               	movlw	low _Conf2_ChannelH_2_ON_STR
  5619  0011B2  0100               	movlb	0	; () banked
  5620  0011B4  6F77               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  5621  0011B6  0EFA               	movlw	high _Conf2_ChannelH_2_ON_STR
  5622  0011B8  0100               	movlb	0	; () banked
  5623  0011BA  6F78               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  5624  0011BC  EC66  F027         	call	_StringMatchCaseInsensitive	;wreg free
  5625  0011C0  0900               	iorlw	0
  5626  0011C2  B4D8               	btfsc	status,2,c
  5627  0011C4  D012               	goto	l10163
  5628                           
  5629                           ;Bluetooth.c: 347: {
  5630                           ;Bluetooth.c: 349: SendRF_wait(Conf2_ChannelH_2_ON,2,16,8);
  5631  0011C6  0E01               	movlw	low _Conf2_ChannelH_2_ON
  5632  0011C8  0100               	movlb	0	; () banked
  5633  0011CA  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  5634  0011CC  0EFB               	movlw	high _Conf2_ChannelH_2_ON
  5635  0011CE  0100               	movlb	0	; () banked
  5636  0011D0  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5637  0011D2  0E02               	movlw	2
  5638  0011D4  0100               	movlb	0	; () banked
  5639  0011D6  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  5640  0011D8  0E10               	movlw	16
  5641  0011DA  0100               	movlb	0	; () banked
  5642  0011DC  6F7D               	movwf	SendRF_wait@size& (0+255),b
  5643  0011DE  0E08               	movlw	8
  5644  0011E0  0100               	movlb	0	; () banked
  5645  0011E2  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  5646  0011E4  EC74  F02C         	call	_SendRF_wait	;wreg free
  5647                           
  5648                           ;Bluetooth.c: 350: }
  5649  0011E8  D06D               	goto	l1430
  5650  0011EA                     l10163:
  5651                           
  5652                           ;Bluetooth.c: 351: else if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelH_2_OF
      +                          F_STR))
  5653  0011EA  0E00               	movlw	low _ReceivedString
  5654  0011EC  0100               	movlb	0	; () banked
  5655  0011EE  6F75               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  5656  0011F0  0E02               	movlw	high _ReceivedString
  5657  0011F2  0100               	movlb	0	; () banked
  5658  0011F4  6F76               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  5659  0011F6  0EE1               	movlw	low _Conf2_ChannelH_2_OFF_STR
  5660  0011F8  0100               	movlb	0	; () banked
  5661  0011FA  6F77               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  5662  0011FC  0EF9               	movlw	high _Conf2_ChannelH_2_OFF_STR
  5663  0011FE  0100               	movlb	0	; () banked
  5664  001200  6F78               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  5665  001202  EC66  F027         	call	_StringMatchCaseInsensitive	;wreg free
  5666  001206  0900               	iorlw	0
  5667  001208  B4D8               	btfsc	status,2,c
  5668  00120A  D012               	goto	l10167
  5669                           
  5670                           ;Bluetooth.c: 352: {
  5671                           ;Bluetooth.c: 354: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,8);
  5672  00120C  0EF1               	movlw	low _Conf2_ChannelH_2_OFF
  5673  00120E  0100               	movlb	0	; () banked
  5674  001210  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  5675  001212  0EFA               	movlw	high _Conf2_ChannelH_2_OFF
  5676  001214  0100               	movlb	0	; () banked
  5677  001216  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5678  001218  0E02               	movlw	2
  5679  00121A  0100               	movlb	0	; () banked
  5680  00121C  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  5681  00121E  0E10               	movlw	16
  5682  001220  0100               	movlb	0	; () banked
  5683  001222  6F7D               	movwf	SendRF_wait@size& (0+255),b
  5684  001224  0E08               	movlw	8
  5685  001226  0100               	movlb	0	; () banked
  5686  001228  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  5687  00122A  EC74  F02C         	call	_SendRF_wait	;wreg free
  5688                           
  5689                           ;Bluetooth.c: 355: }
  5690  00122E  D04A               	goto	l1430
  5691  001230                     l10167:
  5692                           
  5693                           ;Bluetooth.c: 356: else if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelH_3_ON
      +                          _STR))
  5694  001230  0E00               	movlw	low _ReceivedString
  5695  001232  0100               	movlb	0	; () banked
  5696  001234  6F75               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  5697  001236  0E02               	movlw	high _ReceivedString
  5698  001238  0100               	movlb	0	; () banked
  5699  00123A  6F76               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  5700  00123C  0E33               	movlw	low _Conf2_ChannelH_3_ON_STR
  5701  00123E  0100               	movlb	0	; () banked
  5702  001240  6F77               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  5703  001242  0EFA               	movlw	high _Conf2_ChannelH_3_ON_STR
  5704  001244  0100               	movlb	0	; () banked
  5705  001246  6F78               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  5706  001248  EC66  F027         	call	_StringMatchCaseInsensitive	;wreg free
  5707  00124C  0900               	iorlw	0
  5708  00124E  B4D8               	btfsc	status,2,c
  5709  001250  D012               	goto	l10171
  5710                           
  5711                           ;Bluetooth.c: 357: {
  5712                           ;Bluetooth.c: 359: SendRF_wait(Conf2_ChannelH_3_ON,2,16,8);
  5713  001252  0E21               	movlw	low _Conf2_ChannelH_3_ON
  5714  001254  0100               	movlb	0	; () banked
  5715  001256  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  5716  001258  0EFB               	movlw	high _Conf2_ChannelH_3_ON
  5717  00125A  0100               	movlb	0	; () banked
  5718  00125C  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5719  00125E  0E02               	movlw	2
  5720  001260  0100               	movlb	0	; () banked
  5721  001262  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  5722  001264  0E10               	movlw	16
  5723  001266  0100               	movlb	0	; () banked
  5724  001268  6F7D               	movwf	SendRF_wait@size& (0+255),b
  5725  00126A  0E08               	movlw	8
  5726  00126C  0100               	movlb	0	; () banked
  5727  00126E  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  5728  001270  EC74  F02C         	call	_SendRF_wait	;wreg free
  5729                           
  5730                           ;Bluetooth.c: 360: }
  5731  001274  D027               	goto	l1430
  5732  001276                     l10171:
  5733                           
  5734                           ;Bluetooth.c: 361: else if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelH_3_OF
      +                          F_STR))
  5735  001276  0E00               	movlw	low _ReceivedString
  5736  001278  0100               	movlb	0	; () banked
  5737  00127A  6F75               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  5738  00127C  0E02               	movlw	high _ReceivedString
  5739  00127E  0100               	movlb	0	; () banked
  5740  001280  6F76               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  5741  001282  0EF6               	movlw	low _Conf2_ChannelH_3_OFF_STR
  5742  001284  0100               	movlb	0	; () banked
  5743  001286  6F77               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  5744  001288  0EF9               	movlw	high _Conf2_ChannelH_3_OFF_STR
  5745  00128A  0100               	movlb	0	; () banked
  5746  00128C  6F78               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  5747  00128E  EC66  F027         	call	_StringMatchCaseInsensitive	;wreg free
  5748  001292  0900               	iorlw	0
  5749  001294  B4D8               	btfsc	status,2,c
  5750  001296  D012               	goto	l10175
  5751                           
  5752                           ;Bluetooth.c: 362: {
  5753                           ;Bluetooth.c: 364: SendRF_wait(Conf2_ChannelH_2_OFF,3,16,8);
  5754  001298  0EF1               	movlw	low _Conf2_ChannelH_2_OFF
  5755  00129A  0100               	movlb	0	; () banked
  5756  00129C  6F7A               	movwf	SendRF_wait@Code& (0+255),b
  5757  00129E  0EFA               	movlw	high _Conf2_ChannelH_2_OFF
  5758  0012A0  0100               	movlb	0	; () banked
  5759  0012A2  6F7B               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5760  0012A4  0E03               	movlw	3
  5761  0012A6  0100               	movlb	0	; () banked
  5762  0012A8  6F7C               	movwf	SendRF_wait@Config& (0+255),b
  5763  0012AA  0E10               	movlw	16
  5764  0012AC  0100               	movlb	0	; () banked
  5765  0012AE  6F7D               	movwf	SendRF_wait@size& (0+255),b
  5766  0012B0  0E08               	movlw	8
  5767  0012B2  0100               	movlb	0	; () banked
  5768  0012B4  6F7E               	movwf	SendRF_wait@amount& (0+255),b
  5769  0012B6  EC74  F02C         	call	_SendRF_wait	;wreg free
  5770                           
  5771                           ;Bluetooth.c: 365: }
  5772  0012BA  D004               	goto	l1430
  5773  0012BC                     l10175:
  5774                           
  5775                           ;Bluetooth.c: 366: else
  5776                           ;Bluetooth.c: 367: {
  5777                           ;Bluetooth.c: 369: ok = 0;
  5778  0012BC  0E00               	movlw	0
  5779  0012BE  0104               	movlb	4	; () banked
  5780  0012C0  6FC3               	movwf	UseBluetooth@ok& (0+255),b
  5781                           
  5782                           ; BSR set to: 4
  5783                           
  5784                           ; BSR set to: 4
  5785                           
  5786                           ; BSR set to: 4
  5787                           
  5788                           ; BSR set to: 4
  5789                           
  5790                           ; BSR set to: 4
  5791                           
  5792                           ; BSR set to: 4
  5793                           
  5794                           ; BSR set to: 4
  5795                           
  5796                           ; BSR set to: 4
  5797  0012C2  D000               	goto	l1430
  5798  0012C4                     l1430:
  5799                           
  5800                           ;Bluetooth.c: 370: }
  5801                           ;Bluetooth.c: 371: if(ok)
  5802  0012C4  0104               	movlb	4	; () banked
  5803  0012C6  51C3               	movf	UseBluetooth@ok& (0+255),w,b
  5804  0012C8  0104               	movlb	4	; () banked
  5805  0012CA  B4D8               	btfsc	status,2,c
  5806  0012CC  D2BF               	goto	l10285
  5807                           
  5808                           ; BSR set to: 4
  5809                           ;Bluetooth.c: 372: {
  5810                           ;Bluetooth.c: 373: UARTstringCRLN("Configuration 2 RF code sent");
  5811  0012CE  0E4F               	movlw	low STR_25
  5812  0012D0  0100               	movlb	0	; () banked
  5813  0012D2  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  5814  0012D4  0EFD               	movlw	high STR_25
  5815  0012D6  0100               	movlb	0	; () banked
  5816  0012D8  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  5817  0012DA  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  5818                           
  5819                           ;Bluetooth.c: 374: return 1;
  5820                           ;	Return value of _UseBluetooth is never used
  5821  0012DE  0012               	return	
  5822                           
  5823                           ;Bluetooth.c: 375: }
  5824                           ;Bluetooth.c: 376: }
  5825  0012E0  D2B5               	goto	l10285
  5826  0012E2                     l10181:
  5827                           
  5828                           ;Bluetooth.c: 377: else if(StringContainsCaseInsensitive(ReceivedString,"NEC"))
  5829  0012E2  0E00               	movlw	low _ReceivedString
  5830  0012E4  0100               	movlb	0	; () banked
  5831  0012E6  6F75               	movwf	StringContainsCaseInsensitive@This& (0+255),b
  5832  0012E8  0E02               	movlw	high _ReceivedString
  5833  0012EA  0100               	movlb	0	; () banked
  5834  0012EC  6F76               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
  5835  0012EE  0EEB               	movlw	low STR_26
  5836  0012F0  0100               	movlb	0	; () banked
  5837  0012F2  6F77               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  5838  0012F4  0EFF               	movlw	high STR_26
  5839  0012F6  0100               	movlb	0	; () banked
  5840  0012F8  6F78               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  5841  0012FA  ECCD  F025         	call	_StringContainsCaseInsensitive	;wreg free
  5842  0012FE  0900               	iorlw	0
  5843  001300  B4D8               	btfsc	status,2,c
  5844  001302  D1B4               	goto	l10235
  5845                           
  5846                           ;Bluetooth.c: 378: {
  5847                           ;Bluetooth.c: 379: if(!GetNumber(ReceivedString, 2, &temp))
  5848  001304  0E00               	movlw	low _ReceivedString
  5849  001306  0100               	movlb	0	; () banked
  5850  001308  6F7E               	movwf	GetNumber@This& (0+255),b
  5851  00130A  0E02               	movlw	high _ReceivedString
  5852  00130C  0100               	movlb	0	; () banked
  5853  00130E  6F7F               	movwf	(GetNumber@This+1)& (0+255),b
  5854  001310  0E02               	movlw	2
  5855  001312  0100               	movlb	0	; () banked
  5856  001314  6F80               	movwf	GetNumber@CommaNumber& (0+255),b
  5857  001316  0EC6               	movlw	low UseBluetooth@temp
  5858  001318  0100               	movlb	0	; () banked
  5859  00131A  6F81               	movwf	GetNumber@result& (0+255),b
  5860  00131C  0E04               	movlw	high UseBluetooth@temp
  5861  00131E  0100               	movlb	0	; () banked
  5862  001320  6F82               	movwf	(GetNumber@result+1)& (0+255),b
  5863  001322  ECF7  F00F         	call	_GetNumber	;wreg free
  5864  001326  0900               	iorlw	0
  5865  001328  A4D8               	btfss	status,2,c
  5866  00132A  D097               	goto	l10209
  5867                           
  5868                           ;Bluetooth.c: 380: {
  5869                           ;Bluetooth.c: 381: NecCommand = (unsigned char)temp;
  5870  00132C  C4C6  F4C5         	movff	UseBluetooth@temp,UseBluetooth@NecCommand
  5871                           
  5872                           ;Bluetooth.c: 382: if(!GetNumber(ReceivedString, 1, &temp))
  5873  001330  0E00               	movlw	low _ReceivedString
  5874  001332  0100               	movlb	0	; () banked
  5875  001334  6F7E               	movwf	GetNumber@This& (0+255),b
  5876  001336  0E02               	movlw	high _ReceivedString
  5877  001338  0100               	movlb	0	; () banked
  5878  00133A  6F7F               	movwf	(GetNumber@This+1)& (0+255),b
  5879  00133C  0E01               	movlw	1
  5880  00133E  0100               	movlb	0	; () banked
  5881  001340  6F80               	movwf	GetNumber@CommaNumber& (0+255),b
  5882  001342  0EC6               	movlw	low UseBluetooth@temp
  5883  001344  0100               	movlb	0	; () banked
  5884  001346  6F81               	movwf	GetNumber@result& (0+255),b
  5885  001348  0E04               	movlw	high UseBluetooth@temp
  5886  00134A  0100               	movlb	0	; () banked
  5887  00134C  6F82               	movwf	(GetNumber@result+1)& (0+255),b
  5888  00134E  ECF7  F00F         	call	_GetNumber	;wreg free
  5889  001352  0900               	iorlw	0
  5890  001354  A4D8               	btfss	status,2,c
  5891  001356  D078               	goto	l10207
  5892                           
  5893                           ;Bluetooth.c: 383: {
  5894                           ;Bluetooth.c: 384: NecAddress = (unsigned char) temp;
  5895  001358  C4C6  F4C4         	movff	UseBluetooth@temp,UseBluetooth@NecAddress
  5896                           
  5897                           ;Bluetooth.c: 385: sprintf(buf,"NEC address: %X ", NecAddress);
  5898  00135C  0E90               	movlw	low UseBluetooth@buf
  5899  00135E  0100               	movlb	0	; () banked
  5900  001360  6F88               	movwf	sprintf@sp& (0+255),b
  5901  001362  0E04               	movlw	high UseBluetooth@buf
  5902  001364  0100               	movlb	0	; () banked
  5903  001366  6F89               	movwf	(sprintf@sp+1)& (0+255),b
  5904  001368  0E25               	movlw	low STR_27
  5905  00136A  0100               	movlb	0	; () banked
  5906  00136C  6F8A               	movwf	sprintf@f& (0+255),b
  5907  00136E  0EFF               	movlw	high STR_27
  5908  001370  0100               	movlb	0	; () banked
  5909  001372  6F8B               	movwf	(sprintf@f+1)& (0+255),b
  5910  001374  C4C4  F08C         	movff	UseBluetooth@NecAddress,?_sprintf+4
  5911  001378  0100               	movlb	0	; () banked
  5912  00137A  6B8D               	clrf	(?_sprintf+5)& (0+255),b
  5913  00137C  EC08  F014         	call	_sprintf	;wreg free
  5914                           
  5915                           ;Bluetooth.c: 386: UARTstringCRLN(buf);
  5916  001380  0E90               	movlw	low UseBluetooth@buf
  5917  001382  0100               	movlb	0	; () banked
  5918  001384  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  5919  001386  0E04               	movlw	high UseBluetooth@buf
  5920  001388  0100               	movlb	0	; () banked
  5921  00138A  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  5922  00138C  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  5923                           
  5924                           ;Bluetooth.c: 387: sprintf(buf,"NEC command: %X ", NecCommand);
  5925  001390  0E90               	movlw	low UseBluetooth@buf
  5926  001392  0100               	movlb	0	; () banked
  5927  001394  6F88               	movwf	sprintf@sp& (0+255),b
  5928  001396  0E04               	movlw	high UseBluetooth@buf
  5929  001398  0100               	movlb	0	; () banked
  5930  00139A  6F89               	movwf	(sprintf@sp+1)& (0+255),b
  5931  00139C  0E14               	movlw	low STR_28
  5932  00139E  0100               	movlb	0	; () banked
  5933  0013A0  6F8A               	movwf	sprintf@f& (0+255),b
  5934  0013A2  0EFF               	movlw	high STR_28
  5935  0013A4  0100               	movlb	0	; () banked
  5936  0013A6  6F8B               	movwf	(sprintf@f+1)& (0+255),b
  5937  0013A8  C4C5  F08C         	movff	UseBluetooth@NecCommand,?_sprintf+4
  5938  0013AC  0100               	movlb	0	; () banked
  5939  0013AE  6B8D               	clrf	(?_sprintf+5)& (0+255),b
  5940  0013B0  EC08  F014         	call	_sprintf	;wreg free
  5941                           
  5942                           ;Bluetooth.c: 388: UARTstringCRLN(buf);
  5943  0013B4  0E90               	movlw	low UseBluetooth@buf
  5944  0013B6  0100               	movlb	0	; () banked
  5945  0013B8  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  5946  0013BA  0E04               	movlw	high UseBluetooth@buf
  5947  0013BC  0100               	movlb	0	; () banked
  5948  0013BE  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  5949  0013C0  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  5950                           
  5951                           ;Bluetooth.c: 389: EnteredNEC = EncodeNEC(NecAddress, NecCommand);
  5952  0013C4  C4C5  F076         	movff	UseBluetooth@NecCommand,EncodeNEC@command
  5953  0013C8  0104               	movlb	4	; () banked
  5954  0013CA  51C4               	movf	UseBluetooth@NecAddress& (0+255),w,b
  5955  0013CC  ECB1  F01E         	call	_EncodeNEC
  5956  0013D0  C076  F4CA         	movff	?_EncodeNEC,UseBluetooth@EnteredNEC
  5957  0013D4  C077  F4CB         	movff	?_EncodeNEC+1,UseBluetooth@EnteredNEC+1
  5958  0013D8  C078  F4CC         	movff	?_EncodeNEC+2,UseBluetooth@EnteredNEC+2
  5959  0013DC  C079  F4CD         	movff	?_EncodeNEC+3,UseBluetooth@EnteredNEC+3
  5960                           
  5961                           ;Bluetooth.c: 390: SendNEC_wait(EnteredNEC,0);
  5962  0013E0  C4CA  F087         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
  5963  0013E4  C4CB  F088         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
  5964  0013E8  C4CC  F089         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
  5965  0013EC  C4CD  F08A         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
  5966  0013F0  0E00               	movlw	0
  5967  0013F2  0100               	movlb	0	; () banked
  5968  0013F4  6F8B               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  5969  0013F6  EC17  F027         	call	_SendNEC_wait	;wreg free
  5970                           
  5971                           ;Bluetooth.c: 391: sprintf(buf,"Sent NEC code = 0x%lX ", EnteredNEC);
  5972  0013FA  0E90               	movlw	low UseBluetooth@buf
  5973  0013FC  0100               	movlb	0	; () banked
  5974  0013FE  6F88               	movwf	sprintf@sp& (0+255),b
  5975  001400  0E04               	movlw	high UseBluetooth@buf
  5976  001402  0100               	movlb	0	; () banked
  5977  001404  6F89               	movwf	(sprintf@sp+1)& (0+255),b
  5978  001406  0ED2               	movlw	low STR_29
  5979  001408  0100               	movlb	0	; () banked
  5980  00140A  6F8A               	movwf	sprintf@f& (0+255),b
  5981  00140C  0EFD               	movlw	high STR_29
  5982  00140E  0100               	movlb	0	; () banked
  5983  001410  6F8B               	movwf	(sprintf@f+1)& (0+255),b
  5984  001412  C4CA  F08C         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
  5985  001416  C4CB  F08D         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
  5986  00141A  C4CC  F08E         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
  5987  00141E  C4CD  F08F         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
  5988  001422  EC08  F014         	call	_sprintf	;wreg free
  5989                           
  5990                           ;Bluetooth.c: 392: UARTstringCRLN(buf);
  5991  001426  0E90               	movlw	low UseBluetooth@buf
  5992  001428  0100               	movlb	0	; () banked
  5993  00142A  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  5994  00142C  0E04               	movlw	high UseBluetooth@buf
  5995  00142E  0100               	movlb	0	; () banked
  5996  001430  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  5997  001432  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  5998                           
  5999                           ;Bluetooth.c: 393: UARTstring(CRLN);
  6000  001436  0E82               	movlw	low _CRLN
  6001  001438  0100               	movlb	0	; () banked
  6002  00143A  6F73               	movwf	UARTstring@data& (0+255),b
  6003  00143C  0EFB               	movlw	high _CRLN
  6004  00143E  0100               	movlb	0	; () banked
  6005  001440  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6006  001442  EC9B  F02A         	call	_UARTstring	;wreg free
  6007                           
  6008                           ;Bluetooth.c: 394: }
  6009  001446  D202               	goto	l10285
  6010  001448                     l10207:
  6011                           
  6012                           ;Bluetooth.c: 395: else
  6013                           ;Bluetooth.c: 396: {
  6014                           ;Bluetooth.c: 397: UARTstringCRLN("Error: could not decode Address");
  6015  001448  0E96               	movlw	low STR_30
  6016  00144A  0100               	movlb	0	; () banked
  6017  00144C  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6018  00144E  0EFC               	movlw	high STR_30
  6019  001450  0100               	movlb	0	; () banked
  6020  001452  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6021  001454  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6022                           
  6023                           ;Bluetooth.c: 398: }
  6024                           ;Bluetooth.c: 399: }
  6025  001458  D1F9               	goto	l10285
  6026  00145A                     l10209:
  6027                           
  6028                           ;Bluetooth.c: 400: else if(!GetNumber(ReceivedString, 1, &EnteredNEC))
  6029  00145A  0E00               	movlw	low _ReceivedString
  6030  00145C  0100               	movlb	0	; () banked
  6031  00145E  6F7E               	movwf	GetNumber@This& (0+255),b
  6032  001460  0E02               	movlw	high _ReceivedString
  6033  001462  0100               	movlb	0	; () banked
  6034  001464  6F7F               	movwf	(GetNumber@This+1)& (0+255),b
  6035  001466  0E01               	movlw	1
  6036  001468  0100               	movlb	0	; () banked
  6037  00146A  6F80               	movwf	GetNumber@CommaNumber& (0+255),b
  6038  00146C  0ECA               	movlw	low UseBluetooth@EnteredNEC
  6039  00146E  0100               	movlb	0	; () banked
  6040  001470  6F81               	movwf	GetNumber@result& (0+255),b
  6041  001472  0E04               	movlw	high UseBluetooth@EnteredNEC
  6042  001474  0100               	movlb	0	; () banked
  6043  001476  6F82               	movwf	(GetNumber@result+1)& (0+255),b
  6044  001478  ECF7  F00F         	call	_GetNumber	;wreg free
  6045  00147C  0900               	iorlw	0
  6046  00147E  A4D8               	btfss	status,2,c
  6047  001480  D08B               	goto	l10231
  6048                           
  6049                           ;Bluetooth.c: 401: {
  6050                           ;Bluetooth.c: 402: SendNEC_wait(EnteredNEC,0);
  6051  001482  C4CA  F087         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
  6052  001486  C4CB  F088         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
  6053  00148A  C4CC  F089         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
  6054  00148E  C4CD  F08A         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
  6055  001492  0E00               	movlw	0
  6056  001494  0100               	movlb	0	; () banked
  6057  001496  6F8B               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  6058  001498  EC17  F027         	call	_SendNEC_wait	;wreg free
  6059                           
  6060                           ;Bluetooth.c: 403: sprintf(buf,"sent NEC code %lX", EnteredNEC);
  6061  00149C  0E90               	movlw	low UseBluetooth@buf
  6062  00149E  0100               	movlb	0	; () banked
  6063  0014A0  6F88               	movwf	sprintf@sp& (0+255),b
  6064  0014A2  0E04               	movlw	high UseBluetooth@buf
  6065  0014A4  0100               	movlb	0	; () banked
  6066  0014A6  6F89               	movwf	(sprintf@sp+1)& (0+255),b
  6067  0014A8  0EE0               	movlw	low STR_31
  6068  0014AA  0100               	movlb	0	; () banked
  6069  0014AC  6F8A               	movwf	sprintf@f& (0+255),b
  6070  0014AE  0EFE               	movlw	high STR_31
  6071  0014B0  0100               	movlb	0	; () banked
  6072  0014B2  6F8B               	movwf	(sprintf@f+1)& (0+255),b
  6073  0014B4  C4CA  F08C         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
  6074  0014B8  C4CB  F08D         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
  6075  0014BC  C4CC  F08E         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
  6076  0014C0  C4CD  F08F         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
  6077  0014C4  EC08  F014         	call	_sprintf	;wreg free
  6078                           
  6079                           ;Bluetooth.c: 404: UARTstringCRLN(buf);
  6080  0014C8  0E90               	movlw	low UseBluetooth@buf
  6081  0014CA  0100               	movlb	0	; () banked
  6082  0014CC  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6083  0014CE  0E04               	movlw	high UseBluetooth@buf
  6084  0014D0  0100               	movlb	0	; () banked
  6085  0014D2  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6086  0014D4  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6087                           
  6088                           ;Bluetooth.c: 405: if(DecodeNEC(EnteredNEC, &NecAddress, &NecCommand))
  6089  0014D8  C4CA  F076         	movff	UseBluetooth@EnteredNEC,DecodeNEC@Nec
  6090  0014DC  C4CB  F077         	movff	UseBluetooth@EnteredNEC+1,DecodeNEC@Nec+1
  6091  0014E0  C4CC  F078         	movff	UseBluetooth@EnteredNEC+2,DecodeNEC@Nec+2
  6092  0014E4  C4CD  F079         	movff	UseBluetooth@EnteredNEC+3,DecodeNEC@Nec+3
  6093  0014E8  0EC4               	movlw	low UseBluetooth@NecAddress
  6094  0014EA  0100               	movlb	0	; () banked
  6095  0014EC  6F7A               	movwf	DecodeNEC@address& (0+255),b
  6096  0014EE  0E04               	movlw	high UseBluetooth@NecAddress
  6097  0014F0  0100               	movlb	0	; () banked
  6098  0014F2  6F7B               	movwf	(DecodeNEC@address+1)& (0+255),b
  6099  0014F4  0EC5               	movlw	low UseBluetooth@NecCommand
  6100  0014F6  0100               	movlb	0	; () banked
  6101  0014F8  6F7C               	movwf	DecodeNEC@command& (0+255),b
  6102  0014FA  0E04               	movlw	high UseBluetooth@NecCommand
  6103  0014FC  0100               	movlb	0	; () banked
  6104  0014FE  6F7D               	movwf	(DecodeNEC@command+1)& (0+255),b
  6105  001500  EC76  F025         	call	_DecodeNEC	;wreg free
  6106  001504  0900               	iorlw	0
  6107  001506  B4D8               	btfsc	status,2,c
  6108  001508  D035               	goto	l10225
  6109                           
  6110                           ;Bluetooth.c: 406: {
  6111                           ;Bluetooth.c: 407: sprintf(buf,"address: %X ", NecAddress);
  6112  00150A  0E90               	movlw	low UseBluetooth@buf
  6113  00150C  0100               	movlb	0	; () banked
  6114  00150E  6F88               	movwf	sprintf@sp& (0+255),b
  6115  001510  0E04               	movlw	high UseBluetooth@buf
  6116  001512  0100               	movlb	0	; () banked
  6117  001514  6F89               	movwf	(sprintf@sp+1)& (0+255),b
  6118  001516  0E29               	movlw	low (STR_27+4)
  6119  001518  0100               	movlb	0	; () banked
  6120  00151A  6F8A               	movwf	sprintf@f& (0+255),b
  6121  00151C  0EFF               	movlw	high (STR_27+4)
  6122  00151E  0100               	movlb	0	; () banked
  6123  001520  6F8B               	movwf	(sprintf@f+1)& (0+255),b
  6124  001522  C4C4  F08C         	movff	UseBluetooth@NecAddress,?_sprintf+4
  6125  001526  0100               	movlb	0	; () banked
  6126  001528  6B8D               	clrf	(?_sprintf+5)& (0+255),b
  6127  00152A  EC08  F014         	call	_sprintf	;wreg free
  6128                           
  6129                           ;Bluetooth.c: 408: UARTstringCRLN(buf);
  6130  00152E  0E90               	movlw	low UseBluetooth@buf
  6131  001530  0100               	movlb	0	; () banked
  6132  001532  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6133  001534  0E04               	movlw	high UseBluetooth@buf
  6134  001536  0100               	movlb	0	; () banked
  6135  001538  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6136  00153A  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6137                           
  6138                           ;Bluetooth.c: 409: sprintf(buf,"command: %X ", NecCommand);
  6139  00153E  0E90               	movlw	low UseBluetooth@buf
  6140  001540  0100               	movlb	0	; () banked
  6141  001542  6F88               	movwf	sprintf@sp& (0+255),b
  6142  001544  0E04               	movlw	high UseBluetooth@buf
  6143  001546  0100               	movlb	0	; () banked
  6144  001548  6F89               	movwf	(sprintf@sp+1)& (0+255),b
  6145  00154A  0E18               	movlw	low (STR_28+4)
  6146  00154C  0100               	movlb	0	; () banked
  6147  00154E  6F8A               	movwf	sprintf@f& (0+255),b
  6148  001550  0EFF               	movlw	high (STR_28+4)
  6149  001552  0100               	movlb	0	; () banked
  6150  001554  6F8B               	movwf	(sprintf@f+1)& (0+255),b
  6151  001556  C4C5  F08C         	movff	UseBluetooth@NecCommand,?_sprintf+4
  6152  00155A  0100               	movlb	0	; () banked
  6153  00155C  6B8D               	clrf	(?_sprintf+5)& (0+255),b
  6154  00155E  EC08  F014         	call	_sprintf	;wreg free
  6155                           
  6156                           ;Bluetooth.c: 410: UARTstringCRLN(buf);
  6157  001562  0E90               	movlw	low UseBluetooth@buf
  6158  001564  0100               	movlb	0	; () banked
  6159  001566  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6160  001568  0E04               	movlw	high UseBluetooth@buf
  6161  00156A  0100               	movlb	0	; () banked
  6162  00156C  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6163  00156E  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6164                           
  6165                           ;Bluetooth.c: 411: }
  6166  001572  D008               	goto	l1458
  6167  001574                     l10225:
  6168                           
  6169                           ;Bluetooth.c: 412: else
  6170                           ;Bluetooth.c: 413: {
  6171                           ;Bluetooth.c: 414: UARTstringCRLN("Error: could not decode NEC code");
  6172  001574  0E15               	movlw	low STR_34
  6173  001576  0100               	movlb	0	; () banked
  6174  001578  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6175  00157A  0EFC               	movlw	high STR_34
  6176  00157C  0100               	movlb	0	; () banked
  6177  00157E  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6178  001580  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6179  001584                     l1458:
  6180                           
  6181                           ;Bluetooth.c: 415: }
  6182                           ;Bluetooth.c: 416: UARTstring(CRLN);
  6183  001584  0E82               	movlw	low _CRLN
  6184  001586  0100               	movlb	0	; () banked
  6185  001588  6F73               	movwf	UARTstring@data& (0+255),b
  6186  00158A  0EFB               	movlw	high _CRLN
  6187  00158C  0100               	movlb	0	; () banked
  6188  00158E  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6189  001590  EC9B  F02A         	call	_UARTstring	;wreg free
  6190                           
  6191                           ;Bluetooth.c: 417: return 1;
  6192                           ;	Return value of _UseBluetooth is never used
  6193  001594  0012               	return	
  6194                           
  6195                           ;Bluetooth.c: 418: }
  6196  001596  D15A               	goto	l10285
  6197  001598                     l10231:
  6198                           
  6199                           ;Bluetooth.c: 419: else
  6200                           ;Bluetooth.c: 420: {
  6201                           ;Bluetooth.c: 421: UARTstring(CRLN);
  6202  001598  0E82               	movlw	low _CRLN
  6203  00159A  0100               	movlb	0	; () banked
  6204  00159C  6F73               	movwf	UARTstring@data& (0+255),b
  6205  00159E  0EFB               	movlw	high _CRLN
  6206  0015A0  0100               	movlb	0	; () banked
  6207  0015A2  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6208  0015A4  EC9B  F02A         	call	_UARTstring	;wreg free
  6209                           
  6210                           ;Bluetooth.c: 422: UARTstringCRLN("NEC code not entered correctly");
  6211  0015A8  0E13               	movlw	low STR_35
  6212  0015AA  0100               	movlb	0	; () banked
  6213  0015AC  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6214  0015AE  0EFD               	movlw	high STR_35
  6215  0015B0  0100               	movlb	0	; () banked
  6216  0015B2  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6217  0015B4  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6218                           
  6219                           ;Bluetooth.c: 423: UARTstring(CRLN);
  6220  0015B8  0E82               	movlw	low _CRLN
  6221  0015BA  0100               	movlb	0	; () banked
  6222  0015BC  6F73               	movwf	UARTstring@data& (0+255),b
  6223  0015BE  0EFB               	movlw	high _CRLN
  6224  0015C0  0100               	movlb	0	; () banked
  6225  0015C2  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6226  0015C4  EC9B  F02A         	call	_UARTstring	;wreg free
  6227                           
  6228                           ;Bluetooth.c: 424: UARTstringCRLN("Usage:");
  6229  0015C8  0EC0               	movlw	low STR_36
  6230  0015CA  0100               	movlb	0	; () banked
  6231  0015CC  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6232  0015CE  0EFF               	movlw	high STR_36
  6233  0015D0  0100               	movlb	0	; () banked
  6234  0015D2  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6235  0015D4  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6236                           
  6237                           ;Bluetooth.c: 425: UARTstringCRLN("NEC = (32 bit code) ");
  6238  0015D8  0E59               	movlw	low STR_37
  6239  0015DA  0100               	movlb	0	; () banked
  6240  0015DC  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6241  0015DE  0EFE               	movlw	high STR_37
  6242  0015E0  0100               	movlb	0	; () banked
  6243  0015E2  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6244  0015E4  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6245                           
  6246                           ;Bluetooth.c: 426: UARTstringCRLN("        or");
  6247  0015E8  0E8F               	movlw	low STR_38
  6248  0015EA  0100               	movlb	0	; () banked
  6249  0015EC  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6250  0015EE  0EFF               	movlw	high STR_38
  6251  0015F0  0100               	movlb	0	; () banked
  6252  0015F2  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6253  0015F4  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6254                           
  6255                           ;Bluetooth.c: 427: UARTstringCRLN("NEC = address,command ");
  6256  0015F8  0EE9               	movlw	low STR_39
  6257  0015FA  0100               	movlb	0	; () banked
  6258  0015FC  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6259  0015FE  0EFD               	movlw	high STR_39
  6260  001600  0100               	movlb	0	; () banked
  6261  001602  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6262  001604  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6263                           
  6264                           ;Bluetooth.c: 428: UARTstring(CRLN);
  6265  001608  0E82               	movlw	low _CRLN
  6266  00160A  0100               	movlb	0	; () banked
  6267  00160C  6F73               	movwf	UARTstring@data& (0+255),b
  6268  00160E  0EFB               	movlw	high _CRLN
  6269  001610  0100               	movlb	0	; () banked
  6270  001612  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6271  001614  EC9B  F02A         	call	_UARTstring	;wreg free
  6272                           
  6273                           ;Bluetooth.c: 429: UARTstringCRLN("Example:");
  6274  001618  0EB7               	movlw	low STR_40
  6275  00161A  0100               	movlb	0	; () banked
  6276  00161C  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6277  00161E  0EFF               	movlw	high STR_40
  6278  001620  0100               	movlb	0	; () banked
  6279  001622  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6280  001624  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6281                           
  6282                           ;Bluetooth.c: 430: UARTstringCRLN("NEC = 0x1CE350af ");
  6283  001628  0ECE               	movlw	low STR_41
  6284  00162A  0100               	movlb	0	; () banked
  6285  00162C  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6286  00162E  0EFE               	movlw	high STR_41
  6287  001630  0100               	movlb	0	; () banked
  6288  001632  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6289  001634  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6290                           
  6291                           ;Bluetooth.c: 431: UARTstringCRLN("      or");
  6292  001638  0E91               	movlw	low (STR_38+2)
  6293  00163A  0100               	movlb	0	; () banked
  6294  00163C  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6295  00163E  0EFF               	movlw	high (STR_38+2)
  6296  001640  0100               	movlb	0	; () banked
  6297  001642  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6298  001644  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6299                           
  6300                           ;Bluetooth.c: 432: UARTstringCRLN("NEC = 0x38, 0xA ");
  6301  001648  0E03               	movlw	low STR_43
  6302  00164A  0100               	movlb	0	; () banked
  6303  00164C  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6304  00164E  0EFF               	movlw	high STR_43
  6305  001650  0100               	movlb	0	; () banked
  6306  001652  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6307  001654  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6308                           
  6309                           ;Bluetooth.c: 433: UARTstring(CRLN);
  6310  001658  0E82               	movlw	low _CRLN
  6311  00165A  0100               	movlb	0	; () banked
  6312  00165C  6F73               	movwf	UARTstring@data& (0+255),b
  6313  00165E  0EFB               	movlw	high _CRLN
  6314  001660  0100               	movlb	0	; () banked
  6315  001662  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6316  001664  EC9B  F02A         	call	_UARTstring	;wreg free
  6317                           
  6318                           ;Bluetooth.c: 434: return 0;
  6319                           ;	Return value of _UseBluetooth is never used
  6320  001668  0012               	return	
  6321                           
  6322                           ;Bluetooth.c: 435: }
  6323                           ;Bluetooth.c: 436: }
  6324  00166A  D0F0               	goto	l10285
  6325  00166C                     l10235:
  6326                           
  6327                           ;Bluetooth.c: 437: else if(StringContainsCaseInsensitive(ReceivedString,"RemoteButton"))
  6328  00166C  0E00               	movlw	low _ReceivedString
  6329  00166E  0100               	movlb	0	; () banked
  6330  001670  6F75               	movwf	StringContainsCaseInsensitive@This& (0+255),b
  6331  001672  0E02               	movlw	high _ReceivedString
  6332  001674  0100               	movlb	0	; () banked
  6333  001676  6F76               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
  6334  001678  0E82               	movlw	low STR_44
  6335  00167A  0100               	movlb	0	; () banked
  6336  00167C  6F77               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  6337  00167E  0EFF               	movlw	high STR_44
  6338  001680  0100               	movlb	0	; () banked
  6339  001682  6F78               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  6340  001684  ECCD  F025         	call	_StringContainsCaseInsensitive	;wreg free
  6341  001688  0900               	iorlw	0
  6342  00168A  B4D8               	btfsc	status,2,c
  6343  00168C  D0C5               	goto	l10281
  6344                           
  6345                           ;Bluetooth.c: 438: {
  6346                           ;Bluetooth.c: 439: if(StringAddEqual(ReceivedString))
  6347  00168E  0E00               	movlw	low _ReceivedString
  6348  001690  0100               	movlb	0	; () banked
  6349  001692  6F81               	movwf	StringAddEqual@Input& (0+255),b
  6350  001694  0E02               	movlw	high _ReceivedString
  6351  001696  0100               	movlb	0	; () banked
  6352  001698  6F82               	movwf	(StringAddEqual@Input+1)& (0+255),b
  6353  00169A  EC18  F01B         	call	_StringAddEqual	;wreg free
  6354  00169E  0900               	iorlw	0
  6355  0016A0  B4D8               	btfsc	status,2,c
  6356  0016A2  D071               	goto	l10263
  6357                           
  6358                           ;Bluetooth.c: 440: {
  6359                           ;Bluetooth.c: 441: if(!GetNumber(ReceivedString, 1, &temp))
  6360  0016A4  0E00               	movlw	low _ReceivedString
  6361  0016A6  0100               	movlb	0	; () banked
  6362  0016A8  6F7E               	movwf	GetNumber@This& (0+255),b
  6363  0016AA  0E02               	movlw	high _ReceivedString
  6364  0016AC  0100               	movlb	0	; () banked
  6365  0016AE  6F7F               	movwf	(GetNumber@This+1)& (0+255),b
  6366  0016B0  0E01               	movlw	1
  6367  0016B2  0100               	movlb	0	; () banked
  6368  0016B4  6F80               	movwf	GetNumber@CommaNumber& (0+255),b
  6369  0016B6  0EC6               	movlw	low UseBluetooth@temp
  6370  0016B8  0100               	movlb	0	; () banked
  6371  0016BA  6F81               	movwf	GetNumber@result& (0+255),b
  6372  0016BC  0E04               	movlw	high UseBluetooth@temp
  6373  0016BE  0100               	movlb	0	; () banked
  6374  0016C0  6F82               	movwf	(GetNumber@result+1)& (0+255),b
  6375  0016C2  ECF7  F00F         	call	_GetNumber	;wreg free
  6376  0016C6  0900               	iorlw	0
  6377  0016C8  A4D8               	btfss	status,2,c
  6378  0016CA  D05D               	goto	l10263
  6379                           
  6380                           ;Bluetooth.c: 442: {
  6381                           ;Bluetooth.c: 443: UARTstring(CRLN);
  6382  0016CC  0E82               	movlw	low _CRLN
  6383  0016CE  0100               	movlb	0	; () banked
  6384  0016D0  6F73               	movwf	UARTstring@data& (0+255),b
  6385  0016D2  0EFB               	movlw	high _CRLN
  6386  0016D4  0100               	movlb	0	; () banked
  6387  0016D6  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6388  0016D8  EC9B  F02A         	call	_UARTstring	;wreg free
  6389                           
  6390                           ;Bluetooth.c: 444: UARTstring("Hit Remote Control button");
  6391  0016DC  0E88               	movlw	low STR_45
  6392  0016DE  0100               	movlb	0	; () banked
  6393  0016E0  6F73               	movwf	UARTstring@data& (0+255),b
  6394  0016E2  0EFD               	movlw	high STR_45
  6395  0016E4  0100               	movlb	0	; () banked
  6396  0016E6  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6397  0016E8  EC9B  F02A         	call	_UARTstring	;wreg free
  6398                           
  6399                           ;Bluetooth.c: 445: timeout = 0;
  6400  0016EC  0E00               	movlw	0
  6401  0016EE  0104               	movlb	4	; () banked
  6402  0016F0  6FC2               	movwf	UseBluetooth@timeout& (0+255),b
  6403                           
  6404                           ;Bluetooth.c: 446: while(IR_New_Code != 1)
  6405  0016F2  D01B               	goto	l10255
  6406  0016F4                     l10245:
  6407                           
  6408                           ;Bluetooth.c: 447: {
  6409                           ;Bluetooth.c: 448: UARTchar('.');
  6410  0016F4  0E2E               	movlw	46
  6411  0016F6  EC26  F02D         	call	_UARTchar
  6412                           
  6413                           ;Bluetooth.c: 449: timeout++;
  6414  0016FA  0104               	movlb	4	; () banked
  6415  0016FC  2BC2               	incf	UseBluetooth@timeout& (0+255),f,b
  6416                           
  6417                           ; BSR set to: 4
  6418                           ;Bluetooth.c: 450: if(timeout > 20)
  6419  0016FE  0E14               	movlw	20
  6420  001700  0104               	movlb	4	; () banked
  6421  001702  65C2               	cpfsgt	UseBluetooth@timeout& (0+255),b
  6422  001704  D012               	goto	l10255
  6423                           
  6424                           ; BSR set to: 4
  6425                           ;Bluetooth.c: 451: {
  6426                           ;Bluetooth.c: 452: UARTstring(CRLN);
  6427  001706  0E82               	movlw	low _CRLN
  6428  001708  0100               	movlb	0	; () banked
  6429  00170A  6F73               	movwf	UARTstring@data& (0+255),b
  6430  00170C  0EFB               	movlw	high _CRLN
  6431  00170E  0100               	movlb	0	; () banked
  6432  001710  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6433  001712  EC9B  F02A         	call	_UARTstring	;wreg free
  6434                           
  6435                           ;Bluetooth.c: 453: UARTstringCRLN("You took too long hit a button on the remote");
  6436  001716  0EC5               	movlw	low STR_46
  6437  001718  0100               	movlb	0	; () banked
  6438  00171A  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6439  00171C  0EFB               	movlw	high STR_46
  6440  00171E  0100               	movlb	0	; () banked
  6441  001720  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6442  001722  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6443                           
  6444                           ;Bluetooth.c: 454: return 0;
  6445                           ;	Return value of _UseBluetooth is never used
  6446  001726  0012               	return	
  6447  001728  D000               	goto	l10255
  6448  00172A                     l10255:
  6449  00172A  0100               	movlb	0	; () banked
  6450  00172C  05E6               	decf	_IR_New_Code& (0+255),w,b
  6451  00172E  A4D8               	btfss	status,2,c
  6452  001730  D7E1               	goto	l10245
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;Bluetooth.c: 455: }
  6456                           ;Bluetooth.c: 456: }
  6457                           ;Bluetooth.c: 458: sprintf(buf,"RemoteButton%d = ox%lX ",temp, IR_NEC);
  6458                           
  6459                           ; BSR set to: 0
  6460  001732  0E90               	movlw	low UseBluetooth@buf
  6461  001734  0100               	movlb	0	; () banked
  6462  001736  6F88               	movwf	sprintf@sp& (0+255),b
  6463  001738  0E04               	movlw	high UseBluetooth@buf
  6464  00173A  0100               	movlb	0	; () banked
  6465  00173C  6F89               	movwf	(sprintf@sp+1)& (0+255),b
  6466  00173E  0EBA               	movlw	low STR_47
  6467  001740  0100               	movlb	0	; () banked
  6468  001742  6F8A               	movwf	sprintf@f& (0+255),b
  6469  001744  0EFD               	movlw	high STR_47
  6470  001746  0100               	movlb	0	; () banked
  6471  001748  6F8B               	movwf	(sprintf@f+1)& (0+255),b
  6472  00174A  C4C6  F08C         	movff	UseBluetooth@temp,?_sprintf+4
  6473  00174E  C4C7  F08D         	movff	UseBluetooth@temp+1,?_sprintf+5
  6474  001752  C4C8  F08E         	movff	UseBluetooth@temp+2,?_sprintf+6
  6475  001756  C4C9  F08F         	movff	UseBluetooth@temp+3,?_sprintf+7
  6476  00175A  C0E2  F090         	movff	_IR_NEC,?_sprintf+8
  6477  00175E  C0E3  F091         	movff	_IR_NEC+1,?_sprintf+9
  6478  001762  C0E4  F092         	movff	_IR_NEC+2,?_sprintf+10
  6479  001766  C0E5  F093         	movff	_IR_NEC+3,?_sprintf+11
  6480  00176A  EC08  F014         	call	_sprintf	;wreg free
  6481                           
  6482                           ;Bluetooth.c: 459: IR_New_Code = 0;
  6483  00176E  0E00               	movlw	0
  6484  001770  0100               	movlb	0	; () banked
  6485  001772  6FE6               	movwf	_IR_New_Code& (0+255),b
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;Bluetooth.c: 460: UARTstringCRLN(buf);
  6489  001774  0E90               	movlw	low UseBluetooth@buf
  6490  001776  0100               	movlb	0	; () banked
  6491  001778  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6492  00177A  0E04               	movlw	high UseBluetooth@buf
  6493  00177C  0100               	movlb	0	; () banked
  6494  00177E  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6495  001780  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6496  001784  D000               	goto	l10263
  6497  001786                     l10263:
  6498                           
  6499                           ;Bluetooth.c: 461: }
  6500                           ;Bluetooth.c: 462: }
  6501                           ;Bluetooth.c: 463: UARTstring(CRLN);
  6502  001786  0E82               	movlw	low _CRLN
  6503  001788  0100               	movlb	0	; () banked
  6504  00178A  6F73               	movwf	UARTstring@data& (0+255),b
  6505  00178C  0EFB               	movlw	high _CRLN
  6506  00178E  0100               	movlb	0	; () banked
  6507  001790  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6508  001792  EC9B  F02A         	call	_UARTstring	;wreg free
  6509                           
  6510                           ;Bluetooth.c: 464: UARTstringCRLN("Error: Remote button not specified");
  6511  001796  0EF2               	movlw	low STR_48
  6512  001798  0100               	movlb	0	; () banked
  6513  00179A  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6514  00179C  0EFB               	movlw	high STR_48
  6515  00179E  0100               	movlb	0	; () banked
  6516  0017A0  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6517  0017A2  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6518                           
  6519                           ;Bluetooth.c: 465: UARTstring(CRLN);
  6520  0017A6  0E82               	movlw	low _CRLN
  6521  0017A8  0100               	movlb	0	; () banked
  6522  0017AA  6F73               	movwf	UARTstring@data& (0+255),b
  6523  0017AC  0EFB               	movlw	high _CRLN
  6524  0017AE  0100               	movlb	0	; () banked
  6525  0017B0  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6526  0017B2  EC9B  F02A         	call	_UARTstring	;wreg free
  6527                           
  6528                           ;Bluetooth.c: 466: UARTstringCRLN("Usage:");
  6529  0017B6  0EC0               	movlw	low STR_36
  6530  0017B8  0100               	movlb	0	; () banked
  6531  0017BA  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6532  0017BC  0EFF               	movlw	high STR_36
  6533  0017BE  0100               	movlb	0	; () banked
  6534  0017C0  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6535  0017C2  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6536                           
  6537                           ;Bluetooth.c: 467: UARTstringCRLN("RemoteButton'x'");
  6538  0017C6  0E47               	movlw	low STR_50
  6539  0017C8  0100               	movlb	0	; () banked
  6540  0017CA  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6541  0017CC  0EFF               	movlw	high STR_50
  6542  0017CE  0100               	movlb	0	; () banked
  6543  0017D0  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6544  0017D2  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6545                           
  6546                           ;Bluetooth.c: 468: UARTstring(CRLN);
  6547  0017D6  0E82               	movlw	low _CRLN
  6548  0017D8  0100               	movlb	0	; () banked
  6549  0017DA  6F73               	movwf	UARTstring@data& (0+255),b
  6550  0017DC  0EFB               	movlw	high _CRLN
  6551  0017DE  0100               	movlb	0	; () banked
  6552  0017E0  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6553  0017E2  EC9B  F02A         	call	_UARTstring	;wreg free
  6554                           
  6555                           ;Bluetooth.c: 469: UARTstringCRLN("Example:");
  6556  0017E6  0EB7               	movlw	low STR_40
  6557  0017E8  0100               	movlb	0	; () banked
  6558  0017EA  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6559  0017EC  0EFF               	movlw	high STR_40
  6560  0017EE  0100               	movlb	0	; () banked
  6561  0017F0  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6562  0017F2  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6563                           
  6564                           ;Bluetooth.c: 470: UARTstringCRLN("RemoteButton1");
  6565  0017F6  0E67               	movlw	low STR_52
  6566  0017F8  0100               	movlb	0	; () banked
  6567  0017FA  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6568  0017FC  0EFF               	movlw	high STR_52
  6569  0017FE  0100               	movlb	0	; () banked
  6570  001800  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6571  001802  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6572                           
  6573                           ;Bluetooth.c: 471: UARTstring(CRLN);
  6574  001806  0E82               	movlw	low _CRLN
  6575  001808  0100               	movlb	0	; () banked
  6576  00180A  6F73               	movwf	UARTstring@data& (0+255),b
  6577  00180C  0EFB               	movlw	high _CRLN
  6578  00180E  0100               	movlb	0	; () banked
  6579  001810  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6580  001812  EC9B  F02A         	call	_UARTstring	;wreg free
  6581                           
  6582                           ;Bluetooth.c: 472: }
  6583  001816  D01A               	goto	l10285
  6584  001818                     l10281:
  6585                           
  6586                           ;Bluetooth.c: 473: else
  6587                           ;Bluetooth.c: 474: {
  6588                           ;Bluetooth.c: 475: UARTstringCRLN(SYNTAX_ERR);
  6589  001818  0EB4               	movlw	low _SYNTAX_ERR
  6590  00181A  0100               	movlb	0	; () banked
  6591  00181C  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6592  00181E  0EF9               	movlw	high _SYNTAX_ERR
  6593  001820  0100               	movlb	0	; () banked
  6594  001822  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6595  001824  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6596                           
  6597                           ;Bluetooth.c: 476: UARTstringCRLN("Enter '?^ Command Menu");
  6598  001828  0E17               	movlw	low STR_53
  6599  00182A  0100               	movlb	0	; () banked
  6600  00182C  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6601  00182E  0EFE               	movlw	high STR_53
  6602  001830  0100               	movlb	0	; () banked
  6603  001832  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6604  001834  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6605                           
  6606                           ;Bluetooth.c: 477: UARTstring(CRLN);
  6607  001838  0E82               	movlw	low _CRLN
  6608  00183A  0100               	movlb	0	; () banked
  6609  00183C  6F73               	movwf	UARTstring@data& (0+255),b
  6610  00183E  0EFB               	movlw	high _CRLN
  6611  001840  0100               	movlb	0	; () banked
  6612  001842  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6613  001844  EC9B  F02A         	call	_UARTstring	;wreg free
  6614                           
  6615                           ;Bluetooth.c: 478: return 0;
  6616                           ;	Return value of _UseBluetooth is never used
  6617  001848  0012               	return	
  6618  00184A  D000               	goto	l10285
  6619  00184C                     l10285:
  6620                           
  6621                           ;Bluetooth.c: 479: }
  6622                           ;Bluetooth.c: 480: if(ok == 0)
  6623  00184C  0104               	movlb	4	; () banked
  6624  00184E  51C3               	movf	UseBluetooth@ok& (0+255),w,b
  6625  001850  0104               	movlb	4	; () banked
  6626  001852  A4D8               	btfss	status,2,c
  6627  001854  D011               	goto	l10289
  6628                           
  6629                           ; BSR set to: 4
  6630                           ;Bluetooth.c: 481: {
  6631                           ;Bluetooth.c: 483: UARTstring(SYNTAX_ERR);
  6632  001856  0EB4               	movlw	low _SYNTAX_ERR
  6633  001858  0100               	movlb	0	; () banked
  6634  00185A  6F73               	movwf	UARTstring@data& (0+255),b
  6635  00185C  0EF9               	movlw	high _SYNTAX_ERR
  6636  00185E  0100               	movlb	0	; () banked
  6637  001860  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6638  001862  EC9B  F02A         	call	_UARTstring	;wreg free
  6639                           
  6640                           ;Bluetooth.c: 484: UARTstring(CRLN);
  6641  001866  0E82               	movlw	low _CRLN
  6642  001868  0100               	movlb	0	; () banked
  6643  00186A  6F73               	movwf	UARTstring@data& (0+255),b
  6644  00186C  0EFB               	movlw	high _CRLN
  6645  00186E  0100               	movlb	0	; () banked
  6646  001870  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6647  001872  EC9B  F02A         	call	_UARTstring	;wreg free
  6648  001876  D000               	goto	l10289
  6649  001878                     l10289:
  6650                           
  6651                           ;Bluetooth.c: 485: }
  6652                           ;Bluetooth.c: 487: if(StringMatch(ReceivedString,"???") || ok == 0)
  6653  001878  0E00               	movlw	low _ReceivedString
  6654  00187A  0100               	movlb	0	; () banked
  6655  00187C  6F72               	movwf	StringMatch@This& (0+255),b
  6656  00187E  0E02               	movlw	high _ReceivedString
  6657  001880  0100               	movlb	0	; () banked
  6658  001882  6F73               	movwf	(StringMatch@This+1)& (0+255),b
  6659  001884  0EE7               	movlw	low STR_54
  6660  001886  0100               	movlb	0	; () banked
  6661  001888  6F74               	movwf	StringMatch@That& (0+255),b
  6662  00188A  0EFF               	movlw	high STR_54
  6663  00188C  0100               	movlb	0	; () banked
  6664  00188E  6F75               	movwf	(StringMatch@That+1)& (0+255),b
  6665  001890  EC36  F029         	call	_StringMatch	;wreg free
  6666  001894  0900               	iorlw	0
  6667  001896  A4D8               	btfss	status,2,c
  6668  001898  D005               	goto	l10293
  6669  00189A  0104               	movlb	4	; () banked
  6670  00189C  51C3               	movf	UseBluetooth@ok& (0+255),w,b
  6671  00189E  0104               	movlb	4	; () banked
  6672  0018A0  A4D8               	btfss	status,2,c
  6673  0018A2  0012               	return	
  6674  0018A4                     l10293:
  6675                           
  6676                           ;Bluetooth.c: 488: {
  6677                           ;Bluetooth.c: 489: UARTstring(CRLN);
  6678  0018A4  0E82               	movlw	low _CRLN
  6679  0018A6  0100               	movlb	0	; () banked
  6680  0018A8  6F73               	movwf	UARTstring@data& (0+255),b
  6681  0018AA  0EFB               	movlw	high _CRLN
  6682  0018AC  0100               	movlb	0	; () banked
  6683  0018AE  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6684  0018B0  EC9B  F02A         	call	_UARTstring	;wreg free
  6685                           
  6686                           ;Bluetooth.c: 490: UARTstringCRLN("~~~~~~~~~~~~~~~~~~~~~~~~~Command Menu~~~~~~~~~~~~~~~~
      +                          ~~~~~~~~~~");
  6687  0018B4  0E85               	movlw	low STR_55
  6688  0018B6  0100               	movlb	0	; () banked
  6689  0018B8  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6690  0018BA  0EFB               	movlw	high STR_55
  6691  0018BC  0100               	movlb	0	; () banked
  6692  0018BE  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6693  0018C0  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6694                           
  6695                           ;Bluetooth.c: 491: UARTstring(CRLN);
  6696  0018C4  0E82               	movlw	low _CRLN
  6697  0018C6  0100               	movlb	0	; () banked
  6698  0018C8  6F73               	movwf	UARTstring@data& (0+255),b
  6699  0018CA  0EFB               	movlw	high _CRLN
  6700  0018CC  0100               	movlb	0	; () banked
  6701  0018CE  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6702  0018D0  EC9B  F02A         	call	_UARTstring	;wreg free
  6703                           
  6704                           ;Bluetooth.c: 492: UARTstringCRLN("System commands:");
  6705  0018D4  0E36               	movlw	low STR_56
  6706  0018D6  0100               	movlb	0	; () banked
  6707  0018D8  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6708  0018DA  0EFF               	movlw	high STR_56
  6709  0018DC  0100               	movlb	0	; () banked
  6710  0018DE  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6711  0018E0  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6712                           
  6713                           ;Bluetooth.c: 493: UARTcommandMenu("???", "Help Menu");
  6714  0018E4  0EE7               	movlw	low STR_54
  6715  0018E6  0100               	movlb	0	; () banked
  6716  0018E8  6F75               	movwf	UARTcommandMenu@Command& (0+255),b
  6717  0018EA  0EFF               	movlw	high STR_54
  6718  0018EC  0100               	movlb	0	; () banked
  6719  0018EE  6F76               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  6720  0018F0  0EA4               	movlw	low STR_58
  6721  0018F2  0100               	movlb	0	; () banked
  6722  0018F4  6F77               	movwf	UARTcommandMenu@Desc& (0+255),b
  6723  0018F6  0EFF               	movlw	high STR_58
  6724  0018F8  0100               	movlb	0	; () banked
  6725  0018FA  6F78               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  6726  0018FC  EC8A  F021         	call	_UARTcommandMenu	;wreg free
  6727                           
  6728                           ;Bluetooth.c: 494: UARTstring(CRLN);
  6729  001900  0E82               	movlw	low _CRLN
  6730  001902  0100               	movlb	0	; () banked
  6731  001904  6F73               	movwf	UARTstring@data& (0+255),b
  6732  001906  0EFB               	movlw	high _CRLN
  6733  001908  0100               	movlb	0	; () banked
  6734  00190A  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6735  00190C  EC9B  F02A         	call	_UARTstring	;wreg free
  6736                           
  6737                           ;Bluetooth.c: 495: UARTstringCRLN("RF commands:");
  6738  001910  0E75               	movlw	low STR_59
  6739  001912  0100               	movlb	0	; () banked
  6740  001914  6F75               	movwf	UARTstringCRLN@data& (0+255),b
  6741  001916  0EFF               	movlw	high STR_59
  6742  001918  0100               	movlb	0	; () banked
  6743  00191A  6F76               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6744  00191C  ECA5  F029         	call	_UARTstringCRLN	;wreg free
  6745                           
  6746                           ;Bluetooth.c: 496: UARTcommandMenu(Conf1_ChannelD_STR, "RFK100LC Channel D");
  6747  001920  0E31               	movlw	low _Conf1_ChannelD_STR
  6748  001922  0100               	movlb	0	; () banked
  6749  001924  6F75               	movwf	UARTcommandMenu@Command& (0+255),b
  6750  001926  0EFB               	movlw	high _Conf1_ChannelD_STR
  6751  001928  0100               	movlb	0	; () banked
  6752  00192A  6F76               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  6753  00192C  0E82               	movlw	low STR_60
  6754  00192E  0100               	movlb	0	; () banked
  6755  001930  6F77               	movwf	UARTcommandMenu@Desc& (0+255),b
  6756  001932  0EFE               	movlw	high STR_60
  6757  001934  0100               	movlb	0	; () banked
  6758  001936  6F78               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  6759  001938  EC8A  F021         	call	_UARTcommandMenu	;wreg free
  6760                           
  6761                           ;Bluetooth.c: 497: UARTcommandMenu(Conf1_ChannelE_STR, "RFK100LC Channel E");
  6762  00193C  0E40               	movlw	low _Conf1_ChannelE_STR
  6763  00193E  0100               	movlb	0	; () banked
  6764  001940  6F75               	movwf	UARTcommandMenu@Command& (0+255),b
  6765  001942  0EFB               	movlw	high _Conf1_ChannelE_STR
  6766  001944  0100               	movlb	0	; () banked
  6767  001946  6F76               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  6768  001948  0E95               	movlw	low STR_61
  6769  00194A  0100               	movlb	0	; () banked
  6770  00194C  6F77               	movwf	UARTcommandMenu@Desc& (0+255),b
  6771  00194E  0EFE               	movlw	high STR_61
  6772  001950  0100               	movlb	0	; () banked
  6773  001952  6F78               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  6774  001954  EC8A  F021         	call	_UARTcommandMenu	;wreg free
  6775                           
  6776                           ;Bluetooth.c: 498: UARTcommandMenu(Conf1_ChannelF_STR, "RFK100LC Channel F");
  6777  001958  0E4F               	movlw	low _Conf1_ChannelF_STR
  6778  00195A  0100               	movlb	0	; () banked
  6779  00195C  6F75               	movwf	UARTcommandMenu@Command& (0+255),b
  6780  00195E  0EFB               	movlw	high _Conf1_ChannelF_STR
  6781  001960  0100               	movlb	0	; () banked
  6782  001962  6F76               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  6783  001964  0EA8               	movlw	low STR_62
  6784  001966  0100               	movlb	0	; () banked
  6785  001968  6F77               	movwf	UARTcommandMenu@Desc& (0+255),b
  6786  00196A  0EFE               	movlw	high STR_62
  6787  00196C  0100               	movlb	0	; () banked
  6788  00196E  6F78               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  6789  001970  EC8A  F021         	call	_UARTcommandMenu	;wreg free
  6790                           
  6791                           ;Bluetooth.c: 499: UARTcommandMenu(Conf2_ChannelB_ON_STR, "RFK306LC Channel B ON");
  6792  001974  0E6D               	movlw	low _Conf2_ChannelB_ON_STR
  6793  001976  0100               	movlb	0	; () banked
  6794  001978  6F75               	movwf	UARTcommandMenu@Command& (0+255),b
  6795  00197A  0EFA               	movlw	high _Conf2_ChannelB_ON_STR
  6796  00197C  0100               	movlb	0	; () banked
  6797  00197E  6F76               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  6798  001980  0E2E               	movlw	low STR_63
  6799  001982  0100               	movlb	0	; () banked
  6800  001984  6F77               	movwf	UARTcommandMenu@Desc& (0+255),b
  6801  001986  0EFE               	movlw	high STR_63
  6802  001988  0100               	movlb	0	; () banked
  6803  00198A  6F78               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  6804  00198C  EC8A  F021         	call	_UARTcommandMenu	;wreg free
  6805                           
  6806                           ;Bluetooth.c: 500: UARTcommandMenu(Conf2_ChannelB_OFF_STR, "RFK306LC Channel B OFF");
  6807  001990  0E47               	movlw	low _Conf2_ChannelB_OFF_STR
  6808  001992  0100               	movlb	0	; () banked
  6809  001994  6F75               	movwf	UARTcommandMenu@Command& (0+255),b
  6810  001996  0EFA               	movlw	high _Conf2_ChannelB_OFF_STR
  6811  001998  0100               	movlb	0	; () banked
  6812  00199A  6F76               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  6813  00199C  0E00               	movlw	low STR_64
  6814  00199E  0100               	movlb	0	; () banked
  6815  0019A0  6F77               	movwf	UARTcommandMenu@Desc& (0+255),b
  6816  0019A2  0EFE               	movlw	high STR_64
  6817  0019A4  0100               	movlb	0	; () banked
  6818  0019A6  6F78               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  6819  0019A8  EC8A  F021         	call	_UARTcommandMenu	;wreg free
  6820                           
  6821                           ;Bluetooth.c: 501: UARTcommandMenu(Conf2_ChannelD_ON_STR, "TR009 Channel D ON");
  6822  0019AC  0E7F               	movlw	low _Conf2_ChannelD_ON_STR
  6823  0019AE  0100               	movlb	0	; () banked
  6824  0019B0  6F75               	movwf	UARTcommandMenu@Command& (0+255),b
  6825  0019B2  0EFA               	movlw	high _Conf2_ChannelD_ON_STR
  6826  0019B4  0100               	movlb	0	; () banked
  6827  0019B6  6F76               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  6828  0019B8  0EBB               	movlw	low STR_65
  6829  0019BA  0100               	movlb	0	; () banked
  6830  0019BC  6F77               	movwf	UARTcommandMenu@Desc& (0+255),b
  6831  0019BE  0EFE               	movlw	high STR_65
  6832  0019C0  0100               	movlb	0	; () banked
  6833  0019C2  6F78               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  6834  0019C4  EC8A  F021         	call	_UARTcommandMenu	;wreg free
  6835                           
  6836                           ;Bluetooth.c: 502: UARTcommandMenu(Conf2_ChannelD_OFF_STR, "TR009 Channel D OFF");
  6837  0019C8  0E5A               	movlw	low _Conf2_ChannelD_OFF_STR
  6838  0019CA  0100               	movlb	0	; () banked
  6839  0019CC  6F75               	movwf	UARTcommandMenu@Command& (0+255),b
  6840  0019CE  0EFA               	movlw	high _Conf2_ChannelD_OFF_STR
  6841  0019D0  0100               	movlb	0	; () banked
  6842  0019D2  6F76               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  6843  0019D4  0E6E               	movlw	low STR_66
  6844  0019D6  0100               	movlb	0	; () banked
  6845  0019D8  6F77               	movwf	UARTcommandMenu@Desc& (0+255),b
  6846  0019DA  0EFE               	movlw	high STR_66
  6847  0019DC  0100               	movlb	0	; () banked
  6848  0019DE  6F78               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  6849  0019E0  EC8A  F021         	call	_UARTcommandMenu	;wreg free
  6850                           
  6851                           ;Bluetooth.c: 503: UARTcommandMenu(Conf2_ChannelH_1_ON_STR, "RC-015*3 Channel H device 1
      +                           ON");
  6852  0019E4  0E0B               	movlw	low _Conf2_ChannelH_1_ON_STR
  6853  0019E6  0100               	movlb	0	; () banked
  6854  0019E8  6F75               	movwf	UARTcommandMenu@Command& (0+255),b
  6855  0019EA  0EFA               	movlw	high _Conf2_ChannelH_1_ON_STR
  6856  0019EC  0100               	movlb	0	; () banked
  6857  0019EE  6F76               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  6858  0019F0  0EB6               	movlw	low STR_67
  6859  0019F2  0100               	movlb	0	; () banked
  6860  0019F4  6F77               	movwf	UARTcommandMenu@Desc& (0+255),b
  6861  0019F6  0EFC               	movlw	high STR_67
  6862  0019F8  0100               	movlb	0	; () banked
  6863  0019FA  6F78               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  6864  0019FC  EC8A  F021         	call	_UARTcommandMenu	;wreg free
  6865                           
  6866                           ;Bluetooth.c: 504: UARTcommandMenu(Conf2_ChannelH_1_OFF_STR, "RC-015*3 Channel H device 
      +                          1 OFF");
  6867  001A00  0ECC               	movlw	low _Conf2_ChannelH_1_OFF_STR
  6868  001A02  0100               	movlb	0	; () banked
  6869  001A04  6F75               	movwf	UARTcommandMenu@Command& (0+255),b
  6870  001A06  0EF9               	movlw	high _Conf2_ChannelH_1_OFF_STR
  6871  001A08  0100               	movlb	0	; () banked
  6872  001A0A  6F76               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  6873  001A0C  0E36               	movlw	low STR_68
  6874  001A0E  0100               	movlb	0	; () banked
  6875  001A10  6F77               	movwf	UARTcommandMenu@Desc& (0+255),b
  6876  001A12  0EFC               	movlw	high STR_68
  6877  001A14  0100               	movlb	0	; () banked
  6878  001A16  6F78               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  6879  001A18  EC8A  F021         	call	_UARTcommandMenu	;wreg free
  6880                           
  6881                           ;Bluetooth.c: 505: UARTcommandMenu(Conf2_ChannelH_2_ON_STR, "RC-015*3 Channel H device 2
      +                           ON");
  6882  001A1C  0E1F               	movlw	low _Conf2_ChannelH_2_ON_STR
  6883  001A1E  0100               	movlb	0	; () banked
  6884  001A20  6F75               	movwf	UARTcommandMenu@Command& (0+255),b
  6885  001A22  0EFA               	movlw	high _Conf2_ChannelH_2_ON_STR
  6886  001A24  0100               	movlb	0	; () banked
  6887  001A26  6F76               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  6888  001A28  0ED5               	movlw	low STR_69
  6889  001A2A  0100               	movlb	0	; () banked
  6890  001A2C  6F77               	movwf	UARTcommandMenu@Desc& (0+255),b
  6891  001A2E  0EFC               	movlw	high STR_69
  6892  001A30  0100               	movlb	0	; () banked
  6893  001A32  6F78               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  6894  001A34  EC8A  F021         	call	_UARTcommandMenu	;wreg free
  6895                           
  6896                           ;Bluetooth.c: 506: UARTcommandMenu(Conf2_ChannelH_2_OFF_STR, "RC-015*3 Channel H device 
      +                          2 OFF");
  6897  001A38  0EE1               	movlw	low _Conf2_ChannelH_2_OFF_STR
  6898  001A3A  0100               	movlb	0	; () banked
  6899  001A3C  6F75               	movwf	UARTcommandMenu@Command& (0+255),b
  6900  001A3E  0EF9               	movlw	high _Conf2_ChannelH_2_OFF_STR
  6901  001A40  0100               	movlb	0	; () banked
  6902  001A42  6F76               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  6903  001A44  0E56               	movlw	low STR_70
  6904  001A46  0100               	movlb	0	; () banked
  6905  001A48  6F77               	movwf	UARTcommandMenu@Desc& (0+255),b
  6906  001A4A  0EFC               	movlw	high STR_70
  6907  001A4C  0100               	movlb	0	; () banked
  6908  001A4E  6F78               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  6909  001A50  EC8A  F021         	call	_UARTcommandMenu	;wreg free
  6910                           
  6911                           ;Bluetooth.c: 507: UARTcommandMenu(Conf2_ChannelH_3_ON_STR, "RC-015*3 Channel H device 3
      +                           ON");
  6912  001A54  0E33               	movlw	low _Conf2_ChannelH_3_ON_STR
  6913  001A56  0100               	movlb	0	; () banked
  6914  001A58  6F75               	movwf	UARTcommandMenu@Command& (0+255),b
  6915  001A5A  0EFA               	movlw	high _Conf2_ChannelH_3_ON_STR
  6916  001A5C  0100               	movlb	0	; () banked
  6917  001A5E  6F76               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  6918  001A60  0EF4               	movlw	low STR_71
  6919  001A62  0100               	movlb	0	; () banked
  6920  001A64  6F77               	movwf	UARTcommandMenu@Desc& (0+255),b
  6921  001A66  0EFC               	movlw	high STR_71
  6922  001A68  0100               	movlb	0	; () banked
  6923  001A6A  6F78               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  6924  001A6C  EC8A  F021         	call	_UARTcommandMenu	;wreg free
  6925                           
  6926                           ;Bluetooth.c: 508: UARTcommandMenu(Conf2_ChannelH_3_OFF_STR, "RC-015*3 Channel H device 
      +                          3 OFF");
  6927  001A70  0EF6               	movlw	low _Conf2_ChannelH_3_OFF_STR
  6928  001A72  0100               	movlb	0	; () banked
  6929  001A74  6F75               	movwf	UARTcommandMenu@Command& (0+255),b
  6930  001A76  0EF9               	movlw	high _Conf2_ChannelH_3_OFF_STR
  6931  001A78  0100               	movlb	0	; () banked
  6932  001A7A  6F76               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  6933  001A7C  0E76               	movlw	low STR_72
  6934  001A7E  0100               	movlb	0	; () banked
  6935  001A80  6F77               	movwf	UARTcommandMenu@Desc& (0+255),b
  6936  001A82  0EFC               	movlw	high STR_72
  6937  001A84  0100               	movlb	0	; () banked
  6938  001A86  6F78               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  6939  001A88  EC8A  F021         	call	_UARTcommandMenu	;wreg free
  6940                           
  6941                           ;Bluetooth.c: 509: UARTstring(CRLN);
  6942  001A8C  0E82               	movlw	low _CRLN
  6943  001A8E  0100               	movlb	0	; () banked
  6944  001A90  6F73               	movwf	UARTstring@data& (0+255),b
  6945  001A92  0EFB               	movlw	high _CRLN
  6946  001A94  0100               	movlb	0	; () banked
  6947  001A96  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  6948  001A98  EC9B  F02A         	call	_UARTstring	;wreg free
  6949  001A9C  0012               	return	
  6950                           
  6951                           ;Bluetooth.c: 510: }
  6952                           ;Bluetooth.c: 512: return 0;
  6953                           ;	Return value of _UseBluetooth is never used
  6954  001A9E  0012               	return		;funcret
  6955  001AA0                     __end_of_UseBluetooth:
  6956                           	opt stack 0
  6957                           tblptru	equ	0xFF8
  6958                           tblptrh	equ	0xFF7
  6959                           tblptrl	equ	0xFF6
  6960                           tablat	equ	0xFF5
  6961                           intcon	equ	0xFF2
  6962                           postinc0	equ	0xFEE
  6963                           wreg	equ	0xFE8
  6964                           postdec1	equ	0xFE5
  6965                           fsr1h	equ	0xFE2
  6966                           fsr1l	equ	0xFE1
  6967                           indf2	equ	0xFDF
  6968                           postinc2	equ	0xFDE
  6969                           fsr2h	equ	0xFDA
  6970                           fsr2l	equ	0xFD9
  6971                           status	equ	0xFD8
  6972                           
  6973 ;; *************** function _UARTstringCRLN *****************
  6974 ;; Defined at:
  6975 ;;		line 248 in file "UART.c"
  6976 ;; Parameters:    Size  Location     Type
  6977 ;;  data            2   21[BANK0 ] PTR unsigned char 
  6978 ;;		 -> STR_59(13), STR_56(17), STR_55(64), STR_53(23), 
  6979 ;;		 -> SYNTAX_ERR(24), STR_52(14), STR_51(9), STR_50(16), 
  6980 ;;		 -> STR_49(7), STR_48(35), STR_46(45), STR_43(17), 
  6981 ;;		 -> STR_42(9), STR_41(18), STR_40(9), STR_39(23), 
  6982 ;;		 -> STR_38(11), STR_37(21), STR_36(7), STR_35(31), 
  6983 ;;		 -> STR_34(33), STR_30(32), STR_25(29), STR_23(29), 
  6984 ;;		 -> UseBluetooth@buf(50), STR_3(16), 
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;		None
  6987 ;; Return value:  Size  Location     Type
  6988 ;;		None               void
  6989 ;; Registers used:
  6990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6996 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6999 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7000 ;;Total ram usage:        2 bytes
  7001 ;; Hardware stack levels used:    1
  7002 ;; Hardware stack levels required when called:    8
  7003 ;; This function calls:
  7004 ;;		_UARTchar
  7005 ;;		_UARTstring
  7006 ;; This function is called by:
  7007 ;;		_UseBluetooth
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           	psect	text9
  7012  00534A                     __ptext9:
  7013                           	opt stack 0
  7014  00534A                     _UARTstringCRLN:
  7015                           	opt stack 21
  7016                           
  7017                           ;UART.c: 250: while(*data != 0)
  7018                           
  7019                           ;incstack = 0
  7020  00534A  D017               	goto	l9743
  7021  00534C                     l9739:
  7022                           
  7023                           ;UART.c: 251: {
  7024                           ;UART.c: 252: UARTchar(*data);
  7025  00534C  C075  FFF6         	movff	UARTstringCRLN@data,tblptrl
  7026  005350  C076  FFF7         	movff	UARTstringCRLN@data+1,tblptrh
  7027  005354  0E00               	movlw	low (__mediumconst shr (0+16))
  7028  005356  6EF8               	movwf	tblptru,c
  7029  005358  0E0F               	movlw	(high __ramtop+-1)
  7030  00535A  64F7               	cpfsgt	tblptrh,c
  7031  00535C  D003               	bra	u10857
  7032  00535E  0008               	tblrd		*
  7033  005360  50F5               	movf	tablat,w,c
  7034  005362  D005               	bra	u10850
  7035  005364                     u10857:
  7036  005364  CFF6 FFE9          	movff	tblptrl,fsr0l
  7037  005368  CFF7 FFEA          	movff	tblptrh,fsr0h
  7038  00536C  50EF               	movf	indf0,w,c
  7039  00536E                     u10850:
  7040  00536E  EC26  F02D         	call	_UARTchar
  7041                           
  7042                           ;UART.c: 253: *data++;
  7043  005372  0100               	movlb	0	; () banked
  7044  005374  4B75               	infsnz	UARTstringCRLN@data& (0+255),f,b
  7045  005376  2B76               	incf	(UARTstringCRLN@data+1)& (0+255),f,b
  7046  005378  D000               	goto	l9743
  7047  00537A                     l9743:
  7048  00537A  C075  FFF6         	movff	UARTstringCRLN@data,tblptrl
  7049  00537E  C076  FFF7         	movff	UARTstringCRLN@data+1,tblptrh
  7050  005382  0E00               	movlw	low (__mediumconst shr (0+16))
  7051  005384  6EF8               	movwf	tblptru,c
  7052  005386  0E0F               	movlw	(high __ramtop+-1)
  7053  005388  64F7               	cpfsgt	tblptrh,c
  7054  00538A  D003               	bra	u10867
  7055  00538C  0008               	tblrd		*
  7056  00538E  50F5               	movf	tablat,w,c
  7057  005390  D005               	bra	u10860
  7058  005392                     u10867:
  7059  005392  CFF6 FFE9          	movff	tblptrl,fsr0l
  7060  005396  CFF7 FFEA          	movff	tblptrh,fsr0h
  7061  00539A  50EF               	movf	indf0,w,c
  7062  00539C                     u10860:
  7063  00539C  0900               	iorlw	0
  7064  00539E  A4D8               	btfss	status,2,c
  7065  0053A0  D7D5               	goto	l9739
  7066                           
  7067                           ;UART.c: 254: }
  7068                           ;UART.c: 255: UARTstring("\r\n");
  7069  0053A2  0EFB               	movlw	low STR_1
  7070  0053A4  0100               	movlb	0	; () banked
  7071  0053A6  6F73               	movwf	UARTstring@data& (0+255),b
  7072  0053A8  0EFF               	movlw	high STR_1
  7073  0053AA  0100               	movlb	0	; () banked
  7074  0053AC  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  7075  0053AE  EC9B  F02A         	call	_UARTstring	;wreg free
  7076  0053B2  0012               	return		;funcret
  7077  0053B4                     __end_of_UARTstringCRLN:
  7078                           	opt stack 0
  7079                           tblptru	equ	0xFF8
  7080                           tblptrh	equ	0xFF7
  7081                           tblptrl	equ	0xFF6
  7082                           tablat	equ	0xFF5
  7083                           intcon	equ	0xFF2
  7084                           indf0	equ	0xFEF
  7085                           postinc0	equ	0xFEE
  7086                           fsr0h	equ	0xFEA
  7087                           fsr0l	equ	0xFE9
  7088                           wreg	equ	0xFE8
  7089                           postdec1	equ	0xFE5
  7090                           fsr1h	equ	0xFE2
  7091                           fsr1l	equ	0xFE1
  7092                           indf2	equ	0xFDF
  7093                           postinc2	equ	0xFDE
  7094                           fsr2h	equ	0xFDA
  7095                           fsr2l	equ	0xFD9
  7096                           status	equ	0xFD8
  7097                           
  7098 ;; *************** function _UARTcommandMenu *****************
  7099 ;; Defined at:
  7100 ;;		line 263 in file "UART.c"
  7101 ;; Parameters:    Size  Location     Type
  7102 ;;  Command         2   21[BANK0 ] PTR unsigned char 
  7103 ;;		 -> STR_57(4), Conf2_ChannelH_3_OFF_STR(21), Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), 
  7104 ;;		 -> Conf2_ChannelH_2_ON_STR(20), Conf2_ChannelH_1_OFF_STR(21), Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(1
      +9), 
  7105 ;;		 -> Conf2_ChannelD_ON_STR(18), Conf2_ChannelB_OFF_STR(19), Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), 
  7106 ;;		 -> Conf1_ChannelE_STR(15), Conf1_ChannelD_STR(15), 
  7107 ;;  Desc            2   23[BANK0 ] PTR unsigned char 
  7108 ;;		 -> STR_72(32), STR_71(31), STR_70(32), STR_69(31), 
  7109 ;;		 -> STR_68(32), STR_67(31), STR_66(20), STR_65(19), 
  7110 ;;		 -> STR_64(23), STR_63(22), STR_62(19), STR_61(19), 
  7111 ;;		 -> STR_60(19), STR_58(10), 
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;  place           1   31[BANK0 ] unsigned char 
  7114 ;;  i               1   30[BANK0 ] unsigned char 
  7115 ;; Return value:  Size  Location     Type
  7116 ;;		None               void
  7117 ;; Registers used:
  7118 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7124 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7125 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7126 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7127 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7128 ;;Total ram usage:       11 bytes
  7129 ;; Hardware stack levels used:    1
  7130 ;; Hardware stack levels required when called:    8
  7131 ;; This function calls:
  7132 ;;		_UARTchar
  7133 ;;		_UARTstring
  7134 ;; This function is called by:
  7135 ;;		_UseBluetooth
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           	psect	text10
  7140  004314                     __ptext10:
  7141                           	opt stack 0
  7142  004314                     _UARTcommandMenu:
  7143                           	opt stack 21
  7144                           
  7145                           ;UART.c: 265: unsigned char place = 0;
  7146                           
  7147                           ;incstack = 0
  7148  004314  0E00               	movlw	0
  7149  004316  0100               	movlb	0	; () banked
  7150  004318  6F7F               	movwf	UARTcommandMenu@place& (0+255),b
  7151                           
  7152                           ;UART.c: 266: unsigned char i;
  7153                           ;UART.c: 268: while((*Command != 0) && (place < 30))
  7154  00431A  D00E               	goto	l9755
  7155  00431C                     l9749:
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;UART.c: 269: {
  7159                           ;UART.c: 270: UARTchar(*Command);
  7160  00431C  C075  FFF6         	movff	UARTcommandMenu@Command,tblptrl
  7161  004320  C076  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
  7162  004324                     	if	0	;tblptru may be non-zero
  7163  004324                     	endif
  7164  004324                     	if	0	;tblptru may be non-zero
  7165  004324                     	endif
  7166  004324  0008               	tblrd		*
  7167  004326  50F5               	movf	tablat,w,c
  7168  004328  EC26  F02D         	call	_UARTchar
  7169                           
  7170                           ;UART.c: 271: *Command++;
  7171  00432C  0100               	movlb	0	; () banked
  7172  00432E  4B75               	infsnz	UARTcommandMenu@Command& (0+255),f,b
  7173  004330  2B76               	incf	(UARTcommandMenu@Command+1)& (0+255),f,b
  7174                           
  7175                           ; BSR set to: 0
  7176                           ;UART.c: 272: place++;
  7177  004332  0100               	movlb	0	; () banked
  7178  004334  2B7F               	incf	UARTcommandMenu@place& (0+255),f,b
  7179  004336  D000               	goto	l9755
  7180  004338                     l9755:
  7181                           
  7182                           ; BSR set to: 0
  7183  004338  C075  FFF6         	movff	UARTcommandMenu@Command,tblptrl
  7184  00433C  C076  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
  7185  004340                     	if	0	;tblptru may be non-zero
  7186  004340                     	endif
  7187  004340                     	if	0	;tblptru may be non-zero
  7188  004340                     	endif
  7189  004340  0008               	tblrd		*
  7190  004342  50F5               	movf	tablat,w,c
  7191  004344  0900               	iorlw	0
  7192  004346  B4D8               	btfsc	status,2,c
  7193  004348  D005               	goto	l9759
  7194                           
  7195                           ; BSR set to: 0
  7196  00434A  0E1D               	movlw	29
  7197  00434C  0100               	movlb	0	; () banked
  7198  00434E  657F               	cpfsgt	UARTcommandMenu@place& (0+255),b
  7199  004350  D7E5               	goto	l9749
  7200                           
  7201                           ; BSR set to: 0
  7202  004352  D000               	goto	l9759
  7203  004354                     l9759:
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;UART.c: 273: }
  7207                           ;UART.c: 274: for(i =0; i < ((30 - place) + 1); i++)
  7208  004354  0E00               	movlw	0
  7209  004356  0100               	movlb	0	; () banked
  7210  004358  6F7E               	movwf	UARTcommandMenu@i& (0+255),b
  7211  00435A  D006               	goto	l9765
  7212  00435C                     l9761:
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;UART.c: 275: {
  7216                           ;UART.c: 276: UARTchar('-');
  7217  00435C  0E2D               	movlw	45
  7218  00435E  EC26  F02D         	call	_UARTchar
  7219  004362  0100               	movlb	0	; () banked
  7220  004364  2B7E               	incf	UARTcommandMenu@i& (0+255),f,b
  7221  004366  D000               	goto	l9765
  7222  004368                     l9765:
  7223                           
  7224                           ; BSR set to: 0
  7225  004368  0100               	movlb	0	; () banked
  7226  00436A  517F               	movf	UARTcommandMenu@place& (0+255),w,b
  7227  00436C  0100               	movlb	0	; () banked
  7228  00436E  6F79               	movwf	??_UARTcommandMenu& (0+255),b
  7229  004370  6B7A               	clrf	(??_UARTcommandMenu+1)& (0+255),b
  7230  004372  0100               	movlb	0	; () banked
  7231  004374  1F79               	comf	??_UARTcommandMenu& (0+255),f,b
  7232  004376  1F7A               	comf	(??_UARTcommandMenu+1)& (0+255),f,b
  7233  004378  4B79               	infsnz	??_UARTcommandMenu& (0+255),f,b
  7234  00437A  2B7A               	incf	(??_UARTcommandMenu+1)& (0+255),f,b
  7235  00437C  0E1F               	movlw	31
  7236  00437E  0100               	movlb	0	; () banked
  7237  004380  2779               	addwf	??_UARTcommandMenu& (0+255),f,b
  7238  004382  0E00               	movlw	0
  7239  004384  237A               	addwfc	(??_UARTcommandMenu+1)& (0+255),f,b
  7240  004386  0100               	movlb	0	; () banked
  7241  004388  517E               	movf	UARTcommandMenu@i& (0+255),w,b
  7242  00438A  0100               	movlb	0	; () banked
  7243  00438C  6F7B               	movwf	(??_UARTcommandMenu+2)& (0+255),b
  7244  00438E  6B7C               	clrf	(??_UARTcommandMenu+3)& (0+255),b
  7245  004390  0100               	movlb	0	; () banked
  7246  004392  5179               	movf	??_UARTcommandMenu& (0+255),w,b
  7247  004394  0100               	movlb	0	; () banked
  7248  004396  5D7B               	subwf	(??_UARTcommandMenu+2)& (0+255),w,b
  7249  004398  0100               	movlb	0	; () banked
  7250  00439A  517C               	movf	(??_UARTcommandMenu+3)& (0+255),w,b
  7251  00439C  0A80               	xorlw	128
  7252  00439E  0100               	movlb	0	; () banked
  7253  0043A0  6F7D               	movwf	(??_UARTcommandMenu+4)& (0+255),b
  7254  0043A2  0100               	movlb	0	; () banked
  7255  0043A4  517A               	movf	(??_UARTcommandMenu+1)& (0+255),w,b
  7256  0043A6  0A80               	xorlw	128
  7257  0043A8  0100               	movlb	0	; () banked
  7258  0043AA  597D               	subwfb	(??_UARTcommandMenu+4)& (0+255),w,b
  7259  0043AC  A0D8               	btfss	status,0,c
  7260  0043AE  D7D6               	goto	l9761
  7261                           
  7262                           ; BSR set to: 0
  7263                           ;UART.c: 277: }
  7264                           ;UART.c: 278: place = 0;
  7265                           
  7266                           ; BSR set to: 0
  7267  0043B0  0E00               	movlw	0
  7268  0043B2  0100               	movlb	0	; () banked
  7269  0043B4  6F7F               	movwf	UARTcommandMenu@place& (0+255),b
  7270                           
  7271                           ;UART.c: 279: while((*Desc != 0) && (place < 50))
  7272  0043B6  D00E               	goto	l9775
  7273  0043B8                     l9769:
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;UART.c: 280: {
  7277                           ;UART.c: 281: UARTchar(*Desc);
  7278  0043B8  C077  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
  7279  0043BC  C078  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
  7280  0043C0                     	if	0	;tblptru may be non-zero
  7281  0043C0                     	endif
  7282  0043C0                     	if	0	;tblptru may be non-zero
  7283  0043C0                     	endif
  7284  0043C0  0008               	tblrd		*
  7285  0043C2  50F5               	movf	tablat,w,c
  7286  0043C4  EC26  F02D         	call	_UARTchar
  7287                           
  7288                           ;UART.c: 282: *Desc++;
  7289  0043C8  0100               	movlb	0	; () banked
  7290  0043CA  4B77               	infsnz	UARTcommandMenu@Desc& (0+255),f,b
  7291  0043CC  2B78               	incf	(UARTcommandMenu@Desc+1)& (0+255),f,b
  7292                           
  7293                           ; BSR set to: 0
  7294                           ;UART.c: 283: place++;
  7295  0043CE  0100               	movlb	0	; () banked
  7296  0043D0  2B7F               	incf	UARTcommandMenu@place& (0+255),f,b
  7297  0043D2  D000               	goto	l9775
  7298  0043D4                     l9775:
  7299                           
  7300                           ; BSR set to: 0
  7301  0043D4  C077  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
  7302  0043D8  C078  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
  7303  0043DC                     	if	0	;tblptru may be non-zero
  7304  0043DC                     	endif
  7305  0043DC                     	if	0	;tblptru may be non-zero
  7306  0043DC                     	endif
  7307  0043DC  0008               	tblrd		*
  7308  0043DE  50F5               	movf	tablat,w,c
  7309  0043E0  0900               	iorlw	0
  7310  0043E2  B4D8               	btfsc	status,2,c
  7311  0043E4  D005               	goto	l9779
  7312                           
  7313                           ; BSR set to: 0
  7314  0043E6  0E31               	movlw	49
  7315  0043E8  0100               	movlb	0	; () banked
  7316  0043EA  657F               	cpfsgt	UARTcommandMenu@place& (0+255),b
  7317  0043EC  D7E5               	goto	l9769
  7318                           
  7319                           ; BSR set to: 0
  7320  0043EE  D000               	goto	l9779
  7321  0043F0                     l9779:
  7322                           
  7323                           ; BSR set to: 0
  7324                           ;UART.c: 284: }
  7325                           ;UART.c: 285: UARTstring("\r\n");
  7326  0043F0  0EFB               	movlw	low STR_1
  7327  0043F2  0100               	movlb	0	; () banked
  7328  0043F4  6F73               	movwf	UARTstring@data& (0+255),b
  7329  0043F6  0EFF               	movlw	high STR_1
  7330  0043F8  0100               	movlb	0	; () banked
  7331  0043FA  6F74               	movwf	(UARTstring@data+1)& (0+255),b
  7332  0043FC  EC9B  F02A         	call	_UARTstring	;wreg free
  7333  004400  0012               	return		;funcret
  7334  004402                     __end_of_UARTcommandMenu:
  7335                           	opt stack 0
  7336                           tblptru	equ	0xFF8
  7337                           tblptrh	equ	0xFF7
  7338                           tblptrl	equ	0xFF6
  7339                           tablat	equ	0xFF5
  7340                           intcon	equ	0xFF2
  7341                           indf0	equ	0xFEF
  7342                           postinc0	equ	0xFEE
  7343                           fsr0h	equ	0xFEA
  7344                           fsr0l	equ	0xFE9
  7345                           wreg	equ	0xFE8
  7346                           postdec1	equ	0xFE5
  7347                           fsr1h	equ	0xFE2
  7348                           fsr1l	equ	0xFE1
  7349                           indf2	equ	0xFDF
  7350                           postinc2	equ	0xFDE
  7351                           fsr2h	equ	0xFDA
  7352                           fsr2l	equ	0xFD9
  7353                           status	equ	0xFD8
  7354                           
  7355 ;; *************** function _StringMatchCaseInsensitive *****************
  7356 ;; Defined at:
  7357 ;;		line 215 in file "MISC.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;  This            2   21[BANK0 ] PTR unsigned char 
  7360 ;;		 -> ReceivedString(255), 
  7361 ;;  That            2   23[BANK0 ] PTR const unsigned char 
  7362 ;;		 -> Conf2_ChannelH_3_OFF_STR(21), Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), Conf2_ChannelH_2_ON_STR
      +(20), 
  7363 ;;		 -> Conf2_ChannelH_1_OFF_STR(21), Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(19), Conf2_ChannelD_ON_STR(18)
      +, 
  7364 ;;		 -> Conf2_ChannelB_OFF_STR(19), Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), Conf1_ChannelE_STR(15), 
  7365 ;;		 -> Conf1_ChannelD_STR(15), 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;  tempThat        1   26[BANK0 ] unsigned char 
  7368 ;;  tempThis        1   25[BANK0 ] unsigned char 
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  1    wreg      unsigned char 
  7371 ;; Registers used:
  7372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7378 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7379 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7381 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7382 ;;Total ram usage:        6 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; Hardware stack levels required when called:    7
  7385 ;; This function calls:
  7386 ;;		_lowercaseChar
  7387 ;; This function is called by:
  7388 ;;		_UseBluetooth
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           	psect	text11
  7393  004ECC                     __ptext11:
  7394                           	opt stack 0
  7395  004ECC                     _StringMatchCaseInsensitive:
  7396                           	opt stack 22
  7397                           
  7398                           ;MISC.c: 217: unsigned char tempThis,
  7399                           ;MISC.c: 218: tempThat;
  7400                           ;MISC.c: 220: while(*This != 0)
  7401                           
  7402                           ;incstack = 0
  7403  004ECC  D032               	goto	l9477
  7404  004ECE                     l9459:
  7405                           
  7406                           ;MISC.c: 221: {
  7407                           ;MISC.c: 222: tempThis = *This;
  7408  004ECE  C075  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
  7409  004ED2  C076  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
  7410  004ED6  50DF               	movf	indf2,w,c
  7411  004ED8  0100               	movlb	0	; () banked
  7412  004EDA  6F79               	movwf	StringMatchCaseInsensitive@tempThis& (0+255),b
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;MISC.c: 223: tempThat = *That;
  7416  004EDC  C077  FFF6         	movff	StringMatchCaseInsensitive@That,tblptrl
  7417  004EE0  C078  FFF7         	movff	StringMatchCaseInsensitive@That+1,tblptrh
  7418  004EE4                     	if	0	;tblptru may be non-zero
  7419  004EE4                     	endif
  7420  004EE4                     	if	0	;tblptru may be non-zero
  7421  004EE4                     	endif
  7422  004EE4  0008               	tblrd		*
  7423  004EE6  CFF5 F07A          	movff	tablat,StringMatchCaseInsensitive@tempThat
  7424                           
  7425                           ; BSR set to: 0
  7426                           ;MISC.c: 224: lowercaseChar(&tempThis);
  7427  004EEA  0E79               	movlw	low StringMatchCaseInsensitive@tempThis
  7428  004EEC  0100               	movlb	0	; () banked
  7429  004EEE  6F72               	movwf	lowercaseChar@Input& (0+255),b
  7430  004EF0  0E00               	movlw	high StringMatchCaseInsensitive@tempThis
  7431  004EF2  0100               	movlb	0	; () banked
  7432  004EF4  6F73               	movwf	(lowercaseChar@Input+1)& (0+255),b
  7433  004EF6  ECC2  F02C         	call	_lowercaseChar	;wreg free
  7434                           
  7435                           ;MISC.c: 225: lowercaseChar(&tempThat);
  7436  004EFA  0E7A               	movlw	low StringMatchCaseInsensitive@tempThat
  7437  004EFC  0100               	movlb	0	; () banked
  7438  004EFE  6F72               	movwf	lowercaseChar@Input& (0+255),b
  7439  004F00  0E00               	movlw	high StringMatchCaseInsensitive@tempThat
  7440  004F02  0100               	movlb	0	; () banked
  7441  004F04  6F73               	movwf	(lowercaseChar@Input+1)& (0+255),b
  7442  004F06  ECC2  F02C         	call	_lowercaseChar	;wreg free
  7443                           
  7444                           ;MISC.c: 227: if((tempThis != tempThat) || (tempThat == 0))
  7445  004F0A  0100               	movlb	0	; () banked
  7446  004F0C  517A               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
  7447  004F0E  0100               	movlb	0	; () banked
  7448  004F10  1979               	xorwf	StringMatchCaseInsensitive@tempThis& (0+255),w,b
  7449  004F12  A4D8               	btfss	status,2,c
  7450  004F14  D005               	goto	l9471
  7451                           
  7452                           ; BSR set to: 0
  7453  004F16  0100               	movlb	0	; () banked
  7454  004F18  517A               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
  7455  004F1A  0100               	movlb	0	; () banked
  7456  004F1C  A4D8               	btfss	status,2,c
  7457  004F1E  D002               	goto	l9475
  7458  004F20                     l9471:
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;MISC.c: 228: {
  7462                           ;MISC.c: 229: return 0;
  7463  004F20  0E00               	movlw	0
  7464                           
  7465                           ; BSR set to: 0
  7466  004F22  0012               	return	
  7467  004F24                     l9475:
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;MISC.c: 230: }
  7471                           ;MISC.c: 231: This++;
  7472  004F24  0100               	movlb	0	; () banked
  7473  004F26  4B75               	infsnz	StringMatchCaseInsensitive@This& (0+255),f,b
  7474  004F28  2B76               	incf	(StringMatchCaseInsensitive@This+1)& (0+255),f,b
  7475                           
  7476                           ;MISC.c: 232: That++;
  7477  004F2A  0100               	movlb	0	; () banked
  7478  004F2C  4B77               	infsnz	StringMatchCaseInsensitive@That& (0+255),f,b
  7479  004F2E  2B78               	incf	(StringMatchCaseInsensitive@That+1)& (0+255),f,b
  7480  004F30  D000               	goto	l9477
  7481  004F32                     l9477:
  7482  004F32  C075  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
  7483  004F36  C076  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
  7484  004F3A  50DF               	movf	indf2,w,c
  7485  004F3C  A4D8               	btfss	status,2,c
  7486  004F3E  D7C7               	goto	l9459
  7487                           
  7488                           ;MISC.c: 233: }
  7489                           ;MISC.c: 234: if(*That == 0)
  7490  004F40  C077  FFF6         	movff	StringMatchCaseInsensitive@That,tblptrl
  7491  004F44  C078  FFF7         	movff	StringMatchCaseInsensitive@That+1,tblptrh
  7492  004F48                     	if	0	;tblptru may be non-zero
  7493  004F48                     	endif
  7494  004F48                     	if	0	;tblptru may be non-zero
  7495  004F48                     	endif
  7496  004F48  0008               	tblrd		*
  7497  004F4A  50F5               	movf	tablat,w,c
  7498  004F4C  0900               	iorlw	0
  7499  004F4E  A4D8               	btfss	status,2,c
  7500  004F50  D002               	goto	l9487
  7501                           
  7502                           ;MISC.c: 235: {
  7503                           ;MISC.c: 236: return 1;
  7504  004F52  0E01               	movlw	1
  7505                           
  7506                           ;MISC.c: 237: }
  7507  004F54  0012               	return	
  7508  004F56                     l9487:
  7509                           
  7510                           ;MISC.c: 238: else
  7511                           ;MISC.c: 239: {
  7512                           ;MISC.c: 240: return 0;
  7513  004F56  0E00               	movlw	0
  7514  004F58  0012               	return	
  7515  004F5A  0012               	return		;funcret
  7516  004F5C                     __end_of_StringMatchCaseInsensitive:
  7517                           	opt stack 0
  7518                           tblptru	equ	0xFF8
  7519                           tblptrh	equ	0xFF7
  7520                           tblptrl	equ	0xFF6
  7521                           tablat	equ	0xFF5
  7522                           intcon	equ	0xFF2
  7523                           indf0	equ	0xFEF
  7524                           postinc0	equ	0xFEE
  7525                           fsr0h	equ	0xFEA
  7526                           fsr0l	equ	0xFE9
  7527                           wreg	equ	0xFE8
  7528                           postdec1	equ	0xFE5
  7529                           fsr1h	equ	0xFE2
  7530                           fsr1l	equ	0xFE1
  7531                           indf2	equ	0xFDF
  7532                           postinc2	equ	0xFDE
  7533                           fsr2h	equ	0xFDA
  7534                           fsr2l	equ	0xFD9
  7535                           status	equ	0xFD8
  7536                           
  7537 ;; *************** function _StringMatch *****************
  7538 ;; Defined at:
  7539 ;;		line 188 in file "MISC.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;  This            2   18[BANK0 ] PTR unsigned char 
  7542 ;;		 -> ReceivedString(255), 
  7543 ;;  That            2   20[BANK0 ] PTR const unsigned char 
  7544 ;;		 -> STR_54(4), 
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;		None
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  1    wreg      unsigned char 
  7549 ;; Registers used:
  7550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7556 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7558 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7559 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7560 ;;Total ram usage:        5 bytes
  7561 ;; Hardware stack levels used:    1
  7562 ;; Hardware stack levels required when called:    6
  7563 ;; This function calls:
  7564 ;;		Nothing
  7565 ;; This function is called by:
  7566 ;;		_UseBluetooth
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           	psect	text12
  7571  00526C                     __ptext12:
  7572                           	opt stack 0
  7573  00526C                     _StringMatch:
  7574                           	opt stack 23
  7575                           
  7576                           ;MISC.c: 190: while(*This != 0)
  7577                           
  7578                           ;incstack = 0
  7579  00526C  D023               	goto	l9443
  7580  00526E                     l9433:
  7581                           
  7582                           ;MISC.c: 191: {
  7583                           ;MISC.c: 192: if(*This != *That || *That == 0)
  7584  00526E  C072  FFD9         	movff	StringMatch@This,fsr2l
  7585  005272  C073  FFDA         	movff	StringMatch@This+1,fsr2h
  7586  005276  50DF               	movf	indf2,w,c
  7587  005278  0100               	movlb	0	; () banked
  7588  00527A  6F76               	movwf	??_StringMatch& (0+255),b
  7589  00527C  C074  FFF6         	movff	StringMatch@That,tblptrl
  7590  005280  C075  FFF7         	movff	StringMatch@That+1,tblptrh
  7591  005284                     	if	0	;tblptru may be non-zero
  7592  005284                     	endif
  7593  005284                     	if	0	;tblptru may be non-zero
  7594  005284                     	endif
  7595  005284  0008               	tblrd		*
  7596  005286  50F5               	movf	tablat,w,c
  7597  005288  0100               	movlb	0	; () banked
  7598  00528A  1976               	xorwf	??_StringMatch& (0+255),w,b
  7599  00528C  A4D8               	btfss	status,2,c
  7600  00528E  D009               	goto	l9437
  7601                           
  7602                           ; BSR set to: 0
  7603  005290  C074  FFF6         	movff	StringMatch@That,tblptrl
  7604  005294  C075  FFF7         	movff	StringMatch@That+1,tblptrh
  7605  005298                     	if	0	;tblptru may be non-zero
  7606  005298                     	endif
  7607  005298                     	if	0	;tblptru may be non-zero
  7608  005298                     	endif
  7609  005298  0008               	tblrd		*
  7610  00529A  50F5               	movf	tablat,w,c
  7611  00529C  0900               	iorlw	0
  7612  00529E  A4D8               	btfss	status,2,c
  7613  0052A0  D002               	goto	l9441
  7614  0052A2                     l9437:
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;MISC.c: 193: {
  7618                           ;MISC.c: 194: return 0;
  7619  0052A2  0E00               	movlw	0
  7620                           
  7621                           ; BSR set to: 0
  7622  0052A4  0012               	return	
  7623  0052A6                     l9441:
  7624                           
  7625                           ; BSR set to: 0
  7626                           ;MISC.c: 195: }
  7627                           ;MISC.c: 196: This++;
  7628  0052A6  0100               	movlb	0	; () banked
  7629  0052A8  4B72               	infsnz	StringMatch@This& (0+255),f,b
  7630  0052AA  2B73               	incf	(StringMatch@This+1)& (0+255),f,b
  7631                           
  7632                           ;MISC.c: 197: That++;
  7633  0052AC  0100               	movlb	0	; () banked
  7634  0052AE  4B74               	infsnz	StringMatch@That& (0+255),f,b
  7635  0052B0  2B75               	incf	(StringMatch@That+1)& (0+255),f,b
  7636  0052B2  D000               	goto	l9443
  7637  0052B4                     l9443:
  7638  0052B4  C072  FFD9         	movff	StringMatch@This,fsr2l
  7639  0052B8  C073  FFDA         	movff	StringMatch@This+1,fsr2h
  7640  0052BC  50DF               	movf	indf2,w,c
  7641  0052BE  A4D8               	btfss	status,2,c
  7642  0052C0  D7D6               	goto	l9433
  7643                           
  7644                           ;MISC.c: 198: }
  7645                           ;MISC.c: 199: if(*That == 0)
  7646  0052C2  C074  FFF6         	movff	StringMatch@That,tblptrl
  7647  0052C6  C075  FFF7         	movff	StringMatch@That+1,tblptrh
  7648  0052CA                     	if	0	;tblptru may be non-zero
  7649  0052CA                     	endif
  7650  0052CA                     	if	0	;tblptru may be non-zero
  7651  0052CA                     	endif
  7652  0052CA  0008               	tblrd		*
  7653  0052CC  50F5               	movf	tablat,w,c
  7654  0052CE  0900               	iorlw	0
  7655  0052D0  A4D8               	btfss	status,2,c
  7656  0052D2  D002               	goto	l9453
  7657                           
  7658                           ;MISC.c: 200: {
  7659                           ;MISC.c: 201: return 1;
  7660  0052D4  0E01               	movlw	1
  7661                           
  7662                           ;MISC.c: 202: }
  7663  0052D6  0012               	return	
  7664  0052D8                     l9453:
  7665                           
  7666                           ;MISC.c: 203: else
  7667                           ;MISC.c: 204: {
  7668                           ;MISC.c: 205: return 0;
  7669  0052D8  0E00               	movlw	0
  7670  0052DA  0012               	return	
  7671  0052DC  0012               	return		;funcret
  7672  0052DE                     __end_of_StringMatch:
  7673                           	opt stack 0
  7674                           tblptru	equ	0xFF8
  7675                           tblptrh	equ	0xFF7
  7676                           tblptrl	equ	0xFF6
  7677                           tablat	equ	0xFF5
  7678                           intcon	equ	0xFF2
  7679                           indf0	equ	0xFEF
  7680                           postinc0	equ	0xFEE
  7681                           fsr0h	equ	0xFEA
  7682                           fsr0l	equ	0xFE9
  7683                           wreg	equ	0xFE8
  7684                           postdec1	equ	0xFE5
  7685                           fsr1h	equ	0xFE2
  7686                           fsr1l	equ	0xFE1
  7687                           indf2	equ	0xFDF
  7688                           postinc2	equ	0xFDE
  7689                           fsr2h	equ	0xFDA
  7690                           fsr2l	equ	0xFD9
  7691                           status	equ	0xFD8
  7692                           
  7693 ;; *************** function _StringContainsCaseInsensitive *****************
  7694 ;; Defined at:
  7695 ;;		line 287 in file "MISC.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;  This            2   21[BANK0 ] PTR unsigned char 
  7698 ;;		 -> ReceivedString(255), 
  7699 ;;  That            2   23[BANK0 ] PTR const unsigned char 
  7700 ;;		 -> STR_44(13), STR_26(4), STR_24(6), STR_22(6), 
  7701 ;; Auto vars:     Size  Location     Type
  7702 ;;  tempThat        1   27[BANK0 ] unsigned char 
  7703 ;;  tempThis        1   26[BANK0 ] unsigned char 
  7704 ;;  begin           1   25[BANK0 ] unsigned char 
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  1    wreg      unsigned char 
  7707 ;; Registers used:
  7708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7714 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7715 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7717 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7718 ;;Total ram usage:        7 bytes
  7719 ;; Hardware stack levels used:    1
  7720 ;; Hardware stack levels required when called:    7
  7721 ;; This function calls:
  7722 ;;		_lowercaseChar
  7723 ;; This function is called by:
  7724 ;;		_UseBluetooth
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728                           	psect	text13
  7729  004B9A                     __ptext13:
  7730                           	opt stack 0
  7731  004B9A                     _StringContainsCaseInsensitive:
  7732                           	opt stack 22
  7733                           
  7734                           ;MISC.c: 289: unsigned char tempThis,
  7735                           ;MISC.c: 290: tempThat;
  7736                           ;MISC.c: 291: unsigned char begin = 0;
  7737                           
  7738                           ;incstack = 0
  7739  004B9A  0E00               	movlw	0
  7740  004B9C  0100               	movlb	0	; () banked
  7741  004B9E  6F79               	movwf	StringContainsCaseInsensitive@begin& (0+255),b
  7742                           
  7743                           ;MISC.c: 293: while(*This != 0)
  7744  004BA0  D048               	goto	l9527
  7745  004BA2                     l9493:
  7746                           
  7747                           ; BSR set to: 0
  7748                           ;MISC.c: 294: {
  7749                           ;MISC.c: 295: tempThis = *This;
  7750  004BA2  C075  FFD9         	movff	StringContainsCaseInsensitive@This,fsr2l
  7751  004BA6  C076  FFDA         	movff	StringContainsCaseInsensitive@This+1,fsr2h
  7752  004BAA  50DF               	movf	indf2,w,c
  7753  004BAC  0100               	movlb	0	; () banked
  7754  004BAE  6F7A               	movwf	StringContainsCaseInsensitive@tempThis& (0+255),b
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;MISC.c: 296: tempThat = *That;
  7758  004BB0  C077  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
  7759  004BB4  C078  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
  7760  004BB8                     	if	0	;tblptru may be non-zero
  7761  004BB8                     	endif
  7762  004BB8                     	if	0	;tblptru may be non-zero
  7763  004BB8                     	endif
  7764  004BB8  0008               	tblrd		*
  7765  004BBA  CFF5 F07B          	movff	tablat,StringContainsCaseInsensitive@tempThat
  7766                           
  7767                           ; BSR set to: 0
  7768                           ;MISC.c: 297: lowercaseChar(&tempThis);
  7769  004BBE  0E7A               	movlw	low StringContainsCaseInsensitive@tempThis
  7770  004BC0  0100               	movlb	0	; () banked
  7771  004BC2  6F72               	movwf	lowercaseChar@Input& (0+255),b
  7772  004BC4  0E00               	movlw	high StringContainsCaseInsensitive@tempThis
  7773  004BC6  0100               	movlb	0	; () banked
  7774  004BC8  6F73               	movwf	(lowercaseChar@Input+1)& (0+255),b
  7775  004BCA  ECC2  F02C         	call	_lowercaseChar	;wreg free
  7776                           
  7777                           ;MISC.c: 298: lowercaseChar(&tempThat);
  7778  004BCE  0E7B               	movlw	low StringContainsCaseInsensitive@tempThat
  7779  004BD0  0100               	movlb	0	; () banked
  7780  004BD2  6F72               	movwf	lowercaseChar@Input& (0+255),b
  7781  004BD4  0E00               	movlw	high StringContainsCaseInsensitive@tempThat
  7782  004BD6  0100               	movlb	0	; () banked
  7783  004BD8  6F73               	movwf	(lowercaseChar@Input+1)& (0+255),b
  7784  004BDA  ECC2  F02C         	call	_lowercaseChar	;wreg free
  7785                           
  7786                           ;MISC.c: 300: if(tempThis == tempThat)
  7787  004BDE  0100               	movlb	0	; () banked
  7788  004BE0  517B               	movf	StringContainsCaseInsensitive@tempThat& (0+255),w,b
  7789  004BE2  0100               	movlb	0	; () banked
  7790  004BE4  197A               	xorwf	StringContainsCaseInsensitive@tempThis& (0+255),w,b
  7791  004BE6  A4D8               	btfss	status,2,c
  7792  004BE8  D01B               	goto	l9519
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;MISC.c: 301: {
  7796                           ;MISC.c: 302: begin = 1;
  7797  004BEA  0E01               	movlw	1
  7798  004BEC  0100               	movlb	0	; () banked
  7799  004BEE  6F79               	movwf	StringContainsCaseInsensitive@begin& (0+255),b
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;MISC.c: 303: That++;
  7803  004BF0  0100               	movlb	0	; () banked
  7804  004BF2  4B77               	infsnz	StringContainsCaseInsensitive@That& (0+255),f,b
  7805  004BF4  2B78               	incf	(StringContainsCaseInsensitive@That+1)& (0+255),f,b
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;MISC.c: 304: if(*That == 0)
  7809  004BF6  C077  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
  7810  004BFA  C078  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
  7811  004BFE                     	if	0	;tblptru may be non-zero
  7812  004BFE                     	endif
  7813  004BFE                     	if	0	;tblptru may be non-zero
  7814  004BFE                     	endif
  7815  004BFE  0008               	tblrd		*
  7816  004C00  50F5               	movf	tablat,w,c
  7817  004C02  0900               	iorlw	0
  7818  004C04  A4D8               	btfss	status,2,c
  7819  004C06  D002               	goto	l9513
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;MISC.c: 305: {
  7823                           ;MISC.c: 306: return 1;
  7824  004C08  0E01               	movlw	1
  7825                           
  7826                           ; BSR set to: 0
  7827  004C0A  0012               	return	
  7828  004C0C                     l9513:
  7829                           
  7830                           ; BSR set to: 0
  7831                           ;MISC.c: 307: }
  7832                           ;MISC.c: 308: if(*This == 0)
  7833  004C0C  C075  FFD9         	movff	StringContainsCaseInsensitive@This,fsr2l
  7834  004C10  C076  FFDA         	movff	StringContainsCaseInsensitive@This+1,fsr2h
  7835  004C14  50DF               	movf	indf2,w,c
  7836  004C16  A4D8               	btfss	status,2,c
  7837  004C18  D008               	goto	l9525
  7838                           
  7839                           ; BSR set to: 0
  7840                           ;MISC.c: 309: {
  7841                           ;MISC.c: 310: return 0;
  7842  004C1A  0E00               	movlw	0
  7843                           
  7844                           ; BSR set to: 0
  7845  004C1C  0012               	return	
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;MISC.c: 311: }
  7849                           ;MISC.c: 312: }
  7850  004C1E  D005               	goto	l9525
  7851  004C20                     l9519:
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;MISC.c: 313: else
  7855                           ;MISC.c: 314: {
  7856                           ;MISC.c: 315: if(begin == 1)
  7857  004C20  0100               	movlb	0	; () banked
  7858  004C22  0579               	decf	StringContainsCaseInsensitive@begin& (0+255),w,b
  7859  004C24  D7F8               	goto	L1
  7860                           
  7861                           ; BSR set to: 0
  7862                           
  7863                           ; BSR set to: 0
  7864                           ;MISC.c: 316: {
  7865                           ;MISC.c: 317: return 0;
  7866  004C26  0012               	return	
  7867                           
  7868                           ; BSR set to: 0
  7869  004C28  D000               	goto	l9525
  7870  004C2A                     l9525:
  7871                           
  7872                           ; BSR set to: 0
  7873                           ;MISC.c: 318: }
  7874                           ;MISC.c: 319: }
  7875                           ;MISC.c: 320: This++;
  7876  004C2A  0100               	movlb	0	; () banked
  7877  004C2C  4B75               	infsnz	StringContainsCaseInsensitive@This& (0+255),f,b
  7878  004C2E  2B76               	incf	(StringContainsCaseInsensitive@This+1)& (0+255),f,b
  7879  004C30  D000               	goto	l9527
  7880  004C32                     l9527:
  7881                           
  7882                           ; BSR set to: 0
  7883  004C32  C075  FFD9         	movff	StringContainsCaseInsensitive@This,fsr2l
  7884  004C36  C076  FFDA         	movff	StringContainsCaseInsensitive@This+1,fsr2h
  7885  004C3A  50DF               	movf	indf2,w,c
  7886  004C3C  A4D8               	btfss	status,2,c
  7887  004C3E  D7B1               	goto	l9493
  7888                           
  7889                           ; BSR set to: 0
  7890                           ;MISC.c: 321: }
  7891                           ;MISC.c: 322: return 0;
  7892                           
  7893                           ; BSR set to: 0
  7894  004C40  0E00               	movlw	0
  7895  004C42  0012               	return	
  7896                           
  7897                           ; BSR set to: 0
  7898                           
  7899                           ; BSR set to: 0
  7900  004C44  0012               	return		;funcret
  7901  004C46                     __end_of_StringContainsCaseInsensitive:
  7902                           	opt stack 0
  7903                           tblptru	equ	0xFF8
  7904                           tblptrh	equ	0xFF7
  7905                           tblptrl	equ	0xFF6
  7906                           tablat	equ	0xFF5
  7907                           intcon	equ	0xFF2
  7908                           indf0	equ	0xFEF
  7909                           postinc0	equ	0xFEE
  7910                           fsr0h	equ	0xFEA
  7911                           fsr0l	equ	0xFE9
  7912                           wreg	equ	0xFE8
  7913                           postdec1	equ	0xFE5
  7914                           fsr1h	equ	0xFE2
  7915                           fsr1l	equ	0xFE1
  7916                           indf2	equ	0xFDF
  7917                           postinc2	equ	0xFDE
  7918                           fsr2h	equ	0xFDA
  7919                           fsr2l	equ	0xFD9
  7920                           status	equ	0xFD8
  7921                           
  7922 ;; *************** function _StringAddEqual *****************
  7923 ;; Defined at:
  7924 ;;		line 579 in file "MISC.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;  Input           2   33[BANK0 ] PTR unsigned char 
  7927 ;;		 -> ReceivedString(255), 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  temp          100    0[BANK1 ] unsigned char [100]
  7930 ;;  j               1  102[BANK1 ] unsigned char 
  7931 ;;  i               1  101[BANK1 ] unsigned char 
  7932 ;;  firstnumber     1  100[BANK1 ] unsigned char 
  7933 ;; Return value:  Size  Location     Type
  7934 ;;                  1    wreg      unsigned char 
  7935 ;; Registers used:
  7936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7937 ;; Tracked objects:
  7938 ;;		On entry : 0/0
  7939 ;;		On exit  : 0/0
  7940 ;;		Unchanged: 0/0
  7941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7942 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7943 ;;      Locals:         0       0     103       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7944 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7945 ;;      Totals:         0       4     103       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7946 ;;Total ram usage:      107 bytes
  7947 ;; Hardware stack levels used:    1
  7948 ;; Hardware stack levels required when called:    8
  7949 ;; This function calls:
  7950 ;;		_BufferCopy
  7951 ;;		_cleanBuffer
  7952 ;; This function is called by:
  7953 ;;		_UseBluetooth
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956                           
  7957                           	psect	text14
  7958  003630                     __ptext14:
  7959                           	opt stack 0
  7960  003630                     _StringAddEqual:
  7961                           	opt stack 21
  7962                           
  7963                           ;MISC.c: 581: unsigned char i =0;
  7964                           
  7965                           ; BSR set to: 0
  7966                           ;incstack = 0
  7967  003630  0E00               	movlw	0
  7968  003632  0101               	movlb	1	; () banked
  7969  003634  6F65               	movwf	StringAddEqual@i& (0+255),b
  7970                           
  7971                           ;MISC.c: 582: unsigned char j =0;
  7972  003636  0E00               	movlw	0
  7973  003638  0101               	movlb	1	; () banked
  7974  00363A  6F66               	movwf	StringAddEqual@j& (0+255),b
  7975                           
  7976                           ;MISC.c: 583: unsigned char firstnumber = 200;
  7977  00363C  0EC8               	movlw	200
  7978  00363E  0101               	movlb	1	; () banked
  7979  003640  6F64               	movwf	StringAddEqual@firstnumber& (0+255),b
  7980                           
  7981                           ; BSR set to: 1
  7982                           ;MISC.c: 584: unsigned char temp[100];
  7983                           ;MISC.c: 585: cleanBuffer(temp,100);
  7984  003642  0E00               	movlw	low StringAddEqual@temp
  7985  003644  0100               	movlb	0	; () banked
  7986  003646  6F72               	movwf	cleanBuffer@data& (0+255),b
  7987  003648  0E01               	movlw	high StringAddEqual@temp
  7988  00364A  0100               	movlb	0	; () banked
  7989  00364C  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
  7990  00364E  0E00               	movlw	0
  7991  003650  0100               	movlb	0	; () banked
  7992  003652  6F75               	movwf	(cleanBuffer@count+1)& (0+255),b
  7993  003654  0E64               	movlw	100
  7994  003656  6F74               	movwf	cleanBuffer@count& (0+255),b
  7995  003658  EC6E  F02A         	call	_cleanBuffer	;wreg free
  7996                           
  7997                           ;MISC.c: 586: while(Input[i] != 0)
  7998  00365C  D032               	goto	l9697
  7999  00365E                     l9689:
  8000                           
  8001                           ;MISC.c: 587: {
  8002                           ;MISC.c: 588: if((Input[i] >= 48) && (Input[i] <= 57) || (Input[i] == '-'))
  8003  00365E  0101               	movlb	1	; () banked
  8004  003660  5165               	movf	StringAddEqual@i& (0+255),w,b
  8005  003662  0D01               	mullw	1
  8006  003664  50F3               	movf	prodl,w,c
  8007  003666  0100               	movlb	0	; () banked
  8008  003668  2581               	addwf	StringAddEqual@Input& (0+255),w,b
  8009  00366A  6ED9               	movwf	fsr2l,c
  8010  00366C  50F4               	movf	prodh,w,c
  8011  00366E  0100               	movlb	0	; () banked
  8012  003670  2182               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
  8013  003672  6EDA               	movwf	fsr2h,c
  8014  003674  0E2F               	movlw	47
  8015  003676  64DF               	cpfsgt	indf2,c
  8016  003678  D00F               	goto	l9693
  8017                           
  8018                           ; BSR set to: 0
  8019  00367A  0101               	movlb	1	; () banked
  8020  00367C  5165               	movf	StringAddEqual@i& (0+255),w,b
  8021  00367E  0D01               	mullw	1
  8022  003680  50F3               	movf	prodl,w,c
  8023  003682  0100               	movlb	0	; () banked
  8024  003684  2581               	addwf	StringAddEqual@Input& (0+255),w,b
  8025  003686  6ED9               	movwf	fsr2l,c
  8026  003688  50F4               	movf	prodh,w,c
  8027  00368A  0100               	movlb	0	; () banked
  8028  00368C  2182               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
  8029  00368E  6EDA               	movwf	fsr2h,c
  8030  003690  0E39               	movlw	57
  8031  003692  64DF               	cpfsgt	indf2,c
  8032  003694  D010               	goto	l316
  8033  003696  D000               	goto	l9693
  8034  003698                     l9693:
  8035                           
  8036                           ; BSR set to: 0
  8037  003698  0101               	movlb	1	; () banked
  8038  00369A  5165               	movf	StringAddEqual@i& (0+255),w,b
  8039  00369C  0D01               	mullw	1
  8040  00369E  50F3               	movf	prodl,w,c
  8041  0036A0  0100               	movlb	0	; () banked
  8042  0036A2  2581               	addwf	StringAddEqual@Input& (0+255),w,b
  8043  0036A4  6ED9               	movwf	fsr2l,c
  8044  0036A6  50F4               	movf	prodh,w,c
  8045  0036A8  0100               	movlb	0	; () banked
  8046  0036AA  2182               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
  8047  0036AC  6EDA               	movwf	fsr2h,c
  8048  0036AE  0E2D               	movlw	45
  8049  0036B0  18DE               	xorwf	postinc2,w,c
  8050  0036B2  A4D8               	btfss	status,2,c
  8051  0036B4  D003               	goto	l9695
  8052  0036B6                     l316:
  8053                           
  8054                           ; BSR set to: 0
  8055                           ;MISC.c: 589: {
  8056                           ;MISC.c: 590: firstnumber = i;
  8057  0036B6  C165  F164         	movff	StringAddEqual@i,StringAddEqual@firstnumber
  8058                           
  8059                           ;MISC.c: 591: break;
  8060  0036BA  D011               	goto	l9699
  8061  0036BC                     l9695:
  8062                           
  8063                           ; BSR set to: 0
  8064                           ;MISC.c: 592: }
  8065                           ;MISC.c: 593: i++;
  8066  0036BC  0101               	movlb	1	; () banked
  8067  0036BE  2B65               	incf	StringAddEqual@i& (0+255),f,b
  8068  0036C0  D000               	goto	l9697
  8069  0036C2                     l9697:
  8070  0036C2  0101               	movlb	1	; () banked
  8071  0036C4  5165               	movf	StringAddEqual@i& (0+255),w,b
  8072  0036C6  0D01               	mullw	1
  8073  0036C8  50F3               	movf	prodl,w,c
  8074  0036CA  0100               	movlb	0	; () banked
  8075  0036CC  2581               	addwf	StringAddEqual@Input& (0+255),w,b
  8076  0036CE  6ED9               	movwf	fsr2l,c
  8077  0036D0  50F4               	movf	prodh,w,c
  8078  0036D2  0100               	movlb	0	; () banked
  8079  0036D4  2182               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
  8080  0036D6  6EDA               	movwf	fsr2h,c
  8081  0036D8  50DF               	movf	indf2,w,c
  8082  0036DA  A4D8               	btfss	status,2,c
  8083  0036DC  D7C0               	goto	l9689
  8084  0036DE                     l9699:
  8085                           
  8086                           ; BSR set to: 0
  8087                           ;MISC.c: 594: }
  8088                           ;MISC.c: 595: if(firstnumber > 99)
  8089  0036DE  0E63               	movlw	99
  8090  0036E0  0101               	movlb	1	; () banked
  8091  0036E2  6564               	cpfsgt	StringAddEqual@firstnumber& (0+255),b
  8092  0036E4  D002               	goto	l9705
  8093                           
  8094                           ; BSR set to: 1
  8095                           ;MISC.c: 596: {
  8096                           ;MISC.c: 598: return 0;
  8097  0036E6  0E00               	movlw	0
  8098                           
  8099                           ; BSR set to: 1
  8100  0036E8  0012               	return	
  8101  0036EA                     l9705:
  8102                           
  8103                           ; BSR set to: 1
  8104                           ;MISC.c: 599: }
  8105                           ;MISC.c: 600: for(j=0;j<firstnumber;j++)
  8106  0036EA  0E00               	movlw	0
  8107  0036EC  0101               	movlb	1	; () banked
  8108  0036EE  6F66               	movwf	StringAddEqual@j& (0+255),b
  8109  0036F0  D019               	goto	l9711
  8110  0036F2                     l9707:
  8111                           
  8112                           ; BSR set to: 1
  8113                           ;MISC.c: 601: {
  8114                           ;MISC.c: 602: temp[j] = Input[j];
  8115  0036F2  0101               	movlb	1	; () banked
  8116  0036F4  5166               	movf	StringAddEqual@j& (0+255),w,b
  8117  0036F6  0D01               	mullw	1
  8118  0036F8  50F3               	movf	prodl,w,c
  8119  0036FA  0100               	movlb	0	; () banked
  8120  0036FC  2581               	addwf	StringAddEqual@Input& (0+255),w,b
  8121  0036FE  6ED9               	movwf	fsr2l,c
  8122  003700  50F4               	movf	prodh,w,c
  8123  003702  0100               	movlb	0	; () banked
  8124  003704  2182               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
  8125  003706  6EDA               	movwf	fsr2h,c
  8126  003708  0101               	movlb	1	; () banked
  8127  00370A  5166               	movf	StringAddEqual@j& (0+255),w,b
  8128  00370C  0D01               	mullw	1
  8129  00370E  0E00               	movlw	low StringAddEqual@temp
  8130  003710  24F3               	addwf	prodl,w,c
  8131  003712  6EE1               	movwf	fsr1l,c
  8132  003714  0E01               	movlw	high StringAddEqual@temp
  8133  003716  20F4               	addwfc	prodh,w,c
  8134  003718  6EE2               	movwf	fsr1h,c
  8135  00371A  CFDF FFE7          	movff	indf2,indf1
  8136                           
  8137                           ; BSR set to: 1
  8138  00371E  0101               	movlb	1	; () banked
  8139  003720  2B66               	incf	StringAddEqual@j& (0+255),f,b
  8140  003722  D000               	goto	l9711
  8141  003724                     l9711:
  8142                           
  8143                           ; BSR set to: 1
  8144  003724  0101               	movlb	1	; () banked
  8145  003726  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
  8146  003728  0101               	movlb	1	; () banked
  8147  00372A  5D66               	subwf	StringAddEqual@j& (0+255),w,b
  8148  00372C  A0D8               	btfss	status,0,c
  8149  00372E  D7E1               	goto	l9707
  8150                           
  8151                           ; BSR set to: 1
  8152                           ;MISC.c: 603: }
  8153                           ;MISC.c: 604: temp[firstnumber] = '=';
  8154                           
  8155                           ; BSR set to: 1
  8156  003730  0101               	movlb	1	; () banked
  8157  003732  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
  8158  003734  0D01               	mullw	1
  8159  003736  0E00               	movlw	low StringAddEqual@temp
  8160  003738  24F3               	addwf	prodl,w,c
  8161  00373A  6ED9               	movwf	fsr2l,c
  8162  00373C  0E01               	movlw	high StringAddEqual@temp
  8163  00373E  20F4               	addwfc	prodh,w,c
  8164  003740  6EDA               	movwf	fsr2h,c
  8165  003742  0E3D               	movlw	61
  8166  003744  6EDF               	movwf	indf2,c
  8167                           
  8168                           ; BSR set to: 1
  8169                           ;MISC.c: 605: for(j = (firstnumber);j<99;j++)
  8170  003746  C164  F166         	movff	StringAddEqual@firstnumber,StringAddEqual@j
  8171  00374A                     l9717:
  8172                           
  8173                           ; BSR set to: 1
  8174  00374A  0E62               	movlw	98
  8175  00374C  0101               	movlb	1	; () banked
  8176  00374E  6566               	cpfsgt	StringAddEqual@j& (0+255),b
  8177  003750  D001               	goto	l9721
  8178                           
  8179                           ; BSR set to: 1
  8180  003752  D032               	goto	l9731
  8181  003754                     l9721:
  8182                           
  8183                           ; BSR set to: 1
  8184                           ;MISC.c: 606: {
  8185                           ;MISC.c: 607: temp[j+1] = Input[j];
  8186  003754  0101               	movlb	1	; () banked
  8187  003756  5166               	movf	StringAddEqual@j& (0+255),w,b
  8188  003758  0D01               	mullw	1
  8189  00375A  50F3               	movf	prodl,w,c
  8190  00375C  0100               	movlb	0	; () banked
  8191  00375E  2581               	addwf	StringAddEqual@Input& (0+255),w,b
  8192  003760  6ED9               	movwf	fsr2l,c
  8193  003762  50F4               	movf	prodh,w,c
  8194  003764  0100               	movlb	0	; () banked
  8195  003766  2182               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
  8196  003768  6EDA               	movwf	fsr2h,c
  8197  00376A  0101               	movlb	1	; () banked
  8198  00376C  5166               	movf	StringAddEqual@j& (0+255),w,b
  8199  00376E  0100               	movlb	0	; () banked
  8200  003770  6F83               	movwf	??_StringAddEqual& (0+255),b
  8201  003772  6B84               	clrf	(??_StringAddEqual+1)& (0+255),b
  8202  003774  0E01               	movlw	1
  8203  003776  0100               	movlb	0	; () banked
  8204  003778  2783               	addwf	??_StringAddEqual& (0+255),f,b
  8205  00377A  0E00               	movlw	0
  8206  00377C  2384               	addwfc	(??_StringAddEqual+1)& (0+255),f,b
  8207  00377E  0E00               	movlw	low StringAddEqual@temp
  8208  003780  0100               	movlb	0	; () banked
  8209  003782  2583               	addwf	??_StringAddEqual& (0+255),w,b
  8210  003784  6EE1               	movwf	fsr1l,c
  8211  003786  0E01               	movlw	high StringAddEqual@temp
  8212  003788  0100               	movlb	0	; () banked
  8213  00378A  2184               	addwfc	(??_StringAddEqual+1)& (0+255),w,b
  8214  00378C  6EE2               	movwf	fsr1h,c
  8215  00378E  CFDF FFE7          	movff	indf2,indf1
  8216                           
  8217                           ; BSR set to: 0
  8218                           ;MISC.c: 608: if(Input[j] ==0)
  8219  003792  0101               	movlb	1	; () banked
  8220  003794  5166               	movf	StringAddEqual@j& (0+255),w,b
  8221  003796  0D01               	mullw	1
  8222  003798  50F3               	movf	prodl,w,c
  8223  00379A  0100               	movlb	0	; () banked
  8224  00379C  2581               	addwf	StringAddEqual@Input& (0+255),w,b
  8225  00379E  6ED9               	movwf	fsr2l,c
  8226  0037A0  50F4               	movf	prodh,w,c
  8227  0037A2  0100               	movlb	0	; () banked
  8228  0037A4  2182               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
  8229  0037A6  6EDA               	movwf	fsr2h,c
  8230  0037A8  50DF               	movf	indf2,w,c
  8231  0037AA  B4D8               	btfsc	status,2,c
  8232  0037AC  D005               	goto	l9731
  8233  0037AE  D001               	goto	l9727
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;MISC.c: 609: {
  8237                           ;MISC.c: 610: break;
  8238  0037B0  D003               	goto	l9731
  8239  0037B2                     l9727:
  8240                           
  8241                           ; BSR set to: 0
  8242  0037B2  0101               	movlb	1	; () banked
  8243  0037B4  2B66               	incf	StringAddEqual@j& (0+255),f,b
  8244  0037B6  D7C9               	goto	l9717
  8245  0037B8                     l9731:
  8246                           
  8247                           ;MISC.c: 611: }
  8248                           ;MISC.c: 612: }
  8249                           ;MISC.c: 613: BufferCopy(temp,Input,100, 0);
  8250  0037B8  0E00               	movlw	low StringAddEqual@temp
  8251  0037BA  0100               	movlb	0	; () banked
  8252  0037BC  6F7A               	movwf	BufferCopy@from& (0+255),b
  8253  0037BE  0E01               	movlw	high StringAddEqual@temp
  8254  0037C0  0100               	movlb	0	; () banked
  8255  0037C2  6F7B               	movwf	(BufferCopy@from+1)& (0+255),b
  8256  0037C4  C081  F07C         	movff	StringAddEqual@Input,BufferCopy@to
  8257  0037C8  C082  F07D         	movff	StringAddEqual@Input+1,BufferCopy@to+1
  8258  0037CC  0E64               	movlw	100
  8259  0037CE  0100               	movlb	0	; () banked
  8260  0037D0  6F7E               	movwf	BufferCopy@count& (0+255),b
  8261  0037D2  0E00               	movlw	0
  8262  0037D4  0100               	movlb	0	; () banked
  8263  0037D6  6F7F               	movwf	BufferCopy@shift& (0+255),b
  8264  0037D8  ECAE  F027         	call	_BufferCopy	;wreg free
  8265                           
  8266                           ;MISC.c: 614: return 1;
  8267  0037DC  0E01               	movlw	1
  8268  0037DE  0012               	return	
  8269  0037E0  0012               	return		;funcret
  8270  0037E2                     __end_of_StringAddEqual:
  8271                           	opt stack 0
  8272                           tblptru	equ	0xFF8
  8273                           tblptrh	equ	0xFF7
  8274                           tblptrl	equ	0xFF6
  8275                           tablat	equ	0xFF5
  8276                           prodh	equ	0xFF4
  8277                           prodl	equ	0xFF3
  8278                           intcon	equ	0xFF2
  8279                           indf0	equ	0xFEF
  8280                           postinc0	equ	0xFEE
  8281                           fsr0h	equ	0xFEA
  8282                           fsr0l	equ	0xFE9
  8283                           wreg	equ	0xFE8
  8284                           indf1	equ	0xFE7
  8285                           postdec1	equ	0xFE5
  8286                           fsr1h	equ	0xFE2
  8287                           fsr1l	equ	0xFE1
  8288                           indf2	equ	0xFDF
  8289                           postinc2	equ	0xFDE
  8290                           fsr2h	equ	0xFDA
  8291                           fsr2l	equ	0xFD9
  8292                           status	equ	0xFD8
  8293                           
  8294 ;; *************** function _BufferCopy *****************
  8295 ;; Defined at:
  8296 ;;		line 165 in file "MISC.c"
  8297 ;; Parameters:    Size  Location     Type
  8298 ;;  from            2   26[BANK0 ] PTR unsigned char 
  8299 ;;		 -> StringAddEqual@temp(100), 
  8300 ;;  to              2   28[BANK0 ] PTR unsigned char 
  8301 ;;		 -> ReceivedString(255), 
  8302 ;;  count           1   30[BANK0 ] unsigned char 
  8303 ;;  shift           1   31[BANK0 ] unsigned char 
  8304 ;; Auto vars:     Size  Location     Type
  8305 ;;  i               1   32[BANK0 ] unsigned char 
  8306 ;; Return value:  Size  Location     Type
  8307 ;;		None               void
  8308 ;; Registers used:
  8309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8310 ;; Tracked objects:
  8311 ;;		On entry : 0/0
  8312 ;;		On exit  : 0/0
  8313 ;;		Unchanged: 0/0
  8314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8315 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8316 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8318 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8319 ;;Total ram usage:        7 bytes
  8320 ;; Hardware stack levels used:    1
  8321 ;; Hardware stack levels required when called:    7
  8322 ;; This function calls:
  8323 ;;		_cleanBuffer
  8324 ;; This function is called by:
  8325 ;;		_StringAddEqual
  8326 ;; This function uses a non-reentrant model
  8327 ;;
  8328                           
  8329                           	psect	text15
  8330  004F5C                     __ptext15:
  8331                           	opt stack 0
  8332  004F5C                     _BufferCopy:
  8333                           	opt stack 21
  8334                           
  8335                           ;MISC.c: 167: unsigned char i=0;
  8336                           
  8337                           ;incstack = 0
  8338  004F5C  0E00               	movlw	0
  8339  004F5E  0100               	movlb	0	; () banked
  8340  004F60  6F80               	movwf	BufferCopy@i& (0+255),b
  8341                           
  8342                           ; BSR set to: 0
  8343                           ;MISC.c: 168: cleanBuffer(to,count);
  8344  004F62  C07C  F072         	movff	BufferCopy@to,cleanBuffer@data
  8345  004F66  C07D  F073         	movff	BufferCopy@to+1,cleanBuffer@data+1
  8346  004F6A  C07E  F074         	movff	BufferCopy@count,cleanBuffer@count
  8347  004F6E  0100               	movlb	0	; () banked
  8348  004F70  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
  8349  004F72  EC6E  F02A         	call	_cleanBuffer	;wreg free
  8350                           
  8351                           ;MISC.c: 169: for(i = shift; i>0;i--)
  8352  004F76  C07F  F080         	movff	BufferCopy@shift,BufferCopy@i
  8353  004F7A                     l9031:
  8354  004F7A  0100               	movlb	0	; () banked
  8355  004F7C  5180               	movf	BufferCopy@i& (0+255),w,b
  8356  004F7E  0100               	movlb	0	; () banked
  8357  004F80  B4D8               	btfsc	status,2,c
  8358  004F82  D022               	goto	l9051
  8359  004F84  D001               	goto	l9035
  8360                           
  8361                           ; BSR set to: 0
  8362  004F86  D020               	goto	l9051
  8363  004F88                     l9035:
  8364                           
  8365                           ; BSR set to: 0
  8366                           ;MISC.c: 170: {
  8367                           ;MISC.c: 171: *to = ' ';
  8368  004F88  C07C  FFD9         	movff	BufferCopy@to,fsr2l
  8369  004F8C  C07D  FFDA         	movff	BufferCopy@to+1,fsr2h
  8370  004F90  0E20               	movlw	32
  8371  004F92  6EDF               	movwf	indf2,c
  8372                           
  8373                           ; BSR set to: 0
  8374                           ;MISC.c: 172: to++;
  8375  004F94  0100               	movlb	0	; () banked
  8376  004F96  4B7C               	infsnz	BufferCopy@to& (0+255),f,b
  8377  004F98  2B7D               	incf	(BufferCopy@to+1)& (0+255),f,b
  8378                           
  8379                           ; BSR set to: 0
  8380  004F9A  0100               	movlb	0	; () banked
  8381  004F9C  0780               	decf	BufferCopy@i& (0+255),f,b
  8382  004F9E  D7ED               	goto	l9031
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;MISC.c: 173: }
  8386                           ;MISC.c: 174: while(*from != 0 && count >0)
  8387                           
  8388                           ; BSR set to: 0
  8389  004FA0  D013               	goto	l9051
  8390  004FA2                     l9043:
  8391                           
  8392                           ; BSR set to: 0
  8393                           ;MISC.c: 175: {
  8394                           ;MISC.c: 176: *to = *from;
  8395  004FA2  C07A  FFD9         	movff	BufferCopy@from,fsr2l
  8396  004FA6  C07B  FFDA         	movff	BufferCopy@from+1,fsr2h
  8397  004FAA  C07C  FFE1         	movff	BufferCopy@to,fsr1l
  8398  004FAE  C07D  FFE2         	movff	BufferCopy@to+1,fsr1h
  8399  004FB2  CFDF FFE7          	movff	indf2,indf1
  8400                           
  8401                           ; BSR set to: 0
  8402                           ;MISC.c: 177: from++;
  8403  004FB6  0100               	movlb	0	; () banked
  8404  004FB8  4B7A               	infsnz	BufferCopy@from& (0+255),f,b
  8405  004FBA  2B7B               	incf	(BufferCopy@from+1)& (0+255),f,b
  8406                           
  8407                           ; BSR set to: 0
  8408                           ;MISC.c: 178: to++;
  8409  004FBC  0100               	movlb	0	; () banked
  8410  004FBE  4B7C               	infsnz	BufferCopy@to& (0+255),f,b
  8411  004FC0  2B7D               	incf	(BufferCopy@to+1)& (0+255),f,b
  8412                           
  8413                           ; BSR set to: 0
  8414                           ;MISC.c: 179: count--;
  8415  004FC2  0100               	movlb	0	; () banked
  8416  004FC4  077E               	decf	BufferCopy@count& (0+255),f,b
  8417  004FC6  D000               	goto	l9051
  8418  004FC8                     l9051:
  8419                           
  8420                           ; BSR set to: 0
  8421  004FC8  C07A  FFD9         	movff	BufferCopy@from,fsr2l
  8422  004FCC  C07B  FFDA         	movff	BufferCopy@from+1,fsr2h
  8423  004FD0  50DF               	movf	indf2,w,c
  8424  004FD2  B4D8               	btfsc	status,2,c
  8425  004FD4  0012               	return	
  8426                           
  8427                           ; BSR set to: 0
  8428  004FD6  0100               	movlb	0	; () banked
  8429  004FD8  517E               	movf	BufferCopy@count& (0+255),w,b
  8430  004FDA  0100               	movlb	0	; () banked
  8431  004FDC  B4D8               	btfsc	status,2,c
  8432  004FDE  0012               	return	
  8433  004FE0  D7E0               	goto	l9043
  8434                           
  8435                           ; BSR set to: 0
  8436  004FE2  0012               	return	
  8437                           
  8438                           ; BSR set to: 0
  8439                           
  8440                           ; BSR set to: 0
  8441  004FE4  0012               	return		;funcret
  8442  004FE6                     __end_of_BufferCopy:
  8443                           	opt stack 0
  8444                           tblptru	equ	0xFF8
  8445                           tblptrh	equ	0xFF7
  8446                           tblptrl	equ	0xFF6
  8447                           tablat	equ	0xFF5
  8448                           prodh	equ	0xFF4
  8449                           prodl	equ	0xFF3
  8450                           intcon	equ	0xFF2
  8451                           indf0	equ	0xFEF
  8452                           postinc0	equ	0xFEE
  8453                           fsr0h	equ	0xFEA
  8454                           fsr0l	equ	0xFE9
  8455                           wreg	equ	0xFE8
  8456                           indf1	equ	0xFE7
  8457                           postdec1	equ	0xFE5
  8458                           fsr1h	equ	0xFE2
  8459                           fsr1l	equ	0xFE1
  8460                           indf2	equ	0xFDF
  8461                           postinc2	equ	0xFDE
  8462                           fsr2h	equ	0xFDA
  8463                           fsr2l	equ	0xFD9
  8464                           status	equ	0xFD8
  8465                           
  8466 ;; *************** function _SendRF_wait *****************
  8467 ;; Defined at:
  8468 ;;		line 143 in file "RF.c"
  8469 ;; Parameters:    Size  Location     Type
  8470 ;;  Code            2   26[BANK0 ] PTR const unsigned char 
  8471 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
  8472 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
  8473 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
  8474 ;;		 -> Conf1_ChannelD(12), 
  8475 ;;  Config          1   28[BANK0 ] unsigned char 
  8476 ;;  size            1   29[BANK0 ] unsigned char 
  8477 ;;  amount          1   30[BANK0 ] unsigned char 
  8478 ;; Auto vars:     Size  Location     Type
  8479 ;;		None
  8480 ;; Return value:  Size  Location     Type
  8481 ;;		None               void
  8482 ;; Registers used:
  8483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8484 ;; Tracked objects:
  8485 ;;		On entry : 0/0
  8486 ;;		On exit  : 0/0
  8487 ;;		Unchanged: 0/0
  8488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8489 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8492 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8493 ;;Total ram usage:        5 bytes
  8494 ;; Hardware stack levels used:    1
  8495 ;; Hardware stack levels required when called:    7
  8496 ;; This function calls:
  8497 ;;		_ReadIRpin
  8498 ;;		_SendRF
  8499 ;; This function is called by:
  8500 ;;		_UseBluetooth
  8501 ;;		_SendRF_Channel
  8502 ;; This function uses a non-reentrant model
  8503 ;;
  8504                           
  8505                           	psect	text16
  8506  0058E8                     __ptext16:
  8507                           	opt stack 0
  8508  0058E8                     _SendRF_wait:
  8509                           	opt stack 21
  8510                           
  8511                           ;RF.c: 145: (IOCBbits.IOCB4 = 0);
  8512                           
  8513                           ; BSR set to: 0
  8514                           ;incstack = 0
  8515  0058E8  987D               	bcf	3965,4,c	;volatile
  8516                           
  8517                           ;RF.c: 146: INTCONbits.RBIE = 0;
  8518  0058EA  96F2               	bcf	intcon,3,c	;volatile
  8519                           
  8520                           ;RF.c: 147: INTCONbits.PEIE = 0;
  8521  0058EC  9CF2               	bcf	intcon,6,c	;volatile
  8522                           
  8523                           ;RF.c: 149: SendRF(Code, Config, size, amount);
  8524  0058EE  C07A  F072         	movff	SendRF_wait@Code,SendRF@Code
  8525  0058F2  C07B  F073         	movff	SendRF_wait@Code+1,SendRF@Code+1
  8526  0058F6  C07C  F074         	movff	SendRF_wait@Config,SendRF@Config
  8527  0058FA  C07D  F075         	movff	SendRF_wait@size,SendRF@size
  8528  0058FE  C07E  F076         	movff	SendRF_wait@amount,SendRF@RepeatAmount
  8529  005902  EC01  F022         	call	_SendRF	;wreg free
  8530                           
  8531                           ;RF.c: 150: while(!Sent);
  8532  005906  D000               	goto	l9255
  8533  005908                     l9255:
  8534  005908  0100               	movlb	0	; () banked
  8535  00590A  51ED               	movf	_Sent& (0+255),w,b	;volatile
  8536  00590C  B4D8               	btfsc	status,2,c
  8537  00590E  D7FC               	goto	l9255
  8538                           
  8539                           ; BSR set to: 0
  8540                           ;RF.c: 151: INTCONbits.PEIE = 1;
  8541  005910  8CF2               	bsf	intcon,6,c	;volatile
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;RF.c: 152: IRpinOLD = ReadIRpin();
  8545  005912  ECB3  F02D         	call	_ReadIRpin	;wreg free
  8546  005916  6E32               	movwf	_IRpinOLD,c
  8547                           
  8548                           ;RF.c: 153: INTCONbits.RBIF = 0;
  8549  005918  90F2               	bcf	intcon,0,c	;volatile
  8550                           
  8551                           ;RF.c: 154: (IOCBbits.IOCB4 = 1);
  8552  00591A  887D               	bsf	3965,4,c	;volatile
  8553                           
  8554                           ;RF.c: 155: INTCONbits.RBIE = 1;
  8555  00591C  86F2               	bsf	intcon,3,c	;volatile
  8556  00591E  0012               	return		;funcret
  8557  005920                     __end_of_SendRF_wait:
  8558                           	opt stack 0
  8559                           tblptru	equ	0xFF8
  8560                           tblptrh	equ	0xFF7
  8561                           tblptrl	equ	0xFF6
  8562                           tablat	equ	0xFF5
  8563                           prodh	equ	0xFF4
  8564                           prodl	equ	0xFF3
  8565                           intcon	equ	0xFF2
  8566                           indf0	equ	0xFEF
  8567                           postinc0	equ	0xFEE
  8568                           fsr0h	equ	0xFEA
  8569                           fsr0l	equ	0xFE9
  8570                           wreg	equ	0xFE8
  8571                           indf1	equ	0xFE7
  8572                           postdec1	equ	0xFE5
  8573                           fsr1h	equ	0xFE2
  8574                           fsr1l	equ	0xFE1
  8575                           indf2	equ	0xFDF
  8576                           postinc2	equ	0xFDE
  8577                           fsr2h	equ	0xFDA
  8578                           fsr2l	equ	0xFD9
  8579                           status	equ	0xFD8
  8580                           
  8581 ;; *************** function _SendRF *****************
  8582 ;; Defined at:
  8583 ;;		line 66 in file "RF.c"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;  Code            2   18[BANK0 ] PTR const unsigned char 
  8586 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
  8587 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
  8588 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
  8589 ;;		 -> Conf1_ChannelD(12), 
  8590 ;;  Config          1   20[BANK0 ] unsigned char 
  8591 ;;  size            1   21[BANK0 ] unsigned char 
  8592 ;;  RepeatAmount    1   22[BANK0 ] unsigned char 
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;  i               1   25[BANK0 ] unsigned char 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  1    wreg      unsigned char 
  8597 ;; Registers used:
  8598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8604 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8605 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8606 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8607 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8608 ;;Total ram usage:        8 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; Hardware stack levels required when called:    6
  8611 ;; This function calls:
  8612 ;;		Nothing
  8613 ;; This function is called by:
  8614 ;;		_SendRF_wait
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           	psect	text17
  8619  004402                     __ptext17:
  8620                           	opt stack 0
  8621  004402                     _SendRF:
  8622                           	opt stack 21
  8623                           
  8624                           ;RF.c: 68: unsigned char i;
  8625                           ;RF.c: 69: if(Sent == 1)
  8626                           
  8627                           ;incstack = 0
  8628  004402  0100               	movlb	0	; () banked
  8629  004404  05ED               	decf	_Sent& (0+255),w,b	;volatile
  8630  004406  A4D8               	btfss	status,2,c
  8631  004408  0012               	return	
  8632                           
  8633                           ; BSR set to: 0
  8634                           ;RF.c: 70: {
  8635                           ;RF.c: 72: RF_IR = 55;
  8636  00440A  0E37               	movlw	55
  8637  00440C  6E40               	movwf	_RF_IR,c
  8638                           
  8639                           ; BSR set to: 0
  8640                           ;RF.c: 73: if(Config < 0 || Config > 2)
  8641  00440E  0E02               	movlw	2
  8642  004410  0100               	movlb	0	; () banked
  8643  004412  6574               	cpfsgt	SendRF@Config& (0+255),b
  8644  004414  D002               	goto	l1574
  8645  004416  0012               	return	
  8646                           
  8647                           ; BSR set to: 0
  8648                           ;RF.c: 74: {
  8649                           ;RF.c: 75: return 0;
  8650                           ;	Return value of _SendRF is never used
  8651  004418  0012               	return	
  8652  00441A                     l1574:
  8653                           
  8654                           ; BSR set to: 0
  8655                           ;RF.c: 76: }
  8656                           ;RF.c: 77: RFConfig = Config;
  8657  00441A  C074  F036         	movff	SendRF@Config,_RFConfig
  8658                           
  8659                           ; BSR set to: 0
  8660                           ;RF.c: 78: if(Config == 1)
  8661  00441E  0100               	movlb	0	; () banked
  8662  004420  0574               	decf	SendRF@Config& (0+255),w,b
  8663  004422  A4D8               	btfss	status,2,c
  8664  004424  D002               	goto	l8979
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;RF.c: 79: {
  8668                           ;RF.c: 80: RF_IR_Postscaler = 2;
  8669  004426  0E02               	movlw	2
  8670  004428  D006               	goto	L2
  8671  00442A                     l8979:
  8672                           
  8673                           ; BSR set to: 0
  8674                           ;RF.c: 82: else if(Config == 2)
  8675  00442A  0E02               	movlw	2
  8676  00442C  0100               	movlb	0	; () banked
  8677  00442E  1974               	xorwf	SendRF@Config& (0+255),w,b
  8678  004430  A4D8               	btfss	status,2,c
  8679  004432  0012               	return	
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;RF.c: 83: {
  8683                           ;RF.c: 84: RF_IR_Postscaler = 4;
  8684  004434  0E04               	movlw	4
  8685  004436                     L2:
  8686  004436  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
  8687                           
  8688                           ;RF.c: 85: }
  8689  004438  D002               	goto	l8983
  8690                           
  8691                           ; BSR set to: 0
  8692                           ;RF.c: 86: else
  8693                           ;RF.c: 87: {
  8694                           ;RF.c: 88: return 0;
  8695                           ;	Return value of _SendRF is never used
  8696  00443A  0012               	return	
  8697                           
  8698                           ; BSR set to: 0
  8699  00443C  D000               	goto	l8983
  8700  00443E                     l8983:
  8701                           
  8702                           ; BSR set to: 0
  8703                           ;RF.c: 89: }
  8704                           ;RF.c: 91: Sent = 0;
  8705  00443E  0E00               	movlw	0
  8706  004440  0100               	movlb	0	; () banked
  8707  004442  6FED               	movwf	_Sent& (0+255),b	;volatile
  8708                           
  8709                           ; BSR set to: 0
  8710                           ;RF.c: 92: Sendcount = RepeatAmount;
  8711  004444  C076  F03A         	movff	SendRF@RepeatAmount,_Sendcount	;volatile
  8712                           
  8713                           ;RF.c: 93: RFsendFlag = 1;
  8714  004448  0E01               	movlw	1
  8715  00444A  6E39               	movwf	_RFsendFlag,c	;volatile
  8716                           
  8717                           ;RF.c: 94: RFcodeBit = 0;
  8718  00444C  0E00               	movlw	0
  8719  00444E  6E37               	movwf	_RFcodeBit,c
  8720                           
  8721                           ;RF.c: 95: RFcodePlace = 1;
  8722  004450  0E01               	movlw	1
  8723  004452  6E38               	movwf	_RFcodePlace,c
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;RF.c: 98: if(size >= 20)
  8727  004454  0E13               	movlw	19
  8728  004456  0100               	movlb	0	; () banked
  8729  004458  6575               	cpfsgt	SendRF@size& (0+255),b
  8730  00445A  D002               	goto	l8991
  8731  00445C  0012               	return	
  8732                           
  8733                           ; BSR set to: 0
  8734                           ;RF.c: 99: {
  8735                           ;RF.c: 100: return 0;
  8736                           ;	Return value of _SendRF is never used
  8737  00445E  0012               	return	
  8738  004460                     l8991:
  8739                           
  8740                           ; BSR set to: 0
  8741                           ;RF.c: 101: }
  8742                           ;RF.c: 102: for(i=0;i<size;i++)
  8743  004460  0E00               	movlw	0
  8744  004462  0100               	movlb	0	; () banked
  8745  004464  6F79               	movwf	SendRF@i& (0+255),b
  8746  004466  D020               	goto	l8997
  8747  004468                     l8993:
  8748                           
  8749                           ; BSR set to: 0
  8750                           ;RF.c: 103: {
  8751                           ;RF.c: 104: RFsendCode[i] = Code[i];
  8752  004468  0100               	movlb	0	; () banked
  8753  00446A  5179               	movf	SendRF@i& (0+255),w,b
  8754  00446C  0D01               	mullw	1
  8755  00446E  C072  F077         	movff	SendRF@Code,??_SendRF
  8756  004472  C073  F078         	movff	SendRF@Code+1,??_SendRF+1
  8757  004476  50F3               	movf	prodl,w,c
  8758  004478  0100               	movlb	0	; () banked
  8759  00447A  2777               	addwf	??_SendRF& (0+255),f,b
  8760  00447C  50F4               	movf	prodh,w,c
  8761  00447E  0100               	movlb	0	; () banked
  8762  004480  2378               	addwfc	(??_SendRF+1)& (0+255),f,b
  8763  004482  C077  FFF6         	movff	??_SendRF,tblptrl
  8764  004486  C078  FFF7         	movff	??_SendRF+1,tblptrh
  8765  00448A                     	if	0	;tblptru may be non-zero
  8766  00448A                     	endif
  8767  00448A                     	if	0	;tblptru may be non-zero
  8768  00448A                     	endif
  8769  00448A  0100               	movlb	0	; () banked
  8770  00448C  5179               	movf	SendRF@i& (0+255),w,b
  8771  00448E  0D01               	mullw	1
  8772  004490  0E94               	movlw	low _RFsendCode
  8773  004492  24F3               	addwf	prodl,w,c
  8774  004494  6ED9               	movwf	fsr2l,c
  8775  004496  0E01               	movlw	high _RFsendCode
  8776  004498  20F4               	addwfc	prodh,w,c
  8777  00449A  6EDA               	movwf	fsr2h,c
  8778  00449C  0008               	tblrd		*
  8779  00449E  CFF5 FFDF          	movff	tablat,indf2
  8780                           
  8781                           ; BSR set to: 0
  8782  0044A2  0100               	movlb	0	; () banked
  8783  0044A4  2B79               	incf	SendRF@i& (0+255),f,b
  8784  0044A6  D000               	goto	l8997
  8785  0044A8                     l8997:
  8786                           
  8787                           ; BSR set to: 0
  8788  0044A8  0100               	movlb	0	; () banked
  8789  0044AA  5175               	movf	SendRF@size& (0+255),w,b
  8790  0044AC  0100               	movlb	0	; () banked
  8791  0044AE  5D79               	subwf	SendRF@i& (0+255),w,b
  8792  0044B0  A0D8               	btfss	status,0,c
  8793  0044B2  D7DA               	goto	l8993
  8794                           
  8795                           ; BSR set to: 0
  8796                           ;RF.c: 105: }
  8797                           ;RF.c: 106: RFsendCode[i] = 99;
  8798                           
  8799                           ; BSR set to: 0
  8800  0044B4  0100               	movlb	0	; () banked
  8801  0044B6  5179               	movf	SendRF@i& (0+255),w,b
  8802  0044B8  0D01               	mullw	1
  8803  0044BA  0E94               	movlw	low _RFsendCode
  8804  0044BC  24F3               	addwf	prodl,w,c
  8805  0044BE  6ED9               	movwf	fsr2l,c
  8806  0044C0  0E01               	movlw	high _RFsendCode
  8807  0044C2  20F4               	addwfc	prodh,w,c
  8808  0044C4  6EDA               	movwf	fsr2h,c
  8809  0044C6  0E63               	movlw	99
  8810  0044C8  6EDF               	movwf	indf2,c
  8811                           
  8812                           ; BSR set to: 0
  8813                           ;RF.c: 108: (TMR2 = 0);
  8814  0044CA  0E00               	movlw	0
  8815  0044CC  6ECC               	movwf	4044,c	;volatile
  8816                           
  8817                           ; BSR set to: 0
  8818                           ;RF.c: 109: if(Config == 1)
  8819  0044CE  0100               	movlb	0	; () banked
  8820  0044D0  0574               	decf	SendRF@Config& (0+255),w,b
  8821  0044D2  A4D8               	btfss	status,2,c
  8822  0044D4  D002               	goto	l9007
  8823                           
  8824                           ; BSR set to: 0
  8825                           ;RF.c: 110: {
  8826                           ;RF.c: 111: (PR2 = 250);
  8827  0044D6  0EFA               	movlw	250
  8828  0044D8  D001               	goto	L3
  8829  0044DA                     l9007:
  8830                           
  8831                           ; BSR set to: 0
  8832                           ;RF.c: 113: else
  8833                           ;RF.c: 114: {
  8834                           ;RF.c: 115: (PR2 = 187);
  8835  0044DA  0EBB               	movlw	187
  8836  0044DC                     L3:
  8837  0044DC  6ECB               	movwf	4043,c	;volatile
  8838  0044DE  D000               	goto	l9009
  8839  0044E0                     l9009:
  8840                           
  8841                           ; BSR set to: 0
  8842                           ;RF.c: 116: }
  8843                           ;RF.c: 117: (T2CONbits.TMR2ON = 1);
  8844  0044E0  84CA               	bsf	4042,2,c	;volatile
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;RF.c: 118: return 1;
  8848                           ;	Return value of _SendRF is never used
  8849  0044E2  0012               	return	
  8850                           
  8851                           ; BSR set to: 0
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;RF.c: 119: }
  8855                           ;RF.c: 120: return 2;
  8856                           ;	Return value of _SendRF is never used
  8857  0044E4  0012               	return		;funcret
  8858  0044E6                     __end_of_SendRF:
  8859                           	opt stack 0
  8860                           tblptru	equ	0xFF8
  8861                           tblptrh	equ	0xFF7
  8862                           tblptrl	equ	0xFF6
  8863                           tablat	equ	0xFF5
  8864                           prodh	equ	0xFF4
  8865                           prodl	equ	0xFF3
  8866                           intcon	equ	0xFF2
  8867                           indf0	equ	0xFEF
  8868                           postinc0	equ	0xFEE
  8869                           fsr0h	equ	0xFEA
  8870                           fsr0l	equ	0xFE9
  8871                           wreg	equ	0xFE8
  8872                           indf1	equ	0xFE7
  8873                           postdec1	equ	0xFE5
  8874                           fsr1h	equ	0xFE2
  8875                           fsr1l	equ	0xFE1
  8876                           indf2	equ	0xFDF
  8877                           postinc2	equ	0xFDE
  8878                           fsr2h	equ	0xFDA
  8879                           fsr2l	equ	0xFD9
  8880                           status	equ	0xFD8
  8881                           
  8882 ;; *************** function _SendNEC_wait *****************
  8883 ;; Defined at:
  8884 ;;		line 411 in file "IR.c"
  8885 ;; Parameters:    Size  Location     Type
  8886 ;;  code            4   39[BANK0 ] unsigned long 
  8887 ;;  RepeatAmount    1   43[BANK0 ] unsigned char 
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;  toggle          1   44[BANK0 ] unsigned char 
  8890 ;; Return value:  Size  Location     Type
  8891 ;;		None               void
  8892 ;; Registers used:
  8893 ;;		wreg, status,2, status,0, cstack
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 0/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8899 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8900 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8902 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8903 ;;Total ram usage:        6 bytes
  8904 ;; Hardware stack levels used:    1
  8905 ;; Hardware stack levels required when called:    8
  8906 ;; This function calls:
  8907 ;;		_CheckReceivingIR
  8908 ;;		_ReadIRpin
  8909 ;;		_SendNEC_bytes
  8910 ;;		_delayUS
  8911 ;; This function is called by:
  8912 ;;		_UseBluetooth
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916                           	psect	text18
  8917  004E2E                     __ptext18:
  8918                           	opt stack 0
  8919  004E2E                     _SendNEC_wait:
  8920                           	opt stack 21
  8921                           
  8922                           ;IR.c: 413: unsigned char toggle = 0;
  8923                           
  8924                           ; BSR set to: 0
  8925                           ;incstack = 0
  8926  004E2E  0E00               	movlw	0
  8927  004E30  0100               	movlb	0	; () banked
  8928  004E32  6F8C               	movwf	SendNEC_wait@toggle& (0+255),b
  8929                           
  8930                           ; BSR set to: 0
  8931                           
  8932                           ;IR.c: 414: while(CheckReceivingIR());
  8933  004E34  D000               	goto	l9929
  8934  004E36                     l9929:
  8935  004E36  EC86  F02D         	call	_CheckReceivingIR	;wreg free
  8936  004E3A  0900               	iorlw	0
  8937  004E3C  A4D8               	btfss	status,2,c
  8938  004E3E  D7FB               	goto	l9929
  8939                           
  8940                           ;IR.c: 416: (IOCBbits.IOCB4 = 0);
  8941  004E40  987D               	bcf	3965,4,c	;volatile
  8942                           
  8943                           ;IR.c: 417: INTCONbits.RBIE = 0;
  8944  004E42  96F2               	bcf	intcon,3,c	;volatile
  8945                           
  8946                           ;IR.c: 418: INTCONbits.PEIE = 0;
  8947  004E44  9CF2               	bcf	intcon,6,c	;volatile
  8948                           
  8949                           ;IR.c: 420: SendNEC_bytes(code, RepeatAmount);
  8950  004E46  C087  F082         	movff	SendNEC_wait@code,SendNEC_bytes@code
  8951  004E4A  C088  F083         	movff	SendNEC_wait@code+1,SendNEC_bytes@code+1
  8952  004E4E  C089  F084         	movff	SendNEC_wait@code+2,SendNEC_bytes@code+2
  8953  004E52  C08A  F085         	movff	SendNEC_wait@code+3,SendNEC_bytes@code+3
  8954  004E56  C08B  F086         	movff	SendNEC_wait@RepeatAmount,SendNEC_bytes@RepeatAmount
  8955  004E5A  ECF3  F027         	call	_SendNEC_bytes	;wreg free
  8956                           
  8957                           ;IR.c: 421: while(!Sent)
  8958  004E5E  D01C               	goto	l9951
  8959  004E60                     l9933:
  8960                           
  8961                           ;IR.c: 422: {
  8962                           ;IR.c: 423: if(IRmod)
  8963  004E60  0100               	movlb	0	; () banked
  8964  004E62  51DE               	movf	_IRmod& (0+255),w,b	;volatile
  8965  004E64  B4D8               	btfsc	status,2,c
  8966  004E66  D013               	goto	l9947
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;IR.c: 424: {
  8970                           ;IR.c: 426: if(toggle < 9)
  8971  004E68  0E09               	movlw	9
  8972  004E6A  0100               	movlb	0	; () banked
  8973  004E6C  618C               	cpfslt	SendNEC_wait@toggle& (0+255),b
  8974  004E6E  D002               	goto	l9939
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;IR.c: 427: {
  8978                           ;IR.c: 428: (LATC |= 0x08);
  8979  004E70  868B               	bsf	3979,3,c	;volatile
  8980                           
  8981                           ;IR.c: 429: }
  8982  004E72  D00A               	goto	l9945
  8983  004E74                     l9939:
  8984                           
  8985                           ; BSR set to: 0
  8986                           ;IR.c: 430: else if(toggle < 17)
  8987  004E74  0E11               	movlw	17
  8988  004E76  0100               	movlb	0	; () banked
  8989  004E78  618C               	cpfslt	SendNEC_wait@toggle& (0+255),b
  8990  004E7A  D002               	goto	l9943
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;IR.c: 431: {
  8994                           ;IR.c: 432: (LATC &= ~0x08);
  8995  004E7C  968B               	bcf	3979,3,c	;volatile
  8996                           
  8997                           ;IR.c: 433: }
  8998  004E7E  D004               	goto	l9945
  8999  004E80                     l9943:
  9000                           
  9001                           ; BSR set to: 0
  9002                           ;IR.c: 434: else
  9003                           ;IR.c: 435: {
  9004                           ;IR.c: 436: toggle = 0;
  9005  004E80  0E00               	movlw	0
  9006  004E82  0100               	movlb	0	; () banked
  9007  004E84  6F8C               	movwf	SendNEC_wait@toggle& (0+255),b
  9008                           
  9009                           ; BSR set to: 0
  9010  004E86  D000               	goto	l9945
  9011  004E88                     l9945:
  9012                           
  9013                           ; BSR set to: 0
  9014                           ;IR.c: 437: }
  9015                           ;IR.c: 438: toggle++;
  9016  004E88  0100               	movlb	0	; () banked
  9017  004E8A  2B8C               	incf	SendNEC_wait@toggle& (0+255),f,b
  9018                           
  9019                           ;IR.c: 439: }
  9020  004E8C  D005               	goto	l9951
  9021  004E8E                     l9947:
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;IR.c: 440: else
  9025                           ;IR.c: 441: {
  9026                           ;IR.c: 442: (LATC &= ~0x08);
  9027  004E8E  968B               	bcf	3979,3,c	;volatile
  9028                           
  9029                           ; BSR set to: 0
  9030                           ;IR.c: 443: toggle = 0;
  9031  004E90  0E00               	movlw	0
  9032  004E92  0100               	movlb	0	; () banked
  9033  004E94  6F8C               	movwf	SendNEC_wait@toggle& (0+255),b
  9034                           
  9035                           ; BSR set to: 0
  9036  004E96  D000               	goto	l9951
  9037  004E98                     l9951:
  9038  004E98  0100               	movlb	0	; () banked
  9039  004E9A  51ED               	movf	_Sent& (0+255),w,b	;volatile
  9040  004E9C  B4D8               	btfsc	status,2,c
  9041  004E9E  D7E0               	goto	l9933
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;IR.c: 444: }
  9045                           ;IR.c: 445: }
  9046                           ;IR.c: 447: if(IRbitPosition)
  9047                           
  9048                           ; BSR set to: 0
  9049  004EA0  503E               	movf	_IRbitPosition,w,c	;volatile
  9050  004EA2  A4D8               	btfss	status,2,c
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;IR.c: 448: {
  9054                           ;IR.c: 450: __nop();
  9055  004EA4  F000               	nop	
  9056                           
  9057                           ;IR.c: 451: }
  9058                           ;IR.c: 453: INTCONbits.PEIE = 1;
  9059  004EA6  8CF2               	bsf	intcon,6,c	;volatile
  9060                           
  9061                           ;IR.c: 454: delayUS(8000);
  9062  004EA8  0E40               	movlw	64
  9063  004EAA  0100               	movlb	0	; () banked
  9064  004EAC  6F72               	movwf	delayUS@US& (0+255),b
  9065  004EAE  0E1F               	movlw	31
  9066  004EB0  6F73               	movwf	(delayUS@US+1)& (0+255),b
  9067  004EB2  0E00               	movlw	0
  9068  004EB4  6F74               	movwf	(delayUS@US+2)& (0+255),b
  9069  004EB6  0E00               	movlw	0
  9070  004EB8  6F75               	movwf	(delayUS@US+3)& (0+255),b
  9071  004EBA  EC1F  F02B         	call	_delayUS	;wreg free
  9072                           
  9073                           ;IR.c: 455: IRpinOLD = ReadIRpin();
  9074  004EBE  ECB3  F02D         	call	_ReadIRpin	;wreg free
  9075  004EC2  6E32               	movwf	_IRpinOLD,c
  9076                           
  9077                           ;IR.c: 456: INTCONbits.RBIF = 0;
  9078  004EC4  90F2               	bcf	intcon,0,c	;volatile
  9079                           
  9080                           ;IR.c: 457: (IOCBbits.IOCB4 = 1);
  9081  004EC6  887D               	bsf	3965,4,c	;volatile
  9082                           
  9083                           ;IR.c: 458: INTCONbits.RBIE = 1;
  9084  004EC8  86F2               	bsf	intcon,3,c	;volatile
  9085  004ECA  0012               	return		;funcret
  9086  004ECC                     __end_of_SendNEC_wait:
  9087                           	opt stack 0
  9088                           tblptru	equ	0xFF8
  9089                           tblptrh	equ	0xFF7
  9090                           tblptrl	equ	0xFF6
  9091                           tablat	equ	0xFF5
  9092                           prodh	equ	0xFF4
  9093                           prodl	equ	0xFF3
  9094                           intcon	equ	0xFF2
  9095                           indf0	equ	0xFEF
  9096                           postinc0	equ	0xFEE
  9097                           fsr0h	equ	0xFEA
  9098                           fsr0l	equ	0xFE9
  9099                           wreg	equ	0xFE8
  9100                           indf1	equ	0xFE7
  9101                           postdec1	equ	0xFE5
  9102                           fsr1h	equ	0xFE2
  9103                           fsr1l	equ	0xFE1
  9104                           indf2	equ	0xFDF
  9105                           postinc2	equ	0xFDE
  9106                           fsr2h	equ	0xFDA
  9107                           fsr2l	equ	0xFD9
  9108                           status	equ	0xFD8
  9109                           
  9110 ;; *************** function _SendNEC_bytes *****************
  9111 ;; Defined at:
  9112 ;;		line 348 in file "IR.c"
  9113 ;; Parameters:    Size  Location     Type
  9114 ;;  code            4   34[BANK0 ] unsigned long 
  9115 ;;  RepeatAmount    1   38[BANK0 ] unsigned char 
  9116 ;; Auto vars:     Size  Location     Type
  9117 ;;		None
  9118 ;; Return value:  Size  Location     Type
  9119 ;;                  1    wreg      unsigned char 
  9120 ;; Registers used:
  9121 ;;		wreg, status,2, status,0, cstack
  9122 ;; Tracked objects:
  9123 ;;		On entry : 0/0
  9124 ;;		On exit  : 0/0
  9125 ;;		Unchanged: 0/0
  9126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9127 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9130 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9131 ;;Total ram usage:        5 bytes
  9132 ;; Hardware stack levels used:    1
  9133 ;; Hardware stack levels required when called:    7
  9134 ;; This function calls:
  9135 ;;		_Reverse_4Byte
  9136 ;; This function is called by:
  9137 ;;		_SendNEC_wait
  9138 ;; This function uses a non-reentrant model
  9139 ;;
  9140                           
  9141                           	psect	text19
  9142  004FE6                     __ptext19:
  9143                           	opt stack 0
  9144  004FE6                     _SendNEC_bytes:
  9145                           	opt stack 21
  9146                           
  9147                           ;IR.c: 377: if(Sent == 1)
  9148                           
  9149                           ;incstack = 0
  9150  004FE6  0100               	movlb	0	; () banked
  9151  004FE8  05ED               	decf	_Sent& (0+255),w,b	;volatile
  9152  004FEA  A4D8               	btfss	status,2,c
  9153  004FEC  0012               	return	
  9154                           
  9155                           ; BSR set to: 0
  9156                           ;IR.c: 378: {
  9157                           ;IR.c: 380: if(!code)
  9158  004FEE  0100               	movlb	0	; () banked
  9159  004FF0  5182               	movf	SendNEC_bytes@code& (0+255),w,b
  9160  004FF2  0100               	movlb	0	; () banked
  9161  004FF4  1183               	iorwf	(SendNEC_bytes@code+1)& (0+255),w,b
  9162  004FF6  0100               	movlb	0	; () banked
  9163  004FF8  1184               	iorwf	(SendNEC_bytes@code+2)& (0+255),w,b
  9164  004FFA  0100               	movlb	0	; () banked
  9165  004FFC  1185               	iorwf	(SendNEC_bytes@code+3)& (0+255),w,b
  9166  004FFE  B4D8               	btfsc	status,2,c
  9167  005000  0012               	return	
  9168  005002  D001               	goto	l9095
  9169                           
  9170                           ; BSR set to: 0
  9171                           ;IR.c: 381: {
  9172                           ;IR.c: 382: return 0;
  9173                           ;	Return value of _SendNEC_bytes is never used
  9174  005004  0012               	return	
  9175  005006                     l9095:
  9176                           
  9177                           ; BSR set to: 0
  9178                           ;IR.c: 383: }
  9179                           ;IR.c: 384: RF_IR = 66;
  9180  005006  0E42               	movlw	66
  9181  005008  6E40               	movwf	_RF_IR,c
  9182                           
  9183                           ;IR.c: 385: Sent = 0;
  9184  00500A  0E00               	movlw	0
  9185  00500C  0100               	movlb	0	; () banked
  9186  00500E  6FED               	movwf	_Sent& (0+255),b	;volatile
  9187                           
  9188                           ;IR.c: 386: IRsendFlag = 1;
  9189  005010  0E01               	movlw	1
  9190  005012  0100               	movlb	0	; () banked
  9191  005014  6FDF               	movwf	_IRsendFlag& (0+255),b
  9192                           
  9193                           ;IR.c: 387: IRcodeBit = 0;
  9194  005016  0E00               	movlw	0
  9195  005018  0100               	movlb	0	; () banked
  9196  00501A  6FDD               	movwf	_IRcodeBit& (0+255),b
  9197                           
  9198                           ;IR.c: 388: IRcodePlace = 7;
  9199  00501C  0E07               	movlw	7
  9200  00501E  6E3F               	movwf	_IRcodePlace,c
  9201                           
  9202                           ; BSR set to: 0
  9203                           ;IR.c: 389: IRsendCode = Reverse_4Byte(code);
  9204  005020  C082  F072         	movff	SendNEC_bytes@code,Reverse_4Byte@This
  9205  005024  C083  F073         	movff	SendNEC_bytes@code+1,Reverse_4Byte@This+1
  9206  005028  C084  F074         	movff	SendNEC_bytes@code+2,Reverse_4Byte@This+2
  9207  00502C  C085  F075         	movff	SendNEC_bytes@code+3,Reverse_4Byte@This+3
  9208  005030  ECF6  F000         	call	_Reverse_4Byte	;wreg free
  9209  005034  C072  F02C         	movff	?_Reverse_4Byte,_IRsendCode
  9210  005038  C073  F02D         	movff	?_Reverse_4Byte+1,_IRsendCode+1
  9211  00503C  C074  F02E         	movff	?_Reverse_4Byte+2,_IRsendCode+2
  9212  005040  C075  F02F         	movff	?_Reverse_4Byte+3,_IRsendCode+3
  9213                           
  9214                           ;IR.c: 390: if(RepeatAmount)
  9215  005044  0100               	movlb	0	; () banked
  9216  005046  5186               	movf	SendNEC_bytes@RepeatAmount& (0+255),w,b
  9217  005048  0100               	movlb	0	; () banked
  9218  00504A  B4D8               	btfsc	status,2,c
  9219  00504C  D003               	goto	l9103
  9220                           
  9221                           ; BSR set to: 0
  9222                           ;IR.c: 391: {
  9223                           ;IR.c: 392: IRrepeatflag = 1;
  9224  00504E  0E01               	movlw	1
  9225  005050  6E35               	movwf	_IRrepeatflag,c
  9226  005052  D000               	goto	l9103
  9227  005054                     l9103:
  9228                           
  9229                           ; BSR set to: 0
  9230                           ;IR.c: 393: }
  9231                           ;IR.c: 394: IRrepeatAmount = RepeatAmount;
  9232  005054  C086  F034         	movff	SendNEC_bytes@RepeatAmount,_IRrepeatAmount
  9233                           
  9234                           ;IR.c: 395: (TMR2 = 0);
  9235  005058  0E00               	movlw	0
  9236  00505A  6ECC               	movwf	4044,c	;volatile
  9237                           
  9238                           ;IR.c: 396: (PR2 = 4500);
  9239  00505C  0E94               	movlw	148
  9240  00505E  6ECB               	movwf	4043,c	;volatile
  9241                           
  9242                           ;IR.c: 397: RF_IR_Postscaler = 4;
  9243  005060  0E04               	movlw	4
  9244  005062  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
  9245                           
  9246                           ;IR.c: 398: (IRmod = 1);
  9247  005064  0E01               	movlw	1
  9248  005066  0100               	movlb	0	; () banked
  9249  005068  6FDE               	movwf	_IRmod& (0+255),b	;volatile
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;IR.c: 399: (T2CONbits.TMR2ON = 1);
  9253  00506A  84CA               	bsf	4042,2,c	;volatile
  9254                           
  9255                           ; BSR set to: 0
  9256                           ;IR.c: 400: return 1;
  9257                           ;	Return value of _SendNEC_bytes is never used
  9258  00506C  0012               	return	
  9259                           
  9260                           ; BSR set to: 0
  9261                           
  9262                           ; BSR set to: 0
  9263                           ;IR.c: 401: }
  9264                           ;IR.c: 402: return 2;
  9265                           ;	Return value of _SendNEC_bytes is never used
  9266  00506E  0012               	return		;funcret
  9267  005070                     __end_of_SendNEC_bytes:
  9268                           	opt stack 0
  9269                           tblptru	equ	0xFF8
  9270                           tblptrh	equ	0xFF7
  9271                           tblptrl	equ	0xFF6
  9272                           tablat	equ	0xFF5
  9273                           prodh	equ	0xFF4
  9274                           prodl	equ	0xFF3
  9275                           intcon	equ	0xFF2
  9276                           indf0	equ	0xFEF
  9277                           postinc0	equ	0xFEE
  9278                           fsr0h	equ	0xFEA
  9279                           fsr0l	equ	0xFE9
  9280                           wreg	equ	0xFE8
  9281                           indf1	equ	0xFE7
  9282                           postdec1	equ	0xFE5
  9283                           fsr1h	equ	0xFE2
  9284                           fsr1l	equ	0xFE1
  9285                           indf2	equ	0xFDF
  9286                           postinc2	equ	0xFDE
  9287                           fsr2h	equ	0xFDA
  9288                           fsr2l	equ	0xFD9
  9289                           status	equ	0xFD8
  9290                           
  9291 ;; *************** function _Reverse_4Byte *****************
  9292 ;; Defined at:
  9293 ;;		line 410 in file "MISC.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;  This            4   18[BANK0 ] unsigned long 
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;  temp            4   30[BANK0 ] unsigned long 
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  4   18[BANK0 ] unsigned long 
  9300 ;; Registers used:
  9301 ;;		wreg, status,2, status,0
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/0
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9307 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9308 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9309 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9310 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9311 ;;Total ram usage:       16 bytes
  9312 ;; Hardware stack levels used:    1
  9313 ;; Hardware stack levels required when called:    6
  9314 ;; This function calls:
  9315 ;;		Nothing
  9316 ;; This function is called by:
  9317 ;;		_SendNEC_bytes
  9318 ;; This function uses a non-reentrant model
  9319 ;;
  9320                           
  9321                           	psect	text20
  9322  0001EC                     __ptext20:
  9323                           	opt stack 0
  9324  0001EC                     _Reverse_4Byte:
  9325                           	opt stack 21
  9326                           
  9327                           ;MISC.c: 412: unsigned long temp=0;
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;incstack = 0
  9331  0001EC  0E00               	movlw	0
  9332  0001EE  0100               	movlb	0	; () banked
  9333  0001F0  6F7E               	movwf	Reverse_4Byte@temp& (0+255),b
  9334  0001F2  0E00               	movlw	0
  9335  0001F4  6F7F               	movwf	(Reverse_4Byte@temp+1)& (0+255),b
  9336  0001F6  0E00               	movlw	0
  9337  0001F8  6F80               	movwf	(Reverse_4Byte@temp+2)& (0+255),b
  9338  0001FA  0E00               	movlw	0
  9339  0001FC  6F81               	movwf	(Reverse_4Byte@temp+3)& (0+255),b
  9340                           
  9341                           ; BSR set to: 0
  9342                           ;MISC.c: 414: temp += (This & 0x00000001) << 31;
  9343  0001FE  0E01               	movlw	1
  9344  000200  0100               	movlb	0	; () banked
  9345  000202  1572               	andwf	Reverse_4Byte@This& (0+255),w,b
  9346  000204  0100               	movlb	0	; () banked
  9347  000206  6F76               	movwf	??_Reverse_4Byte& (0+255),b
  9348  000208  0E00               	movlw	0
  9349  00020A  0100               	movlb	0	; () banked
  9350  00020C  1573               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
  9351  00020E  0100               	movlb	0	; () banked
  9352  000210  6F77               	movwf	(??_Reverse_4Byte+1)& (0+255),b
  9353  000212  0E00               	movlw	0
  9354  000214  0100               	movlb	0	; () banked
  9355  000216  1574               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
  9356  000218  0100               	movlb	0	; () banked
  9357  00021A  6F78               	movwf	(??_Reverse_4Byte+2)& (0+255),b
  9358  00021C  0E00               	movlw	0
  9359  00021E  0100               	movlb	0	; () banked
  9360  000220  1575               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
  9361  000222  0100               	movlb	0	; () banked
  9362  000224  6F79               	movwf	(??_Reverse_4Byte+3)& (0+255),b
  9363  000226  0E1F               	movlw	31
  9364  000228                     u9365:
  9365  000228  90D8               	bcf	status,0,c
  9366  00022A  0100               	movlb	0	; () banked
  9367  00022C  3776               	rlcf	??_Reverse_4Byte& (0+255),f,b
  9368  00022E  3777               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
  9369  000230  3778               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
  9370  000232  3779               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
  9371  000234  2EE8               	decfsz	wreg,f,c
  9372  000236  D7F8               	goto	u9365
  9373  000238  0100               	movlb	0	; () banked
  9374  00023A  5176               	movf	??_Reverse_4Byte& (0+255),w,b
  9375  00023C  0100               	movlb	0	; () banked
  9376  00023E  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
  9377  000240  0100               	movlb	0	; () banked
  9378  000242  5177               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
  9379  000244  0100               	movlb	0	; () banked
  9380  000246  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
  9381  000248  0100               	movlb	0	; () banked
  9382  00024A  5178               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
  9383  00024C  0100               	movlb	0	; () banked
  9384  00024E  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
  9385  000250  0100               	movlb	0	; () banked
  9386  000252  5179               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
  9387  000254  0100               	movlb	0	; () banked
  9388  000256  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
  9389                           
  9390                           ; BSR set to: 0
  9391                           ;MISC.c: 415: temp += (This & 0x00000002) << 29;
  9392  000258  0E02               	movlw	2
  9393  00025A  0100               	movlb	0	; () banked
  9394  00025C  1572               	andwf	Reverse_4Byte@This& (0+255),w,b
  9395  00025E  0100               	movlb	0	; () banked
  9396  000260  6F76               	movwf	??_Reverse_4Byte& (0+255),b
  9397  000262  0E00               	movlw	0
  9398  000264  0100               	movlb	0	; () banked
  9399  000266  1573               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
  9400  000268  0100               	movlb	0	; () banked
  9401  00026A  6F77               	movwf	(??_Reverse_4Byte+1)& (0+255),b
  9402  00026C  0E00               	movlw	0
  9403  00026E  0100               	movlb	0	; () banked
  9404  000270  1574               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
  9405  000272  0100               	movlb	0	; () banked
  9406  000274  6F78               	movwf	(??_Reverse_4Byte+2)& (0+255),b
  9407  000276  0E00               	movlw	0
  9408  000278  0100               	movlb	0	; () banked
  9409  00027A  1575               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
  9410  00027C  0100               	movlb	0	; () banked
  9411  00027E  6F79               	movwf	(??_Reverse_4Byte+3)& (0+255),b
  9412  000280  0E1D               	movlw	29
  9413  000282                     u9375:
  9414  000282  90D8               	bcf	status,0,c
  9415  000284  0100               	movlb	0	; () banked
  9416  000286  3776               	rlcf	??_Reverse_4Byte& (0+255),f,b
  9417  000288  3777               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
  9418  00028A  3778               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
  9419  00028C  3779               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
  9420  00028E  2EE8               	decfsz	wreg,f,c
  9421  000290  D7F8               	goto	u9375
  9422  000292  0100               	movlb	0	; () banked
  9423  000294  5176               	movf	??_Reverse_4Byte& (0+255),w,b
  9424  000296  0100               	movlb	0	; () banked
  9425  000298  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
  9426  00029A  0100               	movlb	0	; () banked
  9427  00029C  5177               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
  9428  00029E  0100               	movlb	0	; () banked
  9429  0002A0  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
  9430  0002A2  0100               	movlb	0	; () banked
  9431  0002A4  5178               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
  9432  0002A6  0100               	movlb	0	; () banked
  9433  0002A8  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
  9434  0002AA  0100               	movlb	0	; () banked
  9435  0002AC  5179               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
  9436  0002AE  0100               	movlb	0	; () banked
  9437  0002B0  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
  9438                           
  9439                           ; BSR set to: 0
  9440                           ;MISC.c: 416: temp += (This & 0x00000004) << 27;
  9441  0002B2  0E04               	movlw	4
  9442  0002B4  0100               	movlb	0	; () banked
  9443  0002B6  1572               	andwf	Reverse_4Byte@This& (0+255),w,b
  9444  0002B8  0100               	movlb	0	; () banked
  9445  0002BA  6F76               	movwf	??_Reverse_4Byte& (0+255),b
  9446  0002BC  0E00               	movlw	0
  9447  0002BE  0100               	movlb	0	; () banked
  9448  0002C0  1573               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
  9449  0002C2  0100               	movlb	0	; () banked
  9450  0002C4  6F77               	movwf	(??_Reverse_4Byte+1)& (0+255),b
  9451  0002C6  0E00               	movlw	0
  9452  0002C8  0100               	movlb	0	; () banked
  9453  0002CA  1574               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
  9454  0002CC  0100               	movlb	0	; () banked
  9455  0002CE  6F78               	movwf	(??_Reverse_4Byte+2)& (0+255),b
  9456  0002D0  0E00               	movlw	0
  9457  0002D2  0100               	movlb	0	; () banked
  9458  0002D4  1575               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
  9459  0002D6  0100               	movlb	0	; () banked
  9460  0002D8  6F79               	movwf	(??_Reverse_4Byte+3)& (0+255),b
  9461  0002DA  0E1B               	movlw	27
  9462  0002DC                     u9385:
  9463  0002DC  90D8               	bcf	status,0,c
  9464  0002DE  0100               	movlb	0	; () banked
  9465  0002E0  3776               	rlcf	??_Reverse_4Byte& (0+255),f,b
  9466  0002E2  3777               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
  9467  0002E4  3778               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
  9468  0002E6  3779               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
  9469  0002E8  2EE8               	decfsz	wreg,f,c
  9470  0002EA  D7F8               	goto	u9385
  9471  0002EC  0100               	movlb	0	; () banked
  9472  0002EE  5176               	movf	??_Reverse_4Byte& (0+255),w,b
  9473  0002F0  0100               	movlb	0	; () banked
  9474  0002F2  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
  9475  0002F4  0100               	movlb	0	; () banked
  9476  0002F6  5177               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
  9477  0002F8  0100               	movlb	0	; () banked
  9478  0002FA  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
  9479  0002FC  0100               	movlb	0	; () banked
  9480  0002FE  5178               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
  9481  000300  0100               	movlb	0	; () banked
  9482  000302  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
  9483  000304  0100               	movlb	0	; () banked
  9484  000306  5179               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
  9485  000308  0100               	movlb	0	; () banked
  9486  00030A  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
  9487                           
  9488                           ; BSR set to: 0
  9489                           ;MISC.c: 417: temp += (This & 0x00000008) << 25;
  9490  00030C  0E08               	movlw	8
  9491  00030E  0100               	movlb	0	; () banked
  9492  000310  1572               	andwf	Reverse_4Byte@This& (0+255),w,b
  9493  000312  0100               	movlb	0	; () banked
  9494  000314  6F76               	movwf	??_Reverse_4Byte& (0+255),b
  9495  000316  0E00               	movlw	0
  9496  000318  0100               	movlb	0	; () banked
  9497  00031A  1573               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
  9498  00031C  0100               	movlb	0	; () banked
  9499  00031E  6F77               	movwf	(??_Reverse_4Byte+1)& (0+255),b
  9500  000320  0E00               	movlw	0
  9501  000322  0100               	movlb	0	; () banked
  9502  000324  1574               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
  9503  000326  0100               	movlb	0	; () banked
  9504  000328  6F78               	movwf	(??_Reverse_4Byte+2)& (0+255),b
  9505  00032A  0E00               	movlw	0
  9506  00032C  0100               	movlb	0	; () banked
  9507  00032E  1575               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
  9508  000330  0100               	movlb	0	; () banked
  9509  000332  6F79               	movwf	(??_Reverse_4Byte+3)& (0+255),b
  9510  000334  0E19               	movlw	25
  9511  000336                     u9395:
  9512  000336  90D8               	bcf	status,0,c
  9513  000338  0100               	movlb	0	; () banked
  9514  00033A  3776               	rlcf	??_Reverse_4Byte& (0+255),f,b
  9515  00033C  3777               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
  9516  00033E  3778               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
  9517  000340  3779               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
  9518  000342  2EE8               	decfsz	wreg,f,c
  9519  000344  D7F8               	goto	u9395
  9520  000346  0100               	movlb	0	; () banked
  9521  000348  5176               	movf	??_Reverse_4Byte& (0+255),w,b
  9522  00034A  0100               	movlb	0	; () banked
  9523  00034C  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
  9524  00034E  0100               	movlb	0	; () banked
  9525  000350  5177               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
  9526  000352  0100               	movlb	0	; () banked
  9527  000354  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
  9528  000356  0100               	movlb	0	; () banked
  9529  000358  5178               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
  9530  00035A  0100               	movlb	0	; () banked
  9531  00035C  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
  9532  00035E  0100               	movlb	0	; () banked
  9533  000360  5179               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
  9534  000362  0100               	movlb	0	; () banked
  9535  000364  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
  9536                           
  9537                           ; BSR set to: 0
  9538                           ;MISC.c: 418: temp += (This & 0x00000010) << 23;
  9539  000366  0E10               	movlw	16
  9540  000368  0100               	movlb	0	; () banked
  9541  00036A  1572               	andwf	Reverse_4Byte@This& (0+255),w,b
  9542  00036C  0100               	movlb	0	; () banked
  9543  00036E  6F76               	movwf	??_Reverse_4Byte& (0+255),b
  9544  000370  0E00               	movlw	0
  9545  000372  0100               	movlb	0	; () banked
  9546  000374  1573               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
  9547  000376  0100               	movlb	0	; () banked
  9548  000378  6F77               	movwf	(??_Reverse_4Byte+1)& (0+255),b
  9549  00037A  0E00               	movlw	0
  9550  00037C  0100               	movlb	0	; () banked
  9551  00037E  1574               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
  9552  000380  0100               	movlb	0	; () banked
  9553  000382  6F78               	movwf	(??_Reverse_4Byte+2)& (0+255),b
  9554  000384  0E00               	movlw	0
  9555  000386  0100               	movlb	0	; () banked
  9556  000388  1575               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
  9557  00038A  0100               	movlb	0	; () banked
  9558  00038C  6F79               	movwf	(??_Reverse_4Byte+3)& (0+255),b
  9559  00038E  0E17               	movlw	23
  9560  000390                     u9405:
  9561  000390  90D8               	bcf	status,0,c
  9562  000392  0100               	movlb	0	; () banked
  9563  000394  3776               	rlcf	??_Reverse_4Byte& (0+255),f,b
  9564  000396  3777               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
  9565  000398  3778               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
  9566  00039A  3779               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
  9567  00039C  2EE8               	decfsz	wreg,f,c
  9568  00039E  D7F8               	goto	u9405
  9569  0003A0  0100               	movlb	0	; () banked
  9570  0003A2  5176               	movf	??_Reverse_4Byte& (0+255),w,b
  9571  0003A4  0100               	movlb	0	; () banked
  9572  0003A6  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
  9573  0003A8  0100               	movlb	0	; () banked
  9574  0003AA  5177               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
  9575  0003AC  0100               	movlb	0	; () banked
  9576  0003AE  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
  9577  0003B0  0100               	movlb	0	; () banked
  9578  0003B2  5178               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
  9579  0003B4  0100               	movlb	0	; () banked
  9580  0003B6  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
  9581  0003B8  0100               	movlb	0	; () banked
  9582  0003BA  5179               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
  9583  0003BC  0100               	movlb	0	; () banked
  9584  0003BE  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
  9585                           
  9586                           ; BSR set to: 0
  9587                           ;MISC.c: 419: temp += (This & 0x00000020) << 21;
  9588  0003C0  0E20               	movlw	32
  9589  0003C2  0100               	movlb	0	; () banked
  9590  0003C4  1572               	andwf	Reverse_4Byte@This& (0+255),w,b
  9591  0003C6  0100               	movlb	0	; () banked
  9592  0003C8  6F76               	movwf	??_Reverse_4Byte& (0+255),b
  9593  0003CA  0E00               	movlw	0
  9594  0003CC  0100               	movlb	0	; () banked
  9595  0003CE  1573               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
  9596  0003D0  0100               	movlb	0	; () banked
  9597  0003D2  6F77               	movwf	(??_Reverse_4Byte+1)& (0+255),b
  9598  0003D4  0E00               	movlw	0
  9599  0003D6  0100               	movlb	0	; () banked
  9600  0003D8  1574               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
  9601  0003DA  0100               	movlb	0	; () banked
  9602  0003DC  6F78               	movwf	(??_Reverse_4Byte+2)& (0+255),b
  9603  0003DE  0E00               	movlw	0
  9604  0003E0  0100               	movlb	0	; () banked
  9605  0003E2  1575               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
  9606  0003E4  0100               	movlb	0	; () banked
  9607  0003E6  6F79               	movwf	(??_Reverse_4Byte+3)& (0+255),b
  9608  0003E8  0E15               	movlw	21
  9609  0003EA                     u9415:
  9610  0003EA  90D8               	bcf	status,0,c
  9611  0003EC  0100               	movlb	0	; () banked
  9612  0003EE  3776               	rlcf	??_Reverse_4Byte& (0+255),f,b
  9613  0003F0  3777               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
  9614  0003F2  3778               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
  9615  0003F4  3779               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
  9616  0003F6  2EE8               	decfsz	wreg,f,c
  9617  0003F8  D7F8               	goto	u9415
  9618  0003FA  0100               	movlb	0	; () banked
  9619  0003FC  5176               	movf	??_Reverse_4Byte& (0+255),w,b
  9620  0003FE  0100               	movlb	0	; () banked
  9621  000400  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
  9622  000402  0100               	movlb	0	; () banked
  9623  000404  5177               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
  9624  000406  0100               	movlb	0	; () banked
  9625  000408  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
  9626  00040A  0100               	movlb	0	; () banked
  9627  00040C  5178               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
  9628  00040E  0100               	movlb	0	; () banked
  9629  000410  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
  9630  000412  0100               	movlb	0	; () banked
  9631  000414  5179               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
  9632  000416  0100               	movlb	0	; () banked
  9633  000418  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
  9634                           
  9635                           ; BSR set to: 0
  9636                           ;MISC.c: 420: temp += (This & 0x00000040) << 19;
  9637  00041A  0E40               	movlw	64
  9638  00041C  0100               	movlb	0	; () banked
  9639  00041E  1572               	andwf	Reverse_4Byte@This& (0+255),w,b
  9640  000420  0100               	movlb	0	; () banked
  9641  000422  6F76               	movwf	??_Reverse_4Byte& (0+255),b
  9642  000424  0E00               	movlw	0
  9643  000426  0100               	movlb	0	; () banked
  9644  000428  1573               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
  9645  00042A  0100               	movlb	0	; () banked
  9646  00042C  6F77               	movwf	(??_Reverse_4Byte+1)& (0+255),b
  9647  00042E  0E00               	movlw	0
  9648  000430  0100               	movlb	0	; () banked
  9649  000432  1574               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
  9650  000434  0100               	movlb	0	; () banked
  9651  000436  6F78               	movwf	(??_Reverse_4Byte+2)& (0+255),b
  9652  000438  0E00               	movlw	0
  9653  00043A  0100               	movlb	0	; () banked
  9654  00043C  1575               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
  9655  00043E  0100               	movlb	0	; () banked
  9656  000440  6F79               	movwf	(??_Reverse_4Byte+3)& (0+255),b
  9657  000442  0E13               	movlw	19
  9658  000444                     u9425:
  9659  000444  90D8               	bcf	status,0,c
  9660  000446  0100               	movlb	0	; () banked
  9661  000448  3776               	rlcf	??_Reverse_4Byte& (0+255),f,b
  9662  00044A  3777               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
  9663  00044C  3778               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
  9664  00044E  3779               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
  9665  000450  2EE8               	decfsz	wreg,f,c
  9666  000452  D7F8               	goto	u9425
  9667  000454  0100               	movlb	0	; () banked
  9668  000456  5176               	movf	??_Reverse_4Byte& (0+255),w,b
  9669  000458  0100               	movlb	0	; () banked
  9670  00045A  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
  9671  00045C  0100               	movlb	0	; () banked
  9672  00045E  5177               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
  9673  000460  0100               	movlb	0	; () banked
  9674  000462  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
  9675  000464  0100               	movlb	0	; () banked
  9676  000466  5178               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
  9677  000468  0100               	movlb	0	; () banked
  9678  00046A  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
  9679  00046C  0100               	movlb	0	; () banked
  9680  00046E  5179               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
  9681  000470  0100               	movlb	0	; () banked
  9682  000472  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
  9683                           
  9684                           ; BSR set to: 0
  9685                           ;MISC.c: 421: temp += (This & 0x00000080) << 17;
  9686  000474  0E80               	movlw	128
  9687  000476  0100               	movlb	0	; () banked
  9688  000478  1572               	andwf	Reverse_4Byte@This& (0+255),w,b
  9689  00047A  0100               	movlb	0	; () banked
  9690  00047C  6F76               	movwf	??_Reverse_4Byte& (0+255),b
  9691  00047E  0E00               	movlw	0
  9692  000480  0100               	movlb	0	; () banked
  9693  000482  1573               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
  9694  000484  0100               	movlb	0	; () banked
  9695  000486  6F77               	movwf	(??_Reverse_4Byte+1)& (0+255),b
  9696  000488  0E00               	movlw	0
  9697  00048A  0100               	movlb	0	; () banked
  9698  00048C  1574               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
  9699  00048E  0100               	movlb	0	; () banked
  9700  000490  6F78               	movwf	(??_Reverse_4Byte+2)& (0+255),b
  9701  000492  0E00               	movlw	0
  9702  000494  0100               	movlb	0	; () banked
  9703  000496  1575               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
  9704  000498  0100               	movlb	0	; () banked
  9705  00049A  6F79               	movwf	(??_Reverse_4Byte+3)& (0+255),b
  9706  00049C  0E11               	movlw	17
  9707  00049E                     u9435:
  9708  00049E  90D8               	bcf	status,0,c
  9709  0004A0  0100               	movlb	0	; () banked
  9710  0004A2  3776               	rlcf	??_Reverse_4Byte& (0+255),f,b
  9711  0004A4  3777               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
  9712  0004A6  3778               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
  9713  0004A8  3779               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
  9714  0004AA  2EE8               	decfsz	wreg,f,c
  9715  0004AC  D7F8               	goto	u9435
  9716  0004AE  0100               	movlb	0	; () banked
  9717  0004B0  5176               	movf	??_Reverse_4Byte& (0+255),w,b
  9718  0004B2  0100               	movlb	0	; () banked
  9719  0004B4  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
  9720  0004B6  0100               	movlb	0	; () banked
  9721  0004B8  5177               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
  9722  0004BA  0100               	movlb	0	; () banked
  9723  0004BC  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
  9724  0004BE  0100               	movlb	0	; () banked
  9725  0004C0  5178               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
  9726  0004C2  0100               	movlb	0	; () banked
  9727  0004C4  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
  9728  0004C6  0100               	movlb	0	; () banked
  9729  0004C8  5179               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
  9730  0004CA  0100               	movlb	0	; () banked
  9731  0004CC  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
  9732                           
  9733                           ; BSR set to: 0
  9734                           ;MISC.c: 422: temp += (This & 0x00000100) << 15;
  9735  0004CE  0E00               	movlw	0
  9736  0004D0  0100               	movlb	0	; () banked
  9737  0004D2  1572               	andwf	Reverse_4Byte@This& (0+255),w,b
  9738  0004D4  0100               	movlb	0	; () banked
  9739  0004D6  6F76               	movwf	??_Reverse_4Byte& (0+255),b
  9740  0004D8  0E01               	movlw	1
  9741  0004DA  0100               	movlb	0	; () banked
  9742  0004DC  1573               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
  9743  0004DE  0100               	movlb	0	; () banked
  9744  0004E0  6F77               	movwf	(??_Reverse_4Byte+1)& (0+255),b
  9745  0004E2  0E00               	movlw	0
  9746  0004E4  0100               	movlb	0	; () banked
  9747  0004E6  1574               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
  9748  0004E8  0100               	movlb	0	; () banked
  9749  0004EA  6F78               	movwf	(??_Reverse_4Byte+2)& (0+255),b
  9750  0004EC  0E00               	movlw	0
  9751  0004EE  0100               	movlb	0	; () banked
  9752  0004F0  1575               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
  9753  0004F2  0100               	movlb	0	; () banked
  9754  0004F4  6F79               	movwf	(??_Reverse_4Byte+3)& (0+255),b
  9755  0004F6  0E0F               	movlw	15
  9756  0004F8                     u9445:
  9757  0004F8  90D8               	bcf	status,0,c
  9758  0004FA  0100               	movlb	0	; () banked
  9759  0004FC  3776               	rlcf	??_Reverse_4Byte& (0+255),f,b
  9760  0004FE  3777               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
  9761  000500  3778               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
  9762  000502  3779               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
  9763  000504  2EE8               	decfsz	wreg,f,c
  9764  000506  D7F8               	goto	u9445
  9765  000508  0100               	movlb	0	; () banked
  9766  00050A  5176               	movf	??_Reverse_4Byte& (0+255),w,b
  9767  00050C  0100               	movlb	0	; () banked
  9768  00050E  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
  9769  000510  0100               	movlb	0	; () banked
  9770  000512  5177               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
  9771  000514  0100               	movlb	0	; () banked
  9772  000516  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
  9773  000518  0100               	movlb	0	; () banked
  9774  00051A  5178               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
  9775  00051C  0100               	movlb	0	; () banked
  9776  00051E  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
  9777  000520  0100               	movlb	0	; () banked
  9778  000522  5179               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
  9779  000524  0100               	movlb	0	; () banked
  9780  000526  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;MISC.c: 423: temp += (This & 0x00000200) << 13;
  9784  000528  0E00               	movlw	0
  9785  00052A  0100               	movlb	0	; () banked
  9786  00052C  1572               	andwf	Reverse_4Byte@This& (0+255),w,b
  9787  00052E  0100               	movlb	0	; () banked
  9788  000530  6F76               	movwf	??_Reverse_4Byte& (0+255),b
  9789  000532  0E02               	movlw	2
  9790  000534  0100               	movlb	0	; () banked
  9791  000536  1573               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
  9792  000538  0100               	movlb	0	; () banked
  9793  00053A  6F77               	movwf	(??_Reverse_4Byte+1)& (0+255),b
  9794  00053C  0E00               	movlw	0
  9795  00053E  0100               	movlb	0	; () banked
  9796  000540  1574               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
  9797  000542  0100               	movlb	0	; () banked
  9798  000544  6F78               	movwf	(??_Reverse_4Byte+2)& (0+255),b
  9799  000546  0E00               	movlw	0
  9800  000548  0100               	movlb	0	; () banked
  9801  00054A  1575               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
  9802  00054C  0100               	movlb	0	; () banked
  9803  00054E  6F79               	movwf	(??_Reverse_4Byte+3)& (0+255),b
  9804  000550  0E0D               	movlw	13
  9805  000552                     u9455:
  9806  000552  90D8               	bcf	status,0,c
  9807  000554  0100               	movlb	0	; () banked
  9808  000556  3776               	rlcf	??_Reverse_4Byte& (0+255),f,b
  9809  000558  3777               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
  9810  00055A  3778               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
  9811  00055C  3779               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
  9812  00055E  2EE8               	decfsz	wreg,f,c
  9813  000560  D7F8               	goto	u9455
  9814  000562  0100               	movlb	0	; () banked
  9815  000564  5176               	movf	??_Reverse_4Byte& (0+255),w,b
  9816  000566  0100               	movlb	0	; () banked
  9817  000568  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
  9818  00056A  0100               	movlb	0	; () banked
  9819  00056C  5177               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
  9820  00056E  0100               	movlb	0	; () banked
  9821  000570  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
  9822  000572  0100               	movlb	0	; () banked
  9823  000574  5178               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
  9824  000576  0100               	movlb	0	; () banked
  9825  000578  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
  9826  00057A  0100               	movlb	0	; () banked
  9827  00057C  5179               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
  9828  00057E  0100               	movlb	0	; () banked
  9829  000580  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;MISC.c: 424: temp += (This & 0x00000400) << 11;
  9833  000582  0E00               	movlw	0
  9834  000584  0100               	movlb	0	; () banked
  9835  000586  1572               	andwf	Reverse_4Byte@This& (0+255),w,b
  9836  000588  0100               	movlb	0	; () banked
  9837  00058A  6F76               	movwf	??_Reverse_4Byte& (0+255),b
  9838  00058C  0E04               	movlw	4
  9839  00058E  0100               	movlb	0	; () banked
  9840  000590  1573               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
  9841  000592  0100               	movlb	0	; () banked
  9842  000594  6F77               	movwf	(??_Reverse_4Byte+1)& (0+255),b
  9843  000596  0E00               	movlw	0
  9844  000598  0100               	movlb	0	; () banked
  9845  00059A  1574               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
  9846  00059C  0100               	movlb	0	; () banked
  9847  00059E  6F78               	movwf	(??_Reverse_4Byte+2)& (0+255),b
  9848  0005A0  0E00               	movlw	0
  9849  0005A2  0100               	movlb	0	; () banked
  9850  0005A4  1575               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
  9851  0005A6  0100               	movlb	0	; () banked
  9852  0005A8  6F79               	movwf	(??_Reverse_4Byte+3)& (0+255),b
  9853  0005AA  0E0B               	movlw	11
  9854  0005AC                     u9465:
  9855  0005AC  90D8               	bcf	status,0,c
  9856  0005AE  0100               	movlb	0	; () banked
  9857  0005B0  3776               	rlcf	??_Reverse_4Byte& (0+255),f,b
  9858  0005B2  3777               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
  9859  0005B4  3778               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
  9860  0005B6  3779               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
  9861  0005B8  2EE8               	decfsz	wreg,f,c
  9862  0005BA  D7F8               	goto	u9465
  9863  0005BC  0100               	movlb	0	; () banked
  9864  0005BE  5176               	movf	??_Reverse_4Byte& (0+255),w,b
  9865  0005C0  0100               	movlb	0	; () banked
  9866  0005C2  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
  9867  0005C4  0100               	movlb	0	; () banked
  9868  0005C6  5177               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
  9869  0005C8  0100               	movlb	0	; () banked
  9870  0005CA  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
  9871  0005CC  0100               	movlb	0	; () banked
  9872  0005CE  5178               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
  9873  0005D0  0100               	movlb	0	; () banked
  9874  0005D2  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
  9875  0005D4  0100               	movlb	0	; () banked
  9876  0005D6  5179               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
  9877  0005D8  0100               	movlb	0	; () banked
  9878  0005DA  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
  9879                           
  9880                           ; BSR set to: 0
  9881                           ;MISC.c: 425: temp += (This & 0x00000800) << 9;
  9882  0005DC  0E00               	movlw	0
  9883  0005DE  0100               	movlb	0	; () banked
  9884  0005E0  1572               	andwf	Reverse_4Byte@This& (0+255),w,b
  9885  0005E2  0100               	movlb	0	; () banked
  9886  0005E4  6F76               	movwf	??_Reverse_4Byte& (0+255),b
  9887  0005E6  0E08               	movlw	8
  9888  0005E8  0100               	movlb	0	; () banked
  9889  0005EA  1573               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
  9890  0005EC  0100               	movlb	0	; () banked
  9891  0005EE  6F77               	movwf	(??_Reverse_4Byte+1)& (0+255),b
  9892  0005F0  0E00               	movlw	0
  9893  0005F2  0100               	movlb	0	; () banked
  9894  0005F4  1574               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
  9895  0005F6  0100               	movlb	0	; () banked
  9896  0005F8  6F78               	movwf	(??_Reverse_4Byte+2)& (0+255),b
  9897  0005FA  0E00               	movlw	0
  9898  0005FC  0100               	movlb	0	; () banked
  9899  0005FE  1575               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
  9900  000600  0100               	movlb	0	; () banked
  9901  000602  6F79               	movwf	(??_Reverse_4Byte+3)& (0+255),b
  9902  000604  0E09               	movlw	9
  9903  000606                     u9475:
  9904  000606  90D8               	bcf	status,0,c
  9905  000608  0100               	movlb	0	; () banked
  9906  00060A  3776               	rlcf	??_Reverse_4Byte& (0+255),f,b
  9907  00060C  3777               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
  9908  00060E  3778               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
  9909  000610  3779               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
  9910  000612  2EE8               	decfsz	wreg,f,c
  9911  000614  D7F8               	goto	u9475
  9912  000616  0100               	movlb	0	; () banked
  9913  000618  5176               	movf	??_Reverse_4Byte& (0+255),w,b
  9914  00061A  0100               	movlb	0	; () banked
  9915  00061C  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
  9916  00061E  0100               	movlb	0	; () banked
  9917  000620  5177               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
  9918  000622  0100               	movlb	0	; () banked
  9919  000624  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
  9920  000626  0100               	movlb	0	; () banked
  9921  000628  5178               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
  9922  00062A  0100               	movlb	0	; () banked
  9923  00062C  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
  9924  00062E  0100               	movlb	0	; () banked
  9925  000630  5179               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
  9926  000632  0100               	movlb	0	; () banked
  9927  000634  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
  9928                           
  9929                           ; BSR set to: 0
  9930                           ;MISC.c: 426: temp += (This & 0x00001000) << 7;
  9931  000636  0E00               	movlw	0
  9932  000638  0100               	movlb	0	; () banked
  9933  00063A  1572               	andwf	Reverse_4Byte@This& (0+255),w,b
  9934  00063C  0100               	movlb	0	; () banked
  9935  00063E  6F76               	movwf	??_Reverse_4Byte& (0+255),b
  9936  000640  0E10               	movlw	16
  9937  000642  0100               	movlb	0	; () banked
  9938  000644  1573               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
  9939  000646  0100               	movlb	0	; () banked
  9940  000648  6F77               	movwf	(??_Reverse_4Byte+1)& (0+255),b
  9941  00064A  0E00               	movlw	0
  9942  00064C  0100               	movlb	0	; () banked
  9943  00064E  1574               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
  9944  000650  0100               	movlb	0	; () banked
  9945  000652  6F78               	movwf	(??_Reverse_4Byte+2)& (0+255),b
  9946  000654  0E00               	movlw	0
  9947  000656  0100               	movlb	0	; () banked
  9948  000658  1575               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
  9949  00065A  0100               	movlb	0	; () banked
  9950  00065C  6F79               	movwf	(??_Reverse_4Byte+3)& (0+255),b
  9951  00065E  0E07               	movlw	7
  9952  000660                     u9485:
  9953  000660  90D8               	bcf	status,0,c
  9954  000662  0100               	movlb	0	; () banked
  9955  000664  3776               	rlcf	??_Reverse_4Byte& (0+255),f,b
  9956  000666  3777               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
  9957  000668  3778               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
  9958  00066A  3779               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
  9959  00066C  2EE8               	decfsz	wreg,f,c
  9960  00066E  D7F8               	goto	u9485
  9961  000670  0100               	movlb	0	; () banked
  9962  000672  5176               	movf	??_Reverse_4Byte& (0+255),w,b
  9963  000674  0100               	movlb	0	; () banked
  9964  000676  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
  9965  000678  0100               	movlb	0	; () banked
  9966  00067A  5177               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
  9967  00067C  0100               	movlb	0	; () banked
  9968  00067E  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
  9969  000680  0100               	movlb	0	; () banked
  9970  000682  5178               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
  9971  000684  0100               	movlb	0	; () banked
  9972  000686  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
  9973  000688  0100               	movlb	0	; () banked
  9974  00068A  5179               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
  9975  00068C  0100               	movlb	0	; () banked
  9976  00068E  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
  9977                           
  9978                           ; BSR set to: 0
  9979                           ;MISC.c: 427: temp += (This & 0x00002000) << 5;
  9980  000690  0E00               	movlw	0
  9981  000692  0100               	movlb	0	; () banked
  9982  000694  1572               	andwf	Reverse_4Byte@This& (0+255),w,b
  9983  000696  0100               	movlb	0	; () banked
  9984  000698  6F76               	movwf	??_Reverse_4Byte& (0+255),b
  9985  00069A  0E20               	movlw	32
  9986  00069C  0100               	movlb	0	; () banked
  9987  00069E  1573               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
  9988  0006A0  0100               	movlb	0	; () banked
  9989  0006A2  6F77               	movwf	(??_Reverse_4Byte+1)& (0+255),b
  9990  0006A4  0E00               	movlw	0
  9991  0006A6  0100               	movlb	0	; () banked
  9992  0006A8  1574               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
  9993  0006AA  0100               	movlb	0	; () banked
  9994  0006AC  6F78               	movwf	(??_Reverse_4Byte+2)& (0+255),b
  9995  0006AE  0E00               	movlw	0
  9996  0006B0  0100               	movlb	0	; () banked
  9997  0006B2  1575               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
  9998  0006B4  0100               	movlb	0	; () banked
  9999  0006B6  6F79               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 10000  0006B8  0E05               	movlw	5
 10001  0006BA                     u9495:
 10002  0006BA  90D8               	bcf	status,0,c
 10003  0006BC  0100               	movlb	0	; () banked
 10004  0006BE  3776               	rlcf	??_Reverse_4Byte& (0+255),f,b
 10005  0006C0  3777               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 10006  0006C2  3778               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 10007  0006C4  3779               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 10008  0006C6  2EE8               	decfsz	wreg,f,c
 10009  0006C8  D7F8               	goto	u9495
 10010  0006CA  0100               	movlb	0	; () banked
 10011  0006CC  5176               	movf	??_Reverse_4Byte& (0+255),w,b
 10012  0006CE  0100               	movlb	0	; () banked
 10013  0006D0  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10014  0006D2  0100               	movlb	0	; () banked
 10015  0006D4  5177               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 10016  0006D6  0100               	movlb	0	; () banked
 10017  0006D8  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10018  0006DA  0100               	movlb	0	; () banked
 10019  0006DC  5178               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 10020  0006DE  0100               	movlb	0	; () banked
 10021  0006E0  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10022  0006E2  0100               	movlb	0	; () banked
 10023  0006E4  5179               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 10024  0006E6  0100               	movlb	0	; () banked
 10025  0006E8  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 10026                           
 10027                           ; BSR set to: 0
 10028                           ;MISC.c: 428: temp += (This & 0x00004000) << 3;
 10029  0006EA  0E00               	movlw	0
 10030  0006EC  0100               	movlb	0	; () banked
 10031  0006EE  1572               	andwf	Reverse_4Byte@This& (0+255),w,b
 10032  0006F0  0100               	movlb	0	; () banked
 10033  0006F2  6F76               	movwf	??_Reverse_4Byte& (0+255),b
 10034  0006F4  0E40               	movlw	64
 10035  0006F6  0100               	movlb	0	; () banked
 10036  0006F8  1573               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 10037  0006FA  0100               	movlb	0	; () banked
 10038  0006FC  6F77               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 10039  0006FE  0E00               	movlw	0
 10040  000700  0100               	movlb	0	; () banked
 10041  000702  1574               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 10042  000704  0100               	movlb	0	; () banked
 10043  000706  6F78               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 10044  000708  0E00               	movlw	0
 10045  00070A  0100               	movlb	0	; () banked
 10046  00070C  1575               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 10047  00070E  0100               	movlb	0	; () banked
 10048  000710  6F79               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 10049  000712  0E03               	movlw	3
 10050  000714                     u9505:
 10051  000714  90D8               	bcf	status,0,c
 10052  000716  0100               	movlb	0	; () banked
 10053  000718  3776               	rlcf	??_Reverse_4Byte& (0+255),f,b
 10054  00071A  3777               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 10055  00071C  3778               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 10056  00071E  3779               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 10057  000720  2EE8               	decfsz	wreg,f,c
 10058  000722  D7F8               	goto	u9505
 10059  000724  0100               	movlb	0	; () banked
 10060  000726  5176               	movf	??_Reverse_4Byte& (0+255),w,b
 10061  000728  0100               	movlb	0	; () banked
 10062  00072A  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10063  00072C  0100               	movlb	0	; () banked
 10064  00072E  5177               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 10065  000730  0100               	movlb	0	; () banked
 10066  000732  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10067  000734  0100               	movlb	0	; () banked
 10068  000736  5178               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 10069  000738  0100               	movlb	0	; () banked
 10070  00073A  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10071  00073C  0100               	movlb	0	; () banked
 10072  00073E  5179               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 10073  000740  0100               	movlb	0	; () banked
 10074  000742  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;MISC.c: 429: temp += (This & 0x00008000) << 1;
 10078  000744  0E00               	movlw	0
 10079  000746  0100               	movlb	0	; () banked
 10080  000748  1572               	andwf	Reverse_4Byte@This& (0+255),w,b
 10081  00074A  0100               	movlb	0	; () banked
 10082  00074C  6F76               	movwf	??_Reverse_4Byte& (0+255),b
 10083  00074E  0E80               	movlw	128
 10084  000750  0100               	movlb	0	; () banked
 10085  000752  1573               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 10086  000754  0100               	movlb	0	; () banked
 10087  000756  6F77               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 10088  000758  0E00               	movlw	0
 10089  00075A  0100               	movlb	0	; () banked
 10090  00075C  1574               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 10091  00075E  0100               	movlb	0	; () banked
 10092  000760  6F78               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 10093  000762  0E00               	movlw	0
 10094  000764  0100               	movlb	0	; () banked
 10095  000766  1575               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 10096  000768  0100               	movlb	0	; () banked
 10097  00076A  6F79               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 10098  00076C  90D8               	bcf	status,0,c
 10099  00076E  0100               	movlb	0	; () banked
 10100  000770  3576               	rlcf	??_Reverse_4Byte& (0+255),w,b
 10101  000772  0100               	movlb	0	; () banked
 10102  000774  6F7A               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 10103  000776  0100               	movlb	0	; () banked
 10104  000778  3577               	rlcf	(??_Reverse_4Byte+1)& (0+255),w,b
 10105  00077A  0100               	movlb	0	; () banked
 10106  00077C  6F7B               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 10107  00077E  0100               	movlb	0	; () banked
 10108  000780  3578               	rlcf	(??_Reverse_4Byte+2)& (0+255),w,b
 10109  000782  0100               	movlb	0	; () banked
 10110  000784  6F7C               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 10111  000786  0100               	movlb	0	; () banked
 10112  000788  3579               	rlcf	(??_Reverse_4Byte+3)& (0+255),w,b
 10113  00078A  0100               	movlb	0	; () banked
 10114  00078C  6F7D               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 10115  00078E  0100               	movlb	0	; () banked
 10116  000790  517A               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 10117  000792  0100               	movlb	0	; () banked
 10118  000794  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10119  000796  0100               	movlb	0	; () banked
 10120  000798  517B               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 10121  00079A  0100               	movlb	0	; () banked
 10122  00079C  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10123  00079E  0100               	movlb	0	; () banked
 10124  0007A0  517C               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 10125  0007A2  0100               	movlb	0	; () banked
 10126  0007A4  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10127  0007A6  0100               	movlb	0	; () banked
 10128  0007A8  517D               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 10129  0007AA  0100               	movlb	0	; () banked
 10130  0007AC  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 10131                           
 10132                           ; BSR set to: 0
 10133                           ;MISC.c: 430: temp += (This & 0x00010000) >> 1;
 10134  0007AE  C072  F076         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 10135  0007B2  C073  F077         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 10136  0007B6  C074  F078         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 10137  0007BA  C075  F079         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 10138  0007BE  0100               	movlb	0	; () banked
 10139  0007C0  90D8               	bcf	status,0,c
 10140  0007C2  3379               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 10141  0007C4  3378               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 10142  0007C6  3377               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 10143  0007C8  3376               	rrcf	??_Reverse_4Byte& (0+255),f,b
 10144  0007CA  0E00               	movlw	0
 10145  0007CC  0100               	movlb	0	; () banked
 10146  0007CE  1576               	andwf	??_Reverse_4Byte& (0+255),w,b
 10147  0007D0  0100               	movlb	0	; () banked
 10148  0007D2  6F7A               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 10149  0007D4  0E80               	movlw	128
 10150  0007D6  0100               	movlb	0	; () banked
 10151  0007D8  1577               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 10152  0007DA  0100               	movlb	0	; () banked
 10153  0007DC  6F7B               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 10154  0007DE  0E00               	movlw	0
 10155  0007E0  0100               	movlb	0	; () banked
 10156  0007E2  1578               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 10157  0007E4  0100               	movlb	0	; () banked
 10158  0007E6  6F7C               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 10159  0007E8  0E00               	movlw	0
 10160  0007EA  0100               	movlb	0	; () banked
 10161  0007EC  1579               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 10162  0007EE  0100               	movlb	0	; () banked
 10163  0007F0  6F7D               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 10164  0007F2  0100               	movlb	0	; () banked
 10165  0007F4  517A               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 10166  0007F6  0100               	movlb	0	; () banked
 10167  0007F8  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10168  0007FA  0100               	movlb	0	; () banked
 10169  0007FC  517B               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 10170  0007FE  0100               	movlb	0	; () banked
 10171  000800  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10172  000802  0100               	movlb	0	; () banked
 10173  000804  517C               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 10174  000806  0100               	movlb	0	; () banked
 10175  000808  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10176  00080A  0100               	movlb	0	; () banked
 10177  00080C  517D               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 10178  00080E  0100               	movlb	0	; () banked
 10179  000810  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 10180                           
 10181                           ; BSR set to: 0
 10182                           ;MISC.c: 431: temp += (This & 0x00020000) >> 3;
 10183  000812  C072  F076         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 10184  000816  C073  F077         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 10185  00081A  C074  F078         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 10186  00081E  C075  F079         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 10187  000822  0E04               	movlw	4
 10188  000824  D006               	goto	u9510
 10189  000826                     u9515:
 10190  000826  0100               	movlb	0	; () banked
 10191  000828  90D8               	bcf	status,0,c
 10192  00082A  3379               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 10193  00082C  3378               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 10194  00082E  3377               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 10195  000830  3376               	rrcf	??_Reverse_4Byte& (0+255),f,b
 10196  000832                     u9510:
 10197  000832  2EE8               	decfsz	wreg,f,c
 10198  000834  D7F8               	goto	u9515
 10199  000836  0E00               	movlw	0
 10200  000838  0100               	movlb	0	; () banked
 10201  00083A  1576               	andwf	??_Reverse_4Byte& (0+255),w,b
 10202  00083C  0100               	movlb	0	; () banked
 10203  00083E  6F7A               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 10204  000840  0E40               	movlw	64
 10205  000842  0100               	movlb	0	; () banked
 10206  000844  1577               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 10207  000846  0100               	movlb	0	; () banked
 10208  000848  6F7B               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 10209  00084A  0E00               	movlw	0
 10210  00084C  0100               	movlb	0	; () banked
 10211  00084E  1578               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 10212  000850  0100               	movlb	0	; () banked
 10213  000852  6F7C               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 10214  000854  0E00               	movlw	0
 10215  000856  0100               	movlb	0	; () banked
 10216  000858  1579               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 10217  00085A  0100               	movlb	0	; () banked
 10218  00085C  6F7D               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 10219  00085E  0100               	movlb	0	; () banked
 10220  000860  517A               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 10221  000862  0100               	movlb	0	; () banked
 10222  000864  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10223  000866  0100               	movlb	0	; () banked
 10224  000868  517B               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 10225  00086A  0100               	movlb	0	; () banked
 10226  00086C  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10227  00086E  0100               	movlb	0	; () banked
 10228  000870  517C               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 10229  000872  0100               	movlb	0	; () banked
 10230  000874  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10231  000876  0100               	movlb	0	; () banked
 10232  000878  517D               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 10233  00087A  0100               	movlb	0	; () banked
 10234  00087C  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 10235                           
 10236                           ; BSR set to: 0
 10237                           ;MISC.c: 432: temp += (This & 0x00040000) >> 5;
 10238  00087E  C072  F076         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 10239  000882  C073  F077         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 10240  000886  C074  F078         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 10241  00088A  C075  F079         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 10242  00088E  0E06               	movlw	6
 10243  000890  D006               	goto	u9520
 10244  000892                     u9525:
 10245  000892  0100               	movlb	0	; () banked
 10246  000894  90D8               	bcf	status,0,c
 10247  000896  3379               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 10248  000898  3378               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 10249  00089A  3377               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 10250  00089C  3376               	rrcf	??_Reverse_4Byte& (0+255),f,b
 10251  00089E                     u9520:
 10252  00089E  2EE8               	decfsz	wreg,f,c
 10253  0008A0  D7F8               	goto	u9525
 10254  0008A2  0E00               	movlw	0
 10255  0008A4  0100               	movlb	0	; () banked
 10256  0008A6  1576               	andwf	??_Reverse_4Byte& (0+255),w,b
 10257  0008A8  0100               	movlb	0	; () banked
 10258  0008AA  6F7A               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 10259  0008AC  0E20               	movlw	32
 10260  0008AE  0100               	movlb	0	; () banked
 10261  0008B0  1577               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 10262  0008B2  0100               	movlb	0	; () banked
 10263  0008B4  6F7B               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 10264  0008B6  0E00               	movlw	0
 10265  0008B8  0100               	movlb	0	; () banked
 10266  0008BA  1578               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 10267  0008BC  0100               	movlb	0	; () banked
 10268  0008BE  6F7C               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 10269  0008C0  0E00               	movlw	0
 10270  0008C2  0100               	movlb	0	; () banked
 10271  0008C4  1579               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 10272  0008C6  0100               	movlb	0	; () banked
 10273  0008C8  6F7D               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 10274  0008CA  0100               	movlb	0	; () banked
 10275  0008CC  517A               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 10276  0008CE  0100               	movlb	0	; () banked
 10277  0008D0  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10278  0008D2  0100               	movlb	0	; () banked
 10279  0008D4  517B               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 10280  0008D6  0100               	movlb	0	; () banked
 10281  0008D8  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10282  0008DA  0100               	movlb	0	; () banked
 10283  0008DC  517C               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 10284  0008DE  0100               	movlb	0	; () banked
 10285  0008E0  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10286  0008E2  0100               	movlb	0	; () banked
 10287  0008E4  517D               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 10288  0008E6  0100               	movlb	0	; () banked
 10289  0008E8  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 10290                           
 10291                           ; BSR set to: 0
 10292                           ;MISC.c: 433: temp += (This & 0x00080000) >> 7;
 10293  0008EA  C072  F076         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 10294  0008EE  C073  F077         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 10295  0008F2  C074  F078         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 10296  0008F6  C075  F079         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 10297  0008FA  0E08               	movlw	8
 10298  0008FC  D006               	goto	u9530
 10299  0008FE                     u9535:
 10300  0008FE  0100               	movlb	0	; () banked
 10301  000900  90D8               	bcf	status,0,c
 10302  000902  3379               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 10303  000904  3378               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 10304  000906  3377               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 10305  000908  3376               	rrcf	??_Reverse_4Byte& (0+255),f,b
 10306  00090A                     u9530:
 10307  00090A  2EE8               	decfsz	wreg,f,c
 10308  00090C  D7F8               	goto	u9535
 10309  00090E  0E00               	movlw	0
 10310  000910  0100               	movlb	0	; () banked
 10311  000912  1576               	andwf	??_Reverse_4Byte& (0+255),w,b
 10312  000914  0100               	movlb	0	; () banked
 10313  000916  6F7A               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 10314  000918  0E10               	movlw	16
 10315  00091A  0100               	movlb	0	; () banked
 10316  00091C  1577               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 10317  00091E  0100               	movlb	0	; () banked
 10318  000920  6F7B               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 10319  000922  0E00               	movlw	0
 10320  000924  0100               	movlb	0	; () banked
 10321  000926  1578               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 10322  000928  0100               	movlb	0	; () banked
 10323  00092A  6F7C               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 10324  00092C  0E00               	movlw	0
 10325  00092E  0100               	movlb	0	; () banked
 10326  000930  1579               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 10327  000932  0100               	movlb	0	; () banked
 10328  000934  6F7D               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 10329  000936  0100               	movlb	0	; () banked
 10330  000938  517A               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 10331  00093A  0100               	movlb	0	; () banked
 10332  00093C  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10333  00093E  0100               	movlb	0	; () banked
 10334  000940  517B               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 10335  000942  0100               	movlb	0	; () banked
 10336  000944  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10337  000946  0100               	movlb	0	; () banked
 10338  000948  517C               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 10339  00094A  0100               	movlb	0	; () banked
 10340  00094C  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10341  00094E  0100               	movlb	0	; () banked
 10342  000950  517D               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 10343  000952  0100               	movlb	0	; () banked
 10344  000954  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 10345                           
 10346                           ; BSR set to: 0
 10347                           ;MISC.c: 434: temp += (This & 0x00100000) >> 9;
 10348  000956  C072  F076         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 10349  00095A  C073  F077         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 10350  00095E  C074  F078         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 10351  000962  C075  F079         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 10352  000966  0E0A               	movlw	10
 10353  000968  D006               	goto	u9540
 10354  00096A                     u9545:
 10355  00096A  0100               	movlb	0	; () banked
 10356  00096C  90D8               	bcf	status,0,c
 10357  00096E  3379               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 10358  000970  3378               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 10359  000972  3377               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 10360  000974  3376               	rrcf	??_Reverse_4Byte& (0+255),f,b
 10361  000976                     u9540:
 10362  000976  2EE8               	decfsz	wreg,f,c
 10363  000978  D7F8               	goto	u9545
 10364  00097A  0E00               	movlw	0
 10365  00097C  0100               	movlb	0	; () banked
 10366  00097E  1576               	andwf	??_Reverse_4Byte& (0+255),w,b
 10367  000980  0100               	movlb	0	; () banked
 10368  000982  6F7A               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 10369  000984  0E08               	movlw	8
 10370  000986  0100               	movlb	0	; () banked
 10371  000988  1577               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 10372  00098A  0100               	movlb	0	; () banked
 10373  00098C  6F7B               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 10374  00098E  0E00               	movlw	0
 10375  000990  0100               	movlb	0	; () banked
 10376  000992  1578               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 10377  000994  0100               	movlb	0	; () banked
 10378  000996  6F7C               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 10379  000998  0E00               	movlw	0
 10380  00099A  0100               	movlb	0	; () banked
 10381  00099C  1579               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 10382  00099E  0100               	movlb	0	; () banked
 10383  0009A0  6F7D               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 10384  0009A2  0100               	movlb	0	; () banked
 10385  0009A4  517A               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 10386  0009A6  0100               	movlb	0	; () banked
 10387  0009A8  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10388  0009AA  0100               	movlb	0	; () banked
 10389  0009AC  517B               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 10390  0009AE  0100               	movlb	0	; () banked
 10391  0009B0  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10392  0009B2  0100               	movlb	0	; () banked
 10393  0009B4  517C               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 10394  0009B6  0100               	movlb	0	; () banked
 10395  0009B8  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10396  0009BA  0100               	movlb	0	; () banked
 10397  0009BC  517D               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 10398  0009BE  0100               	movlb	0	; () banked
 10399  0009C0  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 10400                           
 10401                           ; BSR set to: 0
 10402                           ;MISC.c: 435: temp += (This & 0x00200000) >> 11;
 10403  0009C2  C072  F076         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 10404  0009C6  C073  F077         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 10405  0009CA  C074  F078         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 10406  0009CE  C075  F079         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 10407  0009D2  0E0C               	movlw	12
 10408  0009D4  D006               	goto	u9550
 10409  0009D6                     u9555:
 10410  0009D6  0100               	movlb	0	; () banked
 10411  0009D8  90D8               	bcf	status,0,c
 10412  0009DA  3379               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 10413  0009DC  3378               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 10414  0009DE  3377               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 10415  0009E0  3376               	rrcf	??_Reverse_4Byte& (0+255),f,b
 10416  0009E2                     u9550:
 10417  0009E2  2EE8               	decfsz	wreg,f,c
 10418  0009E4  D7F8               	goto	u9555
 10419  0009E6  0E00               	movlw	0
 10420  0009E8  0100               	movlb	0	; () banked
 10421  0009EA  1576               	andwf	??_Reverse_4Byte& (0+255),w,b
 10422  0009EC  0100               	movlb	0	; () banked
 10423  0009EE  6F7A               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 10424  0009F0  0E04               	movlw	4
 10425  0009F2  0100               	movlb	0	; () banked
 10426  0009F4  1577               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 10427  0009F6  0100               	movlb	0	; () banked
 10428  0009F8  6F7B               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 10429  0009FA  0E00               	movlw	0
 10430  0009FC  0100               	movlb	0	; () banked
 10431  0009FE  1578               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 10432  000A00  0100               	movlb	0	; () banked
 10433  000A02  6F7C               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 10434  000A04  0E00               	movlw	0
 10435  000A06  0100               	movlb	0	; () banked
 10436  000A08  1579               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 10437  000A0A  0100               	movlb	0	; () banked
 10438  000A0C  6F7D               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 10439  000A0E  0100               	movlb	0	; () banked
 10440  000A10  517A               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 10441  000A12  0100               	movlb	0	; () banked
 10442  000A14  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10443  000A16  0100               	movlb	0	; () banked
 10444  000A18  517B               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 10445  000A1A  0100               	movlb	0	; () banked
 10446  000A1C  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10447  000A1E  0100               	movlb	0	; () banked
 10448  000A20  517C               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 10449  000A22  0100               	movlb	0	; () banked
 10450  000A24  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10451  000A26  0100               	movlb	0	; () banked
 10452  000A28  517D               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 10453  000A2A  0100               	movlb	0	; () banked
 10454  000A2C  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 10455                           
 10456                           ; BSR set to: 0
 10457                           ;MISC.c: 436: temp += (This & 0x00400000) >> 13;
 10458  000A2E  C072  F076         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 10459  000A32  C073  F077         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 10460  000A36  C074  F078         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 10461  000A3A  C075  F079         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 10462  000A3E  0E0E               	movlw	14
 10463  000A40  D006               	goto	u9560
 10464  000A42                     u9565:
 10465  000A42  0100               	movlb	0	; () banked
 10466  000A44  90D8               	bcf	status,0,c
 10467  000A46  3379               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 10468  000A48  3378               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 10469  000A4A  3377               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 10470  000A4C  3376               	rrcf	??_Reverse_4Byte& (0+255),f,b
 10471  000A4E                     u9560:
 10472  000A4E  2EE8               	decfsz	wreg,f,c
 10473  000A50  D7F8               	goto	u9565
 10474  000A52  0E00               	movlw	0
 10475  000A54  0100               	movlb	0	; () banked
 10476  000A56  1576               	andwf	??_Reverse_4Byte& (0+255),w,b
 10477  000A58  0100               	movlb	0	; () banked
 10478  000A5A  6F7A               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 10479  000A5C  0E02               	movlw	2
 10480  000A5E  0100               	movlb	0	; () banked
 10481  000A60  1577               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 10482  000A62  0100               	movlb	0	; () banked
 10483  000A64  6F7B               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 10484  000A66  0E00               	movlw	0
 10485  000A68  0100               	movlb	0	; () banked
 10486  000A6A  1578               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 10487  000A6C  0100               	movlb	0	; () banked
 10488  000A6E  6F7C               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 10489  000A70  0E00               	movlw	0
 10490  000A72  0100               	movlb	0	; () banked
 10491  000A74  1579               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 10492  000A76  0100               	movlb	0	; () banked
 10493  000A78  6F7D               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 10494  000A7A  0100               	movlb	0	; () banked
 10495  000A7C  517A               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 10496  000A7E  0100               	movlb	0	; () banked
 10497  000A80  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10498  000A82  0100               	movlb	0	; () banked
 10499  000A84  517B               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 10500  000A86  0100               	movlb	0	; () banked
 10501  000A88  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10502  000A8A  0100               	movlb	0	; () banked
 10503  000A8C  517C               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 10504  000A8E  0100               	movlb	0	; () banked
 10505  000A90  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10506  000A92  0100               	movlb	0	; () banked
 10507  000A94  517D               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 10508  000A96  0100               	movlb	0	; () banked
 10509  000A98  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 10510                           
 10511                           ; BSR set to: 0
 10512                           ;MISC.c: 437: temp += (This & 0x00800000) >> 15;
 10513  000A9A  C072  F076         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 10514  000A9E  C073  F077         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 10515  000AA2  C074  F078         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 10516  000AA6  C075  F079         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 10517  000AAA  0E10               	movlw	16
 10518  000AAC  D006               	goto	u9570
 10519  000AAE                     u9575:
 10520  000AAE  0100               	movlb	0	; () banked
 10521  000AB0  90D8               	bcf	status,0,c
 10522  000AB2  3379               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 10523  000AB4  3378               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 10524  000AB6  3377               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 10525  000AB8  3376               	rrcf	??_Reverse_4Byte& (0+255),f,b
 10526  000ABA                     u9570:
 10527  000ABA  2EE8               	decfsz	wreg,f,c
 10528  000ABC  D7F8               	goto	u9575
 10529  000ABE  0E00               	movlw	0
 10530  000AC0  0100               	movlb	0	; () banked
 10531  000AC2  1576               	andwf	??_Reverse_4Byte& (0+255),w,b
 10532  000AC4  0100               	movlb	0	; () banked
 10533  000AC6  6F7A               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 10534  000AC8  0E01               	movlw	1
 10535  000ACA  0100               	movlb	0	; () banked
 10536  000ACC  1577               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 10537  000ACE  0100               	movlb	0	; () banked
 10538  000AD0  6F7B               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 10539  000AD2  0E00               	movlw	0
 10540  000AD4  0100               	movlb	0	; () banked
 10541  000AD6  1578               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 10542  000AD8  0100               	movlb	0	; () banked
 10543  000ADA  6F7C               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 10544  000ADC  0E00               	movlw	0
 10545  000ADE  0100               	movlb	0	; () banked
 10546  000AE0  1579               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 10547  000AE2  0100               	movlb	0	; () banked
 10548  000AE4  6F7D               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 10549  000AE6  0100               	movlb	0	; () banked
 10550  000AE8  517A               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 10551  000AEA  0100               	movlb	0	; () banked
 10552  000AEC  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10553  000AEE  0100               	movlb	0	; () banked
 10554  000AF0  517B               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 10555  000AF2  0100               	movlb	0	; () banked
 10556  000AF4  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10557  000AF6  0100               	movlb	0	; () banked
 10558  000AF8  517C               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 10559  000AFA  0100               	movlb	0	; () banked
 10560  000AFC  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10561  000AFE  0100               	movlb	0	; () banked
 10562  000B00  517D               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 10563  000B02  0100               	movlb	0	; () banked
 10564  000B04  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 10565                           
 10566                           ; BSR set to: 0
 10567                           ;MISC.c: 438: temp += (This & 0x01000000) >> 17;
 10568  000B06  C072  F076         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 10569  000B0A  C073  F077         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 10570  000B0E  C074  F078         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 10571  000B12  C075  F079         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 10572  000B16  0E12               	movlw	18
 10573  000B18  D006               	goto	u9580
 10574  000B1A                     u9585:
 10575  000B1A  0100               	movlb	0	; () banked
 10576  000B1C  90D8               	bcf	status,0,c
 10577  000B1E  3379               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 10578  000B20  3378               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 10579  000B22  3377               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 10580  000B24  3376               	rrcf	??_Reverse_4Byte& (0+255),f,b
 10581  000B26                     u9580:
 10582  000B26  2EE8               	decfsz	wreg,f,c
 10583  000B28  D7F8               	goto	u9585
 10584  000B2A  0E80               	movlw	128
 10585  000B2C  0100               	movlb	0	; () banked
 10586  000B2E  1576               	andwf	??_Reverse_4Byte& (0+255),w,b
 10587  000B30  0100               	movlb	0	; () banked
 10588  000B32  6F7A               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 10589  000B34  0E00               	movlw	0
 10590  000B36  0100               	movlb	0	; () banked
 10591  000B38  1577               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 10592  000B3A  0100               	movlb	0	; () banked
 10593  000B3C  6F7B               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 10594  000B3E  0E00               	movlw	0
 10595  000B40  0100               	movlb	0	; () banked
 10596  000B42  1578               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 10597  000B44  0100               	movlb	0	; () banked
 10598  000B46  6F7C               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 10599  000B48  0E00               	movlw	0
 10600  000B4A  0100               	movlb	0	; () banked
 10601  000B4C  1579               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 10602  000B4E  0100               	movlb	0	; () banked
 10603  000B50  6F7D               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 10604  000B52  0100               	movlb	0	; () banked
 10605  000B54  517A               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 10606  000B56  0100               	movlb	0	; () banked
 10607  000B58  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10608  000B5A  0100               	movlb	0	; () banked
 10609  000B5C  517B               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 10610  000B5E  0100               	movlb	0	; () banked
 10611  000B60  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10612  000B62  0100               	movlb	0	; () banked
 10613  000B64  517C               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 10614  000B66  0100               	movlb	0	; () banked
 10615  000B68  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10616  000B6A  0100               	movlb	0	; () banked
 10617  000B6C  517D               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 10618  000B6E  0100               	movlb	0	; () banked
 10619  000B70  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 10620                           
 10621                           ; BSR set to: 0
 10622                           ;MISC.c: 439: temp += (This & 0x02000000) >> 19;
 10623  000B72  C072  F076         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 10624  000B76  C073  F077         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 10625  000B7A  C074  F078         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 10626  000B7E  C075  F079         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 10627  000B82  0E14               	movlw	20
 10628  000B84  D006               	goto	u9590
 10629  000B86                     u9595:
 10630  000B86  0100               	movlb	0	; () banked
 10631  000B88  90D8               	bcf	status,0,c
 10632  000B8A  3379               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 10633  000B8C  3378               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 10634  000B8E  3377               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 10635  000B90  3376               	rrcf	??_Reverse_4Byte& (0+255),f,b
 10636  000B92                     u9590:
 10637  000B92  2EE8               	decfsz	wreg,f,c
 10638  000B94  D7F8               	goto	u9595
 10639  000B96  0E40               	movlw	64
 10640  000B98  0100               	movlb	0	; () banked
 10641  000B9A  1576               	andwf	??_Reverse_4Byte& (0+255),w,b
 10642  000B9C  0100               	movlb	0	; () banked
 10643  000B9E  6F7A               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 10644  000BA0  0E00               	movlw	0
 10645  000BA2  0100               	movlb	0	; () banked
 10646  000BA4  1577               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 10647  000BA6  0100               	movlb	0	; () banked
 10648  000BA8  6F7B               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 10649  000BAA  0E00               	movlw	0
 10650  000BAC  0100               	movlb	0	; () banked
 10651  000BAE  1578               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 10652  000BB0  0100               	movlb	0	; () banked
 10653  000BB2  6F7C               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 10654  000BB4  0E00               	movlw	0
 10655  000BB6  0100               	movlb	0	; () banked
 10656  000BB8  1579               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 10657  000BBA  0100               	movlb	0	; () banked
 10658  000BBC  6F7D               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 10659  000BBE  0100               	movlb	0	; () banked
 10660  000BC0  517A               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 10661  000BC2  0100               	movlb	0	; () banked
 10662  000BC4  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10663  000BC6  0100               	movlb	0	; () banked
 10664  000BC8  517B               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 10665  000BCA  0100               	movlb	0	; () banked
 10666  000BCC  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10667  000BCE  0100               	movlb	0	; () banked
 10668  000BD0  517C               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 10669  000BD2  0100               	movlb	0	; () banked
 10670  000BD4  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10671  000BD6  0100               	movlb	0	; () banked
 10672  000BD8  517D               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 10673  000BDA  0100               	movlb	0	; () banked
 10674  000BDC  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 10675                           
 10676                           ; BSR set to: 0
 10677                           ;MISC.c: 440: temp += (This & 0x04000000) >> 21;
 10678  000BDE  C072  F076         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 10679  000BE2  C073  F077         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 10680  000BE6  C074  F078         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 10681  000BEA  C075  F079         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 10682  000BEE  0E16               	movlw	22
 10683  000BF0  D006               	goto	u9600
 10684  000BF2                     u9605:
 10685  000BF2  0100               	movlb	0	; () banked
 10686  000BF4  90D8               	bcf	status,0,c
 10687  000BF6  3379               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 10688  000BF8  3378               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 10689  000BFA  3377               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 10690  000BFC  3376               	rrcf	??_Reverse_4Byte& (0+255),f,b
 10691  000BFE                     u9600:
 10692  000BFE  2EE8               	decfsz	wreg,f,c
 10693  000C00  D7F8               	goto	u9605
 10694  000C02  0E20               	movlw	32
 10695  000C04  0100               	movlb	0	; () banked
 10696  000C06  1576               	andwf	??_Reverse_4Byte& (0+255),w,b
 10697  000C08  0100               	movlb	0	; () banked
 10698  000C0A  6F7A               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 10699  000C0C  0E00               	movlw	0
 10700  000C0E  0100               	movlb	0	; () banked
 10701  000C10  1577               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 10702  000C12  0100               	movlb	0	; () banked
 10703  000C14  6F7B               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 10704  000C16  0E00               	movlw	0
 10705  000C18  0100               	movlb	0	; () banked
 10706  000C1A  1578               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 10707  000C1C  0100               	movlb	0	; () banked
 10708  000C1E  6F7C               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 10709  000C20  0E00               	movlw	0
 10710  000C22  0100               	movlb	0	; () banked
 10711  000C24  1579               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 10712  000C26  0100               	movlb	0	; () banked
 10713  000C28  6F7D               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 10714  000C2A  0100               	movlb	0	; () banked
 10715  000C2C  517A               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 10716  000C2E  0100               	movlb	0	; () banked
 10717  000C30  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10718  000C32  0100               	movlb	0	; () banked
 10719  000C34  517B               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 10720  000C36  0100               	movlb	0	; () banked
 10721  000C38  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10722  000C3A  0100               	movlb	0	; () banked
 10723  000C3C  517C               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 10724  000C3E  0100               	movlb	0	; () banked
 10725  000C40  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10726  000C42  0100               	movlb	0	; () banked
 10727  000C44  517D               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 10728  000C46  0100               	movlb	0	; () banked
 10729  000C48  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 10730                           
 10731                           ; BSR set to: 0
 10732                           ;MISC.c: 441: temp += (This & 0x08000000) >> 23;
 10733  000C4A  C072  F076         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 10734  000C4E  C073  F077         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 10735  000C52  C074  F078         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 10736  000C56  C075  F079         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 10737  000C5A  0E18               	movlw	24
 10738  000C5C  D006               	goto	u9610
 10739  000C5E                     u9615:
 10740  000C5E  0100               	movlb	0	; () banked
 10741  000C60  90D8               	bcf	status,0,c
 10742  000C62  3379               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 10743  000C64  3378               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 10744  000C66  3377               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 10745  000C68  3376               	rrcf	??_Reverse_4Byte& (0+255),f,b
 10746  000C6A                     u9610:
 10747  000C6A  2EE8               	decfsz	wreg,f,c
 10748  000C6C  D7F8               	goto	u9615
 10749  000C6E  0E10               	movlw	16
 10750  000C70  0100               	movlb	0	; () banked
 10751  000C72  1576               	andwf	??_Reverse_4Byte& (0+255),w,b
 10752  000C74  0100               	movlb	0	; () banked
 10753  000C76  6F7A               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 10754  000C78  0E00               	movlw	0
 10755  000C7A  0100               	movlb	0	; () banked
 10756  000C7C  1577               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 10757  000C7E  0100               	movlb	0	; () banked
 10758  000C80  6F7B               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 10759  000C82  0E00               	movlw	0
 10760  000C84  0100               	movlb	0	; () banked
 10761  000C86  1578               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 10762  000C88  0100               	movlb	0	; () banked
 10763  000C8A  6F7C               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 10764  000C8C  0E00               	movlw	0
 10765  000C8E  0100               	movlb	0	; () banked
 10766  000C90  1579               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 10767  000C92  0100               	movlb	0	; () banked
 10768  000C94  6F7D               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 10769  000C96  0100               	movlb	0	; () banked
 10770  000C98  517A               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 10771  000C9A  0100               	movlb	0	; () banked
 10772  000C9C  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10773  000C9E  0100               	movlb	0	; () banked
 10774  000CA0  517B               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 10775  000CA2  0100               	movlb	0	; () banked
 10776  000CA4  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10777  000CA6  0100               	movlb	0	; () banked
 10778  000CA8  517C               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 10779  000CAA  0100               	movlb	0	; () banked
 10780  000CAC  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10781  000CAE  0100               	movlb	0	; () banked
 10782  000CB0  517D               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 10783  000CB2  0100               	movlb	0	; () banked
 10784  000CB4  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 10785                           
 10786                           ; BSR set to: 0
 10787                           ;MISC.c: 442: temp += (This & 0x10000000) >> 25;
 10788  000CB6  C072  F076         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 10789  000CBA  C073  F077         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 10790  000CBE  C074  F078         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 10791  000CC2  C075  F079         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 10792  000CC6  0E1A               	movlw	26
 10793  000CC8  D006               	goto	u9620
 10794  000CCA                     u9625:
 10795  000CCA  0100               	movlb	0	; () banked
 10796  000CCC  90D8               	bcf	status,0,c
 10797  000CCE  3379               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 10798  000CD0  3378               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 10799  000CD2  3377               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 10800  000CD4  3376               	rrcf	??_Reverse_4Byte& (0+255),f,b
 10801  000CD6                     u9620:
 10802  000CD6  2EE8               	decfsz	wreg,f,c
 10803  000CD8  D7F8               	goto	u9625
 10804  000CDA  0E08               	movlw	8
 10805  000CDC  0100               	movlb	0	; () banked
 10806  000CDE  1576               	andwf	??_Reverse_4Byte& (0+255),w,b
 10807  000CE0  0100               	movlb	0	; () banked
 10808  000CE2  6F7A               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 10809  000CE4  0E00               	movlw	0
 10810  000CE6  0100               	movlb	0	; () banked
 10811  000CE8  1577               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 10812  000CEA  0100               	movlb	0	; () banked
 10813  000CEC  6F7B               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 10814  000CEE  0E00               	movlw	0
 10815  000CF0  0100               	movlb	0	; () banked
 10816  000CF2  1578               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 10817  000CF4  0100               	movlb	0	; () banked
 10818  000CF6  6F7C               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 10819  000CF8  0E00               	movlw	0
 10820  000CFA  0100               	movlb	0	; () banked
 10821  000CFC  1579               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 10822  000CFE  0100               	movlb	0	; () banked
 10823  000D00  6F7D               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 10824  000D02  0100               	movlb	0	; () banked
 10825  000D04  517A               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 10826  000D06  0100               	movlb	0	; () banked
 10827  000D08  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10828  000D0A  0100               	movlb	0	; () banked
 10829  000D0C  517B               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 10830  000D0E  0100               	movlb	0	; () banked
 10831  000D10  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10832  000D12  0100               	movlb	0	; () banked
 10833  000D14  517C               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 10834  000D16  0100               	movlb	0	; () banked
 10835  000D18  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10836  000D1A  0100               	movlb	0	; () banked
 10837  000D1C  517D               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 10838  000D1E  0100               	movlb	0	; () banked
 10839  000D20  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 10840                           
 10841                           ; BSR set to: 0
 10842                           ;MISC.c: 443: temp += (This & 0x20000000) >> 27;
 10843  000D22  C072  F076         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 10844  000D26  C073  F077         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 10845  000D2A  C074  F078         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 10846  000D2E  C075  F079         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 10847  000D32  0E1C               	movlw	28
 10848  000D34  D006               	goto	u9630
 10849  000D36                     u9635:
 10850  000D36  0100               	movlb	0	; () banked
 10851  000D38  90D8               	bcf	status,0,c
 10852  000D3A  3379               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 10853  000D3C  3378               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 10854  000D3E  3377               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 10855  000D40  3376               	rrcf	??_Reverse_4Byte& (0+255),f,b
 10856  000D42                     u9630:
 10857  000D42  2EE8               	decfsz	wreg,f,c
 10858  000D44  D7F8               	goto	u9635
 10859  000D46  0E04               	movlw	4
 10860  000D48  0100               	movlb	0	; () banked
 10861  000D4A  1576               	andwf	??_Reverse_4Byte& (0+255),w,b
 10862  000D4C  0100               	movlb	0	; () banked
 10863  000D4E  6F7A               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 10864  000D50  0E00               	movlw	0
 10865  000D52  0100               	movlb	0	; () banked
 10866  000D54  1577               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 10867  000D56  0100               	movlb	0	; () banked
 10868  000D58  6F7B               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 10869  000D5A  0E00               	movlw	0
 10870  000D5C  0100               	movlb	0	; () banked
 10871  000D5E  1578               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 10872  000D60  0100               	movlb	0	; () banked
 10873  000D62  6F7C               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 10874  000D64  0E00               	movlw	0
 10875  000D66  0100               	movlb	0	; () banked
 10876  000D68  1579               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 10877  000D6A  0100               	movlb	0	; () banked
 10878  000D6C  6F7D               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 10879  000D6E  0100               	movlb	0	; () banked
 10880  000D70  517A               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 10881  000D72  0100               	movlb	0	; () banked
 10882  000D74  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10883  000D76  0100               	movlb	0	; () banked
 10884  000D78  517B               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 10885  000D7A  0100               	movlb	0	; () banked
 10886  000D7C  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10887  000D7E  0100               	movlb	0	; () banked
 10888  000D80  517C               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 10889  000D82  0100               	movlb	0	; () banked
 10890  000D84  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10891  000D86  0100               	movlb	0	; () banked
 10892  000D88  517D               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 10893  000D8A  0100               	movlb	0	; () banked
 10894  000D8C  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 10895                           
 10896                           ; BSR set to: 0
 10897                           ;MISC.c: 444: temp += (This & 0x40000000) >> 29;
 10898  000D8E  C072  F076         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 10899  000D92  C073  F077         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 10900  000D96  C074  F078         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 10901  000D9A  C075  F079         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 10902  000D9E  0E1E               	movlw	30
 10903  000DA0  D006               	goto	u9640
 10904  000DA2                     u9645:
 10905  000DA2  0100               	movlb	0	; () banked
 10906  000DA4  90D8               	bcf	status,0,c
 10907  000DA6  3379               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 10908  000DA8  3378               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 10909  000DAA  3377               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 10910  000DAC  3376               	rrcf	??_Reverse_4Byte& (0+255),f,b
 10911  000DAE                     u9640:
 10912  000DAE  2EE8               	decfsz	wreg,f,c
 10913  000DB0  D7F8               	goto	u9645
 10914  000DB2  0E02               	movlw	2
 10915  000DB4  0100               	movlb	0	; () banked
 10916  000DB6  1576               	andwf	??_Reverse_4Byte& (0+255),w,b
 10917  000DB8  0100               	movlb	0	; () banked
 10918  000DBA  6F7A               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 10919  000DBC  0E00               	movlw	0
 10920  000DBE  0100               	movlb	0	; () banked
 10921  000DC0  1577               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 10922  000DC2  0100               	movlb	0	; () banked
 10923  000DC4  6F7B               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 10924  000DC6  0E00               	movlw	0
 10925  000DC8  0100               	movlb	0	; () banked
 10926  000DCA  1578               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 10927  000DCC  0100               	movlb	0	; () banked
 10928  000DCE  6F7C               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 10929  000DD0  0E00               	movlw	0
 10930  000DD2  0100               	movlb	0	; () banked
 10931  000DD4  1579               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 10932  000DD6  0100               	movlb	0	; () banked
 10933  000DD8  6F7D               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 10934  000DDA  0100               	movlb	0	; () banked
 10935  000DDC  517A               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 10936  000DDE  0100               	movlb	0	; () banked
 10937  000DE0  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10938  000DE2  0100               	movlb	0	; () banked
 10939  000DE4  517B               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 10940  000DE6  0100               	movlb	0	; () banked
 10941  000DE8  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10942  000DEA  0100               	movlb	0	; () banked
 10943  000DEC  517C               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 10944  000DEE  0100               	movlb	0	; () banked
 10945  000DF0  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10946  000DF2  0100               	movlb	0	; () banked
 10947  000DF4  517D               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 10948  000DF6  0100               	movlb	0	; () banked
 10949  000DF8  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 10950                           
 10951                           ; BSR set to: 0
 10952                           ;MISC.c: 445: temp += (This & 0x80000000) >> 31;
 10953  000DFA  0E00               	movlw	0
 10954  000DFC  0100               	movlb	0	; () banked
 10955  000DFE  1572               	andwf	Reverse_4Byte@This& (0+255),w,b
 10956  000E00  0100               	movlb	0	; () banked
 10957  000E02  6F76               	movwf	??_Reverse_4Byte& (0+255),b
 10958  000E04  0E00               	movlw	0
 10959  000E06  0100               	movlb	0	; () banked
 10960  000E08  1573               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 10961  000E0A  0100               	movlb	0	; () banked
 10962  000E0C  6F77               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 10963  000E0E  0E00               	movlw	0
 10964  000E10  0100               	movlb	0	; () banked
 10965  000E12  1574               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 10966  000E14  0100               	movlb	0	; () banked
 10967  000E16  6F78               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 10968  000E18  0E80               	movlw	128
 10969  000E1A  0100               	movlb	0	; () banked
 10970  000E1C  1575               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 10971  000E1E  0100               	movlb	0	; () banked
 10972  000E20  6F79               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 10973  000E22  0E20               	movlw	32
 10974  000E24  D006               	goto	u9650
 10975  000E26                     u9655:
 10976  000E26  0100               	movlb	0	; () banked
 10977  000E28  90D8               	bcf	status,0,c
 10978  000E2A  3379               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 10979  000E2C  3378               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 10980  000E2E  3377               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 10981  000E30  3376               	rrcf	??_Reverse_4Byte& (0+255),f,b
 10982  000E32                     u9650:
 10983  000E32  2EE8               	decfsz	wreg,f,c
 10984  000E34  D7F8               	goto	u9655
 10985  000E36  0100               	movlb	0	; () banked
 10986  000E38  5176               	movf	??_Reverse_4Byte& (0+255),w,b
 10987  000E3A  0100               	movlb	0	; () banked
 10988  000E3C  277E               	addwf	Reverse_4Byte@temp& (0+255),f,b
 10989  000E3E  0100               	movlb	0	; () banked
 10990  000E40  5177               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 10991  000E42  0100               	movlb	0	; () banked
 10992  000E44  237F               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 10993  000E46  0100               	movlb	0	; () banked
 10994  000E48  5178               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 10995  000E4A  0100               	movlb	0	; () banked
 10996  000E4C  2380               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 10997  000E4E  0100               	movlb	0	; () banked
 10998  000E50  5179               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 10999  000E52  0100               	movlb	0	; () banked
 11000  000E54  2381               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 11001                           
 11002                           ; BSR set to: 0
 11003                           ;MISC.c: 447: return temp;
 11004  000E56  C07E  F072         	movff	Reverse_4Byte@temp,?_Reverse_4Byte
 11005  000E5A  C07F  F073         	movff	Reverse_4Byte@temp+1,?_Reverse_4Byte+1
 11006  000E5E  C080  F074         	movff	Reverse_4Byte@temp+2,?_Reverse_4Byte+2
 11007  000E62  C081  F075         	movff	Reverse_4Byte@temp+3,?_Reverse_4Byte+3
 11008  000E66  0012               	return	
 11009                           
 11010                           ; BSR set to: 0
 11011                           
 11012                           ; BSR set to: 0
 11013  000E68  0012               	return		;funcret
 11014  000E6A                     __end_of_Reverse_4Byte:
 11015                           	opt stack 0
 11016                           tblptru	equ	0xFF8
 11017                           tblptrh	equ	0xFF7
 11018                           tblptrl	equ	0xFF6
 11019                           tablat	equ	0xFF5
 11020                           prodh	equ	0xFF4
 11021                           prodl	equ	0xFF3
 11022                           intcon	equ	0xFF2
 11023                           indf0	equ	0xFEF
 11024                           postinc0	equ	0xFEE
 11025                           fsr0h	equ	0xFEA
 11026                           fsr0l	equ	0xFE9
 11027                           wreg	equ	0xFE8
 11028                           indf1	equ	0xFE7
 11029                           postdec1	equ	0xFE5
 11030                           fsr1h	equ	0xFE2
 11031                           fsr1l	equ	0xFE1
 11032                           indf2	equ	0xFDF
 11033                           postinc2	equ	0xFDE
 11034                           fsr2h	equ	0xFDA
 11035                           fsr2l	equ	0xFD9
 11036                           status	equ	0xFD8
 11037                           
 11038 ;; *************** function _CheckReceivingIR *****************
 11039 ;; Defined at:
 11040 ;;		line 500 in file "IR.c"
 11041 ;; Parameters:    Size  Location     Type
 11042 ;;		None
 11043 ;; Auto vars:     Size  Location     Type
 11044 ;;		None
 11045 ;; Return value:  Size  Location     Type
 11046 ;;                  1    wreg      unsigned char 
 11047 ;; Registers used:
 11048 ;;		wreg, status,2, status,0
 11049 ;; Tracked objects:
 11050 ;;		On entry : 0/0
 11051 ;;		On exit  : 0/0
 11052 ;;		Unchanged: 0/0
 11053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11058 ;;Total ram usage:        0 bytes
 11059 ;; Hardware stack levels used:    1
 11060 ;; Hardware stack levels required when called:    6
 11061 ;; This function calls:
 11062 ;;		Nothing
 11063 ;; This function is called by:
 11064 ;;		_SendNEC_wait
 11065 ;; This function uses a non-reentrant model
 11066 ;;
 11067                           
 11068                           	psect	text21
 11069  005B0C                     __ptext21:
 11070                           	opt stack 0
 11071  005B0C                     _CheckReceivingIR:
 11072                           	opt stack 22
 11073                           
 11074                           ;IR.c: 502: if(ReceivingIR == 13)
 11075                           
 11076                           ; BSR set to: 0
 11077                           ;incstack = 0
 11078  005B0C  0E0D               	movlw	13
 11079  005B0E  1842               	xorwf	_ReceivingIR,w,c	;volatile
 11080  005B10  A4D8               	btfss	status,2,c
 11081  005B12  D002               	goto	l9115
 11082                           
 11083                           ;IR.c: 503: {
 11084                           ;IR.c: 504: return 0;
 11085  005B14  0E00               	movlw	0
 11086  005B16  0012               	return	
 11087  005B18                     l9115:
 11088                           
 11089                           ;IR.c: 505: }
 11090                           ;IR.c: 506: return 1;
 11091  005B18  0E01               	movlw	1
 11092  005B1A  0012               	return	
 11093  005B1C  0012               	return		;funcret
 11094  005B1E                     __end_of_CheckReceivingIR:
 11095                           	opt stack 0
 11096                           tblptru	equ	0xFF8
 11097                           tblptrh	equ	0xFF7
 11098                           tblptrl	equ	0xFF6
 11099                           tablat	equ	0xFF5
 11100                           prodh	equ	0xFF4
 11101                           prodl	equ	0xFF3
 11102                           intcon	equ	0xFF2
 11103                           indf0	equ	0xFEF
 11104                           postinc0	equ	0xFEE
 11105                           fsr0h	equ	0xFEA
 11106                           fsr0l	equ	0xFE9
 11107                           wreg	equ	0xFE8
 11108                           indf1	equ	0xFE7
 11109                           postdec1	equ	0xFE5
 11110                           fsr1h	equ	0xFE2
 11111                           fsr1l	equ	0xFE1
 11112                           indf2	equ	0xFDF
 11113                           postinc2	equ	0xFDE
 11114                           fsr2h	equ	0xFDA
 11115                           fsr2l	equ	0xFD9
 11116                           status	equ	0xFD8
 11117                           
 11118 ;; *************** function _GetNumber *****************
 11119 ;; Defined at:
 11120 ;;		line 455 in file "MISC.c"
 11121 ;; Parameters:    Size  Location     Type
 11122 ;;  This            2   30[BANK0 ] PTR unsigned char 
 11123 ;;		 -> ReceivedString(255), 
 11124 ;;  CommaNumber     1   32[BANK0 ] unsigned char 
 11125 ;;  result          2   33[BANK0 ] PTR unsigned long 
 11126 ;;		 -> UseBluetooth@temp(4), UseBluetooth@EnteredNEC(4), 
 11127 ;; Auto vars:     Size  Location     Type
 11128 ;;  temp            4   46[BANK0 ] long 
 11129 ;;  tempThis        1   45[BANK0 ] unsigned char 
 11130 ;;  i               1   44[BANK0 ] unsigned char 
 11131 ;;  count           1   43[BANK0 ] unsigned char 
 11132 ;;  negative        1   42[BANK0 ] unsigned char 
 11133 ;;  Hex             1   41[BANK0 ] unsigned char 
 11134 ;;  tempCommaNum    1   40[BANK0 ] unsigned char 
 11135 ;; Return value:  Size  Location     Type
 11136 ;;                  1    wreg      unsigned char 
 11137 ;; Registers used:
 11138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11139 ;; Tracked objects:
 11140 ;;		On entry : 0/0
 11141 ;;		On exit  : 0/0
 11142 ;;		Unchanged: 0/0
 11143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11144 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11145 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11146 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11147 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11148 ;;Total ram usage:       20 bytes
 11149 ;; Hardware stack levels used:    1
 11150 ;; Hardware stack levels required when called:    7
 11151 ;; This function calls:
 11152 ;;		_IsLetter
 11153 ;;		___lmul
 11154 ;;		_lowercaseChar
 11155 ;; This function is called by:
 11156 ;;		_UseBluetooth
 11157 ;; This function uses a non-reentrant model
 11158 ;;
 11159                           
 11160                           	psect	text22
 11161  001FEE                     __ptext22:
 11162                           	opt stack 0
 11163  001FEE                     _GetNumber:
 11164                           	opt stack 22
 11165                           
 11166                           ;MISC.c: 457: unsigned char i =0;
 11167                           
 11168                           ;incstack = 0
 11169  001FEE  0E00               	movlw	0
 11170  001FF0  0100               	movlb	0	; () banked
 11171  001FF2  6F8C               	movwf	GetNumber@i& (0+255),b
 11172                           
 11173                           ;MISC.c: 458: long temp =0;
 11174  001FF4  0E00               	movlw	0
 11175  001FF6  0100               	movlb	0	; () banked
 11176  001FF8  6F8E               	movwf	GetNumber@temp& (0+255),b
 11177  001FFA  0E00               	movlw	0
 11178  001FFC  6F8F               	movwf	(GetNumber@temp+1)& (0+255),b
 11179  001FFE  0E00               	movlw	0
 11180  002000  6F90               	movwf	(GetNumber@temp+2)& (0+255),b
 11181  002002  0E00               	movlw	0
 11182  002004  6F91               	movwf	(GetNumber@temp+3)& (0+255),b
 11183                           
 11184                           ;MISC.c: 459: unsigned char negative =0;
 11185  002006  0E00               	movlw	0
 11186  002008  0100               	movlb	0	; () banked
 11187  00200A  6F8A               	movwf	GetNumber@negative& (0+255),b
 11188                           
 11189                           ;MISC.c: 460: unsigned char tempCommaNumber = 1;
 11190  00200C  0E01               	movlw	1
 11191  00200E  0100               	movlb	0	; () banked
 11192  002010  6F88               	movwf	GetNumber@tempCommaNumber& (0+255),b
 11193                           
 11194                           ;MISC.c: 461: unsigned char count =0;
 11195  002012  0E00               	movlw	0
 11196  002014  0100               	movlb	0	; () banked
 11197  002016  6F8B               	movwf	GetNumber@count& (0+255),b
 11198                           
 11199                           ;MISC.c: 462: unsigned char Hex = 0;
 11200  002018  0E00               	movlw	0
 11201  00201A  0100               	movlb	0	; () banked
 11202  00201C  6F89               	movwf	GetNumber@Hex& (0+255),b
 11203                           
 11204                           ;MISC.c: 463: unsigned char tempThis;
 11205                           ;MISC.c: 465: while(*This != 0)
 11206  00201E  D027               	goto	l9549
 11207  002020                     l9535:
 11208                           
 11209                           ; BSR set to: 0
 11210                           ;MISC.c: 466: {
 11211                           ;MISC.c: 467: if(*This == '0')
 11212  002020  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11213  002024  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11214  002028  0E30               	movlw	48
 11215  00202A  18DE               	xorwf	postinc2,w,c
 11216  00202C  A4D8               	btfss	status,2,c
 11217  00202E  D019               	goto	l9545
 11218                           
 11219                           ; BSR set to: 0
 11220                           ;MISC.c: 468: {
 11221                           ;MISC.c: 469: count++;
 11222  002030  0100               	movlb	0	; () banked
 11223  002032  2B8B               	incf	GetNumber@count& (0+255),f,b
 11224                           
 11225                           ;MISC.c: 470: This++;
 11226  002034  0100               	movlb	0	; () banked
 11227  002036  4B7E               	infsnz	GetNumber@This& (0+255),f,b
 11228  002038  2B7F               	incf	(GetNumber@This+1)& (0+255),f,b
 11229                           
 11230                           ; BSR set to: 0
 11231                           ;MISC.c: 471: if(*This == 'x' || *This == 'X')
 11232  00203A  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11233  00203E  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11234  002042  0E78               	movlw	120
 11235  002044  18DE               	xorwf	postinc2,w,c
 11236  002046  B4D8               	btfsc	status,2,c
 11237  002048  D008               	goto	l9543
 11238                           
 11239                           ; BSR set to: 0
 11240  00204A  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11241  00204E  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11242  002052  0E58               	movlw	88
 11243  002054  18DE               	xorwf	postinc2,w,c
 11244  002056  A4D8               	btfss	status,2,c
 11245  002058  D004               	goto	l9545
 11246  00205A                     l9543:
 11247                           
 11248                           ; BSR set to: 0
 11249                           ;MISC.c: 472: {
 11250                           ;MISC.c: 473: Hex = 1;
 11251  00205A  0E01               	movlw	1
 11252  00205C  0100               	movlb	0	; () banked
 11253  00205E  6F89               	movwf	GetNumber@Hex& (0+255),b
 11254                           
 11255                           ; BSR set to: 0
 11256  002060  D000               	goto	l9545
 11257  002062                     l9545:
 11258                           
 11259                           ; BSR set to: 0
 11260                           ;MISC.c: 474: }
 11261                           ;MISC.c: 475: }
 11262                           ;MISC.c: 476: count++;
 11263  002062  0100               	movlb	0	; () banked
 11264  002064  2B8B               	incf	GetNumber@count& (0+255),f,b
 11265                           
 11266                           ; BSR set to: 0
 11267                           ;MISC.c: 477: This++;
 11268  002066  0100               	movlb	0	; () banked
 11269  002068  4B7E               	infsnz	GetNumber@This& (0+255),f,b
 11270  00206A  2B7F               	incf	(GetNumber@This+1)& (0+255),f,b
 11271  00206C  D000               	goto	l9549
 11272  00206E                     l9549:
 11273                           
 11274                           ; BSR set to: 0
 11275  00206E  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11276  002072  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11277  002076  50DF               	movf	indf2,w,c
 11278  002078  A4D8               	btfss	status,2,c
 11279  00207A  D7D2               	goto	l9535
 11280                           
 11281                           ; BSR set to: 0
 11282                           ;MISC.c: 478: }
 11283                           ;MISC.c: 479: This-=count;
 11284                           
 11285                           ; BSR set to: 0
 11286  00207C  0100               	movlb	0	; () banked
 11287  00207E  518B               	movf	GetNumber@count& (0+255),w,b
 11288  002080  0D01               	mullw	1
 11289  002082  50F3               	movf	prodl,w,c
 11290  002084  0100               	movlb	0	; () banked
 11291  002086  5F7E               	subwf	GetNumber@This& (0+255),f,b
 11292  002088  50F4               	movf	prodh,w,c
 11293  00208A  0100               	movlb	0	; () banked
 11294  00208C  5B7F               	subwfb	(GetNumber@This+1)& (0+255),f,b
 11295                           
 11296                           ; BSR set to: 0
 11297                           
 11298                           ;MISC.c: 481: SCAN:while(*This != '=' && *This != ',' && *This != 0)
 11299  00208E  D001               	goto	l9555
 11300                           
 11301                           ; BSR set to: 0
 11302  002090  D03B               	goto	L4
 11303  002092                     l9555:
 11304                           
 11305                           ; BSR set to: 0
 11306  002092  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11307  002096  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11308  00209A  0E3D               	movlw	61
 11309  00209C  18DE               	xorwf	postinc2,w,c
 11310  00209E  B4D8               	btfsc	status,2,c
 11311  0020A0  D011               	goto	l9561
 11312                           
 11313                           ; BSR set to: 0
 11314  0020A2  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11315  0020A6  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11316  0020AA  0E2C               	movlw	44
 11317  0020AC  18DE               	xorwf	postinc2,w,c
 11318  0020AE  B4D8               	btfsc	status,2,c
 11319  0020B0  D009               	goto	l9561
 11320                           
 11321                           ; BSR set to: 0
 11322  0020B2  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11323  0020B6  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11324  0020BA  50DF               	movf	indf2,w,c
 11325  0020BC  B4D8               	btfsc	status,2,c
 11326  0020BE  D002               	goto	l9561
 11327  0020C0  D023               	goto	L4
 11328                           
 11329                           ; BSR set to: 0
 11330  0020C2  D000               	goto	l9561
 11331  0020C4                     l9561:
 11332                           
 11333                           ; BSR set to: 0
 11334                           ;MISC.c: 485: }
 11335                           ;MISC.c: 486: if(*This == 0)
 11336  0020C4  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11337  0020C8  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11338  0020CC  50DF               	movf	indf2,w,c
 11339  0020CE  A4D8               	btfss	status,2,c
 11340  0020D0  D003               	goto	l9569
 11341                           
 11342                           ; BSR set to: 0
 11343                           ;MISC.c: 487: {
 11344                           ;MISC.c: 488: return 1;
 11345  0020D2  0E01               	movlw	1
 11346                           
 11347                           ; BSR set to: 0
 11348  0020D4  0012               	return	
 11349                           
 11350                           ; BSR set to: 0
 11351                           ;MISC.c: 489: }
 11352  0020D6  D01D               	goto	l9577
 11353  0020D8                     l9569:
 11354                           
 11355                           ; BSR set to: 0
 11356                           ;MISC.c: 490: else if(*This != '=' || *This != ',')
 11357  0020D8  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11358  0020DC  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11359  0020E0  0E3D               	movlw	61
 11360  0020E2  18DE               	xorwf	postinc2,w,c
 11361  0020E4  A4D8               	btfss	status,2,c
 11362  0020E6  D008               	goto	l9573
 11363                           
 11364                           ; BSR set to: 0
 11365  0020E8  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11366  0020EC  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11367  0020F0  0E2C               	movlw	44
 11368  0020F2  18DE               	xorwf	postinc2,w,c
 11369  0020F4  B4D8               	btfsc	status,2,c
 11370  0020F6  D00D               	goto	l9577
 11371  0020F8                     l9573:
 11372                           
 11373                           ; BSR set to: 0
 11374                           ;MISC.c: 491: {
 11375                           ;MISC.c: 492: if(tempCommaNumber < CommaNumber)
 11376  0020F8  0100               	movlb	0	; () banked
 11377  0020FA  5180               	movf	GetNumber@CommaNumber& (0+255),w,b
 11378  0020FC  0100               	movlb	0	; () banked
 11379  0020FE  5D88               	subwf	GetNumber@tempCommaNumber& (0+255),w,b
 11380  002100  B0D8               	btfsc	status,0,c
 11381  002102  D007               	goto	l9577
 11382                           
 11383                           ; BSR set to: 0
 11384                           ;MISC.c: 493: {
 11385                           ;MISC.c: 494: tempCommaNumber++;
 11386  002104  0100               	movlb	0	; () banked
 11387  002106  2B88               	incf	GetNumber@tempCommaNumber& (0+255),f,b
 11388  002108                     L4:
 11389                           
 11390                           ;MISC.c: 495: This++;
 11391  002108  0100               	movlb	0	; () banked
 11392  00210A  4B7E               	infsnz	GetNumber@This& (0+255),f,b
 11393  00210C  2B7F               	incf	(GetNumber@This+1)& (0+255),f,b
 11394                           
 11395                           ;MISC.c: 496: goto SCAN;
 11396  00210E  D7C1               	goto	l9555
 11397                           
 11398                           ; BSR set to: 0
 11399                           
 11400                           ; BSR set to: 0
 11401  002110  D000               	goto	l9577
 11402  002112                     l9577:
 11403                           
 11404                           ; BSR set to: 0
 11405                           ;MISC.c: 497: }
 11406                           ;MISC.c: 498: }
 11407                           ;MISC.c: 499: if(*This == 0)
 11408  002112  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11409  002116  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11410  00211A  50DF               	movf	indf2,w,c
 11411  00211C  A4D8               	btfss	status,2,c
 11412  00211E  D002               	goto	l9583
 11413                           
 11414                           ; BSR set to: 0
 11415                           ;MISC.c: 500: {
 11416                           ;MISC.c: 501: return 1;
 11417  002120  0E01               	movlw	1
 11418                           
 11419                           ; BSR set to: 0
 11420  002122  0012               	return	
 11421  002124                     l9583:
 11422                           
 11423                           ; BSR set to: 0
 11424                           ;MISC.c: 502: }
 11425                           ;MISC.c: 503: This++;
 11426  002124  0100               	movlb	0	; () banked
 11427  002126  4B7E               	infsnz	GetNumber@This& (0+255),f,b
 11428  002128  2B7F               	incf	(GetNumber@This+1)& (0+255),f,b
 11429                           
 11430                           ; BSR set to: 0
 11431                           ;MISC.c: 504: if(*This == ' ')
 11432  00212A  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11433  00212E  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11434  002132  0E20               	movlw	32
 11435  002134  18DE               	xorwf	postinc2,w,c
 11436  002136  B4D8               	btfsc	status,2,c
 11437  002138  D016               	goto	l9601
 11438                           
 11439                           ; BSR set to: 0
 11440                           ;MISC.c: 509: else if (*This == '=')
 11441                           
 11442                           ; BSR set to: 0
 11443                           
 11444                           ;MISC.c: 508: }
 11445                           
 11446                           ; BSR set to: 0
 11447                           ;MISC.c: 505: {
 11448                           ;MISC.c: 506: This++;
 11449  00213A  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11450  00213E  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11451  002142  0E3D               	movlw	61
 11452  002144  18DE               	xorwf	postinc2,w,c
 11453  002146  A4D8               	btfss	status,2,c
 11454  002148  D003               	goto	l9597
 11455                           
 11456                           ; BSR set to: 0
 11457                           ;MISC.c: 510: {
 11458                           ;MISC.c: 511: return 2;
 11459  00214A  0E02               	movlw	2
 11460                           
 11461                           ; BSR set to: 0
 11462  00214C  0012               	return	
 11463                           
 11464                           ; BSR set to: 0
 11465                           ;MISC.c: 512: }
 11466  00214E  D019               	goto	l9609
 11467  002150                     l9597:
 11468                           
 11469                           ; BSR set to: 0
 11470                           ;MISC.c: 513: else if(*This == '-')
 11471  002150  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11472  002154  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11473  002158  0E2D               	movlw	45
 11474  00215A  18DE               	xorwf	postinc2,w,c
 11475  00215C  A4D8               	btfss	status,2,c
 11476  00215E  D007               	goto	l9603
 11477                           
 11478                           ; BSR set to: 0
 11479                           ;MISC.c: 514: {
 11480                           ;MISC.c: 515: negative = 1;
 11481  002160  0E01               	movlw	1
 11482  002162  0100               	movlb	0	; () banked
 11483  002164  6F8A               	movwf	GetNumber@negative& (0+255),b
 11484  002166                     l9601:
 11485                           
 11486                           ; BSR set to: 0
 11487                           ;MISC.c: 516: This++;
 11488  002166  0100               	movlb	0	; () banked
 11489  002168  4B7E               	infsnz	GetNumber@This& (0+255),f,b
 11490  00216A  2B7F               	incf	(GetNumber@This+1)& (0+255),f,b
 11491                           
 11492                           ;MISC.c: 518: }
 11493  00216C  D00A               	goto	l9609
 11494  00216E                     l9603:
 11495                           
 11496                           ; BSR set to: 0
 11497                           ;MISC.c: 519: else if(*This == 0)
 11498  00216E  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11499  002172  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11500  002176  50DF               	movf	indf2,w,c
 11501  002178  A4D8               	btfss	status,2,c
 11502  00217A  D003               	goto	l9609
 11503                           
 11504                           ; BSR set to: 0
 11505                           ;MISC.c: 520: {
 11506                           ;MISC.c: 521: return 3;
 11507  00217C  0E03               	movlw	3
 11508                           
 11509                           ; BSR set to: 0
 11510  00217E  0012               	return	
 11511                           
 11512                           ; BSR set to: 0
 11513                           
 11514                           ; BSR set to: 0
 11515                           
 11516                           ; BSR set to: 0
 11517  002180  D000               	goto	l9609
 11518  002182                     l9609:
 11519                           
 11520                           ; BSR set to: 0
 11521                           ;MISC.c: 522: }
 11522                           ;MISC.c: 523: if(!Hex)
 11523  002182  0100               	movlb	0	; () banked
 11524  002184  5189               	movf	GetNumber@Hex& (0+255),w,b
 11525  002186  0100               	movlb	0	; () banked
 11526  002188  B4D8               	btfsc	status,2,c
 11527  00218A  D052               	goto	l9627
 11528  00218C  D060               	goto	l9631
 11529                           
 11530                           ; BSR set to: 0
 11531                           ;MISC.c: 524: {
 11532                           ;MISC.c: 525: while(*This >=48 && *This <= 57)
 11533  00218E  D050               	goto	l9627
 11534  002190                     l9613:
 11535                           
 11536                           ; BSR set to: 0
 11537                           ;MISC.c: 526: {
 11538                           ;MISC.c: 527: temp = temp * 10;
 11539  002190  C08E  F072         	movff	GetNumber@temp,___lmul@multiplier
 11540  002194  C08F  F073         	movff	GetNumber@temp+1,___lmul@multiplier+1
 11541  002198  C090  F074         	movff	GetNumber@temp+2,___lmul@multiplier+2
 11542  00219C  C091  F075         	movff	GetNumber@temp+3,___lmul@multiplier+3
 11543  0021A0  0E0A               	movlw	10
 11544  0021A2  0100               	movlb	0	; () banked
 11545  0021A4  6F76               	movwf	___lmul@multiplicand& (0+255),b
 11546  0021A6  0E00               	movlw	0
 11547  0021A8  6F77               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11548  0021AA  0E00               	movlw	0
 11549  0021AC  6F78               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11550  0021AE  0E00               	movlw	0
 11551  0021B0  6F79               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11552  0021B2  ECF9  F028         	call	___lmul	;wreg free
 11553  0021B6  C072  F08E         	movff	?___lmul,GetNumber@temp
 11554  0021BA  C073  F08F         	movff	?___lmul+1,GetNumber@temp+1
 11555  0021BE  C074  F090         	movff	?___lmul+2,GetNumber@temp+2
 11556  0021C2  C075  F091         	movff	?___lmul+3,GetNumber@temp+3
 11557                           
 11558                           ;MISC.c: 528: temp += *This - 48;
 11559  0021C6  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11560  0021CA  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11561  0021CE  50DF               	movf	indf2,w,c
 11562  0021D0  0100               	movlb	0	; () banked
 11563  0021D2  6F83               	movwf	??_GetNumber& (0+255),b
 11564  0021D4  0ED0               	movlw	208
 11565  0021D6  0100               	movlb	0	; () banked
 11566  0021D8  2583               	addwf	??_GetNumber& (0+255),w,b
 11567  0021DA  0100               	movlb	0	; () banked
 11568  0021DC  6F84               	movwf	(??_GetNumber+1)& (0+255),b
 11569  0021DE  0100               	movlb	0	; () banked
 11570  0021E0  6B85               	clrf	(??_GetNumber+2)& (0+255),b
 11571  0021E2  0EFF               	movlw	255
 11572  0021E4  2385               	addwfc	(??_GetNumber+2)& (0+255),f,b
 11573  0021E6  0100               	movlb	0	; () banked
 11574  0021E8  6B86               	clrf	(??_GetNumber+3)& (0+255),b
 11575  0021EA  0100               	movlb	0	; () banked
 11576  0021EC  BF85               	btfsc	(??_GetNumber+2)& (0+255),7,b
 11577  0021EE  0786               	decf	(??_GetNumber+3)& (0+255),f,b
 11578  0021F0  0100               	movlb	0	; () banked
 11579  0021F2  5186               	movf	(??_GetNumber+3)& (0+255),w,b
 11580  0021F4  0100               	movlb	0	; () banked
 11581  0021F6  6F87               	movwf	(??_GetNumber+4)& (0+255),b
 11582  0021F8  0100               	movlb	0	; () banked
 11583  0021FA  5184               	movf	(??_GetNumber+1)& (0+255),w,b
 11584  0021FC  0100               	movlb	0	; () banked
 11585  0021FE  278E               	addwf	GetNumber@temp& (0+255),f,b
 11586  002200  0100               	movlb	0	; () banked
 11587  002202  5185               	movf	(??_GetNumber+2)& (0+255),w,b
 11588  002204  0100               	movlb	0	; () banked
 11589  002206  238F               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 11590  002208  0100               	movlb	0	; () banked
 11591  00220A  5186               	movf	(??_GetNumber+3)& (0+255),w,b
 11592  00220C  0100               	movlb	0	; () banked
 11593  00220E  2390               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 11594  002210  0100               	movlb	0	; () banked
 11595  002212  5187               	movf	(??_GetNumber+4)& (0+255),w,b
 11596  002214  0100               	movlb	0	; () banked
 11597  002216  2391               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 11598                           
 11599                           ; BSR set to: 0
 11600                           ;MISC.c: 529: i++;
 11601  002218  0100               	movlb	0	; () banked
 11602  00221A  2B8C               	incf	GetNumber@i& (0+255),f,b
 11603                           
 11604                           ; BSR set to: 0
 11605                           ;MISC.c: 530: if(i>32)
 11606  00221C  0E20               	movlw	32
 11607  00221E  0100               	movlb	0	; () banked
 11608  002220  658C               	cpfsgt	GetNumber@i& (0+255),b
 11609  002222  D002               	goto	l9625
 11610                           
 11611                           ; BSR set to: 0
 11612                           ;MISC.c: 531: {
 11613                           ;MISC.c: 532: return 4;
 11614  002224  0E04               	movlw	4
 11615                           
 11616                           ; BSR set to: 0
 11617  002226  0012               	return	
 11618  002228                     l9625:
 11619                           
 11620                           ; BSR set to: 0
 11621                           ;MISC.c: 533: }
 11622                           ;MISC.c: 534: This++;
 11623  002228  0100               	movlb	0	; () banked
 11624  00222A  4B7E               	infsnz	GetNumber@This& (0+255),f,b
 11625  00222C  2B7F               	incf	(GetNumber@This+1)& (0+255),f,b
 11626  00222E  D000               	goto	l9627
 11627  002230                     l9627:
 11628                           
 11629                           ; BSR set to: 0
 11630  002230  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11631  002234  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11632  002238  0E2F               	movlw	47
 11633  00223A  64DF               	cpfsgt	indf2,c
 11634  00223C  D0C6               	goto	l9675
 11635                           
 11636                           ; BSR set to: 0
 11637  00223E  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11638  002242  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11639  002246  0E39               	movlw	57
 11640  002248  64DF               	cpfsgt	indf2,c
 11641  00224A  D7A2               	goto	l9613
 11642                           
 11643                           ; BSR set to: 0
 11644                           ;MISC.c: 535: }
 11645                           ;MISC.c: 536: }
 11646                           
 11647                           ; BSR set to: 0
 11648  00224C  D0BE               	goto	l9675
 11649  00224E                     l9631:
 11650                           
 11651                           ; BSR set to: 0
 11652                           ;MISC.c: 537: else
 11653                           ;MISC.c: 538: {
 11654                           ;MISC.c: 539: negative = 0;
 11655  00224E  0E00               	movlw	0
 11656  002250  0100               	movlb	0	; () banked
 11657  002252  6F8A               	movwf	GetNumber@negative& (0+255),b
 11658                           
 11659                           ;MISC.c: 540: while(*This != 'x' && *This != 'X')
 11660  002254  D004               	goto	l9635
 11661  002256                     l9633:
 11662                           
 11663                           ; BSR set to: 0
 11664                           ;MISC.c: 541: {
 11665                           ;MISC.c: 542: This++;
 11666  002256  0100               	movlb	0	; () banked
 11667  002258  4B7E               	infsnz	GetNumber@This& (0+255),f,b
 11668  00225A  2B7F               	incf	(GetNumber@This+1)& (0+255),f,b
 11669  00225C  D000               	goto	l9635
 11670  00225E                     l9635:
 11671                           
 11672                           ; BSR set to: 0
 11673  00225E  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11674  002262  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11675  002266  0E78               	movlw	120
 11676  002268  18DE               	xorwf	postinc2,w,c
 11677  00226A  B4D8               	btfsc	status,2,c
 11678  00226C  D07D               	goto	l9661
 11679                           
 11680                           ; BSR set to: 0
 11681  00226E  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11682  002272  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11683  002276  0E58               	movlw	88
 11684  002278  18DE               	xorwf	postinc2,w,c
 11685  00227A  B4D8               	btfsc	status,2,c
 11686  00227C  D075               	goto	l9661
 11687  00227E  D7EB               	goto	l9633
 11688                           
 11689                           ; BSR set to: 0
 11690  002280  D073               	goto	l9661
 11691                           
 11692                           ; BSR set to: 0
 11693  002282  D072               	goto	l9661
 11694  002284                     l9641:
 11695                           
 11696                           ; BSR set to: 0
 11697                           ;MISC.c: 546: {
 11698                           ;MISC.c: 547: temp <<= 4;
 11699  002284  0100               	movlb	0	; () banked
 11700  002286  0E04               	movlw	4
 11701  002288                     u10665:
 11702  002288  90D8               	bcf	status,0,c
 11703  00228A  378E               	rlcf	GetNumber@temp& (0+255),f,b
 11704  00228C  378F               	rlcf	(GetNumber@temp+1)& (0+255),f,b
 11705  00228E  3790               	rlcf	(GetNumber@temp+2)& (0+255),f,b
 11706  002290  3791               	rlcf	(GetNumber@temp+3)& (0+255),f,b
 11707  002292  2EE8               	decfsz	wreg,f,c
 11708  002294  D7F9               	goto	u10665
 11709                           
 11710                           ; BSR set to: 0
 11711                           ;MISC.c: 548: tempThis = *This;
 11712  002296  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11713  00229A  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11714  00229E  50DF               	movf	indf2,w,c
 11715  0022A0  0100               	movlb	0	; () banked
 11716  0022A2  6F8D               	movwf	GetNumber@tempThis& (0+255),b
 11717                           
 11718                           ; BSR set to: 0
 11719                           ;MISC.c: 549: if(IsLetter(tempThis))
 11720  0022A4  0100               	movlb	0	; () banked
 11721  0022A6  518D               	movf	GetNumber@tempThis& (0+255),w,b
 11722  0022A8  EC17  F02D         	call	_IsLetter
 11723  0022AC  0900               	iorlw	0
 11724  0022AE  B4D8               	btfsc	status,2,c
 11725  0022B0  D029               	goto	l9651
 11726                           
 11727                           ;MISC.c: 550: {
 11728                           ;MISC.c: 551: lowercaseChar(&tempThis);
 11729  0022B2  0E8D               	movlw	low GetNumber@tempThis
 11730  0022B4  0100               	movlb	0	; () banked
 11731  0022B6  6F72               	movwf	lowercaseChar@Input& (0+255),b
 11732  0022B8  0E00               	movlw	high GetNumber@tempThis
 11733  0022BA  0100               	movlb	0	; () banked
 11734  0022BC  6F73               	movwf	(lowercaseChar@Input+1)& (0+255),b
 11735  0022BE  ECC2  F02C         	call	_lowercaseChar	;wreg free
 11736                           
 11737                           ;MISC.c: 552: temp += (tempThis - 87);
 11738  0022C2  0EA9               	movlw	169
 11739  0022C4  0100               	movlb	0	; () banked
 11740  0022C6  258D               	addwf	GetNumber@tempThis& (0+255),w,b
 11741  0022C8  0100               	movlb	0	; () banked
 11742  0022CA  6F83               	movwf	??_GetNumber& (0+255),b
 11743  0022CC  0100               	movlb	0	; () banked
 11744  0022CE  6B84               	clrf	(??_GetNumber+1)& (0+255),b
 11745  0022D0  0EFF               	movlw	255
 11746  0022D2  2384               	addwfc	(??_GetNumber+1)& (0+255),f,b
 11747  0022D4  0100               	movlb	0	; () banked
 11748  0022D6  6B85               	clrf	(??_GetNumber+2)& (0+255),b
 11749  0022D8  0100               	movlb	0	; () banked
 11750  0022DA  BF84               	btfsc	(??_GetNumber+1)& (0+255),7,b
 11751  0022DC  0785               	decf	(??_GetNumber+2)& (0+255),f,b
 11752  0022DE  0100               	movlb	0	; () banked
 11753  0022E0  5185               	movf	(??_GetNumber+2)& (0+255),w,b
 11754  0022E2  0100               	movlb	0	; () banked
 11755  0022E4  6F86               	movwf	(??_GetNumber+3)& (0+255),b
 11756  0022E6  0100               	movlb	0	; () banked
 11757  0022E8  5183               	movf	??_GetNumber& (0+255),w,b
 11758  0022EA  0100               	movlb	0	; () banked
 11759  0022EC  278E               	addwf	GetNumber@temp& (0+255),f,b
 11760  0022EE  0100               	movlb	0	; () banked
 11761  0022F0  5184               	movf	(??_GetNumber+1)& (0+255),w,b
 11762  0022F2  0100               	movlb	0	; () banked
 11763  0022F4  238F               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 11764  0022F6  0100               	movlb	0	; () banked
 11765  0022F8  5185               	movf	(??_GetNumber+2)& (0+255),w,b
 11766  0022FA  0100               	movlb	0	; () banked
 11767  0022FC  2390               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 11768  0022FE  0100               	movlb	0	; () banked
 11769  002300  5186               	movf	(??_GetNumber+3)& (0+255),w,b
 11770  002302  D027               	goto	L5
 11771  002304                     l9651:
 11772                           
 11773                           ;MISC.c: 554: else
 11774                           ;MISC.c: 555: {
 11775                           ;MISC.c: 556: temp += (*This - 48);
 11776  002304  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11777  002308  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11778  00230C  50DF               	movf	indf2,w,c
 11779  00230E  0100               	movlb	0	; () banked
 11780  002310  6F83               	movwf	??_GetNumber& (0+255),b
 11781  002312  0ED0               	movlw	208
 11782  002314  0100               	movlb	0	; () banked
 11783  002316  2583               	addwf	??_GetNumber& (0+255),w,b
 11784  002318  0100               	movlb	0	; () banked
 11785  00231A  6F84               	movwf	(??_GetNumber+1)& (0+255),b
 11786  00231C  0100               	movlb	0	; () banked
 11787  00231E  6B85               	clrf	(??_GetNumber+2)& (0+255),b
 11788  002320  0EFF               	movlw	255
 11789  002322  2385               	addwfc	(??_GetNumber+2)& (0+255),f,b
 11790  002324  0100               	movlb	0	; () banked
 11791  002326  6B86               	clrf	(??_GetNumber+3)& (0+255),b
 11792  002328  0100               	movlb	0	; () banked
 11793  00232A  BF85               	btfsc	(??_GetNumber+2)& (0+255),7,b
 11794  00232C  0786               	decf	(??_GetNumber+3)& (0+255),f,b
 11795  00232E  0100               	movlb	0	; () banked
 11796  002330  5186               	movf	(??_GetNumber+3)& (0+255),w,b
 11797  002332  0100               	movlb	0	; () banked
 11798  002334  6F87               	movwf	(??_GetNumber+4)& (0+255),b
 11799  002336  0100               	movlb	0	; () banked
 11800  002338  5184               	movf	(??_GetNumber+1)& (0+255),w,b
 11801  00233A  0100               	movlb	0	; () banked
 11802  00233C  278E               	addwf	GetNumber@temp& (0+255),f,b
 11803  00233E  0100               	movlb	0	; () banked
 11804  002340  5185               	movf	(??_GetNumber+2)& (0+255),w,b
 11805  002342  0100               	movlb	0	; () banked
 11806  002344  238F               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 11807  002346  0100               	movlb	0	; () banked
 11808  002348  5186               	movf	(??_GetNumber+3)& (0+255),w,b
 11809  00234A  0100               	movlb	0	; () banked
 11810  00234C  2390               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 11811  00234E  0100               	movlb	0	; () banked
 11812  002350  5187               	movf	(??_GetNumber+4)& (0+255),w,b
 11813  002352                     L5:
 11814  002352  0100               	movlb	0	; () banked
 11815  002354  2391               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 11816  002356  D000               	goto	l9653
 11817  002358                     l9653:
 11818                           
 11819                           ; BSR set to: 0
 11820                           ;MISC.c: 557: }
 11821                           ;MISC.c: 558: i++;
 11822  002358  0100               	movlb	0	; () banked
 11823  00235A  2B8C               	incf	GetNumber@i& (0+255),f,b
 11824                           
 11825                           ; BSR set to: 0
 11826                           ;MISC.c: 559: if(i>32)
 11827  00235C  0E20               	movlw	32
 11828  00235E  0100               	movlb	0	; () banked
 11829  002360  658C               	cpfsgt	GetNumber@i& (0+255),b
 11830  002362  D002               	goto	l9661
 11831                           
 11832                           ; BSR set to: 0
 11833                           ;MISC.c: 560: {
 11834                           ;MISC.c: 561: return 4;
 11835  002364  0E04               	movlw	4
 11836                           
 11837                           ; BSR set to: 0
 11838  002366  0012               	return	
 11839  002368                     l9661:
 11840                           
 11841                           ; BSR set to: 0
 11842                           ;MISC.c: 562: }
 11843                           ;MISC.c: 563: This++;
 11844  002368  0100               	movlb	0	; () banked
 11845  00236A  4B7E               	infsnz	GetNumber@This& (0+255),f,b
 11846  00236C  2B7F               	incf	(GetNumber@This+1)& (0+255),f,b
 11847  00236E  D000               	goto	l9663
 11848  002370                     l9663:
 11849                           
 11850                           ; BSR set to: 0
 11851  002370  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11852  002374  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11853  002378  0E2F               	movlw	47
 11854  00237A  64DF               	cpfsgt	indf2,c
 11855  00237C  D008               	goto	l9667
 11856                           
 11857                           ; BSR set to: 0
 11858  00237E  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11859  002382  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11860  002386  0E39               	movlw	57
 11861  002388  64DF               	cpfsgt	indf2,c
 11862  00238A  D77C               	goto	l9641
 11863  00238C  D000               	goto	l9667
 11864  00238E                     l9667:
 11865                           
 11866                           ; BSR set to: 0
 11867  00238E  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11868  002392  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11869  002396  0E40               	movlw	64
 11870  002398  64DF               	cpfsgt	indf2,c
 11871  00239A  D008               	goto	l9671
 11872                           
 11873                           ; BSR set to: 0
 11874  00239C  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11875  0023A0  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11876  0023A4  0E46               	movlw	70
 11877  0023A6  64DF               	cpfsgt	indf2,c
 11878  0023A8  D76D               	goto	l9641
 11879  0023AA  D000               	goto	l9671
 11880  0023AC                     l9671:
 11881                           
 11882                           ; BSR set to: 0
 11883  0023AC  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11884  0023B0  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11885  0023B4  0E60               	movlw	96
 11886  0023B6  64DF               	cpfsgt	indf2,c
 11887  0023B8  D008               	goto	l9675
 11888                           
 11889                           ; BSR set to: 0
 11890  0023BA  C07E  FFD9         	movff	GetNumber@This,fsr2l
 11891  0023BE  C07F  FFDA         	movff	GetNumber@This+1,fsr2h
 11892  0023C2  0E66               	movlw	102
 11893  0023C4  64DF               	cpfsgt	indf2,c
 11894  0023C6  D75E               	goto	l9641
 11895                           
 11896                           ; BSR set to: 0
 11897                           
 11898                           ; BSR set to: 0
 11899  0023C8  D000               	goto	l9675
 11900  0023CA                     l9675:
 11901                           
 11902                           ; BSR set to: 0
 11903                           ;MISC.c: 564: }
 11904                           ;MISC.c: 565: }
 11905                           ;MISC.c: 566: if(negative)
 11906  0023CA  0100               	movlb	0	; () banked
 11907  0023CC  518A               	movf	GetNumber@negative& (0+255),w,b
 11908  0023CE  0100               	movlb	0	; () banked
 11909  0023D0  B4D8               	btfsc	status,2,c
 11910  0023D2  D00A               	goto	l9679
 11911                           
 11912                           ; BSR set to: 0
 11913                           ;MISC.c: 567: {
 11914                           ;MISC.c: 568: temp = (temp * -1);
 11915  0023D4  0100               	movlb	0	; () banked
 11916  0023D6  1F91               	comf	(GetNumber@temp+3)& (0+255),f,b
 11917  0023D8  1F90               	comf	(GetNumber@temp+2)& (0+255),f,b
 11918  0023DA  1F8F               	comf	(GetNumber@temp+1)& (0+255),f,b
 11919  0023DC  6D8E               	negf	GetNumber@temp& (0+255),b
 11920  0023DE  0E00               	movlw	0
 11921  0023E0  238F               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 11922  0023E2  2390               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 11923  0023E4  2391               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 11924  0023E6  D000               	goto	l9679
 11925  0023E8                     l9679:
 11926                           
 11927                           ; BSR set to: 0
 11928                           ;MISC.c: 569: }
 11929                           ;MISC.c: 570: *result = temp;
 11930  0023E8  C081  FFD9         	movff	GetNumber@result,fsr2l
 11931  0023EC  C082  FFDA         	movff	GetNumber@result+1,fsr2h
 11932  0023F0  C08E  FFDE         	movff	GetNumber@temp,postinc2
 11933  0023F4  C08F  FFDE         	movff	GetNumber@temp+1,postinc2
 11934  0023F8  C090  FFDE         	movff	GetNumber@temp+2,postinc2
 11935  0023FC  C091  FFDE         	movff	GetNumber@temp+3,postinc2
 11936                           
 11937                           ; BSR set to: 0
 11938                           ;MISC.c: 571: return 0;
 11939  002400  0E00               	movlw	0
 11940  002402  0012               	return	
 11941                           
 11942                           ; BSR set to: 0
 11943                           
 11944                           ; BSR set to: 0
 11945  002404  0012               	return		;funcret
 11946  002406                     __end_of_GetNumber:
 11947                           	opt stack 0
 11948                           tblptru	equ	0xFF8
 11949                           tblptrh	equ	0xFF7
 11950                           tblptrl	equ	0xFF6
 11951                           tablat	equ	0xFF5
 11952                           prodh	equ	0xFF4
 11953                           prodl	equ	0xFF3
 11954                           intcon	equ	0xFF2
 11955                           indf0	equ	0xFEF
 11956                           postinc0	equ	0xFEE
 11957                           fsr0h	equ	0xFEA
 11958                           fsr0l	equ	0xFE9
 11959                           wreg	equ	0xFE8
 11960                           indf1	equ	0xFE7
 11961                           postdec1	equ	0xFE5
 11962                           fsr1h	equ	0xFE2
 11963                           fsr1l	equ	0xFE1
 11964                           indf2	equ	0xFDF
 11965                           postinc2	equ	0xFDE
 11966                           fsr2h	equ	0xFDA
 11967                           fsr2l	equ	0xFD9
 11968                           status	equ	0xFD8
 11969                           
 11970 ;; *************** function _lowercaseChar *****************
 11971 ;; Defined at:
 11972 ;;		line 347 in file "MISC.c"
 11973 ;; Parameters:    Size  Location     Type
 11974 ;;  Input           2   18[BANK0 ] PTR unsigned char 
 11975 ;;		 -> GetNumber@tempThis(1), StringContainsCaseInsensitive@tempThat(1), StringContainsCaseInsensitive@tempThis(1), Str
      +ingMatchCaseInsensitive@tempThat(1), 
 11976 ;;		 -> StringMatchCaseInsensitive@tempThis(1), 
 11977 ;; Auto vars:     Size  Location     Type
 11978 ;;		None
 11979 ;; Return value:  Size  Location     Type
 11980 ;;		None               void
 11981 ;; Registers used:
 11982 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11983 ;; Tracked objects:
 11984 ;;		On entry : 0/0
 11985 ;;		On exit  : 0/0
 11986 ;;		Unchanged: 0/0
 11987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11988 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11990 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11991 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11992 ;;Total ram usage:        3 bytes
 11993 ;; Hardware stack levels used:    1
 11994 ;; Hardware stack levels required when called:    6
 11995 ;; This function calls:
 11996 ;;		Nothing
 11997 ;; This function is called by:
 11998 ;;		_StringMatchCaseInsensitive
 11999 ;;		_StringContainsCaseInsensitive
 12000 ;;		_GetNumber
 12001 ;; This function uses a non-reentrant model
 12002 ;;
 12003                           
 12004                           	psect	text23
 12005  005984                     __ptext23:
 12006                           	opt stack 0
 12007  005984                     _lowercaseChar:
 12008                           	opt stack 22
 12009                           
 12010                           ;MISC.c: 349: if((*Input >= 65) && (*Input <= 90 ))
 12011                           
 12012                           ; BSR set to: 0
 12013                           ;incstack = 0
 12014  005984  C072  FFD9         	movff	lowercaseChar@Input,fsr2l
 12015  005988  C073  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 12016  00598C  0E40               	movlw	64
 12017  00598E  64DF               	cpfsgt	indf2,c
 12018  005990  0012               	return	
 12019  005992  C072  FFD9         	movff	lowercaseChar@Input,fsr2l
 12020  005996  C073  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 12021  00599A  0E5B               	movlw	91
 12022  00599C  60DF               	cpfslt	indf2,c
 12023  00599E  0012               	return	
 12024                           
 12025                           ;MISC.c: 350: {
 12026                           ;MISC.c: 351: *Input += 32;
 12027  0059A0  C072  FFD9         	movff	lowercaseChar@Input,fsr2l
 12028  0059A4  C073  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 12029  0059A8  0E20               	movlw	32
 12030  0059AA  26DF               	addwf	indf2,f,c
 12031  0059AC  0012               	return	
 12032  0059AE  0012               	return		;funcret
 12033  0059B0                     __end_of_lowercaseChar:
 12034                           	opt stack 0
 12035                           tblptru	equ	0xFF8
 12036                           tblptrh	equ	0xFF7
 12037                           tblptrl	equ	0xFF6
 12038                           tablat	equ	0xFF5
 12039                           prodh	equ	0xFF4
 12040                           prodl	equ	0xFF3
 12041                           intcon	equ	0xFF2
 12042                           indf0	equ	0xFEF
 12043                           postinc0	equ	0xFEE
 12044                           fsr0h	equ	0xFEA
 12045                           fsr0l	equ	0xFE9
 12046                           wreg	equ	0xFE8
 12047                           indf1	equ	0xFE7
 12048                           postdec1	equ	0xFE5
 12049                           fsr1h	equ	0xFE2
 12050                           fsr1l	equ	0xFE1
 12051                           indf2	equ	0xFDF
 12052                           postinc2	equ	0xFDE
 12053                           fsr2h	equ	0xFDA
 12054                           fsr2l	equ	0xFD9
 12055                           status	equ	0xFD8
 12056                           
 12057 ;; *************** function ___lmul *****************
 12058 ;; Defined at:
 12059 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
 12060 ;; Parameters:    Size  Location     Type
 12061 ;;  multiplier      4   18[BANK0 ] unsigned long 
 12062 ;;  multiplicand    4   22[BANK0 ] unsigned long 
 12063 ;; Auto vars:     Size  Location     Type
 12064 ;;  product         4   26[BANK0 ] unsigned long 
 12065 ;; Return value:  Size  Location     Type
 12066 ;;                  4   18[BANK0 ] unsigned long 
 12067 ;; Registers used:
 12068 ;;		wreg, status,2, status,0
 12069 ;; Tracked objects:
 12070 ;;		On entry : 0/0
 12071 ;;		On exit  : 0/0
 12072 ;;		Unchanged: 0/0
 12073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12074 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12075 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12077 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12078 ;;Total ram usage:       12 bytes
 12079 ;; Hardware stack levels used:    1
 12080 ;; Hardware stack levels required when called:    6
 12081 ;; This function calls:
 12082 ;;		Nothing
 12083 ;; This function is called by:
 12084 ;;		_GetNumber
 12085 ;; This function uses a non-reentrant model
 12086 ;;
 12087                           
 12088                           	psect	text24
 12089  0051F2                     __ptext24:
 12090                           	opt stack 0
 12091  0051F2                     ___lmul:
 12092                           	opt stack 22
 12093                           
 12094                           ;incstack = 0
 12095  0051F2  0E00               	movlw	0
 12096  0051F4  0100               	movlb	0	; () banked
 12097  0051F6  6F7A               	movwf	___lmul@product& (0+255),b
 12098  0051F8  0E00               	movlw	0
 12099  0051FA  6F7B               	movwf	(___lmul@product+1)& (0+255),b
 12100  0051FC  0E00               	movlw	0
 12101  0051FE  6F7C               	movwf	(___lmul@product+2)& (0+255),b
 12102  005200  0E00               	movlw	0
 12103  005202  6F7D               	movwf	(___lmul@product+3)& (0+255),b
 12104  005204  D000               	goto	l9267
 12105  005206                     l9267:
 12106                           
 12107                           ; BSR set to: 0
 12108  005206  0100               	movlb	0	; () banked
 12109  005208  A172               	btfss	___lmul@multiplier& (0+255),0,b
 12110  00520A  D011               	goto	l9271
 12111                           
 12112                           ; BSR set to: 0
 12113  00520C  0100               	movlb	0	; () banked
 12114  00520E  5176               	movf	___lmul@multiplicand& (0+255),w,b
 12115  005210  0100               	movlb	0	; () banked
 12116  005212  277A               	addwf	___lmul@product& (0+255),f,b
 12117  005214  0100               	movlb	0	; () banked
 12118  005216  5177               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 12119  005218  0100               	movlb	0	; () banked
 12120  00521A  237B               	addwfc	(___lmul@product+1)& (0+255),f,b
 12121  00521C  0100               	movlb	0	; () banked
 12122  00521E  5178               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 12123  005220  0100               	movlb	0	; () banked
 12124  005222  237C               	addwfc	(___lmul@product+2)& (0+255),f,b
 12125  005224  0100               	movlb	0	; () banked
 12126  005226  5179               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 12127  005228  0100               	movlb	0	; () banked
 12128  00522A  237D               	addwfc	(___lmul@product+3)& (0+255),f,b
 12129  00522C  D000               	goto	l9271
 12130  00522E                     l9271:
 12131                           
 12132                           ; BSR set to: 0
 12133  00522E  0100               	movlb	0	; () banked
 12134  005230  90D8               	bcf	status,0,c
 12135  005232  3776               	rlcf	___lmul@multiplicand& (0+255),f,b
 12136  005234  3777               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 12137  005236  3778               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 12138  005238  3779               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 12139                           
 12140                           ; BSR set to: 0
 12141  00523A  0100               	movlb	0	; () banked
 12142  00523C  90D8               	bcf	status,0,c
 12143  00523E  3375               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 12144  005240  3374               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 12145  005242  3373               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 12146  005244  3372               	rrcf	___lmul@multiplier& (0+255),f,b
 12147  005246  0100               	movlb	0	; () banked
 12148  005248  5172               	movf	___lmul@multiplier& (0+255),w,b
 12149  00524A  0100               	movlb	0	; () banked
 12150  00524C  1173               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 12151  00524E  0100               	movlb	0	; () banked
 12152  005250  1174               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 12153  005252  0100               	movlb	0	; () banked
 12154  005254  1175               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 12155  005256  A4D8               	btfss	status,2,c
 12156  005258  D7D6               	goto	l9267
 12157                           
 12158                           ; BSR set to: 0
 12159  00525A  C07A  F072         	movff	___lmul@product,?___lmul
 12160  00525E  C07B  F073         	movff	___lmul@product+1,?___lmul+1
 12161  005262  C07C  F074         	movff	___lmul@product+2,?___lmul+2
 12162  005266  C07D  F075         	movff	___lmul@product+3,?___lmul+3
 12163                           
 12164                           ; BSR set to: 0
 12165  00526A  0012               	return		;funcret
 12166  00526C                     __end_of___lmul:
 12167                           	opt stack 0
 12168                           tblptru	equ	0xFF8
 12169                           tblptrh	equ	0xFF7
 12170                           tblptrl	equ	0xFF6
 12171                           tablat	equ	0xFF5
 12172                           prodh	equ	0xFF4
 12173                           prodl	equ	0xFF3
 12174                           intcon	equ	0xFF2
 12175                           indf0	equ	0xFEF
 12176                           postinc0	equ	0xFEE
 12177                           fsr0h	equ	0xFEA
 12178                           fsr0l	equ	0xFE9
 12179                           wreg	equ	0xFE8
 12180                           indf1	equ	0xFE7
 12181                           postdec1	equ	0xFE5
 12182                           fsr1h	equ	0xFE2
 12183                           fsr1l	equ	0xFE1
 12184                           indf2	equ	0xFDF
 12185                           postinc2	equ	0xFDE
 12186                           fsr2h	equ	0xFDA
 12187                           fsr2l	equ	0xFD9
 12188                           status	equ	0xFD8
 12189                           
 12190 ;; *************** function _IsLetter *****************
 12191 ;; Defined at:
 12192 ;;		line 97 in file "MISC.c"
 12193 ;; Parameters:    Size  Location     Type
 12194 ;;  data            1    wreg     unsigned char 
 12195 ;; Auto vars:     Size  Location     Type
 12196 ;;  data            1   18[BANK0 ] unsigned char 
 12197 ;; Return value:  Size  Location     Type
 12198 ;;                  1    wreg      unsigned char 
 12199 ;; Registers used:
 12200 ;;		wreg, status,2, status,0
 12201 ;; Tracked objects:
 12202 ;;		On entry : 0/0
 12203 ;;		On exit  : 0/0
 12204 ;;		Unchanged: 0/0
 12205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12207 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12209 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12210 ;;Total ram usage:        1 bytes
 12211 ;; Hardware stack levels used:    1
 12212 ;; Hardware stack levels required when called:    6
 12213 ;; This function calls:
 12214 ;;		Nothing
 12215 ;; This function is called by:
 12216 ;;		_GetNumber
 12217 ;; This function uses a non-reentrant model
 12218 ;;
 12219                           
 12220                           	psect	text25
 12221  005A2E                     __ptext25:
 12222                           	opt stack 0
 12223  005A2E                     _IsLetter:
 12224                           	opt stack 22
 12225                           
 12226                           ; BSR set to: 0
 12227                           ;incstack = 0
 12228                           ;IsLetter@data stored from wreg
 12229  005A2E  0100               	movlb	0	; () banked
 12230  005A30  6F72               	movwf	IsLetter@data& (0+255),b
 12231                           
 12232                           ; BSR set to: 0
 12233                           ;MISC.c: 99: if(data >= 65 && data <= 90)
 12234  005A32  0E40               	movlw	64
 12235  005A34  0100               	movlb	0	; () banked
 12236  005A36  6572               	cpfsgt	IsLetter@data& (0+255),b
 12237  005A38  D006               	goto	l9021
 12238                           
 12239                           ; BSR set to: 0
 12240  005A3A  0E5B               	movlw	91
 12241  005A3C  0100               	movlb	0	; () banked
 12242  005A3E  6172               	cpfslt	IsLetter@data& (0+255),b
 12243  005A40  D002               	goto	l9021
 12244                           
 12245                           ; BSR set to: 0
 12246                           ;MISC.c: 100: {
 12247                           ;MISC.c: 101: return 1;
 12248  005A42  0E01               	movlw	1
 12249                           
 12250                           ; BSR set to: 0
 12251  005A44  0012               	return	
 12252  005A46                     l9021:
 12253                           
 12254                           ; BSR set to: 0
 12255                           ;MISC.c: 102: }
 12256                           ;MISC.c: 103: return 0;
 12257  005A46  0E00               	movlw	0
 12258  005A48  0012               	return	
 12259                           
 12260                           ; BSR set to: 0
 12261                           
 12262                           ; BSR set to: 0
 12263  005A4A  0012               	return		;funcret
 12264  005A4C                     __end_of_IsLetter:
 12265                           	opt stack 0
 12266                           tblptru	equ	0xFF8
 12267                           tblptrh	equ	0xFF7
 12268                           tblptrl	equ	0xFF6
 12269                           tablat	equ	0xFF5
 12270                           prodh	equ	0xFF4
 12271                           prodl	equ	0xFF3
 12272                           intcon	equ	0xFF2
 12273                           indf0	equ	0xFEF
 12274                           postinc0	equ	0xFEE
 12275                           fsr0h	equ	0xFEA
 12276                           fsr0l	equ	0xFE9
 12277                           wreg	equ	0xFE8
 12278                           indf1	equ	0xFE7
 12279                           postdec1	equ	0xFE5
 12280                           fsr1h	equ	0xFE2
 12281                           fsr1l	equ	0xFE1
 12282                           indf2	equ	0xFDF
 12283                           postinc2	equ	0xFDE
 12284                           fsr2h	equ	0xFDA
 12285                           fsr2l	equ	0xFD9
 12286                           status	equ	0xFD8
 12287                           
 12288 ;; *************** function _EncodeNEC *****************
 12289 ;; Defined at:
 12290 ;;		line 514 in file "IR.c"
 12291 ;; Parameters:    Size  Location     Type
 12292 ;;  address         1    wreg     unsigned char 
 12293 ;;  command         1   22[BANK0 ] unsigned char 
 12294 ;; Auto vars:     Size  Location     Type
 12295 ;;  address         1   62[BANK0 ] unsigned char 
 12296 ;;  temp4           4   58[BANK0 ] unsigned long 
 12297 ;;  temp3           4   54[BANK0 ] unsigned long 
 12298 ;;  temp2           4   50[BANK0 ] unsigned long 
 12299 ;;  temp1           4   46[BANK0 ] unsigned long 
 12300 ;; Return value:  Size  Location     Type
 12301 ;;                  4   22[BANK0 ] unsigned long 
 12302 ;; Registers used:
 12303 ;;		wreg, status,2, status,0, cstack
 12304 ;; Tracked objects:
 12305 ;;		On entry : 0/0
 12306 ;;		On exit  : 0/0
 12307 ;;		Unchanged: 0/0
 12308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12309 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12310 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12311 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12312 ;;      Totals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12313 ;;Total ram usage:       41 bytes
 12314 ;; Hardware stack levels used:    1
 12315 ;; Hardware stack levels required when called:    7
 12316 ;; This function calls:
 12317 ;;		_Reverse_Byte
 12318 ;; This function is called by:
 12319 ;;		_UseBluetooth
 12320 ;; This function uses a non-reentrant model
 12321 ;;
 12322                           
 12323                           	psect	text26
 12324  003D62                     __ptext26:
 12325                           	opt stack 0
 12326  003D62                     _EncodeNEC:
 12327                           	opt stack 22
 12328                           
 12329                           ; BSR set to: 0
 12330                           ;incstack = 0
 12331                           ;EncodeNEC@address stored from wreg
 12332  003D62  0100               	movlb	0	; () banked
 12333  003D64  6F9E               	movwf	EncodeNEC@address& (0+255),b
 12334                           
 12335                           ; BSR set to: 0
 12336                           ;IR.c: 516: unsigned long temp1,
 12337                           ;IR.c: 517: temp2,
 12338                           ;IR.c: 518: temp3,
 12339                           ;IR.c: 519: temp4;
 12340                           ;IR.c: 527: temp1 = (unsigned long) Reverse_Byte(address);
 12341  003D66  0100               	movlb	0	; () banked
 12342  003D68  519E               	movf	EncodeNEC@address& (0+255),w,b
 12343  003D6A  ECC2  F024         	call	_Reverse_Byte
 12344  003D6E  0100               	movlb	0	; () banked
 12345  003D70  6F7A               	movwf	??_EncodeNEC& (0+255),b
 12346  003D72  0100               	movlb	0	; () banked
 12347  003D74  517A               	movf	??_EncodeNEC& (0+255),w,b
 12348  003D76  0100               	movlb	0	; () banked
 12349  003D78  6F8E               	movwf	EncodeNEC@temp1& (0+255),b
 12350  003D7A  6B8F               	clrf	(EncodeNEC@temp1+1)& (0+255),b
 12351  003D7C  6B90               	clrf	(EncodeNEC@temp1+2)& (0+255),b
 12352  003D7E  6B91               	clrf	(EncodeNEC@temp1+3)& (0+255),b
 12353                           
 12354                           ;IR.c: 528: temp2 = (unsigned long) Reverse_Byte(~address);
 12355  003D80  0100               	movlb	0	; () banked
 12356  003D82  519E               	movf	EncodeNEC@address& (0+255),w,b
 12357  003D84  0AFF               	xorlw	255
 12358  003D86  ECC2  F024         	call	_Reverse_Byte
 12359  003D8A  0100               	movlb	0	; () banked
 12360  003D8C  6F7A               	movwf	??_EncodeNEC& (0+255),b
 12361  003D8E  0100               	movlb	0	; () banked
 12362  003D90  517A               	movf	??_EncodeNEC& (0+255),w,b
 12363  003D92  0100               	movlb	0	; () banked
 12364  003D94  6F92               	movwf	EncodeNEC@temp2& (0+255),b
 12365  003D96  6B93               	clrf	(EncodeNEC@temp2+1)& (0+255),b
 12366  003D98  6B94               	clrf	(EncodeNEC@temp2+2)& (0+255),b
 12367  003D9A  6B95               	clrf	(EncodeNEC@temp2+3)& (0+255),b
 12368                           
 12369                           ;IR.c: 529: temp3 = (unsigned long) Reverse_Byte(command);
 12370  003D9C  0100               	movlb	0	; () banked
 12371  003D9E  5176               	movf	EncodeNEC@command& (0+255),w,b
 12372  003DA0  ECC2  F024         	call	_Reverse_Byte
 12373  003DA4  0100               	movlb	0	; () banked
 12374  003DA6  6F7A               	movwf	??_EncodeNEC& (0+255),b
 12375  003DA8  0100               	movlb	0	; () banked
 12376  003DAA  517A               	movf	??_EncodeNEC& (0+255),w,b
 12377  003DAC  0100               	movlb	0	; () banked
 12378  003DAE  6F96               	movwf	EncodeNEC@temp3& (0+255),b
 12379  003DB0  6B97               	clrf	(EncodeNEC@temp3+1)& (0+255),b
 12380  003DB2  6B98               	clrf	(EncodeNEC@temp3+2)& (0+255),b
 12381  003DB4  6B99               	clrf	(EncodeNEC@temp3+3)& (0+255),b
 12382                           
 12383                           ;IR.c: 530: temp4 = (unsigned long) Reverse_Byte(~command);
 12384  003DB6  0100               	movlb	0	; () banked
 12385  003DB8  5176               	movf	EncodeNEC@command& (0+255),w,b
 12386  003DBA  0AFF               	xorlw	255
 12387  003DBC  ECC2  F024         	call	_Reverse_Byte
 12388  003DC0  0100               	movlb	0	; () banked
 12389  003DC2  6F7A               	movwf	??_EncodeNEC& (0+255),b
 12390  003DC4  0100               	movlb	0	; () banked
 12391  003DC6  517A               	movf	??_EncodeNEC& (0+255),w,b
 12392  003DC8  0100               	movlb	0	; () banked
 12393  003DCA  6F9A               	movwf	EncodeNEC@temp4& (0+255),b
 12394  003DCC  6B9B               	clrf	(EncodeNEC@temp4+1)& (0+255),b
 12395  003DCE  6B9C               	clrf	(EncodeNEC@temp4+2)& (0+255),b
 12396  003DD0  6B9D               	clrf	(EncodeNEC@temp4+3)& (0+255),b
 12397                           
 12398                           ; BSR set to: 0
 12399                           ;IR.c: 532: return ((temp1 << 24) + (temp2 << 16) + (temp3 << 8) + temp4);
 12400  003DD2  C096  F07B         	movff	EncodeNEC@temp3,??_EncodeNEC+1
 12401  003DD6  C097  F07C         	movff	EncodeNEC@temp3+1,??_EncodeNEC+2
 12402  003DDA  C098  F07D         	movff	EncodeNEC@temp3+2,??_EncodeNEC+3
 12403  003DDE  0100               	movlb	0	; () banked
 12404  003DE0  6B7A               	clrf	??_EncodeNEC& (0+255),b
 12405  003DE2  C092  F07E         	movff	EncodeNEC@temp2,??_EncodeNEC+4
 12406  003DE6  C093  F07F         	movff	EncodeNEC@temp2+1,??_EncodeNEC+5
 12407  003DEA  C094  F080         	movff	EncodeNEC@temp2+2,??_EncodeNEC+6
 12408  003DEE  C095  F081         	movff	EncodeNEC@temp2+3,??_EncodeNEC+7
 12409  003DF2  C07F  F081         	movff	??_EncodeNEC+5,??_EncodeNEC+7
 12410  003DF6  C07E  F080         	movff	??_EncodeNEC+4,??_EncodeNEC+6
 12411  003DFA  0100               	movlb	0	; () banked
 12412  003DFC  6B7F               	clrf	(??_EncodeNEC+5)& (0+255),b
 12413  003DFE  6B7E               	clrf	(??_EncodeNEC+4)& (0+255),b
 12414  003E00  C08E  F082         	movff	EncodeNEC@temp1,??_EncodeNEC+8
 12415  003E04  C08F  F083         	movff	EncodeNEC@temp1+1,??_EncodeNEC+9
 12416  003E08  C090  F084         	movff	EncodeNEC@temp1+2,??_EncodeNEC+10
 12417  003E0C  C091  F085         	movff	EncodeNEC@temp1+3,??_EncodeNEC+11
 12418  003E10  C082  F085         	movff	??_EncodeNEC+8,??_EncodeNEC+11
 12419  003E14  0100               	movlb	0	; () banked
 12420  003E16  6B84               	clrf	(??_EncodeNEC+10)& (0+255),b
 12421  003E18  6B83               	clrf	(??_EncodeNEC+9)& (0+255),b
 12422  003E1A  6B82               	clrf	(??_EncodeNEC+8)& (0+255),b
 12423  003E1C  0100               	movlb	0	; () banked
 12424  003E1E  517E               	movf	(??_EncodeNEC+4)& (0+255),w,b
 12425  003E20  0100               	movlb	0	; () banked
 12426  003E22  2582               	addwf	(??_EncodeNEC+8)& (0+255),w,b
 12427  003E24  0100               	movlb	0	; () banked
 12428  003E26  6F86               	movwf	(??_EncodeNEC+12)& (0+255),b
 12429  003E28  0100               	movlb	0	; () banked
 12430  003E2A  517F               	movf	(??_EncodeNEC+5)& (0+255),w,b
 12431  003E2C  0100               	movlb	0	; () banked
 12432  003E2E  2183               	addwfc	(??_EncodeNEC+9)& (0+255),w,b
 12433  003E30  0100               	movlb	0	; () banked
 12434  003E32  6F87               	movwf	(??_EncodeNEC+13)& (0+255),b
 12435  003E34  0100               	movlb	0	; () banked
 12436  003E36  5180               	movf	(??_EncodeNEC+6)& (0+255),w,b
 12437  003E38  0100               	movlb	0	; () banked
 12438  003E3A  2184               	addwfc	(??_EncodeNEC+10)& (0+255),w,b
 12439  003E3C  0100               	movlb	0	; () banked
 12440  003E3E  6F88               	movwf	(??_EncodeNEC+14)& (0+255),b
 12441  003E40  0100               	movlb	0	; () banked
 12442  003E42  5181               	movf	(??_EncodeNEC+7)& (0+255),w,b
 12443  003E44  0100               	movlb	0	; () banked
 12444  003E46  2185               	addwfc	(??_EncodeNEC+11)& (0+255),w,b
 12445  003E48  0100               	movlb	0	; () banked
 12446  003E4A  6F89               	movwf	(??_EncodeNEC+15)& (0+255),b
 12447  003E4C  0100               	movlb	0	; () banked
 12448  003E4E  517A               	movf	??_EncodeNEC& (0+255),w,b
 12449  003E50  0100               	movlb	0	; () banked
 12450  003E52  2586               	addwf	(??_EncodeNEC+12)& (0+255),w,b
 12451  003E54  0100               	movlb	0	; () banked
 12452  003E56  6F8A               	movwf	(??_EncodeNEC+16)& (0+255),b
 12453  003E58  0100               	movlb	0	; () banked
 12454  003E5A  517B               	movf	(??_EncodeNEC+1)& (0+255),w,b
 12455  003E5C  0100               	movlb	0	; () banked
 12456  003E5E  2187               	addwfc	(??_EncodeNEC+13)& (0+255),w,b
 12457  003E60  0100               	movlb	0	; () banked
 12458  003E62  6F8B               	movwf	(??_EncodeNEC+17)& (0+255),b
 12459  003E64  0100               	movlb	0	; () banked
 12460  003E66  517C               	movf	(??_EncodeNEC+2)& (0+255),w,b
 12461  003E68  0100               	movlb	0	; () banked
 12462  003E6A  2188               	addwfc	(??_EncodeNEC+14)& (0+255),w,b
 12463  003E6C  0100               	movlb	0	; () banked
 12464  003E6E  6F8C               	movwf	(??_EncodeNEC+18)& (0+255),b
 12465  003E70  0100               	movlb	0	; () banked
 12466  003E72  517D               	movf	(??_EncodeNEC+3)& (0+255),w,b
 12467  003E74  0100               	movlb	0	; () banked
 12468  003E76  2189               	addwfc	(??_EncodeNEC+15)& (0+255),w,b
 12469  003E78  0100               	movlb	0	; () banked
 12470  003E7A  6F8D               	movwf	(??_EncodeNEC+19)& (0+255),b
 12471  003E7C  0100               	movlb	0	; () banked
 12472  003E7E  519A               	movf	EncodeNEC@temp4& (0+255),w,b
 12473  003E80  0100               	movlb	0	; () banked
 12474  003E82  258A               	addwf	(??_EncodeNEC+16)& (0+255),w,b
 12475  003E84  0100               	movlb	0	; () banked
 12476  003E86  6F76               	movwf	?_EncodeNEC& (0+255),b
 12477  003E88  0100               	movlb	0	; () banked
 12478  003E8A  519B               	movf	(EncodeNEC@temp4+1)& (0+255),w,b
 12479  003E8C  0100               	movlb	0	; () banked
 12480  003E8E  218B               	addwfc	(??_EncodeNEC+17)& (0+255),w,b
 12481  003E90  0100               	movlb	0	; () banked
 12482  003E92  6F77               	movwf	(?_EncodeNEC+1)& (0+255),b
 12483  003E94  0100               	movlb	0	; () banked
 12484  003E96  519C               	movf	(EncodeNEC@temp4+2)& (0+255),w,b
 12485  003E98  0100               	movlb	0	; () banked
 12486  003E9A  218C               	addwfc	(??_EncodeNEC+18)& (0+255),w,b
 12487  003E9C  0100               	movlb	0	; () banked
 12488  003E9E  6F78               	movwf	(?_EncodeNEC+2)& (0+255),b
 12489  003EA0  0100               	movlb	0	; () banked
 12490  003EA2  519D               	movf	(EncodeNEC@temp4+3)& (0+255),w,b
 12491  003EA4  0100               	movlb	0	; () banked
 12492  003EA6  218D               	addwfc	(??_EncodeNEC+19)& (0+255),w,b
 12493  003EA8  0100               	movlb	0	; () banked
 12494  003EAA  6F79               	movwf	(?_EncodeNEC+3)& (0+255),b
 12495  003EAC  0012               	return	
 12496                           
 12497                           ; BSR set to: 0
 12498                           
 12499                           ; BSR set to: 0
 12500  003EAE  0012               	return		;funcret
 12501  003EB0                     __end_of_EncodeNEC:
 12502                           	opt stack 0
 12503                           tblptru	equ	0xFF8
 12504                           tblptrh	equ	0xFF7
 12505                           tblptrl	equ	0xFF6
 12506                           tablat	equ	0xFF5
 12507                           prodh	equ	0xFF4
 12508                           prodl	equ	0xFF3
 12509                           intcon	equ	0xFF2
 12510                           indf0	equ	0xFEF
 12511                           postinc0	equ	0xFEE
 12512                           fsr0h	equ	0xFEA
 12513                           fsr0l	equ	0xFE9
 12514                           wreg	equ	0xFE8
 12515                           indf1	equ	0xFE7
 12516                           postdec1	equ	0xFE5
 12517                           fsr1h	equ	0xFE2
 12518                           fsr1l	equ	0xFE1
 12519                           indf2	equ	0xFDF
 12520                           postinc2	equ	0xFDE
 12521                           fsr2h	equ	0xFDA
 12522                           fsr2l	equ	0xFD9
 12523                           status	equ	0xFD8
 12524                           
 12525 ;; *************** function _DecodeNEC *****************
 12526 ;; Defined at:
 12527 ;;		line 540 in file "IR.c"
 12528 ;; Parameters:    Size  Location     Type
 12529 ;;  Nec             4   22[BANK0 ] unsigned long 
 12530 ;;  address         2   26[BANK0 ] PTR unsigned char 
 12531 ;;		 -> UseBluetooth@NecAddress(1), IRaddress(1), 
 12532 ;;  command         2   28[BANK0 ] PTR unsigned char 
 12533 ;;		 -> UseBluetooth@NecCommand(1), IRcommand(1), 
 12534 ;; Auto vars:     Size  Location     Type
 12535 ;;  temp1           1   36[BANK0 ] unsigned char 
 12536 ;;  temp3           1   35[BANK0 ] unsigned char 
 12537 ;;  temp2           1   34[BANK0 ] unsigned char 
 12538 ;; Return value:  Size  Location     Type
 12539 ;;                  1    wreg      unsigned char 
 12540 ;; Registers used:
 12541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12542 ;; Tracked objects:
 12543 ;;		On entry : 0/0
 12544 ;;		On exit  : 0/0
 12545 ;;		Unchanged: 0/0
 12546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12547 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12548 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12549 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12550 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12551 ;;Total ram usage:       15 bytes
 12552 ;; Hardware stack levels used:    1
 12553 ;; Hardware stack levels required when called:    7
 12554 ;; This function calls:
 12555 ;;		_Reverse_Byte
 12556 ;; This function is called by:
 12557 ;;		_UseIRCode
 12558 ;;		_UseBluetooth
 12559 ;; This function uses a non-reentrant model
 12560 ;;
 12561                           
 12562                           	psect	text27
 12563  004AEC                     __ptext27:
 12564                           	opt stack 0
 12565  004AEC                     _DecodeNEC:
 12566                           	opt stack 22
 12567                           
 12568                           ;IR.c: 542: unsigned char temp1,
 12569                           ;IR.c: 543: temp2,
 12570                           ;IR.c: 544: temp3;
 12571                           ;IR.c: 546: temp1 = ~Reverse_Byte((unsigned char) (Nec & 0x00FF));
 12572                           
 12573                           ; BSR set to: 0
 12574                           ;incstack = 0
 12575  004AEC  0100               	movlb	0	; () banked
 12576  004AEE  5176               	movf	DecodeNEC@Nec& (0+255),w,b
 12577  004AF0  ECC2  F024         	call	_Reverse_Byte
 12578  004AF4  0AFF               	xorlw	255
 12579  004AF6  0100               	movlb	0	; () banked
 12580  004AF8  6F84               	movwf	DecodeNEC@temp1& (0+255),b
 12581                           
 12582                           ;IR.c: 547: temp2 = Reverse_Byte((unsigned char) ((Nec & 0xFF00)>> 8));
 12583  004AFA  0100               	movlb	0	; () banked
 12584  004AFC  5177               	movf	(DecodeNEC@Nec+1)& (0+255),w,b
 12585  004AFE  ECC2  F024         	call	_Reverse_Byte
 12586  004B02  0100               	movlb	0	; () banked
 12587  004B04  6F82               	movwf	DecodeNEC@temp2& (0+255),b
 12588                           
 12589                           ; BSR set to: 0
 12590                           ;IR.c: 548: if(temp1 != temp2)
 12591  004B06  0100               	movlb	0	; () banked
 12592  004B08  5182               	movf	DecodeNEC@temp2& (0+255),w,b
 12593  004B0A  0100               	movlb	0	; () banked
 12594  004B0C  1984               	xorwf	DecodeNEC@temp1& (0+255),w,b
 12595  004B0E  B4D8               	btfsc	status,2,c
 12596  004B10  D002               	goto	l9913
 12597                           
 12598                           ; BSR set to: 0
 12599                           ;IR.c: 549: {
 12600                           ;IR.c: 551: return 0;
 12601  004B12  0E00               	movlw	0
 12602                           
 12603                           ; BSR set to: 0
 12604  004B14  0012               	return	
 12605  004B16                     l9913:
 12606                           
 12607                           ; BSR set to: 0
 12608                           ;IR.c: 552: }
 12609                           ;IR.c: 553: temp1 = ~Reverse_Byte((unsigned char) ((Nec & 0x00FF0000) >> 16));
 12610  004B16  0100               	movlb	0	; () banked
 12611  004B18  5178               	movf	(DecodeNEC@Nec+2)& (0+255),w,b
 12612  004B1A  ECC2  F024         	call	_Reverse_Byte
 12613  004B1E  0AFF               	xorlw	255
 12614  004B20  0100               	movlb	0	; () banked
 12615  004B22  6F84               	movwf	DecodeNEC@temp1& (0+255),b
 12616                           
 12617                           ;IR.c: 554: temp3 = Reverse_Byte((unsigned char) ((Nec & 0xFF000000) >> 24));
 12618  004B24  0E00               	movlw	0
 12619  004B26  0100               	movlb	0	; () banked
 12620  004B28  1576               	andwf	DecodeNEC@Nec& (0+255),w,b
 12621  004B2A  0100               	movlb	0	; () banked
 12622  004B2C  6F7E               	movwf	??_DecodeNEC& (0+255),b
 12623  004B2E  0E00               	movlw	0
 12624  004B30  0100               	movlb	0	; () banked
 12625  004B32  1577               	andwf	(DecodeNEC@Nec+1)& (0+255),w,b
 12626  004B34  0100               	movlb	0	; () banked
 12627  004B36  6F7F               	movwf	(??_DecodeNEC+1)& (0+255),b
 12628  004B38  0E00               	movlw	0
 12629  004B3A  0100               	movlb	0	; () banked
 12630  004B3C  1578               	andwf	(DecodeNEC@Nec+2)& (0+255),w,b
 12631  004B3E  0100               	movlb	0	; () banked
 12632  004B40  6F80               	movwf	(??_DecodeNEC+2)& (0+255),b
 12633  004B42  0EFF               	movlw	255
 12634  004B44  0100               	movlb	0	; () banked
 12635  004B46  1579               	andwf	(DecodeNEC@Nec+3)& (0+255),w,b
 12636  004B48  0100               	movlb	0	; () banked
 12637  004B4A  6F81               	movwf	(??_DecodeNEC+3)& (0+255),b
 12638  004B4C  0E19               	movlw	25
 12639  004B4E  D006               	goto	u11070
 12640  004B50                     u11075:
 12641  004B50  0100               	movlb	0	; () banked
 12642  004B52  90D8               	bcf	status,0,c
 12643  004B54  3381               	rrcf	(??_DecodeNEC+3)& (0+255),f,b
 12644  004B56  3380               	rrcf	(??_DecodeNEC+2)& (0+255),f,b
 12645  004B58  337F               	rrcf	(??_DecodeNEC+1)& (0+255),f,b
 12646  004B5A  337E               	rrcf	??_DecodeNEC& (0+255),f,b
 12647  004B5C                     u11070:
 12648  004B5C  2EE8               	decfsz	wreg,f,c
 12649  004B5E  D7F8               	goto	u11075
 12650  004B60  0100               	movlb	0	; () banked
 12651  004B62  517E               	movf	??_DecodeNEC& (0+255),w,b
 12652  004B64  ECC2  F024         	call	_Reverse_Byte
 12653  004B68  0100               	movlb	0	; () banked
 12654  004B6A  6F83               	movwf	DecodeNEC@temp3& (0+255),b
 12655                           
 12656                           ; BSR set to: 0
 12657                           ;IR.c: 555: if(temp1 != temp3)
 12658  004B6C  0100               	movlb	0	; () banked
 12659  004B6E  5183               	movf	DecodeNEC@temp3& (0+255),w,b
 12660  004B70  0100               	movlb	0	; () banked
 12661  004B72  1984               	xorwf	DecodeNEC@temp1& (0+255),w,b
 12662  004B74  B4D8               	btfsc	status,2,c
 12663  004B76  D002               	goto	l9921
 12664                           
 12665                           ; BSR set to: 0
 12666                           ;IR.c: 556: {
 12667                           ;IR.c: 558: return 0;
 12668  004B78  0E00               	movlw	0
 12669                           
 12670                           ; BSR set to: 0
 12671  004B7A  0012               	return	
 12672  004B7C                     l9921:
 12673                           
 12674                           ; BSR set to: 0
 12675                           ;IR.c: 559: }
 12676                           ;IR.c: 560: *command = temp2;
 12677  004B7C  C07C  FFD9         	movff	DecodeNEC@command,fsr2l
 12678  004B80  C07D  FFDA         	movff	DecodeNEC@command+1,fsr2h
 12679  004B84  C082  FFDF         	movff	DecodeNEC@temp2,indf2
 12680                           
 12681                           ;IR.c: 561: *address = temp3;
 12682  004B88  C07A  FFD9         	movff	DecodeNEC@address,fsr2l
 12683  004B8C  C07B  FFDA         	movff	DecodeNEC@address+1,fsr2h
 12684  004B90  C083  FFDF         	movff	DecodeNEC@temp3,indf2
 12685                           
 12686                           ; BSR set to: 0
 12687                           ;IR.c: 562: return 1;
 12688  004B94  0E01               	movlw	1
 12689  004B96  0012               	return	
 12690                           
 12691                           ; BSR set to: 0
 12692                           
 12693                           ; BSR set to: 0
 12694  004B98  0012               	return		;funcret
 12695  004B9A                     __end_of_DecodeNEC:
 12696                           	opt stack 0
 12697                           tblptru	equ	0xFF8
 12698                           tblptrh	equ	0xFF7
 12699                           tblptrl	equ	0xFF6
 12700                           tablat	equ	0xFF5
 12701                           prodh	equ	0xFF4
 12702                           prodl	equ	0xFF3
 12703                           intcon	equ	0xFF2
 12704                           indf0	equ	0xFEF
 12705                           postinc0	equ	0xFEE
 12706                           fsr0h	equ	0xFEA
 12707                           fsr0l	equ	0xFE9
 12708                           wreg	equ	0xFE8
 12709                           indf1	equ	0xFE7
 12710                           postdec1	equ	0xFE5
 12711                           fsr1h	equ	0xFE2
 12712                           fsr1l	equ	0xFE1
 12713                           indf2	equ	0xFDF
 12714                           postinc2	equ	0xFDE
 12715                           fsr2h	equ	0xFDA
 12716                           fsr2l	equ	0xFD9
 12717                           status	equ	0xFD8
 12718                           
 12719 ;; *************** function _Reverse_Byte *****************
 12720 ;; Defined at:
 12721 ;;		line 360 in file "MISC.c"
 12722 ;; Parameters:    Size  Location     Type
 12723 ;;  This            1    wreg     unsigned char 
 12724 ;; Auto vars:     Size  Location     Type
 12725 ;;  This            1   21[BANK0 ] unsigned char 
 12726 ;;  temp            1   20[BANK0 ] unsigned char 
 12727 ;; Return value:  Size  Location     Type
 12728 ;;                  1    wreg      unsigned char 
 12729 ;; Registers used:
 12730 ;;		wreg, status,2, status,0
 12731 ;; Tracked objects:
 12732 ;;		On entry : 0/0
 12733 ;;		On exit  : 0/0
 12734 ;;		Unchanged: 0/0
 12735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12737 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12738 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12739 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12740 ;;Total ram usage:        4 bytes
 12741 ;; Hardware stack levels used:    1
 12742 ;; Hardware stack levels required when called:    6
 12743 ;; This function calls:
 12744 ;;		Nothing
 12745 ;; This function is called by:
 12746 ;;		_EncodeNEC
 12747 ;;		_DecodeNEC
 12748 ;; This function uses a non-reentrant model
 12749 ;;
 12750                           
 12751                           	psect	text28
 12752  004984                     __ptext28:
 12753                           	opt stack 0
 12754  004984                     _Reverse_Byte:
 12755                           	opt stack 22
 12756                           
 12757                           ; BSR set to: 0
 12758                           ;incstack = 0
 12759                           ;Reverse_Byte@This stored from wreg
 12760  004984  0100               	movlb	0	; () banked
 12761  004986  6F75               	movwf	Reverse_Byte@This& (0+255),b
 12762                           
 12763                           ; BSR set to: 0
 12764                           ;MISC.c: 362: unsigned char temp=0;
 12765  004988  0E00               	movlw	0
 12766  00498A  0100               	movlb	0	; () banked
 12767  00498C  6F74               	movwf	Reverse_Byte@temp& (0+255),b
 12768                           
 12769                           ; BSR set to: 0
 12770                           ;MISC.c: 364: temp += (This & 0x01) << 7;
 12771  00498E  C075  F072         	movff	Reverse_Byte@This,??_Reverse_Byte
 12772  004992  0E01               	movlw	1
 12773  004994  0100               	movlb	0	; () banked
 12774  004996  1772               	andwf	??_Reverse_Byte& (0+255),f,b
 12775  004998  0E00               	movlw	0
 12776  00499A  B172               	btfsc	??_Reverse_Byte& (0+255),0,b
 12777  00499C  0E80               	movlw	128
 12778  00499E  6F72               	movwf	??_Reverse_Byte& (0+255),b
 12779  0049A0  0100               	movlb	0	; () banked
 12780  0049A2  5172               	movf	??_Reverse_Byte& (0+255),w,b
 12781  0049A4  0100               	movlb	0	; () banked
 12782  0049A6  2774               	addwf	Reverse_Byte@temp& (0+255),f,b
 12783                           
 12784                           ; BSR set to: 0
 12785                           ;MISC.c: 365: temp += (This & 0x02) << 5;
 12786  0049A8  C075  F072         	movff	Reverse_Byte@This,??_Reverse_Byte
 12787  0049AC  0E02               	movlw	2
 12788  0049AE  0100               	movlb	0	; () banked
 12789  0049B0  1772               	andwf	??_Reverse_Byte& (0+255),f,b
 12790  0049B2  0E05               	movlw	5
 12791  0049B4  0100               	movlb	0	; () banked
 12792  0049B6  6F73               	movwf	(??_Reverse_Byte+1)& (0+255),b
 12793  0049B8                     u10015:
 12794  0049B8  0100               	movlb	0	; () banked
 12795  0049BA  90D8               	bcf	status,0,c
 12796  0049BC  3772               	rlcf	??_Reverse_Byte& (0+255),f,b
 12797  0049BE  0100               	movlb	0	; () banked
 12798  0049C0  2F73               	decfsz	(??_Reverse_Byte+1)& (0+255),f,b
 12799  0049C2  D7FA               	goto	u10015
 12800  0049C4  0100               	movlb	0	; () banked
 12801  0049C6  5172               	movf	??_Reverse_Byte& (0+255),w,b
 12802  0049C8  0100               	movlb	0	; () banked
 12803  0049CA  2774               	addwf	Reverse_Byte@temp& (0+255),f,b
 12804                           
 12805                           ; BSR set to: 0
 12806                           ;MISC.c: 366: temp += (This & 0x04) << 3;
 12807  0049CC  C075  F072         	movff	Reverse_Byte@This,??_Reverse_Byte
 12808  0049D0  0E04               	movlw	4
 12809  0049D2  0100               	movlb	0	; () banked
 12810  0049D4  1772               	andwf	??_Reverse_Byte& (0+255),f,b
 12811  0049D6  0100               	movlb	0	; () banked
 12812  0049D8  90D8               	bcf	status,0,c
 12813  0049DA  3772               	rlcf	??_Reverse_Byte& (0+255),f,b
 12814  0049DC  0100               	movlb	0	; () banked
 12815  0049DE  90D8               	bcf	status,0,c
 12816  0049E0  3772               	rlcf	??_Reverse_Byte& (0+255),f,b
 12817  0049E2  0100               	movlb	0	; () banked
 12818  0049E4  90D8               	bcf	status,0,c
 12819  0049E6  3572               	rlcf	??_Reverse_Byte& (0+255),w,b
 12820  0049E8  0100               	movlb	0	; () banked
 12821  0049EA  2774               	addwf	Reverse_Byte@temp& (0+255),f,b
 12822                           
 12823                           ; BSR set to: 0
 12824                           ;MISC.c: 367: temp += (This & 0x08) << 1;
 12825  0049EC  C075  F072         	movff	Reverse_Byte@This,??_Reverse_Byte
 12826  0049F0  0E08               	movlw	8
 12827  0049F2  0100               	movlb	0	; () banked
 12828  0049F4  1772               	andwf	??_Reverse_Byte& (0+255),f,b
 12829  0049F6  0100               	movlb	0	; () banked
 12830  0049F8  90D8               	bcf	status,0,c
 12831  0049FA  3572               	rlcf	??_Reverse_Byte& (0+255),w,b
 12832  0049FC  0100               	movlb	0	; () banked
 12833  0049FE  2774               	addwf	Reverse_Byte@temp& (0+255),f,b
 12834                           
 12835                           ; BSR set to: 0
 12836                           ;MISC.c: 368: temp += (This & 0x10) >> 1;
 12837  004A00  0100               	movlb	0	; () banked
 12838  004A02  90D8               	bcf	status,0,c
 12839  004A04  3175               	rrcf	Reverse_Byte@This& (0+255),w,b
 12840  004A06  0B08               	andlw	8
 12841  004A08  0100               	movlb	0	; () banked
 12842  004A0A  2774               	addwf	Reverse_Byte@temp& (0+255),f,b
 12843                           
 12844                           ; BSR set to: 0
 12845                           ;MISC.c: 369: temp += (This & 0x20) >> 3;
 12846  004A0C  0100               	movlb	0	; () banked
 12847  004A0E  3975               	swapf	Reverse_Byte@This& (0+255),w,b
 12848  004A10  46E8               	rlncf	wreg,f,c
 12849  004A12  0B1F               	andlw	31
 12850  004A14  0B04               	andlw	4
 12851  004A16  0100               	movlb	0	; () banked
 12852  004A18  2774               	addwf	Reverse_Byte@temp& (0+255),f,b
 12853                           
 12854                           ; BSR set to: 0
 12855                           ;MISC.c: 370: temp += (This & 0x40) >> 5;
 12856  004A1A  0100               	movlb	0	; () banked
 12857  004A1C  3975               	swapf	Reverse_Byte@This& (0+255),w,b
 12858  004A1E  42E8               	rrncf	wreg,f,c
 12859  004A20  0B07               	andlw	7
 12860  004A22  0B02               	andlw	2
 12861  004A24  0100               	movlb	0	; () banked
 12862  004A26  2774               	addwf	Reverse_Byte@temp& (0+255),f,b
 12863                           
 12864                           ; BSR set to: 0
 12865                           ;MISC.c: 371: temp += (This & 0x80) >> 7;
 12866  004A28  0100               	movlb	0	; () banked
 12867  004A2A  4575               	rlncf	Reverse_Byte@This& (0+255),w,b
 12868  004A2C  0B01               	andlw	1
 12869  004A2E  0100               	movlb	0	; () banked
 12870  004A30  2774               	addwf	Reverse_Byte@temp& (0+255),f,b
 12871                           
 12872                           ; BSR set to: 0
 12873                           ;MISC.c: 373: return temp;
 12874  004A32  0100               	movlb	0	; () banked
 12875  004A34  5174               	movf	Reverse_Byte@temp& (0+255),w,b
 12876  004A36  0012               	return	
 12877                           
 12878                           ; BSR set to: 0
 12879                           
 12880                           ; BSR set to: 0
 12881  004A38  0012               	return		;funcret
 12882  004A3A                     __end_of_Reverse_Byte:
 12883                           	opt stack 0
 12884                           tblptru	equ	0xFF8
 12885                           tblptrh	equ	0xFF7
 12886                           tblptrl	equ	0xFF6
 12887                           tablat	equ	0xFF5
 12888                           prodh	equ	0xFF4
 12889                           prodl	equ	0xFF3
 12890                           intcon	equ	0xFF2
 12891                           indf0	equ	0xFEF
 12892                           postinc0	equ	0xFEE
 12893                           fsr0h	equ	0xFEA
 12894                           fsr0l	equ	0xFE9
 12895                           wreg	equ	0xFE8
 12896                           indf1	equ	0xFE7
 12897                           postdec1	equ	0xFE5
 12898                           fsr1h	equ	0xFE2
 12899                           fsr1l	equ	0xFE1
 12900                           indf2	equ	0xFDF
 12901                           postinc2	equ	0xFDE
 12902                           fsr2h	equ	0xFDA
 12903                           fsr2l	equ	0xFD9
 12904                           status	equ	0xFD8
 12905                           
 12906 ;; *************** function _ReadVoltage *****************
 12907 ;; Defined at:
 12908 ;;		line 58 in file "ADC.c"
 12909 ;; Parameters:    Size  Location     Type
 12910 ;;		None
 12911 ;; Auto vars:     Size  Location     Type
 12912 ;;  voltage         3   62[BANK0 ] unsigned char 
 12913 ;;  temp            2   65[BANK0 ] unsigned int 
 12914 ;; Return value:  Size  Location     Type
 12915 ;;                  3   59[BANK0 ] unsigned int 
 12916 ;; Registers used:
 12917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12918 ;; Tracked objects:
 12919 ;;		On entry : 0/0
 12920 ;;		On exit  : 0/0
 12921 ;;		Unchanged: 0/0
 12922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12923 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12924 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12926 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12927 ;;Total ram usage:        8 bytes
 12928 ;; Hardware stack levels used:    1
 12929 ;; Hardware stack levels required when called:    8
 12930 ;; This function calls:
 12931 ;;		_InternalADC_Read
 12932 ;;		_VoltageDividerOFF
 12933 ;;		_VoltageDividerON
 12934 ;;		___ftdiv
 12935 ;;		___ftmul
 12936 ;;		___lwtoft
 12937 ;;		_delayUS
 12938 ;; This function is called by:
 12939 ;;		_main
 12940 ;; This function uses a non-reentrant model
 12941 ;;
 12942                           
 12943                           	psect	text29
 12944  0048CC                     __ptext29:
 12945                           	opt stack 0
 12946  0048CC                     _ReadVoltage:
 12947                           	opt stack 22
 12948                           
 12949                           ;ADC.c: 60: unsigned int temp;
 12950                           ;ADC.c: 61: double voltage;
 12951                           ;ADC.c: 63: VoltageDividerON();
 12952                           
 12953                           ; BSR set to: 0
 12954                           ;incstack = 0
 12955  0048CC  ECF5  F02D         	call	_VoltageDividerON	;wreg free
 12956                           
 12957                           ;ADC.c: 64: delayUS(5);
 12958  0048D0  0E05               	movlw	5
 12959  0048D2  0100               	movlb	0	; () banked
 12960  0048D4  6F72               	movwf	delayUS@US& (0+255),b
 12961  0048D6  0E00               	movlw	0
 12962  0048D8  6F73               	movwf	(delayUS@US+1)& (0+255),b
 12963  0048DA  0E00               	movlw	0
 12964  0048DC  6F74               	movwf	(delayUS@US+2)& (0+255),b
 12965  0048DE  0E00               	movlw	0
 12966  0048E0  6F75               	movwf	(delayUS@US+3)& (0+255),b
 12967  0048E2  EC1F  F02B         	call	_delayUS	;wreg free
 12968                           
 12969                           ;ADC.c: 65: if(InternalADC_Read(0, &temp))
 12970  0048E6  0EA1               	movlw	low ReadVoltage@temp
 12971  0048E8  0100               	movlb	0	; () banked
 12972  0048EA  6F7B               	movwf	InternalADC_Read@ADCcounts& (0+255),b
 12973  0048EC  0E00               	movlw	high ReadVoltage@temp
 12974  0048EE  0100               	movlb	0	; () banked
 12975  0048F0  6F7C               	movwf	(InternalADC_Read@ADCcounts+1)& (0+255),b
 12976  0048F2  0E00               	movlw	0
 12977  0048F4  EC75  F026         	call	_InternalADC_Read
 12978  0048F8  0900               	iorlw	0
 12979  0048FA  B4D8               	btfsc	status,2,c
 12980  0048FC  D02F               	goto	l10025
 12981                           
 12982                           ;ADC.c: 66: {
 12983                           ;ADC.c: 67: voltage = ((double)temp / 1024.0) * 11 * 3.3;
 12984  0048FE  0E00               	movlw	0
 12985  004900  0100               	movlb	0	; () banked
 12986  004902  6F80               	movwf	___ftdiv@f2& (0+255),b
 12987  004904  0E80               	movlw	128
 12988  004906  0100               	movlb	0	; () banked
 12989  004908  6F81               	movwf	(___ftdiv@f2+1)& (0+255),b
 12990  00490A  0E44               	movlw	68
 12991  00490C  0100               	movlb	0	; () banked
 12992  00490E  6F82               	movwf	(___ftdiv@f2+2)& (0+255),b
 12993  004910  C0A1  F07A         	movff	ReadVoltage@temp,___lwtoft@c
 12994  004914  C0A2  F07B         	movff	ReadVoltage@temp+1,___lwtoft@c+1
 12995  004918  ECD8  F02C         	call	___lwtoft	;wreg free
 12996  00491C  C07A  F07D         	movff	?___lwtoft,___ftdiv@f1
 12997  004920  C07B  F07E         	movff	?___lwtoft+1,___ftdiv@f1+1
 12998  004924  C07C  F07F         	movff	?___lwtoft+2,___ftdiv@f1+2
 12999  004928  EC5F  F01D         	call	___ftdiv	;wreg free
 13000  00492C  C07D  F08C         	movff	?___ftdiv,___ftmul@f1
 13001  004930  C07E  F08D         	movff	?___ftdiv+1,___ftmul@f1+1
 13002  004934  C07F  F08E         	movff	?___ftdiv+2,___ftmul@f1+2
 13003  004938  0E33               	movlw	51
 13004  00493A  0100               	movlb	0	; () banked
 13005  00493C  6F8F               	movwf	___ftmul@f2& (0+255),b
 13006  00493E  0E11               	movlw	17
 13007  004940  0100               	movlb	0	; () banked
 13008  004942  6F90               	movwf	(___ftmul@f2+1)& (0+255),b
 13009  004944  0E42               	movlw	66
 13010  004946  0100               	movlb	0	; () banked
 13011  004948  6F91               	movwf	(___ftmul@f2+2)& (0+255),b
 13012  00494A  ECA9  F01C         	call	___ftmul	;wreg free
 13013  00494E  C08C  F09E         	movff	?___ftmul,ReadVoltage@voltage
 13014  004952  C08D  F09F         	movff	?___ftmul+1,ReadVoltage@voltage+1
 13015  004956  C08E  F0A0         	movff	?___ftmul+2,ReadVoltage@voltage+2
 13016                           
 13017                           ;ADC.c: 68: }
 13018  00495A  D00A               	goto	l10027
 13019  00495C                     l10025:
 13020                           
 13021                           ;ADC.c: 69: else
 13022                           ;ADC.c: 70: {
 13023                           ;ADC.c: 71: voltage = 0.0;
 13024  00495C  0E00               	movlw	0
 13025  00495E  0100               	movlb	0	; () banked
 13026  004960  6F9E               	movwf	ReadVoltage@voltage& (0+255),b
 13027  004962  0E00               	movlw	0
 13028  004964  0100               	movlb	0	; () banked
 13029  004966  6F9F               	movwf	(ReadVoltage@voltage+1)& (0+255),b
 13030  004968  0E00               	movlw	0
 13031  00496A  0100               	movlb	0	; () banked
 13032  00496C  6FA0               	movwf	(ReadVoltage@voltage+2)& (0+255),b
 13033  00496E  D000               	goto	l10027
 13034  004970                     l10027:
 13035                           
 13036                           ;ADC.c: 72: }
 13037                           ;ADC.c: 73: VoltageDividerOFF();
 13038  004970  ECFD  F02D         	call	_VoltageDividerOFF	;wreg free
 13039                           
 13040                           ;ADC.c: 74: return voltage;
 13041  004974  C09E  F09B         	movff	ReadVoltage@voltage,?_ReadVoltage
 13042  004978  C09F  F09C         	movff	ReadVoltage@voltage+1,?_ReadVoltage+1
 13043  00497C  C0A0  F09D         	movff	ReadVoltage@voltage+2,?_ReadVoltage+2
 13044  004980  0012               	return	
 13045  004982  0012               	return		;funcret
 13046  004984                     __end_of_ReadVoltage:
 13047                           	opt stack 0
 13048                           tblptru	equ	0xFF8
 13049                           tblptrh	equ	0xFF7
 13050                           tblptrl	equ	0xFF6
 13051                           tablat	equ	0xFF5
 13052                           prodh	equ	0xFF4
 13053                           prodl	equ	0xFF3
 13054                           intcon	equ	0xFF2
 13055                           indf0	equ	0xFEF
 13056                           postinc0	equ	0xFEE
 13057                           fsr0h	equ	0xFEA
 13058                           fsr0l	equ	0xFE9
 13059                           wreg	equ	0xFE8
 13060                           indf1	equ	0xFE7
 13061                           postdec1	equ	0xFE5
 13062                           fsr1h	equ	0xFE2
 13063                           fsr1l	equ	0xFE1
 13064                           indf2	equ	0xFDF
 13065                           postinc2	equ	0xFDE
 13066                           fsr2h	equ	0xFDA
 13067                           fsr2l	equ	0xFD9
 13068                           status	equ	0xFD8
 13069                           
 13070 ;; *************** function ___lwtoft *****************
 13071 ;; Defined at:
 13072 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
 13073 ;; Parameters:    Size  Location     Type
 13074 ;;  c               2   26[BANK0 ] unsigned int 
 13075 ;; Auto vars:     Size  Location     Type
 13076 ;;		None
 13077 ;; Return value:  Size  Location     Type
 13078 ;;                  3   26[BANK0 ] float 
 13079 ;; Registers used:
 13080 ;;		wreg, status,2, status,0, cstack
 13081 ;; Tracked objects:
 13082 ;;		On entry : 0/0
 13083 ;;		On exit  : 0/0
 13084 ;;		Unchanged: 0/0
 13085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13086 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13089 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13090 ;;Total ram usage:        3 bytes
 13091 ;; Hardware stack levels used:    1
 13092 ;; Hardware stack levels required when called:    7
 13093 ;; This function calls:
 13094 ;;		___ftpack
 13095 ;; This function is called by:
 13096 ;;		_ReadVoltage
 13097 ;; This function uses a non-reentrant model
 13098 ;;
 13099                           
 13100                           	psect	text30
 13101  0059B0                     __ptext30:
 13102                           	opt stack 0
 13103  0059B0                     ___lwtoft:
 13104                           	opt stack 22
 13105                           
 13106                           ;incstack = 0
 13107  0059B0  C07A  F072         	movff	___lwtoft@c,___ftpack@arg
 13108  0059B4  C07B  F073         	movff	___lwtoft@c+1,___ftpack@arg+1
 13109  0059B8  0100               	movlb	0	; () banked
 13110  0059BA  6B74               	clrf	(___ftpack@arg+2)& (0+255),b
 13111  0059BC  0E8E               	movlw	142
 13112  0059BE  0100               	movlb	0	; () banked
 13113  0059C0  6F75               	movwf	___ftpack@exp& (0+255),b
 13114  0059C2  0E00               	movlw	0
 13115  0059C4  0100               	movlb	0	; () banked
 13116  0059C6  6F76               	movwf	___ftpack@sign& (0+255),b
 13117  0059C8  ECF4  F01F         	call	___ftpack	;wreg free
 13118  0059CC  C072  F07A         	movff	?___ftpack,?___lwtoft
 13119  0059D0  C073  F07B         	movff	?___ftpack+1,?___lwtoft+1
 13120  0059D4  C074  F07C         	movff	?___ftpack+2,?___lwtoft+2
 13121  0059D8  0012               	return	
 13122  0059DA  0012               	return		;funcret
 13123  0059DC                     __end_of___lwtoft:
 13124                           	opt stack 0
 13125                           tblptru	equ	0xFF8
 13126                           tblptrh	equ	0xFF7
 13127                           tblptrl	equ	0xFF6
 13128                           tablat	equ	0xFF5
 13129                           prodh	equ	0xFF4
 13130                           prodl	equ	0xFF3
 13131                           intcon	equ	0xFF2
 13132                           indf0	equ	0xFEF
 13133                           postinc0	equ	0xFEE
 13134                           fsr0h	equ	0xFEA
 13135                           fsr0l	equ	0xFE9
 13136                           wreg	equ	0xFE8
 13137                           indf1	equ	0xFE7
 13138                           postdec1	equ	0xFE5
 13139                           fsr1h	equ	0xFE2
 13140                           fsr1l	equ	0xFE1
 13141                           indf2	equ	0xFDF
 13142                           postinc2	equ	0xFDE
 13143                           fsr2h	equ	0xFDA
 13144                           fsr2l	equ	0xFD9
 13145                           status	equ	0xFD8
 13146                           
 13147 ;; *************** function ___ftmul *****************
 13148 ;; Defined at:
 13149 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 13150 ;; Parameters:    Size  Location     Type
 13151 ;;  f1              3   44[BANK0 ] float 
 13152 ;;  f2              3   47[BANK0 ] float 
 13153 ;; Auto vars:     Size  Location     Type
 13154 ;;  f3_as_produc    3   54[BANK0 ] unsigned um
 13155 ;;  sign            1   58[BANK0 ] unsigned char 
 13156 ;;  cntr            1   57[BANK0 ] unsigned char 
 13157 ;;  exp             1   53[BANK0 ] unsigned char 
 13158 ;; Return value:  Size  Location     Type
 13159 ;;                  3   44[BANK0 ] float 
 13160 ;; Registers used:
 13161 ;;		wreg, status,2, status,0, cstack
 13162 ;; Tracked objects:
 13163 ;;		On entry : 0/0
 13164 ;;		On exit  : 0/0
 13165 ;;		Unchanged: 0/0
 13166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13167 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13168 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13169 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13170 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13171 ;;Total ram usage:       15 bytes
 13172 ;; Hardware stack levels used:    1
 13173 ;; Hardware stack levels required when called:    7
 13174 ;; This function calls:
 13175 ;;		___ftpack
 13176 ;; This function is called by:
 13177 ;;		_ReadVoltage
 13178 ;; This function uses a non-reentrant model
 13179 ;;
 13180                           
 13181                           	psect	text31
 13182  003952                     __ptext31:
 13183                           	opt stack 0
 13184  003952                     ___ftmul:
 13185                           	opt stack 22
 13186                           
 13187                           ;incstack = 0
 13188  003952  C08E  F092         	movff	___ftmul@f1+2,??___ftmul
 13189  003956  0100               	movlb	0	; () banked
 13190  003958  6B93               	clrf	(??___ftmul+1)& (0+255),b
 13191  00395A  6B94               	clrf	(??___ftmul+2)& (0+255),b
 13192  00395C  0100               	movlb	0	; () banked
 13193  00395E  358D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 13194  003960  0100               	movlb	0	; () banked
 13195  003962  3792               	rlcf	??___ftmul& (0+255),f,b
 13196  003964  E301               	bnc	u7331
 13197  003966  8193               	bsf	(??___ftmul+1)& (0+255),0,b
 13198  003968                     u7331:
 13199  003968  0100               	movlb	0	; () banked
 13200  00396A  5192               	movf	??___ftmul& (0+255),w,b
 13201  00396C  0100               	movlb	0	; () banked
 13202  00396E  6F95               	movwf	___ftmul@exp& (0+255),b
 13203  003970  0100               	movlb	0	; () banked
 13204  003972  5195               	movf	___ftmul@exp& (0+255),w,b
 13205  003974  A4D8               	btfss	status,2,c
 13206  003976  D00A               	goto	l7319
 13207                           
 13208                           ; BSR set to: 0
 13209  003978  0E00               	movlw	0
 13210  00397A  0100               	movlb	0	; () banked
 13211  00397C  6F8C               	movwf	?___ftmul& (0+255),b
 13212  00397E  0E00               	movlw	0
 13213  003980  0100               	movlb	0	; () banked
 13214  003982  6F8D               	movwf	(?___ftmul+1)& (0+255),b
 13215  003984  0E00               	movlw	0
 13216  003986  0100               	movlb	0	; () banked
 13217  003988  6F8E               	movwf	(?___ftmul+2)& (0+255),b
 13218                           
 13219                           ; BSR set to: 0
 13220  00398A  0012               	return	
 13221  00398C                     l7319:
 13222                           
 13223                           ; BSR set to: 0
 13224  00398C  C091  F092         	movff	___ftmul@f2+2,??___ftmul
 13225  003990  0100               	movlb	0	; () banked
 13226  003992  6B93               	clrf	(??___ftmul+1)& (0+255),b
 13227  003994  6B94               	clrf	(??___ftmul+2)& (0+255),b
 13228  003996  0100               	movlb	0	; () banked
 13229  003998  3590               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 13230  00399A  0100               	movlb	0	; () banked
 13231  00399C  3792               	rlcf	??___ftmul& (0+255),f,b
 13232  00399E  E301               	bnc	u7351
 13233  0039A0  8193               	bsf	(??___ftmul+1)& (0+255),0,b
 13234  0039A2                     u7351:
 13235  0039A2  0100               	movlb	0	; () banked
 13236  0039A4  5192               	movf	??___ftmul& (0+255),w,b
 13237  0039A6  0100               	movlb	0	; () banked
 13238  0039A8  6F9A               	movwf	___ftmul@sign& (0+255),b
 13239  0039AA  0100               	movlb	0	; () banked
 13240  0039AC  519A               	movf	___ftmul@sign& (0+255),w,b
 13241  0039AE  A4D8               	btfss	status,2,c
 13242  0039B0  D00A               	goto	l7325
 13243                           
 13244                           ; BSR set to: 0
 13245  0039B2  0E00               	movlw	0
 13246  0039B4  0100               	movlb	0	; () banked
 13247  0039B6  6F8C               	movwf	?___ftmul& (0+255),b
 13248  0039B8  0E00               	movlw	0
 13249  0039BA  0100               	movlb	0	; () banked
 13250  0039BC  6F8D               	movwf	(?___ftmul+1)& (0+255),b
 13251  0039BE  0E00               	movlw	0
 13252  0039C0  0100               	movlb	0	; () banked
 13253  0039C2  6F8E               	movwf	(?___ftmul+2)& (0+255),b
 13254                           
 13255                           ; BSR set to: 0
 13256  0039C4  0012               	return	
 13257  0039C6                     l7325:
 13258                           
 13259                           ; BSR set to: 0
 13260  0039C6  0100               	movlb	0	; () banked
 13261  0039C8  519A               	movf	___ftmul@sign& (0+255),w,b
 13262  0039CA  0F7B               	addlw	123
 13263  0039CC  0100               	movlb	0	; () banked
 13264  0039CE  2795               	addwf	___ftmul@exp& (0+255),f,b
 13265                           
 13266                           ; BSR set to: 0
 13267  0039D0  C08E  F09A         	movff	___ftmul@f1+2,___ftmul@sign
 13268  0039D4  0100               	movlb	0	; () banked
 13269  0039D6  5191               	movf	(___ftmul@f2+2)& (0+255),w,b
 13270  0039D8  0100               	movlb	0	; () banked
 13271  0039DA  1B9A               	xorwf	___ftmul@sign& (0+255),f,b
 13272  0039DC  0E80               	movlw	128
 13273  0039DE  0100               	movlb	0	; () banked
 13274  0039E0  179A               	andwf	___ftmul@sign& (0+255),f,b
 13275                           
 13276                           ; BSR set to: 0
 13277  0039E2  0100               	movlb	0	; () banked
 13278  0039E4  8F8D               	bsf	(___ftmul@f1+1)& (0+255),7,b
 13279                           
 13280                           ; BSR set to: 0
 13281  0039E6  0100               	movlb	0	; () banked
 13282  0039E8  8F90               	bsf	(___ftmul@f2+1)& (0+255),7,b
 13283                           
 13284                           ; BSR set to: 0
 13285  0039EA  0EFF               	movlw	255
 13286  0039EC  0100               	movlb	0	; () banked
 13287  0039EE  178F               	andwf	___ftmul@f2& (0+255),f,b
 13288  0039F0  0EFF               	movlw	255
 13289  0039F2  0100               	movlb	0	; () banked
 13290  0039F4  1790               	andwf	(___ftmul@f2+1)& (0+255),f,b
 13291  0039F6  0E00               	movlw	0
 13292  0039F8  0100               	movlb	0	; () banked
 13293  0039FA  1791               	andwf	(___ftmul@f2+2)& (0+255),f,b
 13294                           
 13295                           ; BSR set to: 0
 13296  0039FC  0E00               	movlw	0
 13297  0039FE  0100               	movlb	0	; () banked
 13298  003A00  6F96               	movwf	___ftmul@f3_as_product& (0+255),b
 13299  003A02  0E00               	movlw	0
 13300  003A04  0100               	movlb	0	; () banked
 13301  003A06  6F97               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 13302  003A08  0E00               	movlw	0
 13303  003A0A  0100               	movlb	0	; () banked
 13304  003A0C  6F98               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 13305                           
 13306                           ; BSR set to: 0
 13307  003A0E  0E07               	movlw	7
 13308  003A10  0100               	movlb	0	; () banked
 13309  003A12  6F99               	movwf	___ftmul@cntr& (0+255),b
 13310  003A14  D000               	goto	l7339
 13311  003A16                     l7339:
 13312                           
 13313                           ; BSR set to: 0
 13314  003A16  0100               	movlb	0	; () banked
 13315  003A18  A18C               	btfss	___ftmul@f1& (0+255),0,b
 13316  003A1A  D00D               	goto	l7343
 13317                           
 13318                           ; BSR set to: 0
 13319  003A1C  0100               	movlb	0	; () banked
 13320  003A1E  518F               	movf	___ftmul@f2& (0+255),w,b
 13321  003A20  0100               	movlb	0	; () banked
 13322  003A22  2796               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13323  003A24  0100               	movlb	0	; () banked
 13324  003A26  5190               	movf	(___ftmul@f2+1)& (0+255),w,b
 13325  003A28  0100               	movlb	0	; () banked
 13326  003A2A  2397               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13327  003A2C  0100               	movlb	0	; () banked
 13328  003A2E  5191               	movf	(___ftmul@f2+2)& (0+255),w,b
 13329  003A30  0100               	movlb	0	; () banked
 13330  003A32  2398               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13331  003A34  D000               	goto	l7343
 13332  003A36                     l7343:
 13333                           
 13334                           ; BSR set to: 0
 13335  003A36  0100               	movlb	0	; () banked
 13336  003A38  90D8               	bcf	status,0,c
 13337  003A3A  338E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13338  003A3C  338D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13339  003A3E  338C               	rrcf	___ftmul@f1& (0+255),f,b
 13340  003A40  0100               	movlb	0	; () banked
 13341  003A42  90D8               	bcf	status,0,c
 13342  003A44  378F               	rlcf	___ftmul@f2& (0+255),f,b
 13343  003A46  3790               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 13344  003A48  3791               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 13345                           
 13346                           ; BSR set to: 0
 13347  003A4A  0100               	movlb	0	; () banked
 13348  003A4C  2F99               	decfsz	___ftmul@cntr& (0+255),f,b
 13349  003A4E  D7E3               	goto	l7339
 13350  003A50  D000               	goto	l7347
 13351  003A52                     l7347:
 13352                           
 13353                           ; BSR set to: 0
 13354  003A52  0E09               	movlw	9
 13355  003A54  0100               	movlb	0	; () banked
 13356  003A56  6F99               	movwf	___ftmul@cntr& (0+255),b
 13357  003A58  D000               	goto	l7349
 13358  003A5A                     l7349:
 13359                           
 13360                           ; BSR set to: 0
 13361  003A5A  0100               	movlb	0	; () banked
 13362  003A5C  A18C               	btfss	___ftmul@f1& (0+255),0,b
 13363  003A5E  D00D               	goto	l7353
 13364                           
 13365                           ; BSR set to: 0
 13366  003A60  0100               	movlb	0	; () banked
 13367  003A62  518F               	movf	___ftmul@f2& (0+255),w,b
 13368  003A64  0100               	movlb	0	; () banked
 13369  003A66  2796               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13370  003A68  0100               	movlb	0	; () banked
 13371  003A6A  5190               	movf	(___ftmul@f2+1)& (0+255),w,b
 13372  003A6C  0100               	movlb	0	; () banked
 13373  003A6E  2397               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13374  003A70  0100               	movlb	0	; () banked
 13375  003A72  5191               	movf	(___ftmul@f2+2)& (0+255),w,b
 13376  003A74  0100               	movlb	0	; () banked
 13377  003A76  2398               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13378  003A78  D000               	goto	l7353
 13379  003A7A                     l7353:
 13380                           
 13381                           ; BSR set to: 0
 13382  003A7A  0100               	movlb	0	; () banked
 13383  003A7C  90D8               	bcf	status,0,c
 13384  003A7E  338E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13385  003A80  338D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13386  003A82  338C               	rrcf	___ftmul@f1& (0+255),f,b
 13387  003A84  0100               	movlb	0	; () banked
 13388  003A86  90D8               	bcf	status,0,c
 13389  003A88  3398               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 13390  003A8A  3397               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 13391  003A8C  3396               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 13392                           
 13393                           ; BSR set to: 0
 13394  003A8E  0100               	movlb	0	; () banked
 13395  003A90  2F99               	decfsz	___ftmul@cntr& (0+255),f,b
 13396  003A92  D7E3               	goto	l7349
 13397  003A94  D000               	goto	l7357
 13398  003A96                     l7357:
 13399                           
 13400                           ; BSR set to: 0
 13401  003A96  C096  F072         	movff	___ftmul@f3_as_product,___ftpack@arg
 13402  003A9A  C097  F073         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 13403  003A9E  C098  F074         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 13404  003AA2  C095  F075         	movff	___ftmul@exp,___ftpack@exp
 13405  003AA6  C09A  F076         	movff	___ftmul@sign,___ftpack@sign
 13406  003AAA  ECF4  F01F         	call	___ftpack	;wreg free
 13407  003AAE  C072  F08C         	movff	?___ftpack,?___ftmul
 13408  003AB2  C073  F08D         	movff	?___ftpack+1,?___ftmul+1
 13409  003AB6  C074  F08E         	movff	?___ftpack+2,?___ftmul+2
 13410  003ABA  0012               	return	
 13411  003ABC  0012               	return		;funcret
 13412  003ABE                     __end_of___ftmul:
 13413                           	opt stack 0
 13414                           tblptru	equ	0xFF8
 13415                           tblptrh	equ	0xFF7
 13416                           tblptrl	equ	0xFF6
 13417                           tablat	equ	0xFF5
 13418                           prodh	equ	0xFF4
 13419                           prodl	equ	0xFF3
 13420                           intcon	equ	0xFF2
 13421                           indf0	equ	0xFEF
 13422                           postinc0	equ	0xFEE
 13423                           fsr0h	equ	0xFEA
 13424                           fsr0l	equ	0xFE9
 13425                           wreg	equ	0xFE8
 13426                           indf1	equ	0xFE7
 13427                           postdec1	equ	0xFE5
 13428                           fsr1h	equ	0xFE2
 13429                           fsr1l	equ	0xFE1
 13430                           indf2	equ	0xFDF
 13431                           postinc2	equ	0xFDE
 13432                           fsr2h	equ	0xFDA
 13433                           fsr2l	equ	0xFD9
 13434                           status	equ	0xFD8
 13435                           
 13436 ;; *************** function ___ftdiv *****************
 13437 ;; Defined at:
 13438 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 13439 ;; Parameters:    Size  Location     Type
 13440 ;;  f1              3   29[BANK0 ] float 
 13441 ;;  f2              3   32[BANK0 ] float 
 13442 ;; Auto vars:     Size  Location     Type
 13443 ;;  f3              3   39[BANK0 ] float 
 13444 ;;  sign            1   43[BANK0 ] unsigned char 
 13445 ;;  exp             1   42[BANK0 ] unsigned char 
 13446 ;;  cntr            1   38[BANK0 ] unsigned char 
 13447 ;; Return value:  Size  Location     Type
 13448 ;;                  3   29[BANK0 ] float 
 13449 ;; Registers used:
 13450 ;;		wreg, status,2, status,0, cstack
 13451 ;; Tracked objects:
 13452 ;;		On entry : 0/0
 13453 ;;		On exit  : 0/0
 13454 ;;		Unchanged: 0/0
 13455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13456 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13457 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13458 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13459 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13460 ;;Total ram usage:       15 bytes
 13461 ;; Hardware stack levels used:    1
 13462 ;; Hardware stack levels required when called:    7
 13463 ;; This function calls:
 13464 ;;		___ftpack
 13465 ;; This function is called by:
 13466 ;;		_ReadVoltage
 13467 ;; This function uses a non-reentrant model
 13468 ;;
 13469                           
 13470                           	psect	text32
 13471  003ABE                     __ptext32:
 13472                           	opt stack 0
 13473  003ABE                     ___ftdiv:
 13474                           	opt stack 22
 13475                           
 13476                           ;incstack = 0
 13477  003ABE  C07F  F083         	movff	___ftdiv@f1+2,??___ftdiv
 13478  003AC2  0100               	movlb	0	; () banked
 13479  003AC4  6B84               	clrf	(??___ftdiv+1)& (0+255),b
 13480  003AC6  6B85               	clrf	(??___ftdiv+2)& (0+255),b
 13481  003AC8  0100               	movlb	0	; () banked
 13482  003ACA  357E               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 13483  003ACC  0100               	movlb	0	; () banked
 13484  003ACE  3783               	rlcf	??___ftdiv& (0+255),f,b
 13485  003AD0  E301               	bnc	u7281
 13486  003AD2  8184               	bsf	(??___ftdiv+1)& (0+255),0,b
 13487  003AD4                     u7281:
 13488  003AD4  0100               	movlb	0	; () banked
 13489  003AD6  5183               	movf	??___ftdiv& (0+255),w,b
 13490  003AD8  0100               	movlb	0	; () banked
 13491  003ADA  6F8A               	movwf	___ftdiv@exp& (0+255),b
 13492  003ADC  0100               	movlb	0	; () banked
 13493  003ADE  518A               	movf	___ftdiv@exp& (0+255),w,b
 13494  003AE0  A4D8               	btfss	status,2,c
 13495  003AE2  D00A               	goto	l7273
 13496                           
 13497                           ; BSR set to: 0
 13498  003AE4  0E00               	movlw	0
 13499  003AE6  0100               	movlb	0	; () banked
 13500  003AE8  6F7D               	movwf	?___ftdiv& (0+255),b
 13501  003AEA  0E00               	movlw	0
 13502  003AEC  0100               	movlb	0	; () banked
 13503  003AEE  6F7E               	movwf	(?___ftdiv+1)& (0+255),b
 13504  003AF0  0E00               	movlw	0
 13505  003AF2  0100               	movlb	0	; () banked
 13506  003AF4  6F7F               	movwf	(?___ftdiv+2)& (0+255),b
 13507                           
 13508                           ; BSR set to: 0
 13509  003AF6  0012               	return	
 13510  003AF8                     l7273:
 13511                           
 13512                           ; BSR set to: 0
 13513  003AF8  C082  F083         	movff	___ftdiv@f2+2,??___ftdiv
 13514  003AFC  0100               	movlb	0	; () banked
 13515  003AFE  6B84               	clrf	(??___ftdiv+1)& (0+255),b
 13516  003B00  6B85               	clrf	(??___ftdiv+2)& (0+255),b
 13517  003B02  0100               	movlb	0	; () banked
 13518  003B04  3581               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 13519  003B06  0100               	movlb	0	; () banked
 13520  003B08  3783               	rlcf	??___ftdiv& (0+255),f,b
 13521  003B0A  E301               	bnc	u7301
 13522  003B0C  8184               	bsf	(??___ftdiv+1)& (0+255),0,b
 13523  003B0E                     u7301:
 13524  003B0E  0100               	movlb	0	; () banked
 13525  003B10  5183               	movf	??___ftdiv& (0+255),w,b
 13526  003B12  0100               	movlb	0	; () banked
 13527  003B14  6F8B               	movwf	___ftdiv@sign& (0+255),b
 13528  003B16  0100               	movlb	0	; () banked
 13529  003B18  518B               	movf	___ftdiv@sign& (0+255),w,b
 13530  003B1A  A4D8               	btfss	status,2,c
 13531  003B1C  D00A               	goto	l7279
 13532                           
 13533                           ; BSR set to: 0
 13534  003B1E  0E00               	movlw	0
 13535  003B20  0100               	movlb	0	; () banked
 13536  003B22  6F7D               	movwf	?___ftdiv& (0+255),b
 13537  003B24  0E00               	movlw	0
 13538  003B26  0100               	movlb	0	; () banked
 13539  003B28  6F7E               	movwf	(?___ftdiv+1)& (0+255),b
 13540  003B2A  0E00               	movlw	0
 13541  003B2C  0100               	movlb	0	; () banked
 13542  003B2E  6F7F               	movwf	(?___ftdiv+2)& (0+255),b
 13543                           
 13544                           ; BSR set to: 0
 13545  003B30  0012               	return	
 13546  003B32                     l7279:
 13547                           
 13548                           ; BSR set to: 0
 13549  003B32  0E00               	movlw	0
 13550  003B34  0100               	movlb	0	; () banked
 13551  003B36  6F87               	movwf	___ftdiv@f3& (0+255),b
 13552  003B38  0E00               	movlw	0
 13553  003B3A  0100               	movlb	0	; () banked
 13554  003B3C  6F88               	movwf	(___ftdiv@f3+1)& (0+255),b
 13555  003B3E  0E00               	movlw	0
 13556  003B40  0100               	movlb	0	; () banked
 13557  003B42  6F89               	movwf	(___ftdiv@f3+2)& (0+255),b
 13558                           
 13559                           ; BSR set to: 0
 13560  003B44  0100               	movlb	0	; () banked
 13561  003B46  518B               	movf	___ftdiv@sign& (0+255),w,b
 13562  003B48  0F89               	addlw	137
 13563  003B4A  0100               	movlb	0	; () banked
 13564  003B4C  5F8A               	subwf	___ftdiv@exp& (0+255),f,b
 13565                           
 13566                           ; BSR set to: 0
 13567  003B4E  C07F  F08B         	movff	___ftdiv@f1+2,___ftdiv@sign
 13568                           
 13569                           ; BSR set to: 0
 13570  003B52  0100               	movlb	0	; () banked
 13571  003B54  5182               	movf	(___ftdiv@f2+2)& (0+255),w,b
 13572  003B56  0100               	movlb	0	; () banked
 13573  003B58  1B8B               	xorwf	___ftdiv@sign& (0+255),f,b
 13574                           
 13575                           ; BSR set to: 0
 13576  003B5A  0E80               	movlw	128
 13577  003B5C  0100               	movlb	0	; () banked
 13578  003B5E  178B               	andwf	___ftdiv@sign& (0+255),f,b
 13579                           
 13580                           ; BSR set to: 0
 13581  003B60  0100               	movlb	0	; () banked
 13582  003B62  8F7E               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 13583                           
 13584                           ; BSR set to: 0
 13585  003B64  0EFF               	movlw	255
 13586  003B66  0100               	movlb	0	; () banked
 13587  003B68  177D               	andwf	___ftdiv@f1& (0+255),f,b
 13588  003B6A  0EFF               	movlw	255
 13589  003B6C  0100               	movlb	0	; () banked
 13590  003B6E  177E               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 13591  003B70  0E00               	movlw	0
 13592  003B72  0100               	movlb	0	; () banked
 13593  003B74  177F               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 13594                           
 13595                           ; BSR set to: 0
 13596  003B76  0100               	movlb	0	; () banked
 13597  003B78  8F81               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 13598                           
 13599                           ; BSR set to: 0
 13600  003B7A  0EFF               	movlw	255
 13601  003B7C  0100               	movlb	0	; () banked
 13602  003B7E  1780               	andwf	___ftdiv@f2& (0+255),f,b
 13603  003B80  0EFF               	movlw	255
 13604  003B82  0100               	movlb	0	; () banked
 13605  003B84  1781               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 13606  003B86  0E00               	movlw	0
 13607  003B88  0100               	movlb	0	; () banked
 13608  003B8A  1782               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 13609                           
 13610                           ; BSR set to: 0
 13611  003B8C  0E18               	movlw	24
 13612  003B8E  0100               	movlb	0	; () banked
 13613  003B90  6F86               	movwf	___ftdiv@cntr& (0+255),b
 13614  003B92  D000               	goto	l7299
 13615  003B94                     l7299:
 13616                           
 13617                           ; BSR set to: 0
 13618  003B94  0100               	movlb	0	; () banked
 13619  003B96  90D8               	bcf	status,0,c
 13620  003B98  3787               	rlcf	___ftdiv@f3& (0+255),f,b
 13621  003B9A  3788               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 13622  003B9C  3789               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 13623                           
 13624                           ; BSR set to: 0
 13625  003B9E  0100               	movlb	0	; () banked
 13626  003BA0  5180               	movf	___ftdiv@f2& (0+255),w,b
 13627  003BA2  0100               	movlb	0	; () banked
 13628  003BA4  5D7D               	subwf	___ftdiv@f1& (0+255),w,b
 13629  003BA6  0100               	movlb	0	; () banked
 13630  003BA8  5181               	movf	(___ftdiv@f2+1)& (0+255),w,b
 13631  003BAA  0100               	movlb	0	; () banked
 13632  003BAC  597E               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 13633  003BAE  0100               	movlb	0	; () banked
 13634  003BB0  5182               	movf	(___ftdiv@f2+2)& (0+255),w,b
 13635  003BB2  0100               	movlb	0	; () banked
 13636  003BB4  597F               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 13637  003BB6  A0D8               	btfss	status,0,c
 13638  003BB8  D00E               	goto	l2063
 13639                           
 13640                           ; BSR set to: 0
 13641  003BBA  0100               	movlb	0	; () banked
 13642  003BBC  5180               	movf	___ftdiv@f2& (0+255),w,b
 13643  003BBE  0100               	movlb	0	; () banked
 13644  003BC0  5F7D               	subwf	___ftdiv@f1& (0+255),f,b
 13645  003BC2  0100               	movlb	0	; () banked
 13646  003BC4  5181               	movf	(___ftdiv@f2+1)& (0+255),w,b
 13647  003BC6  0100               	movlb	0	; () banked
 13648  003BC8  5B7E               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 13649  003BCA  0100               	movlb	0	; () banked
 13650  003BCC  5182               	movf	(___ftdiv@f2+2)& (0+255),w,b
 13651  003BCE  0100               	movlb	0	; () banked
 13652  003BD0  5B7F               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 13653                           
 13654                           ; BSR set to: 0
 13655  003BD2  0100               	movlb	0	; () banked
 13656  003BD4  8187               	bsf	___ftdiv@f3& (0+255),0,b
 13657  003BD6                     l2063:
 13658                           
 13659                           ; BSR set to: 0
 13660  003BD6  0100               	movlb	0	; () banked
 13661  003BD8  90D8               	bcf	status,0,c
 13662  003BDA  377D               	rlcf	___ftdiv@f1& (0+255),f,b
 13663  003BDC  377E               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 13664  003BDE  377F               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 13665                           
 13666                           ; BSR set to: 0
 13667  003BE0  0100               	movlb	0	; () banked
 13668  003BE2  2F86               	decfsz	___ftdiv@cntr& (0+255),f,b
 13669  003BE4  D7D7               	goto	l7299
 13670  003BE6  D000               	goto	l7309
 13671  003BE8                     l7309:
 13672                           
 13673                           ; BSR set to: 0
 13674  003BE8  C087  F072         	movff	___ftdiv@f3,___ftpack@arg
 13675  003BEC  C088  F073         	movff	___ftdiv@f3+1,___ftpack@arg+1
 13676  003BF0  C089  F074         	movff	___ftdiv@f3+2,___ftpack@arg+2
 13677  003BF4  C08A  F075         	movff	___ftdiv@exp,___ftpack@exp
 13678  003BF8  C08B  F076         	movff	___ftdiv@sign,___ftpack@sign
 13679  003BFC  ECF4  F01F         	call	___ftpack	;wreg free
 13680  003C00  C072  F07D         	movff	?___ftpack,?___ftdiv
 13681  003C04  C073  F07E         	movff	?___ftpack+1,?___ftdiv+1
 13682  003C08  C074  F07F         	movff	?___ftpack+2,?___ftdiv+2
 13683  003C0C  0012               	return	
 13684  003C0E  0012               	return		;funcret
 13685  003C10                     __end_of___ftdiv:
 13686                           	opt stack 0
 13687                           tblptru	equ	0xFF8
 13688                           tblptrh	equ	0xFF7
 13689                           tblptrl	equ	0xFF6
 13690                           tablat	equ	0xFF5
 13691                           prodh	equ	0xFF4
 13692                           prodl	equ	0xFF3
 13693                           intcon	equ	0xFF2
 13694                           indf0	equ	0xFEF
 13695                           postinc0	equ	0xFEE
 13696                           fsr0h	equ	0xFEA
 13697                           fsr0l	equ	0xFE9
 13698                           wreg	equ	0xFE8
 13699                           indf1	equ	0xFE7
 13700                           postdec1	equ	0xFE5
 13701                           fsr1h	equ	0xFE2
 13702                           fsr1l	equ	0xFE1
 13703                           indf2	equ	0xFDF
 13704                           postinc2	equ	0xFDE
 13705                           fsr2h	equ	0xFDA
 13706                           fsr2l	equ	0xFD9
 13707                           status	equ	0xFD8
 13708                           
 13709 ;; *************** function _VoltageDividerON *****************
 13710 ;; Defined at:
 13711 ;;		line 146 in file "ADC.c"
 13712 ;; Parameters:    Size  Location     Type
 13713 ;;		None
 13714 ;; Auto vars:     Size  Location     Type
 13715 ;;		None
 13716 ;; Return value:  Size  Location     Type
 13717 ;;		None               void
 13718 ;; Registers used:
 13719 ;;		status,2, status,0
 13720 ;; Tracked objects:
 13721 ;;		On entry : 0/0
 13722 ;;		On exit  : 0/0
 13723 ;;		Unchanged: 0/0
 13724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13729 ;;Total ram usage:        0 bytes
 13730 ;; Hardware stack levels used:    1
 13731 ;; Hardware stack levels required when called:    6
 13732 ;; This function calls:
 13733 ;;		Nothing
 13734 ;; This function is called by:
 13735 ;;		_ReadVoltage
 13736 ;; This function uses a non-reentrant model
 13737 ;;
 13738                           
 13739                           	psect	text33
 13740  005BEA                     __ptext33:
 13741                           	opt stack 0
 13742  005BEA                     _VoltageDividerON:
 13743                           	opt stack 23
 13744                           
 13745                           ;ADC.c: 148: TRISBbits.TRISB5 = 0;
 13746                           
 13747                           ;incstack = 0
 13748  005BEA  9A93               	bcf	3987,5,c	;volatile
 13749                           
 13750                           ;ADC.c: 149: LATB &= ~0x20;
 13751  005BEC  9A8A               	bcf	3978,5,c	;volatile
 13752  005BEE  0012               	return		;funcret
 13753  005BF0                     __end_of_VoltageDividerON:
 13754                           	opt stack 0
 13755                           tblptru	equ	0xFF8
 13756                           tblptrh	equ	0xFF7
 13757                           tblptrl	equ	0xFF6
 13758                           tablat	equ	0xFF5
 13759                           prodh	equ	0xFF4
 13760                           prodl	equ	0xFF3
 13761                           intcon	equ	0xFF2
 13762                           indf0	equ	0xFEF
 13763                           postinc0	equ	0xFEE
 13764                           fsr0h	equ	0xFEA
 13765                           fsr0l	equ	0xFE9
 13766                           wreg	equ	0xFE8
 13767                           indf1	equ	0xFE7
 13768                           postdec1	equ	0xFE5
 13769                           fsr1h	equ	0xFE2
 13770                           fsr1l	equ	0xFE1
 13771                           indf2	equ	0xFDF
 13772                           postinc2	equ	0xFDE
 13773                           fsr2h	equ	0xFDA
 13774                           fsr2l	equ	0xFD9
 13775                           status	equ	0xFD8
 13776                           
 13777 ;; *************** function _VoltageDividerOFF *****************
 13778 ;; Defined at:
 13779 ;;		line 157 in file "ADC.c"
 13780 ;; Parameters:    Size  Location     Type
 13781 ;;		None
 13782 ;; Auto vars:     Size  Location     Type
 13783 ;;		None
 13784 ;; Return value:  Size  Location     Type
 13785 ;;		None               void
 13786 ;; Registers used:
 13787 ;;		None
 13788 ;; Tracked objects:
 13789 ;;		On entry : 0/0
 13790 ;;		On exit  : 0/0
 13791 ;;		Unchanged: 0/0
 13792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13797 ;;Total ram usage:        0 bytes
 13798 ;; Hardware stack levels used:    1
 13799 ;; Hardware stack levels required when called:    6
 13800 ;; This function calls:
 13801 ;;		Nothing
 13802 ;; This function is called by:
 13803 ;;		_ReadVoltage
 13804 ;; This function uses a non-reentrant model
 13805 ;;
 13806                           
 13807                           	psect	text34
 13808  005BFA                     __ptext34:
 13809                           	opt stack 0
 13810  005BFA                     _VoltageDividerOFF:
 13811                           	opt stack 23
 13812                           
 13813                           ;ADC.c: 159: TRISBbits.TRISB5 = 1;
 13814                           
 13815                           ;incstack = 0
 13816  005BFA  8A93               	bsf	3987,5,c	;volatile
 13817  005BFC  0012               	return		;funcret
 13818  005BFE                     __end_of_VoltageDividerOFF:
 13819                           	opt stack 0
 13820                           tblptru	equ	0xFF8
 13821                           tblptrh	equ	0xFF7
 13822                           tblptrl	equ	0xFF6
 13823                           tablat	equ	0xFF5
 13824                           prodh	equ	0xFF4
 13825                           prodl	equ	0xFF3
 13826                           intcon	equ	0xFF2
 13827                           indf0	equ	0xFEF
 13828                           postinc0	equ	0xFEE
 13829                           fsr0h	equ	0xFEA
 13830                           fsr0l	equ	0xFE9
 13831                           wreg	equ	0xFE8
 13832                           indf1	equ	0xFE7
 13833                           postdec1	equ	0xFE5
 13834                           fsr1h	equ	0xFE2
 13835                           fsr1l	equ	0xFE1
 13836                           indf2	equ	0xFDF
 13837                           postinc2	equ	0xFDE
 13838                           fsr2h	equ	0xFDA
 13839                           fsr2l	equ	0xFD9
 13840                           status	equ	0xFD8
 13841                           
 13842 ;; *************** function _InternalADC_Read *****************
 13843 ;; Defined at:
 13844 ;;		line 82 in file "ADC.c"
 13845 ;; Parameters:    Size  Location     Type
 13846 ;;  channel         1    wreg     unsigned char 
 13847 ;;  ADCcounts       2   27[BANK0 ] PTR unsigned int 
 13848 ;;		 -> ReadVoltage@temp(2), 
 13849 ;; Auto vars:     Size  Location     Type
 13850 ;;  channel         1   32[BANK0 ] unsigned char 
 13851 ;;  AnaChanSel      1   31[BANK0 ] unsigned char 
 13852 ;; Return value:  Size  Location     Type
 13853 ;;                  1    wreg      unsigned char 
 13854 ;; Registers used:
 13855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13856 ;; Tracked objects:
 13857 ;;		On entry : 0/0
 13858 ;;		On exit  : 0/0
 13859 ;;		Unchanged: 0/0
 13860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13861 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13862 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13863 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13864 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13865 ;;Total ram usage:        6 bytes
 13866 ;; Hardware stack levels used:    1
 13867 ;; Hardware stack levels required when called:    7
 13868 ;; This function calls:
 13869 ;;		_delayUS
 13870 ;; This function is called by:
 13871 ;;		_ReadVoltage
 13872 ;; This function uses a non-reentrant model
 13873 ;;
 13874                           
 13875                           	psect	text35
 13876  004CEA                     __ptext35:
 13877                           	opt stack 0
 13878  004CEA                     _InternalADC_Read:
 13879                           	opt stack 22
 13880                           
 13881                           ;incstack = 0
 13882                           ;InternalADC_Read@channel stored from wreg
 13883  004CEA  0100               	movlb	0	; () banked
 13884  004CEC  6F80               	movwf	InternalADC_Read@channel& (0+255),b
 13885                           
 13886                           ; BSR set to: 0
 13887                           ;ADC.c: 84: unsigned char AnaChanSel = 1;
 13888  004CEE  0E01               	movlw	1
 13889  004CF0  0100               	movlb	0	; () banked
 13890  004CF2  6F7F               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 13891                           
 13892                           ; BSR set to: 0
 13893                           ;ADC.c: 85: if(channel > 0b1100)
 13894  004CF4  0E0C               	movlw	12
 13895  004CF6  0100               	movlb	0	; () banked
 13896  004CF8  6580               	cpfsgt	InternalADC_Read@channel& (0+255),b
 13897  004CFA  D00A               	goto	l9791
 13898                           
 13899                           ; BSR set to: 0
 13900                           ;ADC.c: 86: {
 13901                           ;ADC.c: 87: *ADCcounts = 0;
 13902  004CFC  C07B  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 13903  004D00  C07C  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 13904  004D04  0E00               	movlw	0
 13905  004D06  6EDE               	movwf	postinc2,c
 13906  004D08  0E00               	movlw	0
 13907  004D0A  6EDD               	movwf	postdec2,c
 13908                           
 13909                           ; BSR set to: 0
 13910                           ;ADC.c: 88: return 0;
 13911  004D0C  0E00               	movlw	0
 13912                           
 13913                           ; BSR set to: 0
 13914  004D0E  0012               	return	
 13915  004D10                     l9791:
 13916                           
 13917                           ; BSR set to: 0
 13918                           ;ADC.c: 89: }
 13919                           ;ADC.c: 90: if(channel > 1)
 13920  004D10  0E01               	movlw	1
 13921  004D12  0100               	movlb	0	; () banked
 13922  004D14  6580               	cpfsgt	InternalADC_Read@channel& (0+255),b
 13923  004D16  D001               	goto	l9795
 13924                           
 13925                           ; BSR set to: 0
 13926                           ;ADC.c: 93: }
 13927  004D18  D009               	goto	l9799
 13928  004D1A                     l9795:
 13929                           
 13930                           ; BSR set to: 0
 13931                           ;ADC.c: 94: else if (channel == 0)
 13932  004D1A  0100               	movlb	0	; () banked
 13933  004D1C  5180               	movf	InternalADC_Read@channel& (0+255),w,b
 13934  004D1E  0100               	movlb	0	; () banked
 13935  004D20  A4D8               	btfss	status,2,c
 13936  004D22  D004               	goto	l9799
 13937                           
 13938                           ; BSR set to: 0
 13939                           ;ADC.c: 95: {
 13940                           ;ADC.c: 96: AnaChanSel = 0;
 13941  004D24  0E00               	movlw	0
 13942  004D26  0100               	movlb	0	; () banked
 13943  004D28  6F7F               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 13944                           
 13945                           ; BSR set to: 0
 13946  004D2A  D000               	goto	l9799
 13947  004D2C                     l9799:
 13948                           
 13949                           ; BSR set to: 0
 13950                           ;ADC.c: 97: }
 13951                           ;ADC.c: 99: ADCON0 |= (AnaChanSel << 2);
 13952  004D2C  0100               	movlb	0	; () banked
 13953  004D2E  457F               	rlncf	InternalADC_Read@AnaChanSel& (0+255),w,b
 13954  004D30  46E8               	rlncf	wreg,f,c
 13955  004D32  0BFC               	andlw	252
 13956  004D34  12C2               	iorwf	4034,f,c	;volatile
 13957                           
 13958                           ; BSR set to: 0
 13959                           ;ADC.c: 101: ADCON1bits.VCFG0 = 0;
 13960  004D36  98C1               	bcf	4033,4,c	;volatile
 13961                           
 13962                           ; BSR set to: 0
 13963                           ;ADC.c: 102: ADCON1bits.VCFG1 = 0;
 13964  004D38  9AC1               	bcf	4033,5,c	;volatile
 13965                           
 13966                           ; BSR set to: 0
 13967                           ;ADC.c: 104: (ADCON0bits.ADON = 1);
 13968  004D3A  80C2               	bsf	4034,0,c	;volatile
 13969                           
 13970                           ; BSR set to: 0
 13971                           ;ADC.c: 105: delayUS(50);
 13972  004D3C  0E32               	movlw	50
 13973  004D3E  0100               	movlb	0	; () banked
 13974  004D40  6F72               	movwf	delayUS@US& (0+255),b
 13975  004D42  0E00               	movlw	0
 13976  004D44  6F73               	movwf	(delayUS@US+1)& (0+255),b
 13977  004D46  0E00               	movlw	0
 13978  004D48  6F74               	movwf	(delayUS@US+2)& (0+255),b
 13979  004D4A  0E00               	movlw	0
 13980  004D4C  6F75               	movwf	(delayUS@US+3)& (0+255),b
 13981  004D4E  EC1F  F02B         	call	_delayUS	;wreg free
 13982                           
 13983                           ;ADC.c: 107: ADCON0bits.GO = 1;
 13984  004D52  82C2               	bsf	4034,1,c	;volatile
 13985                           
 13986                           ;ADC.c: 108: while(ADCON0bits.GO);
 13987  004D54  D000               	goto	l489
 13988  004D56                     l489:
 13989  004D56  B2C2               	btfsc	4034,1,c	;volatile
 13990  004D58  D7FE               	goto	l489
 13991                           
 13992                           ;ADC.c: 109: (ADCON0bits.ADON = 0);
 13993  004D5A  90C2               	bcf	4034,0,c	;volatile
 13994                           
 13995                           ;ADC.c: 111: *ADCcounts = ((ADRESH << 8) + ADRESL);
 13996  004D5C  50C3               	movf	4035,w,c	;volatile
 13997  004D5E  CFC4 F07D          	movff	4036,??_InternalADC_Read	;volatile
 13998  004D62  0100               	movlb	0	; () banked
 13999  004D64  6B7E               	clrf	(??_InternalADC_Read+1)& (0+255),b
 14000  004D66  C07D  F07E         	movff	??_InternalADC_Read,??_InternalADC_Read+1
 14001  004D6A  0100               	movlb	0	; () banked
 14002  004D6C  6B7D               	clrf	??_InternalADC_Read& (0+255),b
 14003  004D6E  0100               	movlb	0	; () banked
 14004  004D70  277D               	addwf	??_InternalADC_Read& (0+255),f,b
 14005  004D72  0E00               	movlw	0
 14006  004D74  237E               	addwfc	(??_InternalADC_Read+1)& (0+255),f,b
 14007  004D76  C07B  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 14008  004D7A  C07C  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 14009  004D7E  C07D  FFDE         	movff	??_InternalADC_Read,postinc2
 14010  004D82  C07E  FFDD         	movff	??_InternalADC_Read+1,postdec2
 14011                           
 14012                           ; BSR set to: 0
 14013                           ;ADC.c: 112: return 1;
 14014  004D86  0E01               	movlw	1
 14015  004D88  0012               	return	
 14016                           
 14017                           ; BSR set to: 0
 14018                           
 14019                           ; BSR set to: 0
 14020  004D8A  0012               	return		;funcret
 14021  004D8C                     __end_of_InternalADC_Read:
 14022                           	opt stack 0
 14023                           tblptru	equ	0xFF8
 14024                           tblptrh	equ	0xFF7
 14025                           tblptrl	equ	0xFF6
 14026                           tablat	equ	0xFF5
 14027                           prodh	equ	0xFF4
 14028                           prodl	equ	0xFF3
 14029                           intcon	equ	0xFF2
 14030                           indf0	equ	0xFEF
 14031                           postinc0	equ	0xFEE
 14032                           fsr0h	equ	0xFEA
 14033                           fsr0l	equ	0xFE9
 14034                           wreg	equ	0xFE8
 14035                           indf1	equ	0xFE7
 14036                           postdec1	equ	0xFE5
 14037                           fsr1h	equ	0xFE2
 14038                           fsr1l	equ	0xFE1
 14039                           indf2	equ	0xFDF
 14040                           postinc2	equ	0xFDE
 14041                           postdec2	equ	0xFDD
 14042                           fsr2h	equ	0xFDA
 14043                           fsr2l	equ	0xFD9
 14044                           status	equ	0xFD8
 14045                           
 14046 ;; *************** function _Init_System *****************
 14047 ;; Defined at:
 14048 ;;		line 101 in file "user.c"
 14049 ;; Parameters:    Size  Location     Type
 14050 ;;		None
 14051 ;; Auto vars:     Size  Location     Type
 14052 ;;		None
 14053 ;; Return value:  Size  Location     Type
 14054 ;;		None               void
 14055 ;; Registers used:
 14056 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14057 ;; Tracked objects:
 14058 ;;		On entry : 0/0
 14059 ;;		On exit  : 0/0
 14060 ;;		Unchanged: 0/0
 14061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14066 ;;Total ram usage:        0 bytes
 14067 ;; Hardware stack levels used:    1
 14068 ;; Hardware stack levels required when called:   13
 14069 ;; This function calls:
 14070 ;;		_InitADC
 14071 ;;		_InitBluetooth
 14072 ;;		_InitIR
 14073 ;;		_InitTimers
 14074 ;;		_InitUART
 14075 ;;		_SyncEEPROMToGlobal
 14076 ;;		_UARTchar
 14077 ;;		_UARTstring
 14078 ;;		_cleanBuffer
 14079 ;; This function is called by:
 14080 ;;		_main
 14081 ;; This function uses a non-reentrant model
 14082 ;;
 14083                           
 14084                           	psect	text36
 14085  0052DE                     __ptext36:
 14086                           	opt stack 0
 14087  0052DE                     _Init_System:
 14088                           	opt stack 17
 14089                           
 14090                           ;user.c: 103: cleanBuffer(&ReceivedString, 255);
 14091                           
 14092                           ; BSR set to: 0
 14093                           ;incstack = 0
 14094  0052DE  0E00               	movlw	low _ReceivedString
 14095  0052E0  0100               	movlb	0	; () banked
 14096  0052E2  6F72               	movwf	cleanBuffer@data& (0+255),b
 14097  0052E4  0E02               	movlw	high _ReceivedString
 14098  0052E6  0100               	movlb	0	; () banked
 14099  0052E8  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
 14100  0052EA  0E00               	movlw	0
 14101  0052EC  0100               	movlb	0	; () banked
 14102  0052EE  6F75               	movwf	(cleanBuffer@count+1)& (0+255),b
 14103  0052F0  6974               	setf	cleanBuffer@count& (0+255),b
 14104  0052F2  EC6E  F02A         	call	_cleanBuffer	;wreg free
 14105                           
 14106                           ;user.c: 106: IPR1bits.RCIP = 0;
 14107  0052F6  9A9F               	bcf	3999,5,c	;volatile
 14108                           
 14109                           ;user.c: 107: INTCON2bits.RBIP = 1;
 14110  0052F8  80F1               	bsf	intcon2,0,c	;volatile
 14111                           
 14112                           ;user.c: 108: INTCON2bits.TMR0IP = 1;
 14113  0052FA  84F1               	bsf	intcon2,2,c	;volatile
 14114                           
 14115                           ;user.c: 109: IPR1bits.TMR2IP = 1;
 14116  0052FC  829F               	bsf	3999,1,c	;volatile
 14117                           
 14118                           ;user.c: 110: IPR1bits.TMR1IP = 0;
 14119  0052FE  909F               	bcf	3999,0,c	;volatile
 14120                           
 14121                           ;user.c: 111: IPR2bits.TMR3IP = 1;
 14122  005300  82A2               	bsf	4002,1,c	;volatile
 14123                           
 14124                           ;user.c: 114: RCONbits.IPEN = 1;
 14125  005302  8ED0               	bsf	4048,7,c	;volatile
 14126                           
 14127                           ;user.c: 115: INTCONbits.PEIE = 1;
 14128  005304  8CF2               	bsf	intcon,6,c	;volatile
 14129                           
 14130                           ;user.c: 116: INTCONbits.GIE = 1;
 14131  005306  8EF2               	bsf	intcon,7,c	;volatile
 14132                           
 14133                           ;user.c: 118: SyncEEPROMToGlobal();
 14134  005308  ECDA  F022         	call	_SyncEEPROMToGlobal	;wreg free
 14135                           
 14136                           ;user.c: 119: InitADC();
 14137  00530C  EC66  F02D         	call	_InitADC	;wreg free
 14138                           
 14139                           ;user.c: 120: InitIR();
 14140  005310  EC74  F02B         	call	_InitIR	;wreg free
 14141                           
 14142                           ;user.c: 121: InitUART(115200);
 14143  005314  0E00               	movlw	0
 14144  005316  0100               	movlb	0	; () banked
 14145  005318  6F9C               	movwf	InitUART@Baud& (0+255),b
 14146  00531A  0EC2               	movlw	194
 14147  00531C  6F9D               	movwf	(InitUART@Baud+1)& (0+255),b
 14148  00531E  0E01               	movlw	1
 14149  005320  6F9E               	movwf	(InitUART@Baud+2)& (0+255),b
 14150  005322  0E00               	movlw	0
 14151  005324  6F9F               	movwf	(InitUART@Baud+3)& (0+255),b
 14152  005326  EC84  F020         	call	_InitUART	;wreg free
 14153                           
 14154                           ;user.c: 122: UARTstring(CRLN);
 14155  00532A  0E82               	movlw	low _CRLN
 14156  00532C  0100               	movlb	0	; () banked
 14157  00532E  6F73               	movwf	UARTstring@data& (0+255),b
 14158  005330  0EFB               	movlw	high _CRLN
 14159  005332  0100               	movlb	0	; () banked
 14160  005334  6F74               	movwf	(UARTstring@data+1)& (0+255),b
 14161  005336  EC9B  F02A         	call	_UARTstring	;wreg free
 14162                           
 14163                           ;user.c: 123: UARTchar('>');
 14164  00533A  0E3E               	movlw	62
 14165  00533C  EC26  F02D         	call	_UARTchar
 14166                           
 14167                           ;user.c: 124: InitBluetooth();
 14168  005340  ECF4  F02A         	call	_InitBluetooth	;wreg free
 14169                           
 14170                           ;user.c: 125: InitTimers();
 14171  005344  EC7C  F02D         	call	_InitTimers	;wreg free
 14172  005348  0012               	return		;funcret
 14173  00534A                     __end_of_Init_System:
 14174                           	opt stack 0
 14175                           tblptru	equ	0xFF8
 14176                           tblptrh	equ	0xFF7
 14177                           tblptrl	equ	0xFF6
 14178                           tablat	equ	0xFF5
 14179                           prodh	equ	0xFF4
 14180                           prodl	equ	0xFF3
 14181                           intcon	equ	0xFF2
 14182                           intcon2	equ	0xFF1
 14183                           indf0	equ	0xFEF
 14184                           postinc0	equ	0xFEE
 14185                           fsr0h	equ	0xFEA
 14186                           fsr0l	equ	0xFE9
 14187                           wreg	equ	0xFE8
 14188                           indf1	equ	0xFE7
 14189                           postdec1	equ	0xFE5
 14190                           fsr1h	equ	0xFE2
 14191                           fsr1l	equ	0xFE1
 14192                           indf2	equ	0xFDF
 14193                           postinc2	equ	0xFDE
 14194                           postdec2	equ	0xFDD
 14195                           fsr2h	equ	0xFDA
 14196                           fsr2l	equ	0xFD9
 14197                           status	equ	0xFD8
 14198                           
 14199 ;; *************** function _SyncEEPROMToGlobal *****************
 14200 ;; Defined at:
 14201 ;;		line 172 in file "EEPROM.c"
 14202 ;; Parameters:    Size  Location     Type
 14203 ;;		None
 14204 ;; Auto vars:     Size  Location     Type
 14205 ;;  Temp           45   45[BANK1 ] struct EEdata
 14206 ;; Return value:  Size  Location     Type
 14207 ;;		None               void
 14208 ;; Registers used:
 14209 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 14210 ;; Tracked objects:
 14211 ;;		On entry : 0/0
 14212 ;;		On exit  : 0/0
 14213 ;;		Unchanged: 0/0
 14214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14216 ;;      Locals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14218 ;;      Totals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14219 ;;Total ram usage:       45 bytes
 14220 ;; Hardware stack levels used:    1
 14221 ;; Hardware stack levels required when called:    9
 14222 ;; This function calls:
 14223 ;;		_GetEEPROM
 14224 ;; This function is called by:
 14225 ;;		_Init_System
 14226 ;; This function uses a non-reentrant model
 14227 ;;
 14228                           
 14229                           	psect	text37
 14230  0045B4                     __ptext37:
 14231                           	opt stack 0
 14232  0045B4                     _SyncEEPROMToGlobal:
 14233                           	opt stack 20
 14234                           
 14235                           ;EEPROM.c: 174: GBLdata Temp;
 14236                           ;EEPROM.c: 176: Temp = GetEEPROM();
 14237                           
 14238                           ;incstack = 0
 14239  0045B4  EC3A  F02C         	call	_GetEEPROM	;wreg free
 14240  0045B8  EE21  F02D         	lfsr	2,SyncEEPROMToGlobal@Temp
 14241  0045BC  0E2C               	movlw	44
 14242  0045BE                     u10281:
 14243  0045BE  CFEB FFDB          	movff	plusw0,plusw2
 14244  0045C2  06E8               	decf	wreg,f,c
 14245  0045C4  E2FC               	bc	u10281
 14246                           
 14247                           ;EEPROM.c: 178: Global.BlueToothFlag = Temp.BlueToothFlag;
 14248  0045C6  C12D  F167         	movff	SyncEEPROMToGlobal@Temp,_Global
 14249                           
 14250                           ;EEPROM.c: 179: Global.SWNECcode = Temp.SWNECcode;
 14251  0045CA  C12E  F168         	movff	SyncEEPROMToGlobal@Temp+1,_Global+1
 14252  0045CE  C12F  F169         	movff	SyncEEPROMToGlobal@Temp+2,_Global+2
 14253  0045D2  C130  F16A         	movff	SyncEEPROMToGlobal@Temp+3,_Global+3
 14254  0045D6  C131  F16B         	movff	SyncEEPROMToGlobal@Temp+4,_Global+4
 14255                           
 14256                           ;EEPROM.c: 180: Global.RemoteButton1NECaddr = Temp.RemoteButton1NECaddr;
 14257  0045DA  C132  F16C         	movff	SyncEEPROMToGlobal@Temp+5,_Global+5
 14258                           
 14259                           ;EEPROM.c: 181: Global.RemoteButton1NECcom = Temp.RemoteButton1NECcom;
 14260  0045DE  C133  F16D         	movff	SyncEEPROMToGlobal@Temp+6,_Global+6
 14261                           
 14262                           ;EEPROM.c: 182: Global.RemoteButton2NECaddr = Temp.RemoteButton2NECaddr;
 14263  0045E2  C134  F16E         	movff	SyncEEPROMToGlobal@Temp+7,_Global+7
 14264                           
 14265                           ;EEPROM.c: 183: Global.RemoteButton2NECcom = Temp.RemoteButton2NECcom;
 14266  0045E6  C135  F16F         	movff	SyncEEPROMToGlobal@Temp+8,_Global+8
 14267                           
 14268                           ;EEPROM.c: 184: Global.RemoteButton3NECaddr = Temp.RemoteButton3NECaddr;
 14269  0045EA  C136  F170         	movff	SyncEEPROMToGlobal@Temp+9,_Global+9
 14270                           
 14271                           ;EEPROM.c: 185: Global.RemoteButton3NECcom = Temp.RemoteButton3NECcom;
 14272  0045EE  C137  F171         	movff	SyncEEPROMToGlobal@Temp+10,_Global+10
 14273                           
 14274                           ;EEPROM.c: 186: Global.RemoteButton4NECaddr = Temp.RemoteButton4NECaddr;
 14275  0045F2  C138  F172         	movff	SyncEEPROMToGlobal@Temp+11,_Global+11
 14276                           
 14277                           ;EEPROM.c: 187: Global.RemoteButton4NECcom = Temp.RemoteButton4NECcom;
 14278  0045F6  C139  F173         	movff	SyncEEPROMToGlobal@Temp+12,_Global+12
 14279                           
 14280                           ;EEPROM.c: 188: Global.RemoteButton5NECaddr = Temp.RemoteButton5NECaddr;
 14281  0045FA  C13A  F174         	movff	SyncEEPROMToGlobal@Temp+13,_Global+13
 14282                           
 14283                           ;EEPROM.c: 189: Global.RemoteButton5NECcom = Temp.RemoteButton5NECcom;
 14284  0045FE  C13B  F175         	movff	SyncEEPROMToGlobal@Temp+14,_Global+14
 14285                           
 14286                           ;EEPROM.c: 190: Global.RemoteButton6NECaddr = Temp.RemoteButton6NECaddr;
 14287  004602  C13C  F176         	movff	SyncEEPROMToGlobal@Temp+15,_Global+15
 14288                           
 14289                           ;EEPROM.c: 191: Global.RemoteButton6NECcom = Temp.RemoteButton6NECcom;
 14290  004606  C13D  F177         	movff	SyncEEPROMToGlobal@Temp+16,_Global+16
 14291                           
 14292                           ;EEPROM.c: 192: Global.RemoteButton7NECaddr = Temp.RemoteButton7NECaddr;
 14293  00460A  C13E  F178         	movff	SyncEEPROMToGlobal@Temp+17,_Global+17
 14294                           
 14295                           ;EEPROM.c: 193: Global.RemoteButton7NECcom = Temp.RemoteButton7NECcom;
 14296  00460E  C13F  F179         	movff	SyncEEPROMToGlobal@Temp+18,_Global+18
 14297                           
 14298                           ;EEPROM.c: 194: Global.RemoteButton8NECaddr = Temp.RemoteButton8NECaddr;
 14299  004612  C140  F17A         	movff	SyncEEPROMToGlobal@Temp+19,_Global+19
 14300                           
 14301                           ;EEPROM.c: 195: Global.RemoteButton8NECcom = Temp.RemoteButton8NECcom;
 14302  004616  C141  F17B         	movff	SyncEEPROMToGlobal@Temp+20,_Global+20
 14303                           
 14304                           ;EEPROM.c: 196: Global.RemoteButton9NECaddr = Temp.RemoteButton9NECaddr;
 14305  00461A  C142  F17C         	movff	SyncEEPROMToGlobal@Temp+21,_Global+21
 14306                           
 14307                           ;EEPROM.c: 197: Global.RemoteButton9NECcom = Temp.RemoteButton9NECcom;
 14308  00461E  C143  F17D         	movff	SyncEEPROMToGlobal@Temp+22,_Global+22
 14309                           
 14310                           ;EEPROM.c: 198: Global.RemoteButton10NECaddr = Temp.RemoteButton10NECaddr;
 14311  004622  C144  F17E         	movff	SyncEEPROMToGlobal@Temp+23,_Global+23
 14312                           
 14313                           ;EEPROM.c: 199: Global.RemoteButton10NECcom = Temp.RemoteButton10NECcom;
 14314  004626  C145  F17F         	movff	SyncEEPROMToGlobal@Temp+24,_Global+24
 14315                           
 14316                           ;EEPROM.c: 200: Global.RemoteButton11NECaddr = Temp.RemoteButton11NECaddr;
 14317  00462A  C146  F180         	movff	SyncEEPROMToGlobal@Temp+25,_Global+25
 14318                           
 14319                           ;EEPROM.c: 201: Global.RemoteButton11NECcom = Temp.RemoteButton11NECcom;
 14320  00462E  C147  F181         	movff	SyncEEPROMToGlobal@Temp+26,_Global+26
 14321                           
 14322                           ;EEPROM.c: 202: Global.RemoteButton12NECaddr = Temp.RemoteButton12NECaddr;
 14323  004632  C148  F182         	movff	SyncEEPROMToGlobal@Temp+27,_Global+27
 14324                           
 14325                           ;EEPROM.c: 203: Global.RemoteButton12NECcom = Temp.RemoteButton12NECcom;
 14326  004636  C149  F183         	movff	SyncEEPROMToGlobal@Temp+28,_Global+28
 14327                           
 14328                           ;EEPROM.c: 204: Global.RemoteButton13NECaddr = Temp.RemoteButton13NECaddr;
 14329  00463A  C14A  F184         	movff	SyncEEPROMToGlobal@Temp+29,_Global+29
 14330                           
 14331                           ;EEPROM.c: 205: Global.RemoteButton13NECcom = Temp.RemoteButton13NECcom;
 14332  00463E  C14B  F185         	movff	SyncEEPROMToGlobal@Temp+30,_Global+30
 14333                           
 14334                           ;EEPROM.c: 206: Global.RemoteButton14NECaddr = Temp.RemoteButton14NECaddr;
 14335  004642  C14C  F186         	movff	SyncEEPROMToGlobal@Temp+31,_Global+31
 14336                           
 14337                           ;EEPROM.c: 207: Global.RemoteButton14NECcom = Temp.RemoteButton14NECcom;
 14338  004646  C14D  F187         	movff	SyncEEPROMToGlobal@Temp+32,_Global+32
 14339                           
 14340                           ;EEPROM.c: 208: Global.RemoteButton15NECaddr = Temp.RemoteButton15NECaddr;
 14341  00464A  C14E  F188         	movff	SyncEEPROMToGlobal@Temp+33,_Global+33
 14342                           
 14343                           ;EEPROM.c: 209: Global.RemoteButton15NECcom = Temp.RemoteButton15NECcom;
 14344  00464E  C14F  F189         	movff	SyncEEPROMToGlobal@Temp+34,_Global+34
 14345                           
 14346                           ;EEPROM.c: 210: Global.RemoteButton16NECaddr = Temp.RemoteButton16NECaddr;
 14347  004652  C150  F18A         	movff	SyncEEPROMToGlobal@Temp+35,_Global+35
 14348                           
 14349                           ;EEPROM.c: 211: Global.RemoteButton16NECcom = Temp.RemoteButton16NECcom;
 14350  004656  C151  F18B         	movff	SyncEEPROMToGlobal@Temp+36,_Global+36
 14351                           
 14352                           ;EEPROM.c: 212: Global.RemoteButton17NECaddr = Temp.RemoteButton17NECaddr;
 14353  00465A  C152  F18C         	movff	SyncEEPROMToGlobal@Temp+37,_Global+37
 14354                           
 14355                           ;EEPROM.c: 213: Global.RemoteButton17NECcom = Temp.RemoteButton17NECcom;
 14356  00465E  C153  F18D         	movff	SyncEEPROMToGlobal@Temp+38,_Global+38
 14357                           
 14358                           ;EEPROM.c: 214: Global.RemoteButton18NECaddr = Temp.RemoteButton18NECaddr;
 14359  004662  C154  F18E         	movff	SyncEEPROMToGlobal@Temp+39,_Global+39
 14360                           
 14361                           ;EEPROM.c: 215: Global.RemoteButton18NECcom = Temp.RemoteButton18NECcom;
 14362  004666  C155  F18F         	movff	SyncEEPROMToGlobal@Temp+40,_Global+40
 14363                           
 14364                           ;EEPROM.c: 216: Global.RemoteButton19NECaddr = Temp.RemoteButton19NECaddr;
 14365  00466A  C156  F190         	movff	SyncEEPROMToGlobal@Temp+41,_Global+41
 14366                           
 14367                           ;EEPROM.c: 217: Global.RemoteButton19NECcom = Temp.RemoteButton19NECcom;
 14368  00466E  C157  F191         	movff	SyncEEPROMToGlobal@Temp+42,_Global+42
 14369                           
 14370                           ;EEPROM.c: 218: Global.RemoteButton20NECaddr = Temp.RemoteButton20NECaddr;
 14371  004672  C158  F192         	movff	SyncEEPROMToGlobal@Temp+43,_Global+43
 14372                           
 14373                           ;EEPROM.c: 219: Global.RemoteButton20NECcom = Temp.RemoteButton20NECcom;
 14374  004676  C159  F193         	movff	SyncEEPROMToGlobal@Temp+44,_Global+44
 14375  00467A  0012               	return		;funcret
 14376  00467C                     __end_of_SyncEEPROMToGlobal:
 14377                           	opt stack 0
 14378                           tblptru	equ	0xFF8
 14379                           tblptrh	equ	0xFF7
 14380                           tblptrl	equ	0xFF6
 14381                           tablat	equ	0xFF5
 14382                           prodh	equ	0xFF4
 14383                           prodl	equ	0xFF3
 14384                           intcon	equ	0xFF2
 14385                           intcon2	equ	0xFF1
 14386                           indf0	equ	0xFEF
 14387                           postinc0	equ	0xFEE
 14388                           plusw0	equ	0xFEB
 14389                           fsr0h	equ	0xFEA
 14390                           fsr0l	equ	0xFE9
 14391                           wreg	equ	0xFE8
 14392                           indf1	equ	0xFE7
 14393                           postdec1	equ	0xFE5
 14394                           fsr1h	equ	0xFE2
 14395                           fsr1l	equ	0xFE1
 14396                           indf2	equ	0xFDF
 14397                           postinc2	equ	0xFDE
 14398                           postdec2	equ	0xFDD
 14399                           plusw2	equ	0xFDB
 14400                           fsr2h	equ	0xFDA
 14401                           fsr2l	equ	0xFD9
 14402                           status	equ	0xFD8
 14403                           
 14404 ;; *************** function _GetEEPROM *****************
 14405 ;; Defined at:
 14406 ;;		line 118 in file "EEPROM.c"
 14407 ;; Parameters:    Size  Location     Type
 14408 ;;		None
 14409 ;; Auto vars:     Size  Location     Type
 14410 ;;  Temp           45    0[BANK1 ] struct EEdata
 14411 ;; Return value:  Size  Location     Type
 14412 ;;                  45   54[BANK0 ] struct EEdata
 14413 ;; Registers used:
 14414 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 14415 ;; Tracked objects:
 14416 ;;		On entry : 0/0
 14417 ;;		On exit  : 0/0
 14418 ;;		Unchanged: 0/0
 14419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14420 ;;      Params:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14421 ;;      Locals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14423 ;;      Totals:         0      45      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14424 ;;Total ram usage:       90 bytes
 14425 ;; Hardware stack levels used:    1
 14426 ;; Hardware stack levels required when called:    8
 14427 ;; This function calls:
 14428 ;;		_GetMemoryChar
 14429 ;;		_GetMemoryLong
 14430 ;; This function is called by:
 14431 ;;		_SyncEEPROMToGlobal
 14432 ;; This function uses a non-reentrant model
 14433 ;;
 14434                           
 14435                           	psect	text38
 14436  005874                     __ptext38:
 14437                           	opt stack 0
 14438  005874                     _GetEEPROM:
 14439                           	opt stack 20
 14440                           
 14441                           ;EEPROM.c: 120: GBLdata Temp;
 14442                           ;EEPROM.c: 121: Temp.BlueToothFlag = GetMemoryChar(0);
 14443                           
 14444                           ;incstack = 0
 14445  005874  0E00               	movlw	0
 14446  005876  ECEE  F02C         	call	_GetMemoryChar
 14447  00587A  0100               	movlb	0	; () banked
 14448  00587C  5175               	movf	?_GetMemoryChar& (0+255),w,b
 14449  00587E  0101               	movlb	1	; () banked
 14450  005880  6F00               	movwf	GetEEPROM@Temp& (0+255),b
 14451                           
 14452                           ;EEPROM.c: 122: Temp.SWNECcode = GetMemoryLong(1);
 14453  005882  0E01               	movlw	1
 14454  005884  ECF1  F01B         	call	_GetMemoryLong
 14455  005888  C075  F101         	movff	?_GetMemoryLong,GetEEPROM@Temp+1
 14456  00588C  C076  F102         	movff	?_GetMemoryLong+1,GetEEPROM@Temp+2
 14457  005890  C077  F103         	movff	?_GetMemoryLong+2,GetEEPROM@Temp+3
 14458  005894  C078  F104         	movff	?_GetMemoryLong+3,GetEEPROM@Temp+4
 14459                           
 14460                           ;EEPROM.c: 123: return Temp;
 14461  005898  EE21  F000         	lfsr	2,GetEEPROM@Temp
 14462  00589C  EE00  F096         	lfsr	0,?_GetEEPROM
 14463  0058A0  0E2C               	movlw	44
 14464  0058A2                     u10021:
 14465  0058A2  CFDB FFEB          	movff	plusw2,plusw0
 14466  0058A6  06E8               	decf	wreg,f,c
 14467  0058A8  E2FC               	bc	u10021
 14468  0058AA  0012               	return	
 14469  0058AC  0012               	return		;funcret
 14470  0058AE                     __end_of_GetEEPROM:
 14471                           	opt stack 0
 14472                           tblptru	equ	0xFF8
 14473                           tblptrh	equ	0xFF7
 14474                           tblptrl	equ	0xFF6
 14475                           tablat	equ	0xFF5
 14476                           prodh	equ	0xFF4
 14477                           prodl	equ	0xFF3
 14478                           intcon	equ	0xFF2
 14479                           intcon2	equ	0xFF1
 14480                           indf0	equ	0xFEF
 14481                           postinc0	equ	0xFEE
 14482                           plusw0	equ	0xFEB
 14483                           fsr0h	equ	0xFEA
 14484                           fsr0l	equ	0xFE9
 14485                           wreg	equ	0xFE8
 14486                           indf1	equ	0xFE7
 14487                           postdec1	equ	0xFE5
 14488                           fsr1h	equ	0xFE2
 14489                           fsr1l	equ	0xFE1
 14490                           indf2	equ	0xFDF
 14491                           postinc2	equ	0xFDE
 14492                           postdec2	equ	0xFDD
 14493                           plusw2	equ	0xFDB
 14494                           fsr2h	equ	0xFDA
 14495                           fsr2l	equ	0xFD9
 14496                           status	equ	0xFD8
 14497                           
 14498 ;; *************** function _InitUART *****************
 14499 ;; Defined at:
 14500 ;;		line 78 in file "UART.c"
 14501 ;; Parameters:    Size  Location     Type
 14502 ;;  Baud            4   60[BANK0 ] unsigned long 
 14503 ;; Auto vars:     Size  Location     Type
 14504 ;;  temp            4   74[BANK0 ] unsigned long 
 14505 ;;  spbrg           2   71[BANK0 ] unsigned int 
 14506 ;;  config          1   73[BANK0 ] unsigned char 
 14507 ;; Return value:  Size  Location     Type
 14508 ;;		None               void
 14509 ;; Registers used:
 14510 ;;		wreg, status,2, status,0, cstack
 14511 ;; Tracked objects:
 14512 ;;		On entry : 0/0
 14513 ;;		On exit  : 0/0
 14514 ;;		Unchanged: 0/0
 14515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14516 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14517 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14518 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14519 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14520 ;;Total ram usage:       18 bytes
 14521 ;; Hardware stack levels used:    1
 14522 ;; Hardware stack levels required when called:    9
 14523 ;; This function calls:
 14524 ;;		_Local_CloseUSART
 14525 ;;		_OpenUSART
 14526 ;;		_Round
 14527 ;;		___fttol
 14528 ;;		___lldiv
 14529 ;;		___lltoft
 14530 ;; This function is called by:
 14531 ;;		_Init_System
 14532 ;; This function uses a non-reentrant model
 14533 ;;
 14534                           
 14535                           	psect	text39
 14536  004108                     __ptext39:
 14537                           	opt stack 0
 14538  004108                     _InitUART:
 14539                           	opt stack 20
 14540                           
 14541                           ;UART.c: 80: unsigned long temp;
 14542                           ;UART.c: 81: unsigned char config = 0;
 14543                           
 14544                           ;incstack = 0
 14545  004108  0E00               	movlw	0
 14546  00410A  0100               	movlb	0	; () banked
 14547  00410C  6FA9               	movwf	InitUART@config& (0+255),b
 14548                           
 14549                           ; BSR set to: 0
 14550                           ;UART.c: 82: unsigned int spbrg;
 14551                           ;UART.c: 84: Local_CloseUSART();
 14552  00410E  EC9E  F02D         	call	_Local_CloseUSART	;wreg free
 14553                           
 14554                           ;UART.c: 89: config |= 0b00001000;
 14555  004112  0100               	movlb	0	; () banked
 14556  004114  87A9               	bsf	InitUART@config& (0+255),3,b
 14557                           
 14558                           ; BSR set to: 0
 14559                           ;UART.c: 90: config |= 0b00010000;
 14560  004116  0100               	movlb	0	; () banked
 14561  004118  89A9               	bsf	InitUART@config& (0+255),4,b
 14562                           
 14563                           ; BSR set to: 0
 14564                           ;UART.c: 91: config &= ~0b00000010;
 14565  00411A  0100               	movlb	0	; () banked
 14566  00411C  93A9               	bcf	InitUART@config& (0+255),1,b
 14567                           
 14568                           ; BSR set to: 0
 14569                           ;UART.c: 94: temp = (64000000L / Baud) - 1;
 14570  00411E  0E00               	movlw	0
 14571  004120  0100               	movlb	0	; () banked
 14572  004122  6F72               	movwf	___lldiv@dividend& (0+255),b
 14573  004124  0E90               	movlw	144
 14574  004126  6F73               	movwf	(___lldiv@dividend+1)& (0+255),b
 14575  004128  0ED0               	movlw	208
 14576  00412A  6F74               	movwf	(___lldiv@dividend+2)& (0+255),b
 14577  00412C  0E03               	movlw	3
 14578  00412E  6F75               	movwf	(___lldiv@dividend+3)& (0+255),b
 14579  004130  C09C  F076         	movff	InitUART@Baud,___lldiv@divisor
 14580  004134  C09D  F077         	movff	InitUART@Baud+1,___lldiv@divisor+1
 14581  004138  C09E  F078         	movff	InitUART@Baud+2,___lldiv@divisor+2
 14582  00413C  C09F  F079         	movff	InitUART@Baud+3,___lldiv@divisor+3
 14583  004140  ECA2  F023         	call	___lldiv	;wreg free
 14584  004144  0EFF               	movlw	255
 14585  004146  0100               	movlb	0	; () banked
 14586  004148  2572               	addwf	?___lldiv& (0+255),w,b
 14587  00414A  0100               	movlb	0	; () banked
 14588  00414C  6FAA               	movwf	InitUART@temp& (0+255),b
 14589  00414E  0EFF               	movlw	255
 14590  004150  0100               	movlb	0	; () banked
 14591  004152  2173               	addwfc	(?___lldiv+1)& (0+255),w,b
 14592  004154  0100               	movlb	0	; () banked
 14593  004156  6FAB               	movwf	(InitUART@temp+1)& (0+255),b
 14594  004158  0EFF               	movlw	255
 14595  00415A  0100               	movlb	0	; () banked
 14596  00415C  2174               	addwfc	(?___lldiv+2)& (0+255),w,b
 14597  00415E  0100               	movlb	0	; () banked
 14598  004160  6FAC               	movwf	(InitUART@temp+2)& (0+255),b
 14599  004162  0EFF               	movlw	255
 14600  004164  0100               	movlb	0	; () banked
 14601  004166  2175               	addwfc	(?___lldiv+3)& (0+255),w,b
 14602  004168  0100               	movlb	0	; () banked
 14603  00416A  6FAD               	movwf	(InitUART@temp+3)& (0+255),b
 14604                           
 14605                           ; BSR set to: 0
 14606                           ;UART.c: 95: temp = (temp >> 2) - 1;
 14607  00416C  C0AA  F0A0         	movff	InitUART@temp,??_InitUART
 14608  004170  C0AB  F0A1         	movff	InitUART@temp+1,??_InitUART+1
 14609  004174  C0AC  F0A2         	movff	InitUART@temp+2,??_InitUART+2
 14610  004178  C0AD  F0A3         	movff	InitUART@temp+3,??_InitUART+3
 14611  00417C  0E03               	movlw	3
 14612  00417E  D006               	goto	u10290
 14613  004180                     u10295:
 14614  004180  0100               	movlb	0	; () banked
 14615  004182  90D8               	bcf	status,0,c
 14616  004184  33A3               	rrcf	(??_InitUART+3)& (0+255),f,b
 14617  004186  33A2               	rrcf	(??_InitUART+2)& (0+255),f,b
 14618  004188  33A1               	rrcf	(??_InitUART+1)& (0+255),f,b
 14619  00418A  33A0               	rrcf	??_InitUART& (0+255),f,b
 14620  00418C                     u10290:
 14621  00418C  2EE8               	decfsz	wreg,f,c
 14622  00418E  D7F8               	goto	u10295
 14623  004190  0EFF               	movlw	255
 14624  004192  0100               	movlb	0	; () banked
 14625  004194  25A0               	addwf	??_InitUART& (0+255),w,b
 14626  004196  0100               	movlb	0	; () banked
 14627  004198  6FAA               	movwf	InitUART@temp& (0+255),b
 14628  00419A  0EFF               	movlw	255
 14629  00419C  0100               	movlb	0	; () banked
 14630  00419E  21A1               	addwfc	(??_InitUART+1)& (0+255),w,b
 14631  0041A0  0100               	movlb	0	; () banked
 14632  0041A2  6FAB               	movwf	(InitUART@temp+1)& (0+255),b
 14633  0041A4  0EFF               	movlw	255
 14634  0041A6  0100               	movlb	0	; () banked
 14635  0041A8  21A2               	addwfc	(??_InitUART+2)& (0+255),w,b
 14636  0041AA  0100               	movlb	0	; () banked
 14637  0041AC  6FAC               	movwf	(InitUART@temp+2)& (0+255),b
 14638  0041AE  0EFF               	movlw	255
 14639  0041B0  0100               	movlb	0	; () banked
 14640  0041B2  21A3               	addwfc	(??_InitUART+3)& (0+255),w,b
 14641  0041B4  0100               	movlb	0	; () banked
 14642  0041B6  6FAD               	movwf	(InitUART@temp+3)& (0+255),b
 14643                           
 14644                           ; BSR set to: 0
 14645                           ;UART.c: 96: spbrg = (unsigned int) Round(temp);
 14646  0041B8  C0AA  F07A         	movff	InitUART@temp,___lltoft@c
 14647  0041BC  C0AB  F07B         	movff	InitUART@temp+1,___lltoft@c+1
 14648  0041C0  C0AC  F07C         	movff	InitUART@temp+2,___lltoft@c+2
 14649  0041C4  C0AD  F07D         	movff	InitUART@temp+3,___lltoft@c+3
 14650  0041C8  EC7B  F028         	call	___lltoft	;wreg free
 14651  0041CC  C07A  F095         	movff	?___lltoft,Round@input
 14652  0041D0  C07B  F096         	movff	?___lltoft+1,Round@input+1
 14653  0041D4  C07C  F097         	movff	?___lltoft+2,Round@input+2
 14654  0041D8  ECDA  F029         	call	_Round	;wreg free
 14655  0041DC  C095  F0A4         	movff	?_Round,_InitUART$3620
 14656  0041E0  C096  F0A5         	movff	?_Round+1,_InitUART$3620+1
 14657  0041E4  C097  F0A6         	movff	?_Round+2,_InitUART$3620+2
 14658                           
 14659                           ;UART.c: 96: spbrg = (unsigned int) Round(temp);
 14660  0041E8  C0A4  F086         	movff	_InitUART$3620,___fttol@f1
 14661  0041EC  C0A5  F087         	movff	_InitUART$3620+1,___fttol@f1+1
 14662  0041F0  C0A6  F088         	movff	_InitUART$3620+2,___fttol@f1+2
 14663  0041F4  EC08  F01E         	call	___fttol	;wreg free
 14664  0041F8  C086  F0A7         	movff	?___fttol,InitUART@spbrg
 14665  0041FC  C087  F0A8         	movff	?___fttol+1,InitUART@spbrg+1
 14666                           
 14667                           ;UART.c: 98: BAUDCONbits.BRG16 = 1;
 14668  004200  86B8               	bsf	4024,3,c	;volatile
 14669                           
 14670                           ;UART.c: 100: OpenUSART(config, spbrg);
 14671  004202  C0A7  F072         	movff	InitUART@spbrg,OpenUSART@spbrg
 14672  004206  C0A8  F073         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
 14673  00420A  0100               	movlb	0	; () banked
 14674  00420C  51A9               	movf	InitUART@config& (0+255),w,b
 14675  00420E  ECBB  F028         	call	_OpenUSART
 14676                           
 14677                           ;UART.c: 102: PIR1bits.RCIF = 0;
 14678  004212  9A9E               	bcf	3998,5,c	;volatile
 14679                           
 14680                           ;UART.c: 103: PIE1bits.RCIE = 1;
 14681  004214  8A9D               	bsf	3997,5,c	;volatile
 14682                           
 14683                           ;UART.c: 104: INTCONbits.PEIE = 1;
 14684  004216  8CF2               	bsf	intcon,6,c	;volatile
 14685  004218  0012               	return		;funcret
 14686  00421A                     __end_of_InitUART:
 14687                           	opt stack 0
 14688                           tblptru	equ	0xFF8
 14689                           tblptrh	equ	0xFF7
 14690                           tblptrl	equ	0xFF6
 14691                           tablat	equ	0xFF5
 14692                           prodh	equ	0xFF4
 14693                           prodl	equ	0xFF3
 14694                           intcon	equ	0xFF2
 14695                           intcon2	equ	0xFF1
 14696                           indf0	equ	0xFEF
 14697                           postinc0	equ	0xFEE
 14698                           plusw0	equ	0xFEB
 14699                           fsr0h	equ	0xFEA
 14700                           fsr0l	equ	0xFE9
 14701                           wreg	equ	0xFE8
 14702                           indf1	equ	0xFE7
 14703                           postdec1	equ	0xFE5
 14704                           fsr1h	equ	0xFE2
 14705                           fsr1l	equ	0xFE1
 14706                           indf2	equ	0xFDF
 14707                           postinc2	equ	0xFDE
 14708                           postdec2	equ	0xFDD
 14709                           plusw2	equ	0xFDB
 14710                           fsr2h	equ	0xFDA
 14711                           fsr2l	equ	0xFD9
 14712                           status	equ	0xFD8
 14713                           
 14714 ;; *************** function ___lltoft *****************
 14715 ;; Defined at:
 14716 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
 14717 ;; Parameters:    Size  Location     Type
 14718 ;;  c               4   26[BANK0 ] unsigned long 
 14719 ;; Auto vars:     Size  Location     Type
 14720 ;;  exp             1   34[BANK0 ] unsigned char 
 14721 ;; Return value:  Size  Location     Type
 14722 ;;                  3   26[BANK0 ] float 
 14723 ;; Registers used:
 14724 ;;		wreg, status,2, status,0, cstack
 14725 ;; Tracked objects:
 14726 ;;		On entry : 0/0
 14727 ;;		On exit  : 0/0
 14728 ;;		Unchanged: 0/0
 14729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14730 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14731 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14732 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14733 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14734 ;;Total ram usage:        9 bytes
 14735 ;; Hardware stack levels used:    1
 14736 ;; Hardware stack levels required when called:    7
 14737 ;; This function calls:
 14738 ;;		___ftpack
 14739 ;; This function is called by:
 14740 ;;		_InitUART
 14741 ;; This function uses a non-reentrant model
 14742 ;;
 14743                           
 14744                           	psect	text40
 14745  0050F6                     __ptext40:
 14746                           	opt stack 0
 14747  0050F6                     ___lltoft:
 14748                           	opt stack 21
 14749                           
 14750                           ;incstack = 0
 14751  0050F6  0E8E               	movlw	142
 14752  0050F8  0100               	movlb	0	; () banked
 14753  0050FA  6F82               	movwf	___lltoft@exp& (0+255),b
 14754  0050FC  D009               	goto	l6525
 14755  0050FE                     l6523:
 14756                           
 14757                           ; BSR set to: 0
 14758  0050FE  0100               	movlb	0	; () banked
 14759  005100  90D8               	bcf	status,0,c
 14760  005102  337D               	rrcf	(___lltoft@c+3)& (0+255),f,b
 14761  005104  337C               	rrcf	(___lltoft@c+2)& (0+255),f,b
 14762  005106  337B               	rrcf	(___lltoft@c+1)& (0+255),f,b
 14763  005108  337A               	rrcf	___lltoft@c& (0+255),f,b
 14764  00510A  0100               	movlb	0	; () banked
 14765  00510C  2B82               	incf	___lltoft@exp& (0+255),f,b
 14766  00510E  D000               	goto	l6525
 14767  005110                     l6525:
 14768                           
 14769                           ; BSR set to: 0
 14770  005110  0E00               	movlw	0
 14771  005112  0100               	movlb	0	; () banked
 14772  005114  157A               	andwf	___lltoft@c& (0+255),w,b
 14773  005116  0100               	movlb	0	; () banked
 14774  005118  6F7E               	movwf	??___lltoft& (0+255),b
 14775  00511A  0E00               	movlw	0
 14776  00511C  0100               	movlb	0	; () banked
 14777  00511E  157B               	andwf	(___lltoft@c+1)& (0+255),w,b
 14778  005120  0100               	movlb	0	; () banked
 14779  005122  6F7F               	movwf	(??___lltoft+1)& (0+255),b
 14780  005124  0E00               	movlw	0
 14781  005126  0100               	movlb	0	; () banked
 14782  005128  157C               	andwf	(___lltoft@c+2)& (0+255),w,b
 14783  00512A  0100               	movlb	0	; () banked
 14784  00512C  6F80               	movwf	(??___lltoft+2)& (0+255),b
 14785  00512E  0EFF               	movlw	255
 14786  005130  0100               	movlb	0	; () banked
 14787  005132  157D               	andwf	(___lltoft@c+3)& (0+255),w,b
 14788  005134  0100               	movlb	0	; () banked
 14789  005136  6F81               	movwf	(??___lltoft+3)& (0+255),b
 14790  005138  0100               	movlb	0	; () banked
 14791  00513A  517E               	movf	??___lltoft& (0+255),w,b
 14792  00513C  0100               	movlb	0	; () banked
 14793  00513E  117F               	iorwf	(??___lltoft+1)& (0+255),w,b
 14794  005140  0100               	movlb	0	; () banked
 14795  005142  1180               	iorwf	(??___lltoft+2)& (0+255),w,b
 14796  005144  0100               	movlb	0	; () banked
 14797  005146  1181               	iorwf	(??___lltoft+3)& (0+255),w,b
 14798  005148  A4D8               	btfss	status,2,c
 14799  00514A  D7D9               	goto	l6523
 14800                           
 14801                           ; BSR set to: 0
 14802                           
 14803                           ; BSR set to: 0
 14804  00514C  C07A  F072         	movff	___lltoft@c,___ftpack@arg
 14805  005150  C07B  F073         	movff	___lltoft@c+1,___ftpack@arg+1
 14806  005154  C07C  F074         	movff	___lltoft@c+2,___ftpack@arg+2
 14807  005158  C082  F075         	movff	___lltoft@exp,___ftpack@exp
 14808  00515C  0E00               	movlw	0
 14809  00515E  0100               	movlb	0	; () banked
 14810  005160  6F76               	movwf	___ftpack@sign& (0+255),b
 14811  005162  ECF4  F01F         	call	___ftpack	;wreg free
 14812  005166  C072  F07A         	movff	?___ftpack,?___lltoft
 14813  00516A  C073  F07B         	movff	?___ftpack+1,?___lltoft+1
 14814  00516E  C074  F07C         	movff	?___ftpack+2,?___lltoft+2
 14815  005172  0012               	return	
 14816  005174  0012               	return		;funcret
 14817  005176                     __end_of___lltoft:
 14818                           	opt stack 0
 14819                           tblptru	equ	0xFF8
 14820                           tblptrh	equ	0xFF7
 14821                           tblptrl	equ	0xFF6
 14822                           tablat	equ	0xFF5
 14823                           prodh	equ	0xFF4
 14824                           prodl	equ	0xFF3
 14825                           intcon	equ	0xFF2
 14826                           intcon2	equ	0xFF1
 14827                           indf0	equ	0xFEF
 14828                           postinc0	equ	0xFEE
 14829                           plusw0	equ	0xFEB
 14830                           fsr0h	equ	0xFEA
 14831                           fsr0l	equ	0xFE9
 14832                           wreg	equ	0xFE8
 14833                           indf1	equ	0xFE7
 14834                           postdec1	equ	0xFE5
 14835                           fsr1h	equ	0xFE2
 14836                           fsr1l	equ	0xFE1
 14837                           indf2	equ	0xFDF
 14838                           postinc2	equ	0xFDE
 14839                           postdec2	equ	0xFDD
 14840                           plusw2	equ	0xFDB
 14841                           fsr2h	equ	0xFDA
 14842                           fsr2l	equ	0xFD9
 14843                           status	equ	0xFD8
 14844                           
 14845 ;; *************** function _Round *****************
 14846 ;; Defined at:
 14847 ;;		line 153 in file "MISC.c"
 14848 ;; Parameters:    Size  Location     Type
 14849 ;;  input           3   53[BANK0 ] float 
 14850 ;; Auto vars:     Size  Location     Type
 14851 ;;  temp            4   56[BANK0 ] long 
 14852 ;; Return value:  Size  Location     Type
 14853 ;;                  3   53[BANK0 ] long 
 14854 ;; Registers used:
 14855 ;;		wreg, status,2, status,0, cstack
 14856 ;; Tracked objects:
 14857 ;;		On entry : 0/0
 14858 ;;		On exit  : 0/0
 14859 ;;		Unchanged: 0/0
 14860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14861 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14862 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14864 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14865 ;;Total ram usage:        7 bytes
 14866 ;; Hardware stack levels used:    1
 14867 ;; Hardware stack levels required when called:    8
 14868 ;; This function calls:
 14869 ;;		___altoft
 14870 ;;		___ftadd
 14871 ;;		___fttol
 14872 ;; This function is called by:
 14873 ;;		_InitUART
 14874 ;; This function uses a non-reentrant model
 14875 ;;
 14876                           
 14877                           	psect	text41
 14878  0053B4                     __ptext41:
 14879                           	opt stack 0
 14880  0053B4                     _Round:
 14881                           	opt stack 20
 14882                           
 14883                           ;MISC.c: 155: long temp = (long)(input + 0.5);
 14884                           
 14885                           ;incstack = 0
 14886  0053B4  0E00               	movlw	0
 14887  0053B6  0100               	movlb	0	; () banked
 14888  0053B8  6F7D               	movwf	___ftadd@f2& (0+255),b
 14889  0053BA  0E00               	movlw	0
 14890  0053BC  0100               	movlb	0	; () banked
 14891  0053BE  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
 14892  0053C0  0E3F               	movlw	63
 14893  0053C2  0100               	movlb	0	; () banked
 14894  0053C4  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
 14895  0053C6  C095  F07A         	movff	Round@input,___ftadd@f1
 14896  0053CA  C096  F07B         	movff	Round@input+1,___ftadd@f1+1
 14897  0053CE  C097  F07C         	movff	Round@input+2,___ftadd@f1+2
 14898  0053D2  ECFE  F018         	call	___ftadd	;wreg free
 14899  0053D6  C07A  F086         	movff	?___ftadd,___fttol@f1
 14900  0053DA  C07B  F087         	movff	?___ftadd+1,___fttol@f1+1
 14901  0053DE  C07C  F088         	movff	?___ftadd+2,___fttol@f1+2
 14902  0053E2  EC08  F01E         	call	___fttol	;wreg free
 14903  0053E6  C086  F098         	movff	?___fttol,Round@temp
 14904  0053EA  C087  F099         	movff	?___fttol+1,Round@temp+1
 14905  0053EE  C088  F09A         	movff	?___fttol+2,Round@temp+2
 14906  0053F2  C089  F09B         	movff	?___fttol+3,Round@temp+3
 14907                           
 14908                           ;MISC.c: 157: return temp;
 14909  0053F6  C098  F07A         	movff	Round@temp,___altoft@c
 14910  0053FA  C099  F07B         	movff	Round@temp+1,___altoft@c+1
 14911  0053FE  C09A  F07C         	movff	Round@temp+2,___altoft@c+2
 14912  005402  C09B  F07D         	movff	Round@temp+3,___altoft@c+3
 14913  005406  ECC6  F026         	call	___altoft	;wreg free
 14914  00540A  C07A  F095         	movff	?___altoft,?_Round
 14915  00540E  C07B  F096         	movff	?___altoft+1,?_Round+1
 14916  005412  C07C  F097         	movff	?___altoft+2,?_Round+2
 14917  005416  0012               	return	
 14918  005418  0012               	return		;funcret
 14919  00541A                     __end_of_Round:
 14920                           	opt stack 0
 14921                           tblptru	equ	0xFF8
 14922                           tblptrh	equ	0xFF7
 14923                           tblptrl	equ	0xFF6
 14924                           tablat	equ	0xFF5
 14925                           prodh	equ	0xFF4
 14926                           prodl	equ	0xFF3
 14927                           intcon	equ	0xFF2
 14928                           intcon2	equ	0xFF1
 14929                           indf0	equ	0xFEF
 14930                           postinc0	equ	0xFEE
 14931                           plusw0	equ	0xFEB
 14932                           fsr0h	equ	0xFEA
 14933                           fsr0l	equ	0xFE9
 14934                           wreg	equ	0xFE8
 14935                           indf1	equ	0xFE7
 14936                           postdec1	equ	0xFE5
 14937                           fsr1h	equ	0xFE2
 14938                           fsr1l	equ	0xFE1
 14939                           indf2	equ	0xFDF
 14940                           postinc2	equ	0xFDE
 14941                           postdec2	equ	0xFDD
 14942                           plusw2	equ	0xFDB
 14943                           fsr2h	equ	0xFDA
 14944                           fsr2l	equ	0xFD9
 14945                           status	equ	0xFD8
 14946                           
 14947 ;; *************** function ___fttol *****************
 14948 ;; Defined at:
 14949 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 14950 ;; Parameters:    Size  Location     Type
 14951 ;;  f1              3   38[BANK0 ] float 
 14952 ;; Auto vars:     Size  Location     Type
 14953 ;;  lval            4   48[BANK0 ] unsigned long 
 14954 ;;  exp1            1   52[BANK0 ] unsigned char 
 14955 ;;  sign1           1   47[BANK0 ] unsigned char 
 14956 ;; Return value:  Size  Location     Type
 14957 ;;                  4   38[BANK0 ] long 
 14958 ;; Registers used:
 14959 ;;		wreg, status,2, status,0
 14960 ;; Tracked objects:
 14961 ;;		On entry : 0/0
 14962 ;;		On exit  : 0/0
 14963 ;;		Unchanged: 0/0
 14964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14965 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14966 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14967 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14968 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14969 ;;Total ram usage:       15 bytes
 14970 ;; Hardware stack levels used:    1
 14971 ;; Hardware stack levels required when called:    6
 14972 ;; This function calls:
 14973 ;;		Nothing
 14974 ;; This function is called by:
 14975 ;;		_Round
 14976 ;;		_InitUART
 14977 ;; This function uses a non-reentrant model
 14978 ;;
 14979                           
 14980                           	psect	text42
 14981  003C10                     __ptext42:
 14982                           	opt stack 0
 14983  003C10                     ___fttol:
 14984                           	opt stack 22
 14985                           
 14986                           ;incstack = 0
 14987  003C10  C088  F08A         	movff	___fttol@f1+2,??___fttol
 14988  003C14  0100               	movlb	0	; () banked
 14989  003C16  6B8B               	clrf	(??___fttol+1)& (0+255),b
 14990  003C18  6B8C               	clrf	(??___fttol+2)& (0+255),b
 14991  003C1A  0100               	movlb	0	; () banked
 14992  003C1C  3587               	rlcf	(___fttol@f1+1)& (0+255),w,b
 14993  003C1E  0100               	movlb	0	; () banked
 14994  003C20  378A               	rlcf	??___fttol& (0+255),f,b
 14995  003C22  E301               	bnc	u5871
 14996  003C24  818B               	bsf	(??___fttol+1)& (0+255),0,b
 14997  003C26                     u5871:
 14998  003C26  0100               	movlb	0	; () banked
 14999  003C28  518A               	movf	??___fttol& (0+255),w,b
 15000  003C2A  0100               	movlb	0	; () banked
 15001  003C2C  6F94               	movwf	___fttol@exp1& (0+255),b
 15002  003C2E  0100               	movlb	0	; () banked
 15003  003C30  5194               	movf	___fttol@exp1& (0+255),w,b
 15004  003C32  A4D8               	btfss	status,2,c
 15005  003C34  D00A               	goto	l6139
 15006                           
 15007                           ; BSR set to: 0
 15008  003C36  0E00               	movlw	0
 15009  003C38  0100               	movlb	0	; () banked
 15010  003C3A  6F86               	movwf	?___fttol& (0+255),b
 15011  003C3C  0E00               	movlw	0
 15012  003C3E  6F87               	movwf	(?___fttol+1)& (0+255),b
 15013  003C40  0E00               	movlw	0
 15014  003C42  6F88               	movwf	(?___fttol+2)& (0+255),b
 15015  003C44  0E00               	movlw	0
 15016  003C46  6F89               	movwf	(?___fttol+3)& (0+255),b
 15017                           
 15018                           ; BSR set to: 0
 15019  003C48  0012               	return	
 15020  003C4A                     l6139:
 15021                           
 15022                           ; BSR set to: 0
 15023  003C4A  0E17               	movlw	23
 15024  003C4C  0100               	movlb	0	; () banked
 15025  003C4E  6F8A               	movwf	??___fttol& (0+255),b
 15026  003C50  C086  F08B         	movff	___fttol@f1,??___fttol+1
 15027  003C54  C087  F08C         	movff	___fttol@f1+1,??___fttol+2
 15028  003C58  C088  F08D         	movff	___fttol@f1+2,??___fttol+3
 15029  003C5C  0100               	movlb	0	; () banked
 15030  003C5E  298A               	incf	??___fttol& (0+255),w,b
 15031  003C60  0100               	movlb	0	; () banked
 15032  003C62  6F8E               	movwf	(??___fttol+4)& (0+255),b
 15033  003C64  D005               	goto	u5890
 15034  003C66                     u5895:
 15035  003C66  0100               	movlb	0	; () banked
 15036  003C68  90D8               	bcf	status,0,c
 15037  003C6A  338D               	rrcf	(??___fttol+3)& (0+255),f,b
 15038  003C6C  338C               	rrcf	(??___fttol+2)& (0+255),f,b
 15039  003C6E  338B               	rrcf	(??___fttol+1)& (0+255),f,b
 15040  003C70                     u5890:
 15041  003C70  0100               	movlb	0	; () banked
 15042  003C72  2F8E               	decfsz	(??___fttol+4)& (0+255),f,b
 15043  003C74  D7F8               	goto	u5895
 15044  003C76  0100               	movlb	0	; () banked
 15045  003C78  518B               	movf	(??___fttol+1)& (0+255),w,b
 15046  003C7A  0100               	movlb	0	; () banked
 15047  003C7C  6F8F               	movwf	___fttol@sign1& (0+255),b
 15048                           
 15049                           ; BSR set to: 0
 15050  003C7E  0100               	movlb	0	; () banked
 15051  003C80  8F87               	bsf	(___fttol@f1+1)& (0+255),7,b
 15052                           
 15053                           ; BSR set to: 0
 15054  003C82  0EFF               	movlw	255
 15055  003C84  0100               	movlb	0	; () banked
 15056  003C86  1786               	andwf	___fttol@f1& (0+255),f,b
 15057  003C88  0EFF               	movlw	255
 15058  003C8A  0100               	movlb	0	; () banked
 15059  003C8C  1787               	andwf	(___fttol@f1+1)& (0+255),f,b
 15060  003C8E  0E00               	movlw	0
 15061  003C90  0100               	movlb	0	; () banked
 15062  003C92  1788               	andwf	(___fttol@f1+2)& (0+255),f,b
 15063                           
 15064                           ; BSR set to: 0
 15065  003C94  0100               	movlb	0	; () banked
 15066  003C96  5186               	movf	___fttol@f1& (0+255),w,b
 15067  003C98  0100               	movlb	0	; () banked
 15068  003C9A  6F90               	movwf	___fttol@lval& (0+255),b
 15069  003C9C  0100               	movlb	0	; () banked
 15070  003C9E  5187               	movf	(___fttol@f1+1)& (0+255),w,b
 15071  003CA0  0100               	movlb	0	; () banked
 15072  003CA2  6F91               	movwf	(___fttol@lval+1)& (0+255),b
 15073  003CA4  0100               	movlb	0	; () banked
 15074  003CA6  5188               	movf	(___fttol@f1+2)& (0+255),w,b
 15075  003CA8  0100               	movlb	0	; () banked
 15076  003CAA  6F92               	movwf	(___fttol@lval+2)& (0+255),b
 15077  003CAC  0100               	movlb	0	; () banked
 15078  003CAE  6B93               	clrf	(___fttol@lval+3)& (0+255),b
 15079                           
 15080                           ; BSR set to: 0
 15081  003CB0  0E8E               	movlw	142
 15082  003CB2  0100               	movlb	0	; () banked
 15083  003CB4  5F94               	subwf	___fttol@exp1& (0+255),f,b
 15084                           
 15085                           ; BSR set to: 0
 15086  003CB6  0100               	movlb	0	; () banked
 15087  003CB8  AF94               	btfss	___fttol@exp1& (0+255),7,b
 15088  003CBA  D01B               	goto	l6161
 15089                           
 15090                           ; BSR set to: 0
 15091  003CBC  0100               	movlb	0	; () banked
 15092  003CBE  5194               	movf	___fttol@exp1& (0+255),w,b
 15093  003CC0  0A80               	xorlw	128
 15094  003CC2  0F8F               	addlw	143
 15095  003CC4  B0D8               	btfsc	status,0,c
 15096  003CC6  D00B               	goto	l6157
 15097                           
 15098                           ; BSR set to: 0
 15099  003CC8  0E00               	movlw	0
 15100  003CCA  0100               	movlb	0	; () banked
 15101  003CCC  6F86               	movwf	?___fttol& (0+255),b
 15102  003CCE  0E00               	movlw	0
 15103  003CD0  6F87               	movwf	(?___fttol+1)& (0+255),b
 15104  003CD2  0E00               	movlw	0
 15105  003CD4  6F88               	movwf	(?___fttol+2)& (0+255),b
 15106  003CD6  0E00               	movlw	0
 15107  003CD8  6F89               	movwf	(?___fttol+3)& (0+255),b
 15108                           
 15109                           ; BSR set to: 0
 15110  003CDA  0012               	return	
 15111                           
 15112                           ; BSR set to: 0
 15113  003CDC  D000               	goto	l6157
 15114  003CDE                     l6157:
 15115                           
 15116                           ; BSR set to: 0
 15117  003CDE  0100               	movlb	0	; () banked
 15118  003CE0  90D8               	bcf	status,0,c
 15119  003CE2  3393               	rrcf	(___fttol@lval+3)& (0+255),f,b
 15120  003CE4  3392               	rrcf	(___fttol@lval+2)& (0+255),f,b
 15121  003CE6  3391               	rrcf	(___fttol@lval+1)& (0+255),f,b
 15122  003CE8  3390               	rrcf	___fttol@lval& (0+255),f,b
 15123                           
 15124                           ; BSR set to: 0
 15125  003CEA  0100               	movlb	0	; () banked
 15126  003CEC  3F94               	incfsz	___fttol@exp1& (0+255),f,b
 15127  003CEE  D7F7               	goto	l6157
 15128                           
 15129                           ; BSR set to: 0
 15130  003CF0  D01F               	goto	l6171
 15131  003CF2                     l6161:
 15132                           
 15133                           ; BSR set to: 0
 15134  003CF2  0E17               	movlw	23
 15135  003CF4  0100               	movlb	0	; () banked
 15136  003CF6  6594               	cpfsgt	___fttol@exp1& (0+255),b
 15137  003CF8  D014               	goto	l6169
 15138                           
 15139                           ; BSR set to: 0
 15140  003CFA  0E00               	movlw	0
 15141  003CFC  0100               	movlb	0	; () banked
 15142  003CFE  6F86               	movwf	?___fttol& (0+255),b
 15143  003D00  0E00               	movlw	0
 15144  003D02  6F87               	movwf	(?___fttol+1)& (0+255),b
 15145  003D04  0E00               	movlw	0
 15146  003D06  6F88               	movwf	(?___fttol+2)& (0+255),b
 15147  003D08  0E00               	movlw	0
 15148  003D0A  6F89               	movwf	(?___fttol+3)& (0+255),b
 15149                           
 15150                           ; BSR set to: 0
 15151  003D0C  0012               	return	
 15152                           
 15153                           ; BSR set to: 0
 15154  003D0E  D009               	goto	l6169
 15155  003D10                     l6167:
 15156                           
 15157                           ; BSR set to: 0
 15158  003D10  0100               	movlb	0	; () banked
 15159  003D12  90D8               	bcf	status,0,c
 15160  003D14  3790               	rlcf	___fttol@lval& (0+255),f,b
 15161  003D16  3791               	rlcf	(___fttol@lval+1)& (0+255),f,b
 15162  003D18  3792               	rlcf	(___fttol@lval+2)& (0+255),f,b
 15163  003D1A  3793               	rlcf	(___fttol@lval+3)& (0+255),f,b
 15164  003D1C  0100               	movlb	0	; () banked
 15165  003D1E  0794               	decf	___fttol@exp1& (0+255),f,b
 15166  003D20  D000               	goto	l6169
 15167  003D22                     l6169:
 15168                           
 15169                           ; BSR set to: 0
 15170  003D22  0100               	movlb	0	; () banked
 15171  003D24  5194               	movf	___fttol@exp1& (0+255),w,b
 15172  003D26  0100               	movlb	0	; () banked
 15173  003D28  B4D8               	btfsc	status,2,c
 15174  003D2A  D002               	goto	l6171
 15175  003D2C  D7F1               	goto	l6167
 15176                           
 15177                           ; BSR set to: 0
 15178  003D2E  D000               	goto	l6171
 15179  003D30                     l6171:
 15180                           
 15181                           ; BSR set to: 0
 15182  003D30  0100               	movlb	0	; () banked
 15183  003D32  518F               	movf	___fttol@sign1& (0+255),w,b
 15184  003D34  0100               	movlb	0	; () banked
 15185  003D36  B4D8               	btfsc	status,2,c
 15186  003D38  D00A               	goto	l6175
 15187                           
 15188                           ; BSR set to: 0
 15189  003D3A  0100               	movlb	0	; () banked
 15190  003D3C  1F93               	comf	(___fttol@lval+3)& (0+255),f,b
 15191  003D3E  1F92               	comf	(___fttol@lval+2)& (0+255),f,b
 15192  003D40  1F91               	comf	(___fttol@lval+1)& (0+255),f,b
 15193  003D42  6D90               	negf	___fttol@lval& (0+255),b
 15194  003D44  0E00               	movlw	0
 15195  003D46  2391               	addwfc	(___fttol@lval+1)& (0+255),f,b
 15196  003D48  2392               	addwfc	(___fttol@lval+2)& (0+255),f,b
 15197  003D4A  2393               	addwfc	(___fttol@lval+3)& (0+255),f,b
 15198  003D4C  D000               	goto	l6175
 15199  003D4E                     l6175:
 15200                           
 15201                           ; BSR set to: 0
 15202  003D4E  C090  F086         	movff	___fttol@lval,?___fttol
 15203  003D52  C091  F087         	movff	___fttol@lval+1,?___fttol+1
 15204  003D56  C092  F088         	movff	___fttol@lval+2,?___fttol+2
 15205  003D5A  C093  F089         	movff	___fttol@lval+3,?___fttol+3
 15206  003D5E  0012               	return	
 15207                           
 15208                           ; BSR set to: 0
 15209                           
 15210                           ; BSR set to: 0
 15211  003D60  0012               	return		;funcret
 15212  003D62                     __end_of___fttol:
 15213                           	opt stack 0
 15214                           tblptru	equ	0xFF8
 15215                           tblptrh	equ	0xFF7
 15216                           tblptrl	equ	0xFF6
 15217                           tablat	equ	0xFF5
 15218                           prodh	equ	0xFF4
 15219                           prodl	equ	0xFF3
 15220                           intcon	equ	0xFF2
 15221                           intcon2	equ	0xFF1
 15222                           indf0	equ	0xFEF
 15223                           postinc0	equ	0xFEE
 15224                           plusw0	equ	0xFEB
 15225                           fsr0h	equ	0xFEA
 15226                           fsr0l	equ	0xFE9
 15227                           wreg	equ	0xFE8
 15228                           indf1	equ	0xFE7
 15229                           postdec1	equ	0xFE5
 15230                           fsr1h	equ	0xFE2
 15231                           fsr1l	equ	0xFE1
 15232                           indf2	equ	0xFDF
 15233                           postinc2	equ	0xFDE
 15234                           postdec2	equ	0xFDD
 15235                           plusw2	equ	0xFDB
 15236                           fsr2h	equ	0xFDA
 15237                           fsr2l	equ	0xFD9
 15238                           status	equ	0xFD8
 15239                           
 15240 ;; *************** function ___ftadd *****************
 15241 ;; Defined at:
 15242 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
 15243 ;; Parameters:    Size  Location     Type
 15244 ;;  f1              3   26[BANK0 ] float 
 15245 ;;  f2              3   29[BANK0 ] float 
 15246 ;; Auto vars:     Size  Location     Type
 15247 ;;  exp1            1   37[BANK0 ] unsigned char 
 15248 ;;  exp2            1   36[BANK0 ] unsigned char 
 15249 ;;  sign            1   35[BANK0 ] unsigned char 
 15250 ;; Return value:  Size  Location     Type
 15251 ;;                  3   26[BANK0 ] float 
 15252 ;; Registers used:
 15253 ;;		wreg, status,2, status,0, cstack
 15254 ;; Tracked objects:
 15255 ;;		On entry : 0/0
 15256 ;;		On exit  : 0/0
 15257 ;;		Unchanged: 0/0
 15258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15259 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15260 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15261 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15262 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15263 ;;Total ram usage:       12 bytes
 15264 ;; Hardware stack levels used:    1
 15265 ;; Hardware stack levels required when called:    7
 15266 ;; This function calls:
 15267 ;;		___ftpack
 15268 ;; This function is called by:
 15269 ;;		_Round
 15270 ;; This function uses a non-reentrant model
 15271 ;;
 15272                           
 15273                           	psect	text43
 15274  0031FC                     __ptext43:
 15275                           	opt stack 0
 15276  0031FC                     ___ftadd:
 15277                           	opt stack 20
 15278                           
 15279                           ; BSR set to: 0
 15280                           ;incstack = 0
 15281  0031FC  C07C  F080         	movff	___ftadd@f1+2,??___ftadd
 15282  003200  0100               	movlb	0	; () banked
 15283  003202  6B81               	clrf	(??___ftadd+1)& (0+255),b
 15284  003204  6B82               	clrf	(??___ftadd+2)& (0+255),b
 15285  003206  0100               	movlb	0	; () banked
 15286  003208  357B               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 15287  00320A  0100               	movlb	0	; () banked
 15288  00320C  3780               	rlcf	??___ftadd& (0+255),f,b
 15289  00320E  E301               	bnc	u5661
 15290  003210  8181               	bsf	(??___ftadd+1)& (0+255),0,b
 15291  003212                     u5661:
 15292  003212  0100               	movlb	0	; () banked
 15293  003214  5180               	movf	??___ftadd& (0+255),w,b
 15294  003216  0100               	movlb	0	; () banked
 15295  003218  6F85               	movwf	___ftadd@exp1& (0+255),b
 15296  00321A  C07F  F080         	movff	___ftadd@f2+2,??___ftadd
 15297  00321E  0100               	movlb	0	; () banked
 15298  003220  6B81               	clrf	(??___ftadd+1)& (0+255),b
 15299  003222  6B82               	clrf	(??___ftadd+2)& (0+255),b
 15300  003224  0100               	movlb	0	; () banked
 15301  003226  357E               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 15302  003228  0100               	movlb	0	; () banked
 15303  00322A  3780               	rlcf	??___ftadd& (0+255),f,b
 15304  00322C  E301               	bnc	u5671
 15305  00322E  8181               	bsf	(??___ftadd+1)& (0+255),0,b
 15306  003230                     u5671:
 15307  003230  0100               	movlb	0	; () banked
 15308  003232  5180               	movf	??___ftadd& (0+255),w,b
 15309  003234  0100               	movlb	0	; () banked
 15310  003236  6F84               	movwf	___ftadd@exp2& (0+255),b
 15311                           
 15312                           ; BSR set to: 0
 15313  003238  0100               	movlb	0	; () banked
 15314  00323A  5185               	movf	___ftadd@exp1& (0+255),w,b
 15315  00323C  0100               	movlb	0	; () banked
 15316  00323E  B4D8               	btfsc	status,2,c
 15317  003240  D011               	goto	l2028
 15318                           
 15319                           ; BSR set to: 0
 15320  003242  0100               	movlb	0	; () banked
 15321  003244  5184               	movf	___ftadd@exp2& (0+255),w,b
 15322  003246  0100               	movlb	0	; () banked
 15323  003248  5D85               	subwf	___ftadd@exp1& (0+255),w,b
 15324  00324A  B0D8               	btfsc	status,0,c
 15325  00324C  D012               	goto	l6071
 15326                           
 15327                           ; BSR set to: 0
 15328  00324E  0100               	movlb	0	; () banked
 15329  003250  5185               	movf	___ftadd@exp1& (0+255),w,b
 15330  003252  0800               	sublw	0
 15331  003254  0100               	movlb	0	; () banked
 15332  003256  2584               	addwf	___ftadd@exp2& (0+255),w,b
 15333  003258  0100               	movlb	0	; () banked
 15334  00325A  6F80               	movwf	??___ftadd& (0+255),b
 15335  00325C  0E18               	movlw	24
 15336  00325E  0100               	movlb	0	; () banked
 15337  003260  6580               	cpfsgt	??___ftadd& (0+255),b
 15338  003262  D007               	goto	l6071
 15339  003264                     l2028:
 15340                           
 15341                           ; BSR set to: 0
 15342  003264  C07D  F07A         	movff	___ftadd@f2,?___ftadd
 15343  003268  C07E  F07B         	movff	___ftadd@f2+1,?___ftadd+1
 15344  00326C  C07F  F07C         	movff	___ftadd@f2+2,?___ftadd+2
 15345  003270  0012               	return	
 15346  003272                     l6071:
 15347                           
 15348                           ; BSR set to: 0
 15349  003272  0100               	movlb	0	; () banked
 15350  003274  5184               	movf	___ftadd@exp2& (0+255),w,b
 15351  003276  0100               	movlb	0	; () banked
 15352  003278  B4D8               	btfsc	status,2,c
 15353  00327A  D011               	goto	l2032
 15354                           
 15355                           ; BSR set to: 0
 15356  00327C  0100               	movlb	0	; () banked
 15357  00327E  5185               	movf	___ftadd@exp1& (0+255),w,b
 15358  003280  0100               	movlb	0	; () banked
 15359  003282  5D84               	subwf	___ftadd@exp2& (0+255),w,b
 15360  003284  B0D8               	btfsc	status,0,c
 15361  003286  D012               	goto	l6077
 15362                           
 15363                           ; BSR set to: 0
 15364  003288  0100               	movlb	0	; () banked
 15365  00328A  5184               	movf	___ftadd@exp2& (0+255),w,b
 15366  00328C  0800               	sublw	0
 15367  00328E  0100               	movlb	0	; () banked
 15368  003290  2585               	addwf	___ftadd@exp1& (0+255),w,b
 15369  003292  0100               	movlb	0	; () banked
 15370  003294  6F80               	movwf	??___ftadd& (0+255),b
 15371  003296  0E18               	movlw	24
 15372  003298  0100               	movlb	0	; () banked
 15373  00329A  6580               	cpfsgt	??___ftadd& (0+255),b
 15374  00329C  D007               	goto	l6077
 15375  00329E                     l2032:
 15376                           
 15377                           ; BSR set to: 0
 15378  00329E  C07A  F07A         	movff	___ftadd@f1,?___ftadd
 15379  0032A2  C07B  F07B         	movff	___ftadd@f1+1,?___ftadd+1
 15380  0032A6  C07C  F07C         	movff	___ftadd@f1+2,?___ftadd+2
 15381  0032AA  0012               	return	
 15382  0032AC                     l6077:
 15383                           
 15384                           ; BSR set to: 0
 15385  0032AC  0E06               	movlw	6
 15386  0032AE  0100               	movlb	0	; () banked
 15387  0032B0  6F83               	movwf	___ftadd@sign& (0+255),b
 15388                           
 15389                           ; BSR set to: 0
 15390  0032B2  0100               	movlb	0	; () banked
 15391  0032B4  AF7C               	btfss	(___ftadd@f1+2)& (0+255),7,b
 15392  0032B6  D003               	goto	l6083
 15393                           
 15394                           ; BSR set to: 0
 15395  0032B8  0100               	movlb	0	; () banked
 15396  0032BA  8F83               	bsf	___ftadd@sign& (0+255),7,b
 15397  0032BC  D000               	goto	l6083
 15398  0032BE                     l6083:
 15399                           
 15400                           ; BSR set to: 0
 15401  0032BE  0100               	movlb	0	; () banked
 15402  0032C0  AF7F               	btfss	(___ftadd@f2+2)& (0+255),7,b
 15403  0032C2  D002               	goto	l2034
 15404                           
 15405                           ; BSR set to: 0
 15406  0032C4  0100               	movlb	0	; () banked
 15407  0032C6  8D83               	bsf	___ftadd@sign& (0+255),6,b
 15408  0032C8                     l2034:
 15409                           
 15410                           ; BSR set to: 0
 15411  0032C8  0100               	movlb	0	; () banked
 15412  0032CA  8F7B               	bsf	(___ftadd@f1+1)& (0+255),7,b
 15413                           
 15414                           ; BSR set to: 0
 15415  0032CC  0EFF               	movlw	255
 15416  0032CE  0100               	movlb	0	; () banked
 15417  0032D0  177A               	andwf	___ftadd@f1& (0+255),f,b
 15418  0032D2  0EFF               	movlw	255
 15419  0032D4  0100               	movlb	0	; () banked
 15420  0032D6  177B               	andwf	(___ftadd@f1+1)& (0+255),f,b
 15421  0032D8  0E00               	movlw	0
 15422  0032DA  0100               	movlb	0	; () banked
 15423  0032DC  177C               	andwf	(___ftadd@f1+2)& (0+255),f,b
 15424  0032DE  0100               	movlb	0	; () banked
 15425  0032E0  8F7E               	bsf	(___ftadd@f2+1)& (0+255),7,b
 15426                           
 15427                           ; BSR set to: 0
 15428  0032E2  0EFF               	movlw	255
 15429  0032E4  0100               	movlb	0	; () banked
 15430  0032E6  177D               	andwf	___ftadd@f2& (0+255),f,b
 15431  0032E8  0EFF               	movlw	255
 15432  0032EA  0100               	movlb	0	; () banked
 15433  0032EC  177E               	andwf	(___ftadd@f2+1)& (0+255),f,b
 15434  0032EE  0E00               	movlw	0
 15435  0032F0  0100               	movlb	0	; () banked
 15436  0032F2  177F               	andwf	(___ftadd@f2+2)& (0+255),f,b
 15437                           
 15438                           ; BSR set to: 0
 15439  0032F4  0100               	movlb	0	; () banked
 15440  0032F6  5184               	movf	___ftadd@exp2& (0+255),w,b
 15441  0032F8  0100               	movlb	0	; () banked
 15442  0032FA  5D85               	subwf	___ftadd@exp1& (0+255),w,b
 15443  0032FC  B0D8               	btfsc	status,0,c
 15444  0032FE  D028               	goto	l6103
 15445  003300                     l6093:
 15446                           
 15447                           ; BSR set to: 0
 15448  003300  0100               	movlb	0	; () banked
 15449  003302  90D8               	bcf	status,0,c
 15450  003304  377D               	rlcf	___ftadd@f2& (0+255),f,b
 15451  003306  377E               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 15452  003308  377F               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 15453  00330A  0100               	movlb	0	; () banked
 15454  00330C  0784               	decf	___ftadd@exp2& (0+255),f,b
 15455                           
 15456                           ; BSR set to: 0
 15457  00330E  0100               	movlb	0	; () banked
 15458  003310  5185               	movf	___ftadd@exp1& (0+255),w,b
 15459  003312  0100               	movlb	0	; () banked
 15460  003314  1984               	xorwf	___ftadd@exp2& (0+255),w,b
 15461  003316  B4D8               	btfsc	status,2,c
 15462  003318  D013               	goto	l6101
 15463                           
 15464                           ; BSR set to: 0
 15465  00331A  0100               	movlb	0	; () banked
 15466  00331C  0783               	decf	___ftadd@sign& (0+255),f,b
 15467  00331E  C083  F080         	movff	___ftadd@sign,??___ftadd
 15468  003322  0E07               	movlw	7
 15469  003324  0100               	movlb	0	; () banked
 15470  003326  1780               	andwf	??___ftadd& (0+255),f,b
 15471  003328  B4D8               	btfsc	status,2,c
 15472  00332A  D00A               	goto	l6101
 15473  00332C  D7E9               	goto	l6093
 15474                           
 15475                           ; BSR set to: 0
 15476                           
 15477                           ; BSR set to: 0
 15478  00332E  D008               	goto	l6101
 15479  003330                     l6099:
 15480                           
 15481                           ; BSR set to: 0
 15482  003330  0100               	movlb	0	; () banked
 15483  003332  90D8               	bcf	status,0,c
 15484  003334  337C               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 15485  003336  337B               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 15486  003338  337A               	rrcf	___ftadd@f1& (0+255),f,b
 15487  00333A  0100               	movlb	0	; () banked
 15488  00333C  2B85               	incf	___ftadd@exp1& (0+255),f,b
 15489  00333E  D000               	goto	l6101
 15490  003340                     l6101:
 15491                           
 15492                           ; BSR set to: 0
 15493  003340  0100               	movlb	0	; () banked
 15494  003342  5184               	movf	___ftadd@exp2& (0+255),w,b
 15495  003344  0100               	movlb	0	; () banked
 15496  003346  1985               	xorwf	___ftadd@exp1& (0+255),w,b
 15497  003348  B4D8               	btfsc	status,2,c
 15498  00334A  D030               	goto	l2043
 15499  00334C  D7F1               	goto	l6099
 15500                           
 15501                           ; BSR set to: 0
 15502  00334E  D02E               	goto	l2043
 15503  003350                     l6103:
 15504                           
 15505                           ; BSR set to: 0
 15506  003350  0100               	movlb	0	; () banked
 15507  003352  5185               	movf	___ftadd@exp1& (0+255),w,b
 15508  003354  0100               	movlb	0	; () banked
 15509  003356  5D84               	subwf	___ftadd@exp2& (0+255),w,b
 15510  003358  B0D8               	btfsc	status,0,c
 15511  00335A  D028               	goto	l2043
 15512  00335C                     l6105:
 15513                           
 15514                           ; BSR set to: 0
 15515  00335C  0100               	movlb	0	; () banked
 15516  00335E  90D8               	bcf	status,0,c
 15517  003360  377A               	rlcf	___ftadd@f1& (0+255),f,b
 15518  003362  377B               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 15519  003364  377C               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 15520  003366  0100               	movlb	0	; () banked
 15521  003368  0785               	decf	___ftadd@exp1& (0+255),f,b
 15522                           
 15523                           ; BSR set to: 0
 15524  00336A  0100               	movlb	0	; () banked
 15525  00336C  5185               	movf	___ftadd@exp1& (0+255),w,b
 15526  00336E  0100               	movlb	0	; () banked
 15527  003370  1984               	xorwf	___ftadd@exp2& (0+255),w,b
 15528  003372  B4D8               	btfsc	status,2,c
 15529  003374  D013               	goto	l6113
 15530                           
 15531                           ; BSR set to: 0
 15532  003376  0100               	movlb	0	; () banked
 15533  003378  0783               	decf	___ftadd@sign& (0+255),f,b
 15534  00337A  C083  F080         	movff	___ftadd@sign,??___ftadd
 15535  00337E  0E07               	movlw	7
 15536  003380  0100               	movlb	0	; () banked
 15537  003382  1780               	andwf	??___ftadd& (0+255),f,b
 15538  003384  B4D8               	btfsc	status,2,c
 15539  003386  D00A               	goto	l6113
 15540  003388  D7E9               	goto	l6105
 15541                           
 15542                           ; BSR set to: 0
 15543                           
 15544                           ; BSR set to: 0
 15545  00338A  D008               	goto	l6113
 15546  00338C                     l6111:
 15547                           
 15548                           ; BSR set to: 0
 15549  00338C  0100               	movlb	0	; () banked
 15550  00338E  90D8               	bcf	status,0,c
 15551  003390  337F               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 15552  003392  337E               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 15553  003394  337D               	rrcf	___ftadd@f2& (0+255),f,b
 15554  003396  0100               	movlb	0	; () banked
 15555  003398  2B84               	incf	___ftadd@exp2& (0+255),f,b
 15556  00339A  D000               	goto	l6113
 15557  00339C                     l6113:
 15558                           
 15559                           ; BSR set to: 0
 15560  00339C  0100               	movlb	0	; () banked
 15561  00339E  5184               	movf	___ftadd@exp2& (0+255),w,b
 15562  0033A0  0100               	movlb	0	; () banked
 15563  0033A2  1985               	xorwf	___ftadd@exp1& (0+255),w,b
 15564  0033A4  B4D8               	btfsc	status,2,c
 15565  0033A6  D002               	goto	l2043
 15566  0033A8  D7F1               	goto	l6111
 15567                           
 15568                           ; BSR set to: 0
 15569  0033AA  D000               	goto	l2043
 15570  0033AC                     l2043:
 15571                           
 15572                           ; BSR set to: 0
 15573  0033AC  0100               	movlb	0	; () banked
 15574  0033AE  AF83               	btfss	___ftadd@sign& (0+255),7,b
 15575  0033B0  D012               	goto	l2052
 15576                           
 15577                           ; BSR set to: 0
 15578  0033B2  0EFF               	movlw	255
 15579  0033B4  0100               	movlb	0	; () banked
 15580  0033B6  1B7A               	xorwf	___ftadd@f1& (0+255),f,b
 15581  0033B8  0EFF               	movlw	255
 15582  0033BA  0100               	movlb	0	; () banked
 15583  0033BC  1B7B               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 15584  0033BE  0EFF               	movlw	255
 15585  0033C0  0100               	movlb	0	; () banked
 15586  0033C2  1B7C               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 15587  0033C4  0E01               	movlw	1
 15588  0033C6  0100               	movlb	0	; () banked
 15589  0033C8  277A               	addwf	___ftadd@f1& (0+255),f,b
 15590  0033CA  0E00               	movlw	0
 15591  0033CC  0100               	movlb	0	; () banked
 15592  0033CE  237B               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 15593  0033D0  0E00               	movlw	0
 15594  0033D2  0100               	movlb	0	; () banked
 15595  0033D4  237C               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 15596  0033D6                     l2052:
 15597                           
 15598                           ; BSR set to: 0
 15599  0033D6  0100               	movlb	0	; () banked
 15600  0033D8  AD83               	btfss	___ftadd@sign& (0+255),6,b
 15601  0033DA  D013               	goto	l6119
 15602                           
 15603                           ; BSR set to: 0
 15604  0033DC  0EFF               	movlw	255
 15605  0033DE  0100               	movlb	0	; () banked
 15606  0033E0  1B7D               	xorwf	___ftadd@f2& (0+255),f,b
 15607  0033E2  0EFF               	movlw	255
 15608  0033E4  0100               	movlb	0	; () banked
 15609  0033E6  1B7E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 15610  0033E8  0EFF               	movlw	255
 15611  0033EA  0100               	movlb	0	; () banked
 15612  0033EC  1B7F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 15613  0033EE  0E01               	movlw	1
 15614  0033F0  0100               	movlb	0	; () banked
 15615  0033F2  277D               	addwf	___ftadd@f2& (0+255),f,b
 15616  0033F4  0E00               	movlw	0
 15617  0033F6  0100               	movlb	0	; () banked
 15618  0033F8  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15619  0033FA  0E00               	movlw	0
 15620  0033FC  0100               	movlb	0	; () banked
 15621  0033FE  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15622  003400  D000               	goto	l6119
 15623  003402                     l6119:
 15624                           
 15625                           ; BSR set to: 0
 15626  003402  0E00               	movlw	0
 15627  003404  0100               	movlb	0	; () banked
 15628  003406  6F83               	movwf	___ftadd@sign& (0+255),b
 15629                           
 15630                           ; BSR set to: 0
 15631  003408  0100               	movlb	0	; () banked
 15632  00340A  517A               	movf	___ftadd@f1& (0+255),w,b
 15633  00340C  0100               	movlb	0	; () banked
 15634  00340E  277D               	addwf	___ftadd@f2& (0+255),f,b
 15635  003410  0100               	movlb	0	; () banked
 15636  003412  517B               	movf	(___ftadd@f1+1)& (0+255),w,b
 15637  003414  0100               	movlb	0	; () banked
 15638  003416  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15639  003418  0100               	movlb	0	; () banked
 15640  00341A  517C               	movf	(___ftadd@f1+2)& (0+255),w,b
 15641  00341C  0100               	movlb	0	; () banked
 15642  00341E  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15643                           
 15644                           ; BSR set to: 0
 15645  003420  0100               	movlb	0	; () banked
 15646  003422  AF7F               	btfss	(___ftadd@f2+2)& (0+255),7,b
 15647  003424  D016               	goto	l6129
 15648                           
 15649                           ; BSR set to: 0
 15650  003426  0EFF               	movlw	255
 15651  003428  0100               	movlb	0	; () banked
 15652  00342A  1B7D               	xorwf	___ftadd@f2& (0+255),f,b
 15653  00342C  0EFF               	movlw	255
 15654  00342E  0100               	movlb	0	; () banked
 15655  003430  1B7E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 15656  003432  0EFF               	movlw	255
 15657  003434  0100               	movlb	0	; () banked
 15658  003436  1B7F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 15659  003438  0E01               	movlw	1
 15660  00343A  0100               	movlb	0	; () banked
 15661  00343C  277D               	addwf	___ftadd@f2& (0+255),f,b
 15662  00343E  0E00               	movlw	0
 15663  003440  0100               	movlb	0	; () banked
 15664  003442  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15665  003444  0E00               	movlw	0
 15666  003446  0100               	movlb	0	; () banked
 15667  003448  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15668                           
 15669                           ; BSR set to: 0
 15670  00344A  0E01               	movlw	1
 15671  00344C  0100               	movlb	0	; () banked
 15672  00344E  6F83               	movwf	___ftadd@sign& (0+255),b
 15673  003450  D000               	goto	l6129
 15674  003452                     l6129:
 15675                           
 15676                           ; BSR set to: 0
 15677  003452  C07D  F072         	movff	___ftadd@f2,___ftpack@arg
 15678  003456  C07E  F073         	movff	___ftadd@f2+1,___ftpack@arg+1
 15679  00345A  C07F  F074         	movff	___ftadd@f2+2,___ftpack@arg+2
 15680  00345E  C085  F075         	movff	___ftadd@exp1,___ftpack@exp
 15681  003462  C083  F076         	movff	___ftadd@sign,___ftpack@sign
 15682  003466  ECF4  F01F         	call	___ftpack	;wreg free
 15683  00346A  C072  F07A         	movff	?___ftpack,?___ftadd
 15684  00346E  C073  F07B         	movff	?___ftpack+1,?___ftadd+1
 15685  003472  C074  F07C         	movff	?___ftpack+2,?___ftadd+2
 15686  003476  0012               	return	
 15687  003478  0012               	return		;funcret
 15688  00347A                     __end_of___ftadd:
 15689                           	opt stack 0
 15690                           tblptru	equ	0xFF8
 15691                           tblptrh	equ	0xFF7
 15692                           tblptrl	equ	0xFF6
 15693                           tablat	equ	0xFF5
 15694                           prodh	equ	0xFF4
 15695                           prodl	equ	0xFF3
 15696                           intcon	equ	0xFF2
 15697                           intcon2	equ	0xFF1
 15698                           indf0	equ	0xFEF
 15699                           postinc0	equ	0xFEE
 15700                           plusw0	equ	0xFEB
 15701                           fsr0h	equ	0xFEA
 15702                           fsr0l	equ	0xFE9
 15703                           wreg	equ	0xFE8
 15704                           indf1	equ	0xFE7
 15705                           postdec1	equ	0xFE5
 15706                           fsr1h	equ	0xFE2
 15707                           fsr1l	equ	0xFE1
 15708                           indf2	equ	0xFDF
 15709                           postinc2	equ	0xFDE
 15710                           postdec2	equ	0xFDD
 15711                           plusw2	equ	0xFDB
 15712                           fsr2h	equ	0xFDA
 15713                           fsr2l	equ	0xFD9
 15714                           status	equ	0xFD8
 15715                           
 15716 ;; *************** function ___altoft *****************
 15717 ;; Defined at:
 15718 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
 15719 ;; Parameters:    Size  Location     Type
 15720 ;;  c               4   26[BANK0 ] long 
 15721 ;; Auto vars:     Size  Location     Type
 15722 ;;  sign            1   35[BANK0 ] unsigned char 
 15723 ;;  exp             1   34[BANK0 ] unsigned char 
 15724 ;; Return value:  Size  Location     Type
 15725 ;;                  3   26[BANK0 ] float 
 15726 ;; Registers used:
 15727 ;;		wreg, status,2, status,0, cstack
 15728 ;; Tracked objects:
 15729 ;;		On entry : 0/0
 15730 ;;		On exit  : 0/0
 15731 ;;		Unchanged: 0/0
 15732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15733 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15734 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15735 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15736 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15737 ;;Total ram usage:       10 bytes
 15738 ;; Hardware stack levels used:    1
 15739 ;; Hardware stack levels required when called:    7
 15740 ;; This function calls:
 15741 ;;		___ftpack
 15742 ;; This function is called by:
 15743 ;;		_Round
 15744 ;; This function uses a non-reentrant model
 15745 ;;
 15746                           
 15747                           	psect	text44
 15748  004D8C                     __ptext44:
 15749                           	opt stack 0
 15750  004D8C                     ___altoft:
 15751                           	opt stack 20
 15752                           
 15753                           ;incstack = 0
 15754  004D8C  0E00               	movlw	0
 15755  004D8E  0100               	movlb	0	; () banked
 15756  004D90  6F83               	movwf	___altoft@sign& (0+255),b
 15757  004D92  0E8E               	movlw	142
 15758  004D94  0100               	movlb	0	; () banked
 15759  004D96  6F82               	movwf	___altoft@exp& (0+255),b
 15760                           
 15761                           ; BSR set to: 0
 15762  004D98  0100               	movlb	0	; () banked
 15763  004D9A  AF7D               	btfss	(___altoft@c+3)& (0+255),7,b
 15764  004D9C  D016               	goto	l6057
 15765                           
 15766                           ; BSR set to: 0
 15767  004D9E  0100               	movlb	0	; () banked
 15768  004DA0  1F7D               	comf	(___altoft@c+3)& (0+255),f,b
 15769  004DA2  1F7C               	comf	(___altoft@c+2)& (0+255),f,b
 15770  004DA4  1F7B               	comf	(___altoft@c+1)& (0+255),f,b
 15771  004DA6  6D7A               	negf	___altoft@c& (0+255),b
 15772  004DA8  0E00               	movlw	0
 15773  004DAA  237B               	addwfc	(___altoft@c+1)& (0+255),f,b
 15774  004DAC  237C               	addwfc	(___altoft@c+2)& (0+255),f,b
 15775  004DAE  237D               	addwfc	(___altoft@c+3)& (0+255),f,b
 15776                           
 15777                           ; BSR set to: 0
 15778  004DB0  0E01               	movlw	1
 15779  004DB2  0100               	movlb	0	; () banked
 15780  004DB4  6F83               	movwf	___altoft@sign& (0+255),b
 15781                           
 15782                           ; BSR set to: 0
 15783  004DB6  D009               	goto	l6057
 15784  004DB8                     l6055:
 15785                           
 15786                           ; BSR set to: 0
 15787  004DB8  0100               	movlb	0	; () banked
 15788  004DBA  90D8               	bcf	status,0,c
 15789  004DBC  337D               	rrcf	(___altoft@c+3)& (0+255),f,b
 15790  004DBE  337C               	rrcf	(___altoft@c+2)& (0+255),f,b
 15791  004DC0  337B               	rrcf	(___altoft@c+1)& (0+255),f,b
 15792  004DC2  337A               	rrcf	___altoft@c& (0+255),f,b
 15793  004DC4  0100               	movlb	0	; () banked
 15794  004DC6  2B82               	incf	___altoft@exp& (0+255),f,b
 15795  004DC8  D000               	goto	l6057
 15796  004DCA                     l6057:
 15797                           
 15798                           ; BSR set to: 0
 15799  004DCA  0E00               	movlw	0
 15800  004DCC  0100               	movlb	0	; () banked
 15801  004DCE  157A               	andwf	___altoft@c& (0+255),w,b
 15802  004DD0  0100               	movlb	0	; () banked
 15803  004DD2  6F7E               	movwf	??___altoft& (0+255),b
 15804  004DD4  0E00               	movlw	0
 15805  004DD6  0100               	movlb	0	; () banked
 15806  004DD8  157B               	andwf	(___altoft@c+1)& (0+255),w,b
 15807  004DDA  0100               	movlb	0	; () banked
 15808  004DDC  6F7F               	movwf	(??___altoft+1)& (0+255),b
 15809  004DDE  0E00               	movlw	0
 15810  004DE0  0100               	movlb	0	; () banked
 15811  004DE2  157C               	andwf	(___altoft@c+2)& (0+255),w,b
 15812  004DE4  0100               	movlb	0	; () banked
 15813  004DE6  6F80               	movwf	(??___altoft+2)& (0+255),b
 15814  004DE8  0EFF               	movlw	255
 15815  004DEA  0100               	movlb	0	; () banked
 15816  004DEC  157D               	andwf	(___altoft@c+3)& (0+255),w,b
 15817  004DEE  0100               	movlb	0	; () banked
 15818  004DF0  6F81               	movwf	(??___altoft+3)& (0+255),b
 15819  004DF2  0100               	movlb	0	; () banked
 15820  004DF4  517E               	movf	??___altoft& (0+255),w,b
 15821  004DF6  0100               	movlb	0	; () banked
 15822  004DF8  117F               	iorwf	(??___altoft+1)& (0+255),w,b
 15823  004DFA  0100               	movlb	0	; () banked
 15824  004DFC  1180               	iorwf	(??___altoft+2)& (0+255),w,b
 15825  004DFE  0100               	movlb	0	; () banked
 15826  004E00  1181               	iorwf	(??___altoft+3)& (0+255),w,b
 15827  004E02  A4D8               	btfss	status,2,c
 15828  004E04  D7D9               	goto	l6055
 15829                           
 15830                           ; BSR set to: 0
 15831                           
 15832                           ; BSR set to: 0
 15833  004E06  C07A  F072         	movff	___altoft@c,___ftpack@arg
 15834  004E0A  C07B  F073         	movff	___altoft@c+1,___ftpack@arg+1
 15835  004E0E  C07C  F074         	movff	___altoft@c+2,___ftpack@arg+2
 15836  004E12  C082  F075         	movff	___altoft@exp,___ftpack@exp
 15837  004E16  C083  F076         	movff	___altoft@sign,___ftpack@sign
 15838  004E1A  ECF4  F01F         	call	___ftpack	;wreg free
 15839  004E1E  C072  F07A         	movff	?___ftpack,?___altoft
 15840  004E22  C073  F07B         	movff	?___ftpack+1,?___altoft+1
 15841  004E26  C074  F07C         	movff	?___ftpack+2,?___altoft+2
 15842  004E2A  0012               	return	
 15843  004E2C  0012               	return		;funcret
 15844  004E2E                     __end_of___altoft:
 15845                           	opt stack 0
 15846                           tblptru	equ	0xFF8
 15847                           tblptrh	equ	0xFF7
 15848                           tblptrl	equ	0xFF6
 15849                           tablat	equ	0xFF5
 15850                           prodh	equ	0xFF4
 15851                           prodl	equ	0xFF3
 15852                           intcon	equ	0xFF2
 15853                           intcon2	equ	0xFF1
 15854                           indf0	equ	0xFEF
 15855                           postinc0	equ	0xFEE
 15856                           plusw0	equ	0xFEB
 15857                           fsr0h	equ	0xFEA
 15858                           fsr0l	equ	0xFE9
 15859                           wreg	equ	0xFE8
 15860                           indf1	equ	0xFE7
 15861                           postdec1	equ	0xFE5
 15862                           fsr1h	equ	0xFE2
 15863                           fsr1l	equ	0xFE1
 15864                           indf2	equ	0xFDF
 15865                           postinc2	equ	0xFDE
 15866                           postdec2	equ	0xFDD
 15867                           plusw2	equ	0xFDB
 15868                           fsr2h	equ	0xFDA
 15869                           fsr2l	equ	0xFD9
 15870                           status	equ	0xFD8
 15871                           
 15872 ;; *************** function ___ftpack *****************
 15873 ;; Defined at:
 15874 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 15875 ;; Parameters:    Size  Location     Type
 15876 ;;  arg             3   18[BANK0 ] unsigned um
 15877 ;;  exp             1   21[BANK0 ] unsigned char 
 15878 ;;  sign            1   22[BANK0 ] unsigned char 
 15879 ;; Auto vars:     Size  Location     Type
 15880 ;;		None
 15881 ;; Return value:  Size  Location     Type
 15882 ;;                  3   18[BANK0 ] float 
 15883 ;; Registers used:
 15884 ;;		wreg, status,2, status,0
 15885 ;; Tracked objects:
 15886 ;;		On entry : 0/0
 15887 ;;		On exit  : 0/0
 15888 ;;		Unchanged: 0/0
 15889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15890 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15892 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15893 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15894 ;;Total ram usage:        8 bytes
 15895 ;; Hardware stack levels used:    1
 15896 ;; Hardware stack levels required when called:    6
 15897 ;; This function calls:
 15898 ;;		Nothing
 15899 ;; This function is called by:
 15900 ;;		___altoft
 15901 ;;		___ftadd
 15902 ;;		___ftdiv
 15903 ;;		___ftmul
 15904 ;;		___lltoft
 15905 ;;		___lwtoft
 15906 ;; This function uses a non-reentrant model
 15907 ;;
 15908                           
 15909                           	psect	text45
 15910  003FE8                     __ptext45:
 15911                           	opt stack 0
 15912  003FE8                     ___ftpack:
 15913                           	opt stack 22
 15914                           
 15915                           ;incstack = 0
 15916  003FE8  0100               	movlb	0	; () banked
 15917  003FEA  5175               	movf	___ftpack@exp& (0+255),w,b
 15918  003FEC  0100               	movlb	0	; () banked
 15919  003FEE  B4D8               	btfsc	status,2,c
 15920  003FF0  D008               	goto	l5697
 15921                           
 15922                           ; BSR set to: 0
 15923  003FF2  0100               	movlb	0	; () banked
 15924  003FF4  5172               	movf	___ftpack@arg& (0+255),w,b
 15925  003FF6  0100               	movlb	0	; () banked
 15926  003FF8  1173               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 15927  003FFA  0100               	movlb	0	; () banked
 15928  003FFC  1174               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 15929  003FFE  A4D8               	btfss	status,2,c
 15930  004000  D013               	goto	l5703
 15931  004002                     l5697:
 15932                           
 15933                           ; BSR set to: 0
 15934  004002  0E00               	movlw	0
 15935  004004  0100               	movlb	0	; () banked
 15936  004006  6F72               	movwf	?___ftpack& (0+255),b
 15937  004008  0E00               	movlw	0
 15938  00400A  0100               	movlb	0	; () banked
 15939  00400C  6F73               	movwf	(?___ftpack+1)& (0+255),b
 15940  00400E  0E00               	movlw	0
 15941  004010  0100               	movlb	0	; () banked
 15942  004012  6F74               	movwf	(?___ftpack+2)& (0+255),b
 15943                           
 15944                           ; BSR set to: 0
 15945  004014  0012               	return	
 15946                           
 15947                           ; BSR set to: 0
 15948  004016  D008               	goto	l5703
 15949  004018                     l5701:
 15950                           
 15951                           ; BSR set to: 0
 15952  004018  0100               	movlb	0	; () banked
 15953  00401A  2B75               	incf	___ftpack@exp& (0+255),f,b
 15954  00401C  0100               	movlb	0	; () banked
 15955  00401E  90D8               	bcf	status,0,c
 15956  004020  3374               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15957  004022  3373               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15958  004024  3372               	rrcf	___ftpack@arg& (0+255),f,b
 15959  004026  D000               	goto	l5703
 15960  004028                     l5703:
 15961                           
 15962                           ; BSR set to: 0
 15963  004028  0E00               	movlw	0
 15964  00402A  0100               	movlb	0	; () banked
 15965  00402C  1572               	andwf	___ftpack@arg& (0+255),w,b
 15966  00402E  0100               	movlb	0	; () banked
 15967  004030  6F77               	movwf	??___ftpack& (0+255),b
 15968  004032  0E00               	movlw	0
 15969  004034  0100               	movlb	0	; () banked
 15970  004036  1573               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15971  004038  0100               	movlb	0	; () banked
 15972  00403A  6F78               	movwf	(??___ftpack+1)& (0+255),b
 15973  00403C  0EFE               	movlw	254
 15974  00403E  0100               	movlb	0	; () banked
 15975  004040  1574               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15976  004042  0100               	movlb	0	; () banked
 15977  004044  6F79               	movwf	(??___ftpack+2)& (0+255),b
 15978  004046  0100               	movlb	0	; () banked
 15979  004048  5177               	movf	??___ftpack& (0+255),w,b
 15980  00404A  0100               	movlb	0	; () banked
 15981  00404C  1178               	iorwf	(??___ftpack+1)& (0+255),w,b
 15982  00404E  0100               	movlb	0	; () banked
 15983  004050  1179               	iorwf	(??___ftpack+2)& (0+255),w,b
 15984  004052  B4D8               	btfsc	status,2,c
 15985  004054  D013               	goto	l5709
 15986  004056  D7E0               	goto	l5701
 15987                           
 15988                           ; BSR set to: 0
 15989  004058  D011               	goto	l5709
 15990  00405A                     l5705:
 15991                           
 15992                           ; BSR set to: 0
 15993  00405A  0100               	movlb	0	; () banked
 15994  00405C  2B75               	incf	___ftpack@exp& (0+255),f,b
 15995                           
 15996                           ; BSR set to: 0
 15997  00405E  0E01               	movlw	1
 15998  004060  0100               	movlb	0	; () banked
 15999  004062  2772               	addwf	___ftpack@arg& (0+255),f,b
 16000  004064  0E00               	movlw	0
 16001  004066  0100               	movlb	0	; () banked
 16002  004068  2373               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 16003  00406A  0E00               	movlw	0
 16004  00406C  0100               	movlb	0	; () banked
 16005  00406E  2374               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 16006  004070  0100               	movlb	0	; () banked
 16007  004072  90D8               	bcf	status,0,c
 16008  004074  3374               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 16009  004076  3373               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 16010  004078  3372               	rrcf	___ftpack@arg& (0+255),f,b
 16011  00407A  D000               	goto	l5709
 16012  00407C                     l5709:
 16013                           
 16014                           ; BSR set to: 0
 16015  00407C  0E00               	movlw	0
 16016  00407E  0100               	movlb	0	; () banked
 16017  004080  1572               	andwf	___ftpack@arg& (0+255),w,b
 16018  004082  0100               	movlb	0	; () banked
 16019  004084  6F77               	movwf	??___ftpack& (0+255),b
 16020  004086  0E00               	movlw	0
 16021  004088  0100               	movlb	0	; () banked
 16022  00408A  1573               	andwf	(___ftpack@arg+1)& (0+255),w,b
 16023  00408C  0100               	movlb	0	; () banked
 16024  00408E  6F78               	movwf	(??___ftpack+1)& (0+255),b
 16025  004090  0EFF               	movlw	255
 16026  004092  0100               	movlb	0	; () banked
 16027  004094  1574               	andwf	(___ftpack@arg+2)& (0+255),w,b
 16028  004096  0100               	movlb	0	; () banked
 16029  004098  6F79               	movwf	(??___ftpack+2)& (0+255),b
 16030  00409A  0100               	movlb	0	; () banked
 16031  00409C  5177               	movf	??___ftpack& (0+255),w,b
 16032  00409E  0100               	movlb	0	; () banked
 16033  0040A0  1178               	iorwf	(??___ftpack+1)& (0+255),w,b
 16034  0040A2  0100               	movlb	0	; () banked
 16035  0040A4  1179               	iorwf	(??___ftpack+2)& (0+255),w,b
 16036  0040A6  B4D8               	btfsc	status,2,c
 16037  0040A8  D00A               	goto	l5713
 16038  0040AA  D7D7               	goto	l5705
 16039                           
 16040                           ; BSR set to: 0
 16041  0040AC  D008               	goto	l5713
 16042  0040AE                     l5711:
 16043                           
 16044                           ; BSR set to: 0
 16045  0040AE  0100               	movlb	0	; () banked
 16046  0040B0  0775               	decf	___ftpack@exp& (0+255),f,b
 16047  0040B2  0100               	movlb	0	; () banked
 16048  0040B4  90D8               	bcf	status,0,c
 16049  0040B6  3772               	rlcf	___ftpack@arg& (0+255),f,b
 16050  0040B8  3773               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 16051  0040BA  3774               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 16052  0040BC  D000               	goto	l5713
 16053  0040BE                     l5713:
 16054                           
 16055                           ; BSR set to: 0
 16056  0040BE  0100               	movlb	0	; () banked
 16057  0040C0  BF73               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 16058  0040C2  D005               	goto	l1999
 16059                           
 16060                           ; BSR set to: 0
 16061  0040C4  0E02               	movlw	2
 16062  0040C6  0100               	movlb	0	; () banked
 16063  0040C8  6175               	cpfslt	___ftpack@exp& (0+255),b
 16064  0040CA  D7F1               	goto	l5711
 16065  0040CC  D000               	goto	l1999
 16066  0040CE                     l1999:
 16067                           
 16068                           ; BSR set to: 0
 16069  0040CE  0100               	movlb	0	; () banked
 16070  0040D0  B175               	btfsc	___ftpack@exp& (0+255),0,b
 16071  0040D2  D003               	goto	l5719
 16072                           
 16073                           ; BSR set to: 0
 16074  0040D4  0100               	movlb	0	; () banked
 16075  0040D6  9F73               	bcf	(___ftpack@arg+1)& (0+255),7,b
 16076  0040D8  D000               	goto	l5719
 16077  0040DA                     l5719:
 16078                           
 16079                           ; BSR set to: 0
 16080  0040DA  0100               	movlb	0	; () banked
 16081  0040DC  90D8               	bcf	status,0,c
 16082  0040DE  3375               	rrcf	___ftpack@exp& (0+255),f,b
 16083  0040E0  0100               	movlb	0	; () banked
 16084  0040E2  5175               	movf	___ftpack@exp& (0+255),w,b
 16085  0040E4  0100               	movlb	0	; () banked
 16086  0040E6  1374               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 16087                           
 16088                           ; BSR set to: 0
 16089  0040E8  0100               	movlb	0	; () banked
 16090  0040EA  5176               	movf	___ftpack@sign& (0+255),w,b
 16091  0040EC  0100               	movlb	0	; () banked
 16092  0040EE  B4D8               	btfsc	status,2,c
 16093  0040F0  D003               	goto	l5725
 16094                           
 16095                           ; BSR set to: 0
 16096  0040F2  0100               	movlb	0	; () banked
 16097  0040F4  8F74               	bsf	(___ftpack@arg+2)& (0+255),7,b
 16098  0040F6  D000               	goto	l5725
 16099  0040F8                     l5725:
 16100                           
 16101                           ; BSR set to: 0
 16102  0040F8  C072  F072         	movff	___ftpack@arg,?___ftpack
 16103  0040FC  C073  F073         	movff	___ftpack@arg+1,?___ftpack+1
 16104  004100  C074  F074         	movff	___ftpack@arg+2,?___ftpack+2
 16105  004104  0012               	return	
 16106                           
 16107                           ; BSR set to: 0
 16108                           
 16109                           ; BSR set to: 0
 16110  004106  0012               	return		;funcret
 16111  004108                     __end_of___ftpack:
 16112                           	opt stack 0
 16113                           tblptru	equ	0xFF8
 16114                           tblptrh	equ	0xFF7
 16115                           tblptrl	equ	0xFF6
 16116                           tablat	equ	0xFF5
 16117                           prodh	equ	0xFF4
 16118                           prodl	equ	0xFF3
 16119                           intcon	equ	0xFF2
 16120                           intcon2	equ	0xFF1
 16121                           indf0	equ	0xFEF
 16122                           postinc0	equ	0xFEE
 16123                           plusw0	equ	0xFEB
 16124                           fsr0h	equ	0xFEA
 16125                           fsr0l	equ	0xFE9
 16126                           wreg	equ	0xFE8
 16127                           indf1	equ	0xFE7
 16128                           postdec1	equ	0xFE5
 16129                           fsr1h	equ	0xFE2
 16130                           fsr1l	equ	0xFE1
 16131                           indf2	equ	0xFDF
 16132                           postinc2	equ	0xFDE
 16133                           postdec2	equ	0xFDD
 16134                           plusw2	equ	0xFDB
 16135                           fsr2h	equ	0xFDA
 16136                           fsr2l	equ	0xFD9
 16137                           status	equ	0xFD8
 16138                           
 16139 ;; *************** function _OpenUSART *****************
 16140 ;; Defined at:
 16141 ;;		line 112 in file "UART.c"
 16142 ;; Parameters:    Size  Location     Type
 16143 ;;  config          1    wreg     unsigned char 
 16144 ;;  spbrg           2   18[BANK0 ] unsigned int 
 16145 ;; Auto vars:     Size  Location     Type
 16146 ;;  config          1   20[BANK0 ] unsigned char 
 16147 ;; Return value:  Size  Location     Type
 16148 ;;		None               void
 16149 ;; Registers used:
 16150 ;;		wreg, status,2
 16151 ;; Tracked objects:
 16152 ;;		On entry : 0/0
 16153 ;;		On exit  : 0/0
 16154 ;;		Unchanged: 0/0
 16155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16156 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16157 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16159 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16160 ;;Total ram usage:        3 bytes
 16161 ;; Hardware stack levels used:    1
 16162 ;; Hardware stack levels required when called:    6
 16163 ;; This function calls:
 16164 ;;		Nothing
 16165 ;; This function is called by:
 16166 ;;		_InitUART
 16167 ;; This function uses a non-reentrant model
 16168 ;;
 16169                           
 16170                           	psect	text46
 16171  005176                     __ptext46:
 16172                           	opt stack 0
 16173  005176                     _OpenUSART:
 16174                           	opt stack 22
 16175                           
 16176                           ; BSR set to: 0
 16177                           ;incstack = 0
 16178                           ;OpenUSART@config stored from wreg
 16179  005176  0100               	movlb	0	; () banked
 16180  005178  6F74               	movwf	OpenUSART@config& (0+255),b
 16181                           
 16182                           ; BSR set to: 0
 16183                           ;UART.c: 114: TXSTA = 0;
 16184  00517A  0E00               	movlw	0
 16185  00517C  6EAC               	movwf	4012,c	;volatile
 16186                           
 16187                           ;UART.c: 115: RCSTA = 0;
 16188  00517E  0E00               	movlw	0
 16189  005180  6EAB               	movwf	4011,c	;volatile
 16190                           
 16191                           ; BSR set to: 0
 16192                           ;UART.c: 117: if(config&0x01)
 16193  005182  0100               	movlb	0	; () banked
 16194  005184  A174               	btfss	OpenUSART@config& (0+255),0,b
 16195  005186  D002               	goto	l6269
 16196                           
 16197                           ; BSR set to: 0
 16198                           ;UART.c: 118: {
 16199                           ;UART.c: 119: TXSTAbits.SYNC = 1;
 16200  005188  88AC               	bsf	4012,4,c	;volatile
 16201  00518A  D000               	goto	l6269
 16202  00518C                     l6269:
 16203                           
 16204                           ; BSR set to: 0
 16205                           ;UART.c: 120: }
 16206                           ;UART.c: 122: if(config&0x02)
 16207  00518C  0100               	movlb	0	; () banked
 16208  00518E  A374               	btfss	OpenUSART@config& (0+255),1,b
 16209  005190  D003               	goto	l6273
 16210                           
 16211                           ; BSR set to: 0
 16212                           ;UART.c: 123: {
 16213                           ;UART.c: 124: TXSTAbits.TX9 = 1;
 16214  005192  8CAC               	bsf	4012,6,c	;volatile
 16215                           
 16216                           ;UART.c: 125: RCSTAbits.RX9 = 1;
 16217  005194  8CAB               	bsf	4011,6,c	;volatile
 16218  005196  D000               	goto	l6273
 16219  005198                     l6273:
 16220                           
 16221                           ; BSR set to: 0
 16222                           ;UART.c: 126: }
 16223                           ;UART.c: 128: if(config&0x04)
 16224  005198  0100               	movlb	0	; () banked
 16225  00519A  A574               	btfss	OpenUSART@config& (0+255),2,b
 16226  00519C  D002               	goto	l6277
 16227                           
 16228                           ; BSR set to: 0
 16229                           ;UART.c: 129: {
 16230                           ;UART.c: 130: TXSTAbits.CSRC = 1;
 16231  00519E  8EAC               	bsf	4012,7,c	;volatile
 16232  0051A0  D000               	goto	l6277
 16233  0051A2                     l6277:
 16234                           
 16235                           ; BSR set to: 0
 16236                           ;UART.c: 131: }
 16237                           ;UART.c: 133: if(config&0x08)
 16238  0051A2  0100               	movlb	0	; () banked
 16239  0051A4  A774               	btfss	OpenUSART@config& (0+255),3,b
 16240  0051A6  D002               	goto	l385
 16241                           
 16242                           ; BSR set to: 0
 16243                           ;UART.c: 134: {
 16244                           ;UART.c: 135: RCSTAbits.CREN = 1;
 16245  0051A8  88AB               	bsf	4011,4,c	;volatile
 16246                           
 16247                           ;UART.c: 136: }
 16248  0051AA  D002               	goto	l6281
 16249  0051AC                     l385:
 16250                           
 16251                           ; BSR set to: 0
 16252                           ;UART.c: 137: else
 16253                           ;UART.c: 138: {
 16254                           ;UART.c: 139: RCSTAbits.SREN = 1;
 16255  0051AC  8AAB               	bsf	4011,5,c	;volatile
 16256  0051AE  D000               	goto	l6281
 16257  0051B0                     l6281:
 16258                           
 16259                           ; BSR set to: 0
 16260                           ;UART.c: 140: }
 16261                           ;UART.c: 142: if(config&0x10)
 16262  0051B0  0100               	movlb	0	; () banked
 16263  0051B2  A974               	btfss	OpenUSART@config& (0+255),4,b
 16264  0051B4  D002               	goto	l6285
 16265                           
 16266                           ; BSR set to: 0
 16267                           ;UART.c: 143: {
 16268                           ;UART.c: 144: TXSTAbits.BRGH = 1;
 16269  0051B6  84AC               	bsf	4012,2,c	;volatile
 16270  0051B8  D000               	goto	l6285
 16271  0051BA                     l6285:
 16272                           
 16273                           ; BSR set to: 0
 16274                           ;UART.c: 145: }
 16275                           ;UART.c: 147: if(config&0x20)
 16276  0051BA  0100               	movlb	0	; () banked
 16277  0051BC  AB74               	btfss	OpenUSART@config& (0+255),5,b
 16278  0051BE  D002               	goto	l6289
 16279                           
 16280                           ; BSR set to: 0
 16281                           ;UART.c: 148: {
 16282                           ;UART.c: 149: RCSTAbits.ADEN = 1;
 16283  0051C0  86AB               	bsf	4011,3,c	;volatile
 16284  0051C2  D000               	goto	l6289
 16285  0051C4                     l6289:
 16286                           
 16287                           ; BSR set to: 0
 16288                           ;UART.c: 150: }
 16289                           ;UART.c: 152: if(config&0x40)
 16290  0051C4  0100               	movlb	0	; () banked
 16291  0051C6  AD74               	btfss	OpenUSART@config& (0+255),6,b
 16292  0051C8  D003               	goto	l389
 16293                           
 16294                           ; BSR set to: 0
 16295                           ;UART.c: 153: {
 16296                           ;UART.c: 154: PIR1bits.RCIF = 0;
 16297  0051CA  9A9E               	bcf	3998,5,c	;volatile
 16298                           
 16299                           ;UART.c: 155: PIE1bits.RCIE = 1;
 16300  0051CC  8A9D               	bsf	3997,5,c	;volatile
 16301                           
 16302                           ;UART.c: 157: }
 16303  0051CE  D002               	goto	l6293
 16304  0051D0                     l389:
 16305                           
 16306                           ; BSR set to: 0
 16307                           ;UART.c: 158: else
 16308                           ;UART.c: 159: {
 16309                           ;UART.c: 160: PIE1bits.RCIE = 0;
 16310  0051D0  9A9D               	bcf	3997,5,c	;volatile
 16311  0051D2  D000               	goto	l6293
 16312  0051D4                     l6293:
 16313                           
 16314                           ; BSR set to: 0
 16315                           ;UART.c: 161: }
 16316                           ;UART.c: 163: if(config&0x80)
 16317  0051D4  0100               	movlb	0	; () banked
 16318  0051D6  AF74               	btfss	OpenUSART@config& (0+255),7,b
 16319  0051D8  D003               	goto	l391
 16320                           
 16321                           ; BSR set to: 0
 16322                           ;UART.c: 164: {
 16323                           ;UART.c: 165: PIR1bits.TXIF = 0;
 16324  0051DA  989E               	bcf	3998,4,c	;volatile
 16325                           
 16326                           ;UART.c: 166: PIE1bits.TXIE = 1;
 16327  0051DC  889D               	bsf	3997,4,c	;volatile
 16328                           
 16329                           ;UART.c: 167: }
 16330  0051DE  D001               	goto	l392
 16331  0051E0                     l391:
 16332                           
 16333                           ; BSR set to: 0
 16334                           ;UART.c: 168: else
 16335                           ;UART.c: 169: {
 16336                           ;UART.c: 170: PIE1bits.TXIE = 0;
 16337  0051E0  989D               	bcf	3997,4,c	;volatile
 16338  0051E2                     l392:
 16339                           
 16340                           ; BSR set to: 0
 16341                           ;UART.c: 171: }
 16342                           ;UART.c: 173: SPBRG = spbrg;
 16343  0051E2  C072  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 16344                           
 16345                           ; BSR set to: 0
 16346                           ;UART.c: 174: SPBRGH = spbrg >> 8;
 16347  0051E6  0100               	movlb	0	; () banked
 16348  0051E8  5173               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
 16349  0051EA  6EB0               	movwf	4016,c	;volatile
 16350                           
 16351                           ; BSR set to: 0
 16352                           ;UART.c: 176: TXSTAbits.TXEN = 1;
 16353  0051EC  8AAC               	bsf	4012,5,c	;volatile
 16354                           
 16355                           ; BSR set to: 0
 16356                           ;UART.c: 177: RCSTAbits.SPEN = 1;
 16357  0051EE  8EAB               	bsf	4011,7,c	;volatile
 16358                           
 16359                           ; BSR set to: 0
 16360  0051F0  0012               	return		;funcret
 16361  0051F2                     __end_of_OpenUSART:
 16362                           	opt stack 0
 16363                           tblptru	equ	0xFF8
 16364                           tblptrh	equ	0xFF7
 16365                           tblptrl	equ	0xFF6
 16366                           tablat	equ	0xFF5
 16367                           prodh	equ	0xFF4
 16368                           prodl	equ	0xFF3
 16369                           intcon	equ	0xFF2
 16370                           intcon2	equ	0xFF1
 16371                           indf0	equ	0xFEF
 16372                           postinc0	equ	0xFEE
 16373                           plusw0	equ	0xFEB
 16374                           fsr0h	equ	0xFEA
 16375                           fsr0l	equ	0xFE9
 16376                           wreg	equ	0xFE8
 16377                           indf1	equ	0xFE7
 16378                           postdec1	equ	0xFE5
 16379                           fsr1h	equ	0xFE2
 16380                           fsr1l	equ	0xFE1
 16381                           indf2	equ	0xFDF
 16382                           postinc2	equ	0xFDE
 16383                           postdec2	equ	0xFDD
 16384                           plusw2	equ	0xFDB
 16385                           fsr2h	equ	0xFDA
 16386                           fsr2l	equ	0xFD9
 16387                           status	equ	0xFD8
 16388                           
 16389 ;; *************** function _Local_CloseUSART *****************
 16390 ;; Defined at:
 16391 ;;		line 62 in file "UART.c"
 16392 ;; Parameters:    Size  Location     Type
 16393 ;;		None
 16394 ;; Auto vars:     Size  Location     Type
 16395 ;;		None
 16396 ;; Return value:  Size  Location     Type
 16397 ;;		None               void
 16398 ;; Registers used:
 16399 ;;		None
 16400 ;; Tracked objects:
 16401 ;;		On entry : 0/0
 16402 ;;		On exit  : 0/0
 16403 ;;		Unchanged: 0/0
 16404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16409 ;;Total ram usage:        0 bytes
 16410 ;; Hardware stack levels used:    1
 16411 ;; Hardware stack levels required when called:    6
 16412 ;; This function calls:
 16413 ;;		Nothing
 16414 ;; This function is called by:
 16415 ;;		_InitUART
 16416 ;; This function uses a non-reentrant model
 16417 ;;
 16418                           
 16419                           	psect	text47
 16420  005B3C                     __ptext47:
 16421                           	opt stack 0
 16422  005B3C                     _Local_CloseUSART:
 16423                           	opt stack 22
 16424                           
 16425                           ;UART.c: 64: PIE1bits.RCIE = 0;
 16426                           
 16427                           ; BSR set to: 0
 16428                           ;incstack = 0
 16429  005B3C  9A9D               	bcf	3997,5,c	;volatile
 16430                           
 16431                           ;UART.c: 65: PIE1bits.TXIE = 0;
 16432  005B3E  989D               	bcf	3997,4,c	;volatile
 16433                           
 16434                           ;UART.c: 66: RCSTAbits.SPEN = 0;
 16435  005B40  9EAB               	bcf	4011,7,c	;volatile
 16436                           
 16437                           ;UART.c: 67: RCSTAbits.CREN = 0;
 16438  005B42  98AB               	bcf	4011,4,c	;volatile
 16439                           
 16440                           ;UART.c: 68: RCSTAbits.FERR = 0;
 16441  005B44  94AB               	bcf	4011,2,c	;volatile
 16442                           
 16443                           ;UART.c: 69: TXSTAbits.TXEN = 0;
 16444  005B46  9AAC               	bcf	4012,5,c	;volatile
 16445  005B48  0012               	return		;funcret
 16446  005B4A                     __end_of_Local_CloseUSART:
 16447                           	opt stack 0
 16448                           tblptru	equ	0xFF8
 16449                           tblptrh	equ	0xFF7
 16450                           tblptrl	equ	0xFF6
 16451                           tablat	equ	0xFF5
 16452                           prodh	equ	0xFF4
 16453                           prodl	equ	0xFF3
 16454                           intcon	equ	0xFF2
 16455                           intcon2	equ	0xFF1
 16456                           indf0	equ	0xFEF
 16457                           postinc0	equ	0xFEE
 16458                           plusw0	equ	0xFEB
 16459                           fsr0h	equ	0xFEA
 16460                           fsr0l	equ	0xFE9
 16461                           wreg	equ	0xFE8
 16462                           indf1	equ	0xFE7
 16463                           postdec1	equ	0xFE5
 16464                           fsr1h	equ	0xFE2
 16465                           fsr1l	equ	0xFE1
 16466                           indf2	equ	0xFDF
 16467                           postinc2	equ	0xFDE
 16468                           postdec2	equ	0xFDD
 16469                           plusw2	equ	0xFDB
 16470                           fsr2h	equ	0xFDA
 16471                           fsr2l	equ	0xFD9
 16472                           status	equ	0xFD8
 16473                           
 16474 ;; *************** function _InitTimers *****************
 16475 ;; Defined at:
 16476 ;;		line 49 in file "Timer.c"
 16477 ;; Parameters:    Size  Location     Type
 16478 ;;		None
 16479 ;; Auto vars:     Size  Location     Type
 16480 ;;		None
 16481 ;; Return value:  Size  Location     Type
 16482 ;;		None               void
 16483 ;; Registers used:
 16484 ;;		wreg, status,2, cstack
 16485 ;; Tracked objects:
 16486 ;;		On entry : 0/0
 16487 ;;		On exit  : 0/0
 16488 ;;		Unchanged: 0/0
 16489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16494 ;;Total ram usage:        0 bytes
 16495 ;; Hardware stack levels used:    1
 16496 ;; Hardware stack levels required when called:    7
 16497 ;; This function calls:
 16498 ;;		_InitTimer1
 16499 ;;		_InitTimer2
 16500 ;;		_InitTimer3
 16501 ;; This function is called by:
 16502 ;;		_Init_System
 16503 ;; This function uses a non-reentrant model
 16504 ;;
 16505                           
 16506                           	psect	text48
 16507  005AF8                     __ptext48:
 16508                           	opt stack 0
 16509  005AF8                     _InitTimers:
 16510                           	opt stack 22
 16511                           
 16512                           ;Timer.c: 51: InitTimer1();
 16513                           
 16514                           ;incstack = 0
 16515  005AF8  ECAC  F02D         	call	_InitTimer1	;wreg free
 16516                           
 16517                           ;Timer.c: 52: (PIE1bits.TMR1IE = TRUE);
 16518  005AFC  809D               	bsf	3997,0,c	;volatile
 16519                           
 16520                           ;Timer.c: 53: InitTimer2();
 16521  005AFE  ECA5  F02D         	call	_InitTimer2	;wreg free
 16522                           
 16523                           ;Timer.c: 54: (PIE1bits.TMR2IE = TRUE);
 16524  005B02  829D               	bsf	3997,1,c	;volatile
 16525                           
 16526                           ;Timer.c: 55: InitTimer3();
 16527  005B04  ECE1  F02D         	call	_InitTimer3	;wreg free
 16528                           
 16529                           ;Timer.c: 56: (PIE2bits.TMR3IE = TRUE);
 16530  005B08  82A0               	bsf	4000,1,c	;volatile
 16531  005B0A  0012               	return		;funcret
 16532  005B0C                     __end_of_InitTimers:
 16533                           	opt stack 0
 16534                           tblptru	equ	0xFF8
 16535                           tblptrh	equ	0xFF7
 16536                           tblptrl	equ	0xFF6
 16537                           tablat	equ	0xFF5
 16538                           prodh	equ	0xFF4
 16539                           prodl	equ	0xFF3
 16540                           intcon	equ	0xFF2
 16541                           intcon2	equ	0xFF1
 16542                           indf0	equ	0xFEF
 16543                           postinc0	equ	0xFEE
 16544                           plusw0	equ	0xFEB
 16545                           fsr0h	equ	0xFEA
 16546                           fsr0l	equ	0xFE9
 16547                           wreg	equ	0xFE8
 16548                           indf1	equ	0xFE7
 16549                           postdec1	equ	0xFE5
 16550                           fsr1h	equ	0xFE2
 16551                           fsr1l	equ	0xFE1
 16552                           indf2	equ	0xFDF
 16553                           postinc2	equ	0xFDE
 16554                           postdec2	equ	0xFDD
 16555                           plusw2	equ	0xFDB
 16556                           fsr2h	equ	0xFDA
 16557                           fsr2l	equ	0xFD9
 16558                           status	equ	0xFD8
 16559                           
 16560 ;; *************** function _InitTimer3 *****************
 16561 ;; Defined at:
 16562 ;;		line 144 in file "Timer.c"
 16563 ;; Parameters:    Size  Location     Type
 16564 ;;		None
 16565 ;; Auto vars:     Size  Location     Type
 16566 ;;		None
 16567 ;; Return value:  Size  Location     Type
 16568 ;;		None               void
 16569 ;; Registers used:
 16570 ;;		wreg, status,2
 16571 ;; Tracked objects:
 16572 ;;		On entry : 0/0
 16573 ;;		On exit  : 0/0
 16574 ;;		Unchanged: 0/0
 16575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16580 ;;Total ram usage:        0 bytes
 16581 ;; Hardware stack levels used:    1
 16582 ;; Hardware stack levels required when called:    6
 16583 ;; This function calls:
 16584 ;;		Nothing
 16585 ;; This function is called by:
 16586 ;;		_InitTimers
 16587 ;; This function uses a non-reentrant model
 16588 ;;
 16589                           
 16590                           	psect	text49
 16591  005BC2                     __ptext49:
 16592                           	opt stack 0
 16593  005BC2                     _InitTimer3:
 16594                           	opt stack 22
 16595                           
 16596                           ;Timer.c: 146: T3CONbits.RD16 = TRUE;
 16597                           
 16598                           ;incstack = 0
 16599  005BC2  8EB1               	bsf	4017,7,c	;volatile
 16600                           
 16601                           ;Timer.c: 147: T3CONbits.T3CKPS = 0x3;
 16602  005BC4  0E30               	movlw	48
 16603  005BC6  12B1               	iorwf	4017,f,c	;volatile
 16604                           
 16605                           ;Timer.c: 148: T3CONbits.TMR3CS = FALSE;
 16606  005BC8  92B1               	bcf	4017,1,c	;volatile
 16607  005BCA  0012               	return		;funcret
 16608  005BCC                     __end_of_InitTimer3:
 16609                           	opt stack 0
 16610                           tblptru	equ	0xFF8
 16611                           tblptrh	equ	0xFF7
 16612                           tblptrl	equ	0xFF6
 16613                           tablat	equ	0xFF5
 16614                           prodh	equ	0xFF4
 16615                           prodl	equ	0xFF3
 16616                           intcon	equ	0xFF2
 16617                           intcon2	equ	0xFF1
 16618                           indf0	equ	0xFEF
 16619                           postinc0	equ	0xFEE
 16620                           plusw0	equ	0xFEB
 16621                           fsr0h	equ	0xFEA
 16622                           fsr0l	equ	0xFE9
 16623                           wreg	equ	0xFE8
 16624                           indf1	equ	0xFE7
 16625                           postdec1	equ	0xFE5
 16626                           fsr1h	equ	0xFE2
 16627                           fsr1l	equ	0xFE1
 16628                           indf2	equ	0xFDF
 16629                           postinc2	equ	0xFDE
 16630                           postdec2	equ	0xFDD
 16631                           plusw2	equ	0xFDB
 16632                           fsr2h	equ	0xFDA
 16633                           fsr2l	equ	0xFD9
 16634                           status	equ	0xFD8
 16635                           
 16636 ;; *************** function _InitTimer2 *****************
 16637 ;; Defined at:
 16638 ;;		line 121 in file "Timer.c"
 16639 ;; Parameters:    Size  Location     Type
 16640 ;;		None
 16641 ;; Auto vars:     Size  Location     Type
 16642 ;;		None
 16643 ;; Return value:  Size  Location     Type
 16644 ;;		None               void
 16645 ;; Registers used:
 16646 ;;		wreg, status,2
 16647 ;; Tracked objects:
 16648 ;;		On entry : 0/0
 16649 ;;		On exit  : 0/0
 16650 ;;		Unchanged: 0/0
 16651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16656 ;;Total ram usage:        0 bytes
 16657 ;; Hardware stack levels used:    1
 16658 ;; Hardware stack levels required when called:    6
 16659 ;; This function calls:
 16660 ;;		Nothing
 16661 ;; This function is called by:
 16662 ;;		_InitTimers
 16663 ;; This function uses a non-reentrant model
 16664 ;;
 16665                           
 16666                           	psect	text50
 16667  005B4A                     __ptext50:
 16668                           	opt stack 0
 16669  005B4A                     _InitTimer2:
 16670                           	opt stack 22
 16671                           
 16672                           ;Timer.c: 123: T2CONbits.T2OUTPS = 0xE;
 16673                           
 16674                           ;incstack = 0
 16675  005B4A  50CA               	movf	4042,w,c	;volatile
 16676  005B4C  0B87               	andlw	-121
 16677  005B4E  0970               	iorlw	112
 16678  005B50  6ECA               	movwf	4042,c	;volatile
 16679                           
 16680                           ;Timer.c: 124: T2CONbits.T2CKPS = 0x3;
 16681  005B52  0E03               	movlw	3
 16682  005B54  12CA               	iorwf	4042,f,c	;volatile
 16683  005B56  0012               	return		;funcret
 16684  005B58                     __end_of_InitTimer2:
 16685                           	opt stack 0
 16686                           tblptru	equ	0xFF8
 16687                           tblptrh	equ	0xFF7
 16688                           tblptrl	equ	0xFF6
 16689                           tablat	equ	0xFF5
 16690                           prodh	equ	0xFF4
 16691                           prodl	equ	0xFF3
 16692                           intcon	equ	0xFF2
 16693                           intcon2	equ	0xFF1
 16694                           indf0	equ	0xFEF
 16695                           postinc0	equ	0xFEE
 16696                           plusw0	equ	0xFEB
 16697                           fsr0h	equ	0xFEA
 16698                           fsr0l	equ	0xFE9
 16699                           wreg	equ	0xFE8
 16700                           indf1	equ	0xFE7
 16701                           postdec1	equ	0xFE5
 16702                           fsr1h	equ	0xFE2
 16703                           fsr1l	equ	0xFE1
 16704                           indf2	equ	0xFDF
 16705                           postinc2	equ	0xFDE
 16706                           postdec2	equ	0xFDD
 16707                           plusw2	equ	0xFDB
 16708                           fsr2h	equ	0xFDA
 16709                           fsr2l	equ	0xFD9
 16710                           status	equ	0xFD8
 16711                           
 16712 ;; *************** function _InitTimer1 *****************
 16713 ;; Defined at:
 16714 ;;		line 92 in file "Timer.c"
 16715 ;; Parameters:    Size  Location     Type
 16716 ;;		None
 16717 ;; Auto vars:     Size  Location     Type
 16718 ;;		None
 16719 ;; Return value:  Size  Location     Type
 16720 ;;		None               void
 16721 ;; Registers used:
 16722 ;;		wreg, status,2
 16723 ;; Tracked objects:
 16724 ;;		On entry : 0/0
 16725 ;;		On exit  : 0/0
 16726 ;;		Unchanged: 0/0
 16727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16732 ;;Total ram usage:        0 bytes
 16733 ;; Hardware stack levels used:    1
 16734 ;; Hardware stack levels required when called:    6
 16735 ;; This function calls:
 16736 ;;		Nothing
 16737 ;; This function is called by:
 16738 ;;		_InitTimers
 16739 ;; This function uses a non-reentrant model
 16740 ;;
 16741                           
 16742                           	psect	text51
 16743  005B58                     __ptext51:
 16744                           	opt stack 0
 16745  005B58                     _InitTimer1:
 16746                           	opt stack 22
 16747                           
 16748                           ;Timer.c: 94: T1CONbits.RD16 = TRUE;
 16749                           
 16750                           ;incstack = 0
 16751  005B58  8ECD               	bsf	4045,7,c	;volatile
 16752                           
 16753                           ;Timer.c: 95: T1CONbits.T1RUN = FALSE;
 16754  005B5A  9CCD               	bcf	4045,6,c	;volatile
 16755                           
 16756                           ;Timer.c: 96: T1CONbits.T1CKPS = 0x3;
 16757  005B5C  0E30               	movlw	48
 16758  005B5E  12CD               	iorwf	4045,f,c	;volatile
 16759                           
 16760                           ;Timer.c: 97: T1CONbits.T1OSCEN = FALSE;
 16761  005B60  96CD               	bcf	4045,3,c	;volatile
 16762                           
 16763                           ;Timer.c: 98: T1CONbits.TMR1CS = FALSE;
 16764  005B62  92CD               	bcf	4045,1,c	;volatile
 16765  005B64  0012               	return		;funcret
 16766  005B66                     __end_of_InitTimer1:
 16767                           	opt stack 0
 16768                           tblptru	equ	0xFF8
 16769                           tblptrh	equ	0xFF7
 16770                           tblptrl	equ	0xFF6
 16771                           tablat	equ	0xFF5
 16772                           prodh	equ	0xFF4
 16773                           prodl	equ	0xFF3
 16774                           intcon	equ	0xFF2
 16775                           intcon2	equ	0xFF1
 16776                           indf0	equ	0xFEF
 16777                           postinc0	equ	0xFEE
 16778                           plusw0	equ	0xFEB
 16779                           fsr0h	equ	0xFEA
 16780                           fsr0l	equ	0xFE9
 16781                           wreg	equ	0xFE8
 16782                           indf1	equ	0xFE7
 16783                           postdec1	equ	0xFE5
 16784                           fsr1h	equ	0xFE2
 16785                           fsr1l	equ	0xFE1
 16786                           indf2	equ	0xFDF
 16787                           postinc2	equ	0xFDE
 16788                           postdec2	equ	0xFDD
 16789                           plusw2	equ	0xFDB
 16790                           fsr2h	equ	0xFDA
 16791                           fsr2l	equ	0xFD9
 16792                           status	equ	0xFD8
 16793                           
 16794 ;; *************** function _InitIR *****************
 16795 ;; Defined at:
 16796 ;;		line 77 in file "IR.c"
 16797 ;; Parameters:    Size  Location     Type
 16798 ;;		None
 16799 ;; Auto vars:     Size  Location     Type
 16800 ;;		None
 16801 ;; Return value:  Size  Location     Type
 16802 ;;		None               void
 16803 ;; Registers used:
 16804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16805 ;; Tracked objects:
 16806 ;;		On entry : 0/0
 16807 ;;		On exit  : 0/0
 16808 ;;		Unchanged: 0/0
 16809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16814 ;;Total ram usage:        0 bytes
 16815 ;; Hardware stack levels used:    1
 16816 ;; Hardware stack levels required when called:    7
 16817 ;; This function calls:
 16818 ;;		_InitTimer0
 16819 ;;		_ReadIRpin
 16820 ;;		_ResetTimer0
 16821 ;;		_cleanBuffer16bit
 16822 ;; This function is called by:
 16823 ;;		_Init_System
 16824 ;; This function uses a non-reentrant model
 16825 ;;
 16826                           
 16827                           	psect	text52
 16828  0056E8                     __ptext52:
 16829                           	opt stack 0
 16830  0056E8                     _InitIR:
 16831                           	opt stack 22
 16832                           
 16833                           ;IR.c: 80: (IOCBbits.IOCB4 = 1);
 16834                           
 16835                           ;incstack = 0
 16836  0056E8  887D               	bsf	3965,4,c	;volatile
 16837                           
 16838                           ;IR.c: 82: IRpinOLD = ReadIRpin();
 16839  0056EA  ECB3  F02D         	call	_ReadIRpin	;wreg free
 16840  0056EE  6E32               	movwf	_IRpinOLD,c
 16841                           
 16842                           ;IR.c: 84: InitTimer0();
 16843  0056F0  EC8F  F02D         	call	_InitTimer0	;wreg free
 16844                           
 16845                           ;IR.c: 86: cleanBuffer16bit(IRRawCode, 72);
 16846  0056F4  0E00               	movlw	low _IRRawCode
 16847  0056F6  0100               	movlb	0	; () banked
 16848  0056F8  6F72               	movwf	cleanBuffer16bit@data& (0+255),b
 16849  0056FA  0E04               	movlw	high _IRRawCode
 16850  0056FC  0100               	movlb	0	; () banked
 16851  0056FE  6F73               	movwf	(cleanBuffer16bit@data+1)& (0+255),b
 16852  005700  0E00               	movlw	0
 16853  005702  0100               	movlb	0	; () banked
 16854  005704  6F75               	movwf	(cleanBuffer16bit@count+1)& (0+255),b
 16855  005706  0E48               	movlw	72
 16856  005708  6F74               	movwf	cleanBuffer16bit@count& (0+255),b
 16857  00570A  EC3F  F02A         	call	_cleanBuffer16bit	;wreg free
 16858                           
 16859                           ;IR.c: 87: IR_NEC = 0;
 16860  00570E  0E00               	movlw	0
 16861  005710  0100               	movlb	0	; () banked
 16862  005712  6FE2               	movwf	_IR_NEC& (0+255),b
 16863  005714  0E00               	movlw	0
 16864  005716  6FE3               	movwf	(_IR_NEC+1)& (0+255),b
 16865  005718  0E00               	movlw	0
 16866  00571A  6FE4               	movwf	(_IR_NEC+2)& (0+255),b
 16867  00571C  0E00               	movlw	0
 16868  00571E  6FE5               	movwf	(_IR_NEC+3)& (0+255),b
 16869                           
 16870                           ; BSR set to: 0
 16871                           ;IR.c: 88: (T0CONbits.TMR0ON = 0);
 16872  005720  9ED5               	bcf	4053,7,c	;volatile
 16873                           
 16874                           ; BSR set to: 0
 16875                           ;IR.c: 90: ResetTimer0();
 16876  005722  ECE6  F02D         	call	_ResetTimer0	;wreg free
 16877                           
 16878                           ;IR.c: 92: (INTCONbits.TMR0IE = 0);
 16879  005726  9AF2               	bcf	intcon,5,c	;volatile
 16880                           
 16881                           ;IR.c: 93: INTCONbits.TMR0IF = 0;
 16882  005728  94F2               	bcf	intcon,2,c	;volatile
 16883                           
 16884                           ;IR.c: 95: INTCONbits.RBIF = 0;
 16885  00572A  90F2               	bcf	intcon,0,c	;volatile
 16886                           
 16887                           ;IR.c: 96: INTCONbits.RBIE = 1;
 16888  00572C  86F2               	bsf	intcon,3,c	;volatile
 16889  00572E  0012               	return		;funcret
 16890  005730                     __end_of_InitIR:
 16891                           	opt stack 0
 16892                           tblptru	equ	0xFF8
 16893                           tblptrh	equ	0xFF7
 16894                           tblptrl	equ	0xFF6
 16895                           tablat	equ	0xFF5
 16896                           prodh	equ	0xFF4
 16897                           prodl	equ	0xFF3
 16898                           intcon	equ	0xFF2
 16899                           intcon2	equ	0xFF1
 16900                           indf0	equ	0xFEF
 16901                           postinc0	equ	0xFEE
 16902                           plusw0	equ	0xFEB
 16903                           fsr0h	equ	0xFEA
 16904                           fsr0l	equ	0xFE9
 16905                           wreg	equ	0xFE8
 16906                           indf1	equ	0xFE7
 16907                           postdec1	equ	0xFE5
 16908                           fsr1h	equ	0xFE2
 16909                           fsr1l	equ	0xFE1
 16910                           indf2	equ	0xFDF
 16911                           postinc2	equ	0xFDE
 16912                           postdec2	equ	0xFDD
 16913                           plusw2	equ	0xFDB
 16914                           fsr2h	equ	0xFDA
 16915                           fsr2l	equ	0xFD9
 16916                           status	equ	0xFD8
 16917                           
 16918 ;; *************** function _cleanBuffer16bit *****************
 16919 ;; Defined at:
 16920 ;;		line 139 in file "MISC.c"
 16921 ;; Parameters:    Size  Location     Type
 16922 ;;  data            2   18[BANK0 ] PTR unsigned int 
 16923 ;;		 -> IRRawCode(144), 
 16924 ;;  count           2   20[BANK0 ] int 
 16925 ;; Auto vars:     Size  Location     Type
 16926 ;;  i               1   25[BANK0 ] unsigned char 
 16927 ;; Return value:  Size  Location     Type
 16928 ;;		None               void
 16929 ;; Registers used:
 16930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16931 ;; Tracked objects:
 16932 ;;		On entry : 0/0
 16933 ;;		On exit  : 0/0
 16934 ;;		Unchanged: 0/0
 16935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16936 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16937 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16938 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16939 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16940 ;;Total ram usage:        8 bytes
 16941 ;; Hardware stack levels used:    1
 16942 ;; Hardware stack levels required when called:    6
 16943 ;; This function calls:
 16944 ;;		Nothing
 16945 ;; This function is called by:
 16946 ;;		_InitIR
 16947 ;; This function uses a non-reentrant model
 16948 ;;
 16949                           
 16950                           	psect	text53
 16951  00547E                     __ptext53:
 16952                           	opt stack 0
 16953  00547E                     _cleanBuffer16bit:
 16954                           	opt stack 22
 16955                           
 16956                           ;MISC.c: 141: unsigned char i=0;
 16957                           
 16958                           ;incstack = 0
 16959  00547E  0E00               	movlw	0
 16960  005480  0100               	movlb	0	; () banked
 16961  005482  6F79               	movwf	cleanBuffer16bit@i& (0+255),b
 16962                           
 16963                           ;MISC.c: 142: for(i=0; i<count;i++)
 16964  005484  0E00               	movlw	0
 16965  005486  0100               	movlb	0	; () banked
 16966  005488  6F79               	movwf	cleanBuffer16bit@i& (0+255),b
 16967  00548A  D012               	goto	l6197
 16968  00548C                     l6193:
 16969                           
 16970                           ; BSR set to: 0
 16971                           ;MISC.c: 143: {
 16972                           ;MISC.c: 144: data[i]= 0;
 16973  00548C  0100               	movlb	0	; () banked
 16974  00548E  5179               	movf	cleanBuffer16bit@i& (0+255),w,b
 16975  005490  0D02               	mullw	2
 16976  005492  50F3               	movf	prodl,w,c
 16977  005494  0100               	movlb	0	; () banked
 16978  005496  2572               	addwf	cleanBuffer16bit@data& (0+255),w,b
 16979  005498  6ED9               	movwf	fsr2l,c
 16980  00549A  50F4               	movf	prodh,w,c
 16981  00549C  0100               	movlb	0	; () banked
 16982  00549E  2173               	addwfc	(cleanBuffer16bit@data+1)& (0+255),w,b
 16983  0054A0  6EDA               	movwf	fsr2h,c
 16984  0054A2  0E00               	movlw	0
 16985  0054A4  6EDE               	movwf	postinc2,c
 16986  0054A6  0E00               	movlw	0
 16987  0054A8  6EDD               	movwf	postdec2,c
 16988                           
 16989                           ; BSR set to: 0
 16990  0054AA  0100               	movlb	0	; () banked
 16991  0054AC  2B79               	incf	cleanBuffer16bit@i& (0+255),f,b
 16992  0054AE  D000               	goto	l6197
 16993  0054B0                     l6197:
 16994                           
 16995                           ; BSR set to: 0
 16996  0054B0  0100               	movlb	0	; () banked
 16997  0054B2  5179               	movf	cleanBuffer16bit@i& (0+255),w,b
 16998  0054B4  0100               	movlb	0	; () banked
 16999  0054B6  6F76               	movwf	??_cleanBuffer16bit& (0+255),b
 17000  0054B8  6B77               	clrf	(??_cleanBuffer16bit+1)& (0+255),b
 17001  0054BA  0100               	movlb	0	; () banked
 17002  0054BC  5174               	movf	cleanBuffer16bit@count& (0+255),w,b
 17003  0054BE  0100               	movlb	0	; () banked
 17004  0054C0  5D76               	subwf	??_cleanBuffer16bit& (0+255),w,b
 17005  0054C2  0100               	movlb	0	; () banked
 17006  0054C4  5177               	movf	(??_cleanBuffer16bit+1)& (0+255),w,b
 17007  0054C6  0A80               	xorlw	128
 17008  0054C8  0100               	movlb	0	; () banked
 17009  0054CA  6F78               	movwf	(??_cleanBuffer16bit+2)& (0+255),b
 17010  0054CC  0100               	movlb	0	; () banked
 17011  0054CE  5175               	movf	(cleanBuffer16bit@count+1)& (0+255),w,b
 17012  0054D0  0A80               	xorlw	128
 17013  0054D2  0100               	movlb	0	; () banked
 17014  0054D4  5978               	subwfb	(??_cleanBuffer16bit+2)& (0+255),w,b
 17015  0054D6  A0D8               	btfss	status,0,c
 17016  0054D8  D7D9               	goto	l6193
 17017                           
 17018                           ; BSR set to: 0
 17019                           
 17020                           ; BSR set to: 0
 17021  0054DA  0012               	return		;funcret
 17022  0054DC                     __end_of_cleanBuffer16bit:
 17023                           	opt stack 0
 17024                           tblptru	equ	0xFF8
 17025                           tblptrh	equ	0xFF7
 17026                           tblptrl	equ	0xFF6
 17027                           tablat	equ	0xFF5
 17028                           prodh	equ	0xFF4
 17029                           prodl	equ	0xFF3
 17030                           intcon	equ	0xFF2
 17031                           intcon2	equ	0xFF1
 17032                           indf0	equ	0xFEF
 17033                           postinc0	equ	0xFEE
 17034                           plusw0	equ	0xFEB
 17035                           fsr0h	equ	0xFEA
 17036                           fsr0l	equ	0xFE9
 17037                           wreg	equ	0xFE8
 17038                           indf1	equ	0xFE7
 17039                           postdec1	equ	0xFE5
 17040                           fsr1h	equ	0xFE2
 17041                           fsr1l	equ	0xFE1
 17042                           indf2	equ	0xFDF
 17043                           postinc2	equ	0xFDE
 17044                           postdec2	equ	0xFDD
 17045                           plusw2	equ	0xFDB
 17046                           fsr2h	equ	0xFDA
 17047                           fsr2l	equ	0xFD9
 17048                           status	equ	0xFD8
 17049                           
 17050 ;; *************** function _ResetTimer0 *****************
 17051 ;; Defined at:
 17052 ;;		line 77 in file "Timer.c"
 17053 ;; Parameters:    Size  Location     Type
 17054 ;;		None
 17055 ;; Auto vars:     Size  Location     Type
 17056 ;;		None
 17057 ;; Return value:  Size  Location     Type
 17058 ;;		None               void
 17059 ;; Registers used:
 17060 ;;		wreg, status,2
 17061 ;; Tracked objects:
 17062 ;;		On entry : 0/0
 17063 ;;		On exit  : 0/0
 17064 ;;		Unchanged: 0/0
 17065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17070 ;;Total ram usage:        0 bytes
 17071 ;; Hardware stack levels used:    1
 17072 ;; Hardware stack levels required when called:    6
 17073 ;; This function calls:
 17074 ;;		Nothing
 17075 ;; This function is called by:
 17076 ;;		_InitIR
 17077 ;; This function uses a non-reentrant model
 17078 ;;
 17079                           
 17080                           	psect	text54
 17081  005BCC                     __ptext54:
 17082                           	opt stack 0
 17083  005BCC                     _ResetTimer0:
 17084                           	opt stack 22
 17085                           
 17086                           ;Timer.c: 83: TMR0H = 0;
 17087                           
 17088                           ; BSR set to: 0
 17089                           ;incstack = 0
 17090  005BCC  0E00               	movlw	0
 17091  005BCE  6ED7               	movwf	4055,c	;volatile
 17092                           
 17093                           ;Timer.c: 84: TMR0L = 2;
 17094  005BD0  0E02               	movlw	2
 17095  005BD2  6ED6               	movwf	4054,c	;volatile
 17096  005BD4  0012               	return		;funcret
 17097  005BD6                     __end_of_ResetTimer0:
 17098                           	opt stack 0
 17099                           tblptru	equ	0xFF8
 17100                           tblptrh	equ	0xFF7
 17101                           tblptrl	equ	0xFF6
 17102                           tablat	equ	0xFF5
 17103                           prodh	equ	0xFF4
 17104                           prodl	equ	0xFF3
 17105                           intcon	equ	0xFF2
 17106                           intcon2	equ	0xFF1
 17107                           indf0	equ	0xFEF
 17108                           postinc0	equ	0xFEE
 17109                           plusw0	equ	0xFEB
 17110                           fsr0h	equ	0xFEA
 17111                           fsr0l	equ	0xFE9
 17112                           wreg	equ	0xFE8
 17113                           indf1	equ	0xFE7
 17114                           postdec1	equ	0xFE5
 17115                           fsr1h	equ	0xFE2
 17116                           fsr1l	equ	0xFE1
 17117                           indf2	equ	0xFDF
 17118                           postinc2	equ	0xFDE
 17119                           postdec2	equ	0xFDD
 17120                           plusw2	equ	0xFDB
 17121                           fsr2h	equ	0xFDA
 17122                           fsr2l	equ	0xFD9
 17123                           status	equ	0xFD8
 17124                           
 17125 ;; *************** function _ReadIRpin *****************
 17126 ;; Defined at:
 17127 ;;		line 104 in file "IR.c"
 17128 ;; Parameters:    Size  Location     Type
 17129 ;;		None
 17130 ;; Auto vars:     Size  Location     Type
 17131 ;;		None
 17132 ;; Return value:  Size  Location     Type
 17133 ;;                  1    wreg      unsigned char 
 17134 ;; Registers used:
 17135 ;;		wreg
 17136 ;; Tracked objects:
 17137 ;;		On entry : 0/0
 17138 ;;		On exit  : 0/0
 17139 ;;		Unchanged: 0/0
 17140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17145 ;;Total ram usage:        0 bytes
 17146 ;; Hardware stack levels used:    1
 17147 ;; Hardware stack levels required when called:    6
 17148 ;; This function calls:
 17149 ;;		Nothing
 17150 ;; This function is called by:
 17151 ;;		_InitIR
 17152 ;;		_UseIRCode
 17153 ;;		_SendNEC_wait
 17154 ;;		_SendRF_wait
 17155 ;; This function uses a non-reentrant model
 17156 ;;
 17157                           
 17158                           	psect	text55
 17159  005B66                     __ptext55:
 17160                           	opt stack 0
 17161  005B66                     _ReadIRpin:
 17162                           	opt stack 21
 17163                           
 17164                           ;IR.c: 107: if((PORTB & 0x10) == 0x10)
 17165                           
 17166                           ;incstack = 0
 17167  005B66  A881               	btfss	3969,4,c	;volatile
 17168  005B68  D002               	goto	l8821
 17169                           
 17170                           ;IR.c: 108: {
 17171                           ;IR.c: 109: return (1);
 17172  005B6A  0E01               	movlw	1
 17173                           
 17174                           ;IR.c: 110: }
 17175  005B6C  0012               	return	
 17176  005B6E                     l8821:
 17177                           
 17178                           ;IR.c: 111: else
 17179                           ;IR.c: 112: {
 17180                           ;IR.c: 113: return 0;
 17181  005B6E  0E00               	movlw	0
 17182  005B70  0012               	return	
 17183  005B72  0012               	return		;funcret
 17184  005B74                     __end_of_ReadIRpin:
 17185                           	opt stack 0
 17186                           tblptru	equ	0xFF8
 17187                           tblptrh	equ	0xFF7
 17188                           tblptrl	equ	0xFF6
 17189                           tablat	equ	0xFF5
 17190                           prodh	equ	0xFF4
 17191                           prodl	equ	0xFF3
 17192                           intcon	equ	0xFF2
 17193                           intcon2	equ	0xFF1
 17194                           indf0	equ	0xFEF
 17195                           postinc0	equ	0xFEE
 17196                           plusw0	equ	0xFEB
 17197                           fsr0h	equ	0xFEA
 17198                           fsr0l	equ	0xFE9
 17199                           wreg	equ	0xFE8
 17200                           indf1	equ	0xFE7
 17201                           postdec1	equ	0xFE5
 17202                           fsr1h	equ	0xFE2
 17203                           fsr1l	equ	0xFE1
 17204                           indf2	equ	0xFDF
 17205                           postinc2	equ	0xFDE
 17206                           postdec2	equ	0xFDD
 17207                           plusw2	equ	0xFDB
 17208                           fsr2h	equ	0xFDA
 17209                           fsr2l	equ	0xFD9
 17210                           status	equ	0xFD8
 17211                           
 17212 ;; *************** function _InitTimer0 *****************
 17213 ;; Defined at:
 17214 ;;		line 64 in file "Timer.c"
 17215 ;; Parameters:    Size  Location     Type
 17216 ;;		None
 17217 ;; Auto vars:     Size  Location     Type
 17218 ;;		None
 17219 ;; Return value:  Size  Location     Type
 17220 ;;		None               void
 17221 ;; Registers used:
 17222 ;;		wreg, status,2
 17223 ;; Tracked objects:
 17224 ;;		On entry : 0/0
 17225 ;;		On exit  : 0/0
 17226 ;;		Unchanged: 0/0
 17227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17232 ;;Total ram usage:        0 bytes
 17233 ;; Hardware stack levels used:    1
 17234 ;; Hardware stack levels required when called:    6
 17235 ;; This function calls:
 17236 ;;		Nothing
 17237 ;; This function is called by:
 17238 ;;		_InitIR
 17239 ;; This function uses a non-reentrant model
 17240 ;;
 17241                           
 17242                           	psect	text56
 17243  005B1E                     __ptext56:
 17244                           	opt stack 0
 17245  005B1E                     _InitTimer0:
 17246                           	opt stack 22
 17247                           
 17248                           ;Timer.c: 66: T0CONbits.T08BIT = FALSE;
 17249                           
 17250                           ;incstack = 0
 17251  005B1E  9CD5               	bcf	4053,6,c	;volatile
 17252                           
 17253                           ;Timer.c: 67: T0CONbits.T0CS = FALSE;
 17254  005B20  9AD5               	bcf	4053,5,c	;volatile
 17255                           
 17256                           ;Timer.c: 68: T0CONbits.PSA = FALSE;
 17257  005B22  96D5               	bcf	4053,3,c	;volatile
 17258                           
 17259                           ;Timer.c: 69: T0CONbits.T0PS = 0x4;
 17260  005B24  50D5               	movf	4053,w,c	;volatile
 17261  005B26  0BF8               	andlw	-8
 17262  005B28  0904               	iorlw	4
 17263  005B2A  6ED5               	movwf	4053,c	;volatile
 17264  005B2C  0012               	return		;funcret
 17265  005B2E                     __end_of_InitTimer0:
 17266                           	opt stack 0
 17267                           tblptru	equ	0xFF8
 17268                           tblptrh	equ	0xFF7
 17269                           tblptrl	equ	0xFF6
 17270                           tablat	equ	0xFF5
 17271                           prodh	equ	0xFF4
 17272                           prodl	equ	0xFF3
 17273                           intcon	equ	0xFF2
 17274                           intcon2	equ	0xFF1
 17275                           indf0	equ	0xFEF
 17276                           postinc0	equ	0xFEE
 17277                           plusw0	equ	0xFEB
 17278                           fsr0h	equ	0xFEA
 17279                           fsr0l	equ	0xFE9
 17280                           wreg	equ	0xFE8
 17281                           indf1	equ	0xFE7
 17282                           postdec1	equ	0xFE5
 17283                           fsr1h	equ	0xFE2
 17284                           fsr1l	equ	0xFE1
 17285                           indf2	equ	0xFDF
 17286                           postinc2	equ	0xFDE
 17287                           postdec2	equ	0xFDD
 17288                           plusw2	equ	0xFDB
 17289                           fsr2h	equ	0xFDA
 17290                           fsr2l	equ	0xFD9
 17291                           status	equ	0xFD8
 17292                           
 17293 ;; *************** function _InitBluetooth *****************
 17294 ;; Defined at:
 17295 ;;		line 61 in file "Bluetooth.c"
 17296 ;; Parameters:    Size  Location     Type
 17297 ;;		None
 17298 ;; Auto vars:     Size  Location     Type
 17299 ;;		None
 17300 ;; Return value:  Size  Location     Type
 17301 ;;		None               void
 17302 ;; Registers used:
 17303 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17304 ;; Tracked objects:
 17305 ;;		On entry : 0/0
 17306 ;;		On exit  : 0/0
 17307 ;;		Unchanged: 0/0
 17308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17313 ;;Total ram usage:        0 bytes
 17314 ;; Hardware stack levels used:    1
 17315 ;; Hardware stack levels required when called:   12
 17316 ;; This function calls:
 17317 ;;		_BluetoothConfigured
 17318 ;;		_BluetoothInitialSetup
 17319 ;;		_ResetBlue
 17320 ;;		_cleanBuffer
 17321 ;; This function is called by:
 17322 ;;		_Init_System
 17323 ;; This function uses a non-reentrant model
 17324 ;;
 17325                           
 17326                           	psect	text57
 17327  0055E8                     __ptext57:
 17328                           	opt stack 0
 17329  0055E8                     _InitBluetooth:
 17330                           	opt stack 17
 17331                           
 17332                           ;Bluetooth.c: 63: cleanBuffer(&ReceivedString,255);
 17333                           
 17334                           ;incstack = 0
 17335  0055E8  0E00               	movlw	low _ReceivedString
 17336  0055EA  0100               	movlb	0	; () banked
 17337  0055EC  6F72               	movwf	cleanBuffer@data& (0+255),b
 17338  0055EE  0E02               	movlw	high _ReceivedString
 17339  0055F0  0100               	movlb	0	; () banked
 17340  0055F2  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
 17341  0055F4  0E00               	movlw	0
 17342  0055F6  0100               	movlb	0	; () banked
 17343  0055F8  6F75               	movwf	(cleanBuffer@count+1)& (0+255),b
 17344  0055FA  6974               	setf	cleanBuffer@count& (0+255),b
 17345  0055FC  EC6E  F02A         	call	_cleanBuffer	;wreg free
 17346                           
 17347                           ;Bluetooth.c: 64: ReceivedStringPos = 0;
 17348  005600  0E00               	movlw	0
 17349  005602  0100               	movlb	0	; () banked
 17350  005604  6FE1               	movwf	_ReceivedStringPos& (0+255),b
 17351                           
 17352                           ; BSR set to: 0
 17353                           ;Bluetooth.c: 65: cleanBuffer(&CommandString,255);
 17354  005606  0E00               	movlw	low _CommandString
 17355  005608  0100               	movlb	0	; () banked
 17356  00560A  6F72               	movwf	cleanBuffer@data& (0+255),b
 17357  00560C  0E03               	movlw	high _CommandString
 17358  00560E  0100               	movlb	0	; () banked
 17359  005610  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
 17360  005612  0E00               	movlw	0
 17361  005614  0100               	movlb	0	; () banked
 17362  005616  6F75               	movwf	(cleanBuffer@count+1)& (0+255),b
 17363  005618  6974               	setf	cleanBuffer@count& (0+255),b
 17364  00561A  EC6E  F02A         	call	_cleanBuffer	;wreg free
 17365                           
 17366                           ;Bluetooth.c: 66: CommandStringPos = 0;
 17367  00561E  0E00               	movlw	0
 17368  005620  6E30               	movwf	_CommandStringPos,c
 17369                           
 17370                           ;Bluetooth.c: 68: LATA &= ~0x10;
 17371  005622  9889               	bcf	3977,4,c	;volatile
 17372                           
 17373                           ;Bluetooth.c: 69: ResetBlue();
 17374  005624  ECA9  F02C         	call	_ResetBlue	;wreg free
 17375                           
 17376                           ;Bluetooth.c: 70: LATA |= 0x08;
 17377  005628  8689               	bsf	3977,3,c	;volatile
 17378                           
 17379                           ;Bluetooth.c: 71: LATA &= ~0x10;
 17380  00562A  9889               	bcf	3977,4,c	;volatile
 17381                           
 17382                           ;Bluetooth.c: 72: if(!BluetoothConfigured())
 17383  00562C  EC35  F02D         	call	_BluetoothConfigured	;wreg free
 17384  005630  0900               	iorlw	0
 17385  005632  A4D8               	btfss	status,2,c
 17386  005634  0012               	return	
 17387                           
 17388                           ;Bluetooth.c: 73: {
 17389                           ;Bluetooth.c: 74: BluetoothInitialSetup();
 17390  005636  EC03  F012         	call	_BluetoothInitialSetup	;wreg free
 17391  00563A  0012               	return	
 17392  00563C  0012               	return		;funcret
 17393  00563E                     __end_of_InitBluetooth:
 17394                           	opt stack 0
 17395                           tblptru	equ	0xFF8
 17396                           tblptrh	equ	0xFF7
 17397                           tblptrl	equ	0xFF6
 17398                           tablat	equ	0xFF5
 17399                           prodh	equ	0xFF4
 17400                           prodl	equ	0xFF3
 17401                           intcon	equ	0xFF2
 17402                           intcon2	equ	0xFF1
 17403                           indf0	equ	0xFEF
 17404                           postinc0	equ	0xFEE
 17405                           plusw0	equ	0xFEB
 17406                           fsr0h	equ	0xFEA
 17407                           fsr0l	equ	0xFE9
 17408                           wreg	equ	0xFE8
 17409                           indf1	equ	0xFE7
 17410                           postdec1	equ	0xFE5
 17411                           fsr1h	equ	0xFE2
 17412                           fsr1l	equ	0xFE1
 17413                           indf2	equ	0xFDF
 17414                           postinc2	equ	0xFDE
 17415                           postdec2	equ	0xFDD
 17416                           plusw2	equ	0xFDB
 17417                           fsr2h	equ	0xFDA
 17418                           fsr2l	equ	0xFD9
 17419                           status	equ	0xFD8
 17420                           
 17421 ;; *************** function _BluetoothInitialSetup *****************
 17422 ;; Defined at:
 17423 ;;		line 144 in file "Bluetooth.c"
 17424 ;; Parameters:    Size  Location     Type
 17425 ;;		None
 17426 ;; Auto vars:     Size  Location     Type
 17427 ;;  buf            50   65[BANK0 ] unsigned char [50]
 17428 ;;  ok              1  115[BANK0 ] unsigned char 
 17429 ;; Return value:  Size  Location     Type
 17430 ;;                  1    wreg      unsigned char 
 17431 ;; Registers used:
 17432 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17433 ;; Tracked objects:
 17434 ;;		On entry : 0/0
 17435 ;;		On exit  : 0/0
 17436 ;;		Unchanged: 0/0
 17437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17439 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17441 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17442 ;;Total ram usage:       51 bytes
 17443 ;; Hardware stack levels used:    1
 17444 ;; Hardware stack levels required when called:    9
 17445 ;; This function calls:
 17446 ;;		_EnterCommandMode
 17447 ;;		_StringContains
 17448 ;;		_UARTstring
 17449 ;;		_cleanBuffer
 17450 ;;		_delayUS
 17451 ;;		_sprintf
 17452 ;; This function is called by:
 17453 ;;		_InitBluetooth
 17454 ;; This function uses a non-reentrant model
 17455 ;;
 17456                           
 17457                           	psect	text58
 17458  002406                     __ptext58:
 17459                           	opt stack 0
 17460  002406                     _BluetoothInitialSetup:
 17461                           	opt stack 19
 17462                           
 17463                           ;Bluetooth.c: 146: unsigned char buf[50];
 17464                           ;Bluetooth.c: 147: unsigned char ok = 1;
 17465                           
 17466                           ;incstack = 0
 17467  002406  0E01               	movlw	1
 17468  002408  0100               	movlb	0	; () banked
 17469  00240A  6FD3               	movwf	BluetoothInitialSetup@ok& (0+255),b
 17470                           
 17471                           ; BSR set to: 0
 17472                           ;Bluetooth.c: 149: cleanBuffer(buf,50);
 17473  00240C  0EA1               	movlw	low BluetoothInitialSetup@buf
 17474  00240E  0100               	movlb	0	; () banked
 17475  002410  6F72               	movwf	cleanBuffer@data& (0+255),b
 17476  002412  0E00               	movlw	high BluetoothInitialSetup@buf
 17477  002414  0100               	movlb	0	; () banked
 17478  002416  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
 17479  002418  0E00               	movlw	0
 17480  00241A  0100               	movlb	0	; () banked
 17481  00241C  6F75               	movwf	(cleanBuffer@count+1)& (0+255),b
 17482  00241E  0E32               	movlw	50
 17483  002420  6F74               	movwf	cleanBuffer@count& (0+255),b
 17484  002422  EC6E  F02A         	call	_cleanBuffer	;wreg free
 17485                           
 17486                           ;Bluetooth.c: 151: if(!EnterCommandMode())
 17487  002426  EC3E  F023         	call	_EnterCommandMode	;wreg free
 17488  00242A  0900               	iorlw	0
 17489  00242C  B4D8               	btfsc	status,2,c
 17490  00242E  0012               	return	
 17491  002430  D001               	goto	l9141
 17492                           
 17493                           ;Bluetooth.c: 152: {
 17494                           ;Bluetooth.c: 153: return 0;
 17495                           ;	Return value of _BluetoothInitialSetup is never used
 17496  002432  0012               	return	
 17497  002434                     l9141:
 17498                           
 17499                           ;Bluetooth.c: 154: }
 17500                           ;Bluetooth.c: 155: sprintf(buf,"SN,Home Automation %ld\r",SN);
 17501  002434  0EA1               	movlw	low BluetoothInitialSetup@buf
 17502  002436  0100               	movlb	0	; () banked
 17503  002438  6F88               	movwf	sprintf@sp& (0+255),b
 17504  00243A  0E00               	movlw	high BluetoothInitialSetup@buf
 17505  00243C  0100               	movlb	0	; () banked
 17506  00243E  6F89               	movwf	(sprintf@sp+1)& (0+255),b
 17507  002440  0EA2               	movlw	low STR_6
 17508  002442  0100               	movlb	0	; () banked
 17509  002444  6F8A               	movwf	sprintf@f& (0+255),b
 17510  002446  0EFD               	movlw	high STR_6
 17511  002448  0100               	movlb	0	; () banked
 17512  00244A  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 17513  00244C  C0E9  F08C         	movff	_SN,?_sprintf+4
 17514  002450  C0EA  F08D         	movff	_SN+1,?_sprintf+5
 17515  002454  C0EB  F08E         	movff	_SN+2,?_sprintf+6
 17516  002458  C0EC  F08F         	movff	_SN+3,?_sprintf+7
 17517  00245C  EC08  F014         	call	_sprintf	;wreg free
 17518                           
 17519                           ;Bluetooth.c: 156: UARTstring(buf);
 17520  002460  0EA1               	movlw	low BluetoothInitialSetup@buf
 17521  002462  0100               	movlb	0	; () banked
 17522  002464  6F73               	movwf	UARTstring@data& (0+255),b
 17523  002466  0E00               	movlw	high BluetoothInitialSetup@buf
 17524  002468  0100               	movlb	0	; () banked
 17525  00246A  6F74               	movwf	(UARTstring@data+1)& (0+255),b
 17526  00246C  EC9B  F02A         	call	_UARTstring	;wreg free
 17527                           
 17528                           ;Bluetooth.c: 157: delayUS(50000);
 17529  002470  0E50               	movlw	80
 17530  002472  0100               	movlb	0	; () banked
 17531  002474  6F72               	movwf	delayUS@US& (0+255),b
 17532  002476  0EC3               	movlw	195
 17533  002478  6F73               	movwf	(delayUS@US+1)& (0+255),b
 17534  00247A  0E00               	movlw	0
 17535  00247C  6F74               	movwf	(delayUS@US+2)& (0+255),b
 17536  00247E  0E00               	movlw	0
 17537  002480  6F75               	movwf	(delayUS@US+3)& (0+255),b
 17538  002482  EC1F  F02B         	call	_delayUS	;wreg free
 17539                           
 17540                           ;Bluetooth.c: 158: if(!StringContains(CommandString,"AOK"))
 17541  002486  0E00               	movlw	low _CommandString
 17542  002488  0100               	movlb	0	; () banked
 17543  00248A  6F72               	movwf	StringContains@This& (0+255),b
 17544  00248C  0E03               	movlw	high _CommandString
 17545  00248E  0100               	movlb	0	; () banked
 17546  002490  6F73               	movwf	(StringContains@This+1)& (0+255),b
 17547  002492  0EF7               	movlw	low STR_7
 17548  002494  0100               	movlb	0	; () banked
 17549  002496  6F74               	movwf	StringContains@That& (0+255),b
 17550  002498  0EFF               	movlw	high STR_7
 17551  00249A  0100               	movlb	0	; () banked
 17552  00249C  6F75               	movwf	(StringContains@That+1)& (0+255),b
 17553  00249E  EC1D  F025         	call	_StringContains	;wreg free
 17554  0024A2  0900               	iorlw	0
 17555  0024A4  A4D8               	btfss	status,2,c
 17556  0024A6  D004               	goto	l9151
 17557                           
 17558                           ;Bluetooth.c: 159: {
 17559                           ;Bluetooth.c: 160: ok = 0;
 17560  0024A8  0E00               	movlw	0
 17561  0024AA  0100               	movlb	0	; () banked
 17562  0024AC  6FD3               	movwf	BluetoothInitialSetup@ok& (0+255),b
 17563  0024AE  D000               	goto	l9151
 17564  0024B0                     l9151:
 17565                           
 17566                           ;Bluetooth.c: 161: }
 17567                           ;Bluetooth.c: 162: cleanBuffer(&CommandString,CommandStringPos);
 17568  0024B0  0E00               	movlw	low _CommandString
 17569  0024B2  0100               	movlb	0	; () banked
 17570  0024B4  6F72               	movwf	cleanBuffer@data& (0+255),b
 17571  0024B6  0E03               	movlw	high _CommandString
 17572  0024B8  0100               	movlb	0	; () banked
 17573  0024BA  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
 17574  0024BC  C030  F074         	movff	_CommandStringPos,cleanBuffer@count
 17575  0024C0  0100               	movlb	0	; () banked
 17576  0024C2  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
 17577  0024C4  EC6E  F02A         	call	_cleanBuffer	;wreg free
 17578                           
 17579                           ;Bluetooth.c: 163: CommandStringPos = 0;
 17580  0024C8  0E00               	movlw	0
 17581  0024CA  6E30               	movwf	_CommandStringPos,c
 17582                           
 17583                           ;Bluetooth.c: 165: if(ok)
 17584  0024CC  0100               	movlb	0	; () banked
 17585  0024CE  51D3               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 17586  0024D0  0100               	movlb	0	; () banked
 17587  0024D2  B4D8               	btfsc	status,2,c
 17588  0024D4  D028               	goto	l1398
 17589                           
 17590                           ; BSR set to: 0
 17591                           ;Bluetooth.c: 166: {
 17592                           ;Bluetooth.c: 167: UARTstring("SU, 115K\r");
 17593  0024D6  0E9A               	movlw	low STR_8
 17594  0024D8  0100               	movlb	0	; () banked
 17595  0024DA  6F73               	movwf	UARTstring@data& (0+255),b
 17596  0024DC  0EFF               	movlw	high STR_8
 17597  0024DE  0100               	movlb	0	; () banked
 17598  0024E0  6F74               	movwf	(UARTstring@data+1)& (0+255),b
 17599  0024E2  EC9B  F02A         	call	_UARTstring	;wreg free
 17600                           
 17601                           ;Bluetooth.c: 168: delayUS(50000);
 17602  0024E6  0E50               	movlw	80
 17603  0024E8  0100               	movlb	0	; () banked
 17604  0024EA  6F72               	movwf	delayUS@US& (0+255),b
 17605  0024EC  0EC3               	movlw	195
 17606  0024EE  6F73               	movwf	(delayUS@US+1)& (0+255),b
 17607  0024F0  0E00               	movlw	0
 17608  0024F2  6F74               	movwf	(delayUS@US+2)& (0+255),b
 17609  0024F4  0E00               	movlw	0
 17610  0024F6  6F75               	movwf	(delayUS@US+3)& (0+255),b
 17611  0024F8  EC1F  F02B         	call	_delayUS	;wreg free
 17612                           
 17613                           ;Bluetooth.c: 169: if(!StringContains(CommandString,"AOK"))
 17614  0024FC  0E00               	movlw	low _CommandString
 17615  0024FE  0100               	movlb	0	; () banked
 17616  002500  6F72               	movwf	StringContains@This& (0+255),b
 17617  002502  0E03               	movlw	high _CommandString
 17618  002504  0100               	movlb	0	; () banked
 17619  002506  6F73               	movwf	(StringContains@This+1)& (0+255),b
 17620  002508  0EF7               	movlw	low STR_7
 17621  00250A  0100               	movlb	0	; () banked
 17622  00250C  6F74               	movwf	StringContains@That& (0+255),b
 17623  00250E  0EFF               	movlw	high STR_7
 17624  002510  0100               	movlb	0	; () banked
 17625  002512  6F75               	movwf	(StringContains@That+1)& (0+255),b
 17626  002514  EC1D  F025         	call	_StringContains	;wreg free
 17627  002518  0900               	iorlw	0
 17628  00251A  A4D8               	btfss	status,2,c
 17629  00251C  D004               	goto	l1398
 17630                           
 17631                           ;Bluetooth.c: 170: {
 17632                           ;Bluetooth.c: 171: ok = 0;
 17633  00251E  0E00               	movlw	0
 17634  002520  0100               	movlb	0	; () banked
 17635  002522  6FD3               	movwf	BluetoothInitialSetup@ok& (0+255),b
 17636  002524  D000               	goto	l1398
 17637  002526                     l1398:
 17638                           
 17639                           ;Bluetooth.c: 172: }
 17640                           ;Bluetooth.c: 173: }
 17641                           ;Bluetooth.c: 175: if(ok)
 17642  002526  0100               	movlb	0	; () banked
 17643  002528  51D3               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 17644  00252A  0100               	movlb	0	; () banked
 17645  00252C  B4D8               	btfsc	status,2,c
 17646  00252E  D028               	goto	l9173
 17647                           
 17648                           ; BSR set to: 0
 17649                           ;Bluetooth.c: 176: {
 17650                           ;Bluetooth.c: 177: UARTstring("SS, Home Automation\r");
 17651  002530  0E44               	movlw	low STR_10
 17652  002532  0100               	movlb	0	; () banked
 17653  002534  6F73               	movwf	UARTstring@data& (0+255),b
 17654  002536  0EFE               	movlw	high STR_10
 17655  002538  0100               	movlb	0	; () banked
 17656  00253A  6F74               	movwf	(UARTstring@data+1)& (0+255),b
 17657  00253C  EC9B  F02A         	call	_UARTstring	;wreg free
 17658                           
 17659                           ;Bluetooth.c: 178: delayUS(50000);
 17660  002540  0E50               	movlw	80
 17661  002542  0100               	movlb	0	; () banked
 17662  002544  6F72               	movwf	delayUS@US& (0+255),b
 17663  002546  0EC3               	movlw	195
 17664  002548  6F73               	movwf	(delayUS@US+1)& (0+255),b
 17665  00254A  0E00               	movlw	0
 17666  00254C  6F74               	movwf	(delayUS@US+2)& (0+255),b
 17667  00254E  0E00               	movlw	0
 17668  002550  6F75               	movwf	(delayUS@US+3)& (0+255),b
 17669  002552  EC1F  F02B         	call	_delayUS	;wreg free
 17670                           
 17671                           ;Bluetooth.c: 179: if(!StringContains(CommandString,"AOK"))
 17672  002556  0E00               	movlw	low _CommandString
 17673  002558  0100               	movlb	0	; () banked
 17674  00255A  6F72               	movwf	StringContains@This& (0+255),b
 17675  00255C  0E03               	movlw	high _CommandString
 17676  00255E  0100               	movlb	0	; () banked
 17677  002560  6F73               	movwf	(StringContains@This+1)& (0+255),b
 17678  002562  0EF7               	movlw	low STR_7
 17679  002564  0100               	movlb	0	; () banked
 17680  002566  6F74               	movwf	StringContains@That& (0+255),b
 17681  002568  0EFF               	movlw	high STR_7
 17682  00256A  0100               	movlb	0	; () banked
 17683  00256C  6F75               	movwf	(StringContains@That+1)& (0+255),b
 17684  00256E  EC1D  F025         	call	_StringContains	;wreg free
 17685  002572  0900               	iorlw	0
 17686  002574  A4D8               	btfss	status,2,c
 17687  002576  D004               	goto	l9173
 17688                           
 17689                           ;Bluetooth.c: 180: {
 17690                           ;Bluetooth.c: 181: ok = 0;
 17691  002578  0E00               	movlw	0
 17692  00257A  0100               	movlb	0	; () banked
 17693  00257C  6FD3               	movwf	BluetoothInitialSetup@ok& (0+255),b
 17694                           
 17695                           ; BSR set to: 0
 17696  00257E  D000               	goto	l9173
 17697  002580                     l9173:
 17698                           
 17699                           ;Bluetooth.c: 182: }
 17700                           ;Bluetooth.c: 183: }
 17701                           ;Bluetooth.c: 184: cleanBuffer(&CommandString,CommandStringPos);
 17702  002580  0E00               	movlw	low _CommandString
 17703  002582  0100               	movlb	0	; () banked
 17704  002584  6F72               	movwf	cleanBuffer@data& (0+255),b
 17705  002586  0E03               	movlw	high _CommandString
 17706  002588  0100               	movlb	0	; () banked
 17707  00258A  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
 17708  00258C  C030  F074         	movff	_CommandStringPos,cleanBuffer@count
 17709  002590  0100               	movlb	0	; () banked
 17710  002592  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
 17711  002594  EC6E  F02A         	call	_cleanBuffer	;wreg free
 17712                           
 17713                           ;Bluetooth.c: 185: CommandStringPos = 0;
 17714  002598  0E00               	movlw	0
 17715  00259A  6E30               	movwf	_CommandStringPos,c
 17716                           
 17717                           ;Bluetooth.c: 187: if(ok)
 17718  00259C  0100               	movlb	0	; () banked
 17719  00259E  51D3               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 17720  0025A0  0100               	movlb	0	; () banked
 17721  0025A2  B4D8               	btfsc	status,2,c
 17722  0025A4  D028               	goto	l9187
 17723                           
 17724                           ; BSR set to: 0
 17725                           ;Bluetooth.c: 188: {
 17726                           ;Bluetooth.c: 189: UARTstring("SY,0010\r");
 17727  0025A6  0EAE               	movlw	low STR_12
 17728  0025A8  0100               	movlb	0	; () banked
 17729  0025AA  6F73               	movwf	UARTstring@data& (0+255),b
 17730  0025AC  0EFF               	movlw	high STR_12
 17731  0025AE  0100               	movlb	0	; () banked
 17732  0025B0  6F74               	movwf	(UARTstring@data+1)& (0+255),b
 17733  0025B2  EC9B  F02A         	call	_UARTstring	;wreg free
 17734                           
 17735                           ;Bluetooth.c: 190: delayUS(50000);
 17736  0025B6  0E50               	movlw	80
 17737  0025B8  0100               	movlb	0	; () banked
 17738  0025BA  6F72               	movwf	delayUS@US& (0+255),b
 17739  0025BC  0EC3               	movlw	195
 17740  0025BE  6F73               	movwf	(delayUS@US+1)& (0+255),b
 17741  0025C0  0E00               	movlw	0
 17742  0025C2  6F74               	movwf	(delayUS@US+2)& (0+255),b
 17743  0025C4  0E00               	movlw	0
 17744  0025C6  6F75               	movwf	(delayUS@US+3)& (0+255),b
 17745  0025C8  EC1F  F02B         	call	_delayUS	;wreg free
 17746                           
 17747                           ;Bluetooth.c: 191: if(!StringContains(CommandString,"AOK"))
 17748  0025CC  0E00               	movlw	low _CommandString
 17749  0025CE  0100               	movlb	0	; () banked
 17750  0025D0  6F72               	movwf	StringContains@This& (0+255),b
 17751  0025D2  0E03               	movlw	high _CommandString
 17752  0025D4  0100               	movlb	0	; () banked
 17753  0025D6  6F73               	movwf	(StringContains@This+1)& (0+255),b
 17754  0025D8  0EF7               	movlw	low STR_7
 17755  0025DA  0100               	movlb	0	; () banked
 17756  0025DC  6F74               	movwf	StringContains@That& (0+255),b
 17757  0025DE  0EFF               	movlw	high STR_7
 17758  0025E0  0100               	movlb	0	; () banked
 17759  0025E2  6F75               	movwf	(StringContains@That+1)& (0+255),b
 17760  0025E4  EC1D  F025         	call	_StringContains	;wreg free
 17761  0025E8  0900               	iorlw	0
 17762  0025EA  A4D8               	btfss	status,2,c
 17763  0025EC  D004               	goto	l9187
 17764                           
 17765                           ;Bluetooth.c: 192: {
 17766                           ;Bluetooth.c: 193: ok = 0;
 17767  0025EE  0E00               	movlw	0
 17768  0025F0  0100               	movlb	0	; () banked
 17769  0025F2  6FD3               	movwf	BluetoothInitialSetup@ok& (0+255),b
 17770                           
 17771                           ; BSR set to: 0
 17772  0025F4  D000               	goto	l9187
 17773  0025F6                     l9187:
 17774                           
 17775                           ;Bluetooth.c: 194: }
 17776                           ;Bluetooth.c: 195: }
 17777                           ;Bluetooth.c: 196: cleanBuffer(&CommandString,CommandStringPos);
 17778  0025F6  0E00               	movlw	low _CommandString
 17779  0025F8  0100               	movlb	0	; () banked
 17780  0025FA  6F72               	movwf	cleanBuffer@data& (0+255),b
 17781  0025FC  0E03               	movlw	high _CommandString
 17782  0025FE  0100               	movlb	0	; () banked
 17783  002600  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
 17784  002602  C030  F074         	movff	_CommandStringPos,cleanBuffer@count
 17785  002606  0100               	movlb	0	; () banked
 17786  002608  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
 17787  00260A  EC6E  F02A         	call	_cleanBuffer	;wreg free
 17788                           
 17789                           ;Bluetooth.c: 197: CommandStringPos = 0;
 17790  00260E  0E00               	movlw	0
 17791  002610  6E30               	movwf	_CommandStringPos,c
 17792                           
 17793                           ;Bluetooth.c: 199: if(ok)
 17794  002612  0100               	movlb	0	; () banked
 17795  002614  51D3               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 17796  002616  0100               	movlb	0	; () banked
 17797  002618  B4D8               	btfsc	status,2,c
 17798  00261A  D028               	goto	l9201
 17799                           
 17800                           ; BSR set to: 0
 17801                           ;Bluetooth.c: 200: {
 17802                           ;Bluetooth.c: 201: UARTstring("S~,0\r");
 17803  00261C  0EC7               	movlw	low STR_14
 17804  00261E  0100               	movlb	0	; () banked
 17805  002620  6F73               	movwf	UARTstring@data& (0+255),b
 17806  002622  0EFF               	movlw	high STR_14
 17807  002624  0100               	movlb	0	; () banked
 17808  002626  6F74               	movwf	(UARTstring@data+1)& (0+255),b
 17809  002628  EC9B  F02A         	call	_UARTstring	;wreg free
 17810                           
 17811                           ;Bluetooth.c: 202: delayUS(50000);
 17812  00262C  0E50               	movlw	80
 17813  00262E  0100               	movlb	0	; () banked
 17814  002630  6F72               	movwf	delayUS@US& (0+255),b
 17815  002632  0EC3               	movlw	195
 17816  002634  6F73               	movwf	(delayUS@US+1)& (0+255),b
 17817  002636  0E00               	movlw	0
 17818  002638  6F74               	movwf	(delayUS@US+2)& (0+255),b
 17819  00263A  0E00               	movlw	0
 17820  00263C  6F75               	movwf	(delayUS@US+3)& (0+255),b
 17821  00263E  EC1F  F02B         	call	_delayUS	;wreg free
 17822                           
 17823                           ;Bluetooth.c: 203: if(!StringContains(CommandString,"AOK"))
 17824  002642  0E00               	movlw	low _CommandString
 17825  002644  0100               	movlb	0	; () banked
 17826  002646  6F72               	movwf	StringContains@This& (0+255),b
 17827  002648  0E03               	movlw	high _CommandString
 17828  00264A  0100               	movlb	0	; () banked
 17829  00264C  6F73               	movwf	(StringContains@This+1)& (0+255),b
 17830  00264E  0EF7               	movlw	low STR_7
 17831  002650  0100               	movlb	0	; () banked
 17832  002652  6F74               	movwf	StringContains@That& (0+255),b
 17833  002654  0EFF               	movlw	high STR_7
 17834  002656  0100               	movlb	0	; () banked
 17835  002658  6F75               	movwf	(StringContains@That+1)& (0+255),b
 17836  00265A  EC1D  F025         	call	_StringContains	;wreg free
 17837  00265E  0900               	iorlw	0
 17838  002660  A4D8               	btfss	status,2,c
 17839  002662  D004               	goto	l9201
 17840                           
 17841                           ;Bluetooth.c: 204: {
 17842                           ;Bluetooth.c: 205: ok = 0;
 17843  002664  0E00               	movlw	0
 17844  002666  0100               	movlb	0	; () banked
 17845  002668  6FD3               	movwf	BluetoothInitialSetup@ok& (0+255),b
 17846                           
 17847                           ; BSR set to: 0
 17848  00266A  D000               	goto	l9201
 17849  00266C                     l9201:
 17850                           
 17851                           ;Bluetooth.c: 206: }
 17852                           ;Bluetooth.c: 207: }
 17853                           ;Bluetooth.c: 208: cleanBuffer(&CommandString,CommandStringPos);
 17854  00266C  0E00               	movlw	low _CommandString
 17855  00266E  0100               	movlb	0	; () banked
 17856  002670  6F72               	movwf	cleanBuffer@data& (0+255),b
 17857  002672  0E03               	movlw	high _CommandString
 17858  002674  0100               	movlb	0	; () banked
 17859  002676  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
 17860  002678  C030  F074         	movff	_CommandStringPos,cleanBuffer@count
 17861  00267C  0100               	movlb	0	; () banked
 17862  00267E  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
 17863  002680  EC6E  F02A         	call	_cleanBuffer	;wreg free
 17864                           
 17865                           ;Bluetooth.c: 209: CommandStringPos = 0;
 17866  002684  0E00               	movlw	0
 17867  002686  6E30               	movwf	_CommandStringPos,c
 17868                           
 17869                           ;Bluetooth.c: 211: if(ok)
 17870  002688  0100               	movlb	0	; () banked
 17871  00268A  51D3               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 17872  00268C  0100               	movlb	0	; () banked
 17873  00268E  B4D8               	btfsc	status,2,c
 17874  002690  D028               	goto	l9215
 17875                           
 17876                           ; BSR set to: 0
 17877                           ;Bluetooth.c: 212: {
 17878                           ;Bluetooth.c: 213: UARTstring("S~,0\r");
 17879  002692  0EC7               	movlw	low STR_14
 17880  002694  0100               	movlb	0	; () banked
 17881  002696  6F73               	movwf	UARTstring@data& (0+255),b
 17882  002698  0EFF               	movlw	high STR_14
 17883  00269A  0100               	movlb	0	; () banked
 17884  00269C  6F74               	movwf	(UARTstring@data+1)& (0+255),b
 17885  00269E  EC9B  F02A         	call	_UARTstring	;wreg free
 17886                           
 17887                           ;Bluetooth.c: 214: delayUS(50000);
 17888  0026A2  0E50               	movlw	80
 17889  0026A4  0100               	movlb	0	; () banked
 17890  0026A6  6F72               	movwf	delayUS@US& (0+255),b
 17891  0026A8  0EC3               	movlw	195
 17892  0026AA  6F73               	movwf	(delayUS@US+1)& (0+255),b
 17893  0026AC  0E00               	movlw	0
 17894  0026AE  6F74               	movwf	(delayUS@US+2)& (0+255),b
 17895  0026B0  0E00               	movlw	0
 17896  0026B2  6F75               	movwf	(delayUS@US+3)& (0+255),b
 17897  0026B4  EC1F  F02B         	call	_delayUS	;wreg free
 17898                           
 17899                           ;Bluetooth.c: 215: if(!StringContains(CommandString,"AOK"))
 17900  0026B8  0E00               	movlw	low _CommandString
 17901  0026BA  0100               	movlb	0	; () banked
 17902  0026BC  6F72               	movwf	StringContains@This& (0+255),b
 17903  0026BE  0E03               	movlw	high _CommandString
 17904  0026C0  0100               	movlb	0	; () banked
 17905  0026C2  6F73               	movwf	(StringContains@This+1)& (0+255),b
 17906  0026C4  0EF7               	movlw	low STR_7
 17907  0026C6  0100               	movlb	0	; () banked
 17908  0026C8  6F74               	movwf	StringContains@That& (0+255),b
 17909  0026CA  0EFF               	movlw	high STR_7
 17910  0026CC  0100               	movlb	0	; () banked
 17911  0026CE  6F75               	movwf	(StringContains@That+1)& (0+255),b
 17912  0026D0  EC1D  F025         	call	_StringContains	;wreg free
 17913  0026D4  0900               	iorlw	0
 17914  0026D6  A4D8               	btfss	status,2,c
 17915  0026D8  D004               	goto	l9215
 17916                           
 17917                           ;Bluetooth.c: 216: {
 17918                           ;Bluetooth.c: 217: ok = 0;
 17919  0026DA  0E00               	movlw	0
 17920  0026DC  0100               	movlb	0	; () banked
 17921  0026DE  6FD3               	movwf	BluetoothInitialSetup@ok& (0+255),b
 17922                           
 17923                           ; BSR set to: 0
 17924  0026E0  D000               	goto	l9215
 17925  0026E2                     l9215:
 17926                           
 17927                           ;Bluetooth.c: 218: }
 17928                           ;Bluetooth.c: 219: }
 17929                           ;Bluetooth.c: 220: cleanBuffer(&CommandString,CommandStringPos);
 17930  0026E2  0E00               	movlw	low _CommandString
 17931  0026E4  0100               	movlb	0	; () banked
 17932  0026E6  6F72               	movwf	cleanBuffer@data& (0+255),b
 17933  0026E8  0E03               	movlw	high _CommandString
 17934  0026EA  0100               	movlb	0	; () banked
 17935  0026EC  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
 17936  0026EE  C030  F074         	movff	_CommandStringPos,cleanBuffer@count
 17937  0026F2  0100               	movlb	0	; () banked
 17938  0026F4  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
 17939  0026F6  EC6E  F02A         	call	_cleanBuffer	;wreg free
 17940                           
 17941                           ;Bluetooth.c: 221: CommandStringPos = 0;
 17942  0026FA  0E00               	movlw	0
 17943  0026FC  6E30               	movwf	_CommandStringPos,c
 17944                           
 17945                           ;Bluetooth.c: 223: if(ok)
 17946  0026FE  0100               	movlb	0	; () banked
 17947  002700  51D3               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 17948  002702  0100               	movlb	0	; () banked
 17949  002704  B4D8               	btfsc	status,2,c
 17950  002706  D03E               	goto	l9231
 17951                           
 17952                           ; BSR set to: 0
 17953                           ;Bluetooth.c: 224: {
 17954                           ;Bluetooth.c: 225: UARTstring("D,0\r");
 17955  002708  0EDE               	movlw	low STR_18
 17956  00270A  0100               	movlb	0	; () banked
 17957  00270C  6F73               	movwf	UARTstring@data& (0+255),b
 17958  00270E  0EFF               	movlw	high STR_18
 17959  002710  0100               	movlb	0	; () banked
 17960  002712  6F74               	movwf	(UARTstring@data+1)& (0+255),b
 17961  002714  EC9B  F02A         	call	_UARTstring	;wreg free
 17962                           
 17963                           ;Bluetooth.c: 226: delayUS(50000);
 17964  002718  0E50               	movlw	80
 17965  00271A  0100               	movlb	0	; () banked
 17966  00271C  6F72               	movwf	delayUS@US& (0+255),b
 17967  00271E  0EC3               	movlw	195
 17968  002720  6F73               	movwf	(delayUS@US+1)& (0+255),b
 17969  002722  0E00               	movlw	0
 17970  002724  6F74               	movwf	(delayUS@US+2)& (0+255),b
 17971  002726  0E00               	movlw	0
 17972  002728  6F75               	movwf	(delayUS@US+3)& (0+255),b
 17973  00272A  EC1F  F02B         	call	_delayUS	;wreg free
 17974                           
 17975                           ;Bluetooth.c: 227: sprintf(buf,"BTName=Home Automation %ld\r",SN);
 17976  00272E  0EA1               	movlw	low BluetoothInitialSetup@buf
 17977  002730  0100               	movlb	0	; () banked
 17978  002732  6F88               	movwf	sprintf@sp& (0+255),b
 17979  002734  0E00               	movlw	high BluetoothInitialSetup@buf
 17980  002736  0100               	movlb	0	; () banked
 17981  002738  6F89               	movwf	(sprintf@sp+1)& (0+255),b
 17982  00273A  0E6C               	movlw	low STR_19
 17983  00273C  0100               	movlb	0	; () banked
 17984  00273E  6F8A               	movwf	sprintf@f& (0+255),b
 17985  002740  0EFD               	movlw	high STR_19
 17986  002742  0100               	movlb	0	; () banked
 17987  002744  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 17988  002746  C0E9  F08C         	movff	_SN,?_sprintf+4
 17989  00274A  C0EA  F08D         	movff	_SN+1,?_sprintf+5
 17990  00274E  C0EB  F08E         	movff	_SN+2,?_sprintf+6
 17991  002752  C0EC  F08F         	movff	_SN+3,?_sprintf+7
 17992  002756  EC08  F014         	call	_sprintf	;wreg free
 17993                           
 17994                           ;Bluetooth.c: 228: if(!StringContains(CommandString, buf))
 17995  00275A  0E00               	movlw	low _CommandString
 17996  00275C  0100               	movlb	0	; () banked
 17997  00275E  6F72               	movwf	StringContains@This& (0+255),b
 17998  002760  0E03               	movlw	high _CommandString
 17999  002762  0100               	movlb	0	; () banked
 18000  002764  6F73               	movwf	(StringContains@This+1)& (0+255),b
 18001  002766  0EA1               	movlw	low BluetoothInitialSetup@buf
 18002  002768  0100               	movlb	0	; () banked
 18003  00276A  6F74               	movwf	StringContains@That& (0+255),b
 18004  00276C  0E00               	movlw	high BluetoothInitialSetup@buf
 18005  00276E  0100               	movlb	0	; () banked
 18006  002770  6F75               	movwf	(StringContains@That+1)& (0+255),b
 18007  002772  EC1D  F025         	call	_StringContains	;wreg free
 18008  002776  0900               	iorlw	0
 18009  002778  A4D8               	btfss	status,2,c
 18010  00277A  D004               	goto	l9231
 18011                           
 18012                           ;Bluetooth.c: 229: {
 18013                           ;Bluetooth.c: 230: ok = 0;
 18014  00277C  0E00               	movlw	0
 18015  00277E  0100               	movlb	0	; () banked
 18016  002780  6FD3               	movwf	BluetoothInitialSetup@ok& (0+255),b
 18017                           
 18018                           ; BSR set to: 0
 18019  002782  D000               	goto	l9231
 18020  002784                     l9231:
 18021                           
 18022                           ;Bluetooth.c: 231: }
 18023                           ;Bluetooth.c: 232: }
 18024                           ;Bluetooth.c: 233: cleanBuffer(&CommandString,CommandStringPos);
 18025  002784  0E00               	movlw	low _CommandString
 18026  002786  0100               	movlb	0	; () banked
 18027  002788  6F72               	movwf	cleanBuffer@data& (0+255),b
 18028  00278A  0E03               	movlw	high _CommandString
 18029  00278C  0100               	movlb	0	; () banked
 18030  00278E  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
 18031  002790  C030  F074         	movff	_CommandStringPos,cleanBuffer@count
 18032  002794  0100               	movlb	0	; () banked
 18033  002796  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
 18034  002798  EC6E  F02A         	call	_cleanBuffer	;wreg free
 18035                           
 18036                           ;Bluetooth.c: 234: CommandStringPos = 0;
 18037  00279C  0E00               	movlw	0
 18038  00279E  6E30               	movwf	_CommandStringPos,c
 18039                           
 18040                           ;Bluetooth.c: 236: UARTstring("---\r");
 18041  0027A0  0ED9               	movlw	low STR_20
 18042  0027A2  0100               	movlb	0	; () banked
 18043  0027A4  6F73               	movwf	UARTstring@data& (0+255),b
 18044  0027A6  0EFF               	movlw	high STR_20
 18045  0027A8  0100               	movlb	0	; () banked
 18046  0027AA  6F74               	movwf	(UARTstring@data+1)& (0+255),b
 18047  0027AC  EC9B  F02A         	call	_UARTstring	;wreg free
 18048                           
 18049                           ;Bluetooth.c: 237: delayUS(50000);
 18050  0027B0  0E50               	movlw	80
 18051  0027B2  0100               	movlb	0	; () banked
 18052  0027B4  6F72               	movwf	delayUS@US& (0+255),b
 18053  0027B6  0EC3               	movlw	195
 18054  0027B8  6F73               	movwf	(delayUS@US+1)& (0+255),b
 18055  0027BA  0E00               	movlw	0
 18056  0027BC  6F74               	movwf	(delayUS@US+2)& (0+255),b
 18057  0027BE  0E00               	movlw	0
 18058  0027C0  6F75               	movwf	(delayUS@US+3)& (0+255),b
 18059  0027C2  EC1F  F02B         	call	_delayUS	;wreg free
 18060                           
 18061                           ;Bluetooth.c: 238: if(!StringContains(CommandString, "END"))
 18062  0027C6  0E00               	movlw	low _CommandString
 18063  0027C8  0100               	movlb	0	; () banked
 18064  0027CA  6F72               	movwf	StringContains@This& (0+255),b
 18065  0027CC  0E03               	movlw	high _CommandString
 18066  0027CE  0100               	movlb	0	; () banked
 18067  0027D0  6F73               	movwf	(StringContains@This+1)& (0+255),b
 18068  0027D2  0EF3               	movlw	low STR_21
 18069  0027D4  0100               	movlb	0	; () banked
 18070  0027D6  6F74               	movwf	StringContains@That& (0+255),b
 18071  0027D8  0EFF               	movlw	high STR_21
 18072  0027DA  0100               	movlb	0	; () banked
 18073  0027DC  6F75               	movwf	(StringContains@That+1)& (0+255),b
 18074  0027DE  EC1D  F025         	call	_StringContains	;wreg free
 18075  0027E2  0900               	iorlw	0
 18076  0027E4  A4D8               	btfss	status,2,c
 18077  0027E6  D004               	goto	l9243
 18078                           
 18079                           ;Bluetooth.c: 239: {
 18080                           ;Bluetooth.c: 240: ok = 0;
 18081  0027E8  0E00               	movlw	0
 18082  0027EA  0100               	movlb	0	; () banked
 18083  0027EC  6FD3               	movwf	BluetoothInitialSetup@ok& (0+255),b
 18084  0027EE  D000               	goto	l9243
 18085  0027F0                     l9243:
 18086                           
 18087                           ;Bluetooth.c: 241: }
 18088                           ;Bluetooth.c: 242: cleanBuffer(&CommandString,CommandStringPos);
 18089  0027F0  0E00               	movlw	low _CommandString
 18090  0027F2  0100               	movlb	0	; () banked
 18091  0027F4  6F72               	movwf	cleanBuffer@data& (0+255),b
 18092  0027F6  0E03               	movlw	high _CommandString
 18093  0027F8  0100               	movlb	0	; () banked
 18094  0027FA  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
 18095  0027FC  C030  F074         	movff	_CommandStringPos,cleanBuffer@count
 18096  002800  0100               	movlb	0	; () banked
 18097  002802  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
 18098  002804  EC6E  F02A         	call	_cleanBuffer	;wreg free
 18099                           
 18100                           ;Bluetooth.c: 243: CommandStringPos = 0;
 18101  002808  0E00               	movlw	0
 18102  00280A  6E30               	movwf	_CommandStringPos,c
 18103                           
 18104                           ;Bluetooth.c: 246: {
 18105                           ;Bluetooth.c: 247: return 1;
 18106                           ;	Return value of _BluetoothInitialSetup is never used
 18107  00280C  0012               	return	
 18108                           
 18109                           ;Bluetooth.c: 248: }
 18110                           ;Bluetooth.c: 249: return 0;
 18111                           ;	Return value of _BluetoothInitialSetup is never used
 18112  00280E  0012               	return		;funcret
 18113  002810                     __end_of_BluetoothInitialSetup:
 18114                           	opt stack 0
 18115                           tblptru	equ	0xFF8
 18116                           tblptrh	equ	0xFF7
 18117                           tblptrl	equ	0xFF6
 18118                           tablat	equ	0xFF5
 18119                           prodh	equ	0xFF4
 18120                           prodl	equ	0xFF3
 18121                           intcon	equ	0xFF2
 18122                           intcon2	equ	0xFF1
 18123                           indf0	equ	0xFEF
 18124                           postinc0	equ	0xFEE
 18125                           plusw0	equ	0xFEB
 18126                           fsr0h	equ	0xFEA
 18127                           fsr0l	equ	0xFE9
 18128                           wreg	equ	0xFE8
 18129                           indf1	equ	0xFE7
 18130                           postdec1	equ	0xFE5
 18131                           fsr1h	equ	0xFE2
 18132                           fsr1l	equ	0xFE1
 18133                           indf2	equ	0xFDF
 18134                           postinc2	equ	0xFDE
 18135                           postdec2	equ	0xFDD
 18136                           plusw2	equ	0xFDB
 18137                           fsr2h	equ	0xFDA
 18138                           fsr2l	equ	0xFD9
 18139                           status	equ	0xFD8
 18140                           
 18141 ;; *************** function _sprintf *****************
 18142 ;; Defined at:
 18143 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 18144 ;; Parameters:    Size  Location     Type
 18145 ;;  sp              2   40[BANK0 ] PTR unsigned char 
 18146 ;;		 -> UseBluetooth@buf(50), BluetoothInitialSetup@buf(50), 
 18147 ;;  f               2   42[BANK0 ] PTR const unsigned char 
 18148 ;;		 -> STR_47(24), STR_33(13), STR_32(13), STR_31(18), 
 18149 ;;		 -> STR_29(23), STR_28(17), STR_27(17), STR_19(28), 
 18150 ;;		 -> STR_6(24), 
 18151 ;; Auto vars:     Size  Location     Type
 18152 ;;  idx             1   54[BANK0 ] unsigned char 
 18153 ;;  val             4   59[BANK0 ] unsigned long 
 18154 ;;  tmpval          4    0        struct .
 18155 ;;  cp              3    0        PTR const unsigned char 
 18156 ;;  ap              2   57[BANK0 ] PTR void [1]
 18157 ;;		 -> ?_sprintf(2), 
 18158 ;;  prec            2   55[BANK0 ] int 
 18159 ;;  len             2    0        unsigned int 
 18160 ;;  c               1   64[BANK0 ] char 
 18161 ;;  flag            1   63[BANK0 ] unsigned char 
 18162 ;; Return value:  Size  Location     Type
 18163 ;;                  2   40[BANK0 ] int 
 18164 ;; Registers used:
 18165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18166 ;; Tracked objects:
 18167 ;;		On entry : 0/0
 18168 ;;		On exit  : 0/0
 18169 ;;		Unchanged: 0/0
 18170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18171 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18172 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18173 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18174 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18175 ;;Total ram usage:       25 bytes
 18176 ;; Hardware stack levels used:    1
 18177 ;; Hardware stack levels required when called:    7
 18178 ;; This function calls:
 18179 ;;		___lldiv
 18180 ;;		___llmod
 18181 ;; This function is called by:
 18182 ;;		_BluetoothInitialSetup
 18183 ;;		_UseBluetooth
 18184 ;; This function uses a non-reentrant model
 18185 ;;
 18186                           
 18187                           	psect	text59
 18188  002810                     __ptext59:
 18189                           	opt stack 0
 18190  002810                     _sprintf:
 18191                           	opt stack 22
 18192                           
 18193                           ;doprnt.c: 494: va_list ap;
 18194                           ;doprnt.c: 499: signed char c;
 18195                           ;doprnt.c: 504: int prec;
 18196                           ;doprnt.c: 508: unsigned char flag;
 18197                           ;doprnt.c: 523: union {
 18198                           ;doprnt.c: 524: unsigned long vd;
 18199                           ;doprnt.c: 525: double integ;
 18200                           ;doprnt.c: 526: } tmpval;
 18201                           ;doprnt.c: 528: unsigned long val;
 18202                           ;doprnt.c: 529: unsigned len;
 18203                           ;doprnt.c: 530: const char * cp;
 18204                           ;doprnt.c: 533: *ap = __va_start();
 18205                           
 18206                           ;incstack = 0
 18207  002810  0E8C               	movlw	low (?_sprintf+4)
 18208  002812  0100               	movlb	0	; () banked
 18209  002814  6F99               	movwf	sprintf@ap& (0+255),b
 18210  002816  0E00               	movlw	high (?_sprintf+4)
 18211  002818  0100               	movlb	0	; () banked
 18212  00281A  6F9A               	movwf	(sprintf@ap+1)& (0+255),b
 18213                           
 18214                           ;doprnt.c: 536: while(c = *f++) {
 18215  00281C  D1B3               	goto	l8961
 18216  00281E                     l8865:
 18217                           
 18218                           ; BSR set to: 0
 18219                           ;doprnt.c: 538: if(c != '%')
 18220  00281E  0E25               	movlw	37
 18221  002820  0100               	movlb	0	; () banked
 18222  002822  19A0               	xorwf	sprintf@c& (0+255),w,b
 18223  002824  B4D8               	btfsc	status,2,c
 18224  002826  D00A               	goto	l8871
 18225                           
 18226                           ; BSR set to: 0
 18227                           ;doprnt.c: 540: {
 18228                           ;doprnt.c: 541: ((*sp++ = (c)));
 18229  002828  C088  FFD9         	movff	sprintf@sp,fsr2l
 18230  00282C  C089  FFDA         	movff	sprintf@sp+1,fsr2h
 18231  002830  C0A0  FFDF         	movff	sprintf@c,indf2
 18232                           
 18233                           ; BSR set to: 0
 18234  002834  0100               	movlb	0	; () banked
 18235  002836  4B88               	infsnz	sprintf@sp& (0+255),f,b
 18236  002838  2B89               	incf	(sprintf@sp+1)& (0+255),f,b
 18237                           
 18238                           ;doprnt.c: 542: continue;
 18239  00283A  D1A4               	goto	l8961
 18240  00283C                     l8871:
 18241                           
 18242                           ; BSR set to: 0
 18243                           ;doprnt.c: 543: }
 18244                           ;doprnt.c: 548: flag = 0;
 18245  00283C  0E00               	movlw	0
 18246  00283E  0100               	movlb	0	; () banked
 18247  002840  6F9F               	movwf	sprintf@flag& (0+255),b
 18248                           
 18249                           ; BSR set to: 0
 18250                           ;doprnt.c: 635: switch(c = *f++) {
 18251                           
 18252                           ;doprnt.c: 633: loop:
 18253  002842  D00B               	goto	l8879
 18254                           
 18255                           ; BSR set to: 0
 18256                           ;doprnt.c: 638: goto alldone;
 18257                           
 18258                           ;doprnt.c: 637: case 0:
 18259  002844  D1AF               	goto	l8963
 18260  002846                     l8873:
 18261                           
 18262                           ; BSR set to: 0
 18263                           ;doprnt.c: 643: flag |= 0x10;
 18264  002846  0100               	movlb	0	; () banked
 18265  002848  899F               	bsf	sprintf@flag& (0+255),4,b
 18266                           
 18267                           ;doprnt.c: 644: goto loop;
 18268  00284A  D007               	goto	l8879
 18269                           
 18270                           ; BSR set to: 0
 18271                           ;doprnt.c: 698: case 'i':
 18272                           ;doprnt.c: 699: break;
 18273                           
 18274                           ; BSR set to: 0
 18275                           
 18276                           ;doprnt.c: 697: case 'd':
 18277  00284C  D025               	goto	l1647
 18278                           
 18279                           ; BSR set to: 0
 18280                           
 18281                           ;doprnt.c: 712: case 'X':
 18282  00284E  D000               	goto	l8875
 18283  002850                     l8875:
 18284                           
 18285                           ; BSR set to: 0
 18286                           ;doprnt.c: 718: case 'x':
 18287                           ;doprnt.c: 721: flag |= 0x80;
 18288  002850  0100               	movlb	0	; () banked
 18289  002852  8F9F               	bsf	sprintf@flag& (0+255),7,b
 18290                           
 18291                           ;doprnt.c: 723: break;
 18292  002854  D021               	goto	l1647
 18293                           
 18294                           ; BSR set to: 0
 18295                           ;doprnt.c: 813: continue;
 18296                           
 18297                           ;doprnt.c: 802: default:
 18298  002856  D196               	goto	l8961
 18299                           
 18300                           ; BSR set to: 0
 18301                           ;doprnt.c: 822: }
 18302  002858  D01F               	goto	l1647
 18303  00285A                     l8879:
 18304                           
 18305                           ; BSR set to: 0
 18306  00285A  C08A  FFF6         	movff	sprintf@f,tblptrl
 18307  00285E  C08B  FFF7         	movff	sprintf@f+1,tblptrh
 18308  002862  0100               	movlb	0	; () banked
 18309  002864  4B8A               	infsnz	sprintf@f& (0+255),f,b
 18310  002866  2B8B               	incf	(sprintf@f+1)& (0+255),f,b
 18311  002868                     	if	0	;tblptru may be non-zero
 18312  002868                     	endif
 18313  002868                     	if	0	;tblptru may be non-zero
 18314  002868                     	endif
 18315  002868  0008               	tblrd		*
 18316  00286A  CFF5 F0A0          	movff	tablat,sprintf@c
 18317  00286E  0100               	movlb	0	; () banked
 18318  002870  51A0               	movf	sprintf@c& (0+255),w,b
 18319                           
 18320                           ; Switch size 1, requested type "space"
 18321                           ; Number of cases is 6, Range of values is 0 to 120
 18322                           ; switch strategies available:
 18323                           ; Name         Instructions Cycles
 18324                           ; simple_byte           19    10 (average)
 18325                           ;	Chosen strategy is simple_byte
 18326  002872  0A00               	xorlw	0	; case 0
 18327  002874  B4D8               	btfsc	status,2,c
 18328  002876  D196               	goto	l8963
 18329  002878  0A58               	xorlw	88	; case 88
 18330  00287A  B4D8               	btfsc	status,2,c
 18331  00287C  D7E9               	goto	l8875
 18332  00287E  0A3C               	xorlw	60	; case 100
 18333  002880  B4D8               	btfsc	status,2,c
 18334  002882  D00A               	goto	l1647
 18335  002884  0A0D               	xorlw	13	; case 105
 18336  002886  B4D8               	btfsc	status,2,c
 18337  002888  D007               	goto	l1647
 18338  00288A  0A05               	xorlw	5	; case 108
 18339  00288C  B4D8               	btfsc	status,2,c
 18340  00288E  D7DB               	goto	l8873
 18341  002890  0A14               	xorlw	20	; case 120
 18342  002892  B4D8               	btfsc	status,2,c
 18343  002894  D7DD               	goto	l8875
 18344  002896  D176               	goto	l8961
 18345  002898                     l1647:
 18346                           
 18347                           ; BSR set to: 0
 18348                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
 18349  002898  0100               	movlb	0	; () banked
 18350  00289A  BF9F               	btfsc	sprintf@flag& (0+255),7,b
 18351  00289C  D035               	goto	l1651
 18352                           
 18353                           ; BSR set to: 0
 18354                           ;doprnt.c: 1253: {
 18355                           ;doprnt.c: 1255: if(flag & 0x10)
 18356  00289E  0100               	movlb	0	; () banked
 18357  0028A0  A99F               	btfss	sprintf@flag& (0+255),4,b
 18358  0028A2  D00E               	goto	l8887
 18359                           
 18360                           ; BSR set to: 0
 18361                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 18362  0028A4  C099  FFD9         	movff	sprintf@ap,fsr2l
 18363  0028A8  C09A  FFDA         	movff	sprintf@ap+1,fsr2h
 18364  0028AC  CFDE F09B          	movff	postinc2,sprintf@val
 18365  0028B0  CFDE F09C          	movff	postinc2,sprintf@val+1
 18366  0028B4  CFDE F09D          	movff	postinc2,sprintf@val+2
 18367  0028B8  CFDE F09E          	movff	postinc2,sprintf@val+3
 18368                           
 18369                           ; BSR set to: 0
 18370  0028BC  0E04               	movlw	4
 18371  0028BE  D00F               	goto	L6
 18372  0028C0                     l8887:
 18373                           
 18374                           ; BSR set to: 0
 18375                           ;doprnt.c: 1257: else
 18376                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 18377  0028C0  C099  FFD9         	movff	sprintf@ap,fsr2l
 18378  0028C4  C09A  FFDA         	movff	sprintf@ap+1,fsr2h
 18379  0028C8  CFDE F09B          	movff	postinc2,sprintf@val
 18380  0028CC  CFDD F09C          	movff	postdec2,sprintf@val+1
 18381  0028D0  0100               	movlb	0	; () banked
 18382  0028D2  0E00               	movlw	0
 18383  0028D4  BF9C               	btfsc	(sprintf@val+1)& (0+255),7,b
 18384  0028D6  0EFF               	movlw	-1
 18385  0028D8  6F9D               	movwf	(sprintf@val+2)& (0+255),b
 18386  0028DA  6F9E               	movwf	(sprintf@val+3)& (0+255),b
 18387                           
 18388                           ; BSR set to: 0
 18389  0028DC  0E02               	movlw	2
 18390  0028DE                     L6:
 18391  0028DE  0100               	movlb	0	; () banked
 18392  0028E0  2799               	addwf	sprintf@ap& (0+255),f,b
 18393  0028E2  0E00               	movlw	0
 18394  0028E4  239A               	addwfc	(sprintf@ap+1)& (0+255),f,b
 18395  0028E6  D000               	goto	l8891
 18396  0028E8                     l8891:
 18397                           
 18398                           ; BSR set to: 0
 18399                           ;doprnt.c: 1261: if((long)val < 0) {
 18400  0028E8  0100               	movlb	0	; () banked
 18401  0028EA  AF9E               	btfss	(sprintf@val+3)& (0+255),7,b
 18402  0028EC  D089               	goto	l8935
 18403                           
 18404                           ; BSR set to: 0
 18405                           ;doprnt.c: 1262: flag |= 0x03;
 18406  0028EE  0E03               	movlw	3
 18407  0028F0  0100               	movlb	0	; () banked
 18408  0028F2  139F               	iorwf	sprintf@flag& (0+255),f,b
 18409                           
 18410                           ; BSR set to: 0
 18411                           ;doprnt.c: 1263: val = -val;
 18412  0028F4  0100               	movlb	0	; () banked
 18413  0028F6  1F9E               	comf	(sprintf@val+3)& (0+255),f,b
 18414  0028F8  1F9D               	comf	(sprintf@val+2)& (0+255),f,b
 18415  0028FA  1F9C               	comf	(sprintf@val+1)& (0+255),f,b
 18416  0028FC  6D9B               	negf	sprintf@val& (0+255),b
 18417  0028FE  0E00               	movlw	0
 18418  002900  239C               	addwfc	(sprintf@val+1)& (0+255),f,b
 18419  002902  239D               	addwfc	(sprintf@val+2)& (0+255),f,b
 18420  002904  239E               	addwfc	(sprintf@val+3)& (0+255),f,b
 18421                           
 18422                           ; BSR set to: 0
 18423                           ;doprnt.c: 1264: }
 18424                           ;doprnt.c: 1266: }
 18425  002906  D07C               	goto	l8935
 18426  002908                     l1651:
 18427                           
 18428                           ; BSR set to: 0
 18429                           ;doprnt.c: 1268: else
 18430                           ;doprnt.c: 1273: {
 18431                           ;doprnt.c: 1281: if(flag & 0x10)
 18432  002908  0100               	movlb	0	; () banked
 18433  00290A  A99F               	btfss	sprintf@flag& (0+255),4,b
 18434  00290C  D00E               	goto	l8901
 18435                           
 18436                           ; BSR set to: 0
 18437                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 18438  00290E  C099  FFD9         	movff	sprintf@ap,fsr2l
 18439  002912  C09A  FFDA         	movff	sprintf@ap+1,fsr2h
 18440  002916  CFDE F09B          	movff	postinc2,sprintf@val
 18441  00291A  CFDE F09C          	movff	postinc2,sprintf@val+1
 18442  00291E  CFDE F09D          	movff	postinc2,sprintf@val+2
 18443  002922  CFDE F09E          	movff	postinc2,sprintf@val+3
 18444                           
 18445                           ; BSR set to: 0
 18446  002926  0E04               	movlw	4
 18447  002928  D010               	goto	L7
 18448  00292A                     l8901:
 18449                           
 18450                           ; BSR set to: 0
 18451                           ;doprnt.c: 1283: else
 18452                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 18453  00292A  C099  FFD9         	movff	sprintf@ap,fsr2l
 18454  00292E  C09A  FFDA         	movff	sprintf@ap+1,fsr2h
 18455  002932  CFDE F094          	movff	postinc2,??_sprintf
 18456  002936  CFDD F095          	movff	postdec2,??_sprintf+1
 18457  00293A  C094  F09B         	movff	??_sprintf,sprintf@val
 18458  00293E  C095  F09C         	movff	??_sprintf+1,sprintf@val+1
 18459  002942  0100               	movlb	0	; () banked
 18460  002944  6B9D               	clrf	(sprintf@val+2)& (0+255),b
 18461  002946  6B9E               	clrf	(sprintf@val+3)& (0+255),b
 18462                           
 18463                           ; BSR set to: 0
 18464  002948  0E02               	movlw	2
 18465  00294A                     L7:
 18466  00294A  0100               	movlb	0	; () banked
 18467  00294C  2799               	addwf	sprintf@ap& (0+255),f,b
 18468  00294E  0E00               	movlw	0
 18469  002950  239A               	addwfc	(sprintf@ap+1)& (0+255),f,b
 18470                           
 18471                           ; BSR set to: 0
 18472                           ;doprnt.c: 1287: }
 18473                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
 18474                           
 18475                           ; BSR set to: 0
 18476  002952  D056               	goto	l8935
 18477  002954                     l8905:
 18478                           
 18479                           ; BSR set to: 0
 18480                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 18481  002954  0E01               	movlw	1
 18482  002956  0100               	movlb	0	; () banked
 18483  002958  6FA0               	movwf	sprintf@c& (0+255),b
 18484  00295A                     l8907:
 18485                           
 18486                           ; BSR set to: 0
 18487  00295A  0E0A               	movlw	10
 18488  00295C  0100               	movlb	0	; () banked
 18489  00295E  19A0               	xorwf	sprintf@c& (0+255),w,b
 18490  002960  B4D8               	btfsc	status,2,c
 18491  002962  D058               	goto	l8937
 18492  002964  D001               	goto	l8911
 18493                           
 18494                           ; BSR set to: 0
 18495  002966  D056               	goto	l8937
 18496  002968                     l8911:
 18497                           
 18498                           ; BSR set to: 0
 18499                           ;doprnt.c: 1306: if(val < dpowers[c])
 18500  002968  0100               	movlb	0	; () banked
 18501  00296A  51A0               	movf	sprintf@c& (0+255),w,b
 18502  00296C  0D04               	mullw	4
 18503  00296E  0E63               	movlw	low _dpowers
 18504  002970  24F3               	addwf	prodl,w,c
 18505  002972  6EF6               	movwf	tblptrl,c
 18506  002974  0EF9               	movlw	high _dpowers
 18507  002976  20F4               	addwfc	prodh,w,c
 18508  002978  6EF7               	movwf	tblptrh,c
 18509  00297A                     	if	0	;There are less than 3 active tblptr bytes
 18510  00297A                     	endif
 18511  00297A  0009               	tblrd		*+
 18512  00297C  50F5               	movf	tablat,w,c
 18513  00297E  0100               	movlb	0	; () banked
 18514  002980  5D9B               	subwf	sprintf@val& (0+255),w,b
 18515  002982  0009               	tblrd		*+
 18516  002984  50F5               	movf	tablat,w,c
 18517  002986  0100               	movlb	0	; () banked
 18518  002988  599C               	subwfb	(sprintf@val+1)& (0+255),w,b
 18519  00298A  0009               	tblrd		*+
 18520  00298C  50F5               	movf	tablat,w,c
 18521  00298E  0100               	movlb	0	; () banked
 18522  002990  599D               	subwfb	(sprintf@val+2)& (0+255),w,b
 18523  002992  0009               	tblrd		*+
 18524  002994  50F5               	movf	tablat,w,c
 18525  002996  0100               	movlb	0	; () banked
 18526  002998  599E               	subwfb	(sprintf@val+3)& (0+255),w,b
 18527  00299A  A0D8               	btfss	status,0,c
 18528  00299C  D03B               	goto	l8937
 18529  00299E  D001               	goto	l8915
 18530                           
 18531                           ; BSR set to: 0
 18532                           ;doprnt.c: 1307: break;
 18533  0029A0  D039               	goto	l8937
 18534  0029A2                     l8915:
 18535                           
 18536                           ; BSR set to: 0
 18537  0029A2  0100               	movlb	0	; () banked
 18538  0029A4  2BA0               	incf	sprintf@c& (0+255),f,b
 18539  0029A6  D7D9               	goto	l8907
 18540                           
 18541                           ; BSR set to: 0
 18542                           ;doprnt.c: 1309: break;
 18543                           
 18544                           ; BSR set to: 0
 18545  0029A8  D035               	goto	l8937
 18546  0029AA                     l8919:
 18547                           
 18548                           ; BSR set to: 0
 18549                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 18550  0029AA  0E01               	movlw	1
 18551  0029AC  0100               	movlb	0	; () banked
 18552  0029AE  6FA0               	movwf	sprintf@c& (0+255),b
 18553  0029B0                     l8921:
 18554                           
 18555                           ; BSR set to: 0
 18556  0029B0  0E08               	movlw	8
 18557  0029B2  0100               	movlb	0	; () banked
 18558  0029B4  19A0               	xorwf	sprintf@c& (0+255),w,b
 18559  0029B6  B4D8               	btfsc	status,2,c
 18560  0029B8  D02D               	goto	l8937
 18561  0029BA  D001               	goto	l8925
 18562                           
 18563                           ; BSR set to: 0
 18564  0029BC  D02B               	goto	l8937
 18565  0029BE                     l8925:
 18566                           
 18567                           ; BSR set to: 0
 18568                           ;doprnt.c: 1317: if(val < hexpowers[c])
 18569  0029BE  0100               	movlb	0	; () banked
 18570  0029C0  51A0               	movf	sprintf@c& (0+255),w,b
 18571  0029C2  0D04               	mullw	4
 18572  0029C4  0E8B               	movlw	low _hexpowers
 18573  0029C6  24F3               	addwf	prodl,w,c
 18574  0029C8  6EF6               	movwf	tblptrl,c
 18575  0029CA  0EF9               	movlw	high _hexpowers
 18576  0029CC  20F4               	addwfc	prodh,w,c
 18577  0029CE  6EF7               	movwf	tblptrh,c
 18578  0029D0                     	if	0	;There are less than 3 active tblptr bytes
 18579  0029D0                     	endif
 18580  0029D0  0009               	tblrd		*+
 18581  0029D2  50F5               	movf	tablat,w,c
 18582  0029D4  0100               	movlb	0	; () banked
 18583  0029D6  5D9B               	subwf	sprintf@val& (0+255),w,b
 18584  0029D8  0009               	tblrd		*+
 18585  0029DA  50F5               	movf	tablat,w,c
 18586  0029DC  0100               	movlb	0	; () banked
 18587  0029DE  599C               	subwfb	(sprintf@val+1)& (0+255),w,b
 18588  0029E0  0009               	tblrd		*+
 18589  0029E2  50F5               	movf	tablat,w,c
 18590  0029E4  0100               	movlb	0	; () banked
 18591  0029E6  599D               	subwfb	(sprintf@val+2)& (0+255),w,b
 18592  0029E8  0009               	tblrd		*+
 18593  0029EA  50F5               	movf	tablat,w,c
 18594  0029EC  0100               	movlb	0	; () banked
 18595  0029EE  599E               	subwfb	(sprintf@val+3)& (0+255),w,b
 18596  0029F0  A0D8               	btfss	status,0,c
 18597  0029F2  D010               	goto	l8937
 18598  0029F4  D001               	goto	l8929
 18599                           
 18600                           ; BSR set to: 0
 18601                           ;doprnt.c: 1318: break;
 18602  0029F6  D00E               	goto	l8937
 18603  0029F8                     l8929:
 18604                           
 18605                           ; BSR set to: 0
 18606  0029F8  0100               	movlb	0	; () banked
 18607  0029FA  2BA0               	incf	sprintf@c& (0+255),f,b
 18608  0029FC  D7D9               	goto	l8921
 18609                           
 18610                           ; BSR set to: 0
 18611                           ;doprnt.c: 1336: }
 18612                           
 18613                           ; BSR set to: 0
 18614                           ;doprnt.c: 1320: break;
 18615                           
 18616                           ; BSR set to: 0
 18617  0029FE  D00A               	goto	l8937
 18618  002A00                     l8935:
 18619                           
 18620                           ; BSR set to: 0
 18621  002A00  0100               	movlb	0	; () banked
 18622  002A02  519F               	movf	sprintf@flag& (0+255),w,b
 18623  002A04  0B80               	andlw	128
 18624                           
 18625                           ; Switch size 1, requested type "space"
 18626                           ; Number of cases is 2, Range of values is 0 to 128
 18627                           ; switch strategies available:
 18628                           ; Name         Instructions Cycles
 18629                           ; simple_byte            7     4 (average)
 18630                           ;	Chosen strategy is simple_byte
 18631  002A06  0A00               	xorlw	0	; case 0
 18632  002A08  B4D8               	btfsc	status,2,c
 18633  002A0A  D7A4               	goto	l8905
 18634  002A0C  0A80               	xorlw	128	; case 128
 18635  002A0E  B4D8               	btfsc	status,2,c
 18636  002A10  D7CC               	goto	l8919
 18637  002A12  D000               	goto	l8937
 18638  002A14                     l8937:
 18639                           
 18640                           ; BSR set to: 0
 18641                           ;doprnt.c: 1422: {
 18642                           ;doprnt.c: 1438: if(flag & 0x03)
 18643  002A14  C09F  F094         	movff	sprintf@flag,??_sprintf
 18644  002A18  0E03               	movlw	3
 18645  002A1A  0100               	movlb	0	; () banked
 18646  002A1C  1794               	andwf	??_sprintf& (0+255),f,b
 18647  002A1E  B4D8               	btfsc	status,2,c
 18648  002A20  D00A               	goto	l8943
 18649                           
 18650                           ; BSR set to: 0
 18651                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 18652  002A22  C088  FFD9         	movff	sprintf@sp,fsr2l
 18653  002A26  C089  FFDA         	movff	sprintf@sp+1,fsr2h
 18654  002A2A  0E2D               	movlw	45
 18655  002A2C  6EDF               	movwf	indf2,c
 18656                           
 18657                           ; BSR set to: 0
 18658  002A2E  0100               	movlb	0	; () banked
 18659  002A30  4B88               	infsnz	sprintf@sp& (0+255),f,b
 18660  002A32  2B89               	incf	(sprintf@sp+1)& (0+255),f,b
 18661  002A34  D000               	goto	l8943
 18662  002A36                     l8943:
 18663                           
 18664                           ; BSR set to: 0
 18665                           ;doprnt.c: 1469: }
 18666                           ;doprnt.c: 1472: prec = c;
 18667  002A36  0100               	movlb	0	; () banked
 18668  002A38  51A0               	movf	sprintf@c& (0+255),w,b
 18669  002A3A  0100               	movlb	0	; () banked
 18670  002A3C  6F97               	movwf	sprintf@prec& (0+255),b
 18671  002A3E  6B98               	clrf	(sprintf@prec+1)& (0+255),b
 18672  002A40  BF97               	btfsc	sprintf@prec& (0+255),7,b
 18673  002A42  0798               	decf	(sprintf@prec+1)& (0+255),f,b
 18674                           
 18675                           ;doprnt.c: 1474: while(prec--) {
 18676  002A44  D092               	goto	l8959
 18677                           
 18678                           ; BSR set to: 0
 18679                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
 18680  002A46  D07D               	goto	l8953
 18681  002A48                     l8945:
 18682                           
 18683                           ; BSR set to: 0
 18684                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 18685  002A48  C097  F094         	movff	sprintf@prec,??_sprintf
 18686  002A4C  C098  F095         	movff	sprintf@prec+1,??_sprintf+1
 18687  002A50  0100               	movlb	0	; () banked
 18688  002A52  90D8               	bcf	status,0,c
 18689  002A54  3794               	rlcf	??_sprintf& (0+255),f,b
 18690  002A56  3795               	rlcf	(??_sprintf+1)& (0+255),f,b
 18691  002A58  0100               	movlb	0	; () banked
 18692  002A5A  90D8               	bcf	status,0,c
 18693  002A5C  3794               	rlcf	??_sprintf& (0+255),f,b
 18694  002A5E  3795               	rlcf	(??_sprintf+1)& (0+255),f,b
 18695  002A60  0E63               	movlw	low _dpowers
 18696  002A62  0100               	movlb	0	; () banked
 18697  002A64  2594               	addwf	??_sprintf& (0+255),w,b
 18698  002A66  6EF6               	movwf	tblptrl,c
 18699  002A68  0EF9               	movlw	high _dpowers
 18700  002A6A  2195               	addwfc	(??_sprintf+1)& (0+255),w,b
 18701  002A6C  6EF7               	movwf	tblptrh,c
 18702  002A6E                     	if	0	;There are less than 3 active tblptr bytes
 18703  002A6E                     	endif
 18704  002A6E  0009               	tblrd		*+
 18705  002A70  CFF5 F076          	movff	tablat,___lldiv@divisor
 18706  002A74  0009               	tblrd		*+
 18707  002A76  CFF5 F077          	movff	tablat,___lldiv@divisor+1
 18708  002A7A  0009               	tblrd		*+
 18709  002A7C  CFF5 F078          	movff	tablat,___lldiv@divisor+2
 18710  002A80  000A               	tblrd		*-
 18711  002A82  CFF5 F079          	movff	tablat,___lldiv@divisor+3
 18712  002A86  C09B  F072         	movff	sprintf@val,___lldiv@dividend
 18713  002A8A  C09C  F073         	movff	sprintf@val+1,___lldiv@dividend+1
 18714  002A8E  C09D  F074         	movff	sprintf@val+2,___lldiv@dividend+2
 18715  002A92  C09E  F075         	movff	sprintf@val+3,___lldiv@dividend+3
 18716  002A96  ECA2  F023         	call	___lldiv	;wreg free
 18717  002A9A  C072  F07F         	movff	?___lldiv,___llmod@dividend
 18718  002A9E  C073  F080         	movff	?___lldiv+1,___llmod@dividend+1
 18719  002AA2  C074  F081         	movff	?___lldiv+2,___llmod@dividend+2
 18720  002AA6  C075  F082         	movff	?___lldiv+3,___llmod@dividend+3
 18721  002AAA  0E0A               	movlw	10
 18722  002AAC  0100               	movlb	0	; () banked
 18723  002AAE  6F83               	movwf	___llmod@divisor& (0+255),b
 18724  002AB0  0E00               	movlw	0
 18725  002AB2  6F84               	movwf	(___llmod@divisor+1)& (0+255),b
 18726  002AB4  0E00               	movlw	0
 18727  002AB6  6F85               	movwf	(___llmod@divisor+2)& (0+255),b
 18728  002AB8  0E00               	movlw	0
 18729  002ABA  6F86               	movwf	(___llmod@divisor+3)& (0+255),b
 18730  002ABC  EC23  F026         	call	___llmod	;wreg free
 18731  002AC0  0100               	movlb	0	; () banked
 18732  002AC2  517F               	movf	?___llmod& (0+255),w,b
 18733  002AC4  0F30               	addlw	48
 18734  002AC6  0100               	movlb	0	; () banked
 18735  002AC8  6FA0               	movwf	sprintf@c& (0+255),b
 18736                           
 18737                           ;doprnt.c: 1491: break;
 18738  002ACA  D045               	goto	l8955
 18739  002ACC                     l8947:
 18740                           
 18741                           ; BSR set to: 0
 18742                           ;doprnt.c: 1499: {
 18743                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 18744  002ACC  C09B  F072         	movff	sprintf@val,___lldiv@dividend
 18745  002AD0  C09C  F073         	movff	sprintf@val+1,___lldiv@dividend+1
 18746  002AD4  C09D  F074         	movff	sprintf@val+2,___lldiv@dividend+2
 18747  002AD8  C09E  F075         	movff	sprintf@val+3,___lldiv@dividend+3
 18748  002ADC  C097  F094         	movff	sprintf@prec,??_sprintf
 18749  002AE0  C098  F095         	movff	sprintf@prec+1,??_sprintf+1
 18750  002AE4  0100               	movlb	0	; () banked
 18751  002AE6  90D8               	bcf	status,0,c
 18752  002AE8  3794               	rlcf	??_sprintf& (0+255),f,b
 18753  002AEA  3795               	rlcf	(??_sprintf+1)& (0+255),f,b
 18754  002AEC  0100               	movlb	0	; () banked
 18755  002AEE  90D8               	bcf	status,0,c
 18756  002AF0  3794               	rlcf	??_sprintf& (0+255),f,b
 18757  002AF2  3795               	rlcf	(??_sprintf+1)& (0+255),f,b
 18758  002AF4  0E8B               	movlw	low _hexpowers
 18759  002AF6  0100               	movlb	0	; () banked
 18760  002AF8  2594               	addwf	??_sprintf& (0+255),w,b
 18761  002AFA  6EF6               	movwf	tblptrl,c
 18762  002AFC  0EF9               	movlw	high _hexpowers
 18763  002AFE  2195               	addwfc	(??_sprintf+1)& (0+255),w,b
 18764  002B00  6EF7               	movwf	tblptrh,c
 18765  002B02                     	if	0	;There are less than 3 active tblptr bytes
 18766  002B02                     	endif
 18767  002B02  0009               	tblrd		*+
 18768  002B04  CFF5 F076          	movff	tablat,___lldiv@divisor
 18769  002B08  0009               	tblrd		*+
 18770  002B0A  CFF5 F077          	movff	tablat,___lldiv@divisor+1
 18771  002B0E  0009               	tblrd		*+
 18772  002B10  CFF5 F078          	movff	tablat,___lldiv@divisor+2
 18773  002B14  000A               	tblrd		*-
 18774  002B16  CFF5 F079          	movff	tablat,___lldiv@divisor+3
 18775  002B1A  ECA2  F023         	call	___lldiv	;wreg free
 18776  002B1E  0100               	movlb	0	; () banked
 18777  002B20  5172               	movf	?___lldiv& (0+255),w,b
 18778  002B22  0B0F               	andlw	15
 18779  002B24  0100               	movlb	0	; () banked
 18780  002B26  6F96               	movwf	sprintf@idx& (0+255),b
 18781                           
 18782                           ; BSR set to: 0
 18783                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 18784  002B28  0100               	movlb	0	; () banked
 18785  002B2A  5196               	movf	sprintf@idx& (0+255),w,b
 18786  002B2C  0D01               	mullw	1
 18787  002B2E  0EF2               	movlw	low STR_73
 18788  002B30  24F3               	addwf	prodl,w,c
 18789  002B32  6EF6               	movwf	tblptrl,c
 18790  002B34  0EFE               	movlw	high STR_73
 18791  002B36  20F4               	addwfc	prodh,w,c
 18792  002B38  6EF7               	movwf	tblptrh,c
 18793  002B3A                     	if	0	;There are less than 3 active tblptr bytes
 18794  002B3A                     	endif
 18795  002B3A  0008               	tblrd		*
 18796  002B3C  CFF5 F0A0          	movff	tablat,sprintf@c
 18797                           
 18798                           ; BSR set to: 0
 18799                           ;doprnt.c: 1523: }
 18800                           
 18801                           ;doprnt.c: 1508: }
 18802                           ;doprnt.c: 1510: break;
 18803  002B40  D00A               	goto	l8955
 18804  002B42                     l8953:
 18805                           
 18806                           ; BSR set to: 0
 18807  002B42  0100               	movlb	0	; () banked
 18808  002B44  519F               	movf	sprintf@flag& (0+255),w,b
 18809  002B46  0B80               	andlw	128
 18810                           
 18811                           ; Switch size 1, requested type "space"
 18812                           ; Number of cases is 2, Range of values is 0 to 128
 18813                           ; switch strategies available:
 18814                           ; Name         Instructions Cycles
 18815                           ; simple_byte            7     4 (average)
 18816                           ;	Chosen strategy is simple_byte
 18817  002B48  0A00               	xorlw	0	; case 0
 18818  002B4A  B4D8               	btfsc	status,2,c
 18819  002B4C  D77D               	goto	l8945
 18820  002B4E  0A80               	xorlw	128	; case 128
 18821  002B50  B4D8               	btfsc	status,2,c
 18822  002B52  D7BC               	goto	l8947
 18823  002B54  D000               	goto	l8955
 18824  002B56                     l8955:
 18825                           
 18826                           ; BSR set to: 0
 18827                           ;doprnt.c: 1524: ((*sp++ = (c)));
 18828  002B56  C088  FFD9         	movff	sprintf@sp,fsr2l
 18829  002B5A  C089  FFDA         	movff	sprintf@sp+1,fsr2h
 18830  002B5E  C0A0  FFDF         	movff	sprintf@c,indf2
 18831                           
 18832                           ; BSR set to: 0
 18833  002B62  0100               	movlb	0	; () banked
 18834  002B64  4B88               	infsnz	sprintf@sp& (0+255),f,b
 18835  002B66  2B89               	incf	(sprintf@sp+1)& (0+255),f,b
 18836  002B68  D000               	goto	l8959
 18837  002B6A                     l8959:
 18838                           
 18839                           ; BSR set to: 0
 18840  002B6A  0100               	movlb	0	; () banked
 18841  002B6C  0797               	decf	sprintf@prec& (0+255),f,b
 18842  002B6E  A0D8               	btfss	status,0,c
 18843  002B70  0798               	decf	(sprintf@prec+1)& (0+255),f,b
 18844  002B72  0100               	movlb	0	; () banked
 18845  002B74  2997               	incf	sprintf@prec& (0+255),w,b
 18846  002B76  E1E5               	bnz	l8953
 18847  002B78  0100               	movlb	0	; () banked
 18848  002B7A  2998               	incf	(sprintf@prec+1)& (0+255),w,b
 18849  002B7C  B4D8               	btfsc	status,2,c
 18850  002B7E  D002               	goto	l8961
 18851  002B80  D7E0               	goto	l8953
 18852                           
 18853                           ; BSR set to: 0
 18854  002B82  D000               	goto	l8961
 18855  002B84                     l8961:
 18856                           
 18857                           ; BSR set to: 0
 18858  002B84  C08A  FFF6         	movff	sprintf@f,tblptrl
 18859  002B88  C08B  FFF7         	movff	sprintf@f+1,tblptrh
 18860  002B8C  0100               	movlb	0	; () banked
 18861  002B8E  4B8A               	infsnz	sprintf@f& (0+255),f,b
 18862  002B90  2B8B               	incf	(sprintf@f+1)& (0+255),f,b
 18863  002B92                     	if	0	;tblptru may be non-zero
 18864  002B92                     	endif
 18865  002B92                     	if	0	;tblptru may be non-zero
 18866  002B92                     	endif
 18867  002B92  0008               	tblrd		*
 18868  002B94  CFF5 F0A0          	movff	tablat,sprintf@c
 18869  002B98  0100               	movlb	0	; () banked
 18870  002B9A  51A0               	movf	sprintf@c& (0+255),w,b
 18871  002B9C  B4D8               	btfsc	status,2,c
 18872  002B9E  D002               	goto	l8963
 18873  002BA0  D63E               	goto	l8865
 18874                           
 18875                           ; BSR set to: 0
 18876  002BA2  D000               	goto	l8963
 18877  002BA4                     l8963:
 18878                           
 18879                           ; BSR set to: 0
 18880                           ;doprnt.c: 1538: *sp = 0;
 18881  002BA4  C088  FFD9         	movff	sprintf@sp,fsr2l
 18882  002BA8  C089  FFDA         	movff	sprintf@sp+1,fsr2h
 18883  002BAC  0E00               	movlw	0
 18884  002BAE  6EDF               	movwf	indf2,c
 18885  002BB0  0012               	return	
 18886                           
 18887                           ; BSR set to: 0
 18888                           
 18889                           ; BSR set to: 0
 18890                           ;doprnt.c: 1540: return 0;
 18891                           ;	Return value of _sprintf is never used
 18892  002BB2  0012               	return		;funcret
 18893  002BB4                     __end_of_sprintf:
 18894                           	opt stack 0
 18895                           tblptru	equ	0xFF8
 18896                           tblptrh	equ	0xFF7
 18897                           tblptrl	equ	0xFF6
 18898                           tablat	equ	0xFF5
 18899                           prodh	equ	0xFF4
 18900                           prodl	equ	0xFF3
 18901                           intcon	equ	0xFF2
 18902                           intcon2	equ	0xFF1
 18903                           indf0	equ	0xFEF
 18904                           postinc0	equ	0xFEE
 18905                           plusw0	equ	0xFEB
 18906                           fsr0h	equ	0xFEA
 18907                           fsr0l	equ	0xFE9
 18908                           wreg	equ	0xFE8
 18909                           indf1	equ	0xFE7
 18910                           postdec1	equ	0xFE5
 18911                           fsr1h	equ	0xFE2
 18912                           fsr1l	equ	0xFE1
 18913                           indf2	equ	0xFDF
 18914                           postinc2	equ	0xFDE
 18915                           postdec2	equ	0xFDD
 18916                           plusw2	equ	0xFDB
 18917                           fsr2h	equ	0xFDA
 18918                           fsr2l	equ	0xFD9
 18919                           status	equ	0xFD8
 18920                           
 18921 ;; *************** function ___llmod *****************
 18922 ;; Defined at:
 18923 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 18924 ;; Parameters:    Size  Location     Type
 18925 ;;  dividend        4   31[BANK0 ] unsigned long 
 18926 ;;  divisor         4   35[BANK0 ] unsigned long 
 18927 ;; Auto vars:     Size  Location     Type
 18928 ;;  counter         1   39[BANK0 ] unsigned char 
 18929 ;; Return value:  Size  Location     Type
 18930 ;;                  4   31[BANK0 ] unsigned long 
 18931 ;; Registers used:
 18932 ;;		wreg, status,2, status,0
 18933 ;; Tracked objects:
 18934 ;;		On entry : 0/0
 18935 ;;		On exit  : 0/0
 18936 ;;		Unchanged: 0/0
 18937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18938 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18939 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18941 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18942 ;;Total ram usage:        9 bytes
 18943 ;; Hardware stack levels used:    1
 18944 ;; Hardware stack levels required when called:    6
 18945 ;; This function calls:
 18946 ;;		Nothing
 18947 ;; This function is called by:
 18948 ;;		_sprintf
 18949 ;; This function uses a non-reentrant model
 18950 ;;
 18951                           
 18952                           	psect	text60
 18953  004C46                     __ptext60:
 18954                           	opt stack 0
 18955  004C46                     ___llmod:
 18956                           	opt stack 22
 18957                           
 18958                           ; BSR set to: 0
 18959                           ;incstack = 0
 18960  004C46  0100               	movlb	0	; () banked
 18961  004C48  5183               	movf	___llmod@divisor& (0+255),w,b
 18962  004C4A  0100               	movlb	0	; () banked
 18963  004C4C  1184               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 18964  004C4E  0100               	movlb	0	; () banked
 18965  004C50  1185               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 18966  004C52  0100               	movlb	0	; () banked
 18967  004C54  1186               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 18968  004C56  B4D8               	btfsc	status,2,c
 18969  004C58  D03F               	goto	l2145
 18970                           
 18971                           ; BSR set to: 0
 18972  004C5A  0E01               	movlw	1
 18973  004C5C  0100               	movlb	0	; () banked
 18974  004C5E  6F87               	movwf	___llmod@counter& (0+255),b
 18975  004C60  D009               	goto	l8723
 18976  004C62                     l8721:
 18977                           
 18978                           ; BSR set to: 0
 18979  004C62  0100               	movlb	0	; () banked
 18980  004C64  90D8               	bcf	status,0,c
 18981  004C66  3783               	rlcf	___llmod@divisor& (0+255),f,b
 18982  004C68  3784               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 18983  004C6A  3785               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 18984  004C6C  3786               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 18985  004C6E  0100               	movlb	0	; () banked
 18986  004C70  2B87               	incf	___llmod@counter& (0+255),f,b
 18987  004C72  D000               	goto	l8723
 18988  004C74                     l8723:
 18989                           
 18990                           ; BSR set to: 0
 18991  004C74  0100               	movlb	0	; () banked
 18992  004C76  BF86               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 18993  004C78  D002               	goto	l8725
 18994  004C7A  D7F3               	goto	l8721
 18995                           
 18996                           ; BSR set to: 0
 18997  004C7C  D000               	goto	l8725
 18998  004C7E                     l8725:
 18999                           
 19000                           ; BSR set to: 0
 19001  004C7E  0100               	movlb	0	; () banked
 19002  004C80  5183               	movf	___llmod@divisor& (0+255),w,b
 19003  004C82  0100               	movlb	0	; () banked
 19004  004C84  5D7F               	subwf	___llmod@dividend& (0+255),w,b
 19005  004C86  0100               	movlb	0	; () banked
 19006  004C88  5184               	movf	(___llmod@divisor+1)& (0+255),w,b
 19007  004C8A  0100               	movlb	0	; () banked
 19008  004C8C  5980               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 19009  004C8E  0100               	movlb	0	; () banked
 19010  004C90  5185               	movf	(___llmod@divisor+2)& (0+255),w,b
 19011  004C92  0100               	movlb	0	; () banked
 19012  004C94  5981               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 19013  004C96  0100               	movlb	0	; () banked
 19014  004C98  5186               	movf	(___llmod@divisor+3)& (0+255),w,b
 19015  004C9A  0100               	movlb	0	; () banked
 19016  004C9C  5982               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 19017  004C9E  A0D8               	btfss	status,0,c
 19018  004CA0  D011               	goto	l8729
 19019                           
 19020                           ; BSR set to: 0
 19021  004CA2  0100               	movlb	0	; () banked
 19022  004CA4  5183               	movf	___llmod@divisor& (0+255),w,b
 19023  004CA6  0100               	movlb	0	; () banked
 19024  004CA8  5F7F               	subwf	___llmod@dividend& (0+255),f,b
 19025  004CAA  0100               	movlb	0	; () banked
 19026  004CAC  5184               	movf	(___llmod@divisor+1)& (0+255),w,b
 19027  004CAE  0100               	movlb	0	; () banked
 19028  004CB0  5B80               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 19029  004CB2  0100               	movlb	0	; () banked
 19030  004CB4  5185               	movf	(___llmod@divisor+2)& (0+255),w,b
 19031  004CB6  0100               	movlb	0	; () banked
 19032  004CB8  5B81               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 19033  004CBA  0100               	movlb	0	; () banked
 19034  004CBC  5186               	movf	(___llmod@divisor+3)& (0+255),w,b
 19035  004CBE  0100               	movlb	0	; () banked
 19036  004CC0  5B82               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 19037  004CC2  D000               	goto	l8729
 19038  004CC4                     l8729:
 19039                           
 19040                           ; BSR set to: 0
 19041  004CC4  0100               	movlb	0	; () banked
 19042  004CC6  90D8               	bcf	status,0,c
 19043  004CC8  3386               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 19044  004CCA  3385               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 19045  004CCC  3384               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 19046  004CCE  3383               	rrcf	___llmod@divisor& (0+255),f,b
 19047                           
 19048                           ; BSR set to: 0
 19049  004CD0  0100               	movlb	0	; () banked
 19050  004CD2  2F87               	decfsz	___llmod@counter& (0+255),f,b
 19051  004CD4  D7D4               	goto	l8725
 19052  004CD6  D000               	goto	l2145
 19053  004CD8                     l2145:
 19054                           
 19055                           ; BSR set to: 0
 19056  004CD8  C07F  F07F         	movff	___llmod@dividend,?___llmod
 19057  004CDC  C080  F080         	movff	___llmod@dividend+1,?___llmod+1
 19058  004CE0  C081  F081         	movff	___llmod@dividend+2,?___llmod+2
 19059  004CE4  C082  F082         	movff	___llmod@dividend+3,?___llmod+3
 19060                           
 19061                           ; BSR set to: 0
 19062  004CE8  0012               	return		;funcret
 19063  004CEA                     __end_of___llmod:
 19064                           	opt stack 0
 19065                           tblptru	equ	0xFF8
 19066                           tblptrh	equ	0xFF7
 19067                           tblptrl	equ	0xFF6
 19068                           tablat	equ	0xFF5
 19069                           prodh	equ	0xFF4
 19070                           prodl	equ	0xFF3
 19071                           intcon	equ	0xFF2
 19072                           intcon2	equ	0xFF1
 19073                           indf0	equ	0xFEF
 19074                           postinc0	equ	0xFEE
 19075                           plusw0	equ	0xFEB
 19076                           fsr0h	equ	0xFEA
 19077                           fsr0l	equ	0xFE9
 19078                           wreg	equ	0xFE8
 19079                           indf1	equ	0xFE7
 19080                           postdec1	equ	0xFE5
 19081                           fsr1h	equ	0xFE2
 19082                           fsr1l	equ	0xFE1
 19083                           indf2	equ	0xFDF
 19084                           postinc2	equ	0xFDE
 19085                           postdec2	equ	0xFDD
 19086                           plusw2	equ	0xFDB
 19087                           fsr2h	equ	0xFDA
 19088                           fsr2l	equ	0xFD9
 19089                           status	equ	0xFD8
 19090                           
 19091 ;; *************** function ___lldiv *****************
 19092 ;; Defined at:
 19093 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 19094 ;; Parameters:    Size  Location     Type
 19095 ;;  dividend        4   18[BANK0 ] unsigned long 
 19096 ;;  divisor         4   22[BANK0 ] unsigned long 
 19097 ;; Auto vars:     Size  Location     Type
 19098 ;;  quotient        4   26[BANK0 ] unsigned long 
 19099 ;;  counter         1   30[BANK0 ] unsigned char 
 19100 ;; Return value:  Size  Location     Type
 19101 ;;                  4   18[BANK0 ] unsigned long 
 19102 ;; Registers used:
 19103 ;;		wreg, status,2, status,0
 19104 ;; Tracked objects:
 19105 ;;		On entry : 0/0
 19106 ;;		On exit  : 0/0
 19107 ;;		Unchanged: 0/0
 19108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19109 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19110 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19112 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19113 ;;Total ram usage:       13 bytes
 19114 ;; Hardware stack levels used:    1
 19115 ;; Hardware stack levels required when called:    6
 19116 ;; This function calls:
 19117 ;;		Nothing
 19118 ;; This function is called by:
 19119 ;;		_InitUART
 19120 ;;		_sprintf
 19121 ;; This function uses a non-reentrant model
 19122 ;;
 19123                           
 19124                           	psect	text61
 19125  004744                     __ptext61:
 19126                           	opt stack 0
 19127  004744                     ___lldiv:
 19128                           	opt stack 22
 19129                           
 19130                           ; BSR set to: 0
 19131                           ;incstack = 0
 19132  004744  0E00               	movlw	0
 19133  004746  0100               	movlb	0	; () banked
 19134  004748  6F7A               	movwf	___lldiv@quotient& (0+255),b
 19135  00474A  0E00               	movlw	0
 19136  00474C  6F7B               	movwf	(___lldiv@quotient+1)& (0+255),b
 19137  00474E  0E00               	movlw	0
 19138  004750  6F7C               	movwf	(___lldiv@quotient+2)& (0+255),b
 19139  004752  0E00               	movlw	0
 19140  004754  6F7D               	movwf	(___lldiv@quotient+3)& (0+255),b
 19141                           
 19142                           ; BSR set to: 0
 19143  004756  0100               	movlb	0	; () banked
 19144  004758  5176               	movf	___lldiv@divisor& (0+255),w,b
 19145  00475A  0100               	movlb	0	; () banked
 19146  00475C  1177               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 19147  00475E  0100               	movlb	0	; () banked
 19148  004760  1178               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 19149  004762  0100               	movlb	0	; () banked
 19150  004764  1179               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 19151  004766  B4D8               	btfsc	status,2,c
 19152  004768  D047               	goto	l2135
 19153                           
 19154                           ; BSR set to: 0
 19155  00476A  0E01               	movlw	1
 19156  00476C  0100               	movlb	0	; () banked
 19157  00476E  6F7E               	movwf	___lldiv@counter& (0+255),b
 19158  004770  D009               	goto	l8703
 19159  004772                     l8701:
 19160                           
 19161                           ; BSR set to: 0
 19162  004772  0100               	movlb	0	; () banked
 19163  004774  90D8               	bcf	status,0,c
 19164  004776  3776               	rlcf	___lldiv@divisor& (0+255),f,b
 19165  004778  3777               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 19166  00477A  3778               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 19167  00477C  3779               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 19168  00477E  0100               	movlb	0	; () banked
 19169  004780  2B7E               	incf	___lldiv@counter& (0+255),f,b
 19170  004782  D000               	goto	l8703
 19171  004784                     l8703:
 19172                           
 19173                           ; BSR set to: 0
 19174  004784  0100               	movlb	0	; () banked
 19175  004786  BF79               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 19176  004788  D002               	goto	l8705
 19177  00478A  D7F3               	goto	l8701
 19178                           
 19179                           ; BSR set to: 0
 19180  00478C  D000               	goto	l8705
 19181  00478E                     l8705:
 19182                           
 19183                           ; BSR set to: 0
 19184  00478E  0100               	movlb	0	; () banked
 19185  004790  90D8               	bcf	status,0,c
 19186  004792  377A               	rlcf	___lldiv@quotient& (0+255),f,b
 19187  004794  377B               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 19188  004796  377C               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 19189  004798  377D               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 19190                           
 19191                           ; BSR set to: 0
 19192  00479A  0100               	movlb	0	; () banked
 19193  00479C  5176               	movf	___lldiv@divisor& (0+255),w,b
 19194  00479E  0100               	movlb	0	; () banked
 19195  0047A0  5D72               	subwf	___lldiv@dividend& (0+255),w,b
 19196  0047A2  0100               	movlb	0	; () banked
 19197  0047A4  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
 19198  0047A6  0100               	movlb	0	; () banked
 19199  0047A8  5973               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 19200  0047AA  0100               	movlb	0	; () banked
 19201  0047AC  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
 19202  0047AE  0100               	movlb	0	; () banked
 19203  0047B0  5974               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 19204  0047B2  0100               	movlb	0	; () banked
 19205  0047B4  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
 19206  0047B6  0100               	movlb	0	; () banked
 19207  0047B8  5975               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 19208  0047BA  A0D8               	btfss	status,0,c
 19209  0047BC  D013               	goto	l8713
 19210                           
 19211                           ; BSR set to: 0
 19212  0047BE  0100               	movlb	0	; () banked
 19213  0047C0  5176               	movf	___lldiv@divisor& (0+255),w,b
 19214  0047C2  0100               	movlb	0	; () banked
 19215  0047C4  5F72               	subwf	___lldiv@dividend& (0+255),f,b
 19216  0047C6  0100               	movlb	0	; () banked
 19217  0047C8  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
 19218  0047CA  0100               	movlb	0	; () banked
 19219  0047CC  5B73               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 19220  0047CE  0100               	movlb	0	; () banked
 19221  0047D0  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
 19222  0047D2  0100               	movlb	0	; () banked
 19223  0047D4  5B74               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 19224  0047D6  0100               	movlb	0	; () banked
 19225  0047D8  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
 19226  0047DA  0100               	movlb	0	; () banked
 19227  0047DC  5B75               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 19228                           
 19229                           ; BSR set to: 0
 19230  0047DE  0100               	movlb	0	; () banked
 19231  0047E0  817A               	bsf	___lldiv@quotient& (0+255),0,b
 19232  0047E2  D000               	goto	l8713
 19233  0047E4                     l8713:
 19234                           
 19235                           ; BSR set to: 0
 19236  0047E4  0100               	movlb	0	; () banked
 19237  0047E6  90D8               	bcf	status,0,c
 19238  0047E8  3379               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 19239  0047EA  3378               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 19240  0047EC  3377               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 19241  0047EE  3376               	rrcf	___lldiv@divisor& (0+255),f,b
 19242                           
 19243                           ; BSR set to: 0
 19244  0047F0  0100               	movlb	0	; () banked
 19245  0047F2  2F7E               	decfsz	___lldiv@counter& (0+255),f,b
 19246  0047F4  D7CC               	goto	l8705
 19247  0047F6  D000               	goto	l2135
 19248  0047F8                     l2135:
 19249                           
 19250                           ; BSR set to: 0
 19251  0047F8  C07A  F072         	movff	___lldiv@quotient,?___lldiv
 19252  0047FC  C07B  F073         	movff	___lldiv@quotient+1,?___lldiv+1
 19253  004800  C07C  F074         	movff	___lldiv@quotient+2,?___lldiv+2
 19254  004804  C07D  F075         	movff	___lldiv@quotient+3,?___lldiv+3
 19255                           
 19256                           ; BSR set to: 0
 19257  004808  0012               	return		;funcret
 19258  00480A                     __end_of___lldiv:
 19259                           	opt stack 0
 19260                           tblptru	equ	0xFF8
 19261                           tblptrh	equ	0xFF7
 19262                           tblptrl	equ	0xFF6
 19263                           tablat	equ	0xFF5
 19264                           prodh	equ	0xFF4
 19265                           prodl	equ	0xFF3
 19266                           intcon	equ	0xFF2
 19267                           intcon2	equ	0xFF1
 19268                           indf0	equ	0xFEF
 19269                           postinc0	equ	0xFEE
 19270                           plusw0	equ	0xFEB
 19271                           fsr0h	equ	0xFEA
 19272                           fsr0l	equ	0xFE9
 19273                           wreg	equ	0xFE8
 19274                           indf1	equ	0xFE7
 19275                           postdec1	equ	0xFE5
 19276                           fsr1h	equ	0xFE2
 19277                           fsr1l	equ	0xFE1
 19278                           indf2	equ	0xFDF
 19279                           postinc2	equ	0xFDE
 19280                           postdec2	equ	0xFDD
 19281                           plusw2	equ	0xFDB
 19282                           fsr2h	equ	0xFDA
 19283                           fsr2l	equ	0xFD9
 19284                           status	equ	0xFD8
 19285                           
 19286 ;; *************** function _EnterCommandMode *****************
 19287 ;; Defined at:
 19288 ;;		line 111 in file "Bluetooth.c"
 19289 ;; Parameters:    Size  Location     Type
 19290 ;;		None
 19291 ;; Auto vars:     Size  Location     Type
 19292 ;;  count           1   27[BANK0 ] unsigned char 
 19293 ;; Return value:  Size  Location     Type
 19294 ;;                  1    wreg      unsigned char 
 19295 ;; Registers used:
 19296 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19297 ;; Tracked objects:
 19298 ;;		On entry : 0/0
 19299 ;;		On exit  : 0/0
 19300 ;;		Unchanged: 0/0
 19301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19303 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19305 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19306 ;;Total ram usage:        1 bytes
 19307 ;; Hardware stack levels used:    1
 19308 ;; Hardware stack levels required when called:    8
 19309 ;; This function calls:
 19310 ;;		_BlueConnected
 19311 ;;		_ResetBlue
 19312 ;;		_StringContains
 19313 ;;		_UARTstring
 19314 ;;		_cleanBuffer
 19315 ;;		_delayUS
 19316 ;; This function is called by:
 19317 ;;		_BluetoothInitialSetup
 19318 ;; This function uses a non-reentrant model
 19319 ;;
 19320                           
 19321                           	psect	text62
 19322  00467C                     __ptext62:
 19323                           	opt stack 0
 19324  00467C                     _EnterCommandMode:
 19325                           	opt stack 19
 19326                           
 19327                           ;Bluetooth.c: 113: unsigned char count = 0;
 19328                           
 19329                           ; BSR set to: 0
 19330                           ;incstack = 0
 19331  00467C  0E00               	movlw	0
 19332  00467E  0100               	movlb	0	; () banked
 19333  004680  6F7B               	movwf	EnterCommandMode@count& (0+255),b
 19334                           
 19335                           ;Bluetooth.c: 114: while(BlueConnected())
 19336  004682  D00B               	goto	l8837
 19337  004684                     l8827:
 19338                           
 19339                           ;Bluetooth.c: 115: {
 19340                           ;Bluetooth.c: 116: ResetBlue();
 19341  004684  ECA9  F02C         	call	_ResetBlue	;wreg free
 19342                           
 19343                           ;Bluetooth.c: 117: count++;
 19344  004688  0100               	movlb	0	; () banked
 19345  00468A  2B7B               	incf	EnterCommandMode@count& (0+255),f,b
 19346                           
 19347                           ; BSR set to: 0
 19348                           ;Bluetooth.c: 118: if(count > 4)
 19349  00468C  0E04               	movlw	4
 19350  00468E  0100               	movlb	0	; () banked
 19351  004690  657B               	cpfsgt	EnterCommandMode@count& (0+255),b
 19352  004692  D003               	goto	l8837
 19353                           
 19354                           ; BSR set to: 0
 19355                           ;Bluetooth.c: 119: {
 19356                           ;Bluetooth.c: 121: return 0;
 19357  004694  0E00               	movlw	0
 19358                           
 19359                           ; BSR set to: 0
 19360  004696  0012               	return	
 19361                           
 19362                           ; BSR set to: 0
 19363  004698  D000               	goto	l8837
 19364  00469A                     l8837:
 19365                           
 19366                           ; BSR set to: 0
 19367  00469A  ECBA  F02D         	call	_BlueConnected	;wreg free
 19368  00469E  0900               	iorlw	0
 19369  0046A0  A4D8               	btfss	status,2,c
 19370  0046A2  D7F0               	goto	l8827
 19371                           
 19372                           ;Bluetooth.c: 122: }
 19373                           ;Bluetooth.c: 123: }
 19374                           ;Bluetooth.c: 125: delayUS(50000);
 19375  0046A4  0E50               	movlw	80
 19376  0046A6  0100               	movlb	0	; () banked
 19377  0046A8  6F72               	movwf	delayUS@US& (0+255),b
 19378  0046AA  0EC3               	movlw	195
 19379  0046AC  6F73               	movwf	(delayUS@US+1)& (0+255),b
 19380  0046AE  0E00               	movlw	0
 19381  0046B0  6F74               	movwf	(delayUS@US+2)& (0+255),b
 19382  0046B2  0E00               	movlw	0
 19383  0046B4  6F75               	movwf	(delayUS@US+3)& (0+255),b
 19384  0046B6  EC1F  F02B         	call	_delayUS	;wreg free
 19385                           
 19386                           ;Bluetooth.c: 126: UARTstring("$$$");
 19387  0046BA  0EE3               	movlw	low STR_4
 19388  0046BC  0100               	movlb	0	; () banked
 19389  0046BE  6F73               	movwf	UARTstring@data& (0+255),b
 19390  0046C0  0EFF               	movlw	high STR_4
 19391  0046C2  0100               	movlb	0	; () banked
 19392  0046C4  6F74               	movwf	(UARTstring@data+1)& (0+255),b
 19393  0046C6  EC9B  F02A         	call	_UARTstring	;wreg free
 19394                           
 19395                           ;Bluetooth.c: 127: delayUS(50000);
 19396  0046CA  0E50               	movlw	80
 19397  0046CC  0100               	movlb	0	; () banked
 19398  0046CE  6F72               	movwf	delayUS@US& (0+255),b
 19399  0046D0  0EC3               	movlw	195
 19400  0046D2  6F73               	movwf	(delayUS@US+1)& (0+255),b
 19401  0046D4  0E00               	movlw	0
 19402  0046D6  6F74               	movwf	(delayUS@US+2)& (0+255),b
 19403  0046D8  0E00               	movlw	0
 19404  0046DA  6F75               	movwf	(delayUS@US+3)& (0+255),b
 19405  0046DC  EC1F  F02B         	call	_delayUS	;wreg free
 19406                           
 19407                           ;Bluetooth.c: 128: if(StringContains(CommandString,"CMD"))
 19408  0046E0  0E00               	movlw	low _CommandString
 19409  0046E2  0100               	movlb	0	; () banked
 19410  0046E4  6F72               	movwf	StringContains@This& (0+255),b
 19411  0046E6  0E03               	movlw	high _CommandString
 19412  0046E8  0100               	movlb	0	; () banked
 19413  0046EA  6F73               	movwf	(StringContains@This+1)& (0+255),b
 19414  0046EC  0EEF               	movlw	low STR_5
 19415  0046EE  0100               	movlb	0	; () banked
 19416  0046F0  6F74               	movwf	StringContains@That& (0+255),b
 19417  0046F2  0EFF               	movlw	high STR_5
 19418  0046F4  0100               	movlb	0	; () banked
 19419  0046F6  6F75               	movwf	(StringContains@That+1)& (0+255),b
 19420  0046F8  EC1D  F025         	call	_StringContains	;wreg free
 19421  0046FC  0900               	iorlw	0
 19422  0046FE  B4D8               	btfsc	status,2,c
 19423  004700  D010               	goto	l8855
 19424                           
 19425                           ;Bluetooth.c: 129: {
 19426                           ;Bluetooth.c: 130: cleanBuffer(&CommandString,CommandStringPos);
 19427  004702  0E00               	movlw	low _CommandString
 19428  004704  0100               	movlb	0	; () banked
 19429  004706  6F72               	movwf	cleanBuffer@data& (0+255),b
 19430  004708  0E03               	movlw	high _CommandString
 19431  00470A  0100               	movlb	0	; () banked
 19432  00470C  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
 19433  00470E  C030  F074         	movff	_CommandStringPos,cleanBuffer@count
 19434  004712  0100               	movlb	0	; () banked
 19435  004714  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
 19436  004716  EC6E  F02A         	call	_cleanBuffer	;wreg free
 19437                           
 19438                           ;Bluetooth.c: 131: CommandStringPos = 0;
 19439  00471A  0E00               	movlw	0
 19440  00471C  6E30               	movwf	_CommandStringPos,c
 19441                           
 19442                           ;Bluetooth.c: 132: return 1;
 19443  00471E  0E01               	movlw	1
 19444  004720  0012               	return	
 19445  004722                     l8855:
 19446                           
 19447                           ;Bluetooth.c: 133: }
 19448                           ;Bluetooth.c: 134: cleanBuffer(&CommandString,CommandStringPos);
 19449  004722  0E00               	movlw	low _CommandString
 19450  004724  0100               	movlb	0	; () banked
 19451  004726  6F72               	movwf	cleanBuffer@data& (0+255),b
 19452  004728  0E03               	movlw	high _CommandString
 19453  00472A  0100               	movlb	0	; () banked
 19454  00472C  6F73               	movwf	(cleanBuffer@data+1)& (0+255),b
 19455  00472E  C030  F074         	movff	_CommandStringPos,cleanBuffer@count
 19456  004732  0100               	movlb	0	; () banked
 19457  004734  6B75               	clrf	(cleanBuffer@count+1)& (0+255),b
 19458  004736  EC6E  F02A         	call	_cleanBuffer	;wreg free
 19459                           
 19460                           ;Bluetooth.c: 135: CommandStringPos = 0;
 19461  00473A  0E00               	movlw	0
 19462  00473C  6E30               	movwf	_CommandStringPos,c
 19463                           
 19464                           ;Bluetooth.c: 136: return 0;
 19465  00473E  0E00               	movlw	0
 19466  004740  0012               	return	
 19467  004742  0012               	return		;funcret
 19468  004744                     __end_of_EnterCommandMode:
 19469                           	opt stack 0
 19470                           tblptru	equ	0xFF8
 19471                           tblptrh	equ	0xFF7
 19472                           tblptrl	equ	0xFF6
 19473                           tablat	equ	0xFF5
 19474                           prodh	equ	0xFF4
 19475                           prodl	equ	0xFF3
 19476                           intcon	equ	0xFF2
 19477                           intcon2	equ	0xFF1
 19478                           indf0	equ	0xFEF
 19479                           postinc0	equ	0xFEE
 19480                           plusw0	equ	0xFEB
 19481                           fsr0h	equ	0xFEA
 19482                           fsr0l	equ	0xFE9
 19483                           wreg	equ	0xFE8
 19484                           indf1	equ	0xFE7
 19485                           postdec1	equ	0xFE5
 19486                           fsr1h	equ	0xFE2
 19487                           fsr1l	equ	0xFE1
 19488                           indf2	equ	0xFDF
 19489                           postinc2	equ	0xFDE
 19490                           postdec2	equ	0xFDD
 19491                           plusw2	equ	0xFDB
 19492                           fsr2h	equ	0xFDA
 19493                           fsr2l	equ	0xFD9
 19494                           status	equ	0xFD8
 19495                           
 19496 ;; *************** function _cleanBuffer *****************
 19497 ;; Defined at:
 19498 ;;		line 125 in file "MISC.c"
 19499 ;; Parameters:    Size  Location     Type
 19500 ;;  data            2   18[BANK0 ] PTR unsigned char 
 19501 ;;		 -> UseBluetooth@buf(50), BluetoothInitialSetup@buf(50), CommandString(255), StringAddEqual@temp(100), 
 19502 ;;		 -> ReceivedString(255), 
 19503 ;;  count           2   20[BANK0 ] int 
 19504 ;; Auto vars:     Size  Location     Type
 19505 ;;  i               1   25[BANK0 ] unsigned char 
 19506 ;; Return value:  Size  Location     Type
 19507 ;;		None               void
 19508 ;; Registers used:
 19509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19510 ;; Tracked objects:
 19511 ;;		On entry : 0/0
 19512 ;;		On exit  : 0/0
 19513 ;;		Unchanged: 0/0
 19514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19515 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19516 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19517 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19518 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19519 ;;Total ram usage:        8 bytes
 19520 ;; Hardware stack levels used:    1
 19521 ;; Hardware stack levels required when called:    6
 19522 ;; This function calls:
 19523 ;;		Nothing
 19524 ;; This function is called by:
 19525 ;;		_main
 19526 ;;		_Init_System
 19527 ;;		_BufferCopy
 19528 ;;		_StringAddEqual
 19529 ;;		_InitBluetooth
 19530 ;;		_EnterCommandMode
 19531 ;;		_BluetoothInitialSetup
 19532 ;;		_UseBluetooth
 19533 ;; This function uses a non-reentrant model
 19534 ;;
 19535                           
 19536                           	psect	text63
 19537  0054DC                     __ptext63:
 19538                           	opt stack 0
 19539  0054DC                     _cleanBuffer:
 19540                           	opt stack 24
 19541                           
 19542                           ;MISC.c: 127: unsigned char i=0;
 19543                           
 19544                           ;incstack = 0
 19545  0054DC  0E00               	movlw	0
 19546  0054DE  0100               	movlb	0	; () banked
 19547  0054E0  6F79               	movwf	cleanBuffer@i& (0+255),b
 19548                           
 19549                           ;MISC.c: 128: for(i=0; i<count;i++)
 19550  0054E2  0E00               	movlw	0
 19551  0054E4  0100               	movlb	0	; () banked
 19552  0054E6  6F79               	movwf	cleanBuffer@i& (0+255),b
 19553  0054E8  D010               	goto	l8661
 19554  0054EA                     l8657:
 19555                           
 19556                           ; BSR set to: 0
 19557                           ;MISC.c: 129: {
 19558                           ;MISC.c: 130: data[i]= 0;
 19559  0054EA  0100               	movlb	0	; () banked
 19560  0054EC  5179               	movf	cleanBuffer@i& (0+255),w,b
 19561  0054EE  0D01               	mullw	1
 19562  0054F0  50F3               	movf	prodl,w,c
 19563  0054F2  0100               	movlb	0	; () banked
 19564  0054F4  2572               	addwf	cleanBuffer@data& (0+255),w,b
 19565  0054F6  6ED9               	movwf	fsr2l,c
 19566  0054F8  50F4               	movf	prodh,w,c
 19567  0054FA  0100               	movlb	0	; () banked
 19568  0054FC  2173               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
 19569  0054FE  6EDA               	movwf	fsr2h,c
 19570  005500  0E00               	movlw	0
 19571  005502  6EDF               	movwf	indf2,c
 19572                           
 19573                           ; BSR set to: 0
 19574  005504  0100               	movlb	0	; () banked
 19575  005506  2B79               	incf	cleanBuffer@i& (0+255),f,b
 19576  005508  D000               	goto	l8661
 19577  00550A                     l8661:
 19578                           
 19579                           ; BSR set to: 0
 19580  00550A  0100               	movlb	0	; () banked
 19581  00550C  5179               	movf	cleanBuffer@i& (0+255),w,b
 19582  00550E  0100               	movlb	0	; () banked
 19583  005510  6F76               	movwf	??_cleanBuffer& (0+255),b
 19584  005512  6B77               	clrf	(??_cleanBuffer+1)& (0+255),b
 19585  005514  0100               	movlb	0	; () banked
 19586  005516  5174               	movf	cleanBuffer@count& (0+255),w,b
 19587  005518  0100               	movlb	0	; () banked
 19588  00551A  5D76               	subwf	??_cleanBuffer& (0+255),w,b
 19589  00551C  0100               	movlb	0	; () banked
 19590  00551E  5177               	movf	(??_cleanBuffer+1)& (0+255),w,b
 19591  005520  0A80               	xorlw	128
 19592  005522  0100               	movlb	0	; () banked
 19593  005524  6F78               	movwf	(??_cleanBuffer+2)& (0+255),b
 19594  005526  0100               	movlb	0	; () banked
 19595  005528  5175               	movf	(cleanBuffer@count+1)& (0+255),w,b
 19596  00552A  0A80               	xorlw	128
 19597  00552C  0100               	movlb	0	; () banked
 19598  00552E  5978               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
 19599  005530  A0D8               	btfss	status,0,c
 19600  005532  D7DB               	goto	l8657
 19601                           
 19602                           ; BSR set to: 0
 19603                           
 19604                           ; BSR set to: 0
 19605  005534  0012               	return		;funcret
 19606  005536                     __end_of_cleanBuffer:
 19607                           	opt stack 0
 19608                           tblptru	equ	0xFF8
 19609                           tblptrh	equ	0xFF7
 19610                           tblptrl	equ	0xFF6
 19611                           tablat	equ	0xFF5
 19612                           prodh	equ	0xFF4
 19613                           prodl	equ	0xFF3
 19614                           intcon	equ	0xFF2
 19615                           intcon2	equ	0xFF1
 19616                           indf0	equ	0xFEF
 19617                           postinc0	equ	0xFEE
 19618                           plusw0	equ	0xFEB
 19619                           fsr0h	equ	0xFEA
 19620                           fsr0l	equ	0xFE9
 19621                           wreg	equ	0xFE8
 19622                           indf1	equ	0xFE7
 19623                           postdec1	equ	0xFE5
 19624                           fsr1h	equ	0xFE2
 19625                           fsr1l	equ	0xFE1
 19626                           indf2	equ	0xFDF
 19627                           postinc2	equ	0xFDE
 19628                           postdec2	equ	0xFDD
 19629                           plusw2	equ	0xFDB
 19630                           fsr2h	equ	0xFDA
 19631                           fsr2l	equ	0xFD9
 19632                           status	equ	0xFD8
 19633                           
 19634 ;; *************** function _UARTstring *****************
 19635 ;; Defined at:
 19636 ;;		line 199 in file "UART.c"
 19637 ;; Parameters:    Size  Location     Type
 19638 ;;  data            2   19[BANK0 ] PTR unsigned char 
 19639 ;;		 -> SYNTAX_ERR(24), STR_45(26), STR_20(5), STR_18(5), 
 19640 ;;		 -> STR_16(6), STR_14(6), STR_12(9), STR_10(21), 
 19641 ;;		 -> STR_8(10), BluetoothInitialSetup@buf(50), STR_4(4), STR_2(3), 
 19642 ;;		 -> STR_1(3), CRLN(3), ReceivedString(255), 
 19643 ;; Auto vars:     Size  Location     Type
 19644 ;;		None
 19645 ;; Return value:  Size  Location     Type
 19646 ;;		None               void
 19647 ;; Registers used:
 19648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19649 ;; Tracked objects:
 19650 ;;		On entry : 0/0
 19651 ;;		On exit  : 0/0
 19652 ;;		Unchanged: 0/0
 19653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19654 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19657 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19658 ;;Total ram usage:        2 bytes
 19659 ;; Hardware stack levels used:    1
 19660 ;; Hardware stack levels required when called:    7
 19661 ;; This function calls:
 19662 ;;		_UARTchar
 19663 ;; This function is called by:
 19664 ;;		_main
 19665 ;;		_Init_System
 19666 ;;		_UARTstringCRLN
 19667 ;;		_UARTcommandMenu
 19668 ;;		_EnterCommandMode
 19669 ;;		_BluetoothInitialSetup
 19670 ;;		_UseBluetooth
 19671 ;; This function uses a non-reentrant model
 19672 ;;
 19673                           
 19674                           	psect	text64
 19675  005536                     __ptext64:
 19676                           	opt stack 0
 19677  005536                     _UARTstring:
 19678                           	opt stack 21
 19679                           
 19680                           ;UART.c: 201: while(*data != 0)
 19681                           
 19682                           ; BSR set to: 0
 19683                           ;incstack = 0
 19684  005536  D017               	goto	l8669
 19685  005538                     l8665:
 19686                           
 19687                           ;UART.c: 202: {
 19688                           ;UART.c: 203: UARTchar(*data);
 19689  005538  C073  FFF6         	movff	UARTstring@data,tblptrl
 19690  00553C  C074  FFF7         	movff	UARTstring@data+1,tblptrh
 19691  005540  0E00               	movlw	low (__mediumconst shr (0+16))
 19692  005542  6EF8               	movwf	tblptru,c
 19693  005544  0E0F               	movlw	(high __ramtop+-1)
 19694  005546  64F7               	cpfsgt	tblptrh,c
 19695  005548  D003               	bra	u9237
 19696  00554A  0008               	tblrd		*
 19697  00554C  50F5               	movf	tablat,w,c
 19698  00554E  D005               	bra	u9230
 19699  005550                     u9237:
 19700  005550  CFF6 FFE9          	movff	tblptrl,fsr0l
 19701  005554  CFF7 FFEA          	movff	tblptrh,fsr0h
 19702  005558  50EF               	movf	indf0,w,c
 19703  00555A                     u9230:
 19704  00555A  EC26  F02D         	call	_UARTchar
 19705                           
 19706                           ;UART.c: 204: *data++;
 19707  00555E  0100               	movlb	0	; () banked
 19708  005560  4B73               	infsnz	UARTstring@data& (0+255),f,b
 19709  005562  2B74               	incf	(UARTstring@data+1)& (0+255),f,b
 19710  005564  D000               	goto	l8669
 19711  005566                     l8669:
 19712  005566  C073  FFF6         	movff	UARTstring@data,tblptrl
 19713  00556A  C074  FFF7         	movff	UARTstring@data+1,tblptrh
 19714  00556E  0E00               	movlw	low (__mediumconst shr (0+16))
 19715  005570  6EF8               	movwf	tblptru,c
 19716  005572  0E0F               	movlw	(high __ramtop+-1)
 19717  005574  64F7               	cpfsgt	tblptrh,c
 19718  005576  D003               	bra	u9247
 19719  005578  0008               	tblrd		*
 19720  00557A  50F5               	movf	tablat,w,c
 19721  00557C  D005               	bra	u9240
 19722  00557E                     u9247:
 19723  00557E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19724  005582  CFF7 FFEA          	movff	tblptrh,fsr0h
 19725  005586  50EF               	movf	indf0,w,c
 19726  005588                     u9240:
 19727  005588  0900               	iorlw	0
 19728  00558A  A4D8               	btfss	status,2,c
 19729  00558C  D7D5               	goto	l8665
 19730  00558E  0012               	return		;funcret
 19731  005590                     __end_of_UARTstring:
 19732                           	opt stack 0
 19733                           tblptru	equ	0xFF8
 19734                           tblptrh	equ	0xFF7
 19735                           tblptrl	equ	0xFF6
 19736                           tablat	equ	0xFF5
 19737                           prodh	equ	0xFF4
 19738                           prodl	equ	0xFF3
 19739                           intcon	equ	0xFF2
 19740                           intcon2	equ	0xFF1
 19741                           indf0	equ	0xFEF
 19742                           postinc0	equ	0xFEE
 19743                           plusw0	equ	0xFEB
 19744                           fsr0h	equ	0xFEA
 19745                           fsr0l	equ	0xFE9
 19746                           wreg	equ	0xFE8
 19747                           indf1	equ	0xFE7
 19748                           postdec1	equ	0xFE5
 19749                           fsr1h	equ	0xFE2
 19750                           fsr1l	equ	0xFE1
 19751                           indf2	equ	0xFDF
 19752                           postinc2	equ	0xFDE
 19753                           postdec2	equ	0xFDD
 19754                           plusw2	equ	0xFDB
 19755                           fsr2h	equ	0xFDA
 19756                           fsr2l	equ	0xFD9
 19757                           status	equ	0xFD8
 19758                           
 19759 ;; *************** function _UARTchar *****************
 19760 ;; Defined at:
 19761 ;;		line 185 in file "UART.c"
 19762 ;; Parameters:    Size  Location     Type
 19763 ;;  data            1    wreg     unsigned char 
 19764 ;; Auto vars:     Size  Location     Type
 19765 ;;  data            1   18[BANK0 ] unsigned char 
 19766 ;; Return value:  Size  Location     Type
 19767 ;;		None               void
 19768 ;; Registers used:
 19769 ;;		wreg, status,2
 19770 ;; Tracked objects:
 19771 ;;		On entry : 0/0
 19772 ;;		On exit  : 0/0
 19773 ;;		Unchanged: 0/0
 19774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19778 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19779 ;;Total ram usage:        1 bytes
 19780 ;; Hardware stack levels used:    1
 19781 ;; Hardware stack levels required when called:    6
 19782 ;; This function calls:
 19783 ;;		Nothing
 19784 ;; This function is called by:
 19785 ;;		_main
 19786 ;;		_Init_System
 19787 ;;		_UARTstring
 19788 ;;		_UARTstringCRLN
 19789 ;;		_UARTcommandMenu
 19790 ;;		_UseBluetooth
 19791 ;; This function uses a non-reentrant model
 19792 ;;
 19793                           
 19794                           	psect	text65
 19795  005A4C                     __ptext65:
 19796                           	opt stack 0
 19797  005A4C                     _UARTchar:
 19798                           	opt stack 21
 19799                           
 19800                           ;incstack = 0
 19801                           ;UARTchar@data stored from wreg
 19802  005A4C  0100               	movlb	0	; () banked
 19803  005A4E  6F72               	movwf	UARTchar@data& (0+255),b
 19804                           
 19805                           ; BSR set to: 0
 19806                           ;UART.c: 187: if(data != 0)
 19807  005A50  0100               	movlb	0	; () banked
 19808  005A52  5172               	movf	UARTchar@data& (0+255),w,b
 19809  005A54  0100               	movlb	0	; () banked
 19810  005A56  B4D8               	btfsc	status,2,c
 19811  005A58  0012               	return	
 19812                           
 19813                           ; BSR set to: 0
 19814                           ;UART.c: 188: {
 19815                           ;UART.c: 189: TXREG = data;
 19816  005A5A  C072  FFAD         	movff	UARTchar@data,4013	;volatile
 19817                           
 19818                           ;UART.c: 190: while(!TXSTAbits.TRMT);
 19819  005A5E  D000               	goto	l397
 19820  005A60                     l397:
 19821                           
 19822                           ; BSR set to: 0
 19823  005A60  B2AC               	btfsc	4012,1,c	;volatile
 19824  005A62  0012               	return	
 19825  005A64  D7FD               	goto	l397
 19826                           
 19827                           ; BSR set to: 0
 19828  005A66  0012               	return	
 19829                           
 19830                           ; BSR set to: 0
 19831                           
 19832                           ; BSR set to: 0
 19833  005A68  0012               	return		;funcret
 19834  005A6A                     __end_of_UARTchar:
 19835                           	opt stack 0
 19836                           tblptru	equ	0xFF8
 19837                           tblptrh	equ	0xFF7
 19838                           tblptrl	equ	0xFF6
 19839                           tablat	equ	0xFF5
 19840                           prodh	equ	0xFF4
 19841                           prodl	equ	0xFF3
 19842                           intcon	equ	0xFF2
 19843                           intcon2	equ	0xFF1
 19844                           indf0	equ	0xFEF
 19845                           postinc0	equ	0xFEE
 19846                           plusw0	equ	0xFEB
 19847                           fsr0h	equ	0xFEA
 19848                           fsr0l	equ	0xFE9
 19849                           wreg	equ	0xFE8
 19850                           indf1	equ	0xFE7
 19851                           postdec1	equ	0xFE5
 19852                           fsr1h	equ	0xFE2
 19853                           fsr1l	equ	0xFE1
 19854                           indf2	equ	0xFDF
 19855                           postinc2	equ	0xFDE
 19856                           postdec2	equ	0xFDD
 19857                           plusw2	equ	0xFDB
 19858                           fsr2h	equ	0xFDA
 19859                           fsr2l	equ	0xFD9
 19860                           status	equ	0xFD8
 19861                           
 19862 ;; *************** function _StringContains *****************
 19863 ;; Defined at:
 19864 ;;		line 250 in file "MISC.c"
 19865 ;; Parameters:    Size  Location     Type
 19866 ;;  This            2   18[BANK0 ] PTR unsigned char 
 19867 ;;		 -> CommandString(255), 
 19868 ;;  That            2   20[BANK0 ] PTR const unsigned char 
 19869 ;;		 -> STR_21(4), STR_17(4), STR_15(4), STR_13(4), 
 19870 ;;		 -> STR_11(4), STR_9(4), STR_7(4), BluetoothInitialSetup@buf(50), 
 19871 ;;		 -> STR_5(4), 
 19872 ;; Auto vars:     Size  Location     Type
 19873 ;;  begin           1   23[BANK0 ] unsigned char 
 19874 ;; Return value:  Size  Location     Type
 19875 ;;                  1    wreg      unsigned char 
 19876 ;; Registers used:
 19877 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19878 ;; Tracked objects:
 19879 ;;		On entry : 0/0
 19880 ;;		On exit  : 0/0
 19881 ;;		Unchanged: 0/0
 19882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19883 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19884 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19885 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19886 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19887 ;;Total ram usage:        6 bytes
 19888 ;; Hardware stack levels used:    1
 19889 ;; Hardware stack levels required when called:    6
 19890 ;; This function calls:
 19891 ;;		Nothing
 19892 ;; This function is called by:
 19893 ;;		_EnterCommandMode
 19894 ;;		_BluetoothInitialSetup
 19895 ;; This function uses a non-reentrant model
 19896 ;;
 19897                           
 19898                           	psect	text66
 19899  004A3A                     __ptext66:
 19900                           	opt stack 0
 19901  004A3A                     _StringContains:
 19902                           	opt stack 21
 19903                           
 19904                           ;MISC.c: 252: unsigned char begin = 0;
 19905                           
 19906                           ; BSR set to: 0
 19907                           ;incstack = 0
 19908  004A3A  0E00               	movlw	0
 19909  004A3C  0100               	movlb	0	; () banked
 19910  004A3E  6F77               	movwf	StringContains@begin& (0+255),b
 19911                           
 19912                           ;MISC.c: 254: while(*This != 0)
 19913  004A40  D04B               	goto	l5653
 19914  004A42                     l5627:
 19915                           
 19916                           ; BSR set to: 0
 19917                           ;MISC.c: 255: {
 19918                           ;MISC.c: 256: if(*This == *That)
 19919  004A42  C072  FFD9         	movff	StringContains@This,fsr2l
 19920  004A46  C073  FFDA         	movff	StringContains@This+1,fsr2h
 19921  004A4A  50DF               	movf	indf2,w,c
 19922  004A4C  0100               	movlb	0	; () banked
 19923  004A4E  6F76               	movwf	??_StringContains& (0+255),b
 19924  004A50  C074  FFF6         	movff	StringContains@That,tblptrl
 19925  004A54  C075  FFF7         	movff	StringContains@That+1,tblptrh
 19926  004A58  0E00               	movlw	low (__mediumconst shr (0+16))
 19927  004A5A  6EF8               	movwf	tblptru,c
 19928  004A5C  0E0F               	movlw	(high __ramtop+-1)
 19929  004A5E  64F7               	cpfsgt	tblptrh,c
 19930  004A60  D003               	bra	u4817
 19931  004A62  0008               	tblrd		*
 19932  004A64  50F5               	movf	tablat,w,c
 19933  004A66  D005               	bra	u4810
 19934  004A68                     u4817:
 19935  004A68  CFF6 FFE9          	movff	tblptrl,fsr0l
 19936  004A6C  CFF7 FFEA          	movff	tblptrh,fsr0h
 19937  004A70  50EF               	movf	indf0,w,c
 19938  004A72                     u4810:
 19939  004A72  0100               	movlb	0	; () banked
 19940  004A74  1976               	xorwf	??_StringContains& (0+255),w,b
 19941  004A76  A4D8               	btfss	status,2,c
 19942  004A78  D026               	goto	l5645
 19943                           
 19944                           ; BSR set to: 0
 19945                           ;MISC.c: 257: {
 19946                           ;MISC.c: 258: begin = 1;
 19947  004A7A  0E01               	movlw	1
 19948  004A7C  0100               	movlb	0	; () banked
 19949  004A7E  6F77               	movwf	StringContains@begin& (0+255),b
 19950                           
 19951                           ; BSR set to: 0
 19952                           ;MISC.c: 259: That++;
 19953  004A80  0100               	movlb	0	; () banked
 19954  004A82  4B74               	infsnz	StringContains@That& (0+255),f,b
 19955  004A84  2B75               	incf	(StringContains@That+1)& (0+255),f,b
 19956                           
 19957                           ; BSR set to: 0
 19958                           ;MISC.c: 260: if(*That == 0)
 19959  004A86  C074  FFF6         	movff	StringContains@That,tblptrl
 19960  004A8A  C075  FFF7         	movff	StringContains@That+1,tblptrh
 19961  004A8E  0E00               	movlw	low (__mediumconst shr (0+16))
 19962  004A90  6EF8               	movwf	tblptru,c
 19963  004A92  0E0F               	movlw	(high __ramtop+-1)
 19964  004A94  64F7               	cpfsgt	tblptrh,c
 19965  004A96  D003               	bra	u4837
 19966  004A98  0008               	tblrd		*
 19967  004A9A  50F5               	movf	tablat,w,c
 19968  004A9C  D005               	bra	u4830
 19969  004A9E                     u4837:
 19970  004A9E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19971  004AA2  CFF7 FFEA          	movff	tblptrh,fsr0h
 19972  004AA6  50EF               	movf	indf0,w,c
 19973  004AA8                     u4830:
 19974  004AA8  0900               	iorlw	0
 19975  004AAA  A4D8               	btfss	status,2,c
 19976  004AAC  D002               	goto	l5639
 19977                           
 19978                           ;MISC.c: 261: {
 19979                           ;MISC.c: 262: return 1;
 19980  004AAE  0E01               	movlw	1
 19981  004AB0  0012               	return	
 19982  004AB2                     l5639:
 19983                           
 19984                           ;MISC.c: 263: }
 19985                           ;MISC.c: 264: if(*This == 0)
 19986  004AB2  C072  FFD9         	movff	StringContains@This,fsr2l
 19987  004AB6  C073  FFDA         	movff	StringContains@This+1,fsr2h
 19988  004ABA  50DF               	movf	indf2,w,c
 19989  004ABC  A4D8               	btfss	status,2,c
 19990  004ABE  D008               	goto	l5651
 19991                           
 19992                           ;MISC.c: 265: {
 19993                           ;MISC.c: 266: return 0;
 19994  004AC0  0E00               	movlw	0
 19995  004AC2  0012               	return	
 19996                           
 19997                           ;MISC.c: 267: }
 19998                           ;MISC.c: 268: }
 19999  004AC4  D005               	goto	l5651
 20000  004AC6                     l5645:
 20001                           
 20002                           ;MISC.c: 269: else
 20003                           ;MISC.c: 270: {
 20004                           ;MISC.c: 271: if(begin == 1)
 20005  004AC6  0100               	movlb	0	; () banked
 20006  004AC8  0577               	decf	StringContains@begin& (0+255),w,b
 20007  004ACA  D7F8               	goto	L8
 20008                           
 20009                           ; BSR set to: 0
 20010                           
 20011                           ; BSR set to: 0
 20012                           ;MISC.c: 272: {
 20013                           ;MISC.c: 273: return 0;
 20014  004ACC  0012               	return	
 20015                           
 20016                           ; BSR set to: 0
 20017  004ACE  D000               	goto	l5651
 20018  004AD0                     l5651:
 20019                           
 20020                           ;MISC.c: 274: }
 20021                           ;MISC.c: 275: }
 20022                           ;MISC.c: 276: This++;
 20023  004AD0  0100               	movlb	0	; () banked
 20024  004AD2  4B72               	infsnz	StringContains@This& (0+255),f,b
 20025  004AD4  2B73               	incf	(StringContains@This+1)& (0+255),f,b
 20026  004AD6  D000               	goto	l5653
 20027  004AD8                     l5653:
 20028                           
 20029                           ; BSR set to: 0
 20030  004AD8  C072  FFD9         	movff	StringContains@This,fsr2l
 20031  004ADC  C073  FFDA         	movff	StringContains@This+1,fsr2h
 20032  004AE0  50DF               	movf	indf2,w,c
 20033  004AE2  A4D8               	btfss	status,2,c
 20034  004AE4  D7AE               	goto	l5627
 20035                           
 20036                           ; BSR set to: 0
 20037                           ;MISC.c: 277: }
 20038                           ;MISC.c: 278: return 0;
 20039                           
 20040                           ; BSR set to: 0
 20041  004AE6  0E00               	movlw	0
 20042  004AE8  0012               	return	
 20043                           
 20044                           ; BSR set to: 0
 20045  004AEA  0012               	return		;funcret
 20046  004AEC                     __end_of_StringContains:
 20047                           	opt stack 0
 20048                           tblptru	equ	0xFF8
 20049                           tblptrh	equ	0xFF7
 20050                           tblptrl	equ	0xFF6
 20051                           tablat	equ	0xFF5
 20052                           prodh	equ	0xFF4
 20053                           prodl	equ	0xFF3
 20054                           intcon	equ	0xFF2
 20055                           intcon2	equ	0xFF1
 20056                           indf0	equ	0xFEF
 20057                           postinc0	equ	0xFEE
 20058                           plusw0	equ	0xFEB
 20059                           fsr0h	equ	0xFEA
 20060                           fsr0l	equ	0xFE9
 20061                           wreg	equ	0xFE8
 20062                           indf1	equ	0xFE7
 20063                           postdec1	equ	0xFE5
 20064                           fsr1h	equ	0xFE2
 20065                           fsr1l	equ	0xFE1
 20066                           indf2	equ	0xFDF
 20067                           postinc2	equ	0xFDE
 20068                           postdec2	equ	0xFDD
 20069                           plusw2	equ	0xFDB
 20070                           fsr2h	equ	0xFDA
 20071                           fsr2l	equ	0xFD9
 20072                           status	equ	0xFD8
 20073                           
 20074 ;; *************** function _ResetBlue *****************
 20075 ;; Defined at:
 20076 ;;		line 98 in file "Bluetooth.c"
 20077 ;; Parameters:    Size  Location     Type
 20078 ;;		None
 20079 ;; Auto vars:     Size  Location     Type
 20080 ;;		None
 20081 ;; Return value:  Size  Location     Type
 20082 ;;		None               void
 20083 ;; Registers used:
 20084 ;;		wreg, status,2, status,0, cstack
 20085 ;; Tracked objects:
 20086 ;;		On entry : 0/0
 20087 ;;		On exit  : 0/0
 20088 ;;		Unchanged: 0/0
 20089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20094 ;;Total ram usage:        0 bytes
 20095 ;; Hardware stack levels used:    1
 20096 ;; Hardware stack levels required when called:    7
 20097 ;; This function calls:
 20098 ;;		_delayUS
 20099 ;; This function is called by:
 20100 ;;		_InitBluetooth
 20101 ;;		_EnterCommandMode
 20102 ;; This function uses a non-reentrant model
 20103 ;;
 20104                           
 20105                           	psect	text67
 20106  005952                     __ptext67:
 20107                           	opt stack 0
 20108  005952                     _ResetBlue:
 20109                           	opt stack 21
 20110                           
 20111                           ;Bluetooth.c: 100: LATA &= ~0x04;
 20112                           
 20113                           ;incstack = 0
 20114  005952  9489               	bcf	3977,2,c	;volatile
 20115                           
 20116                           ;Bluetooth.c: 101: delayUS(50000);
 20117  005954  0E50               	movlw	80
 20118  005956  0100               	movlb	0	; () banked
 20119  005958  6F72               	movwf	delayUS@US& (0+255),b
 20120  00595A  0EC3               	movlw	195
 20121  00595C  6F73               	movwf	(delayUS@US+1)& (0+255),b
 20122  00595E  0E00               	movlw	0
 20123  005960  6F74               	movwf	(delayUS@US+2)& (0+255),b
 20124  005962  0E00               	movlw	0
 20125  005964  6F75               	movwf	(delayUS@US+3)& (0+255),b
 20126  005966  EC1F  F02B         	call	_delayUS	;wreg free
 20127                           
 20128                           ;Bluetooth.c: 102: LATA |= 0x04;
 20129  00596A  8489               	bsf	3977,2,c	;volatile
 20130                           
 20131                           ;Bluetooth.c: 103: delayUS(50000);
 20132  00596C  0E50               	movlw	80
 20133  00596E  0100               	movlb	0	; () banked
 20134  005970  6F72               	movwf	delayUS@US& (0+255),b
 20135  005972  0EC3               	movlw	195
 20136  005974  6F73               	movwf	(delayUS@US+1)& (0+255),b
 20137  005976  0E00               	movlw	0
 20138  005978  6F74               	movwf	(delayUS@US+2)& (0+255),b
 20139  00597A  0E00               	movlw	0
 20140  00597C  6F75               	movwf	(delayUS@US+3)& (0+255),b
 20141  00597E  EC1F  F02B         	call	_delayUS	;wreg free
 20142  005982  0012               	return		;funcret
 20143  005984                     __end_of_ResetBlue:
 20144                           	opt stack 0
 20145                           tblptru	equ	0xFF8
 20146                           tblptrh	equ	0xFF7
 20147                           tblptrl	equ	0xFF6
 20148                           tablat	equ	0xFF5
 20149                           prodh	equ	0xFF4
 20150                           prodl	equ	0xFF3
 20151                           intcon	equ	0xFF2
 20152                           intcon2	equ	0xFF1
 20153                           indf0	equ	0xFEF
 20154                           postinc0	equ	0xFEE
 20155                           plusw0	equ	0xFEB
 20156                           fsr0h	equ	0xFEA
 20157                           fsr0l	equ	0xFE9
 20158                           wreg	equ	0xFE8
 20159                           indf1	equ	0xFE7
 20160                           postdec1	equ	0xFE5
 20161                           fsr1h	equ	0xFE2
 20162                           fsr1l	equ	0xFE1
 20163                           indf2	equ	0xFDF
 20164                           postinc2	equ	0xFDE
 20165                           postdec2	equ	0xFDD
 20166                           plusw2	equ	0xFDB
 20167                           fsr2h	equ	0xFDA
 20168                           fsr2l	equ	0xFD9
 20169                           status	equ	0xFD8
 20170                           
 20171 ;; *************** function _delayUS *****************
 20172 ;; Defined at:
 20173 ;;		line 49 in file "MISC.c"
 20174 ;; Parameters:    Size  Location     Type
 20175 ;;  US              4   18[BANK0 ] long 
 20176 ;; Auto vars:     Size  Location     Type
 20177 ;;  i               4   23[BANK0 ] long 
 20178 ;; Return value:  Size  Location     Type
 20179 ;;		None               void
 20180 ;; Registers used:
 20181 ;;		wreg, status,2, status,0
 20182 ;; Tracked objects:
 20183 ;;		On entry : 0/0
 20184 ;;		On exit  : 0/0
 20185 ;;		Unchanged: 0/0
 20186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20187 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20188 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20189 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20190 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20191 ;;Total ram usage:        9 bytes
 20192 ;; Hardware stack levels used:    1
 20193 ;; Hardware stack levels required when called:    6
 20194 ;; This function calls:
 20195 ;;		Nothing
 20196 ;; This function is called by:
 20197 ;;		_main
 20198 ;;		_ReadVoltage
 20199 ;;		_InternalADC_Read
 20200 ;;		_UseIRCode
 20201 ;;		_SendNEC_wait
 20202 ;;		_ReadCodeButtons
 20203 ;;		_ResetBlue
 20204 ;;		_EnterCommandMode
 20205 ;;		_BluetoothInitialSetup
 20206 ;;		_CalibrateDelay
 20207 ;; This function uses a non-reentrant model
 20208 ;;
 20209                           
 20210                           	psect	text68
 20211  00563E                     __ptext68:
 20212                           	opt stack 0
 20213  00563E                     _delayUS:
 20214                           	opt stack 24
 20215                           
 20216                           ;MISC.c: 51: long i;
 20217                           ;MISC.c: 52: for(i=0; i<US; i += 2)
 20218                           
 20219                           ;incstack = 0
 20220  00563E  0E00               	movlw	0
 20221  005640  0100               	movlb	0	; () banked
 20222  005642  6F77               	movwf	delayUS@i& (0+255),b
 20223  005644  0E00               	movlw	0
 20224  005646  6F78               	movwf	(delayUS@i+1)& (0+255),b
 20225  005648  0E00               	movlw	0
 20226  00564A  6F79               	movwf	(delayUS@i+2)& (0+255),b
 20227  00564C  0E00               	movlw	0
 20228  00564E  6F7A               	movwf	(delayUS@i+3)& (0+255),b
 20229  005650  D008               	goto	l141
 20230  005652                     l142:
 20231                           
 20232                           ; BSR set to: 0
 20233                           ;MISC.c: 53: {
 20234                           ;MISC.c: 54: __nop();
 20235  005652  F000               	nop	
 20236  005654  0E02               	movlw	2
 20237  005656  0100               	movlb	0	; () banked
 20238  005658  2777               	addwf	delayUS@i& (0+255),f,b
 20239  00565A  0E00               	movlw	0
 20240  00565C  2378               	addwfc	(delayUS@i+1)& (0+255),f,b
 20241  00565E  2379               	addwfc	(delayUS@i+2)& (0+255),f,b
 20242  005660  237A               	addwfc	(delayUS@i+3)& (0+255),f,b
 20243  005662                     l141:
 20244                           
 20245                           ; BSR set to: 0
 20246  005662  0100               	movlb	0	; () banked
 20247  005664  5172               	movf	delayUS@US& (0+255),w,b
 20248  005666  0100               	movlb	0	; () banked
 20249  005668  5D77               	subwf	delayUS@i& (0+255),w,b
 20250  00566A  0100               	movlb	0	; () banked
 20251  00566C  5173               	movf	(delayUS@US+1)& (0+255),w,b
 20252  00566E  0100               	movlb	0	; () banked
 20253  005670  5978               	subwfb	(delayUS@i+1)& (0+255),w,b
 20254  005672  0100               	movlb	0	; () banked
 20255  005674  5174               	movf	(delayUS@US+2)& (0+255),w,b
 20256  005676  0100               	movlb	0	; () banked
 20257  005678  5979               	subwfb	(delayUS@i+2)& (0+255),w,b
 20258  00567A  0100               	movlb	0	; () banked
 20259  00567C  517A               	movf	(delayUS@i+3)& (0+255),w,b
 20260  00567E  0A80               	xorlw	128
 20261  005680  0100               	movlb	0	; () banked
 20262  005682  6F76               	movwf	??_delayUS& (0+255),b
 20263  005684  0100               	movlb	0	; () banked
 20264  005686  5175               	movf	(delayUS@US+3)& (0+255),w,b
 20265  005688  0A80               	xorlw	128
 20266  00568A  0100               	movlb	0	; () banked
 20267  00568C  5976               	subwfb	??_delayUS& (0+255),w,b
 20268  00568E  A0D8               	btfss	status,0,c
 20269  005690  D7E0               	goto	l142
 20270                           
 20271                           ; BSR set to: 0
 20272                           
 20273                           ; BSR set to: 0
 20274  005692  0012               	return		;funcret
 20275  005694                     __end_of_delayUS:
 20276                           	opt stack 0
 20277                           tblptru	equ	0xFF8
 20278                           tblptrh	equ	0xFF7
 20279                           tblptrl	equ	0xFF6
 20280                           tablat	equ	0xFF5
 20281                           prodh	equ	0xFF4
 20282                           prodl	equ	0xFF3
 20283                           intcon	equ	0xFF2
 20284                           intcon2	equ	0xFF1
 20285                           indf0	equ	0xFEF
 20286                           postinc0	equ	0xFEE
 20287                           plusw0	equ	0xFEB
 20288                           fsr0h	equ	0xFEA
 20289                           fsr0l	equ	0xFE9
 20290                           wreg	equ	0xFE8
 20291                           indf1	equ	0xFE7
 20292                           postdec1	equ	0xFE5
 20293                           fsr1h	equ	0xFE2
 20294                           fsr1l	equ	0xFE1
 20295                           indf2	equ	0xFDF
 20296                           postinc2	equ	0xFDE
 20297                           postdec2	equ	0xFDD
 20298                           plusw2	equ	0xFDB
 20299                           fsr2h	equ	0xFDA
 20300                           fsr2l	equ	0xFD9
 20301                           status	equ	0xFD8
 20302                           
 20303 ;; *************** function _BlueConnected *****************
 20304 ;; Defined at:
 20305 ;;		line 83 in file "Bluetooth.c"
 20306 ;; Parameters:    Size  Location     Type
 20307 ;;		None
 20308 ;; Auto vars:     Size  Location     Type
 20309 ;;		None
 20310 ;; Return value:  Size  Location     Type
 20311 ;;                  1    wreg      unsigned char 
 20312 ;; Registers used:
 20313 ;;		wreg
 20314 ;; Tracked objects:
 20315 ;;		On entry : 0/0
 20316 ;;		On exit  : 0/0
 20317 ;;		Unchanged: 0/0
 20318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20323 ;;Total ram usage:        0 bytes
 20324 ;; Hardware stack levels used:    1
 20325 ;; Hardware stack levels required when called:    6
 20326 ;; This function calls:
 20327 ;;		Nothing
 20328 ;; This function is called by:
 20329 ;;		_EnterCommandMode
 20330 ;; This function uses a non-reentrant model
 20331 ;;
 20332                           
 20333                           	psect	text69
 20334  005B74                     __ptext69:
 20335                           	opt stack 0
 20336  005B74                     _BlueConnected:
 20337                           	opt stack 20
 20338                           
 20339                           ;Bluetooth.c: 86: if((PORTA & 0x02) == 0x02)
 20340                           
 20341                           ; BSR set to: 0
 20342                           ;incstack = 0
 20343  005B74  A280               	btfss	3968,1,c	;volatile
 20344  005B76  D002               	goto	l5683
 20345                           
 20346                           ;Bluetooth.c: 87: {
 20347                           ;Bluetooth.c: 88: return 1;
 20348  005B78  0E01               	movlw	1
 20349  005B7A  0012               	return	
 20350  005B7C                     l5683:
 20351                           
 20352                           ;Bluetooth.c: 89: }
 20353                           ;Bluetooth.c: 90: return 0;
 20354  005B7C  0E00               	movlw	0
 20355  005B7E  0012               	return	
 20356  005B80  0012               	return		;funcret
 20357  005B82                     __end_of_BlueConnected:
 20358                           	opt stack 0
 20359                           tblptru	equ	0xFF8
 20360                           tblptrh	equ	0xFF7
 20361                           tblptrl	equ	0xFF6
 20362                           tablat	equ	0xFF5
 20363                           prodh	equ	0xFF4
 20364                           prodl	equ	0xFF3
 20365                           intcon	equ	0xFF2
 20366                           intcon2	equ	0xFF1
 20367                           indf0	equ	0xFEF
 20368                           postinc0	equ	0xFEE
 20369                           plusw0	equ	0xFEB
 20370                           fsr0h	equ	0xFEA
 20371                           fsr0l	equ	0xFE9
 20372                           wreg	equ	0xFE8
 20373                           indf1	equ	0xFE7
 20374                           postdec1	equ	0xFE5
 20375                           fsr1h	equ	0xFE2
 20376                           fsr1l	equ	0xFE1
 20377                           indf2	equ	0xFDF
 20378                           postinc2	equ	0xFDE
 20379                           postdec2	equ	0xFDD
 20380                           plusw2	equ	0xFDB
 20381                           fsr2h	equ	0xFDA
 20382                           fsr2l	equ	0xFD9
 20383                           status	equ	0xFD8
 20384                           
 20385 ;; *************** function _BluetoothConfigured *****************
 20386 ;; Defined at:
 20387 ;;		line 257 in file "Bluetooth.c"
 20388 ;; Parameters:    Size  Location     Type
 20389 ;;		None
 20390 ;; Auto vars:     Size  Location     Type
 20391 ;;		None
 20392 ;; Return value:  Size  Location     Type
 20393 ;;                  1    wreg      unsigned char 
 20394 ;; Registers used:
 20395 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 20396 ;; Tracked objects:
 20397 ;;		On entry : 0/0
 20398 ;;		On exit  : 0/0
 20399 ;;		Unchanged: 0/0
 20400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20405 ;;Total ram usage:        0 bytes
 20406 ;; Hardware stack levels used:    1
 20407 ;; Hardware stack levels required when called:   11
 20408 ;; This function calls:
 20409 ;;		_SyncGlobalToEEPROM
 20410 ;; This function is called by:
 20411 ;;		_InitBluetooth
 20412 ;; This function uses a non-reentrant model
 20413 ;;
 20414                           
 20415                           	psect	text70
 20416  005A6A                     __ptext70:
 20417                           	opt stack 0
 20418  005A6A                     _BluetoothConfigured:
 20419                           	opt stack 17
 20420                           
 20421                           ;Bluetooth.c: 259: if(Global.BlueToothFlag != 1)
 20422                           
 20423                           ;incstack = 0
 20424  005A6A  0101               	movlb	1	; () banked
 20425  005A6C  0567               	decf	_Global& (0+255),w,b
 20426  005A6E  B4D8               	btfsc	status,2,c
 20427  005A70  D007               	goto	l9129
 20428                           
 20429                           ; BSR set to: 1
 20430                           ;Bluetooth.c: 260: {
 20431                           ;Bluetooth.c: 261: Global.BlueToothFlag = 1;
 20432  005A72  0E01               	movlw	1
 20433  005A74  0101               	movlb	1	; () banked
 20434  005A76  6F67               	movwf	_Global& (0+255),b
 20435                           
 20436                           ; BSR set to: 1
 20437                           ;Bluetooth.c: 262: SyncGlobalToEEPROM();
 20438  005A78  EC98  F02B         	call	_SyncGlobalToEEPROM	;wreg free
 20439                           
 20440                           ;Bluetooth.c: 263: return 0;
 20441  005A7C  0E00               	movlw	0
 20442  005A7E  0012               	return	
 20443  005A80                     l9129:
 20444                           
 20445                           ;Bluetooth.c: 264: }
 20446                           ;Bluetooth.c: 265: return 1;
 20447  005A80  0E01               	movlw	1
 20448  005A82  0012               	return	
 20449  005A84  0012               	return		;funcret
 20450  005A86                     __end_of_BluetoothConfigured:
 20451                           	opt stack 0
 20452                           tblptru	equ	0xFF8
 20453                           tblptrh	equ	0xFF7
 20454                           tblptrl	equ	0xFF6
 20455                           tablat	equ	0xFF5
 20456                           prodh	equ	0xFF4
 20457                           prodl	equ	0xFF3
 20458                           intcon	equ	0xFF2
 20459                           intcon2	equ	0xFF1
 20460                           indf0	equ	0xFEF
 20461                           postinc0	equ	0xFEE
 20462                           plusw0	equ	0xFEB
 20463                           fsr0h	equ	0xFEA
 20464                           fsr0l	equ	0xFE9
 20465                           wreg	equ	0xFE8
 20466                           indf1	equ	0xFE7
 20467                           postdec1	equ	0xFE5
 20468                           fsr1h	equ	0xFE2
 20469                           fsr1l	equ	0xFE1
 20470                           indf2	equ	0xFDF
 20471                           postinc2	equ	0xFDE
 20472                           postdec2	equ	0xFDD
 20473                           plusw2	equ	0xFDB
 20474                           fsr2h	equ	0xFDA
 20475                           fsr2l	equ	0xFD9
 20476                           status	equ	0xFD8
 20477                           
 20478 ;; *************** function _SyncGlobalToEEPROM *****************
 20479 ;; Defined at:
 20480 ;;		line 158 in file "EEPROM.c"
 20481 ;; Parameters:    Size  Location     Type
 20482 ;;		None
 20483 ;; Auto vars:     Size  Location     Type
 20484 ;;		None
 20485 ;; Return value:  Size  Location     Type
 20486 ;;                  1    wreg      unsigned char 
 20487 ;; Registers used:
 20488 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 20489 ;; Tracked objects:
 20490 ;;		On entry : 0/0
 20491 ;;		On exit  : 0/0
 20492 ;;		Unchanged: 0/0
 20493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20498 ;;Total ram usage:        0 bytes
 20499 ;; Hardware stack levels used:    1
 20500 ;; Hardware stack levels required when called:   10
 20501 ;; This function calls:
 20502 ;;		_SetEEPROM
 20503 ;; This function is called by:
 20504 ;;		_UseIRCode
 20505 ;;		_BluetoothConfigured
 20506 ;; This function uses a non-reentrant model
 20507 ;;
 20508                           
 20509                           	psect	text71
 20510  005730                     __ptext71:
 20511                           	opt stack 0
 20512  005730                     _SyncGlobalToEEPROM:
 20513                           	opt stack 19
 20514                           
 20515                           ;EEPROM.c: 160: if(!SetEEPROM(Global,0x00000003))
 20516                           
 20517                           ;incstack = 0
 20518  005730  EE21  F067         	lfsr	2,_Global
 20519  005734  EE01  F000         	lfsr	0,SetEEPROM@Temp
 20520  005738  0E2C               	movlw	44
 20521  00573A                     u9661:
 20522  00573A  CFDB FFEB          	movff	plusw2,plusw0
 20523  00573E  06E8               	decf	wreg,f,c
 20524  005740  E2FC               	bc	u9661
 20525  005742  0E03               	movlw	3
 20526  005744  0101               	movlb	1	; () banked
 20527  005746  6F2D               	movwf	SetEEPROM@burn& (0+255),b
 20528  005748  0E00               	movlw	0
 20529  00574A  6F2E               	movwf	(SetEEPROM@burn+1)& (0+255),b
 20530  00574C  0E00               	movlw	0
 20531  00574E  6F2F               	movwf	(SetEEPROM@burn+2)& (0+255),b
 20532  005750  0E00               	movlw	0
 20533  005752  6F30               	movwf	(SetEEPROM@burn+3)& (0+255),b
 20534  005754  EC38  F028         	call	_SetEEPROM	;wreg free
 20535  005758  0101               	movlb	1	; () banked
 20536  00575A  5100               	movf	?_SetEEPROM& (0+255),w,b
 20537  00575C  0101               	movlb	1	; () banked
 20538  00575E  1101               	iorwf	(?_SetEEPROM+1)& (0+255),w,b
 20539  005760  0101               	movlb	1	; () banked
 20540  005762  1102               	iorwf	(?_SetEEPROM+2)& (0+255),w,b
 20541  005764  0101               	movlb	1	; () banked
 20542  005766  1103               	iorwf	(?_SetEEPROM+3)& (0+255),w,b
 20543  005768  A4D8               	btfss	status,2,c
 20544  00576A  D002               	goto	l8809
 20545                           
 20546                           ; BSR set to: 1
 20547                           ;EEPROM.c: 161: {
 20548                           ;EEPROM.c: 162: return 1;
 20549  00576C  0E01               	movlw	1
 20550                           
 20551                           ; BSR set to: 1
 20552  00576E  0012               	return	
 20553  005770                     l8809:
 20554                           
 20555                           ; BSR set to: 1
 20556                           ;EEPROM.c: 163: }
 20557                           ;EEPROM.c: 164: return 0;
 20558  005770  0E00               	movlw	0
 20559  005772  0012               	return	
 20560                           
 20561                           ; BSR set to: 1
 20562                           
 20563                           ; BSR set to: 1
 20564  005774  0012               	return		;funcret
 20565  005776                     __end_of_SyncGlobalToEEPROM:
 20566                           	opt stack 0
 20567                           tblptru	equ	0xFF8
 20568                           tblptrh	equ	0xFF7
 20569                           tblptrl	equ	0xFF6
 20570                           tablat	equ	0xFF5
 20571                           prodh	equ	0xFF4
 20572                           prodl	equ	0xFF3
 20573                           intcon	equ	0xFF2
 20574                           intcon2	equ	0xFF1
 20575                           indf0	equ	0xFEF
 20576                           postinc0	equ	0xFEE
 20577                           plusw0	equ	0xFEB
 20578                           fsr0h	equ	0xFEA
 20579                           fsr0l	equ	0xFE9
 20580                           wreg	equ	0xFE8
 20581                           indf1	equ	0xFE7
 20582                           postdec1	equ	0xFE5
 20583                           fsr1h	equ	0xFE2
 20584                           fsr1l	equ	0xFE1
 20585                           indf2	equ	0xFDF
 20586                           postinc2	equ	0xFDE
 20587                           postdec2	equ	0xFDD
 20588                           plusw2	equ	0xFDB
 20589                           fsr2h	equ	0xFDA
 20590                           fsr2l	equ	0xFD9
 20591                           status	equ	0xFD8
 20592                           
 20593 ;; *************** function _SetEEPROM *****************
 20594 ;; Defined at:
 20595 ;;		line 131 in file "EEPROM.c"
 20596 ;; Parameters:    Size  Location     Type
 20597 ;;  Temp           45    0[BANK1 ] struct EEdata
 20598 ;;  burn            4   45[BANK1 ] unsigned long 
 20599 ;; Auto vars:     Size  Location     Type
 20600 ;;  fail            4   71[BANK0 ] unsigned long 
 20601 ;; Return value:  Size  Location     Type
 20602 ;;                  4    0[BANK1 ] unsigned long 
 20603 ;; Registers used:
 20604 ;;		wreg, status,2, status,0, cstack
 20605 ;; Tracked objects:
 20606 ;;		On entry : 0/0
 20607 ;;		On exit  : 0/0
 20608 ;;		Unchanged: 0/0
 20609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20610 ;;      Params:         0       0      49       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20611 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20613 ;;      Totals:         0       4      49       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20614 ;;Total ram usage:       53 bytes
 20615 ;; Hardware stack levels used:    1
 20616 ;; Hardware stack levels required when called:    9
 20617 ;; This function calls:
 20618 ;;		_SetMemoryChar
 20619 ;;		_SetMemoryLong
 20620 ;; This function is called by:
 20621 ;;		_SyncGlobalToEEPROM
 20622 ;; This function uses a non-reentrant model
 20623 ;;
 20624                           
 20625                           	psect	text72
 20626  005070                     __ptext72:
 20627                           	opt stack 0
 20628  005070                     _SetEEPROM:
 20629                           	opt stack 19
 20630                           
 20631                           ;EEPROM.c: 133: unsigned long fail = 0;
 20632                           
 20633                           ; BSR set to: 1
 20634                           ;incstack = 0
 20635  005070  0E00               	movlw	0
 20636  005072  0100               	movlb	0	; () banked
 20637  005074  6FA7               	movwf	SetEEPROM@fail& (0+255),b
 20638  005076  0E00               	movlw	0
 20639  005078  6FA8               	movwf	(SetEEPROM@fail+1)& (0+255),b
 20640  00507A  0E00               	movlw	0
 20641  00507C  6FA9               	movwf	(SetEEPROM@fail+2)& (0+255),b
 20642  00507E  0E00               	movlw	0
 20643  005080  6FAA               	movwf	(SetEEPROM@fail+3)& (0+255),b
 20644                           
 20645                           ; BSR set to: 0
 20646                           ;EEPROM.c: 134: if(burn & 0x00000001)
 20647  005082  0101               	movlb	1	; () banked
 20648  005084  A12D               	btfss	SetEEPROM@burn& (0+255),0,b
 20649  005086  D012               	goto	l8679
 20650                           
 20651                           ; BSR set to: 1
 20652                           ;EEPROM.c: 135: {
 20653                           ;EEPROM.c: 136: if(!SetMemoryChar(Temp.BlueToothFlag,0))
 20654  005088  0E00               	movlw	0
 20655  00508A  0100               	movlb	0	; () banked
 20656  00508C  6F7B               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 20657  00508E  0101               	movlb	1	; () banked
 20658  005090  5100               	movf	SetEEPROM@Temp& (0+255),w,b
 20659  005092  EC57  F02C         	call	_SetMemoryChar
 20660  005096  0900               	iorlw	0
 20661  005098  A4D8               	btfss	status,2,c
 20662  00509A  D008               	goto	l8679
 20663                           
 20664                           ;EEPROM.c: 137: {
 20665                           ;EEPROM.c: 139: fail += 0x00000001;
 20666  00509C  0E01               	movlw	1
 20667  00509E  0100               	movlb	0	; () banked
 20668  0050A0  27A7               	addwf	SetEEPROM@fail& (0+255),f,b
 20669  0050A2  0E00               	movlw	0
 20670  0050A4  23A8               	addwfc	(SetEEPROM@fail+1)& (0+255),f,b
 20671  0050A6  23A9               	addwfc	(SetEEPROM@fail+2)& (0+255),f,b
 20672  0050A8  23AA               	addwfc	(SetEEPROM@fail+3)& (0+255),f,b
 20673                           
 20674                           ; BSR set to: 0
 20675  0050AA  D000               	goto	l8679
 20676  0050AC                     l8679:
 20677                           
 20678                           ;EEPROM.c: 140: }
 20679                           ;EEPROM.c: 141: }
 20680                           ;EEPROM.c: 142: if(burn & 0x00000002)
 20681  0050AC  0101               	movlb	1	; () banked
 20682  0050AE  A32D               	btfss	SetEEPROM@burn& (0+255),1,b
 20683  0050B0  D018               	goto	l8685
 20684                           
 20685                           ; BSR set to: 1
 20686                           ;EEPROM.c: 143: {
 20687                           ;EEPROM.c: 144: if(!SetMemoryLong(Temp.SWNECcode,1))
 20688  0050B2  C101  F096         	movff	SetEEPROM@Temp+1,SetMemoryLong@Data
 20689  0050B6  C102  F097         	movff	SetEEPROM@Temp+2,SetMemoryLong@Data+1
 20690  0050BA  C103  F098         	movff	SetEEPROM@Temp+3,SetMemoryLong@Data+2
 20691  0050BE  C104  F099         	movff	SetEEPROM@Temp+4,SetMemoryLong@Data+3
 20692  0050C2  0E01               	movlw	1
 20693  0050C4  0100               	movlb	0	; () banked
 20694  0050C6  6F9A               	movwf	SetMemoryLong@AddressFirst& (0+255),b
 20695  0050C8  EC0D  F021         	call	_SetMemoryLong	;wreg free
 20696  0050CC  0900               	iorlw	0
 20697  0050CE  A4D8               	btfss	status,2,c
 20698  0050D0  D008               	goto	l8685
 20699                           
 20700                           ;EEPROM.c: 145: {
 20701                           ;EEPROM.c: 147: fail += 0x00000002;
 20702  0050D2  0E02               	movlw	2
 20703  0050D4  0100               	movlb	0	; () banked
 20704  0050D6  27A7               	addwf	SetEEPROM@fail& (0+255),f,b
 20705  0050D8  0E00               	movlw	0
 20706  0050DA  23A8               	addwfc	(SetEEPROM@fail+1)& (0+255),f,b
 20707  0050DC  23A9               	addwfc	(SetEEPROM@fail+2)& (0+255),f,b
 20708  0050DE  23AA               	addwfc	(SetEEPROM@fail+3)& (0+255),f,b
 20709                           
 20710                           ; BSR set to: 0
 20711  0050E0  D000               	goto	l8685
 20712  0050E2                     l8685:
 20713                           
 20714                           ;EEPROM.c: 148: }
 20715                           ;EEPROM.c: 149: }
 20716                           ;EEPROM.c: 150: return fail;
 20717  0050E2  C0A7  F100         	movff	SetEEPROM@fail,?_SetEEPROM
 20718  0050E6  C0A8  F101         	movff	SetEEPROM@fail+1,?_SetEEPROM+1
 20719  0050EA  C0A9  F102         	movff	SetEEPROM@fail+2,?_SetEEPROM+2
 20720  0050EE  C0AA  F103         	movff	SetEEPROM@fail+3,?_SetEEPROM+3
 20721  0050F2  0012               	return	
 20722  0050F4  0012               	return		;funcret
 20723  0050F6                     __end_of_SetEEPROM:
 20724                           	opt stack 0
 20725                           tblptru	equ	0xFF8
 20726                           tblptrh	equ	0xFF7
 20727                           tblptrl	equ	0xFF6
 20728                           tablat	equ	0xFF5
 20729                           prodh	equ	0xFF4
 20730                           prodl	equ	0xFF3
 20731                           intcon	equ	0xFF2
 20732                           intcon2	equ	0xFF1
 20733                           indf0	equ	0xFEF
 20734                           postinc0	equ	0xFEE
 20735                           plusw0	equ	0xFEB
 20736                           fsr0h	equ	0xFEA
 20737                           fsr0l	equ	0xFE9
 20738                           wreg	equ	0xFE8
 20739                           indf1	equ	0xFE7
 20740                           postdec1	equ	0xFE5
 20741                           fsr1h	equ	0xFE2
 20742                           fsr1l	equ	0xFE1
 20743                           indf2	equ	0xFDF
 20744                           postinc2	equ	0xFDE
 20745                           postdec2	equ	0xFDD
 20746                           plusw2	equ	0xFDB
 20747                           fsr2h	equ	0xFDA
 20748                           fsr2l	equ	0xFD9
 20749                           status	equ	0xFD8
 20750                           
 20751 ;; *************** function _SetMemoryLong *****************
 20752 ;; Defined at:
 20753 ;;		line 252 in file "EEPROM.c"
 20754 ;; Parameters:    Size  Location     Type
 20755 ;;  Data            4   54[BANK0 ] unsigned long 
 20756 ;;  AddressFirst    1   58[BANK0 ] unsigned char 
 20757 ;; Auto vars:     Size  Location     Type
 20758 ;;  Test            4   63[BANK0 ] unsigned long 
 20759 ;;  L               1   70[BANK0 ] unsigned char 
 20760 ;;  ML              1   69[BANK0 ] unsigned char 
 20761 ;;  MH              1   68[BANK0 ] unsigned char 
 20762 ;;  H               1   67[BANK0 ] unsigned char 
 20763 ;; Return value:  Size  Location     Type
 20764 ;;                  1    wreg      unsigned char 
 20765 ;; Registers used:
 20766 ;;		wreg, status,2, status,0, cstack
 20767 ;; Tracked objects:
 20768 ;;		On entry : 0/0
 20769 ;;		On exit  : 0/0
 20770 ;;		Unchanged: 0/0
 20771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20772 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20773 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20774 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20775 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20776 ;;Total ram usage:       17 bytes
 20777 ;; Hardware stack levels used:    1
 20778 ;; Hardware stack levels required when called:    8
 20779 ;; This function calls:
 20780 ;;		_GetMemoryLong
 20781 ;;		_WriteEEPROM_1Byte
 20782 ;; This function is called by:
 20783 ;;		_SetEEPROM
 20784 ;; This function uses a non-reentrant model
 20785 ;;
 20786                           
 20787                           	psect	text73
 20788  00421A                     __ptext73:
 20789                           	opt stack 0
 20790  00421A                     _SetMemoryLong:
 20791                           	opt stack 19
 20792                           
 20793                           ;EEPROM.c: 254: unsigned char H;
 20794                           ;EEPROM.c: 255: unsigned char MH;
 20795                           ;EEPROM.c: 256: unsigned char ML;
 20796                           ;EEPROM.c: 257: unsigned char L;
 20797                           ;EEPROM.c: 258: unsigned long Test;
 20798                           ;EEPROM.c: 260: H = (unsigned char) ((Data & 0XFF000000) >> 24);
 20799                           
 20800                           ;incstack = 0
 20801  00421A  0E00               	movlw	0
 20802  00421C  0100               	movlb	0	; () banked
 20803  00421E  1596               	andwf	SetMemoryLong@Data& (0+255),w,b
 20804  004220  0100               	movlb	0	; () banked
 20805  004222  6F9B               	movwf	??_SetMemoryLong& (0+255),b
 20806  004224  0E00               	movlw	0
 20807  004226  0100               	movlb	0	; () banked
 20808  004228  1597               	andwf	(SetMemoryLong@Data+1)& (0+255),w,b
 20809  00422A  0100               	movlb	0	; () banked
 20810  00422C  6F9C               	movwf	(??_SetMemoryLong+1)& (0+255),b
 20811  00422E  0E00               	movlw	0
 20812  004230  0100               	movlb	0	; () banked
 20813  004232  1598               	andwf	(SetMemoryLong@Data+2)& (0+255),w,b
 20814  004234  0100               	movlb	0	; () banked
 20815  004236  6F9D               	movwf	(??_SetMemoryLong+2)& (0+255),b
 20816  004238  0EFF               	movlw	255
 20817  00423A  0100               	movlb	0	; () banked
 20818  00423C  1599               	andwf	(SetMemoryLong@Data+3)& (0+255),w,b
 20819  00423E  0100               	movlb	0	; () banked
 20820  004240  6F9E               	movwf	(??_SetMemoryLong+3)& (0+255),b
 20821  004242  0E19               	movlw	25
 20822  004244  D006               	goto	u9200
 20823  004246                     u9205:
 20824  004246  0100               	movlb	0	; () banked
 20825  004248  90D8               	bcf	status,0,c
 20826  00424A  339E               	rrcf	(??_SetMemoryLong+3)& (0+255),f,b
 20827  00424C  339D               	rrcf	(??_SetMemoryLong+2)& (0+255),f,b
 20828  00424E  339C               	rrcf	(??_SetMemoryLong+1)& (0+255),f,b
 20829  004250  339B               	rrcf	??_SetMemoryLong& (0+255),f,b
 20830  004252                     u9200:
 20831  004252  2EE8               	decfsz	wreg,f,c
 20832  004254  D7F8               	goto	u9205
 20833  004256  0100               	movlb	0	; () banked
 20834  004258  519B               	movf	??_SetMemoryLong& (0+255),w,b
 20835  00425A  0100               	movlb	0	; () banked
 20836  00425C  6FA3               	movwf	SetMemoryLong@H& (0+255),b
 20837                           
 20838                           ; BSR set to: 0
 20839                           ;EEPROM.c: 261: MH = (unsigned char) ((Data & 0X00FF0000) >> 16);
 20840  00425E  C098  F0A4         	movff	SetMemoryLong@Data+2,SetMemoryLong@MH
 20841                           
 20842                           ; BSR set to: 0
 20843                           ;EEPROM.c: 262: ML = (unsigned char) ((Data & 0X0000FF00) >> 8);
 20844  004262  C097  F0A5         	movff	SetMemoryLong@Data+1,SetMemoryLong@ML
 20845                           
 20846                           ; BSR set to: 0
 20847                           ;EEPROM.c: 263: L = (unsigned char) (Data & 0X000000FF);
 20848  004266  C096  F0A6         	movff	SetMemoryLong@Data,SetMemoryLong@L
 20849                           
 20850                           ; BSR set to: 0
 20851                           ;EEPROM.c: 266: WriteEEPROM_1Byte(AddressFirst, H);
 20852  00426A  C09A  F072         	movff	SetMemoryLong@AddressFirst,WriteEEPROM_1Byte@address
 20853  00426E  0100               	movlb	0	; () banked
 20854  004270  6B73               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 20855  004272  C0A3  F074         	movff	SetMemoryLong@H,WriteEEPROM_1Byte@data
 20856  004276  ECDD  F02B         	call	_WriteEEPROM_1Byte	;wreg free
 20857                           
 20858                           ;EEPROM.c: 267: WriteEEPROM_1Byte((AddressFirst + 1), MH);
 20859  00427A  0E01               	movlw	1
 20860  00427C  0100               	movlb	0	; () banked
 20861  00427E  259A               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 20862  004280  0100               	movlb	0	; () banked
 20863  004282  6F72               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 20864  004284  0100               	movlb	0	; () banked
 20865  004286  6B73               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 20866  004288  0E00               	movlw	0
 20867  00428A  2373               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 20868  00428C  C0A4  F074         	movff	SetMemoryLong@MH,WriteEEPROM_1Byte@data
 20869  004290  ECDD  F02B         	call	_WriteEEPROM_1Byte	;wreg free
 20870                           
 20871                           ;EEPROM.c: 268: WriteEEPROM_1Byte((AddressFirst + 2), ML);
 20872  004294  0E02               	movlw	2
 20873  004296  0100               	movlb	0	; () banked
 20874  004298  259A               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 20875  00429A  0100               	movlb	0	; () banked
 20876  00429C  6F72               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 20877  00429E  0100               	movlb	0	; () banked
 20878  0042A0  6B73               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 20879  0042A2  0E00               	movlw	0
 20880  0042A4  2373               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 20881  0042A6  C0A5  F074         	movff	SetMemoryLong@ML,WriteEEPROM_1Byte@data
 20882  0042AA  ECDD  F02B         	call	_WriteEEPROM_1Byte	;wreg free
 20883                           
 20884                           ;EEPROM.c: 269: WriteEEPROM_1Byte((AddressFirst + 3), L);
 20885  0042AE  0E03               	movlw	3
 20886  0042B0  0100               	movlb	0	; () banked
 20887  0042B2  259A               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 20888  0042B4  0100               	movlb	0	; () banked
 20889  0042B6  6F72               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 20890  0042B8  0100               	movlb	0	; () banked
 20891  0042BA  6B73               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 20892  0042BC  0E00               	movlw	0
 20893  0042BE  2373               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 20894  0042C0  C0A6  F074         	movff	SetMemoryLong@L,WriteEEPROM_1Byte@data
 20895  0042C4  ECDD  F02B         	call	_WriteEEPROM_1Byte	;wreg free
 20896                           
 20897                           ;EEPROM.c: 272: Test = GetMemoryLong(AddressFirst);
 20898  0042C8  0100               	movlb	0	; () banked
 20899  0042CA  519A               	movf	SetMemoryLong@AddressFirst& (0+255),w,b
 20900  0042CC  ECF1  F01B         	call	_GetMemoryLong
 20901  0042D0  C075  F09F         	movff	?_GetMemoryLong,SetMemoryLong@Test
 20902  0042D4  C076  F0A0         	movff	?_GetMemoryLong+1,SetMemoryLong@Test+1
 20903  0042D8  C077  F0A1         	movff	?_GetMemoryLong+2,SetMemoryLong@Test+2
 20904  0042DC  C078  F0A2         	movff	?_GetMemoryLong+3,SetMemoryLong@Test+3
 20905                           
 20906                           ;EEPROM.c: 274: if(Test == Data)
 20907  0042E0  0100               	movlb	0	; () banked
 20908  0042E2  5196               	movf	SetMemoryLong@Data& (0+255),w,b
 20909  0042E4  0100               	movlb	0	; () banked
 20910  0042E6  199F               	xorwf	SetMemoryLong@Test& (0+255),w,b
 20911  0042E8  E112               	bnz	l8651
 20912  0042EA  0100               	movlb	0	; () banked
 20913  0042EC  5197               	movf	(SetMemoryLong@Data+1)& (0+255),w,b
 20914  0042EE  0100               	movlb	0	; () banked
 20915  0042F0  19A0               	xorwf	(SetMemoryLong@Test+1)& (0+255),w,b
 20916  0042F2  E10D               	bnz	l8651
 20917  0042F4  0100               	movlb	0	; () banked
 20918  0042F6  5198               	movf	(SetMemoryLong@Data+2)& (0+255),w,b
 20919  0042F8  0100               	movlb	0	; () banked
 20920  0042FA  19A1               	xorwf	(SetMemoryLong@Test+2)& (0+255),w,b
 20921  0042FC  E108               	bnz	l8651
 20922  0042FE  0100               	movlb	0	; () banked
 20923  004300  5199               	movf	(SetMemoryLong@Data+3)& (0+255),w,b
 20924  004302  0100               	movlb	0	; () banked
 20925  004304  19A2               	xorwf	(SetMemoryLong@Test+3)& (0+255),w,b
 20926  004306  A4D8               	btfss	status,2,c
 20927  004308  D002               	goto	l8651
 20928                           
 20929                           ; BSR set to: 0
 20930                           ;EEPROM.c: 275: {
 20931                           ;EEPROM.c: 276: return 1;
 20932  00430A  0E01               	movlw	1
 20933                           
 20934                           ; BSR set to: 0
 20935  00430C  0012               	return	
 20936  00430E                     l8651:
 20937                           
 20938                           ; BSR set to: 0
 20939                           ;EEPROM.c: 277: }
 20940                           ;EEPROM.c: 278: return 0;
 20941  00430E  0E00               	movlw	0
 20942  004310  0012               	return	
 20943                           
 20944                           ; BSR set to: 0
 20945                           
 20946                           ; BSR set to: 0
 20947  004312  0012               	return		;funcret
 20948  004314                     __end_of_SetMemoryLong:
 20949                           	opt stack 0
 20950                           tblptru	equ	0xFF8
 20951                           tblptrh	equ	0xFF7
 20952                           tblptrl	equ	0xFF6
 20953                           tablat	equ	0xFF5
 20954                           prodh	equ	0xFF4
 20955                           prodl	equ	0xFF3
 20956                           intcon	equ	0xFF2
 20957                           intcon2	equ	0xFF1
 20958                           indf0	equ	0xFEF
 20959                           postinc0	equ	0xFEE
 20960                           plusw0	equ	0xFEB
 20961                           fsr0h	equ	0xFEA
 20962                           fsr0l	equ	0xFE9
 20963                           wreg	equ	0xFE8
 20964                           indf1	equ	0xFE7
 20965                           postdec1	equ	0xFE5
 20966                           fsr1h	equ	0xFE2
 20967                           fsr1l	equ	0xFE1
 20968                           indf2	equ	0xFDF
 20969                           postinc2	equ	0xFDE
 20970                           postdec2	equ	0xFDD
 20971                           plusw2	equ	0xFDB
 20972                           fsr2h	equ	0xFDA
 20973                           fsr2l	equ	0xFD9
 20974                           status	equ	0xFD8
 20975                           
 20976 ;; *************** function _GetMemoryLong *****************
 20977 ;; Defined at:
 20978 ;;		line 229 in file "EEPROM.c"
 20979 ;; Parameters:    Size  Location     Type
 20980 ;;  AddressFirst    1    wreg     unsigned char 
 20981 ;; Auto vars:     Size  Location     Type
 20982 ;;  AddressFirst    1   53[BANK0 ] unsigned char 
 20983 ;;  temp            4   45[BANK0 ] unsigned long 
 20984 ;;  L               1   52[BANK0 ] unsigned char 
 20985 ;;  ML              1   51[BANK0 ] unsigned char 
 20986 ;;  MH              1   50[BANK0 ] unsigned char 
 20987 ;;  H               1   49[BANK0 ] unsigned char 
 20988 ;; Return value:  Size  Location     Type
 20989 ;;                  4   21[BANK0 ] unsigned long 
 20990 ;; Registers used:
 20991 ;;		wreg, status,2, status,0, cstack
 20992 ;; Tracked objects:
 20993 ;;		On entry : 0/0
 20994 ;;		On exit  : 0/0
 20995 ;;		Unchanged: 0/0
 20996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20997 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20998 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20999 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21000 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21001 ;;Total ram usage:       33 bytes
 21002 ;; Hardware stack levels used:    1
 21003 ;; Hardware stack levels required when called:    7
 21004 ;; This function calls:
 21005 ;;		_ReadEEPROM_1Byte
 21006 ;; This function is called by:
 21007 ;;		_GetEEPROM
 21008 ;;		_SetMemoryLong
 21009 ;; This function uses a non-reentrant model
 21010 ;;
 21011                           
 21012                           	psect	text74
 21013  0037E2                     __ptext74:
 21014                           	opt stack 0
 21015  0037E2                     _GetMemoryLong:
 21016                           	opt stack 19
 21017                           
 21018                           ; BSR set to: 0
 21019                           ;incstack = 0
 21020                           ;GetMemoryLong@AddressFirst stored from wreg
 21021  0037E2  0100               	movlb	0	; () banked
 21022  0037E4  6F95               	movwf	GetMemoryLong@AddressFirst& (0+255),b
 21023                           
 21024                           ; BSR set to: 0
 21025                           ;EEPROM.c: 231: unsigned char H;
 21026                           ;EEPROM.c: 232: unsigned char MH;
 21027                           ;EEPROM.c: 233: unsigned char ML;
 21028                           ;EEPROM.c: 234: unsigned char L;
 21029                           ;EEPROM.c: 235: unsigned long temp =0;
 21030  0037E6  0E00               	movlw	0
 21031  0037E8  0100               	movlb	0	; () banked
 21032  0037EA  6F8D               	movwf	GetMemoryLong@temp& (0+255),b
 21033  0037EC  0E00               	movlw	0
 21034  0037EE  6F8E               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 21035  0037F0  0E00               	movlw	0
 21036  0037F2  6F8F               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 21037  0037F4  0E00               	movlw	0
 21038  0037F6  6F90               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 21039                           
 21040                           ; BSR set to: 0
 21041                           ;EEPROM.c: 237: H = ReadEEPROM_1Byte(AddressFirst);
 21042  0037F8  C095  F072         	movff	GetMemoryLong@AddressFirst,ReadEEPROM_1Byte@address
 21043  0037FC  0100               	movlb	0	; () banked
 21044  0037FE  6B73               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 21045  003800  EC1C  F02C         	call	_ReadEEPROM_1Byte	;wreg free
 21046  003804  0100               	movlb	0	; () banked
 21047  003806  5172               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 21048  003808  0100               	movlb	0	; () banked
 21049  00380A  6F91               	movwf	GetMemoryLong@H& (0+255),b
 21050                           
 21051                           ; BSR set to: 0
 21052                           ;EEPROM.c: 238: MH = ReadEEPROM_1Byte(AddressFirst + 1);
 21053  00380C  0E01               	movlw	1
 21054  00380E  0100               	movlb	0	; () banked
 21055  003810  2595               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 21056  003812  0100               	movlb	0	; () banked
 21057  003814  6F72               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 21058  003816  0100               	movlb	0	; () banked
 21059  003818  6B73               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 21060  00381A  0E00               	movlw	0
 21061  00381C  2373               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 21062  00381E  EC1C  F02C         	call	_ReadEEPROM_1Byte	;wreg free
 21063  003822  0100               	movlb	0	; () banked
 21064  003824  5172               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 21065  003826  0100               	movlb	0	; () banked
 21066  003828  6F92               	movwf	GetMemoryLong@MH& (0+255),b
 21067                           
 21068                           ; BSR set to: 0
 21069                           ;EEPROM.c: 239: ML = ReadEEPROM_1Byte(AddressFirst + 2);
 21070  00382A  0E02               	movlw	2
 21071  00382C  0100               	movlb	0	; () banked
 21072  00382E  2595               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 21073  003830  0100               	movlb	0	; () banked
 21074  003832  6F72               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 21075  003834  0100               	movlb	0	; () banked
 21076  003836  6B73               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 21077  003838  0E00               	movlw	0
 21078  00383A  2373               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 21079  00383C  EC1C  F02C         	call	_ReadEEPROM_1Byte	;wreg free
 21080  003840  0100               	movlb	0	; () banked
 21081  003842  5172               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 21082  003844  0100               	movlb	0	; () banked
 21083  003846  6F93               	movwf	GetMemoryLong@ML& (0+255),b
 21084                           
 21085                           ; BSR set to: 0
 21086                           ;EEPROM.c: 240: L = ReadEEPROM_1Byte(AddressFirst + 3);
 21087  003848  0E03               	movlw	3
 21088  00384A  0100               	movlb	0	; () banked
 21089  00384C  2595               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 21090  00384E  0100               	movlb	0	; () banked
 21091  003850  6F72               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 21092  003852  0100               	movlb	0	; () banked
 21093  003854  6B73               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 21094  003856  0E00               	movlw	0
 21095  003858  2373               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 21096  00385A  EC1C  F02C         	call	_ReadEEPROM_1Byte	;wreg free
 21097  00385E  0100               	movlb	0	; () banked
 21098  003860  5172               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 21099  003862  0100               	movlb	0	; () banked
 21100  003864  6F94               	movwf	GetMemoryLong@L& (0+255),b
 21101                           
 21102                           ; BSR set to: 0
 21103                           ;EEPROM.c: 242: temp = (((unsigned long) H << 24) + ((unsigned long)MH << 16)
 21104                           ;EEPROM.c: 243: + ((unsigned long)ML << 8) + (unsigned long)L);
 21105  003866  C093  F079         	movff	GetMemoryLong@ML,??_GetMemoryLong
 21106  00386A  0100               	movlb	0	; () banked
 21107  00386C  6B7A               	clrf	(??_GetMemoryLong+1)& (0+255),b
 21108  00386E  6B7B               	clrf	(??_GetMemoryLong+2)& (0+255),b
 21109  003870  6B7C               	clrf	(??_GetMemoryLong+3)& (0+255),b
 21110  003872  C07B  F07C         	movff	??_GetMemoryLong+2,??_GetMemoryLong+3
 21111  003876  C07A  F07B         	movff	??_GetMemoryLong+1,??_GetMemoryLong+2
 21112  00387A  C079  F07A         	movff	??_GetMemoryLong,??_GetMemoryLong+1
 21113  00387E  0100               	movlb	0	; () banked
 21114  003880  6B79               	clrf	??_GetMemoryLong& (0+255),b
 21115  003882  C092  F07D         	movff	GetMemoryLong@MH,??_GetMemoryLong+4
 21116  003886  0100               	movlb	0	; () banked
 21117  003888  6B7E               	clrf	(??_GetMemoryLong+5)& (0+255),b
 21118  00388A  6B7F               	clrf	(??_GetMemoryLong+6)& (0+255),b
 21119  00388C  6B80               	clrf	(??_GetMemoryLong+7)& (0+255),b
 21120  00388E  C07E  F080         	movff	??_GetMemoryLong+5,??_GetMemoryLong+7
 21121  003892  C07D  F07F         	movff	??_GetMemoryLong+4,??_GetMemoryLong+6
 21122  003896  0100               	movlb	0	; () banked
 21123  003898  6B7E               	clrf	(??_GetMemoryLong+5)& (0+255),b
 21124  00389A  6B7D               	clrf	(??_GetMemoryLong+4)& (0+255),b
 21125  00389C  C091  F081         	movff	GetMemoryLong@H,??_GetMemoryLong+8
 21126  0038A0  0100               	movlb	0	; () banked
 21127  0038A2  6B82               	clrf	(??_GetMemoryLong+9)& (0+255),b
 21128  0038A4  6B83               	clrf	(??_GetMemoryLong+10)& (0+255),b
 21129  0038A6  6B84               	clrf	(??_GetMemoryLong+11)& (0+255),b
 21130  0038A8  C081  F084         	movff	??_GetMemoryLong+8,??_GetMemoryLong+11
 21131  0038AC  0100               	movlb	0	; () banked
 21132  0038AE  6B83               	clrf	(??_GetMemoryLong+10)& (0+255),b
 21133  0038B0  6B82               	clrf	(??_GetMemoryLong+9)& (0+255),b
 21134  0038B2  6B81               	clrf	(??_GetMemoryLong+8)& (0+255),b
 21135  0038B4  0100               	movlb	0	; () banked
 21136  0038B6  517D               	movf	(??_GetMemoryLong+4)& (0+255),w,b
 21137  0038B8  0100               	movlb	0	; () banked
 21138  0038BA  2581               	addwf	(??_GetMemoryLong+8)& (0+255),w,b
 21139  0038BC  0100               	movlb	0	; () banked
 21140  0038BE  6F85               	movwf	(??_GetMemoryLong+12)& (0+255),b
 21141  0038C0  0100               	movlb	0	; () banked
 21142  0038C2  517E               	movf	(??_GetMemoryLong+5)& (0+255),w,b
 21143  0038C4  0100               	movlb	0	; () banked
 21144  0038C6  2182               	addwfc	(??_GetMemoryLong+9)& (0+255),w,b
 21145  0038C8  0100               	movlb	0	; () banked
 21146  0038CA  6F86               	movwf	(??_GetMemoryLong+13)& (0+255),b
 21147  0038CC  0100               	movlb	0	; () banked
 21148  0038CE  517F               	movf	(??_GetMemoryLong+6)& (0+255),w,b
 21149  0038D0  0100               	movlb	0	; () banked
 21150  0038D2  2183               	addwfc	(??_GetMemoryLong+10)& (0+255),w,b
 21151  0038D4  0100               	movlb	0	; () banked
 21152  0038D6  6F87               	movwf	(??_GetMemoryLong+14)& (0+255),b
 21153  0038D8  0100               	movlb	0	; () banked
 21154  0038DA  5180               	movf	(??_GetMemoryLong+7)& (0+255),w,b
 21155  0038DC  0100               	movlb	0	; () banked
 21156  0038DE  2184               	addwfc	(??_GetMemoryLong+11)& (0+255),w,b
 21157  0038E0  0100               	movlb	0	; () banked
 21158  0038E2  6F88               	movwf	(??_GetMemoryLong+15)& (0+255),b
 21159  0038E4  0100               	movlb	0	; () banked
 21160  0038E6  5179               	movf	??_GetMemoryLong& (0+255),w,b
 21161  0038E8  0100               	movlb	0	; () banked
 21162  0038EA  2585               	addwf	(??_GetMemoryLong+12)& (0+255),w,b
 21163  0038EC  0100               	movlb	0	; () banked
 21164  0038EE  6F89               	movwf	(??_GetMemoryLong+16)& (0+255),b
 21165  0038F0  0100               	movlb	0	; () banked
 21166  0038F2  517A               	movf	(??_GetMemoryLong+1)& (0+255),w,b
 21167  0038F4  0100               	movlb	0	; () banked
 21168  0038F6  2186               	addwfc	(??_GetMemoryLong+13)& (0+255),w,b
 21169  0038F8  0100               	movlb	0	; () banked
 21170  0038FA  6F8A               	movwf	(??_GetMemoryLong+17)& (0+255),b
 21171  0038FC  0100               	movlb	0	; () banked
 21172  0038FE  517B               	movf	(??_GetMemoryLong+2)& (0+255),w,b
 21173  003900  0100               	movlb	0	; () banked
 21174  003902  2187               	addwfc	(??_GetMemoryLong+14)& (0+255),w,b
 21175  003904  0100               	movlb	0	; () banked
 21176  003906  6F8B               	movwf	(??_GetMemoryLong+18)& (0+255),b
 21177  003908  0100               	movlb	0	; () banked
 21178  00390A  517C               	movf	(??_GetMemoryLong+3)& (0+255),w,b
 21179  00390C  0100               	movlb	0	; () banked
 21180  00390E  2188               	addwfc	(??_GetMemoryLong+15)& (0+255),w,b
 21181  003910  0100               	movlb	0	; () banked
 21182  003912  6F8C               	movwf	(??_GetMemoryLong+19)& (0+255),b
 21183  003914  0100               	movlb	0	; () banked
 21184  003916  5194               	movf	GetMemoryLong@L& (0+255),w,b
 21185  003918  0100               	movlb	0	; () banked
 21186  00391A  2589               	addwf	(??_GetMemoryLong+16)& (0+255),w,b
 21187  00391C  0100               	movlb	0	; () banked
 21188  00391E  6F8D               	movwf	GetMemoryLong@temp& (0+255),b
 21189  003920  0E00               	movlw	0
 21190  003922  0100               	movlb	0	; () banked
 21191  003924  218A               	addwfc	(??_GetMemoryLong+17)& (0+255),w,b
 21192  003926  0100               	movlb	0	; () banked
 21193  003928  6F8E               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 21194  00392A  0E00               	movlw	0
 21195  00392C  0100               	movlb	0	; () banked
 21196  00392E  218B               	addwfc	(??_GetMemoryLong+18)& (0+255),w,b
 21197  003930  0100               	movlb	0	; () banked
 21198  003932  6F8F               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 21199  003934  0E00               	movlw	0
 21200  003936  0100               	movlb	0	; () banked
 21201  003938  218C               	addwfc	(??_GetMemoryLong+19)& (0+255),w,b
 21202  00393A  0100               	movlb	0	; () banked
 21203  00393C  6F90               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 21204                           
 21205                           ; BSR set to: 0
 21206                           ;EEPROM.c: 244: return temp;
 21207  00393E  C08D  F075         	movff	GetMemoryLong@temp,?_GetMemoryLong
 21208  003942  C08E  F076         	movff	GetMemoryLong@temp+1,?_GetMemoryLong+1
 21209  003946  C08F  F077         	movff	GetMemoryLong@temp+2,?_GetMemoryLong+2
 21210  00394A  C090  F078         	movff	GetMemoryLong@temp+3,?_GetMemoryLong+3
 21211  00394E  0012               	return	
 21212                           
 21213                           ; BSR set to: 0
 21214                           
 21215                           ; BSR set to: 0
 21216  003950  0012               	return		;funcret
 21217  003952                     __end_of_GetMemoryLong:
 21218                           	opt stack 0
 21219                           tblptru	equ	0xFF8
 21220                           tblptrh	equ	0xFF7
 21221                           tblptrl	equ	0xFF6
 21222                           tablat	equ	0xFF5
 21223                           prodh	equ	0xFF4
 21224                           prodl	equ	0xFF3
 21225                           intcon	equ	0xFF2
 21226                           intcon2	equ	0xFF1
 21227                           indf0	equ	0xFEF
 21228                           postinc0	equ	0xFEE
 21229                           plusw0	equ	0xFEB
 21230                           fsr0h	equ	0xFEA
 21231                           fsr0l	equ	0xFE9
 21232                           wreg	equ	0xFE8
 21233                           indf1	equ	0xFE7
 21234                           postdec1	equ	0xFE5
 21235                           fsr1h	equ	0xFE2
 21236                           fsr1l	equ	0xFE1
 21237                           indf2	equ	0xFDF
 21238                           postinc2	equ	0xFDE
 21239                           postdec2	equ	0xFDD
 21240                           plusw2	equ	0xFDB
 21241                           fsr2h	equ	0xFDA
 21242                           fsr2l	equ	0xFD9
 21243                           status	equ	0xFD8
 21244                           
 21245 ;; *************** function _SetMemoryChar *****************
 21246 ;; Defined at:
 21247 ;;		line 346 in file "EEPROM.c"
 21248 ;; Parameters:    Size  Location     Type
 21249 ;;  Data            1    wreg     unsigned char 
 21250 ;;  AddressFirst    1   27[BANK0 ] unsigned char 
 21251 ;; Auto vars:     Size  Location     Type
 21252 ;;  Data            1   29[BANK0 ] unsigned char 
 21253 ;;  Test            1   28[BANK0 ] unsigned char 
 21254 ;; Return value:  Size  Location     Type
 21255 ;;                  1    wreg      unsigned char 
 21256 ;; Registers used:
 21257 ;;		wreg, status,2, status,0, cstack
 21258 ;; Tracked objects:
 21259 ;;		On entry : 0/0
 21260 ;;		On exit  : 0/0
 21261 ;;		Unchanged: 0/0
 21262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21263 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21264 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21266 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21267 ;;Total ram usage:        3 bytes
 21268 ;; Hardware stack levels used:    1
 21269 ;; Hardware stack levels required when called:    8
 21270 ;; This function calls:
 21271 ;;		_GetMemoryChar
 21272 ;;		_WriteEEPROM_1Byte
 21273 ;; This function is called by:
 21274 ;;		_SetEEPROM
 21275 ;; This function uses a non-reentrant model
 21276 ;;
 21277                           
 21278                           	psect	text75
 21279  0058AE                     __ptext75:
 21280                           	opt stack 0
 21281  0058AE                     _SetMemoryChar:
 21282                           	opt stack 19
 21283                           
 21284                           ; BSR set to: 0
 21285                           ;incstack = 0
 21286                           ;SetMemoryChar@Data stored from wreg
 21287  0058AE  0100               	movlb	0	; () banked
 21288  0058B0  6F7D               	movwf	SetMemoryChar@Data& (0+255),b
 21289                           
 21290                           ; BSR set to: 0
 21291                           ;EEPROM.c: 348: unsigned char Test;
 21292                           ;EEPROM.c: 350: WriteEEPROM_1Byte(AddressFirst, Data);
 21293  0058B2  C07B  F072         	movff	SetMemoryChar@AddressFirst,WriteEEPROM_1Byte@address
 21294  0058B6  0100               	movlb	0	; () banked
 21295  0058B8  6B73               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 21296  0058BA  C07D  F074         	movff	SetMemoryChar@Data,WriteEEPROM_1Byte@data
 21297  0058BE  ECDD  F02B         	call	_WriteEEPROM_1Byte	;wreg free
 21298                           
 21299                           ;EEPROM.c: 353: Test = GetMemoryChar(AddressFirst);
 21300  0058C2  0100               	movlb	0	; () banked
 21301  0058C4  517B               	movf	SetMemoryChar@AddressFirst& (0+255),w,b
 21302  0058C6  ECEE  F02C         	call	_GetMemoryChar
 21303  0058CA  0100               	movlb	0	; () banked
 21304  0058CC  5175               	movf	?_GetMemoryChar& (0+255),w,b
 21305  0058CE  0100               	movlb	0	; () banked
 21306  0058D0  6F7C               	movwf	SetMemoryChar@Test& (0+255),b
 21307                           
 21308                           ; BSR set to: 0
 21309                           ;EEPROM.c: 355: if(Test == Data)
 21310  0058D2  0100               	movlb	0	; () banked
 21311  0058D4  517D               	movf	SetMemoryChar@Data& (0+255),w,b
 21312  0058D6  0100               	movlb	0	; () banked
 21313  0058D8  197C               	xorwf	SetMemoryChar@Test& (0+255),w,b
 21314  0058DA  A4D8               	btfss	status,2,c
 21315  0058DC  D002               	goto	l8623
 21316                           
 21317                           ; BSR set to: 0
 21318                           ;EEPROM.c: 356: {
 21319                           ;EEPROM.c: 357: return 1;
 21320  0058DE  0E01               	movlw	1
 21321                           
 21322                           ; BSR set to: 0
 21323  0058E0  0012               	return	
 21324  0058E2                     l8623:
 21325                           
 21326                           ; BSR set to: 0
 21327                           ;EEPROM.c: 358: }
 21328                           ;EEPROM.c: 359: return 0;
 21329  0058E2  0E00               	movlw	0
 21330  0058E4  0012               	return	
 21331                           
 21332                           ; BSR set to: 0
 21333                           
 21334                           ; BSR set to: 0
 21335  0058E6  0012               	return		;funcret
 21336  0058E8                     __end_of_SetMemoryChar:
 21337                           	opt stack 0
 21338                           tblptru	equ	0xFF8
 21339                           tblptrh	equ	0xFF7
 21340                           tblptrl	equ	0xFF6
 21341                           tablat	equ	0xFF5
 21342                           prodh	equ	0xFF4
 21343                           prodl	equ	0xFF3
 21344                           intcon	equ	0xFF2
 21345                           intcon2	equ	0xFF1
 21346                           indf0	equ	0xFEF
 21347                           postinc0	equ	0xFEE
 21348                           plusw0	equ	0xFEB
 21349                           fsr0h	equ	0xFEA
 21350                           fsr0l	equ	0xFE9
 21351                           wreg	equ	0xFE8
 21352                           indf1	equ	0xFE7
 21353                           postdec1	equ	0xFE5
 21354                           fsr1h	equ	0xFE2
 21355                           fsr1l	equ	0xFE1
 21356                           indf2	equ	0xFDF
 21357                           postinc2	equ	0xFDE
 21358                           postdec2	equ	0xFDD
 21359                           plusw2	equ	0xFDB
 21360                           fsr2h	equ	0xFDA
 21361                           fsr2l	equ	0xFD9
 21362                           status	equ	0xFD8
 21363                           
 21364 ;; *************** function _WriteEEPROM_1Byte *****************
 21365 ;; Defined at:
 21366 ;;		line 93 in file "EEPROM.c"
 21367 ;; Parameters:    Size  Location     Type
 21368 ;;  address         2   18[BANK0 ] unsigned int 
 21369 ;;  data            1   20[BANK0 ] unsigned char 
 21370 ;; Auto vars:     Size  Location     Type
 21371 ;;  GIEstatus       1   21[BANK0 ] unsigned char 
 21372 ;; Return value:  Size  Location     Type
 21373 ;;		None               void
 21374 ;; Registers used:
 21375 ;;		wreg, status,2, status,0, cstack
 21376 ;; Tracked objects:
 21377 ;;		On entry : 0/0
 21378 ;;		On exit  : 0/0
 21379 ;;		Unchanged: 0/0
 21380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21381 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21382 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21384 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21385 ;;Total ram usage:        4 bytes
 21386 ;; Hardware stack levels used:    1
 21387 ;; Hardware stack levels required when called:    7
 21388 ;; This function calls:
 21389 ;;		_EEPROM_UNLOCK
 21390 ;; This function is called by:
 21391 ;;		_SetMemoryLong
 21392 ;;		_SetMemoryChar
 21393 ;;		_SetMemoryInt
 21394 ;; This function uses a non-reentrant model
 21395 ;;
 21396                           
 21397                           	psect	text76
 21398  0057BA                     __ptext76:
 21399                           	opt stack 0
 21400  0057BA                     _WriteEEPROM_1Byte:
 21401                           	opt stack 19
 21402                           
 21403                           ;EEPROM.c: 95: unsigned char GIEstatus = INTCONbits.GIE;
 21404                           
 21405                           ; BSR set to: 0
 21406                           ;incstack = 0
 21407  0057BA  0E00               	movlw	0
 21408  0057BC  BEF2               	btfsc	intcon,7,c	;volatile
 21409  0057BE  0E01               	movlw	1
 21410  0057C0  0100               	movlb	0	; () banked
 21411  0057C2  6F75               	movwf	WriteEEPROM_1Byte@GIEstatus& (0+255),b
 21412                           
 21413                           ; BSR set to: 0
 21414                           ;EEPROM.c: 96: EEADRH = (unsigned char)((address & 0x300) >> 8);
 21415  0057C4  0100               	movlb	0	; () banked
 21416  0057C6  5173               	movf	(WriteEEPROM_1Byte@address+1)& (0+255),w,b
 21417  0057C8  0B03               	andlw	3
 21418  0057CA  6EAA               	movwf	4010,c	;volatile
 21419                           
 21420                           ; BSR set to: 0
 21421                           ;EEPROM.c: 97: EEADR = (unsigned char)(address & 0xFF);
 21422  0057CC  C072  FFA9         	movff	WriteEEPROM_1Byte@address,4009	;volatile
 21423                           
 21424                           ; BSR set to: 0
 21425                           ;EEPROM.c: 98: EEDATA = data;
 21426  0057D0  C074  FFA8         	movff	WriteEEPROM_1Byte@data,4008	;volatile
 21427                           
 21428                           ; BSR set to: 0
 21429                           ;EEPROM.c: 99: EECON1bits.EEPGD = 0;
 21430  0057D4  9EA6               	bcf	4006,7,c	;volatile
 21431                           
 21432                           ; BSR set to: 0
 21433                           ;EEPROM.c: 100: EECON1bits.CFGS = 0;
 21434  0057D6  9CA6               	bcf	4006,6,c	;volatile
 21435                           
 21436                           ; BSR set to: 0
 21437                           ;EEPROM.c: 101: EECON1bits.WREN =1;
 21438  0057D8  84A6               	bsf	4006,2,c	;volatile
 21439                           
 21440                           ; BSR set to: 0
 21441                           ;EEPROM.c: 102: INTCONbits.GIE =0;
 21442  0057DA  9EF2               	bcf	intcon,7,c	;volatile
 21443                           
 21444                           ; BSR set to: 0
 21445                           ;EEPROM.c: 103: EEPROM_UNLOCK();
 21446  0057DC  EC5B  F02D         	call	_EEPROM_UNLOCK	;wreg free
 21447                           
 21448                           ;EEPROM.c: 104: EECON1bits.WR =1;
 21449  0057E0  82A6               	bsf	4006,1,c	;volatile
 21450                           
 21451                           ;EEPROM.c: 105: while(EECON1bits.WR);
 21452  0057E2  D000               	goto	l614
 21453  0057E4                     l614:
 21454  0057E4  B2A6               	btfsc	4006,1,c	;volatile
 21455  0057E6  D7FE               	goto	l614
 21456                           
 21457                           ;EEPROM.c: 106: EECON1bits.WREN =0;
 21458  0057E8  94A6               	bcf	4006,2,c	;volatile
 21459                           
 21460                           ;EEPROM.c: 107: if(GIEstatus)
 21461  0057EA  0100               	movlb	0	; () banked
 21462  0057EC  5175               	movf	WriteEEPROM_1Byte@GIEstatus& (0+255),w,b
 21463  0057EE  0100               	movlb	0	; () banked
 21464  0057F0  B4D8               	btfsc	status,2,c
 21465  0057F2  0012               	return	
 21466                           
 21467                           ; BSR set to: 0
 21468                           ;EEPROM.c: 108: {
 21469                           ;EEPROM.c: 109: INTCONbits.GIE =1;
 21470  0057F4  8EF2               	bsf	intcon,7,c	;volatile
 21471  0057F6  0012               	return	
 21472                           
 21473                           ; BSR set to: 0
 21474                           
 21475                           ; BSR set to: 0
 21476  0057F8  0012               	return		;funcret
 21477  0057FA                     __end_of_WriteEEPROM_1Byte:
 21478                           	opt stack 0
 21479                           tblptru	equ	0xFF8
 21480                           tblptrh	equ	0xFF7
 21481                           tblptrl	equ	0xFF6
 21482                           tablat	equ	0xFF5
 21483                           prodh	equ	0xFF4
 21484                           prodl	equ	0xFF3
 21485                           intcon	equ	0xFF2
 21486                           intcon2	equ	0xFF1
 21487                           indf0	equ	0xFEF
 21488                           postinc0	equ	0xFEE
 21489                           plusw0	equ	0xFEB
 21490                           fsr0h	equ	0xFEA
 21491                           fsr0l	equ	0xFE9
 21492                           wreg	equ	0xFE8
 21493                           indf1	equ	0xFE7
 21494                           postdec1	equ	0xFE5
 21495                           fsr1h	equ	0xFE2
 21496                           fsr1l	equ	0xFE1
 21497                           indf2	equ	0xFDF
 21498                           postinc2	equ	0xFDE
 21499                           postdec2	equ	0xFDD
 21500                           plusw2	equ	0xFDB
 21501                           fsr2h	equ	0xFDA
 21502                           fsr2l	equ	0xFD9
 21503                           status	equ	0xFD8
 21504                           
 21505 ;; *************** function _EEPROM_UNLOCK *****************
 21506 ;; Defined at:
 21507 ;;		line 78 in file "EEPROM.c"
 21508 ;; Parameters:    Size  Location     Type
 21509 ;;		None
 21510 ;; Auto vars:     Size  Location     Type
 21511 ;;		None
 21512 ;; Return value:  Size  Location     Type
 21513 ;;		None               void
 21514 ;; Registers used:
 21515 ;;		wreg, status,2
 21516 ;; Tracked objects:
 21517 ;;		On entry : 0/0
 21518 ;;		On exit  : 0/0
 21519 ;;		Unchanged: 0/0
 21520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21525 ;;Total ram usage:        0 bytes
 21526 ;; Hardware stack levels used:    1
 21527 ;; Hardware stack levels required when called:    6
 21528 ;; This function calls:
 21529 ;;		Nothing
 21530 ;; This function is called by:
 21531 ;;		_WriteEEPROM_1Byte
 21532 ;; This function uses a non-reentrant model
 21533 ;;
 21534                           
 21535                           	psect	text77
 21536  005AB6                     __ptext77:
 21537                           	opt stack 0
 21538  005AB6                     _EEPROM_UNLOCK:
 21539                           	opt stack 19
 21540                           
 21541                           ;EEPROM.c: 80: EECON2 = 0x55;
 21542                           
 21543                           ; BSR set to: 0
 21544                           ;incstack = 0
 21545  005AB6  0E55               	movlw	85
 21546  005AB8  6EA7               	movwf	4007,c	;volatile
 21547                           
 21548                           ;EEPROM.c: 81: EECON2 = 0xAA;
 21549  005ABA  0EAA               	movlw	170
 21550  005ABC  6EA7               	movwf	4007,c	;volatile
 21551                           
 21552                           ;EEPROM.c: 82: EECON1bits.WR =1;
 21553  005ABE  82A6               	bsf	4006,1,c	;volatile
 21554                           
 21555                           ;EEPROM.c: 83: while(EECON1bits.WR);
 21556  005AC0  D000               	goto	l608
 21557  005AC2                     l608:
 21558  005AC2  B2A6               	btfsc	4006,1,c	;volatile
 21559  005AC4  D7FE               	goto	l608
 21560                           
 21561                           ;EEPROM.c: 84: __nop();
 21562  005AC6  F000               	nop	
 21563                           
 21564                           ;EEPROM.c: 85: __nop();
 21565  005AC8  F000               	nop	
 21566  005ACA  0012               	return		;funcret
 21567  005ACC                     __end_of_EEPROM_UNLOCK:
 21568                           	opt stack 0
 21569                           tblptru	equ	0xFF8
 21570                           tblptrh	equ	0xFF7
 21571                           tblptrl	equ	0xFF6
 21572                           tablat	equ	0xFF5
 21573                           prodh	equ	0xFF4
 21574                           prodl	equ	0xFF3
 21575                           intcon	equ	0xFF2
 21576                           intcon2	equ	0xFF1
 21577                           indf0	equ	0xFEF
 21578                           postinc0	equ	0xFEE
 21579                           plusw0	equ	0xFEB
 21580                           fsr0h	equ	0xFEA
 21581                           fsr0l	equ	0xFE9
 21582                           wreg	equ	0xFE8
 21583                           indf1	equ	0xFE7
 21584                           postdec1	equ	0xFE5
 21585                           fsr1h	equ	0xFE2
 21586                           fsr1l	equ	0xFE1
 21587                           indf2	equ	0xFDF
 21588                           postinc2	equ	0xFDE
 21589                           postdec2	equ	0xFDD
 21590                           plusw2	equ	0xFDB
 21591                           fsr2h	equ	0xFDA
 21592                           fsr2l	equ	0xFD9
 21593                           status	equ	0xFD8
 21594                           
 21595 ;; *************** function _GetMemoryChar *****************
 21596 ;; Defined at:
 21597 ;;		line 332 in file "EEPROM.c"
 21598 ;; Parameters:    Size  Location     Type
 21599 ;;  AddressFirst    1    wreg     unsigned char 
 21600 ;; Auto vars:     Size  Location     Type
 21601 ;;  AddressFirst    1   25[BANK0 ] unsigned char 
 21602 ;;  H               1   26[BANK0 ] unsigned char 
 21603 ;; Return value:  Size  Location     Type
 21604 ;;                  4   21[BANK0 ] unsigned long 
 21605 ;; Registers used:
 21606 ;;		wreg, status,2, status,0, cstack
 21607 ;; Tracked objects:
 21608 ;;		On entry : 0/0
 21609 ;;		On exit  : 0/0
 21610 ;;		Unchanged: 0/0
 21611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21612 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21613 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21615 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21616 ;;Total ram usage:        6 bytes
 21617 ;; Hardware stack levels used:    1
 21618 ;; Hardware stack levels required when called:    7
 21619 ;; This function calls:
 21620 ;;		_ReadEEPROM_1Byte
 21621 ;; This function is called by:
 21622 ;;		_GetEEPROM
 21623 ;;		_SetMemoryChar
 21624 ;; This function uses a non-reentrant model
 21625 ;;
 21626                           
 21627                           	psect	text78
 21628  0059DC                     __ptext78:
 21629                           	opt stack 0
 21630  0059DC                     _GetMemoryChar:
 21631                           	opt stack 19
 21632                           
 21633                           ;incstack = 0
 21634                           ;GetMemoryChar@AddressFirst stored from wreg
 21635  0059DC  0100               	movlb	0	; () banked
 21636  0059DE  6F79               	movwf	GetMemoryChar@AddressFirst& (0+255),b
 21637                           
 21638                           ; BSR set to: 0
 21639                           ;EEPROM.c: 334: unsigned char H;
 21640                           ;EEPROM.c: 336: H = ReadEEPROM_1Byte(AddressFirst);
 21641  0059E0  C079  F072         	movff	GetMemoryChar@AddressFirst,ReadEEPROM_1Byte@address
 21642  0059E4  0100               	movlb	0	; () banked
 21643  0059E6  6B73               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 21644  0059E8  EC1C  F02C         	call	_ReadEEPROM_1Byte	;wreg free
 21645  0059EC  0100               	movlb	0	; () banked
 21646  0059EE  5172               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 21647  0059F0  0100               	movlb	0	; () banked
 21648  0059F2  6F7A               	movwf	GetMemoryChar@H& (0+255),b
 21649                           
 21650                           ; BSR set to: 0
 21651                           ;EEPROM.c: 338: return H;
 21652  0059F4  0100               	movlb	0	; () banked
 21653  0059F6  517A               	movf	GetMemoryChar@H& (0+255),w,b
 21654  0059F8  0100               	movlb	0	; () banked
 21655  0059FA  6F75               	movwf	?_GetMemoryChar& (0+255),b
 21656  0059FC  6B76               	clrf	(?_GetMemoryChar+1)& (0+255),b
 21657  0059FE  6B77               	clrf	(?_GetMemoryChar+2)& (0+255),b
 21658  005A00  6B78               	clrf	(?_GetMemoryChar+3)& (0+255),b
 21659  005A02  0012               	return	
 21660                           
 21661                           ; BSR set to: 0
 21662                           
 21663                           ; BSR set to: 0
 21664  005A04  0012               	return		;funcret
 21665  005A06                     __end_of_GetMemoryChar:
 21666                           	opt stack 0
 21667                           tblptru	equ	0xFF8
 21668                           tblptrh	equ	0xFF7
 21669                           tblptrl	equ	0xFF6
 21670                           tablat	equ	0xFF5
 21671                           prodh	equ	0xFF4
 21672                           prodl	equ	0xFF3
 21673                           intcon	equ	0xFF2
 21674                           intcon2	equ	0xFF1
 21675                           indf0	equ	0xFEF
 21676                           postinc0	equ	0xFEE
 21677                           plusw0	equ	0xFEB
 21678                           fsr0h	equ	0xFEA
 21679                           fsr0l	equ	0xFE9
 21680                           wreg	equ	0xFE8
 21681                           indf1	equ	0xFE7
 21682                           postdec1	equ	0xFE5
 21683                           fsr1h	equ	0xFE2
 21684                           fsr1l	equ	0xFE1
 21685                           indf2	equ	0xFDF
 21686                           postinc2	equ	0xFDE
 21687                           postdec2	equ	0xFDD
 21688                           plusw2	equ	0xFDB
 21689                           fsr2h	equ	0xFDA
 21690                           fsr2l	equ	0xFD9
 21691                           status	equ	0xFD8
 21692                           
 21693 ;; *************** function _ReadEEPROM_1Byte *****************
 21694 ;; Defined at:
 21695 ;;		line 53 in file "EEPROM.c"
 21696 ;; Parameters:    Size  Location     Type
 21697 ;;  address         2   18[BANK0 ] unsigned int 
 21698 ;; Auto vars:     Size  Location     Type
 21699 ;;  GIEstatus       1   20[BANK0 ] unsigned char 
 21700 ;; Return value:  Size  Location     Type
 21701 ;;                  2   18[BANK0 ] unsigned int 
 21702 ;; Registers used:
 21703 ;;		wreg, status,2, status,0
 21704 ;; Tracked objects:
 21705 ;;		On entry : 0/0
 21706 ;;		On exit  : 0/0
 21707 ;;		Unchanged: 0/0
 21708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21709 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21710 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21712 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21713 ;;Total ram usage:        3 bytes
 21714 ;; Hardware stack levels used:    1
 21715 ;; Hardware stack levels required when called:    6
 21716 ;; This function calls:
 21717 ;;		Nothing
 21718 ;; This function is called by:
 21719 ;;		_GetMemoryLong
 21720 ;;		_GetMemoryChar
 21721 ;;		_GetMemoryInt
 21722 ;; This function uses a non-reentrant model
 21723 ;;
 21724                           
 21725                           	psect	text79
 21726  005838                     __ptext79:
 21727                           	opt stack 0
 21728  005838                     _ReadEEPROM_1Byte:
 21729                           	opt stack 19
 21730                           
 21731                           ;EEPROM.c: 55: unsigned char GIEstatus = INTCONbits.GIE;
 21732                           
 21733                           ; BSR set to: 0
 21734                           ;incstack = 0
 21735  005838  0E00               	movlw	0
 21736  00583A  BEF2               	btfsc	intcon,7,c	;volatile
 21737  00583C  0E01               	movlw	1
 21738  00583E  0100               	movlb	0	; () banked
 21739  005840  6F74               	movwf	ReadEEPROM_1Byte@GIEstatus& (0+255),b
 21740                           
 21741                           ; BSR set to: 0
 21742                           ;EEPROM.c: 56: EECON1bits.EEPGD = 0;
 21743  005842  9EA6               	bcf	4006,7,c	;volatile
 21744                           
 21745                           ; BSR set to: 0
 21746                           ;EEPROM.c: 57: EECON1bits.CFGS = 0;
 21747  005844  9CA6               	bcf	4006,6,c	;volatile
 21748                           
 21749                           ; BSR set to: 0
 21750                           ;EEPROM.c: 58: EEADRH = (unsigned char)((address & 0x300) >> 8);
 21751  005846  0100               	movlb	0	; () banked
 21752  005848  5173               	movf	(ReadEEPROM_1Byte@address+1)& (0+255),w,b
 21753  00584A  0B03               	andlw	3
 21754  00584C  6EAA               	movwf	4010,c	;volatile
 21755                           
 21756                           ; BSR set to: 0
 21757                           ;EEPROM.c: 59: EEADR = (unsigned char)(address & 0xFF);
 21758  00584E  C072  FFA9         	movff	ReadEEPROM_1Byte@address,4009	;volatile
 21759                           
 21760                           ; BSR set to: 0
 21761                           ;EEPROM.c: 60: INTCONbits.GIE =0;
 21762  005852  9EF2               	bcf	intcon,7,c	;volatile
 21763                           
 21764                           ; BSR set to: 0
 21765                           ;EEPROM.c: 61: EECON1bits.RD = 1;
 21766  005854  80A6               	bsf	4006,0,c	;volatile
 21767                           
 21768                           ;EEPROM.c: 62: while(EECON1bits.RD);
 21769  005856  D000               	goto	l601
 21770  005858                     l601:
 21771  005858  B0A6               	btfsc	4006,0,c	;volatile
 21772  00585A  D7FE               	goto	l601
 21773                           
 21774                           ;EEPROM.c: 63: __nop();
 21775  00585C  F000               	nop	
 21776                           
 21777                           ;EEPROM.c: 64: __nop();
 21778  00585E  F000               	nop	
 21779                           
 21780                           ;EEPROM.c: 65: if(GIEstatus)
 21781  005860  0100               	movlb	0	; () banked
 21782  005862  5174               	movf	ReadEEPROM_1Byte@GIEstatus& (0+255),w,b
 21783  005864  0100               	movlb	0	; () banked
 21784  005866  A4D8               	btfss	status,2,c
 21785                           
 21786                           ; BSR set to: 0
 21787                           ;EEPROM.c: 66: {
 21788                           ;EEPROM.c: 67: INTCONbits.GIE =1;
 21789  005868  8EF2               	bsf	intcon,7,c	;volatile
 21790                           
 21791                           ; BSR set to: 0
 21792                           ;EEPROM.c: 68: }
 21793                           ;EEPROM.c: 69: return (EEDATA);
 21794  00586A  CFA8 F072          	movff	4008,?_ReadEEPROM_1Byte	;volatile
 21795  00586E  0100               	movlb	0	; () banked
 21796  005870  6B73               	clrf	(?_ReadEEPROM_1Byte+1)& (0+255),b
 21797                           
 21798                           ; BSR set to: 0
 21799  005872  0012               	return		;funcret
 21800  005874                     __end_of_ReadEEPROM_1Byte:
 21801                           	opt stack 0
 21802                           tblptru	equ	0xFF8
 21803                           tblptrh	equ	0xFF7
 21804                           tblptrl	equ	0xFF6
 21805                           tablat	equ	0xFF5
 21806                           prodh	equ	0xFF4
 21807                           prodl	equ	0xFF3
 21808                           intcon	equ	0xFF2
 21809                           intcon2	equ	0xFF1
 21810                           indf0	equ	0xFEF
 21811                           postinc0	equ	0xFEE
 21812                           plusw0	equ	0xFEB
 21813                           fsr0h	equ	0xFEA
 21814                           fsr0l	equ	0xFE9
 21815                           wreg	equ	0xFE8
 21816                           indf1	equ	0xFE7
 21817                           postdec1	equ	0xFE5
 21818                           fsr1h	equ	0xFE2
 21819                           fsr1l	equ	0xFE1
 21820                           indf2	equ	0xFDF
 21821                           postinc2	equ	0xFDE
 21822                           postdec2	equ	0xFDD
 21823                           plusw2	equ	0xFDB
 21824                           fsr2h	equ	0xFDA
 21825                           fsr2l	equ	0xFD9
 21826                           status	equ	0xFD8
 21827                           
 21828 ;; *************** function _InitADC *****************
 21829 ;; Defined at:
 21830 ;;		line 133 in file "ADC.c"
 21831 ;; Parameters:    Size  Location     Type
 21832 ;;		None
 21833 ;; Auto vars:     Size  Location     Type
 21834 ;;		None
 21835 ;; Return value:  Size  Location     Type
 21836 ;;		None               void
 21837 ;; Registers used:
 21838 ;;		wreg, status,2, cstack
 21839 ;; Tracked objects:
 21840 ;;		On entry : 0/0
 21841 ;;		On exit  : 0/0
 21842 ;;		Unchanged: 0/0
 21843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21848 ;;Total ram usage:        0 bytes
 21849 ;; Hardware stack levels used:    1
 21850 ;; Hardware stack levels required when called:    7
 21851 ;; This function calls:
 21852 ;;		_ResetADC
 21853 ;; This function is called by:
 21854 ;;		_Init_System
 21855 ;; This function uses a non-reentrant model
 21856 ;;
 21857                           
 21858                           	psect	text80
 21859  005ACC                     __ptext80:
 21860                           	opt stack 0
 21861  005ACC                     _InitADC:
 21862                           	opt stack 22
 21863                           
 21864                           ;ADC.c: 135: ResetADC();
 21865                           
 21866                           ; BSR set to: 0
 21867                           ;incstack = 0
 21868  005ACC  ECC1  F02D         	call	_ResetADC	;wreg free
 21869                           
 21870                           ;ADC.c: 136: ADCON2bits.ADFM = 1;
 21871  005AD0  8EC0               	bsf	4032,7,c	;volatile
 21872                           
 21873                           ;ADC.c: 137: ADCON2bits.ACQT = 0x7;
 21874  005AD2  86C0               	bsf	4032,3,c	;volatile
 21875  005AD4  88C0               	bsf	4032,4,c	;volatile
 21876  005AD6  8AC0               	bsf	4032,5,c	;volatile
 21877                           
 21878                           ;ADC.c: 138: ADCON2bits.ADCS = 0x4;
 21879  005AD8  50C0               	movf	4032,w,c	;volatile
 21880  005ADA  0BF8               	andlw	-8
 21881  005ADC  0904               	iorlw	4
 21882  005ADE  6EC0               	movwf	4032,c	;volatile
 21883  005AE0  0012               	return		;funcret
 21884  005AE2                     __end_of_InitADC:
 21885                           	opt stack 0
 21886                           tblptru	equ	0xFF8
 21887                           tblptrh	equ	0xFF7
 21888                           tblptrl	equ	0xFF6
 21889                           tablat	equ	0xFF5
 21890                           prodh	equ	0xFF4
 21891                           prodl	equ	0xFF3
 21892                           intcon	equ	0xFF2
 21893                           intcon2	equ	0xFF1
 21894                           indf0	equ	0xFEF
 21895                           postinc0	equ	0xFEE
 21896                           plusw0	equ	0xFEB
 21897                           fsr0h	equ	0xFEA
 21898                           fsr0l	equ	0xFE9
 21899                           wreg	equ	0xFE8
 21900                           indf1	equ	0xFE7
 21901                           postdec1	equ	0xFE5
 21902                           fsr1h	equ	0xFE2
 21903                           fsr1l	equ	0xFE1
 21904                           indf2	equ	0xFDF
 21905                           postinc2	equ	0xFDE
 21906                           postdec2	equ	0xFDD
 21907                           plusw2	equ	0xFDB
 21908                           fsr2h	equ	0xFDA
 21909                           fsr2l	equ	0xFD9
 21910                           status	equ	0xFD8
 21911                           
 21912 ;; *************** function _ResetADC *****************
 21913 ;; Defined at:
 21914 ;;		line 121 in file "ADC.c"
 21915 ;; Parameters:    Size  Location     Type
 21916 ;;		None
 21917 ;; Auto vars:     Size  Location     Type
 21918 ;;		None
 21919 ;; Return value:  Size  Location     Type
 21920 ;;		None               void
 21921 ;; Registers used:
 21922 ;;		wreg, status,2
 21923 ;; Tracked objects:
 21924 ;;		On entry : 0/0
 21925 ;;		On exit  : 0/0
 21926 ;;		Unchanged: 0/0
 21927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21932 ;;Total ram usage:        0 bytes
 21933 ;; Hardware stack levels used:    1
 21934 ;; Hardware stack levels required when called:    6
 21935 ;; This function calls:
 21936 ;;		Nothing
 21937 ;; This function is called by:
 21938 ;;		_InitADC
 21939 ;; This function uses a non-reentrant model
 21940 ;;
 21941                           
 21942                           	psect	text81
 21943  005B82                     __ptext81:
 21944                           	opt stack 0
 21945  005B82                     _ResetADC:
 21946                           	opt stack 22
 21947                           
 21948                           ;ADC.c: 123: ADCON0 =0;
 21949                           
 21950                           ;incstack = 0
 21951  005B82  0E00               	movlw	0
 21952  005B84  6EC2               	movwf	4034,c	;volatile
 21953                           
 21954                           ;ADC.c: 124: ADCON1 =0;
 21955  005B86  0E00               	movlw	0
 21956  005B88  6EC1               	movwf	4033,c	;volatile
 21957                           
 21958                           ;ADC.c: 125: ADCON2 =0;
 21959  005B8A  0E00               	movlw	0
 21960  005B8C  6EC0               	movwf	4032,c	;volatile
 21961  005B8E  0012               	return		;funcret
 21962  005B90                     __end_of_ResetADC:
 21963                           	opt stack 0
 21964                           tblptru	equ	0xFF8
 21965                           tblptrh	equ	0xFF7
 21966                           tblptrl	equ	0xFF6
 21967                           tablat	equ	0xFF5
 21968                           prodh	equ	0xFF4
 21969                           prodl	equ	0xFF3
 21970                           intcon	equ	0xFF2
 21971                           intcon2	equ	0xFF1
 21972                           indf0	equ	0xFEF
 21973                           postinc0	equ	0xFEE
 21974                           plusw0	equ	0xFEB
 21975                           fsr0h	equ	0xFEA
 21976                           fsr0l	equ	0xFE9
 21977                           wreg	equ	0xFE8
 21978                           indf1	equ	0xFE7
 21979                           postdec1	equ	0xFE5
 21980                           fsr1h	equ	0xFE2
 21981                           fsr1l	equ	0xFE1
 21982                           indf2	equ	0xFDF
 21983                           postinc2	equ	0xFDE
 21984                           postdec2	equ	0xFDD
 21985                           plusw2	equ	0xFDB
 21986                           fsr2h	equ	0xFDA
 21987                           fsr2l	equ	0xFD9
 21988                           status	equ	0xFD8
 21989                           
 21990 ;; *************** function _InitApp *****************
 21991 ;; Defined at:
 21992 ;;		line 60 in file "user.c"
 21993 ;; Parameters:    Size  Location     Type
 21994 ;;		None
 21995 ;; Auto vars:     Size  Location     Type
 21996 ;;		None
 21997 ;; Return value:  Size  Location     Type
 21998 ;;		None               void
 21999 ;; Registers used:
 22000 ;;		wreg, status,2
 22001 ;; Tracked objects:
 22002 ;;		On entry : 0/0
 22003 ;;		On exit  : 0/0
 22004 ;;		Unchanged: 0/0
 22005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22010 ;;Total ram usage:        0 bytes
 22011 ;; Hardware stack levels used:    1
 22012 ;; Hardware stack levels required when called:    6
 22013 ;; This function calls:
 22014 ;;		Nothing
 22015 ;; This function is called by:
 22016 ;;		_main
 22017 ;; This function uses a non-reentrant model
 22018 ;;
 22019                           
 22020                           	psect	text82
 22021  005776                     __ptext82:
 22022                           	opt stack 0
 22023  005776                     _InitApp:
 22024                           	opt stack 24
 22025                           
 22026                           ;user.c: 62: LATA = 0;
 22027                           
 22028                           ;incstack = 0
 22029  005776  0E00               	movlw	0
 22030  005778  6E89               	movwf	3977,c	;volatile
 22031                           
 22032                           ;user.c: 63: LATB = 0;
 22033  00577A  0E00               	movlw	0
 22034  00577C  6E8A               	movwf	3978,c	;volatile
 22035                           
 22036                           ;user.c: 64: LATC = 0;
 22037  00577E  0E00               	movlw	0
 22038  005780  6E8B               	movwf	3979,c	;volatile
 22039                           
 22040                           ;user.c: 65: TRISAbits.TRISA0 = 1;
 22041  005782  8092               	bsf	3986,0,c	;volatile
 22042                           
 22043                           ;user.c: 66: TRISAbits.TRISA1 = 1;
 22044  005784  8292               	bsf	3986,1,c	;volatile
 22045                           
 22046                           ;user.c: 67: TRISAbits.TRISA2 = 0;
 22047  005786  9492               	bcf	3986,2,c	;volatile
 22048                           
 22049                           ;user.c: 68: TRISAbits.TRISA3 = 0;
 22050  005788  9692               	bcf	3986,3,c	;volatile
 22051                           
 22052                           ;user.c: 69: TRISAbits.TRISA4 = 0;
 22053  00578A  9892               	bcf	3986,4,c	;volatile
 22054                           
 22055                           ;user.c: 70: TRISAbits.TRISA5 = 0;
 22056  00578C  9A92               	bcf	3986,5,c	;volatile
 22057                           
 22058                           ;user.c: 71: TRISCbits.TRISC0 = 1;
 22059  00578E  8094               	bsf	3988,0,c	;volatile
 22060                           
 22061                           ;user.c: 72: TRISCbits.TRISC1 = 0;
 22062  005790  9294               	bcf	3988,1,c	;volatile
 22063                           
 22064                           ;user.c: 73: TRISCbits.TRISC2 = 0;
 22065  005792  9494               	bcf	3988,2,c	;volatile
 22066                           
 22067                           ;user.c: 74: TRISCbits.TRISC3 = 0;
 22068  005794  9694               	bcf	3988,3,c	;volatile
 22069                           
 22070                           ;user.c: 75: TRISCbits.TRISC4 = 0;
 22071  005796  9894               	bcf	3988,4,c	;volatile
 22072                           
 22073                           ;user.c: 76: TRISCbits.TRISC5 = 0;
 22074  005798  9A94               	bcf	3988,5,c	;volatile
 22075                           
 22076                           ;user.c: 77: TRISCbits.TRISC6 = 0;
 22077  00579A  9C94               	bcf	3988,6,c	;volatile
 22078                           
 22079                           ;user.c: 78: TRISCbits.TRISC7 = 1;
 22080  00579C  8E94               	bsf	3988,7,c	;volatile
 22081                           
 22082                           ;user.c: 79: TRISBbits.TRISB0 = 1;
 22083  00579E  8093               	bsf	3987,0,c	;volatile
 22084                           
 22085                           ;user.c: 80: TRISBbits.TRISB1 = 1;
 22086  0057A0  8293               	bsf	3987,1,c	;volatile
 22087                           
 22088                           ;user.c: 81: TRISBbits.TRISB2 = 1;
 22089  0057A2  8493               	bsf	3987,2,c	;volatile
 22090                           
 22091                           ;user.c: 82: TRISBbits.TRISB3 = 1;
 22092  0057A4  8693               	bsf	3987,3,c	;volatile
 22093                           
 22094                           ;user.c: 83: TRISBbits.TRISB4 = 1;
 22095  0057A6  8893               	bsf	3987,4,c	;volatile
 22096                           
 22097                           ;user.c: 84: TRISBbits.TRISB5 = 1;
 22098  0057A8  8A93               	bsf	3987,5,c	;volatile
 22099                           
 22100                           ;user.c: 87: ANSEL = 0x01;
 22101  0057AA  0E01               	movlw	1
 22102  0057AC  6E7E               	movwf	3966,c	;volatile
 22103                           
 22104                           ;user.c: 88: ANSELH = 0x00;
 22105  0057AE  0E00               	movlw	0
 22106  0057B0  6E7F               	movwf	3967,c	;volatile
 22107                           
 22108                           ;user.c: 91: INTCON2bits.RBPU = 0;
 22109  0057B2  9EF1               	bcf	intcon2,7,c	;volatile
 22110                           
 22111                           ;user.c: 93: WPUB = 0x0F;
 22112  0057B4  0E0F               	movlw	15
 22113  0057B6  6E7C               	movwf	3964,c	;volatile
 22114  0057B8  0012               	return		;funcret
 22115  0057BA                     __end_of_InitApp:
 22116                           	opt stack 0
 22117                           tblptru	equ	0xFF8
 22118                           tblptrh	equ	0xFF7
 22119                           tblptrl	equ	0xFF6
 22120                           tablat	equ	0xFF5
 22121                           prodh	equ	0xFF4
 22122                           prodl	equ	0xFF3
 22123                           intcon	equ	0xFF2
 22124                           intcon2	equ	0xFF1
 22125                           indf0	equ	0xFEF
 22126                           postinc0	equ	0xFEE
 22127                           plusw0	equ	0xFEB
 22128                           fsr0h	equ	0xFEA
 22129                           fsr0l	equ	0xFE9
 22130                           wreg	equ	0xFE8
 22131                           indf1	equ	0xFE7
 22132                           postdec1	equ	0xFE5
 22133                           fsr1h	equ	0xFE2
 22134                           fsr1l	equ	0xFE1
 22135                           indf2	equ	0xFDF
 22136                           postinc2	equ	0xFDE
 22137                           postdec2	equ	0xFDD
 22138                           plusw2	equ	0xFDB
 22139                           fsr2h	equ	0xFDA
 22140                           fsr2l	equ	0xFD9
 22141                           status	equ	0xFD8
 22142                           
 22143 ;; *************** function _ConfigureOscillator *****************
 22144 ;; Defined at:
 22145 ;;		line 41 in file "system.c"
 22146 ;; Parameters:    Size  Location     Type
 22147 ;;		None
 22148 ;; Auto vars:     Size  Location     Type
 22149 ;;		None
 22150 ;; Return value:  Size  Location     Type
 22151 ;;		None               void
 22152 ;; Registers used:
 22153 ;;		None
 22154 ;; Tracked objects:
 22155 ;;		On entry : 0/0
 22156 ;;		On exit  : 0/0
 22157 ;;		Unchanged: 0/0
 22158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22163 ;;Total ram usage:        0 bytes
 22164 ;; Hardware stack levels used:    1
 22165 ;; Hardware stack levels required when called:    6
 22166 ;; This function calls:
 22167 ;;		Nothing
 22168 ;; This function is called by:
 22169 ;;		_main
 22170 ;; This function uses a non-reentrant model
 22171 ;;
 22172                           
 22173                           	psect	text83
 22174  005BFE                     __ptext83:
 22175                           	opt stack 0
 22176  005BFE                     _ConfigureOscillator:
 22177                           	opt stack 24
 22178                           
 22179                           ;incstack = 0
 22180  005BFE  0012               	return		;funcret
 22181  005C00                     __end_of_ConfigureOscillator:
 22182                           	opt stack 0
 22183                           tblptru	equ	0xFF8
 22184                           tblptrh	equ	0xFF7
 22185                           tblptrl	equ	0xFF6
 22186                           tablat	equ	0xFF5
 22187                           prodh	equ	0xFF4
 22188                           prodl	equ	0xFF3
 22189                           intcon	equ	0xFF2
 22190                           intcon2	equ	0xFF1
 22191                           indf0	equ	0xFEF
 22192                           postinc0	equ	0xFEE
 22193                           plusw0	equ	0xFEB
 22194                           fsr0h	equ	0xFEA
 22195                           fsr0l	equ	0xFE9
 22196                           wreg	equ	0xFE8
 22197                           indf1	equ	0xFE7
 22198                           postdec1	equ	0xFE5
 22199                           fsr1h	equ	0xFE2
 22200                           fsr1l	equ	0xFE1
 22201                           indf2	equ	0xFDF
 22202                           postinc2	equ	0xFDE
 22203                           postdec2	equ	0xFDD
 22204                           plusw2	equ	0xFDB
 22205                           fsr2h	equ	0xFDA
 22206                           fsr2l	equ	0xFD9
 22207                           status	equ	0xFD8
 22208                           
 22209 ;; *************** function _low_isr *****************
 22210 ;; Defined at:
 22211 ;;		line 587 in file "interrupts.c"
 22212 ;; Parameters:    Size  Location     Type
 22213 ;;		None
 22214 ;; Auto vars:     Size  Location     Type
 22215 ;;  data            1   25[COMRAM] unsigned char 
 22216 ;; Return value:  Size  Location     Type
 22217 ;;		None               void
 22218 ;; Registers used:
 22219 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22220 ;; Tracked objects:
 22221 ;;		On entry : 0/0
 22222 ;;		On exit  : 0/0
 22223 ;;		Unchanged: 0/0
 22224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22226 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22227 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22228 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22229 ;;Total ram usage:       18 bytes
 22230 ;; Hardware stack levels used:    1
 22231 ;; Hardware stack levels required when called:    5
 22232 ;; This function calls:
 22233 ;;		_EraseScreen
 22234 ;;		_IsCharacter
 22235 ;;		_ReadUSART
 22236 ;;		i1_BlueConnected
 22237 ;;		i1_UARTchar
 22238 ;;		i1_UARTstring
 22239 ;;		i1_UARTstringCRLN
 22240 ;;		i1_cleanBuffer
 22241 ;; This function is called by:
 22242 ;;		Interrupt level 1
 22243 ;; This function uses a non-reentrant model
 22244 ;;
 22245                           
 22246                           	psect	intcodelo
 22247  000018                     __pintcodelo:
 22248                           	opt stack 0
 22249  000018                     _low_isr:
 22250                           	opt stack 17
 22251                           
 22252                           ;incstack = 0
 22253  000018  CFD8 F009          	movff	status,??_low_isr
 22254  00001C  CFE8 F00A          	movff	wreg,??_low_isr+1
 22255  000020  CFE0 F00B          	movff	bsr,??_low_isr+2
 22256  000024  CFFA F00C          	movff	pclath,??_low_isr+3
 22257  000028  CFFB F00D          	movff	pclatu,??_low_isr+4
 22258  00002C  CFE9 F00E          	movff	fsr0l,??_low_isr+5
 22259  000030  CFEA F00F          	movff	fsr0h,??_low_isr+6
 22260  000034  CFE1 F010          	movff	fsr1l,??_low_isr+7
 22261  000038  CFE2 F011          	movff	fsr1h,??_low_isr+8
 22262  00003C  CFD9 F012          	movff	fsr2l,??_low_isr+9
 22263  000040  CFDA F013          	movff	fsr2h,??_low_isr+10
 22264  000044  CFF3 F014          	movff	prodl,??_low_isr+11
 22265  000048  CFF4 F015          	movff	prodh,??_low_isr+12
 22266  00004C  CFF6 F016          	movff	tblptrl,??_low_isr+13
 22267  000050  CFF7 F017          	movff	tblptrh,??_low_isr+14
 22268  000054  CFF8 F018          	movff	tblptru,??_low_isr+15
 22269  000058  CFF5 F019          	movff	tablat,??_low_isr+16
 22270                           
 22271                           ;interrupts.c: 596: char data = 0;
 22272  00005C  0E00               	movlw	0
 22273  00005E  6E1A               	movwf	low_isr@data,c
 22274                           
 22275                           ;interrupts.c: 598: INTCONbits.PEIE = 0;
 22276  000060  9CF2               	bcf	intcon,6,c	;volatile
 22277                           
 22278                           ;interrupts.c: 600: if(PIR1bits.RCIF)
 22279  000062  AA9E               	btfss	3998,5,c	;volatile
 22280  000064  D08E               	goto	i1l958
 22281                           
 22282                           ;interrupts.c: 601: {
 22283                           ;interrupts.c: 603: data = ReadUSART();
 22284  000066  EC71  F02D         	call	_ReadUSART	;wreg free
 22285  00006A  6E1A               	movwf	low_isr@data,c
 22286                           
 22287                           ;interrupts.c: 605: if(!BlueConnected())
 22288  00006C  ECC8  F02D         	call	i1_BlueConnected	;wreg free
 22289  000070  0900               	iorlw	0
 22290  000072  A4D8               	btfss	status,2,c
 22291  000074  D00F               	goto	i1l10855
 22292                           
 22293                           ;interrupts.c: 606: {
 22294                           ;interrupts.c: 607: if(CommandStringPos < 255)
 22295  000076  2830               	incf	_CommandStringPos,w,c
 22296  000078  B4D8               	btfsc	status,2,c
 22297  00007A  D081               	goto	i1l10901
 22298                           
 22299                           ;interrupts.c: 608: {
 22300                           ;interrupts.c: 609: CommandString[CommandStringPos] = data;
 22301  00007C  5030               	movf	_CommandStringPos,w,c
 22302  00007E  0D01               	mullw	1
 22303  000080  0E00               	movlw	low _CommandString
 22304  000082  24F3               	addwf	prodl,w,c
 22305  000084  6ED9               	movwf	fsr2l,c
 22306  000086  0E03               	movlw	high _CommandString
 22307  000088  20F4               	addwfc	prodh,w,c
 22308  00008A  6EDA               	movwf	fsr2h,c
 22309  00008C  C01A  FFDF         	movff	low_isr@data,indf2
 22310                           
 22311                           ;interrupts.c: 610: CommandStringPos++;
 22312  000090  2A30               	incf	_CommandStringPos,f,c
 22313                           
 22314                           ;interrupts.c: 611: }
 22315                           ;interrupts.c: 612: }
 22316  000092  D075               	goto	i1l10901
 22317  000094                     i1l10855:
 22318                           
 22319                           ;interrupts.c: 613: else
 22320                           ;interrupts.c: 614: {
 22321                           ;interrupts.c: 615: if(data != '\r' && data != '\n')
 22322  000094  0E0D               	movlw	13
 22323  000096  181A               	xorwf	low_isr@data,w,c
 22324  000098  B4D8               	btfsc	status,2,c
 22325  00009A  D063               	goto	i1l10895
 22326  00009C  0E0A               	movlw	10
 22327  00009E  181A               	xorwf	low_isr@data,w,c
 22328  0000A0  B4D8               	btfsc	status,2,c
 22329  0000A2  D05F               	goto	i1l10895
 22330                           
 22331                           ;interrupts.c: 616: {
 22332                           ;interrupts.c: 617: if((data == 127 || data == 8) && (ReceivedStringPos > 0))
 22333  0000A4  0E7F               	movlw	127
 22334  0000A6  181A               	xorwf	low_isr@data,w,c
 22335  0000A8  B4D8               	btfsc	status,2,c
 22336  0000AA  D004               	goto	i1l10863
 22337  0000AC  0E08               	movlw	8
 22338  0000AE  181A               	xorwf	low_isr@data,w,c
 22339  0000B0  A4D8               	btfss	status,2,c
 22340  0000B2  D01F               	goto	i1l10875
 22341  0000B4                     i1l10863:
 22342  0000B4  0100               	movlb	0	; () banked
 22343  0000B6  51E1               	movf	_ReceivedStringPos& (0+255),w,b
 22344  0000B8  B4D8               	btfsc	status,2,c
 22345  0000BA  D01B               	goto	i1l10875
 22346                           
 22347                           ; BSR set to: 0
 22348                           ;interrupts.c: 618: {
 22349                           ;interrupts.c: 620: EraseScreen(ReceivedStringPos + 1);
 22350  0000BC  0100               	movlb	0	; () banked
 22351  0000BE  29E1               	incf	_ReceivedStringPos& (0+255),w,b
 22352  0000C0  EC03  F02D         	call	_EraseScreen
 22353                           
 22354                           ;interrupts.c: 621: ReceivedStringPos--;
 22355  0000C4  0100               	movlb	0	; () banked
 22356  0000C6  07E1               	decf	_ReceivedStringPos& (0+255),f,b
 22357                           
 22358                           ; BSR set to: 0
 22359                           ;interrupts.c: 622: ReceivedString[ReceivedStringPos] = '\0';
 22360  0000C8  0100               	movlb	0	; () banked
 22361  0000CA  51E1               	movf	_ReceivedStringPos& (0+255),w,b
 22362  0000CC  0D01               	mullw	1
 22363  0000CE  0E00               	movlw	low _ReceivedString
 22364  0000D0  24F3               	addwf	prodl,w,c
 22365  0000D2  6ED9               	movwf	fsr2l,c
 22366  0000D4  0E02               	movlw	high _ReceivedString
 22367  0000D6  20F4               	addwfc	prodh,w,c
 22368  0000D8  6EDA               	movwf	fsr2h,c
 22369  0000DA  0E00               	movlw	0
 22370  0000DC  6EDF               	movwf	indf2,c
 22371                           
 22372                           ; BSR set to: 0
 22373                           ;interrupts.c: 623: UARTchar('>');
 22374  0000DE  0E3E               	movlw	62
 22375  0000E0  EC4F  F02D         	call	i1_UARTchar
 22376                           
 22377                           ;interrupts.c: 624: UARTstring(ReceivedString);
 22378  0000E4  0E00               	movlw	low _ReceivedString
 22379  0000E6  6E02               	movwf	i1UARTstring@data,c
 22380  0000E8  0E02               	movlw	high _ReceivedString
 22381  0000EA  6E03               	movwf	i1UARTstring@data+1,c
 22382  0000EC  ECC8  F02A         	call	i1_UARTstring	;wreg free
 22383                           
 22384                           ;interrupts.c: 625: }
 22385  0000F0  D046               	goto	i1l10901
 22386  0000F2                     i1l10875:
 22387                           
 22388                           ;interrupts.c: 626: else if(ReceivedStringPos < 255)
 22389  0000F2  0100               	movlb	0	; () banked
 22390  0000F4  29E1               	incf	_ReceivedStringPos& (0+255),w,b
 22391  0000F6  B4D8               	btfsc	status,2,c
 22392  0000F8  D01B               	goto	i1l10887
 22393                           
 22394                           ; BSR set to: 0
 22395                           ;interrupts.c: 627: {
 22396                           ;interrupts.c: 628: if(NewReceivedString == 0)
 22397  0000FA  0100               	movlb	0	; () banked
 22398  0000FC  51E0               	movf	_NewReceivedString& (0+255),w,b
 22399  0000FE  A4D8               	btfss	status,2,c
 22400  000100  D03E               	goto	i1l10901
 22401                           
 22402                           ; BSR set to: 0
 22403                           ;interrupts.c: 629: {
 22404                           ;interrupts.c: 630: if(IsCharacter(data))
 22405  000102  501A               	movf	low_isr@data,w,c
 22406  000104  EC43  F02D         	call	_IsCharacter
 22407  000108  0900               	iorlw	0
 22408  00010A  B4D8               	btfsc	status,2,c
 22409  00010C  D038               	goto	i1l10901
 22410                           
 22411                           ;interrupts.c: 631: {
 22412                           ;interrupts.c: 632: UARTchar(data);
 22413  00010E  501A               	movf	low_isr@data,w,c
 22414  000110  EC4F  F02D         	call	i1_UARTchar
 22415                           
 22416                           ;interrupts.c: 633: ReceivedString[ReceivedStringPos] = data;
 22417  000114  0100               	movlb	0	; () banked
 22418  000116  51E1               	movf	_ReceivedStringPos& (0+255),w,b
 22419  000118  0D01               	mullw	1
 22420  00011A  0E00               	movlw	low _ReceivedString
 22421  00011C  24F3               	addwf	prodl,w,c
 22422  00011E  6ED9               	movwf	fsr2l,c
 22423  000120  0E02               	movlw	high _ReceivedString
 22424  000122  20F4               	addwfc	prodh,w,c
 22425  000124  6EDA               	movwf	fsr2h,c
 22426  000126  C01A  FFDF         	movff	low_isr@data,indf2
 22427                           
 22428                           ; BSR set to: 0
 22429                           ;interrupts.c: 634: ReceivedStringPos++;
 22430  00012A  0100               	movlb	0	; () banked
 22431  00012C  2BE1               	incf	_ReceivedStringPos& (0+255),f,b
 22432                           
 22433                           ; BSR set to: 0
 22434                           ;interrupts.c: 635: }
 22435                           ;interrupts.c: 636: }
 22436                           ;interrupts.c: 637: }
 22437                           
 22438                           ; BSR set to: 0
 22439  00012E  D027               	goto	i1l10901
 22440  000130                     i1l10887:
 22441                           
 22442                           ; BSR set to: 0
 22443                           ;interrupts.c: 638: else
 22444                           ;interrupts.c: 639: {
 22445                           ;interrupts.c: 640: cleanBuffer(&ReceivedString,255);
 22446  000130  0E00               	movlw	low _ReceivedString
 22447  000132  6E01               	movwf	i1cleanBuffer@data,c
 22448  000134  0E02               	movlw	high _ReceivedString
 22449  000136  6E02               	movwf	i1cleanBuffer@data+1,c
 22450  000138  0E00               	movlw	0
 22451  00013A  6E04               	movwf	i1cleanBuffer@count+1,c
 22452  00013C  6803               	setf	i1cleanBuffer@count,c
 22453  00013E  ECFD  F02B         	call	i1_cleanBuffer	;wreg free
 22454                           
 22455                           ;interrupts.c: 641: ReceivedStringPos = 0;
 22456  000142  0E00               	movlw	0
 22457  000144  0100               	movlb	0	; () banked
 22458  000146  6FE1               	movwf	_ReceivedStringPos& (0+255),b
 22459                           
 22460                           ; BSR set to: 0
 22461                           ;interrupts.c: 642: UARTstring(CRLN);
 22462  000148  0E82               	movlw	low _CRLN
 22463  00014A  6E02               	movwf	i1UARTstring@data,c
 22464  00014C  0EFB               	movlw	high _CRLN
 22465  00014E  6E03               	movwf	i1UARTstring@data+1,c
 22466  000150  ECC8  F02A         	call	i1_UARTstring	;wreg free
 22467                           
 22468                           ;interrupts.c: 643: UARTstringCRLN("Buffer Overflow");
 22469  000154  0E57               	movlw	low STR_3
 22470  000156  6E04               	movwf	i1UARTstringCRLN@data,c
 22471  000158  0EFF               	movlw	high STR_3
 22472  00015A  6E05               	movwf	i1UARTstringCRLN@data+1,c
 22473  00015C  EC0D  F02A         	call	i1_UARTstringCRLN	;wreg free
 22474                           
 22475                           ;interrupts.c: 645: }
 22476                           ;interrupts.c: 646: }
 22477  000160  D00E               	goto	i1l10901
 22478  000162                     i1l10895:
 22479                           
 22480                           ;interrupts.c: 647: else if(ReceivedStringPos > 0)
 22481  000162  0100               	movlb	0	; () banked
 22482  000164  51E1               	movf	_ReceivedStringPos& (0+255),w,b
 22483  000166  B4D8               	btfsc	status,2,c
 22484  000168  D00A               	goto	i1l10901
 22485                           
 22486                           ; BSR set to: 0
 22487                           ;interrupts.c: 648: {
 22488                           ;interrupts.c: 649: UARTstring(CRLN);
 22489  00016A  0E82               	movlw	low _CRLN
 22490  00016C  6E02               	movwf	i1UARTstring@data,c
 22491  00016E  0EFB               	movlw	high _CRLN
 22492  000170  6E03               	movwf	i1UARTstring@data+1,c
 22493  000172  ECC8  F02A         	call	i1_UARTstring	;wreg free
 22494                           
 22495                           ;interrupts.c: 650: NewReceivedString = 1;
 22496  000176  0E01               	movlw	1
 22497  000178  0100               	movlb	0	; () banked
 22498  00017A  6FE0               	movwf	_NewReceivedString& (0+255),b
 22499                           
 22500                           ; BSR set to: 0
 22501                           
 22502                           ; BSR set to: 0
 22503  00017C  D000               	goto	i1l10901
 22504  00017E                     i1l10901:
 22505                           
 22506                           ;interrupts.c: 651: }
 22507                           ;interrupts.c: 652: }
 22508                           ;interrupts.c: 653: PIR1bits.RCIF = 0;
 22509  00017E  9A9E               	bcf	3998,5,c	;volatile
 22510                           
 22511                           ;interrupts.c: 654: }
 22512  000180  D00F               	goto	i1l973
 22513  000182                     i1l958:
 22514                           
 22515                           ;interrupts.c: 655: else if(PIR1bits.TMR1IF)
 22516  000182  A09E               	btfss	3998,0,c	;volatile
 22517  000184  D00B               	goto	i1l974
 22518                           
 22519                           ;interrupts.c: 656: {
 22520                           ;interrupts.c: 657: Timer1_Postscaler++;
 22521  000186  2A3B               	incf	_Timer1_Postscaler,f,c
 22522                           
 22523                           ;interrupts.c: 658: if(Timer1_Postscaler == 3)
 22524  000188  0E03               	movlw	3
 22525  00018A  183B               	xorwf	_Timer1_Postscaler,w,c
 22526  00018C  A4D8               	btfss	status,2,c
 22527  00018E  D004               	goto	i1l10911
 22528                           
 22529                           ;interrupts.c: 659: {
 22530                           ;interrupts.c: 660: (LATC &= ~0x04);
 22531  000190  948B               	bcf	3979,2,c	;volatile
 22532                           
 22533                           ;interrupts.c: 661: (LATC &= ~0x02);
 22534  000192  928B               	bcf	3979,1,c	;volatile
 22535                           
 22536                           ;interrupts.c: 662: (T1CONbits.TMR1ON = 0);
 22537  000194  90CD               	bcf	4045,0,c	;volatile
 22538  000196  D000               	goto	i1l10911
 22539  000198                     i1l10911:
 22540                           
 22541                           ;interrupts.c: 663: }
 22542                           ;interrupts.c: 664: PIR1bits.TMR1IF = 0;
 22543  000198  909E               	bcf	3998,0,c	;volatile
 22544                           
 22545                           ;interrupts.c: 665: }
 22546  00019A  D002               	goto	i1l973
 22547  00019C                     i1l974:
 22548                           
 22549                           ;interrupts.c: 666: else
 22550                           ;interrupts.c: 667: {
 22551                           ;interrupts.c: 669: __nop();
 22552  00019C  F000               	nop	
 22553  00019E  D000               	goto	i1l973
 22554  0001A0                     i1l973:
 22555                           
 22556                           ;interrupts.c: 670: }
 22557                           ;interrupts.c: 671: INTCONbits.PEIE = 1;
 22558  0001A0  8CF2               	bsf	intcon,6,c	;volatile
 22559  0001A2  C019  FFF5         	movff	??_low_isr+16,tablat
 22560  0001A6  C018  FFF8         	movff	??_low_isr+15,tblptru
 22561  0001AA  C017  FFF7         	movff	??_low_isr+14,tblptrh
 22562  0001AE  C016  FFF6         	movff	??_low_isr+13,tblptrl
 22563  0001B2  C015  FFF4         	movff	??_low_isr+12,prodh
 22564  0001B6  C014  FFF3         	movff	??_low_isr+11,prodl
 22565  0001BA  C013  FFDA         	movff	??_low_isr+10,fsr2h
 22566  0001BE  C012  FFD9         	movff	??_low_isr+9,fsr2l
 22567  0001C2  C011  FFE2         	movff	??_low_isr+8,fsr1h
 22568  0001C6  C010  FFE1         	movff	??_low_isr+7,fsr1l
 22569  0001CA  C00F  FFEA         	movff	??_low_isr+6,fsr0h
 22570  0001CE  C00E  FFE9         	movff	??_low_isr+5,fsr0l
 22571  0001D2  C00D  FFFB         	movff	??_low_isr+4,pclatu
 22572  0001D6  C00C  FFFA         	movff	??_low_isr+3,pclath
 22573  0001DA  C00B  FFE0         	movff	??_low_isr+2,bsr
 22574  0001DE  C00A  FFE8         	movff	??_low_isr+1,wreg
 22575  0001E2  C009  FFD8         	movff	??_low_isr,status
 22576  0001E6  0010               	retfie	
 22577  0001E8                     __end_of_low_isr:
 22578                           	opt stack 0
 22579                           pclatu	equ	0xFFB
 22580                           pclath	equ	0xFFA
 22581                           tblptru	equ	0xFF8
 22582                           tblptrh	equ	0xFF7
 22583                           tblptrl	equ	0xFF6
 22584                           tablat	equ	0xFF5
 22585                           prodh	equ	0xFF4
 22586                           prodl	equ	0xFF3
 22587                           intcon	equ	0xFF2
 22588                           intcon2	equ	0xFF1
 22589                           indf0	equ	0xFEF
 22590                           postinc0	equ	0xFEE
 22591                           plusw0	equ	0xFEB
 22592                           fsr0h	equ	0xFEA
 22593                           fsr0l	equ	0xFE9
 22594                           wreg	equ	0xFE8
 22595                           indf1	equ	0xFE7
 22596                           postdec1	equ	0xFE5
 22597                           fsr1h	equ	0xFE2
 22598                           fsr1l	equ	0xFE1
 22599                           bsr	equ	0xFE0
 22600                           indf2	equ	0xFDF
 22601                           postinc2	equ	0xFDE
 22602                           postdec2	equ	0xFDD
 22603                           plusw2	equ	0xFDB
 22604                           fsr2h	equ	0xFDA
 22605                           fsr2l	equ	0xFD9
 22606                           status	equ	0xFD8
 22607                           
 22608 ;; *************** function i1_cleanBuffer *****************
 22609 ;; Defined at:
 22610 ;;		line 125 in file "MISC.c"
 22611 ;; Parameters:    Size  Location     Type
 22612 ;;  data            2    0[COMRAM] PTR unsigned char 
 22613 ;;		 -> UseBluetooth@buf(50), BluetoothInitialSetup@buf(50), CommandString(255), StringAddEqual@temp(100), 
 22614 ;;		 -> ReceivedString(255), 
 22615 ;;  count           2    2[COMRAM] int 
 22616 ;; Auto vars:     Size  Location     Type
 22617 ;;  cleanBuffer     1    7[COMRAM] unsigned char 
 22618 ;; Return value:  Size  Location     Type
 22619 ;;		None               void
 22620 ;; Registers used:
 22621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22622 ;; Tracked objects:
 22623 ;;		On entry : 0/0
 22624 ;;		On exit  : 0/0
 22625 ;;		Unchanged: 0/0
 22626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22627 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22629 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22630 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22631 ;;Total ram usage:        8 bytes
 22632 ;; Hardware stack levels used:    1
 22633 ;; Hardware stack levels required when called:    2
 22634 ;; This function calls:
 22635 ;;		Nothing
 22636 ;; This function is called by:
 22637 ;;		_low_isr
 22638 ;; This function uses a non-reentrant model
 22639 ;;
 22640                           
 22641                           	psect	text85
 22642  0057FA                     __ptext85:
 22643                           	opt stack 0
 22644  0057FA                     i1_cleanBuffer:
 22645                           	opt stack 19
 22646                           
 22647                           ;MISC.c: 127: unsigned char i=0;
 22648                           
 22649                           ;incstack = 0
 22650  0057FA  0E00               	movlw	0
 22651  0057FC  6E08               	movwf	i1cleanBuffer@i,c
 22652                           
 22653                           ;MISC.c: 128: for(i=0; i<count;i++)
 22654  0057FE  0E00               	movlw	0
 22655  005800  6E08               	movwf	i1cleanBuffer@i,c
 22656  005802  D00C               	goto	i1l10327
 22657  005804                     i1l10323:
 22658                           
 22659                           ;MISC.c: 129: {
 22660                           ;MISC.c: 130: data[i]= 0;
 22661  005804  5008               	movf	i1cleanBuffer@i,w,c
 22662  005806  0D01               	mullw	1
 22663  005808  50F3               	movf	prodl,w,c
 22664  00580A  2401               	addwf	i1cleanBuffer@data,w,c
 22665  00580C  6ED9               	movwf	fsr2l,c
 22666  00580E  50F4               	movf	prodh,w,c
 22667  005810  2002               	addwfc	i1cleanBuffer@data+1,w,c
 22668  005812  6EDA               	movwf	fsr2h,c
 22669  005814  0E00               	movlw	0
 22670  005816  6EDF               	movwf	indf2,c
 22671  005818  2A08               	incf	i1cleanBuffer@i,f,c
 22672  00581A  D000               	goto	i1l10327
 22673  00581C                     i1l10327:
 22674  00581C  5008               	movf	i1cleanBuffer@i,w,c
 22675  00581E  6E05               	movwf	??i1_cleanBuffer& (0+255),c
 22676  005820  6A06               	clrf	(??i1_cleanBuffer+1)& (0+255),c
 22677  005822  5003               	movf	i1cleanBuffer@count,w,c
 22678  005824  5C05               	subwf	??i1_cleanBuffer,w,c
 22679  005826  5006               	movf	??i1_cleanBuffer+1,w,c
 22680  005828  0A80               	xorlw	128
 22681  00582A  6E07               	movwf	(??i1_cleanBuffer+2)& (0+255),c
 22682  00582C  5004               	movf	i1cleanBuffer@count+1,w,c
 22683  00582E  0A80               	xorlw	128
 22684  005830  5807               	subwfb	(??i1_cleanBuffer+2)& (0+255),w,c
 22685  005832  A0D8               	btfss	status,0,c
 22686  005834  D7E7               	goto	i1l10323
 22687  005836  0012               	return		;funcret
 22688  005838                     __end_ofi1_cleanBuffer:
 22689                           	opt stack 0
 22690                           pclatu	equ	0xFFB
 22691                           pclath	equ	0xFFA
 22692                           tblptru	equ	0xFF8
 22693                           tblptrh	equ	0xFF7
 22694                           tblptrl	equ	0xFF6
 22695                           tablat	equ	0xFF5
 22696                           prodh	equ	0xFF4
 22697                           prodl	equ	0xFF3
 22698                           intcon	equ	0xFF2
 22699                           intcon2	equ	0xFF1
 22700                           indf0	equ	0xFEF
 22701                           postinc0	equ	0xFEE
 22702                           plusw0	equ	0xFEB
 22703                           fsr0h	equ	0xFEA
 22704                           fsr0l	equ	0xFE9
 22705                           wreg	equ	0xFE8
 22706                           indf1	equ	0xFE7
 22707                           postdec1	equ	0xFE5
 22708                           fsr1h	equ	0xFE2
 22709                           fsr1l	equ	0xFE1
 22710                           bsr	equ	0xFE0
 22711                           indf2	equ	0xFDF
 22712                           postinc2	equ	0xFDE
 22713                           postdec2	equ	0xFDD
 22714                           plusw2	equ	0xFDB
 22715                           fsr2h	equ	0xFDA
 22716                           fsr2l	equ	0xFD9
 22717                           status	equ	0xFD8
 22718                           
 22719 ;; *************** function i1_UARTstringCRLN *****************
 22720 ;; Defined at:
 22721 ;;		line 248 in file "UART.c"
 22722 ;; Parameters:    Size  Location     Type
 22723 ;;  data            2    3[COMRAM] PTR unsigned char 
 22724 ;;		 -> STR_59(13), STR_56(17), STR_55(64), STR_53(23), 
 22725 ;;		 -> SYNTAX_ERR(24), STR_52(14), STR_51(9), STR_50(16), 
 22726 ;;		 -> STR_49(7), STR_48(35), STR_46(45), STR_43(17), 
 22727 ;;		 -> STR_42(9), STR_41(18), STR_40(9), STR_39(23), 
 22728 ;;		 -> STR_38(11), STR_37(21), STR_36(7), STR_35(31), 
 22729 ;;		 -> STR_34(33), STR_30(32), STR_25(29), STR_23(29), 
 22730 ;;		 -> UseBluetooth@buf(50), STR_3(16), 
 22731 ;; Auto vars:     Size  Location     Type
 22732 ;;		None
 22733 ;; Return value:  Size  Location     Type
 22734 ;;		None               void
 22735 ;; Registers used:
 22736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22737 ;; Tracked objects:
 22738 ;;		On entry : 0/0
 22739 ;;		On exit  : 0/0
 22740 ;;		Unchanged: 0/0
 22741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22745 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22746 ;;Total ram usage:        2 bytes
 22747 ;; Hardware stack levels used:    1
 22748 ;; Hardware stack levels required when called:    4
 22749 ;; This function calls:
 22750 ;;		i1_UARTchar
 22751 ;;		i1_UARTstring
 22752 ;; This function is called by:
 22753 ;;		_low_isr
 22754 ;; This function uses a non-reentrant model
 22755 ;;
 22756                           
 22757                           	psect	text86
 22758  00541A                     __ptext86:
 22759                           	opt stack 0
 22760  00541A                     i1_UARTstringCRLN:
 22761                           	opt stack 17
 22762                           
 22763                           ;UART.c: 250: while(*data != 0)
 22764                           
 22765                           ;incstack = 0
 22766  00541A  D016               	goto	i1l10335
 22767  00541C                     i1l10331:
 22768                           
 22769                           ;UART.c: 251: {
 22770                           ;UART.c: 252: UARTchar(*data);
 22771  00541C  C004  FFF6         	movff	i1UARTstringCRLN@data,tblptrl
 22772  005420  C005  FFF7         	movff	i1UARTstringCRLN@data+1,tblptrh
 22773  005424  0E00               	movlw	low (__mediumconst shr (0+16))
 22774  005426  6EF8               	movwf	tblptru,c
 22775  005428  0E0F               	movlw	(high __ramtop+-1)
 22776  00542A  64F7               	cpfsgt	tblptrh,c
 22777  00542C  D003               	bra	i1u1160_27
 22778  00542E  0008               	tblrd		*
 22779  005430  50F5               	movf	tablat,w,c
 22780  005432  D005               	bra	i1u1160_20
 22781  005434                     i1u1160_27:
 22782  005434  CFF6 FFE9          	movff	tblptrl,fsr0l
 22783  005438  CFF7 FFEA          	movff	tblptrh,fsr0h
 22784  00543C  50EF               	movf	indf0,w,c
 22785  00543E                     i1u1160_20:
 22786  00543E  EC4F  F02D         	call	i1_UARTchar
 22787                           
 22788                           ;UART.c: 253: *data++;
 22789  005442  4A04               	infsnz	i1UARTstringCRLN@data,f,c
 22790  005444  2A05               	incf	i1UARTstringCRLN@data+1,f,c
 22791  005446  D000               	goto	i1l10335
 22792  005448                     i1l10335:
 22793  005448  C004  FFF6         	movff	i1UARTstringCRLN@data,tblptrl
 22794  00544C  C005  FFF7         	movff	i1UARTstringCRLN@data+1,tblptrh
 22795  005450  0E00               	movlw	low (__mediumconst shr (0+16))
 22796  005452  6EF8               	movwf	tblptru,c
 22797  005454  0E0F               	movlw	(high __ramtop+-1)
 22798  005456  64F7               	cpfsgt	tblptrh,c
 22799  005458  D003               	bra	i1u1161_27
 22800  00545A  0008               	tblrd		*
 22801  00545C  50F5               	movf	tablat,w,c
 22802  00545E  D005               	bra	i1u1161_20
 22803  005460                     i1u1161_27:
 22804  005460  CFF6 FFE9          	movff	tblptrl,fsr0l
 22805  005464  CFF7 FFEA          	movff	tblptrh,fsr0h
 22806  005468  50EF               	movf	indf0,w,c
 22807  00546A                     i1u1161_20:
 22808  00546A  0900               	iorlw	0
 22809  00546C  A4D8               	btfss	status,2,c
 22810  00546E  D7D6               	goto	i1l10331
 22811                           
 22812                           ;UART.c: 254: }
 22813                           ;UART.c: 255: UARTstring("\r\n");
 22814  005470  0EFB               	movlw	low STR_1
 22815  005472  6E02               	movwf	i1UARTstring@data,c
 22816  005474  0EFF               	movlw	high STR_1
 22817  005476  6E03               	movwf	i1UARTstring@data+1,c
 22818  005478  ECC8  F02A         	call	i1_UARTstring	;wreg free
 22819  00547C  0012               	return		;funcret
 22820  00547E                     __end_ofi1_UARTstringCRLN:
 22821                           	opt stack 0
 22822                           pclatu	equ	0xFFB
 22823                           pclath	equ	0xFFA
 22824                           tblptru	equ	0xFF8
 22825                           tblptrh	equ	0xFF7
 22826                           tblptrl	equ	0xFF6
 22827                           tablat	equ	0xFF5
 22828                           prodh	equ	0xFF4
 22829                           prodl	equ	0xFF3
 22830                           intcon	equ	0xFF2
 22831                           intcon2	equ	0xFF1
 22832                           indf0	equ	0xFEF
 22833                           postinc0	equ	0xFEE
 22834                           plusw0	equ	0xFEB
 22835                           fsr0h	equ	0xFEA
 22836                           fsr0l	equ	0xFE9
 22837                           wreg	equ	0xFE8
 22838                           indf1	equ	0xFE7
 22839                           postdec1	equ	0xFE5
 22840                           fsr1h	equ	0xFE2
 22841                           fsr1l	equ	0xFE1
 22842                           bsr	equ	0xFE0
 22843                           indf2	equ	0xFDF
 22844                           postinc2	equ	0xFDE
 22845                           postdec2	equ	0xFDD
 22846                           plusw2	equ	0xFDB
 22847                           fsr2h	equ	0xFDA
 22848                           fsr2l	equ	0xFD9
 22849                           status	equ	0xFD8
 22850                           
 22851 ;; *************** function i1_UARTstring *****************
 22852 ;; Defined at:
 22853 ;;		line 199 in file "UART.c"
 22854 ;; Parameters:    Size  Location     Type
 22855 ;;  data            2    1[COMRAM] PTR unsigned char 
 22856 ;;		 -> SYNTAX_ERR(24), STR_45(26), STR_20(5), STR_18(5), 
 22857 ;;		 -> STR_16(6), STR_14(6), STR_12(9), STR_10(21), 
 22858 ;;		 -> STR_8(10), BluetoothInitialSetup@buf(50), STR_4(4), STR_2(3), 
 22859 ;;		 -> STR_1(3), CRLN(3), ReceivedString(255), 
 22860 ;; Auto vars:     Size  Location     Type
 22861 ;;		None
 22862 ;; Return value:  Size  Location     Type
 22863 ;;		None               void
 22864 ;; Registers used:
 22865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22866 ;; Tracked objects:
 22867 ;;		On entry : 0/0
 22868 ;;		On exit  : 0/0
 22869 ;;		Unchanged: 0/0
 22870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22871 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22874 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22875 ;;Total ram usage:        2 bytes
 22876 ;; Hardware stack levels used:    1
 22877 ;; Hardware stack levels required when called:    3
 22878 ;; This function calls:
 22879 ;;		i1_UARTchar
 22880 ;; This function is called by:
 22881 ;;		_low_isr
 22882 ;;		i1_UARTstringCRLN
 22883 ;; This function uses a non-reentrant model
 22884 ;;
 22885                           
 22886                           	psect	text87
 22887  005590                     __ptext87:
 22888                           	opt stack 0
 22889  005590                     i1_UARTstring:
 22890                           	opt stack 17
 22891                           
 22892                           ;UART.c: 201: while(*data != 0)
 22893                           
 22894                           ;incstack = 0
 22895  005590  D016               	goto	i1l9979
 22896  005592                     i1l9975:
 22897                           
 22898                           ;UART.c: 202: {
 22899                           ;UART.c: 203: UARTchar(*data);
 22900  005592  C002  FFF6         	movff	i1UARTstring@data,tblptrl
 22901  005596  C003  FFF7         	movff	i1UARTstring@data+1,tblptrh
 22902  00559A  0E00               	movlw	low (__mediumconst shr (0+16))
 22903  00559C  6EF8               	movwf	tblptru,c
 22904  00559E  0E0F               	movlw	(high __ramtop+-1)
 22905  0055A0  64F7               	cpfsgt	tblptrh,c
 22906  0055A2  D003               	bra	i1u1115_27
 22907  0055A4  0008               	tblrd		*
 22908  0055A6  50F5               	movf	tablat,w,c
 22909  0055A8  D005               	bra	i1u1115_20
 22910  0055AA                     i1u1115_27:
 22911  0055AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 22912  0055AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 22913  0055B2  50EF               	movf	indf0,w,c
 22914  0055B4                     i1u1115_20:
 22915  0055B4  EC4F  F02D         	call	i1_UARTchar
 22916                           
 22917                           ;UART.c: 204: *data++;
 22918  0055B8  4A02               	infsnz	i1UARTstring@data,f,c
 22919  0055BA  2A03               	incf	i1UARTstring@data+1,f,c
 22920  0055BC  D000               	goto	i1l9979
 22921  0055BE                     i1l9979:
 22922  0055BE  C002  FFF6         	movff	i1UARTstring@data,tblptrl
 22923  0055C2  C003  FFF7         	movff	i1UARTstring@data+1,tblptrh
 22924  0055C6  0E00               	movlw	low (__mediumconst shr (0+16))
 22925  0055C8  6EF8               	movwf	tblptru,c
 22926  0055CA  0E0F               	movlw	(high __ramtop+-1)
 22927  0055CC  64F7               	cpfsgt	tblptrh,c
 22928  0055CE  D003               	bra	i1u1116_27
 22929  0055D0  0008               	tblrd		*
 22930  0055D2  50F5               	movf	tablat,w,c
 22931  0055D4  D005               	bra	i1u1116_20
 22932  0055D6                     i1u1116_27:
 22933  0055D6  CFF6 FFE9          	movff	tblptrl,fsr0l
 22934  0055DA  CFF7 FFEA          	movff	tblptrh,fsr0h
 22935  0055DE  50EF               	movf	indf0,w,c
 22936  0055E0                     i1u1116_20:
 22937  0055E0  0900               	iorlw	0
 22938  0055E2  A4D8               	btfss	status,2,c
 22939  0055E4  D7D6               	goto	i1l9975
 22940  0055E6  0012               	return		;funcret
 22941  0055E8                     __end_ofi1_UARTstring:
 22942                           	opt stack 0
 22943                           pclatu	equ	0xFFB
 22944                           pclath	equ	0xFFA
 22945                           tblptru	equ	0xFF8
 22946                           tblptrh	equ	0xFF7
 22947                           tblptrl	equ	0xFF6
 22948                           tablat	equ	0xFF5
 22949                           prodh	equ	0xFF4
 22950                           prodl	equ	0xFF3
 22951                           intcon	equ	0xFF2
 22952                           intcon2	equ	0xFF1
 22953                           indf0	equ	0xFEF
 22954                           postinc0	equ	0xFEE
 22955                           plusw0	equ	0xFEB
 22956                           fsr0h	equ	0xFEA
 22957                           fsr0l	equ	0xFE9
 22958                           wreg	equ	0xFE8
 22959                           indf1	equ	0xFE7
 22960                           postdec1	equ	0xFE5
 22961                           fsr1h	equ	0xFE2
 22962                           fsr1l	equ	0xFE1
 22963                           bsr	equ	0xFE0
 22964                           indf2	equ	0xFDF
 22965                           postinc2	equ	0xFDE
 22966                           postdec2	equ	0xFDD
 22967                           plusw2	equ	0xFDB
 22968                           fsr2h	equ	0xFDA
 22969                           fsr2l	equ	0xFD9
 22970                           status	equ	0xFD8
 22971                           
 22972 ;; *************** function i1_BlueConnected *****************
 22973 ;; Defined at:
 22974 ;;		line 83 in file "Bluetooth.c"
 22975 ;; Parameters:    Size  Location     Type
 22976 ;;		None
 22977 ;; Auto vars:     Size  Location     Type
 22978 ;;		None
 22979 ;; Return value:  Size  Location     Type
 22980 ;;                  1    wreg      unsigned char 
 22981 ;; Registers used:
 22982 ;;		wreg
 22983 ;; Tracked objects:
 22984 ;;		On entry : 0/0
 22985 ;;		On exit  : 0/0
 22986 ;;		Unchanged: 0/0
 22987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22992 ;;Total ram usage:        0 bytes
 22993 ;; Hardware stack levels used:    1
 22994 ;; Hardware stack levels required when called:    2
 22995 ;; This function calls:
 22996 ;;		Nothing
 22997 ;; This function is called by:
 22998 ;;		_low_isr
 22999 ;; This function uses a non-reentrant model
 23000 ;;
 23001                           
 23002                           	psect	text88
 23003  005B90                     __ptext88:
 23004                           	opt stack 0
 23005  005B90                     i1_BlueConnected:
 23006                           	opt stack 19
 23007                           
 23008                           ;Bluetooth.c: 86: if((PORTA & 0x02) == 0x02)
 23009                           
 23010                           ;incstack = 0
 23011  005B90  A280               	btfss	3968,1,c	;volatile
 23012  005B92  D002               	goto	i1l7989
 23013                           
 23014                           ;Bluetooth.c: 87: {
 23015                           ;Bluetooth.c: 88: return 1;
 23016  005B94  0E01               	movlw	1
 23017  005B96  0012               	return	
 23018  005B98                     i1l7989:
 23019                           
 23020                           ;Bluetooth.c: 89: }
 23021                           ;Bluetooth.c: 90: return 0;
 23022  005B98  0E00               	movlw	0
 23023  005B9A  0012               	return	
 23024  005B9C  0012               	return		;funcret
 23025  005B9E                     __end_ofi1_BlueConnected:
 23026                           	opt stack 0
 23027                           pclatu	equ	0xFFB
 23028                           pclath	equ	0xFFA
 23029                           tblptru	equ	0xFF8
 23030                           tblptrh	equ	0xFF7
 23031                           tblptrl	equ	0xFF6
 23032                           tablat	equ	0xFF5
 23033                           prodh	equ	0xFF4
 23034                           prodl	equ	0xFF3
 23035                           intcon	equ	0xFF2
 23036                           intcon2	equ	0xFF1
 23037                           indf0	equ	0xFEF
 23038                           postinc0	equ	0xFEE
 23039                           plusw0	equ	0xFEB
 23040                           fsr0h	equ	0xFEA
 23041                           fsr0l	equ	0xFE9
 23042                           wreg	equ	0xFE8
 23043                           indf1	equ	0xFE7
 23044                           postdec1	equ	0xFE5
 23045                           fsr1h	equ	0xFE2
 23046                           fsr1l	equ	0xFE1
 23047                           bsr	equ	0xFE0
 23048                           indf2	equ	0xFDF
 23049                           postinc2	equ	0xFDE
 23050                           postdec2	equ	0xFDD
 23051                           plusw2	equ	0xFDB
 23052                           fsr2h	equ	0xFDA
 23053                           fsr2l	equ	0xFD9
 23054                           status	equ	0xFD8
 23055                           
 23056 ;; *************** function _ReadUSART *****************
 23057 ;; Defined at:
 23058 ;;		line 213 in file "UART.c"
 23059 ;; Parameters:    Size  Location     Type
 23060 ;;		None
 23061 ;; Auto vars:     Size  Location     Type
 23062 ;;  data            1    0[COMRAM] unsigned char 
 23063 ;; Return value:  Size  Location     Type
 23064 ;;                  1    wreg      unsigned char 
 23065 ;; Registers used:
 23066 ;;		wreg, status,2
 23067 ;; Tracked objects:
 23068 ;;		On entry : 0/0
 23069 ;;		On exit  : 0/0
 23070 ;;		Unchanged: 0/0
 23071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23076 ;;Total ram usage:        1 bytes
 23077 ;; Hardware stack levels used:    1
 23078 ;; Hardware stack levels required when called:    2
 23079 ;; This function calls:
 23080 ;;		Nothing
 23081 ;; This function is called by:
 23082 ;;		_low_isr
 23083 ;; This function uses a non-reentrant model
 23084 ;;
 23085                           
 23086                           	psect	text89
 23087  005AE2                     __ptext89:
 23088                           	opt stack 0
 23089  005AE2                     _ReadUSART:
 23090                           	opt stack 19
 23091                           
 23092                           ;UART.c: 215: unsigned char data;
 23093                           ;UART.c: 217: if(RCSTAbits.OERR)
 23094                           
 23095                           ;incstack = 0
 23096  005AE2  A2AB               	btfss	4011,1,c	;volatile
 23097  005AE4  D004               	goto	i1l409
 23098                           
 23099                           ;UART.c: 218: {
 23100                           ;UART.c: 220: RCSTAbits.CREN = 0;
 23101  005AE6  98AB               	bcf	4011,4,c	;volatile
 23102                           
 23103                           ;UART.c: 221: RCSTAbits.CREN = 1;
 23104  005AE8  88AB               	bsf	4011,4,c	;volatile
 23105                           
 23106                           ;UART.c: 222: return 0;
 23107  005AEA  0E00               	movlw	0
 23108  005AEC  0012               	return	
 23109  005AEE                     i1l409:
 23110                           
 23111                           ;UART.c: 223: }
 23112                           ;UART.c: 225: data = RCREG;
 23113  005AEE  CFAE F001          	movff	4014,ReadUSART@data	;volatile
 23114                           
 23115                           ;UART.c: 226: return (data);
 23116  005AF2  5001               	movf	ReadUSART@data,w,c
 23117  005AF4  0012               	return	
 23118  005AF6  0012               	return		;funcret
 23119  005AF8                     __end_of_ReadUSART:
 23120                           	opt stack 0
 23121                           pclatu	equ	0xFFB
 23122                           pclath	equ	0xFFA
 23123                           tblptru	equ	0xFF8
 23124                           tblptrh	equ	0xFF7
 23125                           tblptrl	equ	0xFF6
 23126                           tablat	equ	0xFF5
 23127                           prodh	equ	0xFF4
 23128                           prodl	equ	0xFF3
 23129                           intcon	equ	0xFF2
 23130                           intcon2	equ	0xFF1
 23131                           indf0	equ	0xFEF
 23132                           postinc0	equ	0xFEE
 23133                           plusw0	equ	0xFEB
 23134                           fsr0h	equ	0xFEA
 23135                           fsr0l	equ	0xFE9
 23136                           wreg	equ	0xFE8
 23137                           indf1	equ	0xFE7
 23138                           postdec1	equ	0xFE5
 23139                           fsr1h	equ	0xFE2
 23140                           fsr1l	equ	0xFE1
 23141                           bsr	equ	0xFE0
 23142                           indf2	equ	0xFDF
 23143                           postinc2	equ	0xFDE
 23144                           postdec2	equ	0xFDD
 23145                           plusw2	equ	0xFDB
 23146                           fsr2h	equ	0xFDA
 23147                           fsr2l	equ	0xFD9
 23148                           status	equ	0xFD8
 23149                           
 23150 ;; *************** function _IsCharacter *****************
 23151 ;; Defined at:
 23152 ;;		line 111 in file "MISC.c"
 23153 ;; Parameters:    Size  Location     Type
 23154 ;;  data            1    wreg     unsigned char 
 23155 ;; Auto vars:     Size  Location     Type
 23156 ;;  data            1    0[COMRAM] unsigned char 
 23157 ;; Return value:  Size  Location     Type
 23158 ;;                  1    wreg      unsigned char 
 23159 ;; Registers used:
 23160 ;;		wreg, status,2, status,0
 23161 ;; Tracked objects:
 23162 ;;		On entry : 0/0
 23163 ;;		On exit  : 0/0
 23164 ;;		Unchanged: 0/0
 23165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23169 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23170 ;;Total ram usage:        1 bytes
 23171 ;; Hardware stack levels used:    1
 23172 ;; Hardware stack levels required when called:    2
 23173 ;; This function calls:
 23174 ;;		Nothing
 23175 ;; This function is called by:
 23176 ;;		_low_isr
 23177 ;; This function uses a non-reentrant model
 23178 ;;
 23179                           
 23180                           	psect	text90
 23181  005A86                     __ptext90:
 23182                           	opt stack 0
 23183  005A86                     _IsCharacter:
 23184                           	opt stack 19
 23185                           
 23186                           ;incstack = 0
 23187                           ;IsCharacter@data stored from wreg
 23188  005A86  6E01               	movwf	IsCharacter@data,c
 23189                           
 23190                           ;MISC.c: 113: if(data >= 32 && data <= 126)
 23191  005A88  0E1F               	movlw	31
 23192  005A8A  6401               	cpfsgt	IsCharacter@data,c
 23193  005A8C  D005               	goto	i1l7741
 23194  005A8E  0E7F               	movlw	127
 23195  005A90  6001               	cpfslt	IsCharacter@data,c
 23196  005A92  D002               	goto	i1l7741
 23197                           
 23198                           ;MISC.c: 114: {
 23199                           ;MISC.c: 115: return 1;
 23200  005A94  0E01               	movlw	1
 23201  005A96  0012               	return	
 23202  005A98                     i1l7741:
 23203                           
 23204                           ;MISC.c: 116: }
 23205                           ;MISC.c: 117: return 0;
 23206  005A98  0E00               	movlw	0
 23207  005A9A  0012               	return	
 23208  005A9C  0012               	return		;funcret
 23209  005A9E                     __end_of_IsCharacter:
 23210                           	opt stack 0
 23211                           pclatu	equ	0xFFB
 23212                           pclath	equ	0xFFA
 23213                           tblptru	equ	0xFF8
 23214                           tblptrh	equ	0xFF7
 23215                           tblptrl	equ	0xFF6
 23216                           tablat	equ	0xFF5
 23217                           prodh	equ	0xFF4
 23218                           prodl	equ	0xFF3
 23219                           intcon	equ	0xFF2
 23220                           intcon2	equ	0xFF1
 23221                           indf0	equ	0xFEF
 23222                           postinc0	equ	0xFEE
 23223                           plusw0	equ	0xFEB
 23224                           fsr0h	equ	0xFEA
 23225                           fsr0l	equ	0xFE9
 23226                           wreg	equ	0xFE8
 23227                           indf1	equ	0xFE7
 23228                           postdec1	equ	0xFE5
 23229                           fsr1h	equ	0xFE2
 23230                           fsr1l	equ	0xFE1
 23231                           bsr	equ	0xFE0
 23232                           indf2	equ	0xFDF
 23233                           postinc2	equ	0xFDE
 23234                           postdec2	equ	0xFDD
 23235                           plusw2	equ	0xFDB
 23236                           fsr2h	equ	0xFDA
 23237                           fsr2l	equ	0xFD9
 23238                           status	equ	0xFD8
 23239                           
 23240 ;; *************** function _EraseScreen *****************
 23241 ;; Defined at:
 23242 ;;		line 294 in file "UART.c"
 23243 ;; Parameters:    Size  Location     Type
 23244 ;;  characters      1    wreg     unsigned char 
 23245 ;; Auto vars:     Size  Location     Type
 23246 ;;  characters      1    1[COMRAM] unsigned char 
 23247 ;;  i               1    2[COMRAM] unsigned char 
 23248 ;; Return value:  Size  Location     Type
 23249 ;;		None               void
 23250 ;; Registers used:
 23251 ;;		wreg, status,2, status,0, cstack
 23252 ;; Tracked objects:
 23253 ;;		On entry : 0/0
 23254 ;;		On exit  : 0/0
 23255 ;;		Unchanged: 0/0
 23256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23258 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23261 ;;Total ram usage:        2 bytes
 23262 ;; Hardware stack levels used:    1
 23263 ;; Hardware stack levels required when called:    3
 23264 ;; This function calls:
 23265 ;;		i1_UARTchar
 23266 ;; This function is called by:
 23267 ;;		_low_isr
 23268 ;; This function uses a non-reentrant model
 23269 ;;
 23270                           
 23271                           	psect	text91
 23272  005A06                     __ptext91:
 23273                           	opt stack 0
 23274  005A06                     _EraseScreen:
 23275                           	opt stack 18
 23276                           
 23277                           ;incstack = 0
 23278                           ;EraseScreen@characters stored from wreg
 23279  005A06  6E02               	movwf	EraseScreen@characters,c
 23280                           
 23281                           ;UART.c: 296: unsigned char i;
 23282                           ;UART.c: 298: UARTchar('\r');
 23283  005A08  0E0D               	movlw	13
 23284  005A0A  EC4F  F02D         	call	i1_UARTchar
 23285                           
 23286                           ;UART.c: 299: for (i = 0; i < characters; i++)
 23287  005A0E  0E00               	movlw	0
 23288  005A10  6E03               	movwf	EraseScreen@i,c
 23289  005A12  D005               	goto	i1l10305
 23290  005A14                     i1l10301:
 23291                           
 23292                           ;UART.c: 300: {
 23293                           ;UART.c: 301: UARTchar(' ');
 23294  005A14  0E20               	movlw	32
 23295  005A16  EC4F  F02D         	call	i1_UARTchar
 23296  005A1A  2A03               	incf	EraseScreen@i,f,c
 23297  005A1C  D000               	goto	i1l10305
 23298  005A1E                     i1l10305:
 23299  005A1E  5002               	movf	EraseScreen@characters,w,c
 23300  005A20  5C03               	subwf	EraseScreen@i,w,c
 23301  005A22  A0D8               	btfss	status,0,c
 23302  005A24  D7F7               	goto	i1l10301
 23303                           
 23304                           ;UART.c: 302: }
 23305                           ;UART.c: 303: UARTchar('\r');
 23306  005A26  0E0D               	movlw	13
 23307  005A28  EC4F  F02D         	call	i1_UARTchar
 23308  005A2C  0012               	return		;funcret
 23309  005A2E                     __end_of_EraseScreen:
 23310                           	opt stack 0
 23311                           pclatu	equ	0xFFB
 23312                           pclath	equ	0xFFA
 23313                           tblptru	equ	0xFF8
 23314                           tblptrh	equ	0xFF7
 23315                           tblptrl	equ	0xFF6
 23316                           tablat	equ	0xFF5
 23317                           prodh	equ	0xFF4
 23318                           prodl	equ	0xFF3
 23319                           intcon	equ	0xFF2
 23320                           intcon2	equ	0xFF1
 23321                           indf0	equ	0xFEF
 23322                           postinc0	equ	0xFEE
 23323                           plusw0	equ	0xFEB
 23324                           fsr0h	equ	0xFEA
 23325                           fsr0l	equ	0xFE9
 23326                           wreg	equ	0xFE8
 23327                           indf1	equ	0xFE7
 23328                           postdec1	equ	0xFE5
 23329                           fsr1h	equ	0xFE2
 23330                           fsr1l	equ	0xFE1
 23331                           bsr	equ	0xFE0
 23332                           indf2	equ	0xFDF
 23333                           postinc2	equ	0xFDE
 23334                           postdec2	equ	0xFDD
 23335                           plusw2	equ	0xFDB
 23336                           fsr2h	equ	0xFDA
 23337                           fsr2l	equ	0xFD9
 23338                           status	equ	0xFD8
 23339                           
 23340 ;; *************** function i1_UARTchar *****************
 23341 ;; Defined at:
 23342 ;;		line 185 in file "UART.c"
 23343 ;; Parameters:    Size  Location     Type
 23344 ;;  data            1    wreg     unsigned char 
 23345 ;; Auto vars:     Size  Location     Type
 23346 ;;  data            1    0[COMRAM] unsigned char 
 23347 ;; Return value:  Size  Location     Type
 23348 ;;		None               void
 23349 ;; Registers used:
 23350 ;;		wreg, status,2
 23351 ;; Tracked objects:
 23352 ;;		On entry : 0/0
 23353 ;;		On exit  : 0/0
 23354 ;;		Unchanged: 0/0
 23355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23360 ;;Total ram usage:        1 bytes
 23361 ;; Hardware stack levels used:    1
 23362 ;; Hardware stack levels required when called:    2
 23363 ;; This function calls:
 23364 ;;		Nothing
 23365 ;; This function is called by:
 23366 ;;		_EraseScreen
 23367 ;;		_low_isr
 23368 ;;		i1_UARTstring
 23369 ;;		i1_UARTstringCRLN
 23370 ;; This function uses a non-reentrant model
 23371 ;;
 23372                           
 23373                           	psect	text92
 23374  005A9E                     __ptext92:
 23375                           	opt stack 0
 23376  005A9E                     i1_UARTchar:
 23377                           	opt stack 17
 23378                           
 23379                           ;incstack = 0
 23380                           ;i1UARTchar@data stored from wreg
 23381  005A9E  6E01               	movwf	i1UARTchar@data,c
 23382                           
 23383                           ;UART.c: 187: if(data != 0)
 23384  005AA0  5001               	movf	i1UARTchar@data,w,c
 23385  005AA2  B4D8               	btfsc	status,2,c
 23386  005AA4  0012               	return	
 23387                           
 23388                           ;UART.c: 188: {
 23389                           ;UART.c: 189: TXREG = data;
 23390  005AA6  C001  FFAD         	movff	i1UARTchar@data,4013	;volatile
 23391                           
 23392                           ;UART.c: 190: while(!TXSTAbits.TRMT);
 23393  005AAA  D000               	goto	i1l397
 23394  005AAC                     i1l397:
 23395  005AAC  B2AC               	btfsc	4012,1,c	;volatile
 23396  005AAE  0012               	return	
 23397  005AB0  D7FD               	goto	i1l397
 23398  005AB2  0012               	return	
 23399  005AB4  0012               	return		;funcret
 23400  005AB6                     __end_ofi1_UARTchar:
 23401                           	opt stack 0
 23402                           pclatu	equ	0xFFB
 23403                           pclath	equ	0xFFA
 23404                           tblptru	equ	0xFF8
 23405                           tblptrh	equ	0xFF7
 23406                           tblptrl	equ	0xFF6
 23407                           tablat	equ	0xFF5
 23408                           prodh	equ	0xFF4
 23409                           prodl	equ	0xFF3
 23410                           intcon	equ	0xFF2
 23411                           intcon2	equ	0xFF1
 23412                           indf0	equ	0xFEF
 23413                           postinc0	equ	0xFEE
 23414                           plusw0	equ	0xFEB
 23415                           fsr0h	equ	0xFEA
 23416                           fsr0l	equ	0xFE9
 23417                           wreg	equ	0xFE8
 23418                           indf1	equ	0xFE7
 23419                           postdec1	equ	0xFE5
 23420                           fsr1h	equ	0xFE2
 23421                           fsr1l	equ	0xFE1
 23422                           bsr	equ	0xFE0
 23423                           indf2	equ	0xFDF
 23424                           postinc2	equ	0xFDE
 23425                           postdec2	equ	0xFDD
 23426                           plusw2	equ	0xFDB
 23427                           fsr2h	equ	0xFDA
 23428                           fsr2l	equ	0xFD9
 23429                           status	equ	0xFD8
 23430                           
 23431 ;; *************** function _high_isr *****************
 23432 ;; Defined at:
 23433 ;;		line 57 in file "interrupts.c"
 23434 ;; Parameters:    Size  Location     Type
 23435 ;;		None
 23436 ;; Auto vars:     Size  Location     Type
 23437 ;;  Time0           2   41[COMRAM] unsigned int 
 23438 ;;  IRpin           1   40[COMRAM] unsigned char 
 23439 ;; Return value:  Size  Location     Type
 23440 ;;		None               void
 23441 ;; Registers used:
 23442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23443 ;; Tracked objects:
 23444 ;;		On entry : 0/0
 23445 ;;		On exit  : 0/0
 23446 ;;		Unchanged: 0/0
 23447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23449 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23450 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23451 ;;      Totals:         3      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23452 ;;Total ram usage:       21 bytes
 23453 ;; Hardware stack levels used:    1
 23454 ;; Hardware stack levels required when called:    1
 23455 ;; This function calls:
 23456 ;;		_IRrawToNEC
 23457 ;;		_ResetTimer3
 23458 ;;		i2_ReadIRpin
 23459 ;;		i2_ResetTimer0
 23460 ;; This function is called by:
 23461 ;;		Interrupt level 2
 23462 ;; This function uses a non-reentrant model
 23463 ;;
 23464                           
 23465                           	psect	intcode
 23466  000008                     __pintcode:
 23467                           	opt stack 0
 23468  000008                     _high_isr:
 23469                           	opt stack 17
 23470                           
 23471                           ;incstack = 0
 23472  000008  CFFA F064          	movff	pclath,??_high_isr+4
 23473  00000C  CFFB F065          	movff	pclatu,??_high_isr+5
 23474  000010  CFE9 F066          	movff	fsr0l,??_high_isr+6
 23475  000014  EF50  F00D         	goto	int_func
 23476                           pclatu	equ	0xFFB
 23477                           pclath	equ	0xFFA
 23478                           tblptru	equ	0xFF8
 23479                           tblptrh	equ	0xFF7
 23480                           tblptrl	equ	0xFF6
 23481                           tablat	equ	0xFF5
 23482                           prodh	equ	0xFF4
 23483                           prodl	equ	0xFF3
 23484                           intcon	equ	0xFF2
 23485                           intcon2	equ	0xFF1
 23486                           indf0	equ	0xFEF
 23487                           postinc0	equ	0xFEE
 23488                           plusw0	equ	0xFEB
 23489                           fsr0h	equ	0xFEA
 23490                           fsr0l	equ	0xFE9
 23491                           wreg	equ	0xFE8
 23492                           indf1	equ	0xFE7
 23493                           postdec1	equ	0xFE5
 23494                           fsr1h	equ	0xFE2
 23495                           fsr1l	equ	0xFE1
 23496                           bsr	equ	0xFE0
 23497                           indf2	equ	0xFDF
 23498                           postinc2	equ	0xFDE
 23499                           postdec2	equ	0xFDD
 23500                           plusw2	equ	0xFDB
 23501                           fsr2h	equ	0xFDA
 23502                           fsr2l	equ	0xFD9
 23503                           status	equ	0xFD8
 23504                           
 23505                           	psect	intcode_body
 23506  001AA0                     __pintcode_body:
 23507                           	opt stack 17
 23508  001AA0                     int_func:
 23509                           	opt stack 17
 23510  001AA0  CFEA F067          	movff	fsr0h,??_high_isr+7
 23511  001AA4  CFE1 F068          	movff	fsr1l,??_high_isr+8
 23512  001AA8  CFE2 F069          	movff	fsr1h,??_high_isr+9
 23513  001AAC  CFD9 F06A          	movff	fsr2l,??_high_isr+10
 23514  001AB0  CFDA F06B          	movff	fsr2h,??_high_isr+11
 23515  001AB4  CFF3 F06C          	movff	prodl,??_high_isr+12
 23516  001AB8  CFF4 F06D          	movff	prodh,??_high_isr+13
 23517  001ABC  CFF6 F06E          	movff	tblptrl,??_high_isr+14
 23518  001AC0  CFF7 F06F          	movff	tblptrh,??_high_isr+15
 23519  001AC4  CFF8 F070          	movff	tblptru,??_high_isr+16
 23520  001AC8  CFF5 F071          	movff	tablat,??_high_isr+17
 23521                           
 23522                           ;interrupts.c: 66: unsigned char IRpin;
 23523                           ;interrupts.c: 67: unsigned int Time0;
 23524                           ;interrupts.c: 69: INTCONbits.GIE = 0;
 23525  001ACC  9EF2               	bcf	intcon,7,c	;volatile
 23526                           
 23527                           ;interrupts.c: 71: if(INTCONbits.RBIF)
 23528  001ACE  A0F2               	btfss	intcon,0,c	;volatile
 23529  001AD0  D067               	goto	i2l831
 23530                           
 23531                           ;interrupts.c: 72: {
 23532                           ;interrupts.c: 73: IRpin = ReadIRpin();
 23533  001AD2  ECCF  F02D         	call	i2_ReadIRpin	;wreg free
 23534  001AD6  6E29               	movwf	high_isr@IRpin,c
 23535                           
 23536                           ;interrupts.c: 74: if(IRpin != IRpinOLD)
 23537  001AD8  5032               	movf	_IRpinOLD,w,c
 23538  001ADA  1829               	xorwf	high_isr@IRpin,w,c
 23539  001ADC  B4D8               	btfsc	status,2,c
 23540  001ADE  D05D               	goto	i2l832
 23541                           
 23542                           ;interrupts.c: 75: {
 23543                           ;interrupts.c: 76: (T0CONbits.TMR0ON = 1);
 23544  001AE0  8ED5               	bsf	4053,7,c	;volatile
 23545                           
 23546                           ;interrupts.c: 77: (INTCONbits.TMR0IE = 1);
 23547  001AE2  8AF2               	bsf	intcon,5,c	;volatile
 23548                           
 23549                           ;interrupts.c: 78: ReceivingIR = 19;
 23550  001AE4  0E13               	movlw	19
 23551  001AE6  6E42               	movwf	_ReceivingIR,c	;volatile
 23552                           
 23553                           ;interrupts.c: 79: IR_New_Code = 0;
 23554  001AE8  0E00               	movlw	0
 23555  001AEA  0100               	movlb	0	; () banked
 23556  001AEC  6FE6               	movwf	_IR_New_Code& (0+255),b
 23557                           
 23558                           ; BSR set to: 0
 23559                           ;interrupts.c: 80: Time0 = TMR0L;
 23560  001AEE  CFD6 F02A          	movff	4054,high_isr@Time0	;volatile
 23561  001AF2  6A2B               	clrf	high_isr@Time0+1,c
 23562                           
 23563                           ;interrupts.c: 81: Time0 += (TMR0H << 8);
 23564  001AF4  50D7               	movf	4055,w,c	;volatile
 23565  001AF6  262B               	addwf	high_isr@Time0+1,f,c
 23566                           
 23567                           ; BSR set to: 0
 23568                           ;interrupts.c: 82: if(IRrawCodeNum < 72)
 23569  001AF8  0E48               	movlw	72
 23570  001AFA  6033               	cpfslt	_IRrawCodeNum,c
 23571  001AFC  D049               	goto	i2l833
 23572                           
 23573                           ; BSR set to: 0
 23574                           ;interrupts.c: 83: {
 23575                           ;interrupts.c: 84: if(IRrawCodeNum > 0)
 23576  001AFE  5033               	movf	_IRrawCodeNum,w,c
 23577  001B00  B4D8               	btfsc	status,2,c
 23578  001B02  D041               	goto	i2l10443
 23579                           
 23580                           ; BSR set to: 0
 23581                           ;interrupts.c: 85: {
 23582                           ;interrupts.c: 86: IRRawCode[IRrawCodeNum - 1] = Time0;
 23583  001B04  0EFE               	movlw	254
 23584  001B06  0100               	movlb	0	; () banked
 23585  001B08  6F60               	movwf	??_high_isr& (0+255),b
 23586  001B0A  0EFF               	movlw	255
 23587  001B0C  0100               	movlb	0	; () banked
 23588  001B0E  6F61               	movwf	(??_high_isr+1)& (0+255),b
 23589  001B10  5033               	movf	_IRrawCodeNum,w,c
 23590  001B12  0100               	movlb	0	; () banked
 23591  001B14  6F62               	movwf	(??_high_isr+2)& (0+255),b
 23592  001B16  6B63               	clrf	(??_high_isr+3)& (0+255),b
 23593  001B18  90D8               	bcf	status,0,c
 23594  001B1A  0100               	movlb	0	; () banked
 23595  001B1C  3762               	rlcf	(??_high_isr+2)& (0+255),f,b
 23596  001B1E  3763               	rlcf	(??_high_isr+3)& (0+255),f,b
 23597  001B20  0100               	movlb	0	; () banked
 23598  001B22  5160               	movf	??_high_isr& (0+255),w,b
 23599  001B24  0100               	movlb	0	; () banked
 23600  001B26  2762               	addwf	(??_high_isr+2)& (0+255),f,b
 23601  001B28  0100               	movlb	0	; () banked
 23602  001B2A  5161               	movf	(??_high_isr+1)& (0+255),w,b
 23603  001B2C  0100               	movlb	0	; () banked
 23604  001B2E  2363               	addwfc	(??_high_isr+3)& (0+255),f,b
 23605  001B30  0E00               	movlw	low _IRRawCode
 23606  001B32  0100               	movlb	0	; () banked
 23607  001B34  2562               	addwf	(??_high_isr+2)& (0+255),w,b
 23608  001B36  6ED9               	movwf	fsr2l,c
 23609  001B38  0E04               	movlw	high _IRRawCode
 23610  001B3A  0100               	movlb	0	; () banked
 23611  001B3C  2163               	addwfc	(??_high_isr+3)& (0+255),w,b
 23612  001B3E  6EDA               	movwf	fsr2h,c
 23613  001B40  C02A  FFDE         	movff	high_isr@Time0,postinc2
 23614  001B44  C02B  FFDD         	movff	high_isr@Time0+1,postdec2
 23615                           
 23616                           ; BSR set to: 0
 23617                           ;interrupts.c: 87: if((Time0 <= 21000 && Time0 >= 19000) ||
 23618                           ;interrupts.c: 88: (Time0 <= 50000 && Time0 >= 45000))
 23619  001B48  0E09               	movlw	9
 23620  001B4A  5C2A               	subwf	high_isr@Time0,w,c
 23621  001B4C  0E52               	movlw	82
 23622  001B4E  582B               	subwfb	high_isr@Time0+1,w,c
 23623  001B50  B0D8               	btfsc	status,0,c
 23624  001B52  D006               	goto	i2l10437
 23625                           
 23626                           ; BSR set to: 0
 23627  001B54  0E38               	movlw	56
 23628  001B56  5C2A               	subwf	high_isr@Time0,w,c
 23629  001B58  0E4A               	movlw	74
 23630  001B5A  582B               	subwfb	high_isr@Time0+1,w,c
 23631  001B5C  B0D8               	btfsc	status,0,c
 23632  001B5E  D00C               	goto	i2l837
 23633  001B60                     i2l10437:
 23634                           
 23635                           ; BSR set to: 0
 23636  001B60  0E51               	movlw	81
 23637  001B62  5C2A               	subwf	high_isr@Time0,w,c
 23638  001B64  0EC3               	movlw	195
 23639  001B66  582B               	subwfb	high_isr@Time0+1,w,c
 23640  001B68  B0D8               	btfsc	status,0,c
 23641  001B6A  D00A               	goto	i2l10441
 23642                           
 23643                           ; BSR set to: 0
 23644  001B6C  0EC8               	movlw	200
 23645  001B6E  5C2A               	subwf	high_isr@Time0,w,c
 23646  001B70  0EAF               	movlw	175
 23647  001B72  582B               	subwfb	high_isr@Time0+1,w,c
 23648  001B74  A0D8               	btfss	status,0,c
 23649  001B76  D004               	goto	i2l10441
 23650  001B78                     i2l837:
 23651                           
 23652                           ; BSR set to: 0
 23653                           ;interrupts.c: 89: {
 23654                           ;interrupts.c: 91: (IOCBbits.IOCB4 = 0);
 23655  001B78  987D               	bcf	3965,4,c	;volatile
 23656                           
 23657                           ;interrupts.c: 92: INTCONbits.RBIE = 0;
 23658  001B7A  96F2               	bcf	intcon,3,c	;volatile
 23659                           
 23660                           ;interrupts.c: 94: INTCONbits.TMR0IF = 1;
 23661  001B7C  84F2               	bsf	intcon,2,c	;volatile
 23662                           
 23663                           ;interrupts.c: 95: }
 23664  001B7E  D006               	goto	i2l10445
 23665  001B80                     i2l10441:
 23666                           
 23667                           ; BSR set to: 0
 23668                           ;interrupts.c: 96: else
 23669                           ;interrupts.c: 97: {
 23670                           ;interrupts.c: 98: ResetTimer0();
 23671  001B80  ECEB  F02D         	call	i2_ResetTimer0	;wreg free
 23672                           
 23673                           ;interrupts.c: 99: }
 23674                           ;interrupts.c: 100: }
 23675  001B84  D003               	goto	i2l10445
 23676  001B86                     i2l10443:
 23677                           
 23678                           ;interrupts.c: 101: else
 23679                           ;interrupts.c: 102: {
 23680                           ;interrupts.c: 103: ResetTimer0();
 23681  001B86  ECEB  F02D         	call	i2_ResetTimer0	;wreg free
 23682  001B8A  D000               	goto	i2l10445
 23683  001B8C                     i2l10445:
 23684                           
 23685                           ;interrupts.c: 104: }
 23686                           ;interrupts.c: 105: IRrawCodeNum++;
 23687  001B8C  2A33               	incf	_IRrawCodeNum,f,c
 23688                           
 23689                           ;interrupts.c: 106: }
 23690  001B8E  D002               	goto	i2l842
 23691  001B90                     i2l833:
 23692                           
 23693                           ; BSR set to: 0
 23694                           ;interrupts.c: 107: else
 23695                           ;interrupts.c: 108: {
 23696                           ;interrupts.c: 109: (IOCBbits.IOCB4 = 0);
 23697  001B90  987D               	bcf	3965,4,c	;volatile
 23698                           
 23699                           ;interrupts.c: 110: INTCONbits.RBIE = 0;
 23700  001B92  96F2               	bcf	intcon,3,c	;volatile
 23701  001B94                     i2l842:
 23702                           
 23703                           ;interrupts.c: 111: }
 23704                           ;interrupts.c: 112: IRpinOLD = IRpin;
 23705  001B94  C029  F032         	movff	high_isr@IRpin,_IRpinOLD
 23706                           
 23707                           ;interrupts.c: 113: }
 23708  001B98  D001               	goto	i2l843
 23709  001B9A                     i2l832:
 23710                           
 23711                           ;interrupts.c: 114: else
 23712                           ;interrupts.c: 115: {
 23713                           ;interrupts.c: 117: __nop();
 23714  001B9A  F000               	nop	
 23715  001B9C                     i2l843:
 23716                           
 23717                           ;interrupts.c: 118: }
 23718                           ;interrupts.c: 120: INTCONbits.RBIF = 0;
 23719  001B9C  90F2               	bcf	intcon,0,c	;volatile
 23720                           
 23721                           ;interrupts.c: 121: }
 23722  001B9E  D209               	goto	i2l844
 23723  001BA0                     i2l831:
 23724                           
 23725                           ;interrupts.c: 122: else if(INTCONbits.TMR0IF)
 23726  001BA0  A4F2               	btfss	intcon,2,c	;volatile
 23727  001BA2  D021               	goto	i2l845
 23728                           
 23729                           ;interrupts.c: 123: {
 23730                           ;interrupts.c: 125: (INTCONbits.TMR0IE = 0);
 23731  001BA4  9AF2               	bcf	intcon,5,c	;volatile
 23732                           
 23733                           ;interrupts.c: 126: (T0CONbits.TMR0ON = 0);
 23734  001BA6  9ED5               	bcf	4053,7,c	;volatile
 23735                           
 23736                           ;interrupts.c: 127: IR_New_Code = IRrawToNEC(&IRRawCode, &IR_NEC, 1);
 23737  001BA8  0E00               	movlw	low _IRRawCode
 23738  001BAA  6E1B               	movwf	IRrawToNEC@Raw,c
 23739  001BAC  0E04               	movlw	high _IRRawCode
 23740  001BAE  6E1C               	movwf	IRrawToNEC@Raw+1,c
 23741  001BB0  0EE2               	movlw	low _IR_NEC
 23742  001BB2  6E1D               	movwf	IRrawToNEC@NEC,c
 23743  001BB4  0E00               	movlw	high _IR_NEC
 23744  001BB6  6E1E               	movwf	IRrawToNEC@NEC+1,c
 23745  001BB8  0E01               	movlw	1
 23746  001BBA  6E1F               	movwf	IRrawToNEC@Invert,c
 23747  001BBC  ECDA  F015         	call	_IRrawToNEC	;wreg free
 23748  001BC0  0100               	movlb	0	; () banked
 23749  001BC2  6FE6               	movwf	_IR_New_Code& (0+255),b
 23750                           
 23751                           ; BSR set to: 0
 23752                           ;interrupts.c: 128: if(!IR_New_Code)
 23753  001BC4  0100               	movlb	0	; () banked
 23754  001BC6  51E6               	movf	_IR_New_Code& (0+255),w,b
 23755  001BC8  A4D8               	btfss	status,2,c
 23756  001BCA  D007               	goto	i2l10461
 23757                           
 23758                           ; BSR set to: 0
 23759                           ;interrupts.c: 129: {
 23760                           ;interrupts.c: 130: IRpinOLD = ReadIRpin();
 23761  001BCC  ECCF  F02D         	call	i2_ReadIRpin	;wreg free
 23762  001BD0  6E32               	movwf	_IRpinOLD,c
 23763                           
 23764                           ;interrupts.c: 131: INTCONbits.RBIF = 0;
 23765  001BD2  90F2               	bcf	intcon,0,c	;volatile
 23766                           
 23767                           ;interrupts.c: 132: (IOCBbits.IOCB4 = 1);
 23768  001BD4  887D               	bsf	3965,4,c	;volatile
 23769                           
 23770                           ;interrupts.c: 133: INTCONbits.RBIE = 1;
 23771  001BD6  86F2               	bsf	intcon,3,c	;volatile
 23772  001BD8  D000               	goto	i2l10461
 23773  001BDA                     i2l10461:
 23774                           
 23775                           ;interrupts.c: 134: }
 23776                           ;interrupts.c: 135: IRrawCodeNum = 0;
 23777  001BDA  0E00               	movlw	0
 23778  001BDC  6E33               	movwf	_IRrawCodeNum,c
 23779                           
 23780                           ;interrupts.c: 136: ReceivingIR = 13;
 23781  001BDE  0E0D               	movlw	13
 23782  001BE0  6E42               	movwf	_ReceivingIR,c	;volatile
 23783                           
 23784                           ;interrupts.c: 137: INTCONbits.TMR0IF = 0;
 23785  001BE2  94F2               	bcf	intcon,2,c	;volatile
 23786                           
 23787                           ;interrupts.c: 138: }
 23788  001BE4  D1E6               	goto	i2l844
 23789  001BE6                     i2l845:
 23790                           
 23791                           ;interrupts.c: 139: else if(PIR1bits.TMR2IF)
 23792  001BE6  A29E               	btfss	3998,1,c	;volatile
 23793  001BE8  D1D1               	goto	i2l848
 23794                           
 23795                           ;interrupts.c: 140: {
 23796                           ;interrupts.c: 143: Timer2_Postscaler++;
 23797  001BEA  2A3C               	incf	_Timer2_Postscaler,f,c
 23798                           
 23799                           ;interrupts.c: 144: if(RF_IR == 55)
 23800  001BEC  0E37               	movlw	55
 23801  001BEE  1840               	xorwf	_RF_IR,w,c
 23802  001BF0  A4D8               	btfss	status,2,c
 23803  001BF2  D10C               	goto	i2l10701
 23804                           
 23805                           ;interrupts.c: 145: {
 23806                           ;interrupts.c: 147: if(Timer2_Postscaler >= RF_IR_Postscaler)
 23807  001BF4  5041               	movf	_RF_IR_Postscaler,w,c	;volatile
 23808  001BF6  5C3C               	subwf	_Timer2_Postscaler,w,c
 23809  001BF8  A0D8               	btfss	status,0,c
 23810  001BFA  D103               	goto	i2l10697
 23811                           
 23812                           ;interrupts.c: 148: {
 23813                           ;interrupts.c: 149: Timer2_Postscaler = 0;
 23814  001BFC  0E00               	movlw	0
 23815  001BFE  6E3C               	movwf	_Timer2_Postscaler,c
 23816                           
 23817                           ;interrupts.c: 150: if(RFsendCode[RFcodeBit] != 99)
 23818  001C00  5037               	movf	_RFcodeBit,w,c
 23819  001C02  0D01               	mullw	1
 23820  001C04  0E94               	movlw	low _RFsendCode
 23821  001C06  24F3               	addwf	prodl,w,c
 23822  001C08  6ED9               	movwf	fsr2l,c
 23823  001C0A  0E01               	movlw	high _RFsendCode
 23824  001C0C  20F4               	addwfc	prodh,w,c
 23825  001C0E  6EDA               	movwf	fsr2h,c
 23826  001C10  0E63               	movlw	99
 23827  001C12  18DE               	xorwf	postinc2,w,c
 23828  001C14  B4D8               	btfsc	status,2,c
 23829  001C16  D0B3               	goto	i2l10647
 23830                           
 23831                           ;interrupts.c: 151: {
 23832                           ;interrupts.c: 153: if(RFsendFlag)
 23833  001C18  5039               	movf	_RFsendFlag,w,c	;volatile
 23834  001C1A  B4D8               	btfsc	status,2,c
 23835  001C1C  D0F2               	goto	i2l10697
 23836                           
 23837                           ;interrupts.c: 154: {
 23838                           ;interrupts.c: 155: if(RFsendCode[RFcodeBit] == 0)
 23839  001C1E  5037               	movf	_RFcodeBit,w,c
 23840  001C20  0D01               	mullw	1
 23841  001C22  0E94               	movlw	low _RFsendCode
 23842  001C24  24F3               	addwf	prodl,w,c
 23843  001C26  6ED9               	movwf	fsr2l,c
 23844  001C28  0E01               	movlw	high _RFsendCode
 23845  001C2A  20F4               	addwfc	prodh,w,c
 23846  001C2C  6EDA               	movwf	fsr2h,c
 23847  001C2E  50DF               	movf	indf2,w,c
 23848  001C30  A4D8               	btfss	status,2,c
 23849  001C32  D03F               	goto	i2l10539
 23850                           
 23851                           ;interrupts.c: 156: {
 23852                           ;interrupts.c: 158: if(RFConfig == 1)
 23853  001C34  0436               	decf	_RFConfig,w,c
 23854  001C36  A4D8               	btfss	status,2,c
 23855  001C38  D025               	goto	i2l10517
 23856                           
 23857                           ;interrupts.c: 159: {
 23858                           ;interrupts.c: 160: if(RFcodePlace == 1)
 23859  001C3A  0438               	decf	_RFcodePlace,w,c
 23860  001C3C  A4D8               	btfss	status,2,c
 23861  001C3E  D007               	goto	i2l10491
 23862  001C40  D077               	goto	i2l10605
 23863  001C42                     i2l10487:
 23864                           
 23865                           ;interrupts.c: 163: (PR2 = 8);
 23866  001C42  0E08               	movlw	8
 23867  001C44                     L10:
 23868  001C44  6ECB               	movwf	4043,c	;volatile
 23869  001C46  D076               	goto	i2l10609
 23870  001C48                     L12:
 23871                           
 23872                           ;interrupts.c: 165: (TMR2 = 0);
 23873  001C48  0E00               	movlw	0
 23874  001C4A  6ECC               	movwf	4044,c	;volatile
 23875                           
 23876                           ;interrupts.c: 166: }
 23877  001C4C  D0DA               	goto	i2l10697
 23878  001C4E                     i2l10491:
 23879                           
 23880                           ;interrupts.c: 167: else if(RFcodePlace == 2)
 23881  001C4E  0E02               	movlw	2
 23882  001C50  1838               	xorwf	_RFcodePlace,w,c
 23883  001C52  A4D8               	btfss	status,2,c
 23884  001C54  D004               	goto	i2l10499
 23885  001C56  D074               	goto	L26
 23886                           
 23887                           ;interrupts.c: 168: {
 23888                           ;interrupts.c: 169: (LATC &= ~0x20);
 23889  001C58  D03E               	goto	i2l10547
 23890  001C5A                     i2l10497:
 23891                           
 23892                           ;interrupts.c: 171: RFcodePlace++;
 23893  001C5A  2A38               	incf	_RFcodePlace,f,c
 23894                           
 23895                           ;interrupts.c: 172: }
 23896  001C5C  D0D2               	goto	i2l10697
 23897  001C5E                     i2l10499:
 23898                           
 23899                           ;interrupts.c: 173: else if(RFcodePlace == 3)
 23900  001C5E  0E03               	movlw	3
 23901  001C60  1838               	xorwf	_RFcodePlace,w,c
 23902  001C62  A4D8               	btfss	status,2,c
 23903  001C64  D002               	goto	i2l10507
 23904  001C66  D064               	goto	i2l10605
 23905                           
 23906                           ;interrupts.c: 174: {
 23907                           ;interrupts.c: 175: (LATC |= 0x20);
 23908  001C68  D7EC               	goto	i2l10487
 23909  001C6A                     i2l10507:
 23910                           
 23911                           ;interrupts.c: 180: else if(RFcodePlace == 4)
 23912  001C6A  0E04               	movlw	4
 23913  001C6C  1838               	xorwf	_RFcodePlace,w,c
 23914  001C6E  A4D8               	btfss	status,2,c
 23915  001C70  D004               	goto	i2l861
 23916                           
 23917                           ;interrupts.c: 181: {
 23918                           ;interrupts.c: 182: (LATC &= ~0x20);
 23919  001C72  9A8B               	bcf	3979,5,c	;volatile
 23920                           
 23921                           ;interrupts.c: 183: (PR2 = 24);
 23922  001C74  0E18               	movlw	24
 23923  001C76  D051               	goto	L11
 23924  001C78  D016               	goto	i2l10533
 23925  001C7A                     i2l861:
 23926                           
 23927                           ;interrupts.c: 187: else
 23928                           ;interrupts.c: 188: {
 23929                           ;interrupts.c: 190: (T2CONbits.TMR2ON = 0);
 23930  001C7A  94CA               	bcf	4042,2,c	;volatile
 23931  001C7C  D07B               	goto	i2l10645
 23932  001C7E                     L15:
 23933                           
 23934                           ;interrupts.c: 192: RFsendFlag = 0;
 23935  001C7E  0E00               	movlw	0
 23936  001C80  6E39               	movwf	_RFsendFlag,c	;volatile
 23937                           
 23938                           ; BSR set to: 0
 23939                           ;interrupts.c: 193: }
 23940                           ;interrupts.c: 194: }
 23941                           
 23942                           ; BSR set to: 0
 23943                           
 23944                           ; BSR set to: 0
 23945                           
 23946                           ; BSR set to: 0
 23947  001C82  D0BF               	goto	i2l10697
 23948  001C84                     i2l10517:
 23949                           
 23950                           ;interrupts.c: 195: else if(RFConfig == 2)
 23951  001C84  0E02               	movlw	2
 23952  001C86  1836               	xorwf	_RFConfig,w,c
 23953  001C88  A4D8               	btfss	status,2,c
 23954  001C8A  D7F7               	goto	i2l861
 23955                           
 23956                           ;interrupts.c: 196: {
 23957                           ;interrupts.c: 198: if(RFcodePlace == 1)
 23958  001C8C  0438               	decf	_RFcodePlace,w,c
 23959  001C8E  A4D8               	btfss	status,2,c
 23960  001C90  D003               	goto	i2l10527
 23961                           
 23962                           ;interrupts.c: 199: {
 23963                           ;interrupts.c: 200: (LATC |= 0x20);
 23964  001C92  8A8B               	bsf	3979,5,c	;volatile
 23965                           
 23966                           ;interrupts.c: 201: (PR2 = 11);
 23967  001C94  0E0B               	movlw	11
 23968  001C96  D7D6               	goto	L10
 23969  001C98                     i2l10527:
 23970                           
 23971                           ;interrupts.c: 205: else if(RFcodePlace == 2)
 23972  001C98  0E02               	movlw	2
 23973  001C9A  1838               	xorwf	_RFcodePlace,w,c
 23974  001C9C  A4D8               	btfss	status,2,c
 23975  001C9E  D7ED               	goto	i2l861
 23976                           
 23977                           ;interrupts.c: 206: {
 23978                           ;interrupts.c: 207: (LATC &= ~0x20);
 23979  001CA0  9A8B               	bcf	3979,5,c	;volatile
 23980                           
 23981                           ;interrupts.c: 208: (PR2 = 29);
 23982  001CA2  0E1D               	movlw	29
 23983  001CA4  D03A               	goto	L11
 23984  001CA6                     i2l10533:
 23985                           
 23986                           ;interrupts.c: 209: RFcodePlace = 1;
 23987  001CA6  0E01               	movlw	1
 23988  001CA8  6E38               	movwf	_RFcodePlace,c
 23989                           
 23990                           ;interrupts.c: 210: RFcodeBit++;
 23991  001CAA  2A37               	incf	_RFcodeBit,f,c
 23992                           
 23993                           ; BSR set to: 0
 23994                           ;interrupts.c: 218: }
 23995                           ;interrupts.c: 219: }
 23996                           
 23997                           ; BSR set to: 0
 23998                           
 23999                           ;interrupts.c: 217: RFsendFlag = 0;
 24000                           
 24001                           ;interrupts.c: 216: Sent = 1;
 24002                           
 24003                           ;interrupts.c: 212: else
 24004                           ;interrupts.c: 213: {
 24005                           ;interrupts.c: 215: (T2CONbits.TMR2ON = 0);
 24006                           
 24007                           ;interrupts.c: 211: }
 24008  001CAC  D0AA               	goto	i2l10697
 24009                           
 24010                           ;interrupts.c: 220: else
 24011                           ;interrupts.c: 221: {
 24012                           ;interrupts.c: 223: (T2CONbits.TMR2ON = 0);
 24013  001CAE  D062               	goto	i2l10645
 24014                           
 24015                           ; BSR set to: 0
 24016                           ;interrupts.c: 226: }
 24017                           ;interrupts.c: 227: }
 24018                           
 24019                           ; BSR set to: 0
 24020                           
 24021                           ;interrupts.c: 225: RFsendFlag = 0;
 24022                           
 24023                           ;interrupts.c: 224: Sent = 1;
 24024  001CB0  D0A8               	goto	i2l10697
 24025  001CB2                     i2l10539:
 24026                           
 24027                           ;interrupts.c: 228: else if(RFsendCode[RFcodeBit] == 1)
 24028  001CB2  5037               	movf	_RFcodeBit,w,c
 24029  001CB4  0D01               	mullw	1
 24030  001CB6  0E94               	movlw	low _RFsendCode
 24031  001CB8  24F3               	addwf	prodl,w,c
 24032  001CBA  6ED9               	movwf	fsr2l,c
 24033  001CBC  0E01               	movlw	high _RFsendCode
 24034  001CBE  20F4               	addwfc	prodh,w,c
 24035  001CC0  6EDA               	movwf	fsr2h,c
 24036  001CC2  04DE               	decf	postinc2,w,c
 24037  001CC4  A4D8               	btfss	status,2,c
 24038  001CC6  D02E               	goto	i2l10601
 24039                           
 24040                           ;interrupts.c: 229: {
 24041                           ;interrupts.c: 230: if(RFConfig == 1)
 24042  001CC8  0436               	decf	_RFConfig,w,c
 24043  001CCA  A4D8               	btfss	status,2,c
 24044  001CCC  D016               	goto	i2l10579
 24045                           
 24046                           ;interrupts.c: 231: {
 24047                           ;interrupts.c: 232: if(RFcodePlace == 1)
 24048  001CCE  0438               	decf	_RFcodePlace,w,c
 24049  001CD0  A4D8               	btfss	status,2,c
 24050  001CD2  D004               	goto	i2l10551
 24051  001CD4  D03C               	goto	L27
 24052  001CD6                     i2l10547:
 24053                           
 24054                           ;interrupts.c: 235: (PR2 = 24);
 24055  001CD6  0E18               	movlw	24
 24056  001CD8  6ECB               	movwf	4043,c	;volatile
 24057  001CDA  D7BF               	goto	i2l10497
 24058  001CDC                     i2l10551:
 24059                           
 24060                           ;interrupts.c: 238: else if(RFcodePlace == 2)
 24061  001CDC  0E02               	movlw	2
 24062  001CDE  1838               	xorwf	_RFcodePlace,w,c
 24063  001CE0  A4D8               	btfss	status,2,c
 24064  001CE2  D031               	goto	i2l10619
 24065                           
 24066                           ;interrupts.c: 239: {
 24067                           ;interrupts.c: 240: (LATC &= ~0x20);
 24068  001CE4  9A8B               	bcf	3979,5,c	;volatile
 24069  001CE6  D7AD               	goto	i2l10487
 24070                           
 24071                           ;interrupts.c: 244: }
 24072                           
 24073                           ;interrupts.c: 243: (TMR2 = 0);
 24074                           
 24075                           ;interrupts.c: 242: RFcodePlace++;
 24076                           
 24077                           ;interrupts.c: 241: (PR2 = 8);
 24078  001CE8  D02E               	goto	i2l10619
 24079                           
 24080                           ;interrupts.c: 246: {
 24081                           ;interrupts.c: 247: (LATC |= 0x20);
 24082                           
 24083                           ;interrupts.c: 245: else if(RFcodePlace == 3)
 24084  001CEA  D7F5               	goto	i2l10547
 24085                           
 24086                           ;interrupts.c: 248: (PR2 = 24);
 24087  001CEC  D7B6               	goto	i2l10497
 24088                           
 24089                           ;interrupts.c: 250: }
 24090                           
 24091                           ;interrupts.c: 249: RFcodePlace++;
 24092  001CEE  D032               	goto	i2l10627
 24093  001CF0                     i2l10571:
 24094                           
 24095                           ;interrupts.c: 254: (PR2 = 8);
 24096  001CF0  0E08               	movlw	8
 24097  001CF2  6ECB               	movwf	4043,c	;volatile
 24098  001CF4  D035               	goto	i2l10633
 24099                           
 24100                           ;interrupts.c: 256: RFcodeBit++;
 24101                           
 24102                           ;interrupts.c: 255: RFcodePlace = 1;
 24103  001CF6  D7A8               	goto	L12
 24104                           
 24105                           ; BSR set to: 0
 24106                           ;interrupts.c: 265: }
 24107                           ;interrupts.c: 266: }
 24108                           
 24109                           ; BSR set to: 0
 24110                           
 24111                           ; BSR set to: 0
 24112                           
 24113                           ; BSR set to: 0
 24114                           
 24115                           ;interrupts.c: 264: RFsendFlag = 0;
 24116                           
 24117                           ;interrupts.c: 263: Sent = 1;
 24118                           
 24119                           ;interrupts.c: 259: else
 24120                           ;interrupts.c: 260: {
 24121                           ;interrupts.c: 262: (T2CONbits.TMR2ON = 0);
 24122                           
 24123                           ;interrupts.c: 258: }
 24124                           
 24125                           ;interrupts.c: 257: (TMR2 = 0);
 24126  001CF8  D084               	goto	i2l10697
 24127  001CFA                     i2l10579:
 24128                           
 24129                           ;interrupts.c: 267: else if(RFConfig == 2)
 24130  001CFA  0E02               	movlw	2
 24131  001CFC  1836               	xorwf	_RFConfig,w,c
 24132  001CFE  A4D8               	btfss	status,2,c
 24133  001D00  D7BC               	goto	i2l861
 24134                           
 24135                           ;interrupts.c: 268: {
 24136                           ;interrupts.c: 270: if(RFcodePlace == 1)
 24137  001D02  0438               	decf	_RFcodePlace,w,c
 24138  001D04  A4D8               	btfss	status,2,c
 24139  001D06  D003               	goto	i2l10589
 24140                           
 24141                           ;interrupts.c: 271: {
 24142                           ;interrupts.c: 272: (LATC |= 0x20);
 24143  001D08  8A8B               	bsf	3979,5,c	;volatile
 24144                           
 24145                           ;interrupts.c: 273: (PR2 = 29);
 24146  001D0A  0E1D               	movlw	29
 24147  001D0C  D79B               	goto	L10
 24148  001D0E                     i2l10589:
 24149                           
 24150                           ;interrupts.c: 277: else if(RFcodePlace == 2)
 24151  001D0E  0E02               	movlw	2
 24152  001D10  1838               	xorwf	_RFcodePlace,w,c
 24153  001D12  A4D8               	btfss	status,2,c
 24154  001D14  D004               	goto	i2l885
 24155                           
 24156                           ;interrupts.c: 278: {
 24157                           ;interrupts.c: 279: (LATC &= ~0x20);
 24158  001D16  9A8B               	bcf	3979,5,c	;volatile
 24159                           
 24160                           ;interrupts.c: 280: (PR2 = 11);
 24161  001D18  0E0B               	movlw	11
 24162  001D1A                     L11:
 24163  001D1A  6ECB               	movwf	4043,c	;volatile
 24164  001D1C  D7C4               	goto	i2l10533
 24165  001D1E                     i2l885:
 24166                           
 24167                           ;interrupts.c: 284: else
 24168                           ;interrupts.c: 285: {
 24169                           ;interrupts.c: 287: (T2CONbits.TMR2ON = 0);
 24170  001D1E  94CA               	bcf	4042,2,c	;volatile
 24171  001D20  D029               	goto	i2l10645
 24172                           
 24173                           ; BSR set to: 0
 24174                           ;interrupts.c: 298: }
 24175                           ;interrupts.c: 299: }
 24176                           
 24177                           ; BSR set to: 0
 24178                           
 24179                           ;interrupts.c: 297: RFsendFlag = 0;
 24180                           
 24181                           ;interrupts.c: 296: Sent = 1;
 24182                           
 24183                           ;interrupts.c: 292: else
 24184                           ;interrupts.c: 293: {
 24185                           ;interrupts.c: 295: (T2CONbits.TMR2ON = 0);
 24186                           
 24187                           ; BSR set to: 0
 24188                           ;interrupts.c: 290: }
 24189                           ;interrupts.c: 291: }
 24190                           
 24191                           ; BSR set to: 0
 24192                           
 24193                           ;interrupts.c: 289: RFsendFlag = 0;
 24194                           
 24195                           ;interrupts.c: 288: Sent = 1;
 24196  001D22  D06F               	goto	i2l10697
 24197  001D24                     i2l10601:
 24198                           
 24199                           ;interrupts.c: 300: else
 24200                           ;interrupts.c: 301: {
 24201                           ;interrupts.c: 302: if(RFConfig == 1)
 24202  001D24  0436               	decf	_RFConfig,w,c
 24203  001D26  A4D8               	btfss	status,2,c
 24204  001D28  D020               	goto	i2l10639
 24205                           
 24206                           ;interrupts.c: 303: {
 24207                           ;interrupts.c: 305: if(RFcodePlace == 1)
 24208  001D2A  0438               	decf	_RFcodePlace,w,c
 24209  001D2C  A4D8               	btfss	status,2,c
 24210  001D2E  D004               	goto	i2l10611
 24211  001D30                     i2l10605:
 24212                           
 24213                           ;interrupts.c: 306: {
 24214                           ;interrupts.c: 307: (LATC |= 0x20);
 24215  001D30  8A8B               	bsf	3979,5,c	;volatile
 24216  001D32  D787               	goto	i2l10487
 24217  001D34                     i2l10609:
 24218                           
 24219                           ;interrupts.c: 309: RFcodePlace++;
 24220  001D34  2A38               	incf	_RFcodePlace,f,c
 24221  001D36  D788               	goto	L12
 24222  001D38                     i2l10611:
 24223                           
 24224                           ;interrupts.c: 312: else if(RFcodePlace == 2)
 24225  001D38  0E02               	movlw	2
 24226  001D3A  1838               	xorwf	_RFcodePlace,w,c
 24227  001D3C  A4D8               	btfss	status,2,c
 24228  001D3E  D003               	goto	i2l10619
 24229  001D40                     L26:
 24230                           
 24231                           ;interrupts.c: 313: {
 24232                           ;interrupts.c: 314: (LATC &= ~0x20);
 24233  001D40  9A8B               	bcf	3979,5,c	;volatile
 24234  001D42  D7C9               	goto	i2l10547
 24235                           
 24236                           ;interrupts.c: 315: (PR2 = 24);
 24237  001D44  D78A               	goto	i2l10497
 24238  001D46                     i2l10619:
 24239                           
 24240                           ;interrupts.c: 318: else if(RFcodePlace == 3)
 24241  001D46  0E03               	movlw	3
 24242  001D48  1838               	xorwf	_RFcodePlace,w,c
 24243  001D4A  A4D8               	btfss	status,2,c
 24244  001D4C  D003               	goto	i2l10627
 24245  001D4E                     L27:
 24246                           
 24247                           ;interrupts.c: 319: {
 24248                           ;interrupts.c: 320: (LATC |= 0x20);
 24249  001D4E  8A8B               	bsf	3979,5,c	;volatile
 24250  001D50  D7C2               	goto	i2l10547
 24251                           
 24252                           ;interrupts.c: 321: (PR2 = 24);
 24253  001D52  D783               	goto	i2l10497
 24254  001D54                     i2l10627:
 24255                           
 24256                           ;interrupts.c: 324: else if(RFcodePlace == 4)
 24257  001D54  0E04               	movlw	4
 24258  001D56  1838               	xorwf	_RFcodePlace,w,c
 24259  001D58  A4D8               	btfss	status,2,c
 24260  001D5A  D78F               	goto	i2l861
 24261                           
 24262                           ;interrupts.c: 325: {
 24263                           ;interrupts.c: 326: (LATC &= ~0x20);
 24264  001D5C  9A8B               	bcf	3979,5,c	;volatile
 24265  001D5E  D7C8               	goto	i2l10571
 24266  001D60                     i2l10633:
 24267                           
 24268                           ;interrupts.c: 328: RFcodePlace = 1;
 24269  001D60  0E01               	movlw	1
 24270  001D62  6E38               	movwf	_RFcodePlace,c
 24271                           
 24272                           ;interrupts.c: 329: RFcodeBit++;
 24273  001D64  2A37               	incf	_RFcodeBit,f,c
 24274  001D66  D770               	goto	L12
 24275                           
 24276                           ; BSR set to: 0
 24277                           ;interrupts.c: 338: }
 24278                           ;interrupts.c: 339: }
 24279                           
 24280                           ; BSR set to: 0
 24281                           
 24282                           ; BSR set to: 0
 24283                           
 24284                           ; BSR set to: 0
 24285                           
 24286                           ;interrupts.c: 337: RFsendFlag = 0;
 24287                           
 24288                           ;interrupts.c: 336: Sent = 1;
 24289                           
 24290                           ;interrupts.c: 332: else
 24291                           ;interrupts.c: 333: {
 24292                           ;interrupts.c: 335: (T2CONbits.TMR2ON = 0);
 24293                           
 24294                           ;interrupts.c: 331: }
 24295                           
 24296                           ;interrupts.c: 330: (TMR2 = 0);
 24297  001D68  D04C               	goto	i2l10697
 24298  001D6A                     i2l10639:
 24299                           
 24300                           ;interrupts.c: 340: else if(RFConfig == 2)
 24301  001D6A  0E02               	movlw	2
 24302  001D6C  1836               	xorwf	_RFConfig,w,c
 24303  001D6E  A4D8               	btfss	status,2,c
 24304  001D70  D784               	goto	i2l861
 24305  001D72  D783               	goto	i2l861
 24306  001D74                     i2l10645:
 24307                           
 24308                           ;interrupts.c: 351: Sent = 1;
 24309  001D74  0E01               	movlw	1
 24310  001D76  0100               	movlb	0	; () banked
 24311  001D78  6FED               	movwf	_Sent& (0+255),b	;volatile
 24312  001D7A  D781               	goto	L15
 24313                           
 24314                           ; BSR set to: 0
 24315                           ;interrupts.c: 353: }
 24316                           ;interrupts.c: 354: }
 24317                           ;interrupts.c: 355: }
 24318                           ;interrupts.c: 356: }
 24319                           
 24320                           ; BSR set to: 0
 24321                           
 24322                           ; BSR set to: 0
 24323                           
 24324                           ; BSR set to: 0
 24325                           
 24326                           ; BSR set to: 0
 24327                           
 24328                           ;interrupts.c: 352: RFsendFlag = 0;
 24329  001D7C  D042               	goto	i2l10697
 24330  001D7E                     i2l10647:
 24331                           
 24332                           ;interrupts.c: 357: else
 24333                           ;interrupts.c: 358: {
 24334                           ;interrupts.c: 360: if(RFcodePlace == 1)
 24335  001D7E  0438               	decf	_RFcodePlace,w,c
 24336  001D80  A4D8               	btfss	status,2,c
 24337  001D82  D016               	goto	i2l10665
 24338                           
 24339                           ;interrupts.c: 361: {
 24340                           ;interrupts.c: 362: if(RFConfig == 1)
 24341  001D84  0436               	decf	_RFConfig,w,c
 24342  001D86  A4D8               	btfss	status,2,c
 24343  001D88  D003               	goto	i2l10655
 24344                           
 24345                           ;interrupts.c: 363: {
 24346                           ;interrupts.c: 364: (LATC |= 0x20);
 24347  001D8A  8A8B               	bsf	3979,5,c	;volatile
 24348                           
 24349                           ;interrupts.c: 365: (PR2 = 8);
 24350  001D8C  0E08               	movlw	8
 24351  001D8E  D006               	goto	L13
 24352  001D90                     i2l10655:
 24353                           
 24354                           ;interrupts.c: 367: else if(RFConfig == 2)
 24355  001D90  0E02               	movlw	2
 24356  001D92  1836               	xorwf	_RFConfig,w,c
 24357  001D94  A4D8               	btfss	status,2,c
 24358  001D96  D004               	goto	i2l905
 24359                           
 24360                           ;interrupts.c: 368: {
 24361                           ;interrupts.c: 369: (LATC &= ~0x20);
 24362  001D98  9A8B               	bcf	3979,5,c	;volatile
 24363                           
 24364                           ;interrupts.c: 370: (PR2 = 11);
 24365  001D9A  0E0B               	movlw	11
 24366  001D9C                     L13:
 24367  001D9C  6ECB               	movwf	4043,c	;volatile
 24368                           
 24369                           ;interrupts.c: 371: }
 24370  001D9E  D005               	goto	i2l904
 24371  001DA0                     i2l905:
 24372                           
 24373                           ;interrupts.c: 372: else
 24374                           ;interrupts.c: 373: {
 24375                           ;interrupts.c: 375: (T2CONbits.TMR2ON = 0);
 24376  001DA0  94CA               	bcf	4042,2,c	;volatile
 24377                           
 24378                           ;interrupts.c: 376: Sent = 1;
 24379  001DA2  0E01               	movlw	1
 24380  001DA4  0100               	movlb	0	; () banked
 24381  001DA6  6FED               	movwf	_Sent& (0+255),b	;volatile
 24382  001DA8  D000               	goto	i2l904
 24383  001DAA                     i2l904:
 24384                           
 24385                           ;interrupts.c: 377: }
 24386                           ;interrupts.c: 378: (TMR2 = 0);
 24387  001DAA  0E00               	movlw	0
 24388  001DAC  6ECC               	movwf	4044,c	;volatile
 24389  001DAE  D755               	goto	i2l10497
 24390  001DB0                     i2l10665:
 24391                           
 24392                           ;interrupts.c: 381: else if( RFcodePlace == 2)
 24393  001DB0  0E02               	movlw	2
 24394  001DB2  1838               	xorwf	_RFcodePlace,w,c
 24395  001DB4  A4D8               	btfss	status,2,c
 24396  001DB6  D01C               	goto	i2l10685
 24397                           
 24398                           ;interrupts.c: 382: {
 24399                           ;interrupts.c: 383: if(RFConfig == 1)
 24400  001DB8  0436               	decf	_RFConfig,w,c
 24401  001DBA  A4D8               	btfss	status,2,c
 24402  001DBC  D003               	goto	i2l10673
 24403                           
 24404                           ;interrupts.c: 384: {
 24405                           ;interrupts.c: 385: (LATC &= ~0x20);
 24406  001DBE  9A8B               	bcf	3979,5,c	;volatile
 24407                           
 24408                           ;interrupts.c: 386: (PR2 = 250);
 24409  001DC0  0EFA               	movlw	250
 24410  001DC2  D005               	goto	L14
 24411  001DC4                     i2l10673:
 24412                           
 24413                           ;interrupts.c: 388: else if(RFConfig == 2)
 24414  001DC4  0E02               	movlw	2
 24415  001DC6  1836               	xorwf	_RFConfig,w,c
 24416  001DC8  A4D8               	btfss	status,2,c
 24417  001DCA  D003               	goto	i2l911
 24418                           
 24419                           ;interrupts.c: 389: {
 24420                           ;interrupts.c: 390: (PR2 = 187);
 24421  001DCC  0EBB               	movlw	187
 24422  001DCE                     L14:
 24423  001DCE  6ECB               	movwf	4043,c	;volatile
 24424                           
 24425                           ;interrupts.c: 391: }
 24426  001DD0  D005               	goto	i2l10679
 24427  001DD2                     i2l911:
 24428                           
 24429                           ;interrupts.c: 392: else
 24430                           ;interrupts.c: 393: {
 24431                           ;interrupts.c: 395: (T2CONbits.TMR2ON = 0);
 24432  001DD2  94CA               	bcf	4042,2,c	;volatile
 24433                           
 24434                           ;interrupts.c: 396: Sent = 1;
 24435  001DD4  0E01               	movlw	1
 24436  001DD6  0100               	movlb	0	; () banked
 24437  001DD8  6FED               	movwf	_Sent& (0+255),b	;volatile
 24438                           
 24439                           ; BSR set to: 0
 24440  001DDA  D000               	goto	i2l10679
 24441  001DDC                     i2l10679:
 24442                           
 24443                           ;interrupts.c: 397: }
 24444                           ;interrupts.c: 398: RFcodePlace++;
 24445  001DDC  2A38               	incf	_RFcodePlace,f,c
 24446                           
 24447                           ;interrupts.c: 399: Sendcount--;
 24448  001DDE  063A               	decf	_Sendcount,f,c	;volatile
 24449                           
 24450                           ;interrupts.c: 400: if(Sendcount)
 24451  001DE0  503A               	movf	_Sendcount,w,c	;volatile
 24452  001DE2  B4D8               	btfsc	status,2,c
 24453  001DE4  D00E               	goto	i2l10697
 24454                           
 24455                           ;interrupts.c: 401: {
 24456                           ;interrupts.c: 403: RFcodePlace = 1;
 24457  001DE6  0E01               	movlw	1
 24458  001DE8  6E38               	movwf	_RFcodePlace,c
 24459                           
 24460                           ;interrupts.c: 404: RFcodeBit = 0;
 24461  001DEA  0E00               	movlw	0
 24462  001DEC  6E37               	movwf	_RFcodeBit,c
 24463                           
 24464                           ;interrupts.c: 405: }
 24465                           ;interrupts.c: 406: }
 24466  001DEE  D009               	goto	i2l10697
 24467  001DF0                     i2l10685:
 24468                           
 24469                           ;interrupts.c: 407: else
 24470                           ;interrupts.c: 408: {
 24471                           ;interrupts.c: 410: ResetTimer3();
 24472  001DF0  ECF0  F02D         	call	_ResetTimer3	;wreg free
 24473                           
 24474                           ;interrupts.c: 411: PIR2bits.TMR3IF = 0;
 24475  001DF4  92A1               	bcf	4001,1,c	;volatile
 24476                           
 24477                           ;interrupts.c: 412: Timer3_Postscaler = 0;
 24478  001DF6  0E00               	movlw	0
 24479  001DF8  6E3D               	movwf	_Timer3_Postscaler,c
 24480                           
 24481                           ;interrupts.c: 413: (T3CONbits.TMR3ON = 1);
 24482  001DFA  80B1               	bsf	4017,0,c	;volatile
 24483                           
 24484                           ;interrupts.c: 414: (T2CONbits.TMR2ON = 0);
 24485  001DFC  94CA               	bcf	4042,2,c	;volatile
 24486  001DFE  D73F               	goto	L15
 24487                           
 24488                           ;interrupts.c: 415: RFsendFlag = 0;
 24489  001E00  D000               	goto	i2l10697
 24490  001E02                     i2l10697:
 24491                           
 24492                           ;interrupts.c: 416: }
 24493                           ;interrupts.c: 417: }
 24494                           ;interrupts.c: 418: }
 24495                           ;interrupts.c: 419: if(RFsendFlag)
 24496  001E02  5039               	movf	_RFsendFlag,w,c	;volatile
 24497  001E04  B4D8               	btfsc	status,2,c
 24498  001E06  D0C0               	goto	i2l10825
 24499                           
 24500                           ;interrupts.c: 420: {
 24501                           ;interrupts.c: 422: (T2CONbits.TMR2ON = 1);
 24502  001E08  84CA               	bsf	4042,2,c	;volatile
 24503                           
 24504                           ;interrupts.c: 423: }
 24505                           ;interrupts.c: 424: }
 24506  001E0A  D0BE               	goto	i2l10825
 24507  001E0C                     i2l10701:
 24508                           
 24509                           ;interrupts.c: 425: else
 24510                           ;interrupts.c: 426: {
 24511                           ;interrupts.c: 428: if(Timer2_Postscaler >= RF_IR_Postscaler)
 24512  001E0C  5041               	movf	_RF_IR_Postscaler,w,c	;volatile
 24513  001E0E  5C3C               	subwf	_Timer2_Postscaler,w,c
 24514  001E10  A0D8               	btfss	status,0,c
 24515  001E12  D0BA               	goto	i2l10825
 24516                           
 24517                           ;interrupts.c: 429: {
 24518                           ;interrupts.c: 430: Timer2_Postscaler = 0;
 24519  001E14  0E00               	movlw	0
 24520  001E16  6E3C               	movwf	_Timer2_Postscaler,c
 24521                           
 24522                           ;interrupts.c: 431: if(IRcodePlace == 7)
 24523  001E18  0E07               	movlw	7
 24524  001E1A  183F               	xorwf	_IRcodePlace,w,c
 24525  001E1C  A4D8               	btfss	status,2,c
 24526  001E1E  D00D               	goto	i2l10717
 24527                           
 24528                           ;interrupts.c: 432: {
 24529                           ;interrupts.c: 433: IRbitPosition = 32;
 24530  001E20  0E20               	movlw	32
 24531  001E22  6E3E               	movwf	_IRbitPosition,c	;volatile
 24532                           
 24533                           ;interrupts.c: 434: (IRmod = 0);
 24534  001E24  0E00               	movlw	0
 24535  001E26  0100               	movlb	0	; () banked
 24536  001E28  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 24537                           
 24538                           ; BSR set to: 0
 24539                           ;interrupts.c: 435: (LATC &= ~0x08);
 24540  001E2A  968B               	bcf	3979,3,c	;volatile
 24541                           
 24542                           ; BSR set to: 0
 24543                           ;interrupts.c: 436: IRcodePlace = 8;
 24544  001E2C  0E08               	movlw	8
 24545  001E2E  6E3F               	movwf	_IRcodePlace,c
 24546                           
 24547                           ; BSR set to: 0
 24548                           ;interrupts.c: 437: RF_IR_Postscaler = 4;
 24549  001E30  0E04               	movlw	4
 24550  001E32  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
 24551                           
 24552                           ; BSR set to: 0
 24553                           ;interrupts.c: 438: (PR2 = 75);
 24554  001E34  0E4B               	movlw	75
 24555  001E36  6ECB               	movwf	4043,c	;volatile
 24556                           
 24557                           ;interrupts.c: 439: }
 24558  001E38  D0A7               	goto	i2l10825
 24559  001E3A                     i2l10717:
 24560                           
 24561                           ;interrupts.c: 440: else if(IRcodePlace == 8 || IRcodePlace == 10)
 24562  001E3A  0E08               	movlw	8
 24563  001E3C  183F               	xorwf	_IRcodePlace,w,c
 24564  001E3E  B4D8               	btfsc	status,2,c
 24565  001E40  D004               	goto	i2l10721
 24566  001E42  0E0A               	movlw	10
 24567  001E44  183F               	xorwf	_IRcodePlace,w,c
 24568  001E46  A4D8               	btfss	status,2,c
 24569  001E48  D011               	goto	i2l10731
 24570  001E4A                     i2l10721:
 24571                           
 24572                           ;interrupts.c: 441: {
 24573                           ;interrupts.c: 442: (IRmod = 1);
 24574  001E4A  0E01               	movlw	1
 24575  001E4C  0100               	movlb	0	; () banked
 24576  001E4E  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 24577                           
 24578                           ;interrupts.c: 443: RF_IR_Postscaler = 1;
 24579  001E50  0E01               	movlw	1
 24580  001E52  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
 24581                           
 24582                           ; BSR set to: 0
 24583                           ;interrupts.c: 444: IRbit = (unsigned char) (IRsendCode & 0x01);
 24584  001E54  502C               	movf	_IRsendCode,w,c
 24585  001E56  0B01               	andlw	1
 24586  001E58  6E31               	movwf	_IRbit,c
 24587                           
 24588                           ; BSR set to: 0
 24589                           ;interrupts.c: 445: IRsendCode >>= 1;
 24590  001E5A  90D8               	bcf	status,0,c
 24591  001E5C  322F               	rrcf	_IRsendCode+3,f,c
 24592  001E5E  322E               	rrcf	_IRsendCode+2,f,c
 24593  001E60  322D               	rrcf	_IRsendCode+1,f,c
 24594  001E62  322C               	rrcf	_IRsendCode,f,c
 24595                           
 24596                           ; BSR set to: 0
 24597                           ;interrupts.c: 446: (PR2 = 38);
 24598  001E64  0E26               	movlw	38
 24599  001E66  6ECB               	movwf	4043,c	;volatile
 24600                           
 24601                           ; BSR set to: 0
 24602                           ;interrupts.c: 447: IRcodePlace = 9;
 24603  001E68  0E09               	movlw	9
 24604  001E6A  D07A               	goto	L25
 24605  001E6C                     i2l10731:
 24606                           
 24607                           ;interrupts.c: 449: else if(IRcodePlace == 9)
 24608  001E6C  0E09               	movlw	9
 24609  001E6E  183F               	xorwf	_IRcodePlace,w,c
 24610  001E70  A4D8               	btfss	status,2,c
 24611  001E72  D017               	goto	i2l10753
 24612                           
 24613                           ;interrupts.c: 450: {
 24614                           ;interrupts.c: 451: (IRmod = 0);
 24615  001E74  0E00               	movlw	0
 24616  001E76  0100               	movlb	0	; () banked
 24617  001E78  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 24618                           
 24619                           ; BSR set to: 0
 24620                           ;interrupts.c: 452: (LATC &= ~0x08);
 24621  001E7A  968B               	bcf	3979,3,c	;volatile
 24622                           
 24623                           ; BSR set to: 0
 24624                           ;interrupts.c: 453: RF_IR_Postscaler = 1;
 24625  001E7C  0E01               	movlw	1
 24626  001E7E  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
 24627                           
 24628                           ; BSR set to: 0
 24629                           ;interrupts.c: 454: if(IRbit)
 24630  001E80  5031               	movf	_IRbit,w,c
 24631  001E82  B4D8               	btfsc	status,2,c
 24632  001E84  D002               	goto	i2l10743
 24633                           
 24634                           ; BSR set to: 0
 24635                           ;interrupts.c: 455: {
 24636                           ;interrupts.c: 457: (PR2 = 113);
 24637  001E86  0E71               	movlw	113
 24638  001E88  D001               	goto	L17
 24639  001E8A                     i2l10743:
 24640                           
 24641                           ; BSR set to: 0
 24642                           ;interrupts.c: 459: else
 24643                           ;interrupts.c: 460: {
 24644                           ;interrupts.c: 462: (PR2 = 38);
 24645  001E8A  0E26               	movlw	38
 24646  001E8C                     L17:
 24647  001E8C  6ECB               	movwf	4043,c	;volatile
 24648  001E8E  D000               	goto	i2l10745
 24649  001E90                     i2l10745:
 24650                           
 24651                           ; BSR set to: 0
 24652                           ;interrupts.c: 463: }
 24653                           ;interrupts.c: 464: IRbitPosition--;
 24654  001E90  063E               	decf	_IRbitPosition,f,c	;volatile
 24655                           
 24656                           ; BSR set to: 0
 24657                           ;interrupts.c: 465: if(IRbitPosition == 0)
 24658  001E92  503E               	movf	_IRbitPosition,w,c	;volatile
 24659  001E94  A4D8               	btfss	status,2,c
 24660  001E96  D002               	goto	i2l10751
 24661                           
 24662                           ; BSR set to: 0
 24663                           ;interrupts.c: 466: {
 24664                           ;interrupts.c: 467: IRcodePlace = 11;
 24665  001E98  0E0B               	movlw	11
 24666  001E9A  D062               	goto	L25
 24667  001E9C                     i2l10751:
 24668                           
 24669                           ; BSR set to: 0
 24670                           ;interrupts.c: 469: else
 24671                           ;interrupts.c: 470: {
 24672                           ;interrupts.c: 471: IRcodePlace = 10;
 24673  001E9C  0E0A               	movlw	10
 24674  001E9E  D060               	goto	L25
 24675                           
 24676                           ; BSR set to: 0
 24677                           ;interrupts.c: 472: }
 24678                           ;interrupts.c: 473: }
 24679  001EA0  D073               	goto	i2l10825
 24680  001EA2                     i2l10753:
 24681                           
 24682                           ;interrupts.c: 474: else if(IRcodePlace == 11)
 24683  001EA2  0E0B               	movlw	11
 24684  001EA4  183F               	xorwf	_IRcodePlace,w,c
 24685  001EA6  A4D8               	btfss	status,2,c
 24686  001EA8  D007               	goto	i2l10757
 24687                           
 24688                           ;interrupts.c: 475: {
 24689                           ;interrupts.c: 476: (IRmod = 1);
 24690  001EAA  0E01               	movlw	1
 24691  001EAC  0100               	movlb	0	; () banked
 24692  001EAE  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 24693                           
 24694                           ;interrupts.c: 477: (PR2 = 38);
 24695  001EB0  0E26               	movlw	38
 24696  001EB2  6ECB               	movwf	4043,c	;volatile
 24697                           
 24698                           ;interrupts.c: 478: IRcodePlace = 12;
 24699  001EB4  0E0C               	movlw	12
 24700  001EB6  D054               	goto	L25
 24701  001EB8                     i2l10757:
 24702                           
 24703                           ;interrupts.c: 480: else if(IRcodePlace == 12)
 24704  001EB8  0E0C               	movlw	12
 24705  001EBA  183F               	xorwf	_IRcodePlace,w,c
 24706  001EBC  A4D8               	btfss	status,2,c
 24707  001EBE  D011               	goto	i2l10771
 24708                           
 24709                           ;interrupts.c: 481: {
 24710                           ;interrupts.c: 482: (IRmod = 0);
 24711  001EC0  0E00               	movlw	0
 24712  001EC2  0100               	movlb	0	; () banked
 24713  001EC4  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 24714                           
 24715                           ; BSR set to: 0
 24716                           ;interrupts.c: 483: (LATC &= ~0x08);
 24717  001EC6  968B               	bcf	3979,3,c	;volatile
 24718                           
 24719                           ; BSR set to: 0
 24720                           ;interrupts.c: 484: if(!IRrepeatflag)
 24721  001EC8  5035               	movf	_IRrepeatflag,w,c
 24722  001ECA  A4D8               	btfss	status,2,c
 24723  001ECC  D003               	goto	i2l10769
 24724                           
 24725                           ; BSR set to: 0
 24726                           ;interrupts.c: 485: {
 24727                           ;interrupts.c: 487: IRcodePlace = 13;
 24728  001ECE  0E0D               	movlw	13
 24729  001ED0  6E3F               	movwf	_IRcodePlace,c
 24730  001ED2  D057               	goto	i2l10821
 24731  001ED4                     i2l10769:
 24732                           
 24733                           ; BSR set to: 0
 24734                           ;interrupts.c: 491: else
 24735                           ;interrupts.c: 492: {
 24736                           ;interrupts.c: 493: RF_IR_Postscaler = 11;
 24737  001ED4  0E0B               	movlw	11
 24738  001ED6  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
 24739                           
 24740                           ;interrupts.c: 494: (PR2 = 242);
 24741  001ED8  0EF2               	movlw	242
 24742  001EDA  6ECB               	movwf	4043,c	;volatile
 24743                           
 24744                           ;interrupts.c: 495: IRcodePlace = 14;
 24745  001EDC  0E0E               	movlw	14
 24746  001EDE  D040               	goto	L25
 24747                           
 24748                           ; BSR set to: 0
 24749                           ;interrupts.c: 496: }
 24750                           ;interrupts.c: 497: }
 24751  001EE0  D053               	goto	i2l10825
 24752  001EE2                     i2l10771:
 24753                           
 24754                           ;interrupts.c: 498: else if(IRcodePlace == 14 || IRcodePlace == 18)
 24755  001EE2  0E0E               	movlw	14
 24756  001EE4  183F               	xorwf	_IRcodePlace,w,c
 24757  001EE6  B4D8               	btfsc	status,2,c
 24758  001EE8  D004               	goto	i2l10775
 24759  001EEA  0E12               	movlw	18
 24760  001EEC  183F               	xorwf	_IRcodePlace,w,c
 24761  001EEE  A4D8               	btfss	status,2,c
 24762  001EF0  D009               	goto	i2l10777
 24763  001EF2                     i2l10775:
 24764                           
 24765                           ;interrupts.c: 499: {
 24766                           ;interrupts.c: 500: (IRmod = 1);
 24767  001EF2  0E01               	movlw	1
 24768  001EF4  0100               	movlb	0	; () banked
 24769  001EF6  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 24770                           
 24771                           ;interrupts.c: 501: RF_IR_Postscaler = 4;
 24772  001EF8  0E04               	movlw	4
 24773  001EFA  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
 24774                           
 24775                           ;interrupts.c: 502: (PR2 = 150);
 24776  001EFC  0E96               	movlw	150
 24777  001EFE  6ECB               	movwf	4043,c	;volatile
 24778                           
 24779                           ;interrupts.c: 503: IRcodePlace = 15;
 24780  001F00  0E0F               	movlw	15
 24781  001F02  D02E               	goto	L25
 24782  001F04                     i2l10777:
 24783                           
 24784                           ;interrupts.c: 505: else if(IRcodePlace == 15)
 24785  001F04  0E0F               	movlw	15
 24786  001F06  183F               	xorwf	_IRcodePlace,w,c
 24787  001F08  A4D8               	btfss	status,2,c
 24788  001F0A  D00A               	goto	i2l10789
 24789                           
 24790                           ;interrupts.c: 506: {
 24791                           ;interrupts.c: 507: (IRmod = 0);
 24792  001F0C  0E00               	movlw	0
 24793  001F0E  0100               	movlb	0	; () banked
 24794  001F10  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 24795                           
 24796                           ; BSR set to: 0
 24797                           ;interrupts.c: 508: (LATC &= ~0x08);
 24798  001F12  968B               	bcf	3979,3,c	;volatile
 24799                           
 24800                           ; BSR set to: 0
 24801                           ;interrupts.c: 509: RF_IR_Postscaler = 1;
 24802  001F14  0E01               	movlw	1
 24803  001F16  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
 24804                           
 24805                           ; BSR set to: 0
 24806                           ;interrupts.c: 510: (PR2 = 149);
 24807  001F18  0E95               	movlw	149
 24808  001F1A  6ECB               	movwf	4043,c	;volatile
 24809                           
 24810                           ; BSR set to: 0
 24811                           ;interrupts.c: 511: IRcodePlace = 16;
 24812  001F1C  0E10               	movlw	16
 24813  001F1E  D020               	goto	L25
 24814  001F20                     i2l10789:
 24815                           
 24816                           ;interrupts.c: 513: else if(IRcodePlace == 16)
 24817  001F20  0E10               	movlw	16
 24818  001F22  183F               	xorwf	_IRcodePlace,w,c
 24819  001F24  A4D8               	btfss	status,2,c
 24820  001F26  D009               	goto	i2l10793
 24821                           
 24822                           ;interrupts.c: 514: {
 24823                           ;interrupts.c: 515: (IRmod = 1);
 24824  001F28  0E01               	movlw	1
 24825  001F2A  0100               	movlb	0	; () banked
 24826  001F2C  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 24827                           
 24828                           ;interrupts.c: 516: RF_IR_Postscaler = 1;
 24829  001F2E  0E01               	movlw	1
 24830  001F30  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
 24831                           
 24832                           ;interrupts.c: 517: (PR2 = 38);
 24833  001F32  0E26               	movlw	38
 24834  001F34  6ECB               	movwf	4043,c	;volatile
 24835                           
 24836                           ;interrupts.c: 518: IRcodePlace = 17;
 24837  001F36  0E11               	movlw	17
 24838  001F38  D013               	goto	L25
 24839  001F3A                     i2l10793:
 24840                           
 24841                           ;interrupts.c: 520: else if(IRcodePlace == 17)
 24842  001F3A  0E11               	movlw	17
 24843  001F3C  183F               	xorwf	_IRcodePlace,w,c
 24844  001F3E  A4D8               	btfss	status,2,c
 24845  001F40  D011               	goto	i2l10809
 24846                           
 24847                           ;interrupts.c: 521: {
 24848                           ;interrupts.c: 522: (IRmod = 0);
 24849  001F42  0E00               	movlw	0
 24850  001F44  0100               	movlb	0	; () banked
 24851  001F46  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 24852                           
 24853                           ; BSR set to: 0
 24854                           ;interrupts.c: 523: (LATC &= ~0x08);
 24855  001F48  968B               	bcf	3979,3,c	;volatile
 24856                           
 24857                           ; BSR set to: 0
 24858                           ;interrupts.c: 524: RF_IR_Postscaler = 26;
 24859  001F4A  0E1A               	movlw	26
 24860  001F4C  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
 24861                           
 24862                           ; BSR set to: 0
 24863                           ;interrupts.c: 525: (PR2 = 246);
 24864  001F4E  0EF6               	movlw	246
 24865  001F50  6ECB               	movwf	4043,c	;volatile
 24866                           
 24867                           ; BSR set to: 0
 24868                           ;interrupts.c: 526: IRrepeatAmount--;
 24869  001F52  0634               	decf	_IRrepeatAmount,f,c
 24870                           
 24871                           ;interrupts.c: 527: if(IRrepeatAmount)
 24872  001F54  5034               	movf	_IRrepeatAmount,w,c
 24873  001F56  B4D8               	btfsc	status,2,c
 24874  001F58  D002               	goto	i2l10807
 24875                           
 24876                           ; BSR set to: 0
 24877                           ;interrupts.c: 528: {
 24878                           ;interrupts.c: 529: IRcodePlace = 18;
 24879  001F5A  0E12               	movlw	18
 24880  001F5C  D001               	goto	L25
 24881  001F5E                     i2l10807:
 24882                           
 24883                           ; BSR set to: 0
 24884                           ;interrupts.c: 531: else
 24885                           ;interrupts.c: 532: {
 24886                           ;interrupts.c: 533: IRcodePlace = 13;
 24887  001F5E  0E0D               	movlw	13
 24888  001F60                     L25:
 24889  001F60  6E3F               	movwf	_IRcodePlace,c
 24890                           
 24891                           ; BSR set to: 0
 24892                           ;interrupts.c: 534: }
 24893                           ;interrupts.c: 535: }
 24894  001F62  D012               	goto	i2l10825
 24895  001F64                     i2l10809:
 24896                           
 24897                           ;interrupts.c: 536: else if(IRcodePlace == 13)
 24898  001F64  0E0D               	movlw	13
 24899  001F66  183F               	xorwf	_IRcodePlace,w,c
 24900  001F68  A4D8               	btfss	status,2,c
 24901  001F6A  D005               	goto	i2l10815
 24902  001F6C  D00A               	goto	i2l10821
 24903  001F6E                     i2l10813:
 24904                           
 24905                           ;interrupts.c: 540: Sent = 1;
 24906  001F6E  0E01               	movlw	1
 24907  001F70  0100               	movlb	0	; () banked
 24908  001F72  6FED               	movwf	_Sent& (0+255),b	;volatile
 24909                           
 24910                           ;interrupts.c: 541: }
 24911  001F74  D009               	goto	i2l10825
 24912  001F76                     i2l10815:
 24913                           
 24914                           ;interrupts.c: 542: else
 24915                           ;interrupts.c: 543: {
 24916                           ;interrupts.c: 545: (IRmod = 0);
 24917  001F76  0E00               	movlw	0
 24918  001F78  0100               	movlb	0	; () banked
 24919  001F7A  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 24920                           
 24921                           ; BSR set to: 0
 24922                           ;interrupts.c: 546: (LATC &= ~0x08);
 24923  001F7C  968B               	bcf	3979,3,c	;volatile
 24924                           
 24925                           ; BSR set to: 0
 24926                           ;interrupts.c: 547: IRcodePlace = 0;
 24927  001F7E  0E00               	movlw	0
 24928  001F80  6E3F               	movwf	_IRcodePlace,c
 24929  001F82                     i2l10821:
 24930                           
 24931                           ; BSR set to: 0
 24932                           ;interrupts.c: 548: (T2CONbits.TMR2ON = 0);
 24933  001F82  94CA               	bcf	4042,2,c	;volatile
 24934  001F84  D7F4               	goto	i2l10813
 24935                           
 24936                           ; BSR set to: 0
 24937                           
 24938                           ; BSR set to: 0
 24939                           
 24940                           ; BSR set to: 0
 24941                           
 24942                           ; BSR set to: 0
 24943                           
 24944                           ; BSR set to: 0
 24945                           
 24946                           ; BSR set to: 0
 24947                           
 24948                           ; BSR set to: 0
 24949                           
 24950                           ; BSR set to: 0
 24951                           
 24952                           ; BSR set to: 0
 24953                           
 24954                           ; BSR set to: 0
 24955                           
 24956                           ; BSR set to: 0
 24957                           
 24958                           ; BSR set to: 0
 24959                           ;interrupts.c: 549: Sent = 1;
 24960  001F86  D000               	goto	i2l10825
 24961  001F88                     i2l10825:
 24962                           
 24963                           ;interrupts.c: 550: }
 24964                           ;interrupts.c: 551: }
 24965                           ;interrupts.c: 552: }
 24966                           ;interrupts.c: 553: PIR1bits.TMR2IF = 0;
 24967  001F88  929E               	bcf	3998,1,c	;volatile
 24968                           
 24969                           ;interrupts.c: 554: }
 24970  001F8A  D013               	goto	i2l844
 24971  001F8C                     i2l848:
 24972                           
 24973                           ;interrupts.c: 555: else if(PIR2bits.TMR3IF)
 24974  001F8C  A2A1               	btfss	4001,1,c	;volatile
 24975  001F8E  D00F               	goto	i2l951
 24976                           
 24977                           ;interrupts.c: 556: {
 24978                           ;interrupts.c: 557: (T3CONbits.TMR3ON = 0);
 24979  001F90  90B1               	bcf	4017,0,c	;volatile
 24980                           
 24981                           ;interrupts.c: 558: if(Timer3_Postscaler < 6)
 24982  001F92  0E06               	movlw	6
 24983  001F94  603D               	cpfslt	_Timer3_Postscaler,c
 24984  001F96  D005               	goto	i2l10837
 24985                           
 24986                           ;interrupts.c: 559: {
 24987                           ;interrupts.c: 560: ResetTimer3();
 24988  001F98  ECF0  F02D         	call	_ResetTimer3	;wreg free
 24989                           
 24990                           ;interrupts.c: 561: (T3CONbits.TMR3ON = 1);
 24991  001F9C  80B1               	bsf	4017,0,c	;volatile
 24992                           
 24993                           ;interrupts.c: 562: Timer3_Postscaler++;
 24994  001F9E  2A3D               	incf	_Timer3_Postscaler,f,c
 24995                           
 24996                           ;interrupts.c: 563: }
 24997  001FA0  D004               	goto	i2l10839
 24998  001FA2                     i2l10837:
 24999                           
 25000                           ;interrupts.c: 564: else
 25001                           ;interrupts.c: 565: {
 25002                           ;interrupts.c: 570: Sent = 1;
 25003  001FA2  0E01               	movlw	1
 25004  001FA4  0100               	movlb	0	; () banked
 25005  001FA6  6FED               	movwf	_Sent& (0+255),b	;volatile
 25006  001FA8  D000               	goto	i2l10839
 25007  001FAA                     i2l10839:
 25008                           
 25009                           ;interrupts.c: 571: }
 25010                           ;interrupts.c: 572: PIR2bits.TMR3IF = 0;
 25011  001FAA  92A1               	bcf	4001,1,c	;volatile
 25012                           
 25013                           ;interrupts.c: 573: }
 25014  001FAC  D002               	goto	i2l844
 25015  001FAE                     i2l951:
 25016                           
 25017                           ;interrupts.c: 574: else
 25018                           ;interrupts.c: 575: {
 25019                           ;interrupts.c: 577: __nop();
 25020  001FAE  F000               	nop	
 25021  001FB0  D000               	goto	i2l844
 25022  001FB2                     i2l844:
 25023                           
 25024                           ;interrupts.c: 578: }
 25025                           ;interrupts.c: 580: INTCONbits.GIE = 1;
 25026  001FB2  8EF2               	bsf	intcon,7,c	;volatile
 25027  001FB4  C071  FFF5         	movff	??_high_isr+17,tablat
 25028  001FB8  C070  FFF8         	movff	??_high_isr+16,tblptru
 25029  001FBC  C06F  FFF7         	movff	??_high_isr+15,tblptrh
 25030  001FC0  C06E  FFF6         	movff	??_high_isr+14,tblptrl
 25031  001FC4  C06D  FFF4         	movff	??_high_isr+13,prodh
 25032  001FC8  C06C  FFF3         	movff	??_high_isr+12,prodl
 25033  001FCC  C06B  FFDA         	movff	??_high_isr+11,fsr2h
 25034  001FD0  C06A  FFD9         	movff	??_high_isr+10,fsr2l
 25035  001FD4  C069  FFE2         	movff	??_high_isr+9,fsr1h
 25036  001FD8  C068  FFE1         	movff	??_high_isr+8,fsr1l
 25037  001FDC  C067  FFEA         	movff	??_high_isr+7,fsr0h
 25038  001FE0  C066  FFE9         	movff	??_high_isr+6,fsr0l
 25039  001FE4  C065  FFFB         	movff	??_high_isr+5,pclatu
 25040  001FE8  C064  FFFA         	movff	??_high_isr+4,pclath
 25041  001FEC  0011               	retfie		f
 25042  001FEE                     __end_of_high_isr:
 25043                           	opt stack 0
 25044                           pclatu	equ	0xFFB
 25045                           pclath	equ	0xFFA
 25046                           tblptru	equ	0xFF8
 25047                           tblptrh	equ	0xFF7
 25048                           tblptrl	equ	0xFF6
 25049                           tablat	equ	0xFF5
 25050                           prodh	equ	0xFF4
 25051                           prodl	equ	0xFF3
 25052                           intcon	equ	0xFF2
 25053                           intcon2	equ	0xFF1
 25054                           indf0	equ	0xFEF
 25055                           postinc0	equ	0xFEE
 25056                           plusw0	equ	0xFEB
 25057                           fsr0h	equ	0xFEA
 25058                           fsr0l	equ	0xFE9
 25059                           wreg	equ	0xFE8
 25060                           indf1	equ	0xFE7
 25061                           postdec1	equ	0xFE5
 25062                           fsr1h	equ	0xFE2
 25063                           fsr1l	equ	0xFE1
 25064                           bsr	equ	0xFE0
 25065                           indf2	equ	0xFDF
 25066                           postinc2	equ	0xFDE
 25067                           postdec2	equ	0xFDD
 25068                           plusw2	equ	0xFDB
 25069                           fsr2h	equ	0xFDA
 25070                           fsr2l	equ	0xFD9
 25071                           status	equ	0xFD8
 25072                           
 25073 ;; *************** function i2_ResetTimer0 *****************
 25074 ;; Defined at:
 25075 ;;		line 77 in file "Timer.c"
 25076 ;; Parameters:    Size  Location     Type
 25077 ;;		None
 25078 ;; Auto vars:     Size  Location     Type
 25079 ;;		None
 25080 ;; Return value:  Size  Location     Type
 25081 ;;		None               void
 25082 ;; Registers used:
 25083 ;;		wreg, status,2
 25084 ;; Tracked objects:
 25085 ;;		On entry : 0/0
 25086 ;;		On exit  : 0/0
 25087 ;;		Unchanged: 0/0
 25088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25093 ;;Total ram usage:        0 bytes
 25094 ;; Hardware stack levels used:    1
 25095 ;; This function calls:
 25096 ;;		Nothing
 25097 ;; This function is called by:
 25098 ;;		_high_isr
 25099 ;; This function uses a non-reentrant model
 25100 ;;
 25101                           
 25102                           	psect	text94
 25103  005BD6                     __ptext94:
 25104                           	opt stack 0
 25105  005BD6                     i2_ResetTimer0:
 25106                           	opt stack 17
 25107                           
 25108                           ;Timer.c: 83: TMR0H = 0;
 25109                           
 25110                           ;incstack = 0
 25111  005BD6  0E00               	movlw	0
 25112  005BD8  6ED7               	movwf	4055,c	;volatile
 25113                           
 25114                           ;Timer.c: 84: TMR0L = 2;
 25115  005BDA  0E02               	movlw	2
 25116  005BDC  6ED6               	movwf	4054,c	;volatile
 25117  005BDE  0012               	return		;funcret
 25118  005BE0                     __end_ofi2_ResetTimer0:
 25119                           	opt stack 0
 25120                           pclatu	equ	0xFFB
 25121                           pclath	equ	0xFFA
 25122                           tblptru	equ	0xFF8
 25123                           tblptrh	equ	0xFF7
 25124                           tblptrl	equ	0xFF6
 25125                           tablat	equ	0xFF5
 25126                           prodh	equ	0xFF4
 25127                           prodl	equ	0xFF3
 25128                           intcon	equ	0xFF2
 25129                           intcon2	equ	0xFF1
 25130                           indf0	equ	0xFEF
 25131                           postinc0	equ	0xFEE
 25132                           plusw0	equ	0xFEB
 25133                           fsr0h	equ	0xFEA
 25134                           fsr0l	equ	0xFE9
 25135                           wreg	equ	0xFE8
 25136                           indf1	equ	0xFE7
 25137                           postdec1	equ	0xFE5
 25138                           fsr1h	equ	0xFE2
 25139                           fsr1l	equ	0xFE1
 25140                           bsr	equ	0xFE0
 25141                           indf2	equ	0xFDF
 25142                           postinc2	equ	0xFDE
 25143                           postdec2	equ	0xFDD
 25144                           plusw2	equ	0xFDB
 25145                           fsr2h	equ	0xFDA
 25146                           fsr2l	equ	0xFD9
 25147                           status	equ	0xFD8
 25148                           
 25149 ;; *************** function i2_ReadIRpin *****************
 25150 ;; Defined at:
 25151 ;;		line 104 in file "IR.c"
 25152 ;; Parameters:    Size  Location     Type
 25153 ;;		None
 25154 ;; Auto vars:     Size  Location     Type
 25155 ;;		None
 25156 ;; Return value:  Size  Location     Type
 25157 ;;                  1    wreg      unsigned char 
 25158 ;; Registers used:
 25159 ;;		wreg
 25160 ;; Tracked objects:
 25161 ;;		On entry : 0/0
 25162 ;;		On exit  : 0/0
 25163 ;;		Unchanged: 0/0
 25164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25169 ;;Total ram usage:        0 bytes
 25170 ;; Hardware stack levels used:    1
 25171 ;; This function calls:
 25172 ;;		Nothing
 25173 ;; This function is called by:
 25174 ;;		_high_isr
 25175 ;; This function uses a non-reentrant model
 25176 ;;
 25177                           
 25178                           	psect	text95
 25179  005B9E                     __ptext95:
 25180                           	opt stack 0
 25181  005B9E                     i2_ReadIRpin:
 25182                           	opt stack 17
 25183                           
 25184                           ;IR.c: 107: if((PORTB & 0x10) == 0x10)
 25185                           
 25186                           ;incstack = 0
 25187  005B9E  A881               	btfss	3969,4,c	;volatile
 25188  005BA0  D002               	goto	i2l7979
 25189                           
 25190                           ;IR.c: 108: {
 25191                           ;IR.c: 109: return (1);
 25192  005BA2  0E01               	movlw	1
 25193                           
 25194                           ;IR.c: 110: }
 25195  005BA4  0012               	return	
 25196  005BA6                     i2l7979:
 25197                           
 25198                           ;IR.c: 111: else
 25199                           ;IR.c: 112: {
 25200                           ;IR.c: 113: return 0;
 25201  005BA6  0E00               	movlw	0
 25202  005BA8  0012               	return	
 25203  005BAA  0012               	return		;funcret
 25204  005BAC                     __end_ofi2_ReadIRpin:
 25205                           	opt stack 0
 25206                           pclatu	equ	0xFFB
 25207                           pclath	equ	0xFFA
 25208                           tblptru	equ	0xFF8
 25209                           tblptrh	equ	0xFF7
 25210                           tblptrl	equ	0xFF6
 25211                           tablat	equ	0xFF5
 25212                           prodh	equ	0xFF4
 25213                           prodl	equ	0xFF3
 25214                           intcon	equ	0xFF2
 25215                           intcon2	equ	0xFF1
 25216                           indf0	equ	0xFEF
 25217                           postinc0	equ	0xFEE
 25218                           plusw0	equ	0xFEB
 25219                           fsr0h	equ	0xFEA
 25220                           fsr0l	equ	0xFE9
 25221                           wreg	equ	0xFE8
 25222                           indf1	equ	0xFE7
 25223                           postdec1	equ	0xFE5
 25224                           fsr1h	equ	0xFE2
 25225                           fsr1l	equ	0xFE1
 25226                           bsr	equ	0xFE0
 25227                           indf2	equ	0xFDF
 25228                           postinc2	equ	0xFDE
 25229                           postdec2	equ	0xFDD
 25230                           plusw2	equ	0xFDB
 25231                           fsr2h	equ	0xFDA
 25232                           fsr2l	equ	0xFD9
 25233                           status	equ	0xFD8
 25234                           
 25235 ;; *************** function _ResetTimer3 *****************
 25236 ;; Defined at:
 25237 ;;		line 156 in file "Timer.c"
 25238 ;; Parameters:    Size  Location     Type
 25239 ;;		None
 25240 ;; Auto vars:     Size  Location     Type
 25241 ;;		None
 25242 ;; Return value:  Size  Location     Type
 25243 ;;		None               void
 25244 ;; Registers used:
 25245 ;;		wreg, status,2
 25246 ;; Tracked objects:
 25247 ;;		On entry : 0/0
 25248 ;;		On exit  : 0/0
 25249 ;;		Unchanged: 0/0
 25250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25255 ;;Total ram usage:        0 bytes
 25256 ;; Hardware stack levels used:    1
 25257 ;; This function calls:
 25258 ;;		Nothing
 25259 ;; This function is called by:
 25260 ;;		_high_isr
 25261 ;; This function uses a non-reentrant model
 25262 ;;
 25263                           
 25264                           	psect	text96
 25265  005BE0                     __ptext96:
 25266                           	opt stack 0
 25267  005BE0                     _ResetTimer3:
 25268                           	opt stack 17
 25269                           
 25270                           ;Timer.c: 162: TMR3H = 0;
 25271                           
 25272                           ;incstack = 0
 25273  005BE0  0E00               	movlw	0
 25274  005BE2  6EB3               	movwf	4019,c	;volatile
 25275                           
 25276                           ;Timer.c: 163: TMR3L = 2;
 25277  005BE4  0E02               	movlw	2
 25278  005BE6  6EB2               	movwf	4018,c	;volatile
 25279  005BE8  0012               	return		;funcret
 25280  005BEA                     __end_of_ResetTimer3:
 25281                           	opt stack 0
 25282                           pclatu	equ	0xFFB
 25283                           pclath	equ	0xFFA
 25284                           tblptru	equ	0xFF8
 25285                           tblptrh	equ	0xFF7
 25286                           tblptrl	equ	0xFF6
 25287                           tablat	equ	0xFF5
 25288                           prodh	equ	0xFF4
 25289                           prodl	equ	0xFF3
 25290                           intcon	equ	0xFF2
 25291                           intcon2	equ	0xFF1
 25292                           indf0	equ	0xFEF
 25293                           postinc0	equ	0xFEE
 25294                           plusw0	equ	0xFEB
 25295                           fsr0h	equ	0xFEA
 25296                           fsr0l	equ	0xFE9
 25297                           wreg	equ	0xFE8
 25298                           indf1	equ	0xFE7
 25299                           postdec1	equ	0xFE5
 25300                           fsr1h	equ	0xFE2
 25301                           fsr1l	equ	0xFE1
 25302                           bsr	equ	0xFE0
 25303                           indf2	equ	0xFDF
 25304                           postinc2	equ	0xFDE
 25305                           postdec2	equ	0xFDD
 25306                           plusw2	equ	0xFDB
 25307                           fsr2h	equ	0xFDA
 25308                           fsr2l	equ	0xFD9
 25309                           status	equ	0xFD8
 25310                           
 25311 ;; *************** function _IRrawToNEC *****************
 25312 ;; Defined at:
 25313 ;;		line 122 in file "IR.c"
 25314 ;; Parameters:    Size  Location     Type
 25315 ;;  Raw             2   26[COMRAM] PTR unsigned int 
 25316 ;;		 -> IRRawCode(144), 
 25317 ;;  NEC             2   28[COMRAM] PTR unsigned long 
 25318 ;;		 -> IR_NEC(4), 
 25319 ;;  Invert          1   30[COMRAM] unsigned char 
 25320 ;; Auto vars:     Size  Location     Type
 25321 ;;  NECtemp         4   33[COMRAM] unsigned long 
 25322 ;;  StartBit        1   39[COMRAM] unsigned char 
 25323 ;;  i               1   38[COMRAM] unsigned char 
 25324 ;;  first           1   37[COMRAM] unsigned char 
 25325 ;; Return value:  Size  Location     Type
 25326 ;;                  1    wreg      unsigned char 
 25327 ;; Registers used:
 25328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25329 ;; Tracked objects:
 25330 ;;		On entry : 0/0
 25331 ;;		On exit  : 0/0
 25332 ;;		Unchanged: 0/0
 25333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25334 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25335 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25336 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25337 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25338 ;;Total ram usage:       14 bytes
 25339 ;; Hardware stack levels used:    1
 25340 ;; This function calls:
 25341 ;;		Nothing
 25342 ;; This function is called by:
 25343 ;;		_high_isr
 25344 ;; This function uses a non-reentrant model
 25345 ;;
 25346                           
 25347                           	psect	text97
 25348  002BB4                     __ptext97:
 25349                           	opt stack 0
 25350  002BB4                     _IRrawToNEC:
 25351                           	opt stack 17
 25352                           
 25353                           ;IR.c: 150: unsigned char i;
 25354                           ;IR.c: 151: unsigned char first =0;
 25355                           
 25356                           ;incstack = 0
 25357  002BB4  0E00               	movlw	0
 25358  002BB6  6E26               	movwf	IRrawToNEC@first,c
 25359                           
 25360                           ;IR.c: 152: unsigned char StartBit=72;
 25361  002BB8  0E48               	movlw	72
 25362  002BBA  6E28               	movwf	IRrawToNEC@StartBit,c
 25363                           
 25364                           ;IR.c: 153: unsigned long NECtemp = 0;
 25365  002BBC  0E00               	movlw	0
 25366  002BBE  6E22               	movwf	IRrawToNEC@NECtemp,c
 25367  002BC0  0E00               	movlw	0
 25368  002BC2  6E23               	movwf	IRrawToNEC@NECtemp+1,c
 25369  002BC4  0E00               	movlw	0
 25370  002BC6  6E24               	movwf	IRrawToNEC@NECtemp+2,c
 25371  002BC8  0E00               	movlw	0
 25372  002BCA  6E25               	movwf	IRrawToNEC@NECtemp+3,c
 25373                           
 25374                           ;IR.c: 156: for (i =0; i < 72; i++)
 25375  002BCC  0E00               	movlw	0
 25376  002BCE  6E27               	movwf	IRrawToNEC@i,c
 25377  002BD0                     i2l7785:
 25378  002BD0  0E47               	movlw	71
 25379  002BD2  6427               	cpfsgt	IRrawToNEC@i,c
 25380  002BD4  D001               	goto	i2l7789
 25381  002BD6  D041               	goto	i2l7809
 25382  002BD8                     i2l7789:
 25383                           
 25384                           ;IR.c: 157: {
 25385                           ;IR.c: 158: if(Raw[i] >= 45000 && Raw[i] <= 50000 )
 25386  002BD8  5027               	movf	IRrawToNEC@i,w,c
 25387  002BDA  0D02               	mullw	2
 25388  002BDC  50F3               	movf	prodl,w,c
 25389  002BDE  241B               	addwf	IRrawToNEC@Raw,w,c
 25390  002BE0  6ED9               	movwf	fsr2l,c
 25391  002BE2  50F4               	movf	prodh,w,c
 25392  002BE4  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25393  002BE6  6EDA               	movwf	fsr2h,c
 25394  002BE8  0EC8               	movlw	200
 25395  002BEA  5CDE               	subwf	postinc2,w,c
 25396  002BEC  0EAF               	movlw	175
 25397  002BEE  58DE               	subwfb	postinc2,w,c
 25398  002BF0  A0D8               	btfss	status,0,c
 25399  002BF2  D011               	goto	i2l7799
 25400  002BF4  5027               	movf	IRrawToNEC@i,w,c
 25401  002BF6  0D02               	mullw	2
 25402  002BF8  50F3               	movf	prodl,w,c
 25403  002BFA  241B               	addwf	IRrawToNEC@Raw,w,c
 25404  002BFC  6ED9               	movwf	fsr2l,c
 25405  002BFE  50F4               	movf	prodh,w,c
 25406  002C00  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25407  002C02  6EDA               	movwf	fsr2h,c
 25408  002C04  0E51               	movlw	81
 25409  002C06  5CDE               	subwf	postinc2,w,c
 25410  002C08  0EC3               	movlw	195
 25411  002C0A  58DE               	subwfb	postinc2,w,c
 25412  002C0C  B0D8               	btfsc	status,0,c
 25413  002C0E  D003               	goto	i2l7799
 25414                           
 25415                           ;IR.c: 159: {
 25416                           ;IR.c: 161: return 2;
 25417  002C10  0E02               	movlw	2
 25418  002C12  0012               	return	
 25419                           
 25420                           ;IR.c: 162: }
 25421  002C14  D020               	goto	i2l7805
 25422  002C16                     i2l7799:
 25423                           
 25424                           ;IR.c: 163: else if(Raw[i] >= 4000 && Raw[i] <= 5000 )
 25425  002C16  5027               	movf	IRrawToNEC@i,w,c
 25426  002C18  0D02               	mullw	2
 25427  002C1A  50F3               	movf	prodl,w,c
 25428  002C1C  241B               	addwf	IRrawToNEC@Raw,w,c
 25429  002C1E  6ED9               	movwf	fsr2l,c
 25430  002C20  50F4               	movf	prodh,w,c
 25431  002C22  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25432  002C24  6EDA               	movwf	fsr2h,c
 25433  002C26  0EA0               	movlw	160
 25434  002C28  5CDE               	subwf	postinc2,w,c
 25435  002C2A  0E0F               	movlw	15
 25436  002C2C  58DE               	subwfb	postinc2,w,c
 25437  002C2E  A0D8               	btfss	status,0,c
 25438  002C30  D012               	goto	i2l7805
 25439  002C32  5027               	movf	IRrawToNEC@i,w,c
 25440  002C34  0D02               	mullw	2
 25441  002C36  50F3               	movf	prodl,w,c
 25442  002C38  241B               	addwf	IRrawToNEC@Raw,w,c
 25443  002C3A  6ED9               	movwf	fsr2l,c
 25444  002C3C  50F4               	movf	prodh,w,c
 25445  002C3E  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25446  002C40  6EDA               	movwf	fsr2h,c
 25447  002C42  0E89               	movlw	137
 25448  002C44  5CDE               	subwf	postinc2,w,c
 25449  002C46  0E13               	movlw	19
 25450  002C48  58DE               	subwfb	postinc2,w,c
 25451  002C4A  B0D8               	btfsc	status,0,c
 25452  002C4C  D004               	goto	i2l7805
 25453                           
 25454                           ;IR.c: 164: {
 25455                           ;IR.c: 166: StartBit = i;
 25456  002C4E  C027  F028         	movff	IRrawToNEC@i,IRrawToNEC@StartBit
 25457                           
 25458                           ;IR.c: 167: break;
 25459  002C52  D003               	goto	i2l7809
 25460  002C54  D000               	goto	i2l7805
 25461  002C56                     i2l7805:
 25462  002C56  2A27               	incf	IRrawToNEC@i,f,c
 25463  002C58  D7BB               	goto	i2l7785
 25464  002C5A                     i2l7809:
 25465                           
 25466                           ;IR.c: 168: }
 25467                           ;IR.c: 169: }
 25468                           ;IR.c: 170: if(72 - StartBit < 72)
 25469  002C5A  5028               	movf	IRrawToNEC@StartBit,w,c
 25470  002C5C  6E20               	movwf	??_IRrawToNEC& (0+255),c
 25471  002C5E  6A21               	clrf	(??_IRrawToNEC+1)& (0+255),c
 25472  002C60  1E20               	comf	??_IRrawToNEC,f,c
 25473  002C62  1E21               	comf	??_IRrawToNEC+1,f,c
 25474  002C64  4A20               	infsnz	??_IRrawToNEC,f,c
 25475  002C66  2A21               	incf	??_IRrawToNEC+1,f,c
 25476  002C68  0E48               	movlw	72
 25477  002C6A  2620               	addwf	??_IRrawToNEC,f,c
 25478  002C6C  0E00               	movlw	0
 25479  002C6E  2221               	addwfc	??_IRrawToNEC+1,f,c
 25480  002C70  BE21               	btfsc	??_IRrawToNEC+1,7,c
 25481  002C72  D006               	goto	i2l7811
 25482  002C74  5021               	movf	??_IRrawToNEC+1,w,c
 25483  002C76  E106               	bnz	i2l7815
 25484  002C78  0E48               	movlw	72
 25485  002C7A  5C20               	subwf	??_IRrawToNEC,w,c
 25486  002C7C  B0D8               	btfsc	status,0,c
 25487  002C7E  D002               	goto	i2l7815
 25488  002C80                     i2l7811:
 25489                           
 25490                           ;IR.c: 171: {
 25491                           ;IR.c: 173: return 0;
 25492  002C80  0E00               	movlw	0
 25493  002C82  0012               	return	
 25494  002C84                     i2l7815:
 25495                           
 25496                           ;IR.c: 174: }
 25497                           ;IR.c: 176: StartBit++;
 25498  002C84  2A28               	incf	IRrawToNEC@StartBit,f,c
 25499                           
 25500                           ;IR.c: 177: if(Raw[StartBit] >= 925 && Raw[StartBit] <= 1250 )
 25501  002C86  5028               	movf	IRrawToNEC@StartBit,w,c
 25502  002C88  0D02               	mullw	2
 25503  002C8A  50F3               	movf	prodl,w,c
 25504  002C8C  241B               	addwf	IRrawToNEC@Raw,w,c
 25505  002C8E  6ED9               	movwf	fsr2l,c
 25506  002C90  50F4               	movf	prodh,w,c
 25507  002C92  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25508  002C94  6EDA               	movwf	fsr2h,c
 25509  002C96  0E9D               	movlw	157
 25510  002C98  5CDE               	subwf	postinc2,w,c
 25511  002C9A  0E03               	movlw	3
 25512  002C9C  58DE               	subwfb	postinc2,w,c
 25513  002C9E  A0D8               	btfss	status,0,c
 25514  002CA0  D067               	goto	i2l7837
 25515  002CA2  5028               	movf	IRrawToNEC@StartBit,w,c
 25516  002CA4  0D02               	mullw	2
 25517  002CA6  50F3               	movf	prodl,w,c
 25518  002CA8  241B               	addwf	IRrawToNEC@Raw,w,c
 25519  002CAA  6ED9               	movwf	fsr2l,c
 25520  002CAC  50F4               	movf	prodh,w,c
 25521  002CAE  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25522  002CB0  6EDA               	movwf	fsr2h,c
 25523  002CB2  0EE3               	movlw	227
 25524  002CB4  5CDE               	subwf	postinc2,w,c
 25525  002CB6  0E04               	movlw	4
 25526  002CB8  58DE               	subwfb	postinc2,w,c
 25527  002CBA  B0D8               	btfsc	status,0,c
 25528  002CBC  D059               	goto	i2l7837
 25529                           
 25530                           ;IR.c: 178: {
 25531                           ;IR.c: 180: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 25532  002CBE  5028               	movf	IRrawToNEC@StartBit,w,c
 25533  002CC0  0D02               	mullw	2
 25534  002CC2  50F3               	movf	prodl,w,c
 25535  002CC4  241B               	addwf	IRrawToNEC@Raw,w,c
 25536  002CC6  6ED9               	movwf	fsr2l,c
 25537  002CC8  50F4               	movf	prodh,w,c
 25538  002CCA  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25539  002CCC  6EDA               	movwf	fsr2h,c
 25540  002CCE  0E01               	movlw	1
 25541  002CD0  50DB               	movf	plusw2,w,c
 25542  002CD2  E104               	bnz	i2u795_40
 25543  002CD4  0E7D               	movlw	125
 25544  002CD6  5CDE               	subwf	postinc2,w,c
 25545  002CD8  A0D8               	btfss	status,0,c
 25546  002CDA  D069               	goto	i2l7845
 25547  002CDC                     i2u795_40:
 25548  002CDC  5028               	movf	IRrawToNEC@StartBit,w,c
 25549  002CDE  0D02               	mullw	2
 25550  002CE0  50F3               	movf	prodl,w,c
 25551  002CE2  241B               	addwf	IRrawToNEC@Raw,w,c
 25552  002CE4  6ED9               	movwf	fsr2l,c
 25553  002CE6  50F4               	movf	prodh,w,c
 25554  002CE8  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25555  002CEA  6EDA               	movwf	fsr2h,c
 25556  002CEC  0E59               	movlw	89
 25557  002CEE  5CDE               	subwf	postinc2,w,c
 25558  002CF0  0E02               	movlw	2
 25559  002CF2  58DE               	subwfb	postinc2,w,c
 25560  002CF4  B0D8               	btfsc	status,0,c
 25561  002CF6  D05B               	goto	i2l7845
 25562                           
 25563                           ;IR.c: 181: {
 25564                           ;IR.c: 183: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 25565  002CF8  5028               	movf	IRrawToNEC@StartBit,w,c
 25566  002CFA  0D02               	mullw	2
 25567  002CFC  50F3               	movf	prodl,w,c
 25568  002CFE  241B               	addwf	IRrawToNEC@Raw,w,c
 25569  002D00  6ED9               	movwf	fsr2l,c
 25570  002D02  50F4               	movf	prodh,w,c
 25571  002D04  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25572  002D06  6EDA               	movwf	fsr2h,c
 25573  002D08  0E01               	movlw	1
 25574  002D0A  50DB               	movf	plusw2,w,c
 25575  002D0C  E104               	bnz	i2u797_40
 25576  002D0E  0E7D               	movlw	125
 25577  002D10  5CDE               	subwf	postinc2,w,c
 25578  002D12  A0D8               	btfss	status,0,c
 25579  002D14  D04C               	goto	i2l7845
 25580  002D16                     i2u797_40:
 25581  002D16  5028               	movf	IRrawToNEC@StartBit,w,c
 25582  002D18  0D02               	mullw	2
 25583  002D1A  50F3               	movf	prodl,w,c
 25584  002D1C  241B               	addwf	IRrawToNEC@Raw,w,c
 25585  002D1E  6ED9               	movwf	fsr2l,c
 25586  002D20  50F4               	movf	prodh,w,c
 25587  002D22  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25588  002D24  6EDA               	movwf	fsr2h,c
 25589  002D26  0E59               	movlw	89
 25590  002D28  5CDE               	subwf	postinc2,w,c
 25591  002D2A  0E02               	movlw	2
 25592  002D2C  58DE               	subwfb	postinc2,w,c
 25593  002D2E  B0D8               	btfsc	status,0,c
 25594  002D30  D03E               	goto	i2l7845
 25595                           
 25596                           ;IR.c: 184: {
 25597                           ;IR.c: 186: if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 25598  002D32  5028               	movf	IRrawToNEC@StartBit,w,c
 25599  002D34  0D02               	mullw	2
 25600  002D36  50F3               	movf	prodl,w,c
 25601  002D38  241B               	addwf	IRrawToNEC@Raw,w,c
 25602  002D3A  6ED9               	movwf	fsr2l,c
 25603  002D3C  50F4               	movf	prodh,w,c
 25604  002D3E  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25605  002D40  6EDA               	movwf	fsr2h,c
 25606  002D42  0EC8               	movlw	200
 25607  002D44  5CDE               	subwf	postinc2,w,c
 25608  002D46  0EAF               	movlw	175
 25609  002D48  58DE               	subwfb	postinc2,w,c
 25610  002D4A  A0D8               	btfss	status,0,c
 25611  002D4C  D030               	goto	i2l7845
 25612  002D4E  5028               	movf	IRrawToNEC@StartBit,w,c
 25613  002D50  0D02               	mullw	2
 25614  002D52  50F3               	movf	prodl,w,c
 25615  002D54  241B               	addwf	IRrawToNEC@Raw,w,c
 25616  002D56  6ED9               	movwf	fsr2l,c
 25617  002D58  50F4               	movf	prodh,w,c
 25618  002D5A  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25619  002D5C  6EDA               	movwf	fsr2h,c
 25620  002D5E  0E51               	movlw	81
 25621  002D60  5CDE               	subwf	postinc2,w,c
 25622  002D62  0EC3               	movlw	195
 25623  002D64  58DE               	subwfb	postinc2,w,c
 25624  002D66  B0D8               	btfsc	status,0,c
 25625  002D68  D022               	goto	i2l7845
 25626                           
 25627                           ;IR.c: 187: {
 25628                           ;IR.c: 189: return 2;
 25629  002D6A  0E02               	movlw	2
 25630  002D6C  0012               	return	
 25631                           
 25632                           ;IR.c: 190: }
 25633                           ;IR.c: 191: }
 25634                           ;IR.c: 192: }
 25635                           ;IR.c: 194: }
 25636  002D6E  D01F               	goto	i2l7845
 25637  002D70                     i2l7837:
 25638                           
 25639                           ;IR.c: 195: else if(Raw[StartBit] < 1750 || Raw[StartBit] > 2750 )
 25640  002D70  5028               	movf	IRrawToNEC@StartBit,w,c
 25641  002D72  0D02               	mullw	2
 25642  002D74  50F3               	movf	prodl,w,c
 25643  002D76  241B               	addwf	IRrawToNEC@Raw,w,c
 25644  002D78  6ED9               	movwf	fsr2l,c
 25645  002D7A  50F4               	movf	prodh,w,c
 25646  002D7C  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25647  002D7E  6EDA               	movwf	fsr2h,c
 25648  002D80  0ED6               	movlw	214
 25649  002D82  5CDE               	subwf	postinc2,w,c
 25650  002D84  0E06               	movlw	6
 25651  002D86  58DE               	subwfb	postinc2,w,c
 25652  002D88  A0D8               	btfss	status,0,c
 25653  002D8A  D00E               	goto	i2l7841
 25654  002D8C  5028               	movf	IRrawToNEC@StartBit,w,c
 25655  002D8E  0D02               	mullw	2
 25656  002D90  50F3               	movf	prodl,w,c
 25657  002D92  241B               	addwf	IRrawToNEC@Raw,w,c
 25658  002D94  6ED9               	movwf	fsr2l,c
 25659  002D96  50F4               	movf	prodh,w,c
 25660  002D98  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25661  002D9A  6EDA               	movwf	fsr2h,c
 25662  002D9C  0EBF               	movlw	191
 25663  002D9E  5CDE               	subwf	postinc2,w,c
 25664  002DA0  0E0A               	movlw	10
 25665  002DA2  58DE               	subwfb	postinc2,w,c
 25666  002DA4  A0D8               	btfss	status,0,c
 25667  002DA6  D003               	goto	i2l7845
 25668  002DA8                     i2l7841:
 25669                           
 25670                           ;IR.c: 196: {
 25671                           ;IR.c: 198: return 0;
 25672  002DA8  0E00               	movlw	0
 25673  002DAA  0012               	return	
 25674  002DAC  D000               	goto	i2l7845
 25675  002DAE                     i2l7845:
 25676                           
 25677                           ;IR.c: 199: }
 25678                           ;IR.c: 201: StartBit++;
 25679  002DAE  2A28               	incf	IRrawToNEC@StartBit,f,c
 25680                           
 25681                           ;IR.c: 202: for(i = StartBit; i < 72;i++)
 25682  002DB0  C028  F027         	movff	IRrawToNEC@StartBit,IRrawToNEC@i
 25683  002DB4                     i2l7849:
 25684  002DB4  0E47               	movlw	71
 25685  002DB6  6427               	cpfsgt	IRrawToNEC@i,c
 25686  002DB8  D001               	goto	i2l7853
 25687  002DBA  D0CA               	goto	i2l7929
 25688  002DBC                     i2l7853:
 25689                           
 25690                           ;IR.c: 203: {
 25691                           ;IR.c: 204: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 25692  002DBC  5028               	movf	IRrawToNEC@StartBit,w,c
 25693  002DBE  0D02               	mullw	2
 25694  002DC0  50F3               	movf	prodl,w,c
 25695  002DC2  241B               	addwf	IRrawToNEC@Raw,w,c
 25696  002DC4  6ED9               	movwf	fsr2l,c
 25697  002DC6  50F4               	movf	prodh,w,c
 25698  002DC8  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25699  002DCA  6EDA               	movwf	fsr2h,c
 25700  002DCC  0E01               	movlw	1
 25701  002DCE  50DB               	movf	plusw2,w,c
 25702  002DD0  E104               	bnz	i2u804_40
 25703  002DD2  0E7D               	movlw	125
 25704  002DD4  5CDE               	subwf	postinc2,w,c
 25705  002DD6  A0D8               	btfss	status,0,c
 25706  002DD8  D024               	goto	i2l7869
 25707  002DDA                     i2u804_40:
 25708  002DDA  5028               	movf	IRrawToNEC@StartBit,w,c
 25709  002DDC  0D02               	mullw	2
 25710  002DDE  50F3               	movf	prodl,w,c
 25711  002DE0  241B               	addwf	IRrawToNEC@Raw,w,c
 25712  002DE2  6ED9               	movwf	fsr2l,c
 25713  002DE4  50F4               	movf	prodh,w,c
 25714  002DE6  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25715  002DE8  6EDA               	movwf	fsr2h,c
 25716  002DEA  0E59               	movlw	89
 25717  002DEC  5CDE               	subwf	postinc2,w,c
 25718  002DEE  0E02               	movlw	2
 25719  002DF0  58DE               	subwfb	postinc2,w,c
 25720  002DF2  B0D8               	btfsc	status,0,c
 25721  002DF4  D016               	goto	i2l7869
 25722                           
 25723                           ;IR.c: 205: {
 25724                           ;IR.c: 206: if(!first)
 25725  002DF6  5026               	movf	IRrawToNEC@first,w,c
 25726  002DF8  A4D8               	btfss	status,2,c
 25727  002DFA  D002               	goto	i2l7861
 25728                           
 25729                           ;IR.c: 207: {
 25730                           ;IR.c: 209: first = 1;
 25731  002DFC  0E01               	movlw	1
 25732  002DFE  D040               	goto	L28
 25733  002E00                     i2l7861:
 25734                           
 25735                           ;IR.c: 211: else
 25736                           ;IR.c: 212: {
 25737                           ;IR.c: 214: first = 0;
 25738  002E00  0E00               	movlw	0
 25739  002E02  6E26               	movwf	IRrawToNEC@first,c
 25740                           
 25741                           ;IR.c: 215: NECtemp <<= 1;
 25742  002E04  90D8               	bcf	status,0,c
 25743  002E06  3622               	rlcf	IRrawToNEC@NECtemp,f,c
 25744  002E08  3623               	rlcf	IRrawToNEC@NECtemp+1,f,c
 25745  002E0A  3624               	rlcf	IRrawToNEC@NECtemp+2,f,c
 25746  002E0C  3625               	rlcf	IRrawToNEC@NECtemp+3,f,c
 25747                           
 25748                           ;IR.c: 216: if(!Invert)
 25749  002E0E  501F               	movf	IRrawToNEC@Invert,w,c
 25750  002E10  A4D8               	btfss	status,2,c
 25751  002E12  D09B               	goto	i2l7925
 25752                           
 25753                           ;IR.c: 217: {
 25754                           ;IR.c: 218: NECtemp++;
 25755  002E14  0E01               	movlw	1
 25756  002E16  2622               	addwf	IRrawToNEC@NECtemp,f,c
 25757  002E18  0E00               	movlw	0
 25758  002E1A  2223               	addwfc	IRrawToNEC@NECtemp+1,f,c
 25759  002E1C  2224               	addwfc	IRrawToNEC@NECtemp+2,f,c
 25760  002E1E  2225               	addwfc	IRrawToNEC@NECtemp+3,f,c
 25761                           
 25762                           ;IR.c: 219: }
 25763                           ;IR.c: 220: }
 25764                           ;IR.c: 221: }
 25765  002E20  D094               	goto	i2l7925
 25766  002E22                     i2l7869:
 25767                           
 25768                           ;IR.c: 222: else if(Raw[StartBit] >= 700 && Raw[StartBit] <= 950)
 25769  002E22  5028               	movf	IRrawToNEC@StartBit,w,c
 25770  002E24  0D02               	mullw	2
 25771  002E26  50F3               	movf	prodl,w,c
 25772  002E28  241B               	addwf	IRrawToNEC@Raw,w,c
 25773  002E2A  6ED9               	movwf	fsr2l,c
 25774  002E2C  50F4               	movf	prodh,w,c
 25775  002E2E  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25776  002E30  6EDA               	movwf	fsr2h,c
 25777  002E32  0EBC               	movlw	188
 25778  002E34  5CDE               	subwf	postinc2,w,c
 25779  002E36  0E02               	movlw	2
 25780  002E38  58DE               	subwfb	postinc2,w,c
 25781  002E3A  A0D8               	btfss	status,0,c
 25782  002E3C  D026               	goto	i2l7887
 25783  002E3E  5028               	movf	IRrawToNEC@StartBit,w,c
 25784  002E40  0D02               	mullw	2
 25785  002E42  50F3               	movf	prodl,w,c
 25786  002E44  241B               	addwf	IRrawToNEC@Raw,w,c
 25787  002E46  6ED9               	movwf	fsr2l,c
 25788  002E48  50F4               	movf	prodh,w,c
 25789  002E4A  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25790  002E4C  6EDA               	movwf	fsr2h,c
 25791  002E4E  0EB7               	movlw	183
 25792  002E50  5CDE               	subwf	postinc2,w,c
 25793  002E52  0E03               	movlw	3
 25794  002E54  58DE               	subwfb	postinc2,w,c
 25795  002E56  B0D8               	btfsc	status,0,c
 25796  002E58  D018               	goto	i2l7887
 25797                           
 25798                           ;IR.c: 223: {
 25799                           ;IR.c: 224: if(first)
 25800  002E5A  5026               	movf	IRrawToNEC@first,w,c
 25801  002E5C  B4D8               	btfsc	status,2,c
 25802  002E5E  D012               	goto	i2l7883
 25803                           
 25804                           ;IR.c: 225: {
 25805                           ;IR.c: 227: NECtemp <<= 1;
 25806  002E60  90D8               	bcf	status,0,c
 25807  002E62  3622               	rlcf	IRrawToNEC@NECtemp,f,c
 25808  002E64  3623               	rlcf	IRrawToNEC@NECtemp+1,f,c
 25809  002E66  3624               	rlcf	IRrawToNEC@NECtemp+2,f,c
 25810  002E68  3625               	rlcf	IRrawToNEC@NECtemp+3,f,c
 25811                           
 25812                           ;IR.c: 228: if(Invert)
 25813  002E6A  501F               	movf	IRrawToNEC@Invert,w,c
 25814  002E6C  B4D8               	btfsc	status,2,c
 25815  002E6E  D007               	goto	i2l7881
 25816                           
 25817                           ;IR.c: 229: {
 25818                           ;IR.c: 230: NECtemp++;
 25819  002E70  0E01               	movlw	1
 25820  002E72  2622               	addwf	IRrawToNEC@NECtemp,f,c
 25821  002E74  0E00               	movlw	0
 25822  002E76  2223               	addwfc	IRrawToNEC@NECtemp+1,f,c
 25823  002E78  2224               	addwfc	IRrawToNEC@NECtemp+2,f,c
 25824  002E7A  2225               	addwfc	IRrawToNEC@NECtemp+3,f,c
 25825  002E7C  D000               	goto	i2l7881
 25826  002E7E                     i2l7881:
 25827                           
 25828                           ;IR.c: 231: }
 25829                           ;IR.c: 232: first = 0;
 25830  002E7E  0E00               	movlw	0
 25831  002E80                     L28:
 25832  002E80  6E26               	movwf	IRrawToNEC@first,c
 25833                           
 25834                           ;IR.c: 233: }
 25835  002E82  D063               	goto	i2l7925
 25836  002E84                     i2l7883:
 25837                           
 25838                           ;IR.c: 234: else
 25839                           ;IR.c: 235: {
 25840                           ;IR.c: 237: return 0;
 25841  002E84  0E00               	movlw	0
 25842  002E86  0012               	return	
 25843                           
 25844                           ;IR.c: 238: }
 25845                           ;IR.c: 239: }
 25846  002E88  D060               	goto	i2l7925
 25847  002E8A                     i2l7887:
 25848                           
 25849                           ;IR.c: 240: else if(Raw[StartBit] == 0 && first == 1)
 25850  002E8A  5028               	movf	IRrawToNEC@StartBit,w,c
 25851  002E8C  0D02               	mullw	2
 25852  002E8E  50F3               	movf	prodl,w,c
 25853  002E90  241B               	addwf	IRrawToNEC@Raw,w,c
 25854  002E92  6ED9               	movwf	fsr2l,c
 25855  002E94  50F4               	movf	prodh,w,c
 25856  002E96  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25857  002E98  6EDA               	movwf	fsr2h,c
 25858  002E9A  50DE               	movf	postinc2,w,c
 25859  002E9C  10DE               	iorwf	postinc2,w,c
 25860  002E9E  A4D8               	btfss	status,2,c
 25861  002EA0  D012               	goto	i2l7899
 25862  002EA2  0426               	decf	IRrawToNEC@first,w,c
 25863  002EA4  A4D8               	btfss	status,2,c
 25864  002EA6  D00F               	goto	i2l7899
 25865  002EA8                     i2l7891:
 25866                           
 25867                           ;IR.c: 241: {
 25868                           ;IR.c: 246: *NEC = NECtemp;
 25869  002EA8  C01D  FFD9         	movff	IRrawToNEC@NEC,fsr2l
 25870  002EAC  C01E  FFDA         	movff	IRrawToNEC@NEC+1,fsr2h
 25871  002EB0  C022  FFDE         	movff	IRrawToNEC@NECtemp,postinc2
 25872  002EB4  C023  FFDE         	movff	IRrawToNEC@NECtemp+1,postinc2
 25873  002EB8  C024  FFDE         	movff	IRrawToNEC@NECtemp+2,postinc2
 25874  002EBC  C025  FFDE         	movff	IRrawToNEC@NECtemp+3,postinc2
 25875  002EC0  D01F               	goto	i2l7905
 25876                           
 25877                           ;IR.c: 247: return 1;
 25878  002EC2  0012               	return	
 25879                           
 25880                           ;IR.c: 248: }
 25881  002EC4  D042               	goto	i2l7925
 25882  002EC6                     i2l7899:
 25883                           
 25884                           ;IR.c: 249: else if(Raw[StartBit] >= 19000 && Raw[StartBit] <= 21000)
 25885  002EC6  5028               	movf	IRrawToNEC@StartBit,w,c
 25886  002EC8  0D02               	mullw	2
 25887  002ECA  50F3               	movf	prodl,w,c
 25888  002ECC  241B               	addwf	IRrawToNEC@Raw,w,c
 25889  002ECE  6ED9               	movwf	fsr2l,c
 25890  002ED0  50F4               	movf	prodh,w,c
 25891  002ED2  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25892  002ED4  6EDA               	movwf	fsr2h,c
 25893  002ED6  0E38               	movlw	56
 25894  002ED8  5CDE               	subwf	postinc2,w,c
 25895  002EDA  0E4A               	movlw	74
 25896  002EDC  58DE               	subwfb	postinc2,w,c
 25897  002EDE  A0D8               	btfss	status,0,c
 25898  002EE0  D012               	goto	i2l7911
 25899  002EE2  5028               	movf	IRrawToNEC@StartBit,w,c
 25900  002EE4  0D02               	mullw	2
 25901  002EE6  50F3               	movf	prodl,w,c
 25902  002EE8  241B               	addwf	IRrawToNEC@Raw,w,c
 25903  002EEA  6ED9               	movwf	fsr2l,c
 25904  002EEC  50F4               	movf	prodh,w,c
 25905  002EEE  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25906  002EF0  6EDA               	movwf	fsr2h,c
 25907  002EF2  0E09               	movlw	9
 25908  002EF4  5CDE               	subwf	postinc2,w,c
 25909  002EF6  0E52               	movlw	82
 25910  002EF8  58DE               	subwfb	postinc2,w,c
 25911  002EFA  B0D8               	btfsc	status,0,c
 25912  002EFC  D004               	goto	i2l7911
 25913  002EFE  D7D4               	goto	i2l7891
 25914  002F00                     i2l7905:
 25915                           
 25916                           ;IR.c: 253: return 1;
 25917  002F00  0E01               	movlw	1
 25918  002F02  0012               	return	
 25919                           
 25920                           ;IR.c: 254: }
 25921  002F04  D022               	goto	i2l7925
 25922  002F06                     i2l7911:
 25923                           
 25924                           ;IR.c: 255: else if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 25925  002F06  5028               	movf	IRrawToNEC@StartBit,w,c
 25926  002F08  0D02               	mullw	2
 25927  002F0A  50F3               	movf	prodl,w,c
 25928  002F0C  241B               	addwf	IRrawToNEC@Raw,w,c
 25929  002F0E  6ED9               	movwf	fsr2l,c
 25930  002F10  50F4               	movf	prodh,w,c
 25931  002F12  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25932  002F14  6EDA               	movwf	fsr2h,c
 25933  002F16  0EC8               	movlw	200
 25934  002F18  5CDE               	subwf	postinc2,w,c
 25935  002F1A  0EAF               	movlw	175
 25936  002F1C  58DE               	subwfb	postinc2,w,c
 25937  002F1E  A0D8               	btfss	status,0,c
 25938  002F20  D011               	goto	i2l7921
 25939  002F22  5028               	movf	IRrawToNEC@StartBit,w,c
 25940  002F24  0D02               	mullw	2
 25941  002F26  50F3               	movf	prodl,w,c
 25942  002F28  241B               	addwf	IRrawToNEC@Raw,w,c
 25943  002F2A  6ED9               	movwf	fsr2l,c
 25944  002F2C  50F4               	movf	prodh,w,c
 25945  002F2E  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 25946  002F30  6EDA               	movwf	fsr2h,c
 25947  002F32  0E51               	movlw	81
 25948  002F34  5CDE               	subwf	postinc2,w,c
 25949  002F36  0EC3               	movlw	195
 25950  002F38  58DE               	subwfb	postinc2,w,c
 25951  002F3A  B0D8               	btfsc	status,0,c
 25952  002F3C  D003               	goto	i2l7921
 25953                           
 25954                           ;IR.c: 256: {
 25955                           ;IR.c: 258: return 2;
 25956  002F3E  0E02               	movlw	2
 25957  002F40  0012               	return	
 25958                           
 25959                           ;IR.c: 259: }
 25960  002F42  D003               	goto	i2l7925
 25961  002F44                     i2l7921:
 25962                           
 25963                           ;IR.c: 260: else
 25964                           ;IR.c: 261: {
 25965                           ;IR.c: 262: return 0;
 25966  002F44  0E00               	movlw	0
 25967  002F46  0012               	return	
 25968  002F48  D000               	goto	i2l7925
 25969  002F4A                     i2l7925:
 25970                           
 25971                           ;IR.c: 263: }
 25972                           ;IR.c: 264: StartBit++;
 25973  002F4A  2A28               	incf	IRrawToNEC@StartBit,f,c
 25974  002F4C  2A27               	incf	IRrawToNEC@i,f,c
 25975  002F4E  D732               	goto	i2l7849
 25976  002F50                     i2l7929:
 25977                           
 25978                           ;IR.c: 265: }
 25979                           ;IR.c: 267: return 0;
 25980  002F50  0E00               	movlw	0
 25981  002F52  0012               	return	
 25982  002F54  0012               	return		;funcret
 25983  002F56                     __end_of_IRrawToNEC:
 25984                           	opt stack 0
 25985                           pclatu	equ	0xFFB
 25986                           pclath	equ	0xFFA
 25987                           tblptru	equ	0xFF8
 25988                           tblptrh	equ	0xFF7
 25989                           tblptrl	equ	0xFF6
 25990                           tablat	equ	0xFF5
 25991                           prodh	equ	0xFF4
 25992                           prodl	equ	0xFF3
 25993                           intcon	equ	0xFF2
 25994                           intcon2	equ	0xFF1
 25995                           indf0	equ	0xFEF
 25996                           postinc0	equ	0xFEE
 25997                           plusw0	equ	0xFEB
 25998                           fsr0h	equ	0xFEA
 25999                           fsr0l	equ	0xFE9
 26000                           wreg	equ	0xFE8
 26001                           indf1	equ	0xFE7
 26002                           postdec1	equ	0xFE5
 26003                           fsr1h	equ	0xFE2
 26004                           fsr1l	equ	0xFE1
 26005                           bsr	equ	0xFE0
 26006                           indf2	equ	0xFDF
 26007                           postinc2	equ	0xFDE
 26008                           postdec2	equ	0xFDD
 26009                           plusw2	equ	0xFDB
 26010                           fsr2h	equ	0xFDA
 26011                           fsr2l	equ	0xFD9
 26012                           status	equ	0xFD8
 26013                           pclatu	equ	0xFFB
 26014                           pclath	equ	0xFFA
 26015                           tblptru	equ	0xFF8
 26016                           tblptrh	equ	0xFF7
 26017                           tblptrl	equ	0xFF6
 26018                           tablat	equ	0xFF5
 26019                           prodh	equ	0xFF4
 26020                           prodl	equ	0xFF3
 26021                           intcon	equ	0xFF2
 26022                           intcon2	equ	0xFF1
 26023                           indf0	equ	0xFEF
 26024                           postinc0	equ	0xFEE
 26025                           plusw0	equ	0xFEB
 26026                           fsr0h	equ	0xFEA
 26027                           fsr0l	equ	0xFE9
 26028                           wreg	equ	0xFE8
 26029                           indf1	equ	0xFE7
 26030                           postdec1	equ	0xFE5
 26031                           fsr1h	equ	0xFE2
 26032                           fsr1l	equ	0xFE1
 26033                           bsr	equ	0xFE0
 26034                           indf2	equ	0xFDF
 26035                           postinc2	equ	0xFDE
 26036                           postdec2	equ	0xFDD
 26037                           plusw2	equ	0xFDB
 26038                           fsr2h	equ	0xFDA
 26039                           fsr2l	equ	0xFD9
 26040                           status	equ	0xFD8
 26041                           
 26042                           	psect	rparam
 26043  0000                     pclatu	equ	0xFFB
 26044                           pclath	equ	0xFFA
 26045                           tblptru	equ	0xFF8
 26046                           tblptrh	equ	0xFF7
 26047                           tblptrl	equ	0xFF6
 26048                           tablat	equ	0xFF5
 26049                           prodh	equ	0xFF4
 26050                           prodl	equ	0xFF3
 26051                           intcon	equ	0xFF2
 26052                           intcon2	equ	0xFF1
 26053                           indf0	equ	0xFEF
 26054                           postinc0	equ	0xFEE
 26055                           plusw0	equ	0xFEB
 26056                           fsr0h	equ	0xFEA
 26057                           fsr0l	equ	0xFE9
 26058                           wreg	equ	0xFE8
 26059                           indf1	equ	0xFE7
 26060                           postdec1	equ	0xFE5
 26061                           fsr1h	equ	0xFE2
 26062                           fsr1l	equ	0xFE1
 26063                           bsr	equ	0xFE0
 26064                           indf2	equ	0xFDF
 26065                           postinc2	equ	0xFDE
 26066                           postdec2	equ	0xFDD
 26067                           plusw2	equ	0xFDB
 26068                           fsr2h	equ	0xFDA
 26069                           fsr2l	equ	0xFD9
 26070                           status	equ	0xFD8


Data Sizes:
    Strings     1145
    Constant    546
    Data        60
    BSS         757
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     43      66
    BANK0           160    117     142
    BANK1           256    103     218
    BANK2           256      0     255
    BANK3           256      0     255
    BANK4           256     62     206
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_47(CODE[24]), STR_33(CODE[13]), STR_32(CODE[13]), STR_31(CODE[18]), 
		 -> STR_29(CODE[23]), STR_28(CODE[17]), STR_27(CODE[17]), STR_19(CODE[28]), 
		 -> STR_6(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> UseBluetooth@buf(BANK4[50]), BluetoothInitialSetup@buf(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    SendRF_wait@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(CODE[16]), Conf2_ChannelH_3_ON(CODE[16]), Conf2_ChannelH_2_OFF(CODE[16]), Conf2_ChannelH_2_ON(CODE[16]), 
		 -> Conf2_ChannelH_1_OFF(CODE[16]), Conf2_ChannelH_1_ON(CODE[16]), Conf2_ChannelD_OFF(CODE[16]), Conf2_ChannelD_ON(CODE[16]), 
		 -> Conf2_ChannelB_OFF(CODE[16]), Conf2_ChannelB_ON(CODE[16]), Conf1_ChannelF(CODE[12]), Conf1_ChannelE(CODE[12]), 
		 -> Conf1_ChannelD(CODE[12]), 

    SendRF@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(CODE[16]), Conf2_ChannelH_3_ON(CODE[16]), Conf2_ChannelH_2_OFF(CODE[16]), Conf2_ChannelH_2_ON(CODE[16]), 
		 -> Conf2_ChannelH_1_OFF(CODE[16]), Conf2_ChannelH_1_ON(CODE[16]), Conf2_ChannelD_OFF(CODE[16]), Conf2_ChannelD_ON(CODE[16]), 
		 -> Conf2_ChannelB_OFF(CODE[16]), Conf2_ChannelB_ON(CODE[16]), Conf1_ChannelF(CODE[12]), Conf1_ChannelE(CODE[12]), 
		 -> Conf1_ChannelD(CODE[12]), 

    DecodeNEC@address	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecAddress(BANK4[1]), IRaddress(BANK0[1]), 

    DecodeNEC@command	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecCommand(BANK4[1]), IRcommand(BANK0[1]), 

    UseIRCode@Code	PTR unsigned char  size(2) Largest target is 1
		 -> IR_New_Code(BANK0[1]), 

    IRrawToNEC@NEC	PTR unsigned long  size(2) Largest target is 4
		 -> IR_NEC(BANK0[4]), 

    IRrawToNEC@Raw	PTR unsigned int  size(2) Largest target is 144
		 -> IRRawCode(BANK4[144]), 

    InternalADC_Read@ADCcounts	PTR unsigned int  size(2) Largest target is 2
		 -> ReadVoltage@temp(BANK0[2]), 

    UARTcommandMenu@Desc	PTR unsigned char  size(2) Largest target is 32
		 -> STR_72(CODE[32]), STR_71(CODE[31]), STR_70(CODE[32]), STR_69(CODE[31]), 
		 -> STR_68(CODE[32]), STR_67(CODE[31]), STR_66(CODE[20]), STR_65(CODE[19]), 
		 -> STR_64(CODE[23]), STR_63(CODE[22]), STR_62(CODE[19]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_58(CODE[10]), 

    UARTcommandMenu@Command	PTR unsigned char  size(2) Largest target is 21
		 -> STR_57(CODE[4]), Conf2_ChannelH_3_OFF_STR(CODE[21]), Conf2_ChannelH_3_ON_STR(CODE[20]), Conf2_ChannelH_2_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_2_ON_STR(CODE[20]), Conf2_ChannelH_1_OFF_STR(CODE[21]), Conf2_ChannelH_1_ON_STR(CODE[20]), Conf2_ChannelD_OFF_STR(CODE[19]), 
		 -> Conf2_ChannelD_ON_STR(CODE[18]), Conf2_ChannelB_OFF_STR(CODE[19]), Conf2_ChannelB_ON_STR(CODE[18]), Conf1_ChannelF_STR(CODE[15]), 
		 -> Conf1_ChannelE_STR(CODE[15]), Conf1_ChannelD_STR(CODE[15]), 

    UARTstringCRLN@data	PTR unsigned char  size(2) Largest target is 64
		 -> STR_59(CODE[13]), STR_56(CODE[17]), STR_55(CODE[64]), STR_53(CODE[23]), 
		 -> SYNTAX_ERR(CODE[24]), STR_52(CODE[14]), STR_51(CODE[9]), STR_50(CODE[16]), 
		 -> STR_49(CODE[7]), STR_48(CODE[35]), STR_46(CODE[45]), STR_43(CODE[17]), 
		 -> STR_42(CODE[9]), STR_41(CODE[18]), STR_40(CODE[9]), STR_39(CODE[23]), 
		 -> STR_38(CODE[11]), STR_37(CODE[21]), STR_36(CODE[7]), STR_35(CODE[31]), 
		 -> STR_34(CODE[33]), STR_30(CODE[32]), STR_25(CODE[29]), STR_23(CODE[29]), 
		 -> UseBluetooth@buf(BANK4[50]), STR_3(CODE[16]), 

    UARTstring@data	PTR unsigned char  size(2) Largest target is 255
		 -> SYNTAX_ERR(CODE[24]), STR_45(CODE[26]), STR_20(CODE[5]), STR_18(CODE[5]), 
		 -> STR_16(CODE[6]), STR_14(CODE[6]), STR_12(CODE[9]), STR_10(CODE[21]), 
		 -> STR_8(CODE[10]), BluetoothInitialSetup@buf(BANK0[50]), STR_4(CODE[4]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), CRLN(CODE[3]), ReceivedString(BANK2[255]), 

    StringAddEqual@Input	PTR unsigned char  size(2) Largest target is 255
		 -> ReceivedString(BANK2[255]), 

    GetNumber@result	PTR unsigned long  size(2) Largest target is 4
		 -> UseBluetooth@temp(BANK4[4]), UseBluetooth@EnteredNEC(BANK4[4]), 

    GetNumber@This	PTR unsigned char  size(2) Largest target is 255
		 -> ReceivedString(BANK2[255]), 

    lowercaseChar@Input	PTR unsigned char  size(2) Largest target is 1
		 -> GetNumber@tempThis(BANK0[1]), StringContainsCaseInsensitive@tempThat(BANK0[1]), StringContainsCaseInsensitive@tempThis(BANK0[1]), StringMatchCaseInsensitive@tempThat(BANK0[1]), 
		 -> StringMatchCaseInsensitive@tempThis(BANK0[1]), 

    StringContainsCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_44(CODE[13]), STR_26(CODE[4]), STR_24(CODE[6]), STR_22(CODE[6]), 

    StringContainsCaseInsensitive@This	PTR unsigned char  size(2) Largest target is 255
		 -> ReceivedString(BANK2[255]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_21(CODE[4]), STR_17(CODE[4]), STR_15(CODE[4]), STR_13(CODE[4]), 
		 -> STR_11(CODE[4]), STR_9(CODE[4]), STR_7(CODE[4]), BluetoothInitialSetup@buf(BANK0[50]), 
		 -> STR_5(CODE[4]), 

    StringContains@This	PTR unsigned char  size(2) Largest target is 255
		 -> CommandString(BANK3[255]), 

    StringMatchCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 21
		 -> Conf2_ChannelH_3_OFF_STR(CODE[21]), Conf2_ChannelH_3_ON_STR(CODE[20]), Conf2_ChannelH_2_OFF_STR(CODE[21]), Conf2_ChannelH_2_ON_STR(CODE[20]), 
		 -> Conf2_ChannelH_1_OFF_STR(CODE[21]), Conf2_ChannelH_1_ON_STR(CODE[20]), Conf2_ChannelD_OFF_STR(CODE[19]), Conf2_ChannelD_ON_STR(CODE[18]), 
		 -> Conf2_ChannelB_OFF_STR(CODE[19]), Conf2_ChannelB_ON_STR(CODE[18]), Conf1_ChannelF_STR(CODE[15]), Conf1_ChannelE_STR(CODE[15]), 
		 -> Conf1_ChannelD_STR(CODE[15]), 

    StringMatchCaseInsensitive@This	PTR unsigned char  size(2) Largest target is 255
		 -> ReceivedString(BANK2[255]), 

    StringMatch@That	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_54(CODE[4]), 

    StringMatch@This	PTR unsigned char  size(2) Largest target is 255
		 -> ReceivedString(BANK2[255]), 

    BufferCopy@from	PTR unsigned char  size(2) Largest target is 100
		 -> StringAddEqual@temp(BANK1[100]), 

    BufferCopy@to	PTR unsigned char  size(2) Largest target is 255
		 -> ReceivedString(BANK2[255]), 

    cleanBuffer16bit@data	PTR unsigned int  size(2) Largest target is 144
		 -> IRRawCode(BANK4[144]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 255
		 -> UseBluetooth@buf(BANK4[50]), BluetoothInitialSetup@buf(BANK0[50]), CommandString(BANK3[255]), StringAddEqual@temp(BANK1[100]), 
		 -> ReceivedString(BANK2[255]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_IRrawToNEC

Critical Paths under _low_isr in COMRAM

    _low_isr->i1_cleanBuffer
    i1_UARTstringCRLN->i1_UARTstring
    i1_UARTstring->i1_UARTchar
    _EraseScreen->i1_UARTchar

Critical Paths under _main in BANK0

    _SendRF_Channel->_SendRF_wait
    _ReadCodeButtons->_delayUS
    _UseBluetooth->_sprintf
    _UARTstringCRLN->_UARTstring
    _UARTcommandMenu->_UARTstring
    _StringMatchCaseInsensitive->_lowercaseChar
    _StringContainsCaseInsensitive->_lowercaseChar
    _StringAddEqual->_BufferCopy
    _BufferCopy->_cleanBuffer
    _SendRF_wait->_SendRF
    _SendNEC_wait->_SendNEC_bytes
    _SendNEC_bytes->_Reverse_4Byte
    _GetNumber->___lmul
    _EncodeNEC->_Reverse_Byte
    _DecodeNEC->_Reverse_Byte
    _ReadVoltage->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___ftdiv
    ___ftdiv->___lwtoft
    _InternalADC_Read->_delayUS
    _SyncEEPROMToGlobal->_GetEEPROM
    _GetEEPROM->_GetMemoryLong
    _InitUART->_Round
    ___lltoft->___ftpack
    _Round->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftpack
    ___altoft->___ftpack
    _InitIR->_cleanBuffer16bit
    _InitBluetooth->_BluetoothInitialSetup
    _BluetoothInitialSetup->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    _EnterCommandMode->_delayUS
    _UARTstring->_UARTchar
    _ResetBlue->_delayUS
    _SyncGlobalToEEPROM->_SetEEPROM
    _SetEEPROM->_SetMemoryLong
    _SetMemoryLong->_GetMemoryLong
    _GetMemoryLong->_ReadEEPROM_1Byte
    _SetMemoryChar->_GetMemoryChar
    _GetMemoryChar->_ReadEEPROM_1Byte

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _UseBluetooth->_StringAddEqual
    _Init_System->_SyncEEPROMToGlobal
    _SyncEEPROMToGlobal->_GetEEPROM
    _SyncGlobalToEEPROM->_SetEEPROM

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_UseBluetooth

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  124291
                                            116 BANK0      1     1      0
                _ConfigureOscillator
                            _InitApp
                        _Init_System
                        _ReadVoltage
                           _UARTchar
                         _UARTstring
                       _UseBluetooth
                          _UseIRCode
                             ___ftge
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     348
                                             18 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _UseIRCode                                            8     2      6   16900
                                             75 BANK0      8     2      6
                          _DecodeNEC
                         _LEDTimerON
                    _ReadCodeButtons
                          _ReadIRpin
                     _ReadPushButton
                     _SendRF_Channel
                 _SyncGlobalToEEPROM
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SendRF_Channel                                       1     1      0    7584
                                             31 BANK0      1     1      0
                        _SendRF_wait
 ---------------------------------------------------------------------------------
 (2) _ReadPushButton                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadCodeButtons                                      1     1      0    1674
                                             27 BANK0      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _LEDTimerON                                           0     0      0       0
                        _ResetTimer1
 ---------------------------------------------------------------------------------
 (3) _ResetTimer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UseBluetooth                                        62    62      0   45000
                                              0 BANK4     62    62      0
                          _DecodeNEC
                          _EncodeNEC
                          _GetNumber
                       _SendNEC_wait
                        _SendRF_wait
                     _StringAddEqual
      _StringContainsCaseInsensitive
                        _StringMatch
         _StringMatchCaseInsensitive
                           _UARTchar
                    _UARTcommandMenu
                         _UARTstring
                     _UARTstringCRLN
                        _cleanBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _UARTstringCRLN                                       2     0      2    4534
                                             21 BANK0      2     0      2
                           _UARTchar
                         _UARTstring
 ---------------------------------------------------------------------------------
 (2) _UARTcommandMenu                                     11     7      4    4516
                                             21 BANK0     11     7      4
                           _UARTchar
                         _UARTstring
 ---------------------------------------------------------------------------------
 (2) _StringMatchCaseInsensitive                           6     2      4    2423
                                             21 BANK0      6     2      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _StringMatch                                          5     1      4     291
                                             18 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringContainsCaseInsensitive                        7     3      4    1290
                                             21 BANK0      7     3      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _StringAddEqual                                     107   105      2    6455
                                             33 BANK0      4     2      2
                                              0 BANK1    103   103      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _BufferCopy                                           7     1      6    2994
                                             26 BANK0      7     1      6
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _SendRF_wait                                          5     0      5    7553
                                             26 BANK0      5     0      5
                          _ReadIRpin
                             _SendRF
 ---------------------------------------------------------------------------------
 (4) _SendRF                                               8     3      5     669
                                             18 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _SendNEC_wait                                         6     1      5    3465
                                             39 BANK0      6     1      5
                   _CheckReceivingIR
                          _ReadIRpin
                      _SendNEC_bytes
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _SendNEC_bytes                                        5     0      5    1441
                                             34 BANK0      5     0      5
                      _Reverse_4Byte
 ---------------------------------------------------------------------------------
 (4) _Reverse_4Byte                                       16    12      4    1187
                                             18 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (3) _CheckReceivingIR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetNumber                                           20    15      5    3029
                                             30 BANK0     20    15      5
                           _IsLetter
                             ___lmul
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (3) _lowercaseChar                                        3     1      2     418
                                             18 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     356
                                             18 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _IsLetter                                             1     1      0      62
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EncodeNEC                                           41    37      4     631
                                             22 BANK0     41    37      4
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (2) _DecodeNEC                                           15     7      8    1275
                                             22 BANK0     15     7      8
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (3) _Reverse_Byte                                         4     4      0     306
                                             18 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ReadVoltage                                          8     5      3   10032
                                             59 BANK0      8     5      3
                   _InternalADC_Read
                  _VoltageDividerOFF
                   _VoltageDividerON
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    1860
                                             26 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2297
                                             44 BANK0     15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2251
                                             29 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _VoltageDividerON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _VoltageDividerOFF                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InternalADC_Read                                     6     4      2    1885
                                             27 BANK0      6     4      2
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0   45485
                            _InitADC
                      _InitBluetooth
                             _InitIR
                         _InitTimers
                           _InitUART
                 _SyncEEPROMToGlobal
                           _UARTchar
                         _UARTstring
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _SyncEEPROMToGlobal                                  45    45      0    2963
                                             45 BANK1     45    45      0
                          _GetEEPROM
 ---------------------------------------------------------------------------------
 (3) _GetEEPROM                                           90    45     45    1535
                                             54 BANK0     45     0     45
                                              0 BANK1     45    45      0
                      _GetMemoryChar
                      _GetMemoryLong
 ---------------------------------------------------------------------------------
 (2) _InitUART                                            18    14      4    8767
                                             60 BANK0     18    14      4
                   _Local_CloseUSART
                          _OpenUSART
                              _Round
                            ___fttol
                            ___lldiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    1907
                                             26 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _Round                                                7     4      3    5323
                                             53 BANK0      7     4      3
                           ___altoft
                            ___ftadd
                            ___fttol
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     358
                                             38 BANK0     15    11      4
                            ___ftadd (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    2891
                                             26 BANK0     12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    1976
                                             26 BANK0     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1785
                                             18 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     273
                                             18 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _Local_CloseUSART                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimers                                           0     0      0       0
                         _InitTimer1
                         _InitTimer2
                         _InitTimer3
 ---------------------------------------------------------------------------------
 (3) _InitTimer3                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitIR                                               0     0      0     197
                         _InitTimer0
                          _ReadIRpin
                        _ResetTimer0
                   _cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (3) _cleanBuffer16bit                                     8     4      4     197
                                             18 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _ResetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ReadIRpin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitBluetooth                                        0     0      0   28731
                _BluetoothConfigured
              _BluetoothInitialSetup
                          _ResetBlue
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _BluetoothInitialSetup                               51    51      0   20444
                                             65 BANK0     51    51      0
                   _EnterCommandMode
                     _StringContains
                         _UARTstring
                        _cleanBuffer
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             34    22     12    3360
                                             40 BANK0     25    13     12
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     362
                                             31 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     631
                                             18 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _EnterCommandMode                                     1     1      0    9148
                                             27 BANK0      1     1      0
                      _BlueConnected
                          _ResetBlue
                     _StringContains
                         _UARTstring
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _cleanBuffer                                          8     4      4    2403
                                             18 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _UARTstring                                           2     0      2    2362
                                             19 BANK0      2     0      2
                           _UARTchar
 ---------------------------------------------------------------------------------
 (4) _UARTchar                                             1     1      0      62
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _StringContains                                       6     2      4    1090
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _ResetBlue                                            0     0      0    1628
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _delayUS                                              9     5      4    1628
                                             18 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (5) _BlueConnected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BluetoothConfigured                                  0     0      0    4256
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (2) _SyncGlobalToEEPROM                                   0     0      0    4256
                          _SetEEPROM
 ---------------------------------------------------------------------------------
 (3) _SetEEPROM                                           53     4     49    4256
                                             71 BANK0      4     4      0
                                              0 BANK1     49     0     49
                      _SetMemoryChar
                      _SetMemoryLong
 ---------------------------------------------------------------------------------
 (4) _SetMemoryLong                                       17    12      5    2289
                                             54 BANK0     17    12      5
                      _GetMemoryLong
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _GetMemoryLong                                       33    29      4     848
                                             21 BANK0     33    29      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (4) _SetMemoryChar                                        3     2      1    1670
                                             27 BANK0      3     2      1
                      _GetMemoryChar
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _WriteEEPROM_1Byte                                    4     1      3     831
                                             18 BANK0      4     1      3
                      _EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (6) _EEPROM_UNLOCK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _GetMemoryChar                                        6     2      4     616
                                             21 BANK0      6     2      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (6) _ReadEEPROM_1Byte                                     3     1      2     551
                                             18 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
                           _ResetADC
 ---------------------------------------------------------------------------------
 (3) _ResetADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                             18    18      0    1412
                                              8 COMRAM    18    18      0
                        _EraseScreen
                        _IsCharacter
                          _ReadUSART
                    i1_BlueConnected
                         i1_UARTchar
                       i1_UARTstring
                   i1_UARTstringCRLN
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (10) i1_cleanBuffer                                       8     4      4     203
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (10) i1_UARTstringCRLN                                    2     0      2     429
                                              3 COMRAM     2     0      2
                         i1_UARTchar
                       i1_UARTstring
 ---------------------------------------------------------------------------------
 (11) i1_UARTstring                                        2     0      2     267
                                              1 COMRAM     2     0      2
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (10) i1_BlueConnected                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ReadUSART                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _IsCharacter                                         1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EraseScreen                                         2     2      0     130
                                              1 COMRAM     2     2      0
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (12) i1_UARTchar                                          1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _high_isr                                           21    21      0    1767
                                             40 COMRAM     3     3      0
                                              0 BANK0     18    18      0
                         _IRrawToNEC
                        _ResetTimer3
                        i2_ReadIRpin
                      i2_ResetTimer0
 ---------------------------------------------------------------------------------
 (14) i2_ResetTimer0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_ReadIRpin                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _ResetTimer3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _IRrawToNEC                                         14     9      5    1541
                                             26 COMRAM    14     9      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _Init_System
     _InitADC
       _ResetADC
     _InitBluetooth
       _BluetoothConfigured
         _SyncGlobalToEEPROM
           _SetEEPROM
             _SetMemoryChar
               _GetMemoryChar
                 _ReadEEPROM_1Byte
               _WriteEEPROM_1Byte
                 _EEPROM_UNLOCK
             _SetMemoryLong
               _GetMemoryLong
                 _ReadEEPROM_1Byte
               _WriteEEPROM_1Byte
                 _EEPROM_UNLOCK
       _BluetoothInitialSetup
         _EnterCommandMode
           _BlueConnected
           _ResetBlue
             _delayUS
           _StringContains
           _UARTstring
             _UARTchar
           _cleanBuffer
           _delayUS
         _StringContains
         _UARTstring
           _UARTchar
         _cleanBuffer
         _delayUS
         _sprintf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
       _ResetBlue
         _delayUS
       _cleanBuffer
     _InitIR
       _InitTimer0
       _ReadIRpin
       _ResetTimer0
       _cleanBuffer16bit
     _InitTimers
       _InitTimer1
       _InitTimer2
       _InitTimer3
     _InitUART
       _Local_CloseUSART
       _OpenUSART
       _Round
         ___altoft
           ___ftpack
         ___ftadd
           ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___lldiv
       ___lltoft
         ___ftpack
     _SyncEEPROMToGlobal
       _GetEEPROM
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
     _UARTchar
     _UARTstring
       _UARTchar
     _cleanBuffer
   _ReadVoltage
     _InternalADC_Read
       _delayUS
     _VoltageDividerOFF
     _VoltageDividerON
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _delayUS
   _UARTchar
   _UARTstring
     _UARTchar
   _UseBluetooth
     _DecodeNEC
       _Reverse_Byte
     _EncodeNEC
       _Reverse_Byte
     _GetNumber
       _IsLetter
       ___lmul
       _lowercaseChar
     _SendNEC_wait
       _CheckReceivingIR
       _ReadIRpin
       _SendNEC_bytes
         _Reverse_4Byte
       _delayUS
     _SendRF_wait
       _ReadIRpin
       _SendRF
     _StringAddEqual
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _StringContainsCaseInsensitive
       _lowercaseChar
     _StringMatch
     _StringMatchCaseInsensitive
       _lowercaseChar
     _UARTchar
     _UARTcommandMenu
       _UARTchar
       _UARTstring
         _UARTchar
     _UARTstring
       _UARTchar
     _UARTstringCRLN
       _UARTchar
       _UARTstring
         _UARTchar
     _cleanBuffer
     _sprintf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
   _UseIRCode
     _DecodeNEC
       _Reverse_Byte
     _LEDTimerON
       _ResetTimer1
     _ReadCodeButtons
       _delayUS
     _ReadIRpin
     _ReadPushButton
     _SendRF_Channel
       _SendRF_wait
         _ReadIRpin
         _SendRF
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _delayUS
   ___ftge
   _cleanBuffer
   _delayUS

 _low_isr (ROOT)
   _EraseScreen
     i1_UARTchar
   _IsCharacter
   _ReadUSART
   i1_BlueConnected
   i1_UARTchar
   i1_UARTstring
     i1_UARTchar
   i1_UARTstringCRLN
     i1_UARTchar
     i1_UARTstring
       i1_UARTchar
   i1_cleanBuffer

 _high_isr (ROOT)
   _IRrawToNEC
   _ResetTimer3
   i2_ReadIRpin
   i2_ResetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100     3E      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     67      DA       7       85.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     75      8E       5       88.8%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2B      42       1       69.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     476      32        0.0%
DATA                 0      0     476       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Apr 08 11:54:34 2015

                       BufferCopy@shift 007F                      UARTstringCRLN@data 0075  
                __end_of_Conf1_ChannelD FB6A                  __end_of_Conf1_ChannelE FB76  
                __end_of_Conf1_ChannelF FB82                            ___altoft@exp 0082  
               __size_of_StringContains 00B2                           ??_EraseScreen 0002  
                           _IRcodePlace 003F                           ___altoft@sign 0083  
                  ?_BluetoothConfigured 0001                                      _SN 00E9  
                   ?_SyncGlobalToEEPROM 0001                                      bsr 000FE0  
                          __CFG_CP0$OFF 000000                            __CFG_CP1$OFF 000000  
                          __CFG_CP2$OFF 000000                            __CFG_CP3$OFF 000000  
                          ___ftadd@exp1 0085                            ___ftadd@exp2 0084  
                           ?_LEDTimerON 0001                      lowercaseChar@Input 0072  
                          ___ftadd@sign 0083                              _SYNTAX_ERR F9B4  
                                   l141 5662                                     l142 5652  
                                   l316 36B6                                     l601 5858  
                                   l614 57E4                                     l391 51E0  
                                   l608 5AC2                                     l392 51E2  
                                   l385 51AC   StringContainsCaseInsensitive@tempThat 007B  
                                   l397 5A60                                     l389 51D0  
                                   l489 4D56   StringContainsCaseInsensitive@tempThis 007A  
                          __CFG_CPB$OFF 000000                                     _PR2 000FCB  
                          __CFG_CPD$OFF 000000                              _IRrawToNEC 2BB4  
                         _IRbitPosition 003E                     __end_of_IsCharacter 5A9E  
                          __CFG_BORV$27 000000                                     prod 000FF3  
                                   wreg 000FE8                              _IRsendCode 002C  
                            _IRsendFlag 00DF                           _InitBluetooth 55E8  
                          __CFG_LVP$OFF 000000                            ___ftdiv@cntr 0086  
                          ___ftdiv@sign 008B                                    l2032 329E  
                                  l2034 32C8                                    l1250 56DE  
                                  l2043 33AC                                    l2052 33D6  
                                  l2028 3264                                    l1420 0FBC  
                                  l1430 12C4                                    l2135 47F8  
                                  l2063 3BD6                                    l2145 4CD8  
                                  l1458 1584                                    l1651 2908  
                                  l1398 2526                                    l1574 441A  
                                  l1647 2898                                    l6101 3340  
                                  l6111 338C                                    l6103 3350  
                                  l6113 339C                                    l6105 335C  
                                  l6055 4DB8                                    l6119 3402  
                                  l6071 3272                                    l6057 4DCA  
                                  l6129 3452                                    l6161 3CF2  
                                  l6083 32BE                                    l6171 3D30  
                                  l6139 3C4A                                    l5701 4018  
                                  l6093 3300                                    l6077 32AC  
                                  l6157 3CDE                                    l1999 40CE  
                                  l5711 40AE                                    l5703 4028  
                                  l6175 3D4E                                    l6167 3D10  
                                  l6193 548C                                    l6281 51B0  
                                  l6273 5198                                    l5713 40BE  
                                  l5705 405A                                    l6169 3D22  
                                  l5651 4AD0                                    l5627 4A42  
                                  l6099 3330                                    l6523 50FE  
                                  l5645 4AC6                                    l5653 4AD8  
                                  l6197 54B0                                    l6293 51D4  
                                  l6285 51BA                                    l6277 51A2  
                                  l6269 518C                                    l5725 40F8  
                                  l5709 407C                                    l6525 5110  
                                  l7309 3BE8                                    l7325 39C6  
                                  l9021 5A46                                    l5639 4AB2  
                                  l5719 40DA                                    l7343 3A36  
                                  l7319 398C                                    l9103 5054  
                                  l9007 44DA                                    l9031 4F7A  
                                  l9201 266C                                    l6289 51C4  
                                  l7273 3AF8                                    l7353 3A7A  
                                  l9009 44E0                                    l5683 5B7C  
                                  l7347 3A52                                    l7339 3A16  
                                  l9115 5B18                                    l9043 4FA2  
                                  l9051 4FC8                                    l9035 4F88  
                                  l7195 5B36                                    l9141 2434  
                                  l7357 3A96                                    l7349 3A5A  
                                  l9231 2784                                    l9215 26E2  
                                  l9151 24B0                                    l7279 3B32  
                                  l9129 5A80                                    l5697 4002  
                                  l9243 27F0                                    l7299 3B94  
                                  l8701 4772                                    l9173 2580  
                                  l8623 58E2                                    l8703 4784  
                                  l9271 522E                                    l9095 5006  
                                  l9255 5908                                    l8713 47E4  
                                  l8705 478E                                    l8721 4C62  
                                  l9601 2166                                    l9513 4C0C  
                                  l9441 52A6                                    l9433 526E  
                                  l8651 430E                                    l8723 4C74  
                                  l9187 25F6                                    l9267 5206  
                                  l9603 216E                                    l9443 52B4  
                                  l8661 550A                                    l8725 4C7E  
                                  l8901 292A                                    l8821 5B6E  
                                  l9613 2190                                    l9525 4C2A  
                                  l9453 52D8                                    l9437 52A2  
                                  l7941 456A                                    l8911 2968  
                                  l9631 224E                                    l9543 205A  
                                  l9535 2020                                    l9711 3724  
                                  l9519 4C20                                    l9527 4C32  
                                  l9471 4F20                                    l8809 5770  
                                  l8665 5538                                    l8657 54EA  
                                  l8729 4CC4                                    l8921 29B0  
                                  l8905 2954                                    l9641 2284  
                                  l9633 2256                                    l9625 2228  
                                  l9609 2182                                    l9561 20C4  
                                  l9545 2062                                    l9721 3754  
                                  l9705 36EA                                    l7937 4528  
                                  l8827 4684                                    l8915 29A2  
                                  l8907 295A                                    l9651 2304  
                                  l9635 225E                                    l9627 2230  
                                  l9555 2092                                    l9731 37B8  
                                  l9707 36F2                                    l9475 4F24  
                                  l9459 4ECE                                    l7947 45AE  
                                  l8685 50E2                                    l8669 5566  
                                  l8837 469A                                    l8925 29BE  
                                  l9661 2368                                    l9653 2358  
                                  l9573 20F8                                    l9549 206E  
                                  l9717 374A                                    l9493 4BA2  
                                  l9477 4F32                                    l8679 50AC  
                                  l8855 4722                                    l8943 2A36  
                                  l8919 29AA                                    l8935 2A00  
                                  l8871 283C                                    l9671 23AC  
                                  l9663 2370                                    l9583 2124  
                                  l9727 37B2                                    l9487 4F56  
                                  l9743 537A                                    l9831 56CA  
                                  l9903 319E                                    l8945 2A48  
                                  l8953 2B42                                    l8929 29F8  
                                  l8937 2A14                                    l8873 2846  
                                  l8865 281E                                    l8961 2B84  
                                  l9921 4B7C                                    l9913 4B16  
                                  l9577 2112                                    l9569 20D8  
                                  l9761 435C                                    l8947 2ACC  
                                  l8955 2B56                                    l8891 28E8  
                                  l8875 2850                                    l8963 2BA4  
                                  l9667 238E                                    l9675 23CA  
                                  l9755 4338                                    l9739 534C  
                                  l9835 56D6                                    l9827 56BE  
                                  l9851 2FC8                                    l9597 2150  
                                  l9933 4E60                                    l9693 3698  
                                  l9765 4368                                    l9749 431C  
                                  l9861 3026                                    l9845 2F5C  
                                  l8959 2B6A                                    l8887 28C0  
                                  l8879 285A                                    l9791 4D10  
                                  l9679 23E8                                    l9943 4E80  
                                  l9951 4E98                                    l8991 4460  
                                  l8983 443E                                    l9695 36BC  
                                  l9775 43D4                                    l9759 4354  
                                  l9871 3084                                    l9847 2F80  
                                  STR_1 FFFB                                    STR_2 FFFB  
                                  l9945 4E88                                    l9929 4E36  
                                  l8993 4468                                    l9689 365E  
                                  l9697 36C2                                    l9769 43B8  
                                  l9881 30E2                                    l9857 2FFC  
                                  l9849 2FA4                                    STR_3 FF57  
                                  STR_4 FFE3                                    l9795 4D1A  
                                  l9939 4E74                                    l9947 4E8E  
                                  l8979 442A                                    l9699 36DE  
                                  l9779 43F0                                    l9891 3140  
                                  l9867 305A                                    STR_5 FFEF  
                                  STR_6 FDA2                                    l8997 44A8  
                                  l9877 30B8                                    STR_7 FFF7  
                                  STR_8 FF9A                                    l9799 4D2C  
                                  l9887 3116                                    STR_9 FFF7  
                                  l9897 3174                    ??_SyncGlobalToEEPROM 00AB  
                                  _CRLN FB82                                    _LATA 000F89  
                                  _LATB 000F8A                                    _LATC 000F8B  
                                  u4810 4A72                                    u7301 3B0E  
                                  u4830 4AA8                                    u4817 4A68  
                                  u7331 3968                                    u4837 4A9E  
                                  u5661 3212                                    u5671 3230  
                                  u7351 39A2                                    u9200 4252  
                                  u7281 3AD4                                    u9205 4246  
                                  u9230 555A                                    u5871 3C26  
                                  u9240 5588                                    u5890 3C70  
                                  u9237 5550                                    u9405 0390  
                                  u9510 0832                                    u9247 557E  
                                  u5895 3C66                                    u9415 03EA  
                                  u9600 0BFE                                    u9520 089E  
                                  u9505 0714                                    u9425 0444  
                                  u9610 0C6A                                    u9530 090A  
                                  u9515 0826                                    u9435 049E  
                                  u9620 0CD6                                    u9540 0976  
                                  u9605 0BF2                                    u9525 0892  
                                  u9445 04F8                                    u9365 0228  
                                  u9630 0D42                                    u9550 09E2  
                                  u9615 0C5E                                    u9535 08FE  
                                  u9455 0552                                    u9375 0282  
                                  u9640 0DAE                                    u9560 0A4E  
                                  u9625 0CCA                                    u9545 096A  
                                  u9465 05AC                                    u9385 02DC  
                                  u9650 0E32                                    u9570 0ABA  
                                  u9635 0D36                                    u9555 09D6  
                                  u9475 0606                                    u9395 0336  
                                  u9580 0B26                                    u9661 573A  
                                  u9645 0DA2                                    u9565 0A42  
                                  u9485 0660                                    u9590 0B92  
                                  u9655 0E26                                    u9575 0AAE  
                                  u9495 06BA                                    u9585 0B1A  
                                  u9595 0B86                                    _TMR2 000FCC  
                                  _WPUB 000F7C                          ?i2_ResetTimer0 0001  
                                  _Sent 00ED              WriteEEPROM_1Byte@GIEstatus 0075  
             SetMemoryChar@AddressFirst 007B                                    _main 3EB0  
                          ___ftpack@arg 0072                            ___ftpack@exp 0075  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  indf0 000FEF                                    fsr0l 000FE9  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  fsr1l 000FE1                                    indf2 000FDF  
                                  fsr2l 000FD9                              _RFsendCode 0194  
                            _RFsendFlag 0039                                    pclat 000FFA  
                      i1_UARTstringCRLN 541A                             _RFcodePlace 0038  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 01E8                           __CFG_IESO$OFF 000000  
                      Reverse_Byte@This 0075                        Reverse_Byte@temp 0074  
                         __CFG_MCLRE$ON 000000                            ___ftmul@cntr 0099  
                        UARTstring@data 0073                             ?i1_UARTchar 0001  
                          ___param_bank 000010                            ___ftmul@sign 009A  
                       __end_of_InitADC 5AE2                         __end_of_InitApp 57BA  
 __end_of_StringContainsCaseInsensitive 4C46  __size_of_StringContainsCaseInsensitive 00AC  
         _StringContainsCaseInsensitive 4B9A                 __size_of_ReadPushButton 000E  
                 ??_BluetoothConfigured 00AB                            ___fttol@exp1 0094  
                         ??_Init_System 00D4                            ___fttol@lval 0090  
                  _Conf2_ChannelH_1_OFF FAD1                       IRrawToNEC@NECtemp 0022  
                  _Conf2_ChannelH_2_OFF FAF1                    _Conf2_ChannelH_3_OFF FB11  
                                 l10025 495C                                   l10027 4970  
                                 l10123 0F6E                                   l10133 0FDE  
                                 l10053 34F0                                   l10045 34C6  
                                 l10231 1598                                   l10207 1448  
                                 l10151 1118                                   l10143 108C  
                                 l10127 0FB4                                   l10119 0F28  
                                 l10225 1574                                   l10209 145A  
                                 l10073 3542                                   l10057 34FA  
                                 l10235 166C                                   l10171 1276  
                                 l10163 11EA                                   l10155 115E  
                                 l10147 10D2                                   l10139 1046  
                                 l10083 357A                                   l10067 3532  
                                 l10245 16F4                                   l10181 12E2  
                                 l10069 3538                                   l10085 35A8  
                                 l10255 172A                                   l10263 1786  
                                 l10175 12BC                                   l10167 1230  
                                 l10159 11A4                                   l10095 360E  
                                 l10351 3ED2                                   l10281 1818  
                                 l10099 3616                                   l10363 3F0C  
                                 l10347 3EC8                                   l10293 18A4  
                                 l10285 184C                                   l10373 3F6E  
                                 l10375 3F72                                   l10289 1878  
                                 l10379 3F9C                         __end_of_Version F9B4  
                         ??_ReadVoltage 009E                                   ?_main 0001  
                __size_ofi1_cleanBuffer 003E                                   _EEADR 000FA9  
                       __end_of___ftadd 347A                                   STR_10 FE44  
                                 STR_11 FFF7                                   STR_20 FFD9  
                                 STR_12 FFAE                                   STR_13 FFF7  
                                 STR_21 FFF3                                   STR_22 FFCD  
                                 STR_14 FFC7                                   STR_30 FC96  
                                 STR_15 FFF7                                   STR_31 FEE0  
                                 STR_23 FD32                                   STR_16 FFC7  
                                 STR_32 FF29                                   STR_24 FFD3  
                                 STR_40 FFB7                                   STR_33 FF18  
                                 STR_17 FFF7                                   STR_41 FECE  
                                 STR_25 FD4F                                   STR_42 FF91  
                                 STR_26 FFEB                                   STR_18 FFDE  
                                 STR_50 FF47                                   STR_34 FC15  
                                 STR_51 FFB7                                   STR_27 FF25  
                                 STR_43 FF03                                   STR_19 FD6C  
                                 STR_35 FD13                                   STR_36 FFC0  
                                 STR_44 FF82                                   STR_52 FF67  
                                 STR_28 FF14                                   STR_60 FE82  
                                 STR_61 FE95                                   STR_37 FE59  
                                 STR_53 FE17                                   STR_29 FDD2  
                                 STR_45 FD88                                   STR_54 FFE7  
                                 STR_38 FF8F                                   STR_62 FEA8  
                                 STR_70 FC56                                   STR_46 FBC5  
                                 STR_63 FE2E                                   STR_39 FDE9  
                                 STR_47 FDBA                                   STR_71 FCF4  
                                 STR_55 FB85                                   STR_56 FF36  
                                 STR_64 FE00                                   STR_72 FC76  
                                 STR_48 FBF2                                   STR_49 FFC0  
                                 STR_57 FFE7                                   STR_73 FEF2  
                                 STR_65 FEBB                                   STR_58 FFA4  
                                 STR_66 FE6E                                   STR_59 FF75  
                                 STR_67 FCB6                                   STR_68 FC36  
                                 STR_69 FCD5                         __end_of___ftdiv 3C10  
                                 _ANSEL 000F7E                         __end_of___lldiv 480A  
                                 u10021 58A2                                   u10015 49B8  
                                 u11201 34B2                         __end_of___ftmul 3ABE  
                                 u11070 4B5C                                   u10281 45BE  
                                 u10290 418C                                   u11075 4B50  
                                 u10295 4180                         __end_of___llmod 4CEA  
                       __end_of___fttol 3D62                                   u10665 2288  
                                 u10850 536E                                   u10860 539C  
               ReadEEPROM_1Byte@address 0072                                   u10857 5364  
                                 u10867 5392                                   i1l409 5AEE  
                                 i1l397 5AAC                     __end_of_EraseScreen 5A2E  
                                 i1l973 01A0                                   i1l974 019C  
                                 i1l958 0182                                   i2l911 1DD2  
                                 i2l831 1BA0                                   i2l904 1DAA  
                                 i2l832 1B9A                                   i2l905 1DA0  
                                 i2l833 1B90                                   i2l842 1B94  
                                 i2l843 1B9C                                   i2l844 1FB2  
                                 i2l861 1C7A                                   i2l845 1BE6  
                                 i2l837 1B78                                   i2l951 1FAE  
                                 i2l848 1F8C                                   i2l885 1D1E  
                                 _RCREG 000FAE                                   _RCSTA 000FAB  
                                 _TMR0H 000FD7                                   _TMR1H 000FCF  
                                 _TMR0L 000FD6                                   _TMR3H 000FB3  
                                 _TMR1L 000FCE                                   _TMR3L 000FB2  
                                 _SPBRG 000FAF                              _BufferCopy 4F5C  
                                 _PORTA 000F80                                   _PORTB 000F81  
                                 _PORTC 000F82                                   _RF_IR 0040  
                          InitUART@Baud 009C                                   _IRbit 0031  
                                 _IRmod 00DE                                   _TXREG 000FAD  
                                 _TXSTA 000FAC                     _ConfigureOscillator 5BFE  
                       __end_of_delayUS 5694                           __CFG_PWRT$OFF 000000  
                      _InternalADC_Read 4CEA                           __CFG_WRT0$OFF 000000  
                         __CFG_WRT1$OFF 000000                           __CFG_WRT2$OFF 000000  
                   ___lmul@multiplicand 0076                           __CFG_WRT3$OFF 000000  
                     _NewReceivedString 00E0                            ___lltoft@exp 0082  
                        __CFG_EBTR0$OFF 000000                          __CFG_FCMEN$OFF 000000  
                        ?_InitBluetooth 0001                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                          __CFG_EBTR3$OFF 000000  
                            SendRF@Code 0072                            InitUART@temp 00AA  
                          _IRrawCodeNum 0033                                   _Round 53B4  
                         __CFG_WRTB$OFF 000000                   _BluetoothInitialSetup 2406  
              __end_of_Local_CloseUSART 5B4A                           __CFG_WRTC$OFF 000000  
                 __end_of_BlueConnected 5B82                           __CFG_WRTD$OFF 000000  
                      __end_of_UARTchar 5A6A                          __CFG_EBTRB$OFF 000000  
                       __end_of_dpowers F98B                              SendRF@size 0075  
                         ___ftpack@sign 0076                                   main@i 00D4  
                       __end_of_low_isr 01E8                                   tablat 000FF5  
                      _RF_IR_Postscaler 0041                                   plusw0 000FEB  
                                 plusw2 000FDB                             ?_UARTstring 0073  
               InternalADC_Read@channel 0080                                   status 000FD8  
                       __end_of_sprintf 2BB4                          __CFG_HFOFST$ON 000000  
                  __size_of_cleanBuffer 005A                     __size_of_LEDTimerON 000C  
                 __end_of_GetMemoryChar 5A06                    ?_ConfigureOscillator 0001  
                 __end_of_GetMemoryLong 3952                           ??_SendRF_wait 007F  
                    StringContains@That 0074                      StringContains@This 0072  
                          __end_of_CRLN FB85                           high_isr@IRpin 0029  
                       __initialization 480A                      StringAddEqual@temp 0100  
                 __end_of_EEPROM_UNLOCK 5ACC                        __end_of_IsLetter 5A4C  
                            _InitTimer0 5B1E                              _InitTimer1 5B58  
                    _Conf1_ChannelD_STR FB31                              _InitTimer2 5B4A  
                            _InitTimer3 5BC2                      __size_of_GetEEPROM 003A  
                         high_isr@Time0 002A                      _Conf1_ChannelE_STR FB40  
                    _Conf1_ChannelF_STR FB4F        __end_of_Conf2_ChannelH_1_OFF_STR F9E1  
                            _InitTimers 5AF8                            _IRrepeatflag 0035  
                    __size_of_DecodeNEC 00AE                            __end_of_main 3FE8  
                 __end_of_Reverse_4Byte 0E6A                        ??_UARTstringCRLN 0077  
                      __end_of_InitUART 421A        __end_of_Conf2_ChannelH_2_OFF_STR F9F6  
                        GetNumber@count 008B        __end_of_Conf2_ChannelH_3_OFF_STR FA0B  
                           _IsCharacter 5A86                                  ??_main 00D4  
                         ___fttol@sign1 008F                        __end_of_ResetADC 5B90  
                     GetNumber@negative 008A                           __activetblptr 000002  
                    SendRF@RepeatAmount 0076                             ?_IRrawToNEC 001B  
                    __size_of_GetNumber 0418                      __size_of_EncodeNEC 014E  
                   __end_of_Init_System 534A                   _Conf2_ChannelB_ON_STR FA6D  
                         ?_SendNEC_wait 0087                   _Conf2_ChannelD_ON_STR FA7F  
                __size_of_SendNEC_bytes 008A                                  ?_Round 0095  
                   __end_of_ReadVoltage 4984                       GetNumber@tempThis 008D  
                            UseIRCode@i 00B2                          _StringAddEqual 3630  
                                _ADCON0 000FC2                                  _ADCON1 000FC1  
                                _ADCON2 000FC0                     __size_ofi1_UARTchar 0018  
                      __end_of___altoft 4E2E                        ___llmod@dividend 007F  
                                _ADRESH 000FC4                                  _EEADRH 000FAA  
                                _ADRESL 000FC3                                  _EEDATA 000FA8  
                                _EECON2 000FA7                         ??i2_ResetTimer0 001B  
                      __end_of___ftpack 4108                                  _ANSELH 000F7F  
                     ?_VoltageDividerON 0001                   _Conf2_ChannelB_Status 00D8  
                         ??_ResetTimer0 0072                           ??_ResetTimer1 0072  
                         ??_ResetTimer3 001B                        __end_of___lltoft 5176  
                        __CFG_WDTEN$OFF 000000                                  i1l7741 5A98  
                                i1l7989 5B98                                  i2l7811 2C80  
                                i2l7805 2C56                                  i2l7911 2F06  
                                i2l7815 2C84                                  i1l9975 5592  
                                i2l7921 2F44                                  i2l7905 2F00  
                                i2l7841 2DA8                                  i2l7809 2C5A  
                                i1l9979 55BE                                  i2l7925 2F4A  
                                i2l7861 2E00                                  i2l7853 2DBC  
                                i2l7845 2DAE                                  i2l7837 2D70  
                                i2l7881 2E7E                                  i2l7929 2F50  
                                i2l7849 2DB4                                  i2l7785 2BD0  
                                i2l7891 2EA8                                  i2l7883 2E84  
                                i2l7869 2E22                                  i2l7789 2BD8  
                                i2l7887 2E8A                                  i2l7799 2C16  
                                i2l7899 2EC6                                  i2l7979 5BA6  
                      __end_of___lwtoft 59DC                      __size_of_ReadUSART 0016  
                 _Conf2_ChannelD_Status 00D9                                  _IR_NEC 00E2  
                    __size_of_ReadIRpin 000E                                  _SPBRGH 000FB0  
                    ??_VoltageDividerON 0072                           i1_cleanBuffer 57FA  
                        SetMemoryLong@H 00A3                          SetMemoryLong@L 00A6  
                    __size_of_SetEEPROM 0086                               ??_InitADC 0072  
                             ??_InitApp 0072                   ??_ConfigureOscillator 0072  
                                _Global 0167                                  _InitIR 56E8  
                                _SendRF 4402                          __CFG_XINST$OFF 000000  
                       _UARTcommandMenu 4314                           InitUART@spbrg 00A7  
                      __end_of_high_isr 1FEE                         _ReadCodeButtons 5694  
                    __size_of_OpenUSART 007C                          _StringContains 4A3A  
                                ___ftge 44E6                                  ___lmul 51F2  
              SendNEC_wait@RepeatAmount 008B              __end_of_SyncEEPROMToGlobal 467C  
                             ??___ftadd 0080                          __CFG_STVREN$ON 000000  
                             ??___ftdiv 0083             ?_StringMatchCaseInsensitive 0075  
                             ??___lldiv 007A                               ??___ftmul 0092  
                           _EraseScreen 5A06                               ??___llmod 0087  
                             ??___fttol 008A                       cleanBuffer16bit@i 0079  
                    __size_of_ResetBlue 0032                     __end_of_SendRF_wait 5920  
                                clear_0 4810                                  clear_1 481E  
                                clear_2 4832                                  clear_3 4844  
                                clear_4 4850                                  clear_5 485C  
                             ??_delayUS 0076                      __size_of_UseIRCode 01B6  
                 ___ftmul@f3_as_product 0096                     __size_of_UARTstring 005A  
                       ??_InitBluetooth 00D4                             ?_BufferCopy 007A  
                     ?_cleanBuffer16bit 0072                            __pdataCOMRAM 003E  
                        ??_SendNEC_wait 008C                  ?_BluetoothInitialSetup 0001  
                __end_of_StringAddEqual 37E2                            __mediumconst F962  
                        EncodeNEC@temp1 008E                          EncodeNEC@temp2 0092  
                        EncodeNEC@temp3 0096                          EncodeNEC@temp4 009A  
                          ?i2_ReadIRpin 0001                               ??_low_isr 0009  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                      ??_cleanBuffer16bit 0076  
                    IRrawToNEC@StartBit 0028                  SyncEEPROMToGlobal@Temp 012D  
                      _CommandStringPos 0030                       __end_of_GetEEPROM 58AE  
                 __end_of_lowercaseChar 59B0                       __end_of_DecodeNEC 4B9A  
                             ??_sprintf 0094                         __CFG_FOSC$HSPLL 000000  
                        ?i1_cleanBuffer 0001                    UARTcommandMenu@place 007F  
                            __accesstop 0060                 __end_of__initialization 48C2  
                            ___altoft@c 007A                              Round@input 0095  
                       __CFG_PBADEN$OFF 000000                              ___ftadd@f1 007A  
                            ___ftadd@f2 007D                              ___ftge@ff1 0072  
                            ___ftge@ff2 0075                           ___rparam_used 000001  
                   StringAddEqual@Input 0081                              ___ftdiv@f1 007D  
                            ___ftdiv@f2 0080                              ___ftdiv@f3 0087  
                   StringContains@begin 0077                       __end_of_GetNumber 2406  
                __end_of_StringContains 4AEC                       __end_of_EncodeNEC 3EB0  
             __size_of_ReadEEPROM_1Byte 003C                     __end_of_ResetTimer0 5BD6  
                   __end_of_ResetTimer1 5BC2                     __end_of_ResetTimer3 5BEA  
                   __size_of_IRrawToNEC 03A2                              ___ftmul@f1 008C  
                            ___ftmul@f2 008F                           _SendNEC_bytes 4FE6  
                            ___fttol@f1 0086                          __pcstackCOMRAM 0001  
                           ?_InitTimer0 0001                             ?_InitTimer1 0001  
                           ?_InitTimer2 0001                             ?_InitTimer3 0001  
                           ?_InitTimers 0001                      _Conf2_ChannelB_OFF FA91  
                    _Conf2_ChannelD_OFF FAB1                           __end_of_Round 541A  
                        _ReadPushButton 5B2E                            __pidataBANK0 5BF5  
                          __pidataBANK1 5920               __size_of_EnterCommandMode 00C8  
                            ___lltoft@c 007A                               ?_UARTchar 0001  
       __end_of_Conf2_ChannelH_1_ON_STR FA1F                             _Init_System 52DE  
       __end_of_Conf2_ChannelH_2_ON_STR FA33         __end_of_Conf2_ChannelH_3_ON_STR FA47  
              _Conf2_ChannelH_1_OFF_STR F9CC                       __end_of_ReadUSART 5AF8  
                     __end_of_ReadIRpin 5B74                           ?i1_UARTstring 0002  
                          ??_LEDTimerON 0072                              ___lwtoft@c 007A  
             __size_of_CheckReceivingIR 0012                             _ReadVoltage 48CC  
              _Conf2_ChannelH_2_OFF_STR F9E1                       __end_of_SetEEPROM 50F6  
                       ReadVoltage@temp 00A1                __end_ofi1_UARTstringCRLN 547E  
              _Conf2_ChannelH_3_OFF_STR F9F6                         GetNumber@result 0081  
                       ?_StringAddEqual 0081                                 ??_Round 0098  
                         ReadUSART@data 0001                       __end_of_OpenUSART 51F2  
                             ?_IsLetter 0001                  __size_of_SetMemoryChar 003A  
                            __pbssBANK0 00D5                              __pbssBANK1 0167  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                  __size_of_SetMemoryLong 00FA  
                             ?_InitUART 009C                       __end_of_ResetBlue 5984  
               __end_of_UARTcommandMenu 4402                  _Conf2_ChannelB_OFF_STR FA47  
                     __end_of_UseIRCode 3630                      ReadVoltage@voltage 009E  
               __end_of_ReadCodeButtons 56E8                             _ReceivingIR 0042  
                         ??_StringMatch 0076                  _Conf2_ChannelD_OFF_STR FA5A  
              __size_ofi1_BlueConnected 000E                   WriteEEPROM_1Byte@data 0074  
                             ?_ResetADC 0001                      __end_of_LEDTimerON 5BB8  
                               ?_InitIR 0001                         ?_StringContains 0072  
                        ?_SendNEC_bytes 0082                  __end_of_ReadPushButton 5B3C  
              __end_of_InternalADC_Read 4D8C                     __size_of_BufferCopy 008A  
                               ?_SendRF 0072                             _SendRF_wait 58E8  
                          ??i1_UARTchar 0001                                 ?___ftge 0072  
                               ?___lmul 0072                           ?_Reverse_Byte 0001  
                            ??_UARTchar 0072                       _VoltageDividerOFF 5BFA  
                             ?___altoft 007A                          ___lmul@product 007A  
                        ??i1_UARTstring 0004                               ?___ftpack 0072  
                 EnterCommandMode@count 007B                   cleanBuffer16bit@count 0074  
                             ?___lltoft 007A                      ?_VoltageDividerOFF 0001  
             SendNEC_bytes@RepeatAmount 0086                               ?___lwtoft 007A  
                               i1l10301 5A14                                 i1l10305 5A1E  
                               i1l10331 541C                                 i1l10323 5804  
                               i1l10335 5448                                 i1l10327 581C  
                               i1l10901 017E                                 i1l10911 0198  
                               i1l10863 00B4                                 i1l10855 0094  
                               i1l10875 00F2                                 i1l10887 0130  
                               i1l10895 0162                                 i2l10601 1D24  
                               i2l10441 1B80                                 i2l10611 1D38  
                               i2l10507 1C6A                                 i2l10443 1B86  
                               i2l10605 1D30                                 i2l10533 1CA6  
                               i2l10517 1C84                                 i2l10701 1E0C  
                               i2l10461 1BDA                                 i2l10445 1B8C  
                               i2l10437 1B60                                 i2l10551 1CDC  
                               i2l10527 1C98                                 i2l10721 1E4A  
                               i2l10633 1D60                                 i2l10609 1D34  
                               i2l10731 1E6C                                 i2l10627 1D54  
                               i2l10619 1D46                                 i2l10571 1CF0  
                               i2l10547 1CD6                                 i2l10491 1C4E  
                               i2l10539 1CB2                                 i2l10821 1F82  
                               i2l10813 1F6E                                 i2l10717 1E3A  
                               i2l10645 1D74                                 i2l10815 1F76  
                               i2l10807 1F5E                                 i2l10751 1E9C  
                               i2l10743 1E8A                                 i2l10655 1D90  
                               i2l10639 1D6A                                 i2l10487 1C42  
                               i2l10647 1D7E                                 i2l10809 1F64  
                               i2l10745 1E90                                 i2l10753 1EA2  
                               i2l10825 1F88                                 i2l10673 1DC4  
                               i2l10665 1DB0                                 i2l10497 1C5A  
                               i2l10771 1EE2                                 i2l10579 1CFA  
                               i2l10499 1C5E                                 i2l10837 1FA2  
                               i2l10757 1EB8                                 i2l10685 1DF0  
                               i2l10589 1D0E                                 i2l10839 1FAA  
                               i2l10775 1EF2                                 i2l10679 1DDC  
                               i2l10793 1F3A                                 i2l10777 1F04  
                               i2l10769 1ED4                                 i2l10697 1E02  
                               i2l10789 1F20                        i1UARTstring@data 0002  
                         UseIRCode@Code 00AB                       _ReceivedStringPos 00E1  
                   ??_VoltageDividerOFF 0072                         SetMemoryLong@MH 00A4  
                       SetMemoryLong@ML 00A5                       ?_Local_CloseUSART 0001  
               BluetoothInitialSetup@ok 00D3                     __size_of_InitTimer0 0010  
                   __size_of_InitTimer1 000E                     __size_of_InitTimer2 000E  
                   __size_of_InitTimer3 000A                         ??i1_cleanBuffer 0005  
                            ??_IsLetter 0072                     __size_of_InitTimers 0014  
                             ?_high_isr 0001                      __end_ofi1_UARTchar 5AB6  
                    ??_Local_CloseUSART 0072             __size_of_SyncGlobalToEEPROM 0046  
                            ??_InitUART 00A0                             _ResetTimer0 5BCC  
                           _ResetTimer1 5BB8                             _ResetTimer3 5BE0  
   __size_of_StringMatchCaseInsensitive 0090                            ??_UARTstring 0075  
                               SendRF@i 0079                           ?_UseBluetooth 0001  
                               _InitADC 5ACC                                 _InitApp 5776  
                        UseBluetooth@ok 04C3                             low_isr@data 001A  
           __end_of_BluetoothConfigured 5A86                              ??_ResetADC 0072  
                        InitUART@config 00A9                                 __Hparam 0000  
                       ?_ReadPushButton 0001                         __size_of_InitIR 0048  
                               __Lparam 0000                    __end_of_SendNEC_wait 4ECC  
               __size_of_SendRF_Channel 02A6                         __size_of_SendRF 00E4  
                          SendRF@Config 0074               __end_of_VoltageDividerOFF 5BFE  
                     i1cleanBuffer@data 0001                          ??_Reverse_Byte 0072  
                               _Version F9AB                         __size_of___ftge 00CE  
                       __size_of___lmul 007A                                 ___ftadd 31FC  
                               ___ftdiv 3ABE                                 ___lldiv 4744  
                   __end_of_StringMatch 52DE                                 ___ftmul 3952  
                               ___llmod 4C46                                 ___fttol 3C10  
                         _SetMemoryChar 58AE                            ?_IsCharacter 0001  
                         _SetMemoryLong 421A                              ??___altoft 007E  
                               __pcinit 480A                                 _delayUS 563E  
                            ??___ftpack 0077                                 __ramtop 1000  
                            ??___lltoft 007E                                 __ptext0 3EB0  
                               __ptext1 44E6                                 __ptext2 347A  
                               __ptext3 2F56                                 __ptext4 5B2E  
                               __ptext5 5694                                 __ptext6 5BAC  
                               __ptext7 5BB8                                 __ptext8 0E6A  
                               __ptext9 534A                              ??___lwtoft 007D  
                             _T0CONbits 000FD5                       __end_of_hexpowers F9AB  
                             _T1CONbits 000FCD                       SetMemoryChar@Data 007D  
                               _dpowers F963                            ??_IRrawToNEC 0020  
                             _T2CONbits 000FCA                      __end_of_UARTstring 5590  
                     SetMemoryChar@Test 007C                               _T3CONbits 000FB1  
             GetMemoryLong@AddressFirst 0095                                 _low_isr 0018  
                          DecodeNEC@Nec 0076                           SetEEPROM@Temp 0100  
                         SetEEPROM@fail 00A7                           SetEEPROM@burn 012D  
                               _sprintf 2810                    __size_ofi2_ReadIRpin 000E  
                            ??_high_isr 0060                          __pintcode_body 1AA0  
                  end_of_initialization 48C2                        SendNEC_wait@code 0087  
                         ??_cleanBuffer 0076                             _ProductName 01A8  
                      ?_UARTcommandMenu 0075                          ??_UseBluetooth 00A1  
                             i1u1115_20 55B4                               i1u1115_27 55AA  
                             i1u1116_20 55E0                               i1u1116_27 55D6  
                             i1u1160_20 543E                               i1u1160_27 5434  
                             i1u1161_20 546A                               i1u1161_27 5460  
                         __Lmediumconst F962                                 int_func 1AA0  
                      ?_ReadCodeButtons 0001                         ??_SendNEC_bytes 0087  
                       ___lldiv@divisor 0076                   EraseScreen@characters 0002  
                    __end_of_SYNTAX_ERR F9CC                        _ReadEEPROM_1Byte 5838  
                       ___lldiv@counter 007E                      __end_of_IRrawToNEC 2F56  
                             _RCSTAbits 000FAB                                 postdec1 000FE5  
                               postdec2 000FDD                        _EnterCommandMode 467C  
                               postinc0 000FEE                                 postinc2 000FDE  
                        ?_SetMemoryChar 007B               __size_of_VoltageDividerON 0006  
                __size_of_BlueConnected 000E                            ?_EraseScreen 0001  
                        ?_SetMemoryLong 0096                       ??i1_BlueConnected 0001  
                             _IRRawCode 0400                 ??_BluetoothInitialSetup 00A1  
                     SetMemoryLong@Data 0096                        _CheckReceivingIR 5B0C  
                     SetMemoryLong@Test 009F                       GetMemoryLong@temp 008D  
                          ??_BufferCopy 0080                               _IRaddress 00E7  
                __size_of_GetMemoryChar 002A                               _TRISAbits 000F92  
                             _TRISBbits 000F93                      _SyncEEPROMToGlobal 45B4  
                             _TRISCbits 000F94                          BufferCopy@from 007A  
                __size_of_GetMemoryLong 0170                               _IRcodeBit 00DD  
                __size_of_EEPROM_UNLOCK 0016       StringContainsCaseInsensitive@That 0077  
     StringContainsCaseInsensitive@This 0075                               _IRcommand 00E8  
           __end_of_ConfigureOscillator 5C00                  __size_of_Reverse_4Byte 0C7E  
                             _RFcodeBit 0037                     ?_SyncEEPROMToGlobal 0001  
                 __end_ofi2_ResetTimer0 5BE0                               _GetEEPROM 5874  
                  __end_ofi1_UARTstring 55E8                               _DecodeNEC 4AEC  
                           ___ftdiv@exp 008A                               _TXSTAbits 000FAC  
             __size_of_cleanBuffer16bit 005E                             _StringMatch 526C  
                   UseBluetooth@timeout 04C2      __end_of_StringMatchCaseInsensitive 4F5C  
            _StringMatchCaseInsensitive 4ECC                     __end_of_cleanBuffer 5536  
                     _Timer1_Postscaler 003B                          _IRrepeatAmount 0034  
                    __end_of_BufferCopy 4FE6                             ___ftmul@exp 0095  
                          ??_InitTimer0 0072                            ??_InitTimer1 0072  
                          ??_InitTimer2 0072                            ??_InitTimer3 0072  
                        __end_of_InitIR 5730                            ??_InitTimers 0072  
            __size_of_VoltageDividerOFF 0004                          __end_of_SendRF 44E6  
                   _Conf2_ChannelH_1_ON FAE1                     _Conf2_ChannelH_2_ON FB01  
                   _Conf2_ChannelH_3_ON FB21                               _GetNumber 1FEE  
                             _EncodeNEC 3D62                          __end_of___ftge 45B4  
                          ?_Init_System 0001                          __end_of___lmul 526C  
                        _ReceivedString 0200                    ??_SyncEEPROMToGlobal 00C3  
                           _BAUDCONbits 000FB8                           __pidataCOMRAM 5BF0  
                      ??_StringAddEqual 0083                       __size_of_UARTchar 001E  
                          ?_ReadVoltage 009B                        IRrawToNEC@Invert 001F  
                     ?i1_UARTstringCRLN 0004                     start_initialization 480A  
                             _ReadUSART 5AE2                 __size_of_UARTstringCRLN 006A  
                     _Timer2_Postscaler 003C                               _ReadIRpin 5B66  
                 __end_of_InitBluetooth 563E                        UseBluetooth@temp 04C6  
                             _SetEEPROM 5070                           GetNumber@This 007E  
                    ??i1_UARTstringCRLN 0006                           _BlueConnected 5B74  
                         GetNumber@temp 008E                    __end_of_Reverse_Byte 4A3A  
                    __end_of_InitTimer0 5B2E                      __end_of_InitTimer1 5B66  
                    __end_of_InitTimer2 5B58                      __end_of_InitTimer3 5BCC  
                    __end_of_InitTimers 5B0C                        ??_StringContains 0076  
                            ?_GetEEPROM 0096                               _OpenUSART 5176  
                     __size_of_IsLetter 001E                   __size_of_SendNEC_wait 009E  
                            ?_DecodeNEC 0076                         ___llmod@divisor 0083  
                     __size_of_InitUART 0112                         ___llmod@counter 0087  
                             _ResetBlue 5952                               _Sendcount 003A  
                              ??_InitIR 007A                          _SendRF_Channel 2F56  
                          ?_SendRF_wait 007A                               _UseIRCode 347A  
                         _GetMemoryChar 59DC                                ??_SendRF 0077  
                     _Timer3_Postscaler 003D               StringAddEqual@firstnumber 0164  
                       ??_SetMemoryChar 007C                           _GetMemoryLong 37E2  
                     ?_InternalADC_Read 007B                         ??_SetMemoryLong 009B  
                              ??___ftge 0078                       __size_of_ResetADC 000E  
                              ??___lmul 007A                           _EEPROM_UNLOCK 5AB6  
    StringContainsCaseInsensitive@begin 0079                              ?_GetNumber 007E  
                    ??_InternalADC_Read 007D                              ?_EncodeNEC 0076  
                         _Reverse_4Byte 01EC      StringMatchCaseInsensitive@tempThat 007A  
    StringMatchCaseInsensitive@tempThis 0079                  __size_of_lowercaseChar 002C  
                           __pdataBANK0 00E9                             __pdataBANK1 01A8  
                      __CFG_LPT1OSC$OFF 000000                     UARTcommandMenu@Desc 0077  
                  GetNumber@CommaNumber 0080                WriteEEPROM_1Byte@address 0072  
                  __size_of_IsCharacter 0018                    __end_of_UseBluetooth 1AA0  
                     __size_of___altoft 00A2                       __size_of___ftpack 0120  
             SetMemoryLong@AddressFirst 009A                               Round@temp 0098  
                      cleanBuffer@count 0074                       __size_of___lltoft 0080  
                           __pbssCOMRAM 002C                              ?_ReadUSART 0001  
        ?_StringContainsCaseInsensitive 0075                       __size_of___lwtoft 002C  
                            ?_ReadIRpin 0001          __end_of_Conf2_ChannelB_OFF_STR FA5A  
                         __pcstackBANK0 0060                           __pcstackBANK1 0100  
                         __pcstackBANK4 0490                            _SendNEC_wait 4E2E  
                            ?_SetEEPROM 0100                       _Conf2_ChannelB_ON FAA1  
                     _Conf2_ChannelD_ON FAC1                          ?_BlueConnected 0001  
        __end_of_Conf2_ChannelD_OFF_STR FA6D          StringMatchCaseInsensitive@That 0077  
        StringMatchCaseInsensitive@This 0075                GetNumber@tempCommaNumber 0088  
               _Conf2_ChannelH_1_ON_STR FA0B                            ?_ResetTimer0 0001  
                          ?_ResetTimer1 0001                            ?_ResetTimer3 0001  
                           _cleanBuffer 54DC                 _Conf2_ChannelH_2_ON_STR FA1F  
                      ??_ReadPushButton 0072                              ?_OpenUSART 0072  
               _Conf2_ChannelH_3_ON_STR FA33                       __size_of_high_isr 1FE6  
                           sprintf@flag 009F                             sprintf@prec 0097  
                __end_of_SendRF_Channel 31FC                                ?_InitADC 0001  
                              ?_InitApp 0001                              ?_ResetBlue 0001  
                        ?_GetMemoryChar 0075                          ?_GetMemoryLong 0075  
               _Conf2_ChannelH_1_Status 00DA                              ?_UseIRCode 00AB  
               _Conf2_ChannelH_2_Status 00DB                       __CFG_CCP2MX$PORTC 000000  
               _Conf2_ChannelH_3_Status 00DC                          ?_EEPROM_UNLOCK 0001  
                       SendRF_wait@Code 007A               __size_of_Local_CloseUSART 000E  
                             __pintcode 0008                           __pmediumconst F962  
                        ?_Reverse_4Byte 0072                        _VoltageDividerON 5BEA  
                              ?___ftadd 007A                       SendRF_wait@Config 007C  
                           IRrawToNEC@i 0027                                ?___ftdiv 007D  
                  cleanBuffer16bit@data 0072                         SendRF_wait@size 007D  
                              ?___lldiv 0072                                ?___ftmul 008C  
                              ?___llmod 007F                                ?___fttol 0086  
                          UseIRCode@NEC 00AD                             __pintcodelo 0018  
                              ?_delayUS 0072                    __size_of_EraseScreen 0028  
                     SendRF_wait@amount 007E                           IRrawToNEC@NEC 001D  
                     _WriteEEPROM_1Byte 57BA               __end_of_Conf2_ChannelB_ON FAB1  
             __end_of_Conf2_ChannelD_ON FAD1                           IRrawToNEC@Raw 001B  
              __end_of_ReadEEPROM_1Byte 5874                                ?_low_isr 0001  
                    ?_WriteEEPROM_1Byte 0072                          __size_of_Round 0066  
                             _hexpowers F98B              __end_of_SyncGlobalToEEPROM 5776  
                 __size_ofi1_UARTstring 0058                __end_of_EnterCommandMode 4744  
                              ?_sprintf 0088                           _lowercaseChar 5984  
                             delayUS@US 0072                   __end_ofi1_cleanBuffer 5838  
                       IsCharacter@data 0001                             ??_GetEEPROM 00C3  
                   ??_WriteEEPROM_1Byte 0075                             ??_DecodeNEC 007E  
                              _IOCBbits 000F7D                         i1_BlueConnected 5B90  
              __end_of_CheckReceivingIR 5B1E                        _cleanBuffer16bit 547E  
                       ?_SendRF_Channel 0001                                _IPR1bits 000F9F  
                              _IPR2bits 000FA2                                _PIE1bits 000F9D  
                              _PIE2bits 000FA0                            cleanBuffer@i 0079  
                              _PIR1bits 000F9E                                _PIR2bits 000FA1  
                              i2u804_40 2DDA                                i2u795_40 2CDC  
                              i2u797_40 2D16                                _RCONbits 000FD0  
                  i1UARTstringCRLN@data 0004                        __CFG_WDTPS$32768 000000  
                           ??_GetNumber 0083                             ??_EncodeNEC 007A  
                        DecodeNEC@temp1 0084                          DecodeNEC@temp2 0082  
                        DecodeNEC@temp3 0083                                _RFConfig 0036  
                              _UARTchar 5A4C            ??_StringMatchCaseInsensitive 0079  
          __size_of_BluetoothConfigured 001C                BluetoothInitialSetup@buf 00A1  
             ReadEEPROM_1Byte@GIEstatus 0074               __end_of_WriteEEPROM_1Byte 57FA  
                            _ADCON0bits 000FC2                              _ADCON1bits 000FC1  
                            _ADCON2bits 000FC0                            i1_UARTstring 5590  
                  __size_of_Init_System 006C                                _IRpinOLD 0032  
        __size_of_BluetoothInitialSetup 040A                     ReadCodeButtons@temp 007B  
         __end_of_BluetoothInitialSetup 2810                   __size_of_Reverse_Byte 00B6  
                        _UARTstringCRLN 534A                         ??_BlueConnected 0072  
                           ??_ReadUSART 0001                           ??i2_ReadIRpin 001B  
                  __size_of_ReadVoltage 00B8                             ??_ReadIRpin 0072  
                       StringAddEqual@i 0165                         StringAddEqual@j 0166  
                           ??_SetEEPROM 00A7                          ?_lowercaseChar 0072  
                     ___lmul@multiplier 0072                             _INTCON2bits 000FF1  
                              _IsLetter 5A2E                               copy_data0 4876  
                             copy_data1 4896                               copy_data2 48B6  
                         _CommandString 0300                                _InitUART 4108  
                       UseBluetooth@buf 0490                             ??_OpenUSART 0074  
                          GetNumber@Hex 0089                         IRrawToNEC@first 0026  
                       ??_GetMemoryChar 0079                         OpenUSART@config 0074  
                       ??_GetMemoryLong 0079                      SendNEC_wait@toggle 008C  
                            _EECON1bits 000FA6                            ?_StringMatch 0072  
                           ??_ResetBlue 007B                        __size_of_InitADC 0016  
                       ??_EEPROM_UNLOCK 0072                                _ResetADC 5B82  
                 __end_of_SendNEC_bytes 5070                        __size_of_InitApp 0044  
                              __Hrparam 0000                             ??_UseIRCode 00B1  
                       ??_Reverse_4Byte 0076                                __Lrparam 0000  
                        i1cleanBuffer@i 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_UARTcommandMenu 00EE                    __size_of_SendRF_wait 0038  
                 __size_of_UseBluetooth 0C36                __size_of_ReadCodeButtons 0054  
                          _Reverse_Byte 4984               InternalADC_Read@ADCcounts 007B  
                    i1cleanBuffer@count 0003                       Reverse_4Byte@This 0072  
                         GetEEPROM@Temp 0100                        __size_of___ftadd 027E  
                      __size_of___ftdiv 0152                         cleanBuffer@data 0072  
                      __size_of___lldiv 00C6                                ___altoft 4D8C  
                      __size_of___ftmul 016C                        __size_of___llmod 00A4  
                      __size_of___fttol 0152                       Reverse_4Byte@temp 007E  
                              ___ftpack 3FE8              InternalADC_Read@AnaChanSel 007F  
                              ___lltoft 50F6                  __end_of_UARTstringCRLN 53B4  
                      __size_of_delayUS 0056           __end_of_Conf2_ChannelB_ON_STR FA7F  
                              ___lwtoft 59B0           __end_of_Conf2_ChannelD_ON_STR FA91  
                            sprintf@idx 0096                              sprintf@val 009B  
                UseBluetooth@NecAddress 04C4                  UseBluetooth@NecCommand 04C5  
                      __size_of_low_isr 01D0                                __ptext10 4314  
                              __ptext11 4ECC                                __ptext20 01EC  
                              __ptext12 526C                                __ptext21 5B0C  
                              __ptext13 4B9A                                __ptext30 59B0  
                              __ptext22 1FEE                                __ptext14 3630  
                              __ptext31 3952                                __ptext23 5984  
                              __ptext15 4F5C                                __ptext40 50F6  
                              __ptext32 3ABE                                __ptext24 51F2  
                              __ptext16 58E8                                __ptext41 53B4  
                              __ptext33 5BEA                                __ptext25 5A2E  
                              __ptext17 4402                                __ptext50 5B4A  
                              __ptext42 3C10                                __ptext34 5BFA  
                              __ptext26 3D62                                __ptext18 4E2E  
                              __ptext51 5B58                                __ptext43 31FC  
                              __ptext35 4CEA                                __ptext27 4AEC  
                              __ptext19 4FE6                                __ptext60 4C46  
                              __ptext52 56E8                                __ptext44 4D8C  
                              __ptext36 52DE                                __ptext28 4984  
                              __ptext61 4744                                __ptext53 547E  
                              __ptext45 3FE8                                __ptext37 45B4  
                              __ptext29 48CC                                __ptext70 5A6A  
                              __ptext62 467C                                __ptext54 5BCC  
                              __ptext46 5176                                __ptext38 5874  
                              __ptext71 5730                                __ptext63 54DC  
                              __ptext55 5B66                                __ptext47 5B3C  
                              __ptext39 4108                                __ptext80 5ACC  
                              __ptext72 5070                                __ptext64 5536  
                              __ptext56 5B1E                                __ptext48 5AF8  
                              __ptext81 5B82                                __ptext73 421A  
                              __ptext65 5A4C                                __ptext57 55E8  
                              __ptext49 5BC2                                __ptext90 5A86  
                              __ptext82 5776                                __ptext74 37E2  
                              __ptext66 4A3A                                __ptext58 2406  
                              __ptext91 5A06                                __ptext83 5BFE  
                              __ptext75 58AE                                __ptext67 5952  
                              __ptext59 2810                                __ptext92 5A9E  
                              __ptext76 57BA                                __ptext68 563E  
                              __ptext85 57FA                                __ptext77 5AB6  
                              __ptext69 5B74                       SendNEC_bytes@code 0082  
                              __ptext94 5BD6                                __ptext86 541A  
                              __ptext78 59DC                                __ptext95 5B9E  
                              __ptext87 5590                                __ptext79 5838  
                              __ptext96 5BE0                                __ptext88 5B90  
                              __ptext97 2BB4                                __ptext89 5AE2  
               __end_ofi1_BlueConnected 5B9E                                _high_isr 0008  
            __end_of_Conf1_ChannelD_STR FB40              __end_of_Conf1_ChannelE_STR FB4F  
            __end_of_Conf1_ChannelF_STR FB5E                        __size_of_sprintf 03A4  
                   __end_ofi2_ReadIRpin 5BAC                           __size_of_main 0138  
                 SendRF_Channel@channel 007F                            _UseBluetooth 0E6A  
                              delayUS@i 0077                    __size_of_ResetTimer0 000A  
                  __size_of_ResetTimer1 000A                    __size_of_ResetTimer3 000A  
             __size_ofi1_UARTstringCRLN 0064               GetMemoryChar@AddressFirst 0079  
          __size_of_ConfigureOscillator 0002                  UseBluetooth@EnteredNEC 04CA  
                      _Local_CloseUSART 5B3C                         GetMemoryLong@MH 0092  
                       GetMemoryLong@ML 0093                            BufferCopy@to 007C  
           __size_of_SyncEEPROMToGlobal 00C8              __size_of_WriteEEPROM_1Byte 0040  
                            _LEDTimerON 5BAC                         ?_UARTstringCRLN 0075  
                __size_ofi2_ResetTimer0 000A                              _INTCONbits 000FF2  
             __size_of_InternalADC_Read 00A2                          OpenUSART@spbrg 0072  
                       ??_lowercaseChar 0074                            UARTchar@data 0072  
                       StringMatch@That 0074                         StringMatch@This 0072  
                      EncodeNEC@address 009E                __end_of_VoltageDividerON 5BF0  
          __end_of_Conf2_ChannelH_1_OFF FAE1            __end_of_Conf2_ChannelH_2_OFF FB01  
          __end_of_Conf2_ChannelH_3_OFF FB21                                intlevel1 0000  
                              intlevel2 0000                               sprintf@ap 0099  
                             sprintf@sp 0088                            ?_cleanBuffer 0072  
                      EncodeNEC@command 0076                        ___lldiv@dividend 0072  
                          IsLetter@data 0072         ??_StringContainsCaseInsensitive 0079  
                        _BatteryVoltage 00D5                          GetMemoryChar@H 007A  
                           _IR_New_Code 00E6                              i1_UARTchar 5A9E  
                        GetMemoryLong@H 0091                          GetMemoryLong@L 0094  
                __size_of_InitBluetooth 0056                             BufferCopy@i 0080  
                 __end_of_SetMemoryChar 58E8                   __end_of_SetMemoryLong 4314  
                         ??_IsCharacter 0001                           _InitUART$3620 00A4  
                        _Conf1_ChannelD FB5E                          _Conf1_ChannelE FB6A  
                        _Conf1_ChannelF FB76                              GetNumber@i 008C  
                      DecodeNEC@address 007A                        UARTcommandMenu@i 007E  
                UARTcommandMenu@Command 0075                       ??_UARTcommandMenu 0079  
           __end_of_Conf2_ChannelH_1_ON FAF1             __end_of_Conf2_ChannelH_2_ON FB11  
           __end_of_Conf2_ChannelH_3_ON FB31                                sprintf@c 00A0  
              __end_of_cleanBuffer16bit 54DC                                sprintf@f 008A  
                      DecodeNEC@command 007C                       ??_ReadCodeButtons 007B  
                      ___lldiv@quotient 007A                             i2_ReadIRpin 5B9E  
                     ?_ReadEEPROM_1Byte 0072                            EraseScreen@i 0003  
                      ?i1_BlueConnected 0001                 __size_of_StringAddEqual 01B2  
                        i1UARTchar@data 0001                        ??_SendRF_Channel 007F  
                    ??_ReadEEPROM_1Byte 0074                       ?_EnterCommandMode 0001  
            __end_of_Conf2_ChannelB_OFF FAA1              __end_of_Conf2_ChannelD_OFF FAC1  
                   _BluetoothConfigured 5A6A                      ??_EnterCommandMode 007B  
                            _UARTstring 5536                           i2_ResetTimer0 5BD6  
                     ?_CheckReceivingIR 0001                      _SyncGlobalToEEPROM 5730  
                    ??_CheckReceivingIR 0072                         BufferCopy@count 007E  
                  __size_of_StringMatch 0072  
