

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Apr 10 12:40:26 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK2,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    20                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    21                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1
   127                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   137                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   138                           	psect	text111,global,reloc=2,class=CODE,delta=1
   139                           	psect	text112,global,reloc=2,class=CODE,delta=1
   140                           	psect	text113,global,reloc=2,class=CODE,delta=1
   141                           	psect	text114,global,reloc=2,class=CODE,delta=1
   142                           	psect	text115,global,reloc=2,class=CODE,delta=1
   143                           	psect	text116,global,reloc=2,class=CODE,delta=1
   144                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   145                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   146  0000                     
   147                           	psect	idataCOMRAM
   148  009548                     __pidataCOMRAM:
   149                           	opt stack 0
   150                           
   151                           ;initializer for _SN
   152  009548  0001               	dw	1
   153  00954A  0000               	dw	0
   154                           
   155                           ;initializer for _IRbitPosition
   156  00954C  20                 	db	32
   157                           
   158                           ;initializer for _IRcodePlace
   159  00954D  01                 	db	1
   160                           
   161                           ;initializer for _RF_IR
   162  00954E  37                 	db	55
   163                           
   164                           ;initializer for _RF_IR_Postscaler
   165  00954F  02                 	db	2
   166                           
   167                           ;initializer for _ReceivingIR
   168  009550  0D                 	db	13
   169                           
   170                           	psect	idataBANK0
   171  00955E                     __pidataBANK0:
   172                           	opt stack 0
   173                           
   174                           ;initializer for _Sent
   175  00955E  01                 	db	1
   176                           
   177                           	psect	idataBANK2
   178  0091D2                     __pidataBANK2:
   179                           	opt stack 0
   180                           
   181                           ;initializer for _ProductName
   182  0091D2  48                 	db	72
   183  0091D3  6F                 	db	111
   184  0091D4  6D                 	db	109
   185  0091D5  65                 	db	101
   186  0091D6  20                 	db	32
   187  0091D7  41                 	db	65
   188  0091D8  75                 	db	117
   189  0091D9  74                 	db	116
   190  0091DA  6F                 	db	111
   191  0091DB  6D                 	db	109
   192  0091DC  61                 	db	97
   193  0091DD  74                 	db	116
   194  0091DE  69                 	db	105
   195  0091DF  6F                 	db	111
   196  0091E0  6E                 	db	110
   197  0091E1  00                 	db	0
   198  0091E2  00                 	db	0
   199  0091E3  00                 	db	0
   200  0091E4  00                 	db	0
   201  0091E5  00                 	db	0
   202  0091E6  00                 	db	0
   203  0091E7  00                 	db	0
   204  0091E8  00                 	db	0
   205  0091E9  00                 	db	0
   206  0091EA  00                 	db	0
   207  0091EB  00                 	db	0
   208  0091EC  00                 	db	0
   209  0091ED  00                 	db	0
   210  0091EE  00                 	db	0
   211  0091EF  00                 	db	0
   212  0091F0  00                 	db	0
   213  0091F1  00                 	db	0
   214  0091F2  00                 	db	0
   215  0091F3  00                 	db	0
   216  0091F4  00                 	db	0
   217  0091F5  00                 	db	0
   218  0091F6  00                 	db	0
   219  0091F7  00                 	db	0
   220  0091F8  00                 	db	0
   221  0091F9  00                 	db	0
   222  0091FA  00                 	db	0
   223  0091FB  00                 	db	0
   224  0091FC  00                 	db	0
   225  0091FD  00                 	db	0
   226  0091FE  00                 	db	0
   227  0091FF  00                 	db	0
   228  009200  00                 	db	0
   229  009201  00                 	db	0
   230  009202  00                 	db	0
   231  009203  00                 	db	0
   232                           
   233                           ;initializer for _IRtimeout
   234  009204  1389               	dw	5001
   235  009206  0000               	dw	0
   236                           
   237                           	psect	mediumconst
   238  00F160                     __pmediumconst:
   239                           	opt stack 0
   240  00F160  00                 	db	0
   241  00F161                     _dpowers:
   242                           	opt stack 0
   243  00F161  0001               	dw	1
   244  00F163  0000               	dw	0
   245  00F165  000A               	dw	10
   246  00F167  0000               	dw	0
   247  00F169  0064               	dw	100
   248  00F16B  0000               	dw	0
   249  00F16D  03E8               	dw	1000
   250  00F16F  0000               	dw	0
   251  00F171  2710               	dw	10000
   252  00F173  0000               	dw	0
   253  00F175  86A0               	dw	34464
   254  00F177  0001               	dw	1
   255  00F179  4240               	dw	16960
   256  00F17B  000F               	dw	15
   257  00F17D  9680               	dw	38528
   258  00F17F  0098               	dw	152
   259  00F181  E100               	dw	57600
   260  00F183  05F5               	dw	1525
   261  00F185  CA00               	dw	51712
   262  00F187  3B9A               	dw	15258
   263  00F189                     __end_of_dpowers:
   264                           	opt stack 0
   265  00F189                     __npowers_:
   266                           	opt stack 0
   267  00F189  00                 	db	0
   268  00F18A  80                 	db	128
   269  00F18B  3F                 	db	63
   270  00F18C  CD                 	db	205
   271  00F18D  CC                 	db	204
   272  00F18E  3D                 	db	61
   273  00F18F  D7                 	db	215
   274  00F190  23                 	db	35
   275  00F191  3C                 	db	60
   276  00F192  12                 	db	18
   277  00F193  83                 	db	131
   278  00F194  3A                 	db	58
   279  00F195  B7                 	db	183
   280  00F196  D1                 	db	209
   281  00F197  38                 	db	56
   282  00F198  C6                 	db	198
   283  00F199  27                 	db	39
   284  00F19A  37                 	db	55
   285  00F19B  38                 	db	56
   286  00F19C  86                 	db	134
   287  00F19D  35                 	db	53
   288  00F19E  C0                 	db	192
   289  00F19F  D6                 	db	214
   290  00F1A0  33                 	db	51
   291  00F1A1  CC                 	db	204
   292  00F1A2  2B                 	db	43
   293  00F1A3  32                 	db	50
   294  00F1A4  70                 	db	112
   295  00F1A5  89                 	db	137
   296  00F1A6  30                 	db	48
   297  00F1A7  E7                 	db	231
   298  00F1A8  DB                 	db	219
   299  00F1A9  2E                 	db	46
   300  00F1AA  E5                 	db	229
   301  00F1AB  3C                 	db	60
   302  00F1AC  1E                 	db	30
   303  00F1AD  42                 	db	66
   304  00F1AE  A2                 	db	162
   305  00F1AF  0D                 	db	13
   306  00F1B0                     __end_of__npowers_:
   307                           	opt stack 0
   308  00F1B0                     __powers_:
   309                           	opt stack 0
   310  00F1B0  00                 	db	0
   311  00F1B1  80                 	db	128
   312  00F1B2  3F                 	db	63
   313  00F1B3  00                 	db	0
   314  00F1B4  20                 	db	32
   315  00F1B5  41                 	db	65
   316  00F1B6  00                 	db	0
   317  00F1B7  C8                 	db	200
   318  00F1B8  42                 	db	66
   319  00F1B9  00                 	db	0
   320  00F1BA  7A                 	db	122
   321  00F1BB  44                 	db	68
   322  00F1BC  40                 	db	64
   323  00F1BD  1C                 	db	28
   324  00F1BE  46                 	db	70
   325  00F1BF  50                 	db	80
   326  00F1C0  C3                 	db	195
   327  00F1C1  47                 	db	71
   328  00F1C2  24                 	db	36
   329  00F1C3  74                 	db	116
   330  00F1C4  49                 	db	73
   331  00F1C5  97                 	db	151
   332  00F1C6  18                 	db	24
   333  00F1C7  4B                 	db	75
   334  00F1C8  BC                 	db	188
   335  00F1C9  BE                 	db	190
   336  00F1CA  4C                 	db	76
   337  00F1CB  6B                 	db	107
   338  00F1CC  6E                 	db	110
   339  00F1CD  4E                 	db	78
   340  00F1CE  03                 	db	3
   341  00F1CF  15                 	db	21
   342  00F1D0  50                 	db	80
   343  00F1D1  79                 	db	121
   344  00F1D2  AD                 	db	173
   345  00F1D3  60                 	db	96
   346  00F1D4  F3                 	db	243
   347  00F1D5  49                 	db	73
   348  00F1D6  71                 	db	113
   349  00F1D7                     __end_of__powers_:
   350                           	opt stack 0
   351  00F1D7                     _hexpowers:
   352                           	opt stack 0
   353  00F1D7  0001               	dw	1
   354  00F1D9  0000               	dw	0
   355  00F1DB  0010               	dw	16
   356  00F1DD  0000               	dw	0
   357  00F1DF  0100               	dw	256
   358  00F1E1  0000               	dw	0
   359  00F1E3  1000               	dw	4096
   360  00F1E5  0000               	dw	0
   361  00F1E7  0000               	dw	0
   362  00F1E9  0001               	dw	1
   363  00F1EB  0000               	dw	0
   364  00F1ED  0010               	dw	16
   365  00F1EF  0000               	dw	0
   366  00F1F1  0100               	dw	256
   367  00F1F3  0000               	dw	0
   368  00F1F5  1000               	dw	4096
   369  00F1F7                     __end_of_hexpowers:
   370                           	opt stack 0
   371  00F1F7                     _Conf2_ChannelH_1_OFF_STR:
   372                           	opt stack 0
   373  00F1F7  43                 	db	67
   374  00F1F8  6F                 	db	111
   375  00F1F9  6E                 	db	110
   376  00F1FA  66                 	db	102
   377  00F1FB  32                 	db	50
   378  00F1FC  5F                 	db	95
   379  00F1FD  43                 	db	67
   380  00F1FE  68                 	db	104
   381  00F1FF  61                 	db	97
   382  00F200  6E                 	db	110
   383  00F201  6E                 	db	110
   384  00F202  65                 	db	101
   385  00F203  6C                 	db	108
   386  00F204  48                 	db	72
   387  00F205  5F                 	db	95
   388  00F206  31                 	db	49
   389  00F207  5F                 	db	95
   390  00F208  4F                 	db	79
   391  00F209  46                 	db	70
   392  00F20A  46                 	db	70
   393  00F20B  00                 	db	0
   394  00F20C                     __end_of_Conf2_ChannelH_1_OFF_STR:
   395                           	opt stack 0
   396  00F20C                     _Conf2_ChannelH_2_OFF_STR:
   397                           	opt stack 0
   398  00F20C  43                 	db	67
   399  00F20D  6F                 	db	111
   400  00F20E  6E                 	db	110
   401  00F20F  66                 	db	102
   402  00F210  32                 	db	50
   403  00F211  5F                 	db	95
   404  00F212  43                 	db	67
   405  00F213  68                 	db	104
   406  00F214  61                 	db	97
   407  00F215  6E                 	db	110
   408  00F216  6E                 	db	110
   409  00F217  65                 	db	101
   410  00F218  6C                 	db	108
   411  00F219  48                 	db	72
   412  00F21A  5F                 	db	95
   413  00F21B  32                 	db	50
   414  00F21C  5F                 	db	95
   415  00F21D  4F                 	db	79
   416  00F21E  46                 	db	70
   417  00F21F  46                 	db	70
   418  00F220  00                 	db	0
   419  00F221                     __end_of_Conf2_ChannelH_2_OFF_STR:
   420                           	opt stack 0
   421  00F221                     _Conf2_ChannelH_3_OFF_STR:
   422                           	opt stack 0
   423  00F221  43                 	db	67
   424  00F222  6F                 	db	111
   425  00F223  6E                 	db	110
   426  00F224  66                 	db	102
   427  00F225  32                 	db	50
   428  00F226  5F                 	db	95
   429  00F227  43                 	db	67
   430  00F228  68                 	db	104
   431  00F229  61                 	db	97
   432  00F22A  6E                 	db	110
   433  00F22B  6E                 	db	110
   434  00F22C  65                 	db	101
   435  00F22D  6C                 	db	108
   436  00F22E  48                 	db	72
   437  00F22F  5F                 	db	95
   438  00F230  33                 	db	51
   439  00F231  5F                 	db	95
   440  00F232  4F                 	db	79
   441  00F233  46                 	db	70
   442  00F234  46                 	db	70
   443  00F235  00                 	db	0
   444  00F236                     __end_of_Conf2_ChannelH_3_OFF_STR:
   445                           	opt stack 0
   446  00F236                     _Conf2_ChannelH_1_ON_STR:
   447                           	opt stack 0
   448  00F236  43                 	db	67
   449  00F237  6F                 	db	111
   450  00F238  6E                 	db	110
   451  00F239  66                 	db	102
   452  00F23A  32                 	db	50
   453  00F23B  5F                 	db	95
   454  00F23C  43                 	db	67
   455  00F23D  68                 	db	104
   456  00F23E  61                 	db	97
   457  00F23F  6E                 	db	110
   458  00F240  6E                 	db	110
   459  00F241  65                 	db	101
   460  00F242  6C                 	db	108
   461  00F243  48                 	db	72
   462  00F244  5F                 	db	95
   463  00F245  31                 	db	49
   464  00F246  5F                 	db	95
   465  00F247  4F                 	db	79
   466  00F248  4E                 	db	78
   467  00F249  00                 	db	0
   468  00F24A                     __end_of_Conf2_ChannelH_1_ON_STR:
   469                           	opt stack 0
   470  00F24A                     _Conf2_ChannelH_2_ON_STR:
   471                           	opt stack 0
   472  00F24A  43                 	db	67
   473  00F24B  6F                 	db	111
   474  00F24C  6E                 	db	110
   475  00F24D  66                 	db	102
   476  00F24E  32                 	db	50
   477  00F24F  5F                 	db	95
   478  00F250  43                 	db	67
   479  00F251  68                 	db	104
   480  00F252  61                 	db	97
   481  00F253  6E                 	db	110
   482  00F254  6E                 	db	110
   483  00F255  65                 	db	101
   484  00F256  6C                 	db	108
   485  00F257  48                 	db	72
   486  00F258  5F                 	db	95
   487  00F259  32                 	db	50
   488  00F25A  5F                 	db	95
   489  00F25B  4F                 	db	79
   490  00F25C  4E                 	db	78
   491  00F25D  00                 	db	0
   492  00F25E                     __end_of_Conf2_ChannelH_2_ON_STR:
   493                           	opt stack 0
   494  00F25E                     _Conf2_ChannelH_3_ON_STR:
   495                           	opt stack 0
   496  00F25E  43                 	db	67
   497  00F25F  6F                 	db	111
   498  00F260  6E                 	db	110
   499  00F261  66                 	db	102
   500  00F262  32                 	db	50
   501  00F263  5F                 	db	95
   502  00F264  43                 	db	67
   503  00F265  68                 	db	104
   504  00F266  61                 	db	97
   505  00F267  6E                 	db	110
   506  00F268  6E                 	db	110
   507  00F269  65                 	db	101
   508  00F26A  6C                 	db	108
   509  00F26B  48                 	db	72
   510  00F26C  5F                 	db	95
   511  00F26D  33                 	db	51
   512  00F26E  5F                 	db	95
   513  00F26F  4F                 	db	79
   514  00F270  4E                 	db	78
   515  00F271  00                 	db	0
   516  00F272                     __end_of_Conf2_ChannelH_3_ON_STR:
   517                           	opt stack 0
   518  00F272                     _Conf2_ChannelB_OFF_STR:
   519                           	opt stack 0
   520  00F272  43                 	db	67
   521  00F273  6F                 	db	111
   522  00F274  6E                 	db	110
   523  00F275  66                 	db	102
   524  00F276  32                 	db	50
   525  00F277  5F                 	db	95
   526  00F278  43                 	db	67
   527  00F279  68                 	db	104
   528  00F27A  61                 	db	97
   529  00F27B  6E                 	db	110
   530  00F27C  6E                 	db	110
   531  00F27D  65                 	db	101
   532  00F27E  6C                 	db	108
   533  00F27F  42                 	db	66
   534  00F280  5F                 	db	95
   535  00F281  4F                 	db	79
   536  00F282  46                 	db	70
   537  00F283  46                 	db	70
   538  00F284  00                 	db	0
   539  00F285                     __end_of_Conf2_ChannelB_OFF_STR:
   540                           	opt stack 0
   541  00F285                     _Conf2_ChannelD_OFF_STR:
   542                           	opt stack 0
   543  00F285  43                 	db	67
   544  00F286  6F                 	db	111
   545  00F287  6E                 	db	110
   546  00F288  66                 	db	102
   547  00F289  32                 	db	50
   548  00F28A  5F                 	db	95
   549  00F28B  43                 	db	67
   550  00F28C  68                 	db	104
   551  00F28D  61                 	db	97
   552  00F28E  6E                 	db	110
   553  00F28F  6E                 	db	110
   554  00F290  65                 	db	101
   555  00F291  6C                 	db	108
   556  00F292  44                 	db	68
   557  00F293  5F                 	db	95
   558  00F294  4F                 	db	79
   559  00F295  46                 	db	70
   560  00F296  46                 	db	70
   561  00F297  00                 	db	0
   562  00F298                     __end_of_Conf2_ChannelD_OFF_STR:
   563                           	opt stack 0
   564  00F298                     _Conf2_ChannelB_ON_STR:
   565                           	opt stack 0
   566  00F298  43                 	db	67
   567  00F299  6F                 	db	111
   568  00F29A  6E                 	db	110
   569  00F29B  66                 	db	102
   570  00F29C  32                 	db	50
   571  00F29D  5F                 	db	95
   572  00F29E  43                 	db	67
   573  00F29F  68                 	db	104
   574  00F2A0  61                 	db	97
   575  00F2A1  6E                 	db	110
   576  00F2A2  6E                 	db	110
   577  00F2A3  65                 	db	101
   578  00F2A4  6C                 	db	108
   579  00F2A5  42                 	db	66
   580  00F2A6  5F                 	db	95
   581  00F2A7  4F                 	db	79
   582  00F2A8  4E                 	db	78
   583  00F2A9  00                 	db	0
   584  00F2AA                     __end_of_Conf2_ChannelB_ON_STR:
   585                           	opt stack 0
   586  00F2AA                     _Conf2_ChannelD_ON_STR:
   587                           	opt stack 0
   588  00F2AA  43                 	db	67
   589  00F2AB  6F                 	db	111
   590  00F2AC  6E                 	db	110
   591  00F2AD  66                 	db	102
   592  00F2AE  32                 	db	50
   593  00F2AF  5F                 	db	95
   594  00F2B0  43                 	db	67
   595  00F2B1  68                 	db	104
   596  00F2B2  61                 	db	97
   597  00F2B3  6E                 	db	110
   598  00F2B4  6E                 	db	110
   599  00F2B5  65                 	db	101
   600  00F2B6  6C                 	db	108
   601  00F2B7  44                 	db	68
   602  00F2B8  5F                 	db	95
   603  00F2B9  4F                 	db	79
   604  00F2BA  4E                 	db	78
   605  00F2BB  00                 	db	0
   606  00F2BC                     __end_of_Conf2_ChannelD_ON_STR:
   607                           	opt stack 0
   608  00F2BC                     _Conf2_ChannelB_OFF:
   609                           	opt stack 0
   610  00F2BC  00                 	db	0
   611  00F2BD  01                 	db	1
   612  00F2BE  01                 	db	1
   613  00F2BF  00                 	db	0
   614  00F2C0  01                 	db	1
   615  00F2C1  00                 	db	0
   616  00F2C2  00                 	db	0
   617  00F2C3  00                 	db	0
   618  00F2C4  00                 	db	0
   619  00F2C5  00                 	db	0
   620  00F2C6  00                 	db	0
   621  00F2C7  01                 	db	1
   622  00F2C8  00                 	db	0
   623  00F2C9  01                 	db	1
   624  00F2CA  00                 	db	0
   625  00F2CB  00                 	db	0
   626  00F2CC                     __end_of_Conf2_ChannelB_OFF:
   627                           	opt stack 0
   628  00F2CC                     _Conf2_ChannelB_ON:
   629                           	opt stack 0
   630  00F2CC  00                 	db	0
   631  00F2CD  01                 	db	1
   632  00F2CE  01                 	db	1
   633  00F2CF  00                 	db	0
   634  00F2D0  01                 	db	1
   635  00F2D1  00                 	db	0
   636  00F2D2  00                 	db	0
   637  00F2D3  00                 	db	0
   638  00F2D4  00                 	db	0
   639  00F2D5  00                 	db	0
   640  00F2D6  01                 	db	1
   641  00F2D7  00                 	db	0
   642  00F2D8  00                 	db	0
   643  00F2D9  01                 	db	1
   644  00F2DA  00                 	db	0
   645  00F2DB  00                 	db	0
   646  00F2DC                     __end_of_Conf2_ChannelB_ON:
   647                           	opt stack 0
   648  00F2DC                     _Conf2_ChannelD_OFF:
   649                           	opt stack 0
   650  00F2DC  00                 	db	0
   651  00F2DD  01                 	db	1
   652  00F2DE  01                 	db	1
   653  00F2DF  00                 	db	0
   654  00F2E0  01                 	db	1
   655  00F2E1  00                 	db	0
   656  00F2E2  00                 	db	0
   657  00F2E3  00                 	db	0
   658  00F2E4  00                 	db	0
   659  00F2E5  00                 	db	0
   660  00F2E6  00                 	db	0
   661  00F2E7  01                 	db	1
   662  00F2E8  00                 	db	0
   663  00F2E9  00                 	db	0
   664  00F2EA  00                 	db	0
   665  00F2EB  01                 	db	1
   666  00F2EC                     __end_of_Conf2_ChannelD_OFF:
   667                           	opt stack 0
   668  00F2EC                     _Conf2_ChannelD_ON:
   669                           	opt stack 0
   670  00F2EC  00                 	db	0
   671  00F2ED  01                 	db	1
   672  00F2EE  01                 	db	1
   673  00F2EF  00                 	db	0
   674  00F2F0  01                 	db	1
   675  00F2F1  00                 	db	0
   676  00F2F2  00                 	db	0
   677  00F2F3  00                 	db	0
   678  00F2F4  00                 	db	0
   679  00F2F5  00                 	db	0
   680  00F2F6  01                 	db	1
   681  00F2F7  00                 	db	0
   682  00F2F8  00                 	db	0
   683  00F2F9  00                 	db	0
   684  00F2FA  00                 	db	0
   685  00F2FB  01                 	db	1
   686  00F2FC                     __end_of_Conf2_ChannelD_ON:
   687                           	opt stack 0
   688  00F2FC                     _Conf2_ChannelH_1_OFF:
   689                           	opt stack 0
   690  00F2FC  00                 	db	0
   691  00F2FD  01                 	db	1
   692  00F2FE  01                 	db	1
   693  00F2FF  00                 	db	0
   694  00F300  01                 	db	1
   695  00F301  00                 	db	0
   696  00F302  00                 	db	0
   697  00F303  00                 	db	0
   698  00F304  00                 	db	0
   699  00F305  01                 	db	1
   700  00F306  00                 	db	0
   701  00F307  00                 	db	0
   702  00F308  00                 	db	0
   703  00F309  00                 	db	0
   704  00F30A  00                 	db	0
   705  00F30B  00                 	db	0
   706  00F30C                     __end_of_Conf2_ChannelH_1_OFF:
   707                           	opt stack 0
   708  00F30C                     _Conf2_ChannelH_1_ON:
   709                           	opt stack 0
   710  00F30C  00                 	db	0
   711  00F30D  01                 	db	1
   712  00F30E  01                 	db	1
   713  00F30F  00                 	db	0
   714  00F310  01                 	db	1
   715  00F311  00                 	db	0
   716  00F312  00                 	db	0
   717  00F313  00                 	db	0
   718  00F314  01                 	db	1
   719  00F315  00                 	db	0
   720  00F316  00                 	db	0
   721  00F317  00                 	db	0
   722  00F318  00                 	db	0
   723  00F319  00                 	db	0
   724  00F31A  00                 	db	0
   725  00F31B  00                 	db	0
   726  00F31C                     __end_of_Conf2_ChannelH_1_ON:
   727                           	opt stack 0
   728  00F31C                     _Conf2_ChannelH_2_OFF:
   729                           	opt stack 0
   730  00F31C  00                 	db	0
   731  00F31D  01                 	db	1
   732  00F31E  01                 	db	1
   733  00F31F  00                 	db	0
   734  00F320  01                 	db	1
   735  00F321  00                 	db	0
   736  00F322  00                 	db	0
   737  00F323  00                 	db	0
   738  00F324  00                 	db	0
   739  00F325  00                 	db	0
   740  00F326  00                 	db	0
   741  00F327  01                 	db	1
   742  00F328  00                 	db	0
   743  00F329  00                 	db	0
   744  00F32A  00                 	db	0
   745  00F32B  00                 	db	0
   746  00F32C                     __end_of_Conf2_ChannelH_2_OFF:
   747                           	opt stack 0
   748  00F32C                     _Conf2_ChannelH_2_ON:
   749                           	opt stack 0
   750  00F32C  00                 	db	0
   751  00F32D  01                 	db	1
   752  00F32E  01                 	db	1
   753  00F32F  00                 	db	0
   754  00F330  01                 	db	1
   755  00F331  00                 	db	0
   756  00F332  00                 	db	0
   757  00F333  00                 	db	0
   758  00F334  00                 	db	0
   759  00F335  00                 	db	0
   760  00F336  01                 	db	1
   761  00F337  00                 	db	0
   762  00F338  00                 	db	0
   763  00F339  00                 	db	0
   764  00F33A  00                 	db	0
   765  00F33B  00                 	db	0
   766  00F33C                     __end_of_Conf2_ChannelH_2_ON:
   767                           	opt stack 0
   768  00F33C                     _Conf2_ChannelH_3_OFF:
   769                           	opt stack 0
   770  00F33C  00                 	db	0
   771  00F33D  01                 	db	1
   772  00F33E  01                 	db	1
   773  00F33F  00                 	db	0
   774  00F340  01                 	db	1
   775  00F341  00                 	db	0
   776  00F342  01                 	db	1
   777  00F343  00                 	db	0
   778  00F344  00                 	db	0
   779  00F345  00                 	db	0
   780  00F346  00                 	db	0
   781  00F347  00                 	db	0
   782  00F348  00                 	db	0
   783  00F349  00                 	db	0
   784  00F34A  00                 	db	0
   785  00F34B  00                 	db	0
   786  00F34C                     __end_of_Conf2_ChannelH_3_OFF:
   787                           	opt stack 0
   788  00F34C                     _Conf2_ChannelH_3_ON:
   789                           	opt stack 0
   790  00F34C  00                 	db	0
   791  00F34D  01                 	db	1
   792  00F34E  01                 	db	1
   793  00F34F  00                 	db	0
   794  00F350  01                 	db	1
   795  00F351  00                 	db	0
   796  00F352  00                 	db	0
   797  00F353  01                 	db	1
   798  00F354  00                 	db	0
   799  00F355  00                 	db	0
   800  00F356  00                 	db	0
   801  00F357  00                 	db	0
   802  00F358  00                 	db	0
   803  00F359  00                 	db	0
   804  00F35A  00                 	db	0
   805  00F35B  00                 	db	0
   806  00F35C                     __end_of_Conf2_ChannelH_3_ON:
   807                           	opt stack 0
   808  00F35C                     _Conf1_ChannelD_STR:
   809                           	opt stack 0
   810  00F35C  43                 	db	67
   811  00F35D  6F                 	db	111
   812  00F35E  6E                 	db	110
   813  00F35F  66                 	db	102
   814  00F360  31                 	db	49
   815  00F361  5F                 	db	95
   816  00F362  43                 	db	67
   817  00F363  68                 	db	104
   818  00F364  61                 	db	97
   819  00F365  6E                 	db	110
   820  00F366  6E                 	db	110
   821  00F367  65                 	db	101
   822  00F368  6C                 	db	108
   823  00F369  44                 	db	68
   824  00F36A  00                 	db	0
   825  00F36B                     __end_of_Conf1_ChannelD_STR:
   826                           	opt stack 0
   827  00F36B                     _Conf1_ChannelE_STR:
   828                           	opt stack 0
   829  00F36B  43                 	db	67
   830  00F36C  6F                 	db	111
   831  00F36D  6E                 	db	110
   832  00F36E  66                 	db	102
   833  00F36F  31                 	db	49
   834  00F370  5F                 	db	95
   835  00F371  43                 	db	67
   836  00F372  68                 	db	104
   837  00F373  61                 	db	97
   838  00F374  6E                 	db	110
   839  00F375  6E                 	db	110
   840  00F376  65                 	db	101
   841  00F377  6C                 	db	108
   842  00F378  45                 	db	69
   843  00F379  00                 	db	0
   844  00F37A                     __end_of_Conf1_ChannelE_STR:
   845                           	opt stack 0
   846  00F37A                     _Conf1_ChannelF_STR:
   847                           	opt stack 0
   848  00F37A  43                 	db	67
   849  00F37B  6F                 	db	111
   850  00F37C  6E                 	db	110
   851  00F37D  66                 	db	102
   852  00F37E  31                 	db	49
   853  00F37F  5F                 	db	95
   854  00F380  43                 	db	67
   855  00F381  68                 	db	104
   856  00F382  61                 	db	97
   857  00F383  6E                 	db	110
   858  00F384  6E                 	db	110
   859  00F385  65                 	db	101
   860  00F386  6C                 	db	108
   861  00F387  46                 	db	70
   862  00F388  00                 	db	0
   863  00F389                     __end_of_Conf1_ChannelF_STR:
   864                           	opt stack 0
   865  00F389                     _SYNTAX_ERR:
   866                           	opt stack 0
   867  00F389  45                 	db	69
   868  00F38A  72                 	db	114
   869  00F38B  72                 	db	114
   870  00F38C  6F                 	db	111
   871  00F38D  72                 	db	114
   872  00F38E  3A                 	db	58
   873  00F38F  20                 	db	32
   874  00F390  53                 	db	83
   875  00F391  79                 	db	121
   876  00F392  6E                 	db	110
   877  00F393  74                 	db	116
   878  00F394  61                 	db	97
   879  00F395  78                 	db	120
   880  00F396  00                 	db	0
   881  00F397                     __end_of_SYNTAX_ERR:
   882                           	opt stack 0
   883  00F397                     _Conf1_ChannelD:
   884                           	opt stack 0
   885  00F397  03                 	db	3
   886  00F398  03                 	db	3
   887  00F399  03                 	db	3
   888  00F39A  03                 	db	3
   889  00F39B  03                 	db	3
   890  00F39C  03                 	db	3
   891  00F39D  00                 	db	0
   892  00F39E  00                 	db	0
   893  00F39F  01                 	db	1
   894  00F3A0  00                 	db	0
   895  00F3A1  00                 	db	0
   896  00F3A2  00                 	db	0
   897  00F3A3                     __end_of_Conf1_ChannelD:
   898                           	opt stack 0
   899  00F3A3                     _Conf1_ChannelE:
   900                           	opt stack 0
   901  00F3A3  00                 	db	0
   902  00F3A4  03                 	db	3
   903  00F3A5  03                 	db	3
   904  00F3A6  03                 	db	3
   905  00F3A7  03                 	db	3
   906  00F3A8  03                 	db	3
   907  00F3A9  00                 	db	0
   908  00F3AA  00                 	db	0
   909  00F3AB  01                 	db	1
   910  00F3AC  00                 	db	0
   911  00F3AD  00                 	db	0
   912  00F3AE  00                 	db	0
   913  00F3AF                     __end_of_Conf1_ChannelE:
   914                           	opt stack 0
   915  00F3AF                     _Conf1_ChannelF:
   916                           	opt stack 0
   917  00F3AF  03                 	db	3
   918  00F3B0  00                 	db	0
   919  00F3B1  03                 	db	3
   920  00F3B2  03                 	db	3
   921  00F3B3  03                 	db	3
   922  00F3B4  03                 	db	3
   923  00F3B5  00                 	db	0
   924  00F3B6  00                 	db	0
   925  00F3B7  01                 	db	1
   926  00F3B8  00                 	db	0
   927  00F3B9  00                 	db	0
   928  00F3BA  00                 	db	0
   929  00F3BB                     __end_of_Conf1_ChannelF:
   930                           	opt stack 0
   931  00F3BB                     _FirmVersion:
   932                           	opt stack 0
   933  00F3BB  31                 	db	49
   934  00F3BC  2E                 	db	46
   935  00F3BD  30                 	db	48
   936  00F3BE  5F                 	db	95
   937  00F3BF  44                 	db	68
   938  00F3C0  57                 	db	87
   939  00F3C1  30                 	db	48
   940  00F3C2  62                 	db	98
   941  00F3C3  00                 	db	0
   942  00F3C4                     __end_of_FirmVersion:
   943                           	opt stack 0
   944  00F3C4                     _PCBVersion:
   945                           	opt stack 0
   946  00F3C4  52                 	db	82
   947  00F3C5  65                 	db	101
   948  00F3C6  76                 	db	118
   949  00F3C7  41                 	db	65
   950  00F3C8  00                 	db	0
   951  00F3C9                     __end_of_PCBVersion:
   952                           	opt stack 0
   953  00F3C9                     _Conf1_Channels:
   954                           	opt stack 0
   955  00F3C9  44                 	db	68
   956  00F3CA  45                 	db	69
   957  00F3CB  46                 	db	70
   958  00F3CC  00                 	db	0
   959  00F3CD                     __end_of_Conf1_Channels:
   960                           	opt stack 0
   961  00F3CD                     _Conf2_Channels:
   962                           	opt stack 0
   963  00F3CD  42                 	db	66
   964  00F3CE  44                 	db	68
   965  00F3CF  48                 	db	72
   966  00F3D0  00                 	db	0
   967  00F3D1                     __end_of_Conf2_Channels:
   968                           	opt stack 0
   969  00F3D1                     _CRLN:
   970                           	opt stack 0
   971  00F3D1  0D                 	db	13
   972  00F3D2  0A                 	db	10
   973  00F3D3  00                 	db	0
   974  00F3D4                     __end_of_CRLN:
   975                           	opt stack 0
   976  0000                     _ADCON0	set	4034
   977  0000                     _ADCON0bits	set	4034
   978  0000                     _ADCON1	set	4033
   979  0000                     _ADCON1bits	set	4033
   980  0000                     _ADCON2	set	4032
   981  0000                     _ADCON2bits	set	4032
   982  0000                     _ADRESH	set	4036
   983  0000                     _ADRESL	set	4035
   984  0000                     _ANSEL	set	3966
   985  0000                     _ANSELH	set	3967
   986  0000                     _BAUDCONbits	set	4024
   987  0000                     _EEADR	set	4009
   988  0000                     _EEADRH	set	4010
   989  0000                     _EECON1bits	set	4006
   990  0000                     _EECON2	set	4007
   991  0000                     _EEDATA	set	4008
   992  0000                     _INTCON2bits	set	4081
   993  0000                     _INTCONbits	set	4082
   994  0000                     _IOCBbits	set	3965
   995  0000                     _IPR1bits	set	3999
   996  0000                     _IPR2bits	set	4002
   997  0000                     _LATA	set	3977
   998  0000                     _LATB	set	3978
   999  0000                     _LATC	set	3979
  1000  0000                     _PIE1bits	set	3997
  1001  0000                     _PIE2bits	set	4000
  1002  0000                     _PIR1bits	set	3998
  1003  0000                     _PIR2bits	set	4001
  1004  0000                     _PORTA	set	3968
  1005  0000                     _PORTB	set	3969
  1006  0000                     _PORTC	set	3970
  1007  0000                     _PR2	set	4043
  1008  0000                     _RCONbits	set	4048
  1009  0000                     _RCREG	set	4014
  1010  0000                     _RCSTA	set	4011
  1011  0000                     _RCSTAbits	set	4011
  1012  0000                     _SPBRG	set	4015
  1013  0000                     _SPBRGH	set	4016
  1014  0000                     _T0CONbits	set	4053
  1015  0000                     _T1CONbits	set	4045
  1016  0000                     _T2CONbits	set	4042
  1017  0000                     _T3CONbits	set	4017
  1018  0000                     _TMR0H	set	4055
  1019  0000                     _TMR0L	set	4054
  1020  0000                     _TMR1H	set	4047
  1021  0000                     _TMR1L	set	4046
  1022  0000                     _TMR2	set	4044
  1023  0000                     _TMR3H	set	4019
  1024  0000                     _TMR3L	set	4018
  1025  0000                     _TRISAbits	set	3986
  1026  0000                     _TRISBbits	set	3987
  1027  0000                     _TRISCbits	set	3988
  1028  0000                     _TXREG	set	4013
  1029  0000                     _TXSTA	set	4012
  1030  0000                     _TXSTAbits	set	4012
  1031  0000                     _WPUB	set	3964
  1032  00F3D4                     STR_72:
  1033  00F3D4  4E                 	db	78	;'N'
  1034  00F3D5  45                 	db	69	;'E'
  1035  00F3D6  43                 	db	67	;'C'
  1036  00F3D7  20                 	db	32
  1037  00F3D8  63                 	db	99	;'c'
  1038  00F3D9  6F                 	db	111	;'o'
  1039  00F3DA  64                 	db	100	;'d'
  1040  00F3DB  65                 	db	101	;'e'
  1041  00F3DC  20                 	db	32
  1042  00F3DD  30                 	db	48	;'0'
  1043  00F3DE  78                 	db	120	;'x'
  1044  00F3DF  25                 	db	37
  1045  00F3E0  6C                 	db	108	;'l'
  1046  00F3E1  58                 	db	88	;'X'
  1047  00F3E2  20                 	db	32
  1048  00F3E3  6E                 	db	110	;'n'
  1049  00F3E4  6F                 	db	111	;'o'
  1050  00F3E5  77                 	db	119	;'w'
  1051  00F3E6  20                 	db	32
  1052  00F3E7  74                 	db	116	;'t'
  1053  00F3E8  72                 	db	114	;'r'
  1054  00F3E9  61                 	db	97	;'a'
  1055  00F3EA  6E                 	db	110	;'n'
  1056  00F3EB  73                 	db	115	;'s'
  1057  00F3EC  6D                 	db	109	;'m'
  1058  00F3ED  69                 	db	105	;'i'
  1059  00F3EE  74                 	db	116	;'t'
  1060  00F3EF  73                 	db	115	;'s'
  1061  00F3F0  20                 	db	32
  1062  00F3F1  52                 	db	82	;'R'
  1063  00F3F2  46                 	db	70	;'F'
  1064  00F3F3  20                 	db	32
  1065  00F3F4  63                 	db	99	;'c'
  1066  00F3F5  6F                 	db	111	;'o'
  1067  00F3F6  6E                 	db	110	;'n'
  1068  00F3F7  66                 	db	102	;'f'
  1069  00F3F8  69                 	db	105	;'i'
  1070  00F3F9  67                 	db	103	;'g'
  1071  00F3FA  20                 	db	32
  1072  00F3FB  25                 	db	37
  1073  00F3FC  64                 	db	100	;'d'
  1074  00F3FD  20                 	db	32
  1075  00F3FE  63                 	db	99	;'c'
  1076  00F3FF  68                 	db	104	;'h'
  1077  00F400  61                 	db	97	;'a'
  1078  00F401  6E                 	db	110	;'n'
  1079  00F402  6E                 	db	110	;'n'
  1080  00F403  65                 	db	101	;'e'
  1081  00F404  6C                 	db	108	;'l'
  1082  00F405  20                 	db	32
  1083  00F406  25                 	db	37
  1084  00F407  63                 	db	99	;'c'
  1085  00F408  20                 	db	32
  1086  00F409  64                 	db	100	;'d'
  1087  00F40A  65                 	db	101	;'e'
  1088  00F40B  76                 	db	118	;'v'
  1089  00F40C  69                 	db	105	;'i'
  1090  00F40D  63                 	db	99	;'c'
  1091  00F40E  65                 	db	101	;'e'
  1092  00F40F  20                 	db	32
  1093  00F410  25                 	db	37
  1094  00F411  64                 	db	100	;'d'
  1095  00F412  00                 	db	0
  1096  00F413                     STR_73:
  1097  00F413  4E                 	db	78	;'N'
  1098  00F414  45                 	db	69	;'E'
  1099  00F415  43                 	db	67	;'C'
  1100  00F416  20                 	db	32
  1101  00F417  63                 	db	99	;'c'
  1102  00F418  6F                 	db	111	;'o'
  1103  00F419  64                 	db	100	;'d'
  1104  00F41A  65                 	db	101	;'e'
  1105  00F41B  20                 	db	32
  1106  00F41C  30                 	db	48	;'0'
  1107  00F41D  78                 	db	120	;'x'
  1108  00F41E  25                 	db	37
  1109  00F41F  6C                 	db	108	;'l'
  1110  00F420  58                 	db	88	;'X'
  1111  00F421  20                 	db	32
  1112  00F422  6E                 	db	110	;'n'
  1113  00F423  6F                 	db	111	;'o'
  1114  00F424  77                 	db	119	;'w'
  1115  00F425  20                 	db	32
  1116  00F426  74                 	db	116	;'t'
  1117  00F427  72                 	db	114	;'r'
  1118  00F428  61                 	db	97	;'a'
  1119  00F429  6E                 	db	110	;'n'
  1120  00F42A  73                 	db	115	;'s'
  1121  00F42B  6D                 	db	109	;'m'
  1122  00F42C  69                 	db	105	;'i'
  1123  00F42D  74                 	db	116	;'t'
  1124  00F42E  73                 	db	115	;'s'
  1125  00F42F  20                 	db	32
  1126  00F430  52                 	db	82	;'R'
  1127  00F431  46                 	db	70	;'F'
  1128  00F432  20                 	db	32
  1129  00F433  63                 	db	99	;'c'
  1130  00F434  6F                 	db	111	;'o'
  1131  00F435  6E                 	db	110	;'n'
  1132  00F436  66                 	db	102	;'f'
  1133  00F437  69                 	db	105	;'i'
  1134  00F438  67                 	db	103	;'g'
  1135  00F439  20                 	db	32
  1136  00F43A  25                 	db	37
  1137  00F43B  64                 	db	100	;'d'
  1138  00F43C  20                 	db	32
  1139  00F43D  63                 	db	99	;'c'
  1140  00F43E  68                 	db	104	;'h'
  1141  00F43F  61                 	db	97	;'a'
  1142  00F440  6E                 	db	110	;'n'
  1143  00F441  6E                 	db	110	;'n'
  1144  00F442  65                 	db	101	;'e'
  1145  00F443  6C                 	db	108	;'l'
  1146  00F444  20                 	db	32
  1147  00F445  25                 	db	37
  1148  00F446  63                 	db	99	;'c'
  1149  00F447  20                 	db	32
  1150  00F448  00                 	db	0
  1151  00F449                     STR_74:
  1152  00F449  52                 	db	82	;'R'
  1153  00F44A  46                 	db	70	;'F'
  1154  00F44B  20                 	db	32
  1155  00F44C  63                 	db	99	;'c'
  1156  00F44D  6F                 	db	111	;'o'
  1157  00F44E  6E                 	db	110	;'n'
  1158  00F44F  66                 	db	102	;'f'
  1159  00F450  69                 	db	105	;'i'
  1160  00F451  67                 	db	103	;'g'
  1161  00F452  20                 	db	32
  1162  00F453  25                 	db	37
  1163  00F454  64                 	db	100	;'d'
  1164  00F455  20                 	db	32
  1165  00F456  63                 	db	99	;'c'
  1166  00F457  68                 	db	104	;'h'
  1167  00F458  61                 	db	97	;'a'
  1168  00F459  6E                 	db	110	;'n'
  1169  00F45A  6E                 	db	110	;'n'
  1170  00F45B  65                 	db	101	;'e'
  1171  00F45C  6C                 	db	108	;'l'
  1172  00F45D  20                 	db	32
  1173  00F45E  25                 	db	37
  1174  00F45F  63                 	db	99	;'c'
  1175  00F460  20                 	db	32
  1176  00F461  64                 	db	100	;'d'
  1177  00F462  65                 	db	101	;'e'
  1178  00F463  76                 	db	118	;'v'
  1179  00F464  69                 	db	105	;'i'
  1180  00F465  63                 	db	99	;'c'
  1181  00F466  65                 	db	101	;'e'
  1182  00F467  20                 	db	32
  1183  00F468  25                 	db	37
  1184  00F469  64                 	db	100	;'d'
  1185  00F46A  20                 	db	32
  1186  00F46B  73                 	db	115	;'s'
  1187  00F46C  75                 	db	117	;'u'
  1188  00F46D  63                 	db	99	;'c'
  1189  00F46E  63                 	db	99	;'c'
  1190  00F46F  65                 	db	101	;'e'
  1191  00F470  73                 	db	115	;'s'
  1192  00F471  73                 	db	115	;'s'
  1193  00F472  66                 	db	102	;'f'
  1194  00F473  75                 	db	117	;'u'
  1195  00F474  6C                 	db	108	;'l'
  1196  00F475  6C                 	db	108	;'l'
  1197  00F476  79                 	db	121	;'y'
  1198  00F477  20                 	db	32
  1199  00F478  65                 	db	101	;'e'
  1200  00F479  72                 	db	114	;'r'
  1201  00F47A  61                 	db	97	;'a'
  1202  00F47B  73                 	db	115	;'s'
  1203  00F47C  65                 	db	101	;'e'
  1204  00F47D  64                 	db	100	;'d'
  1205  00F47E  00                 	db	0
  1206  00F47F                     STR_68:
  1207  00F47F  45                 	db	69	;'E'
  1208  00F480  72                 	db	114	;'r'
  1209  00F481  72                 	db	114	;'r'
  1210  00F482  6F                 	db	111	;'o'
  1211  00F483  72                 	db	114	;'r'
  1212  00F484  3A                 	db	58	;':'
  1213  00F485  20                 	db	32
  1214  00F486  4E                 	db	78	;'N'
  1215  00F487  6F                 	db	111	;'o'
  1216  00F488  20                 	db	32
  1217  00F489  52                 	db	82	;'R'
  1218  00F48A  46                 	db	70	;'F'
  1219  00F48B  20                 	db	32
  1220  00F48C  63                 	db	99	;'c'
  1221  00F48D  6F                 	db	111	;'o'
  1222  00F48E  6E                 	db	110	;'n'
  1223  00F48F  66                 	db	102	;'f'
  1224  00F490  69                 	db	105	;'i'
  1225  00F491  67                 	db	103	;'g'
  1226  00F492  20                 	db	32
  1227  00F493  32                 	db	50	;'2'
  1228  00F494  2C                 	db	44
  1229  00F495  20                 	db	32
  1230  00F496  63                 	db	99	;'c'
  1231  00F497  68                 	db	104	;'h'
  1232  00F498  61                 	db	97	;'a'
  1233  00F499  6E                 	db	110	;'n'
  1234  00F49A  6E                 	db	110	;'n'
  1235  00F49B  65                 	db	101	;'e'
  1236  00F49C  6C                 	db	108	;'l'
  1237  00F49D  20                 	db	32
  1238  00F49E  48                 	db	72	;'H'
  1239  00F49F  20                 	db	32
  1240  00F4A0  64                 	db	100	;'d'
  1241  00F4A1  65                 	db	101	;'e'
  1242  00F4A2  76                 	db	118	;'v'
  1243  00F4A3  69                 	db	105	;'i'
  1244  00F4A4  63                 	db	99	;'c'
  1245  00F4A5  65                 	db	101	;'e'
  1246  00F4A6  20                 	db	32
  1247  00F4A7  73                 	db	115	;'s'
  1248  00F4A8  70                 	db	112	;'p'
  1249  00F4A9  65                 	db	101	;'e'
  1250  00F4AA  63                 	db	99	;'c'
  1251  00F4AB  69                 	db	105	;'i'
  1252  00F4AC  66                 	db	102	;'f'
  1253  00F4AD  69                 	db	105	;'i'
  1254  00F4AE  65                 	db	101	;'e'
  1255  00F4AF  64                 	db	100	;'d'
  1256  00F4B0  00                 	db	0
  1257  00F4B1                     STR_69:
  1258  00F4B1  45                 	db	69	;'E'
  1259  00F4B2  72                 	db	114	;'r'
  1260  00F4B3  72                 	db	114	;'r'
  1261  00F4B4  6F                 	db	111	;'o'
  1262  00F4B5  72                 	db	114	;'r'
  1263  00F4B6  3A                 	db	58	;':'
  1264  00F4B7  20                 	db	32
  1265  00F4B8  52                 	db	82	;'R'
  1266  00F4B9  46                 	db	70	;'F'
  1267  00F4BA  20                 	db	32
  1268  00F4BB  63                 	db	99	;'c'
  1269  00F4BC  6F                 	db	111	;'o'
  1270  00F4BD  6E                 	db	110	;'n'
  1271  00F4BE  66                 	db	102	;'f'
  1272  00F4BF  69                 	db	105	;'i'
  1273  00F4C0  67                 	db	103	;'g'
  1274  00F4C1  20                 	db	32
  1275  00F4C2  32                 	db	50	;'2'
  1276  00F4C3  2C                 	db	44
  1277  00F4C4  20                 	db	32
  1278  00F4C5  63                 	db	99	;'c'
  1279  00F4C6  68                 	db	104	;'h'
  1280  00F4C7  61                 	db	97	;'a'
  1281  00F4C8  6E                 	db	110	;'n'
  1282  00F4C9  6E                 	db	110	;'n'
  1283  00F4CA  65                 	db	101	;'e'
  1284  00F4CB  6C                 	db	108	;'l'
  1285  00F4CC  20                 	db	32
  1286  00F4CD  48                 	db	72	;'H'
  1287  00F4CE  20                 	db	32
  1288  00F4CF  64                 	db	100	;'d'
  1289  00F4D0  65                 	db	101	;'e'
  1290  00F4D1  76                 	db	118	;'v'
  1291  00F4D2  69                 	db	105	;'i'
  1292  00F4D3  63                 	db	99	;'c'
  1293  00F4D4  65                 	db	101	;'e'
  1294  00F4D5  20                 	db	32
  1295  00F4D6  6F                 	db	111	;'o'
  1296  00F4D7  75                 	db	117	;'u'
  1297  00F4D8  74                 	db	116	;'t'
  1298  00F4D9  20                 	db	32
  1299  00F4DA  6F                 	db	111	;'o'
  1300  00F4DB  66                 	db	102	;'f'
  1301  00F4DC  20                 	db	32
  1302  00F4DD  72                 	db	114	;'r'
  1303  00F4DE  61                 	db	97	;'a'
  1304  00F4DF  6E                 	db	110	;'n'
  1305  00F4E0  67                 	db	103	;'g'
  1306  00F4E1  65                 	db	101	;'e'
  1307  00F4E2  00                 	db	0
  1308  00F4E3                     STR_112:
  1309  00F4E3  53                 	db	83	;'S'
  1310  00F4E4  65                 	db	101	;'e'
  1311  00F4E5  74                 	db	116	;'t'
  1312  00F4E6  73                 	db	115	;'s'
  1313  00F4E7  20                 	db	32
  1314  00F4E8  52                 	db	82	;'R'
  1315  00F4E9  65                 	db	101	;'e'
  1316  00F4EA  6D                 	db	109	;'m'
  1317  00F4EB  6F                 	db	111	;'o'
  1318  00F4EC  74                 	db	116	;'t'
  1319  00F4ED  65                 	db	101	;'e'
  1320  00F4EE  20                 	db	32
  1321  00F4EF  62                 	db	98	;'b'
  1322  00F4F0  75                 	db	117	;'u'
  1323  00F4F1  74                 	db	116	;'t'
  1324  00F4F2  74                 	db	116	;'t'
  1325  00F4F3  6F                 	db	111	;'o'
  1326  00F4F4  6E                 	db	110	;'n'
  1327  00F4F5  20                 	db	32
  1328  00F4F6  74                 	db	116	;'t'
  1329  00F4F7  6F                 	db	111	;'o'
  1330  00F4F8  20                 	db	32
  1331  00F4F9  73                 	db	115	;'s'
  1332  00F4FA  65                 	db	101	;'e'
  1333  00F4FB  6E                 	db	110	;'n'
  1334  00F4FC  64                 	db	100	;'d'
  1335  00F4FD  20                 	db	32
  1336  00F4FE  52                 	db	82	;'R'
  1337  00F4FF  46                 	db	70	;'F'
  1338  00F500  20                 	db	32
  1339  00F501  43                 	db	67	;'C'
  1340  00F502  6F                 	db	111	;'o'
  1341  00F503  6E                 	db	110	;'n'
  1342  00F504  66                 	db	102	;'f'
  1343  00F505  69                 	db	105	;'i'
  1344  00F506  67                 	db	103	;'g'
  1345  00F507  20                 	db	32
  1346  00F508  32                 	db	50	;'2'
  1347  00F509  20                 	db	32
  1348  00F50A  63                 	db	99	;'c'
  1349  00F50B  68                 	db	104	;'h'
  1350  00F50C  61                 	db	97	;'a'
  1351  00F50D  6E                 	db	110	;'n'
  1352  00F50E  6E                 	db	110	;'n'
  1353  00F50F  65                 	db	101	;'e'
  1354  00F510  6C                 	db	108	;'l'
  1355  00F511  20                 	db	32
  1356  00F512  42                 	db	66	;'B'
  1357  00F513  00                 	db	0
  1358  00F514                     STR_106:
  1359  00F514  53                 	db	83	;'S'
  1360  00F515  65                 	db	101	;'e'
  1361  00F516  74                 	db	116	;'t'
  1362  00F517  73                 	db	115	;'s'
  1363  00F518  20                 	db	32
  1364  00F519  52                 	db	82	;'R'
  1365  00F51A  65                 	db	101	;'e'
  1366  00F51B  6D                 	db	109	;'m'
  1367  00F51C  6F                 	db	111	;'o'
  1368  00F51D  74                 	db	116	;'t'
  1369  00F51E  65                 	db	101	;'e'
  1370  00F51F  20                 	db	32
  1371  00F520  62                 	db	98	;'b'
  1372  00F521  75                 	db	117	;'u'
  1373  00F522  74                 	db	116	;'t'
  1374  00F523  74                 	db	116	;'t'
  1375  00F524  6F                 	db	111	;'o'
  1376  00F525  6E                 	db	110	;'n'
  1377  00F526  20                 	db	32
  1378  00F527  74                 	db	116	;'t'
  1379  00F528  6F                 	db	111	;'o'
  1380  00F529  20                 	db	32
  1381  00F52A  73                 	db	115	;'s'
  1382  00F52B  65                 	db	101	;'e'
  1383  00F52C  6E                 	db	110	;'n'
  1384  00F52D  64                 	db	100	;'d'
  1385  00F52E  20                 	db	32
  1386  00F52F  52                 	db	82	;'R'
  1387  00F530  46                 	db	70	;'F'
  1388  00F531  20                 	db	32
  1389  00F532  43                 	db	67	;'C'
  1390  00F533  6F                 	db	111	;'o'
  1391  00F534  6E                 	db	110	;'n'
  1392  00F535  66                 	db	102	;'f'
  1393  00F536  69                 	db	105	;'i'
  1394  00F537  67                 	db	103	;'g'
  1395  00F538  20                 	db	32
  1396  00F539  31                 	db	49	;'1'
  1397  00F53A  20                 	db	32
  1398  00F53B  63                 	db	99	;'c'
  1399  00F53C  68                 	db	104	;'h'
  1400  00F53D  61                 	db	97	;'a'
  1401  00F53E  6E                 	db	110	;'n'
  1402  00F53F  6E                 	db	110	;'n'
  1403  00F540  65                 	db	101	;'e'
  1404  00F541  6C                 	db	108	;'l'
  1405  00F542  20                 	db	32
  1406  00F543  44                 	db	68	;'D'
  1407  00F544  00                 	db	0
  1408  00F545                     STR_114:
  1409  00F545  53                 	db	83	;'S'
  1410  00F546  65                 	db	101	;'e'
  1411  00F547  74                 	db	116	;'t'
  1412  00F548  73                 	db	115	;'s'
  1413  00F549  20                 	db	32
  1414  00F54A  52                 	db	82	;'R'
  1415  00F54B  65                 	db	101	;'e'
  1416  00F54C  6D                 	db	109	;'m'
  1417  00F54D  6F                 	db	111	;'o'
  1418  00F54E  74                 	db	116	;'t'
  1419  00F54F  65                 	db	101	;'e'
  1420  00F550  20                 	db	32
  1421  00F551  62                 	db	98	;'b'
  1422  00F552  75                 	db	117	;'u'
  1423  00F553  74                 	db	116	;'t'
  1424  00F554  74                 	db	116	;'t'
  1425  00F555  6F                 	db	111	;'o'
  1426  00F556  6E                 	db	110	;'n'
  1427  00F557  20                 	db	32
  1428  00F558  74                 	db	116	;'t'
  1429  00F559  6F                 	db	111	;'o'
  1430  00F55A  20                 	db	32
  1431  00F55B  73                 	db	115	;'s'
  1432  00F55C  65                 	db	101	;'e'
  1433  00F55D  6E                 	db	110	;'n'
  1434  00F55E  64                 	db	100	;'d'
  1435  00F55F  20                 	db	32
  1436  00F560  52                 	db	82	;'R'
  1437  00F561  46                 	db	70	;'F'
  1438  00F562  20                 	db	32
  1439  00F563  43                 	db	67	;'C'
  1440  00F564  6F                 	db	111	;'o'
  1441  00F565  6E                 	db	110	;'n'
  1442  00F566  66                 	db	102	;'f'
  1443  00F567  69                 	db	105	;'i'
  1444  00F568  67                 	db	103	;'g'
  1445  00F569  20                 	db	32
  1446  00F56A  32                 	db	50	;'2'
  1447  00F56B  20                 	db	32
  1448  00F56C  63                 	db	99	;'c'
  1449  00F56D  68                 	db	104	;'h'
  1450  00F56E  61                 	db	97	;'a'
  1451  00F56F  6E                 	db	110	;'n'
  1452  00F570  6E                 	db	110	;'n'
  1453  00F571  65                 	db	101	;'e'
  1454  00F572  6C                 	db	108	;'l'
  1455  00F573  20                 	db	32
  1456  00F574  44                 	db	68	;'D'
  1457  00F575  00                 	db	0
  1458  00F576                     STR_108:
  1459  00F576  53                 	db	83	;'S'
  1460  00F577  65                 	db	101	;'e'
  1461  00F578  74                 	db	116	;'t'
  1462  00F579  73                 	db	115	;'s'
  1463  00F57A  20                 	db	32
  1464  00F57B  52                 	db	82	;'R'
  1465  00F57C  65                 	db	101	;'e'
  1466  00F57D  6D                 	db	109	;'m'
  1467  00F57E  6F                 	db	111	;'o'
  1468  00F57F  74                 	db	116	;'t'
  1469  00F580  65                 	db	101	;'e'
  1470  00F581  20                 	db	32
  1471  00F582  62                 	db	98	;'b'
  1472  00F583  75                 	db	117	;'u'
  1473  00F584  74                 	db	116	;'t'
  1474  00F585  74                 	db	116	;'t'
  1475  00F586  6F                 	db	111	;'o'
  1476  00F587  6E                 	db	110	;'n'
  1477  00F588  20                 	db	32
  1478  00F589  74                 	db	116	;'t'
  1479  00F58A  6F                 	db	111	;'o'
  1480  00F58B  20                 	db	32
  1481  00F58C  73                 	db	115	;'s'
  1482  00F58D  65                 	db	101	;'e'
  1483  00F58E  6E                 	db	110	;'n'
  1484  00F58F  64                 	db	100	;'d'
  1485  00F590  20                 	db	32
  1486  00F591  52                 	db	82	;'R'
  1487  00F592  46                 	db	70	;'F'
  1488  00F593  20                 	db	32
  1489  00F594  43                 	db	67	;'C'
  1490  00F595  6F                 	db	111	;'o'
  1491  00F596  6E                 	db	110	;'n'
  1492  00F597  66                 	db	102	;'f'
  1493  00F598  69                 	db	105	;'i'
  1494  00F599  67                 	db	103	;'g'
  1495  00F59A  20                 	db	32
  1496  00F59B  31                 	db	49	;'1'
  1497  00F59C  20                 	db	32
  1498  00F59D  63                 	db	99	;'c'
  1499  00F59E  68                 	db	104	;'h'
  1500  00F59F  61                 	db	97	;'a'
  1501  00F5A0  6E                 	db	110	;'n'
  1502  00F5A1  6E                 	db	110	;'n'
  1503  00F5A2  65                 	db	101	;'e'
  1504  00F5A3  6C                 	db	108	;'l'
  1505  00F5A4  20                 	db	32
  1506  00F5A5  45                 	db	69	;'E'
  1507  00F5A6  00                 	db	0
  1508  00F5A7                     STR_110:
  1509  00F5A7  53                 	db	83	;'S'
  1510  00F5A8  65                 	db	101	;'e'
  1511  00F5A9  74                 	db	116	;'t'
  1512  00F5AA  73                 	db	115	;'s'
  1513  00F5AB  20                 	db	32
  1514  00F5AC  52                 	db	82	;'R'
  1515  00F5AD  65                 	db	101	;'e'
  1516  00F5AE  6D                 	db	109	;'m'
  1517  00F5AF  6F                 	db	111	;'o'
  1518  00F5B0  74                 	db	116	;'t'
  1519  00F5B1  65                 	db	101	;'e'
  1520  00F5B2  20                 	db	32
  1521  00F5B3  62                 	db	98	;'b'
  1522  00F5B4  75                 	db	117	;'u'
  1523  00F5B5  74                 	db	116	;'t'
  1524  00F5B6  74                 	db	116	;'t'
  1525  00F5B7  6F                 	db	111	;'o'
  1526  00F5B8  6E                 	db	110	;'n'
  1527  00F5B9  20                 	db	32
  1528  00F5BA  74                 	db	116	;'t'
  1529  00F5BB  6F                 	db	111	;'o'
  1530  00F5BC  20                 	db	32
  1531  00F5BD  73                 	db	115	;'s'
  1532  00F5BE  65                 	db	101	;'e'
  1533  00F5BF  6E                 	db	110	;'n'
  1534  00F5C0  64                 	db	100	;'d'
  1535  00F5C1  20                 	db	32
  1536  00F5C2  52                 	db	82	;'R'
  1537  00F5C3  46                 	db	70	;'F'
  1538  00F5C4  20                 	db	32
  1539  00F5C5  43                 	db	67	;'C'
  1540  00F5C6  6F                 	db	111	;'o'
  1541  00F5C7  6E                 	db	110	;'n'
  1542  00F5C8  66                 	db	102	;'f'
  1543  00F5C9  69                 	db	105	;'i'
  1544  00F5CA  67                 	db	103	;'g'
  1545  00F5CB  20                 	db	32
  1546  00F5CC  31                 	db	49	;'1'
  1547  00F5CD  20                 	db	32
  1548  00F5CE  63                 	db	99	;'c'
  1549  00F5CF  68                 	db	104	;'h'
  1550  00F5D0  61                 	db	97	;'a'
  1551  00F5D1  6E                 	db	110	;'n'
  1552  00F5D2  6E                 	db	110	;'n'
  1553  00F5D3  65                 	db	101	;'e'
  1554  00F5D4  6C                 	db	108	;'l'
  1555  00F5D5  20                 	db	32
  1556  00F5D6  46                 	db	70	;'F'
  1557  00F5D7  00                 	db	0
  1558  00F5D8                     STR_116:
  1559  00F5D8  53                 	db	83	;'S'
  1560  00F5D9  65                 	db	101	;'e'
  1561  00F5DA  74                 	db	116	;'t'
  1562  00F5DB  73                 	db	115	;'s'
  1563  00F5DC  20                 	db	32
  1564  00F5DD  52                 	db	82	;'R'
  1565  00F5DE  65                 	db	101	;'e'
  1566  00F5DF  6D                 	db	109	;'m'
  1567  00F5E0  6F                 	db	111	;'o'
  1568  00F5E1  74                 	db	116	;'t'
  1569  00F5E2  65                 	db	101	;'e'
  1570  00F5E3  20                 	db	32
  1571  00F5E4  62                 	db	98	;'b'
  1572  00F5E5  75                 	db	117	;'u'
  1573  00F5E6  74                 	db	116	;'t'
  1574  00F5E7  74                 	db	116	;'t'
  1575  00F5E8  6F                 	db	111	;'o'
  1576  00F5E9  6E                 	db	110	;'n'
  1577  00F5EA  20                 	db	32
  1578  00F5EB  74                 	db	116	;'t'
  1579  00F5EC  6F                 	db	111	;'o'
  1580  00F5ED  20                 	db	32
  1581  00F5EE  73                 	db	115	;'s'
  1582  00F5EF  65                 	db	101	;'e'
  1583  00F5F0  6E                 	db	110	;'n'
  1584  00F5F1  64                 	db	100	;'d'
  1585  00F5F2  20                 	db	32
  1586  00F5F3  52                 	db	82	;'R'
  1587  00F5F4  46                 	db	70	;'F'
  1588  00F5F5  20                 	db	32
  1589  00F5F6  43                 	db	67	;'C'
  1590  00F5F7  6F                 	db	111	;'o'
  1591  00F5F8  6E                 	db	110	;'n'
  1592  00F5F9  66                 	db	102	;'f'
  1593  00F5FA  69                 	db	105	;'i'
  1594  00F5FB  67                 	db	103	;'g'
  1595  00F5FC  20                 	db	32
  1596  00F5FD  32                 	db	50	;'2'
  1597  00F5FE  20                 	db	32
  1598  00F5FF  63                 	db	99	;'c'
  1599  00F600  68                 	db	104	;'h'
  1600  00F601  61                 	db	97	;'a'
  1601  00F602  6E                 	db	110	;'n'
  1602  00F603  6E                 	db	110	;'n'
  1603  00F604  65                 	db	101	;'e'
  1604  00F605  6C                 	db	108	;'l'
  1605  00F606  20                 	db	32
  1606  00F607  48                 	db	72	;'H'
  1607  00F608  00                 	db	0
  1608  00F609                     STR_48:
  1609  00F609  45                 	db	69	;'E'
  1610  00F60A  72                 	db	114	;'r'
  1611  00F60B  72                 	db	114	;'r'
  1612  00F60C  6F                 	db	111	;'o'
  1613  00F60D  72                 	db	114	;'r'
  1614  00F60E  3A                 	db	58	;':'
  1615  00F60F  20                 	db	32
  1616  00F610  4E                 	db	78	;'N'
  1617  00F611  6F                 	db	111	;'o'
  1618  00F612  20                 	db	32
  1619  00F613  4E                 	db	78	;'N'
  1620  00F614  45                 	db	69	;'E'
  1621  00F615  43                 	db	67	;'C'
  1622  00F616  20                 	db	32
  1623  00F617  63                 	db	99	;'c'
  1624  00F618  6F                 	db	111	;'o'
  1625  00F619  64                 	db	100	;'d'
  1626  00F61A  65                 	db	101	;'e'
  1627  00F61B  20                 	db	32
  1628  00F61C  73                 	db	115	;'s'
  1629  00F61D  61                 	db	97	;'a'
  1630  00F61E  76                 	db	118	;'v'
  1631  00F61F  65                 	db	101	;'e'
  1632  00F620  64                 	db	100	;'d'
  1633  00F621  20                 	db	32
  1634  00F622  66                 	db	102	;'f'
  1635  00F623  6F                 	db	111	;'o'
  1636  00F624  72                 	db	114	;'r'
  1637  00F625  20                 	db	32
  1638  00F626  73                 	db	115	;'s'
  1639  00F627  70                 	db	112	;'p'
  1640  00F628  65                 	db	101	;'e'
  1641  00F629  63                 	db	99	;'c'
  1642  00F62A  69                 	db	105	;'i'
  1643  00F62B  66                 	db	102	;'f'
  1644  00F62C  69                 	db	105	;'i'
  1645  00F62D  65                 	db	101	;'e'
  1646  00F62E  64                 	db	100	;'d'
  1647  00F62F  20                 	db	32
  1648  00F630  63                 	db	99	;'c'
  1649  00F631  6F                 	db	111	;'o'
  1650  00F632  6D                 	db	109	;'m'
  1651  00F633  6D                 	db	109	;'m'
  1652  00F634  61                 	db	97	;'a'
  1653  00F635  6E                 	db	110	;'n'
  1654  00F636  64                 	db	100	;'d'
  1655  00F637  00                 	db	0
  1656  00F638                     STR_49:
  1657  00F638  52                 	db	82	;'R'
  1658  00F639  65                 	db	101	;'e'
  1659  00F63A  6D                 	db	109	;'m'
  1660  00F63B  6F                 	db	111	;'o'
  1661  00F63C  74                 	db	116	;'t'
  1662  00F63D  65                 	db	101	;'e'
  1663  00F63E  42                 	db	66	;'B'
  1664  00F63F  75                 	db	117	;'u'
  1665  00F640  74                 	db	116	;'t'
  1666  00F641  74                 	db	116	;'t'
  1667  00F642  6F                 	db	111	;'o'
  1668  00F643  6E                 	db	110	;'n'
  1669  00F644  25                 	db	37
  1670  00F645  6C                 	db	108	;'l'
  1671  00F646  64                 	db	100	;'d'
  1672  00F647  20                 	db	32
  1673  00F648  6E                 	db	110	;'n'
  1674  00F649  6F                 	db	111	;'o'
  1675  00F64A  77                 	db	119	;'w'
  1676  00F64B  20                 	db	32
  1677  00F64C  74                 	db	116	;'t'
  1678  00F64D  72                 	db	114	;'r'
  1679  00F64E  61                 	db	97	;'a'
  1680  00F64F  6E                 	db	110	;'n'
  1681  00F650  73                 	db	115	;'s'
  1682  00F651  6D                 	db	109	;'m'
  1683  00F652  69                 	db	105	;'i'
  1684  00F653  74                 	db	116	;'t'
  1685  00F654  73                 	db	115	;'s'
  1686  00F655  20                 	db	32
  1687  00F656  4E                 	db	78	;'N'
  1688  00F657  45                 	db	69	;'E'
  1689  00F658  43                 	db	67	;'C'
  1690  00F659  20                 	db	32
  1691  00F65A  63                 	db	99	;'c'
  1692  00F65B  6F                 	db	111	;'o'
  1693  00F65C  64                 	db	100	;'d'
  1694  00F65D  65                 	db	101	;'e'
  1695  00F65E  20                 	db	32
  1696  00F65F  30                 	db	48	;'0'
  1697  00F660  78                 	db	120	;'x'
  1698  00F661  25                 	db	37
  1699  00F662  6C                 	db	108	;'l'
  1700  00F663  58                 	db	88	;'X'
  1701  00F664  20                 	db	32
  1702  00F665  00                 	db	0
  1703  00F666                     STR_124:
  1704  00F666  43                 	db	67	;'C'
  1705  00F667  6C                 	db	108	;'l'
  1706  00F668  65                 	db	101	;'e'
  1707  00F669  61                 	db	97	;'a'
  1708  00F66A  72                 	db	114	;'r'
  1709  00F66B  73                 	db	115	;'s'
  1710  00F66C  20                 	db	32
  1711  00F66D  73                 	db	115	;'s'
  1712  00F66E  61                 	db	97	;'a'
  1713  00F66F  76                 	db	118	;'v'
  1714  00F670  65                 	db	101	;'e'
  1715  00F671  64                 	db	100	;'d'
  1716  00F672  20                 	db	32
  1717  00F673  42                 	db	66	;'B'
  1718  00F674  75                 	db	117	;'u'
  1719  00F675  74                 	db	116	;'t'
  1720  00F676  74                 	db	116	;'t'
  1721  00F677  6F                 	db	111	;'o'
  1722  00F678  6E                 	db	110	;'n'
  1723  00F679  20                 	db	32
  1724  00F67A  66                 	db	102	;'f'
  1725  00F67B  6F                 	db	111	;'o'
  1726  00F67C  72                 	db	114	;'r'
  1727  00F67D  20                 	db	32
  1728  00F67E  52                 	db	82	;'R'
  1729  00F67F  46                 	db	70	;'F'
  1730  00F680  20                 	db	32
  1731  00F681  43                 	db	67	;'C'
  1732  00F682  6F                 	db	111	;'o'
  1733  00F683  6E                 	db	110	;'n'
  1734  00F684  66                 	db	102	;'f'
  1735  00F685  69                 	db	105	;'i'
  1736  00F686  67                 	db	103	;'g'
  1737  00F687  20                 	db	32
  1738  00F688  32                 	db	50	;'2'
  1739  00F689  20                 	db	32
  1740  00F68A  63                 	db	99	;'c'
  1741  00F68B  68                 	db	104	;'h'
  1742  00F68C  61                 	db	97	;'a'
  1743  00F68D  6E                 	db	110	;'n'
  1744  00F68E  6E                 	db	110	;'n'
  1745  00F68F  65                 	db	101	;'e'
  1746  00F690  6C                 	db	108	;'l'
  1747  00F691  20                 	db	32
  1748  00F692  42                 	db	66	;'B'
  1749  00F693  00                 	db	0
  1750  00F694                     STR_118:
  1751  00F694  43                 	db	67	;'C'
  1752  00F695  6C                 	db	108	;'l'
  1753  00F696  65                 	db	101	;'e'
  1754  00F697  61                 	db	97	;'a'
  1755  00F698  72                 	db	114	;'r'
  1756  00F699  73                 	db	115	;'s'
  1757  00F69A  20                 	db	32
  1758  00F69B  73                 	db	115	;'s'
  1759  00F69C  61                 	db	97	;'a'
  1760  00F69D  76                 	db	118	;'v'
  1761  00F69E  65                 	db	101	;'e'
  1762  00F69F  64                 	db	100	;'d'
  1763  00F6A0  20                 	db	32
  1764  00F6A1  42                 	db	66	;'B'
  1765  00F6A2  75                 	db	117	;'u'
  1766  00F6A3  74                 	db	116	;'t'
  1767  00F6A4  74                 	db	116	;'t'
  1768  00F6A5  6F                 	db	111	;'o'
  1769  00F6A6  6E                 	db	110	;'n'
  1770  00F6A7  20                 	db	32
  1771  00F6A8  66                 	db	102	;'f'
  1772  00F6A9  6F                 	db	111	;'o'
  1773  00F6AA  72                 	db	114	;'r'
  1774  00F6AB  20                 	db	32
  1775  00F6AC  52                 	db	82	;'R'
  1776  00F6AD  46                 	db	70	;'F'
  1777  00F6AE  20                 	db	32
  1778  00F6AF  43                 	db	67	;'C'
  1779  00F6B0  6F                 	db	111	;'o'
  1780  00F6B1  6E                 	db	110	;'n'
  1781  00F6B2  66                 	db	102	;'f'
  1782  00F6B3  69                 	db	105	;'i'
  1783  00F6B4  67                 	db	103	;'g'
  1784  00F6B5  20                 	db	32
  1785  00F6B6  31                 	db	49	;'1'
  1786  00F6B7  20                 	db	32
  1787  00F6B8  63                 	db	99	;'c'
  1788  00F6B9  68                 	db	104	;'h'
  1789  00F6BA  61                 	db	97	;'a'
  1790  00F6BB  6E                 	db	110	;'n'
  1791  00F6BC  6E                 	db	110	;'n'
  1792  00F6BD  65                 	db	101	;'e'
  1793  00F6BE  6C                 	db	108	;'l'
  1794  00F6BF  20                 	db	32
  1795  00F6C0  44                 	db	68	;'D'
  1796  00F6C1  00                 	db	0
  1797  00F6C2                     STR_126:
  1798  00F6C2  43                 	db	67	;'C'
  1799  00F6C3  6C                 	db	108	;'l'
  1800  00F6C4  65                 	db	101	;'e'
  1801  00F6C5  61                 	db	97	;'a'
  1802  00F6C6  72                 	db	114	;'r'
  1803  00F6C7  73                 	db	115	;'s'
  1804  00F6C8  20                 	db	32
  1805  00F6C9  73                 	db	115	;'s'
  1806  00F6CA  61                 	db	97	;'a'
  1807  00F6CB  76                 	db	118	;'v'
  1808  00F6CC  65                 	db	101	;'e'
  1809  00F6CD  64                 	db	100	;'d'
  1810  00F6CE  20                 	db	32
  1811  00F6CF  42                 	db	66	;'B'
  1812  00F6D0  75                 	db	117	;'u'
  1813  00F6D1  74                 	db	116	;'t'
  1814  00F6D2  74                 	db	116	;'t'
  1815  00F6D3  6F                 	db	111	;'o'
  1816  00F6D4  6E                 	db	110	;'n'
  1817  00F6D5  20                 	db	32
  1818  00F6D6  66                 	db	102	;'f'
  1819  00F6D7  6F                 	db	111	;'o'
  1820  00F6D8  72                 	db	114	;'r'
  1821  00F6D9  20                 	db	32
  1822  00F6DA  52                 	db	82	;'R'
  1823  00F6DB  46                 	db	70	;'F'
  1824  00F6DC  20                 	db	32
  1825  00F6DD  43                 	db	67	;'C'
  1826  00F6DE  6F                 	db	111	;'o'
  1827  00F6DF  6E                 	db	110	;'n'
  1828  00F6E0  66                 	db	102	;'f'
  1829  00F6E1  69                 	db	105	;'i'
  1830  00F6E2  67                 	db	103	;'g'
  1831  00F6E3  20                 	db	32
  1832  00F6E4  32                 	db	50	;'2'
  1833  00F6E5  20                 	db	32
  1834  00F6E6  63                 	db	99	;'c'
  1835  00F6E7  68                 	db	104	;'h'
  1836  00F6E8  61                 	db	97	;'a'
  1837  00F6E9  6E                 	db	110	;'n'
  1838  00F6EA  6E                 	db	110	;'n'
  1839  00F6EB  65                 	db	101	;'e'
  1840  00F6EC  6C                 	db	108	;'l'
  1841  00F6ED  20                 	db	32
  1842  00F6EE  44                 	db	68	;'D'
  1843  00F6EF  00                 	db	0
  1844  00F6F0                     STR_120:
  1845  00F6F0  43                 	db	67	;'C'
  1846  00F6F1  6C                 	db	108	;'l'
  1847  00F6F2  65                 	db	101	;'e'
  1848  00F6F3  61                 	db	97	;'a'
  1849  00F6F4  72                 	db	114	;'r'
  1850  00F6F5  73                 	db	115	;'s'
  1851  00F6F6  20                 	db	32
  1852  00F6F7  73                 	db	115	;'s'
  1853  00F6F8  61                 	db	97	;'a'
  1854  00F6F9  76                 	db	118	;'v'
  1855  00F6FA  65                 	db	101	;'e'
  1856  00F6FB  64                 	db	100	;'d'
  1857  00F6FC  20                 	db	32
  1858  00F6FD  42                 	db	66	;'B'
  1859  00F6FE  75                 	db	117	;'u'
  1860  00F6FF  74                 	db	116	;'t'
  1861  00F700  74                 	db	116	;'t'
  1862  00F701  6F                 	db	111	;'o'
  1863  00F702  6E                 	db	110	;'n'
  1864  00F703  20                 	db	32
  1865  00F704  66                 	db	102	;'f'
  1866  00F705  6F                 	db	111	;'o'
  1867  00F706  72                 	db	114	;'r'
  1868  00F707  20                 	db	32
  1869  00F708  52                 	db	82	;'R'
  1870  00F709  46                 	db	70	;'F'
  1871  00F70A  20                 	db	32
  1872  00F70B  43                 	db	67	;'C'
  1873  00F70C  6F                 	db	111	;'o'
  1874  00F70D  6E                 	db	110	;'n'
  1875  00F70E  66                 	db	102	;'f'
  1876  00F70F  69                 	db	105	;'i'
  1877  00F710  67                 	db	103	;'g'
  1878  00F711  20                 	db	32
  1879  00F712  31                 	db	49	;'1'
  1880  00F713  20                 	db	32
  1881  00F714  63                 	db	99	;'c'
  1882  00F715  68                 	db	104	;'h'
  1883  00F716  61                 	db	97	;'a'
  1884  00F717  6E                 	db	110	;'n'
  1885  00F718  6E                 	db	110	;'n'
  1886  00F719  65                 	db	101	;'e'
  1887  00F71A  6C                 	db	108	;'l'
  1888  00F71B  20                 	db	32
  1889  00F71C  45                 	db	69	;'E'
  1890  00F71D  00                 	db	0
  1891  00F71E                     STR_122:
  1892  00F71E  43                 	db	67	;'C'
  1893  00F71F  6C                 	db	108	;'l'
  1894  00F720  65                 	db	101	;'e'
  1895  00F721  61                 	db	97	;'a'
  1896  00F722  72                 	db	114	;'r'
  1897  00F723  73                 	db	115	;'s'
  1898  00F724  20                 	db	32
  1899  00F725  73                 	db	115	;'s'
  1900  00F726  61                 	db	97	;'a'
  1901  00F727  76                 	db	118	;'v'
  1902  00F728  65                 	db	101	;'e'
  1903  00F729  64                 	db	100	;'d'
  1904  00F72A  20                 	db	32
  1905  00F72B  42                 	db	66	;'B'
  1906  00F72C  75                 	db	117	;'u'
  1907  00F72D  74                 	db	116	;'t'
  1908  00F72E  74                 	db	116	;'t'
  1909  00F72F  6F                 	db	111	;'o'
  1910  00F730  6E                 	db	110	;'n'
  1911  00F731  20                 	db	32
  1912  00F732  66                 	db	102	;'f'
  1913  00F733  6F                 	db	111	;'o'
  1914  00F734  72                 	db	114	;'r'
  1915  00F735  20                 	db	32
  1916  00F736  52                 	db	82	;'R'
  1917  00F737  46                 	db	70	;'F'
  1918  00F738  20                 	db	32
  1919  00F739  43                 	db	67	;'C'
  1920  00F73A  6F                 	db	111	;'o'
  1921  00F73B  6E                 	db	110	;'n'
  1922  00F73C  66                 	db	102	;'f'
  1923  00F73D  69                 	db	105	;'i'
  1924  00F73E  67                 	db	103	;'g'
  1925  00F73F  20                 	db	32
  1926  00F740  31                 	db	49	;'1'
  1927  00F741  20                 	db	32
  1928  00F742  63                 	db	99	;'c'
  1929  00F743  68                 	db	104	;'h'
  1930  00F744  61                 	db	97	;'a'
  1931  00F745  6E                 	db	110	;'n'
  1932  00F746  6E                 	db	110	;'n'
  1933  00F747  65                 	db	101	;'e'
  1934  00F748  6C                 	db	108	;'l'
  1935  00F749  20                 	db	32
  1936  00F74A  46                 	db	70	;'F'
  1937  00F74B  00                 	db	0
  1938  00F74C                     STR_128:
  1939  00F74C  43                 	db	67	;'C'
  1940  00F74D  6C                 	db	108	;'l'
  1941  00F74E  65                 	db	101	;'e'
  1942  00F74F  61                 	db	97	;'a'
  1943  00F750  72                 	db	114	;'r'
  1944  00F751  73                 	db	115	;'s'
  1945  00F752  20                 	db	32
  1946  00F753  73                 	db	115	;'s'
  1947  00F754  61                 	db	97	;'a'
  1948  00F755  76                 	db	118	;'v'
  1949  00F756  65                 	db	101	;'e'
  1950  00F757  64                 	db	100	;'d'
  1951  00F758  20                 	db	32
  1952  00F759  42                 	db	66	;'B'
  1953  00F75A  75                 	db	117	;'u'
  1954  00F75B  74                 	db	116	;'t'
  1955  00F75C  74                 	db	116	;'t'
  1956  00F75D  6F                 	db	111	;'o'
  1957  00F75E  6E                 	db	110	;'n'
  1958  00F75F  20                 	db	32
  1959  00F760  66                 	db	102	;'f'
  1960  00F761  6F                 	db	111	;'o'
  1961  00F762  72                 	db	114	;'r'
  1962  00F763  20                 	db	32
  1963  00F764  52                 	db	82	;'R'
  1964  00F765  46                 	db	70	;'F'
  1965  00F766  20                 	db	32
  1966  00F767  43                 	db	67	;'C'
  1967  00F768  6F                 	db	111	;'o'
  1968  00F769  6E                 	db	110	;'n'
  1969  00F76A  66                 	db	102	;'f'
  1970  00F76B  69                 	db	105	;'i'
  1971  00F76C  67                 	db	103	;'g'
  1972  00F76D  20                 	db	32
  1973  00F76E  32                 	db	50	;'2'
  1974  00F76F  20                 	db	32
  1975  00F770  63                 	db	99	;'c'
  1976  00F771  68                 	db	104	;'h'
  1977  00F772  61                 	db	97	;'a'
  1978  00F773  6E                 	db	110	;'n'
  1979  00F774  6E                 	db	110	;'n'
  1980  00F775  65                 	db	101	;'e'
  1981  00F776  6C                 	db	108	;'l'
  1982  00F777  20                 	db	32
  1983  00F778  48                 	db	72	;'H'
  1984  00F779  00                 	db	0
  1985  00F77A                     STR_71:
  1986  00F77A  45                 	db	69	;'E'
  1987  00F77B  72                 	db	114	;'r'
  1988  00F77C  72                 	db	114	;'r'
  1989  00F77D  6F                 	db	111	;'o'
  1990  00F77E  72                 	db	114	;'r'
  1991  00F77F  3A                 	db	58	;':'
  1992  00F780  20                 	db	32
  1993  00F781  4E                 	db	78	;'N'
  1994  00F782  45                 	db	69	;'E'
  1995  00F783  43                 	db	67	;'C'
  1996  00F784  20                 	db	32
  1997  00F785  63                 	db	99	;'c'
  1998  00F786  6F                 	db	111	;'o'
  1999  00F787  64                 	db	100	;'d'
  2000  00F788  65                 	db	101	;'e'
  2001  00F789  20                 	db	32
  2002  00F78A  61                 	db	97	;'a'
  2003  00F78B  6C                 	db	108	;'l'
  2004  00F78C  72                 	db	114	;'r'
  2005  00F78D  65                 	db	101	;'e'
  2006  00F78E  61                 	db	97	;'a'
  2007  00F78F  64                 	db	100	;'d'
  2008  00F790  79                 	db	121	;'y'
  2009  00F791  20                 	db	32
  2010  00F792  73                 	db	115	;'s'
  2011  00F793  61                 	db	97	;'a'
  2012  00F794  76                 	db	118	;'v'
  2013  00F795  65                 	db	101	;'e'
  2014  00F796  64                 	db	100	;'d'
  2015  00F797  20                 	db	32
  2016  00F798  74                 	db	116	;'t'
  2017  00F799  6F                 	db	111	;'o'
  2018  00F79A  20                 	db	32
  2019  00F79B  74                 	db	116	;'t'
  2020  00F79C  68                 	db	104	;'h'
  2021  00F79D  69                 	db	105	;'i'
  2022  00F79E  73                 	db	115	;'s'
  2023  00F79F  20                 	db	32
  2024  00F7A0  52                 	db	82	;'R'
  2025  00F7A1  46                 	db	70	;'F'
  2026  00F7A2  20                 	db	32
  2027  00F7A3  63                 	db	99	;'c'
  2028  00F7A4  6F                 	db	111	;'o'
  2029  00F7A5  64                 	db	100	;'d'
  2030  00F7A6  65                 	db	101	;'e'
  2031  00F7A7  00                 	db	0
  2032  00F7A8                     STR_47:
  2033  00F7A8  4E                 	db	78	;'N'
  2034  00F7A9  45                 	db	69	;'E'
  2035  00F7AA  43                 	db	67	;'C'
  2036  00F7AB  20                 	db	32
  2037  00F7AC  43                 	db	67	;'C'
  2038  00F7AD  6F                 	db	111	;'o'
  2039  00F7AE  64                 	db	100	;'d'
  2040  00F7AF  65                 	db	101	;'e'
  2041  00F7B0  20                 	db	32
  2042  00F7B1  61                 	db	97	;'a'
  2043  00F7B2  64                 	db	100	;'d'
  2044  00F7B3  64                 	db	100	;'d'
  2045  00F7B4  72                 	db	114	;'r'
  2046  00F7B5  65                 	db	101	;'e'
  2047  00F7B6  73                 	db	115	;'s'
  2048  00F7B7  73                 	db	115	;'s'
  2049  00F7B8  3A                 	db	58	;':'
  2050  00F7B9  20                 	db	32
  2051  00F7BA  30                 	db	48	;'0'
  2052  00F7BB  78                 	db	120	;'x'
  2053  00F7BC  25                 	db	37
  2054  00F7BD  30                 	db	48	;'0'
  2055  00F7BE  32                 	db	50	;'2'
  2056  00F7BF  58                 	db	88	;'X'
  2057  00F7C0  20                 	db	32
  2058  00F7C1  2C                 	db	44
  2059  00F7C2  20                 	db	32
  2060  00F7C3  63                 	db	99	;'c'
  2061  00F7C4  6F                 	db	111	;'o'
  2062  00F7C5  6D                 	db	109	;'m'
  2063  00F7C6  6D                 	db	109	;'m'
  2064  00F7C7  61                 	db	97	;'a'
  2065  00F7C8  6E                 	db	110	;'n'
  2066  00F7C9  64                 	db	100	;'d'
  2067  00F7CA  3A                 	db	58	;':'
  2068  00F7CB  20                 	db	32
  2069  00F7CC  30                 	db	48	;'0'
  2070  00F7CD  78                 	db	120	;'x'
  2071  00F7CE  25                 	db	37
  2072  00F7CF  30                 	db	48	;'0'
  2073  00F7D0  32                 	db	50	;'2'
  2074  00F7D1  58                 	db	88	;'X'
  2075  00F7D2  20                 	db	32
  2076  00F7D3  00                 	db	0
  2077  00F7D4                     STR_75:
  2078  00F7D4  52                 	db	82	;'R'
  2079  00F7D5  46                 	db	70	;'F'
  2080  00F7D6  20                 	db	32
  2081  00F7D7  63                 	db	99	;'c'
  2082  00F7D8  6F                 	db	111	;'o'
  2083  00F7D9  6E                 	db	110	;'n'
  2084  00F7DA  66                 	db	102	;'f'
  2085  00F7DB  69                 	db	105	;'i'
  2086  00F7DC  67                 	db	103	;'g'
  2087  00F7DD  20                 	db	32
  2088  00F7DE  25                 	db	37
  2089  00F7DF  64                 	db	100	;'d'
  2090  00F7E0  20                 	db	32
  2091  00F7E1  63                 	db	99	;'c'
  2092  00F7E2  68                 	db	104	;'h'
  2093  00F7E3  61                 	db	97	;'a'
  2094  00F7E4  6E                 	db	110	;'n'
  2095  00F7E5  6E                 	db	110	;'n'
  2096  00F7E6  65                 	db	101	;'e'
  2097  00F7E7  6C                 	db	108	;'l'
  2098  00F7E8  20                 	db	32
  2099  00F7E9  25                 	db	37
  2100  00F7EA  63                 	db	99	;'c'
  2101  00F7EB  20                 	db	32
  2102  00F7EC  73                 	db	115	;'s'
  2103  00F7ED  75                 	db	117	;'u'
  2104  00F7EE  63                 	db	99	;'c'
  2105  00F7EF  63                 	db	99	;'c'
  2106  00F7F0  65                 	db	101	;'e'
  2107  00F7F1  73                 	db	115	;'s'
  2108  00F7F2  73                 	db	115	;'s'
  2109  00F7F3  66                 	db	102	;'f'
  2110  00F7F4  75                 	db	117	;'u'
  2111  00F7F5  6C                 	db	108	;'l'
  2112  00F7F6  6C                 	db	108	;'l'
  2113  00F7F7  79                 	db	121	;'y'
  2114  00F7F8  20                 	db	32
  2115  00F7F9  65                 	db	101	;'e'
  2116  00F7FA  72                 	db	114	;'r'
  2117  00F7FB  61                 	db	97	;'a'
  2118  00F7FC  73                 	db	115	;'s'
  2119  00F7FD  65                 	db	101	;'e'
  2120  00F7FE  64                 	db	100	;'d'
  2121  00F7FF  00                 	db	0
  2122  00F800                     STR_76:
  2123  00F800  45                 	db	69	;'E'
  2124  00F801  72                 	db	114	;'r'
  2125  00F802  72                 	db	114	;'r'
  2126  00F803  6F                 	db	111	;'o'
  2127  00F804  72                 	db	114	;'r'
  2128  00F805  3A                 	db	58	;':'
  2129  00F806  20                 	db	32
  2130  00F807  52                 	db	82	;'R'
  2131  00F808  46                 	db	70	;'F'
  2132  00F809  20                 	db	32
  2133  00F80A  63                 	db	99	;'c'
  2134  00F80B  68                 	db	104	;'h'
  2135  00F80C  61                 	db	97	;'a'
  2136  00F80D  6E                 	db	110	;'n'
  2137  00F80E  6E                 	db	110	;'n'
  2138  00F80F  65                 	db	101	;'e'
  2139  00F810  6C                 	db	108	;'l'
  2140  00F811  20                 	db	32
  2141  00F812  6E                 	db	110	;'n'
  2142  00F813  65                 	db	101	;'e'
  2143  00F814  65                 	db	101	;'e'
  2144  00F815  64                 	db	100	;'d'
  2145  00F816  73                 	db	115	;'s'
  2146  00F817  20                 	db	32
  2147  00F818  74                 	db	116	;'t'
  2148  00F819  6F                 	db	111	;'o'
  2149  00F81A  20                 	db	32
  2150  00F81B  62                 	db	98	;'b'
  2151  00F81C  65                 	db	101	;'e'
  2152  00F81D  20                 	db	32
  2153  00F81E  6F                 	db	111	;'o'
  2154  00F81F  6E                 	db	110	;'n'
  2155  00F820  65                 	db	101	;'e'
  2156  00F821  20                 	db	32
  2157  00F822  63                 	db	99	;'c'
  2158  00F823  68                 	db	104	;'h'
  2159  00F824  61                 	db	97	;'a'
  2160  00F825  72                 	db	114	;'r'
  2161  00F826  61                 	db	97	;'a'
  2162  00F827  63                 	db	99	;'c'
  2163  00F828  74                 	db	116	;'t'
  2164  00F829  65                 	db	101	;'e'
  2165  00F82A  72                 	db	114	;'r'
  2166  00F82B  00                 	db	0
  2167  00F82C                     STR_70:
  2168  00F82C  45                 	db	69	;'E'
  2169  00F82D  72                 	db	114	;'r'
  2170  00F82E  72                 	db	114	;'r'
  2171  00F82F  6F                 	db	111	;'o'
  2172  00F830  72                 	db	114	;'r'
  2173  00F831  3A                 	db	58	;':'
  2174  00F832  20                 	db	32
  2175  00F833  4E                 	db	78	;'N'
  2176  00F834  6F                 	db	111	;'o'
  2177  00F835  20                 	db	32
  2178  00F836  73                 	db	115	;'s'
  2179  00F837  70                 	db	112	;'p'
  2180  00F838  61                 	db	97	;'a'
  2181  00F839  63                 	db	99	;'c'
  2182  00F83A  65                 	db	101	;'e'
  2183  00F83B  20                 	db	32
  2184  00F83C  61                 	db	97	;'a'
  2185  00F83D  76                 	db	118	;'v'
  2186  00F83E  61                 	db	97	;'a'
  2187  00F83F  69                 	db	105	;'i'
  2188  00F840  6C                 	db	108	;'l'
  2189  00F841  61                 	db	97	;'a'
  2190  00F842  62                 	db	98	;'b'
  2191  00F843  6C                 	db	108	;'l'
  2192  00F844  65                 	db	101	;'e'
  2193  00F845  20                 	db	32
  2194  00F846  74                 	db	116	;'t'
  2195  00F847  6F                 	db	111	;'o'
  2196  00F848  20                 	db	32
  2197  00F849  74                 	db	116	;'t'
  2198  00F84A  68                 	db	104	;'h'
  2199  00F84B  69                 	db	105	;'i'
  2200  00F84C  73                 	db	115	;'s'
  2201  00F84D  20                 	db	32
  2202  00F84E  52                 	db	82	;'R'
  2203  00F84F  46                 	db	70	;'F'
  2204  00F850  20                 	db	32
  2205  00F851  63                 	db	99	;'c'
  2206  00F852  6F                 	db	111	;'o'
  2207  00F853  64                 	db	100	;'d'
  2208  00F854  65                 	db	101	;'e'
  2209  00F855  00                 	db	0
  2210  00F856                     STR_130:
  2211  00F856  4E                 	db	78	;'N'
  2212  00F857  45                 	db	69	;'E'
  2213  00F858  43                 	db	67	;'C'
  2214  00F859  20                 	db	32
  2215  00F85A  64                 	db	100	;'d'
  2216  00F85B  65                 	db	101	;'e'
  2217  00F85C  73                 	db	115	;'s'
  2218  00F85D  63                 	db	99	;'c'
  2219  00F85E  72                 	db	114	;'r'
  2220  00F85F  69                 	db	105	;'i'
  2221  00F860  70                 	db	112	;'p'
  2222  00F861  74                 	db	116	;'t'
  2223  00F862  69                 	db	105	;'i'
  2224  00F863  6F                 	db	111	;'o'
  2225  00F864  6E                 	db	110	;'n'
  2226  00F865  20                 	db	32
  2227  00F866  66                 	db	102	;'f'
  2228  00F867  6F                 	db	111	;'o'
  2229  00F868  72                 	db	114	;'r'
  2230  00F869  20                 	db	32
  2231  00F86A  41                 	db	65	;'A'
  2232  00F86B  72                 	db	114	;'r'
  2233  00F86C  62                 	db	98	;'b'
  2234  00F86D  69                 	db	105	;'i'
  2235  00F86E  74                 	db	116	;'t'
  2236  00F86F  72                 	db	114	;'r'
  2237  00F870  61                 	db	97	;'a'
  2238  00F871  72                 	db	114	;'r'
  2239  00F872  79                 	db	121	;'y'
  2240  00F873  20                 	db	32
  2241  00F874  63                 	db	99	;'c'
  2242  00F875  6F                 	db	111	;'o'
  2243  00F876  64                 	db	100	;'d'
  2244  00F877  65                 	db	101	;'e'
  2245  00F878  20                 	db	32
  2246  00F879  73                 	db	115	;'s'
  2247  00F87A  65                 	db	101	;'e'
  2248  00F87B  6E                 	db	110	;'n'
  2249  00F87C  64                 	db	100	;'d'
  2250  00F87D  00                 	db	0
  2251  00F87E                     STR_62:
  2252  00F87E  45                 	db	69	;'E'
  2253  00F87F  72                 	db	114	;'r'
  2254  00F880  72                 	db	114	;'r'
  2255  00F881  6F                 	db	111	;'o'
  2256  00F882  72                 	db	114	;'r'
  2257  00F883  3A                 	db	58	;':'
  2258  00F884  20                 	db	32
  2259  00F885  4E                 	db	78	;'N'
  2260  00F886  6F                 	db	111	;'o'
  2261  00F887  20                 	db	32
  2262  00F888  52                 	db	82	;'R'
  2263  00F889  46                 	db	70	;'F'
  2264  00F88A  20                 	db	32
  2265  00F88B  63                 	db	99	;'c'
  2266  00F88C  6F                 	db	111	;'o'
  2267  00F88D  6E                 	db	110	;'n'
  2268  00F88E  66                 	db	102	;'f'
  2269  00F88F  69                 	db	105	;'i'
  2270  00F890  67                 	db	103	;'g'
  2271  00F891  75                 	db	117	;'u'
  2272  00F892  72                 	db	114	;'r'
  2273  00F893  61                 	db	97	;'a'
  2274  00F894  74                 	db	116	;'t'
  2275  00F895  69                 	db	105	;'i'
  2276  00F896  6F                 	db	111	;'o'
  2277  00F897  6E                 	db	110	;'n'
  2278  00F898  20                 	db	32
  2279  00F899  73                 	db	115	;'s'
  2280  00F89A  70                 	db	112	;'p'
  2281  00F89B  65                 	db	101	;'e'
  2282  00F89C  63                 	db	99	;'c'
  2283  00F89D  69                 	db	105	;'i'
  2284  00F89E  66                 	db	102	;'f'
  2285  00F89F  69                 	db	105	;'i'
  2286  00F8A0  65                 	db	101	;'e'
  2287  00F8A1  64                 	db	100	;'d'
  2288  00F8A2  00                 	db	0
  2289  00F8A3                     STR_64:
  2290  00F8A3  45                 	db	69	;'E'
  2291  00F8A4  72                 	db	114	;'r'
  2292  00F8A5  72                 	db	114	;'r'
  2293  00F8A6  6F                 	db	111	;'o'
  2294  00F8A7  72                 	db	114	;'r'
  2295  00F8A8  3A                 	db	58	;':'
  2296  00F8A9  20                 	db	32
  2297  00F8AA  52                 	db	82	;'R'
  2298  00F8AB  46                 	db	70	;'F'
  2299  00F8AC  20                 	db	32
  2300  00F8AD  63                 	db	99	;'c'
  2301  00F8AE  6F                 	db	111	;'o'
  2302  00F8AF  6E                 	db	110	;'n'
  2303  00F8B0  66                 	db	102	;'f'
  2304  00F8B1  69                 	db	105	;'i'
  2305  00F8B2  67                 	db	103	;'g'
  2306  00F8B3  75                 	db	117	;'u'
  2307  00F8B4  72                 	db	114	;'r'
  2308  00F8B5  61                 	db	97	;'a'
  2309  00F8B6  74                 	db	116	;'t'
  2310  00F8B7  69                 	db	105	;'i'
  2311  00F8B8  6F                 	db	111	;'o'
  2312  00F8B9  6E                 	db	110	;'n'
  2313  00F8BA  20                 	db	32
  2314  00F8BB  6F                 	db	111	;'o'
  2315  00F8BC  75                 	db	117	;'u'
  2316  00F8BD  74                 	db	116	;'t'
  2317  00F8BE  20                 	db	32
  2318  00F8BF  6F                 	db	111	;'o'
  2319  00F8C0  66                 	db	102	;'f'
  2320  00F8C1  20                 	db	32
  2321  00F8C2  72                 	db	114	;'r'
  2322  00F8C3  61                 	db	97	;'a'
  2323  00F8C4  6E                 	db	110	;'n'
  2324  00F8C5  67                 	db	103	;'g'
  2325  00F8C6  65                 	db	101	;'e'
  2326  00F8C7  00                 	db	0
  2327  00F8C8                     STR_51:
  2328  00F8C8  45                 	db	69	;'E'
  2329  00F8C9  72                 	db	114	;'r'
  2330  00F8CA  72                 	db	114	;'r'
  2331  00F8CB  6F                 	db	111	;'o'
  2332  00F8CC  72                 	db	114	;'r'
  2333  00F8CD  3A                 	db	58	;':'
  2334  00F8CE  20                 	db	32
  2335  00F8CF  52                 	db	82	;'R'
  2336  00F8D0  65                 	db	101	;'e'
  2337  00F8D1  6D                 	db	109	;'m'
  2338  00F8D2  6F                 	db	111	;'o'
  2339  00F8D3  74                 	db	116	;'t'
  2340  00F8D4  65                 	db	101	;'e'
  2341  00F8D5  20                 	db	32
  2342  00F8D6  62                 	db	98	;'b'
  2343  00F8D7  75                 	db	117	;'u'
  2344  00F8D8  74                 	db	116	;'t'
  2345  00F8D9  74                 	db	116	;'t'
  2346  00F8DA  6F                 	db	111	;'o'
  2347  00F8DB  6E                 	db	110	;'n'
  2348  00F8DC  20                 	db	32
  2349  00F8DD  6E                 	db	110	;'n'
  2350  00F8DE  75                 	db	117	;'u'
  2351  00F8DF  6D                 	db	109	;'m'
  2352  00F8E0  62                 	db	98	;'b'
  2353  00F8E1  65                 	db	101	;'e'
  2354  00F8E2  72                 	db	114	;'r'
  2355  00F8E3  20                 	db	32
  2356  00F8E4  74                 	db	116	;'t'
  2357  00F8E5  6F                 	db	111	;'o'
  2358  00F8E6  6F                 	db	111	;'o'
  2359  00F8E7  20                 	db	32
  2360  00F8E8  68                 	db	104	;'h'
  2361  00F8E9  69                 	db	105	;'i'
  2362  00F8EA  67                 	db	103	;'g'
  2363  00F8EB  68                 	db	104	;'h'
  2364  00F8EC  00                 	db	0
  2365  00F8ED                     STR_147:
  2366  00F8ED  45                 	db	69	;'E'
  2367  00F8EE  72                 	db	114	;'r'
  2368  00F8EF  72                 	db	114	;'r'
  2369  00F8F0  6F                 	db	111	;'o'
  2370  00F8F1  72                 	db	114	;'r'
  2371  00F8F2  3A                 	db	58	;':'
  2372  00F8F3  20                 	db	32
  2373  00F8F4  4E                 	db	78	;'N'
  2374  00F8F5  6F                 	db	111	;'o'
  2375  00F8F6  20                 	db	32
  2376  00F8F7  72                 	db	114	;'r'
  2377  00F8F8  65                 	db	101	;'e'
  2378  00F8F9  6D                 	db	109	;'m'
  2379  00F8FA  6F                 	db	111	;'o'
  2380  00F8FB  74                 	db	116	;'t'
  2381  00F8FC  65                 	db	101	;'e'
  2382  00F8FD  20                 	db	32
  2383  00F8FE  62                 	db	98	;'b'
  2384  00F8FF  75                 	db	117	;'u'
  2385  00F900  74                 	db	116	;'t'
  2386  00F901  74                 	db	116	;'t'
  2387  00F902  6F                 	db	111	;'o'
  2388  00F903  6E                 	db	110	;'n'
  2389  00F904  20                 	db	32
  2390  00F905  77                 	db	119	;'w'
  2391  00F906  61                 	db	97	;'a'
  2392  00F907  73                 	db	115	;'s'
  2393  00F908  20                 	db	32
  2394  00F909  70                 	db	112	;'p'
  2395  00F90A  72                 	db	114	;'r'
  2396  00F90B  65                 	db	101	;'e'
  2397  00F90C  73                 	db	115	;'s'
  2398  00F90D  73                 	db	115	;'s'
  2399  00F90E  65                 	db	101	;'e'
  2400  00F90F  64                 	db	100	;'d'
  2401  00F910  00                 	db	0
  2402  00F911                     STR_52:
  2403  00F911  45                 	db	69	;'E'
  2404  00F912  72                 	db	114	;'r'
  2405  00F913  72                 	db	114	;'r'
  2406  00F914  6F                 	db	111	;'o'
  2407  00F915  72                 	db	114	;'r'
  2408  00F916  3A                 	db	58	;':'
  2409  00F917  20                 	db	32
  2410  00F918  52                 	db	82	;'R'
  2411  00F919  65                 	db	101	;'e'
  2412  00F91A  6D                 	db	109	;'m'
  2413  00F91B  6F                 	db	111	;'o'
  2414  00F91C  74                 	db	116	;'t'
  2415  00F91D  65                 	db	101	;'e'
  2416  00F91E  20                 	db	32
  2417  00F91F  62                 	db	98	;'b'
  2418  00F920  75                 	db	117	;'u'
  2419  00F921  74                 	db	116	;'t'
  2420  00F922  74                 	db	116	;'t'
  2421  00F923  6F                 	db	111	;'o'
  2422  00F924  6E                 	db	110	;'n'
  2423  00F925  20                 	db	32
  2424  00F926  6E                 	db	110	;'n'
  2425  00F927  6F                 	db	111	;'o'
  2426  00F928  74                 	db	116	;'t'
  2427  00F929  20                 	db	32
  2428  00F92A  73                 	db	115	;'s'
  2429  00F92B  70                 	db	112	;'p'
  2430  00F92C  65                 	db	101	;'e'
  2431  00F92D  63                 	db	99	;'c'
  2432  00F92E  69                 	db	105	;'i'
  2433  00F92F  66                 	db	102	;'f'
  2434  00F930  69                 	db	105	;'i'
  2435  00F931  65                 	db	101	;'e'
  2436  00F932  64                 	db	100	;'d'
  2437  00F933  00                 	db	0
  2438  00F934                     STR_34:
  2439  00F934  45                 	db	69	;'E'
  2440  00F935  72                 	db	114	;'r'
  2441  00F936  72                 	db	114	;'r'
  2442  00F937  6F                 	db	111	;'o'
  2443  00F938  72                 	db	114	;'r'
  2444  00F939  3A                 	db	58	;':'
  2445  00F93A  20                 	db	32
  2446  00F93B  63                 	db	99	;'c'
  2447  00F93C  6F                 	db	111	;'o'
  2448  00F93D  75                 	db	117	;'u'
  2449  00F93E  6C                 	db	108	;'l'
  2450  00F93F  64                 	db	100	;'d'
  2451  00F940  20                 	db	32
  2452  00F941  6E                 	db	110	;'n'
  2453  00F942  6F                 	db	111	;'o'
  2454  00F943  74                 	db	116	;'t'
  2455  00F944  20                 	db	32
  2456  00F945  64                 	db	100	;'d'
  2457  00F946  65                 	db	101	;'e'
  2458  00F947  63                 	db	99	;'c'
  2459  00F948  6F                 	db	111	;'o'
  2460  00F949  64                 	db	100	;'d'
  2461  00F94A  65                 	db	101	;'e'
  2462  00F94B  20                 	db	32
  2463  00F94C  4E                 	db	78	;'N'
  2464  00F94D  45                 	db	69	;'E'
  2465  00F94E  43                 	db	67	;'C'
  2466  00F94F  20                 	db	32
  2467  00F950  63                 	db	99	;'c'
  2468  00F951  6F                 	db	111	;'o'
  2469  00F952  64                 	db	100	;'d'
  2470  00F953  65                 	db	101	;'e'
  2471  00F954  00                 	db	0
  2472  00F955                     STR_140:
  2473  00F955  52                 	db	82	;'R'
  2474  00F956  43                 	db	67	;'C'
  2475  00F957  2D                 	db	45
  2476  00F958  30                 	db	48	;'0'
  2477  00F959  31                 	db	49	;'1'
  2478  00F95A  35                 	db	53	;'5'
  2479  00F95B  2A                 	db	42
  2480  00F95C  33                 	db	51	;'3'
  2481  00F95D  20                 	db	32
  2482  00F95E  43                 	db	67	;'C'
  2483  00F95F  68                 	db	104	;'h'
  2484  00F960  61                 	db	97	;'a'
  2485  00F961  6E                 	db	110	;'n'
  2486  00F962  6E                 	db	110	;'n'
  2487  00F963  65                 	db	101	;'e'
  2488  00F964  6C                 	db	108	;'l'
  2489  00F965  20                 	db	32
  2490  00F966  48                 	db	72	;'H'
  2491  00F967  20                 	db	32
  2492  00F968  64                 	db	100	;'d'
  2493  00F969  65                 	db	101	;'e'
  2494  00F96A  76                 	db	118	;'v'
  2495  00F96B  69                 	db	105	;'i'
  2496  00F96C  63                 	db	99	;'c'
  2497  00F96D  65                 	db	101	;'e'
  2498  00F96E  20                 	db	32
  2499  00F96F  31                 	db	49	;'1'
  2500  00F970  20                 	db	32
  2501  00F971  4F                 	db	79	;'O'
  2502  00F972  46                 	db	70	;'F'
  2503  00F973  46                 	db	70	;'F'
  2504  00F974  00                 	db	0
  2505  00F975                     STR_142:
  2506  00F975  52                 	db	82	;'R'
  2507  00F976  43                 	db	67	;'C'
  2508  00F977  2D                 	db	45
  2509  00F978  30                 	db	48	;'0'
  2510  00F979  31                 	db	49	;'1'
  2511  00F97A  35                 	db	53	;'5'
  2512  00F97B  2A                 	db	42
  2513  00F97C  33                 	db	51	;'3'
  2514  00F97D  20                 	db	32
  2515  00F97E  43                 	db	67	;'C'
  2516  00F97F  68                 	db	104	;'h'
  2517  00F980  61                 	db	97	;'a'
  2518  00F981  6E                 	db	110	;'n'
  2519  00F982  6E                 	db	110	;'n'
  2520  00F983  65                 	db	101	;'e'
  2521  00F984  6C                 	db	108	;'l'
  2522  00F985  20                 	db	32
  2523  00F986  48                 	db	72	;'H'
  2524  00F987  20                 	db	32
  2525  00F988  64                 	db	100	;'d'
  2526  00F989  65                 	db	101	;'e'
  2527  00F98A  76                 	db	118	;'v'
  2528  00F98B  69                 	db	105	;'i'
  2529  00F98C  63                 	db	99	;'c'
  2530  00F98D  65                 	db	101	;'e'
  2531  00F98E  20                 	db	32
  2532  00F98F  32                 	db	50	;'2'
  2533  00F990  20                 	db	32
  2534  00F991  4F                 	db	79	;'O'
  2535  00F992  46                 	db	70	;'F'
  2536  00F993  46                 	db	70	;'F'
  2537  00F994  00                 	db	0
  2538  00F995                     STR_144:
  2539  00F995  52                 	db	82	;'R'
  2540  00F996  43                 	db	67	;'C'
  2541  00F997  2D                 	db	45
  2542  00F998  30                 	db	48	;'0'
  2543  00F999  31                 	db	49	;'1'
  2544  00F99A  35                 	db	53	;'5'
  2545  00F99B  2A                 	db	42
  2546  00F99C  33                 	db	51	;'3'
  2547  00F99D  20                 	db	32
  2548  00F99E  43                 	db	67	;'C'
  2549  00F99F  68                 	db	104	;'h'
  2550  00F9A0  61                 	db	97	;'a'
  2551  00F9A1  6E                 	db	110	;'n'
  2552  00F9A2  6E                 	db	110	;'n'
  2553  00F9A3  65                 	db	101	;'e'
  2554  00F9A4  6C                 	db	108	;'l'
  2555  00F9A5  20                 	db	32
  2556  00F9A6  48                 	db	72	;'H'
  2557  00F9A7  20                 	db	32
  2558  00F9A8  64                 	db	100	;'d'
  2559  00F9A9  65                 	db	101	;'e'
  2560  00F9AA  76                 	db	118	;'v'
  2561  00F9AB  69                 	db	105	;'i'
  2562  00F9AC  63                 	db	99	;'c'
  2563  00F9AD  65                 	db	101	;'e'
  2564  00F9AE  20                 	db	32
  2565  00F9AF  33                 	db	51	;'3'
  2566  00F9B0  20                 	db	32
  2567  00F9B1  4F                 	db	79	;'O'
  2568  00F9B2  46                 	db	70	;'F'
  2569  00F9B3  46                 	db	70	;'F'
  2570  00F9B4  00                 	db	0
  2571  00F9B5                     STR_94:
  2572  00F9B5  43                 	db	67	;'C'
  2573  00F9B6  6C                 	db	108	;'l'
  2574  00F9B7  65                 	db	101	;'e'
  2575  00F9B8  61                 	db	97	;'a'
  2576  00F9B9  72                 	db	114	;'r'
  2577  00F9BA  73                 	db	115	;'s'
  2578  00F9BB  20                 	db	32
  2579  00F9BC  6D                 	db	109	;'m'
  2580  00F9BD  65                 	db	101	;'e'
  2581  00F9BE  6D                 	db	109	;'m'
  2582  00F9BF  6F                 	db	111	;'o'
  2583  00F9C0  72                 	db	114	;'r'
  2584  00F9C1  79                 	db	121	;'y'
  2585  00F9C2  20                 	db	32
  2586  00F9C3  61                 	db	97	;'a'
  2587  00F9C4  6E                 	db	110	;'n'
  2588  00F9C5  64                 	db	100	;'d'
  2589  00F9C6  20                 	db	32
  2590  00F9C7  72                 	db	114	;'r'
  2591  00F9C8  65                 	db	101	;'e'
  2592  00F9C9  73                 	db	115	;'s'
  2593  00F9CA  65                 	db	101	;'e'
  2594  00F9CB  74                 	db	116	;'t'
  2595  00F9CC  73                 	db	115	;'s'
  2596  00F9CD  20                 	db	32
  2597  00F9CE  64                 	db	100	;'d'
  2598  00F9CF  65                 	db	101	;'e'
  2599  00F9D0  76                 	db	118	;'v'
  2600  00F9D1  69                 	db	105	;'i'
  2601  00F9D2  63                 	db	99	;'c'
  2602  00F9D3  65                 	db	101	;'e'
  2603  00F9D4  00                 	db	0
  2604  00F9D5                     STR_78:
  2605  00F9D5  45                 	db	69	;'E'
  2606  00F9D6  6E                 	db	110	;'n'
  2607  00F9D7  74                 	db	116	;'t'
  2608  00F9D8  65                 	db	101	;'e'
  2609  00F9D9  72                 	db	114	;'r'
  2610  00F9DA  20                 	db	32
  2611  00F9DB  59                 	db	89	;'Y'
  2612  00F9DC  20                 	db	32
  2613  00F9DD  74                 	db	116	;'t'
  2614  00F9DE  6F                 	db	111	;'o'
  2615  00F9DF  20                 	db	32
  2616  00F9E0  72                 	db	114	;'r'
  2617  00F9E1  65                 	db	101	;'e'
  2618  00F9E2  73                 	db	115	;'s'
  2619  00F9E3  65                 	db	101	;'e'
  2620  00F9E4  74                 	db	116	;'t'
  2621  00F9E5  20                 	db	32
  2622  00F9E6  6F                 	db	111	;'o'
  2623  00F9E7  72                 	db	114	;'r'
  2624  00F9E8  20                 	db	32
  2625  00F9E9  4E                 	db	78	;'N'
  2626  00F9EA  20                 	db	32
  2627  00F9EB  74                 	db	116	;'t'
  2628  00F9EC  6F                 	db	111	;'o'
  2629  00F9ED  20                 	db	32
  2630  00F9EE  63                 	db	99	;'c'
  2631  00F9EF  61                 	db	97	;'a'
  2632  00F9F0  6E                 	db	110	;'n'
  2633  00F9F1  63                 	db	99	;'c'
  2634  00F9F2  65                 	db	101	;'e'
  2635  00F9F3  6C                 	db	108	;'l'
  2636  00F9F4  00                 	db	0
  2637  00F9F5                     STR_30:
  2638  00F9F5  45                 	db	69	;'E'
  2639  00F9F6  72                 	db	114	;'r'
  2640  00F9F7  72                 	db	114	;'r'
  2641  00F9F8  6F                 	db	111	;'o'
  2642  00F9F9  72                 	db	114	;'r'
  2643  00F9FA  3A                 	db	58	;':'
  2644  00F9FB  20                 	db	32
  2645  00F9FC  63                 	db	99	;'c'
  2646  00F9FD  6F                 	db	111	;'o'
  2647  00F9FE  75                 	db	117	;'u'
  2648  00F9FF  6C                 	db	108	;'l'
  2649  00FA00  64                 	db	100	;'d'
  2650  00FA01  20                 	db	32
  2651  00FA02  6E                 	db	110	;'n'
  2652  00FA03  6F                 	db	111	;'o'
  2653  00FA04  74                 	db	116	;'t'
  2654  00FA05  20                 	db	32
  2655  00FA06  64                 	db	100	;'d'
  2656  00FA07  65                 	db	101	;'e'
  2657  00FA08  63                 	db	99	;'c'
  2658  00FA09  6F                 	db	111	;'o'
  2659  00FA0A  64                 	db	100	;'d'
  2660  00FA0B  65                 	db	101	;'e'
  2661  00FA0C  20                 	db	32
  2662  00FA0D  41                 	db	65	;'A'
  2663  00FA0E  64                 	db	100	;'d'
  2664  00FA0F  64                 	db	100	;'d'
  2665  00FA10  72                 	db	114	;'r'
  2666  00FA11  65                 	db	101	;'e'
  2667  00FA12  73                 	db	115	;'s'
  2668  00FA13  73                 	db	115	;'s'
  2669  00FA14  00                 	db	0
  2670  00FA15                     STR_25:
  2671  00FA15  45                 	db	69	;'E'
  2672  00FA16  72                 	db	114	;'r'
  2673  00FA17  72                 	db	114	;'r'
  2674  00FA18  6F                 	db	111	;'o'
  2675  00FA19  72                 	db	114	;'r'
  2676  00FA1A  3A                 	db	58	;':'
  2677  00FA1B  20                 	db	32
  2678  00FA1C  43                 	db	67	;'C'
  2679  00FA1D  6F                 	db	111	;'o'
  2680  00FA1E  6D                 	db	109	;'m'
  2681  00FA1F  6D                 	db	109	;'m'
  2682  00FA20  61                 	db	97	;'a'
  2683  00FA21  6E                 	db	110	;'n'
  2684  00FA22  64                 	db	100	;'d'
  2685  00FA23  20                 	db	32
  2686  00FA24  6C                 	db	108	;'l'
  2687  00FA25  61                 	db	97	;'a'
  2688  00FA26  72                 	db	114	;'r'
  2689  00FA27  67                 	db	103	;'g'
  2690  00FA28  65                 	db	101	;'e'
  2691  00FA29  72                 	db	114	;'r'
  2692  00FA2A  20                 	db	32
  2693  00FA2B  74                 	db	116	;'t'
  2694  00FA2C  68                 	db	104	;'h'
  2695  00FA2D  61                 	db	97	;'a'
  2696  00FA2E  74                 	db	116	;'t'
  2697  00FA2F  20                 	db	32
  2698  00FA30  32                 	db	50	;'2'
  2699  00FA31  35                 	db	53	;'5'
  2700  00FA32  35                 	db	53	;'5'
  2701  00FA33  00                 	db	0
  2702  00FA34                     STR_26:
  2703  00FA34  45                 	db	69	;'E'
  2704  00FA35  72                 	db	114	;'r'
  2705  00FA36  72                 	db	114	;'r'
  2706  00FA37  6F                 	db	111	;'o'
  2707  00FA38  72                 	db	114	;'r'
  2708  00FA39  3A                 	db	58	;':'
  2709  00FA3A  20                 	db	32
  2710  00FA3B  41                 	db	65	;'A'
  2711  00FA3C  64                 	db	100	;'d'
  2712  00FA3D  64                 	db	100	;'d'
  2713  00FA3E  72                 	db	114	;'r'
  2714  00FA3F  65                 	db	101	;'e'
  2715  00FA40  73                 	db	115	;'s'
  2716  00FA41  73                 	db	115	;'s'
  2717  00FA42  20                 	db	32
  2718  00FA43  6C                 	db	108	;'l'
  2719  00FA44  61                 	db	97	;'a'
  2720  00FA45  72                 	db	114	;'r'
  2721  00FA46  67                 	db	103	;'g'
  2722  00FA47  65                 	db	101	;'e'
  2723  00FA48  72                 	db	114	;'r'
  2724  00FA49  20                 	db	32
  2725  00FA4A  74                 	db	116	;'t'
  2726  00FA4B  68                 	db	104	;'h'
  2727  00FA4C  61                 	db	97	;'a'
  2728  00FA4D  74                 	db	116	;'t'
  2729  00FA4E  20                 	db	32
  2730  00FA4F  32                 	db	50	;'2'
  2731  00FA50  35                 	db	53	;'5'
  2732  00FA51  35                 	db	53	;'5'
  2733  00FA52  00                 	db	0
  2734  00FA53                     STR_139:
  2735  00FA53  52                 	db	82	;'R'
  2736  00FA54  43                 	db	67	;'C'
  2737  00FA55  2D                 	db	45
  2738  00FA56  30                 	db	48	;'0'
  2739  00FA57  31                 	db	49	;'1'
  2740  00FA58  35                 	db	53	;'5'
  2741  00FA59  2A                 	db	42
  2742  00FA5A  33                 	db	51	;'3'
  2743  00FA5B  20                 	db	32
  2744  00FA5C  43                 	db	67	;'C'
  2745  00FA5D  68                 	db	104	;'h'
  2746  00FA5E  61                 	db	97	;'a'
  2747  00FA5F  6E                 	db	110	;'n'
  2748  00FA60  6E                 	db	110	;'n'
  2749  00FA61  65                 	db	101	;'e'
  2750  00FA62  6C                 	db	108	;'l'
  2751  00FA63  20                 	db	32
  2752  00FA64  48                 	db	72	;'H'
  2753  00FA65  20                 	db	32
  2754  00FA66  64                 	db	100	;'d'
  2755  00FA67  65                 	db	101	;'e'
  2756  00FA68  76                 	db	118	;'v'
  2757  00FA69  69                 	db	105	;'i'
  2758  00FA6A  63                 	db	99	;'c'
  2759  00FA6B  65                 	db	101	;'e'
  2760  00FA6C  20                 	db	32
  2761  00FA6D  31                 	db	49	;'1'
  2762  00FA6E  20                 	db	32
  2763  00FA6F  4F                 	db	79	;'O'
  2764  00FA70  4E                 	db	78	;'N'
  2765  00FA71  00                 	db	0
  2766  00FA72                     STR_141:
  2767  00FA72  52                 	db	82	;'R'
  2768  00FA73  43                 	db	67	;'C'
  2769  00FA74  2D                 	db	45
  2770  00FA75  30                 	db	48	;'0'
  2771  00FA76  31                 	db	49	;'1'
  2772  00FA77  35                 	db	53	;'5'
  2773  00FA78  2A                 	db	42
  2774  00FA79  33                 	db	51	;'3'
  2775  00FA7A  20                 	db	32
  2776  00FA7B  43                 	db	67	;'C'
  2777  00FA7C  68                 	db	104	;'h'
  2778  00FA7D  61                 	db	97	;'a'
  2779  00FA7E  6E                 	db	110	;'n'
  2780  00FA7F  6E                 	db	110	;'n'
  2781  00FA80  65                 	db	101	;'e'
  2782  00FA81  6C                 	db	108	;'l'
  2783  00FA82  20                 	db	32
  2784  00FA83  48                 	db	72	;'H'
  2785  00FA84  20                 	db	32
  2786  00FA85  64                 	db	100	;'d'
  2787  00FA86  65                 	db	101	;'e'
  2788  00FA87  76                 	db	118	;'v'
  2789  00FA88  69                 	db	105	;'i'
  2790  00FA89  63                 	db	99	;'c'
  2791  00FA8A  65                 	db	101	;'e'
  2792  00FA8B  20                 	db	32
  2793  00FA8C  32                 	db	50	;'2'
  2794  00FA8D  20                 	db	32
  2795  00FA8E  4F                 	db	79	;'O'
  2796  00FA8F  4E                 	db	78	;'N'
  2797  00FA90  00                 	db	0
  2798  00FA91                     STR_143:
  2799  00FA91  52                 	db	82	;'R'
  2800  00FA92  43                 	db	67	;'C'
  2801  00FA93  2D                 	db	45
  2802  00FA94  30                 	db	48	;'0'
  2803  00FA95  31                 	db	49	;'1'
  2804  00FA96  35                 	db	53	;'5'
  2805  00FA97  2A                 	db	42
  2806  00FA98  33                 	db	51	;'3'
  2807  00FA99  20                 	db	32
  2808  00FA9A  43                 	db	67	;'C'
  2809  00FA9B  68                 	db	104	;'h'
  2810  00FA9C  61                 	db	97	;'a'
  2811  00FA9D  6E                 	db	110	;'n'
  2812  00FA9E  6E                 	db	110	;'n'
  2813  00FA9F  65                 	db	101	;'e'
  2814  00FAA0  6C                 	db	108	;'l'
  2815  00FAA1  20                 	db	32
  2816  00FAA2  48                 	db	72	;'H'
  2817  00FAA3  20                 	db	32
  2818  00FAA4  64                 	db	100	;'d'
  2819  00FAA5  65                 	db	101	;'e'
  2820  00FAA6  76                 	db	118	;'v'
  2821  00FAA7  69                 	db	105	;'i'
  2822  00FAA8  63                 	db	99	;'c'
  2823  00FAA9  65                 	db	101	;'e'
  2824  00FAAA  20                 	db	32
  2825  00FAAB  33                 	db	51	;'3'
  2826  00FAAC  20                 	db	32
  2827  00FAAD  4F                 	db	79	;'O'
  2828  00FAAE  4E                 	db	78	;'N'
  2829  00FAAF  00                 	db	0
  2830  00FAB0                     STR_65:
  2831  00FAB0  45                 	db	69	;'E'
  2832  00FAB1  72                 	db	114	;'r'
  2833  00FAB2  72                 	db	114	;'r'
  2834  00FAB3  6F                 	db	111	;'o'
  2835  00FAB4  72                 	db	114	;'r'
  2836  00FAB5  3A                 	db	58	;':'
  2837  00FAB6  20                 	db	32
  2838  00FAB7  4E                 	db	78	;'N'
  2839  00FAB8  6F                 	db	111	;'o'
  2840  00FAB9  20                 	db	32
  2841  00FABA  52                 	db	82	;'R'
  2842  00FABB  46                 	db	70	;'F'
  2843  00FABC  20                 	db	32
  2844  00FABD  63                 	db	99	;'c'
  2845  00FABE  68                 	db	104	;'h'
  2846  00FABF  61                 	db	97	;'a'
  2847  00FAC0  6E                 	db	110	;'n'
  2848  00FAC1  6E                 	db	110	;'n'
  2849  00FAC2  65                 	db	101	;'e'
  2850  00FAC3  6C                 	db	108	;'l'
  2851  00FAC4  20                 	db	32
  2852  00FAC5  73                 	db	115	;'s'
  2853  00FAC6  70                 	db	112	;'p'
  2854  00FAC7  65                 	db	101	;'e'
  2855  00FAC8  63                 	db	99	;'c'
  2856  00FAC9  69                 	db	105	;'i'
  2857  00FACA  66                 	db	102	;'f'
  2858  00FACB  69                 	db	105	;'i'
  2859  00FACC  65                 	db	101	;'e'
  2860  00FACD  64                 	db	100	;'d'
  2861  00FACE  00                 	db	0
  2862  00FACF                     STR_66:
  2863  00FACF  45                 	db	69	;'E'
  2864  00FAD0  72                 	db	114	;'r'
  2865  00FAD1  72                 	db	114	;'r'
  2866  00FAD2  6F                 	db	111	;'o'
  2867  00FAD3  72                 	db	114	;'r'
  2868  00FAD4  3A                 	db	58	;':'
  2869  00FAD5  20                 	db	32
  2870  00FAD6  52                 	db	82	;'R'
  2871  00FAD7  46                 	db	70	;'F'
  2872  00FAD8  20                 	db	32
  2873  00FAD9  63                 	db	99	;'c'
  2874  00FADA  68                 	db	104	;'h'
  2875  00FADB  61                 	db	97	;'a'
  2876  00FADC  6E                 	db	110	;'n'
  2877  00FADD  6E                 	db	110	;'n'
  2878  00FADE  65                 	db	101	;'e'
  2879  00FADF  6C                 	db	108	;'l'
  2880  00FAE0  20                 	db	32
  2881  00FAE1  6F                 	db	111	;'o'
  2882  00FAE2  75                 	db	117	;'u'
  2883  00FAE3  74                 	db	116	;'t'
  2884  00FAE4  20                 	db	32
  2885  00FAE5  6F                 	db	111	;'o'
  2886  00FAE6  66                 	db	102	;'f'
  2887  00FAE7  20                 	db	32
  2888  00FAE8  72                 	db	114	;'r'
  2889  00FAE9  61                 	db	97	;'a'
  2890  00FAEA  6E                 	db	110	;'n'
  2891  00FAEB  67                 	db	103	;'g'
  2892  00FAEC  65                 	db	101	;'e'
  2893  00FAED  00                 	db	0
  2894  00FAEE                     STR_35:
  2895  00FAEE  4E                 	db	78	;'N'
  2896  00FAEF  45                 	db	69	;'E'
  2897  00FAF0  43                 	db	67	;'C'
  2898  00FAF1  20                 	db	32
  2899  00FAF2  63                 	db	99	;'c'
  2900  00FAF3  6F                 	db	111	;'o'
  2901  00FAF4  64                 	db	100	;'d'
  2902  00FAF5  65                 	db	101	;'e'
  2903  00FAF6  20                 	db	32
  2904  00FAF7  6E                 	db	110	;'n'
  2905  00FAF8  6F                 	db	111	;'o'
  2906  00FAF9  74                 	db	116	;'t'
  2907  00FAFA  20                 	db	32
  2908  00FAFB  65                 	db	101	;'e'
  2909  00FAFC  6E                 	db	110	;'n'
  2910  00FAFD  74                 	db	116	;'t'
  2911  00FAFE  65                 	db	101	;'e'
  2912  00FAFF  72                 	db	114	;'r'
  2913  00FB00  65                 	db	101	;'e'
  2914  00FB01  64                 	db	100	;'d'
  2915  00FB02  20                 	db	32
  2916  00FB03  63                 	db	99	;'c'
  2917  00FB04  6F                 	db	111	;'o'
  2918  00FB05  72                 	db	114	;'r'
  2919  00FB06  72                 	db	114	;'r'
  2920  00FB07  65                 	db	101	;'e'
  2921  00FB08  63                 	db	99	;'c'
  2922  00FB09  74                 	db	116	;'t'
  2923  00FB0A  6C                 	db	108	;'l'
  2924  00FB0B  79                 	db	121	;'y'
  2925  00FB0C  00                 	db	0
  2926  00FB0D                     STR_79:
  2927  00FB0D  44                 	db	68	;'D'
  2928  00FB0E  65                 	db	101	;'e'
  2929  00FB0F  76                 	db	118	;'v'
  2930  00FB10  69                 	db	105	;'i'
  2931  00FB11  63                 	db	99	;'c'
  2932  00FB12  65                 	db	101	;'e'
  2933  00FB13  20                 	db	32
  2934  00FB14  72                 	db	114	;'r'
  2935  00FB15  65                 	db	101	;'e'
  2936  00FB16  73                 	db	115	;'s'
  2937  00FB17  75                 	db	117	;'u'
  2938  00FB18  6D                 	db	109	;'m'
  2939  00FB19  65                 	db	101	;'e'
  2940  00FB1A  73                 	db	115	;'s'
  2941  00FB1B  20                 	db	32
  2942  00FB1C  77                 	db	119	;'w'
  2943  00FB1D  69                 	db	105	;'i'
  2944  00FB1E  74                 	db	116	;'t'
  2945  00FB1F  68                 	db	104	;'h'
  2946  00FB20  6F                 	db	111	;'o'
  2947  00FB21  75                 	db	117	;'u'
  2948  00FB22  74                 	db	116	;'t'
  2949  00FB23  20                 	db	32
  2950  00FB24  72                 	db	114	;'r'
  2951  00FB25  65                 	db	101	;'e'
  2952  00FB26  73                 	db	115	;'s'
  2953  00FB27  65                 	db	101	;'e'
  2954  00FB28  74                 	db	116	;'t'
  2955  00FB29  00                 	db	0
  2956  00FB2A                     STR_21:
  2957  00FB2A  43                 	db	67	;'C'
  2958  00FB2B  6F                 	db	111	;'o'
  2959  00FB2C  6E                 	db	110	;'n'
  2960  00FB2D  66                 	db	102	;'f'
  2961  00FB2E  69                 	db	105	;'i'
  2962  00FB2F  67                 	db	103	;'g'
  2963  00FB30  75                 	db	117	;'u'
  2964  00FB31  72                 	db	114	;'r'
  2965  00FB32  61                 	db	97	;'a'
  2966  00FB33  74                 	db	116	;'t'
  2967  00FB34  69                 	db	105	;'i'
  2968  00FB35  6F                 	db	111	;'o'
  2969  00FB36  6E                 	db	110	;'n'
  2970  00FB37  20                 	db	32
  2971  00FB38  31                 	db	49	;'1'
  2972  00FB39  20                 	db	32
  2973  00FB3A  52                 	db	82	;'R'
  2974  00FB3B  46                 	db	70	;'F'
  2975  00FB3C  20                 	db	32
  2976  00FB3D  63                 	db	99	;'c'
  2977  00FB3E  6F                 	db	111	;'o'
  2978  00FB3F  64                 	db	100	;'d'
  2979  00FB40  65                 	db	101	;'e'
  2980  00FB41  20                 	db	32
  2981  00FB42  73                 	db	115	;'s'
  2982  00FB43  65                 	db	101	;'e'
  2983  00FB44  6E                 	db	110	;'n'
  2984  00FB45  74                 	db	116	;'t'
  2985  00FB46  00                 	db	0
  2986  00FB47                     STR_23:
  2987  00FB47  43                 	db	67	;'C'
  2988  00FB48  6F                 	db	111	;'o'
  2989  00FB49  6E                 	db	110	;'n'
  2990  00FB4A  66                 	db	102	;'f'
  2991  00FB4B  69                 	db	105	;'i'
  2992  00FB4C  67                 	db	103	;'g'
  2993  00FB4D  75                 	db	117	;'u'
  2994  00FB4E  72                 	db	114	;'r'
  2995  00FB4F  61                 	db	97	;'a'
  2996  00FB50  74                 	db	116	;'t'
  2997  00FB51  69                 	db	105	;'i'
  2998  00FB52  6F                 	db	111	;'o'
  2999  00FB53  6E                 	db	110	;'n'
  3000  00FB54  20                 	db	32
  3001  00FB55  32                 	db	50	;'2'
  3002  00FB56  20                 	db	32
  3003  00FB57  52                 	db	82	;'R'
  3004  00FB58  46                 	db	70	;'F'
  3005  00FB59  20                 	db	32
  3006  00FB5A  63                 	db	99	;'c'
  3007  00FB5B  6F                 	db	111	;'o'
  3008  00FB5C  64                 	db	100	;'d'
  3009  00FB5D  65                 	db	101	;'e'
  3010  00FB5E  20                 	db	32
  3011  00FB5F  73                 	db	115	;'s'
  3012  00FB60  65                 	db	101	;'e'
  3013  00FB61  6E                 	db	110	;'n'
  3014  00FB62  74                 	db	116	;'t'
  3015  00FB63  00                 	db	0
  3016  00FB64                     STR_87:
  3017  00FB64  50                 	db	80	;'P'
  3018  00FB65  43                 	db	67	;'C'
  3019  00FB66  42                 	db	66	;'B'
  3020  00FB67  20                 	db	32
  3021  00FB68  68                 	db	104	;'h'
  3022  00FB69  61                 	db	97	;'a'
  3023  00FB6A  73                 	db	115	;'s'
  3024  00FB6B  20                 	db	32
  3025  00FB6C  42                 	db	66	;'B'
  3026  00FB6D  6C                 	db	108	;'l'
  3027  00FB6E  75                 	db	117	;'u'
  3028  00FB6F  65                 	db	101	;'e'
  3029  00FB70  74                 	db	116	;'t'
  3030  00FB71  6F                 	db	111	;'o'
  3031  00FB72  6F                 	db	111	;'o'
  3032  00FB73  74                 	db	116	;'t'
  3033  00FB74  68                 	db	104	;'h'
  3034  00FB75  20                 	db	32
  3035  00FB76  63                 	db	99	;'c'
  3036  00FB77  61                 	db	97	;'a'
  3037  00FB78  70                 	db	112	;'p'
  3038  00FB79  61                 	db	97	;'a'
  3039  00FB7A  62                 	db	98	;'b'
  3040  00FB7B  69                 	db	105	;'i'
  3041  00FB7C  6C                 	db	108	;'l'
  3042  00FB7D  69                 	db	105	;'i'
  3043  00FB7E  74                 	db	116	;'t'
  3044  00FB7F  79                 	db	121	;'y'
  3045  00FB80  00                 	db	0
  3046  00FB81                     STR_17:
  3047  00FB81  42                 	db	66	;'B'
  3048  00FB82  54                 	db	84	;'T'
  3049  00FB83  4E                 	db	78	;'N'
  3050  00FB84  61                 	db	97	;'a'
  3051  00FB85  6D                 	db	109	;'m'
  3052  00FB86  65                 	db	101	;'e'
  3053  00FB87  3D                 	db	61	;'='
  3054  00FB88  48                 	db	72	;'H'
  3055  00FB89  6F                 	db	111	;'o'
  3056  00FB8A  6D                 	db	109	;'m'
  3057  00FB8B  65                 	db	101	;'e'
  3058  00FB8C  20                 	db	32
  3059  00FB8D  41                 	db	65	;'A'
  3060  00FB8E  75                 	db	117	;'u'
  3061  00FB8F  74                 	db	116	;'t'
  3062  00FB90  6F                 	db	111	;'o'
  3063  00FB91  6D                 	db	109	;'m'
  3064  00FB92  61                 	db	97	;'a'
  3065  00FB93  74                 	db	116	;'t'
  3066  00FB94  69                 	db	105	;'i'
  3067  00FB95  6F                 	db	111	;'o'
  3068  00FB96  6E                 	db	110	;'n'
  3069  00FB97  20                 	db	32
  3070  00FB98  25                 	db	37
  3071  00FB99  6C                 	db	108	;'l'
  3072  00FB9A  64                 	db	100	;'d'
  3073  00FB9B  0D                 	db	13
  3074  00FB9C  00                 	db	0
  3075  00FB9D                     STR_99:
  3076  00FB9D  44                 	db	68	;'D'
  3077  00FB9E  69                 	db	105	;'i'
  3078  00FB9F  73                 	db	115	;'s'
  3079  00FBA0  70                 	db	112	;'p'
  3080  00FBA1  6C                 	db	108	;'l'
  3081  00FBA2  61                 	db	97	;'a'
  3082  00FBA3  79                 	db	121	;'y'
  3083  00FBA4  73                 	db	115	;'s'
  3084  00FBA5  20                 	db	32
  3085  00FBA6  74                 	db	116	;'t'
  3086  00FBA7  68                 	db	104	;'h'
  3087  00FBA8  65                 	db	101	;'e'
  3088  00FBA9  20                 	db	32
  3089  00FBAA  73                 	db	115	;'s'
  3090  00FBAB  75                 	db	117	;'u'
  3091  00FBAC  70                 	db	112	;'p'
  3092  00FBAD  70                 	db	112	;'p'
  3093  00FBAE  6C                 	db	108	;'l'
  3094  00FBAF  79                 	db	121	;'y'
  3095  00FBB0  20                 	db	32
  3096  00FBB1  76                 	db	118	;'v'
  3097  00FBB2  6F                 	db	111	;'o'
  3098  00FBB3  6C                 	db	108	;'l'
  3099  00FBB4  74                 	db	116	;'t'
  3100  00FBB5  61                 	db	97	;'a'
  3101  00FBB6  67                 	db	103	;'g'
  3102  00FBB7  65                 	db	101	;'e'
  3103  00FBB8  00                 	db	0
  3104  00FBB9                     STR_146:
  3105  00FBB9  50                 	db	80	;'P'
  3106  00FBBA  72                 	db	114	;'r'
  3107  00FBBB  65                 	db	101	;'e'
  3108  00FBBC  73                 	db	115	;'s'
  3109  00FBBD  73                 	db	115	;'s'
  3110  00FBBE  20                 	db	32
  3111  00FBBF  52                 	db	82	;'R'
  3112  00FBC0  65                 	db	101	;'e'
  3113  00FBC1  6D                 	db	109	;'m'
  3114  00FBC2  6F                 	db	111	;'o'
  3115  00FBC3  74                 	db	116	;'t'
  3116  00FBC4  65                 	db	101	;'e'
  3117  00FBC5  20                 	db	32
  3118  00FBC6  43                 	db	67	;'C'
  3119  00FBC7  6F                 	db	111	;'o'
  3120  00FBC8  6E                 	db	110	;'n'
  3121  00FBC9  74                 	db	116	;'t'
  3122  00FBCA  72                 	db	114	;'r'
  3123  00FBCB  6F                 	db	111	;'o'
  3124  00FBCC  6C                 	db	108	;'l'
  3125  00FBCD  20                 	db	32
  3126  00FBCE  62                 	db	98	;'b'
  3127  00FBCF  75                 	db	117	;'u'
  3128  00FBD0  74                 	db	116	;'t'
  3129  00FBD1  74                 	db	116	;'t'
  3130  00FBD2  6F                 	db	111	;'o'
  3131  00FBD3  6E                 	db	110	;'n'
  3132  00FBD4  00                 	db	0
  3133  00FBD5                     STR_145:
  3134  00FBD5  45                 	db	69	;'E'
  3135  00FBD6  6E                 	db	110	;'n'
  3136  00FBD7  74                 	db	116	;'t'
  3137  00FBD8  65                 	db	101	;'e'
  3138  00FBD9  72                 	db	114	;'r'
  3139  00FBDA  20                 	db	32
  3140  00FBDB  3F                 	db	63	;'?'
  3141  00FBDC  3F                 	db	63	;'?'
  3142  00FBDD  3F                 	db	63	;'?'
  3143  00FBDE  20                 	db	32
  3144  00FBDF  66                 	db	102	;'f'
  3145  00FBE0  6F                 	db	111	;'o'
  3146  00FBE1  72                 	db	114	;'r'
  3147  00FBE2  20                 	db	32
  3148  00FBE3  43                 	db	67	;'C'
  3149  00FBE4  6F                 	db	111	;'o'
  3150  00FBE5  6D                 	db	109	;'m'
  3151  00FBE6  6D                 	db	109	;'m'
  3152  00FBE7  61                 	db	97	;'a'
  3153  00FBE8  6E                 	db	110	;'n'
  3154  00FBE9  64                 	db	100	;'d'
  3155  00FBEA  20                 	db	32
  3156  00FBEB  4D                 	db	77	;'M'
  3157  00FBEC  65                 	db	101	;'e'
  3158  00FBED  6E                 	db	110	;'n'
  3159  00FBEE  75                 	db	117	;'u'
  3160  00FBEF  00                 	db	0
  3161  00FBF0                     STR_96:
  3162  00FBF0  44                 	db	68	;'D'
  3163  00FBF1  69                 	db	105	;'i'
  3164  00FBF2  73                 	db	115	;'s'
  3165  00FBF3  70                 	db	112	;'p'
  3166  00FBF4  6C                 	db	108	;'l'
  3167  00FBF5  61                 	db	97	;'a'
  3168  00FBF6  79                 	db	121	;'y'
  3169  00FBF7  73                 	db	115	;'s'
  3170  00FBF8  20                 	db	32
  3171  00FBF9  46                 	db	70	;'F'
  3172  00FBFA  69                 	db	105	;'i'
  3173  00FBFB  72                 	db	114	;'r'
  3174  00FBFC  6D                 	db	109	;'m'
  3175  00FBFD  77                 	db	119	;'w'
  3176  00FBFE  61                 	db	97	;'a'
  3177  00FBFF  72                 	db	114	;'r'
  3178  00FC00  65                 	db	101	;'e'
  3179  00FC01  20                 	db	32
  3180  00FC02  56                 	db	86	;'V'
  3181  00FC03  65                 	db	101	;'e'
  3182  00FC04  72                 	db	114	;'r'
  3183  00FC05  73                 	db	115	;'s'
  3184  00FC06  69                 	db	105	;'i'
  3185  00FC07  6F                 	db	111	;'o'
  3186  00FC08  6E                 	db	110	;'n'
  3187  00FC09  00                 	db	0
  3188  00FC0A                     STR_102:
  3189  00FC0A  54                 	db	84	;'T'
  3190  00FC0B  72                 	db	114	;'r'
  3191  00FC0C  61                 	db	97	;'a'
  3192  00FC0D  6E                 	db	110	;'n'
  3193  00FC0E  73                 	db	115	;'s'
  3194  00FC0F  6D                 	db	109	;'m'
  3195  00FC10  69                 	db	105	;'i'
  3196  00FC11  74                 	db	116	;'t'
  3197  00FC12  73                 	db	115	;'s'
  3198  00FC13  20                 	db	32
  3199  00FC14  73                 	db	115	;'s'
  3200  00FC15  61                 	db	97	;'a'
  3201  00FC16  76                 	db	118	;'v'
  3202  00FC17  65                 	db	101	;'e'
  3203  00FC18  64                 	db	100	;'d'
  3204  00FC19  20                 	db	32
  3205  00FC1A  4E                 	db	78	;'N'
  3206  00FC1B  45                 	db	69	;'E'
  3207  00FC1C  43                 	db	67	;'C'
  3208  00FC1D  20                 	db	32
  3209  00FC1E  63                 	db	99	;'c'
  3210  00FC1F  6F                 	db	111	;'o'
  3211  00FC20  64                 	db	100	;'d'
  3212  00FC21  65                 	db	101	;'e'
  3213  00FC22  00                 	db	0
  3214  00FC23                     STR_4:
  3215  00FC23  53                 	db	83	;'S'
  3216  00FC24  4E                 	db	78	;'N'
  3217  00FC25  2C                 	db	44
  3218  00FC26  48                 	db	72	;'H'
  3219  00FC27  6F                 	db	111	;'o'
  3220  00FC28  6D                 	db	109	;'m'
  3221  00FC29  65                 	db	101	;'e'
  3222  00FC2A  20                 	db	32
  3223  00FC2B  41                 	db	65	;'A'
  3224  00FC2C  75                 	db	117	;'u'
  3225  00FC2D  74                 	db	116	;'t'
  3226  00FC2E  6F                 	db	111	;'o'
  3227  00FC2F  6D                 	db	109	;'m'
  3228  00FC30  61                 	db	97	;'a'
  3229  00FC31  74                 	db	116	;'t'
  3230  00FC32  69                 	db	105	;'i'
  3231  00FC33  6F                 	db	111	;'o'
  3232  00FC34  6E                 	db	110	;'n'
  3233  00FC35  20                 	db	32
  3234  00FC36  25                 	db	37
  3235  00FC37  6C                 	db	108	;'l'
  3236  00FC38  64                 	db	100	;'d'
  3237  00FC39  0D                 	db	13
  3238  00FC3A  00                 	db	0
  3239  00FC3B                     STR_104:
  3240  00FC3B  41                 	db	65	;'A'
  3241  00FC3C  6C                 	db	108	;'l'
  3242  00FC3D  6C                 	db	108	;'l'
  3243  00FC3E  6F                 	db	111	;'o'
  3244  00FC3F  77                 	db	119	;'w'
  3245  00FC40  73                 	db	115	;'s'
  3246  00FC41  20                 	db	32
  3247  00FC42  73                 	db	115	;'s'
  3248  00FC43  61                 	db	97	;'a'
  3249  00FC44  76                 	db	118	;'v'
  3250  00FC45  69                 	db	105	;'i'
  3251  00FC46  6E                 	db	110	;'n'
  3252  00FC47  67                 	db	103	;'g'
  3253  00FC48  20                 	db	32
  3254  00FC49  4E                 	db	78	;'N'
  3255  00FC4A  45                 	db	69	;'E'
  3256  00FC4B  43                 	db	67	;'C'
  3257  00FC4C  20                 	db	32
  3258  00FC4D  63                 	db	99	;'c'
  3259  00FC4E  6F                 	db	111	;'o'
  3260  00FC4F  64                 	db	100	;'d'
  3261  00FC50  65                 	db	101	;'e'
  3262  00FC51  73                 	db	115	;'s'
  3263  00FC52  00                 	db	0
  3264  00FC53                     STR_29:
  3265  00FC53  53                 	db	83	;'S'
  3266  00FC54  65                 	db	101	;'e'
  3267  00FC55  6E                 	db	110	;'n'
  3268  00FC56  74                 	db	116	;'t'
  3269  00FC57  20                 	db	32
  3270  00FC58  4E                 	db	78	;'N'
  3271  00FC59  45                 	db	69	;'E'
  3272  00FC5A  43                 	db	67	;'C'
  3273  00FC5B  20                 	db	32
  3274  00FC5C  63                 	db	99	;'c'
  3275  00FC5D  6F                 	db	111	;'o'
  3276  00FC5E  64                 	db	100	;'d'
  3277  00FC5F  65                 	db	101	;'e'
  3278  00FC60  20                 	db	32
  3279  00FC61  3D                 	db	61	;'='
  3280  00FC62  20                 	db	32
  3281  00FC63  30                 	db	48	;'0'
  3282  00FC64  78                 	db	120	;'x'
  3283  00FC65  25                 	db	37
  3284  00FC66  6C                 	db	108	;'l'
  3285  00FC67  58                 	db	88	;'X'
  3286  00FC68  20                 	db	32
  3287  00FC69  00                 	db	0
  3288  00FC6A                     STR_136:
  3289  00FC6A  52                 	db	82	;'R'
  3290  00FC6B  46                 	db	70	;'F'
  3291  00FC6C  4B                 	db	75	;'K'
  3292  00FC6D  33                 	db	51	;'3'
  3293  00FC6E  30                 	db	48	;'0'
  3294  00FC6F  36                 	db	54	;'6'
  3295  00FC70  4C                 	db	76	;'L'
  3296  00FC71  43                 	db	67	;'C'
  3297  00FC72  20                 	db	32
  3298  00FC73  43                 	db	67	;'C'
  3299  00FC74  68                 	db	104	;'h'
  3300  00FC75  61                 	db	97	;'a'
  3301  00FC76  6E                 	db	110	;'n'
  3302  00FC77  6E                 	db	110	;'n'
  3303  00FC78  65                 	db	101	;'e'
  3304  00FC79  6C                 	db	108	;'l'
  3305  00FC7A  20                 	db	32
  3306  00FC7B  42                 	db	66	;'B'
  3307  00FC7C  20                 	db	32
  3308  00FC7D  4F                 	db	79	;'O'
  3309  00FC7E  46                 	db	70	;'F'
  3310  00FC7F  46                 	db	70	;'F'
  3311  00FC80  00                 	db	0
  3312  00FC81                     STR_135:
  3313  00FC81  52                 	db	82	;'R'
  3314  00FC82  46                 	db	70	;'F'
  3315  00FC83  4B                 	db	75	;'K'
  3316  00FC84  33                 	db	51	;'3'
  3317  00FC85  30                 	db	48	;'0'
  3318  00FC86  36                 	db	54	;'6'
  3319  00FC87  4C                 	db	76	;'L'
  3320  00FC88  43                 	db	67	;'C'
  3321  00FC89  20                 	db	32
  3322  00FC8A  43                 	db	67	;'C'
  3323  00FC8B  68                 	db	104	;'h'
  3324  00FC8C  61                 	db	97	;'a'
  3325  00FC8D  6E                 	db	110	;'n'
  3326  00FC8E  6E                 	db	110	;'n'
  3327  00FC8F  65                 	db	101	;'e'
  3328  00FC90  6C                 	db	108	;'l'
  3329  00FC91  20                 	db	32
  3330  00FC92  42                 	db	66	;'B'
  3331  00FC93  20                 	db	32
  3332  00FC94  4F                 	db	79	;'O'
  3333  00FC95  4E                 	db	78	;'N'
  3334  00FC96  00                 	db	0
  3335  00FC97                     STR_39:
  3336  00FC97  4E                 	db	78	;'N'
  3337  00FC98  45                 	db	69	;'E'
  3338  00FC99  43                 	db	67	;'C'
  3339  00FC9A  20                 	db	32
  3340  00FC9B  3D                 	db	61	;'='
  3341  00FC9C  20                 	db	32
  3342  00FC9D  61                 	db	97	;'a'
  3343  00FC9E  64                 	db	100	;'d'
  3344  00FC9F  64                 	db	100	;'d'
  3345  00FCA0  72                 	db	114	;'r'
  3346  00FCA1  65                 	db	101	;'e'
  3347  00FCA2  73                 	db	115	;'s'
  3348  00FCA3  73                 	db	115	;'s'
  3349  00FCA4  2C                 	db	44
  3350  00FCA5  63                 	db	99	;'c'
  3351  00FCA6  6F                 	db	111	;'o'
  3352  00FCA7  6D                 	db	109	;'m'
  3353  00FCA8  6D                 	db	109	;'m'
  3354  00FCA9  61                 	db	97	;'a'
  3355  00FCAA  6E                 	db	110	;'n'
  3356  00FCAB  64                 	db	100	;'d'
  3357  00FCAC  00                 	db	0
  3358  00FCAD                     STR_8:
  3359  00FCAD  53                 	db	83	;'S'
  3360  00FCAE  53                 	db	83	;'S'
  3361  00FCAF  2C                 	db	44
  3362  00FCB0  20                 	db	32
  3363  00FCB1  48                 	db	72	;'H'
  3364  00FCB2  6F                 	db	111	;'o'
  3365  00FCB3  6D                 	db	109	;'m'
  3366  00FCB4  65                 	db	101	;'e'
  3367  00FCB5  20                 	db	32
  3368  00FCB6  41                 	db	65	;'A'
  3369  00FCB7  75                 	db	117	;'u'
  3370  00FCB8  74                 	db	116	;'t'
  3371  00FCB9  6F                 	db	111	;'o'
  3372  00FCBA  6D                 	db	109	;'m'
  3373  00FCBB  61                 	db	97	;'a'
  3374  00FCBC  74                 	db	116	;'t'
  3375  00FCBD  69                 	db	105	;'i'
  3376  00FCBE  6F                 	db	111	;'o'
  3377  00FCBF  6E                 	db	110	;'n'
  3378  00FCC0  0D                 	db	13
  3379  00FCC1  00                 	db	0
  3380  00FCC2                     STR_28:
  3381  00FCC2  4E                 	db	78	;'N'
  3382  00FCC3  45                 	db	69	;'E'
  3383  00FCC4  43                 	db	67	;'C'
  3384  00FCC5  20                 	db	32
  3385  00FCC6  63                 	db	99	;'c'
  3386  00FCC7  6F                 	db	111	;'o'
  3387  00FCC8  6D                 	db	109	;'m'
  3388  00FCC9  6D                 	db	109	;'m'
  3389  00FCCA  61                 	db	97	;'a'
  3390  00FCCB  6E                 	db	110	;'n'
  3391  00FCCC  64                 	db	100	;'d'
  3392  00FCCD  3A                 	db	58	;':'
  3393  00FCCE  20                 	db	32
  3394  00FCCF  30                 	db	48	;'0'
  3395  00FCD0  78                 	db	120	;'x'
  3396  00FCD1  25                 	db	37
  3397  00FCD2  30                 	db	48	;'0'
  3398  00FCD3  32                 	db	50	;'2'
  3399  00FCD4  58                 	db	88	;'X'
  3400  00FCD5  20                 	db	32
  3401  00FCD6  00                 	db	0
  3402  00FCD7                     STR_27:
  3403  00FCD7  4E                 	db	78	;'N'
  3404  00FCD8  45                 	db	69	;'E'
  3405  00FCD9  43                 	db	67	;'C'
  3406  00FCDA  20                 	db	32
  3407  00FCDB  61                 	db	97	;'a'
  3408  00FCDC  64                 	db	100	;'d'
  3409  00FCDD  64                 	db	100	;'d'
  3410  00FCDE  72                 	db	114	;'r'
  3411  00FCDF  65                 	db	101	;'e'
  3412  00FCE0  73                 	db	115	;'s'
  3413  00FCE1  73                 	db	115	;'s'
  3414  00FCE2  3A                 	db	58	;':'
  3415  00FCE3  20                 	db	32
  3416  00FCE4  30                 	db	48	;'0'
  3417  00FCE5  78                 	db	120	;'x'
  3418  00FCE6  25                 	db	37
  3419  00FCE7  30                 	db	48	;'0'
  3420  00FCE8  32                 	db	50	;'2'
  3421  00FCE9  58                 	db	88	;'X'
  3422  00FCEA  20                 	db	32
  3423  00FCEB  00                 	db	0
  3424  00FCEC                     STR_46:
  3425  00FCEC  53                 	db	83	;'S'
  3426  00FCED  65                 	db	101	;'e'
  3427  00FCEE  6E                 	db	110	;'n'
  3428  00FCEF  74                 	db	116	;'t'
  3429  00FCF0  20                 	db	32
  3430  00FCF1  4E                 	db	78	;'N'
  3431  00FCF2  45                 	db	69	;'E'
  3432  00FCF3  43                 	db	67	;'C'
  3433  00FCF4  20                 	db	32
  3434  00FCF5  63                 	db	99	;'c'
  3435  00FCF6  6F                 	db	111	;'o'
  3436  00FCF7  64                 	db	100	;'d'
  3437  00FCF8  65                 	db	101	;'e'
  3438  00FCF9  20                 	db	32
  3439  00FCFA  30                 	db	48	;'0'
  3440  00FCFB  78                 	db	120	;'x'
  3441  00FCFC  25                 	db	37
  3442  00FCFD  6C                 	db	108	;'l'
  3443  00FCFE  58                 	db	88	;'X'
  3444  00FCFF  20                 	db	32
  3445  00FD00  00                 	db	0
  3446  00FD01                     STR_97:
  3447  00FD01  44                 	db	68	;'D'
  3448  00FD02  69                 	db	105	;'i'
  3449  00FD03  61                 	db	97	;'a'
  3450  00FD04  67                 	db	103	;'g'
  3451  00FD05  6E                 	db	110	;'n'
  3452  00FD06  6F                 	db	111	;'o'
  3453  00FD07  73                 	db	115	;'s'
  3454  00FD08  74                 	db	116	;'t'
  3455  00FD09  69                 	db	105	;'i'
  3456  00FD0A  63                 	db	99	;'c'
  3457  00FD0B  20                 	db	32
  3458  00FD0C  43                 	db	67	;'C'
  3459  00FD0D  6F                 	db	111	;'o'
  3460  00FD0E  6D                 	db	109	;'m'
  3461  00FD0F  6D                 	db	109	;'m'
  3462  00FD10  61                 	db	97	;'a'
  3463  00FD11  6E                 	db	110	;'n'
  3464  00FD12  64                 	db	100	;'d'
  3465  00FD13  73                 	db	115	;'s'
  3466  00FD14  3A                 	db	58	;':'
  3467  00FD15  00                 	db	0
  3468  00FD16                     STR_85:
  3469  00FD16  46                 	db	70	;'F'
  3470  00FD17  69                 	db	105	;'i'
  3471  00FD18  72                 	db	114	;'r'
  3472  00FD19  6D                 	db	109	;'m'
  3473  00FD1A  77                 	db	119	;'w'
  3474  00FD1B  61                 	db	97	;'a'
  3475  00FD1C  72                 	db	114	;'r'
  3476  00FD1D  65                 	db	101	;'e'
  3477  00FD1E  20                 	db	32
  3478  00FD1F  56                 	db	86	;'V'
  3479  00FD20  65                 	db	101	;'e'
  3480  00FD21  72                 	db	114	;'r'
  3481  00FD22  73                 	db	115	;'s'
  3482  00FD23  69                 	db	105	;'i'
  3483  00FD24  6F                 	db	111	;'o'
  3484  00FD25  6E                 	db	110	;'n'
  3485  00FD26  3A                 	db	58	;':'
  3486  00FD27  20                 	db	32
  3487  00FD28  25                 	db	37
  3488  00FD29  73                 	db	115	;'s'
  3489  00FD2A  00                 	db	0
  3490  00FD2B                     STR_37:
  3491  00FD2B  4E                 	db	78	;'N'
  3492  00FD2C  45                 	db	69	;'E'
  3493  00FD2D  43                 	db	67	;'C'
  3494  00FD2E  20                 	db	32
  3495  00FD2F  3D                 	db	61	;'='
  3496  00FD30  20                 	db	32
  3497  00FD31  28                 	db	40
  3498  00FD32  33                 	db	51	;'3'
  3499  00FD33  32                 	db	50	;'2'
  3500  00FD34  20                 	db	32
  3501  00FD35  62                 	db	98	;'b'
  3502  00FD36  69                 	db	105	;'i'
  3503  00FD37  74                 	db	116	;'t'
  3504  00FD38  20                 	db	32
  3505  00FD39  63                 	db	99	;'c'
  3506  00FD3A  6F                 	db	111	;'o'
  3507  00FD3B  64                 	db	100	;'d'
  3508  00FD3C  65                 	db	101	;'e'
  3509  00FD3D  29                 	db	41
  3510  00FD3E  00                 	db	0
  3511  00FD3F                     STR_138:
  3512  00FD3F  54                 	db	84	;'T'
  3513  00FD40  52                 	db	82	;'R'
  3514  00FD41  30                 	db	48	;'0'
  3515  00FD42  30                 	db	48	;'0'
  3516  00FD43  39                 	db	57	;'9'
  3517  00FD44  20                 	db	32
  3518  00FD45  43                 	db	67	;'C'
  3519  00FD46  68                 	db	104	;'h'
  3520  00FD47  61                 	db	97	;'a'
  3521  00FD48  6E                 	db	110	;'n'
  3522  00FD49  6E                 	db	110	;'n'
  3523  00FD4A  65                 	db	101	;'e'
  3524  00FD4B  6C                 	db	108	;'l'
  3525  00FD4C  20                 	db	32
  3526  00FD4D  44                 	db	68	;'D'
  3527  00FD4E  20                 	db	32
  3528  00FD4F  4F                 	db	79	;'O'
  3529  00FD50  46                 	db	70	;'F'
  3530  00FD51  46                 	db	70	;'F'
  3531  00FD52  00                 	db	0
  3532  00FD53                     STR_31:
  3533  00FD53  73                 	db	115	;'s'
  3534  00FD54  65                 	db	101	;'e'
  3535  00FD55  6E                 	db	110	;'n'
  3536  00FD56  74                 	db	116	;'t'
  3537  00FD57  20                 	db	32
  3538  00FD58  4E                 	db	78	;'N'
  3539  00FD59  45                 	db	69	;'E'
  3540  00FD5A  43                 	db	67	;'C'
  3541  00FD5B  20                 	db	32
  3542  00FD5C  63                 	db	99	;'c'
  3543  00FD5D  6F                 	db	111	;'o'
  3544  00FD5E  64                 	db	100	;'d'
  3545  00FD5F  65                 	db	101	;'e'
  3546  00FD60  20                 	db	32
  3547  00FD61  30                 	db	48	;'0'
  3548  00FD62  78                 	db	120	;'x'
  3549  00FD63  25                 	db	37
  3550  00FD64  6C                 	db	108	;'l'
  3551  00FD65  58                 	db	88	;'X'
  3552  00FD66  00                 	db	0
  3553  00FD67                     STR_83:
  3554  00FD67  53                 	db	83	;'S'
  3555  00FD68  75                 	db	117	;'u'
  3556  00FD69  70                 	db	112	;'p'
  3557  00FD6A  70                 	db	112	;'p'
  3558  00FD6B  6C                 	db	108	;'l'
  3559  00FD6C  79                 	db	121	;'y'
  3560  00FD6D  20                 	db	32
  3561  00FD6E  56                 	db	86	;'V'
  3562  00FD6F  6F                 	db	111	;'o'
  3563  00FD70  6C                 	db	108	;'l'
  3564  00FD71  74                 	db	116	;'t'
  3565  00FD72  61                 	db	97	;'a'
  3566  00FD73  67                 	db	103	;'g'
  3567  00FD74  65                 	db	101	;'e'
  3568  00FD75  20                 	db	32
  3569  00FD76  3D                 	db	61	;'='
  3570  00FD77  20                 	db	32
  3571  00FD78  25                 	db	37
  3572  00FD79  66                 	db	102	;'f'
  3573  00FD7A  00                 	db	0
  3574  00FD7B                     STR_55:
  3575  00FD7B  52                 	db	82	;'R'
  3576  00FD7C  65                 	db	101	;'e'
  3577  00FD7D  6D                 	db	109	;'m'
  3578  00FD7E  6F                 	db	111	;'o'
  3579  00FD7F  74                 	db	116	;'t'
  3580  00FD80  65                 	db	101	;'e'
  3581  00FD81  42                 	db	66	;'B'
  3582  00FD82  75                 	db	117	;'u'
  3583  00FD83  74                 	db	116	;'t'
  3584  00FD84  74                 	db	116	;'t'
  3585  00FD85  6F                 	db	111	;'o'
  3586  00FD86  6E                 	db	110	;'n'
  3587  00FD87  27                 	db	39
  3588  00FD88  78                 	db	120	;'x'
  3589  00FD89  27                 	db	39
  3590  00FD8A  20                 	db	32
  3591  00FD8B  73                 	db	115	;'s'
  3592  00FD8C  65                 	db	101	;'e'
  3593  00FD8D  74                 	db	116	;'t'
  3594  00FD8E  00                 	db	0
  3595  00FD8F                     STR_132:
  3596  00FD8F  52                 	db	82	;'R'
  3597  00FD90  46                 	db	70	;'F'
  3598  00FD91  4B                 	db	75	;'K'
  3599  00FD92  31                 	db	49	;'1'
  3600  00FD93  30                 	db	48	;'0'
  3601  00FD94  30                 	db	48	;'0'
  3602  00FD95  4C                 	db	76	;'L'
  3603  00FD96  43                 	db	67	;'C'
  3604  00FD97  20                 	db	32
  3605  00FD98  43                 	db	67	;'C'
  3606  00FD99  68                 	db	104	;'h'
  3607  00FD9A  61                 	db	97	;'a'
  3608  00FD9B  6E                 	db	110	;'n'
  3609  00FD9C  6E                 	db	110	;'n'
  3610  00FD9D  65                 	db	101	;'e'
  3611  00FD9E  6C                 	db	108	;'l'
  3612  00FD9F  20                 	db	32
  3613  00FDA0  44                 	db	68	;'D'
  3614  00FDA1  00                 	db	0
  3615  00FDA2                     STR_133:
  3616  00FDA2  52                 	db	82	;'R'
  3617  00FDA3  46                 	db	70	;'F'
  3618  00FDA4  4B                 	db	75	;'K'
  3619  00FDA5  31                 	db	49	;'1'
  3620  00FDA6  30                 	db	48	;'0'
  3621  00FDA7  30                 	db	48	;'0'
  3622  00FDA8  4C                 	db	76	;'L'
  3623  00FDA9  43                 	db	67	;'C'
  3624  00FDAA  20                 	db	32
  3625  00FDAB  43                 	db	67	;'C'
  3626  00FDAC  68                 	db	104	;'h'
  3627  00FDAD  61                 	db	97	;'a'
  3628  00FDAE  6E                 	db	110	;'n'
  3629  00FDAF  6E                 	db	110	;'n'
  3630  00FDB0  65                 	db	101	;'e'
  3631  00FDB1  6C                 	db	108	;'l'
  3632  00FDB2  20                 	db	32
  3633  00FDB3  45                 	db	69	;'E'
  3634  00FDB4  00                 	db	0
  3635  00FDB5                     STR_134:
  3636  00FDB5  52                 	db	82	;'R'
  3637  00FDB6  46                 	db	70	;'F'
  3638  00FDB7  4B                 	db	75	;'K'
  3639  00FDB8  31                 	db	49	;'1'
  3640  00FDB9  30                 	db	48	;'0'
  3641  00FDBA  30                 	db	48	;'0'
  3642  00FDBB  4C                 	db	76	;'L'
  3643  00FDBC  43                 	db	67	;'C'
  3644  00FDBD  20                 	db	32
  3645  00FDBE  43                 	db	67	;'C'
  3646  00FDBF  68                 	db	104	;'h'
  3647  00FDC0  61                 	db	97	;'a'
  3648  00FDC1  6E                 	db	110	;'n'
  3649  00FDC2  6E                 	db	110	;'n'
  3650  00FDC3  65                 	db	101	;'e'
  3651  00FDC4  6C                 	db	108	;'l'
  3652  00FDC5  20                 	db	32
  3653  00FDC6  46                 	db	70	;'F'
  3654  00FDC7  00                 	db	0
  3655  00FDC8                     STR_137:
  3656  00FDC8  54                 	db	84	;'T'
  3657  00FDC9  52                 	db	82	;'R'
  3658  00FDCA  30                 	db	48	;'0'
  3659  00FDCB  30                 	db	48	;'0'
  3660  00FDCC  39                 	db	57	;'9'
  3661  00FDCD  20                 	db	32
  3662  00FDCE  43                 	db	67	;'C'
  3663  00FDCF  68                 	db	104	;'h'
  3664  00FDD0  61                 	db	97	;'a'
  3665  00FDD1  6E                 	db	110	;'n'
  3666  00FDD2  6E                 	db	110	;'n'
  3667  00FDD3  65                 	db	101	;'e'
  3668  00FDD4  6C                 	db	108	;'l'
  3669  00FDD5  20                 	db	32
  3670  00FDD6  44                 	db	68	;'D'
  3671  00FDD7  20                 	db	32
  3672  00FDD8  4F                 	db	79	;'O'
  3673  00FDD9  4E                 	db	78	;'N'
  3674  00FDDA  00                 	db	0
  3675  00FDDB                     STR_103:
  3676  00FDDB  52                 	db	82	;'R'
  3677  00FDDC  65                 	db	101	;'e'
  3678  00FDDD  6D                 	db	109	;'m'
  3679  00FDDE  6F                 	db	111	;'o'
  3680  00FDDF  74                 	db	116	;'t'
  3681  00FDE0  65                 	db	101	;'e'
  3682  00FDE1  42                 	db	66	;'B'
  3683  00FDE2  75                 	db	117	;'u'
  3684  00FDE3  74                 	db	116	;'t'
  3685  00FDE4  74                 	db	116	;'t'
  3686  00FDE5  6F                 	db	111	;'o'
  3687  00FDE6  6E                 	db	110	;'n'
  3688  00FDE7  25                 	db	37
  3689  00FDE8  64                 	db	100	;'d'
  3690  00FDE9  20                 	db	32
  3691  00FDEA  73                 	db	115	;'s'
  3692  00FDEB  65                 	db	101	;'e'
  3693  00FDEC  74                 	db	116	;'t'
  3694  00FDED  00                 	db	0
  3695  00FDEE                     STR_41:
  3696  00FDEE  4E                 	db	78	;'N'
  3697  00FDEF  45                 	db	69	;'E'
  3698  00FDF0  43                 	db	67	;'C'
  3699  00FDF1  20                 	db	32
  3700  00FDF2  3D                 	db	61	;'='
  3701  00FDF3  20                 	db	32
  3702  00FDF4  30                 	db	48	;'0'
  3703  00FDF5  78                 	db	120	;'x'
  3704  00FDF6  31                 	db	49	;'1'
  3705  00FDF7  43                 	db	67	;'C'
  3706  00FDF8  45                 	db	69	;'E'
  3707  00FDF9  33                 	db	51	;'3'
  3708  00FDFA  35                 	db	53	;'5'
  3709  00FDFB  30                 	db	48	;'0'
  3710  00FDFC  61                 	db	97	;'a'
  3711  00FDFD  66                 	db	102	;'f'
  3712  00FDFE  20                 	db	32
  3713  00FDFF  00                 	db	0
  3714  00FE00                     STR_58:
  3715  00FE00  52                 	db	82	;'R'
  3716  00FE01  65                 	db	101	;'e'
  3717  00FE02  6D                 	db	109	;'m'
  3718  00FE03  6F                 	db	111	;'o'
  3719  00FE04  74                 	db	116	;'t'
  3720  00FE05  65                 	db	101	;'e'
  3721  00FE06  42                 	db	66	;'B'
  3722  00FE07  75                 	db	117	;'u'
  3723  00FE08  74                 	db	116	;'t'
  3724  00FE09  74                 	db	116	;'t'
  3725  00FE0A  6F                 	db	111	;'o'
  3726  00FE0B  6E                 	db	110	;'n'
  3727  00FE0C  31                 	db	49	;'1'
  3728  00FE0D  20                 	db	32
  3729  00FE0E  73                 	db	115	;'s'
  3730  00FE0F  65                 	db	101	;'e'
  3731  00FE10  74                 	db	116	;'t'
  3732  00FE11  00                 	db	0
  3733  00FE12                     STR_80:
  3734  00FE12  53                 	db	83	;'S'
  3735  00FE13  79                 	db	121	;'y'
  3736  00FE14  73                 	db	115	;'s'
  3737  00FE15  74                 	db	116	;'t'
  3738  00FE16  65                 	db	101	;'e'
  3739  00FE17  6D                 	db	109	;'m'
  3740  00FE18  20                 	db	32
  3741  00FE19  77                 	db	119	;'w'
  3742  00FE1A  69                 	db	105	;'i'
  3743  00FE1B  6C                 	db	108	;'l'
  3744  00FE1C  6C                 	db	108	;'l'
  3745  00FE1D  20                 	db	32
  3746  00FE1E  72                 	db	114	;'r'
  3747  00FE1F  65                 	db	101	;'e'
  3748  00FE20  73                 	db	115	;'s'
  3749  00FE21  65                 	db	101	;'e'
  3750  00FE22  74                 	db	116	;'t'
  3751  00FE23  00                 	db	0
  3752  00FE24                     STR_149:
  3753  00FE24  30                 	db	48	;'0'
  3754  00FE25  31                 	db	49	;'1'
  3755  00FE26  32                 	db	50	;'2'
  3756  00FE27  33                 	db	51	;'3'
  3757  00FE28  34                 	db	52	;'4'
  3758  00FE29  35                 	db	53	;'5'
  3759  00FE2A  36                 	db	54	;'6'
  3760  00FE2B  37                 	db	55	;'7'
  3761  00FE2C  38                 	db	56	;'8'
  3762  00FE2D  39                 	db	57	;'9'
  3763  00FE2E  41                 	db	65	;'A'
  3764  00FE2F  42                 	db	66	;'B'
  3765  00FE30  43                 	db	67	;'C'
  3766  00FE31  44                 	db	68	;'D'
  3767  00FE32  45                 	db	69	;'E'
  3768  00FE33  46                 	db	70	;'F'
  3769  00FE34  00                 	db	0
  3770  00FE35                     STR_90:
  3771  00FE35  53                 	db	83	;'S'
  3772  00FE36  79                 	db	121	;'y'
  3773  00FE37  73                 	db	115	;'s'
  3774  00FE38  74                 	db	116	;'t'
  3775  00FE39  65                 	db	101	;'e'
  3776  00FE3A  6D                 	db	109	;'m'
  3777  00FE3B  20                 	db	32
  3778  00FE3C  63                 	db	99	;'c'
  3779  00FE3D  6F                 	db	111	;'o'
  3780  00FE3E  6D                 	db	109	;'m'
  3781  00FE3F  6D                 	db	109	;'m'
  3782  00FE40  61                 	db	97	;'a'
  3783  00FE41  6E                 	db	110	;'n'
  3784  00FE42  64                 	db	100	;'d'
  3785  00FE43  73                 	db	115	;'s'
  3786  00FE44  3A                 	db	58	;':'
  3787  00FE45  00                 	db	0
  3788  00FE46                     STR_43:
  3789  00FE46  4E                 	db	78	;'N'
  3790  00FE47  45                 	db	69	;'E'
  3791  00FE48  43                 	db	67	;'C'
  3792  00FE49  20                 	db	32
  3793  00FE4A  3D                 	db	61	;'='
  3794  00FE4B  20                 	db	32
  3795  00FE4C  30                 	db	48	;'0'
  3796  00FE4D  78                 	db	120	;'x'
  3797  00FE4E  33                 	db	51	;'3'
  3798  00FE4F  38                 	db	56	;'8'
  3799  00FE50  2C                 	db	44
  3800  00FE51  20                 	db	32
  3801  00FE52  30                 	db	48	;'0'
  3802  00FE53  78                 	db	120	;'x'
  3803  00FE54  30                 	db	48	;'0'
  3804  00FE55  41                 	db	65	;'A'
  3805  00FE56  00                 	db	0
  3806  00FE57                     STR_54:
  3807  00FE57  52                 	db	82	;'R'
  3808  00FE58  65                 	db	101	;'e'
  3809  00FE59  6D                 	db	109	;'m'
  3810  00FE5A  6F                 	db	111	;'o'
  3811  00FE5B  74                 	db	116	;'t'
  3812  00FE5C  65                 	db	101	;'e'
  3813  00FE5D  42                 	db	66	;'B'
  3814  00FE5E  75                 	db	117	;'u'
  3815  00FE5F  74                 	db	116	;'t'
  3816  00FE60  74                 	db	116	;'t'
  3817  00FE61  6F                 	db	111	;'o'
  3818  00FE62  6E                 	db	110	;'n'
  3819  00FE63  27                 	db	39
  3820  00FE64  78                 	db	120	;'x'
  3821  00FE65  27                 	db	39
  3822  00FE66  00                 	db	0
  3823  00FE67                     STR_86:
  3824  00FE67  50                 	db	80	;'P'
  3825  00FE68  43                 	db	67	;'C'
  3826  00FE69  42                 	db	66	;'B'
  3827  00FE6A  20                 	db	32
  3828  00FE6B  56                 	db	86	;'V'
  3829  00FE6C  65                 	db	101	;'e'
  3830  00FE6D  72                 	db	114	;'r'
  3831  00FE6E  73                 	db	115	;'s'
  3832  00FE6F  69                 	db	105	;'i'
  3833  00FE70  6F                 	db	111	;'o'
  3834  00FE71  6E                 	db	110	;'n'
  3835  00FE72  3A                 	db	58	;':'
  3836  00FE73  20                 	db	32
  3837  00FE74  25                 	db	37
  3838  00FE75  73                 	db	115	;'s'
  3839  00FE76  00                 	db	0
  3840  00FE77                     STR_1:
  3841  00FE77  42                 	db	66	;'B'
  3842  00FE78  75                 	db	117	;'u'
  3843  00FE79  66                 	db	102	;'f'
  3844  00FE7A  66                 	db	102	;'f'
  3845  00FE7B  65                 	db	101	;'e'
  3846  00FE7C  72                 	db	114	;'r'
  3847  00FE7D  20                 	db	32
  3848  00FE7E  4F                 	db	79	;'O'
  3849  00FE7F  76                 	db	118	;'v'
  3850  00FE80  65                 	db	101	;'e'
  3851  00FE81  72                 	db	114	;'r'
  3852  00FE82  66                 	db	102	;'f'
  3853  00FE83  6C                 	db	108	;'l'
  3854  00FE84  6F                 	db	111	;'o'
  3855  00FE85  77                 	db	119	;'w'
  3856  00FE86  00                 	db	0
  3857  00FE87                     STR_101:
  3858  00FE87  52                 	db	82	;'R'
  3859  00FE88  65                 	db	101	;'e'
  3860  00FE89  6D                 	db	109	;'m'
  3861  00FE8A  6F                 	db	111	;'o'
  3862  00FE8B  74                 	db	116	;'t'
  3863  00FE8C  65                 	db	101	;'e'
  3864  00FE8D  42                 	db	66	;'B'
  3865  00FE8E  75                 	db	117	;'u'
  3866  00FE8F  74                 	db	116	;'t'
  3867  00FE90  74                 	db	116	;'t'
  3868  00FE91  6F                 	db	111	;'o'
  3869  00FE92  6E                 	db	110	;'n'
  3870  00FE93  25                 	db	37
  3871  00FE94  64                 	db	100	;'d'
  3872  00FE95  00                 	db	0
  3873  00FE96                     STR_57:
  3874  00FE96  52                 	db	82	;'R'
  3875  00FE97  65                 	db	101	;'e'
  3876  00FE98  6D                 	db	109	;'m'
  3877  00FE99  6F                 	db	111	;'o'
  3878  00FE9A  74                 	db	116	;'t'
  3879  00FE9B  65                 	db	101	;'e'
  3880  00FE9C  42                 	db	66	;'B'
  3881  00FE9D  75                 	db	117	;'u'
  3882  00FE9E  74                 	db	116	;'t'
  3883  00FE9F  74                 	db	116	;'t'
  3884  00FEA0  6F                 	db	111	;'o'
  3885  00FEA1  6E                 	db	110	;'n'
  3886  00FEA2  31                 	db	49	;'1'
  3887  00FEA3  00                 	db	0
  3888  00FEA4                     STR_67:
  3889  00FEA4  57                 	db	87	;'W'
  3890  00FEA5  68                 	db	104	;'h'
  3891  00FEA6  69                 	db	105	;'i'
  3892  00FEA7  63                 	db	99	;'c'
  3893  00FEA8  68                 	db	104	;'h'
  3894  00FEA9  20                 	db	32
  3895  00FEAA  64                 	db	100	;'d'
  3896  00FEAB  65                 	db	101	;'e'
  3897  00FEAC  76                 	db	118	;'v'
  3898  00FEAD  69                 	db	105	;'i'
  3899  00FEAE  63                 	db	99	;'c'
  3900  00FEAF  65                 	db	101	;'e'
  3901  00FEB0  3F                 	db	63	;'?'
  3902  00FEB1  00                 	db	0
  3903  00FEB2                     STR_131:
  3904  00FEB2  52                 	db	82	;'R'
  3905  00FEB3  46                 	db	70	;'F'
  3906  00FEB4  20                 	db	32
  3907  00FEB5  63                 	db	99	;'c'
  3908  00FEB6  6F                 	db	111	;'o'
  3909  00FEB7  6D                 	db	109	;'m'
  3910  00FEB8  6D                 	db	109	;'m'
  3911  00FEB9  61                 	db	97	;'a'
  3912  00FEBA  6E                 	db	110	;'n'
  3913  00FEBB  64                 	db	100	;'d'
  3914  00FEBC  73                 	db	115	;'s'
  3915  00FEBD  3A                 	db	58	;':'
  3916  00FEBE  00                 	db	0
  3917  00FEBF                     STR_100:
  3918  00FEBF  49                 	db	73	;'I'
  3919  00FEC0  52                 	db	82	;'R'
  3920  00FEC1  20                 	db	32
  3921  00FEC2  63                 	db	99	;'c'
  3922  00FEC3  6F                 	db	111	;'o'
  3923  00FEC4  6D                 	db	109	;'m'
  3924  00FEC5  6D                 	db	109	;'m'
  3925  00FEC6  61                 	db	97	;'a'
  3926  00FEC7  6E                 	db	110	;'n'
  3927  00FEC8  64                 	db	100	;'d'
  3928  00FEC9  73                 	db	115	;'s'
  3929  00FECA  3A                 	db	58	;':'
  3930  00FECB  00                 	db	0
  3931  00FECC                     STR_123:
  3932  00FECC  52                 	db	82	;'R'
  3933  00FECD  46                 	db	70	;'F'
  3934  00FECE  20                 	db	32
  3935  00FECF  63                 	db	99	;'c'
  3936  00FED0  6C                 	db	108	;'l'
  3937  00FED1  65                 	db	101	;'e'
  3938  00FED2  61                 	db	97	;'a'
  3939  00FED3  72                 	db	114	;'r'
  3940  00FED4  20                 	db	32
  3941  00FED5  32                 	db	50	;'2'
  3942  00FED6  2C                 	db	44
  3943  00FED7  42                 	db	66	;'B'
  3944  00FED8  00                 	db	0
  3945  00FED9                     STR_117:
  3946  00FED9  52                 	db	82	;'R'
  3947  00FEDA  46                 	db	70	;'F'
  3948  00FEDB  20                 	db	32
  3949  00FEDC  63                 	db	99	;'c'
  3950  00FEDD  6C                 	db	108	;'l'
  3951  00FEDE  65                 	db	101	;'e'
  3952  00FEDF  61                 	db	97	;'a'
  3953  00FEE0  72                 	db	114	;'r'
  3954  00FEE1  20                 	db	32
  3955  00FEE2  31                 	db	49	;'1'
  3956  00FEE3  2C                 	db	44
  3957  00FEE4  44                 	db	68	;'D'
  3958  00FEE5  00                 	db	0
  3959  00FEE6                     STR_125:
  3960  00FEE6  52                 	db	82	;'R'
  3961  00FEE7  46                 	db	70	;'F'
  3962  00FEE8  20                 	db	32
  3963  00FEE9  63                 	db	99	;'c'
  3964  00FEEA  6C                 	db	108	;'l'
  3965  00FEEB  65                 	db	101	;'e'
  3966  00FEEC  61                 	db	97	;'a'
  3967  00FEED  72                 	db	114	;'r'
  3968  00FEEE  20                 	db	32
  3969  00FEEF  32                 	db	50	;'2'
  3970  00FEF0  2C                 	db	44
  3971  00FEF1  44                 	db	68	;'D'
  3972  00FEF2  00                 	db	0
  3973  00FEF3                     STR_119:
  3974  00FEF3  52                 	db	82	;'R'
  3975  00FEF4  46                 	db	70	;'F'
  3976  00FEF5  20                 	db	32
  3977  00FEF6  63                 	db	99	;'c'
  3978  00FEF7  6C                 	db	108	;'l'
  3979  00FEF8  65                 	db	101	;'e'
  3980  00FEF9  61                 	db	97	;'a'
  3981  00FEFA  72                 	db	114	;'r'
  3982  00FEFB  20                 	db	32
  3983  00FEFC  31                 	db	49	;'1'
  3984  00FEFD  2C                 	db	44
  3985  00FEFE  45                 	db	69	;'E'
  3986  00FEFF  00                 	db	0
  3987  00FF00                     STR_121:
  3988  00FF00  52                 	db	82	;'R'
  3989  00FF01  46                 	db	70	;'F'
  3990  00FF02  20                 	db	32
  3991  00FF03  63                 	db	99	;'c'
  3992  00FF04  6C                 	db	108	;'l'
  3993  00FF05  65                 	db	101	;'e'
  3994  00FF06  61                 	db	97	;'a'
  3995  00FF07  72                 	db	114	;'r'
  3996  00FF08  20                 	db	32
  3997  00FF09  31                 	db	49	;'1'
  3998  00FF0A  2C                 	db	44
  3999  00FF0B  46                 	db	70	;'F'
  4000  00FF0C  00                 	db	0
  4001  00FF0D                     STR_127:
  4002  00FF0D  52                 	db	82	;'R'
  4003  00FF0E  46                 	db	70	;'F'
  4004  00FF0F  20                 	db	32
  4005  00FF10  63                 	db	99	;'c'
  4006  00FF11  6C                 	db	108	;'l'
  4007  00FF12  65                 	db	101	;'e'
  4008  00FF13  61                 	db	97	;'a'
  4009  00FF14  72                 	db	114	;'r'
  4010  00FF15  20                 	db	32
  4011  00FF16  32                 	db	50	;'2'
  4012  00FF17  2C                 	db	44
  4013  00FF18  48                 	db	72	;'H'
  4014  00FF19  00                 	db	0
  4015  00FF1A                     STR_44:
  4016  00FF1A  52                 	db	82	;'R'
  4017  00FF1B  65                 	db	101	;'e'
  4018  00FF1C  6D                 	db	109	;'m'
  4019  00FF1D  6F                 	db	111	;'o'
  4020  00FF1E  74                 	db	116	;'t'
  4021  00FF1F  65                 	db	101	;'e'
  4022  00FF20  42                 	db	66	;'B'
  4023  00FF21  75                 	db	117	;'u'
  4024  00FF22  74                 	db	116	;'t'
  4025  00FF23  74                 	db	116	;'t'
  4026  00FF24  6F                 	db	111	;'o'
  4027  00FF25  6E                 	db	110	;'n'
  4028  00FF26  00                 	db	0
  4029  00FF27                     STR_111:
  4030  00FF27  52                 	db	82	;'R'
  4031  00FF28  46                 	db	70	;'F'
  4032  00FF29  20                 	db	32
  4033  00FF2A  73                 	db	115	;'s'
  4034  00FF2B  65                 	db	101	;'e'
  4035  00FF2C  74                 	db	116	;'t'
  4036  00FF2D  20                 	db	32
  4037  00FF2E  32                 	db	50	;'2'
  4038  00FF2F  2C                 	db	44
  4039  00FF30  42                 	db	66	;'B'
  4040  00FF31  00                 	db	0
  4041  00FF32                     STR_105:
  4042  00FF32  52                 	db	82	;'R'
  4043  00FF33  46                 	db	70	;'F'
  4044  00FF34  20                 	db	32
  4045  00FF35  73                 	db	115	;'s'
  4046  00FF36  65                 	db	101	;'e'
  4047  00FF37  74                 	db	116	;'t'
  4048  00FF38  20                 	db	32
  4049  00FF39  31                 	db	49	;'1'
  4050  00FF3A  2C                 	db	44
  4051  00FF3B  44                 	db	68	;'D'
  4052  00FF3C  00                 	db	0
  4053  00FF3D                     STR_113:
  4054  00FF3D  52                 	db	82	;'R'
  4055  00FF3E  46                 	db	70	;'F'
  4056  00FF3F  20                 	db	32
  4057  00FF40  73                 	db	115	;'s'
  4058  00FF41  65                 	db	101	;'e'
  4059  00FF42  74                 	db	116	;'t'
  4060  00FF43  20                 	db	32
  4061  00FF44  32                 	db	50	;'2'
  4062  00FF45  2C                 	db	44
  4063  00FF46  44                 	db	68	;'D'
  4064  00FF47  00                 	db	0
  4065  00FF48                     STR_107:
  4066  00FF48  52                 	db	82	;'R'
  4067  00FF49  46                 	db	70	;'F'
  4068  00FF4A  20                 	db	32
  4069  00FF4B  73                 	db	115	;'s'
  4070  00FF4C  65                 	db	101	;'e'
  4071  00FF4D  74                 	db	116	;'t'
  4072  00FF4E  20                 	db	32
  4073  00FF4F  31                 	db	49	;'1'
  4074  00FF50  2C                 	db	44
  4075  00FF51  45                 	db	69	;'E'
  4076  00FF52  00                 	db	0
  4077  00FF53                     STR_109:
  4078  00FF53  52                 	db	82	;'R'
  4079  00FF54  46                 	db	70	;'F'
  4080  00FF55  20                 	db	32
  4081  00FF56  73                 	db	115	;'s'
  4082  00FF57  65                 	db	101	;'e'
  4083  00FF58  74                 	db	116	;'t'
  4084  00FF59  20                 	db	32
  4085  00FF5A  31                 	db	49	;'1'
  4086  00FF5B  2C                 	db	44
  4087  00FF5C  46                 	db	70	;'F'
  4088  00FF5D  00                 	db	0
  4089  00FF5E                     STR_115:
  4090  00FF5E  52                 	db	82	;'R'
  4091  00FF5F  46                 	db	70	;'F'
  4092  00FF60  20                 	db	32
  4093  00FF61  73                 	db	115	;'s'
  4094  00FF62  65                 	db	101	;'e'
  4095  00FF63  74                 	db	116	;'t'
  4096  00FF64  20                 	db	32
  4097  00FF65  32                 	db	50	;'2'
  4098  00FF66  2C                 	db	44
  4099  00FF67  48                 	db	72	;'H'
  4100  00FF68  00                 	db	0
  4101  00FF69                     STR_38:
  4102  00FF69  20                 	db	32
  4103  00FF6A  20                 	db	32
  4104  00FF6B  20                 	db	32
  4105  00FF6C  20                 	db	32
  4106  00FF6D  20                 	db	32
  4107  00FF6E  20                 	db	32
  4108  00FF6F  20                 	db	32
  4109  00FF70  20                 	db	32
  4110  00FF71  6F                 	db	111	;'o'
  4111  00FF72  72                 	db	114	;'r'
  4112  00FF73  00                 	db	0
  4113  00FF74                     STR_6:
  4114  00FF74  53                 	db	83	;'S'
  4115  00FF75  55                 	db	85	;'U'
  4116  00FF76  2C                 	db	44
  4117  00FF77  20                 	db	32
  4118  00FF78  31                 	db	49	;'1'
  4119  00FF79  31                 	db	49	;'1'
  4120  00FF7A  35                 	db	53	;'5'
  4121  00FF7B  4B                 	db	75	;'K'
  4122  00FF7C  0D                 	db	13
  4123  00FF7D  00                 	db	0
  4124  00FF7E                     STR_92:
  4125  00FF7E  48                 	db	72	;'H'
  4126  00FF7F  65                 	db	101	;'e'
  4127  00FF80  6C                 	db	108	;'l'
  4128  00FF81  70                 	db	112	;'p'
  4129  00FF82  20                 	db	32
  4130  00FF83  4D                 	db	77	;'M'
  4131  00FF84  65                 	db	101	;'e'
  4132  00FF85  6E                 	db	110	;'n'
  4133  00FF86  75                 	db	117	;'u'
  4134  00FF87  00                 	db	0
  4135  00FF88                     STR_10:
  4136  00FF88  53                 	db	83	;'S'
  4137  00FF89  59                 	db	89	;'Y'
  4138  00FF8A  2C                 	db	44
  4139  00FF8B  30                 	db	48	;'0'
  4140  00FF8C  30                 	db	48	;'0'
  4141  00FF8D  31                 	db	49	;'1'
  4142  00FF8E  30                 	db	48	;'0'
  4143  00FF8F  0D                 	db	13
  4144  00FF90  00                 	db	0
  4145  00FF91                     STR_40:
  4146  00FF91  45                 	db	69	;'E'
  4147  00FF92  78                 	db	120	;'x'
  4148  00FF93  61                 	db	97	;'a'
  4149  00FF94  6D                 	db	109	;'m'
  4150  00FF95  70                 	db	112	;'p'
  4151  00FF96  6C                 	db	108	;'l'
  4152  00FF97  65                 	db	101	;'e'
  4153  00FF98  3A                 	db	58	;':'
  4154  00FF99  00                 	db	0
  4155  00FF9A                     STR_60:
  4156  00FF9A  52                 	db	82	;'R'
  4157  00FF9B  46                 	db	70	;'F'
  4158  00FF9C  20                 	db	32
  4159  00FF9D  63                 	db	99	;'c'
  4160  00FF9E  6C                 	db	108	;'l'
  4161  00FF9F  65                 	db	101	;'e'
  4162  00FFA0  61                 	db	97	;'a'
  4163  00FFA1  72                 	db	114	;'r'
  4164  00FFA2  00                 	db	0
  4165  00FFA3                     STR_82:
  4166  00FFA3  56                 	db	86	;'V'
  4167  00FFA4  6F                 	db	111	;'o'
  4168  00FFA5  6C                 	db	108	;'l'
  4169  00FFA6  74                 	db	116	;'t'
  4170  00FFA7  61                 	db	97	;'a'
  4171  00FFA8  67                 	db	103	;'g'
  4172  00FFA9  65                 	db	101	;'e'
  4173  00FFAA  00                 	db	0
  4174  00FFAB                     STR_148:
  4175  00FFAB  28                 	db	40
  4176  00FFAC  6E                 	db	110	;'n'
  4177  00FFAD  75                 	db	117	;'u'
  4178  00FFAE  6C                 	db	108	;'l'
  4179  00FFAF  6C                 	db	108	;'l'
  4180  00FFB0  29                 	db	41
  4181  00FFB1  00                 	db	0
  4182  00FFB2                     STR_36:
  4183  00FFB2  55                 	db	85	;'U'
  4184  00FFB3  73                 	db	115	;'s'
  4185  00FFB4  61                 	db	97	;'a'
  4186  00FFB5  67                 	db	103	;'g'
  4187  00FFB6  65                 	db	101	;'e'
  4188  00FFB7  3A                 	db	58	;':'
  4189  00FFB8  00                 	db	0
  4190  00FFB9                     STR_59:
  4191  00FFB9  52                 	db	82	;'R'
  4192  00FFBA  46                 	db	70	;'F'
  4193  00FFBB  20                 	db	32
  4194  00FFBC  73                 	db	115	;'s'
  4195  00FFBD  65                 	db	101	;'e'
  4196  00FFBE  74                 	db	116	;'t'
  4197  00FFBF  00                 	db	0
  4198  00FFC0                     STR_12:
  4199  00FFC0  53                 	db	83	;'S'
  4200  00FFC1  7E                 	db	126
  4201  00FFC2  2C                 	db	44
  4202  00FFC3  30                 	db	48	;'0'
  4203  00FFC4  0D                 	db	13
  4204  00FFC5  00                 	db	0
  4205  00FFC6                     STR_20:
  4206  00FFC6  43                 	db	67	;'C'
  4207  00FFC7  6F                 	db	111	;'o'
  4208  00FFC8  6E                 	db	110	;'n'
  4209  00FFC9  66                 	db	102	;'f'
  4210  00FFCA  31                 	db	49	;'1'
  4211  00FFCB  00                 	db	0
  4212  00FFCC                     STR_22:
  4213  00FFCC  43                 	db	67	;'C'
  4214  00FFCD  6F                 	db	111	;'o'
  4215  00FFCE  6E                 	db	110	;'n'
  4216  00FFCF  66                 	db	102	;'f'
  4217  00FFD0  32                 	db	50	;'2'
  4218  00FFD1  00                 	db	0
  4219  00FFD2                     STR_77:
  4220  00FFD2  52                 	db	82	;'R'
  4221  00FFD3  65                 	db	101	;'e'
  4222  00FFD4  73                 	db	115	;'s'
  4223  00FFD5  65                 	db	101	;'e'
  4224  00FFD6  74                 	db	116	;'t'
  4225  00FFD7  00                 	db	0
  4226  00FFD8                     STR_18:
  4227  00FFD8  2D                 	db	45
  4228  00FFD9  2D                 	db	45
  4229  00FFDA  2D                 	db	45
  4230  00FFDB  0D                 	db	13
  4231  00FFDC  00                 	db	0
  4232  00FFDD                     STR_16:
  4233  00FFDD  44                 	db	68	;'D'
  4234  00FFDE  2C                 	db	44
  4235  00FFDF  30                 	db	48	;'0'
  4236  00FFE0  0D                 	db	13
  4237  00FFE1  00                 	db	0
  4238  00FFE2                     STR_129:
  4239  00FFE2  4E                 	db	78	;'N'
  4240  00FFE3  45                 	db	69	;'E'
  4241  00FFE4  43                 	db	67	;'C'
  4242  00FFE5  3F                 	db	63	;'?'
  4243  00FFE6  00                 	db	0
  4244  00FFE7                     STR_2:
  4245  00FFE7  24                 	db	36
  4246  00FFE8  24                 	db	36
  4247  00FFE9  24                 	db	36
  4248  00FFEA  00                 	db	0
  4249  00FFEB                     STR_88:
  4250  00FFEB  3F                 	db	63	;'?'
  4251  00FFEC  3F                 	db	63	;'?'
  4252  00FFED  3F                 	db	63	;'?'
  4253  00FFEE  00                 	db	0
  4254  00FFEF                     STR_24:
  4255  00FFEF  4E                 	db	78	;'N'
  4256  00FFF0  45                 	db	69	;'E'
  4257  00FFF1  43                 	db	67	;'C'
  4258  00FFF2  00                 	db	0
  4259  00FFF3                     STR_3:
  4260  00FFF3  43                 	db	67	;'C'
  4261  00FFF4  4D                 	db	77	;'M'
  4262  00FFF5  44                 	db	68	;'D'
  4263  00FFF6  00                 	db	0
  4264  00FFF7                     STR_19:
  4265  00FFF7  45                 	db	69	;'E'
  4266  00FFF8  4E                 	db	78	;'N'
  4267  00FFF9  44                 	db	68	;'D'
  4268  00FFFA  00                 	db	0
  4269  00FFFB                     STR_5:
  4270  00FFFB  41                 	db	65	;'A'
  4271  00FFFC  4F                 	db	79	;'O'
  4272  00FFFD  4B                 	db	75	;'K'
  4273  00FFFE  00                 	db	0
  4274  0000                     
  4275                           ; #config settings
  4276  00FFFF  00                 	db	0	; dummy byte at the end
  4277  0000                     
  4278                           	psect	cinit
  4279  007F62                     __pcinit:
  4280                           	opt stack 0
  4281  007F62                     start_initialization:
  4282                           	opt stack 0
  4283  007F62                     __initialization:
  4284                           	opt stack 0
  4285                           
  4286                           ; Clear objects allocated to BANK7 (200 bytes)
  4287  007F62  EE07  F000         	lfsr	0,__pbssBANK7
  4288  007F66  0EC8               	movlw	200
  4289  007F68                     clear_0:
  4290  007F68  6AEE               	clrf	postinc0,c
  4291  007F6A  06E8               	decf	wreg,f,c
  4292  007F6C  E1FD               	bnz	clear_0
  4293                           
  4294                           ; Clear objects allocated to BANK6 (255 bytes)
  4295  007F6E  EE06  F000         	lfsr	0,__pbssBANK6
  4296  007F72  EE10 F0FF          	lfsr	1,255
  4297  007F76                     clear_1:
  4298  007F76  6AEE               	clrf	postinc0,c
  4299  007F78  50E5               	movf	postdec1,w,c
  4300  007F7A  50E1               	movf	fsr1l,w,c
  4301  007F7C  E1FC               	bnz	clear_1
  4302  007F7E  50E2               	movf	fsr1h,w,c
  4303  007F80  E1FA               	bnz	clear_1
  4304                           
  4305                           ; Clear objects allocated to BANK5 (255 bytes)
  4306  007F82  EE05  F000         	lfsr	0,__pbssBANK5
  4307  007F86  EE10 F0FF          	lfsr	1,255
  4308  007F8A                     clear_2:
  4309  007F8A  6AEE               	clrf	postinc0,c
  4310  007F8C  50E5               	movf	postdec1,w,c
  4311  007F8E  50E1               	movf	fsr1l,w,c
  4312  007F90  E1FC               	bnz	clear_2
  4313  007F92  50E2               	movf	fsr1h,w,c
  4314  007F94  E1FA               	bnz	clear_2
  4315                           
  4316                           ; Clear objects allocated to BANK4 (136 bytes)
  4317  007F96  EE04  F000         	lfsr	0,__pbssBANK4
  4318  007F9A  0E88               	movlw	136
  4319  007F9C                     clear_3:
  4320  007F9C  6AEE               	clrf	postinc0,c
  4321  007F9E  06E8               	decf	wreg,f,c
  4322  007FA0  E1FD               	bnz	clear_3
  4323                           
  4324                           ; Clear objects allocated to BANK2 (24 bytes)
  4325  007FA2  EE02  F0CE         	lfsr	0,__pbssBANK2
  4326  007FA6  0E18               	movlw	24
  4327  007FA8                     clear_4:
  4328  007FA8  6AEE               	clrf	postinc0,c
  4329  007FAA  06E8               	decf	wreg,f,c
  4330  007FAC  E1FD               	bnz	clear_4
  4331                           
  4332                           ; Clear objects allocated to BANK1 (1 bytes)
  4333  007FAE  0101               	movlb	1
  4334  007FB0  6BFF               	clrf	__pbssBANK1& (0+255),b
  4335                           
  4336                           ; Clear objects allocated to BANK0 (11 bytes)
  4337  007FB2  EE00  F0DB         	lfsr	0,__pbssBANK0
  4338  007FB6  0E0B               	movlw	11
  4339  007FB8                     clear_5:
  4340  007FB8  6AEE               	clrf	postinc0,c
  4341  007FBA  06E8               	decf	wreg,f,c
  4342  007FBC  E1FD               	bnz	clear_5
  4343                           
  4344                           ; Clear objects allocated to COMRAM (22 bytes)
  4345  007FBE  EE00  F026         	lfsr	0,__pbssCOMRAM
  4346  007FC2  0E16               	movlw	22
  4347  007FC4                     clear_6:
  4348  007FC4  6AEE               	clrf	postinc0,c
  4349  007FC6  06E8               	decf	wreg,f,c
  4350  007FC8  E1FD               	bnz	clear_6
  4351                           
  4352                           ; Initialize objects allocated to BANK2 (54 bytes)
  4353                           ; load TBLPTR registers with __pidataBANK2
  4354  007FCA  0ED2               	movlw	low __pidataBANK2
  4355  007FCC  6EF6               	movwf	tblptrl,c
  4356  007FCE  0E91               	movlw	high __pidataBANK2
  4357  007FD0  6EF7               	movwf	tblptrh,c
  4358  007FD2  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4359  007FD4  6EF8               	movwf	tblptru,c
  4360  007FD6  EE02  F098         	lfsr	0,__pdataBANK2
  4361  007FDA  EE10 F036          	lfsr	1,54
  4362  007FDE                     copy_data0:
  4363  007FDE  0009               	tblrd		*+
  4364  007FE0  CFF5 FFEE          	movff	tablat,postinc0
  4365  007FE4  50E5               	movf	postdec1,w,c
  4366  007FE6  50E1               	movf	fsr1l,w,c
  4367  007FE8  E1FA               	bnz	copy_data0
  4368                           
  4369                           ; Initialize objects allocated to BANK0 (1 bytes)
  4370                           ; load TBLPTR registers with __pidataBANK0
  4371  007FEA  0E5E               	movlw	low __pidataBANK0
  4372  007FEC  6EF6               	movwf	tblptrl,c
  4373  007FEE  0E95               	movlw	high __pidataBANK0
  4374  007FF0  6EF7               	movwf	tblptrh,c
  4375  007FF2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  4376  007FF4  6EF8               	movwf	tblptru,c
  4377  007FF6  0009               	tblrd		*+	;fetch initializer
  4378  007FF8  CFF5 F0E6          	movff	tablat,__pdataBANK0
  4379                           
  4380                           ; Initialize objects allocated to COMRAM (9 bytes)
  4381                           ; load TBLPTR registers with __pidataCOMRAM
  4382  007FFC  0E48               	movlw	low __pidataCOMRAM
  4383  007FFE  6EF6               	movwf	tblptrl,c
  4384  008000  0E95               	movlw	high __pidataCOMRAM
  4385  008002  6EF7               	movwf	tblptrh,c
  4386  008004  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  4387  008006  6EF8               	movwf	tblptru,c
  4388  008008  EE00  F03C         	lfsr	0,__pdataCOMRAM
  4389  00800C  EE10 F009          	lfsr	1,9
  4390  008010                     copy_data1:
  4391  008010  0009               	tblrd		*+
  4392  008012  CFF5 FFEE          	movff	tablat,postinc0
  4393  008016  50E5               	movf	postdec1,w,c
  4394  008018  50E1               	movf	fsr1l,w,c
  4395  00801A  E1FA               	bnz	copy_data1
  4396  00801C                     end_of_initialization:
  4397                           	opt stack 0
  4398  00801C                     __end_of__initialization:
  4399                           	opt stack 0
  4400  00801C  0100               	movlb	0
  4401  00801E  EF40  F02A         	goto	_main	;jump to C main() function
  4402                           tblptru	equ	0xFF8
  4403                           tblptrh	equ	0xFF7
  4404                           tblptrl	equ	0xFF6
  4405                           tablat	equ	0xFF5
  4406                           postinc0	equ	0xFEE
  4407                           wreg	equ	0xFE8
  4408                           postdec1	equ	0xFE5
  4409                           fsr1h	equ	0xFE2
  4410                           fsr1l	equ	0xFE1
  4411                           
  4412                           	psect	bssCOMRAM
  4413  000026                     __pbssCOMRAM:
  4414                           	opt stack 0
  4415  000026                     _CommandStringPos:
  4416                           	opt stack 0
  4417  000026                     	ds	1
  4418  000027                     _Conf2_ChannelB_Status:
  4419                           	opt stack 0
  4420  000027                     	ds	1
  4421  000028                     _Conf2_ChannelD_Status:
  4422                           	opt stack 0
  4423  000028                     	ds	1
  4424  000029                     _Conf2_ChannelH_1_Status:
  4425                           	opt stack 0
  4426  000029                     	ds	1
  4427  00002A                     _Conf2_ChannelH_2_Status:
  4428                           	opt stack 0
  4429  00002A                     	ds	1
  4430  00002B                     _Conf2_ChannelH_3_Status:
  4431                           	opt stack 0
  4432  00002B                     	ds	1
  4433  00002C                     _IRbit:
  4434                           	opt stack 0
  4435  00002C                     	ds	1
  4436  00002D                     _IRcodeBit:
  4437                           	opt stack 0
  4438  00002D                     	ds	1
  4439  00002E                     _IRpinOLD:
  4440                           	opt stack 0
  4441  00002E                     	ds	1
  4442  00002F                     _IRrawCodeNum:
  4443                           	opt stack 0
  4444  00002F                     	ds	1
  4445  000030                     _IRrepeatAmount:
  4446                           	opt stack 0
  4447  000030                     	ds	1
  4448  000031                     _IRrepeatflag:
  4449                           	opt stack 0
  4450  000031                     	ds	1
  4451  000032                     _IRsendFlag:
  4452                           	opt stack 0
  4453  000032                     	ds	1
  4454  000033                     _RFConfig:
  4455                           	opt stack 0
  4456  000033                     	ds	1
  4457  000034                     _RFcodeBit:
  4458                           	opt stack 0
  4459  000034                     	ds	1
  4460  000035                     _RFcodePlace:
  4461                           	opt stack 0
  4462  000035                     	ds	1
  4463  000036                     _RFsendFlag:
  4464                           	opt stack 0
  4465  000036                     	ds	1
  4466  000037                     _Sendcount:
  4467                           	opt stack 0
  4468  000037                     	ds	1
  4469  000038                     _Timer1_Postscaler:
  4470                           	opt stack 0
  4471  000038                     	ds	1
  4472  000039                     _Timer2_Postscaler:
  4473                           	opt stack 0
  4474  000039                     	ds	1
  4475  00003A                     _Timer3_Postscaler:
  4476                           	opt stack 0
  4477  00003A                     	ds	1
  4478  00003B                     _IRcommand:
  4479                           	opt stack 0
  4480  00003B                     	ds	1
  4481                           tblptru	equ	0xFF8
  4482                           tblptrh	equ	0xFF7
  4483                           tblptrl	equ	0xFF6
  4484                           tablat	equ	0xFF5
  4485                           postinc0	equ	0xFEE
  4486                           wreg	equ	0xFE8
  4487                           postdec1	equ	0xFE5
  4488                           fsr1h	equ	0xFE2
  4489                           fsr1l	equ	0xFE1
  4490                           
  4491                           	psect	dataCOMRAM
  4492  00003C                     __pdataCOMRAM:
  4493                           	opt stack 0
  4494  00003C                     _SN:
  4495                           	opt stack 0
  4496  00003C                     	ds	4
  4497  000040                     _IRbitPosition:
  4498                           	opt stack 0
  4499  000040                     	ds	1
  4500  000041                     _IRcodePlace:
  4501                           	opt stack 0
  4502  000041                     	ds	1
  4503  000042                     _RF_IR:
  4504                           	opt stack 0
  4505  000042                     	ds	1
  4506  000043                     _RF_IR_Postscaler:
  4507                           	opt stack 0
  4508  000043                     	ds	1
  4509  000044                     _ReceivingIR:
  4510                           	opt stack 0
  4511  000044                     	ds	1
  4512                           tblptru	equ	0xFF8
  4513                           tblptrh	equ	0xFF7
  4514                           tblptrl	equ	0xFF6
  4515                           tablat	equ	0xFF5
  4516                           postinc0	equ	0xFEE
  4517                           wreg	equ	0xFE8
  4518                           postdec1	equ	0xFE5
  4519                           fsr1h	equ	0xFE2
  4520                           fsr1l	equ	0xFE1
  4521                           
  4522                           	psect	bssBANK0
  4523  0000DB                     __pbssBANK0:
  4524                           	opt stack 0
  4525  0000DB                     _BatteryVoltage:
  4526                           	opt stack 0
  4527  0000DB                     	ds	3
  4528  0000DE                     _IRmod:
  4529                           	opt stack 0
  4530  0000DE                     	ds	1
  4531  0000DF                     _NewReceivedString:
  4532                           	opt stack 0
  4533  0000DF                     	ds	1
  4534  0000E0                     _ReceivedStringPos:
  4535                           	opt stack 0
  4536  0000E0                     	ds	1
  4537  0000E1                     _IR_NEC:
  4538                           	opt stack 0
  4539  0000E1                     	ds	4
  4540  0000E5                     _IR_New_Code:
  4541                           	opt stack 0
  4542  0000E5                     	ds	1
  4543                           tblptru	equ	0xFF8
  4544                           tblptrh	equ	0xFF7
  4545                           tblptrl	equ	0xFF6
  4546                           tablat	equ	0xFF5
  4547                           postinc0	equ	0xFEE
  4548                           wreg	equ	0xFE8
  4549                           postdec1	equ	0xFE5
  4550                           fsr1h	equ	0xFE2
  4551                           fsr1l	equ	0xFE1
  4552                           
  4553                           	psect	dataBANK0
  4554  0000E6                     __pdataBANK0:
  4555                           	opt stack 0
  4556  0000E6                     _Sent:
  4557                           	opt stack 0
  4558  0000E6                     	ds	1
  4559                           tblptru	equ	0xFF8
  4560                           tblptrh	equ	0xFF7
  4561                           tblptrl	equ	0xFF6
  4562                           tablat	equ	0xFF5
  4563                           postinc0	equ	0xFEE
  4564                           wreg	equ	0xFE8
  4565                           postdec1	equ	0xFE5
  4566                           fsr1h	equ	0xFE2
  4567                           fsr1l	equ	0xFE1
  4568                           
  4569                           	psect	bssBANK1
  4570  0001FF                     __pbssBANK1:
  4571                           	opt stack 0
  4572  0001FF                     _IRaddress:
  4573                           	opt stack 0
  4574  0001FF                     	ds	1
  4575                           tblptru	equ	0xFF8
  4576                           tblptrh	equ	0xFF7
  4577                           tblptrl	equ	0xFF6
  4578                           tablat	equ	0xFF5
  4579                           postinc0	equ	0xFEE
  4580                           wreg	equ	0xFE8
  4581                           postdec1	equ	0xFE5
  4582                           fsr1h	equ	0xFE2
  4583                           fsr1l	equ	0xFE1
  4584                           
  4585                           	psect	bssBANK2
  4586  0002CE                     __pbssBANK2:
  4587                           	opt stack 0
  4588  0002CE                     _RFsendCode:
  4589                           	opt stack 0
  4590  0002CE                     	ds	20
  4591  0002E2                     _IRsendCode:
  4592                           	opt stack 0
  4593  0002E2                     	ds	4
  4594                           tblptru	equ	0xFF8
  4595                           tblptrh	equ	0xFF7
  4596                           tblptrl	equ	0xFF6
  4597                           tablat	equ	0xFF5
  4598                           postinc0	equ	0xFEE
  4599                           wreg	equ	0xFE8
  4600                           postdec1	equ	0xFE5
  4601                           fsr1h	equ	0xFE2
  4602                           fsr1l	equ	0xFE1
  4603                           
  4604                           	psect	dataBANK2
  4605  000298                     __pdataBANK2:
  4606                           	opt stack 0
  4607  000298                     _ProductName:
  4608                           	opt stack 0
  4609  000298                     	ds	50
  4610  0002CA                     _IRtimeout:
  4611                           	opt stack 0
  4612  0002CA                     	ds	4
  4613                           tblptru	equ	0xFF8
  4614                           tblptrh	equ	0xFF7
  4615                           tblptrl	equ	0xFF6
  4616                           tablat	equ	0xFF5
  4617                           postinc0	equ	0xFEE
  4618                           wreg	equ	0xFE8
  4619                           postdec1	equ	0xFE5
  4620                           fsr1h	equ	0xFE2
  4621                           fsr1l	equ	0xFE1
  4622                           
  4623                           	psect	bssBANK4
  4624  000400                     __pbssBANK4:
  4625                           	opt stack 0
  4626  000400                     _Global:
  4627                           	opt stack 0
  4628  000400                     	ds	136
  4629                           tblptru	equ	0xFF8
  4630                           tblptrh	equ	0xFF7
  4631                           tblptrl	equ	0xFF6
  4632                           tablat	equ	0xFF5
  4633                           postinc0	equ	0xFEE
  4634                           wreg	equ	0xFE8
  4635                           postdec1	equ	0xFE5
  4636                           fsr1h	equ	0xFE2
  4637                           fsr1l	equ	0xFE1
  4638                           
  4639                           	psect	bssBANK5
  4640  000500                     __pbssBANK5:
  4641                           	opt stack 0
  4642  000500                     _CommandString:
  4643                           	opt stack 0
  4644  000500                     	ds	255
  4645                           tblptru	equ	0xFF8
  4646                           tblptrh	equ	0xFF7
  4647                           tblptrl	equ	0xFF6
  4648                           tablat	equ	0xFF5
  4649                           postinc0	equ	0xFEE
  4650                           wreg	equ	0xFE8
  4651                           postdec1	equ	0xFE5
  4652                           fsr1h	equ	0xFE2
  4653                           fsr1l	equ	0xFE1
  4654                           
  4655                           	psect	bssBANK6
  4656  000600                     __pbssBANK6:
  4657                           	opt stack 0
  4658  000600                     _ReceivedString:
  4659                           	opt stack 0
  4660  000600                     	ds	255
  4661                           tblptru	equ	0xFF8
  4662                           tblptrh	equ	0xFF7
  4663                           tblptrl	equ	0xFF6
  4664                           tablat	equ	0xFF5
  4665                           postinc0	equ	0xFEE
  4666                           wreg	equ	0xFE8
  4667                           postdec1	equ	0xFE5
  4668                           fsr1h	equ	0xFE2
  4669                           fsr1l	equ	0xFE1
  4670                           
  4671                           	psect	bssBANK7
  4672  000700                     __pbssBANK7:
  4673                           	opt stack 0
  4674  000700                     _IRRawCode:
  4675                           	opt stack 0
  4676  000700                     	ds	200
  4677                           tblptru	equ	0xFF8
  4678                           tblptrh	equ	0xFF7
  4679                           tblptrl	equ	0xFF6
  4680                           tablat	equ	0xFF5
  4681                           postinc0	equ	0xFEE
  4682                           wreg	equ	0xFE8
  4683                           postdec1	equ	0xFE5
  4684                           fsr1h	equ	0xFE2
  4685                           fsr1l	equ	0xFE1
  4686                           
  4687                           	psect	cstackBANK3
  4688  000300                     __pcstackBANK3:
  4689                           	opt stack 0
  4690  000300                     main@BluetoothString:
  4691                           	opt stack 0
  4692                           
  4693                           ; 255 bytes @ 0x0
  4694  000300                     	ds	255
  4695                           tblptru	equ	0xFF8
  4696                           tblptrh	equ	0xFF7
  4697                           tblptrl	equ	0xFF6
  4698                           tablat	equ	0xFF5
  4699                           postinc0	equ	0xFEE
  4700                           wreg	equ	0xFE8
  4701                           postdec1	equ	0xFE5
  4702                           fsr1h	equ	0xFE2
  4703                           fsr1l	equ	0xFE1
  4704                           
  4705                           	psect	cstackBANK2
  4706  000200                     __pcstackBANK2:
  4707                           	opt stack 0
  4708  000200                     UseBluetooth@String:
  4709                           	opt stack 0
  4710                           
  4711                           ; 2 bytes @ 0x0
  4712  000200                     	ds	2
  4713  000202                     UseBluetooth@StringPos:
  4714                           	opt stack 0
  4715                           
  4716                           ; 1 bytes @ 0x2
  4717  000202                     	ds	1
  4718  000203                     ??_UseBluetooth:
  4719                           
  4720                           ; 0 bytes @ 0x3
  4721  000203                     	ds	12
  4722  00020F                     UseBluetooth@buf:
  4723                           	opt stack 0
  4724                           
  4725                           ; 100 bytes @ 0xF
  4726  00020F                     	ds	100
  4727  000273                     UseBluetooth@rfchannelSTR:
  4728                           	opt stack 0
  4729                           
  4730                           ; 10 bytes @ 0x73
  4731  000273                     	ds	10
  4732  00027D                     UseBluetooth@set:
  4733                           	opt stack 0
  4734                           
  4735                           ; 1 bytes @ 0x7D
  4736  00027D                     	ds	1
  4737  00027E                     UseBluetooth@tempNec:
  4738                           	opt stack 0
  4739                           
  4740                           ; 4 bytes @ 0x7E
  4741  00027E                     	ds	4
  4742  000282                     UseBluetooth@timeout:
  4743                           	opt stack 0
  4744                           
  4745                           ; 1 bytes @ 0x82
  4746  000282                     	ds	1
  4747  000283                     UseBluetooth@EmptyPlace:
  4748                           	opt stack 0
  4749                           
  4750                           ; 1 bytes @ 0x83
  4751  000283                     	ds	1
  4752  000284                     UseBluetooth@device:
  4753                           	opt stack 0
  4754                           
  4755                           ; 1 bytes @ 0x84
  4756  000284                     	ds	1
  4757  000285                     UseBluetooth@EnteredNEC:
  4758                           	opt stack 0
  4759                           
  4760                           ; 4 bytes @ 0x85
  4761  000285                     	ds	4
  4762  000289                     UseBluetooth@ok:
  4763                           	opt stack 0
  4764                           
  4765                           ; 1 bytes @ 0x89
  4766  000289                     	ds	1
  4767  00028A                     UseBluetooth@tempRFArray:
  4768                           	opt stack 0
  4769                           
  4770                           ; 1 bytes @ 0x8A
  4771  00028A                     	ds	1
  4772  00028B                     UseBluetooth@rfconf:
  4773                           	opt stack 0
  4774                           
  4775                           ; 1 bytes @ 0x8B
  4776  00028B                     	ds	1
  4777  00028C                     UseBluetooth@NecAddress:
  4778                           	opt stack 0
  4779                           
  4780                           ; 1 bytes @ 0x8C
  4781  00028C                     	ds	1
  4782  00028D                     UseBluetooth@NecCommand:
  4783                           	opt stack 0
  4784                           
  4785                           ; 1 bytes @ 0x8D
  4786  00028D                     	ds	1
  4787  00028E                     UseBluetooth@temp:
  4788                           	opt stack 0
  4789                           
  4790                           ; 4 bytes @ 0x8E
  4791  00028E                     	ds	4
  4792  000292                     UseBluetooth@i:
  4793                           	opt stack 0
  4794                           
  4795                           ; 1 bytes @ 0x92
  4796  000292                     	ds	1
  4797  000293                     main@IRtask:
  4798                           	opt stack 0
  4799                           
  4800                           ; 1 bytes @ 0x93
  4801  000293                     	ds	1
  4802  000294                     main@Bluetoothtask:
  4803                           	opt stack 0
  4804                           
  4805                           ; 1 bytes @ 0x94
  4806  000294                     	ds	1
  4807  000295                     main@BluetoothStringPos:
  4808                           	opt stack 0
  4809                           
  4810                           ; 1 bytes @ 0x95
  4811  000295                     	ds	1
  4812  000296                     main@VoltageStatus:
  4813                           	opt stack 0
  4814                           
  4815                           ; 1 bytes @ 0x96
  4816  000296                     	ds	1
  4817  000297                     main@i:
  4818                           	opt stack 0
  4819                           
  4820                           ; 1 bytes @ 0x97
  4821  000297                     	ds	1
  4822                           tblptru	equ	0xFF8
  4823                           tblptrh	equ	0xFF7
  4824                           tblptrl	equ	0xFF6
  4825                           tablat	equ	0xFF5
  4826                           postinc0	equ	0xFEE
  4827                           wreg	equ	0xFE8
  4828                           postdec1	equ	0xFE5
  4829                           fsr1h	equ	0xFE2
  4830                           fsr1l	equ	0xFE1
  4831                           
  4832                           	psect	cstackBANK1
  4833  000100                     __pcstackBANK1:
  4834                           	opt stack 0
  4835  000100                     ?_SetEEPROM:
  4836                           	opt stack 0
  4837  000100                     SyncEEPROMToGlobal@k:
  4838                           	opt stack 0
  4839  000100                     _InitUART$3797:
  4840                           	opt stack 0
  4841  000100                     _sprintf$3801:
  4842                           	opt stack 0
  4843  000100                     SetEEPROM@Temp:
  4844                           	opt stack 0
  4845  000100                     StringAddEqual@temp:
  4846                           	opt stack 0
  4847                           
  4848                           ; 255 bytes @ 0x0
  4849  000100                     	ds	1
  4850  000101                     SyncEEPROMToGlobal@i:
  4851                           	opt stack 0
  4852                           
  4853                           ; 1 bytes @ 0x1
  4854  000101                     	ds	1
  4855  000102                     SyncEEPROMToGlobal@j:
  4856                           	opt stack 0
  4857                           
  4858                           ; 1 bytes @ 0x2
  4859  000102                     	ds	1
  4860  000103                     sprintf@idx:
  4861                           	opt stack 0
  4862  000103                     InitUART@spbrg:
  4863                           	opt stack 0
  4864  000103                     SyncEEPROMToGlobal@Temp:
  4865                           	opt stack 0
  4866                           
  4867                           ; 136 bytes @ 0x3
  4868  000103                     	ds	1
  4869  000104                     sprintf@cp:
  4870                           	opt stack 0
  4871                           
  4872                           ; 2 bytes @ 0x4
  4873  000104                     	ds	1
  4874  000105                     InitUART@config:
  4875                           	opt stack 0
  4876                           
  4877                           ; 1 bytes @ 0x5
  4878  000105                     	ds	1
  4879  000106                     sprintf@len:
  4880                           	opt stack 0
  4881  000106                     InitUART@temp:
  4882                           	opt stack 0
  4883                           
  4884                           ; 4 bytes @ 0x6
  4885  000106                     	ds	2
  4886  000108                     sprintf@ap:
  4887                           	opt stack 0
  4888                           
  4889                           ; 2 bytes @ 0x8
  4890  000108                     	ds	2
  4891  00010A                     sprintf@prec:
  4892                           	opt stack 0
  4893                           
  4894                           ; 2 bytes @ 0xA
  4895  00010A                     	ds	2
  4896  00010C                     sprintf@tmpval:
  4897                           	opt stack 0
  4898                           
  4899                           ; 4 bytes @ 0xC
  4900  00010C                     	ds	4
  4901  000110                     sprintf@exp:
  4902                           	opt stack 0
  4903                           
  4904                           ; 2 bytes @ 0x10
  4905  000110                     	ds	2
  4906  000112                     sprintf@val:
  4907                           	opt stack 0
  4908                           
  4909                           ; 4 bytes @ 0x12
  4910  000112                     	ds	4
  4911  000116                     sprintf@fval:
  4912                           	opt stack 0
  4913                           
  4914                           ; 3 bytes @ 0x16
  4915  000116                     	ds	3
  4916  000119                     sprintf@width:
  4917                           	opt stack 0
  4918                           
  4919                           ; 2 bytes @ 0x19
  4920  000119                     	ds	2
  4921  00011B                     sprintf@flag:
  4922                           	opt stack 0
  4923                           
  4924                           ; 2 bytes @ 0x1B
  4925  00011B                     	ds	2
  4926  00011D                     sprintf@c:
  4927                           	opt stack 0
  4928                           
  4929                           ; 1 bytes @ 0x1D
  4930  00011D                     	ds	1
  4931  00011E                     BluetoothInitialSetup@RFchannel:
  4932                           	opt stack 0
  4933                           
  4934                           ; 10 bytes @ 0x1E
  4935  00011E                     	ds	10
  4936  000128                     BluetoothInitialSetup@buf:
  4937                           	opt stack 0
  4938                           
  4939                           ; 50 bytes @ 0x28
  4940  000128                     	ds	50
  4941  00015A                     BluetoothInitialSetup@ok:
  4942                           	opt stack 0
  4943                           
  4944                           ; 1 bytes @ 0x5A
  4945  00015A                     	ds	46
  4946  000188                     SetEEPROM@burn:
  4947                           	opt stack 0
  4948                           
  4949                           ; 4 bytes @ 0x88
  4950  000188                     	ds	119
  4951                           tblptru	equ	0xFF8
  4952                           tblptrh	equ	0xFF7
  4953                           tblptrl	equ	0xFF6
  4954                           tablat	equ	0xFF5
  4955                           postinc0	equ	0xFEE
  4956                           wreg	equ	0xFE8
  4957                           postdec1	equ	0xFE5
  4958                           fsr1h	equ	0xFE2
  4959                           fsr1l	equ	0xFE1
  4960                           
  4961                           	psect	cstackBANK0
  4962  000060                     __pcstackBANK0:
  4963                           	opt stack 0
  4964  000060                     IRrawToNEC@NECtemp:
  4965                           	opt stack 0
  4966                           
  4967                           ; 4 bytes @ 0x0
  4968  000060                     	ds	4
  4969  000064                     IRrawToNEC@first:
  4970                           	opt stack 0
  4971                           
  4972                           ; 1 bytes @ 0x4
  4973  000064                     	ds	1
  4974  000065                     IRrawToNEC@i:
  4975                           	opt stack 0
  4976                           
  4977                           ; 1 bytes @ 0x5
  4978  000065                     	ds	1
  4979  000066                     IRrawToNEC@StartBit:
  4980                           	opt stack 0
  4981                           
  4982                           ; 1 bytes @ 0x6
  4983  000066                     	ds	1
  4984  000067                     ??_high_isr:
  4985                           
  4986                           ; 0 bytes @ 0x7
  4987  000067                     	ds	18
  4988  000079                     ??_isdigit:
  4989  000079                     ??_Reverse_Byte:
  4990  000079                     ?_ReadEEPROM_1Byte:
  4991                           	opt stack 0
  4992  000079                     ?___awmod:
  4993                           	opt stack 0
  4994  000079                     ?___ftpack:
  4995                           	opt stack 0
  4996  000079                     ?___ftneg:
  4997                           	opt stack 0
  4998  000079                     ?__tdiv_to_l_:
  4999                           	opt stack 0
  5000  000079                     ?__div_to_l_:
  5001                           	opt stack 0
  5002  000079                     ?_Reverse_4Byte:
  5003                           	opt stack 0
  5004  000079                     ?___lmul:
  5005                           	opt stack 0
  5006  000079                     ?___lldiv:
  5007                           	opt stack 0
  5008  000079                     IsLetter@data:
  5009                           	opt stack 0
  5010  000079                     UARTchar@data:
  5011                           	opt stack 0
  5012  000079                     ReadUSART@data:
  5013                           	opt stack 0
  5014  000079                     cleanBuffer@data:
  5015                           	opt stack 0
  5016  000079                     cleanBuffer16bit@data:
  5017                           	opt stack 0
  5018  000079                     StringMatch@This:
  5019                           	opt stack 0
  5020  000079                     StringContains@This:
  5021                           	opt stack 0
  5022  000079                     lowercaseString@Input:
  5023                           	opt stack 0
  5024  000079                     lowercaseChar@Input:
  5025                           	opt stack 0
  5026  000079                     GetStringAfterComma@This:
  5027                           	opt stack 0
  5028  000079                     OpenUSART@spbrg:
  5029                           	opt stack 0
  5030  000079                     ReadEEPROM_1Byte@address:
  5031                           	opt stack 0
  5032  000079                     WriteEEPROM_1Byte@address:
  5033                           	opt stack 0
  5034  000079                     SendRF@Code:
  5035                           	opt stack 0
  5036  000079                     ___awmod@dividend:
  5037                           	opt stack 0
  5038  000079                     __div_to_l_@f1:
  5039                           	opt stack 0
  5040  000079                     ___ftpack@arg:
  5041                           	opt stack 0
  5042  000079                     __tdiv_to_l_@f1:
  5043                           	opt stack 0
  5044  000079                     ___ftge@ff1:
  5045                           	opt stack 0
  5046  000079                     ___ftneg@f1:
  5047                           	opt stack 0
  5048  000079                     delayUS@US:
  5049                           	opt stack 0
  5050  000079                     Reverse_4Byte@This:
  5051                           	opt stack 0
  5052  000079                     ___lmul@multiplier:
  5053                           	opt stack 0
  5054  000079                     ___lldiv@dividend:
  5055                           	opt stack 0
  5056                           
  5057                           ; 4 bytes @ 0x19
  5058  000079                     	ds	1
  5059  00007A                     _isdigit$3474:
  5060                           	opt stack 0
  5061  00007A                     UARTstring@data:
  5062                           	opt stack 0
  5063                           
  5064                           ; 2 bytes @ 0x1A
  5065  00007A                     	ds	1
  5066  00007B                     Reverse_Byte@temp:
  5067                           	opt stack 0
  5068  00007B                     GetStringAfterComma@CommaNumber:
  5069                           	opt stack 0
  5070  00007B                     OpenUSART@config:
  5071                           	opt stack 0
  5072  00007B                     ReadEEPROM_1Byte@GIEstatus:
  5073                           	opt stack 0
  5074  00007B                     WriteEEPROM_1Byte@data:
  5075                           	opt stack 0
  5076  00007B                     SendRF@Config:
  5077                           	opt stack 0
  5078  00007B                     isdigit@c:
  5079                           	opt stack 0
  5080  00007B                     cleanBuffer@count:
  5081                           	opt stack 0
  5082  00007B                     cleanBuffer16bit@count:
  5083                           	opt stack 0
  5084  00007B                     StringMatch@That:
  5085                           	opt stack 0
  5086  00007B                     StringContains@That:
  5087                           	opt stack 0
  5088  00007B                     ___awmod@divisor:
  5089                           	opt stack 0
  5090                           
  5091                           ; 2 bytes @ 0x1B
  5092  00007B                     	ds	1
  5093  00007C                     Reverse_Byte@This:
  5094                           	opt stack 0
  5095  00007C                     ReadEEPROM_1Byte@PEIEstatus:
  5096                           	opt stack 0
  5097  00007C                     WriteEEPROM_1Byte@GIEstatus:
  5098                           	opt stack 0
  5099  00007C                     SendRF@size:
  5100                           	opt stack 0
  5101  00007C                     ___ftpack@exp:
  5102                           	opt stack 0
  5103  00007C                     StringMatchCaseInsensitive@This:
  5104                           	opt stack 0
  5105  00007C                     StringContainsCaseInsensitive@This:
  5106                           	opt stack 0
  5107  00007C                     GetStringAfterComma@result:
  5108                           	opt stack 0
  5109  00007C                     UARTstringCRLN@data:
  5110                           	opt stack 0
  5111  00007C                     UARTcommandMenu@Command:
  5112                           	opt stack 0
  5113  00007C                     __div_to_l_@f2:
  5114                           	opt stack 0
  5115  00007C                     __tdiv_to_l_@f2:
  5116                           	opt stack 0
  5117  00007C                     ___ftge@ff2:
  5118                           	opt stack 0
  5119                           
  5120                           ; 3 bytes @ 0x1C
  5121  00007C                     	ds	1
  5122  00007D                     ??_delayUS:
  5123  00007D                     ??_cleanBuffer:
  5124  00007D                     ??_cleanBuffer16bit:
  5125  00007D                     ??_StringMatch:
  5126  00007D                     ??_StringContains:
  5127  00007D                     ??_Reverse_4Byte:
  5128  00007D                     ?_GetMemoryChar:
  5129                           	opt stack 0
  5130  00007D                     ?_GetMemoryLong:
  5131                           	opt stack 0
  5132  00007D                     ?_EncodeNEC:
  5133                           	opt stack 0
  5134  00007D                     WriteEEPROM_1Byte@PEIEstatus:
  5135                           	opt stack 0
  5136  00007D                     EncodeNEC@command:
  5137                           	opt stack 0
  5138  00007D                     SendRF@RepeatAmount:
  5139                           	opt stack 0
  5140  00007D                     ___awmod@counter:
  5141                           	opt stack 0
  5142  00007D                     ___ftpack@sign:
  5143                           	opt stack 0
  5144  00007D                     DecodeNEC@Nec:
  5145                           	opt stack 0
  5146  00007D                     ___lmul@multiplicand:
  5147                           	opt stack 0
  5148  00007D                     ___lldiv@divisor:
  5149                           	opt stack 0
  5150                           
  5151                           ; 4 bytes @ 0x1D
  5152  00007D                     	ds	1
  5153  00007E                     ??___ftpack:
  5154  00007E                     ??_SendRF:
  5155  00007E                     StringContains@begin:
  5156                           	opt stack 0
  5157  00007E                     ___awmod@sign:
  5158                           	opt stack 0
  5159  00007E                     StringMatchCaseInsensitive@That:
  5160                           	opt stack 0
  5161  00007E                     StringContainsCaseInsensitive@That:
  5162                           	opt stack 0
  5163  00007E                     UARTcommandMenu@Desc:
  5164                           	opt stack 0
  5165  00007E                     delayUS@i:
  5166                           	opt stack 0
  5167                           
  5168                           ; 4 bytes @ 0x1E
  5169  00007E                     	ds	1
  5170  00007F                     ??__tdiv_to_l_:
  5171  00007F                     ??___ftge:
  5172  00007F                     ?___awdiv:
  5173                           	opt stack 0
  5174  00007F                     GetStringAfterComma@tempCommaNumber:
  5175                           	opt stack 0
  5176  00007F                     ___awdiv@dividend:
  5177                           	opt stack 0
  5178  00007F                     __div_to_l_@quot:
  5179                           	opt stack 0
  5180                           
  5181                           ; 4 bytes @ 0x1F
  5182  00007F                     	ds	1
  5183  000080                     ??_UARTcommandMenu:
  5184  000080                     cleanBuffer@i:
  5185                           	opt stack 0
  5186  000080                     cleanBuffer16bit@i:
  5187                           	opt stack 0
  5188  000080                     StringMatchCaseInsensitive@tempThis:
  5189                           	opt stack 0
  5190  000080                     StringContainsCaseInsensitive@begin:
  5191                           	opt stack 0
  5192  000080                     GetStringAfterComma@count:
  5193                           	opt stack 0
  5194  000080                     SendRF@i:
  5195                           	opt stack 0
  5196                           
  5197                           ; 1 bytes @ 0x20
  5198  000080                     	ds	1
  5199  000081                     ??_GetMemoryLong:
  5200  000081                     ??_EncodeNEC:
  5201  000081                     ?___altoft:
  5202                           	opt stack 0
  5203  000081                     ?___lltoft:
  5204                           	opt stack 0
  5205  000081                     ?___lwtoft:
  5206                           	opt stack 0
  5207  000081                     StringMatchCaseInsensitive@tempThat:
  5208                           	opt stack 0
  5209  000081                     StringContainsCaseInsensitive@tempThis:
  5210                           	opt stack 0
  5211  000081                     GetMemoryChar@AddressFirst:
  5212                           	opt stack 0
  5213  000081                     BufferCopy@from:
  5214                           	opt stack 0
  5215  000081                     DecodeNEC@address:
  5216                           	opt stack 0
  5217  000081                     SendRF_wait@Code:
  5218                           	opt stack 0
  5219  000081                     ___awdiv@divisor:
  5220                           	opt stack 0
  5221  000081                     ___lwtoft@c:
  5222                           	opt stack 0
  5223  000081                     ___lmul@product:
  5224                           	opt stack 0
  5225  000081                     ___altoft@c:
  5226                           	opt stack 0
  5227  000081                     ___lldiv@quotient:
  5228                           	opt stack 0
  5229  000081                     ___lltoft@c:
  5230                           	opt stack 0
  5231                           
  5232                           ; 4 bytes @ 0x21
  5233  000081                     	ds	1
  5234  000082                     StringContainsCaseInsensitive@tempThat:
  5235                           	opt stack 0
  5236  000082                     GetMemoryChar@H:
  5237                           	opt stack 0
  5238  000082                     ReadCodeButtons@temp:
  5239                           	opt stack 0
  5240  000082                     EnterCommandMode@count:
  5241                           	opt stack 0
  5242  000082                     WaitForIRsignal@timeout:
  5243                           	opt stack 0
  5244  000082                     InternalADC_Read@ADCcounts:
  5245                           	opt stack 0
  5246  000082                     __tdiv_to_l_@quot:
  5247                           	opt stack 0
  5248                           
  5249                           ; 4 bytes @ 0x22
  5250  000082                     	ds	1
  5251  000083                     SetMemoryChar@AddressFirst:
  5252                           	opt stack 0
  5253  000083                     SendRF_wait@Config:
  5254                           	opt stack 0
  5255  000083                     ___awdiv@counter:
  5256                           	opt stack 0
  5257  000083                     __div_to_l_@cntr:
  5258                           	opt stack 0
  5259  000083                     BufferCopy@to:
  5260                           	opt stack 0
  5261  000083                     DecodeNEC@command:
  5262                           	opt stack 0
  5263                           
  5264                           ; 2 bytes @ 0x23
  5265  000083                     	ds	1
  5266  000084                     ??_InternalADC_Read:
  5267  000084                     ?___ftdiv:
  5268                           	opt stack 0
  5269  000084                     SetMemoryChar@Test:
  5270                           	opt stack 0
  5271  000084                     SendRF_wait@size:
  5272                           	opt stack 0
  5273  000084                     ___awdiv@sign:
  5274                           	opt stack 0
  5275  000084                     __div_to_l_@exp1:
  5276                           	opt stack 0
  5277  000084                     ___ftdiv@f1:
  5278                           	opt stack 0
  5279                           
  5280                           ; 3 bytes @ 0x24
  5281  000084                     	ds	1
  5282  000085                     ??_DecodeNEC:
  5283  000085                     ??___altoft:
  5284  000085                     ??___lltoft:
  5285  000085                     BufferCopy@count:
  5286                           	opt stack 0
  5287  000085                     UARTcommandMenu@i:
  5288                           	opt stack 0
  5289  000085                     SetMemoryChar@Data:
  5290                           	opt stack 0
  5291  000085                     SendRF_wait@amount:
  5292                           	opt stack 0
  5293  000085                     ___lldiv@counter:
  5294                           	opt stack 0
  5295  000085                     GetNumber@This:
  5296                           	opt stack 0
  5297  000085                     ___awdiv@quotient:
  5298                           	opt stack 0
  5299  000085                     Reverse_4Byte@temp:
  5300                           	opt stack 0
  5301                           
  5302                           ; 4 bytes @ 0x25
  5303  000085                     	ds	1
  5304  000086                     ?___llmod:
  5305                           	opt stack 0
  5306  000086                     BufferCopy@shift:
  5307                           	opt stack 0
  5308  000086                     UARTcommandMenu@place:
  5309                           	opt stack 0
  5310  000086                     InternalADC_Read@AnaChanSel:
  5311                           	opt stack 0
  5312  000086                     SendRF_Channel@channel:
  5313                           	opt stack 0
  5314  000086                     __tdiv_to_l_@cntr:
  5315                           	opt stack 0
  5316  000086                     ___llmod@dividend:
  5317                           	opt stack 0
  5318                           
  5319                           ; 4 bytes @ 0x26
  5320  000086                     	ds	1
  5321  000087                     ?___wmul:
  5322                           	opt stack 0
  5323  000087                     BufferCopy@i:
  5324                           	opt stack 0
  5325  000087                     GetNumber@CommaNumber:
  5326                           	opt stack 0
  5327  000087                     InternalADC_Read@channel:
  5328                           	opt stack 0
  5329  000087                     __tdiv_to_l_@exp1:
  5330                           	opt stack 0
  5331  000087                     ___wmul@multiplier:
  5332                           	opt stack 0
  5333  000087                     ___ftdiv@f2:
  5334                           	opt stack 0
  5335                           
  5336                           ; 3 bytes @ 0x27
  5337  000087                     	ds	1
  5338  000088                     GetNumber@result:
  5339                           	opt stack 0
  5340  000088                     StringAddEqual@Input:
  5341                           	opt stack 0
  5342                           
  5343                           ; 2 bytes @ 0x28
  5344  000088                     	ds	1
  5345  000089                     DecodeNEC@temp2:
  5346                           	opt stack 0
  5347  000089                     ___altoft@exp:
  5348                           	opt stack 0
  5349  000089                     ___lltoft@exp:
  5350                           	opt stack 0
  5351  000089                     ___wmul@multiplicand:
  5352                           	opt stack 0
  5353  000089                     SendNEC_bytes@code:
  5354                           	opt stack 0
  5355                           
  5356                           ; 4 bytes @ 0x29
  5357  000089                     	ds	1
  5358  00008A                     ??___ftdiv:
  5359  00008A                     ??_GetNumber:
  5360  00008A                     ??_StringAddEqual:
  5361  00008A                     DecodeNEC@temp3:
  5362                           	opt stack 0
  5363  00008A                     ___altoft@sign:
  5364                           	opt stack 0
  5365  00008A                     ___llmod@divisor:
  5366                           	opt stack 0
  5367                           
  5368                           ; 4 bytes @ 0x2A
  5369  00008A                     	ds	1
  5370  00008B                     DecodeNEC@temp1:
  5371                           	opt stack 0
  5372  00008B                     ___wmul@product:
  5373                           	opt stack 0
  5374                           
  5375                           ; 2 bytes @ 0x2B
  5376  00008B                     	ds	1
  5377  00008C                     StringAddEqual@NullPosition:
  5378                           	opt stack 0
  5379                           
  5380                           ; 1 bytes @ 0x2C
  5381  00008C                     	ds	1
  5382  00008D                     StringAddEqual@firstnumber:
  5383                           	opt stack 0
  5384  00008D                     SendNEC_bytes@RepeatAmount:
  5385                           	opt stack 0
  5386  00008D                     ___ftdiv@cntr:
  5387                           	opt stack 0
  5388                           
  5389                           ; 1 bytes @ 0x2D
  5390  00008D                     	ds	1
  5391  00008E                     StringAddEqual@i:
  5392                           	opt stack 0
  5393  00008E                     ___llmod@counter:
  5394                           	opt stack 0
  5395  00008E                     ___ftdiv@f3:
  5396                           	opt stack 0
  5397  00008E                     SendNEC_wait@code:
  5398                           	opt stack 0
  5399                           
  5400                           ; 4 bytes @ 0x2E
  5401  00008E                     	ds	1
  5402  00008F                     GetNumber@tempCommaNumber:
  5403                           	opt stack 0
  5404  00008F                     StringAddEqual@j:
  5405                           	opt stack 0
  5406                           
  5407                           ; 1 bytes @ 0x2F
  5408  00008F                     	ds	1
  5409  000090                     GetNumber@negative:
  5410                           	opt stack 0
  5411                           
  5412                           ; 1 bytes @ 0x30
  5413  000090                     	ds	1
  5414  000091                     GetNumber@count:
  5415                           	opt stack 0
  5416  000091                     ___ftdiv@exp:
  5417                           	opt stack 0
  5418                           
  5419                           ; 1 bytes @ 0x31
  5420  000091                     	ds	1
  5421  000092                     GetNumber@Hex:
  5422                           	opt stack 0
  5423  000092                     SendNEC_wait@RepeatAmount:
  5424                           	opt stack 0
  5425  000092                     ___ftdiv@sign:
  5426                           	opt stack 0
  5427                           
  5428                           ; 1 bytes @ 0x32
  5429  000092                     	ds	1
  5430  000093                     ?___ftmul:
  5431                           	opt stack 0
  5432  000093                     GetNumber@i:
  5433                           	opt stack 0
  5434  000093                     SendNEC_wait@toggle:
  5435                           	opt stack 0
  5436  000093                     ___ftmul@f1:
  5437                           	opt stack 0
  5438                           
  5439                           ; 3 bytes @ 0x33
  5440  000093                     	ds	1
  5441  000094                     GetNumber@tempThis:
  5442                           	opt stack 0
  5443                           
  5444                           ; 1 bytes @ 0x34
  5445  000094                     	ds	1
  5446  000095                     GetNumber@temp:
  5447                           	opt stack 0
  5448  000095                     GetMemoryLong@temp:
  5449                           	opt stack 0
  5450  000095                     EncodeNEC@temp1:
  5451                           	opt stack 0
  5452                           
  5453                           ; 4 bytes @ 0x35
  5454  000095                     	ds	1
  5455  000096                     ___ftmul@f2:
  5456                           	opt stack 0
  5457                           
  5458                           ; 3 bytes @ 0x36
  5459  000096                     	ds	3
  5460  000099                     ??___ftmul:
  5461  000099                     GetMemoryLong@H:
  5462                           	opt stack 0
  5463  000099                     EncodeNEC@temp2:
  5464                           	opt stack 0
  5465                           
  5466                           ; 4 bytes @ 0x39
  5467  000099                     	ds	1
  5468  00009A                     GetMemoryLong@MH:
  5469                           	opt stack 0
  5470                           
  5471                           ; 1 bytes @ 0x3A
  5472  00009A                     	ds	1
  5473  00009B                     GetMemoryLong@ML:
  5474                           	opt stack 0
  5475                           
  5476                           ; 1 bytes @ 0x3B
  5477  00009B                     	ds	1
  5478  00009C                     GetMemoryLong@L:
  5479                           	opt stack 0
  5480  00009C                     ___ftmul@exp:
  5481                           	opt stack 0
  5482                           
  5483                           ; 1 bytes @ 0x3C
  5484  00009C                     	ds	1
  5485  00009D                     GetMemoryLong@AddressFirst:
  5486                           	opt stack 0
  5487  00009D                     ___ftmul@f3_as_product:
  5488                           	opt stack 0
  5489  00009D                     EncodeNEC@temp3:
  5490                           	opt stack 0
  5491                           
  5492                           ; 4 bytes @ 0x3D
  5493  00009D                     	ds	1
  5494  00009E                     GetEEPROM@Temp:
  5495                           	opt stack 0
  5496  00009E                     SetMemoryLong@Data:
  5497                           	opt stack 0
  5498                           
  5499                           ; 4 bytes @ 0x3E
  5500  00009E                     	ds	2
  5501  0000A0                     ??_GetEEPROM:
  5502  0000A0                     ___ftmul@cntr:
  5503                           	opt stack 0
  5504                           
  5505                           ; 1 bytes @ 0x40
  5506  0000A0                     	ds	1
  5507  0000A1                     ___ftmul@sign:
  5508                           	opt stack 0
  5509  0000A1                     EncodeNEC@temp4:
  5510                           	opt stack 0
  5511                           
  5512                           ; 4 bytes @ 0x41
  5513  0000A1                     	ds	1
  5514  0000A2                     ?_ReadVoltage:
  5515                           	opt stack 0
  5516  0000A2                     ?_fround:
  5517                           	opt stack 0
  5518  0000A2                     ?_scale:
  5519                           	opt stack 0
  5520  0000A2                     GetEEPROM@Arrayspot:
  5521                           	opt stack 0
  5522  0000A2                     SetMemoryLong@AddressFirst:
  5523                           	opt stack 0
  5524                           
  5525                           ; 1 bytes @ 0x42
  5526  0000A2                     	ds	1
  5527  0000A3                     ??_SetMemoryLong:
  5528  0000A3                     GetEEPROM@k:
  5529                           	opt stack 0
  5530                           
  5531                           ; 1 bytes @ 0x43
  5532  0000A3                     	ds	1
  5533  0000A4                     GetEEPROM@i:
  5534                           	opt stack 0
  5535                           
  5536                           ; 1 bytes @ 0x44
  5537  0000A4                     	ds	1
  5538  0000A5                     GetEEPROM@j:
  5539                           	opt stack 0
  5540  0000A5                     EncodeNEC@address:
  5541                           	opt stack 0
  5542  0000A5                     ReadVoltage@voltage:
  5543                           	opt stack 0
  5544  0000A5                     _fround$3799:
  5545                           	opt stack 0
  5546  0000A5                     _scale$3800:
  5547                           	opt stack 0
  5548                           
  5549                           ; 3 bytes @ 0x45
  5550  0000A5                     	ds	1
  5551  0000A6                     ??_SyncEEPROMToGlobal:
  5552                           
  5553                           ; 0 bytes @ 0x46
  5554  0000A6                     	ds	1
  5555  0000A7                     SetMemoryLong@Test:
  5556                           	opt stack 0
  5557                           
  5558                           ; 4 bytes @ 0x47
  5559  0000A7                     	ds	1
  5560  0000A8                     scale@scl:
  5561                           	opt stack 0
  5562  0000A8                     ReadVoltage@temp:
  5563                           	opt stack 0
  5564  0000A8                     _fround$3798:
  5565                           	opt stack 0
  5566                           
  5567                           ; 3 bytes @ 0x48
  5568  0000A8                     	ds	3
  5569  0000AB                     SetMemoryLong@H:
  5570                           	opt stack 0
  5571  0000AB                     fround@prec:
  5572                           	opt stack 0
  5573                           
  5574                           ; 1 bytes @ 0x4B
  5575  0000AB                     	ds	1
  5576  0000AC                     ?___ftadd:
  5577                           	opt stack 0
  5578  0000AC                     SetMemoryLong@MH:
  5579                           	opt stack 0
  5580  0000AC                     ___ftadd@f1:
  5581                           	opt stack 0
  5582                           
  5583                           ; 3 bytes @ 0x4C
  5584  0000AC                     	ds	1
  5585  0000AD                     SetMemoryLong@ML:
  5586                           	opt stack 0
  5587                           
  5588                           ; 1 bytes @ 0x4D
  5589  0000AD                     	ds	1
  5590  0000AE                     SetMemoryLong@L:
  5591                           	opt stack 0
  5592                           
  5593                           ; 1 bytes @ 0x4E
  5594  0000AE                     	ds	1
  5595  0000AF                     ??_SetEEPROM:
  5596  0000AF                     ___ftadd@f2:
  5597                           	opt stack 0
  5598                           
  5599                           ; 3 bytes @ 0x4F
  5600  0000AF                     	ds	2
  5601  0000B1                     SetEEPROM@fail:
  5602                           	opt stack 0
  5603                           
  5604                           ; 4 bytes @ 0x51
  5605  0000B1                     	ds	1
  5606  0000B2                     ??___ftadd:
  5607                           
  5608                           ; 0 bytes @ 0x52
  5609  0000B2                     	ds	3
  5610  0000B5                     SetEEPROM@temp:
  5611                           	opt stack 0
  5612  0000B5                     ___ftadd@sign:
  5613                           	opt stack 0
  5614                           
  5615                           ; 1 bytes @ 0x55
  5616  0000B5                     	ds	1
  5617  0000B6                     SetEEPROM@Arrayspot:
  5618                           	opt stack 0
  5619  0000B6                     ___ftadd@exp2:
  5620                           	opt stack 0
  5621                           
  5622                           ; 1 bytes @ 0x56
  5623  0000B6                     	ds	1
  5624  0000B7                     SetEEPROM@k:
  5625                           	opt stack 0
  5626  0000B7                     ___ftadd@exp1:
  5627                           	opt stack 0
  5628                           
  5629                           ; 1 bytes @ 0x57
  5630  0000B7                     	ds	1
  5631  0000B8                     ?___ftsub:
  5632                           	opt stack 0
  5633  0000B8                     ?___fttol:
  5634                           	opt stack 0
  5635  0000B8                     SetEEPROM@i:
  5636                           	opt stack 0
  5637  0000B8                     ___ftsub@f1:
  5638                           	opt stack 0
  5639  0000B8                     ___fttol@f1:
  5640                           	opt stack 0
  5641                           
  5642                           ; 3 bytes @ 0x58
  5643  0000B8                     	ds	1
  5644  0000B9                     SetEEPROM@j:
  5645                           	opt stack 0
  5646                           
  5647                           ; 1 bytes @ 0x59
  5648  0000B9                     	ds	1
  5649  0000BA                     ??_SetEEPROMdefault:
  5650  0000BA                     UseIRCode@Code:
  5651                           	opt stack 0
  5652                           
  5653                           ; 2 bytes @ 0x5A
  5654  0000BA                     	ds	1
  5655  0000BB                     ___ftsub@f2:
  5656                           	opt stack 0
  5657                           
  5658                           ; 3 bytes @ 0x5B
  5659  0000BB                     	ds	1
  5660  0000BC                     ??___fttol:
  5661  0000BC                     SetEEPROMdefault@k:
  5662                           	opt stack 0
  5663  0000BC                     UseIRCode@NEC:
  5664                           	opt stack 0
  5665                           
  5666                           ; 4 bytes @ 0x5C
  5667  0000BC                     	ds	1
  5668  0000BD                     SetEEPROMdefault@i:
  5669                           	opt stack 0
  5670                           
  5671                           ; 1 bytes @ 0x5D
  5672  0000BD                     	ds	1
  5673  0000BE                     SetEEPROMdefault@j:
  5674                           	opt stack 0
  5675                           
  5676                           ; 1 bytes @ 0x5E
  5677  0000BE                     	ds	2
  5678  0000C0                     ??_UseIRCode:
  5679                           
  5680                           ; 0 bytes @ 0x60
  5681  0000C0                     	ds	1
  5682  0000C1                     ___fttol@sign1:
  5683                           	opt stack 0
  5684                           
  5685                           ; 1 bytes @ 0x61
  5686  0000C1                     	ds	1
  5687  0000C2                     ___fttol@lval:
  5688                           	opt stack 0
  5689                           
  5690                           ; 4 bytes @ 0x62
  5691  0000C2                     	ds	1
  5692  0000C3                     UseIRCode@found:
  5693                           	opt stack 0
  5694                           
  5695                           ; 1 bytes @ 0x63
  5696  0000C3                     	ds	1
  5697  0000C4                     UseIRCode@j:
  5698                           	opt stack 0
  5699                           
  5700                           ; 1 bytes @ 0x64
  5701  0000C4                     	ds	1
  5702  0000C5                     UseIRCode@i:
  5703                           	opt stack 0
  5704                           
  5705                           ; 1 bytes @ 0x65
  5706  0000C5                     	ds	1
  5707  0000C6                     ___fttol@exp1:
  5708                           	opt stack 0
  5709                           
  5710                           ; 1 bytes @ 0x66
  5711  0000C6                     	ds	1
  5712  0000C7                     ?_sprintf:
  5713                           	opt stack 0
  5714  0000C7                     ?_Round:
  5715                           	opt stack 0
  5716  0000C7                     sprintf@sp:
  5717                           	opt stack 0
  5718  0000C7                     Round@input:
  5719                           	opt stack 0
  5720                           
  5721                           ; 3 bytes @ 0x67
  5722  0000C7                     	ds	2
  5723  0000C9                     sprintf@f:
  5724                           	opt stack 0
  5725                           
  5726                           ; 2 bytes @ 0x69
  5727  0000C9                     	ds	1
  5728  0000CA                     Round@temp:
  5729                           	opt stack 0
  5730                           
  5731                           ; 4 bytes @ 0x6A
  5732  0000CA                     	ds	4
  5733  0000CE                     InitUART@Baud:
  5734                           	opt stack 0
  5735                           
  5736                           ; 4 bytes @ 0x6E
  5737  0000CE                     	ds	4
  5738  0000D2                     ??_InitUART:
  5739                           
  5740                           ; 0 bytes @ 0x72
  5741  0000D2                     	ds	3
  5742  0000D5                     ??_sprintf:
  5743                           
  5744                           ; 0 bytes @ 0x75
  5745  0000D5                     	ds	6
  5746  0000DB                     tblptru	equ	0xFF8
  5747                           tblptrh	equ	0xFF7
  5748                           tblptrl	equ	0xFF6
  5749                           tablat	equ	0xFF5
  5750                           postinc0	equ	0xFEE
  5751                           wreg	equ	0xFE8
  5752                           postdec1	equ	0xFE5
  5753                           fsr1h	equ	0xFE2
  5754                           fsr1l	equ	0xFE1
  5755                           
  5756                           ; 0 bytes @ 0x7B
  5757                           
  5758                           	psect	cstackCOMRAM
  5759  000001                     __pcstackCOMRAM:
  5760                           	opt stack 0
  5761  000001                     IsCharacter@data:
  5762                           	opt stack 0
  5763  000001                     i1UARTchar@data:
  5764                           	opt stack 0
  5765  000001                     i1ReadUSART@data:
  5766                           	opt stack 0
  5767  000001                     i1cleanBuffer@data:
  5768                           	opt stack 0
  5769                           
  5770                           ; 2 bytes @ 0x0
  5771  000001                     	ds	1
  5772  000002                     EraseScreen@characters:
  5773                           	opt stack 0
  5774  000002                     i1UARTstring@data:
  5775                           	opt stack 0
  5776                           
  5777                           ; 2 bytes @ 0x1
  5778  000002                     	ds	1
  5779  000003                     EraseScreen@i:
  5780                           	opt stack 0
  5781  000003                     i1cleanBuffer@count:
  5782                           	opt stack 0
  5783                           
  5784                           ; 2 bytes @ 0x2
  5785  000003                     	ds	1
  5786  000004                     i1UARTstringCRLN@data:
  5787                           	opt stack 0
  5788                           
  5789                           ; 2 bytes @ 0x3
  5790  000004                     	ds	1
  5791  000005                     ??i1_cleanBuffer:
  5792                           
  5793                           ; 0 bytes @ 0x4
  5794  000005                     	ds	1
  5795  000006                     
  5796                           ; 0 bytes @ 0x5
  5797  000006                     	ds	2
  5798  000008                     i1cleanBuffer@i:
  5799                           	opt stack 0
  5800                           
  5801                           ; 1 bytes @ 0x7
  5802  000008                     	ds	1
  5803  000009                     ??_low_isr:
  5804                           
  5805                           ; 0 bytes @ 0x8
  5806  000009                     	ds	17
  5807  00001A                     low_isr@data:
  5808                           	opt stack 0
  5809                           
  5810                           ; 1 bytes @ 0x19
  5811  00001A                     	ds	1
  5812  00001B                     SetTimer0@temp:
  5813                           	opt stack 0
  5814  00001B                     IRrawToNEC@Raw:
  5815                           	opt stack 0
  5816  00001B                     i2cleanBuffer16bit@data:
  5817                           	opt stack 0
  5818                           
  5819                           ; 2 bytes @ 0x1A
  5820  00001B                     	ds	2
  5821  00001D                     IRrawToNEC@NEC:
  5822                           	opt stack 0
  5823  00001D                     i2cleanBuffer16bit@count:
  5824                           	opt stack 0
  5825                           
  5826                           ; 2 bytes @ 0x1C
  5827  00001D                     	ds	2
  5828  00001F                     ??i2_cleanBuffer16bit:
  5829  00001F                     IRrawToNEC@Invert:
  5830                           	opt stack 0
  5831                           
  5832                           ; 1 bytes @ 0x1E
  5833  00001F                     	ds	1
  5834  000020                     ??_IRrawToNEC:
  5835                           
  5836                           ; 0 bytes @ 0x1F
  5837  000020                     	ds	2
  5838  000022                     i2cleanBuffer16bit@i:
  5839                           	opt stack 0
  5840                           
  5841                           ; 1 bytes @ 0x21
  5842  000022                     	ds	1
  5843  000023                     high_isr@IRpin:
  5844                           	opt stack 0
  5845                           
  5846                           ; 1 bytes @ 0x22
  5847  000023                     	ds	1
  5848  000024                     high_isr@Time0:
  5849                           	opt stack 0
  5850                           
  5851                           ; 2 bytes @ 0x23
  5852  000024                     	ds	2
  5853                           tblptru	equ	0xFF8
  5854                           tblptrh	equ	0xFF7
  5855                           tblptrl	equ	0xFF6
  5856                           tablat	equ	0xFF5
  5857                           postinc0	equ	0xFEE
  5858                           wreg	equ	0xFE8
  5859                           postdec1	equ	0xFE5
  5860                           fsr1h	equ	0xFE2
  5861                           fsr1l	equ	0xFE1
  5862                           
  5863 ;;
  5864 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  5865 ;;
  5866 ;; *************** function _main *****************
  5867 ;; Defined at:
  5868 ;;		line 70 in file "main.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;		None
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  BluetoothStr  255    0[BANK3 ] unsigned char [255]
  5873 ;;  i               1  151[BANK2 ] unsigned char 
  5874 ;;  VoltageStatu    1  150[BANK2 ] unsigned char 
  5875 ;;  BluetoothStr    1  149[BANK2 ] unsigned char 
  5876 ;;  Bluetoothtas    1  148[BANK2 ] unsigned char 
  5877 ;;  IRtask          1  147[BANK2 ] unsigned char 
  5878 ;; Return value:  Size  Location     Type
  5879 ;;		None               void
  5880 ;; Registers used:
  5881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;      Locals:         0       0       0       5     255       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Totals:         0       0       0       5     255       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;Total ram usage:      260 bytes
  5892 ;; Hardware stack levels required when called:   14
  5893 ;; This function calls:
  5894 ;;		_BufferCopy
  5895 ;;		_ClearUSART
  5896 ;;		_ConfigureOscillator
  5897 ;;		_InitApp
  5898 ;;		_Init_System
  5899 ;;		_ReadIRpin
  5900 ;;		_ReadVoltage
  5901 ;;		_UARTchar
  5902 ;;		_UARTstring
  5903 ;;		_UseBluetooth
  5904 ;;		_UseIRCode
  5905 ;;		___ftadd
  5906 ;;		___ftge
  5907 ;;		___ftsub
  5908 ;;		_cleanBuffer
  5909 ;;		_delayUS
  5910 ;; This function is called by:
  5911 ;;		Startup code after reset
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           	psect	text0
  5916  005480                     __ptext0:
  5917                           	opt stack 0
  5918  005480                     _main:
  5919                           	opt stack 17
  5920                           
  5921                           ;main.c: 72: unsigned char i=0;
  5922                           
  5923                           ;incstack = 0
  5924  005480  0E00               	movlw	0
  5925  005482  0102               	movlb	2	; () banked
  5926  005484  6F97               	movwf	main@i& (0+255),b
  5927                           
  5928                           ;main.c: 73: unsigned char IRtask = 0;
  5929  005486  0E00               	movlw	0
  5930  005488  0102               	movlb	2	; () banked
  5931  00548A  6F93               	movwf	main@IRtask& (0+255),b
  5932                           
  5933                           ;main.c: 74: unsigned char Bluetoothtask = 0;
  5934  00548C  0E00               	movlw	0
  5935  00548E  0102               	movlb	2	; () banked
  5936  005490  6F94               	movwf	main@Bluetoothtask& (0+255),b
  5937                           
  5938                           ;main.c: 75: unsigned char VoltageStatus = 1;
  5939  005492  0E01               	movlw	1
  5940  005494  0102               	movlb	2	; () banked
  5941  005496  6F96               	movwf	main@VoltageStatus& (0+255),b
  5942                           
  5943                           ;main.c: 76: unsigned char BluetoothString[255];
  5944                           ;main.c: 77: unsigned char BluetoothStringPos = 0;
  5945  005498  0E00               	movlw	0
  5946  00549A  0102               	movlb	2	; () banked
  5947  00549C  6F95               	movwf	main@BluetoothStringPos& (0+255),b
  5948                           
  5949                           ; BSR set to: 2
  5950                           ;main.c: 80: ConfigureOscillator();
  5951  00549E  ECAE  F04A         	call	_ConfigureOscillator	;wreg free
  5952                           
  5953                           ;main.c: 81: InitApp();
  5954  0054A2  EC0C  F048         	call	_InitApp	;wreg free
  5955                           
  5956                           ;main.c: 82: Init_System();
  5957  0054A6  EC2F  F044         	call	_Init_System	;wreg free
  5958                           
  5959                           ;main.c: 84: BatteryVoltage = ReadVoltage();
  5960  0054AA  EC11  F040         	call	_ReadVoltage	;wreg free
  5961  0054AE  C0A2  F0DB         	movff	?_ReadVoltage,_BatteryVoltage
  5962  0054B2  C0A3  F0DC         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  5963  0054B6  C0A4  F0DD         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  5964                           
  5965                           ;main.c: 85: if(BatteryVoltage < 3.7 )
  5966  0054BA  C0DB  F079         	movff	_BatteryVoltage,___ftge@ff1
  5967  0054BE  C0DC  F07A         	movff	_BatteryVoltage+1,___ftge@ff1+1
  5968  0054C2  C0DD  F07B         	movff	_BatteryVoltage+2,___ftge@ff1+2
  5969  0054C6  0ECD               	movlw	205
  5970  0054C8  0100               	movlb	0	; () banked
  5971  0054CA  6F7C               	movwf	___ftge@ff2& (0+255),b
  5972  0054CC  0E6C               	movlw	108
  5973  0054CE  0100               	movlb	0	; () banked
  5974  0054D0  6F7D               	movwf	(___ftge@ff2+1)& (0+255),b
  5975  0054D2  0E40               	movlw	64
  5976  0054D4  0100               	movlb	0	; () banked
  5977  0054D6  6F7E               	movwf	(___ftge@ff2+2)& (0+255),b
  5978  0054D8  EC83  F03E         	call	___ftge	;wreg free
  5979  0054DC  0100               	movlb	0	; () banked
  5980  0054DE  B0D8               	btfsc	status,0,c
  5981  0054E0  D002               	goto	l16284
  5982                           
  5983                           ; BSR set to: 0
  5984                           ;main.c: 86: {
  5985                           ;main.c: 87: VoltageStatus = 34;
  5986  0054E2  0E22               	movlw	34
  5987  0054E4  D015               	goto	L1
  5988  0054E6                     l16284:
  5989                           
  5990                           ;main.c: 89: else if (BatteryVoltage > 30.0)
  5991  0054E6  0E00               	movlw	0
  5992  0054E8  0100               	movlb	0	; () banked
  5993  0054EA  6F79               	movwf	___ftge@ff1& (0+255),b
  5994  0054EC  0EF0               	movlw	240
  5995  0054EE  0100               	movlb	0	; () banked
  5996  0054F0  6F7A               	movwf	(___ftge@ff1+1)& (0+255),b
  5997  0054F2  0E41               	movlw	65
  5998  0054F4  0100               	movlb	0	; () banked
  5999  0054F6  6F7B               	movwf	(___ftge@ff1+2)& (0+255),b
  6000  0054F8  C0DB  F07C         	movff	_BatteryVoltage,___ftge@ff2
  6001  0054FC  C0DC  F07D         	movff	_BatteryVoltage+1,___ftge@ff2+1
  6002  005500  C0DD  F07E         	movff	_BatteryVoltage+2,___ftge@ff2+2
  6003  005504  EC83  F03E         	call	___ftge	;wreg free
  6004  005508  0100               	movlb	0	; () banked
  6005  00550A  B0D8               	btfsc	status,0,c
  6006  00550C  D004               	goto	l16288
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;main.c: 90: {
  6010                           ;main.c: 91: VoltageStatus = 98;
  6011  00550E  0E62               	movlw	98
  6012  005510                     L1:
  6013  005510  0102               	movlb	2	; () banked
  6014  005512  6F96               	movwf	main@VoltageStatus& (0+255),b
  6015                           
  6016                           ; BSR set to: 2
  6017  005514  D000               	goto	l16288
  6018  005516                     l16288:
  6019                           
  6020                           ;main.c: 92: }
  6021                           ;main.c: 93: if(VoltageStatus == 1)
  6022  005516  0102               	movlb	2	; () banked
  6023  005518  0596               	decf	main@VoltageStatus& (0+255),w,b
  6024  00551A  A4D8               	btfss	status,2,c
  6025  00551C  D027               	goto	l16310
  6026                           
  6027                           ; BSR set to: 2
  6028                           ;main.c: 94: {
  6029                           ;main.c: 96: for(i =0;i<10;i++)
  6030  00551E  0E00               	movlw	0
  6031  005520  0102               	movlb	2	; () banked
  6032  005522  6F97               	movwf	main@i& (0+255),b
  6033  005524                     l16292:
  6034                           
  6035                           ; BSR set to: 2
  6036  005524  0E09               	movlw	9
  6037  005526  0102               	movlb	2	; () banked
  6038  005528  6597               	cpfsgt	main@i& (0+255),b
  6039  00552A  D001               	goto	l16296
  6040                           
  6041                           ; BSR set to: 2
  6042  00552C  D01D               	goto	l16308
  6043  00552E                     l16296:
  6044                           
  6045                           ; BSR set to: 2
  6046                           ;main.c: 97: {
  6047                           ;main.c: 98: (LATC |= 0x02);
  6048  00552E  828B               	bsf	3979,1,c	;volatile
  6049                           
  6050                           ;main.c: 99: (LATC &= ~0x04);
  6051  005530  948B               	bcf	3979,2,c	;volatile
  6052                           
  6053                           ; BSR set to: 2
  6054                           ;main.c: 100: delayUS(50000);
  6055  005532  0E50               	movlw	80
  6056  005534  0100               	movlb	0	; () banked
  6057  005536  6F79               	movwf	delayUS@US& (0+255),b
  6058  005538  0EC3               	movlw	195
  6059  00553A  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6060  00553C  0E00               	movlw	0
  6061  00553E  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6062  005540  0E00               	movlw	0
  6063  005542  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6064  005544  EC48  F047         	call	_delayUS	;wreg free
  6065                           
  6066                           ;main.c: 101: (LATC &= ~0x02);
  6067  005548  928B               	bcf	3979,1,c	;volatile
  6068                           
  6069                           ;main.c: 102: (LATC |= 0x04);
  6070  00554A  848B               	bsf	3979,2,c	;volatile
  6071                           
  6072                           ;main.c: 103: delayUS(50000);
  6073  00554C  0E50               	movlw	80
  6074  00554E  0100               	movlb	0	; () banked
  6075  005550  6F79               	movwf	delayUS@US& (0+255),b
  6076  005552  0EC3               	movlw	195
  6077  005554  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6078  005556  0E00               	movlw	0
  6079  005558  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6080  00555A  0E00               	movlw	0
  6081  00555C  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6082  00555E  EC48  F047         	call	_delayUS	;wreg free
  6083  005562  0102               	movlb	2	; () banked
  6084  005564  2B97               	incf	main@i& (0+255),f,b
  6085  005566  D7DE               	goto	l16292
  6086  005568                     l16308:
  6087                           
  6088                           ; BSR set to: 2
  6089                           ;main.c: 104: }
  6090                           ;main.c: 105: (LATC &= ~0x04);
  6091  005568  948B               	bcf	3979,2,c	;volatile
  6092                           
  6093                           ;main.c: 106: }
  6094  00556A  D024               	goto	l134
  6095  00556C                     l16310:
  6096                           
  6097                           ; BSR set to: 2
  6098                           ;main.c: 107: else
  6099                           ;main.c: 108: {
  6100                           ;main.c: 109: for(i =0;i<10;i++)
  6101  00556C  0E00               	movlw	0
  6102  00556E  0102               	movlb	2	; () banked
  6103  005570  6F97               	movwf	main@i& (0+255),b
  6104  005572                     l16312:
  6105                           
  6106                           ; BSR set to: 2
  6107  005572  0E09               	movlw	9
  6108  005574  0102               	movlb	2	; () banked
  6109  005576  6597               	cpfsgt	main@i& (0+255),b
  6110  005578  D001               	goto	l16316
  6111                           
  6112                           ; BSR set to: 2
  6113  00557A  D01C               	goto	l134
  6114  00557C                     l16316:
  6115                           
  6116                           ; BSR set to: 2
  6117                           ;main.c: 110: {
  6118                           ;main.c: 111: (LATC |= 0x02);
  6119  00557C  828B               	bsf	3979,1,c	;volatile
  6120                           
  6121                           ; BSR set to: 2
  6122                           ;main.c: 112: delayUS(100000);
  6123  00557E  0EA0               	movlw	160
  6124  005580  0100               	movlb	0	; () banked
  6125  005582  6F79               	movwf	delayUS@US& (0+255),b
  6126  005584  0E86               	movlw	134
  6127  005586  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6128  005588  0E01               	movlw	1
  6129  00558A  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6130  00558C  0E00               	movlw	0
  6131  00558E  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6132  005590  EC48  F047         	call	_delayUS	;wreg free
  6133                           
  6134                           ;main.c: 113: (LATC &= ~0x02);
  6135  005594  928B               	bcf	3979,1,c	;volatile
  6136                           
  6137                           ;main.c: 114: delayUS(100000);
  6138  005596  0EA0               	movlw	160
  6139  005598  0100               	movlb	0	; () banked
  6140  00559A  6F79               	movwf	delayUS@US& (0+255),b
  6141  00559C  0E86               	movlw	134
  6142  00559E  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6143  0055A0  0E01               	movlw	1
  6144  0055A2  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6145  0055A4  0E00               	movlw	0
  6146  0055A6  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6147  0055A8  EC48  F047         	call	_delayUS	;wreg free
  6148  0055AC  0102               	movlb	2	; () banked
  6149  0055AE  2B97               	incf	main@i& (0+255),f,b
  6150  0055B0  D7E0               	goto	l16312
  6151                           
  6152                           ; BSR set to: 2
  6153                           
  6154                           ; BSR set to: 2
  6155  0055B2  D000               	goto	l134
  6156  0055B4                     l134:
  6157                           
  6158                           ;main.c: 119: {
  6159                           ;main.c: 120: IRtask = IR_New_Code;
  6160  0055B4  C0E5  F293         	movff	_IR_New_Code,main@IRtask
  6161                           
  6162                           ;main.c: 121: Bluetoothtask = NewReceivedString;
  6163  0055B8  C0DF  F294         	movff	_NewReceivedString,main@Bluetoothtask	;volatile
  6164                           
  6165                           ;main.c: 122: BatteryVoltage = ReadVoltage();
  6166  0055BC  EC11  F040         	call	_ReadVoltage	;wreg free
  6167  0055C0  C0A2  F0DB         	movff	?_ReadVoltage,_BatteryVoltage
  6168  0055C4  C0A3  F0DC         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  6169  0055C8  C0A4  F0DD         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  6170                           
  6171                           ;main.c: 123: if(VoltageStatus == 34)
  6172  0055CC  0E22               	movlw	34
  6173  0055CE  0102               	movlb	2	; () banked
  6174  0055D0  1996               	xorwf	main@VoltageStatus& (0+255),w,b
  6175  0055D2  A4D8               	btfss	status,2,c
  6176  0055D4  D018               	goto	l16332
  6177                           
  6178                           ; BSR set to: 2
  6179                           ;main.c: 124: {
  6180                           ;main.c: 126: BatteryVoltage -= 0.5;
  6181  0055D6  C0DB  F0B8         	movff	_BatteryVoltage,___ftsub@f1
  6182  0055DA  C0DC  F0B9         	movff	_BatteryVoltage+1,___ftsub@f1+1
  6183  0055DE  C0DD  F0BA         	movff	_BatteryVoltage+2,___ftsub@f1+2
  6184  0055E2  0E00               	movlw	0
  6185  0055E4  0100               	movlb	0	; () banked
  6186  0055E6  6FBB               	movwf	___ftsub@f2& (0+255),b
  6187  0055E8  0E00               	movlw	0
  6188  0055EA  0100               	movlb	0	; () banked
  6189  0055EC  6FBC               	movwf	(___ftsub@f2+1)& (0+255),b
  6190  0055EE  0E3F               	movlw	63
  6191  0055F0  0100               	movlb	0	; () banked
  6192  0055F2  6FBD               	movwf	(___ftsub@f2+2)& (0+255),b
  6193  0055F4  EC9D  F047         	call	___ftsub	;wreg free
  6194  0055F8  C0B8  F0DB         	movff	?___ftsub,_BatteryVoltage
  6195  0055FC  C0B9  F0DC         	movff	?___ftsub+1,_BatteryVoltage+1
  6196  005600  C0BA  F0DD         	movff	?___ftsub+2,_BatteryVoltage+2
  6197                           
  6198                           ;main.c: 127: }
  6199  005604  D01D               	goto	l136
  6200  005606                     l16332:
  6201                           
  6202                           ;main.c: 128: else if(VoltageStatus == 98)
  6203  005606  0E62               	movlw	98
  6204  005608  0102               	movlb	2	; () banked
  6205  00560A  1996               	xorwf	main@VoltageStatus& (0+255),w,b
  6206  00560C  A4D8               	btfss	status,2,c
  6207  00560E  D018               	goto	l136
  6208                           
  6209                           ; BSR set to: 2
  6210                           ;main.c: 129: {
  6211                           ;main.c: 131: BatteryVoltage += 0.5;
  6212  005610  C0DB  F0AC         	movff	_BatteryVoltage,___ftadd@f1
  6213  005614  C0DC  F0AD         	movff	_BatteryVoltage+1,___ftadd@f1+1
  6214  005618  C0DD  F0AE         	movff	_BatteryVoltage+2,___ftadd@f1+2
  6215  00561C  0E00               	movlw	0
  6216  00561E  0100               	movlb	0	; () banked
  6217  005620  6FAF               	movwf	___ftadd@f2& (0+255),b
  6218  005622  0E00               	movlw	0
  6219  005624  0100               	movlb	0	; () banked
  6220  005626  6FB0               	movwf	(___ftadd@f2+1)& (0+255),b
  6221  005628  0E3F               	movlw	63
  6222  00562A  0100               	movlb	0	; () banked
  6223  00562C  6FB1               	movwf	(___ftadd@f2+2)& (0+255),b
  6224  00562E  EC80  F02D         	call	___ftadd	;wreg free
  6225  005632  C0AC  F0DB         	movff	?___ftadd,_BatteryVoltage
  6226  005636  C0AD  F0DC         	movff	?___ftadd+1,_BatteryVoltage+1
  6227  00563A  C0AE  F0DD         	movff	?___ftadd+2,_BatteryVoltage+2
  6228  00563E  D000               	goto	l136
  6229  005640                     l136:
  6230                           
  6231                           ;main.c: 132: }
  6232                           ;main.c: 134: if(BatteryVoltage < 3.7 )
  6233  005640  C0DB  F079         	movff	_BatteryVoltage,___ftge@ff1
  6234  005644  C0DC  F07A         	movff	_BatteryVoltage+1,___ftge@ff1+1
  6235  005648  C0DD  F07B         	movff	_BatteryVoltage+2,___ftge@ff1+2
  6236  00564C  0ECD               	movlw	205
  6237  00564E  0100               	movlb	0	; () banked
  6238  005650  6F7C               	movwf	___ftge@ff2& (0+255),b
  6239  005652  0E6C               	movlw	108
  6240  005654  0100               	movlb	0	; () banked
  6241  005656  6F7D               	movwf	(___ftge@ff2+1)& (0+255),b
  6242  005658  0E40               	movlw	64
  6243  00565A  0100               	movlb	0	; () banked
  6244  00565C  6F7E               	movwf	(___ftge@ff2+2)& (0+255),b
  6245  00565E  EC83  F03E         	call	___ftge	;wreg free
  6246  005662  0100               	movlb	0	; () banked
  6247  005664  B0D8               	btfsc	status,0,c
  6248  005666  D002               	goto	l16338
  6249                           
  6250                           ; BSR set to: 0
  6251                           ;main.c: 135: {
  6252                           ;main.c: 136: VoltageStatus = 34;
  6253  005668  0E22               	movlw	34
  6254  00566A  D017               	goto	L3
  6255  00566C                     l16338:
  6256                           
  6257                           ;main.c: 138: else if(BatteryVoltage > 30.0)
  6258  00566C  0E00               	movlw	0
  6259  00566E  0100               	movlb	0	; () banked
  6260  005670  6F79               	movwf	___ftge@ff1& (0+255),b
  6261  005672  0EF0               	movlw	240
  6262  005674  0100               	movlb	0	; () banked
  6263  005676  6F7A               	movwf	(___ftge@ff1+1)& (0+255),b
  6264  005678  0E41               	movlw	65
  6265  00567A  0100               	movlb	0	; () banked
  6266  00567C  6F7B               	movwf	(___ftge@ff1+2)& (0+255),b
  6267  00567E  C0DB  F07C         	movff	_BatteryVoltage,___ftge@ff2
  6268  005682  C0DC  F07D         	movff	_BatteryVoltage+1,___ftge@ff2+1
  6269  005686  C0DD  F07E         	movff	_BatteryVoltage+2,___ftge@ff2+2
  6270  00568A  EC83  F03E         	call	___ftge	;wreg free
  6271  00568E  0100               	movlb	0	; () banked
  6272  005690  B0D8               	btfsc	status,0,c
  6273  005692  D002               	goto	l16342
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;main.c: 139: {
  6277                           ;main.c: 140: VoltageStatus = 98;
  6278  005694  0E62               	movlw	98
  6279  005696  D001               	goto	L3
  6280  005698                     l16342:
  6281                           
  6282                           ;main.c: 142: else
  6283                           ;main.c: 143: {
  6284                           ;main.c: 144: VoltageStatus = 1;
  6285  005698  0E01               	movlw	1
  6286  00569A                     L3:
  6287  00569A  0102               	movlb	2	; () banked
  6288  00569C  6F96               	movwf	main@VoltageStatus& (0+255),b
  6289  00569E  D000               	goto	l139
  6290  0056A0                     l139:
  6291                           
  6292                           ; BSR set to: 2
  6293                           ;main.c: 145: }
  6294                           ;main.c: 147: if(IRtask && IR_NEC)
  6295  0056A0  0102               	movlb	2	; () banked
  6296  0056A2  5193               	movf	main@IRtask& (0+255),w,b
  6297  0056A4  0102               	movlb	2	; () banked
  6298  0056A6  B4D8               	btfsc	status,2,c
  6299  0056A8  D01B               	goto	l16348
  6300                           
  6301                           ; BSR set to: 2
  6302  0056AA  0100               	movlb	0	; () banked
  6303  0056AC  51E1               	movf	_IR_NEC& (0+255),w,b
  6304  0056AE  0100               	movlb	0	; () banked
  6305  0056B0  11E2               	iorwf	(_IR_NEC+1)& (0+255),w,b
  6306  0056B2  0100               	movlb	0	; () banked
  6307  0056B4  11E3               	iorwf	(_IR_NEC+2)& (0+255),w,b
  6308  0056B6  0100               	movlb	0	; () banked
  6309  0056B8  11E4               	iorwf	(_IR_NEC+3)& (0+255),w,b
  6310  0056BA  B4D8               	btfsc	status,2,c
  6311  0056BC  D011               	goto	l16348
  6312                           
  6313                           ; BSR set to: 0
  6314                           ;main.c: 148: {
  6315                           ;main.c: 149: UseIRCode(&IR_New_Code, IR_NEC);
  6316  0056BE  0EE5               	movlw	low _IR_New_Code
  6317  0056C0  0100               	movlb	0	; () banked
  6318  0056C2  6FBA               	movwf	UseIRCode@Code& (0+255),b
  6319  0056C4  0E00               	movlw	high _IR_New_Code
  6320  0056C6  0100               	movlb	0	; () banked
  6321  0056C8  6FBB               	movwf	(UseIRCode@Code+1)& (0+255),b
  6322  0056CA  C0E1  F0BC         	movff	_IR_NEC,UseIRCode@NEC
  6323  0056CE  C0E2  F0BD         	movff	_IR_NEC+1,UseIRCode@NEC+1
  6324  0056D2  C0E3  F0BE         	movff	_IR_NEC+2,UseIRCode@NEC+2
  6325  0056D6  C0E4  F0BF         	movff	_IR_NEC+3,UseIRCode@NEC+3
  6326  0056DA  ECBF  F02E         	call	_UseIRCode	;wreg free
  6327  0056DE  D000               	goto	l16348
  6328  0056E0                     l16348:
  6329                           
  6330                           ;main.c: 150: }
  6331                           ;main.c: 152: if(Bluetoothtask >= 1)
  6332  0056E0  0102               	movlb	2	; () banked
  6333  0056E2  5194               	movf	main@Bluetoothtask& (0+255),w,b
  6334  0056E4  0102               	movlb	2	; () banked
  6335  0056E6  B4D8               	btfsc	status,2,c
  6336  0056E8  D061               	goto	l16388
  6337                           
  6338                           ; BSR set to: 2
  6339                           ;main.c: 153: {
  6340                           ;main.c: 154: cleanBuffer(BluetoothString, 255);
  6341  0056EA  0E00               	movlw	low main@BluetoothString
  6342  0056EC  0100               	movlb	0	; () banked
  6343  0056EE  6F79               	movwf	cleanBuffer@data& (0+255),b
  6344  0056F0  0E03               	movlw	high main@BluetoothString
  6345  0056F2  0100               	movlb	0	; () banked
  6346  0056F4  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
  6347  0056F6  0E00               	movlw	0
  6348  0056F8  0100               	movlb	0	; () banked
  6349  0056FA  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
  6350  0056FC  697B               	setf	cleanBuffer@count& (0+255),b
  6351  0056FE  EC97  F046         	call	_cleanBuffer	;wreg free
  6352                           
  6353                           ;main.c: 155: BufferCopy(ReceivedString,BluetoothString, ReceivedStringPos, 0);
  6354  005702  0E00               	movlw	low _ReceivedString
  6355  005704  0100               	movlb	0	; () banked
  6356  005706  6F81               	movwf	BufferCopy@from& (0+255),b
  6357  005708  0E06               	movlw	high _ReceivedString
  6358  00570A  0100               	movlb	0	; () banked
  6359  00570C  6F82               	movwf	(BufferCopy@from+1)& (0+255),b
  6360  00570E  0E00               	movlw	low main@BluetoothString
  6361  005710  0100               	movlb	0	; () banked
  6362  005712  6F83               	movwf	BufferCopy@to& (0+255),b
  6363  005714  0E03               	movlw	high main@BluetoothString
  6364  005716  0100               	movlb	0	; () banked
  6365  005718  6F84               	movwf	(BufferCopy@to+1)& (0+255),b
  6366  00571A  C0E0  F085         	movff	_ReceivedStringPos,BufferCopy@count
  6367  00571E  0E00               	movlw	0
  6368  005720  0100               	movlb	0	; () banked
  6369  005722  6F86               	movwf	BufferCopy@shift& (0+255),b
  6370  005724  ECA7  F043         	call	_BufferCopy	;wreg free
  6371                           
  6372                           ;main.c: 156: BluetoothStringPos = ReceivedStringPos;
  6373  005728  C0E0  F295         	movff	_ReceivedStringPos,main@BluetoothStringPos
  6374                           
  6375                           ;main.c: 157: cleanBuffer(ReceivedString, ReceivedStringPos);
  6376  00572C  0E00               	movlw	low _ReceivedString
  6377  00572E  0100               	movlb	0	; () banked
  6378  005730  6F79               	movwf	cleanBuffer@data& (0+255),b
  6379  005732  0E06               	movlw	high _ReceivedString
  6380  005734  0100               	movlb	0	; () banked
  6381  005736  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
  6382  005738  C0E0  F07B         	movff	_ReceivedStringPos,cleanBuffer@count
  6383  00573C  0100               	movlb	0	; () banked
  6384  00573E  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
  6385  005740  EC97  F046         	call	_cleanBuffer	;wreg free
  6386                           
  6387                           ;main.c: 158: ReceivedStringPos = 0;
  6388  005744  0E00               	movlw	0
  6389  005746  0100               	movlb	0	; () banked
  6390  005748  6FE0               	movwf	_ReceivedStringPos& (0+255),b
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;main.c: 159: NewReceivedString = 0;
  6394  00574A  0E00               	movlw	0
  6395  00574C  0100               	movlb	0	; () banked
  6396  00574E  6FDF               	movwf	_NewReceivedString& (0+255),b	;volatile
  6397                           
  6398                           ; BSR set to: 0
  6399                           ;main.c: 160: if(BluetoothString[0] != 0)
  6400  005750  0103               	movlb	3	; () banked
  6401  005752  5100               	movf	main@BluetoothString& (0+255),w,b
  6402  005754  0103               	movlb	3	; () banked
  6403  005756  B4D8               	btfsc	status,2,c
  6404  005758  D00B               	goto	l16366
  6405                           
  6406                           ; BSR set to: 3
  6407                           ;main.c: 161: {
  6408                           ;main.c: 162: UseBluetooth(&BluetoothString, BluetoothStringPos);
  6409  00575A  0E00               	movlw	low main@BluetoothString
  6410  00575C  0102               	movlb	2	; () banked
  6411  00575E  6F00               	movwf	UseBluetooth@String& (0+255),b
  6412  005760  0E03               	movlw	high main@BluetoothString
  6413  005762  0102               	movlb	2	; () banked
  6414  005764  6F01               	movwf	(UseBluetooth@String+1)& (0+255),b
  6415  005766  C295  F202         	movff	main@BluetoothStringPos,UseBluetooth@StringPos
  6416  00576A  ECFB  F000         	call	_UseBluetooth	;wreg free
  6417  00576E  D000               	goto	l16366
  6418  005770                     l16366:
  6419                           
  6420                           ;main.c: 163: }
  6421                           ;main.c: 164: UARTstring(CRLN);
  6422  005770  0ED1               	movlw	low _CRLN
  6423  005772  0100               	movlb	0	; () banked
  6424  005774  6F7A               	movwf	UARTstring@data& (0+255),b
  6425  005776  0EF3               	movlw	high _CRLN
  6426  005778  0100               	movlb	0	; () banked
  6427  00577A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  6428  00577C  ECC4  F046         	call	_UARTstring	;wreg free
  6429                           
  6430                           ;main.c: 165: UARTchar('>');
  6431  005780  0E3E               	movlw	62
  6432  005782  ECB0  F049         	call	_UARTchar
  6433                           
  6434                           ;main.c: 166: if(IR_New_Code)
  6435  005786  0100               	movlb	0	; () banked
  6436  005788  51E5               	movf	_IR_New_Code& (0+255),w,b
  6437  00578A  B4D8               	btfsc	status,2,c
  6438  00578C  D004               	goto	l16374
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;main.c: 167: {
  6442                           ;main.c: 168: IR_New_Code = 0;
  6443  00578E  0E00               	movlw	0
  6444  005790  0100               	movlb	0	; () banked
  6445  005792  6FE5               	movwf	_IR_New_Code& (0+255),b
  6446  005794  D000               	goto	l16374
  6447  005796                     l16374:
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;main.c: 169: }
  6451                           ;main.c: 171: IRpinOLD = ReadIRpin();
  6452  005796  EC63  F04A         	call	_ReadIRpin	;wreg free
  6453  00579A  6E2E               	movwf	_IRpinOLD,c
  6454                           
  6455                           ;main.c: 172: INTCONbits.RBIF = 0;
  6456  00579C  90F2               	bcf	intcon,0,c	;volatile
  6457                           
  6458                           ;main.c: 173: (IOCBbits.IOCB4 = 1);
  6459  00579E  887D               	bsf	3965,4,c	;volatile
  6460                           
  6461                           ;main.c: 174: INTCONbits.RBIE = 1;
  6462  0057A0  86F2               	bsf	intcon,3,c	;volatile
  6463                           
  6464                           ;main.c: 175: ClearUSART();
  6465  0057A2  EC4E  F04A         	call	_ClearUSART	;wreg free
  6466                           
  6467                           ;main.c: 176: PIR1bits.RCIF = 0;
  6468  0057A6  9A9E               	bcf	3998,5,c	;volatile
  6469                           
  6470                           ;main.c: 177: PIE1bits.RCIE = 1;
  6471  0057A8  8A9D               	bsf	3997,5,c	;volatile
  6472  0057AA  D000               	goto	l16388
  6473  0057AC                     l16388:
  6474                           
  6475                           ;main.c: 178: }
  6476                           ;main.c: 180: if(IRtimeout < 5000)
  6477  0057AC  0102               	movlb	2	; () banked
  6478  0057AE  51CD               	movf	(_IRtimeout+3)& (0+255),w,b
  6479  0057B0  0102               	movlb	2	; () banked
  6480  0057B2  11CC               	iorwf	(_IRtimeout+2)& (0+255),w,b
  6481  0057B4  E110               	bnz	l16392
  6482  0057B6  0E88               	movlw	136
  6483  0057B8  0102               	movlb	2	; () banked
  6484  0057BA  5DCA               	subwf	_IRtimeout& (0+255),w,b
  6485  0057BC  0E13               	movlw	19
  6486  0057BE  0102               	movlb	2	; () banked
  6487  0057C0  59CB               	subwfb	(_IRtimeout+1)& (0+255),w,b
  6488  0057C2  B0D8               	btfsc	status,0,c
  6489  0057C4  D008               	goto	l16392
  6490                           
  6491                           ; BSR set to: 2
  6492                           ;main.c: 181: {
  6493                           ;main.c: 182: IRtimeout++;
  6494  0057C6  0E01               	movlw	1
  6495  0057C8  0102               	movlb	2	; () banked
  6496  0057CA  27CA               	addwf	_IRtimeout& (0+255),f,b
  6497  0057CC  0E00               	movlw	0
  6498  0057CE  23CB               	addwfc	(_IRtimeout+1)& (0+255),f,b
  6499  0057D0  23CC               	addwfc	(_IRtimeout+2)& (0+255),f,b
  6500  0057D2  23CD               	addwfc	(_IRtimeout+3)& (0+255),f,b
  6501                           
  6502                           ;main.c: 183: }
  6503  0057D4  D6EF               	goto	l134
  6504  0057D6                     l16392:
  6505                           
  6506                           ; BSR set to: 2
  6507                           ;main.c: 184: else if(IRtimeout == 5000)
  6508  0057D6  0E88               	movlw	136
  6509  0057D8  0102               	movlb	2	; () banked
  6510  0057DA  19CA               	xorwf	_IRtimeout& (0+255),w,b
  6511  0057DC  E108               	bnz	u20581
  6512  0057DE  0E13               	movlw	19
  6513  0057E0  0102               	movlb	2	; () banked
  6514  0057E2  19CB               	xorwf	(_IRtimeout+1)& (0+255),w,b
  6515  0057E4  0102               	movlb	2	; () banked
  6516  0057E6  11CC               	iorwf	(_IRtimeout+2)& (0+255),w,b
  6517  0057E8  0102               	movlb	2	; () banked
  6518  0057EA  11CD               	iorwf	(_IRtimeout+3)& (0+255),w,b
  6519  0057EC  A4D8               	btfss	status,2,c
  6520  0057EE                     u20581:
  6521  0057EE  D6E2               	goto	l134
  6522                           
  6523                           ; BSR set to: 2
  6524                           ;main.c: 185: {
  6525                           ;main.c: 186: IRtimeout++;
  6526  0057F0  0E01               	movlw	1
  6527  0057F2  0102               	movlb	2	; () banked
  6528  0057F4  27CA               	addwf	_IRtimeout& (0+255),f,b
  6529  0057F6  0E00               	movlw	0
  6530  0057F8  23CB               	addwfc	(_IRtimeout+1)& (0+255),f,b
  6531  0057FA  23CC               	addwfc	(_IRtimeout+2)& (0+255),f,b
  6532  0057FC  23CD               	addwfc	(_IRtimeout+3)& (0+255),f,b
  6533                           
  6534                           ; BSR set to: 2
  6535                           ;main.c: 187: IR_NEC = 0;
  6536  0057FE  0E00               	movlw	0
  6537  005800  0100               	movlb	0	; () banked
  6538  005802  6FE1               	movwf	_IR_NEC& (0+255),b
  6539  005804  0E00               	movlw	0
  6540  005806  6FE2               	movwf	(_IR_NEC+1)& (0+255),b
  6541  005808  0E00               	movlw	0
  6542  00580A  6FE3               	movwf	(_IR_NEC+2)& (0+255),b
  6543  00580C  0E00               	movlw	0
  6544  00580E  6FE4               	movwf	(_IR_NEC+3)& (0+255),b
  6545                           
  6546                           ; BSR set to: 0
  6547                           ;main.c: 188: IR_New_Code = 0;
  6548  005810  0E00               	movlw	0
  6549  005812  0100               	movlb	0	; () banked
  6550  005814  6FE5               	movwf	_IR_New_Code& (0+255),b
  6551                           
  6552                           ; BSR set to: 0
  6553                           ;main.c: 189: IRpinOLD = ReadIRpin();
  6554  005816  EC63  F04A         	call	_ReadIRpin	;wreg free
  6555  00581A  6E2E               	movwf	_IRpinOLD,c
  6556                           
  6557                           ;main.c: 190: INTCONbits.RBIF = 0;
  6558  00581C  90F2               	bcf	intcon,0,c	;volatile
  6559                           
  6560                           ;main.c: 191: (IOCBbits.IOCB4 = 1);
  6561  00581E  887D               	bsf	3965,4,c	;volatile
  6562                           
  6563                           ;main.c: 192: INTCONbits.RBIE = 1;
  6564  005820  86F2               	bsf	intcon,3,c	;volatile
  6565  005822  D6C8               	goto	l134
  6566  005824  EFF9  F000         	goto	start
  6567  005828                     __end_of_main:
  6568                           	opt stack 0
  6569                           tblptru	equ	0xFF8
  6570                           tblptrh	equ	0xFF7
  6571                           tblptrl	equ	0xFF6
  6572                           tablat	equ	0xFF5
  6573                           intcon	equ	0xFF2
  6574                           postinc0	equ	0xFEE
  6575                           wreg	equ	0xFE8
  6576                           postdec1	equ	0xFE5
  6577                           fsr1h	equ	0xFE2
  6578                           fsr1l	equ	0xFE1
  6579                           status	equ	0xFD8
  6580                           
  6581 ;; *************** function _UseIRCode *****************
  6582 ;; Defined at:
  6583 ;;		line 279 in file "IR.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;  Code            2   90[BANK0 ] PTR unsigned char 
  6586 ;;		 -> IR_New_Code(1), 
  6587 ;;  NEC             4   92[BANK0 ] unsigned long 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;  i               1  101[BANK0 ] unsigned char 
  6590 ;;  j               1  100[BANK0 ] unsigned char 
  6591 ;;  found           1   99[BANK0 ] unsigned char 
  6592 ;; Return value:  Size  Location     Type
  6593 ;;		None               void
  6594 ;; Registers used:
  6595 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6601 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6602 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6603 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6604 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6605 ;;Total ram usage:       12 bytes
  6606 ;; Hardware stack levels used:    1
  6607 ;; Hardware stack levels required when called:   11
  6608 ;; This function calls:
  6609 ;;		_DecodeNEC
  6610 ;;		_LEDTimerON
  6611 ;;		_ReadCodeButtons
  6612 ;;		_ReadIRpin
  6613 ;;		_ReadPushButton
  6614 ;;		_SendRF_Channel
  6615 ;;		_SyncGlobalToEEPROM
  6616 ;;		_delayUS
  6617 ;; This function is called by:
  6618 ;;		_main
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text1
  6623  005D7E                     __ptext1:
  6624                           	opt stack 0
  6625  005D7E                     _UseIRCode:
  6626                           	opt stack 19
  6627                           
  6628                           ;IR.c: 281: unsigned char i,j;
  6629                           ;IR.c: 282: unsigned char found = 0;
  6630                           
  6631                           ;incstack = 0
  6632  005D7E  0E00               	movlw	0
  6633  005D80  0100               	movlb	0	; () banked
  6634  005D82  6FC3               	movwf	UseIRCode@found& (0+255),b
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;IR.c: 284: LEDTimerON();
  6638  005D84  EC26  F04A         	call	_LEDTimerON	;wreg free
  6639                           
  6640                           ;IR.c: 285: if(*Code == 2 || *Code == 1)
  6641  005D88  C0BA  FFD9         	movff	UseIRCode@Code,fsr2l
  6642  005D8C  C0BB  FFDA         	movff	UseIRCode@Code+1,fsr2h
  6643  005D90  0E02               	movlw	2
  6644  005D92  18DE               	xorwf	postinc2,w,c
  6645  005D94  B4D8               	btfsc	status,2,c
  6646  005D96  D007               	goto	l15338
  6647  005D98  C0BA  FFD9         	movff	UseIRCode@Code,fsr2l
  6648  005D9C  C0BB  FFDA         	movff	UseIRCode@Code+1,fsr2h
  6649  005DA0  04DE               	decf	postinc2,w,c
  6650  005DA2  A4D8               	btfss	status,2,c
  6651  005DA4  D112               	goto	l15424
  6652  005DA6                     l15338:
  6653                           
  6654                           ;IR.c: 286: {
  6655                           ;IR.c: 287: DecodeNEC(NEC, &IRaddress, &IRcommand);
  6656  005DA6  C0BC  F07D         	movff	UseIRCode@NEC,DecodeNEC@Nec
  6657  005DAA  C0BD  F07E         	movff	UseIRCode@NEC+1,DecodeNEC@Nec+1
  6658  005DAE  C0BE  F07F         	movff	UseIRCode@NEC+2,DecodeNEC@Nec+2
  6659  005DB2  C0BF  F080         	movff	UseIRCode@NEC+3,DecodeNEC@Nec+3
  6660  005DB6  0EFF               	movlw	low _IRaddress
  6661  005DB8  0100               	movlb	0	; () banked
  6662  005DBA  6F81               	movwf	DecodeNEC@address& (0+255),b
  6663  005DBC  0E01               	movlw	high _IRaddress
  6664  005DBE  0100               	movlb	0	; () banked
  6665  005DC0  6F82               	movwf	(DecodeNEC@address+1)& (0+255),b
  6666  005DC2  0E3B               	movlw	low _IRcommand
  6667  005DC4  0100               	movlb	0	; () banked
  6668  005DC6  6F83               	movwf	DecodeNEC@command& (0+255),b
  6669  005DC8  0E00               	movlw	high _IRcommand
  6670  005DCA  0100               	movlb	0	; () banked
  6671  005DCC  6F84               	movwf	(DecodeNEC@command+1)& (0+255),b
  6672  005DCE  EC7B  F041         	call	_DecodeNEC	;wreg free
  6673                           
  6674                           ;IR.c: 288: if(ReadPushButton())
  6675  005DD2  EC40  F04A         	call	_ReadPushButton	;wreg free
  6676  005DD6  0900               	iorlw	0
  6677  005DD8  B4D8               	btfsc	status,2,c
  6678  005DDA  D055               	goto	l15378
  6679                           
  6680                           ;IR.c: 289: {
  6681                           ;IR.c: 290: Global.SWNECcode = NEC;
  6682  005DDC  C0BC  F401         	movff	UseIRCode@NEC,_Global+1
  6683  005DE0  C0BD  F402         	movff	UseIRCode@NEC+1,_Global+2
  6684  005DE4  C0BE  F403         	movff	UseIRCode@NEC+2,_Global+3
  6685  005DE8  C0BF  F404         	movff	UseIRCode@NEC+3,_Global+4
  6686                           
  6687                           ;IR.c: 291: if(SyncGlobalToEEPROM())
  6688  005DEC  ECE9  F047         	call	_SyncGlobalToEEPROM	;wreg free
  6689  005DF0  0900               	iorlw	0
  6690  005DF2  B4D8               	btfsc	status,2,c
  6691  005DF4  D024               	goto	l15362
  6692                           
  6693                           ;IR.c: 292: {
  6694                           ;IR.c: 294: for(i =0;i<10;i++)
  6695  005DF6  0E00               	movlw	0
  6696  005DF8  0100               	movlb	0	; () banked
  6697  005DFA  6FC5               	movwf	UseIRCode@i& (0+255),b
  6698  005DFC                     l15348:
  6699                           
  6700                           ; BSR set to: 0
  6701  005DFC  0E09               	movlw	9
  6702  005DFE  0100               	movlb	0	; () banked
  6703  005E00  65C5               	cpfsgt	UseIRCode@i& (0+255),b
  6704  005E02  D001               	goto	l15352
  6705                           
  6706                           ; BSR set to: 0
  6707  005E04  D0E2               	goto	l15424
  6708  005E06                     l15352:
  6709                           
  6710                           ; BSR set to: 0
  6711                           ;IR.c: 295: {
  6712                           ;IR.c: 296: (LATC |= 0x04);
  6713  005E06  848B               	bsf	3979,2,c	;volatile
  6714                           
  6715                           ; BSR set to: 0
  6716                           ;IR.c: 297: delayUS(50000);
  6717  005E08  0E50               	movlw	80
  6718  005E0A  0100               	movlb	0	; () banked
  6719  005E0C  6F79               	movwf	delayUS@US& (0+255),b
  6720  005E0E  0EC3               	movlw	195
  6721  005E10  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6722  005E12  0E00               	movlw	0
  6723  005E14  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6724  005E16  0E00               	movlw	0
  6725  005E18  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6726  005E1A  EC48  F047         	call	_delayUS	;wreg free
  6727                           
  6728                           ;IR.c: 298: (LATC &= ~0x04);
  6729  005E1E  948B               	bcf	3979,2,c	;volatile
  6730                           
  6731                           ;IR.c: 299: delayUS(50000);
  6732  005E20  0E50               	movlw	80
  6733  005E22  0100               	movlb	0	; () banked
  6734  005E24  6F79               	movwf	delayUS@US& (0+255),b
  6735  005E26  0EC3               	movlw	195
  6736  005E28  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6737  005E2A  0E00               	movlw	0
  6738  005E2C  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6739  005E2E  0E00               	movlw	0
  6740  005E30  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6741  005E32  EC48  F047         	call	_delayUS	;wreg free
  6742  005E36  0100               	movlb	0	; () banked
  6743  005E38  2BC5               	incf	UseIRCode@i& (0+255),f,b
  6744  005E3A  D7E0               	goto	l15348
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;IR.c: 300: }
  6748                           ;IR.c: 301: }
  6749                           
  6750                           ; BSR set to: 0
  6751  005E3C  D0C6               	goto	l15424
  6752  005E3E                     l15362:
  6753                           
  6754                           ;IR.c: 302: else
  6755                           ;IR.c: 303: {
  6756                           ;IR.c: 305: for(i =0;i<10;i++)
  6757  005E3E  0E00               	movlw	0
  6758  005E40  0100               	movlb	0	; () banked
  6759  005E42  6FC5               	movwf	UseIRCode@i& (0+255),b
  6760  005E44                     l15364:
  6761                           
  6762                           ; BSR set to: 0
  6763  005E44  0E09               	movlw	9
  6764  005E46  0100               	movlb	0	; () banked
  6765  005E48  65C5               	cpfsgt	UseIRCode@i& (0+255),b
  6766  005E4A  D001               	goto	l15368
  6767                           
  6768                           ; BSR set to: 0
  6769  005E4C  D0BE               	goto	l15424
  6770  005E4E                     l15368:
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;IR.c: 306: {
  6774                           ;IR.c: 307: (LATC |= 0x02);
  6775  005E4E  828B               	bsf	3979,1,c	;volatile
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;IR.c: 308: delayUS(50000);
  6779  005E50  0E50               	movlw	80
  6780  005E52  0100               	movlb	0	; () banked
  6781  005E54  6F79               	movwf	delayUS@US& (0+255),b
  6782  005E56  0EC3               	movlw	195
  6783  005E58  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6784  005E5A  0E00               	movlw	0
  6785  005E5C  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6786  005E5E  0E00               	movlw	0
  6787  005E60  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6788  005E62  EC48  F047         	call	_delayUS	;wreg free
  6789                           
  6790                           ;IR.c: 309: (LATC &= ~0x02);
  6791  005E66  928B               	bcf	3979,1,c	;volatile
  6792                           
  6793                           ;IR.c: 310: delayUS(50000);
  6794  005E68  0E50               	movlw	80
  6795  005E6A  0100               	movlb	0	; () banked
  6796  005E6C  6F79               	movwf	delayUS@US& (0+255),b
  6797  005E6E  0EC3               	movlw	195
  6798  005E70  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6799  005E72  0E00               	movlw	0
  6800  005E74  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6801  005E76  0E00               	movlw	0
  6802  005E78  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6803  005E7A  EC48  F047         	call	_delayUS	;wreg free
  6804  005E7E  0100               	movlb	0	; () banked
  6805  005E80  2BC5               	incf	UseIRCode@i& (0+255),f,b
  6806  005E82  D7E0               	goto	l15364
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;IR.c: 311: }
  6810                           ;IR.c: 312: }
  6811                           ;IR.c: 313: }
  6812                           
  6813                           ; BSR set to: 0
  6814                           
  6815                           ; BSR set to: 0
  6816  005E84  D0A2               	goto	l15424
  6817  005E86                     l15378:
  6818                           
  6819                           ;IR.c: 314: else
  6820                           ;IR.c: 315: {
  6821                           ;IR.c: 316: if(NEC == Global.SWNECcode)
  6822  005E86  0100               	movlb	0	; () banked
  6823  005E88  51BC               	movf	UseIRCode@NEC& (0+255),w,b
  6824  005E8A  0104               	movlb	4	; () banked
  6825  005E8C  1901               	xorwf	(_Global+1)& (0+255),w,b
  6826  005E8E  E121               	bnz	l15388
  6827  005E90  0100               	movlb	0	; () banked
  6828  005E92  51BD               	movf	(UseIRCode@NEC+1)& (0+255),w,b
  6829  005E94  0104               	movlb	4	; () banked
  6830  005E96  1902               	xorwf	(_Global+2)& (0+255),w,b
  6831  005E98  E11C               	bnz	l15388
  6832  005E9A  0100               	movlb	0	; () banked
  6833  005E9C  51BE               	movf	(UseIRCode@NEC+2)& (0+255),w,b
  6834  005E9E  0104               	movlb	4	; () banked
  6835  005EA0  1903               	xorwf	(_Global+3)& (0+255),w,b
  6836  005EA2  E117               	bnz	l15388
  6837  005EA4  0100               	movlb	0	; () banked
  6838  005EA6  51BF               	movf	(UseIRCode@NEC+3)& (0+255),w,b
  6839  005EA8  0104               	movlb	4	; () banked
  6840  005EAA  1904               	xorwf	(_Global+4)& (0+255),w,b
  6841  005EAC  A4D8               	btfss	status,2,c
  6842  005EAE  D011               	goto	l15388
  6843                           
  6844                           ; BSR set to: 4
  6845                           ;IR.c: 317: {
  6846                           ;IR.c: 318: if(*Code == 2)
  6847  005EB0  C0BA  FFD9         	movff	UseIRCode@Code,fsr2l
  6848  005EB4  C0BB  FFDA         	movff	UseIRCode@Code+1,fsr2h
  6849  005EB8  0E02               	movlw	2
  6850  005EBA  18DE               	xorwf	postinc2,w,c
  6851  005EBC  B4D8               	btfsc	status,2,c
  6852                           
  6853                           ; BSR set to: 4
  6854                           ;IR.c: 319: {
  6855                           ;IR.c: 320: (LATC |= 0x02);
  6856  005EBE  828B               	bsf	3979,1,c	;volatile
  6857                           
  6858                           ; BSR set to: 4
  6859                           ;IR.c: 321: }
  6860                           ;IR.c: 322: (LATC |= 0x04);
  6861  005EC0  848B               	bsf	3979,2,c	;volatile
  6862                           
  6863                           ; BSR set to: 4
  6864                           ;IR.c: 323: SendRF_Channel(ReadCodeButtons());
  6865  005EC2  EC73  F047         	call	_ReadCodeButtons	;wreg free
  6866  005EC6  ECF2  F02F         	call	_SendRF_Channel
  6867                           
  6868                           ;IR.c: 324: found = 1;
  6869  005ECA  0E01               	movlw	1
  6870  005ECC  0100               	movlb	0	; () banked
  6871  005ECE  6FC3               	movwf	UseIRCode@found& (0+255),b
  6872  005ED0  D000               	goto	l15388
  6873  005ED2                     l15388:
  6874                           
  6875                           ;IR.c: 325: }
  6876                           ;IR.c: 327: for(j=0; j < 3; j++)
  6877  005ED2  0E00               	movlw	0
  6878  005ED4  0100               	movlb	0	; () banked
  6879  005ED6  6FC4               	movwf	UseIRCode@j& (0+255),b
  6880  005ED8                     l15390:
  6881                           
  6882                           ; BSR set to: 0
  6883  005ED8  0E02               	movlw	2
  6884  005EDA  0100               	movlb	0	; () banked
  6885  005EDC  65C4               	cpfsgt	UseIRCode@j& (0+255),b
  6886  005EDE  D001               	goto	l15394
  6887                           
  6888                           ; BSR set to: 0
  6889  005EE0  D06D               	goto	l15420
  6890  005EE2                     l15394:
  6891                           
  6892                           ; BSR set to: 0
  6893                           ;IR.c: 328: {
  6894                           ;IR.c: 329: for(i=0; i < 15; i++)
  6895  005EE2  0E00               	movlw	0
  6896  005EE4  0100               	movlb	0	; () banked
  6897  005EE6  6FC5               	movwf	UseIRCode@i& (0+255),b
  6898  005EE8                     l15396:
  6899                           
  6900                           ; BSR set to: 0
  6901  005EE8  0E0E               	movlw	14
  6902  005EEA  0100               	movlb	0	; () banked
  6903  005EEC  65C5               	cpfsgt	UseIRCode@i& (0+255),b
  6904  005EEE  D001               	goto	l15400
  6905                           
  6906                           ; BSR set to: 0
  6907  005EF0  D062               	goto	l15416
  6908  005EF2                     l15400:
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;IR.c: 330: {
  6912                           ;IR.c: 332: if(IRaddress == Global.RemoteButtonRF[i][j][0])
  6913  005EF2  0100               	movlb	0	; () banked
  6914  005EF4  51C5               	movf	UseIRCode@i& (0+255),w,b
  6915  005EF6  0D06               	mullw	6
  6916  005EF8  0E00               	movlw	low _Global
  6917  005EFA  0100               	movlb	0	; () banked
  6918  005EFC  6FC0               	movwf	??_UseIRCode& (0+255),b
  6919  005EFE  0E04               	movlw	high _Global
  6920  005F00  0100               	movlb	0	; () banked
  6921  005F02  6FC1               	movwf	(??_UseIRCode+1)& (0+255),b
  6922  005F04  0E2E               	movlw	46
  6923  005F06  0100               	movlb	0	; () banked
  6924  005F08  27C0               	addwf	??_UseIRCode& (0+255),f,b
  6925  005F0A  0E00               	movlw	0
  6926  005F0C  23C1               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  6927  005F0E  50F3               	movf	prodl,w,c
  6928  005F10  0100               	movlb	0	; () banked
  6929  005F12  27C0               	addwf	??_UseIRCode& (0+255),f,b
  6930  005F14  50F4               	movf	prodh,w,c
  6931  005F16  0100               	movlb	0	; () banked
  6932  005F18  23C1               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  6933  005F1A  0100               	movlb	0	; () banked
  6934  005F1C  51C4               	movf	UseIRCode@j& (0+255),w,b
  6935  005F1E  0D02               	mullw	2
  6936  005F20  50F3               	movf	prodl,w,c
  6937  005F22  0100               	movlb	0	; () banked
  6938  005F24  25C0               	addwf	??_UseIRCode& (0+255),w,b
  6939  005F26  6ED9               	movwf	fsr2l,c
  6940  005F28  50F4               	movf	prodh,w,c
  6941  005F2A  0100               	movlb	0	; () banked
  6942  005F2C  21C1               	addwfc	(??_UseIRCode+1)& (0+255),w,b
  6943  005F2E  6EDA               	movwf	fsr2h,c
  6944  005F30  0101               	movlb	1	; () banked
  6945  005F32  51FF               	movf	_IRaddress& (0+255),w,b
  6946  005F34  18DE               	xorwf	postinc2,w,c
  6947  005F36  A4D8               	btfss	status,2,c
  6948  005F38  D03B               	goto	l15412
  6949                           
  6950                           ; BSR set to: 1
  6951                           ;IR.c: 333: {
  6952                           ;IR.c: 334: if(IRcommand == Global.RemoteButtonRF[i][j][1])
  6953  005F3A  0100               	movlb	0	; () banked
  6954  005F3C  51C5               	movf	UseIRCode@i& (0+255),w,b
  6955  005F3E  0D06               	mullw	6
  6956  005F40  0E00               	movlw	low _Global
  6957  005F42  0100               	movlb	0	; () banked
  6958  005F44  6FC0               	movwf	??_UseIRCode& (0+255),b
  6959  005F46  0E04               	movlw	high _Global
  6960  005F48  0100               	movlb	0	; () banked
  6961  005F4A  6FC1               	movwf	(??_UseIRCode+1)& (0+255),b
  6962  005F4C  0E2E               	movlw	46
  6963  005F4E  0100               	movlb	0	; () banked
  6964  005F50  27C0               	addwf	??_UseIRCode& (0+255),f,b
  6965  005F52  0E00               	movlw	0
  6966  005F54  23C1               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  6967  005F56  50F3               	movf	prodl,w,c
  6968  005F58  0100               	movlb	0	; () banked
  6969  005F5A  27C0               	addwf	??_UseIRCode& (0+255),f,b
  6970  005F5C  50F4               	movf	prodh,w,c
  6971  005F5E  0100               	movlb	0	; () banked
  6972  005F60  23C1               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  6973  005F62  0100               	movlb	0	; () banked
  6974  005F64  51C4               	movf	UseIRCode@j& (0+255),w,b
  6975  005F66  0D02               	mullw	2
  6976  005F68  50F3               	movf	prodl,w,c
  6977  005F6A  0100               	movlb	0	; () banked
  6978  005F6C  27C0               	addwf	??_UseIRCode& (0+255),f,b
  6979  005F6E  50F4               	movf	prodh,w,c
  6980  005F70  0100               	movlb	0	; () banked
  6981  005F72  23C1               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  6982  005F74  0E01               	movlw	1
  6983  005F76  0100               	movlb	0	; () banked
  6984  005F78  25C0               	addwf	??_UseIRCode& (0+255),w,b
  6985  005F7A  6ED9               	movwf	fsr2l,c
  6986  005F7C  0E00               	movlw	0
  6987  005F7E  0100               	movlb	0	; () banked
  6988  005F80  21C1               	addwfc	(??_UseIRCode+1)& (0+255),w,b
  6989  005F82  6EDA               	movwf	fsr2h,c
  6990  005F84  503B               	movf	_IRcommand,w,c
  6991  005F86  18DE               	xorwf	postinc2,w,c
  6992  005F88  A4D8               	btfss	status,2,c
  6993  005F8A  D012               	goto	l15412
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;IR.c: 335: {
  6997                           ;IR.c: 336: if(*Code == 2)
  6998  005F8C  C0BA  FFD9         	movff	UseIRCode@Code,fsr2l
  6999  005F90  C0BB  FFDA         	movff	UseIRCode@Code+1,fsr2h
  7000  005F94  0E02               	movlw	2
  7001  005F96  18DE               	xorwf	postinc2,w,c
  7002  005F98  A4D8               	btfss	status,2,c
  7003  005F9A  D002               	goto	l15408
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;IR.c: 337: {
  7007                           ;IR.c: 338: (LATC |= 0x02);
  7008  005F9C  828B               	bsf	3979,1,c	;volatile
  7009  005F9E  D000               	goto	l15408
  7010  005FA0                     l15408:
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;IR.c: 339: }
  7014                           ;IR.c: 340: SendRF_Channel(i);
  7015  005FA0  0100               	movlb	0	; () banked
  7016  005FA2  51C5               	movf	UseIRCode@i& (0+255),w,b
  7017  005FA4  ECF2  F02F         	call	_SendRF_Channel
  7018                           
  7019                           ;IR.c: 341: found = 1;
  7020  005FA8  0E01               	movlw	1
  7021  005FAA  0100               	movlb	0	; () banked
  7022  005FAC  6FC3               	movwf	UseIRCode@found& (0+255),b
  7023                           
  7024                           ; BSR set to: 0
  7025  005FAE  D000               	goto	l15412
  7026  005FB0                     l15412:
  7027  005FB0  0100               	movlb	0	; () banked
  7028  005FB2  2BC5               	incf	UseIRCode@i& (0+255),f,b
  7029  005FB4  D799               	goto	l15396
  7030  005FB6                     l15416:
  7031                           
  7032                           ; BSR set to: 0
  7033  005FB6  0100               	movlb	0	; () banked
  7034  005FB8  2BC4               	incf	UseIRCode@j& (0+255),f,b
  7035  005FBA  D78E               	goto	l15390
  7036  005FBC                     l15420:
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;IR.c: 342: }
  7040                           ;IR.c: 343: }
  7041                           ;IR.c: 344: }
  7042                           ;IR.c: 345: }
  7043                           ;IR.c: 347: if(found == 0)
  7044  005FBC  0100               	movlb	0	; () banked
  7045  005FBE  51C3               	movf	UseIRCode@found& (0+255),w,b
  7046  005FC0  0100               	movlb	0	; () banked
  7047  005FC2  A4D8               	btfss	status,2,c
  7048  005FC4  D002               	goto	l15424
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;IR.c: 348: {
  7052                           ;IR.c: 349: (LATC |= 0x02);
  7053  005FC6  828B               	bsf	3979,1,c	;volatile
  7054                           
  7055                           ; BSR set to: 0
  7056                           
  7057                           ; BSR set to: 0
  7058  005FC8  D000               	goto	l15424
  7059  005FCA                     l15424:
  7060                           
  7061                           ;IR.c: 350: }
  7062                           ;IR.c: 351: }
  7063                           ;IR.c: 352: }
  7064                           ;IR.c: 353: *Code = 0;
  7065  005FCA  C0BA  FFD9         	movff	UseIRCode@Code,fsr2l
  7066  005FCE  C0BB  FFDA         	movff	UseIRCode@Code+1,fsr2h
  7067  005FD2  0E00               	movlw	0
  7068  005FD4  6EDF               	movwf	indf2,c
  7069                           
  7070                           ;IR.c: 354: IRpinOLD = ReadIRpin();
  7071  005FD6  EC63  F04A         	call	_ReadIRpin	;wreg free
  7072  005FDA  6E2E               	movwf	_IRpinOLD,c
  7073                           
  7074                           ;IR.c: 355: INTCONbits.RBIF = 0;
  7075  005FDC  90F2               	bcf	intcon,0,c	;volatile
  7076                           
  7077                           ;IR.c: 356: (IOCBbits.IOCB4 = 1);
  7078  005FDE  887D               	bsf	3965,4,c	;volatile
  7079                           
  7080                           ;IR.c: 357: INTCONbits.RBIE = 1;
  7081  005FE0  86F2               	bsf	intcon,3,c	;volatile
  7082  005FE2  0012               	return		;funcret
  7083  005FE4                     __end_of_UseIRCode:
  7084                           	opt stack 0
  7085                           tblptru	equ	0xFF8
  7086                           tblptrh	equ	0xFF7
  7087                           tblptrl	equ	0xFF6
  7088                           tablat	equ	0xFF5
  7089                           prodh	equ	0xFF4
  7090                           prodl	equ	0xFF3
  7091                           intcon	equ	0xFF2
  7092                           postinc0	equ	0xFEE
  7093                           wreg	equ	0xFE8
  7094                           postdec1	equ	0xFE5
  7095                           fsr1h	equ	0xFE2
  7096                           fsr1l	equ	0xFE1
  7097                           indf2	equ	0xFDF
  7098                           postinc2	equ	0xFDE
  7099                           fsr2h	equ	0xFDA
  7100                           fsr2l	equ	0xFD9
  7101                           status	equ	0xFD8
  7102                           
  7103 ;; *************** function _SendRF_Channel *****************
  7104 ;; Defined at:
  7105 ;;		line 165 in file "RF.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  channel         1    wreg     unsigned char 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;  channel         1   38[BANK0 ] unsigned char 
  7110 ;; Return value:  Size  Location     Type
  7111 ;;		None               void
  7112 ;; Registers used:
  7113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7120 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7122 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7123 ;;Total ram usage:        1 bytes
  7124 ;; Hardware stack levels used:    1
  7125 ;; Hardware stack levels required when called:    9
  7126 ;; This function calls:
  7127 ;;		_SendRF_wait
  7128 ;; This function is called by:
  7129 ;;		_UseIRCode
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133                           	psect	text2
  7134  005FE4                     __ptext2:
  7135                           	opt stack 0
  7136  005FE4                     _SendRF_Channel:
  7137                           	opt stack 20
  7138                           
  7139                           ;incstack = 0
  7140                           ;SendRF_Channel@channel stored from wreg
  7141  005FE4  0100               	movlb	0	; () banked
  7142  005FE6  6F86               	movwf	SendRF_Channel@channel& (0+255),b
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;RF.c: 167: switch (channel)
  7146  005FE8  D10D               	goto	l15156
  7147  005FEA                     l15098:
  7148                           
  7149                           ; BSR set to: 0
  7150                           ;RF.c: 171: SendRF_wait(Conf1_ChannelD,1,12,4);
  7151  005FEA  0E97               	movlw	low _Conf1_ChannelD
  7152  005FEC  0100               	movlb	0	; () banked
  7153  005FEE  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7154  005FF0  0EF3               	movlw	high _Conf1_ChannelD
  7155  005FF2  0100               	movlb	0	; () banked
  7156  005FF4  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7157  005FF6  0E01               	movlw	1
  7158  005FF8  0100               	movlb	0	; () banked
  7159  005FFA  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7160  005FFC  0E0C               	movlw	12
  7161  005FFE  0100               	movlb	0	; () banked
  7162  006000  6F84               	movwf	SendRF_wait@size& (0+255),b
  7163  006002  0E04               	movlw	4
  7164  006004  0100               	movlb	0	; () banked
  7165  006006  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7166  006008  EC72  F048         	call	_SendRF_wait	;wreg free
  7167                           
  7168                           ;RF.c: 172: break;
  7169  00600C  0012               	return	
  7170  00600E                     l15100:
  7171                           
  7172                           ;RF.c: 175: SendRF_wait(Conf1_ChannelE,1,12,4);
  7173  00600E  0EA3               	movlw	low _Conf1_ChannelE
  7174  006010  0100               	movlb	0	; () banked
  7175  006012  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7176  006014  0EF3               	movlw	high _Conf1_ChannelE
  7177  006016  0100               	movlb	0	; () banked
  7178  006018  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7179  00601A  0E01               	movlw	1
  7180  00601C  0100               	movlb	0	; () banked
  7181  00601E  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7182  006020  0E0C               	movlw	12
  7183  006022  0100               	movlb	0	; () banked
  7184  006024  6F84               	movwf	SendRF_wait@size& (0+255),b
  7185  006026  0E04               	movlw	4
  7186  006028  0100               	movlb	0	; () banked
  7187  00602A  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7188  00602C  EC72  F048         	call	_SendRF_wait	;wreg free
  7189                           
  7190                           ;RF.c: 176: break;
  7191  006030  0012               	return	
  7192  006032                     l15102:
  7193                           
  7194                           ;RF.c: 179: SendRF_wait(Conf1_ChannelF,1,12,4);
  7195  006032  0EAF               	movlw	low _Conf1_ChannelF
  7196  006034  0100               	movlb	0	; () banked
  7197  006036  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7198  006038  0EF3               	movlw	high _Conf1_ChannelF
  7199  00603A  0100               	movlb	0	; () banked
  7200  00603C  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7201  00603E  0E01               	movlw	1
  7202  006040  0100               	movlb	0	; () banked
  7203  006042  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7204  006044  0E0C               	movlw	12
  7205  006046  0100               	movlb	0	; () banked
  7206  006048  6F84               	movwf	SendRF_wait@size& (0+255),b
  7207  00604A  0E04               	movlw	4
  7208  00604C  0100               	movlb	0	; () banked
  7209  00604E  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7210  006050  EC72  F048         	call	_SendRF_wait	;wreg free
  7211                           
  7212                           ;RF.c: 180: break;
  7213  006054  0012               	return	
  7214  006056                     l15104:
  7215                           
  7216                           ;RF.c: 183: if(Conf2_ChannelB_Status)
  7217  006056  5027               	movf	_Conf2_ChannelB_Status,w,c
  7218  006058  B4D8               	btfsc	status,2,c
  7219  00605A  D014               	goto	l15110
  7220                           
  7221                           ;RF.c: 184: {
  7222                           ;RF.c: 185: SendRF_wait(Conf2_ChannelB_OFF,2,16,4);
  7223  00605C  0EBC               	movlw	low _Conf2_ChannelB_OFF
  7224  00605E  0100               	movlb	0	; () banked
  7225  006060  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7226  006062  0EF2               	movlw	high _Conf2_ChannelB_OFF
  7227  006064  0100               	movlb	0	; () banked
  7228  006066  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7229  006068  0E02               	movlw	2
  7230  00606A  0100               	movlb	0	; () banked
  7231  00606C  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7232  00606E  0E10               	movlw	16
  7233  006070  0100               	movlb	0	; () banked
  7234  006072  6F84               	movwf	SendRF_wait@size& (0+255),b
  7235  006074  0E04               	movlw	4
  7236  006076  0100               	movlb	0	; () banked
  7237  006078  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7238  00607A  EC72  F048         	call	_SendRF_wait	;wreg free
  7239                           
  7240                           ;RF.c: 186: Conf2_ChannelB_Status = 0;
  7241  00607E  0E00               	movlw	0
  7242  006080  6E27               	movwf	_Conf2_ChannelB_Status,c
  7243                           
  7244                           ;RF.c: 187: }
  7245  006082  0012               	return	
  7246  006084                     l15110:
  7247                           
  7248                           ;RF.c: 188: else
  7249                           ;RF.c: 189: {
  7250                           ;RF.c: 190: SendRF_wait(Conf2_ChannelB_ON,2,16,4);
  7251  006084  0ECC               	movlw	low _Conf2_ChannelB_ON
  7252  006086  0100               	movlb	0	; () banked
  7253  006088  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7254  00608A  0EF2               	movlw	high _Conf2_ChannelB_ON
  7255  00608C  0100               	movlb	0	; () banked
  7256  00608E  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7257  006090  0E02               	movlw	2
  7258  006092  0100               	movlb	0	; () banked
  7259  006094  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7260  006096  0E10               	movlw	16
  7261  006098  0100               	movlb	0	; () banked
  7262  00609A  6F84               	movwf	SendRF_wait@size& (0+255),b
  7263  00609C  0E04               	movlw	4
  7264  00609E  0100               	movlb	0	; () banked
  7265  0060A0  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7266  0060A2  EC72  F048         	call	_SendRF_wait	;wreg free
  7267                           
  7268                           ;RF.c: 191: Conf2_ChannelB_Status = 1;
  7269  0060A6  0E01               	movlw	1
  7270  0060A8  6E27               	movwf	_Conf2_ChannelB_Status,c
  7271                           
  7272                           ;RF.c: 192: }
  7273                           ;RF.c: 193: break;
  7274  0060AA  0012               	return	
  7275  0060AC                     l15114:
  7276                           
  7277                           ;RF.c: 196: if(Conf2_ChannelD_Status)
  7278  0060AC  5028               	movf	_Conf2_ChannelD_Status,w,c
  7279  0060AE  B4D8               	btfsc	status,2,c
  7280  0060B0  D014               	goto	l15120
  7281                           
  7282                           ;RF.c: 197: {
  7283                           ;RF.c: 198: SendRF_wait(Conf2_ChannelD_OFF,2,16,4);
  7284  0060B2  0EDC               	movlw	low _Conf2_ChannelD_OFF
  7285  0060B4  0100               	movlb	0	; () banked
  7286  0060B6  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7287  0060B8  0EF2               	movlw	high _Conf2_ChannelD_OFF
  7288  0060BA  0100               	movlb	0	; () banked
  7289  0060BC  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7290  0060BE  0E02               	movlw	2
  7291  0060C0  0100               	movlb	0	; () banked
  7292  0060C2  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7293  0060C4  0E10               	movlw	16
  7294  0060C6  0100               	movlb	0	; () banked
  7295  0060C8  6F84               	movwf	SendRF_wait@size& (0+255),b
  7296  0060CA  0E04               	movlw	4
  7297  0060CC  0100               	movlb	0	; () banked
  7298  0060CE  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7299  0060D0  EC72  F048         	call	_SendRF_wait	;wreg free
  7300                           
  7301                           ;RF.c: 199: Conf2_ChannelD_Status = 0;
  7302  0060D4  0E00               	movlw	0
  7303  0060D6  6E28               	movwf	_Conf2_ChannelD_Status,c
  7304                           
  7305                           ;RF.c: 200: }
  7306  0060D8  0012               	return	
  7307  0060DA                     l15120:
  7308                           
  7309                           ;RF.c: 201: else
  7310                           ;RF.c: 202: {
  7311                           ;RF.c: 203: SendRF_wait(Conf2_ChannelD_ON,2,16,4);
  7312  0060DA  0EEC               	movlw	low _Conf2_ChannelD_ON
  7313  0060DC  0100               	movlb	0	; () banked
  7314  0060DE  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7315  0060E0  0EF2               	movlw	high _Conf2_ChannelD_ON
  7316  0060E2  0100               	movlb	0	; () banked
  7317  0060E4  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7318  0060E6  0E02               	movlw	2
  7319  0060E8  0100               	movlb	0	; () banked
  7320  0060EA  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7321  0060EC  0E10               	movlw	16
  7322  0060EE  0100               	movlb	0	; () banked
  7323  0060F0  6F84               	movwf	SendRF_wait@size& (0+255),b
  7324  0060F2  0E04               	movlw	4
  7325  0060F4  0100               	movlb	0	; () banked
  7326  0060F6  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7327  0060F8  EC72  F048         	call	_SendRF_wait	;wreg free
  7328                           
  7329                           ;RF.c: 204: Conf2_ChannelD_Status = 1;
  7330  0060FC  0E01               	movlw	1
  7331  0060FE  6E28               	movwf	_Conf2_ChannelD_Status,c
  7332                           
  7333                           ;RF.c: 205: }
  7334                           ;RF.c: 206: break;
  7335  006100  0012               	return	
  7336  006102                     l15124:
  7337                           
  7338                           ;RF.c: 209: if(Conf2_ChannelH_1_Status)
  7339  006102  5029               	movf	_Conf2_ChannelH_1_Status,w,c
  7340  006104  B4D8               	btfsc	status,2,c
  7341  006106  D014               	goto	l15130
  7342                           
  7343                           ;RF.c: 210: {
  7344                           ;RF.c: 211: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,4);
  7345  006108  0EFC               	movlw	low _Conf2_ChannelH_1_OFF
  7346  00610A  0100               	movlb	0	; () banked
  7347  00610C  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7348  00610E  0EF2               	movlw	high _Conf2_ChannelH_1_OFF
  7349  006110  0100               	movlb	0	; () banked
  7350  006112  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7351  006114  0E02               	movlw	2
  7352  006116  0100               	movlb	0	; () banked
  7353  006118  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7354  00611A  0E10               	movlw	16
  7355  00611C  0100               	movlb	0	; () banked
  7356  00611E  6F84               	movwf	SendRF_wait@size& (0+255),b
  7357  006120  0E04               	movlw	4
  7358  006122  0100               	movlb	0	; () banked
  7359  006124  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7360  006126  EC72  F048         	call	_SendRF_wait	;wreg free
  7361                           
  7362                           ;RF.c: 212: Conf2_ChannelH_1_Status = 0;
  7363  00612A  0E00               	movlw	0
  7364  00612C  6E29               	movwf	_Conf2_ChannelH_1_Status,c
  7365                           
  7366                           ;RF.c: 213: }
  7367  00612E  0012               	return	
  7368  006130                     l15130:
  7369                           
  7370                           ;RF.c: 214: else
  7371                           ;RF.c: 215: {
  7372                           ;RF.c: 216: SendRF_wait(Conf2_ChannelH_1_ON,2,16,4);
  7373  006130  0E0C               	movlw	low _Conf2_ChannelH_1_ON
  7374  006132  0100               	movlb	0	; () banked
  7375  006134  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7376  006136  0EF3               	movlw	high _Conf2_ChannelH_1_ON
  7377  006138  0100               	movlb	0	; () banked
  7378  00613A  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7379  00613C  0E02               	movlw	2
  7380  00613E  0100               	movlb	0	; () banked
  7381  006140  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7382  006142  0E10               	movlw	16
  7383  006144  0100               	movlb	0	; () banked
  7384  006146  6F84               	movwf	SendRF_wait@size& (0+255),b
  7385  006148  0E04               	movlw	4
  7386  00614A  0100               	movlb	0	; () banked
  7387  00614C  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7388  00614E  EC72  F048         	call	_SendRF_wait	;wreg free
  7389                           
  7390                           ;RF.c: 217: Conf2_ChannelH_1_Status = 1;
  7391  006152  0E01               	movlw	1
  7392  006154  6E29               	movwf	_Conf2_ChannelH_1_Status,c
  7393                           
  7394                           ;RF.c: 218: }
  7395                           ;RF.c: 219: break;
  7396  006156  0012               	return	
  7397  006158                     l15134:
  7398                           
  7399                           ;RF.c: 222: if(Conf2_ChannelH_2_Status)
  7400  006158  502A               	movf	_Conf2_ChannelH_2_Status,w,c
  7401  00615A  B4D8               	btfsc	status,2,c
  7402  00615C  D014               	goto	l15140
  7403                           
  7404                           ;RF.c: 223: {
  7405                           ;RF.c: 224: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,4);
  7406  00615E  0E1C               	movlw	low _Conf2_ChannelH_2_OFF
  7407  006160  0100               	movlb	0	; () banked
  7408  006162  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7409  006164  0EF3               	movlw	high _Conf2_ChannelH_2_OFF
  7410  006166  0100               	movlb	0	; () banked
  7411  006168  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7412  00616A  0E02               	movlw	2
  7413  00616C  0100               	movlb	0	; () banked
  7414  00616E  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7415  006170  0E10               	movlw	16
  7416  006172  0100               	movlb	0	; () banked
  7417  006174  6F84               	movwf	SendRF_wait@size& (0+255),b
  7418  006176  0E04               	movlw	4
  7419  006178  0100               	movlb	0	; () banked
  7420  00617A  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7421  00617C  EC72  F048         	call	_SendRF_wait	;wreg free
  7422                           
  7423                           ;RF.c: 225: Conf2_ChannelH_2_Status = 0;
  7424  006180  0E00               	movlw	0
  7425  006182  6E2A               	movwf	_Conf2_ChannelH_2_Status,c
  7426                           
  7427                           ;RF.c: 226: }
  7428  006184  0012               	return	
  7429  006186                     l15140:
  7430                           
  7431                           ;RF.c: 227: else
  7432                           ;RF.c: 228: {
  7433                           ;RF.c: 229: SendRF_wait(Conf2_ChannelH_2_ON,2,16,4);
  7434  006186  0E2C               	movlw	low _Conf2_ChannelH_2_ON
  7435  006188  0100               	movlb	0	; () banked
  7436  00618A  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7437  00618C  0EF3               	movlw	high _Conf2_ChannelH_2_ON
  7438  00618E  0100               	movlb	0	; () banked
  7439  006190  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7440  006192  0E02               	movlw	2
  7441  006194  0100               	movlb	0	; () banked
  7442  006196  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7443  006198  0E10               	movlw	16
  7444  00619A  0100               	movlb	0	; () banked
  7445  00619C  6F84               	movwf	SendRF_wait@size& (0+255),b
  7446  00619E  0E04               	movlw	4
  7447  0061A0  0100               	movlb	0	; () banked
  7448  0061A2  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7449  0061A4  EC72  F048         	call	_SendRF_wait	;wreg free
  7450                           
  7451                           ;RF.c: 230: Conf2_ChannelH_2_Status = 1;
  7452  0061A8  0E01               	movlw	1
  7453  0061AA  6E2A               	movwf	_Conf2_ChannelH_2_Status,c
  7454                           
  7455                           ;RF.c: 231: }
  7456                           ;RF.c: 232: break;
  7457  0061AC  0012               	return	
  7458  0061AE                     l15144:
  7459                           
  7460                           ;RF.c: 235: if(Conf2_ChannelH_3_Status)
  7461  0061AE  502B               	movf	_Conf2_ChannelH_3_Status,w,c
  7462  0061B0  B4D8               	btfsc	status,2,c
  7463  0061B2  D014               	goto	l15150
  7464                           
  7465                           ;RF.c: 236: {
  7466                           ;RF.c: 237: SendRF_wait(Conf2_ChannelH_3_OFF,2,16,4);
  7467  0061B4  0E3C               	movlw	low _Conf2_ChannelH_3_OFF
  7468  0061B6  0100               	movlb	0	; () banked
  7469  0061B8  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7470  0061BA  0EF3               	movlw	high _Conf2_ChannelH_3_OFF
  7471  0061BC  0100               	movlb	0	; () banked
  7472  0061BE  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7473  0061C0  0E02               	movlw	2
  7474  0061C2  0100               	movlb	0	; () banked
  7475  0061C4  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7476  0061C6  0E10               	movlw	16
  7477  0061C8  0100               	movlb	0	; () banked
  7478  0061CA  6F84               	movwf	SendRF_wait@size& (0+255),b
  7479  0061CC  0E04               	movlw	4
  7480  0061CE  0100               	movlb	0	; () banked
  7481  0061D0  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7482  0061D2  EC72  F048         	call	_SendRF_wait	;wreg free
  7483                           
  7484                           ;RF.c: 238: Conf2_ChannelH_3_Status = 0;
  7485  0061D6  0E00               	movlw	0
  7486  0061D8  6E2B               	movwf	_Conf2_ChannelH_3_Status,c
  7487                           
  7488                           ;RF.c: 239: }
  7489  0061DA  0012               	return	
  7490  0061DC                     l15150:
  7491                           
  7492                           ;RF.c: 240: else
  7493                           ;RF.c: 241: {
  7494                           ;RF.c: 242: SendRF_wait(Conf2_ChannelH_3_ON,2,16,4);
  7495  0061DC  0E4C               	movlw	low _Conf2_ChannelH_3_ON
  7496  0061DE  0100               	movlb	0	; () banked
  7497  0061E0  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7498  0061E2  0EF3               	movlw	high _Conf2_ChannelH_3_ON
  7499  0061E4  0100               	movlb	0	; () banked
  7500  0061E6  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7501  0061E8  0E02               	movlw	2
  7502  0061EA  0100               	movlb	0	; () banked
  7503  0061EC  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7504  0061EE  0E10               	movlw	16
  7505  0061F0  0100               	movlb	0	; () banked
  7506  0061F2  6F84               	movwf	SendRF_wait@size& (0+255),b
  7507  0061F4  0E04               	movlw	4
  7508  0061F6  0100               	movlb	0	; () banked
  7509  0061F8  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7510  0061FA  EC72  F048         	call	_SendRF_wait	;wreg free
  7511                           
  7512                           ;RF.c: 243: Conf2_ChannelH_3_Status = 1;
  7513  0061FE  0E01               	movlw	1
  7514  006200  6E2B               	movwf	_Conf2_ChannelH_3_Status,c
  7515                           
  7516                           ;RF.c: 248: }
  7517                           
  7518                           ;RF.c: 247: break;
  7519                           
  7520                           ;RF.c: 246: default:
  7521                           
  7522                           ;RF.c: 244: }
  7523                           ;RF.c: 245: break;
  7524  006202  0012               	return	
  7525  006204                     l15156:
  7526  006204  0100               	movlb	0	; () banked
  7527  006206  5186               	movf	SendRF_Channel@channel& (0+255),w,b
  7528                           
  7529                           ; Switch size 1, requested type "space"
  7530                           ; Number of cases is 8, Range of values is 0 to 7
  7531                           ; switch strategies available:
  7532                           ; Name         Instructions Cycles
  7533                           ; simple_byte           25    13 (average)
  7534                           ;	Chosen strategy is simple_byte
  7535  006208  0A00               	xorlw	0	; case 0
  7536  00620A  B4D8               	btfsc	status,2,c
  7537  00620C  D6EE               	goto	l15098
  7538  00620E  0A01               	xorlw	1	; case 1
  7539  006210  B4D8               	btfsc	status,2,c
  7540  006212  D6FD               	goto	l15100
  7541  006214  0A03               	xorlw	3	; case 2
  7542  006216  B4D8               	btfsc	status,2,c
  7543  006218  D70C               	goto	l15102
  7544  00621A  0A01               	xorlw	1	; case 3
  7545  00621C  B4D8               	btfsc	status,2,c
  7546  00621E  D71B               	goto	l15104
  7547  006220  0A07               	xorlw	7	; case 4
  7548  006222  B4D8               	btfsc	status,2,c
  7549  006224  D743               	goto	l15114
  7550  006226  0A01               	xorlw	1	; case 5
  7551  006228  B4D8               	btfsc	status,2,c
  7552  00622A  D76B               	goto	l15124
  7553  00622C  0A03               	xorlw	3	; case 6
  7554  00622E  B4D8               	btfsc	status,2,c
  7555  006230  D793               	goto	l15134
  7556  006232  0A01               	xorlw	1	; case 7
  7557  006234  A4D8               	btfss	status,2,c
  7558  006236  0012               	return	
  7559  006238  D7BA               	goto	l15144
  7560                           
  7561                           ; BSR set to: 0
  7562  00623A  0012               	return		;funcret
  7563  00623C                     __end_of_SendRF_Channel:
  7564                           	opt stack 0
  7565                           tblptru	equ	0xFF8
  7566                           tblptrh	equ	0xFF7
  7567                           tblptrl	equ	0xFF6
  7568                           tablat	equ	0xFF5
  7569                           prodh	equ	0xFF4
  7570                           prodl	equ	0xFF3
  7571                           intcon	equ	0xFF2
  7572                           postinc0	equ	0xFEE
  7573                           wreg	equ	0xFE8
  7574                           postdec1	equ	0xFE5
  7575                           fsr1h	equ	0xFE2
  7576                           fsr1l	equ	0xFE1
  7577                           indf2	equ	0xFDF
  7578                           postinc2	equ	0xFDE
  7579                           fsr2h	equ	0xFDA
  7580                           fsr2l	equ	0xFD9
  7581                           status	equ	0xFD8
  7582                           
  7583 ;; *************** function _ReadPushButton *****************
  7584 ;; Defined at:
  7585 ;;		line 52 in file "Button.c"
  7586 ;; Parameters:    Size  Location     Type
  7587 ;;		None
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;		None
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  1    wreg      unsigned char 
  7592 ;; Registers used:
  7593 ;;		wreg
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7603 ;;Total ram usage:        0 bytes
  7604 ;; Hardware stack levels used:    1
  7605 ;; Hardware stack levels required when called:    6
  7606 ;; This function calls:
  7607 ;;		Nothing
  7608 ;; This function is called by:
  7609 ;;		_UseIRCode
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           
  7613                           	psect	text3
  7614  009480                     __ptext3:
  7615                           	opt stack 0
  7616  009480                     _ReadPushButton:
  7617                           	opt stack 23
  7618                           
  7619                           ;Button.c: 55: if((PORTC & 0x01) != 0x01)
  7620                           
  7621                           ;incstack = 0
  7622  009480  B082               	btfsc	3970,0,c	;volatile
  7623  009482  D002               	goto	l15066
  7624                           
  7625                           ;Button.c: 56: {
  7626                           ;Button.c: 57: return 1;
  7627  009484  0E01               	movlw	1
  7628  009486  0012               	return	
  7629  009488                     l15066:
  7630                           
  7631                           ;Button.c: 58: }
  7632                           ;Button.c: 59: return 0;
  7633  009488  0E00               	movlw	0
  7634  00948A  0012               	return	
  7635  00948C  0012               	return		;funcret
  7636  00948E                     __end_of_ReadPushButton:
  7637                           	opt stack 0
  7638                           tblptru	equ	0xFF8
  7639                           tblptrh	equ	0xFF7
  7640                           tblptrl	equ	0xFF6
  7641                           tablat	equ	0xFF5
  7642                           prodh	equ	0xFF4
  7643                           prodl	equ	0xFF3
  7644                           intcon	equ	0xFF2
  7645                           postinc0	equ	0xFEE
  7646                           wreg	equ	0xFE8
  7647                           postdec1	equ	0xFE5
  7648                           fsr1h	equ	0xFE2
  7649                           fsr1l	equ	0xFE1
  7650                           indf2	equ	0xFDF
  7651                           postinc2	equ	0xFDE
  7652                           fsr2h	equ	0xFDA
  7653                           fsr2l	equ	0xFD9
  7654                           status	equ	0xFD8
  7655                           
  7656 ;; *************** function _ReadCodeButtons *****************
  7657 ;; Defined at:
  7658 ;;		line 67 in file "Button.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;		None
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;  temp            1   34[BANK0 ] unsigned char 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  1    wreg      unsigned char 
  7665 ;; Registers used:
  7666 ;;		wreg, status,2, status,0, cstack
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7673 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7675 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7676 ;;Total ram usage:        1 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; Hardware stack levels required when called:    7
  7679 ;; This function calls:
  7680 ;;		_delayUS
  7681 ;; This function is called by:
  7682 ;;		_UseIRCode
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text4
  7687  008EE6                     __ptext4:
  7688                           	opt stack 0
  7689  008EE6                     _ReadCodeButtons:
  7690                           	opt stack 22
  7691                           
  7692                           ;Button.c: 69: unsigned char temp = 0;
  7693                           
  7694                           ;incstack = 0
  7695  008EE6  0E00               	movlw	0
  7696  008EE8  0100               	movlb	0	; () banked
  7697  008EEA  6F82               	movwf	ReadCodeButtons@temp& (0+255),b
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;Button.c: 71: (LATC &= ~0x10);
  7701  008EEC  988B               	bcf	3979,4,c	;volatile
  7702                           
  7703                           ; BSR set to: 0
  7704                           ;Button.c: 72: delayUS(5);
  7705  008EEE  0E05               	movlw	5
  7706  008EF0  0100               	movlb	0	; () banked
  7707  008EF2  6F79               	movwf	delayUS@US& (0+255),b
  7708  008EF4  0E00               	movlw	0
  7709  008EF6  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  7710  008EF8  0E00               	movlw	0
  7711  008EFA  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  7712  008EFC  0E00               	movlw	0
  7713  008EFE  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  7714  008F00  EC48  F047         	call	_delayUS	;wreg free
  7715                           
  7716                           ;Button.c: 75: if((PORTB & 0x01) != 0x01)
  7717  008F04  B081               	btfsc	3969,0,c	;volatile
  7718  008F06  D004               	goto	l15080
  7719                           
  7720                           ;Button.c: 76: {
  7721                           ;Button.c: 77: temp +=8;
  7722  008F08  0E08               	movlw	8
  7723  008F0A  0100               	movlb	0	; () banked
  7724  008F0C  2782               	addwf	ReadCodeButtons@temp& (0+255),f,b
  7725  008F0E  D000               	goto	l15080
  7726  008F10                     l15080:
  7727                           
  7728                           ;Button.c: 78: }
  7729                           ;Button.c: 79: if((PORTB & 0x02) != 0x02)
  7730  008F10  B281               	btfsc	3969,1,c	;volatile
  7731  008F12  D004               	goto	l15084
  7732                           
  7733                           ;Button.c: 80: {
  7734                           ;Button.c: 81: temp +=4;
  7735  008F14  0E04               	movlw	4
  7736  008F16  0100               	movlb	0	; () banked
  7737  008F18  2782               	addwf	ReadCodeButtons@temp& (0+255),f,b
  7738  008F1A  D000               	goto	l15084
  7739  008F1C                     l15084:
  7740                           
  7741                           ;Button.c: 82: }
  7742                           ;Button.c: 83: if((PORTB & 0x04) != 0x04)
  7743  008F1C  B481               	btfsc	3969,2,c	;volatile
  7744  008F1E  D004               	goto	l15088
  7745                           
  7746                           ;Button.c: 84: {
  7747                           ;Button.c: 85: temp +=2;
  7748  008F20  0E02               	movlw	2
  7749  008F22  0100               	movlb	0	; () banked
  7750  008F24  2782               	addwf	ReadCodeButtons@temp& (0+255),f,b
  7751  008F26  D000               	goto	l15088
  7752  008F28                     l15088:
  7753                           
  7754                           ;Button.c: 86: }
  7755                           ;Button.c: 87: if((PORTB & 0x08) != 0x08)
  7756  008F28  B681               	btfsc	3969,3,c	;volatile
  7757  008F2A  D002               	goto	l1644
  7758                           
  7759                           ;Button.c: 88: {
  7760                           ;Button.c: 89: temp +=1;
  7761  008F2C  0100               	movlb	0	; () banked
  7762  008F2E  2B82               	incf	ReadCodeButtons@temp& (0+255),f,b
  7763  008F30                     l1644:
  7764                           
  7765                           ;Button.c: 90: }
  7766                           ;Button.c: 91: (LATC |= 0x10);
  7767  008F30  888B               	bsf	3979,4,c	;volatile
  7768                           
  7769                           ;Button.c: 92: return temp;
  7770  008F32  0100               	movlb	0	; () banked
  7771  008F34  5182               	movf	ReadCodeButtons@temp& (0+255),w,b
  7772  008F36  0012               	return	
  7773                           
  7774                           ; BSR set to: 0
  7775                           
  7776                           ; BSR set to: 0
  7777  008F38  0012               	return		;funcret
  7778  008F3A                     __end_of_ReadCodeButtons:
  7779                           	opt stack 0
  7780                           tblptru	equ	0xFF8
  7781                           tblptrh	equ	0xFF7
  7782                           tblptrl	equ	0xFF6
  7783                           tablat	equ	0xFF5
  7784                           prodh	equ	0xFF4
  7785                           prodl	equ	0xFF3
  7786                           intcon	equ	0xFF2
  7787                           postinc0	equ	0xFEE
  7788                           wreg	equ	0xFE8
  7789                           postdec1	equ	0xFE5
  7790                           fsr1h	equ	0xFE2
  7791                           fsr1l	equ	0xFE1
  7792                           indf2	equ	0xFDF
  7793                           postinc2	equ	0xFDE
  7794                           fsr2h	equ	0xFDA
  7795                           fsr2l	equ	0xFD9
  7796                           status	equ	0xFD8
  7797                           
  7798 ;; *************** function _UseBluetooth *****************
  7799 ;; Defined at:
  7800 ;;		line 280 in file "Bluetooth.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;  String          2    0[BANK2 ] PTR unsigned char 
  7803 ;;		 -> main@BluetoothString(255), 
  7804 ;;  StringPos       1    2[BANK2 ] unsigned char 
  7805 ;; Auto vars:     Size  Location     Type
  7806 ;;  buf           100   15[BANK2 ] unsigned char [100]
  7807 ;;  rfchannelSTR   10  115[BANK2 ] unsigned char [10]
  7808 ;;  temp            4  142[BANK2 ] unsigned long 
  7809 ;;  EnteredNEC      4  133[BANK2 ] unsigned long 
  7810 ;;  tempNec         4  126[BANK2 ] unsigned long 
  7811 ;;  i               1  146[BANK2 ] unsigned char 
  7812 ;;  NecCommand      1  141[BANK2 ] unsigned char 
  7813 ;;  NecAddress      1  140[BANK2 ] unsigned char 
  7814 ;;  rfconf          1  139[BANK2 ] unsigned char 
  7815 ;;  tempRFArray     1  138[BANK2 ] unsigned char 
  7816 ;;  ok              1  137[BANK2 ] unsigned char 
  7817 ;;  device          1  132[BANK2 ] unsigned char 
  7818 ;;  EmptyPlace      1  131[BANK2 ] unsigned char 
  7819 ;;  timeout         1  130[BANK2 ] unsigned char 
  7820 ;;  set             1  125[BANK2 ] unsigned char 
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1    wreg      unsigned char 
  7823 ;; Registers used:
  7824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7830 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7831 ;;      Locals:         0       0       0     132       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7832 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7833 ;;      Totals:         0       0       0     147       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7834 ;;Total ram usage:      147 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; Hardware stack levels required when called:   11
  7837 ;; This function calls:
  7838 ;;		_ClearUSART
  7839 ;;		_DecodeNEC
  7840 ;;		_EncodeNEC
  7841 ;;		_GetNumber
  7842 ;;		_GetStringAfterComma
  7843 ;;		_ReadVoltage
  7844 ;;		_SendNEC_wait
  7845 ;;		_SendRF_wait
  7846 ;;		_StringAddEqual
  7847 ;;		_StringContainsCaseInsensitive
  7848 ;;		_StringMatch
  7849 ;;		_StringMatchCaseInsensitive
  7850 ;;		_SyncGlobalToEEPROM
  7851 ;;		_UARTchar
  7852 ;;		_UARTcommandMenu
  7853 ;;		_UARTstring
  7854 ;;		_UARTstringCRLN
  7855 ;;		_WaitForIRsignal
  7856 ;;		_cleanBuffer
  7857 ;;		_delayUS
  7858 ;;		_lowercaseString
  7859 ;;		_sprintf
  7860 ;; This function is called by:
  7861 ;;		_main
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           	psect	text5
  7866  0001F6                     __ptext5:
  7867                           	opt stack 0
  7868  0001F6                     _UseBluetooth:
  7869                           	opt stack 19
  7870                           
  7871                           ;Bluetooth.c: 282: unsigned char ok = 1;
  7872                           
  7873                           ; BSR set to: 0
  7874                           ;incstack = 0
  7875  0001F6  0E01               	movlw	1
  7876  0001F8  0102               	movlb	2	; () banked
  7877  0001FA  6F89               	movwf	UseBluetooth@ok& (0+255),b
  7878                           
  7879                           ;Bluetooth.c: 284: unsigned long EnteredNEC = 0;
  7880  0001FC  0E00               	movlw	0
  7881  0001FE  0102               	movlb	2	; () banked
  7882  000200  6F85               	movwf	UseBluetooth@EnteredNEC& (0+255),b
  7883  000202  0E00               	movlw	0
  7884  000204  6F86               	movwf	(UseBluetooth@EnteredNEC+1)& (0+255),b
  7885  000206  0E00               	movlw	0
  7886  000208  6F87               	movwf	(UseBluetooth@EnteredNEC+2)& (0+255),b
  7887  00020A  0E00               	movlw	0
  7888  00020C  6F88               	movwf	(UseBluetooth@EnteredNEC+3)& (0+255),b
  7889                           
  7890                           ;Bluetooth.c: 285: unsigned char NecAddress = 0;
  7891  00020E  0E00               	movlw	0
  7892  000210  0102               	movlb	2	; () banked
  7893  000212  6F8C               	movwf	UseBluetooth@NecAddress& (0+255),b
  7894                           
  7895                           ;Bluetooth.c: 286: unsigned char NecCommand = 0;
  7896  000214  0E00               	movlw	0
  7897  000216  0102               	movlb	2	; () banked
  7898  000218  6F8D               	movwf	UseBluetooth@NecCommand& (0+255),b
  7899                           
  7900                           ;Bluetooth.c: 287: unsigned long temp = 0;
  7901  00021A  0E00               	movlw	0
  7902  00021C  0102               	movlb	2	; () banked
  7903  00021E  6F8E               	movwf	UseBluetooth@temp& (0+255),b
  7904  000220  0E00               	movlw	0
  7905  000222  6F8F               	movwf	(UseBluetooth@temp+1)& (0+255),b
  7906  000224  0E00               	movlw	0
  7907  000226  6F90               	movwf	(UseBluetooth@temp+2)& (0+255),b
  7908  000228  0E00               	movlw	0
  7909  00022A  6F91               	movwf	(UseBluetooth@temp+3)& (0+255),b
  7910                           
  7911                           ;Bluetooth.c: 288: unsigned long tempNec = 0;
  7912  00022C  0E00               	movlw	0
  7913  00022E  0102               	movlb	2	; () banked
  7914  000230  6F7E               	movwf	UseBluetooth@tempNec& (0+255),b
  7915  000232  0E00               	movlw	0
  7916  000234  6F7F               	movwf	(UseBluetooth@tempNec+1)& (0+255),b
  7917  000236  0E00               	movlw	0
  7918  000238  6F80               	movwf	(UseBluetooth@tempNec+2)& (0+255),b
  7919  00023A  0E00               	movlw	0
  7920  00023C  6F81               	movwf	(UseBluetooth@tempNec+3)& (0+255),b
  7921                           
  7922                           ;Bluetooth.c: 289: unsigned char buf[100];
  7923                           ;Bluetooth.c: 290: unsigned char timeout =0;
  7924  00023E  0E00               	movlw	0
  7925  000240  0102               	movlb	2	; () banked
  7926  000242  6F82               	movwf	UseBluetooth@timeout& (0+255),b
  7927                           
  7928                           ;Bluetooth.c: 291: unsigned char rfchannelSTR[10];
  7929                           ;Bluetooth.c: 292: unsigned char rfconf, i, tempRFArray;
  7930                           ;Bluetooth.c: 293: unsigned char device = 0;
  7931  000244  0E00               	movlw	0
  7932  000246  0102               	movlb	2	; () banked
  7933  000248  6F84               	movwf	UseBluetooth@device& (0+255),b
  7934                           
  7935                           ;Bluetooth.c: 294: unsigned char EmptyPlace = 0;
  7936  00024A  0E00               	movlw	0
  7937  00024C  0102               	movlb	2	; () banked
  7938  00024E  6F83               	movwf	UseBluetooth@EmptyPlace& (0+255),b
  7939                           
  7940                           ;Bluetooth.c: 295: unsigned char set = 0;
  7941  000250  0E00               	movlw	0
  7942  000252  0102               	movlb	2	; () banked
  7943  000254  6F7D               	movwf	UseBluetooth@set& (0+255),b
  7944                           
  7945                           ; BSR set to: 2
  7946                           ;Bluetooth.c: 297: cleanBuffer(buf,100);
  7947  000256  0E0F               	movlw	low UseBluetooth@buf
  7948  000258  0100               	movlb	0	; () banked
  7949  00025A  6F79               	movwf	cleanBuffer@data& (0+255),b
  7950  00025C  0E02               	movlw	high UseBluetooth@buf
  7951  00025E  0100               	movlb	0	; () banked
  7952  000260  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
  7953  000262  0E00               	movlw	0
  7954  000264  0100               	movlb	0	; () banked
  7955  000266  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
  7956  000268  0E64               	movlw	100
  7957  00026A  6F7B               	movwf	cleanBuffer@count& (0+255),b
  7958  00026C  EC97  F046         	call	_cleanBuffer	;wreg free
  7959                           
  7960                           ;Bluetooth.c: 298: cleanBuffer(rfchannelSTR,10);
  7961  000270  0E73               	movlw	low UseBluetooth@rfchannelSTR
  7962  000272  0100               	movlb	0	; () banked
  7963  000274  6F79               	movwf	cleanBuffer@data& (0+255),b
  7964  000276  0E02               	movlw	high UseBluetooth@rfchannelSTR
  7965  000278  0100               	movlb	0	; () banked
  7966  00027A  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
  7967  00027C  0E00               	movlw	0
  7968  00027E  0100               	movlb	0	; () banked
  7969  000280  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
  7970  000282  0E0A               	movlw	10
  7971  000284  6F7B               	movwf	cleanBuffer@count& (0+255),b
  7972  000286  EC97  F046         	call	_cleanBuffer	;wreg free
  7973                           
  7974                           ;Bluetooth.c: 300: if(StringContainsCaseInsensitive(String,(unsigned char *)"Conf1"))
  7975  00028A  C200  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  7976  00028E  C201  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  7977  000292  0EC6               	movlw	low STR_20
  7978  000294  0100               	movlb	0	; () banked
  7979  000296  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  7980  000298  0EFF               	movlw	high STR_20
  7981  00029A  0100               	movlb	0	; () banked
  7982  00029C  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  7983  00029E  EC5A  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  7984  0002A2  0900               	iorlw	0
  7985  0002A4  B4D8               	btfsc	status,2,c
  7986  0002A6  D083               	goto	l15464
  7987                           
  7988                           ;Bluetooth.c: 301: {
  7989                           ;Bluetooth.c: 302: if(StringMatchCaseInsensitive(String,Conf1_ChannelD_STR))
  7990  0002A8  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  7991  0002AC  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  7992  0002B0  0E5C               	movlw	low _Conf1_ChannelD_STR
  7993  0002B2  0100               	movlb	0	; () banked
  7994  0002B4  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  7995  0002B6  0EF3               	movlw	high _Conf1_ChannelD_STR
  7996  0002B8  0100               	movlb	0	; () banked
  7997  0002BA  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  7998  0002BC  EC15  F043         	call	_StringMatchCaseInsensitive	;wreg free
  7999  0002C0  0900               	iorlw	0
  8000  0002C2  B4D8               	btfsc	status,2,c
  8001  0002C4  D012               	goto	l15446
  8002                           
  8003                           ;Bluetooth.c: 303: {
  8004                           ;Bluetooth.c: 305: SendRF_wait(Conf1_ChannelD,1,12,8);
  8005  0002C6  0E97               	movlw	low _Conf1_ChannelD
  8006  0002C8  0100               	movlb	0	; () banked
  8007  0002CA  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8008  0002CC  0EF3               	movlw	high _Conf1_ChannelD
  8009  0002CE  0100               	movlb	0	; () banked
  8010  0002D0  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8011  0002D2  0E01               	movlw	1
  8012  0002D4  0100               	movlb	0	; () banked
  8013  0002D6  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8014  0002D8  0E0C               	movlw	12
  8015  0002DA  0100               	movlb	0	; () banked
  8016  0002DC  6F84               	movwf	SendRF_wait@size& (0+255),b
  8017  0002DE  0E08               	movlw	8
  8018  0002E0  0100               	movlb	0	; () banked
  8019  0002E2  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8020  0002E4  EC72  F048         	call	_SendRF_wait	;wreg free
  8021                           
  8022                           ;Bluetooth.c: 306: }
  8023  0002E8  D054               	goto	l15458
  8024  0002EA                     l15446:
  8025                           
  8026                           ;Bluetooth.c: 307: else if(StringMatchCaseInsensitive(String,Conf1_ChannelE_STR))
  8027  0002EA  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8028  0002EE  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8029  0002F2  0E6B               	movlw	low _Conf1_ChannelE_STR
  8030  0002F4  0100               	movlb	0	; () banked
  8031  0002F6  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8032  0002F8  0EF3               	movlw	high _Conf1_ChannelE_STR
  8033  0002FA  0100               	movlb	0	; () banked
  8034  0002FC  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8035  0002FE  EC15  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8036  000302  0900               	iorlw	0
  8037  000304  B4D8               	btfsc	status,2,c
  8038  000306  D012               	goto	l15450
  8039                           
  8040                           ;Bluetooth.c: 308: {
  8041                           ;Bluetooth.c: 310: SendRF_wait(Conf1_ChannelE,1,12,8);
  8042  000308  0EA3               	movlw	low _Conf1_ChannelE
  8043  00030A  0100               	movlb	0	; () banked
  8044  00030C  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8045  00030E  0EF3               	movlw	high _Conf1_ChannelE
  8046  000310  0100               	movlb	0	; () banked
  8047  000312  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8048  000314  0E01               	movlw	1
  8049  000316  0100               	movlb	0	; () banked
  8050  000318  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8051  00031A  0E0C               	movlw	12
  8052  00031C  0100               	movlb	0	; () banked
  8053  00031E  6F84               	movwf	SendRF_wait@size& (0+255),b
  8054  000320  0E08               	movlw	8
  8055  000322  0100               	movlb	0	; () banked
  8056  000324  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8057  000326  EC72  F048         	call	_SendRF_wait	;wreg free
  8058                           
  8059                           ;Bluetooth.c: 311: }
  8060  00032A  D033               	goto	l15458
  8061  00032C                     l15450:
  8062                           
  8063                           ;Bluetooth.c: 312: else if(StringMatchCaseInsensitive(String,Conf1_ChannelF_STR))
  8064  00032C  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8065  000330  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8066  000334  0E7A               	movlw	low _Conf1_ChannelF_STR
  8067  000336  0100               	movlb	0	; () banked
  8068  000338  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8069  00033A  0EF3               	movlw	high _Conf1_ChannelF_STR
  8070  00033C  0100               	movlb	0	; () banked
  8071  00033E  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8072  000340  EC15  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8073  000344  0900               	iorlw	0
  8074  000346  B4D8               	btfsc	status,2,c
  8075  000348  D012               	goto	l15454
  8076                           
  8077                           ;Bluetooth.c: 313: {
  8078                           ;Bluetooth.c: 315: SendRF_wait(Conf1_ChannelF,1,12,8);
  8079  00034A  0EAF               	movlw	low _Conf1_ChannelF
  8080  00034C  0100               	movlb	0	; () banked
  8081  00034E  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8082  000350  0EF3               	movlw	high _Conf1_ChannelF
  8083  000352  0100               	movlb	0	; () banked
  8084  000354  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8085  000356  0E01               	movlw	1
  8086  000358  0100               	movlb	0	; () banked
  8087  00035A  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8088  00035C  0E0C               	movlw	12
  8089  00035E  0100               	movlb	0	; () banked
  8090  000360  6F84               	movwf	SendRF_wait@size& (0+255),b
  8091  000362  0E08               	movlw	8
  8092  000364  0100               	movlb	0	; () banked
  8093  000366  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8094  000368  EC72  F048         	call	_SendRF_wait	;wreg free
  8095                           
  8096                           ;Bluetooth.c: 316: }
  8097  00036C  D012               	goto	l15458
  8098  00036E                     l15454:
  8099                           
  8100                           ;Bluetooth.c: 317: else
  8101                           ;Bluetooth.c: 318: {
  8102                           ;Bluetooth.c: 320: UARTstring((unsigned char *)SYNTAX_ERR);
  8103  00036E  0E89               	movlw	low _SYNTAX_ERR
  8104  000370  0100               	movlb	0	; () banked
  8105  000372  6F7A               	movwf	UARTstring@data& (0+255),b
  8106  000374  0EF3               	movlw	high _SYNTAX_ERR
  8107  000376  0100               	movlb	0	; () banked
  8108  000378  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8109  00037A  ECC4  F046         	call	_UARTstring	;wreg free
  8110                           
  8111                           ;Bluetooth.c: 321: UARTstring((unsigned char *)CRLN);
  8112  00037E  0ED1               	movlw	low _CRLN
  8113  000380  0100               	movlb	0	; () banked
  8114  000382  6F7A               	movwf	UARTstring@data& (0+255),b
  8115  000384  0EF3               	movlw	high _CRLN
  8116  000386  0100               	movlb	0	; () banked
  8117  000388  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8118  00038A  ECC4  F046         	call	_UARTstring	;wreg free
  8119                           
  8120                           ;Bluetooth.c: 322: return 0;
  8121                           ;	Return value of _UseBluetooth is never used
  8122  00038E  0012               	return	
  8123  000390  D000               	goto	l15458
  8124  000392                     l15458:
  8125                           
  8126                           ;Bluetooth.c: 323: }
  8127                           ;Bluetooth.c: 324: if(ok)
  8128  000392  0102               	movlb	2	; () banked
  8129  000394  5189               	movf	UseBluetooth@ok& (0+255),w,b
  8130  000396  0102               	movlb	2	; () banked
  8131  000398  B4D8               	btfsc	status,2,c
  8132  00039A  0012               	return	
  8133                           
  8134                           ; BSR set to: 2
  8135                           ;Bluetooth.c: 325: {
  8136                           ;Bluetooth.c: 326: UARTstringCRLN((unsigned char *)"Configuration 1 RF code sent");
  8137  00039C  0E2A               	movlw	low STR_21
  8138  00039E  0100               	movlb	0	; () banked
  8139  0003A0  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8140  0003A2  0EFB               	movlw	high STR_21
  8141  0003A4  0100               	movlb	0	; () banked
  8142  0003A6  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8143  0003A8  EC69  F045         	call	_UARTstringCRLN	;wreg free
  8144                           
  8145                           ;Bluetooth.c: 328: }
  8146                           ;Bluetooth.c: 329: }
  8147                           
  8148                           ;Bluetooth.c: 327: return 1;
  8149                           ;	Return value of _UseBluetooth is never used
  8150  0003AC  0012               	return	
  8151  0003AE                     l15464:
  8152                           
  8153                           ;Bluetooth.c: 330: else if(StringContainsCaseInsensitive(String,(unsigned char *)"Conf2"
      +                          ))
  8154  0003AE  C200  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  8155  0003B2  C201  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  8156  0003B6  0ECC               	movlw	low STR_22
  8157  0003B8  0100               	movlb	0	; () banked
  8158  0003BA  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  8159  0003BC  0EFF               	movlw	high STR_22
  8160  0003BE  0100               	movlb	0	; () banked
  8161  0003C0  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  8162  0003C2  EC5A  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  8163  0003C6  0900               	iorlw	0
  8164  0003C8  B4D8               	btfsc	status,2,c
  8165  0003CA  D16A               	goto	l15516
  8166                           
  8167                           ;Bluetooth.c: 331: {
  8168                           ;Bluetooth.c: 332: if(StringMatchCaseInsensitive(String,Conf2_ChannelB_ON_STR))
  8169  0003CC  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8170  0003D0  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8171  0003D4  0E98               	movlw	low _Conf2_ChannelB_ON_STR
  8172  0003D6  0100               	movlb	0	; () banked
  8173  0003D8  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8174  0003DA  0EF2               	movlw	high _Conf2_ChannelB_ON_STR
  8175  0003DC  0100               	movlb	0	; () banked
  8176  0003DE  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8177  0003E0  EC15  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8178  0003E4  0900               	iorlw	0
  8179  0003E6  B4D8               	btfsc	status,2,c
  8180  0003E8  D012               	goto	l15470
  8181                           
  8182                           ;Bluetooth.c: 333: {
  8183                           ;Bluetooth.c: 335: SendRF_wait(Conf2_ChannelB_ON,2,16,8);
  8184  0003EA  0ECC               	movlw	low _Conf2_ChannelB_ON
  8185  0003EC  0100               	movlb	0	; () banked
  8186  0003EE  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8187  0003F0  0EF2               	movlw	high _Conf2_ChannelB_ON
  8188  0003F2  0100               	movlb	0	; () banked
  8189  0003F4  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8190  0003F6  0E02               	movlw	2
  8191  0003F8  0100               	movlb	0	; () banked
  8192  0003FA  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8193  0003FC  0E10               	movlw	16
  8194  0003FE  0100               	movlb	0	; () banked
  8195  000400  6F84               	movwf	SendRF_wait@size& (0+255),b
  8196  000402  0E08               	movlw	8
  8197  000404  0100               	movlb	0	; () banked
  8198  000406  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8199  000408  EC72  F048         	call	_SendRF_wait	;wreg free
  8200                           
  8201                           ;Bluetooth.c: 336: }
  8202  00040C  D13B               	goto	l15510
  8203  00040E                     l15470:
  8204                           
  8205                           ;Bluetooth.c: 337: else if(StringMatchCaseInsensitive(String,Conf2_ChannelB_OFF_STR))
  8206  00040E  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8207  000412  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8208  000416  0E72               	movlw	low _Conf2_ChannelB_OFF_STR
  8209  000418  0100               	movlb	0	; () banked
  8210  00041A  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8211  00041C  0EF2               	movlw	high _Conf2_ChannelB_OFF_STR
  8212  00041E  0100               	movlb	0	; () banked
  8213  000420  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8214  000422  EC15  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8215  000426  0900               	iorlw	0
  8216  000428  B4D8               	btfsc	status,2,c
  8217  00042A  D012               	goto	l15474
  8218                           
  8219                           ;Bluetooth.c: 338: {
  8220                           ;Bluetooth.c: 340: SendRF_wait(Conf2_ChannelB_OFF,2,16,8);
  8221  00042C  0EBC               	movlw	low _Conf2_ChannelB_OFF
  8222  00042E  0100               	movlb	0	; () banked
  8223  000430  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8224  000432  0EF2               	movlw	high _Conf2_ChannelB_OFF
  8225  000434  0100               	movlb	0	; () banked
  8226  000436  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8227  000438  0E02               	movlw	2
  8228  00043A  0100               	movlb	0	; () banked
  8229  00043C  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8230  00043E  0E10               	movlw	16
  8231  000440  0100               	movlb	0	; () banked
  8232  000442  6F84               	movwf	SendRF_wait@size& (0+255),b
  8233  000444  0E08               	movlw	8
  8234  000446  0100               	movlb	0	; () banked
  8235  000448  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8236  00044A  EC72  F048         	call	_SendRF_wait	;wreg free
  8237                           
  8238                           ;Bluetooth.c: 341: }
  8239  00044E  D11A               	goto	l15510
  8240  000450                     l15474:
  8241                           
  8242                           ;Bluetooth.c: 342: else if(StringMatchCaseInsensitive(String,Conf2_ChannelD_ON_STR))
  8243  000450  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8244  000454  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8245  000458  0EAA               	movlw	low _Conf2_ChannelD_ON_STR
  8246  00045A  0100               	movlb	0	; () banked
  8247  00045C  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8248  00045E  0EF2               	movlw	high _Conf2_ChannelD_ON_STR
  8249  000460  0100               	movlb	0	; () banked
  8250  000462  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8251  000464  EC15  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8252  000468  0900               	iorlw	0
  8253  00046A  B4D8               	btfsc	status,2,c
  8254  00046C  D012               	goto	l15478
  8255                           
  8256                           ;Bluetooth.c: 343: {
  8257                           ;Bluetooth.c: 345: SendRF_wait(Conf2_ChannelD_ON,2,16,8);
  8258  00046E  0EEC               	movlw	low _Conf2_ChannelD_ON
  8259  000470  0100               	movlb	0	; () banked
  8260  000472  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8261  000474  0EF2               	movlw	high _Conf2_ChannelD_ON
  8262  000476  0100               	movlb	0	; () banked
  8263  000478  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8264  00047A  0E02               	movlw	2
  8265  00047C  0100               	movlb	0	; () banked
  8266  00047E  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8267  000480  0E10               	movlw	16
  8268  000482  0100               	movlb	0	; () banked
  8269  000484  6F84               	movwf	SendRF_wait@size& (0+255),b
  8270  000486  0E08               	movlw	8
  8271  000488  0100               	movlb	0	; () banked
  8272  00048A  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8273  00048C  EC72  F048         	call	_SendRF_wait	;wreg free
  8274                           
  8275                           ;Bluetooth.c: 346: }
  8276  000490  D0F9               	goto	l15510
  8277  000492                     l15478:
  8278                           
  8279                           ;Bluetooth.c: 347: else if(StringMatchCaseInsensitive(String,Conf2_ChannelD_OFF_STR))
  8280  000492  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8281  000496  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8282  00049A  0E85               	movlw	low _Conf2_ChannelD_OFF_STR
  8283  00049C  0100               	movlb	0	; () banked
  8284  00049E  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8285  0004A0  0EF2               	movlw	high _Conf2_ChannelD_OFF_STR
  8286  0004A2  0100               	movlb	0	; () banked
  8287  0004A4  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8288  0004A6  EC15  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8289  0004AA  0900               	iorlw	0
  8290  0004AC  B4D8               	btfsc	status,2,c
  8291  0004AE  D012               	goto	l15482
  8292                           
  8293                           ;Bluetooth.c: 348: {
  8294                           ;Bluetooth.c: 350: SendRF_wait(Conf2_ChannelD_OFF,2,16,8);
  8295  0004B0  0EDC               	movlw	low _Conf2_ChannelD_OFF
  8296  0004B2  0100               	movlb	0	; () banked
  8297  0004B4  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8298  0004B6  0EF2               	movlw	high _Conf2_ChannelD_OFF
  8299  0004B8  0100               	movlb	0	; () banked
  8300  0004BA  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8301  0004BC  0E02               	movlw	2
  8302  0004BE  0100               	movlb	0	; () banked
  8303  0004C0  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8304  0004C2  0E10               	movlw	16
  8305  0004C4  0100               	movlb	0	; () banked
  8306  0004C6  6F84               	movwf	SendRF_wait@size& (0+255),b
  8307  0004C8  0E08               	movlw	8
  8308  0004CA  0100               	movlb	0	; () banked
  8309  0004CC  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8310  0004CE  EC72  F048         	call	_SendRF_wait	;wreg free
  8311                           
  8312                           ;Bluetooth.c: 351: }
  8313  0004D2  D0D8               	goto	l15510
  8314  0004D4                     l15482:
  8315                           
  8316                           ;Bluetooth.c: 352: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_1_ON_STR))
  8317  0004D4  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8318  0004D8  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8319  0004DC  0E36               	movlw	low _Conf2_ChannelH_1_ON_STR
  8320  0004DE  0100               	movlb	0	; () banked
  8321  0004E0  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8322  0004E2  0EF2               	movlw	high _Conf2_ChannelH_1_ON_STR
  8323  0004E4  0100               	movlb	0	; () banked
  8324  0004E6  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8325  0004E8  EC15  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8326  0004EC  0900               	iorlw	0
  8327  0004EE  B4D8               	btfsc	status,2,c
  8328  0004F0  D012               	goto	l15486
  8329                           
  8330                           ;Bluetooth.c: 353: {
  8331                           ;Bluetooth.c: 355: SendRF_wait(Conf2_ChannelH_1_ON,2,16,8);
  8332  0004F2  0E0C               	movlw	low _Conf2_ChannelH_1_ON
  8333  0004F4  0100               	movlb	0	; () banked
  8334  0004F6  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8335  0004F8  0EF3               	movlw	high _Conf2_ChannelH_1_ON
  8336  0004FA  0100               	movlb	0	; () banked
  8337  0004FC  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8338  0004FE  0E02               	movlw	2
  8339  000500  0100               	movlb	0	; () banked
  8340  000502  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8341  000504  0E10               	movlw	16
  8342  000506  0100               	movlb	0	; () banked
  8343  000508  6F84               	movwf	SendRF_wait@size& (0+255),b
  8344  00050A  0E08               	movlw	8
  8345  00050C  0100               	movlb	0	; () banked
  8346  00050E  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8347  000510  EC72  F048         	call	_SendRF_wait	;wreg free
  8348                           
  8349                           ;Bluetooth.c: 356: }
  8350  000514  D0B7               	goto	l15510
  8351  000516                     l15486:
  8352                           
  8353                           ;Bluetooth.c: 357: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_1_OFF_STR))
  8354  000516  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8355  00051A  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8356  00051E  0EF7               	movlw	low _Conf2_ChannelH_1_OFF_STR
  8357  000520  0100               	movlb	0	; () banked
  8358  000522  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8359  000524  0EF1               	movlw	high _Conf2_ChannelH_1_OFF_STR
  8360  000526  0100               	movlb	0	; () banked
  8361  000528  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8362  00052A  EC15  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8363  00052E  0900               	iorlw	0
  8364  000530  B4D8               	btfsc	status,2,c
  8365  000532  D012               	goto	l15490
  8366                           
  8367                           ;Bluetooth.c: 358: {
  8368                           ;Bluetooth.c: 360: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,8);
  8369  000534  0EFC               	movlw	low _Conf2_ChannelH_1_OFF
  8370  000536  0100               	movlb	0	; () banked
  8371  000538  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8372  00053A  0EF2               	movlw	high _Conf2_ChannelH_1_OFF
  8373  00053C  0100               	movlb	0	; () banked
  8374  00053E  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8375  000540  0E02               	movlw	2
  8376  000542  0100               	movlb	0	; () banked
  8377  000544  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8378  000546  0E10               	movlw	16
  8379  000548  0100               	movlb	0	; () banked
  8380  00054A  6F84               	movwf	SendRF_wait@size& (0+255),b
  8381  00054C  0E08               	movlw	8
  8382  00054E  0100               	movlb	0	; () banked
  8383  000550  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8384  000552  EC72  F048         	call	_SendRF_wait	;wreg free
  8385                           
  8386                           ;Bluetooth.c: 361: }
  8387  000556  D096               	goto	l15510
  8388  000558                     l15490:
  8389                           
  8390                           ;Bluetooth.c: 362: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_2_ON_STR))
  8391  000558  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8392  00055C  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8393  000560  0E4A               	movlw	low _Conf2_ChannelH_2_ON_STR
  8394  000562  0100               	movlb	0	; () banked
  8395  000564  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8396  000566  0EF2               	movlw	high _Conf2_ChannelH_2_ON_STR
  8397  000568  0100               	movlb	0	; () banked
  8398  00056A  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8399  00056C  EC15  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8400  000570  0900               	iorlw	0
  8401  000572  B4D8               	btfsc	status,2,c
  8402  000574  D012               	goto	l15494
  8403                           
  8404                           ;Bluetooth.c: 363: {
  8405                           ;Bluetooth.c: 365: SendRF_wait(Conf2_ChannelH_2_ON,2,16,8);
  8406  000576  0E2C               	movlw	low _Conf2_ChannelH_2_ON
  8407  000578  0100               	movlb	0	; () banked
  8408  00057A  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8409  00057C  0EF3               	movlw	high _Conf2_ChannelH_2_ON
  8410  00057E  0100               	movlb	0	; () banked
  8411  000580  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8412  000582  0E02               	movlw	2
  8413  000584  0100               	movlb	0	; () banked
  8414  000586  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8415  000588  0E10               	movlw	16
  8416  00058A  0100               	movlb	0	; () banked
  8417  00058C  6F84               	movwf	SendRF_wait@size& (0+255),b
  8418  00058E  0E08               	movlw	8
  8419  000590  0100               	movlb	0	; () banked
  8420  000592  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8421  000594  EC72  F048         	call	_SendRF_wait	;wreg free
  8422                           
  8423                           ;Bluetooth.c: 366: }
  8424  000598  D075               	goto	l15510
  8425  00059A                     l15494:
  8426                           
  8427                           ;Bluetooth.c: 367: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_2_OFF_STR))
  8428  00059A  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8429  00059E  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8430  0005A2  0E0C               	movlw	low _Conf2_ChannelH_2_OFF_STR
  8431  0005A4  0100               	movlb	0	; () banked
  8432  0005A6  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8433  0005A8  0EF2               	movlw	high _Conf2_ChannelH_2_OFF_STR
  8434  0005AA  0100               	movlb	0	; () banked
  8435  0005AC  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8436  0005AE  EC15  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8437  0005B2  0900               	iorlw	0
  8438  0005B4  B4D8               	btfsc	status,2,c
  8439  0005B6  D012               	goto	l15498
  8440                           
  8441                           ;Bluetooth.c: 368: {
  8442                           ;Bluetooth.c: 370: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,8);
  8443  0005B8  0E1C               	movlw	low _Conf2_ChannelH_2_OFF
  8444  0005BA  0100               	movlb	0	; () banked
  8445  0005BC  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8446  0005BE  0EF3               	movlw	high _Conf2_ChannelH_2_OFF
  8447  0005C0  0100               	movlb	0	; () banked
  8448  0005C2  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8449  0005C4  0E02               	movlw	2
  8450  0005C6  0100               	movlb	0	; () banked
  8451  0005C8  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8452  0005CA  0E10               	movlw	16
  8453  0005CC  0100               	movlb	0	; () banked
  8454  0005CE  6F84               	movwf	SendRF_wait@size& (0+255),b
  8455  0005D0  0E08               	movlw	8
  8456  0005D2  0100               	movlb	0	; () banked
  8457  0005D4  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8458  0005D6  EC72  F048         	call	_SendRF_wait	;wreg free
  8459                           
  8460                           ;Bluetooth.c: 371: }
  8461  0005DA  D054               	goto	l15510
  8462  0005DC                     l15498:
  8463                           
  8464                           ;Bluetooth.c: 372: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_3_ON_STR))
  8465  0005DC  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8466  0005E0  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8467  0005E4  0E5E               	movlw	low _Conf2_ChannelH_3_ON_STR
  8468  0005E6  0100               	movlb	0	; () banked
  8469  0005E8  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8470  0005EA  0EF2               	movlw	high _Conf2_ChannelH_3_ON_STR
  8471  0005EC  0100               	movlb	0	; () banked
  8472  0005EE  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8473  0005F0  EC15  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8474  0005F4  0900               	iorlw	0
  8475  0005F6  B4D8               	btfsc	status,2,c
  8476  0005F8  D012               	goto	l15502
  8477                           
  8478                           ;Bluetooth.c: 373: {
  8479                           ;Bluetooth.c: 375: SendRF_wait(Conf2_ChannelH_3_ON,2,16,8);
  8480  0005FA  0E4C               	movlw	low _Conf2_ChannelH_3_ON
  8481  0005FC  0100               	movlb	0	; () banked
  8482  0005FE  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8483  000600  0EF3               	movlw	high _Conf2_ChannelH_3_ON
  8484  000602  0100               	movlb	0	; () banked
  8485  000604  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8486  000606  0E02               	movlw	2
  8487  000608  0100               	movlb	0	; () banked
  8488  00060A  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8489  00060C  0E10               	movlw	16
  8490  00060E  0100               	movlb	0	; () banked
  8491  000610  6F84               	movwf	SendRF_wait@size& (0+255),b
  8492  000612  0E08               	movlw	8
  8493  000614  0100               	movlb	0	; () banked
  8494  000616  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8495  000618  EC72  F048         	call	_SendRF_wait	;wreg free
  8496                           
  8497                           ;Bluetooth.c: 376: }
  8498  00061C  D033               	goto	l15510
  8499  00061E                     l15502:
  8500                           
  8501                           ;Bluetooth.c: 377: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_3_OFF_STR))
  8502  00061E  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8503  000622  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8504  000626  0E21               	movlw	low _Conf2_ChannelH_3_OFF_STR
  8505  000628  0100               	movlb	0	; () banked
  8506  00062A  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8507  00062C  0EF2               	movlw	high _Conf2_ChannelH_3_OFF_STR
  8508  00062E  0100               	movlb	0	; () banked
  8509  000630  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8510  000632  EC15  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8511  000636  0900               	iorlw	0
  8512  000638  B4D8               	btfsc	status,2,c
  8513  00063A  D012               	goto	l15506
  8514                           
  8515                           ;Bluetooth.c: 378: {
  8516                           ;Bluetooth.c: 380: SendRF_wait(Conf2_ChannelH_2_OFF,3,16,8);
  8517  00063C  0E1C               	movlw	low _Conf2_ChannelH_2_OFF
  8518  00063E  0100               	movlb	0	; () banked
  8519  000640  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8520  000642  0EF3               	movlw	high _Conf2_ChannelH_2_OFF
  8521  000644  0100               	movlb	0	; () banked
  8522  000646  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8523  000648  0E03               	movlw	3
  8524  00064A  0100               	movlb	0	; () banked
  8525  00064C  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8526  00064E  0E10               	movlw	16
  8527  000650  0100               	movlb	0	; () banked
  8528  000652  6F84               	movwf	SendRF_wait@size& (0+255),b
  8529  000654  0E08               	movlw	8
  8530  000656  0100               	movlb	0	; () banked
  8531  000658  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8532  00065A  EC72  F048         	call	_SendRF_wait	;wreg free
  8533                           
  8534                           ;Bluetooth.c: 381: }
  8535  00065E  D012               	goto	l15510
  8536  000660                     l15506:
  8537                           
  8538                           ;Bluetooth.c: 382: else
  8539                           ;Bluetooth.c: 383: {
  8540                           ;Bluetooth.c: 385: UARTstring((unsigned char *)SYNTAX_ERR);
  8541  000660  0E89               	movlw	low _SYNTAX_ERR
  8542  000662  0100               	movlb	0	; () banked
  8543  000664  6F7A               	movwf	UARTstring@data& (0+255),b
  8544  000666  0EF3               	movlw	high _SYNTAX_ERR
  8545  000668  0100               	movlb	0	; () banked
  8546  00066A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8547  00066C  ECC4  F046         	call	_UARTstring	;wreg free
  8548                           
  8549                           ;Bluetooth.c: 386: UARTstring(CRLN);
  8550  000670  0ED1               	movlw	low _CRLN
  8551  000672  0100               	movlb	0	; () banked
  8552  000674  6F7A               	movwf	UARTstring@data& (0+255),b
  8553  000676  0EF3               	movlw	high _CRLN
  8554  000678  0100               	movlb	0	; () banked
  8555  00067A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8556  00067C  ECC4  F046         	call	_UARTstring	;wreg free
  8557                           
  8558                           ;Bluetooth.c: 387: return 0;
  8559                           ;	Return value of _UseBluetooth is never used
  8560  000680  0012               	return	
  8561  000682  D000               	goto	l15510
  8562  000684                     l15510:
  8563                           
  8564                           ;Bluetooth.c: 388: }
  8565                           ;Bluetooth.c: 389: if(ok)
  8566  000684  0102               	movlb	2	; () banked
  8567  000686  5189               	movf	UseBluetooth@ok& (0+255),w,b
  8568  000688  0102               	movlb	2	; () banked
  8569  00068A  B4D8               	btfsc	status,2,c
  8570  00068C  0012               	return	
  8571                           
  8572                           ; BSR set to: 2
  8573                           ;Bluetooth.c: 390: {
  8574                           ;Bluetooth.c: 391: UARTstringCRLN((unsigned char *)"Configuration 2 RF code sent");
  8575  00068E  0E47               	movlw	low STR_23
  8576  000690  0100               	movlb	0	; () banked
  8577  000692  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8578  000694  0EFB               	movlw	high STR_23
  8579  000696  0100               	movlb	0	; () banked
  8580  000698  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8581  00069A  EC69  F045         	call	_UARTstringCRLN	;wreg free
  8582                           
  8583                           ;Bluetooth.c: 393: }
  8584                           ;Bluetooth.c: 394: }
  8585                           
  8586                           ;Bluetooth.c: 392: return 1;
  8587                           ;	Return value of _UseBluetooth is never used
  8588  00069E  0012               	return	
  8589  0006A0                     l15516:
  8590                           
  8591                           ;Bluetooth.c: 395: else if(StringContainsCaseInsensitive(String,(unsigned char *)"NEC"))
  8592  0006A0  C200  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  8593  0006A4  C201  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  8594  0006A8  0EEF               	movlw	low STR_24
  8595  0006AA  0100               	movlb	0	; () banked
  8596  0006AC  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  8597  0006AE  0EFF               	movlw	high STR_24
  8598  0006B0  0100               	movlb	0	; () banked
  8599  0006B2  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  8600  0006B4  EC5A  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  8601  0006B8  0900               	iorlw	0
  8602  0006BA  B4D8               	btfsc	status,2,c
  8603  0006BC  D1E0               	goto	l15578
  8604                           
  8605                           ;Bluetooth.c: 396: {
  8606                           ;Bluetooth.c: 397: if(!GetNumber(String, 2, &temp))
  8607  0006BE  C200  F085         	movff	UseBluetooth@String,GetNumber@This
  8608  0006C2  C201  F086         	movff	UseBluetooth@String+1,GetNumber@This+1
  8609  0006C6  0E02               	movlw	2
  8610  0006C8  0100               	movlb	0	; () banked
  8611  0006CA  6F87               	movwf	GetNumber@CommaNumber& (0+255),b
  8612  0006CC  0E8E               	movlw	low UseBluetooth@temp
  8613  0006CE  0100               	movlb	0	; () banked
  8614  0006D0  6F88               	movwf	GetNumber@result& (0+255),b
  8615  0006D2  0E02               	movlw	high UseBluetooth@temp
  8616  0006D4  0100               	movlb	0	; () banked
  8617  0006D6  6F89               	movwf	(GetNumber@result+1)& (0+255),b
  8618  0006D8  ECEC  F023         	call	_GetNumber	;wreg free
  8619  0006DC  0900               	iorlw	0
  8620  0006DE  A4D8               	btfss	status,2,c
  8621  0006E0  D0C9               	goto	l15552
  8622                           
  8623                           ;Bluetooth.c: 398: {
  8624                           ;Bluetooth.c: 399: if(temp > 0xFF)
  8625  0006E2  0102               	movlb	2	; () banked
  8626  0006E4  5191               	movf	(UseBluetooth@temp+3)& (0+255),w,b
  8627  0006E6  0102               	movlb	2	; () banked
  8628  0006E8  1190               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  8629  0006EA  E104               	bnz	u19280
  8630  0006EC  0102               	movlb	2	; () banked
  8631  0006EE  058F               	decf	(UseBluetooth@temp+1)& (0+255),w,b
  8632  0006F0  A0D8               	btfss	status,0,c
  8633  0006F2  D011               	goto	l1875
  8634  0006F4                     u19280:
  8635                           
  8636                           ; BSR set to: 2
  8637                           ;Bluetooth.c: 400: {
  8638                           ;Bluetooth.c: 401: UARTstringCRLN((unsigned char *)"Error: Command larger that 255");
  8639  0006F4  0E15               	movlw	low STR_25
  8640  0006F6  0100               	movlb	0	; () banked
  8641  0006F8  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8642  0006FA  0EFA               	movlw	high STR_25
  8643  0006FC  0100               	movlb	0	; () banked
  8644  0006FE  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8645  000700  EC69  F045         	call	_UARTstringCRLN	;wreg free
  8646                           
  8647                           ;Bluetooth.c: 402: UARTstring(CRLN);
  8648  000704  0ED1               	movlw	low _CRLN
  8649  000706  0100               	movlb	0	; () banked
  8650  000708  6F7A               	movwf	UARTstring@data& (0+255),b
  8651  00070A  0EF3               	movlw	high _CRLN
  8652  00070C  0100               	movlb	0	; () banked
  8653  00070E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8654  000710  ECC4  F046         	call	_UARTstring	;wreg free
  8655                           
  8656                           ;Bluetooth.c: 403: return 0;
  8657                           ;	Return value of _UseBluetooth is never used
  8658  000714  0012               	return	
  8659  000716                     l1875:
  8660                           
  8661                           ; BSR set to: 2
  8662                           ;Bluetooth.c: 404: }
  8663                           ;Bluetooth.c: 405: NecCommand = (unsigned char)temp;
  8664  000716  C28E  F28D         	movff	UseBluetooth@temp,UseBluetooth@NecCommand
  8665                           
  8666                           ; BSR set to: 2
  8667                           ;Bluetooth.c: 406: if(!GetNumber(String, 1, &temp))
  8668  00071A  C200  F085         	movff	UseBluetooth@String,GetNumber@This
  8669  00071E  C201  F086         	movff	UseBluetooth@String+1,GetNumber@This+1
  8670  000722  0E01               	movlw	1
  8671  000724  0100               	movlb	0	; () banked
  8672  000726  6F87               	movwf	GetNumber@CommaNumber& (0+255),b
  8673  000728  0E8E               	movlw	low UseBluetooth@temp
  8674  00072A  0100               	movlb	0	; () banked
  8675  00072C  6F88               	movwf	GetNumber@result& (0+255),b
  8676  00072E  0E02               	movlw	high UseBluetooth@temp
  8677  000730  0100               	movlb	0	; () banked
  8678  000732  6F89               	movwf	(GetNumber@result+1)& (0+255),b
  8679  000734  ECEC  F023         	call	_GetNumber	;wreg free
  8680  000738  0900               	iorlw	0
  8681  00073A  A4D8               	btfss	status,2,c
  8682  00073C  D092               	goto	l15550
  8683                           
  8684                           ;Bluetooth.c: 407: {
  8685                           ;Bluetooth.c: 408: if(temp > 0xFF)
  8686  00073E  0102               	movlb	2	; () banked
  8687  000740  5191               	movf	(UseBluetooth@temp+3)& (0+255),w,b
  8688  000742  0102               	movlb	2	; () banked
  8689  000744  1190               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  8690  000746  E104               	bnz	u19300
  8691  000748  0102               	movlb	2	; () banked
  8692  00074A  058F               	decf	(UseBluetooth@temp+1)& (0+255),w,b
  8693  00074C  A0D8               	btfss	status,0,c
  8694  00074E  D011               	goto	l1877
  8695  000750                     u19300:
  8696                           
  8697                           ; BSR set to: 2
  8698                           ;Bluetooth.c: 409: {
  8699                           ;Bluetooth.c: 410: UARTstringCRLN((unsigned char *)"Error: Address larger that 255");
  8700  000750  0E34               	movlw	low STR_26
  8701  000752  0100               	movlb	0	; () banked
  8702  000754  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8703  000756  0EFA               	movlw	high STR_26
  8704  000758  0100               	movlb	0	; () banked
  8705  00075A  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8706  00075C  EC69  F045         	call	_UARTstringCRLN	;wreg free
  8707                           
  8708                           ;Bluetooth.c: 411: UARTstring(CRLN);
  8709  000760  0ED1               	movlw	low _CRLN
  8710  000762  0100               	movlb	0	; () banked
  8711  000764  6F7A               	movwf	UARTstring@data& (0+255),b
  8712  000766  0EF3               	movlw	high _CRLN
  8713  000768  0100               	movlb	0	; () banked
  8714  00076A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8715  00076C  ECC4  F046         	call	_UARTstring	;wreg free
  8716                           
  8717                           ;Bluetooth.c: 412: return 0;
  8718                           ;	Return value of _UseBluetooth is never used
  8719  000770  0012               	return	
  8720  000772                     l1877:
  8721                           
  8722                           ; BSR set to: 2
  8723                           ;Bluetooth.c: 413: }
  8724                           ;Bluetooth.c: 414: NecAddress = (unsigned char) temp;
  8725  000772  C28E  F28C         	movff	UseBluetooth@temp,UseBluetooth@NecAddress
  8726                           
  8727                           ; BSR set to: 2
  8728                           ;Bluetooth.c: 415: sprintf(buf,"NEC address: 0x%02X ", NecAddress);
  8729  000776  0E0F               	movlw	low UseBluetooth@buf
  8730  000778  0100               	movlb	0	; () banked
  8731  00077A  6FC7               	movwf	sprintf@sp& (0+255),b
  8732  00077C  0E02               	movlw	high UseBluetooth@buf
  8733  00077E  0100               	movlb	0	; () banked
  8734  000780  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  8735  000782  0ED7               	movlw	low STR_27
  8736  000784  0100               	movlb	0	; () banked
  8737  000786  6FC9               	movwf	sprintf@f& (0+255),b
  8738  000788  0EFC               	movlw	high STR_27
  8739  00078A  0100               	movlb	0	; () banked
  8740  00078C  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  8741  00078E  C28C  F0CB         	movff	UseBluetooth@NecAddress,?_sprintf+4
  8742  000792  0100               	movlb	0	; () banked
  8743  000794  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  8744  000796  ECB5  F010         	call	_sprintf	;wreg free
  8745                           
  8746                           ;Bluetooth.c: 416: UARTstringCRLN(buf);
  8747  00079A  0E0F               	movlw	low UseBluetooth@buf
  8748  00079C  0100               	movlb	0	; () banked
  8749  00079E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8750  0007A0  0E02               	movlw	high UseBluetooth@buf
  8751  0007A2  0100               	movlb	0	; () banked
  8752  0007A4  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8753  0007A6  EC69  F045         	call	_UARTstringCRLN	;wreg free
  8754                           
  8755                           ;Bluetooth.c: 417: sprintf(buf,"NEC command: 0x%02X ", NecCommand);
  8756  0007AA  0E0F               	movlw	low UseBluetooth@buf
  8757  0007AC  0100               	movlb	0	; () banked
  8758  0007AE  6FC7               	movwf	sprintf@sp& (0+255),b
  8759  0007B0  0E02               	movlw	high UseBluetooth@buf
  8760  0007B2  0100               	movlb	0	; () banked
  8761  0007B4  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  8762  0007B6  0EC2               	movlw	low STR_28
  8763  0007B8  0100               	movlb	0	; () banked
  8764  0007BA  6FC9               	movwf	sprintf@f& (0+255),b
  8765  0007BC  0EFC               	movlw	high STR_28
  8766  0007BE  0100               	movlb	0	; () banked
  8767  0007C0  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  8768  0007C2  C28D  F0CB         	movff	UseBluetooth@NecCommand,?_sprintf+4
  8769  0007C6  0100               	movlb	0	; () banked
  8770  0007C8  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  8771  0007CA  ECB5  F010         	call	_sprintf	;wreg free
  8772                           
  8773                           ;Bluetooth.c: 418: UARTstringCRLN(buf);
  8774  0007CE  0E0F               	movlw	low UseBluetooth@buf
  8775  0007D0  0100               	movlb	0	; () banked
  8776  0007D2  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8777  0007D4  0E02               	movlw	high UseBluetooth@buf
  8778  0007D6  0100               	movlb	0	; () banked
  8779  0007D8  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8780  0007DA  EC69  F045         	call	_UARTstringCRLN	;wreg free
  8781                           
  8782                           ;Bluetooth.c: 419: EnteredNEC = EncodeNEC(NecAddress, NecCommand);
  8783  0007DE  C28D  F07D         	movff	UseBluetooth@NecCommand,EncodeNEC@command
  8784  0007E2  0102               	movlb	2	; () banked
  8785  0007E4  518C               	movf	UseBluetooth@NecAddress& (0+255),w,b
  8786  0007E6  EC1F  F039         	call	_EncodeNEC
  8787  0007EA  C07D  F285         	movff	?_EncodeNEC,UseBluetooth@EnteredNEC
  8788  0007EE  C07E  F286         	movff	?_EncodeNEC+1,UseBluetooth@EnteredNEC+1
  8789  0007F2  C07F  F287         	movff	?_EncodeNEC+2,UseBluetooth@EnteredNEC+2
  8790  0007F6  C080  F288         	movff	?_EncodeNEC+3,UseBluetooth@EnteredNEC+3
  8791                           
  8792                           ;Bluetooth.c: 420: SendNEC_wait(EnteredNEC,0);
  8793  0007FA  C285  F08E         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
  8794  0007FE  C286  F08F         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
  8795  000802  C287  F090         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
  8796  000806  C288  F091         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
  8797  00080A  0E00               	movlw	0
  8798  00080C  0100               	movlb	0	; () banked
  8799  00080E  6F92               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  8800  000810  ECC6  F042         	call	_SendNEC_wait	;wreg free
  8801                           
  8802                           ;Bluetooth.c: 421: sprintf(buf,"Sent NEC code = 0x%lX ", EnteredNEC);
  8803  000814  0E0F               	movlw	low UseBluetooth@buf
  8804  000816  0100               	movlb	0	; () banked
  8805  000818  6FC7               	movwf	sprintf@sp& (0+255),b
  8806  00081A  0E02               	movlw	high UseBluetooth@buf
  8807  00081C  0100               	movlb	0	; () banked
  8808  00081E  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  8809  000820  0E53               	movlw	low STR_29
  8810  000822  0100               	movlb	0	; () banked
  8811  000824  6FC9               	movwf	sprintf@f& (0+255),b
  8812  000826  0EFC               	movlw	high STR_29
  8813  000828  0100               	movlb	0	; () banked
  8814  00082A  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  8815  00082C  C285  F0CB         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
  8816  000830  C286  F0CC         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
  8817  000834  C287  F0CD         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
  8818  000838  C288  F0CE         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
  8819  00083C  ECB5  F010         	call	_sprintf	;wreg free
  8820                           
  8821                           ;Bluetooth.c: 422: UARTstringCRLN(buf);
  8822  000840  0E0F               	movlw	low UseBluetooth@buf
  8823  000842  0100               	movlb	0	; () banked
  8824  000844  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8825  000846  0E02               	movlw	high UseBluetooth@buf
  8826  000848  0100               	movlb	0	; () banked
  8827  00084A  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8828  00084C  EC69  F045         	call	_UARTstringCRLN	;wreg free
  8829                           
  8830                           ;Bluetooth.c: 423: UARTstring(CRLN);
  8831  000850  0ED1               	movlw	low _CRLN
  8832  000852  0100               	movlb	0	; () banked
  8833  000854  6F7A               	movwf	UARTstring@data& (0+255),b
  8834  000856  0EF3               	movlw	high _CRLN
  8835  000858  0100               	movlb	0	; () banked
  8836  00085A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8837  00085C  ECC4  F046         	call	_UARTstring	;wreg free
  8838                           
  8839                           ;Bluetooth.c: 424: }
  8840  000860  0012               	return	
  8841  000862                     l15550:
  8842                           
  8843                           ;Bluetooth.c: 425: else
  8844                           ;Bluetooth.c: 426: {
  8845                           ;Bluetooth.c: 427: UARTstringCRLN((unsigned char *)"Error: could not decode Address");
  8846  000862  0EF5               	movlw	low STR_30
  8847  000864  0100               	movlb	0	; () banked
  8848  000866  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8849  000868  0EF9               	movlw	high STR_30
  8850  00086A  0100               	movlb	0	; () banked
  8851  00086C  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8852  00086E  EC69  F045         	call	_UARTstringCRLN	;wreg free
  8853                           
  8854                           ;Bluetooth.c: 428: }
  8855                           ;Bluetooth.c: 429: }
  8856  000872  0012               	return	
  8857  000874                     l15552:
  8858                           
  8859                           ;Bluetooth.c: 430: else if(!GetNumber(String, 1, &EnteredNEC))
  8860  000874  C200  F085         	movff	UseBluetooth@String,GetNumber@This
  8861  000878  C201  F086         	movff	UseBluetooth@String+1,GetNumber@This+1
  8862  00087C  0E01               	movlw	1
  8863  00087E  0100               	movlb	0	; () banked
  8864  000880  6F87               	movwf	GetNumber@CommaNumber& (0+255),b
  8865  000882  0E85               	movlw	low UseBluetooth@EnteredNEC
  8866  000884  0100               	movlb	0	; () banked
  8867  000886  6F88               	movwf	GetNumber@result& (0+255),b
  8868  000888  0E02               	movlw	high UseBluetooth@EnteredNEC
  8869  00088A  0100               	movlb	0	; () banked
  8870  00088C  6F89               	movwf	(GetNumber@result+1)& (0+255),b
  8871  00088E  ECEC  F023         	call	_GetNumber	;wreg free
  8872  000892  0900               	iorlw	0
  8873  000894  A4D8               	btfss	status,2,c
  8874  000896  D08A               	goto	l15574
  8875                           
  8876                           ;Bluetooth.c: 431: {
  8877                           ;Bluetooth.c: 432: SendNEC_wait(EnteredNEC,0);
  8878  000898  C285  F08E         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
  8879  00089C  C286  F08F         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
  8880  0008A0  C287  F090         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
  8881  0008A4  C288  F091         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
  8882  0008A8  0E00               	movlw	0
  8883  0008AA  0100               	movlb	0	; () banked
  8884  0008AC  6F92               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  8885  0008AE  ECC6  F042         	call	_SendNEC_wait	;wreg free
  8886                           
  8887                           ;Bluetooth.c: 433: sprintf(buf,"sent NEC code 0x%lX", EnteredNEC);
  8888  0008B2  0E0F               	movlw	low UseBluetooth@buf
  8889  0008B4  0100               	movlb	0	; () banked
  8890  0008B6  6FC7               	movwf	sprintf@sp& (0+255),b
  8891  0008B8  0E02               	movlw	high UseBluetooth@buf
  8892  0008BA  0100               	movlb	0	; () banked
  8893  0008BC  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  8894  0008BE  0E53               	movlw	low STR_31
  8895  0008C0  0100               	movlb	0	; () banked
  8896  0008C2  6FC9               	movwf	sprintf@f& (0+255),b
  8897  0008C4  0EFD               	movlw	high STR_31
  8898  0008C6  0100               	movlb	0	; () banked
  8899  0008C8  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  8900  0008CA  C285  F0CB         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
  8901  0008CE  C286  F0CC         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
  8902  0008D2  C287  F0CD         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
  8903  0008D6  C288  F0CE         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
  8904  0008DA  ECB5  F010         	call	_sprintf	;wreg free
  8905                           
  8906                           ;Bluetooth.c: 434: UARTstringCRLN(buf);
  8907  0008DE  0E0F               	movlw	low UseBluetooth@buf
  8908  0008E0  0100               	movlb	0	; () banked
  8909  0008E2  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8910  0008E4  0E02               	movlw	high UseBluetooth@buf
  8911  0008E6  0100               	movlb	0	; () banked
  8912  0008E8  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8913  0008EA  EC69  F045         	call	_UARTstringCRLN	;wreg free
  8914                           
  8915                           ;Bluetooth.c: 435: if(DecodeNEC(EnteredNEC, &NecAddress, &NecCommand))
  8916  0008EE  C285  F07D         	movff	UseBluetooth@EnteredNEC,DecodeNEC@Nec
  8917  0008F2  C286  F07E         	movff	UseBluetooth@EnteredNEC+1,DecodeNEC@Nec+1
  8918  0008F6  C287  F07F         	movff	UseBluetooth@EnteredNEC+2,DecodeNEC@Nec+2
  8919  0008FA  C288  F080         	movff	UseBluetooth@EnteredNEC+3,DecodeNEC@Nec+3
  8920  0008FE  0E8C               	movlw	low UseBluetooth@NecAddress
  8921  000900  0100               	movlb	0	; () banked
  8922  000902  6F81               	movwf	DecodeNEC@address& (0+255),b
  8923  000904  0E02               	movlw	high UseBluetooth@NecAddress
  8924  000906  0100               	movlb	0	; () banked
  8925  000908  6F82               	movwf	(DecodeNEC@address+1)& (0+255),b
  8926  00090A  0E8D               	movlw	low UseBluetooth@NecCommand
  8927  00090C  0100               	movlb	0	; () banked
  8928  00090E  6F83               	movwf	DecodeNEC@command& (0+255),b
  8929  000910  0E02               	movlw	high UseBluetooth@NecCommand
  8930  000912  0100               	movlb	0	; () banked
  8931  000914  6F84               	movwf	(DecodeNEC@command+1)& (0+255),b
  8932  000916  EC7B  F041         	call	_DecodeNEC	;wreg free
  8933  00091A  0900               	iorlw	0
  8934  00091C  B4D8               	btfsc	status,2,c
  8935  00091E  D035               	goto	l15568
  8936                           
  8937                           ;Bluetooth.c: 436: {
  8938                           ;Bluetooth.c: 437: sprintf(buf,"address: 0x%02X ", NecAddress);
  8939  000920  0E0F               	movlw	low UseBluetooth@buf
  8940  000922  0100               	movlb	0	; () banked
  8941  000924  6FC7               	movwf	sprintf@sp& (0+255),b
  8942  000926  0E02               	movlw	high UseBluetooth@buf
  8943  000928  0100               	movlb	0	; () banked
  8944  00092A  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  8945  00092C  0EDB               	movlw	low (STR_27+4)
  8946  00092E  0100               	movlb	0	; () banked
  8947  000930  6FC9               	movwf	sprintf@f& (0+255),b
  8948  000932  0EFC               	movlw	high (STR_27+4)
  8949  000934  0100               	movlb	0	; () banked
  8950  000936  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  8951  000938  C28C  F0CB         	movff	UseBluetooth@NecAddress,?_sprintf+4
  8952  00093C  0100               	movlb	0	; () banked
  8953  00093E  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  8954  000940  ECB5  F010         	call	_sprintf	;wreg free
  8955                           
  8956                           ;Bluetooth.c: 438: UARTstringCRLN(buf);
  8957  000944  0E0F               	movlw	low UseBluetooth@buf
  8958  000946  0100               	movlb	0	; () banked
  8959  000948  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8960  00094A  0E02               	movlw	high UseBluetooth@buf
  8961  00094C  0100               	movlb	0	; () banked
  8962  00094E  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8963  000950  EC69  F045         	call	_UARTstringCRLN	;wreg free
  8964                           
  8965                           ;Bluetooth.c: 439: sprintf(buf,"command: 0x%02X ", NecCommand);
  8966  000954  0E0F               	movlw	low UseBluetooth@buf
  8967  000956  0100               	movlb	0	; () banked
  8968  000958  6FC7               	movwf	sprintf@sp& (0+255),b
  8969  00095A  0E02               	movlw	high UseBluetooth@buf
  8970  00095C  0100               	movlb	0	; () banked
  8971  00095E  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  8972  000960  0EC3               	movlw	low (STR_47+27)
  8973  000962  0100               	movlb	0	; () banked
  8974  000964  6FC9               	movwf	sprintf@f& (0+255),b
  8975  000966  0EF7               	movlw	high (STR_47+27)
  8976  000968  0100               	movlb	0	; () banked
  8977  00096A  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  8978  00096C  C28D  F0CB         	movff	UseBluetooth@NecCommand,?_sprintf+4
  8979  000970  0100               	movlb	0	; () banked
  8980  000972  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  8981  000974  ECB5  F010         	call	_sprintf	;wreg free
  8982                           
  8983                           ;Bluetooth.c: 440: UARTstringCRLN(buf);
  8984  000978  0E0F               	movlw	low UseBluetooth@buf
  8985  00097A  0100               	movlb	0	; () banked
  8986  00097C  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8987  00097E  0E02               	movlw	high UseBluetooth@buf
  8988  000980  0100               	movlb	0	; () banked
  8989  000982  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8990  000984  EC69  F045         	call	_UARTstringCRLN	;wreg free
  8991                           
  8992                           ;Bluetooth.c: 441: }
  8993  000988  D008               	goto	l1882
  8994  00098A                     l15568:
  8995                           
  8996                           ;Bluetooth.c: 442: else
  8997                           ;Bluetooth.c: 443: {
  8998                           ;Bluetooth.c: 444: UARTstringCRLN((unsigned char *)"Error: could not decode NEC code");
  8999  00098A  0E34               	movlw	low STR_34
  9000  00098C  0100               	movlb	0	; () banked
  9001  00098E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9002  000990  0EF9               	movlw	high STR_34
  9003  000992  0100               	movlb	0	; () banked
  9004  000994  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9005  000996  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9006  00099A                     l1882:
  9007                           
  9008                           ;Bluetooth.c: 445: }
  9009                           ;Bluetooth.c: 446: UARTstring(CRLN);
  9010  00099A  0ED1               	movlw	low _CRLN
  9011  00099C  0100               	movlb	0	; () banked
  9012  00099E  6F7A               	movwf	UARTstring@data& (0+255),b
  9013  0009A0  0EF3               	movlw	high _CRLN
  9014  0009A2  0100               	movlb	0	; () banked
  9015  0009A4  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9016  0009A6  ECC4  F046         	call	_UARTstring	;wreg free
  9017                           
  9018                           ;Bluetooth.c: 448: }
  9019                           
  9020                           ;Bluetooth.c: 447: return 1;
  9021                           ;	Return value of _UseBluetooth is never used
  9022  0009AA  0012               	return	
  9023  0009AC                     l15574:
  9024                           
  9025                           ;Bluetooth.c: 449: else
  9026                           ;Bluetooth.c: 450: {
  9027                           ;Bluetooth.c: 451: UARTstring(CRLN);
  9028  0009AC  0ED1               	movlw	low _CRLN
  9029  0009AE  0100               	movlb	0	; () banked
  9030  0009B0  6F7A               	movwf	UARTstring@data& (0+255),b
  9031  0009B2  0EF3               	movlw	high _CRLN
  9032  0009B4  0100               	movlb	0	; () banked
  9033  0009B6  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9034  0009B8  ECC4  F046         	call	_UARTstring	;wreg free
  9035                           
  9036                           ;Bluetooth.c: 452: UARTstringCRLN((unsigned char *)"NEC code not entered correctly");
  9037  0009BC  0EEE               	movlw	low STR_35
  9038  0009BE  0100               	movlb	0	; () banked
  9039  0009C0  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9040  0009C2  0EFA               	movlw	high STR_35
  9041  0009C4  0100               	movlb	0	; () banked
  9042  0009C6  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9043  0009C8  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9044                           
  9045                           ;Bluetooth.c: 453: UARTstring(CRLN);
  9046  0009CC  0ED1               	movlw	low _CRLN
  9047  0009CE  0100               	movlb	0	; () banked
  9048  0009D0  6F7A               	movwf	UARTstring@data& (0+255),b
  9049  0009D2  0EF3               	movlw	high _CRLN
  9050  0009D4  0100               	movlb	0	; () banked
  9051  0009D6  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9052  0009D8  ECC4  F046         	call	_UARTstring	;wreg free
  9053                           
  9054                           ;Bluetooth.c: 454: UARTstringCRLN((unsigned char *)"Usage:");
  9055  0009DC  0EB2               	movlw	low STR_36
  9056  0009DE  0100               	movlb	0	; () banked
  9057  0009E0  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9058  0009E2  0EFF               	movlw	high STR_36
  9059  0009E4  0100               	movlb	0	; () banked
  9060  0009E6  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9061  0009E8  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9062                           
  9063                           ;Bluetooth.c: 455: UARTstringCRLN((unsigned char *)"NEC = (32 bit code)");
  9064  0009EC  0E2B               	movlw	low STR_37
  9065  0009EE  0100               	movlb	0	; () banked
  9066  0009F0  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9067  0009F2  0EFD               	movlw	high STR_37
  9068  0009F4  0100               	movlb	0	; () banked
  9069  0009F6  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9070  0009F8  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9071                           
  9072                           ;Bluetooth.c: 456: UARTstringCRLN((unsigned char *)"        or");
  9073  0009FC  0E69               	movlw	low STR_38
  9074  0009FE  0100               	movlb	0	; () banked
  9075  000A00  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9076  000A02  0EFF               	movlw	high STR_38
  9077  000A04  0100               	movlb	0	; () banked
  9078  000A06  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9079  000A08  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9080                           
  9081                           ;Bluetooth.c: 457: UARTstringCRLN((unsigned char *)"NEC = address,command");
  9082  000A0C  0E97               	movlw	low STR_39
  9083  000A0E  0100               	movlb	0	; () banked
  9084  000A10  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9085  000A12  0EFC               	movlw	high STR_39
  9086  000A14  0100               	movlb	0	; () banked
  9087  000A16  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9088  000A18  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9089                           
  9090                           ;Bluetooth.c: 458: UARTstring(CRLN);
  9091  000A1C  0ED1               	movlw	low _CRLN
  9092  000A1E  0100               	movlb	0	; () banked
  9093  000A20  6F7A               	movwf	UARTstring@data& (0+255),b
  9094  000A22  0EF3               	movlw	high _CRLN
  9095  000A24  0100               	movlb	0	; () banked
  9096  000A26  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9097  000A28  ECC4  F046         	call	_UARTstring	;wreg free
  9098                           
  9099                           ;Bluetooth.c: 459: UARTstringCRLN((unsigned char *)"Example:");
  9100  000A2C  0E91               	movlw	low STR_40
  9101  000A2E  0100               	movlb	0	; () banked
  9102  000A30  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9103  000A32  0EFF               	movlw	high STR_40
  9104  000A34  0100               	movlb	0	; () banked
  9105  000A36  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9106  000A38  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9107                           
  9108                           ;Bluetooth.c: 460: UARTstringCRLN((unsigned char *)"NEC = 0x1CE350af ");
  9109  000A3C  0EEE               	movlw	low STR_41
  9110  000A3E  0100               	movlb	0	; () banked
  9111  000A40  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9112  000A42  0EFD               	movlw	high STR_41
  9113  000A44  0100               	movlb	0	; () banked
  9114  000A46  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9115  000A48  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9116                           
  9117                           ;Bluetooth.c: 461: UARTstringCRLN((unsigned char *)"      or");
  9118  000A4C  0E6B               	movlw	low (STR_38+2)
  9119  000A4E  0100               	movlb	0	; () banked
  9120  000A50  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9121  000A52  0EFF               	movlw	high (STR_38+2)
  9122  000A54  0100               	movlb	0	; () banked
  9123  000A56  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9124  000A58  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9125                           
  9126                           ;Bluetooth.c: 462: UARTstringCRLN((unsigned char *)"NEC = 0x38, 0x0A");
  9127  000A5C  0E46               	movlw	low STR_43
  9128  000A5E  0100               	movlb	0	; () banked
  9129  000A60  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9130  000A62  0EFE               	movlw	high STR_43
  9131  000A64  0100               	movlb	0	; () banked
  9132  000A66  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9133  000A68  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9134                           
  9135                           ;Bluetooth.c: 463: UARTstring(CRLN);
  9136  000A6C  0ED1               	movlw	low _CRLN
  9137  000A6E  0100               	movlb	0	; () banked
  9138  000A70  6F7A               	movwf	UARTstring@data& (0+255),b
  9139  000A72  0EF3               	movlw	high _CRLN
  9140  000A74  0100               	movlb	0	; () banked
  9141  000A76  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9142  000A78  ECC4  F046         	call	_UARTstring	;wreg free
  9143                           
  9144                           ;Bluetooth.c: 465: }
  9145                           ;Bluetooth.c: 466: }
  9146                           
  9147                           ;Bluetooth.c: 464: return 0;
  9148                           ;	Return value of _UseBluetooth is never used
  9149  000A7C  0012               	return	
  9150  000A7E                     l15578:
  9151                           
  9152                           ;Bluetooth.c: 467: else if(StringContainsCaseInsensitive(String,(unsigned char *)"Remote
      +                          Button"))
  9153  000A7E  C200  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9154  000A82  C201  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9155  000A86  0E1A               	movlw	low STR_44
  9156  000A88  0100               	movlb	0	; () banked
  9157  000A8A  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9158  000A8C  0EFF               	movlw	high STR_44
  9159  000A8E  0100               	movlb	0	; () banked
  9160  000A90  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9161  000A92  EC5A  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  9162  000A96  0900               	iorlw	0
  9163  000A98  B4D8               	btfsc	status,2,c
  9164  000A9A  D2C8               	goto	l15666
  9165                           
  9166                           ;Bluetooth.c: 468: {
  9167                           ;Bluetooth.c: 469: if(StringAddEqual(String))
  9168  000A9C  C200  F088         	movff	UseBluetooth@String,StringAddEqual@Input
  9169  000AA0  C201  F089         	movff	UseBluetooth@String+1,StringAddEqual@Input+1
  9170  000AA4  EC1E  F031         	call	_StringAddEqual	;wreg free
  9171  000AA8  0900               	iorlw	0
  9172  000AAA  B4D8               	btfsc	status,2,c
  9173  000AAC  D266               	goto	l15660
  9174                           
  9175                           ;Bluetooth.c: 470: {
  9176                           ;Bluetooth.c: 471: StringPos++;
  9177  000AAE  0102               	movlb	2	; () banked
  9178  000AB0  2B02               	incf	UseBluetooth@StringPos& (0+255),f,b
  9179                           
  9180                           ; BSR set to: 2
  9181                           ;Bluetooth.c: 472: if(!GetNumber(String, 1, &temp))
  9182  000AB2  C200  F085         	movff	UseBluetooth@String,GetNumber@This
  9183  000AB6  C201  F086         	movff	UseBluetooth@String+1,GetNumber@This+1
  9184  000ABA  0E01               	movlw	1
  9185  000ABC  0100               	movlb	0	; () banked
  9186  000ABE  6F87               	movwf	GetNumber@CommaNumber& (0+255),b
  9187  000AC0  0E8E               	movlw	low UseBluetooth@temp
  9188  000AC2  0100               	movlb	0	; () banked
  9189  000AC4  6F88               	movwf	GetNumber@result& (0+255),b
  9190  000AC6  0E02               	movlw	high UseBluetooth@temp
  9191  000AC8  0100               	movlb	0	; () banked
  9192  000ACA  6F89               	movwf	(GetNumber@result+1)& (0+255),b
  9193  000ACC  ECEC  F023         	call	_GetNumber	;wreg free
  9194  000AD0  0900               	iorlw	0
  9195  000AD2  A4D8               	btfss	status,2,c
  9196  000AD4  D252               	goto	l15660
  9197                           
  9198                           ;Bluetooth.c: 473: {
  9199                           ;Bluetooth.c: 474: if(temp <= 20 && temp > 0)
  9200  000AD6  0102               	movlb	2	; () banked
  9201  000AD8  5191               	movf	(UseBluetooth@temp+3)& (0+255),w,b
  9202  000ADA  0102               	movlb	2	; () banked
  9203  000ADC  1190               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  9204  000ADE  0102               	movlb	2	; () banked
  9205  000AE0  118F               	iorwf	(UseBluetooth@temp+1)& (0+255),w,b
  9206  000AE2  E104               	bnz	u19361
  9207  000AE4  0E15               	movlw	21
  9208  000AE6  0102               	movlb	2	; () banked
  9209  000AE8  5D8E               	subwf	UseBluetooth@temp& (0+255),w,b
  9210  000AEA  B0D8               	btfsc	status,0,c
  9211  000AEC                     u19361:
  9212  000AEC  D22C               	goto	l15656
  9213                           
  9214                           ; BSR set to: 2
  9215  000AEE  0102               	movlb	2	; () banked
  9216  000AF0  518E               	movf	UseBluetooth@temp& (0+255),w,b
  9217  000AF2  0102               	movlb	2	; () banked
  9218  000AF4  118F               	iorwf	(UseBluetooth@temp+1)& (0+255),w,b
  9219  000AF6  0102               	movlb	2	; () banked
  9220  000AF8  1190               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  9221  000AFA  0102               	movlb	2	; () banked
  9222  000AFC  1191               	iorwf	(UseBluetooth@temp+3)& (0+255),w,b
  9223  000AFE  B4D8               	btfsc	status,2,c
  9224  000B00  D222               	goto	l15656
  9225                           
  9226                           ; BSR set to: 2
  9227                           ;Bluetooth.c: 475: {
  9228                           ;Bluetooth.c: 476: if(!StringContainsCaseInsensitive(String,(unsigned char *)"set"))
  9229  000B02  C200  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9230  000B06  C201  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9231  000B0A  0E8B               	movlw	low (STR_55+16)
  9232  000B0C  0100               	movlb	0	; () banked
  9233  000B0E  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9234  000B10  0EFD               	movlw	high (STR_55+16)
  9235  000B12  0100               	movlb	0	; () banked
  9236  000B14  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9237  000B16  EC5A  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  9238  000B1A  0900               	iorlw	0
  9239  000B1C  A4D8               	btfss	status,2,c
  9240  000B1E  D123               	goto	l15616
  9241                           
  9242                           ;Bluetooth.c: 477: {
  9243                           ;Bluetooth.c: 478: tempNec = EncodeNEC(Global.RemoteButtonNEC[temp-1][0], Global.RemoteB
      +                          uttonNEC[temp-1][1]);
  9244  000B20  0EFE               	movlw	254
  9245  000B22  0102               	movlb	2	; () banked
  9246  000B24  6F03               	movwf	??_UseBluetooth& (0+255),b
  9247  000B26  0EFF               	movlw	255
  9248  000B28  0102               	movlb	2	; () banked
  9249  000B2A  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
  9250  000B2C  C28E  F205         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9251  000B30  C28F  F206         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9252  000B34  90D8               	bcf	status,0,c
  9253  000B36  0102               	movlb	2	; () banked
  9254  000B38  3705               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9255  000B3A  3706               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9256  000B3C  0102               	movlb	2	; () banked
  9257  000B3E  5103               	movf	??_UseBluetooth& (0+255),w,b
  9258  000B40  0102               	movlb	2	; () banked
  9259  000B42  2705               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9260  000B44  0102               	movlb	2	; () banked
  9261  000B46  5104               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9262  000B48  0102               	movlb	2	; () banked
  9263  000B4A  2306               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9264  000B4C  0E00               	movlw	low _Global
  9265  000B4E  0102               	movlb	2	; () banked
  9266  000B50  6F07               	movwf	(??_UseBluetooth+4)& (0+255),b
  9267  000B52  0E04               	movlw	high _Global
  9268  000B54  0102               	movlb	2	; () banked
  9269  000B56  6F08               	movwf	(??_UseBluetooth+5)& (0+255),b
  9270  000B58  0E05               	movlw	5
  9271  000B5A  0102               	movlb	2	; () banked
  9272  000B5C  2707               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9273  000B5E  0E00               	movlw	0
  9274  000B60  2308               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9275  000B62  0102               	movlb	2	; () banked
  9276  000B64  5105               	movf	(??_UseBluetooth+2)& (0+255),w,b
  9277  000B66  0102               	movlb	2	; () banked
  9278  000B68  2707               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9279  000B6A  0102               	movlb	2	; () banked
  9280  000B6C  5106               	movf	(??_UseBluetooth+3)& (0+255),w,b
  9281  000B6E  0102               	movlb	2	; () banked
  9282  000B70  2308               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9283  000B72  0E01               	movlw	1
  9284  000B74  0102               	movlb	2	; () banked
  9285  000B76  2507               	addwf	(??_UseBluetooth+4)& (0+255),w,b
  9286  000B78  6ED9               	movwf	fsr2l,c
  9287  000B7A  0E00               	movlw	0
  9288  000B7C  0102               	movlb	2	; () banked
  9289  000B7E  2108               	addwfc	(??_UseBluetooth+5)& (0+255),w,b
  9290  000B80  6EDA               	movwf	fsr2h,c
  9291  000B82  50DF               	movf	indf2,w,c
  9292  000B84  0100               	movlb	0	; () banked
  9293  000B86  6F7D               	movwf	EncodeNEC@command& (0+255),b
  9294  000B88  0EFE               	movlw	254
  9295  000B8A  0102               	movlb	2	; () banked
  9296  000B8C  6F09               	movwf	(??_UseBluetooth+6)& (0+255),b
  9297  000B8E  0EFF               	movlw	255
  9298  000B90  0102               	movlb	2	; () banked
  9299  000B92  6F0A               	movwf	(??_UseBluetooth+7)& (0+255),b
  9300  000B94  C28E  F20B         	movff	UseBluetooth@temp,??_UseBluetooth+8
  9301  000B98  C28F  F20C         	movff	UseBluetooth@temp+1,??_UseBluetooth+9
  9302  000B9C  90D8               	bcf	status,0,c
  9303  000B9E  0102               	movlb	2	; () banked
  9304  000BA0  370B               	rlcf	(??_UseBluetooth+8)& (0+255),f,b
  9305  000BA2  370C               	rlcf	(??_UseBluetooth+9)& (0+255),f,b
  9306  000BA4  0102               	movlb	2	; () banked
  9307  000BA6  5109               	movf	(??_UseBluetooth+6)& (0+255),w,b
  9308  000BA8  0102               	movlb	2	; () banked
  9309  000BAA  270B               	addwf	(??_UseBluetooth+8)& (0+255),f,b
  9310  000BAC  0102               	movlb	2	; () banked
  9311  000BAE  510A               	movf	(??_UseBluetooth+7)& (0+255),w,b
  9312  000BB0  0102               	movlb	2	; () banked
  9313  000BB2  230C               	addwfc	(??_UseBluetooth+9)& (0+255),f,b
  9314  000BB4  0E05               	movlw	low (_Global+5)
  9315  000BB6  0102               	movlb	2	; () banked
  9316  000BB8  250B               	addwf	(??_UseBluetooth+8)& (0+255),w,b
  9317  000BBA  6ED9               	movwf	fsr2l,c
  9318  000BBC  0E04               	movlw	high (_Global+5)
  9319  000BBE  0102               	movlb	2	; () banked
  9320  000BC0  210C               	addwfc	(??_UseBluetooth+9)& (0+255),w,b
  9321  000BC2  6EDA               	movwf	fsr2h,c
  9322  000BC4  50DF               	movf	indf2,w,c
  9323  000BC6  EC1F  F039         	call	_EncodeNEC
  9324  000BCA  C07D  F27E         	movff	?_EncodeNEC,UseBluetooth@tempNec
  9325  000BCE  C07E  F27F         	movff	?_EncodeNEC+1,UseBluetooth@tempNec+1
  9326  000BD2  C07F  F280         	movff	?_EncodeNEC+2,UseBluetooth@tempNec+2
  9327  000BD6  C080  F281         	movff	?_EncodeNEC+3,UseBluetooth@tempNec+3
  9328                           
  9329                           ;Bluetooth.c: 479: if(tempNec != 0x00FF00FF)
  9330  000BDA  0102               	movlb	2	; () banked
  9331  000BDC  297E               	incf	UseBluetooth@tempNec& (0+255),w,b
  9332  000BDE  E108               	bnz	u19390
  9333  000BE0  0102               	movlb	2	; () banked
  9334  000BE2  2980               	incf	(UseBluetooth@tempNec+2)& (0+255),w,b
  9335  000BE4  0102               	movlb	2	; () banked
  9336  000BE6  117F               	iorwf	(UseBluetooth@tempNec+1)& (0+255),w,b
  9337  000BE8  0102               	movlb	2	; () banked
  9338  000BEA  1181               	iorwf	(UseBluetooth@tempNec+3)& (0+255),w,b
  9339  000BEC  B4D8               	btfsc	status,2,c
  9340  000BEE  D0A9               	goto	l15610
  9341  000BF0                     u19390:
  9342                           
  9343                           ; BSR set to: 2
  9344                           ;Bluetooth.c: 480: {
  9345                           ;Bluetooth.c: 481: SendNEC_wait(tempNec,0);
  9346  000BF0  C27E  F08E         	movff	UseBluetooth@tempNec,SendNEC_wait@code
  9347  000BF4  C27F  F08F         	movff	UseBluetooth@tempNec+1,SendNEC_wait@code+1
  9348  000BF8  C280  F090         	movff	UseBluetooth@tempNec+2,SendNEC_wait@code+2
  9349  000BFC  C281  F091         	movff	UseBluetooth@tempNec+3,SendNEC_wait@code+3
  9350  000C00  0E00               	movlw	0
  9351  000C02  0100               	movlb	0	; () banked
  9352  000C04  6F92               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  9353  000C06  ECC6  F042         	call	_SendNEC_wait	;wreg free
  9354                           
  9355                           ;Bluetooth.c: 482: sprintf(buf,"Sent NEC code 0x%lX ", tempNec);
  9356  000C0A  0E0F               	movlw	low UseBluetooth@buf
  9357  000C0C  0100               	movlb	0	; () banked
  9358  000C0E  6FC7               	movwf	sprintf@sp& (0+255),b
  9359  000C10  0E02               	movlw	high UseBluetooth@buf
  9360  000C12  0100               	movlb	0	; () banked
  9361  000C14  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  9362  000C16  0EEC               	movlw	low STR_46
  9363  000C18  0100               	movlb	0	; () banked
  9364  000C1A  6FC9               	movwf	sprintf@f& (0+255),b
  9365  000C1C  0EFC               	movlw	high STR_46
  9366  000C1E  0100               	movlb	0	; () banked
  9367  000C20  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  9368  000C22  C27E  F0CB         	movff	UseBluetooth@tempNec,?_sprintf+4
  9369  000C26  C27F  F0CC         	movff	UseBluetooth@tempNec+1,?_sprintf+5
  9370  000C2A  C280  F0CD         	movff	UseBluetooth@tempNec+2,?_sprintf+6
  9371  000C2E  C281  F0CE         	movff	UseBluetooth@tempNec+3,?_sprintf+7
  9372  000C32  ECB5  F010         	call	_sprintf	;wreg free
  9373                           
  9374                           ;Bluetooth.c: 483: UARTstringCRLN(buf);
  9375  000C36  0E0F               	movlw	low UseBluetooth@buf
  9376  000C38  0100               	movlb	0	; () banked
  9377  000C3A  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9378  000C3C  0E02               	movlw	high UseBluetooth@buf
  9379  000C3E  0100               	movlb	0	; () banked
  9380  000C40  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9381  000C42  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9382                           
  9383                           ;Bluetooth.c: 484: sprintf(buf,"NEC Code address: 0x%02X , command: 0x%02X ",Global.Remo
      +                          teButtonNEC[temp-1][0], Global.RemoteButtonNEC[temp-1][1]);
  9384  000C46  0E0F               	movlw	low UseBluetooth@buf
  9385  000C48  0100               	movlb	0	; () banked
  9386  000C4A  6FC7               	movwf	sprintf@sp& (0+255),b
  9387  000C4C  0E02               	movlw	high UseBluetooth@buf
  9388  000C4E  0100               	movlb	0	; () banked
  9389  000C50  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  9390  000C52  0EA8               	movlw	low STR_47
  9391  000C54  0100               	movlb	0	; () banked
  9392  000C56  6FC9               	movwf	sprintf@f& (0+255),b
  9393  000C58  0EF7               	movlw	high STR_47
  9394  000C5A  0100               	movlb	0	; () banked
  9395  000C5C  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  9396  000C5E  0EFE               	movlw	254
  9397  000C60  0102               	movlb	2	; () banked
  9398  000C62  6F03               	movwf	??_UseBluetooth& (0+255),b
  9399  000C64  0EFF               	movlw	255
  9400  000C66  0102               	movlb	2	; () banked
  9401  000C68  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
  9402  000C6A  C28E  F205         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9403  000C6E  C28F  F206         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9404  000C72  90D8               	bcf	status,0,c
  9405  000C74  0102               	movlb	2	; () banked
  9406  000C76  3705               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9407  000C78  3706               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9408  000C7A  0102               	movlb	2	; () banked
  9409  000C7C  5103               	movf	??_UseBluetooth& (0+255),w,b
  9410  000C7E  0102               	movlb	2	; () banked
  9411  000C80  2705               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9412  000C82  0102               	movlb	2	; () banked
  9413  000C84  5104               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9414  000C86  0102               	movlb	2	; () banked
  9415  000C88  2306               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9416  000C8A  0E05               	movlw	low (_Global+5)
  9417  000C8C  0102               	movlb	2	; () banked
  9418  000C8E  2505               	addwf	(??_UseBluetooth+2)& (0+255),w,b
  9419  000C90  6ED9               	movwf	fsr2l,c
  9420  000C92  0E04               	movlw	high (_Global+5)
  9421  000C94  0102               	movlb	2	; () banked
  9422  000C96  2106               	addwfc	(??_UseBluetooth+3)& (0+255),w,b
  9423  000C98  6EDA               	movwf	fsr2h,c
  9424  000C9A  50DF               	movf	indf2,w,c
  9425  000C9C  0102               	movlb	2	; () banked
  9426  000C9E  6F07               	movwf	(??_UseBluetooth+4)& (0+255),b
  9427  000CA0  0102               	movlb	2	; () banked
  9428  000CA2  5107               	movf	(??_UseBluetooth+4)& (0+255),w,b
  9429  000CA4  0100               	movlb	0	; () banked
  9430  000CA6  6FCB               	movwf	(?_sprintf+4)& (0+255),b
  9431  000CA8  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  9432  000CAA  0EFE               	movlw	254
  9433  000CAC  0102               	movlb	2	; () banked
  9434  000CAE  6F08               	movwf	(??_UseBluetooth+5)& (0+255),b
  9435  000CB0  0EFF               	movlw	255
  9436  000CB2  0102               	movlb	2	; () banked
  9437  000CB4  6F09               	movwf	(??_UseBluetooth+6)& (0+255),b
  9438  000CB6  C28E  F20A         	movff	UseBluetooth@temp,??_UseBluetooth+7
  9439  000CBA  C28F  F20B         	movff	UseBluetooth@temp+1,??_UseBluetooth+8
  9440  000CBE  90D8               	bcf	status,0,c
  9441  000CC0  0102               	movlb	2	; () banked
  9442  000CC2  370A               	rlcf	(??_UseBluetooth+7)& (0+255),f,b
  9443  000CC4  370B               	rlcf	(??_UseBluetooth+8)& (0+255),f,b
  9444  000CC6  0102               	movlb	2	; () banked
  9445  000CC8  5108               	movf	(??_UseBluetooth+5)& (0+255),w,b
  9446  000CCA  0102               	movlb	2	; () banked
  9447  000CCC  270A               	addwf	(??_UseBluetooth+7)& (0+255),f,b
  9448  000CCE  0102               	movlb	2	; () banked
  9449  000CD0  5109               	movf	(??_UseBluetooth+6)& (0+255),w,b
  9450  000CD2  0102               	movlb	2	; () banked
  9451  000CD4  230B               	addwfc	(??_UseBluetooth+8)& (0+255),f,b
  9452  000CD6  0E00               	movlw	low _Global
  9453  000CD8  0102               	movlb	2	; () banked
  9454  000CDA  6F0C               	movwf	(??_UseBluetooth+9)& (0+255),b
  9455  000CDC  0E04               	movlw	high _Global
  9456  000CDE  0102               	movlb	2	; () banked
  9457  000CE0  6F0D               	movwf	(??_UseBluetooth+10)& (0+255),b
  9458  000CE2  0E05               	movlw	5
  9459  000CE4  0102               	movlb	2	; () banked
  9460  000CE6  270C               	addwf	(??_UseBluetooth+9)& (0+255),f,b
  9461  000CE8  0E00               	movlw	0
  9462  000CEA  230D               	addwfc	(??_UseBluetooth+10)& (0+255),f,b
  9463  000CEC  0102               	movlb	2	; () banked
  9464  000CEE  510A               	movf	(??_UseBluetooth+7)& (0+255),w,b
  9465  000CF0  0102               	movlb	2	; () banked
  9466  000CF2  270C               	addwf	(??_UseBluetooth+9)& (0+255),f,b
  9467  000CF4  0102               	movlb	2	; () banked
  9468  000CF6  510B               	movf	(??_UseBluetooth+8)& (0+255),w,b
  9469  000CF8  0102               	movlb	2	; () banked
  9470  000CFA  230D               	addwfc	(??_UseBluetooth+10)& (0+255),f,b
  9471  000CFC  0E01               	movlw	1
  9472  000CFE  0102               	movlb	2	; () banked
  9473  000D00  250C               	addwf	(??_UseBluetooth+9)& (0+255),w,b
  9474  000D02  6ED9               	movwf	fsr2l,c
  9475  000D04  0E00               	movlw	0
  9476  000D06  0102               	movlb	2	; () banked
  9477  000D08  210D               	addwfc	(??_UseBluetooth+10)& (0+255),w,b
  9478  000D0A  6EDA               	movwf	fsr2h,c
  9479  000D0C  50DF               	movf	indf2,w,c
  9480  000D0E  0102               	movlb	2	; () banked
  9481  000D10  6F0E               	movwf	(??_UseBluetooth+11)& (0+255),b
  9482  000D12  0102               	movlb	2	; () banked
  9483  000D14  510E               	movf	(??_UseBluetooth+11)& (0+255),w,b
  9484  000D16  0100               	movlb	0	; () banked
  9485  000D18  6FCD               	movwf	(?_sprintf+6)& (0+255),b
  9486  000D1A  6BCE               	clrf	(?_sprintf+7)& (0+255),b
  9487  000D1C  ECB5  F010         	call	_sprintf	;wreg free
  9488                           
  9489                           ;Bluetooth.c: 485: UARTstringCRLN(buf);
  9490  000D20  0E0F               	movlw	low UseBluetooth@buf
  9491  000D22  0100               	movlb	0	; () banked
  9492  000D24  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9493  000D26  0E02               	movlw	high UseBluetooth@buf
  9494  000D28  0100               	movlb	0	; () banked
  9495  000D2A  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9496  000D2C  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9497                           
  9498                           ;Bluetooth.c: 486: UARTstring(CRLN);
  9499  000D30  0ED1               	movlw	low _CRLN
  9500  000D32  0100               	movlb	0	; () banked
  9501  000D34  6F7A               	movwf	UARTstring@data& (0+255),b
  9502  000D36  0EF3               	movlw	high _CRLN
  9503  000D38  0100               	movlb	0	; () banked
  9504  000D3A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9505  000D3C  ECC4  F046         	call	_UARTstring	;wreg free
  9506                           
  9507                           ;Bluetooth.c: 487: return 1;
  9508                           ;	Return value of _UseBluetooth is never used
  9509  000D40  0012               	return	
  9510  000D42                     l15610:
  9511                           
  9512                           ;Bluetooth.c: 488: }
  9513                           ;Bluetooth.c: 489: UARTstring(CRLN);
  9514  000D42  0ED1               	movlw	low _CRLN
  9515  000D44  0100               	movlb	0	; () banked
  9516  000D46  6F7A               	movwf	UARTstring@data& (0+255),b
  9517  000D48  0EF3               	movlw	high _CRLN
  9518  000D4A  0100               	movlb	0	; () banked
  9519  000D4C  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9520  000D4E  ECC4  F046         	call	_UARTstring	;wreg free
  9521                           
  9522                           ;Bluetooth.c: 490: UARTstringCRLN((unsigned char *)"Error: No NEC code saved for specifi
      +                          ed command");
  9523  000D52  0E09               	movlw	low STR_48
  9524  000D54  0100               	movlb	0	; () banked
  9525  000D56  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9526  000D58  0EF6               	movlw	high STR_48
  9527  000D5A  0100               	movlb	0	; () banked
  9528  000D5C  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9529  000D5E  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9530                           
  9531                           ;Bluetooth.c: 491: return 0;
  9532                           ;	Return value of _UseBluetooth is never used
  9533  000D62  0012               	return	
  9534                           
  9535                           ;Bluetooth.c: 492: }
  9536  000D64  D10A               	goto	l15660
  9537  000D66                     l15616:
  9538                           
  9539                           ;Bluetooth.c: 493: else
  9540                           ;Bluetooth.c: 494: {
  9541                           ;Bluetooth.c: 495: if(!WaitForIRsignal())
  9542  000D66  EC5F  F043         	call	_WaitForIRsignal	;wreg free
  9543  000D6A  0900               	iorlw	0
  9544  000D6C  B4D8               	btfsc	status,2,c
  9545  000D6E  0012               	return	
  9546  000D70  D001               	goto	l15620
  9547                           
  9548                           ;Bluetooth.c: 496: {
  9549                           ;Bluetooth.c: 497: return 0;
  9550                           ;	Return value of _UseBluetooth is never used
  9551  000D72  0012               	return	
  9552  000D74                     l15620:
  9553                           
  9554                           ;Bluetooth.c: 498: }
  9555                           ;Bluetooth.c: 501: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
  9556  000D74  C0E1  F07D         	movff	_IR_NEC,DecodeNEC@Nec
  9557  000D78  C0E2  F07E         	movff	_IR_NEC+1,DecodeNEC@Nec+1
  9558  000D7C  C0E3  F07F         	movff	_IR_NEC+2,DecodeNEC@Nec+2
  9559  000D80  C0E4  F080         	movff	_IR_NEC+3,DecodeNEC@Nec+3
  9560  000D84  0E8C               	movlw	low UseBluetooth@NecAddress
  9561  000D86  0100               	movlb	0	; () banked
  9562  000D88  6F81               	movwf	DecodeNEC@address& (0+255),b
  9563  000D8A  0E02               	movlw	high UseBluetooth@NecAddress
  9564  000D8C  0100               	movlb	0	; () banked
  9565  000D8E  6F82               	movwf	(DecodeNEC@address+1)& (0+255),b
  9566  000D90  0E8D               	movlw	low UseBluetooth@NecCommand
  9567  000D92  0100               	movlb	0	; () banked
  9568  000D94  6F83               	movwf	DecodeNEC@command& (0+255),b
  9569  000D96  0E02               	movlw	high UseBluetooth@NecCommand
  9570  000D98  0100               	movlb	0	; () banked
  9571  000D9A  6F84               	movwf	(DecodeNEC@command+1)& (0+255),b
  9572  000D9C  EC7B  F041         	call	_DecodeNEC	;wreg free
  9573                           
  9574                           ;Bluetooth.c: 502: Global.RemoteButtonNEC[temp - 1][0] = NecAddress;
  9575  000DA0  0EFE               	movlw	254
  9576  000DA2  0102               	movlb	2	; () banked
  9577  000DA4  6F03               	movwf	??_UseBluetooth& (0+255),b
  9578  000DA6  0EFF               	movlw	255
  9579  000DA8  0102               	movlb	2	; () banked
  9580  000DAA  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
  9581  000DAC  C28E  F205         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9582  000DB0  C28F  F206         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9583  000DB4  90D8               	bcf	status,0,c
  9584  000DB6  0102               	movlb	2	; () banked
  9585  000DB8  3705               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9586  000DBA  3706               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9587  000DBC  0102               	movlb	2	; () banked
  9588  000DBE  5103               	movf	??_UseBluetooth& (0+255),w,b
  9589  000DC0  0102               	movlb	2	; () banked
  9590  000DC2  2705               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9591  000DC4  0102               	movlb	2	; () banked
  9592  000DC6  5104               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9593  000DC8  0102               	movlb	2	; () banked
  9594  000DCA  2306               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9595  000DCC  0E05               	movlw	low (_Global+5)
  9596  000DCE  0102               	movlb	2	; () banked
  9597  000DD0  2505               	addwf	(??_UseBluetooth+2)& (0+255),w,b
  9598  000DD2  6ED9               	movwf	fsr2l,c
  9599  000DD4  0E04               	movlw	high (_Global+5)
  9600  000DD6  0102               	movlb	2	; () banked
  9601  000DD8  2106               	addwfc	(??_UseBluetooth+3)& (0+255),w,b
  9602  000DDA  6EDA               	movwf	fsr2h,c
  9603  000DDC  C28C  FFDF         	movff	UseBluetooth@NecAddress,indf2
  9604                           
  9605                           ; BSR set to: 2
  9606                           ;Bluetooth.c: 503: Global.RemoteButtonNEC[temp - 1][1] = NecCommand;
  9607  000DE0  0EFE               	movlw	254
  9608  000DE2  0102               	movlb	2	; () banked
  9609  000DE4  6F03               	movwf	??_UseBluetooth& (0+255),b
  9610  000DE6  0EFF               	movlw	255
  9611  000DE8  0102               	movlb	2	; () banked
  9612  000DEA  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
  9613  000DEC  C28E  F205         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9614  000DF0  C28F  F206         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9615  000DF4  90D8               	bcf	status,0,c
  9616  000DF6  0102               	movlb	2	; () banked
  9617  000DF8  3705               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9618  000DFA  3706               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9619  000DFC  0102               	movlb	2	; () banked
  9620  000DFE  5103               	movf	??_UseBluetooth& (0+255),w,b
  9621  000E00  0102               	movlb	2	; () banked
  9622  000E02  2705               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9623  000E04  0102               	movlb	2	; () banked
  9624  000E06  5104               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9625  000E08  0102               	movlb	2	; () banked
  9626  000E0A  2306               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9627  000E0C  0E00               	movlw	low _Global
  9628  000E0E  0102               	movlb	2	; () banked
  9629  000E10  6F07               	movwf	(??_UseBluetooth+4)& (0+255),b
  9630  000E12  0E04               	movlw	high _Global
  9631  000E14  0102               	movlb	2	; () banked
  9632  000E16  6F08               	movwf	(??_UseBluetooth+5)& (0+255),b
  9633  000E18  0E05               	movlw	5
  9634  000E1A  0102               	movlb	2	; () banked
  9635  000E1C  2707               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9636  000E1E  0E00               	movlw	0
  9637  000E20  2308               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9638  000E22  0102               	movlb	2	; () banked
  9639  000E24  5105               	movf	(??_UseBluetooth+2)& (0+255),w,b
  9640  000E26  0102               	movlb	2	; () banked
  9641  000E28  2707               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9642  000E2A  0102               	movlb	2	; () banked
  9643  000E2C  5106               	movf	(??_UseBluetooth+3)& (0+255),w,b
  9644  000E2E  0102               	movlb	2	; () banked
  9645  000E30  2308               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9646  000E32  0E01               	movlw	1
  9647  000E34  0102               	movlb	2	; () banked
  9648  000E36  2507               	addwf	(??_UseBluetooth+4)& (0+255),w,b
  9649  000E38  6ED9               	movwf	fsr2l,c
  9650  000E3A  0E00               	movlw	0
  9651  000E3C  0102               	movlb	2	; () banked
  9652  000E3E  2108               	addwfc	(??_UseBluetooth+5)& (0+255),w,b
  9653  000E40  6EDA               	movwf	fsr2h,c
  9654  000E42  C28D  FFDF         	movff	UseBluetooth@NecCommand,indf2
  9655                           
  9656                           ; BSR set to: 2
  9657                           ;Bluetooth.c: 504: SyncGlobalToEEPROM();
  9658  000E46  ECE9  F047         	call	_SyncGlobalToEEPROM	;wreg free
  9659                           
  9660                           ;Bluetooth.c: 505: UARTstring(CRLN);
  9661  000E4A  0ED1               	movlw	low _CRLN
  9662  000E4C  0100               	movlb	0	; () banked
  9663  000E4E  6F7A               	movwf	UARTstring@data& (0+255),b
  9664  000E50  0EF3               	movlw	high _CRLN
  9665  000E52  0100               	movlb	0	; () banked
  9666  000E54  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9667  000E56  ECC4  F046         	call	_UARTstring	;wreg free
  9668                           
  9669                           ;Bluetooth.c: 506: sprintf(buf,"RemoteButton%ld now transmits NEC code 0x%lX ",temp, IR_
      +                          NEC);
  9670  000E5A  0E0F               	movlw	low UseBluetooth@buf
  9671  000E5C  0100               	movlb	0	; () banked
  9672  000E5E  6FC7               	movwf	sprintf@sp& (0+255),b
  9673  000E60  0E02               	movlw	high UseBluetooth@buf
  9674  000E62  0100               	movlb	0	; () banked
  9675  000E64  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  9676  000E66  0E38               	movlw	low STR_49
  9677  000E68  0100               	movlb	0	; () banked
  9678  000E6A  6FC9               	movwf	sprintf@f& (0+255),b
  9679  000E6C  0EF6               	movlw	high STR_49
  9680  000E6E  0100               	movlb	0	; () banked
  9681  000E70  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  9682  000E72  C28E  F0CB         	movff	UseBluetooth@temp,?_sprintf+4
  9683  000E76  C28F  F0CC         	movff	UseBluetooth@temp+1,?_sprintf+5
  9684  000E7A  C290  F0CD         	movff	UseBluetooth@temp+2,?_sprintf+6
  9685  000E7E  C291  F0CE         	movff	UseBluetooth@temp+3,?_sprintf+7
  9686  000E82  C0E1  F0CF         	movff	_IR_NEC,?_sprintf+8
  9687  000E86  C0E2  F0D0         	movff	_IR_NEC+1,?_sprintf+9
  9688  000E8A  C0E3  F0D1         	movff	_IR_NEC+2,?_sprintf+10
  9689  000E8E  C0E4  F0D2         	movff	_IR_NEC+3,?_sprintf+11
  9690  000E92  ECB5  F010         	call	_sprintf	;wreg free
  9691                           
  9692                           ;Bluetooth.c: 507: UARTstringCRLN(buf);
  9693  000E96  0E0F               	movlw	low UseBluetooth@buf
  9694  000E98  0100               	movlb	0	; () banked
  9695  000E9A  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9696  000E9C  0E02               	movlw	high UseBluetooth@buf
  9697  000E9E  0100               	movlb	0	; () banked
  9698  000EA0  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9699  000EA2  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9700                           
  9701                           ;Bluetooth.c: 508: sprintf(buf,"NEC Code address: 0x%02X , command: 0x%02X ",NecAddress,
      +                           NecCommand);
  9702  000EA6  0E0F               	movlw	low UseBluetooth@buf
  9703  000EA8  0100               	movlb	0	; () banked
  9704  000EAA  6FC7               	movwf	sprintf@sp& (0+255),b
  9705  000EAC  0E02               	movlw	high UseBluetooth@buf
  9706  000EAE  0100               	movlb	0	; () banked
  9707  000EB0  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  9708  000EB2  0EA8               	movlw	low STR_47
  9709  000EB4  0100               	movlb	0	; () banked
  9710  000EB6  6FC9               	movwf	sprintf@f& (0+255),b
  9711  000EB8  0EF7               	movlw	high STR_47
  9712  000EBA  0100               	movlb	0	; () banked
  9713  000EBC  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  9714  000EBE  C28C  F0CB         	movff	UseBluetooth@NecAddress,?_sprintf+4
  9715  000EC2  0100               	movlb	0	; () banked
  9716  000EC4  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  9717  000EC6  C28D  F0CD         	movff	UseBluetooth@NecCommand,?_sprintf+6
  9718  000ECA  0100               	movlb	0	; () banked
  9719  000ECC  6BCE               	clrf	(?_sprintf+7)& (0+255),b
  9720  000ECE  ECB5  F010         	call	_sprintf	;wreg free
  9721                           
  9722                           ;Bluetooth.c: 509: UARTstringCRLN(buf);
  9723  000ED2  0E0F               	movlw	low UseBluetooth@buf
  9724  000ED4  0100               	movlb	0	; () banked
  9725  000ED6  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9726  000ED8  0E02               	movlw	high UseBluetooth@buf
  9727  000EDA  0100               	movlb	0	; () banked
  9728  000EDC  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9729  000EDE  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9730                           
  9731                           ;Bluetooth.c: 510: UARTstring(CRLN);
  9732  000EE2  0ED1               	movlw	low _CRLN
  9733  000EE4  0100               	movlb	0	; () banked
  9734  000EE6  6F7A               	movwf	UARTstring@data& (0+255),b
  9735  000EE8  0EF3               	movlw	high _CRLN
  9736  000EEA  0100               	movlb	0	; () banked
  9737  000EEC  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9738  000EEE  ECC4  F046         	call	_UARTstring	;wreg free
  9739                           
  9740                           ;Bluetooth.c: 512: for(i =0;i<10;i++)
  9741  000EF2  0E00               	movlw	0
  9742  000EF4  0102               	movlb	2	; () banked
  9743  000EF6  6F92               	movwf	UseBluetooth@i& (0+255),b
  9744                           
  9745                           ; BSR set to: 2
  9746  000EF8  0E09               	movlw	9
  9747  000EFA  0102               	movlb	2	; () banked
  9748  000EFC  6592               	cpfsgt	UseBluetooth@i& (0+255),b
  9749  000EFE  D002               	goto	l15646
  9750  000F00  0012               	return	
  9751                           
  9752                           ; BSR set to: 2
  9753  000F02  0012               	return	
  9754  000F04                     l15646:
  9755                           
  9756                           ; BSR set to: 2
  9757                           ;Bluetooth.c: 513: {
  9758                           ;Bluetooth.c: 514: (LATC |= 0x04);
  9759  000F04  848B               	bsf	3979,2,c	;volatile
  9760                           
  9761                           ; BSR set to: 2
  9762                           ;Bluetooth.c: 515: delayUS(50000);
  9763  000F06  0E50               	movlw	80
  9764  000F08  0100               	movlb	0	; () banked
  9765  000F0A  6F79               	movwf	delayUS@US& (0+255),b
  9766  000F0C  0EC3               	movlw	195
  9767  000F0E  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  9768  000F10  0E00               	movlw	0
  9769  000F12  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  9770  000F14  0E00               	movlw	0
  9771  000F16  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  9772  000F18  EC48  F047         	call	_delayUS	;wreg free
  9773                           
  9774                           ;Bluetooth.c: 516: (LATC &= ~0x04);
  9775  000F1C  948B               	bcf	3979,2,c	;volatile
  9776                           
  9777                           ;Bluetooth.c: 517: delayUS(50000);
  9778  000F1E  0E50               	movlw	80
  9779  000F20  0100               	movlb	0	; () banked
  9780  000F22  6F79               	movwf	delayUS@US& (0+255),b
  9781  000F24  0EC3               	movlw	195
  9782  000F26  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  9783  000F28  0E00               	movlw	0
  9784  000F2A  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  9785  000F2C  0E00               	movlw	0
  9786  000F2E  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  9787  000F30  EC48  F047         	call	_delayUS	;wreg free
  9788  000F34  0102               	movlb	2	; () banked
  9789  000F36  2B92               	incf	UseBluetooth@i& (0+255),f,b
  9790                           
  9791                           ; BSR set to: 2
  9792  000F38  0E09               	movlw	9
  9793  000F3A  0102               	movlb	2	; () banked
  9794  000F3C  6592               	cpfsgt	UseBluetooth@i& (0+255),b
  9795  000F3E  D7E2               	goto	l15646
  9796  000F40  0012               	return	
  9797                           
  9798                           ; BSR set to: 2
  9799                           ;Bluetooth.c: 518: }
  9800                           ;Bluetooth.c: 519: return 1;
  9801                           ;	Return value of _UseBluetooth is never used
  9802  000F42  0012               	return	
  9803                           
  9804                           ; BSR set to: 2
  9805                           ;Bluetooth.c: 520: }
  9806                           ;Bluetooth.c: 521: }
  9807  000F44  D01A               	goto	l15660
  9808  000F46                     l15656:
  9809                           
  9810                           ; BSR set to: 2
  9811                           ;Bluetooth.c: 522: else
  9812                           ;Bluetooth.c: 523: {
  9813                           ;Bluetooth.c: 524: UARTstring(CRLN);
  9814  000F46  0ED1               	movlw	low _CRLN
  9815  000F48  0100               	movlb	0	; () banked
  9816  000F4A  6F7A               	movwf	UARTstring@data& (0+255),b
  9817  000F4C  0EF3               	movlw	high _CRLN
  9818  000F4E  0100               	movlb	0	; () banked
  9819  000F50  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9820  000F52  ECC4  F046         	call	_UARTstring	;wreg free
  9821                           
  9822                           ;Bluetooth.c: 525: UARTstringCRLN((unsigned char *)"Error: Remote button number too high
      +                          ");
  9823  000F56  0EC8               	movlw	low STR_51
  9824  000F58  0100               	movlb	0	; () banked
  9825  000F5A  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9826  000F5C  0EF8               	movlw	high STR_51
  9827  000F5E  0100               	movlb	0	; () banked
  9828  000F60  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9829  000F62  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9830                           
  9831                           ;Bluetooth.c: 526: UARTstring(CRLN);
  9832  000F66  0ED1               	movlw	low _CRLN
  9833  000F68  0100               	movlb	0	; () banked
  9834  000F6A  6F7A               	movwf	UARTstring@data& (0+255),b
  9835  000F6C  0EF3               	movlw	high _CRLN
  9836  000F6E  0100               	movlb	0	; () banked
  9837  000F70  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9838  000F72  ECC4  F046         	call	_UARTstring	;wreg free
  9839                           
  9840                           ;Bluetooth.c: 527: return 0;
  9841                           ;	Return value of _UseBluetooth is never used
  9842  000F76  0012               	return	
  9843  000F78  D000               	goto	l15660
  9844  000F7A                     l15660:
  9845                           
  9846                           ;Bluetooth.c: 528: }
  9847                           ;Bluetooth.c: 529: }
  9848                           ;Bluetooth.c: 530: }
  9849                           ;Bluetooth.c: 531: UARTstring(CRLN);
  9850  000F7A  0ED1               	movlw	low _CRLN
  9851  000F7C  0100               	movlb	0	; () banked
  9852  000F7E  6F7A               	movwf	UARTstring@data& (0+255),b
  9853  000F80  0EF3               	movlw	high _CRLN
  9854  000F82  0100               	movlb	0	; () banked
  9855  000F84  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9856  000F86  ECC4  F046         	call	_UARTstring	;wreg free
  9857                           
  9858                           ;Bluetooth.c: 532: UARTstringCRLN((unsigned char *)"Error: Remote button not specified")
      +                          ;
  9859  000F8A  0E11               	movlw	low STR_52
  9860  000F8C  0100               	movlb	0	; () banked
  9861  000F8E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9862  000F90  0EF9               	movlw	high STR_52
  9863  000F92  0100               	movlb	0	; () banked
  9864  000F94  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9865  000F96  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9866                           
  9867                           ;Bluetooth.c: 533: UARTstring(CRLN);
  9868  000F9A  0ED1               	movlw	low _CRLN
  9869  000F9C  0100               	movlb	0	; () banked
  9870  000F9E  6F7A               	movwf	UARTstring@data& (0+255),b
  9871  000FA0  0EF3               	movlw	high _CRLN
  9872  000FA2  0100               	movlb	0	; () banked
  9873  000FA4  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9874  000FA6  ECC4  F046         	call	_UARTstring	;wreg free
  9875                           
  9876                           ;Bluetooth.c: 534: UARTstringCRLN((unsigned char *)"Usage:");
  9877  000FAA  0EB2               	movlw	low STR_36
  9878  000FAC  0100               	movlb	0	; () banked
  9879  000FAE  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9880  000FB0  0EFF               	movlw	high STR_36
  9881  000FB2  0100               	movlb	0	; () banked
  9882  000FB4  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9883  000FB6  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9884                           
  9885                           ;Bluetooth.c: 535: UARTstringCRLN((unsigned char *)"RemoteButton'x'");
  9886  000FBA  0E57               	movlw	low STR_54
  9887  000FBC  0100               	movlb	0	; () banked
  9888  000FBE  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9889  000FC0  0EFE               	movlw	high STR_54
  9890  000FC2  0100               	movlb	0	; () banked
  9891  000FC4  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9892  000FC6  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9893                           
  9894                           ;Bluetooth.c: 536: UARTstringCRLN((unsigned char *)"RemoteButton'x' set");
  9895  000FCA  0E7B               	movlw	low STR_55
  9896  000FCC  0100               	movlb	0	; () banked
  9897  000FCE  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9898  000FD0  0EFD               	movlw	high STR_55
  9899  000FD2  0100               	movlb	0	; () banked
  9900  000FD4  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9901  000FD6  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9902                           
  9903                           ;Bluetooth.c: 537: UARTstring(CRLN);
  9904  000FDA  0ED1               	movlw	low _CRLN
  9905  000FDC  0100               	movlb	0	; () banked
  9906  000FDE  6F7A               	movwf	UARTstring@data& (0+255),b
  9907  000FE0  0EF3               	movlw	high _CRLN
  9908  000FE2  0100               	movlb	0	; () banked
  9909  000FE4  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9910  000FE6  ECC4  F046         	call	_UARTstring	;wreg free
  9911                           
  9912                           ;Bluetooth.c: 538: UARTstringCRLN((unsigned char *)"Example:");
  9913  000FEA  0E91               	movlw	low STR_40
  9914  000FEC  0100               	movlb	0	; () banked
  9915  000FEE  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9916  000FF0  0EFF               	movlw	high STR_40
  9917  000FF2  0100               	movlb	0	; () banked
  9918  000FF4  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9919  000FF6  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9920                           
  9921                           ;Bluetooth.c: 539: UARTstringCRLN((unsigned char *)"RemoteButton1");
  9922  000FFA  0E96               	movlw	low STR_57
  9923  000FFC  0100               	movlb	0	; () banked
  9924  000FFE  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9925  001000  0EFE               	movlw	high STR_57
  9926  001002  0100               	movlb	0	; () banked
  9927  001004  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9928  001006  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9929                           
  9930                           ;Bluetooth.c: 540: UARTstringCRLN((unsigned char *)"RemoteButton1 set");
  9931  00100A  0E00               	movlw	low STR_58
  9932  00100C  0100               	movlb	0	; () banked
  9933  00100E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9934  001010  0EFE               	movlw	high STR_58
  9935  001012  0100               	movlb	0	; () banked
  9936  001014  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9937  001016  EC69  F045         	call	_UARTstringCRLN	;wreg free
  9938                           
  9939                           ;Bluetooth.c: 541: UARTstring(CRLN);
  9940  00101A  0ED1               	movlw	low _CRLN
  9941  00101C  0100               	movlb	0	; () banked
  9942  00101E  6F7A               	movwf	UARTstring@data& (0+255),b
  9943  001020  0EF3               	movlw	high _CRLN
  9944  001022  0100               	movlb	0	; () banked
  9945  001024  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9946  001026  ECC4  F046         	call	_UARTstring	;wreg free
  9947                           
  9948                           ;Bluetooth.c: 543: }
  9949                           
  9950                           ;Bluetooth.c: 542: return 0;
  9951                           ;	Return value of _UseBluetooth is never used
  9952  00102A  0012               	return	
  9953  00102C                     l15666:
  9954                           
  9955                           ;Bluetooth.c: 544: else if(StringContainsCaseInsensitive(String,(unsigned char *)"RF set
      +                          ") || StringContainsCaseInsensitive(String,(unsigned char *)"RF clear"))
  9956  00102C  C200  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9957  001030  C201  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9958  001034  0EB9               	movlw	low STR_59
  9959  001036  0100               	movlb	0	; () banked
  9960  001038  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9961  00103A  0EFF               	movlw	high STR_59
  9962  00103C  0100               	movlb	0	; () banked
  9963  00103E  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9964  001040  EC5A  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  9965  001044  0900               	iorlw	0
  9966  001046  A4D8               	btfss	status,2,c
  9967  001048  D010               	goto	l15670
  9968  00104A  C200  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9969  00104E  C201  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9970  001052  0E9A               	movlw	low STR_60
  9971  001054  0100               	movlb	0	; () banked
  9972  001056  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9973  001058  0EFF               	movlw	high STR_60
  9974  00105A  0100               	movlb	0	; () banked
  9975  00105C  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9976  00105E  EC5A  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  9977  001062  0900               	iorlw	0
  9978  001064  B4D8               	btfsc	status,2,c
  9979  001066  EFA1  F00C         	goto	l15948
  9980  00106A                     l15670:
  9981                           
  9982                           ;Bluetooth.c: 545: {
  9983                           ;Bluetooth.c: 546: if(StringContainsCaseInsensitive(String,(unsigned char *)"RF set"))
  9984  00106A  C200  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9985  00106E  C201  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9986  001072  0EB9               	movlw	low STR_59
  9987  001074  0100               	movlb	0	; () banked
  9988  001076  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9989  001078  0EFF               	movlw	high STR_59
  9990  00107A  0100               	movlb	0	; () banked
  9991  00107C  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9992  00107E  EC5A  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  9993  001082  0900               	iorlw	0
  9994  001084  B4D8               	btfsc	status,2,c
  9995  001086  D002               	goto	l15674
  9996                           
  9997                           ;Bluetooth.c: 547: {
  9998                           ;Bluetooth.c: 548: set = 1;
  9999  001088  0E01               	movlw	1
 10000  00108A  D001               	goto	L4
 10001  00108C                     l15674:
 10002                           
 10003                           ;Bluetooth.c: 550: else
 10004                           ;Bluetooth.c: 551: {
 10005                           ;Bluetooth.c: 552: set = 0;
 10006  00108C  0E00               	movlw	0
 10007  00108E                     L4:
 10008  00108E  0102               	movlb	2	; () banked
 10009  001090  6F7D               	movwf	UseBluetooth@set& (0+255),b
 10010  001092  D000               	goto	l15676
 10011  001094                     l15676:
 10012                           
 10013                           ; BSR set to: 2
 10014                           ;Bluetooth.c: 553: }
 10015                           ;Bluetooth.c: 554: if(!StringAddEqual(String))
 10016  001094  C200  F088         	movff	UseBluetooth@String,StringAddEqual@Input
 10017  001098  C201  F089         	movff	UseBluetooth@String+1,StringAddEqual@Input+1
 10018  00109C  EC1E  F031         	call	_StringAddEqual	;wreg free
 10019  0010A0  0900               	iorlw	0
 10020  0010A2  A4D8               	btfss	status,2,c
 10021  0010A4  D011               	goto	l15682
 10022                           
 10023                           ;Bluetooth.c: 555: {
 10024                           ;Bluetooth.c: 556: UARTstringCRLN((unsigned char *)"Error: No RF configuration specified
      +                          ");
 10025  0010A6  0E7E               	movlw	low STR_62
 10026  0010A8  0100               	movlb	0	; () banked
 10027  0010AA  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10028  0010AC  0EF8               	movlw	high STR_62
 10029  0010AE  0100               	movlb	0	; () banked
 10030  0010B0  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10031  0010B2  EC69  F045         	call	_UARTstringCRLN	;wreg free
 10032                           
 10033                           ;Bluetooth.c: 557: UARTstring(CRLN);
 10034  0010B6  0ED1               	movlw	low _CRLN
 10035  0010B8  0100               	movlb	0	; () banked
 10036  0010BA  6F7A               	movwf	UARTstring@data& (0+255),b
 10037  0010BC  0EF3               	movlw	high _CRLN
 10038  0010BE  0100               	movlb	0	; () banked
 10039  0010C0  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10040  0010C2  ECC4  F046         	call	_UARTstring	;wreg free
 10041                           
 10042                           ;Bluetooth.c: 558: return 0;
 10043                           ;	Return value of _UseBluetooth is never used
 10044  0010C6  0012               	return	
 10045  0010C8                     l15682:
 10046                           
 10047                           ;Bluetooth.c: 559: }
 10048                           ;Bluetooth.c: 560: StringPos++;
 10049  0010C8  0102               	movlb	2	; () banked
 10050  0010CA  2B02               	incf	UseBluetooth@StringPos& (0+255),f,b
 10051                           
 10052                           ; BSR set to: 2
 10053                           ;Bluetooth.c: 561: UARTstring(CRLN);
 10054  0010CC  0ED1               	movlw	low _CRLN
 10055  0010CE  0100               	movlb	0	; () banked
 10056  0010D0  6F7A               	movwf	UARTstring@data& (0+255),b
 10057  0010D2  0EF3               	movlw	high _CRLN
 10058  0010D4  0100               	movlb	0	; () banked
 10059  0010D6  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10060  0010D8  ECC4  F046         	call	_UARTstring	;wreg free
 10061                           
 10062                           ;Bluetooth.c: 562: if(!GetNumber(String, 1, &temp))
 10063  0010DC  C200  F085         	movff	UseBluetooth@String,GetNumber@This
 10064  0010E0  C201  F086         	movff	UseBluetooth@String+1,GetNumber@This+1
 10065  0010E4  0E01               	movlw	1
 10066  0010E6  0100               	movlb	0	; () banked
 10067  0010E8  6F87               	movwf	GetNumber@CommaNumber& (0+255),b
 10068  0010EA  0E8E               	movlw	low UseBluetooth@temp
 10069  0010EC  0100               	movlb	0	; () banked
 10070  0010EE  6F88               	movwf	GetNumber@result& (0+255),b
 10071  0010F0  0E02               	movlw	high UseBluetooth@temp
 10072  0010F2  0100               	movlb	0	; () banked
 10073  0010F4  6F89               	movwf	(GetNumber@result+1)& (0+255),b
 10074  0010F6  ECEC  F023         	call	_GetNumber	;wreg free
 10075  0010FA  0900               	iorlw	0
 10076  0010FC  A4D8               	btfss	status,2,c
 10077  0010FE  D003               	goto	l15690
 10078                           
 10079                           ;Bluetooth.c: 563: {
 10080                           ;Bluetooth.c: 564: rfconf = (unsigned char) temp;
 10081  001100  C28E  F28B         	movff	UseBluetooth@temp,UseBluetooth@rfconf
 10082                           
 10083                           ;Bluetooth.c: 565: }
 10084  001104  D011               	goto	l15694
 10085  001106                     l15690:
 10086                           
 10087                           ;Bluetooth.c: 566: else
 10088                           ;Bluetooth.c: 567: {
 10089                           ;Bluetooth.c: 568: UARTstringCRLN((unsigned char *)"Error: No RF configuration specified
      +                          ");
 10090  001106  0E7E               	movlw	low STR_62
 10091  001108  0100               	movlb	0	; () banked
 10092  00110A  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10093  00110C  0EF8               	movlw	high STR_62
 10094  00110E  0100               	movlb	0	; () banked
 10095  001110  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10096  001112  EC69  F045         	call	_UARTstringCRLN	;wreg free
 10097                           
 10098                           ;Bluetooth.c: 569: UARTstring(CRLN);
 10099  001116  0ED1               	movlw	low _CRLN
 10100  001118  0100               	movlb	0	; () banked
 10101  00111A  6F7A               	movwf	UARTstring@data& (0+255),b
 10102  00111C  0EF3               	movlw	high _CRLN
 10103  00111E  0100               	movlb	0	; () banked
 10104  001120  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10105  001122  ECC4  F046         	call	_UARTstring	;wreg free
 10106                           
 10107                           ;Bluetooth.c: 570: return 0;
 10108                           ;	Return value of _UseBluetooth is never used
 10109  001126  0012               	return	
 10110  001128                     l15694:
 10111                           
 10112                           ;Bluetooth.c: 571: }
 10113                           ;Bluetooth.c: 572: if(rfconf <= 0 || rfconf > 2)
 10114  001128  0102               	movlb	2	; () banked
 10115  00112A  518B               	movf	UseBluetooth@rfconf& (0+255),w,b
 10116  00112C  0102               	movlb	2	; () banked
 10117  00112E  B4D8               	btfsc	status,2,c
 10118  001130  D005               	goto	l15698
 10119                           
 10120                           ; BSR set to: 2
 10121  001132  0E02               	movlw	2
 10122  001134  0102               	movlb	2	; () banked
 10123  001136  658B               	cpfsgt	UseBluetooth@rfconf& (0+255),b
 10124  001138  D012               	goto	l15702
 10125  00113A  D000               	goto	l15698
 10126  00113C                     l15698:
 10127                           
 10128                           ; BSR set to: 2
 10129                           ;Bluetooth.c: 573: {
 10130                           ;Bluetooth.c: 574: UARTstringCRLN((unsigned char *)"Error: RF configuration out of range
      +                          ");
 10131  00113C  0EA3               	movlw	low STR_64
 10132  00113E  0100               	movlb	0	; () banked
 10133  001140  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10134  001142  0EF8               	movlw	high STR_64
 10135  001144  0100               	movlb	0	; () banked
 10136  001146  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10137  001148  EC69  F045         	call	_UARTstringCRLN	;wreg free
 10138                           
 10139                           ;Bluetooth.c: 575: UARTstring(CRLN);
 10140  00114C  0ED1               	movlw	low _CRLN
 10141  00114E  0100               	movlb	0	; () banked
 10142  001150  6F7A               	movwf	UARTstring@data& (0+255),b
 10143  001152  0EF3               	movlw	high _CRLN
 10144  001154  0100               	movlb	0	; () banked
 10145  001156  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10146  001158  ECC4  F046         	call	_UARTstring	;wreg free
 10147                           
 10148                           ;Bluetooth.c: 576: return 0;
 10149                           ;	Return value of _UseBluetooth is never used
 10150  00115C  0012               	return	
 10151  00115E                     l15702:
 10152                           
 10153                           ;Bluetooth.c: 577: }
 10154                           ;Bluetooth.c: 578: if(GetStringAfterComma(String, 1, rfchannelSTR))
 10155  00115E  C200  F079         	movff	UseBluetooth@String,GetStringAfterComma@This
 10156  001162  C201  F07A         	movff	UseBluetooth@String+1,GetStringAfterComma@This+1
 10157  001166  0E01               	movlw	1
 10158  001168  0100               	movlb	0	; () banked
 10159  00116A  6F7B               	movwf	GetStringAfterComma@CommaNumber& (0+255),b
 10160  00116C  0E73               	movlw	low UseBluetooth@rfchannelSTR
 10161  00116E  0100               	movlb	0	; () banked
 10162  001170  6F7C               	movwf	GetStringAfterComma@result& (0+255),b
 10163  001172  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10164  001174  0100               	movlb	0	; () banked
 10165  001176  6F7D               	movwf	(GetStringAfterComma@result+1)& (0+255),b
 10166  001178  EC0C  F03C         	call	_GetStringAfterComma	;wreg free
 10167  00117C  0900               	iorlw	0
 10168  00117E  B4D8               	btfsc	status,2,c
 10169  001180  D011               	goto	l15710
 10170                           
 10171                           ;Bluetooth.c: 579: {
 10172                           ;Bluetooth.c: 580: UARTstringCRLN((unsigned char *)"Error: No RF channel specified");
 10173  001182  0EB0               	movlw	low STR_65
 10174  001184  0100               	movlb	0	; () banked
 10175  001186  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10176  001188  0EFA               	movlw	high STR_65
 10177  00118A  0100               	movlb	0	; () banked
 10178  00118C  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10179  00118E  EC69  F045         	call	_UARTstringCRLN	;wreg free
 10180                           
 10181                           ;Bluetooth.c: 581: UARTstring(CRLN);
 10182  001192  0ED1               	movlw	low _CRLN
 10183  001194  0100               	movlb	0	; () banked
 10184  001196  6F7A               	movwf	UARTstring@data& (0+255),b
 10185  001198  0EF3               	movlw	high _CRLN
 10186  00119A  0100               	movlb	0	; () banked
 10187  00119C  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10188  00119E  ECC4  F046         	call	_UARTstring	;wreg free
 10189                           
 10190                           ;Bluetooth.c: 583: }
 10191                           
 10192                           ;Bluetooth.c: 582: return 0;
 10193                           ;	Return value of _UseBluetooth is never used
 10194  0011A2  0012               	return	
 10195  0011A4                     l15710:
 10196                           
 10197                           ;Bluetooth.c: 584: else
 10198                           ;Bluetooth.c: 585: {
 10199                           ;Bluetooth.c: 586: lowercaseString(rfchannelSTR);
 10200  0011A4  0E73               	movlw	low UseBluetooth@rfchannelSTR
 10201  0011A6  0100               	movlb	0	; () banked
 10202  0011A8  6F79               	movwf	lowercaseString@Input& (0+255),b
 10203  0011AA  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10204  0011AC  0100               	movlb	0	; () banked
 10205  0011AE  6F7A               	movwf	(lowercaseString@Input+1)& (0+255),b
 10206  0011B0  EC2F  F048         	call	_lowercaseString	;wreg free
 10207                           
 10208                           ;Bluetooth.c: 587: if(rfchannelSTR[1] == 0 || rfchannelSTR[1] == ' ')
 10209  0011B4  0102               	movlb	2	; () banked
 10210  0011B6  5174               	movf	(UseBluetooth@rfchannelSTR+1)& (0+255),w,b
 10211  0011B8  B4D8               	btfsc	status,2,c
 10212  0011BA  D005               	goto	l15716
 10213                           
 10214                           ; BSR set to: 2
 10215  0011BC  0E20               	movlw	32
 10216  0011BE  0102               	movlb	2	; () banked
 10217  0011C0  1974               	xorwf	(UseBluetooth@rfchannelSTR+1)& (0+255),w,b
 10218  0011C2  A4D8               	btfss	status,2,c
 10219  0011C4  D3AD               	goto	l15944
 10220  0011C6                     l15716:
 10221                           
 10222                           ; BSR set to: 2
 10223                           ;Bluetooth.c: 588: {
 10224                           ;Bluetooth.c: 589: rfchannelSTR[1] = 0;
 10225  0011C6  0E00               	movlw	0
 10226  0011C8  0102               	movlb	2	; () banked
 10227  0011CA  6F74               	movwf	(UseBluetooth@rfchannelSTR+1)& (0+255),b
 10228                           
 10229                           ; BSR set to: 2
 10230                           ;Bluetooth.c: 590: if(rfconf == 1)
 10231  0011CC  0102               	movlb	2	; () banked
 10232  0011CE  058B               	decf	UseBluetooth@rfconf& (0+255),w,b
 10233  0011D0  A4D8               	btfss	status,2,c
 10234  0011D2  D015               	goto	l15724
 10235                           
 10236                           ; BSR set to: 2
 10237                           ;Bluetooth.c: 591: {
 10238                           ;Bluetooth.c: 592: if(!StringContainsCaseInsensitive(Conf1_Channels, rfchannelSTR))
 10239  0011D4  0EC9               	movlw	low _Conf1_Channels
 10240  0011D6  0100               	movlb	0	; () banked
 10241  0011D8  6F7C               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 10242  0011DA  0EF3               	movlw	high _Conf1_Channels
 10243  0011DC  0100               	movlb	0	; () banked
 10244  0011DE  6F7D               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 10245  0011E0  0E73               	movlw	low UseBluetooth@rfchannelSTR
 10246  0011E2  0100               	movlb	0	; () banked
 10247  0011E4  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10248  0011E6  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10249  0011E8  0100               	movlb	0	; () banked
 10250  0011EA  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10251  0011EC  EC5A  F03A         	call	_StringContainsCaseInsensitive	;wreg free
 10252  0011F0  0900               	iorlw	0
 10253  0011F2  A4D8               	btfss	status,2,c
 10254  0011F4  D019               	goto	l1915
 10255                           
 10256                           ;Bluetooth.c: 593: {
 10257                           ;Bluetooth.c: 594: ok = 0;
 10258  0011F6  0E00               	movlw	0
 10259  0011F8  0102               	movlb	2	; () banked
 10260  0011FA  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10261                           
 10262                           ; BSR set to: 2
 10263                           ;Bluetooth.c: 595: }
 10264                           ;Bluetooth.c: 596: }
 10265  0011FC  D015               	goto	l1915
 10266  0011FE                     l15724:
 10267                           
 10268                           ; BSR set to: 2
 10269                           ;Bluetooth.c: 597: else if(rfconf == 2)
 10270  0011FE  0E02               	movlw	2
 10271  001200  0102               	movlb	2	; () banked
 10272  001202  198B               	xorwf	UseBluetooth@rfconf& (0+255),w,b
 10273  001204  A4D8               	btfss	status,2,c
 10274  001206  D010               	goto	l1915
 10275                           
 10276                           ; BSR set to: 2
 10277                           ;Bluetooth.c: 598: {
 10278                           ;Bluetooth.c: 599: if(!StringContainsCaseInsensitive(Conf2_Channels, rfchannelSTR))
 10279  001208  0ECD               	movlw	low _Conf2_Channels
 10280  00120A  0100               	movlb	0	; () banked
 10281  00120C  6F7C               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 10282  00120E  0EF3               	movlw	high _Conf2_Channels
 10283  001210  0100               	movlb	0	; () banked
 10284  001212  6F7D               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 10285  001214  0E73               	movlw	low UseBluetooth@rfchannelSTR
 10286  001216  0100               	movlb	0	; () banked
 10287  001218  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10288  00121A  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10289  00121C  0100               	movlb	0	; () banked
 10290  00121E  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10291  001220  EC5A  F03A         	call	_StringContainsCaseInsensitive	;wreg free
 10292  001224  D7E5               	goto	L10
 10293                           
 10294                           ; BSR set to: 2
 10295                           
 10296                           ;Bluetooth.c: 600: {
 10297                           ;Bluetooth.c: 601: ok = 0;
 10298  001226  D000               	goto	l1915
 10299  001228                     l1915:
 10300                           
 10301                           ;Bluetooth.c: 602: }
 10302                           ;Bluetooth.c: 603: }
 10303                           ;Bluetooth.c: 604: if(!ok)
 10304  001228  0102               	movlb	2	; () banked
 10305  00122A  5189               	movf	UseBluetooth@ok& (0+255),w,b
 10306  00122C  0102               	movlb	2	; () banked
 10307  00122E  A4D8               	btfss	status,2,c
 10308  001230  D011               	goto	l15734
 10309                           
 10310                           ; BSR set to: 2
 10311                           ;Bluetooth.c: 605: {
 10312                           ;Bluetooth.c: 606: UARTstringCRLN((unsigned char *)"Error: RF channel out of range");
 10313  001232  0ECF               	movlw	low STR_66
 10314  001234  0100               	movlb	0	; () banked
 10315  001236  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10316  001238  0EFA               	movlw	high STR_66
 10317  00123A  0100               	movlb	0	; () banked
 10318  00123C  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10319  00123E  EC69  F045         	call	_UARTstringCRLN	;wreg free
 10320                           
 10321                           ;Bluetooth.c: 607: UARTstring(CRLN);
 10322  001242  0ED1               	movlw	low _CRLN
 10323  001244  0100               	movlb	0	; () banked
 10324  001246  6F7A               	movwf	UARTstring@data& (0+255),b
 10325  001248  0EF3               	movlw	high _CRLN
 10326  00124A  0100               	movlb	0	; () banked
 10327  00124C  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10328  00124E  ECC4  F046         	call	_UARTstring	;wreg free
 10329                           
 10330                           ;Bluetooth.c: 608: return 0;
 10331                           ;	Return value of _UseBluetooth is never used
 10332  001252  0012               	return	
 10333  001254                     l15734:
 10334                           
 10335                           ;Bluetooth.c: 609: }
 10336                           ;Bluetooth.c: 611: if(rfconf == 1)
 10337  001254  0102               	movlb	2	; () banked
 10338  001256  058B               	decf	UseBluetooth@rfconf& (0+255),w,b
 10339  001258  A4D8               	btfss	status,2,c
 10340  00125A  D017               	goto	l15748
 10341                           
 10342                           ; BSR set to: 2
 10343                           ;Bluetooth.c: 612: {
 10344                           ;Bluetooth.c: 613: if(rfchannelSTR[0] == 'd')
 10345  00125C  0E64               	movlw	100
 10346  00125E  0102               	movlb	2	; () banked
 10347  001260  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10348  001262  A4D8               	btfss	status,2,c
 10349  001264  D002               	goto	l15740
 10350                           
 10351                           ; BSR set to: 2
 10352                           ;Bluetooth.c: 614: {
 10353                           ;Bluetooth.c: 615: tempRFArray = 0;
 10354  001266  0E00               	movlw	0
 10355  001268  D0B9               	goto	L9
 10356  00126A                     l15740:
 10357                           
 10358                           ; BSR set to: 2
 10359                           ;Bluetooth.c: 617: else if(rfchannelSTR[0] == 'e')
 10360  00126A  0E65               	movlw	101
 10361  00126C  0102               	movlb	2	; () banked
 10362  00126E  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10363  001270  A4D8               	btfss	status,2,c
 10364  001272  D002               	goto	l15744
 10365                           
 10366                           ; BSR set to: 2
 10367                           ;Bluetooth.c: 618: {
 10368                           ;Bluetooth.c: 619: tempRFArray = 1;
 10369  001274  0E01               	movlw	1
 10370  001276  D0B2               	goto	L9
 10371  001278                     l15744:
 10372                           
 10373                           ; BSR set to: 2
 10374                           ;Bluetooth.c: 621: else if(rfchannelSTR[0] == 'f')
 10375  001278  0E66               	movlw	102
 10376  00127A  0102               	movlb	2	; () banked
 10377  00127C  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10378  00127E  A4D8               	btfss	status,2,c
 10379  001280  0012               	return	
 10380                           
 10381                           ; BSR set to: 2
 10382                           ;Bluetooth.c: 622: {
 10383                           ;Bluetooth.c: 623: tempRFArray = 2;
 10384  001282  0E02               	movlw	2
 10385  001284  D0AB               	goto	L9
 10386                           
 10387                           ; BSR set to: 2
 10388                           ;Bluetooth.c: 625: else
 10389                           ;Bluetooth.c: 626: {
 10390                           ;Bluetooth.c: 628: return 0;
 10391                           ;	Return value of _UseBluetooth is never used
 10392                           
 10393                           ;Bluetooth.c: 624: }
 10394  001286  0012               	return	
 10395                           
 10396                           ; BSR set to: 2
 10397                           ;Bluetooth.c: 629: }
 10398                           ;Bluetooth.c: 630: }
 10399                           
 10400                           ; BSR set to: 2
 10401                           
 10402                           ; BSR set to: 2
 10403  001288  D0AE               	goto	l15816
 10404  00128A                     l15748:
 10405                           
 10406                           ; BSR set to: 2
 10407                           ;Bluetooth.c: 631: else if(rfconf ==2)
 10408  00128A  0E02               	movlw	2
 10409  00128C  0102               	movlb	2	; () banked
 10410  00128E  198B               	xorwf	UseBluetooth@rfconf& (0+255),w,b
 10411  001290  A4D8               	btfss	status,2,c
 10412  001292  D0A9               	goto	l15816
 10413                           
 10414                           ; BSR set to: 2
 10415                           ;Bluetooth.c: 632: {
 10416                           ;Bluetooth.c: 633: if(rfchannelSTR[0] == 'b')
 10417  001294  0E62               	movlw	98
 10418  001296  0102               	movlb	2	; () banked
 10419  001298  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10420  00129A  A4D8               	btfss	status,2,c
 10421  00129C  D002               	goto	l15754
 10422                           
 10423                           ; BSR set to: 2
 10424                           ;Bluetooth.c: 634: {
 10425                           ;Bluetooth.c: 635: tempRFArray = 3;
 10426  00129E  0E03               	movlw	3
 10427  0012A0  D09D               	goto	L9
 10428  0012A2                     l15754:
 10429                           
 10430                           ; BSR set to: 2
 10431                           ;Bluetooth.c: 637: else if(rfchannelSTR[0] == 'd')
 10432  0012A2  0E64               	movlw	100
 10433  0012A4  0102               	movlb	2	; () banked
 10434  0012A6  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10435  0012A8  A4D8               	btfss	status,2,c
 10436  0012AA  D002               	goto	l15758
 10437                           
 10438                           ; BSR set to: 2
 10439                           ;Bluetooth.c: 638: {
 10440                           ;Bluetooth.c: 639: tempRFArray = 4;
 10441  0012AC  0E04               	movlw	4
 10442  0012AE  D096               	goto	L9
 10443  0012B0                     l15758:
 10444                           
 10445                           ; BSR set to: 2
 10446                           ;Bluetooth.c: 641: else if(rfchannelSTR[0] == 'h')
 10447  0012B0  0E68               	movlw	104
 10448  0012B2  0102               	movlb	2	; () banked
 10449  0012B4  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10450  0012B6  A4D8               	btfss	status,2,c
 10451  0012B8  0012               	return	
 10452                           
 10453                           ; BSR set to: 2
 10454                           ;Bluetooth.c: 642: {
 10455                           ;Bluetooth.c: 643: cleanBuffer(ReceivedString, ReceivedStringPos);
 10456  0012BA  0E00               	movlw	low _ReceivedString
 10457  0012BC  0100               	movlb	0	; () banked
 10458  0012BE  6F79               	movwf	cleanBuffer@data& (0+255),b
 10459  0012C0  0E06               	movlw	high _ReceivedString
 10460  0012C2  0100               	movlb	0	; () banked
 10461  0012C4  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 10462  0012C6  C0E0  F07B         	movff	_ReceivedStringPos,cleanBuffer@count
 10463  0012CA  0100               	movlb	0	; () banked
 10464  0012CC  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 10465  0012CE  EC97  F046         	call	_cleanBuffer	;wreg free
 10466                           
 10467                           ;Bluetooth.c: 644: ReceivedStringPos = 0;
 10468  0012D2  0E00               	movlw	0
 10469  0012D4  0100               	movlb	0	; () banked
 10470  0012D6  6FE0               	movwf	_ReceivedStringPos& (0+255),b
 10471                           
 10472                           ; BSR set to: 0
 10473                           ;Bluetooth.c: 645: NewReceivedString = 0;
 10474  0012D8  0E00               	movlw	0
 10475  0012DA  0100               	movlb	0	; () banked
 10476  0012DC  6FDF               	movwf	_NewReceivedString& (0+255),b	;volatile
 10477                           
 10478                           ; BSR set to: 0
 10479                           ;Bluetooth.c: 646: UARTstring((unsigned char *)"Which device?");
 10480  0012DE  0EA4               	movlw	low STR_67
 10481  0012E0  0100               	movlb	0	; () banked
 10482  0012E2  6F7A               	movwf	UARTstring@data& (0+255),b
 10483  0012E4  0EFE               	movlw	high STR_67
 10484  0012E6  0100               	movlb	0	; () banked
 10485  0012E8  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10486  0012EA  ECC4  F046         	call	_UARTstring	;wreg free
 10487                           
 10488                           ;Bluetooth.c: 647: UARTstring(CRLN);
 10489  0012EE  0ED1               	movlw	low _CRLN
 10490  0012F0  0100               	movlb	0	; () banked
 10491  0012F2  6F7A               	movwf	UARTstring@data& (0+255),b
 10492  0012F4  0EF3               	movlw	high _CRLN
 10493  0012F6  0100               	movlb	0	; () banked
 10494  0012F8  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10495  0012FA  ECC4  F046         	call	_UARTstring	;wreg free
 10496                           
 10497                           ;Bluetooth.c: 648: UARTchar('>');
 10498  0012FE  0E3E               	movlw	62
 10499  001300  ECB0  F049         	call	_UARTchar
 10500                           
 10501                           ;Bluetooth.c: 649: timeout = 0;
 10502  001304  0E00               	movlw	0
 10503  001306  0102               	movlb	2	; () banked
 10504  001308  6F82               	movwf	UseBluetooth@timeout& (0+255),b
 10505                           
 10506                           ; BSR set to: 2
 10507                           ;Bluetooth.c: 650: ClearUSART();
 10508  00130A  EC4E  F04A         	call	_ClearUSART	;wreg free
 10509                           
 10510                           ;Bluetooth.c: 651: PIR1bits.RCIF = 0;
 10511  00130E  9A9E               	bcf	3998,5,c	;volatile
 10512                           
 10513                           ;Bluetooth.c: 652: PIE1bits.RCIE = 1;
 10514  001310  8A9D               	bsf	3997,5,c	;volatile
 10515                           
 10516                           ;Bluetooth.c: 653: while(!NewReceivedString)
 10517  001312  D023               	goto	l15790
 10518  001314                     l15780:
 10519                           
 10520                           ;Bluetooth.c: 654: {
 10521                           ;Bluetooth.c: 655: delayUS(300000);
 10522  001314  0EE0               	movlw	224
 10523  001316  0100               	movlb	0	; () banked
 10524  001318  6F79               	movwf	delayUS@US& (0+255),b
 10525  00131A  0E93               	movlw	147
 10526  00131C  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 10527  00131E  0E04               	movlw	4
 10528  001320  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 10529  001322  0E00               	movlw	0
 10530  001324  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 10531  001326  EC48  F047         	call	_delayUS	;wreg free
 10532                           
 10533                           ;Bluetooth.c: 656: timeout++;
 10534  00132A  0102               	movlb	2	; () banked
 10535  00132C  2B82               	incf	UseBluetooth@timeout& (0+255),f,b
 10536                           
 10537                           ; BSR set to: 2
 10538                           ;Bluetooth.c: 657: if(timeout > 25)
 10539  00132E  0E19               	movlw	25
 10540  001330  0102               	movlb	2	; () banked
 10541  001332  6582               	cpfsgt	UseBluetooth@timeout& (0+255),b
 10542  001334  D012               	goto	l15790
 10543                           
 10544                           ; BSR set to: 2
 10545                           ;Bluetooth.c: 658: {
 10546                           ;Bluetooth.c: 659: UARTstring(CRLN);
 10547  001336  0ED1               	movlw	low _CRLN
 10548  001338  0100               	movlb	0	; () banked
 10549  00133A  6F7A               	movwf	UARTstring@data& (0+255),b
 10550  00133C  0EF3               	movlw	high _CRLN
 10551  00133E  0100               	movlb	0	; () banked
 10552  001340  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10553  001342  ECC4  F046         	call	_UARTstring	;wreg free
 10554                           
 10555                           ;Bluetooth.c: 660: UARTstringCRLN((unsigned char *)"Error: No RF config 2, channel H dev
      +                          ice specified");
 10556  001346  0E7F               	movlw	low STR_68
 10557  001348  0100               	movlb	0	; () banked
 10558  00134A  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10559  00134C  0EF4               	movlw	high STR_68
 10560  00134E  0100               	movlb	0	; () banked
 10561  001350  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10562  001352  EC69  F045         	call	_UARTstringCRLN	;wreg free
 10563                           
 10564                           ;Bluetooth.c: 661: return 0;
 10565                           ;	Return value of _UseBluetooth is never used
 10566  001356  0012               	return	
 10567  001358  D000               	goto	l15790
 10568  00135A                     l15790:
 10569  00135A  0100               	movlb	0	; () banked
 10570  00135C  51DF               	movf	_NewReceivedString& (0+255),w,b	;volatile
 10571  00135E  B4D8               	btfsc	status,2,c
 10572  001360  D7D9               	goto	l15780
 10573                           
 10574                           ; BSR set to: 0
 10575                           ;Bluetooth.c: 662: }
 10576                           ;Bluetooth.c: 663: }
 10577                           ;Bluetooth.c: 664: PIE1bits.RCIE = 0;
 10578  001362  9A9D               	bcf	3997,5,c	;volatile
 10579                           
 10580                           ; BSR set to: 0
 10581                           ;Bluetooth.c: 665: ok = 1;
 10582  001364  0E01               	movlw	1
 10583  001366  0102               	movlb	2	; () banked
 10584  001368  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10585                           
 10586                           ; BSR set to: 2
 10587                           ;Bluetooth.c: 666: if(ReceivedString[0] < '1' || ReceivedString[0] > '3')
 10588  00136A  0E30               	movlw	48
 10589  00136C  0106               	movlb	6	; () banked
 10590  00136E  6500               	cpfsgt	_ReceivedString& (0+255),b
 10591  001370  D005               	goto	l15798
 10592                           
 10593                           ; BSR set to: 6
 10594  001372  0E33               	movlw	51
 10595  001374  0106               	movlb	6	; () banked
 10596  001376  6500               	cpfsgt	_ReceivedString& (0+255),b
 10597  001378  D00D               	goto	l15802
 10598  00137A  D000               	goto	l15798
 10599  00137C                     l15798:
 10600                           
 10601                           ; BSR set to: 6
 10602                           ;Bluetooth.c: 667: {
 10603                           ;Bluetooth.c: 668: UARTstringCRLN((unsigned char *)"Error: RF config 2, channel H device
      +                           out of range");
 10604  00137C  0EB1               	movlw	low STR_69
 10605  00137E  0100               	movlb	0	; () banked
 10606  001380  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10607  001382  0EF4               	movlw	high STR_69
 10608  001384  0100               	movlb	0	; () banked
 10609  001386  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10610  001388  EC69  F045         	call	_UARTstringCRLN	;wreg free
 10611                           
 10612                           ;Bluetooth.c: 669: ok = 0;
 10613  00138C  0E00               	movlw	0
 10614  00138E  0102               	movlb	2	; () banked
 10615  001390  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10616  001392  D000               	goto	l15802
 10617  001394                     l15802:
 10618                           
 10619                           ;Bluetooth.c: 670: }
 10620                           ;Bluetooth.c: 671: cleanBuffer(ReceivedString, ReceivedStringPos);
 10621  001394  0E00               	movlw	low _ReceivedString
 10622  001396  0100               	movlb	0	; () banked
 10623  001398  6F79               	movwf	cleanBuffer@data& (0+255),b
 10624  00139A  0E06               	movlw	high _ReceivedString
 10625  00139C  0100               	movlb	0	; () banked
 10626  00139E  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 10627  0013A0  C0E0  F07B         	movff	_ReceivedStringPos,cleanBuffer@count
 10628  0013A4  0100               	movlb	0	; () banked
 10629  0013A6  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 10630  0013A8  EC97  F046         	call	_cleanBuffer	;wreg free
 10631                           
 10632                           ;Bluetooth.c: 672: ReceivedStringPos = 0;
 10633  0013AC  0E00               	movlw	0
 10634  0013AE  0100               	movlb	0	; () banked
 10635  0013B0  6FE0               	movwf	_ReceivedStringPos& (0+255),b
 10636                           
 10637                           ; BSR set to: 0
 10638                           ;Bluetooth.c: 673: NewReceivedString = 0;
 10639  0013B2  0E00               	movlw	0
 10640  0013B4  0100               	movlb	0	; () banked
 10641  0013B6  6FDF               	movwf	_NewReceivedString& (0+255),b	;volatile
 10642                           
 10643                           ; BSR set to: 0
 10644                           ;Bluetooth.c: 674: if(!ok)
 10645  0013B8  0102               	movlb	2	; () banked
 10646  0013BA  5189               	movf	UseBluetooth@ok& (0+255),w,b
 10647  0013BC  0102               	movlb	2	; () banked
 10648  0013BE  B4D8               	btfsc	status,2,c
 10649  0013C0  0012               	return	
 10650  0013C2  D001               	goto	l15812
 10651                           
 10652                           ; BSR set to: 2
 10653                           ;Bluetooth.c: 675: {
 10654                           ;Bluetooth.c: 676: return 0;
 10655                           ;	Return value of _UseBluetooth is never used
 10656  0013C4  0012               	return	
 10657  0013C6                     l15812:
 10658                           
 10659                           ; BSR set to: 2
 10660                           ;Bluetooth.c: 677: }
 10661                           ;Bluetooth.c: 678: device = String[0] - '0';
 10662  0013C6  C200  FFD9         	movff	UseBluetooth@String,fsr2l
 10663  0013CA  C201  FFDA         	movff	UseBluetooth@String+1,fsr2h
 10664  0013CE  50DF               	movf	indf2,w,c
 10665  0013D0  0FD0               	addlw	208
 10666  0013D2  0102               	movlb	2	; () banked
 10667  0013D4  6F84               	movwf	UseBluetooth@device& (0+255),b
 10668                           
 10669                           ; BSR set to: 2
 10670                           ;Bluetooth.c: 679: tempRFArray = device + 4;
 10671  0013D6  0102               	movlb	2	; () banked
 10672  0013D8  5184               	movf	UseBluetooth@device& (0+255),w,b
 10673  0013DA  0F04               	addlw	4
 10674  0013DC                     L9:
 10675  0013DC  0102               	movlb	2	; () banked
 10676  0013DE  6F8A               	movwf	UseBluetooth@tempRFArray& (0+255),b
 10677                           
 10678                           ;Bluetooth.c: 680: }
 10679  0013E0  D002               	goto	l15816
 10680                           
 10681                           ; BSR set to: 2
 10682                           ;Bluetooth.c: 681: else
 10683                           ;Bluetooth.c: 682: {
 10684                           ;Bluetooth.c: 684: return 0;
 10685                           ;	Return value of _UseBluetooth is never used
 10686  0013E2  0012               	return	
 10687                           
 10688                           ; BSR set to: 2
 10689                           
 10690                           ; BSR set to: 2
 10691                           
 10692                           ; BSR set to: 2
 10693                           
 10694                           ; BSR set to: 2
 10695  0013E4  D000               	goto	l15816
 10696  0013E6                     l15816:
 10697                           
 10698                           ; BSR set to: 2
 10699                           ;Bluetooth.c: 685: }
 10700                           ;Bluetooth.c: 686: }
 10701                           ;Bluetooth.c: 687: if(set)
 10702  0013E6  0102               	movlb	2	; () banked
 10703  0013E8  517D               	movf	UseBluetooth@set& (0+255),w,b
 10704  0013EA  0102               	movlb	2	; () banked
 10705  0013EC  B4D8               	btfsc	status,2,c
 10706  0013EE  D1D3               	goto	l15904
 10707                           
 10708                           ; BSR set to: 2
 10709                           ;Bluetooth.c: 688: {
 10710                           ;Bluetooth.c: 689: if(!WaitForIRsignal())
 10711  0013F0  EC5F  F043         	call	_WaitForIRsignal	;wreg free
 10712  0013F4  0900               	iorlw	0
 10713  0013F6  B4D8               	btfsc	status,2,c
 10714  0013F8  0012               	return	
 10715  0013FA  D001               	goto	l15822
 10716                           
 10717                           ;Bluetooth.c: 690: {
 10718                           ;Bluetooth.c: 691: return 0;
 10719                           ;	Return value of _UseBluetooth is never used
 10720  0013FC  0012               	return	
 10721  0013FE                     l15822:
 10722                           
 10723                           ;Bluetooth.c: 692: }
 10724                           ;Bluetooth.c: 693: UARTstring(CRLN);
 10725  0013FE  0ED1               	movlw	low _CRLN
 10726  001400  0100               	movlb	0	; () banked
 10727  001402  6F7A               	movwf	UARTstring@data& (0+255),b
 10728  001404  0EF3               	movlw	high _CRLN
 10729  001406  0100               	movlb	0	; () banked
 10730  001408  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10731  00140A  ECC4  F046         	call	_UARTstring	;wreg free
 10732                           
 10733                           ;Bluetooth.c: 694: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
 10734  00140E  C0E1  F07D         	movff	_IR_NEC,DecodeNEC@Nec
 10735  001412  C0E2  F07E         	movff	_IR_NEC+1,DecodeNEC@Nec+1
 10736  001416  C0E3  F07F         	movff	_IR_NEC+2,DecodeNEC@Nec+2
 10737  00141A  C0E4  F080         	movff	_IR_NEC+3,DecodeNEC@Nec+3
 10738  00141E  0E8C               	movlw	low UseBluetooth@NecAddress
 10739  001420  0100               	movlb	0	; () banked
 10740  001422  6F81               	movwf	DecodeNEC@address& (0+255),b
 10741  001424  0E02               	movlw	high UseBluetooth@NecAddress
 10742  001426  0100               	movlb	0	; () banked
 10743  001428  6F82               	movwf	(DecodeNEC@address+1)& (0+255),b
 10744  00142A  0E8D               	movlw	low UseBluetooth@NecCommand
 10745  00142C  0100               	movlb	0	; () banked
 10746  00142E  6F83               	movwf	DecodeNEC@command& (0+255),b
 10747  001430  0E02               	movlw	high UseBluetooth@NecCommand
 10748  001432  0100               	movlb	0	; () banked
 10749  001434  6F84               	movwf	(DecodeNEC@command+1)& (0+255),b
 10750  001436  EC7B  F041         	call	_DecodeNEC	;wreg free
 10751                           
 10752                           ;Bluetooth.c: 695: ok = 0;
 10753  00143A  0E00               	movlw	0
 10754  00143C  0102               	movlb	2	; () banked
 10755  00143E  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10756                           
 10757                           ; BSR set to: 2
 10758                           ;Bluetooth.c: 696: for(i=0; i < 3; i++)
 10759  001440  0E00               	movlw	0
 10760  001442  0102               	movlb	2	; () banked
 10761  001444  6F92               	movwf	UseBluetooth@i& (0+255),b
 10762  001446                     l15830:
 10763                           
 10764                           ; BSR set to: 2
 10765  001446  0E02               	movlw	2
 10766  001448  0102               	movlb	2	; () banked
 10767  00144A  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 10768  00144C  D001               	goto	l15834
 10769                           
 10770                           ; BSR set to: 2
 10771  00144E  D053               	goto	l15846
 10772  001450                     l15834:
 10773                           
 10774                           ; BSR set to: 2
 10775                           ;Bluetooth.c: 697: {
 10776                           ;Bluetooth.c: 698: if(Global.RemoteButtonRF[tempRFArray][i][0] == 0 && Global.RemoteButt
      +                          onRF[tempRFArray][i][1] == 0)
 10777  001450  0102               	movlb	2	; () banked
 10778  001452  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 10779  001454  0D06               	mullw	6
 10780  001456  0E00               	movlw	low _Global
 10781  001458  0102               	movlb	2	; () banked
 10782  00145A  6F03               	movwf	??_UseBluetooth& (0+255),b
 10783  00145C  0E04               	movlw	high _Global
 10784  00145E  0102               	movlb	2	; () banked
 10785  001460  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 10786  001462  0E2E               	movlw	46
 10787  001464  0102               	movlb	2	; () banked
 10788  001466  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10789  001468  0E00               	movlw	0
 10790  00146A  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10791  00146C  50F3               	movf	prodl,w,c
 10792  00146E  0102               	movlb	2	; () banked
 10793  001470  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10794  001472  50F4               	movf	prodh,w,c
 10795  001474  0102               	movlb	2	; () banked
 10796  001476  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10797  001478  0102               	movlb	2	; () banked
 10798  00147A  5192               	movf	UseBluetooth@i& (0+255),w,b
 10799  00147C  0D02               	mullw	2
 10800  00147E  50F3               	movf	prodl,w,c
 10801  001480  0102               	movlb	2	; () banked
 10802  001482  2503               	addwf	??_UseBluetooth& (0+255),w,b
 10803  001484  6ED9               	movwf	fsr2l,c
 10804  001486  50F4               	movf	prodh,w,c
 10805  001488  0102               	movlb	2	; () banked
 10806  00148A  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 10807  00148C  6EDA               	movwf	fsr2h,c
 10808  00148E  50DF               	movf	indf2,w,c
 10809  001490  A4D8               	btfss	status,2,c
 10810  001492  D02E               	goto	l15842
 10811                           
 10812                           ; BSR set to: 2
 10813  001494  0102               	movlb	2	; () banked
 10814  001496  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 10815  001498  0D06               	mullw	6
 10816  00149A  0E00               	movlw	low _Global
 10817  00149C  0102               	movlb	2	; () banked
 10818  00149E  6F03               	movwf	??_UseBluetooth& (0+255),b
 10819  0014A0  0E04               	movlw	high _Global
 10820  0014A2  0102               	movlb	2	; () banked
 10821  0014A4  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 10822  0014A6  0E2E               	movlw	46
 10823  0014A8  0102               	movlb	2	; () banked
 10824  0014AA  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10825  0014AC  0E00               	movlw	0
 10826  0014AE  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10827  0014B0  50F3               	movf	prodl,w,c
 10828  0014B2  0102               	movlb	2	; () banked
 10829  0014B4  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10830  0014B6  50F4               	movf	prodh,w,c
 10831  0014B8  0102               	movlb	2	; () banked
 10832  0014BA  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10833  0014BC  0102               	movlb	2	; () banked
 10834  0014BE  5192               	movf	UseBluetooth@i& (0+255),w,b
 10835  0014C0  0D02               	mullw	2
 10836  0014C2  50F3               	movf	prodl,w,c
 10837  0014C4  0102               	movlb	2	; () banked
 10838  0014C6  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10839  0014C8  50F4               	movf	prodh,w,c
 10840  0014CA  0102               	movlb	2	; () banked
 10841  0014CC  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10842  0014CE  0E01               	movlw	1
 10843  0014D0  0102               	movlb	2	; () banked
 10844  0014D2  2503               	addwf	??_UseBluetooth& (0+255),w,b
 10845  0014D4  6ED9               	movwf	fsr2l,c
 10846  0014D6  0E00               	movlw	0
 10847  0014D8  0102               	movlb	2	; () banked
 10848  0014DA  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 10849  0014DC  6EDA               	movwf	fsr2h,c
 10850  0014DE  50DF               	movf	indf2,w,c
 10851  0014E0  A4D8               	btfss	status,2,c
 10852  0014E2  D006               	goto	l15842
 10853                           
 10854                           ; BSR set to: 2
 10855                           ;Bluetooth.c: 699: {
 10856                           ;Bluetooth.c: 700: EmptyPlace = i;
 10857  0014E4  C292  F283         	movff	UseBluetooth@i,UseBluetooth@EmptyPlace
 10858                           
 10859                           ; BSR set to: 2
 10860                           ;Bluetooth.c: 701: ok = 1;
 10861  0014E8  0E01               	movlw	1
 10862  0014EA  0102               	movlb	2	; () banked
 10863  0014EC  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10864                           
 10865                           ;Bluetooth.c: 702: break;
 10866  0014EE  D003               	goto	l15846
 10867  0014F0                     l15842:
 10868                           
 10869                           ; BSR set to: 2
 10870  0014F0  0102               	movlb	2	; () banked
 10871  0014F2  2B92               	incf	UseBluetooth@i& (0+255),f,b
 10872  0014F4  D7A8               	goto	l15830
 10873  0014F6                     l15846:
 10874                           
 10875                           ; BSR set to: 2
 10876                           ;Bluetooth.c: 703: }
 10877                           ;Bluetooth.c: 704: }
 10878                           ;Bluetooth.c: 705: if(!ok)
 10879  0014F6  0102               	movlb	2	; () banked
 10880  0014F8  5189               	movf	UseBluetooth@ok& (0+255),w,b
 10881  0014FA  0102               	movlb	2	; () banked
 10882  0014FC  A4D8               	btfss	status,2,c
 10883  0014FE  D009               	goto	l15852
 10884                           
 10885                           ; BSR set to: 2
 10886                           ;Bluetooth.c: 706: {
 10887                           ;Bluetooth.c: 707: UARTstringCRLN((unsigned char *)"Error: No space available to this RF
      +                           code");
 10888  001500  0E2C               	movlw	low STR_70
 10889  001502  0100               	movlb	0	; () banked
 10890  001504  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10891  001506  0EF8               	movlw	high STR_70
 10892  001508  0100               	movlb	0	; () banked
 10893  00150A  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10894  00150C  EC69  F045         	call	_UARTstringCRLN	;wreg free
 10895                           
 10896                           ;Bluetooth.c: 708: return 0;
 10897                           ;	Return value of _UseBluetooth is never used
 10898  001510  0012               	return	
 10899  001512                     l15852:
 10900                           
 10901                           ;Bluetooth.c: 709: }
 10902                           ;Bluetooth.c: 710: ok = 1;
 10903  001512  0E01               	movlw	1
 10904  001514  0102               	movlb	2	; () banked
 10905  001516  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10906                           
 10907                           ;Bluetooth.c: 711: if(EmptyPlace)
 10908  001518  0102               	movlb	2	; () banked
 10909  00151A  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 10910  00151C  0102               	movlb	2	; () banked
 10911  00151E  B4D8               	btfsc	status,2,c
 10912  001520  D062               	goto	l15866
 10913                           
 10914                           ; BSR set to: 2
 10915                           ;Bluetooth.c: 712: {
 10916                           ;Bluetooth.c: 714: for(i=0; i < EmptyPlace; i++)
 10917  001522  0E00               	movlw	0
 10918  001524  0102               	movlb	2	; () banked
 10919  001526  6F92               	movwf	UseBluetooth@i& (0+255),b
 10920  001528  D056               	goto	l15864
 10921  00152A                     l15856:
 10922                           
 10923                           ; BSR set to: 2
 10924                           ;Bluetooth.c: 715: {
 10925                           ;Bluetooth.c: 716: if(NecAddress == Global.RemoteButtonRF[tempRFArray][i][0])
 10926  00152A  0102               	movlb	2	; () banked
 10927  00152C  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 10928  00152E  0D06               	mullw	6
 10929  001530  0E00               	movlw	low _Global
 10930  001532  0102               	movlb	2	; () banked
 10931  001534  6F03               	movwf	??_UseBluetooth& (0+255),b
 10932  001536  0E04               	movlw	high _Global
 10933  001538  0102               	movlb	2	; () banked
 10934  00153A  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 10935  00153C  0E2E               	movlw	46
 10936  00153E  0102               	movlb	2	; () banked
 10937  001540  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10938  001542  0E00               	movlw	0
 10939  001544  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10940  001546  50F3               	movf	prodl,w,c
 10941  001548  0102               	movlb	2	; () banked
 10942  00154A  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10943  00154C  50F4               	movf	prodh,w,c
 10944  00154E  0102               	movlb	2	; () banked
 10945  001550  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10946  001552  0102               	movlb	2	; () banked
 10947  001554  5192               	movf	UseBluetooth@i& (0+255),w,b
 10948  001556  0D02               	mullw	2
 10949  001558  50F3               	movf	prodl,w,c
 10950  00155A  0102               	movlb	2	; () banked
 10951  00155C  2503               	addwf	??_UseBluetooth& (0+255),w,b
 10952  00155E  6ED9               	movwf	fsr2l,c
 10953  001560  50F4               	movf	prodh,w,c
 10954  001562  0102               	movlb	2	; () banked
 10955  001564  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 10956  001566  6EDA               	movwf	fsr2h,c
 10957  001568  0102               	movlb	2	; () banked
 10958  00156A  518C               	movf	UseBluetooth@NecAddress& (0+255),w,b
 10959  00156C  18DE               	xorwf	postinc2,w,c
 10960  00156E  A4D8               	btfss	status,2,c
 10961  001570  D02F               	goto	l15862
 10962                           
 10963                           ; BSR set to: 2
 10964                           ;Bluetooth.c: 717: {
 10965                           ;Bluetooth.c: 718: if(NecCommand == Global.RemoteButtonRF[tempRFArray][i][1])
 10966  001572  0102               	movlb	2	; () banked
 10967  001574  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 10968  001576  0D06               	mullw	6
 10969  001578  0E00               	movlw	low _Global
 10970  00157A  0102               	movlb	2	; () banked
 10971  00157C  6F03               	movwf	??_UseBluetooth& (0+255),b
 10972  00157E  0E04               	movlw	high _Global
 10973  001580  0102               	movlb	2	; () banked
 10974  001582  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 10975  001584  0E2E               	movlw	46
 10976  001586  0102               	movlb	2	; () banked
 10977  001588  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10978  00158A  0E00               	movlw	0
 10979  00158C  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10980  00158E  50F3               	movf	prodl,w,c
 10981  001590  0102               	movlb	2	; () banked
 10982  001592  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10983  001594  50F4               	movf	prodh,w,c
 10984  001596  0102               	movlb	2	; () banked
 10985  001598  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10986  00159A  0102               	movlb	2	; () banked
 10987  00159C  5192               	movf	UseBluetooth@i& (0+255),w,b
 10988  00159E  0D02               	mullw	2
 10989  0015A0  50F3               	movf	prodl,w,c
 10990  0015A2  0102               	movlb	2	; () banked
 10991  0015A4  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10992  0015A6  50F4               	movf	prodh,w,c
 10993  0015A8  0102               	movlb	2	; () banked
 10994  0015AA  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10995  0015AC  0E01               	movlw	1
 10996  0015AE  0102               	movlb	2	; () banked
 10997  0015B0  2503               	addwf	??_UseBluetooth& (0+255),w,b
 10998  0015B2  6ED9               	movwf	fsr2l,c
 10999  0015B4  0E00               	movlw	0
 11000  0015B6  0102               	movlb	2	; () banked
 11001  0015B8  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11002  0015BA  6EDA               	movwf	fsr2h,c
 11003  0015BC  0102               	movlb	2	; () banked
 11004  0015BE  518D               	movf	UseBluetooth@NecCommand& (0+255),w,b
 11005  0015C0  18DE               	xorwf	postinc2,w,c
 11006  0015C2  A4D8               	btfss	status,2,c
 11007  0015C4  D005               	goto	l15862
 11008                           
 11009                           ; BSR set to: 2
 11010                           ;Bluetooth.c: 719: {
 11011                           ;Bluetooth.c: 720: ok = 0;
 11012  0015C6  0E00               	movlw	0
 11013  0015C8  0102               	movlb	2	; () banked
 11014  0015CA  6F89               	movwf	UseBluetooth@ok& (0+255),b
 11015                           
 11016                           ;Bluetooth.c: 721: break;
 11017  0015CC  D00C               	goto	l15866
 11018                           
 11019                           ; BSR set to: 2
 11020  0015CE  D000               	goto	l15862
 11021  0015D0                     l15862:
 11022                           
 11023                           ; BSR set to: 2
 11024  0015D0  0102               	movlb	2	; () banked
 11025  0015D2  2B92               	incf	UseBluetooth@i& (0+255),f,b
 11026  0015D4  D000               	goto	l15864
 11027  0015D6                     l15864:
 11028                           
 11029                           ; BSR set to: 2
 11030  0015D6  0102               	movlb	2	; () banked
 11031  0015D8  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11032  0015DA  0102               	movlb	2	; () banked
 11033  0015DC  5D92               	subwf	UseBluetooth@i& (0+255),w,b
 11034  0015DE  B0D8               	btfsc	status,0,c
 11035  0015E0  D002               	goto	l15866
 11036  0015E2  D7A3               	goto	l15856
 11037                           
 11038                           ; BSR set to: 2
 11039  0015E4  D000               	goto	l15866
 11040  0015E6                     l15866:
 11041                           
 11042                           ; BSR set to: 2
 11043                           ;Bluetooth.c: 722: }
 11044                           ;Bluetooth.c: 723: }
 11045                           ;Bluetooth.c: 724: }
 11046                           ;Bluetooth.c: 725: }
 11047                           ;Bluetooth.c: 726: if(!ok)
 11048  0015E6  0102               	movlb	2	; () banked
 11049  0015E8  5189               	movf	UseBluetooth@ok& (0+255),w,b
 11050  0015EA  0102               	movlb	2	; () banked
 11051  0015EC  A4D8               	btfss	status,2,c
 11052  0015EE  D009               	goto	l15872
 11053                           
 11054                           ; BSR set to: 2
 11055                           ;Bluetooth.c: 727: {
 11056                           ;Bluetooth.c: 728: UARTstringCRLN((unsigned char *)"Error: NEC code already saved to thi
      +                          s RF code");
 11057  0015F0  0E7A               	movlw	low STR_71
 11058  0015F2  0100               	movlb	0	; () banked
 11059  0015F4  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11060  0015F6  0EF7               	movlw	high STR_71
 11061  0015F8  0100               	movlb	0	; () banked
 11062  0015FA  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11063  0015FC  EC69  F045         	call	_UARTstringCRLN	;wreg free
 11064                           
 11065                           ;Bluetooth.c: 729: return 0;
 11066                           ;	Return value of _UseBluetooth is never used
 11067  001600  0012               	return	
 11068  001602                     l15872:
 11069                           
 11070                           ;Bluetooth.c: 730: }
 11071                           ;Bluetooth.c: 733: Global.RemoteButtonRF[tempRFArray][EmptyPlace][0] = NecAddress;
 11072  001602  0102               	movlb	2	; () banked
 11073  001604  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11074  001606  0D06               	mullw	6
 11075  001608  0E00               	movlw	low _Global
 11076  00160A  0102               	movlb	2	; () banked
 11077  00160C  6F03               	movwf	??_UseBluetooth& (0+255),b
 11078  00160E  0E04               	movlw	high _Global
 11079  001610  0102               	movlb	2	; () banked
 11080  001612  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11081  001614  0E2E               	movlw	46
 11082  001616  0102               	movlb	2	; () banked
 11083  001618  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11084  00161A  0E00               	movlw	0
 11085  00161C  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11086  00161E  50F3               	movf	prodl,w,c
 11087  001620  0102               	movlb	2	; () banked
 11088  001622  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11089  001624  50F4               	movf	prodh,w,c
 11090  001626  0102               	movlb	2	; () banked
 11091  001628  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11092  00162A  0102               	movlb	2	; () banked
 11093  00162C  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11094  00162E  0D02               	mullw	2
 11095  001630  50F3               	movf	prodl,w,c
 11096  001632  0102               	movlb	2	; () banked
 11097  001634  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11098  001636  6ED9               	movwf	fsr2l,c
 11099  001638  50F4               	movf	prodh,w,c
 11100  00163A  0102               	movlb	2	; () banked
 11101  00163C  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11102  00163E  6EDA               	movwf	fsr2h,c
 11103  001640  C28C  FFDF         	movff	UseBluetooth@NecAddress,indf2
 11104                           
 11105                           ;Bluetooth.c: 734: Global.RemoteButtonRF[tempRFArray][EmptyPlace][1] = NecCommand;
 11106  001644  0102               	movlb	2	; () banked
 11107  001646  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11108  001648  0D06               	mullw	6
 11109  00164A  0E00               	movlw	low _Global
 11110  00164C  0102               	movlb	2	; () banked
 11111  00164E  6F03               	movwf	??_UseBluetooth& (0+255),b
 11112  001650  0E04               	movlw	high _Global
 11113  001652  0102               	movlb	2	; () banked
 11114  001654  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11115  001656  0E2E               	movlw	46
 11116  001658  0102               	movlb	2	; () banked
 11117  00165A  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11118  00165C  0E00               	movlw	0
 11119  00165E  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11120  001660  50F3               	movf	prodl,w,c
 11121  001662  0102               	movlb	2	; () banked
 11122  001664  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11123  001666  50F4               	movf	prodh,w,c
 11124  001668  0102               	movlb	2	; () banked
 11125  00166A  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11126  00166C  0102               	movlb	2	; () banked
 11127  00166E  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11128  001670  0D02               	mullw	2
 11129  001672  50F3               	movf	prodl,w,c
 11130  001674  0102               	movlb	2	; () banked
 11131  001676  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11132  001678  50F4               	movf	prodh,w,c
 11133  00167A  0102               	movlb	2	; () banked
 11134  00167C  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11135  00167E  0E01               	movlw	1
 11136  001680  0102               	movlb	2	; () banked
 11137  001682  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11138  001684  6ED9               	movwf	fsr2l,c
 11139  001686  0E00               	movlw	0
 11140  001688  0102               	movlb	2	; () banked
 11141  00168A  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11142  00168C  6EDA               	movwf	fsr2h,c
 11143  00168E  C28D  FFDF         	movff	UseBluetooth@NecCommand,indf2
 11144                           
 11145                           ; BSR set to: 2
 11146                           ;Bluetooth.c: 735: SyncGlobalToEEPROM();
 11147  001692  ECE9  F047         	call	_SyncGlobalToEEPROM	;wreg free
 11148                           
 11149                           ;Bluetooth.c: 737: if(device)
 11150  001696  0102               	movlb	2	; () banked
 11151  001698  5184               	movf	UseBluetooth@device& (0+255),w,b
 11152  00169A  0102               	movlb	2	; () banked
 11153  00169C  B4D8               	btfsc	status,2,c
 11154  00169E  D023               	goto	l15880
 11155                           
 11156                           ; BSR set to: 2
 11157                           ;Bluetooth.c: 738: {
 11158                           ;Bluetooth.c: 739: sprintf(buf,"NEC code 0x%lX now transmits RF config %d channel %c dev
      +                          ice %d",IR_NEC, rfconf, rfchannelSTR[0], device);
 11159  0016A0  0E0F               	movlw	low UseBluetooth@buf
 11160  0016A2  0100               	movlb	0	; () banked
 11161  0016A4  6FC7               	movwf	sprintf@sp& (0+255),b
 11162  0016A6  0E02               	movlw	high UseBluetooth@buf
 11163  0016A8  0100               	movlb	0	; () banked
 11164  0016AA  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11165  0016AC  0ED4               	movlw	low STR_72
 11166  0016AE  0100               	movlb	0	; () banked
 11167  0016B0  6FC9               	movwf	sprintf@f& (0+255),b
 11168  0016B2  0EF3               	movlw	high STR_72
 11169  0016B4  0100               	movlb	0	; () banked
 11170  0016B6  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11171  0016B8  C0E1  F0CB         	movff	_IR_NEC,?_sprintf+4
 11172  0016BC  C0E2  F0CC         	movff	_IR_NEC+1,?_sprintf+5
 11173  0016C0  C0E3  F0CD         	movff	_IR_NEC+2,?_sprintf+6
 11174  0016C4  C0E4  F0CE         	movff	_IR_NEC+3,?_sprintf+7
 11175  0016C8  C28B  F0CF         	movff	UseBluetooth@rfconf,?_sprintf+8
 11176  0016CC  0100               	movlb	0	; () banked
 11177  0016CE  6BD0               	clrf	(?_sprintf+9)& (0+255),b
 11178  0016D0  C273  F0D1         	movff	UseBluetooth@rfchannelSTR,?_sprintf+10
 11179  0016D4  0100               	movlb	0	; () banked
 11180  0016D6  6BD2               	clrf	(?_sprintf+11)& (0+255),b
 11181  0016D8  C284  F0D3         	movff	UseBluetooth@device,?_sprintf+12
 11182  0016DC  0100               	movlb	0	; () banked
 11183  0016DE  6BD4               	clrf	(?_sprintf+13)& (0+255),b
 11184  0016E0  ECB5  F010         	call	_sprintf	;wreg free
 11185                           
 11186                           ;Bluetooth.c: 740: }
 11187  0016E4  D01F               	goto	l15882
 11188  0016E6                     l15880:
 11189                           
 11190                           ;Bluetooth.c: 741: else
 11191                           ;Bluetooth.c: 742: {
 11192                           ;Bluetooth.c: 743: sprintf(buf,"NEC code 0x%lX now transmits RF config %d channel %c ",I
      +                          R_NEC, rfconf, rfchannelSTR[0]);
 11193  0016E6  0E0F               	movlw	low UseBluetooth@buf
 11194  0016E8  0100               	movlb	0	; () banked
 11195  0016EA  6FC7               	movwf	sprintf@sp& (0+255),b
 11196  0016EC  0E02               	movlw	high UseBluetooth@buf
 11197  0016EE  0100               	movlb	0	; () banked
 11198  0016F0  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11199  0016F2  0E13               	movlw	low STR_73
 11200  0016F4  0100               	movlb	0	; () banked
 11201  0016F6  6FC9               	movwf	sprintf@f& (0+255),b
 11202  0016F8  0EF4               	movlw	high STR_73
 11203  0016FA  0100               	movlb	0	; () banked
 11204  0016FC  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11205  0016FE  C0E1  F0CB         	movff	_IR_NEC,?_sprintf+4
 11206  001702  C0E2  F0CC         	movff	_IR_NEC+1,?_sprintf+5
 11207  001706  C0E3  F0CD         	movff	_IR_NEC+2,?_sprintf+6
 11208  00170A  C0E4  F0CE         	movff	_IR_NEC+3,?_sprintf+7
 11209  00170E  C28B  F0CF         	movff	UseBluetooth@rfconf,?_sprintf+8
 11210  001712  0100               	movlb	0	; () banked
 11211  001714  6BD0               	clrf	(?_sprintf+9)& (0+255),b
 11212  001716  C273  F0D1         	movff	UseBluetooth@rfchannelSTR,?_sprintf+10
 11213  00171A  0100               	movlb	0	; () banked
 11214  00171C  6BD2               	clrf	(?_sprintf+11)& (0+255),b
 11215  00171E  ECB5  F010         	call	_sprintf	;wreg free
 11216  001722  D000               	goto	l15882
 11217  001724                     l15882:
 11218                           
 11219                           ;Bluetooth.c: 744: }
 11220                           ;Bluetooth.c: 745: UARTstringCRLN(buf);
 11221  001724  0E0F               	movlw	low UseBluetooth@buf
 11222  001726  0100               	movlb	0	; () banked
 11223  001728  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11224  00172A  0E02               	movlw	high UseBluetooth@buf
 11225  00172C  0100               	movlb	0	; () banked
 11226  00172E  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11227  001730  EC69  F045         	call	_UARTstringCRLN	;wreg free
 11228                           
 11229                           ;Bluetooth.c: 746: UARTstring(CRLN);
 11230  001734  0ED1               	movlw	low _CRLN
 11231  001736  0100               	movlb	0	; () banked
 11232  001738  6F7A               	movwf	UARTstring@data& (0+255),b
 11233  00173A  0EF3               	movlw	high _CRLN
 11234  00173C  0100               	movlb	0	; () banked
 11235  00173E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11236  001740  ECC4  F046         	call	_UARTstring	;wreg free
 11237                           
 11238                           ;Bluetooth.c: 748: for(i =0;i<10;i++)
 11239  001744  0E00               	movlw	0
 11240  001746  0102               	movlb	2	; () banked
 11241  001748  6F92               	movwf	UseBluetooth@i& (0+255),b
 11242                           
 11243                           ; BSR set to: 2
 11244  00174A  0E09               	movlw	9
 11245  00174C  0102               	movlb	2	; () banked
 11246  00174E  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11247  001750  D002               	goto	l15892
 11248  001752  0012               	return	
 11249                           
 11250                           ; BSR set to: 2
 11251  001754  0012               	return	
 11252  001756                     l15892:
 11253                           
 11254                           ; BSR set to: 2
 11255                           ;Bluetooth.c: 749: {
 11256                           ;Bluetooth.c: 750: (LATC |= 0x04);
 11257  001756  848B               	bsf	3979,2,c	;volatile
 11258                           
 11259                           ; BSR set to: 2
 11260                           ;Bluetooth.c: 751: delayUS(50000);
 11261  001758  0E50               	movlw	80
 11262  00175A  0100               	movlb	0	; () banked
 11263  00175C  6F79               	movwf	delayUS@US& (0+255),b
 11264  00175E  0EC3               	movlw	195
 11265  001760  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 11266  001762  0E00               	movlw	0
 11267  001764  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 11268  001766  0E00               	movlw	0
 11269  001768  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 11270  00176A  EC48  F047         	call	_delayUS	;wreg free
 11271                           
 11272                           ;Bluetooth.c: 752: (LATC &= ~0x04);
 11273  00176E  948B               	bcf	3979,2,c	;volatile
 11274                           
 11275                           ;Bluetooth.c: 753: delayUS(50000);
 11276  001770  0E50               	movlw	80
 11277  001772  0100               	movlb	0	; () banked
 11278  001774  6F79               	movwf	delayUS@US& (0+255),b
 11279  001776  0EC3               	movlw	195
 11280  001778  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 11281  00177A  0E00               	movlw	0
 11282  00177C  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 11283  00177E  0E00               	movlw	0
 11284  001780  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 11285  001782  EC48  F047         	call	_delayUS	;wreg free
 11286  001786  0102               	movlb	2	; () banked
 11287  001788  2B92               	incf	UseBluetooth@i& (0+255),f,b
 11288                           
 11289                           ; BSR set to: 2
 11290  00178A  0E09               	movlw	9
 11291  00178C  0102               	movlb	2	; () banked
 11292  00178E  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11293  001790  D7E2               	goto	l15892
 11294  001792  0012               	return	
 11295                           
 11296                           ; BSR set to: 2
 11297                           ;Bluetooth.c: 756: }
 11298                           
 11299                           ; BSR set to: 2
 11300                           ;Bluetooth.c: 754: }
 11301                           ;Bluetooth.c: 755: return 1;
 11302                           ;	Return value of _UseBluetooth is never used
 11303  001794  0012               	return	
 11304  001796                     l15904:
 11305                           
 11306                           ; BSR set to: 2
 11307                           ;Bluetooth.c: 757: else
 11308                           ;Bluetooth.c: 758: {
 11309                           ;Bluetooth.c: 760: for(i=0; i < 3; i++)
 11310  001796  0E00               	movlw	0
 11311  001798  0102               	movlb	2	; () banked
 11312  00179A  6F92               	movwf	UseBluetooth@i& (0+255),b
 11313  00179C                     l15906:
 11314                           
 11315                           ; BSR set to: 2
 11316  00179C  0E02               	movlw	2
 11317  00179E  0102               	movlb	2	; () banked
 11318  0017A0  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11319  0017A2  D001               	goto	l15910
 11320                           
 11321                           ; BSR set to: 2
 11322  0017A4  D04B               	goto	l15916
 11323  0017A6                     l15910:
 11324                           
 11325                           ; BSR set to: 2
 11326                           ;Bluetooth.c: 761: {
 11327                           ;Bluetooth.c: 763: Global.RemoteButtonRF[tempRFArray][i][0] = 0;
 11328  0017A6  0102               	movlb	2	; () banked
 11329  0017A8  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11330  0017AA  0D06               	mullw	6
 11331  0017AC  0E00               	movlw	low _Global
 11332  0017AE  0102               	movlb	2	; () banked
 11333  0017B0  6F03               	movwf	??_UseBluetooth& (0+255),b
 11334  0017B2  0E04               	movlw	high _Global
 11335  0017B4  0102               	movlb	2	; () banked
 11336  0017B6  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11337  0017B8  0E2E               	movlw	46
 11338  0017BA  0102               	movlb	2	; () banked
 11339  0017BC  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11340  0017BE  0E00               	movlw	0
 11341  0017C0  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11342  0017C2  50F3               	movf	prodl,w,c
 11343  0017C4  0102               	movlb	2	; () banked
 11344  0017C6  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11345  0017C8  50F4               	movf	prodh,w,c
 11346  0017CA  0102               	movlb	2	; () banked
 11347  0017CC  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11348  0017CE  0102               	movlb	2	; () banked
 11349  0017D0  5192               	movf	UseBluetooth@i& (0+255),w,b
 11350  0017D2  0D02               	mullw	2
 11351  0017D4  50F3               	movf	prodl,w,c
 11352  0017D6  0102               	movlb	2	; () banked
 11353  0017D8  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11354  0017DA  6ED9               	movwf	fsr2l,c
 11355  0017DC  50F4               	movf	prodh,w,c
 11356  0017DE  0102               	movlb	2	; () banked
 11357  0017E0  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11358  0017E2  6EDA               	movwf	fsr2h,c
 11359  0017E4  0E00               	movlw	0
 11360  0017E6  6EDF               	movwf	indf2,c
 11361                           
 11362                           ;Bluetooth.c: 764: Global.RemoteButtonRF[tempRFArray][i][1] = 0;
 11363  0017E8  0102               	movlb	2	; () banked
 11364  0017EA  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11365  0017EC  0D06               	mullw	6
 11366  0017EE  0E00               	movlw	low _Global
 11367  0017F0  0102               	movlb	2	; () banked
 11368  0017F2  6F03               	movwf	??_UseBluetooth& (0+255),b
 11369  0017F4  0E04               	movlw	high _Global
 11370  0017F6  0102               	movlb	2	; () banked
 11371  0017F8  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11372  0017FA  0E2E               	movlw	46
 11373  0017FC  0102               	movlb	2	; () banked
 11374  0017FE  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11375  001800  0E00               	movlw	0
 11376  001802  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11377  001804  50F3               	movf	prodl,w,c
 11378  001806  0102               	movlb	2	; () banked
 11379  001808  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11380  00180A  50F4               	movf	prodh,w,c
 11381  00180C  0102               	movlb	2	; () banked
 11382  00180E  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11383  001810  0102               	movlb	2	; () banked
 11384  001812  5192               	movf	UseBluetooth@i& (0+255),w,b
 11385  001814  0D02               	mullw	2
 11386  001816  50F3               	movf	prodl,w,c
 11387  001818  0102               	movlb	2	; () banked
 11388  00181A  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11389  00181C  50F4               	movf	prodh,w,c
 11390  00181E  0102               	movlb	2	; () banked
 11391  001820  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11392  001822  0E01               	movlw	1
 11393  001824  0102               	movlb	2	; () banked
 11394  001826  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11395  001828  6ED9               	movwf	fsr2l,c
 11396  00182A  0E00               	movlw	0
 11397  00182C  0102               	movlb	2	; () banked
 11398  00182E  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11399  001830  6EDA               	movwf	fsr2h,c
 11400  001832  0E00               	movlw	0
 11401  001834  6EDF               	movwf	indf2,c
 11402                           
 11403                           ; BSR set to: 2
 11404  001836  0102               	movlb	2	; () banked
 11405  001838  2B92               	incf	UseBluetooth@i& (0+255),f,b
 11406  00183A  D7B0               	goto	l15906
 11407  00183C                     l15916:
 11408                           
 11409                           ; BSR set to: 2
 11410                           ;Bluetooth.c: 765: }
 11411                           ;Bluetooth.c: 766: SyncGlobalToEEPROM();
 11412  00183C  ECE9  F047         	call	_SyncGlobalToEEPROM	;wreg free
 11413                           
 11414                           ;Bluetooth.c: 767: if(device)
 11415  001840  0102               	movlb	2	; () banked
 11416  001842  5184               	movf	UseBluetooth@device& (0+255),w,b
 11417  001844  0102               	movlb	2	; () banked
 11418  001846  B4D8               	btfsc	status,2,c
 11419  001848  D01B               	goto	l15922
 11420                           
 11421                           ; BSR set to: 2
 11422                           ;Bluetooth.c: 768: {
 11423                           ;Bluetooth.c: 769: sprintf(buf,"RF config %d channel %c device %d successfully erased",r
      +                          fconf, rfchannelSTR[0], device);
 11424  00184A  0E0F               	movlw	low UseBluetooth@buf
 11425  00184C  0100               	movlb	0	; () banked
 11426  00184E  6FC7               	movwf	sprintf@sp& (0+255),b
 11427  001850  0E02               	movlw	high UseBluetooth@buf
 11428  001852  0100               	movlb	0	; () banked
 11429  001854  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11430  001856  0E49               	movlw	low STR_74
 11431  001858  0100               	movlb	0	; () banked
 11432  00185A  6FC9               	movwf	sprintf@f& (0+255),b
 11433  00185C  0EF4               	movlw	high STR_74
 11434  00185E  0100               	movlb	0	; () banked
 11435  001860  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11436  001862  C28B  F0CB         	movff	UseBluetooth@rfconf,?_sprintf+4
 11437  001866  0100               	movlb	0	; () banked
 11438  001868  6BCC               	clrf	(?_sprintf+5)& (0+255),b
 11439  00186A  C273  F0CD         	movff	UseBluetooth@rfchannelSTR,?_sprintf+6
 11440  00186E  0100               	movlb	0	; () banked
 11441  001870  6BCE               	clrf	(?_sprintf+7)& (0+255),b
 11442  001872  C284  F0CF         	movff	UseBluetooth@device,?_sprintf+8
 11443  001876  0100               	movlb	0	; () banked
 11444  001878  6BD0               	clrf	(?_sprintf+9)& (0+255),b
 11445  00187A  ECB5  F010         	call	_sprintf	;wreg free
 11446                           
 11447                           ;Bluetooth.c: 770: }
 11448  00187E  D017               	goto	l15924
 11449  001880                     l15922:
 11450                           
 11451                           ;Bluetooth.c: 771: else
 11452                           ;Bluetooth.c: 772: {
 11453                           ;Bluetooth.c: 773: sprintf(buf,"RF config %d channel %c successfully erased",rfconf, rfc
      +                          hannelSTR[0]);
 11454  001880  0E0F               	movlw	low UseBluetooth@buf
 11455  001882  0100               	movlb	0	; () banked
 11456  001884  6FC7               	movwf	sprintf@sp& (0+255),b
 11457  001886  0E02               	movlw	high UseBluetooth@buf
 11458  001888  0100               	movlb	0	; () banked
 11459  00188A  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11460  00188C  0ED4               	movlw	low STR_75
 11461  00188E  0100               	movlb	0	; () banked
 11462  001890  6FC9               	movwf	sprintf@f& (0+255),b
 11463  001892  0EF7               	movlw	high STR_75
 11464  001894  0100               	movlb	0	; () banked
 11465  001896  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11466  001898  C28B  F0CB         	movff	UseBluetooth@rfconf,?_sprintf+4
 11467  00189C  0100               	movlb	0	; () banked
 11468  00189E  6BCC               	clrf	(?_sprintf+5)& (0+255),b
 11469  0018A0  C273  F0CD         	movff	UseBluetooth@rfchannelSTR,?_sprintf+6
 11470  0018A4  0100               	movlb	0	; () banked
 11471  0018A6  6BCE               	clrf	(?_sprintf+7)& (0+255),b
 11472  0018A8  ECB5  F010         	call	_sprintf	;wreg free
 11473  0018AC  D000               	goto	l15924
 11474  0018AE                     l15924:
 11475                           
 11476                           ;Bluetooth.c: 774: }
 11477                           ;Bluetooth.c: 775: UARTstringCRLN(buf);
 11478  0018AE  0E0F               	movlw	low UseBluetooth@buf
 11479  0018B0  0100               	movlb	0	; () banked
 11480  0018B2  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11481  0018B4  0E02               	movlw	high UseBluetooth@buf
 11482  0018B6  0100               	movlb	0	; () banked
 11483  0018B8  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11484  0018BA  EC69  F045         	call	_UARTstringCRLN	;wreg free
 11485                           
 11486                           ;Bluetooth.c: 776: UARTstring(CRLN);
 11487  0018BE  0ED1               	movlw	low _CRLN
 11488  0018C0  0100               	movlb	0	; () banked
 11489  0018C2  6F7A               	movwf	UARTstring@data& (0+255),b
 11490  0018C4  0EF3               	movlw	high _CRLN
 11491  0018C6  0100               	movlb	0	; () banked
 11492  0018C8  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11493  0018CA  ECC4  F046         	call	_UARTstring	;wreg free
 11494                           
 11495                           ;Bluetooth.c: 778: for(i =0;i<10;i++)
 11496  0018CE  0E00               	movlw	0
 11497  0018D0  0102               	movlb	2	; () banked
 11498  0018D2  6F92               	movwf	UseBluetooth@i& (0+255),b
 11499                           
 11500                           ; BSR set to: 2
 11501  0018D4  0E09               	movlw	9
 11502  0018D6  0102               	movlb	2	; () banked
 11503  0018D8  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11504  0018DA  D002               	goto	l15934
 11505  0018DC  0012               	return	
 11506                           
 11507                           ; BSR set to: 2
 11508  0018DE  0012               	return	
 11509  0018E0                     l15934:
 11510                           
 11511                           ; BSR set to: 2
 11512                           ;Bluetooth.c: 779: {
 11513                           ;Bluetooth.c: 780: (LATC |= 0x04);
 11514  0018E0  848B               	bsf	3979,2,c	;volatile
 11515                           
 11516                           ; BSR set to: 2
 11517                           ;Bluetooth.c: 781: delayUS(50000);
 11518  0018E2  0E50               	movlw	80
 11519  0018E4  0100               	movlb	0	; () banked
 11520  0018E6  6F79               	movwf	delayUS@US& (0+255),b
 11521  0018E8  0EC3               	movlw	195
 11522  0018EA  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 11523  0018EC  0E00               	movlw	0
 11524  0018EE  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 11525  0018F0  0E00               	movlw	0
 11526  0018F2  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 11527  0018F4  EC48  F047         	call	_delayUS	;wreg free
 11528                           
 11529                           ;Bluetooth.c: 782: (LATC &= ~0x04);
 11530  0018F8  948B               	bcf	3979,2,c	;volatile
 11531                           
 11532                           ;Bluetooth.c: 783: delayUS(50000);
 11533  0018FA  0E50               	movlw	80
 11534  0018FC  0100               	movlb	0	; () banked
 11535  0018FE  6F79               	movwf	delayUS@US& (0+255),b
 11536  001900  0EC3               	movlw	195
 11537  001902  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 11538  001904  0E00               	movlw	0
 11539  001906  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 11540  001908  0E00               	movlw	0
 11541  00190A  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 11542  00190C  EC48  F047         	call	_delayUS	;wreg free
 11543  001910  0102               	movlb	2	; () banked
 11544  001912  2B92               	incf	UseBluetooth@i& (0+255),f,b
 11545                           
 11546                           ; BSR set to: 2
 11547  001914  0E09               	movlw	9
 11548  001916  0102               	movlb	2	; () banked
 11549  001918  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11550  00191A  D7E2               	goto	l15934
 11551  00191C  0012               	return	
 11552                           
 11553                           ; BSR set to: 2
 11554                           ;Bluetooth.c: 786: }
 11555                           ;Bluetooth.c: 787: }
 11556                           
 11557                           ; BSR set to: 2
 11558                           ;Bluetooth.c: 784: }
 11559                           ;Bluetooth.c: 785: return 1;
 11560                           ;	Return value of _UseBluetooth is never used
 11561  00191E  0012               	return	
 11562  001920                     l15944:
 11563                           
 11564                           ; BSR set to: 2
 11565                           ;Bluetooth.c: 788: else
 11566                           ;Bluetooth.c: 789: {
 11567                           ;Bluetooth.c: 790: UARTstringCRLN((unsigned char *)"Error: RF channel needs to be one ch
      +                          aracter");
 11568  001920  0E00               	movlw	low STR_76
 11569  001922  0100               	movlb	0	; () banked
 11570  001924  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11571  001926  0EF8               	movlw	high STR_76
 11572  001928  0100               	movlb	0	; () banked
 11573  00192A  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11574  00192C  EC69  F045         	call	_UARTstringCRLN	;wreg free
 11575                           
 11576                           ;Bluetooth.c: 791: UARTstring(CRLN);
 11577  001930  0ED1               	movlw	low _CRLN
 11578  001932  0100               	movlb	0	; () banked
 11579  001934  6F7A               	movwf	UARTstring@data& (0+255),b
 11580  001936  0EF3               	movlw	high _CRLN
 11581  001938  0100               	movlb	0	; () banked
 11582  00193A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11583  00193C  ECC4  F046         	call	_UARTstring	;wreg free
 11584                           
 11585                           ;Bluetooth.c: 793: }
 11586                           ;Bluetooth.c: 794: }
 11587                           ;Bluetooth.c: 795: }
 11588                           
 11589                           ;Bluetooth.c: 792: return 0;
 11590                           ;	Return value of _UseBluetooth is never used
 11591  001940  0012               	return	
 11592  001942                     l15948:
 11593                           
 11594                           ;Bluetooth.c: 796: else if(StringMatchCaseInsensitive(String,(unsigned char *)"Reset"))
 11595  001942  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 11596  001946  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 11597  00194A  0ED2               	movlw	low STR_77
 11598  00194C  0100               	movlb	0	; () banked
 11599  00194E  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 11600  001950  0EFF               	movlw	high STR_77
 11601  001952  0100               	movlb	0	; () banked
 11602  001954  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 11603  001956  EC15  F043         	call	_StringMatchCaseInsensitive	;wreg free
 11604  00195A  0900               	iorlw	0
 11605  00195C  B4D8               	btfsc	status,2,c
 11606  00195E  D097               	goto	l16010
 11607                           
 11608                           ;Bluetooth.c: 797: {
 11609                           ;Bluetooth.c: 798: cleanBuffer(ReceivedString, ReceivedStringPos);
 11610  001960  0E00               	movlw	low _ReceivedString
 11611  001962  0100               	movlb	0	; () banked
 11612  001964  6F79               	movwf	cleanBuffer@data& (0+255),b
 11613  001966  0E06               	movlw	high _ReceivedString
 11614  001968  0100               	movlb	0	; () banked
 11615  00196A  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 11616  00196C  C0E0  F07B         	movff	_ReceivedStringPos,cleanBuffer@count
 11617  001970  0100               	movlb	0	; () banked
 11618  001972  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 11619  001974  EC97  F046         	call	_cleanBuffer	;wreg free
 11620                           
 11621                           ;Bluetooth.c: 799: ReceivedStringPos = 0;
 11622  001978  0E00               	movlw	0
 11623  00197A  0100               	movlb	0	; () banked
 11624  00197C  6FE0               	movwf	_ReceivedStringPos& (0+255),b
 11625                           
 11626                           ; BSR set to: 0
 11627                           ;Bluetooth.c: 800: NewReceivedString = 0;
 11628  00197E  0E00               	movlw	0
 11629  001980  0100               	movlb	0	; () banked
 11630  001982  6FDF               	movwf	_NewReceivedString& (0+255),b	;volatile
 11631                           
 11632                           ; BSR set to: 0
 11633                           ;Bluetooth.c: 801: UARTstring((unsigned char *)"Enter Y to reset or N to cancel");
 11634  001984  0ED5               	movlw	low STR_78
 11635  001986  0100               	movlb	0	; () banked
 11636  001988  6F7A               	movwf	UARTstring@data& (0+255),b
 11637  00198A  0EF9               	movlw	high STR_78
 11638  00198C  0100               	movlb	0	; () banked
 11639  00198E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11640  001990  ECC4  F046         	call	_UARTstring	;wreg free
 11641                           
 11642                           ;Bluetooth.c: 802: UARTstring(CRLN);
 11643  001994  0ED1               	movlw	low _CRLN
 11644  001996  0100               	movlb	0	; () banked
 11645  001998  6F7A               	movwf	UARTstring@data& (0+255),b
 11646  00199A  0EF3               	movlw	high _CRLN
 11647  00199C  0100               	movlb	0	; () banked
 11648  00199E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11649  0019A0  ECC4  F046         	call	_UARTstring	;wreg free
 11650                           
 11651                           ;Bluetooth.c: 803: UARTchar('>');
 11652  0019A4  0E3E               	movlw	62
 11653  0019A6  ECB0  F049         	call	_UARTchar
 11654                           
 11655                           ;Bluetooth.c: 804: timeout = 0;
 11656  0019AA  0E00               	movlw	0
 11657  0019AC  0102               	movlb	2	; () banked
 11658  0019AE  6F82               	movwf	UseBluetooth@timeout& (0+255),b
 11659                           
 11660                           ; BSR set to: 2
 11661                           ;Bluetooth.c: 805: ClearUSART();
 11662  0019B0  EC4E  F04A         	call	_ClearUSART	;wreg free
 11663                           
 11664                           ;Bluetooth.c: 806: PIR1bits.RCIF = 0;
 11665  0019B4  9A9E               	bcf	3998,5,c	;volatile
 11666                           
 11667                           ;Bluetooth.c: 807: PIE1bits.RCIE = 1;
 11668  0019B6  8A9D               	bsf	3997,5,c	;volatile
 11669                           
 11670                           ;Bluetooth.c: 808: while(!NewReceivedString)
 11671  0019B8  D023               	goto	l15980
 11672  0019BA                     l15970:
 11673                           
 11674                           ;Bluetooth.c: 809: {
 11675                           ;Bluetooth.c: 810: delayUS(300000);
 11676  0019BA  0EE0               	movlw	224
 11677  0019BC  0100               	movlb	0	; () banked
 11678  0019BE  6F79               	movwf	delayUS@US& (0+255),b
 11679  0019C0  0E93               	movlw	147
 11680  0019C2  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 11681  0019C4  0E04               	movlw	4
 11682  0019C6  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 11683  0019C8  0E00               	movlw	0
 11684  0019CA  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 11685  0019CC  EC48  F047         	call	_delayUS	;wreg free
 11686                           
 11687                           ;Bluetooth.c: 811: timeout++;
 11688  0019D0  0102               	movlb	2	; () banked
 11689  0019D2  2B82               	incf	UseBluetooth@timeout& (0+255),f,b
 11690                           
 11691                           ; BSR set to: 2
 11692                           ;Bluetooth.c: 812: if(timeout > 25)
 11693  0019D4  0E19               	movlw	25
 11694  0019D6  0102               	movlb	2	; () banked
 11695  0019D8  6582               	cpfsgt	UseBluetooth@timeout& (0+255),b
 11696  0019DA  D012               	goto	l15980
 11697                           
 11698                           ; BSR set to: 2
 11699                           ;Bluetooth.c: 813: {
 11700                           ;Bluetooth.c: 814: UARTstring(CRLN);
 11701  0019DC  0ED1               	movlw	low _CRLN
 11702  0019DE  0100               	movlb	0	; () banked
 11703  0019E0  6F7A               	movwf	UARTstring@data& (0+255),b
 11704  0019E2  0EF3               	movlw	high _CRLN
 11705  0019E4  0100               	movlb	0	; () banked
 11706  0019E6  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11707  0019E8  ECC4  F046         	call	_UARTstring	;wreg free
 11708                           
 11709                           ;Bluetooth.c: 815: UARTstringCRLN((unsigned char *)"Device resumes without reset");
 11710  0019EC  0E0D               	movlw	low STR_79
 11711  0019EE  0100               	movlb	0	; () banked
 11712  0019F0  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11713  0019F2  0EFB               	movlw	high STR_79
 11714  0019F4  0100               	movlb	0	; () banked
 11715  0019F6  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11716  0019F8  EC69  F045         	call	_UARTstringCRLN	;wreg free
 11717                           
 11718                           ;Bluetooth.c: 816: return 0;
 11719                           ;	Return value of _UseBluetooth is never used
 11720  0019FC  0012               	return	
 11721  0019FE  D000               	goto	l15980
 11722  001A00                     l15980:
 11723  001A00  0100               	movlb	0	; () banked
 11724  001A02  51DF               	movf	_NewReceivedString& (0+255),w,b	;volatile
 11725  001A04  B4D8               	btfsc	status,2,c
 11726  001A06  D7D9               	goto	l15970
 11727                           
 11728                           ; BSR set to: 0
 11729                           ;Bluetooth.c: 817: }
 11730                           ;Bluetooth.c: 818: }
 11731                           ;Bluetooth.c: 819: PIE1bits.RCIE = 0;
 11732  001A08  9A9D               	bcf	3997,5,c	;volatile
 11733                           
 11734                           ; BSR set to: 0
 11735                           ;Bluetooth.c: 820: if(ReceivedString[0] == 'Y' || ReceivedString[0] == 'y' && ReceivedSt
      +                          ring[1] == 0)
 11736  001A0A  0E59               	movlw	89
 11737  001A0C  0106               	movlb	6	; () banked
 11738  001A0E  1900               	xorwf	_ReceivedString& (0+255),w,b
 11739  001A10  B4D8               	btfsc	status,2,c
 11740  001A12  D009               	goto	l15988
 11741                           
 11742                           ; BSR set to: 6
 11743  001A14  0E79               	movlw	121
 11744  001A16  0106               	movlb	6	; () banked
 11745  001A18  1900               	xorwf	_ReceivedString& (0+255),w,b
 11746  001A1A  A4D8               	btfss	status,2,c
 11747  001A1C  D014               	goto	l15998
 11748                           
 11749                           ; BSR set to: 6
 11750  001A1E  0106               	movlb	6	; () banked
 11751  001A20  5101               	movf	(_ReceivedString+1)& (0+255),w,b
 11752  001A22  A4D8               	btfss	status,2,c
 11753  001A24  D010               	goto	l15998
 11754  001A26                     l15988:
 11755                           
 11756                           ; BSR set to: 6
 11757                           ;Bluetooth.c: 821: {
 11758                           ;Bluetooth.c: 823: UARTstringCRLN((unsigned char *)"System will reset");
 11759  001A26  0E12               	movlw	low STR_80
 11760  001A28  0100               	movlb	0	; () banked
 11761  001A2A  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11762  001A2C  0EFE               	movlw	high STR_80
 11763  001A2E  0100               	movlb	0	; () banked
 11764  001A30  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11765  001A32  EC69  F045         	call	_UARTstringCRLN	;wreg free
 11766                           
 11767                           ;Bluetooth.c: 824: Global.EEPROMinitFlag = 0;
 11768  001A36  0E00               	movlw	0
 11769  001A38  0104               	movlb	4	; () banked
 11770  001A3A  6F2D               	movwf	(_Global+45)& (0+255),b
 11771                           
 11772                           ; BSR set to: 4
 11773                           ;Bluetooth.c: 825: SyncGlobalToEEPROM();
 11774  001A3C  ECE9  F047         	call	_SyncGlobalToEEPROM	;wreg free
 11775  001A40  00FF               	reset		;# 
 11776                           
 11777                           ;Bluetooth.c: 827: return 1;
 11778                           ;	Return value of _UseBluetooth is never used
 11779  001A42  0012               	return	
 11780                           
 11781                           ;Bluetooth.c: 828: }
 11782  001A44  D011               	goto	l16000
 11783  001A46                     l15998:
 11784                           
 11785                           ;Bluetooth.c: 829: else
 11786                           ;Bluetooth.c: 830: {
 11787                           ;Bluetooth.c: 831: UARTstring(CRLN);
 11788  001A46  0ED1               	movlw	low _CRLN
 11789  001A48  0100               	movlb	0	; () banked
 11790  001A4A  6F7A               	movwf	UARTstring@data& (0+255),b
 11791  001A4C  0EF3               	movlw	high _CRLN
 11792  001A4E  0100               	movlb	0	; () banked
 11793  001A50  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11794  001A52  ECC4  F046         	call	_UARTstring	;wreg free
 11795                           
 11796                           ;Bluetooth.c: 832: UARTstringCRLN((unsigned char *)"Device resumes without reset");
 11797  001A56  0E0D               	movlw	low STR_79
 11798  001A58  0100               	movlb	0	; () banked
 11799  001A5A  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11800  001A5C  0EFB               	movlw	high STR_79
 11801  001A5E  0100               	movlb	0	; () banked
 11802  001A60  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11803  001A62  EC69  F045         	call	_UARTstringCRLN	;wreg free
 11804  001A66  D000               	goto	l16000
 11805  001A68                     l16000:
 11806                           
 11807                           ;Bluetooth.c: 833: }
 11808                           ;Bluetooth.c: 834: cleanBuffer(ReceivedString, ReceivedStringPos);
 11809  001A68  0E00               	movlw	low _ReceivedString
 11810  001A6A  0100               	movlb	0	; () banked
 11811  001A6C  6F79               	movwf	cleanBuffer@data& (0+255),b
 11812  001A6E  0E06               	movlw	high _ReceivedString
 11813  001A70  0100               	movlb	0	; () banked
 11814  001A72  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 11815  001A74  C0E0  F07B         	movff	_ReceivedStringPos,cleanBuffer@count
 11816  001A78  0100               	movlb	0	; () banked
 11817  001A7A  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 11818  001A7C  EC97  F046         	call	_cleanBuffer	;wreg free
 11819                           
 11820                           ;Bluetooth.c: 835: ReceivedStringPos = 0;
 11821  001A80  0E00               	movlw	0
 11822  001A82  0100               	movlb	0	; () banked
 11823  001A84  6FE0               	movwf	_ReceivedStringPos& (0+255),b
 11824                           
 11825                           ; BSR set to: 0
 11826                           ;Bluetooth.c: 836: NewReceivedString = 0;
 11827  001A86  0E00               	movlw	0
 11828  001A88  0100               	movlb	0	; () banked
 11829  001A8A  6FDF               	movwf	_NewReceivedString& (0+255),b	;volatile
 11830                           
 11831                           ; BSR set to: 0
 11832                           ;Bluetooth.c: 838: }
 11833                           
 11834                           ; BSR set to: 0
 11835                           ;Bluetooth.c: 837: return 0;
 11836                           ;	Return value of _UseBluetooth is never used
 11837  001A8C  0012               	return	
 11838  001A8E                     l16010:
 11839                           
 11840                           ;Bluetooth.c: 839: else if(StringMatchCaseInsensitive(String,(unsigned char *)"Voltage")
      +                          )
 11841  001A8E  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 11842  001A92  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 11843  001A96  0EA3               	movlw	low STR_82
 11844  001A98  0100               	movlb	0	; () banked
 11845  001A9A  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 11846  001A9C  0EFF               	movlw	high STR_82
 11847  001A9E  0100               	movlb	0	; () banked
 11848  001AA0  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 11849  001AA2  EC15  F043         	call	_StringMatchCaseInsensitive	;wreg free
 11850  001AA6  0900               	iorlw	0
 11851  001AA8  B4D8               	btfsc	status,2,c
 11852  001AAA  D02F               	goto	l16020
 11853                           
 11854                           ;Bluetooth.c: 840: {
 11855                           ;Bluetooth.c: 841: UARTstring(CRLN);
 11856  001AAC  0ED1               	movlw	low _CRLN
 11857  001AAE  0100               	movlb	0	; () banked
 11858  001AB0  6F7A               	movwf	UARTstring@data& (0+255),b
 11859  001AB2  0EF3               	movlw	high _CRLN
 11860  001AB4  0100               	movlb	0	; () banked
 11861  001AB6  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11862  001AB8  ECC4  F046         	call	_UARTstring	;wreg free
 11863                           
 11864                           ;Bluetooth.c: 842: sprintf(buf,"Supply Voltage = %f", (double) ReadVoltage());
 11865  001ABC  0E0F               	movlw	low UseBluetooth@buf
 11866  001ABE  0100               	movlb	0	; () banked
 11867  001AC0  6FC7               	movwf	sprintf@sp& (0+255),b
 11868  001AC2  0E02               	movlw	high UseBluetooth@buf
 11869  001AC4  0100               	movlb	0	; () banked
 11870  001AC6  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11871  001AC8  0E67               	movlw	low STR_83
 11872  001ACA  0100               	movlb	0	; () banked
 11873  001ACC  6FC9               	movwf	sprintf@f& (0+255),b
 11874  001ACE  0EFD               	movlw	high STR_83
 11875  001AD0  0100               	movlb	0	; () banked
 11876  001AD2  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11877  001AD4  EC11  F040         	call	_ReadVoltage	;wreg free
 11878  001AD8  C0A2  F0CB         	movff	?_ReadVoltage,?_sprintf+4
 11879  001ADC  C0A3  F0CC         	movff	?_ReadVoltage+1,?_sprintf+5
 11880  001AE0  C0A4  F0CD         	movff	?_ReadVoltage+2,?_sprintf+6
 11881  001AE4  ECB5  F010         	call	_sprintf	;wreg free
 11882                           
 11883                           ;Bluetooth.c: 843: UARTstringCRLN(buf);
 11884  001AE8  0E0F               	movlw	low UseBluetooth@buf
 11885  001AEA  0100               	movlb	0	; () banked
 11886  001AEC  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11887  001AEE  0E02               	movlw	high UseBluetooth@buf
 11888  001AF0  0100               	movlb	0	; () banked
 11889  001AF2  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11890  001AF4  EC69  F045         	call	_UARTstringCRLN	;wreg free
 11891                           
 11892                           ;Bluetooth.c: 844: UARTstring(CRLN);
 11893  001AF8  0ED1               	movlw	low _CRLN
 11894  001AFA  0100               	movlb	0	; () banked
 11895  001AFC  6F7A               	movwf	UARTstring@data& (0+255),b
 11896  001AFE  0EF3               	movlw	high _CRLN
 11897  001B00  0100               	movlb	0	; () banked
 11898  001B02  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11899  001B04  ECC4  F046         	call	_UARTstring	;wreg free
 11900                           
 11901                           ;Bluetooth.c: 845: }
 11902  001B08  0012               	return	
 11903  001B0A                     l16020:
 11904                           
 11905                           ;Bluetooth.c: 846: else if(StringMatchCaseInsensitive(String,(unsigned char *)"Version")
      +                          )
 11906  001B0A  C200  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 11907  001B0E  C201  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 11908  001B12  0E02               	movlw	low (STR_96+18)
 11909  001B14  0100               	movlb	0	; () banked
 11910  001B16  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 11911  001B18  0EFC               	movlw	high (STR_96+18)
 11912  001B1A  0100               	movlb	0	; () banked
 11913  001B1C  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 11914  001B1E  EC15  F043         	call	_StringMatchCaseInsensitive	;wreg free
 11915  001B22  0900               	iorlw	0
 11916  001B24  B4D8               	btfsc	status,2,c
 11917  001B26  D067               	goto	l16038
 11918                           
 11919                           ;Bluetooth.c: 847: {
 11920                           ;Bluetooth.c: 848: UARTstring(CRLN);
 11921  001B28  0ED1               	movlw	low _CRLN
 11922  001B2A  0100               	movlb	0	; () banked
 11923  001B2C  6F7A               	movwf	UARTstring@data& (0+255),b
 11924  001B2E  0EF3               	movlw	high _CRLN
 11925  001B30  0100               	movlb	0	; () banked
 11926  001B32  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11927  001B34  ECC4  F046         	call	_UARTstring	;wreg free
 11928                           
 11929                           ;Bluetooth.c: 849: sprintf(buf,"Firmware Version: %s", FirmVersion);
 11930  001B38  0E0F               	movlw	low UseBluetooth@buf
 11931  001B3A  0100               	movlb	0	; () banked
 11932  001B3C  6FC7               	movwf	sprintf@sp& (0+255),b
 11933  001B3E  0E02               	movlw	high UseBluetooth@buf
 11934  001B40  0100               	movlb	0	; () banked
 11935  001B42  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11936  001B44  0E16               	movlw	low STR_85
 11937  001B46  0100               	movlb	0	; () banked
 11938  001B48  6FC9               	movwf	sprintf@f& (0+255),b
 11939  001B4A  0EFD               	movlw	high STR_85
 11940  001B4C  0100               	movlb	0	; () banked
 11941  001B4E  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11942  001B50  0EBB               	movlw	low _FirmVersion
 11943  001B52  0100               	movlb	0	; () banked
 11944  001B54  6FCB               	movwf	(?_sprintf+4)& (0+255),b
 11945  001B56  0EF3               	movlw	high _FirmVersion
 11946  001B58  0100               	movlb	0	; () banked
 11947  001B5A  6FCC               	movwf	(?_sprintf+5)& (0+255),b
 11948  001B5C  ECB5  F010         	call	_sprintf	;wreg free
 11949                           
 11950                           ;Bluetooth.c: 850: UARTstringCRLN(buf);
 11951  001B60  0E0F               	movlw	low UseBluetooth@buf
 11952  001B62  0100               	movlb	0	; () banked
 11953  001B64  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11954  001B66  0E02               	movlw	high UseBluetooth@buf
 11955  001B68  0100               	movlb	0	; () banked
 11956  001B6A  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11957  001B6C  EC69  F045         	call	_UARTstringCRLN	;wreg free
 11958                           
 11959                           ;Bluetooth.c: 851: UARTstring(CRLN);
 11960  001B70  0ED1               	movlw	low _CRLN
 11961  001B72  0100               	movlb	0	; () banked
 11962  001B74  6F7A               	movwf	UARTstring@data& (0+255),b
 11963  001B76  0EF3               	movlw	high _CRLN
 11964  001B78  0100               	movlb	0	; () banked
 11965  001B7A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11966  001B7C  ECC4  F046         	call	_UARTstring	;wreg free
 11967                           
 11968                           ;Bluetooth.c: 852: sprintf(buf,"PCB Version: %s", PCBVersion);
 11969  001B80  0E0F               	movlw	low UseBluetooth@buf
 11970  001B82  0100               	movlb	0	; () banked
 11971  001B84  6FC7               	movwf	sprintf@sp& (0+255),b
 11972  001B86  0E02               	movlw	high UseBluetooth@buf
 11973  001B88  0100               	movlb	0	; () banked
 11974  001B8A  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11975  001B8C  0E67               	movlw	low STR_86
 11976  001B8E  0100               	movlb	0	; () banked
 11977  001B90  6FC9               	movwf	sprintf@f& (0+255),b
 11978  001B92  0EFE               	movlw	high STR_86
 11979  001B94  0100               	movlb	0	; () banked
 11980  001B96  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11981  001B98  0EC4               	movlw	low _PCBVersion
 11982  001B9A  0100               	movlb	0	; () banked
 11983  001B9C  6FCB               	movwf	(?_sprintf+4)& (0+255),b
 11984  001B9E  0EF3               	movlw	high _PCBVersion
 11985  001BA0  0100               	movlb	0	; () banked
 11986  001BA2  6FCC               	movwf	(?_sprintf+5)& (0+255),b
 11987  001BA4  ECB5  F010         	call	_sprintf	;wreg free
 11988                           
 11989                           ;Bluetooth.c: 853: UARTstringCRLN(buf);
 11990  001BA8  0E0F               	movlw	low UseBluetooth@buf
 11991  001BAA  0100               	movlb	0	; () banked
 11992  001BAC  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11993  001BAE  0E02               	movlw	high UseBluetooth@buf
 11994  001BB0  0100               	movlb	0	; () banked
 11995  001BB2  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11996  001BB4  EC69  F045         	call	_UARTstringCRLN	;wreg free
 11997                           
 11998                           ;Bluetooth.c: 855: sprintf(buf,"PCB has Bluetooth capability");
 11999  001BB8  0E0F               	movlw	low UseBluetooth@buf
 12000  001BBA  0100               	movlb	0	; () banked
 12001  001BBC  6FC7               	movwf	sprintf@sp& (0+255),b
 12002  001BBE  0E02               	movlw	high UseBluetooth@buf
 12003  001BC0  0100               	movlb	0	; () banked
 12004  001BC2  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 12005  001BC4  0E64               	movlw	low STR_87
 12006  001BC6  0100               	movlb	0	; () banked
 12007  001BC8  6FC9               	movwf	sprintf@f& (0+255),b
 12008  001BCA  0EFB               	movlw	high STR_87
 12009  001BCC  0100               	movlb	0	; () banked
 12010  001BCE  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 12011  001BD0  ECB5  F010         	call	_sprintf	;wreg free
 12012                           
 12013                           ;Bluetooth.c: 859: UARTstringCRLN(buf);
 12014  001BD4  0E0F               	movlw	low UseBluetooth@buf
 12015  001BD6  0100               	movlb	0	; () banked
 12016  001BD8  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12017  001BDA  0E02               	movlw	high UseBluetooth@buf
 12018  001BDC  0100               	movlb	0	; () banked
 12019  001BDE  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12020  001BE0  EC69  F045         	call	_UARTstringCRLN	;wreg free
 12021                           
 12022                           ;Bluetooth.c: 860: UARTstring(CRLN);
 12023  001BE4  0ED1               	movlw	low _CRLN
 12024  001BE6  0100               	movlb	0	; () banked
 12025  001BE8  6F7A               	movwf	UARTstring@data& (0+255),b
 12026  001BEA  0EF3               	movlw	high _CRLN
 12027  001BEC  0100               	movlb	0	; () banked
 12028  001BEE  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12029  001BF0  ECC4  F046         	call	_UARTstring	;wreg free
 12030                           
 12031                           ;Bluetooth.c: 861: }
 12032  001BF4  0012               	return	
 12033  001BF6                     l16038:
 12034                           
 12035                           ;Bluetooth.c: 862: else if(StringMatch(String,(unsigned char *)"???"))
 12036  001BF6  C200  F079         	movff	UseBluetooth@String,StringMatch@This
 12037  001BFA  C201  F07A         	movff	UseBluetooth@String+1,StringMatch@This+1
 12038  001BFE  0EEB               	movlw	low STR_88
 12039  001C00  0100               	movlb	0	; () banked
 12040  001C02  6F7B               	movwf	StringMatch@That& (0+255),b
 12041  001C04  0EFF               	movlw	high STR_88
 12042  001C06  0100               	movlb	0	; () banked
 12043  001C08  6F7C               	movwf	(StringMatch@That+1)& (0+255),b
 12044  001C0A  EC2D  F045         	call	_StringMatch	;wreg free
 12045  001C0E  0900               	iorlw	0
 12046  001C10  B4D8               	btfsc	status,2,c
 12047  001C12  D291               	goto	l16104
 12048                           
 12049                           ;Bluetooth.c: 863: {
 12050                           ;Bluetooth.c: 864: UARTstring(CRLN);
 12051  001C14  0ED1               	movlw	low _CRLN
 12052  001C16  0100               	movlb	0	; () banked
 12053  001C18  6F7A               	movwf	UARTstring@data& (0+255),b
 12054  001C1A  0EF3               	movlw	high _CRLN
 12055  001C1C  0100               	movlb	0	; () banked
 12056  001C1E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12057  001C20  ECC4  F046         	call	_UARTstring	;wreg free
 12058                           
 12059                           ;Bluetooth.c: 865: for(i=0; i< 34; i++ )
 12060  001C24  0E00               	movlw	0
 12061  001C26  0102               	movlb	2	; () banked
 12062  001C28  6F92               	movwf	UseBluetooth@i& (0+255),b
 12063  001C2A                     l16044:
 12064                           
 12065                           ; BSR set to: 2
 12066  001C2A  0E21               	movlw	33
 12067  001C2C  0102               	movlb	2	; () banked
 12068  001C2E  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 12069  001C30  D001               	goto	l16048
 12070                           
 12071                           ; BSR set to: 2
 12072  001C32  D006               	goto	l16054
 12073  001C34                     l16048:
 12074                           
 12075                           ; BSR set to: 2
 12076                           ;Bluetooth.c: 866: {
 12077                           ;Bluetooth.c: 867: UARTchar('~');
 12078  001C34  0E7E               	movlw	126
 12079  001C36  ECB0  F049         	call	_UARTchar
 12080  001C3A  0102               	movlb	2	; () banked
 12081  001C3C  2B92               	incf	UseBluetooth@i& (0+255),f,b
 12082  001C3E  D7F5               	goto	l16044
 12083  001C40                     l16054:
 12084                           
 12085                           ; BSR set to: 2
 12086                           ;Bluetooth.c: 868: }
 12087                           ;Bluetooth.c: 869: UARTstring((unsigned char *)"Command Menu");
 12088  001C40  0EE3               	movlw	low (STR_145+14)
 12089  001C42  0100               	movlb	0	; () banked
 12090  001C44  6F7A               	movwf	UARTstring@data& (0+255),b
 12091  001C46  0EFB               	movlw	high (STR_145+14)
 12092  001C48  0100               	movlb	0	; () banked
 12093  001C4A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12094  001C4C  ECC4  F046         	call	_UARTstring	;wreg free
 12095                           
 12096                           ;Bluetooth.c: 870: for(i=0; i< 34; i++ )
 12097  001C50  0E00               	movlw	0
 12098  001C52  0102               	movlb	2	; () banked
 12099  001C54  6F92               	movwf	UseBluetooth@i& (0+255),b
 12100  001C56                     l16058:
 12101                           
 12102                           ; BSR set to: 2
 12103  001C56  0E21               	movlw	33
 12104  001C58  0102               	movlb	2	; () banked
 12105  001C5A  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 12106  001C5C  D001               	goto	l16062
 12107                           
 12108                           ; BSR set to: 2
 12109  001C5E  D006               	goto	l16068
 12110  001C60                     l16062:
 12111                           
 12112                           ; BSR set to: 2
 12113                           ;Bluetooth.c: 871: {
 12114                           ;Bluetooth.c: 872: UARTchar('~');
 12115  001C60  0E7E               	movlw	126
 12116  001C62  ECB0  F049         	call	_UARTchar
 12117  001C66  0102               	movlb	2	; () banked
 12118  001C68  2B92               	incf	UseBluetooth@i& (0+255),f,b
 12119  001C6A  D7F5               	goto	l16058
 12120  001C6C                     l16068:
 12121                           
 12122                           ; BSR set to: 2
 12123                           ;Bluetooth.c: 873: }
 12124                           ;Bluetooth.c: 874: UARTstring(CRLN);
 12125  001C6C  0ED1               	movlw	low _CRLN
 12126  001C6E  0100               	movlb	0	; () banked
 12127  001C70  6F7A               	movwf	UARTstring@data& (0+255),b
 12128  001C72  0EF3               	movlw	high _CRLN
 12129  001C74  0100               	movlb	0	; () banked
 12130  001C76  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12131  001C78  ECC4  F046         	call	_UARTstring	;wreg free
 12132                           
 12133                           ;Bluetooth.c: 875: UARTstring(CRLN);
 12134  001C7C  0ED1               	movlw	low _CRLN
 12135  001C7E  0100               	movlb	0	; () banked
 12136  001C80  6F7A               	movwf	UARTstring@data& (0+255),b
 12137  001C82  0EF3               	movlw	high _CRLN
 12138  001C84  0100               	movlb	0	; () banked
 12139  001C86  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12140  001C88  ECC4  F046         	call	_UARTstring	;wreg free
 12141                           
 12142                           ;Bluetooth.c: 876: UARTstringCRLN((unsigned char *)"System commands:");
 12143  001C8C  0E35               	movlw	low STR_90
 12144  001C8E  0100               	movlb	0	; () banked
 12145  001C90  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12146  001C92  0EFE               	movlw	high STR_90
 12147  001C94  0100               	movlb	0	; () banked
 12148  001C96  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12149  001C98  EC69  F045         	call	_UARTstringCRLN	;wreg free
 12150                           
 12151                           ;Bluetooth.c: 877: UARTcommandMenu((unsigned char *)"???", (unsigned char *)"Help Menu")
      +                          ;
 12152  001C9C  0EEB               	movlw	low STR_88
 12153  001C9E  0100               	movlb	0	; () banked
 12154  001CA0  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12155  001CA2  0EFF               	movlw	high STR_88
 12156  001CA4  0100               	movlb	0	; () banked
 12157  001CA6  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12158  001CA8  0E7E               	movlw	low STR_92
 12159  001CAA  0100               	movlb	0	; () banked
 12160  001CAC  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12161  001CAE  0EFF               	movlw	high STR_92
 12162  001CB0  0100               	movlb	0	; () banked
 12163  001CB2  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12164  001CB4  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12165                           
 12166                           ;Bluetooth.c: 878: UARTcommandMenu((unsigned char *)"Reset", (unsigned char *)"Clears me
      +                          mory and resets device");
 12167  001CB8  0ED2               	movlw	low STR_77
 12168  001CBA  0100               	movlb	0	; () banked
 12169  001CBC  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12170  001CBE  0EFF               	movlw	high STR_77
 12171  001CC0  0100               	movlb	0	; () banked
 12172  001CC2  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12173  001CC4  0EB5               	movlw	low STR_94
 12174  001CC6  0100               	movlb	0	; () banked
 12175  001CC8  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12176  001CCA  0EF9               	movlw	high STR_94
 12177  001CCC  0100               	movlb	0	; () banked
 12178  001CCE  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12179  001CD0  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12180                           
 12181                           ;Bluetooth.c: 879: UARTcommandMenu((unsigned char *)"Version", (unsigned char *)"Display
      +                          s Firmware Version");
 12182  001CD4  0E02               	movlw	low (STR_96+18)
 12183  001CD6  0100               	movlb	0	; () banked
 12184  001CD8  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12185  001CDA  0EFC               	movlw	high (STR_96+18)
 12186  001CDC  0100               	movlb	0	; () banked
 12187  001CDE  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12188  001CE0  0EF0               	movlw	low STR_96
 12189  001CE2  0100               	movlb	0	; () banked
 12190  001CE4  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12191  001CE6  0EFB               	movlw	high STR_96
 12192  001CE8  0100               	movlb	0	; () banked
 12193  001CEA  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12194  001CEC  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12195                           
 12196                           ;Bluetooth.c: 880: UARTstring(CRLN);
 12197  001CF0  0ED1               	movlw	low _CRLN
 12198  001CF2  0100               	movlb	0	; () banked
 12199  001CF4  6F7A               	movwf	UARTstring@data& (0+255),b
 12200  001CF6  0EF3               	movlw	high _CRLN
 12201  001CF8  0100               	movlb	0	; () banked
 12202  001CFA  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12203  001CFC  ECC4  F046         	call	_UARTstring	;wreg free
 12204                           
 12205                           ;Bluetooth.c: 881: UARTstringCRLN((unsigned char *)"Diagnostic Commands:");
 12206  001D00  0E01               	movlw	low STR_97
 12207  001D02  0100               	movlb	0	; () banked
 12208  001D04  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12209  001D06  0EFD               	movlw	high STR_97
 12210  001D08  0100               	movlb	0	; () banked
 12211  001D0A  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12212  001D0C  EC69  F045         	call	_UARTstringCRLN	;wreg free
 12213                           
 12214                           ;Bluetooth.c: 882: UARTcommandMenu((unsigned char *)"Voltage", (unsigned char *)"Display
      +                          s the supply voltage");
 12215  001D10  0EA3               	movlw	low STR_82
 12216  001D12  0100               	movlb	0	; () banked
 12217  001D14  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12218  001D16  0EFF               	movlw	high STR_82
 12219  001D18  0100               	movlb	0	; () banked
 12220  001D1A  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12221  001D1C  0E9D               	movlw	low STR_99
 12222  001D1E  0100               	movlb	0	; () banked
 12223  001D20  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12224  001D22  0EFB               	movlw	high STR_99
 12225  001D24  0100               	movlb	0	; () banked
 12226  001D26  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12227  001D28  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12228                           
 12229                           ;Bluetooth.c: 883: UARTstring(CRLN);
 12230  001D2C  0ED1               	movlw	low _CRLN
 12231  001D2E  0100               	movlb	0	; () banked
 12232  001D30  6F7A               	movwf	UARTstring@data& (0+255),b
 12233  001D32  0EF3               	movlw	high _CRLN
 12234  001D34  0100               	movlb	0	; () banked
 12235  001D36  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12236  001D38  ECC4  F046         	call	_UARTstring	;wreg free
 12237                           
 12238                           ;Bluetooth.c: 884: UARTstringCRLN((unsigned char *)"IR commands:");
 12239  001D3C  0EBF               	movlw	low STR_100
 12240  001D3E  0100               	movlb	0	; () banked
 12241  001D40  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12242  001D42  0EFE               	movlw	high STR_100
 12243  001D44  0100               	movlb	0	; () banked
 12244  001D46  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12245  001D48  EC69  F045         	call	_UARTstringCRLN	;wreg free
 12246                           
 12247                           ;Bluetooth.c: 885: for(i=1; i <= 20; i++)
 12248  001D4C  0E01               	movlw	1
 12249  001D4E  0102               	movlb	2	; () banked
 12250  001D50  6F92               	movwf	UseBluetooth@i& (0+255),b
 12251  001D52                     l16072:
 12252                           
 12253                           ; BSR set to: 2
 12254  001D52  0E14               	movlw	20
 12255  001D54  0102               	movlb	2	; () banked
 12256  001D56  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 12257  001D58  D001               	goto	l16076
 12258                           
 12259                           ; BSR set to: 2
 12260  001D5A  D030               	goto	l16086
 12261  001D5C                     l16076:
 12262                           
 12263                           ; BSR set to: 2
 12264                           ;Bluetooth.c: 886: {
 12265                           ;Bluetooth.c: 887: cleanBuffer(buf,50);
 12266  001D5C  0E0F               	movlw	low UseBluetooth@buf
 12267  001D5E  0100               	movlb	0	; () banked
 12268  001D60  6F79               	movwf	cleanBuffer@data& (0+255),b
 12269  001D62  0E02               	movlw	high UseBluetooth@buf
 12270  001D64  0100               	movlb	0	; () banked
 12271  001D66  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 12272  001D68  0E00               	movlw	0
 12273  001D6A  0100               	movlb	0	; () banked
 12274  001D6C  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 12275  001D6E  0E32               	movlw	50
 12276  001D70  6F7B               	movwf	cleanBuffer@count& (0+255),b
 12277  001D72  EC97  F046         	call	_cleanBuffer	;wreg free
 12278                           
 12279                           ;Bluetooth.c: 888: sprintf(buf,"RemoteButton%d",i);
 12280  001D76  0E0F               	movlw	low UseBluetooth@buf
 12281  001D78  0100               	movlb	0	; () banked
 12282  001D7A  6FC7               	movwf	sprintf@sp& (0+255),b
 12283  001D7C  0E02               	movlw	high UseBluetooth@buf
 12284  001D7E  0100               	movlb	0	; () banked
 12285  001D80  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 12286  001D82  0E87               	movlw	low STR_101
 12287  001D84  0100               	movlb	0	; () banked
 12288  001D86  6FC9               	movwf	sprintf@f& (0+255),b
 12289  001D88  0EFE               	movlw	high STR_101
 12290  001D8A  0100               	movlb	0	; () banked
 12291  001D8C  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 12292  001D8E  C292  F0CB         	movff	UseBluetooth@i,?_sprintf+4
 12293  001D92  0100               	movlb	0	; () banked
 12294  001D94  6BCC               	clrf	(?_sprintf+5)& (0+255),b
 12295  001D96  ECB5  F010         	call	_sprintf	;wreg free
 12296                           
 12297                           ;Bluetooth.c: 889: UARTcommandMenu(buf, "Transmits saved NEC code");
 12298  001D9A  0E0F               	movlw	low UseBluetooth@buf
 12299  001D9C  0100               	movlb	0	; () banked
 12300  001D9E  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12301  001DA0  0E02               	movlw	high UseBluetooth@buf
 12302  001DA2  0100               	movlb	0	; () banked
 12303  001DA4  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12304  001DA6  0E0A               	movlw	low STR_102
 12305  001DA8  0100               	movlb	0	; () banked
 12306  001DAA  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12307  001DAC  0EFC               	movlw	high STR_102
 12308  001DAE  0100               	movlb	0	; () banked
 12309  001DB0  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12310  001DB2  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12311  001DB6  0102               	movlb	2	; () banked
 12312  001DB8  2B92               	incf	UseBluetooth@i& (0+255),f,b
 12313  001DBA  D7CB               	goto	l16072
 12314  001DBC                     l16086:
 12315                           
 12316                           ; BSR set to: 2
 12317                           ;Bluetooth.c: 890: }
 12318                           ;Bluetooth.c: 891: for(i=1; i <= 20; i++)
 12319  001DBC  0E01               	movlw	1
 12320  001DBE  0102               	movlb	2	; () banked
 12321  001DC0  6F92               	movwf	UseBluetooth@i& (0+255),b
 12322  001DC2                     l16088:
 12323                           
 12324                           ; BSR set to: 2
 12325  001DC2  0E14               	movlw	20
 12326  001DC4  0102               	movlb	2	; () banked
 12327  001DC6  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 12328  001DC8  D001               	goto	l16092
 12329                           
 12330                           ; BSR set to: 2
 12331  001DCA  D030               	goto	l16102
 12332  001DCC                     l16092:
 12333                           
 12334                           ; BSR set to: 2
 12335                           ;Bluetooth.c: 892: {
 12336                           ;Bluetooth.c: 893: cleanBuffer(buf,50);
 12337  001DCC  0E0F               	movlw	low UseBluetooth@buf
 12338  001DCE  0100               	movlb	0	; () banked
 12339  001DD0  6F79               	movwf	cleanBuffer@data& (0+255),b
 12340  001DD2  0E02               	movlw	high UseBluetooth@buf
 12341  001DD4  0100               	movlb	0	; () banked
 12342  001DD6  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 12343  001DD8  0E00               	movlw	0
 12344  001DDA  0100               	movlb	0	; () banked
 12345  001DDC  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 12346  001DDE  0E32               	movlw	50
 12347  001DE0  6F7B               	movwf	cleanBuffer@count& (0+255),b
 12348  001DE2  EC97  F046         	call	_cleanBuffer	;wreg free
 12349                           
 12350                           ;Bluetooth.c: 894: sprintf(buf,"RemoteButton%d set",i);
 12351  001DE6  0E0F               	movlw	low UseBluetooth@buf
 12352  001DE8  0100               	movlb	0	; () banked
 12353  001DEA  6FC7               	movwf	sprintf@sp& (0+255),b
 12354  001DEC  0E02               	movlw	high UseBluetooth@buf
 12355  001DEE  0100               	movlb	0	; () banked
 12356  001DF0  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 12357  001DF2  0EDB               	movlw	low STR_103
 12358  001DF4  0100               	movlb	0	; () banked
 12359  001DF6  6FC9               	movwf	sprintf@f& (0+255),b
 12360  001DF8  0EFD               	movlw	high STR_103
 12361  001DFA  0100               	movlb	0	; () banked
 12362  001DFC  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 12363  001DFE  C292  F0CB         	movff	UseBluetooth@i,?_sprintf+4
 12364  001E02  0100               	movlb	0	; () banked
 12365  001E04  6BCC               	clrf	(?_sprintf+5)& (0+255),b
 12366  001E06  ECB5  F010         	call	_sprintf	;wreg free
 12367                           
 12368                           ;Bluetooth.c: 895: UARTcommandMenu(buf,(unsigned char *) "Allows saving NEC codes");
 12369  001E0A  0E0F               	movlw	low UseBluetooth@buf
 12370  001E0C  0100               	movlb	0	; () banked
 12371  001E0E  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12372  001E10  0E02               	movlw	high UseBluetooth@buf
 12373  001E12  0100               	movlb	0	; () banked
 12374  001E14  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12375  001E16  0E3B               	movlw	low STR_104
 12376  001E18  0100               	movlb	0	; () banked
 12377  001E1A  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12378  001E1C  0EFC               	movlw	high STR_104
 12379  001E1E  0100               	movlb	0	; () banked
 12380  001E20  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12381  001E22  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12382  001E26  0102               	movlb	2	; () banked
 12383  001E28  2B92               	incf	UseBluetooth@i& (0+255),f,b
 12384  001E2A  D7CB               	goto	l16088
 12385  001E2C                     l16102:
 12386                           
 12387                           ; BSR set to: 2
 12388                           ;Bluetooth.c: 896: }
 12389                           ;Bluetooth.c: 897: UARTcommandMenu("RF set 1,D", "Sets Remote button to send RF Config 1
      +                           channel D");
 12390  001E2C  0E32               	movlw	low STR_105
 12391  001E2E  0100               	movlb	0	; () banked
 12392  001E30  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12393  001E32  0EFF               	movlw	high STR_105
 12394  001E34  0100               	movlb	0	; () banked
 12395  001E36  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12396  001E38  0E14               	movlw	low STR_106
 12397  001E3A  0100               	movlb	0	; () banked
 12398  001E3C  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12399  001E3E  0EF5               	movlw	high STR_106
 12400  001E40  0100               	movlb	0	; () banked
 12401  001E42  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12402  001E44  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12403                           
 12404                           ;Bluetooth.c: 898: UARTcommandMenu("RF set 1,E", "Sets Remote button to send RF Config 1
      +                           channel E");
 12405  001E48  0E48               	movlw	low STR_107
 12406  001E4A  0100               	movlb	0	; () banked
 12407  001E4C  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12408  001E4E  0EFF               	movlw	high STR_107
 12409  001E50  0100               	movlb	0	; () banked
 12410  001E52  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12411  001E54  0E76               	movlw	low STR_108
 12412  001E56  0100               	movlb	0	; () banked
 12413  001E58  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12414  001E5A  0EF5               	movlw	high STR_108
 12415  001E5C  0100               	movlb	0	; () banked
 12416  001E5E  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12417  001E60  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12418                           
 12419                           ;Bluetooth.c: 899: UARTcommandMenu("RF set 1,F", "Sets Remote button to send RF Config 1
      +                           channel F");
 12420  001E64  0E53               	movlw	low STR_109
 12421  001E66  0100               	movlb	0	; () banked
 12422  001E68  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12423  001E6A  0EFF               	movlw	high STR_109
 12424  001E6C  0100               	movlb	0	; () banked
 12425  001E6E  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12426  001E70  0EA7               	movlw	low STR_110
 12427  001E72  0100               	movlb	0	; () banked
 12428  001E74  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12429  001E76  0EF5               	movlw	high STR_110
 12430  001E78  0100               	movlb	0	; () banked
 12431  001E7A  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12432  001E7C  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12433                           
 12434                           ;Bluetooth.c: 900: UARTcommandMenu("RF set 2,B", "Sets Remote button to send RF Config 2
      +                           channel B");
 12435  001E80  0E27               	movlw	low STR_111
 12436  001E82  0100               	movlb	0	; () banked
 12437  001E84  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12438  001E86  0EFF               	movlw	high STR_111
 12439  001E88  0100               	movlb	0	; () banked
 12440  001E8A  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12441  001E8C  0EE3               	movlw	low STR_112
 12442  001E8E  0100               	movlb	0	; () banked
 12443  001E90  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12444  001E92  0EF4               	movlw	high STR_112
 12445  001E94  0100               	movlb	0	; () banked
 12446  001E96  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12447  001E98  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12448                           
 12449                           ;Bluetooth.c: 901: UARTcommandMenu("RF set 2,D", "Sets Remote button to send RF Config 2
      +                           channel D");
 12450  001E9C  0E3D               	movlw	low STR_113
 12451  001E9E  0100               	movlb	0	; () banked
 12452  001EA0  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12453  001EA2  0EFF               	movlw	high STR_113
 12454  001EA4  0100               	movlb	0	; () banked
 12455  001EA6  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12456  001EA8  0E45               	movlw	low STR_114
 12457  001EAA  0100               	movlb	0	; () banked
 12458  001EAC  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12459  001EAE  0EF5               	movlw	high STR_114
 12460  001EB0  0100               	movlb	0	; () banked
 12461  001EB2  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12462  001EB4  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12463                           
 12464                           ;Bluetooth.c: 902: UARTcommandMenu("RF set 2,H", "Sets Remote button to send RF Config 2
      +                           channel H");
 12465  001EB8  0E5E               	movlw	low STR_115
 12466  001EBA  0100               	movlb	0	; () banked
 12467  001EBC  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12468  001EBE  0EFF               	movlw	high STR_115
 12469  001EC0  0100               	movlb	0	; () banked
 12470  001EC2  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12471  001EC4  0ED8               	movlw	low STR_116
 12472  001EC6  0100               	movlb	0	; () banked
 12473  001EC8  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12474  001ECA  0EF5               	movlw	high STR_116
 12475  001ECC  0100               	movlb	0	; () banked
 12476  001ECE  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12477  001ED0  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12478                           
 12479                           ;Bluetooth.c: 903: UARTcommandMenu("RF clear 1,D", "Clears saved Button for RF Config 1 
      +                          channel D");
 12480  001ED4  0ED9               	movlw	low STR_117
 12481  001ED6  0100               	movlb	0	; () banked
 12482  001ED8  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12483  001EDA  0EFE               	movlw	high STR_117
 12484  001EDC  0100               	movlb	0	; () banked
 12485  001EDE  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12486  001EE0  0E94               	movlw	low STR_118
 12487  001EE2  0100               	movlb	0	; () banked
 12488  001EE4  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12489  001EE6  0EF6               	movlw	high STR_118
 12490  001EE8  0100               	movlb	0	; () banked
 12491  001EEA  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12492  001EEC  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12493                           
 12494                           ;Bluetooth.c: 904: UARTcommandMenu("RF clear 1,E", "Clears saved Button for RF Config 1 
      +                          channel E");
 12495  001EF0  0EF3               	movlw	low STR_119
 12496  001EF2  0100               	movlb	0	; () banked
 12497  001EF4  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12498  001EF6  0EFE               	movlw	high STR_119
 12499  001EF8  0100               	movlb	0	; () banked
 12500  001EFA  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12501  001EFC  0EF0               	movlw	low STR_120
 12502  001EFE  0100               	movlb	0	; () banked
 12503  001F00  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12504  001F02  0EF6               	movlw	high STR_120
 12505  001F04  0100               	movlb	0	; () banked
 12506  001F06  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12507  001F08  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12508                           
 12509                           ;Bluetooth.c: 905: UARTcommandMenu("RF clear 1,F", "Clears saved Button for RF Config 1 
      +                          channel F");
 12510  001F0C  0E00               	movlw	low STR_121
 12511  001F0E  0100               	movlb	0	; () banked
 12512  001F10  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12513  001F12  0EFF               	movlw	high STR_121
 12514  001F14  0100               	movlb	0	; () banked
 12515  001F16  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12516  001F18  0E1E               	movlw	low STR_122
 12517  001F1A  0100               	movlb	0	; () banked
 12518  001F1C  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12519  001F1E  0EF7               	movlw	high STR_122
 12520  001F20  0100               	movlb	0	; () banked
 12521  001F22  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12522  001F24  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12523                           
 12524                           ;Bluetooth.c: 906: UARTcommandMenu("RF clear 2,B", "Clears saved Button for RF Config 2 
      +                          channel B");
 12525  001F28  0ECC               	movlw	low STR_123
 12526  001F2A  0100               	movlb	0	; () banked
 12527  001F2C  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12528  001F2E  0EFE               	movlw	high STR_123
 12529  001F30  0100               	movlb	0	; () banked
 12530  001F32  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12531  001F34  0E66               	movlw	low STR_124
 12532  001F36  0100               	movlb	0	; () banked
 12533  001F38  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12534  001F3A  0EF6               	movlw	high STR_124
 12535  001F3C  0100               	movlb	0	; () banked
 12536  001F3E  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12537  001F40  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12538                           
 12539                           ;Bluetooth.c: 907: UARTcommandMenu("RF clear 2,D", "Clears saved Button for RF Config 2 
      +                          channel D");
 12540  001F44  0EE6               	movlw	low STR_125
 12541  001F46  0100               	movlb	0	; () banked
 12542  001F48  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12543  001F4A  0EFE               	movlw	high STR_125
 12544  001F4C  0100               	movlb	0	; () banked
 12545  001F4E  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12546  001F50  0EC2               	movlw	low STR_126
 12547  001F52  0100               	movlb	0	; () banked
 12548  001F54  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12549  001F56  0EF6               	movlw	high STR_126
 12550  001F58  0100               	movlb	0	; () banked
 12551  001F5A  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12552  001F5C  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12553                           
 12554                           ;Bluetooth.c: 908: UARTcommandMenu("RF clear 2,H", "Clears saved Button for RF Config 2 
      +                          channel H");
 12555  001F60  0E0D               	movlw	low STR_127
 12556  001F62  0100               	movlb	0	; () banked
 12557  001F64  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12558  001F66  0EFF               	movlw	high STR_127
 12559  001F68  0100               	movlb	0	; () banked
 12560  001F6A  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12561  001F6C  0E4C               	movlw	low STR_128
 12562  001F6E  0100               	movlb	0	; () banked
 12563  001F70  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12564  001F72  0EF7               	movlw	high STR_128
 12565  001F74  0100               	movlb	0	; () banked
 12566  001F76  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12567  001F78  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12568                           
 12569                           ;Bluetooth.c: 909: UARTcommandMenu((unsigned char *)"NEC?", (unsigned char *)"NEC descri
      +                          ption for Arbitrary code send");
 12570  001F7C  0EE2               	movlw	low STR_129
 12571  001F7E  0100               	movlb	0	; () banked
 12572  001F80  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12573  001F82  0EFF               	movlw	high STR_129
 12574  001F84  0100               	movlb	0	; () banked
 12575  001F86  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12576  001F88  0E56               	movlw	low STR_130
 12577  001F8A  0100               	movlb	0	; () banked
 12578  001F8C  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12579  001F8E  0EF8               	movlw	high STR_130
 12580  001F90  0100               	movlb	0	; () banked
 12581  001F92  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12582  001F94  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12583                           
 12584                           ;Bluetooth.c: 910: UARTstring(CRLN);
 12585  001F98  0ED1               	movlw	low _CRLN
 12586  001F9A  0100               	movlb	0	; () banked
 12587  001F9C  6F7A               	movwf	UARTstring@data& (0+255),b
 12588  001F9E  0EF3               	movlw	high _CRLN
 12589  001FA0  0100               	movlb	0	; () banked
 12590  001FA2  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12591  001FA4  ECC4  F046         	call	_UARTstring	;wreg free
 12592                           
 12593                           ;Bluetooth.c: 911: UARTstringCRLN((unsigned char *)"RF commands:");
 12594  001FA8  0EB2               	movlw	low STR_131
 12595  001FAA  0100               	movlb	0	; () banked
 12596  001FAC  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12597  001FAE  0EFE               	movlw	high STR_131
 12598  001FB0  0100               	movlb	0	; () banked
 12599  001FB2  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12600  001FB4  EC69  F045         	call	_UARTstringCRLN	;wreg free
 12601                           
 12602                           ;Bluetooth.c: 912: UARTcommandMenu(Conf1_ChannelD_STR, (unsigned char *)"RFK100LC Channe
      +                          l D");
 12603  001FB8  0E5C               	movlw	low _Conf1_ChannelD_STR
 12604  001FBA  0100               	movlb	0	; () banked
 12605  001FBC  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12606  001FBE  0EF3               	movlw	high _Conf1_ChannelD_STR
 12607  001FC0  0100               	movlb	0	; () banked
 12608  001FC2  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12609  001FC4  0E8F               	movlw	low STR_132
 12610  001FC6  0100               	movlb	0	; () banked
 12611  001FC8  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12612  001FCA  0EFD               	movlw	high STR_132
 12613  001FCC  0100               	movlb	0	; () banked
 12614  001FCE  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12615  001FD0  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12616                           
 12617                           ;Bluetooth.c: 913: UARTcommandMenu(Conf1_ChannelE_STR, (unsigned char *)"RFK100LC Channe
      +                          l E");
 12618  001FD4  0E6B               	movlw	low _Conf1_ChannelE_STR
 12619  001FD6  0100               	movlb	0	; () banked
 12620  001FD8  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12621  001FDA  0EF3               	movlw	high _Conf1_ChannelE_STR
 12622  001FDC  0100               	movlb	0	; () banked
 12623  001FDE  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12624  001FE0  0EA2               	movlw	low STR_133
 12625  001FE2  0100               	movlb	0	; () banked
 12626  001FE4  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12627  001FE6  0EFD               	movlw	high STR_133
 12628  001FE8  0100               	movlb	0	; () banked
 12629  001FEA  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12630  001FEC  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12631                           
 12632                           ;Bluetooth.c: 914: UARTcommandMenu(Conf1_ChannelF_STR, (unsigned char *)"RFK100LC Channe
      +                          l F");
 12633  001FF0  0E7A               	movlw	low _Conf1_ChannelF_STR
 12634  001FF2  0100               	movlb	0	; () banked
 12635  001FF4  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12636  001FF6  0EF3               	movlw	high _Conf1_ChannelF_STR
 12637  001FF8  0100               	movlb	0	; () banked
 12638  001FFA  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12639  001FFC  0EB5               	movlw	low STR_134
 12640  001FFE  0100               	movlb	0	; () banked
 12641  002000  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12642  002002  0EFD               	movlw	high STR_134
 12643  002004  0100               	movlb	0	; () banked
 12644  002006  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12645  002008  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12646                           
 12647                           ;Bluetooth.c: 915: UARTcommandMenu(Conf2_ChannelB_ON_STR, (unsigned char *)"RFK306LC Cha
      +                          nnel B ON");
 12648  00200C  0E98               	movlw	low _Conf2_ChannelB_ON_STR
 12649  00200E  0100               	movlb	0	; () banked
 12650  002010  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12651  002012  0EF2               	movlw	high _Conf2_ChannelB_ON_STR
 12652  002014  0100               	movlb	0	; () banked
 12653  002016  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12654  002018  0E81               	movlw	low STR_135
 12655  00201A  0100               	movlb	0	; () banked
 12656  00201C  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12657  00201E  0EFC               	movlw	high STR_135
 12658  002020  0100               	movlb	0	; () banked
 12659  002022  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12660  002024  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12661                           
 12662                           ;Bluetooth.c: 916: UARTcommandMenu(Conf2_ChannelB_OFF_STR, (unsigned char *)"RFK306LC Ch
      +                          annel B OFF");
 12663  002028  0E72               	movlw	low _Conf2_ChannelB_OFF_STR
 12664  00202A  0100               	movlb	0	; () banked
 12665  00202C  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12666  00202E  0EF2               	movlw	high _Conf2_ChannelB_OFF_STR
 12667  002030  0100               	movlb	0	; () banked
 12668  002032  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12669  002034  0E6A               	movlw	low STR_136
 12670  002036  0100               	movlb	0	; () banked
 12671  002038  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12672  00203A  0EFC               	movlw	high STR_136
 12673  00203C  0100               	movlb	0	; () banked
 12674  00203E  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12675  002040  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12676                           
 12677                           ;Bluetooth.c: 917: UARTcommandMenu(Conf2_ChannelD_ON_STR, (unsigned char *)"TR009 Channe
      +                          l D ON");
 12678  002044  0EAA               	movlw	low _Conf2_ChannelD_ON_STR
 12679  002046  0100               	movlb	0	; () banked
 12680  002048  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12681  00204A  0EF2               	movlw	high _Conf2_ChannelD_ON_STR
 12682  00204C  0100               	movlb	0	; () banked
 12683  00204E  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12684  002050  0EC8               	movlw	low STR_137
 12685  002052  0100               	movlb	0	; () banked
 12686  002054  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12687  002056  0EFD               	movlw	high STR_137
 12688  002058  0100               	movlb	0	; () banked
 12689  00205A  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12690  00205C  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12691                           
 12692                           ;Bluetooth.c: 918: UARTcommandMenu(Conf2_ChannelD_OFF_STR, (unsigned char *)"TR009 Chann
      +                          el D OFF");
 12693  002060  0E85               	movlw	low _Conf2_ChannelD_OFF_STR
 12694  002062  0100               	movlb	0	; () banked
 12695  002064  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12696  002066  0EF2               	movlw	high _Conf2_ChannelD_OFF_STR
 12697  002068  0100               	movlb	0	; () banked
 12698  00206A  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12699  00206C  0E3F               	movlw	low STR_138
 12700  00206E  0100               	movlb	0	; () banked
 12701  002070  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12702  002072  0EFD               	movlw	high STR_138
 12703  002074  0100               	movlb	0	; () banked
 12704  002076  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12705  002078  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12706                           
 12707                           ;Bluetooth.c: 919: UARTcommandMenu(Conf2_ChannelH_1_ON_STR, (unsigned char *)"RC-015*3 C
      +                          hannel H device 1 ON");
 12708  00207C  0E36               	movlw	low _Conf2_ChannelH_1_ON_STR
 12709  00207E  0100               	movlb	0	; () banked
 12710  002080  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12711  002082  0EF2               	movlw	high _Conf2_ChannelH_1_ON_STR
 12712  002084  0100               	movlb	0	; () banked
 12713  002086  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12714  002088  0E53               	movlw	low STR_139
 12715  00208A  0100               	movlb	0	; () banked
 12716  00208C  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12717  00208E  0EFA               	movlw	high STR_139
 12718  002090  0100               	movlb	0	; () banked
 12719  002092  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12720  002094  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12721                           
 12722                           ;Bluetooth.c: 920: UARTcommandMenu(Conf2_ChannelH_1_OFF_STR, (unsigned char *)"RC-015*3 
      +                          Channel H device 1 OFF");
 12723  002098  0EF7               	movlw	low _Conf2_ChannelH_1_OFF_STR
 12724  00209A  0100               	movlb	0	; () banked
 12725  00209C  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12726  00209E  0EF1               	movlw	high _Conf2_ChannelH_1_OFF_STR
 12727  0020A0  0100               	movlb	0	; () banked
 12728  0020A2  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12729  0020A4  0E55               	movlw	low STR_140
 12730  0020A6  0100               	movlb	0	; () banked
 12731  0020A8  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12732  0020AA  0EF9               	movlw	high STR_140
 12733  0020AC  0100               	movlb	0	; () banked
 12734  0020AE  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12735  0020B0  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12736                           
 12737                           ;Bluetooth.c: 921: UARTcommandMenu(Conf2_ChannelH_2_ON_STR, (unsigned char *)"RC-015*3 C
      +                          hannel H device 2 ON");
 12738  0020B4  0E4A               	movlw	low _Conf2_ChannelH_2_ON_STR
 12739  0020B6  0100               	movlb	0	; () banked
 12740  0020B8  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12741  0020BA  0EF2               	movlw	high _Conf2_ChannelH_2_ON_STR
 12742  0020BC  0100               	movlb	0	; () banked
 12743  0020BE  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12744  0020C0  0E72               	movlw	low STR_141
 12745  0020C2  0100               	movlb	0	; () banked
 12746  0020C4  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12747  0020C6  0EFA               	movlw	high STR_141
 12748  0020C8  0100               	movlb	0	; () banked
 12749  0020CA  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12750  0020CC  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12751                           
 12752                           ;Bluetooth.c: 922: UARTcommandMenu(Conf2_ChannelH_2_OFF_STR, (unsigned char *)"RC-015*3 
      +                          Channel H device 2 OFF");
 12753  0020D0  0E0C               	movlw	low _Conf2_ChannelH_2_OFF_STR
 12754  0020D2  0100               	movlb	0	; () banked
 12755  0020D4  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12756  0020D6  0EF2               	movlw	high _Conf2_ChannelH_2_OFF_STR
 12757  0020D8  0100               	movlb	0	; () banked
 12758  0020DA  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12759  0020DC  0E75               	movlw	low STR_142
 12760  0020DE  0100               	movlb	0	; () banked
 12761  0020E0  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12762  0020E2  0EF9               	movlw	high STR_142
 12763  0020E4  0100               	movlb	0	; () banked
 12764  0020E6  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12765  0020E8  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12766                           
 12767                           ;Bluetooth.c: 923: UARTcommandMenu(Conf2_ChannelH_3_ON_STR, (unsigned char *)"RC-015*3 C
      +                          hannel H device 3 ON");
 12768  0020EC  0E5E               	movlw	low _Conf2_ChannelH_3_ON_STR
 12769  0020EE  0100               	movlb	0	; () banked
 12770  0020F0  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12771  0020F2  0EF2               	movlw	high _Conf2_ChannelH_3_ON_STR
 12772  0020F4  0100               	movlb	0	; () banked
 12773  0020F6  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12774  0020F8  0E91               	movlw	low STR_143
 12775  0020FA  0100               	movlb	0	; () banked
 12776  0020FC  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12777  0020FE  0EFA               	movlw	high STR_143
 12778  002100  0100               	movlb	0	; () banked
 12779  002102  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12780  002104  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12781                           
 12782                           ;Bluetooth.c: 924: UARTcommandMenu(Conf2_ChannelH_3_OFF_STR, (unsigned char *)"RC-015*3 
      +                          Channel H device 3 OFF");
 12783  002108  0E21               	movlw	low _Conf2_ChannelH_3_OFF_STR
 12784  00210A  0100               	movlb	0	; () banked
 12785  00210C  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12786  00210E  0EF2               	movlw	high _Conf2_ChannelH_3_OFF_STR
 12787  002110  0100               	movlb	0	; () banked
 12788  002112  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12789  002114  0E95               	movlw	low STR_144
 12790  002116  0100               	movlb	0	; () banked
 12791  002118  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12792  00211A  0EF9               	movlw	high STR_144
 12793  00211C  0100               	movlb	0	; () banked
 12794  00211E  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12795  002120  EC7D  F03B         	call	_UARTcommandMenu	;wreg free
 12796                           
 12797                           ;Bluetooth.c: 925: UARTstring(CRLN);
 12798  002124  0ED1               	movlw	low _CRLN
 12799  002126  0100               	movlb	0	; () banked
 12800  002128  6F7A               	movwf	UARTstring@data& (0+255),b
 12801  00212A  0EF3               	movlw	high _CRLN
 12802  00212C  0100               	movlb	0	; () banked
 12803  00212E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12804  002130  ECC4  F046         	call	_UARTstring	;wreg free
 12805                           
 12806                           ;Bluetooth.c: 926: }
 12807  002134  0012               	return	
 12808  002136                     l16104:
 12809                           
 12810                           ;Bluetooth.c: 927: else
 12811                           ;Bluetooth.c: 928: {
 12812                           ;Bluetooth.c: 929: UARTstringCRLN(SYNTAX_ERR);
 12813  002136  0E89               	movlw	low _SYNTAX_ERR
 12814  002138  0100               	movlb	0	; () banked
 12815  00213A  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12816  00213C  0EF3               	movlw	high _SYNTAX_ERR
 12817  00213E  0100               	movlb	0	; () banked
 12818  002140  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12819  002142  EC69  F045         	call	_UARTstringCRLN	;wreg free
 12820                           
 12821                           ;Bluetooth.c: 930: UARTstringCRLN((unsigned char *)"Enter ??? for Command Menu");
 12822  002146  0ED5               	movlw	low STR_145
 12823  002148  0100               	movlb	0	; () banked
 12824  00214A  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12825  00214C  0EFB               	movlw	high STR_145
 12826  00214E  0100               	movlb	0	; () banked
 12827  002150  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12828  002152  EC69  F045         	call	_UARTstringCRLN	;wreg free
 12829                           
 12830                           ;Bluetooth.c: 931: UARTstring(CRLN);
 12831  002156  0ED1               	movlw	low _CRLN
 12832  002158  0100               	movlb	0	; () banked
 12833  00215A  6F7A               	movwf	UARTstring@data& (0+255),b
 12834  00215C  0EF3               	movlw	high _CRLN
 12835  00215E  0100               	movlb	0	; () banked
 12836  002160  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12837  002162  ECC4  F046         	call	_UARTstring	;wreg free
 12838                           
 12839                           ;Bluetooth.c: 932: return 0;
 12840                           ;	Return value of _UseBluetooth is never used
 12841  002166  0012               	return	
 12842                           
 12843                           ;Bluetooth.c: 933: }
 12844                           ;Bluetooth.c: 935: return 0;
 12845                           ;	Return value of _UseBluetooth is never used
 12846  002168  0012               	return		;funcret
 12847  00216A                     __end_of_UseBluetooth:
 12848                           	opt stack 0
 12849                           tblptru	equ	0xFF8
 12850                           tblptrh	equ	0xFF7
 12851                           tblptrl	equ	0xFF6
 12852                           tablat	equ	0xFF5
 12853                           prodh	equ	0xFF4
 12854                           prodl	equ	0xFF3
 12855                           intcon	equ	0xFF2
 12856                           postinc0	equ	0xFEE
 12857                           wreg	equ	0xFE8
 12858                           postdec1	equ	0xFE5
 12859                           fsr1h	equ	0xFE2
 12860                           fsr1l	equ	0xFE1
 12861                           indf2	equ	0xFDF
 12862                           postinc2	equ	0xFDE
 12863                           fsr2h	equ	0xFDA
 12864                           fsr2l	equ	0xFD9
 12865                           status	equ	0xFD8
 12866                           
 12867 ;; *************** function _lowercaseString *****************
 12868 ;; Defined at:
 12869 ;;		line 332 in file "MISC.c"
 12870 ;; Parameters:    Size  Location     Type
 12871 ;;  Input           2   25[BANK0 ] PTR unsigned char 
 12872 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 12873 ;; Auto vars:     Size  Location     Type
 12874 ;;		None
 12875 ;; Return value:  Size  Location     Type
 12876 ;;		None               void
 12877 ;; Registers used:
 12878 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12879 ;; Tracked objects:
 12880 ;;		On entry : 0/0
 12881 ;;		On exit  : 0/0
 12882 ;;		Unchanged: 0/0
 12883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12884 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12886 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12887 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12888 ;;Total ram usage:        3 bytes
 12889 ;; Hardware stack levels used:    1
 12890 ;; Hardware stack levels required when called:    6
 12891 ;; This function calls:
 12892 ;;		Nothing
 12893 ;; This function is called by:
 12894 ;;		_UseBluetooth
 12895 ;; This function uses a non-reentrant model
 12896 ;;
 12897                           
 12898                           	psect	text6
 12899  00905E                     __ptext6:
 12900                           	opt stack 0
 12901  00905E                     _lowercaseString:
 12902                           	opt stack 23
 12903                           
 12904                           ;MISC.c: 334: while((*Input != 0))
 12905                           
 12906                           ;incstack = 0
 12907  00905E  D019               	goto	l14700
 12908  009060                     l14692:
 12909                           
 12910                           ;MISC.c: 335: {
 12911                           ;MISC.c: 336: if((*Input >= 65) && (*Input <= 90 ))
 12912  009060  C079  FFD9         	movff	lowercaseString@Input,fsr2l
 12913  009064  C07A  FFDA         	movff	lowercaseString@Input+1,fsr2h
 12914  009068  0E40               	movlw	64
 12915  00906A  64DF               	cpfsgt	indf2,c
 12916  00906C  D00E               	goto	l14698
 12917  00906E  C079  FFD9         	movff	lowercaseString@Input,fsr2l
 12918  009072  C07A  FFDA         	movff	lowercaseString@Input+1,fsr2h
 12919  009076  0E5B               	movlw	91
 12920  009078  60DF               	cpfslt	indf2,c
 12921  00907A  D007               	goto	l14698
 12922                           
 12923                           ;MISC.c: 337: {
 12924                           ;MISC.c: 338: *Input += 32;
 12925  00907C  C079  FFD9         	movff	lowercaseString@Input,fsr2l
 12926  009080  C07A  FFDA         	movff	lowercaseString@Input+1,fsr2h
 12927  009084  0E20               	movlw	32
 12928  009086  26DF               	addwf	indf2,f,c
 12929  009088  D000               	goto	l14698
 12930  00908A                     l14698:
 12931                           
 12932                           ;MISC.c: 339: }
 12933                           ;MISC.c: 340: Input++;
 12934  00908A  0100               	movlb	0	; () banked
 12935  00908C  4B79               	infsnz	lowercaseString@Input& (0+255),f,b
 12936  00908E  2B7A               	incf	(lowercaseString@Input+1)& (0+255),f,b
 12937  009090  D000               	goto	l14700
 12938  009092                     l14700:
 12939  009092  C079  FFD9         	movff	lowercaseString@Input,fsr2l
 12940  009096  C07A  FFDA         	movff	lowercaseString@Input+1,fsr2h
 12941  00909A  50DF               	movf	indf2,w,c
 12942  00909C  A4D8               	btfss	status,2,c
 12943  00909E  D7E0               	goto	l14692
 12944  0090A0  0012               	return		;funcret
 12945  0090A2                     __end_of_lowercaseString:
 12946                           	opt stack 0
 12947                           tblptru	equ	0xFF8
 12948                           tblptrh	equ	0xFF7
 12949                           tblptrl	equ	0xFF6
 12950                           tablat	equ	0xFF5
 12951                           prodh	equ	0xFF4
 12952                           prodl	equ	0xFF3
 12953                           intcon	equ	0xFF2
 12954                           postinc0	equ	0xFEE
 12955                           wreg	equ	0xFE8
 12956                           postdec1	equ	0xFE5
 12957                           fsr1h	equ	0xFE2
 12958                           fsr1l	equ	0xFE1
 12959                           indf2	equ	0xFDF
 12960                           postinc2	equ	0xFDE
 12961                           fsr2h	equ	0xFDA
 12962                           fsr2l	equ	0xFD9
 12963                           status	equ	0xFD8
 12964                           
 12965 ;; *************** function _WaitForIRsignal *****************
 12966 ;; Defined at:
 12967 ;;		line 943 in file "Bluetooth.c"
 12968 ;; Parameters:    Size  Location     Type
 12969 ;;		None
 12970 ;; Auto vars:     Size  Location     Type
 12971 ;;  timeout         1   34[BANK0 ] unsigned char 
 12972 ;; Return value:  Size  Location     Type
 12973 ;;                  1    wreg      unsigned char 
 12974 ;; Registers used:
 12975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12976 ;; Tracked objects:
 12977 ;;		On entry : 0/0
 12978 ;;		On exit  : 0/0
 12979 ;;		Unchanged: 0/0
 12980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12982 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12984 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12985 ;;Total ram usage:        1 bytes
 12986 ;; Hardware stack levels used:    1
 12987 ;; Hardware stack levels required when called:    9
 12988 ;; This function calls:
 12989 ;;		_LEDTimerON
 12990 ;;		_UARTchar
 12991 ;;		_UARTstring
 12992 ;;		_UARTstringCRLN
 12993 ;;		_delayUS
 12994 ;; This function is called by:
 12995 ;;		_UseBluetooth
 12996 ;; This function uses a non-reentrant model
 12997 ;;
 12998                           
 12999                           	psect	text7
 13000  0086BE                     __ptext7:
 13001                           	opt stack 0
 13002  0086BE                     _WaitForIRsignal:
 13003                           	opt stack 20
 13004                           
 13005                           ;Bluetooth.c: 945: unsigned char timeout = 0;
 13006                           
 13007                           ;incstack = 0
 13008  0086BE  0E00               	movlw	0
 13009  0086C0  0100               	movlb	0	; () banked
 13010  0086C2  6F82               	movwf	WaitForIRsignal@timeout& (0+255),b
 13011                           
 13012                           ; BSR set to: 0
 13013                           ;Bluetooth.c: 947: UARTstring(CRLN);
 13014  0086C4  0ED1               	movlw	low _CRLN
 13015  0086C6  0100               	movlb	0	; () banked
 13016  0086C8  6F7A               	movwf	UARTstring@data& (0+255),b
 13017  0086CA  0EF3               	movlw	high _CRLN
 13018  0086CC  0100               	movlb	0	; () banked
 13019  0086CE  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 13020  0086D0  ECC4  F046         	call	_UARTstring	;wreg free
 13021                           
 13022                           ;Bluetooth.c: 948: UARTstring((unsigned char *)"Press Remote Control button");
 13023  0086D4  0EB9               	movlw	low STR_146
 13024  0086D6  0100               	movlb	0	; () banked
 13025  0086D8  6F7A               	movwf	UARTstring@data& (0+255),b
 13026  0086DA  0EFB               	movlw	high STR_146
 13027  0086DC  0100               	movlb	0	; () banked
 13028  0086DE  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 13029  0086E0  ECC4  F046         	call	_UARTstring	;wreg free
 13030                           
 13031                           ;Bluetooth.c: 949: timeout = 0;
 13032  0086E4  0E00               	movlw	0
 13033  0086E6  0100               	movlb	0	; () banked
 13034  0086E8  6F82               	movwf	WaitForIRsignal@timeout& (0+255),b
 13035                           
 13036                           ;Bluetooth.c: 950: while(IR_New_Code != 1)
 13037  0086EA  D027               	goto	l15224
 13038  0086EC                     l15210:
 13039                           
 13040                           ; BSR set to: 0
 13041                           ;Bluetooth.c: 951: {
 13042                           ;Bluetooth.c: 952: UARTchar('.');
 13043  0086EC  0E2E               	movlw	46
 13044  0086EE  ECB0  F049         	call	_UARTchar
 13045                           
 13046                           ;Bluetooth.c: 953: delayUS(300000);
 13047  0086F2  0EE0               	movlw	224
 13048  0086F4  0100               	movlb	0	; () banked
 13049  0086F6  6F79               	movwf	delayUS@US& (0+255),b
 13050  0086F8  0E93               	movlw	147
 13051  0086FA  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 13052  0086FC  0E04               	movlw	4
 13053  0086FE  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 13054  008700  0E00               	movlw	0
 13055  008702  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 13056  008704  EC48  F047         	call	_delayUS	;wreg free
 13057                           
 13058                           ;Bluetooth.c: 954: timeout++;
 13059  008708  0100               	movlb	0	; () banked
 13060  00870A  2B82               	incf	WaitForIRsignal@timeout& (0+255),f,b
 13061                           
 13062                           ; BSR set to: 0
 13063                           ;Bluetooth.c: 955: if(timeout > 25)
 13064  00870C  0E19               	movlw	25
 13065  00870E  0100               	movlb	0	; () banked
 13066  008710  6582               	cpfsgt	WaitForIRsignal@timeout& (0+255),b
 13067  008712  D013               	goto	l15224
 13068                           
 13069                           ; BSR set to: 0
 13070                           ;Bluetooth.c: 956: {
 13071                           ;Bluetooth.c: 957: UARTstring(CRLN);
 13072  008714  0ED1               	movlw	low _CRLN
 13073  008716  0100               	movlb	0	; () banked
 13074  008718  6F7A               	movwf	UARTstring@data& (0+255),b
 13075  00871A  0EF3               	movlw	high _CRLN
 13076  00871C  0100               	movlb	0	; () banked
 13077  00871E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 13078  008720  ECC4  F046         	call	_UARTstring	;wreg free
 13079                           
 13080                           ;Bluetooth.c: 958: UARTstringCRLN((unsigned char *)"Error: No remote button was pressed"
      +                          );
 13081  008724  0EED               	movlw	low STR_147
 13082  008726  0100               	movlb	0	; () banked
 13083  008728  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 13084  00872A  0EF8               	movlw	high STR_147
 13085  00872C  0100               	movlb	0	; () banked
 13086  00872E  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 13087  008730  EC69  F045         	call	_UARTstringCRLN	;wreg free
 13088                           
 13089                           ;Bluetooth.c: 959: return 0;
 13090  008734  0E00               	movlw	0
 13091  008736  0012               	return	
 13092  008738  D000               	goto	l15224
 13093  00873A                     l15224:
 13094  00873A  0100               	movlb	0	; () banked
 13095  00873C  05E5               	decf	_IR_New_Code& (0+255),w,b
 13096  00873E  A4D8               	btfss	status,2,c
 13097  008740  D7D5               	goto	l15210
 13098                           
 13099                           ; BSR set to: 0
 13100                           ;Bluetooth.c: 960: }
 13101                           ;Bluetooth.c: 961: }
 13102                           ;Bluetooth.c: 962: (LATC |= 0x04);
 13103                           
 13104                           ; BSR set to: 0
 13105  008742  848B               	bsf	3979,2,c	;volatile
 13106                           
 13107                           ; BSR set to: 0
 13108                           ;Bluetooth.c: 963: LEDTimerON();
 13109  008744  EC26  F04A         	call	_LEDTimerON	;wreg free
 13110                           
 13111                           ;Bluetooth.c: 964: return 1;
 13112  008748  0E01               	movlw	1
 13113  00874A  0012               	return	
 13114  00874C  0012               	return		;funcret
 13115  00874E                     __end_of_WaitForIRsignal:
 13116                           	opt stack 0
 13117                           tblptru	equ	0xFF8
 13118                           tblptrh	equ	0xFF7
 13119                           tblptrl	equ	0xFF6
 13120                           tablat	equ	0xFF5
 13121                           prodh	equ	0xFF4
 13122                           prodl	equ	0xFF3
 13123                           intcon	equ	0xFF2
 13124                           postinc0	equ	0xFEE
 13125                           wreg	equ	0xFE8
 13126                           postdec1	equ	0xFE5
 13127                           fsr1h	equ	0xFE2
 13128                           fsr1l	equ	0xFE1
 13129                           indf2	equ	0xFDF
 13130                           postinc2	equ	0xFDE
 13131                           fsr2h	equ	0xFDA
 13132                           fsr2l	equ	0xFD9
 13133                           status	equ	0xFD8
 13134                           
 13135 ;; *************** function _UARTstringCRLN *****************
 13136 ;; Defined at:
 13137 ;;		line 262 in file "UART.c"
 13138 ;; Parameters:    Size  Location     Type
 13139 ;;  data            2   28[BANK0 ] PTR unsigned char 
 13140 ;;		 -> STR_147(36), STR_145(27), STR_131(13), STR_100(13), 
 13141 ;;		 -> STR_97(21), STR_90(17), STR_81(29), STR_80(18), 
 13142 ;;		 -> STR_79(29), STR_76(44), STR_71(46), STR_70(42), 
 13143 ;;		 -> STR_69(50), STR_68(50), STR_66(31), STR_65(31), 
 13144 ;;		 -> STR_64(37), STR_63(37), STR_62(37), STR_58(18), 
 13145 ;;		 -> STR_57(14), STR_56(9), STR_55(20), STR_54(16), 
 13146 ;;		 -> STR_53(7), STR_52(35), STR_51(37), STR_48(47), 
 13147 ;;		 -> STR_43(17), STR_42(9), STR_41(18), STR_40(9), 
 13148 ;;		 -> STR_39(22), STR_38(11), STR_37(20), STR_36(7), 
 13149 ;;		 -> STR_35(31), STR_34(33), STR_30(32), STR_26(31), 
 13150 ;;		 -> STR_25(31), STR_23(29), STR_21(29), SYNTAX_ERR(14), 
 13151 ;;		 -> UseBluetooth@buf(100), STR_1(16), 
 13152 ;; Auto vars:     Size  Location     Type
 13153 ;;		None
 13154 ;; Return value:  Size  Location     Type
 13155 ;;		None               void
 13156 ;; Registers used:
 13157 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13158 ;; Tracked objects:
 13159 ;;		On entry : 0/0
 13160 ;;		On exit  : 0/0
 13161 ;;		Unchanged: 0/0
 13162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13163 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13166 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13167 ;;Total ram usage:        2 bytes
 13168 ;; Hardware stack levels used:    1
 13169 ;; Hardware stack levels required when called:    8
 13170 ;; This function calls:
 13171 ;;		_UARTchar
 13172 ;;		_UARTstring
 13173 ;; This function is called by:
 13174 ;;		_UseBluetooth
 13175 ;;		_WaitForIRsignal
 13176 ;; This function uses a non-reentrant model
 13177 ;;
 13178                           
 13179                           	psect	text8
 13180  008AD2                     __ptext8:
 13181                           	opt stack 0
 13182  008AD2                     _UARTstringCRLN:
 13183                           	opt stack 20
 13184                           
 13185                           ;UART.c: 264: while(*data != 0)
 13186                           
 13187                           ;incstack = 0
 13188  008AD2  D017               	goto	l13984
 13189  008AD4                     l13980:
 13190                           
 13191                           ;UART.c: 265: {
 13192                           ;UART.c: 266: UARTchar(*data);
 13193  008AD4  C07C  FFF6         	movff	UARTstringCRLN@data,tblptrl
 13194  008AD8  C07D  FFF7         	movff	UARTstringCRLN@data+1,tblptrh
 13195  008ADC  0E00               	movlw	low (__mediumconst shr (0+16))
 13196  008ADE  6EF8               	movwf	tblptru,c
 13197  008AE0  0E0F               	movlw	(high __ramtop+-1)
 13198  008AE2  64F7               	cpfsgt	tblptrh,c
 13199  008AE4  D003               	bra	u17087
 13200  008AE6  0008               	tblrd		*
 13201  008AE8  50F5               	movf	tablat,w,c
 13202  008AEA  D005               	bra	u17080
 13203  008AEC                     u17087:
 13204  008AEC  CFF6 FFE9          	movff	tblptrl,fsr0l
 13205  008AF0  CFF7 FFEA          	movff	tblptrh,fsr0h
 13206  008AF4  50EF               	movf	indf0,w,c
 13207  008AF6                     u17080:
 13208  008AF6  ECB0  F049         	call	_UARTchar
 13209                           
 13210                           ;UART.c: 267: *data++;
 13211  008AFA  0100               	movlb	0	; () banked
 13212  008AFC  4B7C               	infsnz	UARTstringCRLN@data& (0+255),f,b
 13213  008AFE  2B7D               	incf	(UARTstringCRLN@data+1)& (0+255),f,b
 13214  008B00  D000               	goto	l13984
 13215  008B02                     l13984:
 13216  008B02  C07C  FFF6         	movff	UARTstringCRLN@data,tblptrl
 13217  008B06  C07D  FFF7         	movff	UARTstringCRLN@data+1,tblptrh
 13218  008B0A  0E00               	movlw	low (__mediumconst shr (0+16))
 13219  008B0C  6EF8               	movwf	tblptru,c
 13220  008B0E  0E0F               	movlw	(high __ramtop+-1)
 13221  008B10  64F7               	cpfsgt	tblptrh,c
 13222  008B12  D003               	bra	u17097
 13223  008B14  0008               	tblrd		*
 13224  008B16  50F5               	movf	tablat,w,c
 13225  008B18  D005               	bra	u17090
 13226  008B1A                     u17097:
 13227  008B1A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13228  008B1E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13229  008B22  50EF               	movf	indf0,w,c
 13230  008B24                     u17090:
 13231  008B24  0900               	iorlw	0
 13232  008B26  A4D8               	btfss	status,2,c
 13233  008B28  D7D5               	goto	l13980
 13234                           
 13235                           ;UART.c: 268: }
 13236                           ;UART.c: 269: UARTstring(CRLN);
 13237  008B2A  0ED1               	movlw	low _CRLN
 13238  008B2C  0100               	movlb	0	; () banked
 13239  008B2E  6F7A               	movwf	UARTstring@data& (0+255),b
 13240  008B30  0EF3               	movlw	high _CRLN
 13241  008B32  0100               	movlb	0	; () banked
 13242  008B34  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 13243  008B36  ECC4  F046         	call	_UARTstring	;wreg free
 13244  008B3A  0012               	return		;funcret
 13245  008B3C                     __end_of_UARTstringCRLN:
 13246                           	opt stack 0
 13247                           tblptru	equ	0xFF8
 13248                           tblptrh	equ	0xFF7
 13249                           tblptrl	equ	0xFF6
 13250                           tablat	equ	0xFF5
 13251                           prodh	equ	0xFF4
 13252                           prodl	equ	0xFF3
 13253                           intcon	equ	0xFF2
 13254                           indf0	equ	0xFEF
 13255                           postinc0	equ	0xFEE
 13256                           fsr0h	equ	0xFEA
 13257                           fsr0l	equ	0xFE9
 13258                           wreg	equ	0xFE8
 13259                           postdec1	equ	0xFE5
 13260                           fsr1h	equ	0xFE2
 13261                           fsr1l	equ	0xFE1
 13262                           indf2	equ	0xFDF
 13263                           postinc2	equ	0xFDE
 13264                           fsr2h	equ	0xFDA
 13265                           fsr2l	equ	0xFD9
 13266                           status	equ	0xFD8
 13267                           
 13268 ;; *************** function _UARTcommandMenu *****************
 13269 ;; Defined at:
 13270 ;;		line 277 in file "UART.c"
 13271 ;; Parameters:    Size  Location     Type
 13272 ;;  Command         2   28[BANK0 ] PTR unsigned char 
 13273 ;;		 -> STR_129(5), STR_127(13), STR_125(13), STR_123(13), 
 13274 ;;		 -> STR_121(13), STR_119(13), STR_117(13), STR_115(11), 
 13275 ;;		 -> STR_113(11), STR_111(11), STR_109(11), STR_107(11), 
 13276 ;;		 -> STR_105(11), STR_98(8), STR_95(8), STR_93(6), 
 13277 ;;		 -> STR_91(4), Conf2_ChannelH_3_OFF_STR(21), Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), 
 13278 ;;		 -> Conf2_ChannelH_2_ON_STR(20), Conf2_ChannelH_1_OFF_STR(21), Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(1
      +9), 
 13279 ;;		 -> Conf2_ChannelD_ON_STR(18), Conf2_ChannelB_OFF_STR(19), Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), 
 13280 ;;		 -> Conf1_ChannelE_STR(15), Conf1_ChannelD_STR(15), UseBluetooth@buf(100), 
 13281 ;;  Desc            2   30[BANK0 ] PTR unsigned char 
 13282 ;;		 -> STR_144(32), STR_143(31), STR_142(32), STR_141(31), 
 13283 ;;		 -> STR_140(32), STR_139(31), STR_138(20), STR_137(19), 
 13284 ;;		 -> STR_136(23), STR_135(22), STR_134(19), STR_133(19), 
 13285 ;;		 -> STR_132(19), STR_130(40), STR_128(46), STR_126(46), 
 13286 ;;		 -> STR_124(46), STR_122(46), STR_120(46), STR_118(46), 
 13287 ;;		 -> STR_116(49), STR_114(49), STR_112(49), STR_110(49), 
 13288 ;;		 -> STR_108(49), STR_106(49), STR_104(24), STR_102(25), 
 13289 ;;		 -> STR_99(28), STR_96(26), STR_94(32), STR_92(10), 
 13290 ;; Auto vars:     Size  Location     Type
 13291 ;;  place           1   38[BANK0 ] unsigned char 
 13292 ;;  i               1   37[BANK0 ] unsigned char 
 13293 ;; Return value:  Size  Location     Type
 13294 ;;		None               void
 13295 ;; Registers used:
 13296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13297 ;; Tracked objects:
 13298 ;;		On entry : 0/0
 13299 ;;		On exit  : 0/0
 13300 ;;		Unchanged: 0/0
 13301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13302 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13303 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13304 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13305 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13306 ;;Total ram usage:       11 bytes
 13307 ;; Hardware stack levels used:    1
 13308 ;; Hardware stack levels required when called:    8
 13309 ;; This function calls:
 13310 ;;		_UARTchar
 13311 ;;		_UARTstring
 13312 ;; This function is called by:
 13313 ;;		_UseBluetooth
 13314 ;; This function uses a non-reentrant model
 13315 ;;
 13316                           
 13317                           	psect	text9
 13318  0076FA                     __ptext9:
 13319                           	opt stack 0
 13320  0076FA                     _UARTcommandMenu:
 13321                           	opt stack 21
 13322                           
 13323                           ;UART.c: 279: unsigned char place = 0;
 13324                           
 13325                           ;incstack = 0
 13326  0076FA  0E00               	movlw	0
 13327  0076FC  0100               	movlb	0	; () banked
 13328  0076FE  6F86               	movwf	UARTcommandMenu@place& (0+255),b
 13329                           
 13330                           ;UART.c: 280: unsigned char i;
 13331                           ;UART.c: 282: while((*Command != 0) && (place < 30))
 13332  007700  D019               	goto	l15012
 13333  007702                     l15006:
 13334                           
 13335                           ; BSR set to: 0
 13336                           ;UART.c: 283: {
 13337                           ;UART.c: 284: UARTchar(*Command);
 13338  007702  C07C  FFF6         	movff	UARTcommandMenu@Command,tblptrl
 13339  007706  C07D  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
 13340  00770A  0E00               	movlw	low (__mediumconst shr (0+16))
 13341  00770C  6EF8               	movwf	tblptru,c
 13342  00770E  0E0F               	movlw	(high __ramtop+-1)
 13343  007710  64F7               	cpfsgt	tblptrh,c
 13344  007712  D003               	bra	u18627
 13345  007714  0008               	tblrd		*
 13346  007716  50F5               	movf	tablat,w,c
 13347  007718  D005               	bra	u18620
 13348  00771A                     u18627:
 13349  00771A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13350  00771E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13351  007722  50EF               	movf	indf0,w,c
 13352  007724                     u18620:
 13353  007724  ECB0  F049         	call	_UARTchar
 13354                           
 13355                           ;UART.c: 285: *Command++;
 13356  007728  0100               	movlb	0	; () banked
 13357  00772A  4B7C               	infsnz	UARTcommandMenu@Command& (0+255),f,b
 13358  00772C  2B7D               	incf	(UARTcommandMenu@Command+1)& (0+255),f,b
 13359                           
 13360                           ; BSR set to: 0
 13361                           ;UART.c: 286: place++;
 13362  00772E  0100               	movlb	0	; () banked
 13363  007730  2B86               	incf	UARTcommandMenu@place& (0+255),f,b
 13364  007732  D000               	goto	l15012
 13365  007734                     l15012:
 13366                           
 13367                           ; BSR set to: 0
 13368  007734  C07C  FFF6         	movff	UARTcommandMenu@Command,tblptrl
 13369  007738  C07D  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
 13370  00773C  0E00               	movlw	low (__mediumconst shr (0+16))
 13371  00773E  6EF8               	movwf	tblptru,c
 13372  007740  0E0F               	movlw	(high __ramtop+-1)
 13373  007742  64F7               	cpfsgt	tblptrh,c
 13374  007744  D003               	bra	u18637
 13375  007746  0008               	tblrd		*
 13376  007748  50F5               	movf	tablat,w,c
 13377  00774A  D005               	bra	u18630
 13378  00774C                     u18637:
 13379  00774C  CFF6 FFE9          	movff	tblptrl,fsr0l
 13380  007750  CFF7 FFEA          	movff	tblptrh,fsr0h
 13381  007754  50EF               	movf	indf0,w,c
 13382  007756                     u18630:
 13383  007756  0900               	iorlw	0
 13384  007758  B4D8               	btfsc	status,2,c
 13385  00775A  D005               	goto	l15016
 13386  00775C  0E1D               	movlw	29
 13387  00775E  0100               	movlb	0	; () banked
 13388  007760  6586               	cpfsgt	UARTcommandMenu@place& (0+255),b
 13389  007762  D7CF               	goto	l15006
 13390                           
 13391                           ; BSR set to: 0
 13392  007764  D000               	goto	l15016
 13393  007766                     l15016:
 13394                           
 13395                           ;UART.c: 287: }
 13396                           ;UART.c: 288: for(i =0; i < ((30 - place) + 1); i++)
 13397  007766  0E00               	movlw	0
 13398  007768  0100               	movlb	0	; () banked
 13399  00776A  6F85               	movwf	UARTcommandMenu@i& (0+255),b
 13400  00776C  D006               	goto	l15022
 13401  00776E                     l15018:
 13402                           
 13403                           ; BSR set to: 0
 13404                           ;UART.c: 289: {
 13405                           ;UART.c: 290: UARTchar('-');
 13406  00776E  0E2D               	movlw	45
 13407  007770  ECB0  F049         	call	_UARTchar
 13408  007774  0100               	movlb	0	; () banked
 13409  007776  2B85               	incf	UARTcommandMenu@i& (0+255),f,b
 13410  007778  D000               	goto	l15022
 13411  00777A                     l15022:
 13412                           
 13413                           ; BSR set to: 0
 13414  00777A  0100               	movlb	0	; () banked
 13415  00777C  5186               	movf	UARTcommandMenu@place& (0+255),w,b
 13416  00777E  0100               	movlb	0	; () banked
 13417  007780  6F80               	movwf	??_UARTcommandMenu& (0+255),b
 13418  007782  6B81               	clrf	(??_UARTcommandMenu+1)& (0+255),b
 13419  007784  0100               	movlb	0	; () banked
 13420  007786  1F80               	comf	??_UARTcommandMenu& (0+255),f,b
 13421  007788  1F81               	comf	(??_UARTcommandMenu+1)& (0+255),f,b
 13422  00778A  4B80               	infsnz	??_UARTcommandMenu& (0+255),f,b
 13423  00778C  2B81               	incf	(??_UARTcommandMenu+1)& (0+255),f,b
 13424  00778E  0E1F               	movlw	31
 13425  007790  0100               	movlb	0	; () banked
 13426  007792  2780               	addwf	??_UARTcommandMenu& (0+255),f,b
 13427  007794  0E00               	movlw	0
 13428  007796  2381               	addwfc	(??_UARTcommandMenu+1)& (0+255),f,b
 13429  007798  0100               	movlb	0	; () banked
 13430  00779A  5185               	movf	UARTcommandMenu@i& (0+255),w,b
 13431  00779C  0100               	movlb	0	; () banked
 13432  00779E  6F82               	movwf	(??_UARTcommandMenu+2)& (0+255),b
 13433  0077A0  6B83               	clrf	(??_UARTcommandMenu+3)& (0+255),b
 13434  0077A2  0100               	movlb	0	; () banked
 13435  0077A4  5180               	movf	??_UARTcommandMenu& (0+255),w,b
 13436  0077A6  0100               	movlb	0	; () banked
 13437  0077A8  5D82               	subwf	(??_UARTcommandMenu+2)& (0+255),w,b
 13438  0077AA  0100               	movlb	0	; () banked
 13439  0077AC  5183               	movf	(??_UARTcommandMenu+3)& (0+255),w,b
 13440  0077AE  0A80               	xorlw	128
 13441  0077B0  0100               	movlb	0	; () banked
 13442  0077B2  6F84               	movwf	(??_UARTcommandMenu+4)& (0+255),b
 13443  0077B4  0100               	movlb	0	; () banked
 13444  0077B6  5181               	movf	(??_UARTcommandMenu+1)& (0+255),w,b
 13445  0077B8  0A80               	xorlw	128
 13446  0077BA  0100               	movlb	0	; () banked
 13447  0077BC  5984               	subwfb	(??_UARTcommandMenu+4)& (0+255),w,b
 13448  0077BE  A0D8               	btfss	status,0,c
 13449  0077C0  D7D6               	goto	l15018
 13450                           
 13451                           ; BSR set to: 0
 13452                           ;UART.c: 291: }
 13453                           ;UART.c: 292: place = 0;
 13454                           
 13455                           ; BSR set to: 0
 13456  0077C2  0E00               	movlw	0
 13457  0077C4  0100               	movlb	0	; () banked
 13458  0077C6  6F86               	movwf	UARTcommandMenu@place& (0+255),b
 13459                           
 13460                           ;UART.c: 293: while((*Desc != 0) && (place < (50 - 1)))
 13461  0077C8  D00F               	goto	l15032
 13462  0077CA                     l15026:
 13463                           
 13464                           ; BSR set to: 0
 13465                           ;UART.c: 294: {
 13466                           ;UART.c: 295: UARTchar(*Desc);
 13467  0077CA  C07E  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
 13468  0077CE  C07F  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
 13469  0077D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13470  0077D2  6AF8               	clrf	tblptru,c
 13471  0077D4                     	endif
 13472  0077D4                     	if	0	;tblptru may be non-zero
 13473  0077D4                     	endif
 13474  0077D4  0008               	tblrd		*
 13475  0077D6  50F5               	movf	tablat,w,c
 13476  0077D8  ECB0  F049         	call	_UARTchar
 13477                           
 13478                           ;UART.c: 296: *Desc++;
 13479  0077DC  0100               	movlb	0	; () banked
 13480  0077DE  4B7E               	infsnz	UARTcommandMenu@Desc& (0+255),f,b
 13481  0077E0  2B7F               	incf	(UARTcommandMenu@Desc+1)& (0+255),f,b
 13482                           
 13483                           ; BSR set to: 0
 13484                           ;UART.c: 297: place++;
 13485  0077E2  0100               	movlb	0	; () banked
 13486  0077E4  2B86               	incf	UARTcommandMenu@place& (0+255),f,b
 13487  0077E6  D000               	goto	l15032
 13488  0077E8                     l15032:
 13489                           
 13490                           ; BSR set to: 0
 13491  0077E8  C07E  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
 13492  0077EC  C07F  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
 13493  0077F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13494  0077F0  6AF8               	clrf	tblptru,c
 13495  0077F2                     	endif
 13496  0077F2                     	if	0	;tblptru may be non-zero
 13497  0077F2                     	endif
 13498  0077F2  0008               	tblrd		*
 13499  0077F4  50F5               	movf	tablat,w,c
 13500  0077F6  0900               	iorlw	0
 13501  0077F8  B4D8               	btfsc	status,2,c
 13502  0077FA  D005               	goto	l15036
 13503                           
 13504                           ; BSR set to: 0
 13505  0077FC  0E30               	movlw	48
 13506  0077FE  0100               	movlb	0	; () banked
 13507  007800  6586               	cpfsgt	UARTcommandMenu@place& (0+255),b
 13508  007802  D7E3               	goto	l15026
 13509                           
 13510                           ; BSR set to: 0
 13511  007804  D000               	goto	l15036
 13512  007806                     l15036:
 13513                           
 13514                           ; BSR set to: 0
 13515                           ;UART.c: 298: }
 13516                           ;UART.c: 299: UARTstring(CRLN);
 13517  007806  0ED1               	movlw	low _CRLN
 13518  007808  0100               	movlb	0	; () banked
 13519  00780A  6F7A               	movwf	UARTstring@data& (0+255),b
 13520  00780C  0EF3               	movlw	high _CRLN
 13521  00780E  0100               	movlb	0	; () banked
 13522  007810  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 13523  007812  ECC4  F046         	call	_UARTstring	;wreg free
 13524  007816  0012               	return		;funcret
 13525  007818                     __end_of_UARTcommandMenu:
 13526                           	opt stack 0
 13527                           tblptru	equ	0xFF8
 13528                           tblptrh	equ	0xFF7
 13529                           tblptrl	equ	0xFF6
 13530                           tablat	equ	0xFF5
 13531                           prodh	equ	0xFF4
 13532                           prodl	equ	0xFF3
 13533                           intcon	equ	0xFF2
 13534                           indf0	equ	0xFEF
 13535                           postinc0	equ	0xFEE
 13536                           fsr0h	equ	0xFEA
 13537                           fsr0l	equ	0xFE9
 13538                           wreg	equ	0xFE8
 13539                           postdec1	equ	0xFE5
 13540                           fsr1h	equ	0xFE2
 13541                           fsr1l	equ	0xFE1
 13542                           indf2	equ	0xFDF
 13543                           postinc2	equ	0xFDE
 13544                           fsr2h	equ	0xFDA
 13545                           fsr2l	equ	0xFD9
 13546                           status	equ	0xFD8
 13547                           
 13548 ;; *************** function _StringMatchCaseInsensitive *****************
 13549 ;; Defined at:
 13550 ;;		line 217 in file "MISC.c"
 13551 ;; Parameters:    Size  Location     Type
 13552 ;;  This            2   28[BANK0 ] PTR unsigned char 
 13553 ;;		 -> main@BluetoothString(255), 
 13554 ;;  That            2   30[BANK0 ] PTR const unsigned char 
 13555 ;;		 -> STR_84(8), STR_82(8), STR_77(6), Conf2_ChannelH_3_OFF_STR(21), 
 13556 ;;		 -> Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), Conf2_ChannelH_2_ON_STR(20), Conf2_ChannelH_1_OFF_STR
      +(21), 
 13557 ;;		 -> Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(19), Conf2_ChannelD_ON_STR(18), Conf2_ChannelB_OFF_STR(19), 
 13558 ;;		 -> Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), Conf1_ChannelE_STR(15), Conf1_ChannelD_STR(15), 
 13559 ;; Auto vars:     Size  Location     Type
 13560 ;;  tempThat        1   33[BANK0 ] unsigned char 
 13561 ;;  tempThis        1   32[BANK0 ] unsigned char 
 13562 ;; Return value:  Size  Location     Type
 13563 ;;                  1    wreg      unsigned char 
 13564 ;; Registers used:
 13565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13566 ;; Tracked objects:
 13567 ;;		On entry : 0/0
 13568 ;;		On exit  : 0/0
 13569 ;;		Unchanged: 0/0
 13570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13571 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13572 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13574 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13575 ;;Total ram usage:        6 bytes
 13576 ;; Hardware stack levels used:    1
 13577 ;; Hardware stack levels required when called:    7
 13578 ;; This function calls:
 13579 ;;		_lowercaseChar
 13580 ;; This function is called by:
 13581 ;;		_UseBluetooth
 13582 ;; This function uses a non-reentrant model
 13583 ;;
 13584                           
 13585                           	psect	text10
 13586  00862A                     __ptext10:
 13587                           	opt stack 0
 13588  00862A                     _StringMatchCaseInsensitive:
 13589                           	opt stack 22
 13590                           
 13591                           ;MISC.c: 219: unsigned char tempThis,
 13592                           ;MISC.c: 220: tempThat;
 13593                           ;MISC.c: 222: while(*This != 0)
 13594                           
 13595                           ;incstack = 0
 13596  00862A  D033               	goto	l14636
 13597  00862C                     l14618:
 13598                           
 13599                           ;MISC.c: 223: {
 13600                           ;MISC.c: 224: tempThis = *This;
 13601  00862C  C07C  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
 13602  008630  C07D  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
 13603  008634  50DF               	movf	indf2,w,c
 13604  008636  0100               	movlb	0	; () banked
 13605  008638  6F80               	movwf	StringMatchCaseInsensitive@tempThis& (0+255),b
 13606                           
 13607                           ; BSR set to: 0
 13608                           ;MISC.c: 225: tempThat = *That;
 13609  00863A  C07E  FFF6         	movff	StringMatchCaseInsensitive@That,tblptrl
 13610  00863E  C07F  FFF7         	movff	StringMatchCaseInsensitive@That+1,tblptrh
 13611  008642                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13612  008642  6AF8               	clrf	tblptru,c
 13613  008644                     	endif
 13614  008644                     	if	0	;tblptru may be non-zero
 13615  008644                     	endif
 13616  008644  0008               	tblrd		*
 13617  008646  CFF5 F081          	movff	tablat,StringMatchCaseInsensitive@tempThat
 13618                           
 13619                           ; BSR set to: 0
 13620                           ;MISC.c: 226: lowercaseChar(&tempThis);
 13621  00864A  0E80               	movlw	low StringMatchCaseInsensitive@tempThis
 13622  00864C  0100               	movlb	0	; () banked
 13623  00864E  6F79               	movwf	lowercaseChar@Input& (0+255),b
 13624  008650  0E00               	movlw	high StringMatchCaseInsensitive@tempThis
 13625  008652  0100               	movlb	0	; () banked
 13626  008654  6F7A               	movwf	(lowercaseChar@Input+1)& (0+255),b
 13627  008656  EC62  F049         	call	_lowercaseChar	;wreg free
 13628                           
 13629                           ;MISC.c: 227: lowercaseChar(&tempThat);
 13630  00865A  0E81               	movlw	low StringMatchCaseInsensitive@tempThat
 13631  00865C  0100               	movlb	0	; () banked
 13632  00865E  6F79               	movwf	lowercaseChar@Input& (0+255),b
 13633  008660  0E00               	movlw	high StringMatchCaseInsensitive@tempThat
 13634  008662  0100               	movlb	0	; () banked
 13635  008664  6F7A               	movwf	(lowercaseChar@Input+1)& (0+255),b
 13636  008666  EC62  F049         	call	_lowercaseChar	;wreg free
 13637                           
 13638                           ;MISC.c: 229: if((tempThis != tempThat) || (tempThat == 0))
 13639  00866A  0100               	movlb	0	; () banked
 13640  00866C  5181               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
 13641  00866E  0100               	movlb	0	; () banked
 13642  008670  1980               	xorwf	StringMatchCaseInsensitive@tempThis& (0+255),w,b
 13643  008672  A4D8               	btfss	status,2,c
 13644  008674  D005               	goto	l14630
 13645                           
 13646                           ; BSR set to: 0
 13647  008676  0100               	movlb	0	; () banked
 13648  008678  5181               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
 13649  00867A  0100               	movlb	0	; () banked
 13650  00867C  A4D8               	btfss	status,2,c
 13651  00867E  D002               	goto	l14634
 13652  008680                     l14630:
 13653                           
 13654                           ; BSR set to: 0
 13655                           ;MISC.c: 230: {
 13656                           ;MISC.c: 231: return 0;
 13657  008680  0E00               	movlw	0
 13658                           
 13659                           ; BSR set to: 0
 13660  008682  0012               	return	
 13661  008684                     l14634:
 13662                           
 13663                           ; BSR set to: 0
 13664                           ;MISC.c: 232: }
 13665                           ;MISC.c: 233: This++;
 13666  008684  0100               	movlb	0	; () banked
 13667  008686  4B7C               	infsnz	StringMatchCaseInsensitive@This& (0+255),f,b
 13668  008688  2B7D               	incf	(StringMatchCaseInsensitive@This+1)& (0+255),f,b
 13669                           
 13670                           ;MISC.c: 234: That++;
 13671  00868A  0100               	movlb	0	; () banked
 13672  00868C  4B7E               	infsnz	StringMatchCaseInsensitive@That& (0+255),f,b
 13673  00868E  2B7F               	incf	(StringMatchCaseInsensitive@That+1)& (0+255),f,b
 13674  008690  D000               	goto	l14636
 13675  008692                     l14636:
 13676  008692  C07C  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
 13677  008696  C07D  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
 13678  00869A  50DF               	movf	indf2,w,c
 13679  00869C  A4D8               	btfss	status,2,c
 13680  00869E  D7C6               	goto	l14618
 13681                           
 13682                           ;MISC.c: 235: }
 13683                           ;MISC.c: 236: if(*That == 0)
 13684  0086A0  C07E  FFF6         	movff	StringMatchCaseInsensitive@That,tblptrl
 13685  0086A4  C07F  FFF7         	movff	StringMatchCaseInsensitive@That+1,tblptrh
 13686  0086A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13687  0086A8  6AF8               	clrf	tblptru,c
 13688  0086AA                     	endif
 13689  0086AA                     	if	0	;tblptru may be non-zero
 13690  0086AA                     	endif
 13691  0086AA  0008               	tblrd		*
 13692  0086AC  50F5               	movf	tablat,w,c
 13693  0086AE  0900               	iorlw	0
 13694  0086B0  A4D8               	btfss	status,2,c
 13695  0086B2  D002               	goto	l14646
 13696                           
 13697                           ;MISC.c: 237: {
 13698                           ;MISC.c: 238: return 1;
 13699  0086B4  0E01               	movlw	1
 13700                           
 13701                           ;MISC.c: 239: }
 13702  0086B6  0012               	return	
 13703  0086B8                     l14646:
 13704                           
 13705                           ;MISC.c: 240: else
 13706                           ;MISC.c: 241: {
 13707                           ;MISC.c: 242: return 0;
 13708  0086B8  0E00               	movlw	0
 13709  0086BA  0012               	return	
 13710  0086BC  0012               	return		;funcret
 13711  0086BE                     __end_of_StringMatchCaseInsensitive:
 13712                           	opt stack 0
 13713                           tblptru	equ	0xFF8
 13714                           tblptrh	equ	0xFF7
 13715                           tblptrl	equ	0xFF6
 13716                           tablat	equ	0xFF5
 13717                           prodh	equ	0xFF4
 13718                           prodl	equ	0xFF3
 13719                           intcon	equ	0xFF2
 13720                           indf0	equ	0xFEF
 13721                           postinc0	equ	0xFEE
 13722                           fsr0h	equ	0xFEA
 13723                           fsr0l	equ	0xFE9
 13724                           wreg	equ	0xFE8
 13725                           postdec1	equ	0xFE5
 13726                           fsr1h	equ	0xFE2
 13727                           fsr1l	equ	0xFE1
 13728                           indf2	equ	0xFDF
 13729                           postinc2	equ	0xFDE
 13730                           fsr2h	equ	0xFDA
 13731                           fsr2l	equ	0xFD9
 13732                           status	equ	0xFD8
 13733                           
 13734 ;; *************** function _StringMatch *****************
 13735 ;; Defined at:
 13736 ;;		line 190 in file "MISC.c"
 13737 ;; Parameters:    Size  Location     Type
 13738 ;;  This            2   25[BANK0 ] PTR unsigned char 
 13739 ;;		 -> main@BluetoothString(255), 
 13740 ;;  That            2   27[BANK0 ] PTR const unsigned char 
 13741 ;;		 -> STR_88(4), 
 13742 ;; Auto vars:     Size  Location     Type
 13743 ;;		None
 13744 ;; Return value:  Size  Location     Type
 13745 ;;                  1    wreg      unsigned char 
 13746 ;; Registers used:
 13747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13748 ;; Tracked objects:
 13749 ;;		On entry : 0/0
 13750 ;;		On exit  : 0/0
 13751 ;;		Unchanged: 0/0
 13752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13753 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13755 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13756 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13757 ;;Total ram usage:        5 bytes
 13758 ;; Hardware stack levels used:    1
 13759 ;; Hardware stack levels required when called:    6
 13760 ;; This function calls:
 13761 ;;		Nothing
 13762 ;; This function is called by:
 13763 ;;		_UseBluetooth
 13764 ;; This function uses a non-reentrant model
 13765 ;;
 13766                           
 13767                           	psect	text11
 13768  008A5A                     __ptext11:
 13769                           	opt stack 0
 13770  008A5A                     _StringMatch:
 13771                           	opt stack 23
 13772                           
 13773                           ;MISC.c: 192: while(*This != 0)
 13774                           
 13775                           ;incstack = 0
 13776  008A5A  D025               	goto	l14602
 13777  008A5C                     l14592:
 13778                           
 13779                           ;MISC.c: 193: {
 13780                           ;MISC.c: 194: if(*This != *That || *That == 0)
 13781  008A5C  C079  FFD9         	movff	StringMatch@This,fsr2l
 13782  008A60  C07A  FFDA         	movff	StringMatch@This+1,fsr2h
 13783  008A64  50DF               	movf	indf2,w,c
 13784  008A66  0100               	movlb	0	; () banked
 13785  008A68  6F7D               	movwf	??_StringMatch& (0+255),b
 13786  008A6A  C07B  FFF6         	movff	StringMatch@That,tblptrl
 13787  008A6E  C07C  FFF7         	movff	StringMatch@That+1,tblptrh
 13788  008A72                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13789  008A72  6AF8               	clrf	tblptru,c
 13790  008A74                     	endif
 13791  008A74                     	if	0	;tblptru may be non-zero
 13792  008A74                     	endif
 13793  008A74  0008               	tblrd		*
 13794  008A76  50F5               	movf	tablat,w,c
 13795  008A78  0100               	movlb	0	; () banked
 13796  008A7A  197D               	xorwf	??_StringMatch& (0+255),w,b
 13797  008A7C  A4D8               	btfss	status,2,c
 13798  008A7E  D00A               	goto	l14596
 13799                           
 13800                           ; BSR set to: 0
 13801  008A80  C07B  FFF6         	movff	StringMatch@That,tblptrl
 13802  008A84  C07C  FFF7         	movff	StringMatch@That+1,tblptrh
 13803  008A88                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13804  008A88  6AF8               	clrf	tblptru,c
 13805  008A8A                     	endif
 13806  008A8A                     	if	0	;tblptru may be non-zero
 13807  008A8A                     	endif
 13808  008A8A  0008               	tblrd		*
 13809  008A8C  50F5               	movf	tablat,w,c
 13810  008A8E  0900               	iorlw	0
 13811  008A90  A4D8               	btfss	status,2,c
 13812  008A92  D002               	goto	l14600
 13813  008A94                     l14596:
 13814                           
 13815                           ; BSR set to: 0
 13816                           ;MISC.c: 195: {
 13817                           ;MISC.c: 196: return 0;
 13818  008A94  0E00               	movlw	0
 13819                           
 13820                           ; BSR set to: 0
 13821  008A96  0012               	return	
 13822  008A98                     l14600:
 13823                           
 13824                           ; BSR set to: 0
 13825                           ;MISC.c: 197: }
 13826                           ;MISC.c: 198: This++;
 13827  008A98  0100               	movlb	0	; () banked
 13828  008A9A  4B79               	infsnz	StringMatch@This& (0+255),f,b
 13829  008A9C  2B7A               	incf	(StringMatch@This+1)& (0+255),f,b
 13830                           
 13831                           ;MISC.c: 199: That++;
 13832  008A9E  0100               	movlb	0	; () banked
 13833  008AA0  4B7B               	infsnz	StringMatch@That& (0+255),f,b
 13834  008AA2  2B7C               	incf	(StringMatch@That+1)& (0+255),f,b
 13835  008AA4  D000               	goto	l14602
 13836  008AA6                     l14602:
 13837  008AA6  C079  FFD9         	movff	StringMatch@This,fsr2l
 13838  008AAA  C07A  FFDA         	movff	StringMatch@This+1,fsr2h
 13839  008AAE  50DF               	movf	indf2,w,c
 13840  008AB0  A4D8               	btfss	status,2,c
 13841  008AB2  D7D4               	goto	l14592
 13842                           
 13843                           ;MISC.c: 200: }
 13844                           ;MISC.c: 201: if(*That == 0)
 13845  008AB4  C07B  FFF6         	movff	StringMatch@That,tblptrl
 13846  008AB8  C07C  FFF7         	movff	StringMatch@That+1,tblptrh
 13847  008ABC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13848  008ABC  6AF8               	clrf	tblptru,c
 13849  008ABE                     	endif
 13850  008ABE                     	if	0	;tblptru may be non-zero
 13851  008ABE                     	endif
 13852  008ABE  0008               	tblrd		*
 13853  008AC0  50F5               	movf	tablat,w,c
 13854  008AC2  0900               	iorlw	0
 13855  008AC4  A4D8               	btfss	status,2,c
 13856  008AC6  D002               	goto	l14612
 13857                           
 13858                           ;MISC.c: 202: {
 13859                           ;MISC.c: 203: return 1;
 13860  008AC8  0E01               	movlw	1
 13861                           
 13862                           ;MISC.c: 204: }
 13863  008ACA  0012               	return	
 13864  008ACC                     l14612:
 13865                           
 13866                           ;MISC.c: 205: else
 13867                           ;MISC.c: 206: {
 13868                           ;MISC.c: 207: return 0;
 13869  008ACC  0E00               	movlw	0
 13870  008ACE  0012               	return	
 13871  008AD0  0012               	return		;funcret
 13872  008AD2                     __end_of_StringMatch:
 13873                           	opt stack 0
 13874                           tblptru	equ	0xFF8
 13875                           tblptrh	equ	0xFF7
 13876                           tblptrl	equ	0xFF6
 13877                           tablat	equ	0xFF5
 13878                           prodh	equ	0xFF4
 13879                           prodl	equ	0xFF3
 13880                           intcon	equ	0xFF2
 13881                           indf0	equ	0xFEF
 13882                           postinc0	equ	0xFEE
 13883                           fsr0h	equ	0xFEA
 13884                           fsr0l	equ	0xFE9
 13885                           wreg	equ	0xFE8
 13886                           postdec1	equ	0xFE5
 13887                           fsr1h	equ	0xFE2
 13888                           fsr1l	equ	0xFE1
 13889                           indf2	equ	0xFDF
 13890                           postinc2	equ	0xFDE
 13891                           fsr2h	equ	0xFDA
 13892                           fsr2l	equ	0xFD9
 13893                           status	equ	0xFD8
 13894                           
 13895 ;; *************** function _StringContainsCaseInsensitive *****************
 13896 ;; Defined at:
 13897 ;;		line 289 in file "MISC.c"
 13898 ;; Parameters:    Size  Location     Type
 13899 ;;  This            2   28[BANK0 ] PTR unsigned char 
 13900 ;;		 -> Conf2_Channels(4), Conf1_Channels(4), main@BluetoothString(255), 
 13901 ;;  That            2   30[BANK0 ] PTR const unsigned char 
 13902 ;;		 -> STR_61(7), STR_60(9), STR_59(7), STR_45(4), 
 13903 ;;		 -> STR_44(13), STR_24(4), STR_22(6), STR_20(6), 
 13904 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 13905 ;; Auto vars:     Size  Location     Type
 13906 ;;  tempThat        1   34[BANK0 ] unsigned char 
 13907 ;;  tempThis        1   33[BANK0 ] unsigned char 
 13908 ;;  begin           1   32[BANK0 ] unsigned char 
 13909 ;; Return value:  Size  Location     Type
 13910 ;;                  1    wreg      unsigned char 
 13911 ;; Registers used:
 13912 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13913 ;; Tracked objects:
 13914 ;;		On entry : 0/0
 13915 ;;		On exit  : 0/0
 13916 ;;		Unchanged: 0/0
 13917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13918 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13919 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13921 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13922 ;;Total ram usage:        7 bytes
 13923 ;; Hardware stack levels used:    1
 13924 ;; Hardware stack levels required when called:    7
 13925 ;; This function calls:
 13926 ;;		_lowercaseChar
 13927 ;; This function is called by:
 13928 ;;		_UseBluetooth
 13929 ;; This function uses a non-reentrant model
 13930 ;;
 13931                           
 13932                           	psect	text12
 13933  0074B4                     __ptext12:
 13934                           	opt stack 0
 13935  0074B4                     _StringContainsCaseInsensitive:
 13936                           	opt stack 22
 13937                           
 13938                           ;MISC.c: 291: unsigned char tempThis,
 13939                           ;MISC.c: 292: tempThat;
 13940                           ;MISC.c: 293: unsigned char begin = 0;
 13941                           
 13942                           ;incstack = 0
 13943  0074B4  0E00               	movlw	0
 13944  0074B6  0100               	movlb	0	; () banked
 13945  0074B8  6F80               	movwf	StringContainsCaseInsensitive@begin& (0+255),b
 13946                           
 13947                           ;MISC.c: 295: while(*This != 0)
 13948  0074BA  D078               	goto	l14684
 13949  0074BC                     l14652:
 13950                           
 13951                           ;MISC.c: 296: {
 13952                           ;MISC.c: 297: tempThis = *This;
 13953  0074BC  C07C  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 13954  0074C0  C07D  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 13955  0074C4  0E00               	movlw	low (__mediumconst shr (0+16))
 13956  0074C6  6EF8               	movwf	tblptru,c
 13957  0074C8  0E0F               	movlw	(high __ramtop+-1)
 13958  0074CA  64F7               	cpfsgt	tblptrh,c
 13959  0074CC  D003               	bra	u17857
 13960  0074CE  0008               	tblrd		*
 13961  0074D0  50F5               	movf	tablat,w,c
 13962  0074D2  D005               	bra	u17850
 13963  0074D4                     u17857:
 13964  0074D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 13965  0074D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 13966  0074DC  50EF               	movf	indf0,w,c
 13967  0074DE                     u17850:
 13968  0074DE  0100               	movlb	0	; () banked
 13969  0074E0  6F81               	movwf	StringContainsCaseInsensitive@tempThis& (0+255),b
 13970                           
 13971                           ;MISC.c: 298: tempThat = *That;
 13972  0074E2  C07E  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
 13973  0074E6  C07F  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
 13974  0074EA  0E00               	movlw	low (__mediumconst shr (0+16))
 13975  0074EC  6EF8               	movwf	tblptru,c
 13976  0074EE  0E0F               	movlw	(high __ramtop+-1)
 13977  0074F0  64F7               	cpfsgt	tblptrh,c
 13978  0074F2  D003               	bra	u17867
 13979  0074F4  0008               	tblrd		*
 13980  0074F6  50F5               	movf	tablat,w,c
 13981  0074F8  D005               	bra	u17860
 13982  0074FA                     u17867:
 13983  0074FA  CFF6 FFE9          	movff	tblptrl,fsr0l
 13984  0074FE  CFF7 FFEA          	movff	tblptrh,fsr0h
 13985  007502  50EF               	movf	indf0,w,c
 13986  007504                     u17860:
 13987  007504  0100               	movlb	0	; () banked
 13988  007506  6F82               	movwf	StringContainsCaseInsensitive@tempThat& (0+255),b
 13989                           
 13990                           ; BSR set to: 0
 13991                           ;MISC.c: 299: lowercaseChar(&tempThis);
 13992  007508  0E81               	movlw	low StringContainsCaseInsensitive@tempThis
 13993  00750A  0100               	movlb	0	; () banked
 13994  00750C  6F79               	movwf	lowercaseChar@Input& (0+255),b
 13995  00750E  0E00               	movlw	high StringContainsCaseInsensitive@tempThis
 13996  007510  0100               	movlb	0	; () banked
 13997  007512  6F7A               	movwf	(lowercaseChar@Input+1)& (0+255),b
 13998  007514  EC62  F049         	call	_lowercaseChar	;wreg free
 13999                           
 14000                           ;MISC.c: 300: lowercaseChar(&tempThat);
 14001  007518  0E82               	movlw	low StringContainsCaseInsensitive@tempThat
 14002  00751A  0100               	movlb	0	; () banked
 14003  00751C  6F79               	movwf	lowercaseChar@Input& (0+255),b
 14004  00751E  0E00               	movlw	high StringContainsCaseInsensitive@tempThat
 14005  007520  0100               	movlb	0	; () banked
 14006  007522  6F7A               	movwf	(lowercaseChar@Input+1)& (0+255),b
 14007  007524  EC62  F049         	call	_lowercaseChar	;wreg free
 14008                           
 14009                           ;MISC.c: 302: if(tempThis == tempThat)
 14010  007528  0100               	movlb	0	; () banked
 14011  00752A  5182               	movf	StringContainsCaseInsensitive@tempThat& (0+255),w,b
 14012  00752C  0100               	movlb	0	; () banked
 14013  00752E  1981               	xorwf	StringContainsCaseInsensitive@tempThis& (0+255),w,b
 14014  007530  A4D8               	btfss	status,2,c
 14015  007532  D033               	goto	l14676
 14016                           
 14017                           ; BSR set to: 0
 14018                           ;MISC.c: 303: {
 14019                           ;MISC.c: 304: begin = 1;
 14020  007534  0E01               	movlw	1
 14021  007536  0100               	movlb	0	; () banked
 14022  007538  6F80               	movwf	StringContainsCaseInsensitive@begin& (0+255),b
 14023                           
 14024                           ; BSR set to: 0
 14025                           ;MISC.c: 305: That++;
 14026  00753A  0100               	movlb	0	; () banked
 14027  00753C  4B7E               	infsnz	StringContainsCaseInsensitive@That& (0+255),f,b
 14028  00753E  2B7F               	incf	(StringContainsCaseInsensitive@That+1)& (0+255),f,b
 14029                           
 14030                           ; BSR set to: 0
 14031                           ;MISC.c: 306: if(*That == 0)
 14032  007540  C07E  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
 14033  007544  C07F  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
 14034  007548  0E00               	movlw	low (__mediumconst shr (0+16))
 14035  00754A  6EF8               	movwf	tblptru,c
 14036  00754C  0E0F               	movlw	(high __ramtop+-1)
 14037  00754E  64F7               	cpfsgt	tblptrh,c
 14038  007550  D003               	bra	u17887
 14039  007552  0008               	tblrd		*
 14040  007554  50F5               	movf	tablat,w,c
 14041  007556  D005               	bra	u17880
 14042  007558                     u17887:
 14043  007558  CFF6 FFE9          	movff	tblptrl,fsr0l
 14044  00755C  CFF7 FFEA          	movff	tblptrh,fsr0h
 14045  007560  50EF               	movf	indf0,w,c
 14046  007562                     u17880:
 14047  007562  0900               	iorlw	0
 14048  007564  A4D8               	btfss	status,2,c
 14049  007566  D002               	goto	l14670
 14050                           
 14051                           ;MISC.c: 307: {
 14052                           ;MISC.c: 308: return 1;
 14053  007568  0E01               	movlw	1
 14054  00756A  0012               	return	
 14055  00756C                     l14670:
 14056                           
 14057                           ;MISC.c: 309: }
 14058                           ;MISC.c: 310: if(*This == 0)
 14059  00756C  C07C  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 14060  007570  C07D  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 14061  007574  0E00               	movlw	low (__mediumconst shr (0+16))
 14062  007576  6EF8               	movwf	tblptru,c
 14063  007578  0E0F               	movlw	(high __ramtop+-1)
 14064  00757A  64F7               	cpfsgt	tblptrh,c
 14065  00757C  D003               	bra	u17907
 14066  00757E  0008               	tblrd		*
 14067  007580  50F5               	movf	tablat,w,c
 14068  007582  D005               	bra	u17900
 14069  007584                     u17907:
 14070  007584  CFF6 FFE9          	movff	tblptrl,fsr0l
 14071  007588  CFF7 FFEA          	movff	tblptrh,fsr0h
 14072  00758C  50EF               	movf	indf0,w,c
 14073  00758E                     u17900:
 14074  00758E  0900               	iorlw	0
 14075  007590  A4D8               	btfss	status,2,c
 14076  007592  D008               	goto	l14682
 14077                           
 14078                           ;MISC.c: 311: {
 14079                           ;MISC.c: 312: return 0;
 14080  007594  0E00               	movlw	0
 14081  007596  0012               	return	
 14082                           
 14083                           ;MISC.c: 313: }
 14084                           ;MISC.c: 314: }
 14085  007598  D005               	goto	l14682
 14086  00759A                     l14676:
 14087                           
 14088                           ;MISC.c: 315: else
 14089                           ;MISC.c: 316: {
 14090                           ;MISC.c: 317: if(begin == 1)
 14091  00759A  0100               	movlb	0	; () banked
 14092  00759C  0580               	decf	StringContainsCaseInsensitive@begin& (0+255),w,b
 14093  00759E  D7F8               	goto	L11
 14094                           
 14095                           ; BSR set to: 0
 14096                           
 14097                           ; BSR set to: 0
 14098                           ;MISC.c: 318: {
 14099                           ;MISC.c: 319: return 0;
 14100  0075A0  0012               	return	
 14101                           
 14102                           ; BSR set to: 0
 14103  0075A2  D000               	goto	l14682
 14104  0075A4                     l14682:
 14105                           
 14106                           ;MISC.c: 320: }
 14107                           ;MISC.c: 321: }
 14108                           ;MISC.c: 322: This++;
 14109  0075A4  0100               	movlb	0	; () banked
 14110  0075A6  4B7C               	infsnz	StringContainsCaseInsensitive@This& (0+255),f,b
 14111  0075A8  2B7D               	incf	(StringContainsCaseInsensitive@This+1)& (0+255),f,b
 14112  0075AA  D000               	goto	l14684
 14113  0075AC                     l14684:
 14114                           
 14115                           ; BSR set to: 0
 14116  0075AC  C07C  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 14117  0075B0  C07D  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 14118  0075B4  0E00               	movlw	low (__mediumconst shr (0+16))
 14119  0075B6  6EF8               	movwf	tblptru,c
 14120  0075B8  0E0F               	movlw	(high __ramtop+-1)
 14121  0075BA  64F7               	cpfsgt	tblptrh,c
 14122  0075BC  D003               	bra	u17937
 14123  0075BE  0008               	tblrd		*
 14124  0075C0  50F5               	movf	tablat,w,c
 14125  0075C2  D005               	bra	u17930
 14126  0075C4                     u17937:
 14127  0075C4  CFF6 FFE9          	movff	tblptrl,fsr0l
 14128  0075C8  CFF7 FFEA          	movff	tblptrh,fsr0h
 14129  0075CC  50EF               	movf	indf0,w,c
 14130  0075CE                     u17930:
 14131  0075CE  0900               	iorlw	0
 14132  0075D0  A4D8               	btfss	status,2,c
 14133  0075D2  D774               	goto	l14652
 14134                           
 14135                           ;MISC.c: 323: }
 14136                           ;MISC.c: 324: return 0;
 14137  0075D4  0E00               	movlw	0
 14138  0075D6  0012               	return	
 14139  0075D8  0012               	return		;funcret
 14140  0075DA                     __end_of_StringContainsCaseInsensitive:
 14141                           	opt stack 0
 14142                           tblptru	equ	0xFF8
 14143                           tblptrh	equ	0xFF7
 14144                           tblptrl	equ	0xFF6
 14145                           tablat	equ	0xFF5
 14146                           prodh	equ	0xFF4
 14147                           prodl	equ	0xFF3
 14148                           intcon	equ	0xFF2
 14149                           indf0	equ	0xFEF
 14150                           postinc0	equ	0xFEE
 14151                           fsr0h	equ	0xFEA
 14152                           fsr0l	equ	0xFE9
 14153                           wreg	equ	0xFE8
 14154                           postdec1	equ	0xFE5
 14155                           fsr1h	equ	0xFE2
 14156                           fsr1l	equ	0xFE1
 14157                           indf2	equ	0xFDF
 14158                           postinc2	equ	0xFDE
 14159                           fsr2h	equ	0xFDA
 14160                           fsr2l	equ	0xFD9
 14161                           status	equ	0xFD8
 14162                           
 14163 ;; *************** function _StringAddEqual *****************
 14164 ;; Defined at:
 14165 ;;		line 591 in file "MISC.c"
 14166 ;; Parameters:    Size  Location     Type
 14167 ;;  Input           2   40[BANK0 ] PTR unsigned char 
 14168 ;;		 -> main@BluetoothString(255), 
 14169 ;; Auto vars:     Size  Location     Type
 14170 ;;  temp          255    0[BANK1 ] unsigned char [255]
 14171 ;;  j               1   47[BANK0 ] unsigned char 
 14172 ;;  i               1   46[BANK0 ] unsigned char 
 14173 ;;  firstnumber     1   45[BANK0 ] unsigned char 
 14174 ;;  NullPosition    1   44[BANK0 ] unsigned char 
 14175 ;; Return value:  Size  Location     Type
 14176 ;;                  1    wreg      unsigned char 
 14177 ;; Registers used:
 14178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14179 ;; Tracked objects:
 14180 ;;		On entry : 0/0
 14181 ;;		On exit  : 0/0
 14182 ;;		Unchanged: 0/0
 14183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14184 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14185 ;;      Locals:         0       4     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14186 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14187 ;;      Totals:         0       8     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14188 ;;Total ram usage:      263 bytes
 14189 ;; Hardware stack levels used:    1
 14190 ;; Hardware stack levels required when called:    8
 14191 ;; This function calls:
 14192 ;;		_BufferCopy
 14193 ;;		_cleanBuffer
 14194 ;; This function is called by:
 14195 ;;		_UseBluetooth
 14196 ;; This function uses a non-reentrant model
 14197 ;;
 14198                           
 14199                           	psect	text13
 14200  00623C                     __ptext13:
 14201                           	opt stack 0
 14202  00623C                     _StringAddEqual:
 14203                           	opt stack 21
 14204                           
 14205                           ;MISC.c: 593: unsigned char i;
 14206                           ;MISC.c: 594: unsigned char j =0;
 14207                           
 14208                           ;incstack = 0
 14209  00623C  0E00               	movlw	0
 14210  00623E  0100               	movlb	0	; () banked
 14211  006240  6F8F               	movwf	StringAddEqual@j& (0+255),b
 14212                           
 14213                           ; BSR set to: 0
 14214                           ;MISC.c: 595: unsigned char firstnumber = 255;
 14215  006242  0100               	movlb	0	; () banked
 14216  006244  698D               	setf	StringAddEqual@firstnumber& (0+255),b
 14217                           
 14218                           ;MISC.c: 596: unsigned char temp[255];
 14219                           ;MISC.c: 597: unsigned char NullPosition;
 14220                           ;MISC.c: 598: for(i = 0; i<255; i++)
 14221  006246  0E00               	movlw	0
 14222  006248  0100               	movlb	0	; () banked
 14223  00624A  6F8E               	movwf	StringAddEqual@i& (0+255),b
 14224  00624C                     l14872:
 14225                           
 14226                           ; BSR set to: 0
 14227  00624C  0100               	movlb	0	; () banked
 14228  00624E  298E               	incf	StringAddEqual@i& (0+255),w,b
 14229  006250  B4D8               	btfsc	status,2,c
 14230  006252  D012               	goto	l14884
 14231  006254  D001               	goto	l14876
 14232                           
 14233                           ; BSR set to: 0
 14234  006256  D010               	goto	l14884
 14235  006258                     l14876:
 14236                           
 14237                           ; BSR set to: 0
 14238                           ;MISC.c: 599: {
 14239                           ;MISC.c: 600: if(*Input == 0)
 14240  006258  C088  FFD9         	movff	StringAddEqual@Input,fsr2l
 14241  00625C  C089  FFDA         	movff	StringAddEqual@Input+1,fsr2h
 14242  006260  50DF               	movf	indf2,w,c
 14243  006262  A4D8               	btfss	status,2,c
 14244  006264  D003               	goto	l14880
 14245                           
 14246                           ; BSR set to: 0
 14247                           ;MISC.c: 601: {
 14248                           ;MISC.c: 602: NullPosition = i;
 14249  006266  C08E  F08C         	movff	StringAddEqual@i,StringAddEqual@NullPosition
 14250                           
 14251                           ;MISC.c: 603: break;
 14252  00626A  D006               	goto	l14884
 14253  00626C                     l14880:
 14254                           
 14255                           ; BSR set to: 0
 14256                           ;MISC.c: 604: }
 14257                           ;MISC.c: 605: Input++;
 14258  00626C  0100               	movlb	0	; () banked
 14259  00626E  4B88               	infsnz	StringAddEqual@Input& (0+255),f,b
 14260  006270  2B89               	incf	(StringAddEqual@Input+1)& (0+255),f,b
 14261  006272  0100               	movlb	0	; () banked
 14262  006274  2B8E               	incf	StringAddEqual@i& (0+255),f,b
 14263  006276  D7EA               	goto	l14872
 14264  006278                     l14884:
 14265                           
 14266                           ; BSR set to: 0
 14267                           ;MISC.c: 606: }
 14268                           ;MISC.c: 607: Input-=NullPosition;
 14269  006278  0100               	movlb	0	; () banked
 14270  00627A  518C               	movf	StringAddEqual@NullPosition& (0+255),w,b
 14271  00627C  0D01               	mullw	1
 14272  00627E  50F3               	movf	prodl,w,c
 14273  006280  0100               	movlb	0	; () banked
 14274  006282  5F88               	subwf	StringAddEqual@Input& (0+255),f,b
 14275  006284  50F4               	movf	prodh,w,c
 14276  006286  0100               	movlb	0	; () banked
 14277  006288  5B89               	subwfb	(StringAddEqual@Input+1)& (0+255),f,b
 14278                           
 14279                           ; BSR set to: 0
 14280                           ;MISC.c: 608: cleanBuffer(temp,NullPosition +1);
 14281  00628A  0E00               	movlw	low StringAddEqual@temp
 14282  00628C  0100               	movlb	0	; () banked
 14283  00628E  6F79               	movwf	cleanBuffer@data& (0+255),b
 14284  006290  0E01               	movlw	high StringAddEqual@temp
 14285  006292  0100               	movlb	0	; () banked
 14286  006294  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 14287  006296  0E01               	movlw	1
 14288  006298  0100               	movlb	0	; () banked
 14289  00629A  258C               	addwf	StringAddEqual@NullPosition& (0+255),w,b
 14290  00629C  0100               	movlb	0	; () banked
 14291  00629E  6F7B               	movwf	cleanBuffer@count& (0+255),b
 14292  0062A0  0100               	movlb	0	; () banked
 14293  0062A2  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 14294  0062A4  0E00               	movlw	0
 14295  0062A6  237C               	addwfc	(cleanBuffer@count+1)& (0+255),f,b
 14296  0062A8  EC97  F046         	call	_cleanBuffer	;wreg free
 14297                           
 14298                           ;MISC.c: 609: i = 0;
 14299  0062AC  0E00               	movlw	0
 14300  0062AE  0100               	movlb	0	; () banked
 14301  0062B0  6F8E               	movwf	StringAddEqual@i& (0+255),b
 14302                           
 14303                           ;MISC.c: 610: while(Input[i] != 0)
 14304  0062B2  D032               	goto	l14898
 14305  0062B4                     l14890:
 14306                           
 14307                           ; BSR set to: 0
 14308                           ;MISC.c: 611: {
 14309                           ;MISC.c: 612: if(((Input[i] >= 48) && (Input[i] <= 57)) || (Input[i] == '-'))
 14310  0062B4  0100               	movlb	0	; () banked
 14311  0062B6  518E               	movf	StringAddEqual@i& (0+255),w,b
 14312  0062B8  0D01               	mullw	1
 14313  0062BA  50F3               	movf	prodl,w,c
 14314  0062BC  0100               	movlb	0	; () banked
 14315  0062BE  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14316  0062C0  6ED9               	movwf	fsr2l,c
 14317  0062C2  50F4               	movf	prodh,w,c
 14318  0062C4  0100               	movlb	0	; () banked
 14319  0062C6  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14320  0062C8  6EDA               	movwf	fsr2h,c
 14321  0062CA  0E2F               	movlw	47
 14322  0062CC  64DF               	cpfsgt	indf2,c
 14323  0062CE  D00F               	goto	l14894
 14324                           
 14325                           ; BSR set to: 0
 14326  0062D0  0100               	movlb	0	; () banked
 14327  0062D2  518E               	movf	StringAddEqual@i& (0+255),w,b
 14328  0062D4  0D01               	mullw	1
 14329  0062D6  50F3               	movf	prodl,w,c
 14330  0062D8  0100               	movlb	0	; () banked
 14331  0062DA  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14332  0062DC  6ED9               	movwf	fsr2l,c
 14333  0062DE  50F4               	movf	prodh,w,c
 14334  0062E0  0100               	movlb	0	; () banked
 14335  0062E2  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14336  0062E4  6EDA               	movwf	fsr2h,c
 14337  0062E6  0E39               	movlw	57
 14338  0062E8  64DF               	cpfsgt	indf2,c
 14339  0062EA  D010               	goto	l479
 14340  0062EC  D000               	goto	l14894
 14341  0062EE                     l14894:
 14342                           
 14343                           ; BSR set to: 0
 14344  0062EE  0100               	movlb	0	; () banked
 14345  0062F0  518E               	movf	StringAddEqual@i& (0+255),w,b
 14346  0062F2  0D01               	mullw	1
 14347  0062F4  50F3               	movf	prodl,w,c
 14348  0062F6  0100               	movlb	0	; () banked
 14349  0062F8  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14350  0062FA  6ED9               	movwf	fsr2l,c
 14351  0062FC  50F4               	movf	prodh,w,c
 14352  0062FE  0100               	movlb	0	; () banked
 14353  006300  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14354  006302  6EDA               	movwf	fsr2h,c
 14355  006304  0E2D               	movlw	45
 14356  006306  18DE               	xorwf	postinc2,w,c
 14357  006308  A4D8               	btfss	status,2,c
 14358  00630A  D003               	goto	l14896
 14359  00630C                     l479:
 14360                           
 14361                           ; BSR set to: 0
 14362                           ;MISC.c: 613: {
 14363                           ;MISC.c: 614: firstnumber = i;
 14364  00630C  C08E  F08D         	movff	StringAddEqual@i,StringAddEqual@firstnumber
 14365                           
 14366                           ;MISC.c: 615: break;
 14367  006310  D011               	goto	l14900
 14368  006312                     l14896:
 14369                           
 14370                           ; BSR set to: 0
 14371                           ;MISC.c: 616: }
 14372                           ;MISC.c: 617: i++;
 14373  006312  0100               	movlb	0	; () banked
 14374  006314  2B8E               	incf	StringAddEqual@i& (0+255),f,b
 14375  006316  D000               	goto	l14898
 14376  006318                     l14898:
 14377                           
 14378                           ; BSR set to: 0
 14379  006318  0100               	movlb	0	; () banked
 14380  00631A  518E               	movf	StringAddEqual@i& (0+255),w,b
 14381  00631C  0D01               	mullw	1
 14382  00631E  50F3               	movf	prodl,w,c
 14383  006320  0100               	movlb	0	; () banked
 14384  006322  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14385  006324  6ED9               	movwf	fsr2l,c
 14386  006326  50F4               	movf	prodh,w,c
 14387  006328  0100               	movlb	0	; () banked
 14388  00632A  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14389  00632C  6EDA               	movwf	fsr2h,c
 14390  00632E  50DF               	movf	indf2,w,c
 14391  006330  A4D8               	btfss	status,2,c
 14392  006332  D7C0               	goto	l14890
 14393  006334                     l14900:
 14394                           
 14395                           ; BSR set to: 0
 14396                           ;MISC.c: 618: }
 14397                           ;MISC.c: 619: if(firstnumber == 255)
 14398  006334  0100               	movlb	0	; () banked
 14399  006336  298D               	incf	StringAddEqual@firstnumber& (0+255),w,b
 14400  006338  A4D8               	btfss	status,2,c
 14401  00633A  D002               	goto	l14906
 14402                           
 14403                           ; BSR set to: 0
 14404                           ;MISC.c: 620: {
 14405                           ;MISC.c: 622: return 0;
 14406  00633C  0E00               	movlw	0
 14407                           
 14408                           ; BSR set to: 0
 14409  00633E  0012               	return	
 14410  006340                     l14906:
 14411                           
 14412                           ; BSR set to: 0
 14413                           ;MISC.c: 623: }
 14414                           ;MISC.c: 624: for(j=0;j<firstnumber;j++)
 14415  006340  0E00               	movlw	0
 14416  006342  0100               	movlb	0	; () banked
 14417  006344  6F8F               	movwf	StringAddEqual@j& (0+255),b
 14418  006346  D019               	goto	l14912
 14419  006348                     l14908:
 14420                           
 14421                           ; BSR set to: 0
 14422                           ;MISC.c: 625: {
 14423                           ;MISC.c: 626: temp[j] = Input[j];
 14424  006348  0100               	movlb	0	; () banked
 14425  00634A  518F               	movf	StringAddEqual@j& (0+255),w,b
 14426  00634C  0D01               	mullw	1
 14427  00634E  50F3               	movf	prodl,w,c
 14428  006350  0100               	movlb	0	; () banked
 14429  006352  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14430  006354  6ED9               	movwf	fsr2l,c
 14431  006356  50F4               	movf	prodh,w,c
 14432  006358  0100               	movlb	0	; () banked
 14433  00635A  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14434  00635C  6EDA               	movwf	fsr2h,c
 14435  00635E  0100               	movlb	0	; () banked
 14436  006360  518F               	movf	StringAddEqual@j& (0+255),w,b
 14437  006362  0D01               	mullw	1
 14438  006364  0E00               	movlw	low StringAddEqual@temp
 14439  006366  24F3               	addwf	prodl,w,c
 14440  006368  6EE1               	movwf	fsr1l,c
 14441  00636A  0E01               	movlw	high StringAddEqual@temp
 14442  00636C  20F4               	addwfc	prodh,w,c
 14443  00636E  6EE2               	movwf	fsr1h,c
 14444  006370  CFDF FFE7          	movff	indf2,indf1
 14445                           
 14446                           ; BSR set to: 0
 14447  006374  0100               	movlb	0	; () banked
 14448  006376  2B8F               	incf	StringAddEqual@j& (0+255),f,b
 14449  006378  D000               	goto	l14912
 14450  00637A                     l14912:
 14451                           
 14452                           ; BSR set to: 0
 14453  00637A  0100               	movlb	0	; () banked
 14454  00637C  518D               	movf	StringAddEqual@firstnumber& (0+255),w,b
 14455  00637E  0100               	movlb	0	; () banked
 14456  006380  5D8F               	subwf	StringAddEqual@j& (0+255),w,b
 14457  006382  A0D8               	btfss	status,0,c
 14458  006384  D7E1               	goto	l14908
 14459                           
 14460                           ; BSR set to: 0
 14461                           ;MISC.c: 627: }
 14462                           ;MISC.c: 628: temp[firstnumber] = '=';
 14463                           
 14464                           ; BSR set to: 0
 14465  006386  0100               	movlb	0	; () banked
 14466  006388  518D               	movf	StringAddEqual@firstnumber& (0+255),w,b
 14467  00638A  0D01               	mullw	1
 14468  00638C  0E00               	movlw	low StringAddEqual@temp
 14469  00638E  24F3               	addwf	prodl,w,c
 14470  006390  6ED9               	movwf	fsr2l,c
 14471  006392  0E01               	movlw	high StringAddEqual@temp
 14472  006394  20F4               	addwfc	prodh,w,c
 14473  006396  6EDA               	movwf	fsr2h,c
 14474  006398  0E3D               	movlw	61
 14475  00639A  6EDF               	movwf	indf2,c
 14476                           
 14477                           ; BSR set to: 0
 14478                           ;MISC.c: 629: for(j = (firstnumber);j<255;j++)
 14479  00639C  C08D  F08F         	movff	StringAddEqual@firstnumber,StringAddEqual@j
 14480  0063A0                     l14918:
 14481                           
 14482                           ; BSR set to: 0
 14483  0063A0  0100               	movlb	0	; () banked
 14484  0063A2  298F               	incf	StringAddEqual@j& (0+255),w,b
 14485  0063A4  B4D8               	btfsc	status,2,c
 14486  0063A6  D034               	goto	l14932
 14487  0063A8  D001               	goto	l14922
 14488                           
 14489                           ; BSR set to: 0
 14490  0063AA  D032               	goto	l14932
 14491  0063AC                     l14922:
 14492                           
 14493                           ; BSR set to: 0
 14494                           ;MISC.c: 630: {
 14495                           ;MISC.c: 631: temp[j+1] = Input[j];
 14496  0063AC  0100               	movlb	0	; () banked
 14497  0063AE  518F               	movf	StringAddEqual@j& (0+255),w,b
 14498  0063B0  0D01               	mullw	1
 14499  0063B2  50F3               	movf	prodl,w,c
 14500  0063B4  0100               	movlb	0	; () banked
 14501  0063B6  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14502  0063B8  6ED9               	movwf	fsr2l,c
 14503  0063BA  50F4               	movf	prodh,w,c
 14504  0063BC  0100               	movlb	0	; () banked
 14505  0063BE  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14506  0063C0  6EDA               	movwf	fsr2h,c
 14507  0063C2  0100               	movlb	0	; () banked
 14508  0063C4  518F               	movf	StringAddEqual@j& (0+255),w,b
 14509  0063C6  0100               	movlb	0	; () banked
 14510  0063C8  6F8A               	movwf	??_StringAddEqual& (0+255),b
 14511  0063CA  6B8B               	clrf	(??_StringAddEqual+1)& (0+255),b
 14512  0063CC  0E01               	movlw	1
 14513  0063CE  0100               	movlb	0	; () banked
 14514  0063D0  278A               	addwf	??_StringAddEqual& (0+255),f,b
 14515  0063D2  0E00               	movlw	0
 14516  0063D4  238B               	addwfc	(??_StringAddEqual+1)& (0+255),f,b
 14517  0063D6  0E00               	movlw	low StringAddEqual@temp
 14518  0063D8  0100               	movlb	0	; () banked
 14519  0063DA  258A               	addwf	??_StringAddEqual& (0+255),w,b
 14520  0063DC  6EE1               	movwf	fsr1l,c
 14521  0063DE  0E01               	movlw	high StringAddEqual@temp
 14522  0063E0  0100               	movlb	0	; () banked
 14523  0063E2  218B               	addwfc	(??_StringAddEqual+1)& (0+255),w,b
 14524  0063E4  6EE2               	movwf	fsr1h,c
 14525  0063E6  CFDF FFE7          	movff	indf2,indf1
 14526                           
 14527                           ; BSR set to: 0
 14528                           ;MISC.c: 632: if(Input[j] == 0)
 14529  0063EA  0100               	movlb	0	; () banked
 14530  0063EC  518F               	movf	StringAddEqual@j& (0+255),w,b
 14531  0063EE  0D01               	mullw	1
 14532  0063F0  50F3               	movf	prodl,w,c
 14533  0063F2  0100               	movlb	0	; () banked
 14534  0063F4  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14535  0063F6  6ED9               	movwf	fsr2l,c
 14536  0063F8  50F4               	movf	prodh,w,c
 14537  0063FA  0100               	movlb	0	; () banked
 14538  0063FC  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14539  0063FE  6EDA               	movwf	fsr2h,c
 14540  006400  50DF               	movf	indf2,w,c
 14541  006402  B4D8               	btfsc	status,2,c
 14542  006404  D005               	goto	l14932
 14543  006406  D001               	goto	l14928
 14544                           
 14545                           ; BSR set to: 0
 14546                           ;MISC.c: 633: {
 14547                           ;MISC.c: 634: break;
 14548  006408  D003               	goto	l14932
 14549  00640A                     l14928:
 14550                           
 14551                           ; BSR set to: 0
 14552  00640A  0100               	movlb	0	; () banked
 14553  00640C  2B8F               	incf	StringAddEqual@j& (0+255),f,b
 14554  00640E  D7C8               	goto	l14918
 14555  006410                     l14932:
 14556                           
 14557                           ; BSR set to: 0
 14558                           ;MISC.c: 635: }
 14559                           ;MISC.c: 636: }
 14560                           ;MISC.c: 637: BufferCopy(temp,Input,NullPosition +1,0);
 14561  006410  0E00               	movlw	low StringAddEqual@temp
 14562  006412  0100               	movlb	0	; () banked
 14563  006414  6F81               	movwf	BufferCopy@from& (0+255),b
 14564  006416  0E01               	movlw	high StringAddEqual@temp
 14565  006418  0100               	movlb	0	; () banked
 14566  00641A  6F82               	movwf	(BufferCopy@from+1)& (0+255),b
 14567  00641C  C088  F083         	movff	StringAddEqual@Input,BufferCopy@to
 14568  006420  C089  F084         	movff	StringAddEqual@Input+1,BufferCopy@to+1
 14569  006424  0100               	movlb	0	; () banked
 14570  006426  298C               	incf	StringAddEqual@NullPosition& (0+255),w,b
 14571  006428  0100               	movlb	0	; () banked
 14572  00642A  6F85               	movwf	BufferCopy@count& (0+255),b
 14573  00642C  0E00               	movlw	0
 14574  00642E  0100               	movlb	0	; () banked
 14575  006430  6F86               	movwf	BufferCopy@shift& (0+255),b
 14576  006432  ECA7  F043         	call	_BufferCopy	;wreg free
 14577                           
 14578                           ;MISC.c: 638: return 1;
 14579  006436  0E01               	movlw	1
 14580  006438  0012               	return	
 14581  00643A  0012               	return		;funcret
 14582  00643C                     __end_of_StringAddEqual:
 14583                           	opt stack 0
 14584                           tblptru	equ	0xFF8
 14585                           tblptrh	equ	0xFF7
 14586                           tblptrl	equ	0xFF6
 14587                           tablat	equ	0xFF5
 14588                           prodh	equ	0xFF4
 14589                           prodl	equ	0xFF3
 14590                           intcon	equ	0xFF2
 14591                           indf0	equ	0xFEF
 14592                           postinc0	equ	0xFEE
 14593                           fsr0h	equ	0xFEA
 14594                           fsr0l	equ	0xFE9
 14595                           wreg	equ	0xFE8
 14596                           indf1	equ	0xFE7
 14597                           postdec1	equ	0xFE5
 14598                           fsr1h	equ	0xFE2
 14599                           fsr1l	equ	0xFE1
 14600                           indf2	equ	0xFDF
 14601                           postinc2	equ	0xFDE
 14602                           fsr2h	equ	0xFDA
 14603                           fsr2l	equ	0xFD9
 14604                           status	equ	0xFD8
 14605                           
 14606 ;; *************** function _BufferCopy *****************
 14607 ;; Defined at:
 14608 ;;		line 167 in file "MISC.c"
 14609 ;; Parameters:    Size  Location     Type
 14610 ;;  from            2   33[BANK0 ] PTR unsigned char 
 14611 ;;		 -> StringAddEqual@temp(255), ReceivedString(255), 
 14612 ;;  to              2   35[BANK0 ] PTR unsigned char 
 14613 ;;		 -> main@BluetoothString(255), 
 14614 ;;  count           1   37[BANK0 ] unsigned char 
 14615 ;;  shift           1   38[BANK0 ] unsigned char 
 14616 ;; Auto vars:     Size  Location     Type
 14617 ;;  i               1   39[BANK0 ] unsigned char 
 14618 ;; Return value:  Size  Location     Type
 14619 ;;		None               void
 14620 ;; Registers used:
 14621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14622 ;; Tracked objects:
 14623 ;;		On entry : 0/0
 14624 ;;		On exit  : 0/0
 14625 ;;		Unchanged: 0/0
 14626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14627 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14628 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14630 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14631 ;;Total ram usage:        7 bytes
 14632 ;; Hardware stack levels used:    1
 14633 ;; Hardware stack levels required when called:    7
 14634 ;; This function calls:
 14635 ;;		_cleanBuffer
 14636 ;; This function is called by:
 14637 ;;		_main
 14638 ;;		_StringAddEqual
 14639 ;; This function uses a non-reentrant model
 14640 ;;
 14641                           
 14642                           	psect	text14
 14643  00874E                     __ptext14:
 14644                           	opt stack 0
 14645  00874E                     _BufferCopy:
 14646                           	opt stack 21
 14647                           
 14648                           ;MISC.c: 169: unsigned char i=0;
 14649                           
 14650                           ;incstack = 0
 14651  00874E  0E00               	movlw	0
 14652  008750  0100               	movlb	0	; () banked
 14653  008752  6F87               	movwf	BufferCopy@i& (0+255),b
 14654                           
 14655                           ; BSR set to: 0
 14656                           ;MISC.c: 170: cleanBuffer(to,count);
 14657  008754  C083  F079         	movff	BufferCopy@to,cleanBuffer@data
 14658  008758  C084  F07A         	movff	BufferCopy@to+1,cleanBuffer@data+1
 14659  00875C  C085  F07B         	movff	BufferCopy@count,cleanBuffer@count
 14660  008760  0100               	movlb	0	; () banked
 14661  008762  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 14662  008764  EC97  F046         	call	_cleanBuffer	;wreg free
 14663                           
 14664                           ;MISC.c: 171: for(i = shift; i>0;i--)
 14665  008768  C086  F087         	movff	BufferCopy@shift,BufferCopy@i
 14666  00876C                     l13858:
 14667  00876C  0100               	movlb	0	; () banked
 14668  00876E  5187               	movf	BufferCopy@i& (0+255),w,b
 14669  008770  0100               	movlb	0	; () banked
 14670  008772  B4D8               	btfsc	status,2,c
 14671  008774  D022               	goto	l13878
 14672  008776  D001               	goto	l13862
 14673                           
 14674                           ; BSR set to: 0
 14675  008778  D020               	goto	l13878
 14676  00877A                     l13862:
 14677                           
 14678                           ; BSR set to: 0
 14679                           ;MISC.c: 172: {
 14680                           ;MISC.c: 173: *to = ' ';
 14681  00877A  C083  FFD9         	movff	BufferCopy@to,fsr2l
 14682  00877E  C084  FFDA         	movff	BufferCopy@to+1,fsr2h
 14683  008782  0E20               	movlw	32
 14684  008784  6EDF               	movwf	indf2,c
 14685                           
 14686                           ; BSR set to: 0
 14687                           ;MISC.c: 174: to++;
 14688  008786  0100               	movlb	0	; () banked
 14689  008788  4B83               	infsnz	BufferCopy@to& (0+255),f,b
 14690  00878A  2B84               	incf	(BufferCopy@to+1)& (0+255),f,b
 14691                           
 14692                           ; BSR set to: 0
 14693  00878C  0100               	movlb	0	; () banked
 14694  00878E  0787               	decf	BufferCopy@i& (0+255),f,b
 14695  008790  D7ED               	goto	l13858
 14696                           
 14697                           ; BSR set to: 0
 14698                           ;MISC.c: 175: }
 14699                           ;MISC.c: 176: while(*from != 0 && count >0)
 14700                           
 14701                           ; BSR set to: 0
 14702  008792  D013               	goto	l13878
 14703  008794                     l13870:
 14704                           
 14705                           ; BSR set to: 0
 14706                           ;MISC.c: 177: {
 14707                           ;MISC.c: 178: *to = *from;
 14708  008794  C081  FFD9         	movff	BufferCopy@from,fsr2l
 14709  008798  C082  FFDA         	movff	BufferCopy@from+1,fsr2h
 14710  00879C  C083  FFE1         	movff	BufferCopy@to,fsr1l
 14711  0087A0  C084  FFE2         	movff	BufferCopy@to+1,fsr1h
 14712  0087A4  CFDF FFE7          	movff	indf2,indf1
 14713                           
 14714                           ; BSR set to: 0
 14715                           ;MISC.c: 179: from++;
 14716  0087A8  0100               	movlb	0	; () banked
 14717  0087AA  4B81               	infsnz	BufferCopy@from& (0+255),f,b
 14718  0087AC  2B82               	incf	(BufferCopy@from+1)& (0+255),f,b
 14719                           
 14720                           ; BSR set to: 0
 14721                           ;MISC.c: 180: to++;
 14722  0087AE  0100               	movlb	0	; () banked
 14723  0087B0  4B83               	infsnz	BufferCopy@to& (0+255),f,b
 14724  0087B2  2B84               	incf	(BufferCopy@to+1)& (0+255),f,b
 14725                           
 14726                           ; BSR set to: 0
 14727                           ;MISC.c: 181: count--;
 14728  0087B4  0100               	movlb	0	; () banked
 14729  0087B6  0785               	decf	BufferCopy@count& (0+255),f,b
 14730  0087B8  D000               	goto	l13878
 14731  0087BA                     l13878:
 14732                           
 14733                           ; BSR set to: 0
 14734  0087BA  C081  FFD9         	movff	BufferCopy@from,fsr2l
 14735  0087BE  C082  FFDA         	movff	BufferCopy@from+1,fsr2h
 14736  0087C2  50DF               	movf	indf2,w,c
 14737  0087C4  B4D8               	btfsc	status,2,c
 14738  0087C6  0012               	return	
 14739                           
 14740                           ; BSR set to: 0
 14741  0087C8  0100               	movlb	0	; () banked
 14742  0087CA  5185               	movf	BufferCopy@count& (0+255),w,b
 14743  0087CC  0100               	movlb	0	; () banked
 14744  0087CE  B4D8               	btfsc	status,2,c
 14745  0087D0  0012               	return	
 14746  0087D2  D7E0               	goto	l13870
 14747                           
 14748                           ; BSR set to: 0
 14749  0087D4  0012               	return	
 14750                           
 14751                           ; BSR set to: 0
 14752                           
 14753                           ; BSR set to: 0
 14754  0087D6  0012               	return		;funcret
 14755  0087D8                     __end_of_BufferCopy:
 14756                           	opt stack 0
 14757                           tblptru	equ	0xFF8
 14758                           tblptrh	equ	0xFF7
 14759                           tblptrl	equ	0xFF6
 14760                           tablat	equ	0xFF5
 14761                           prodh	equ	0xFF4
 14762                           prodl	equ	0xFF3
 14763                           intcon	equ	0xFF2
 14764                           indf0	equ	0xFEF
 14765                           postinc0	equ	0xFEE
 14766                           fsr0h	equ	0xFEA
 14767                           fsr0l	equ	0xFE9
 14768                           wreg	equ	0xFE8
 14769                           indf1	equ	0xFE7
 14770                           postdec1	equ	0xFE5
 14771                           fsr1h	equ	0xFE2
 14772                           fsr1l	equ	0xFE1
 14773                           indf2	equ	0xFDF
 14774                           postinc2	equ	0xFDE
 14775                           fsr2h	equ	0xFDA
 14776                           fsr2l	equ	0xFD9
 14777                           status	equ	0xFD8
 14778                           
 14779 ;; *************** function _SendRF_wait *****************
 14780 ;; Defined at:
 14781 ;;		line 145 in file "RF.c"
 14782 ;; Parameters:    Size  Location     Type
 14783 ;;  Code            2   33[BANK0 ] PTR const unsigned char 
 14784 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
 14785 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
 14786 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
 14787 ;;		 -> Conf1_ChannelD(12), 
 14788 ;;  Config          1   35[BANK0 ] unsigned char 
 14789 ;;  size            1   36[BANK0 ] unsigned char 
 14790 ;;  amount          1   37[BANK0 ] unsigned char 
 14791 ;; Auto vars:     Size  Location     Type
 14792 ;;		None
 14793 ;; Return value:  Size  Location     Type
 14794 ;;		None               void
 14795 ;; Registers used:
 14796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14797 ;; Tracked objects:
 14798 ;;		On entry : 0/0
 14799 ;;		On exit  : 0/0
 14800 ;;		Unchanged: 0/0
 14801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14802 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14805 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14806 ;;Total ram usage:        5 bytes
 14807 ;; Hardware stack levels used:    1
 14808 ;; Hardware stack levels required when called:    8
 14809 ;; This function calls:
 14810 ;;		_LEDTimerON
 14811 ;;		_ReadIRpin
 14812 ;;		_SendRF
 14813 ;; This function is called by:
 14814 ;;		_UseBluetooth
 14815 ;;		_SendRF_Channel
 14816 ;; This function uses a non-reentrant model
 14817 ;;
 14818                           
 14819                           	psect	text15
 14820  0090E4                     __ptext15:
 14821                           	opt stack 0
 14822  0090E4                     _SendRF_wait:
 14823                           	opt stack 20
 14824                           
 14825                           ;RF.c: 147: (IOCBbits.IOCB4 = 0);
 14826                           
 14827                           ; BSR set to: 0
 14828                           ;incstack = 0
 14829  0090E4  987D               	bcf	3965,4,c	;volatile
 14830                           
 14831                           ;RF.c: 148: INTCONbits.RBIE = 0;
 14832  0090E6  96F2               	bcf	intcon,3,c	;volatile
 14833                           
 14834                           ;RF.c: 149: INTCONbits.PEIE = 0;
 14835  0090E8  9CF2               	bcf	intcon,6,c	;volatile
 14836                           
 14837                           ;RF.c: 150: LEDTimerON();
 14838  0090EA  EC26  F04A         	call	_LEDTimerON	;wreg free
 14839                           
 14840                           ;RF.c: 151: (LATC |= 0x04);
 14841  0090EE  848B               	bsf	3979,2,c	;volatile
 14842                           
 14843                           ;RF.c: 152: SendRF(Code, Config, size, amount);
 14844  0090F0  C081  F079         	movff	SendRF_wait@Code,SendRF@Code
 14845  0090F4  C082  F07A         	movff	SendRF_wait@Code+1,SendRF@Code+1
 14846  0090F8  C083  F07B         	movff	SendRF_wait@Config,SendRF@Config
 14847  0090FC  C084  F07C         	movff	SendRF_wait@size,SendRF@size
 14848  009100  C085  F07D         	movff	SendRF_wait@amount,SendRF@RepeatAmount
 14849  009104  ECA3  F03D         	call	_SendRF	;wreg free
 14850                           
 14851                           ;RF.c: 153: while(!Sent);
 14852  009108  D000               	goto	l14292
 14853  00910A                     l14292:
 14854  00910A  0100               	movlb	0	; () banked
 14855  00910C  51E6               	movf	_Sent& (0+255),w,b	;volatile
 14856  00910E  B4D8               	btfsc	status,2,c
 14857  009110  D7FC               	goto	l14292
 14858                           
 14859                           ; BSR set to: 0
 14860                           ;RF.c: 154: INTCONbits.PEIE = 1;
 14861  009112  8CF2               	bsf	intcon,6,c	;volatile
 14862                           
 14863                           ; BSR set to: 0
 14864                           ;RF.c: 155: IRpinOLD = ReadIRpin();
 14865  009114  EC63  F04A         	call	_ReadIRpin	;wreg free
 14866  009118  6E2E               	movwf	_IRpinOLD,c
 14867                           
 14868                           ;RF.c: 156: INTCONbits.RBIF = 0;
 14869  00911A  90F2               	bcf	intcon,0,c	;volatile
 14870                           
 14871                           ;RF.c: 157: (IOCBbits.IOCB4 = 1);
 14872  00911C  887D               	bsf	3965,4,c	;volatile
 14873                           
 14874                           ;RF.c: 158: INTCONbits.RBIE = 1;
 14875  00911E  86F2               	bsf	intcon,3,c	;volatile
 14876  009120  0012               	return		;funcret
 14877  009122                     __end_of_SendRF_wait:
 14878                           	opt stack 0
 14879                           tblptru	equ	0xFF8
 14880                           tblptrh	equ	0xFF7
 14881                           tblptrl	equ	0xFF6
 14882                           tablat	equ	0xFF5
 14883                           prodh	equ	0xFF4
 14884                           prodl	equ	0xFF3
 14885                           intcon	equ	0xFF2
 14886                           indf0	equ	0xFEF
 14887                           postinc0	equ	0xFEE
 14888                           fsr0h	equ	0xFEA
 14889                           fsr0l	equ	0xFE9
 14890                           wreg	equ	0xFE8
 14891                           indf1	equ	0xFE7
 14892                           postdec1	equ	0xFE5
 14893                           fsr1h	equ	0xFE2
 14894                           fsr1l	equ	0xFE1
 14895                           indf2	equ	0xFDF
 14896                           postinc2	equ	0xFDE
 14897                           fsr2h	equ	0xFDA
 14898                           fsr2l	equ	0xFD9
 14899                           status	equ	0xFD8
 14900                           
 14901 ;; *************** function _SendRF *****************
 14902 ;; Defined at:
 14903 ;;		line 68 in file "RF.c"
 14904 ;; Parameters:    Size  Location     Type
 14905 ;;  Code            2   25[BANK0 ] PTR const unsigned char 
 14906 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
 14907 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
 14908 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
 14909 ;;		 -> Conf1_ChannelD(12), 
 14910 ;;  Config          1   27[BANK0 ] unsigned char 
 14911 ;;  size            1   28[BANK0 ] unsigned char 
 14912 ;;  RepeatAmount    1   29[BANK0 ] unsigned char 
 14913 ;; Auto vars:     Size  Location     Type
 14914 ;;  i               1   32[BANK0 ] unsigned char 
 14915 ;; Return value:  Size  Location     Type
 14916 ;;                  1    wreg      unsigned char 
 14917 ;; Registers used:
 14918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 14919 ;; Tracked objects:
 14920 ;;		On entry : 0/0
 14921 ;;		On exit  : 0/0
 14922 ;;		Unchanged: 0/0
 14923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14924 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14925 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14926 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14927 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14928 ;;Total ram usage:        8 bytes
 14929 ;; Hardware stack levels used:    1
 14930 ;; Hardware stack levels required when called:    6
 14931 ;; This function calls:
 14932 ;;		Nothing
 14933 ;; This function is called by:
 14934 ;;		_SendRF_wait
 14935 ;; This function uses a non-reentrant model
 14936 ;;
 14937                           
 14938                           	psect	text16
 14939  007B46                     __ptext16:
 14940                           	opt stack 0
 14941  007B46                     _SendRF:
 14942                           	opt stack 21
 14943                           
 14944                           ;RF.c: 70: unsigned char i;
 14945                           ;RF.c: 71: if(Sent)
 14946                           
 14947                           ;incstack = 0
 14948  007B46  0100               	movlb	0	; () banked
 14949  007B48  51E6               	movf	_Sent& (0+255),w,b	;volatile
 14950  007B4A  B4D8               	btfsc	status,2,c
 14951  007B4C  0012               	return	
 14952                           
 14953                           ; BSR set to: 0
 14954                           ;RF.c: 72: {
 14955                           ;RF.c: 74: RF_IR = 55;
 14956  007B4E  0E37               	movlw	55
 14957  007B50  6E42               	movwf	_RF_IR,c
 14958                           
 14959                           ;RF.c: 75: if((Config <= 0) || (Config > 2))
 14960  007B52  0100               	movlb	0	; () banked
 14961  007B54  517B               	movf	SendRF@Config& (0+255),w,b
 14962  007B56  0100               	movlb	0	; () banked
 14963  007B58  B4D8               	btfsc	status,2,c
 14964  007B5A  0012               	return	
 14965                           
 14966                           ; BSR set to: 0
 14967  007B5C  0E02               	movlw	2
 14968  007B5E  0100               	movlb	0	; () banked
 14969  007B60  657B               	cpfsgt	SendRF@Config& (0+255),b
 14970  007B62  D002               	goto	l2112
 14971  007B64  0012               	return	
 14972                           
 14973                           ; BSR set to: 0
 14974                           ;RF.c: 76: {
 14975                           ;RF.c: 77: return 0;
 14976                           ;	Return value of _SendRF is never used
 14977  007B66  0012               	return	
 14978  007B68                     l2112:
 14979                           
 14980                           ; BSR set to: 0
 14981                           ;RF.c: 78: }
 14982                           ;RF.c: 79: RFConfig = Config;
 14983  007B68  C07B  F033         	movff	SendRF@Config,_RFConfig
 14984                           
 14985                           ; BSR set to: 0
 14986                           ;RF.c: 80: if(Config == 1)
 14987  007B6C  0100               	movlb	0	; () banked
 14988  007B6E  057B               	decf	SendRF@Config& (0+255),w,b
 14989  007B70  A4D8               	btfss	status,2,c
 14990  007B72  D002               	goto	l13802
 14991                           
 14992                           ; BSR set to: 0
 14993                           ;RF.c: 81: {
 14994                           ;RF.c: 82: RF_IR_Postscaler = 2;
 14995  007B74  0E02               	movlw	2
 14996  007B76  D006               	goto	L12
 14997  007B78                     l13802:
 14998                           
 14999                           ; BSR set to: 0
 15000                           ;RF.c: 84: else if(Config == 2)
 15001  007B78  0E02               	movlw	2
 15002  007B7A  0100               	movlb	0	; () banked
 15003  007B7C  197B               	xorwf	SendRF@Config& (0+255),w,b
 15004  007B7E  A4D8               	btfss	status,2,c
 15005  007B80  0012               	return	
 15006                           
 15007                           ; BSR set to: 0
 15008                           ;RF.c: 85: {
 15009                           ;RF.c: 86: RF_IR_Postscaler = 4;
 15010  007B82  0E04               	movlw	4
 15011  007B84                     L12:
 15012  007B84  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 15013                           
 15014                           ;RF.c: 87: }
 15015  007B86  D002               	goto	l13806
 15016                           
 15017                           ; BSR set to: 0
 15018                           ;RF.c: 88: else
 15019                           ;RF.c: 89: {
 15020                           ;RF.c: 90: return 0;
 15021                           ;	Return value of _SendRF is never used
 15022  007B88  0012               	return	
 15023                           
 15024                           ; BSR set to: 0
 15025  007B8A  D000               	goto	l13806
 15026  007B8C                     l13806:
 15027                           
 15028                           ; BSR set to: 0
 15029                           ;RF.c: 91: }
 15030                           ;RF.c: 93: Sent = 0;
 15031  007B8C  0E00               	movlw	0
 15032  007B8E  0100               	movlb	0	; () banked
 15033  007B90  6FE6               	movwf	_Sent& (0+255),b	;volatile
 15034                           
 15035                           ; BSR set to: 0
 15036                           ;RF.c: 94: Sendcount = RepeatAmount;
 15037  007B92  C07D  F037         	movff	SendRF@RepeatAmount,_Sendcount	;volatile
 15038                           
 15039                           ;RF.c: 95: RFsendFlag = 1;
 15040  007B96  0E01               	movlw	1
 15041  007B98  6E36               	movwf	_RFsendFlag,c	;volatile
 15042                           
 15043                           ;RF.c: 96: RFcodeBit = 0;
 15044  007B9A  0E00               	movlw	0
 15045  007B9C  6E34               	movwf	_RFcodeBit,c
 15046                           
 15047                           ;RF.c: 97: RFcodePlace = 1;
 15048  007B9E  0E01               	movlw	1
 15049  007BA0  6E35               	movwf	_RFcodePlace,c
 15050                           
 15051                           ; BSR set to: 0
 15052                           ;RF.c: 100: if(size >= 20)
 15053  007BA2  0E13               	movlw	19
 15054  007BA4  0100               	movlb	0	; () banked
 15055  007BA6  657C               	cpfsgt	SendRF@size& (0+255),b
 15056  007BA8  D002               	goto	l13814
 15057  007BAA  0012               	return	
 15058                           
 15059                           ; BSR set to: 0
 15060                           ;RF.c: 101: {
 15061                           ;RF.c: 102: return 0;
 15062                           ;	Return value of _SendRF is never used
 15063  007BAC  0012               	return	
 15064  007BAE                     l13814:
 15065                           
 15066                           ; BSR set to: 0
 15067                           ;RF.c: 103: }
 15068                           ;RF.c: 104: for(i=0;i<size;i++)
 15069  007BAE  0E00               	movlw	0
 15070  007BB0  0100               	movlb	0	; () banked
 15071  007BB2  6F80               	movwf	SendRF@i& (0+255),b
 15072  007BB4  D021               	goto	l13820
 15073  007BB6                     l13816:
 15074                           
 15075                           ; BSR set to: 0
 15076                           ;RF.c: 105: {
 15077                           ;RF.c: 106: RFsendCode[i] = Code[i];
 15078  007BB6  0100               	movlb	0	; () banked
 15079  007BB8  5180               	movf	SendRF@i& (0+255),w,b
 15080  007BBA  0D01               	mullw	1
 15081  007BBC  C079  F07E         	movff	SendRF@Code,??_SendRF
 15082  007BC0  C07A  F07F         	movff	SendRF@Code+1,??_SendRF+1
 15083  007BC4  50F3               	movf	prodl,w,c
 15084  007BC6  0100               	movlb	0	; () banked
 15085  007BC8  277E               	addwf	??_SendRF& (0+255),f,b
 15086  007BCA  50F4               	movf	prodh,w,c
 15087  007BCC  0100               	movlb	0	; () banked
 15088  007BCE  237F               	addwfc	(??_SendRF+1)& (0+255),f,b
 15089  007BD0  C07E  FFF6         	movff	??_SendRF,tblptrl
 15090  007BD4  C07F  FFF7         	movff	??_SendRF+1,tblptrh
 15091  007BD8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15092  007BD8  6AF8               	clrf	tblptru,c
 15093  007BDA                     	endif
 15094  007BDA                     	if	0	;tblptru may be non-zero
 15095  007BDA                     	endif
 15096  007BDA  0100               	movlb	0	; () banked
 15097  007BDC  5180               	movf	SendRF@i& (0+255),w,b
 15098  007BDE  0D01               	mullw	1
 15099  007BE0  0ECE               	movlw	low _RFsendCode
 15100  007BE2  24F3               	addwf	prodl,w,c
 15101  007BE4  6ED9               	movwf	fsr2l,c
 15102  007BE6  0E02               	movlw	high _RFsendCode
 15103  007BE8  20F4               	addwfc	prodh,w,c
 15104  007BEA  6EDA               	movwf	fsr2h,c
 15105  007BEC  0008               	tblrd		*
 15106  007BEE  CFF5 FFDF          	movff	tablat,indf2
 15107                           
 15108                           ; BSR set to: 0
 15109  007BF2  0100               	movlb	0	; () banked
 15110  007BF4  2B80               	incf	SendRF@i& (0+255),f,b
 15111  007BF6  D000               	goto	l13820
 15112  007BF8                     l13820:
 15113                           
 15114                           ; BSR set to: 0
 15115  007BF8  0100               	movlb	0	; () banked
 15116  007BFA  517C               	movf	SendRF@size& (0+255),w,b
 15117  007BFC  0100               	movlb	0	; () banked
 15118  007BFE  5D80               	subwf	SendRF@i& (0+255),w,b
 15119  007C00  A0D8               	btfss	status,0,c
 15120  007C02  D7D9               	goto	l13816
 15121                           
 15122                           ; BSR set to: 0
 15123                           ;RF.c: 107: }
 15124                           ;RF.c: 108: RFsendCode[i] = 99;
 15125                           
 15126                           ; BSR set to: 0
 15127  007C04  0100               	movlb	0	; () banked
 15128  007C06  5180               	movf	SendRF@i& (0+255),w,b
 15129  007C08  0D01               	mullw	1
 15130  007C0A  0ECE               	movlw	low _RFsendCode
 15131  007C0C  24F3               	addwf	prodl,w,c
 15132  007C0E  6ED9               	movwf	fsr2l,c
 15133  007C10  0E02               	movlw	high _RFsendCode
 15134  007C12  20F4               	addwfc	prodh,w,c
 15135  007C14  6EDA               	movwf	fsr2h,c
 15136  007C16  0E63               	movlw	99
 15137  007C18  6EDF               	movwf	indf2,c
 15138                           
 15139                           ; BSR set to: 0
 15140                           ;RF.c: 110: (TMR2 = 0);
 15141  007C1A  0E00               	movlw	0
 15142  007C1C  6ECC               	movwf	4044,c	;volatile
 15143                           
 15144                           ; BSR set to: 0
 15145                           ;RF.c: 111: if(Config == 1)
 15146  007C1E  0100               	movlb	0	; () banked
 15147  007C20  057B               	decf	SendRF@Config& (0+255),w,b
 15148  007C22  A4D8               	btfss	status,2,c
 15149  007C24  D002               	goto	l13830
 15150                           
 15151                           ; BSR set to: 0
 15152                           ;RF.c: 112: {
 15153                           ;RF.c: 113: (PR2 = 250);
 15154  007C26  0EFA               	movlw	250
 15155  007C28  D001               	goto	L13
 15156  007C2A                     l13830:
 15157                           
 15158                           ; BSR set to: 0
 15159                           ;RF.c: 115: else
 15160                           ;RF.c: 116: {
 15161                           ;RF.c: 117: (PR2 = 149);
 15162  007C2A  0E95               	movlw	149
 15163  007C2C                     L13:
 15164  007C2C  6ECB               	movwf	4043,c	;volatile
 15165  007C2E  D000               	goto	l13832
 15166  007C30                     l13832:
 15167                           
 15168                           ; BSR set to: 0
 15169                           ;RF.c: 118: }
 15170                           ;RF.c: 119: (T2CONbits.TMR2ON = 1);
 15171  007C30  84CA               	bsf	4042,2,c	;volatile
 15172                           
 15173                           ; BSR set to: 0
 15174                           ;RF.c: 120: return 1;
 15175                           ;	Return value of _SendRF is never used
 15176  007C32  0012               	return	
 15177                           
 15178                           ; BSR set to: 0
 15179                           
 15180                           ; BSR set to: 0
 15181                           ;RF.c: 121: }
 15182                           ;RF.c: 122: return 2;
 15183                           ;	Return value of _SendRF is never used
 15184  007C34  0012               	return		;funcret
 15185  007C36                     __end_of_SendRF:
 15186                           	opt stack 0
 15187                           tblptru	equ	0xFF8
 15188                           tblptrh	equ	0xFF7
 15189                           tblptrl	equ	0xFF6
 15190                           tablat	equ	0xFF5
 15191                           prodh	equ	0xFF4
 15192                           prodl	equ	0xFF3
 15193                           intcon	equ	0xFF2
 15194                           indf0	equ	0xFEF
 15195                           postinc0	equ	0xFEE
 15196                           fsr0h	equ	0xFEA
 15197                           fsr0l	equ	0xFE9
 15198                           wreg	equ	0xFE8
 15199                           indf1	equ	0xFE7
 15200                           postdec1	equ	0xFE5
 15201                           fsr1h	equ	0xFE2
 15202                           fsr1l	equ	0xFE1
 15203                           indf2	equ	0xFDF
 15204                           postinc2	equ	0xFDE
 15205                           fsr2h	equ	0xFDA
 15206                           fsr2l	equ	0xFD9
 15207                           status	equ	0xFD8
 15208                           
 15209 ;; *************** function _LEDTimerON *****************
 15210 ;; Defined at:
 15211 ;;		line 149 in file "Timer.c"
 15212 ;; Parameters:    Size  Location     Type
 15213 ;;		None
 15214 ;; Auto vars:     Size  Location     Type
 15215 ;;		None
 15216 ;; Return value:  Size  Location     Type
 15217 ;;		None               void
 15218 ;; Registers used:
 15219 ;;		wreg, status,2, cstack
 15220 ;; Tracked objects:
 15221 ;;		On entry : 0/0
 15222 ;;		On exit  : 0/0
 15223 ;;		Unchanged: 0/0
 15224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15229 ;;Total ram usage:        0 bytes
 15230 ;; Hardware stack levels used:    1
 15231 ;; Hardware stack levels required when called:    7
 15232 ;; This function calls:
 15233 ;;		_ResetTimer1
 15234 ;; This function is called by:
 15235 ;;		_UseIRCode
 15236 ;;		_WaitForIRsignal
 15237 ;;		_SendRF_wait
 15238 ;; This function uses a non-reentrant model
 15239 ;;
 15240                           
 15241                           	psect	text17
 15242  00944C                     __ptext17:
 15243                           	opt stack 0
 15244  00944C                     _LEDTimerON:
 15245                           	opt stack 20
 15246                           
 15247                           ;Timer.c: 151: (T1CONbits.TMR1ON = FALSE);
 15248                           
 15249                           ; BSR set to: 0
 15250                           ;incstack = 0
 15251  00944C  90CD               	bcf	4045,0,c	;volatile
 15252                           
 15253                           ;Timer.c: 152: ResetTimer1();
 15254  00944E  EC86  F04A         	call	_ResetTimer1	;wreg free
 15255                           
 15256                           ;Timer.c: 153: Timer1_Postscaler = 0;
 15257  009452  0E00               	movlw	0
 15258  009454  6E38               	movwf	_Timer1_Postscaler,c
 15259                           
 15260                           ;Timer.c: 154: ResetTimer1();
 15261  009456  EC86  F04A         	call	_ResetTimer1	;wreg free
 15262                           
 15263                           ;Timer.c: 155: (T1CONbits.TMR1ON = TRUE);
 15264  00945A  80CD               	bsf	4045,0,c	;volatile
 15265  00945C  0012               	return		;funcret
 15266  00945E                     __end_of_LEDTimerON:
 15267                           	opt stack 0
 15268                           tblptru	equ	0xFF8
 15269                           tblptrh	equ	0xFF7
 15270                           tblptrl	equ	0xFF6
 15271                           tablat	equ	0xFF5
 15272                           prodh	equ	0xFF4
 15273                           prodl	equ	0xFF3
 15274                           intcon	equ	0xFF2
 15275                           indf0	equ	0xFEF
 15276                           postinc0	equ	0xFEE
 15277                           fsr0h	equ	0xFEA
 15278                           fsr0l	equ	0xFE9
 15279                           wreg	equ	0xFE8
 15280                           indf1	equ	0xFE7
 15281                           postdec1	equ	0xFE5
 15282                           fsr1h	equ	0xFE2
 15283                           fsr1l	equ	0xFE1
 15284                           indf2	equ	0xFDF
 15285                           postinc2	equ	0xFDE
 15286                           fsr2h	equ	0xFDA
 15287                           fsr2l	equ	0xFD9
 15288                           status	equ	0xFD8
 15289                           
 15290 ;; *************** function _ResetTimer1 *****************
 15291 ;; Defined at:
 15292 ;;		line 123 in file "Timer.c"
 15293 ;; Parameters:    Size  Location     Type
 15294 ;;		None
 15295 ;; Auto vars:     Size  Location     Type
 15296 ;;		None
 15297 ;; Return value:  Size  Location     Type
 15298 ;;		None               void
 15299 ;; Registers used:
 15300 ;;		wreg, status,2
 15301 ;; Tracked objects:
 15302 ;;		On entry : 0/0
 15303 ;;		On exit  : 0/0
 15304 ;;		Unchanged: 0/0
 15305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15310 ;;Total ram usage:        0 bytes
 15311 ;; Hardware stack levels used:    1
 15312 ;; Hardware stack levels required when called:    6
 15313 ;; This function calls:
 15314 ;;		Nothing
 15315 ;; This function is called by:
 15316 ;;		_LEDTimerON
 15317 ;; This function uses a non-reentrant model
 15318 ;;
 15319                           
 15320                           	psect	text18
 15321  00950C                     __ptext18:
 15322                           	opt stack 0
 15323  00950C                     _ResetTimer1:
 15324                           	opt stack 20
 15325                           
 15326                           ;Timer.c: 129: TMR1H = 0;
 15327                           
 15328                           ;incstack = 0
 15329  00950C  0E00               	movlw	0
 15330  00950E  6ECF               	movwf	4047,c	;volatile
 15331                           
 15332                           ;Timer.c: 130: TMR1L = 2;
 15333  009510  0E02               	movlw	2
 15334  009512  6ECE               	movwf	4046,c	;volatile
 15335  009514  0012               	return		;funcret
 15336  009516                     __end_of_ResetTimer1:
 15337                           	opt stack 0
 15338                           tblptru	equ	0xFF8
 15339                           tblptrh	equ	0xFF7
 15340                           tblptrl	equ	0xFF6
 15341                           tablat	equ	0xFF5
 15342                           prodh	equ	0xFF4
 15343                           prodl	equ	0xFF3
 15344                           intcon	equ	0xFF2
 15345                           indf0	equ	0xFEF
 15346                           postinc0	equ	0xFEE
 15347                           fsr0h	equ	0xFEA
 15348                           fsr0l	equ	0xFE9
 15349                           wreg	equ	0xFE8
 15350                           indf1	equ	0xFE7
 15351                           postdec1	equ	0xFE5
 15352                           fsr1h	equ	0xFE2
 15353                           fsr1l	equ	0xFE1
 15354                           indf2	equ	0xFDF
 15355                           postinc2	equ	0xFDE
 15356                           fsr2h	equ	0xFDA
 15357                           fsr2l	equ	0xFD9
 15358                           status	equ	0xFD8
 15359                           
 15360 ;; *************** function _SendNEC_wait *****************
 15361 ;; Defined at:
 15362 ;;		line 427 in file "IR.c"
 15363 ;; Parameters:    Size  Location     Type
 15364 ;;  code            4   46[BANK0 ] unsigned long 
 15365 ;;  RepeatAmount    1   50[BANK0 ] unsigned char 
 15366 ;; Auto vars:     Size  Location     Type
 15367 ;;  toggle          1   51[BANK0 ] unsigned char 
 15368 ;; Return value:  Size  Location     Type
 15369 ;;		None               void
 15370 ;; Registers used:
 15371 ;;		wreg, status,2, status,0, cstack
 15372 ;; Tracked objects:
 15373 ;;		On entry : 0/0
 15374 ;;		On exit  : 0/0
 15375 ;;		Unchanged: 0/0
 15376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15377 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15378 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15380 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15381 ;;Total ram usage:        6 bytes
 15382 ;; Hardware stack levels used:    1
 15383 ;; Hardware stack levels required when called:    8
 15384 ;; This function calls:
 15385 ;;		_CheckReceivingIR
 15386 ;;		_ReadIRpin
 15387 ;;		_SendNEC_bytes
 15388 ;;		_delayUS
 15389 ;; This function is called by:
 15390 ;;		_UseBluetooth
 15391 ;; This function uses a non-reentrant model
 15392 ;;
 15393                           
 15394                           	psect	text19
 15395  00858C                     __ptext19:
 15396                           	opt stack 0
 15397  00858C                     _SendNEC_wait:
 15398                           	opt stack 21
 15399                           
 15400                           ;IR.c: 429: unsigned char toggle = 0;
 15401                           
 15402                           ;incstack = 0
 15403  00858C  0E00               	movlw	0
 15404  00858E  0100               	movlb	0	; () banked
 15405  008590  6F93               	movwf	SendNEC_wait@toggle& (0+255),b
 15406                           
 15407                           ; BSR set to: 0
 15408                           
 15409                           ;IR.c: 430: while(CheckReceivingIR());
 15410  008592  D000               	goto	l15160
 15411  008594                     l15160:
 15412  008594  EC2F  F04A         	call	_CheckReceivingIR	;wreg free
 15413  008598  0900               	iorlw	0
 15414  00859A  A4D8               	btfss	status,2,c
 15415  00859C  D7FB               	goto	l15160
 15416                           
 15417                           ;IR.c: 432: (IOCBbits.IOCB4 = 0);
 15418  00859E  987D               	bcf	3965,4,c	;volatile
 15419                           
 15420                           ;IR.c: 433: INTCONbits.RBIE = 0;
 15421  0085A0  96F2               	bcf	intcon,3,c	;volatile
 15422                           
 15423                           ;IR.c: 434: INTCONbits.PEIE = 0;
 15424  0085A2  9CF2               	bcf	intcon,6,c	;volatile
 15425                           
 15426                           ;IR.c: 436: SendNEC_bytes(code, RepeatAmount);
 15427  0085A4  C08E  F089         	movff	SendNEC_wait@code,SendNEC_bytes@code
 15428  0085A8  C08F  F08A         	movff	SendNEC_wait@code+1,SendNEC_bytes@code+1
 15429  0085AC  C090  F08B         	movff	SendNEC_wait@code+2,SendNEC_bytes@code+2
 15430  0085B0  C091  F08C         	movff	SendNEC_wait@code+3,SendNEC_bytes@code+3
 15431  0085B4  C092  F08D         	movff	SendNEC_wait@RepeatAmount,SendNEC_bytes@RepeatAmount
 15432  0085B8  ECEC  F043         	call	_SendNEC_bytes	;wreg free
 15433                           
 15434                           ;IR.c: 437: while(!Sent)
 15435  0085BC  D01C               	goto	l15182
 15436  0085BE                     l15164:
 15437                           
 15438                           ;IR.c: 438: {
 15439                           ;IR.c: 439: if(IRmod)
 15440  0085BE  0100               	movlb	0	; () banked
 15441  0085C0  51DE               	movf	_IRmod& (0+255),w,b	;volatile
 15442  0085C2  B4D8               	btfsc	status,2,c
 15443  0085C4  D013               	goto	l15178
 15444                           
 15445                           ; BSR set to: 0
 15446                           ;IR.c: 440: {
 15447                           ;IR.c: 442: if(toggle < 9)
 15448  0085C6  0E09               	movlw	9
 15449  0085C8  0100               	movlb	0	; () banked
 15450  0085CA  6193               	cpfslt	SendNEC_wait@toggle& (0+255),b
 15451  0085CC  D002               	goto	l15170
 15452                           
 15453                           ; BSR set to: 0
 15454                           ;IR.c: 443: {
 15455                           ;IR.c: 444: (LATC |= 0x08);
 15456  0085CE  868B               	bsf	3979,3,c	;volatile
 15457                           
 15458                           ;IR.c: 445: }
 15459  0085D0  D00A               	goto	l15176
 15460  0085D2                     l15170:
 15461                           
 15462                           ; BSR set to: 0
 15463                           ;IR.c: 446: else if(toggle < 17)
 15464  0085D2  0E11               	movlw	17
 15465  0085D4  0100               	movlb	0	; () banked
 15466  0085D6  6193               	cpfslt	SendNEC_wait@toggle& (0+255),b
 15467  0085D8  D002               	goto	l15174
 15468                           
 15469                           ; BSR set to: 0
 15470                           ;IR.c: 447: {
 15471                           ;IR.c: 448: (LATC &= ~0x08);
 15472  0085DA  968B               	bcf	3979,3,c	;volatile
 15473                           
 15474                           ;IR.c: 449: }
 15475  0085DC  D004               	goto	l15176
 15476  0085DE                     l15174:
 15477                           
 15478                           ; BSR set to: 0
 15479                           ;IR.c: 450: else
 15480                           ;IR.c: 451: {
 15481                           ;IR.c: 452: toggle = 0;
 15482  0085DE  0E00               	movlw	0
 15483  0085E0  0100               	movlb	0	; () banked
 15484  0085E2  6F93               	movwf	SendNEC_wait@toggle& (0+255),b
 15485                           
 15486                           ; BSR set to: 0
 15487  0085E4  D000               	goto	l15176
 15488  0085E6                     l15176:
 15489                           
 15490                           ; BSR set to: 0
 15491                           ;IR.c: 453: }
 15492                           ;IR.c: 454: toggle++;
 15493  0085E6  0100               	movlb	0	; () banked
 15494  0085E8  2B93               	incf	SendNEC_wait@toggle& (0+255),f,b
 15495                           
 15496                           ;IR.c: 455: }
 15497  0085EA  D005               	goto	l15182
 15498  0085EC                     l15178:
 15499                           
 15500                           ; BSR set to: 0
 15501                           ;IR.c: 456: else
 15502                           ;IR.c: 457: {
 15503                           ;IR.c: 458: (LATC &= ~0x08);
 15504  0085EC  968B               	bcf	3979,3,c	;volatile
 15505                           
 15506                           ; BSR set to: 0
 15507                           ;IR.c: 459: toggle = 0;
 15508  0085EE  0E00               	movlw	0
 15509  0085F0  0100               	movlb	0	; () banked
 15510  0085F2  6F93               	movwf	SendNEC_wait@toggle& (0+255),b
 15511                           
 15512                           ; BSR set to: 0
 15513  0085F4  D000               	goto	l15182
 15514  0085F6                     l15182:
 15515  0085F6  0100               	movlb	0	; () banked
 15516  0085F8  51E6               	movf	_Sent& (0+255),w,b	;volatile
 15517  0085FA  B4D8               	btfsc	status,2,c
 15518  0085FC  D7E0               	goto	l15164
 15519                           
 15520                           ; BSR set to: 0
 15521                           ;IR.c: 460: }
 15522                           ;IR.c: 461: }
 15523                           ;IR.c: 463: if(IRbitPosition)
 15524                           
 15525                           ; BSR set to: 0
 15526  0085FE  5040               	movf	_IRbitPosition,w,c	;volatile
 15527  008600  A4D8               	btfss	status,2,c
 15528                           
 15529                           ; BSR set to: 0
 15530                           ;IR.c: 464: {
 15531                           ;IR.c: 466: __nop();
 15532  008602  F000               	nop	
 15533                           
 15534                           ;IR.c: 467: }
 15535                           ;IR.c: 469: INTCONbits.PEIE = 1;
 15536  008604  8CF2               	bsf	intcon,6,c	;volatile
 15537                           
 15538                           ;IR.c: 470: delayUS(8000);
 15539  008606  0E40               	movlw	64
 15540  008608  0100               	movlb	0	; () banked
 15541  00860A  6F79               	movwf	delayUS@US& (0+255),b
 15542  00860C  0E1F               	movlw	31
 15543  00860E  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 15544  008610  0E00               	movlw	0
 15545  008612  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 15546  008614  0E00               	movlw	0
 15547  008616  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 15548  008618  EC48  F047         	call	_delayUS	;wreg free
 15549                           
 15550                           ;IR.c: 471: IRpinOLD = ReadIRpin();
 15551  00861C  EC63  F04A         	call	_ReadIRpin	;wreg free
 15552  008620  6E2E               	movwf	_IRpinOLD,c
 15553                           
 15554                           ;IR.c: 472: INTCONbits.RBIF = 0;
 15555  008622  90F2               	bcf	intcon,0,c	;volatile
 15556                           
 15557                           ;IR.c: 473: (IOCBbits.IOCB4 = 1);
 15558  008624  887D               	bsf	3965,4,c	;volatile
 15559                           
 15560                           ;IR.c: 474: INTCONbits.RBIE = 1;
 15561  008626  86F2               	bsf	intcon,3,c	;volatile
 15562  008628  0012               	return		;funcret
 15563  00862A                     __end_of_SendNEC_wait:
 15564                           	opt stack 0
 15565                           tblptru	equ	0xFF8
 15566                           tblptrh	equ	0xFF7
 15567                           tblptrl	equ	0xFF6
 15568                           tablat	equ	0xFF5
 15569                           prodh	equ	0xFF4
 15570                           prodl	equ	0xFF3
 15571                           intcon	equ	0xFF2
 15572                           indf0	equ	0xFEF
 15573                           postinc0	equ	0xFEE
 15574                           fsr0h	equ	0xFEA
 15575                           fsr0l	equ	0xFE9
 15576                           wreg	equ	0xFE8
 15577                           indf1	equ	0xFE7
 15578                           postdec1	equ	0xFE5
 15579                           fsr1h	equ	0xFE2
 15580                           fsr1l	equ	0xFE1
 15581                           indf2	equ	0xFDF
 15582                           postinc2	equ	0xFDE
 15583                           fsr2h	equ	0xFDA
 15584                           fsr2l	equ	0xFD9
 15585                           status	equ	0xFD8
 15586                           
 15587 ;; *************** function _SendNEC_bytes *****************
 15588 ;; Defined at:
 15589 ;;		line 364 in file "IR.c"
 15590 ;; Parameters:    Size  Location     Type
 15591 ;;  code            4   41[BANK0 ] unsigned long 
 15592 ;;  RepeatAmount    1   45[BANK0 ] unsigned char 
 15593 ;; Auto vars:     Size  Location     Type
 15594 ;;		None
 15595 ;; Return value:  Size  Location     Type
 15596 ;;                  1    wreg      unsigned char 
 15597 ;; Registers used:
 15598 ;;		wreg, status,2, status,0, cstack
 15599 ;; Tracked objects:
 15600 ;;		On entry : 0/0
 15601 ;;		On exit  : 0/0
 15602 ;;		Unchanged: 0/0
 15603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15604 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15607 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15608 ;;Total ram usage:        5 bytes
 15609 ;; Hardware stack levels used:    1
 15610 ;; Hardware stack levels required when called:    7
 15611 ;; This function calls:
 15612 ;;		_Reverse_4Byte
 15613 ;; This function is called by:
 15614 ;;		_SendNEC_wait
 15615 ;; This function uses a non-reentrant model
 15616 ;;
 15617                           
 15618                           	psect	text20
 15619  0087D8                     __ptext20:
 15620                           	opt stack 0
 15621  0087D8                     _SendNEC_bytes:
 15622                           	opt stack 21
 15623                           
 15624                           ;IR.c: 393: if(Sent)
 15625                           
 15626                           ;incstack = 0
 15627  0087D8  0100               	movlb	0	; () banked
 15628  0087DA  51E6               	movf	_Sent& (0+255),w,b	;volatile
 15629  0087DC  B4D8               	btfsc	status,2,c
 15630  0087DE  0012               	return	
 15631                           
 15632                           ; BSR set to: 0
 15633                           ;IR.c: 394: {
 15634                           ;IR.c: 396: if(!code)
 15635  0087E0  0100               	movlb	0	; () banked
 15636  0087E2  5189               	movf	SendNEC_bytes@code& (0+255),w,b
 15637  0087E4  0100               	movlb	0	; () banked
 15638  0087E6  118A               	iorwf	(SendNEC_bytes@code+1)& (0+255),w,b
 15639  0087E8  0100               	movlb	0	; () banked
 15640  0087EA  118B               	iorwf	(SendNEC_bytes@code+2)& (0+255),w,b
 15641  0087EC  0100               	movlb	0	; () banked
 15642  0087EE  118C               	iorwf	(SendNEC_bytes@code+3)& (0+255),w,b
 15643  0087F0  B4D8               	btfsc	status,2,c
 15644  0087F2  0012               	return	
 15645  0087F4  D001               	goto	l14126
 15646                           
 15647                           ; BSR set to: 0
 15648                           ;IR.c: 397: {
 15649                           ;IR.c: 398: return 0;
 15650                           ;	Return value of _SendNEC_bytes is never used
 15651  0087F6  0012               	return	
 15652  0087F8                     l14126:
 15653                           
 15654                           ; BSR set to: 0
 15655                           ;IR.c: 399: }
 15656                           ;IR.c: 400: RF_IR = 66;
 15657  0087F8  0E42               	movlw	66
 15658  0087FA  6E42               	movwf	_RF_IR,c
 15659                           
 15660                           ;IR.c: 401: Sent = 0;
 15661  0087FC  0E00               	movlw	0
 15662  0087FE  0100               	movlb	0	; () banked
 15663  008800  6FE6               	movwf	_Sent& (0+255),b	;volatile
 15664                           
 15665                           ;IR.c: 402: IRsendFlag = 1;
 15666  008802  0E01               	movlw	1
 15667  008804  6E32               	movwf	_IRsendFlag,c
 15668                           
 15669                           ;IR.c: 403: IRcodeBit = 0;
 15670  008806  0E00               	movlw	0
 15671  008808  6E2D               	movwf	_IRcodeBit,c
 15672                           
 15673                           ;IR.c: 404: IRcodePlace = 7;
 15674  00880A  0E07               	movlw	7
 15675  00880C  6E41               	movwf	_IRcodePlace,c
 15676                           
 15677                           ; BSR set to: 0
 15678                           ;IR.c: 405: IRsendCode = Reverse_4Byte(code);
 15679  00880E  C089  F079         	movff	SendNEC_bytes@code,Reverse_4Byte@This
 15680  008812  C08A  F07A         	movff	SendNEC_bytes@code+1,Reverse_4Byte@This+1
 15681  008816  C08B  F07B         	movff	SendNEC_bytes@code+2,Reverse_4Byte@This+2
 15682  00881A  C08C  F07C         	movff	SendNEC_bytes@code+3,Reverse_4Byte@This+3
 15683  00881E  EC57  F018         	call	_Reverse_4Byte	;wreg free
 15684  008822  C079  F2E2         	movff	?_Reverse_4Byte,_IRsendCode
 15685  008826  C07A  F2E3         	movff	?_Reverse_4Byte+1,_IRsendCode+1
 15686  00882A  C07B  F2E4         	movff	?_Reverse_4Byte+2,_IRsendCode+2
 15687  00882E  C07C  F2E5         	movff	?_Reverse_4Byte+3,_IRsendCode+3
 15688                           
 15689                           ;IR.c: 406: if(RepeatAmount)
 15690  008832  0100               	movlb	0	; () banked
 15691  008834  518D               	movf	SendNEC_bytes@RepeatAmount& (0+255),w,b
 15692  008836  0100               	movlb	0	; () banked
 15693  008838  B4D8               	btfsc	status,2,c
 15694  00883A  D003               	goto	l14134
 15695                           
 15696                           ; BSR set to: 0
 15697                           ;IR.c: 407: {
 15698                           ;IR.c: 408: IRrepeatflag = 1;
 15699  00883C  0E01               	movlw	1
 15700  00883E  6E31               	movwf	_IRrepeatflag,c
 15701  008840  D000               	goto	l14134
 15702  008842                     l14134:
 15703                           
 15704                           ; BSR set to: 0
 15705                           ;IR.c: 409: }
 15706                           ;IR.c: 410: IRrepeatAmount = RepeatAmount;
 15707  008842  C08D  F030         	movff	SendNEC_bytes@RepeatAmount,_IRrepeatAmount
 15708                           
 15709                           ;IR.c: 411: (TMR2 = 0);
 15710  008846  0E00               	movlw	0
 15711  008848  6ECC               	movwf	4044,c	;volatile
 15712                           
 15713                           ;IR.c: 412: (PR2 = 150);
 15714  00884A  0E96               	movlw	150
 15715  00884C  6ECB               	movwf	4043,c	;volatile
 15716                           
 15717                           ;IR.c: 413: RF_IR_Postscaler = 4;
 15718  00884E  0E04               	movlw	4
 15719  008850  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 15720                           
 15721                           ;IR.c: 414: (IRmod = 1);
 15722  008852  0E01               	movlw	1
 15723  008854  0100               	movlb	0	; () banked
 15724  008856  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 15725                           
 15726                           ; BSR set to: 0
 15727                           ;IR.c: 415: (T2CONbits.TMR2ON = 1);
 15728  008858  84CA               	bsf	4042,2,c	;volatile
 15729                           
 15730                           ; BSR set to: 0
 15731                           ;IR.c: 416: return 1;
 15732                           ;	Return value of _SendNEC_bytes is never used
 15733  00885A  0012               	return	
 15734                           
 15735                           ; BSR set to: 0
 15736                           
 15737                           ; BSR set to: 0
 15738                           ;IR.c: 417: }
 15739                           ;IR.c: 418: return 2;
 15740                           ;	Return value of _SendNEC_bytes is never used
 15741  00885C  0012               	return		;funcret
 15742  00885E                     __end_of_SendNEC_bytes:
 15743                           	opt stack 0
 15744                           tblptru	equ	0xFF8
 15745                           tblptrh	equ	0xFF7
 15746                           tblptrl	equ	0xFF6
 15747                           tablat	equ	0xFF5
 15748                           prodh	equ	0xFF4
 15749                           prodl	equ	0xFF3
 15750                           intcon	equ	0xFF2
 15751                           indf0	equ	0xFEF
 15752                           postinc0	equ	0xFEE
 15753                           fsr0h	equ	0xFEA
 15754                           fsr0l	equ	0xFE9
 15755                           wreg	equ	0xFE8
 15756                           indf1	equ	0xFE7
 15757                           postdec1	equ	0xFE5
 15758                           fsr1h	equ	0xFE2
 15759                           fsr1l	equ	0xFE1
 15760                           indf2	equ	0xFDF
 15761                           postinc2	equ	0xFDE
 15762                           fsr2h	equ	0xFDA
 15763                           fsr2l	equ	0xFD9
 15764                           status	equ	0xFD8
 15765                           
 15766 ;; *************** function _Reverse_4Byte *****************
 15767 ;; Defined at:
 15768 ;;		line 412 in file "MISC.c"
 15769 ;; Parameters:    Size  Location     Type
 15770 ;;  This            4   25[BANK0 ] unsigned long 
 15771 ;; Auto vars:     Size  Location     Type
 15772 ;;  temp            4   37[BANK0 ] unsigned long 
 15773 ;; Return value:  Size  Location     Type
 15774 ;;                  4   25[BANK0 ] unsigned long 
 15775 ;; Registers used:
 15776 ;;		wreg, status,2, status,0
 15777 ;; Tracked objects:
 15778 ;;		On entry : 0/0
 15779 ;;		On exit  : 0/0
 15780 ;;		Unchanged: 0/0
 15781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15782 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15783 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15784 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15785 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15786 ;;Total ram usage:       16 bytes
 15787 ;; Hardware stack levels used:    1
 15788 ;; Hardware stack levels required when called:    6
 15789 ;; This function calls:
 15790 ;;		Nothing
 15791 ;; This function is called by:
 15792 ;;		_SendNEC_bytes
 15793 ;; This function uses a non-reentrant model
 15794 ;;
 15795                           
 15796                           	psect	text21
 15797  0030AE                     __ptext21:
 15798                           	opt stack 0
 15799  0030AE                     _Reverse_4Byte:
 15800                           	opt stack 21
 15801                           
 15802                           ;MISC.c: 414: unsigned long temp=0;
 15803                           
 15804                           ; BSR set to: 0
 15805                           ;incstack = 0
 15806  0030AE  0E00               	movlw	0
 15807  0030B0  0100               	movlb	0	; () banked
 15808  0030B2  6F85               	movwf	Reverse_4Byte@temp& (0+255),b
 15809  0030B4  0E00               	movlw	0
 15810  0030B6  6F86               	movwf	(Reverse_4Byte@temp+1)& (0+255),b
 15811  0030B8  0E00               	movlw	0
 15812  0030BA  6F87               	movwf	(Reverse_4Byte@temp+2)& (0+255),b
 15813  0030BC  0E00               	movlw	0
 15814  0030BE  6F88               	movwf	(Reverse_4Byte@temp+3)& (0+255),b
 15815                           
 15816                           ; BSR set to: 0
 15817                           ;MISC.c: 416: temp += (This & 0x00000001) << 31;
 15818  0030C0  0E01               	movlw	1
 15819  0030C2  0100               	movlb	0	; () banked
 15820  0030C4  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 15821  0030C6  0100               	movlb	0	; () banked
 15822  0030C8  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 15823  0030CA  0E00               	movlw	0
 15824  0030CC  0100               	movlb	0	; () banked
 15825  0030CE  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 15826  0030D0  0100               	movlb	0	; () banked
 15827  0030D2  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 15828  0030D4  0E00               	movlw	0
 15829  0030D6  0100               	movlb	0	; () banked
 15830  0030D8  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 15831  0030DA  0100               	movlb	0	; () banked
 15832  0030DC  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 15833  0030DE  0E00               	movlw	0
 15834  0030E0  0100               	movlb	0	; () banked
 15835  0030E2  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 15836  0030E4  0100               	movlb	0	; () banked
 15837  0030E6  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 15838  0030E8  0E1F               	movlw	31
 15839  0030EA                     u15855:
 15840  0030EA  90D8               	bcf	status,0,c
 15841  0030EC  0100               	movlb	0	; () banked
 15842  0030EE  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 15843  0030F0  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 15844  0030F2  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 15845  0030F4  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 15846  0030F6  2EE8               	decfsz	wreg,f,c
 15847  0030F8  D7F8               	goto	u15855
 15848  0030FA  0100               	movlb	0	; () banked
 15849  0030FC  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 15850  0030FE  0100               	movlb	0	; () banked
 15851  003100  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 15852  003102  0100               	movlb	0	; () banked
 15853  003104  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 15854  003106  0100               	movlb	0	; () banked
 15855  003108  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 15856  00310A  0100               	movlb	0	; () banked
 15857  00310C  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 15858  00310E  0100               	movlb	0	; () banked
 15859  003110  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 15860  003112  0100               	movlb	0	; () banked
 15861  003114  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 15862  003116  0100               	movlb	0	; () banked
 15863  003118  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 15864                           
 15865                           ; BSR set to: 0
 15866                           ;MISC.c: 417: temp += (This & 0x00000002) << 29;
 15867  00311A  0E02               	movlw	2
 15868  00311C  0100               	movlb	0	; () banked
 15869  00311E  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 15870  003120  0100               	movlb	0	; () banked
 15871  003122  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 15872  003124  0E00               	movlw	0
 15873  003126  0100               	movlb	0	; () banked
 15874  003128  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 15875  00312A  0100               	movlb	0	; () banked
 15876  00312C  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 15877  00312E  0E00               	movlw	0
 15878  003130  0100               	movlb	0	; () banked
 15879  003132  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 15880  003134  0100               	movlb	0	; () banked
 15881  003136  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 15882  003138  0E00               	movlw	0
 15883  00313A  0100               	movlb	0	; () banked
 15884  00313C  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 15885  00313E  0100               	movlb	0	; () banked
 15886  003140  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 15887  003142  0E1D               	movlw	29
 15888  003144                     u15865:
 15889  003144  90D8               	bcf	status,0,c
 15890  003146  0100               	movlb	0	; () banked
 15891  003148  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 15892  00314A  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 15893  00314C  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 15894  00314E  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 15895  003150  2EE8               	decfsz	wreg,f,c
 15896  003152  D7F8               	goto	u15865
 15897  003154  0100               	movlb	0	; () banked
 15898  003156  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 15899  003158  0100               	movlb	0	; () banked
 15900  00315A  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 15901  00315C  0100               	movlb	0	; () banked
 15902  00315E  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 15903  003160  0100               	movlb	0	; () banked
 15904  003162  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 15905  003164  0100               	movlb	0	; () banked
 15906  003166  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 15907  003168  0100               	movlb	0	; () banked
 15908  00316A  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 15909  00316C  0100               	movlb	0	; () banked
 15910  00316E  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 15911  003170  0100               	movlb	0	; () banked
 15912  003172  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 15913                           
 15914                           ; BSR set to: 0
 15915                           ;MISC.c: 418: temp += (This & 0x00000004) << 27;
 15916  003174  0E04               	movlw	4
 15917  003176  0100               	movlb	0	; () banked
 15918  003178  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 15919  00317A  0100               	movlb	0	; () banked
 15920  00317C  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 15921  00317E  0E00               	movlw	0
 15922  003180  0100               	movlb	0	; () banked
 15923  003182  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 15924  003184  0100               	movlb	0	; () banked
 15925  003186  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 15926  003188  0E00               	movlw	0
 15927  00318A  0100               	movlb	0	; () banked
 15928  00318C  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 15929  00318E  0100               	movlb	0	; () banked
 15930  003190  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 15931  003192  0E00               	movlw	0
 15932  003194  0100               	movlb	0	; () banked
 15933  003196  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 15934  003198  0100               	movlb	0	; () banked
 15935  00319A  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 15936  00319C  0E1B               	movlw	27
 15937  00319E                     u15875:
 15938  00319E  90D8               	bcf	status,0,c
 15939  0031A0  0100               	movlb	0	; () banked
 15940  0031A2  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 15941  0031A4  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 15942  0031A6  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 15943  0031A8  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 15944  0031AA  2EE8               	decfsz	wreg,f,c
 15945  0031AC  D7F8               	goto	u15875
 15946  0031AE  0100               	movlb	0	; () banked
 15947  0031B0  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 15948  0031B2  0100               	movlb	0	; () banked
 15949  0031B4  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 15950  0031B6  0100               	movlb	0	; () banked
 15951  0031B8  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 15952  0031BA  0100               	movlb	0	; () banked
 15953  0031BC  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 15954  0031BE  0100               	movlb	0	; () banked
 15955  0031C0  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 15956  0031C2  0100               	movlb	0	; () banked
 15957  0031C4  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 15958  0031C6  0100               	movlb	0	; () banked
 15959  0031C8  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 15960  0031CA  0100               	movlb	0	; () banked
 15961  0031CC  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 15962                           
 15963                           ; BSR set to: 0
 15964                           ;MISC.c: 419: temp += (This & 0x00000008) << 25;
 15965  0031CE  0E08               	movlw	8
 15966  0031D0  0100               	movlb	0	; () banked
 15967  0031D2  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 15968  0031D4  0100               	movlb	0	; () banked
 15969  0031D6  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 15970  0031D8  0E00               	movlw	0
 15971  0031DA  0100               	movlb	0	; () banked
 15972  0031DC  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 15973  0031DE  0100               	movlb	0	; () banked
 15974  0031E0  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 15975  0031E2  0E00               	movlw	0
 15976  0031E4  0100               	movlb	0	; () banked
 15977  0031E6  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 15978  0031E8  0100               	movlb	0	; () banked
 15979  0031EA  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 15980  0031EC  0E00               	movlw	0
 15981  0031EE  0100               	movlb	0	; () banked
 15982  0031F0  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 15983  0031F2  0100               	movlb	0	; () banked
 15984  0031F4  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 15985  0031F6  0E19               	movlw	25
 15986  0031F8                     u15885:
 15987  0031F8  90D8               	bcf	status,0,c
 15988  0031FA  0100               	movlb	0	; () banked
 15989  0031FC  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 15990  0031FE  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 15991  003200  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 15992  003202  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 15993  003204  2EE8               	decfsz	wreg,f,c
 15994  003206  D7F8               	goto	u15885
 15995  003208  0100               	movlb	0	; () banked
 15996  00320A  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 15997  00320C  0100               	movlb	0	; () banked
 15998  00320E  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 15999  003210  0100               	movlb	0	; () banked
 16000  003212  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16001  003214  0100               	movlb	0	; () banked
 16002  003216  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16003  003218  0100               	movlb	0	; () banked
 16004  00321A  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16005  00321C  0100               	movlb	0	; () banked
 16006  00321E  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16007  003220  0100               	movlb	0	; () banked
 16008  003222  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16009  003224  0100               	movlb	0	; () banked
 16010  003226  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16011                           
 16012                           ; BSR set to: 0
 16013                           ;MISC.c: 420: temp += (This & 0x00000010) << 23;
 16014  003228  0E10               	movlw	16
 16015  00322A  0100               	movlb	0	; () banked
 16016  00322C  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16017  00322E  0100               	movlb	0	; () banked
 16018  003230  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16019  003232  0E00               	movlw	0
 16020  003234  0100               	movlb	0	; () banked
 16021  003236  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16022  003238  0100               	movlb	0	; () banked
 16023  00323A  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16024  00323C  0E00               	movlw	0
 16025  00323E  0100               	movlb	0	; () banked
 16026  003240  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16027  003242  0100               	movlb	0	; () banked
 16028  003244  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16029  003246  0E00               	movlw	0
 16030  003248  0100               	movlb	0	; () banked
 16031  00324A  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16032  00324C  0100               	movlb	0	; () banked
 16033  00324E  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16034  003250  0E17               	movlw	23
 16035  003252                     u15895:
 16036  003252  90D8               	bcf	status,0,c
 16037  003254  0100               	movlb	0	; () banked
 16038  003256  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16039  003258  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16040  00325A  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16041  00325C  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16042  00325E  2EE8               	decfsz	wreg,f,c
 16043  003260  D7F8               	goto	u15895
 16044  003262  0100               	movlb	0	; () banked
 16045  003264  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16046  003266  0100               	movlb	0	; () banked
 16047  003268  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16048  00326A  0100               	movlb	0	; () banked
 16049  00326C  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16050  00326E  0100               	movlb	0	; () banked
 16051  003270  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16052  003272  0100               	movlb	0	; () banked
 16053  003274  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16054  003276  0100               	movlb	0	; () banked
 16055  003278  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16056  00327A  0100               	movlb	0	; () banked
 16057  00327C  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16058  00327E  0100               	movlb	0	; () banked
 16059  003280  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16060                           
 16061                           ; BSR set to: 0
 16062                           ;MISC.c: 421: temp += (This & 0x00000020) << 21;
 16063  003282  0E20               	movlw	32
 16064  003284  0100               	movlb	0	; () banked
 16065  003286  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16066  003288  0100               	movlb	0	; () banked
 16067  00328A  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16068  00328C  0E00               	movlw	0
 16069  00328E  0100               	movlb	0	; () banked
 16070  003290  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16071  003292  0100               	movlb	0	; () banked
 16072  003294  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16073  003296  0E00               	movlw	0
 16074  003298  0100               	movlb	0	; () banked
 16075  00329A  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16076  00329C  0100               	movlb	0	; () banked
 16077  00329E  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16078  0032A0  0E00               	movlw	0
 16079  0032A2  0100               	movlb	0	; () banked
 16080  0032A4  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16081  0032A6  0100               	movlb	0	; () banked
 16082  0032A8  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16083  0032AA  0E15               	movlw	21
 16084  0032AC                     u15905:
 16085  0032AC  90D8               	bcf	status,0,c
 16086  0032AE  0100               	movlb	0	; () banked
 16087  0032B0  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16088  0032B2  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16089  0032B4  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16090  0032B6  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16091  0032B8  2EE8               	decfsz	wreg,f,c
 16092  0032BA  D7F8               	goto	u15905
 16093  0032BC  0100               	movlb	0	; () banked
 16094  0032BE  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16095  0032C0  0100               	movlb	0	; () banked
 16096  0032C2  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16097  0032C4  0100               	movlb	0	; () banked
 16098  0032C6  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16099  0032C8  0100               	movlb	0	; () banked
 16100  0032CA  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16101  0032CC  0100               	movlb	0	; () banked
 16102  0032CE  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16103  0032D0  0100               	movlb	0	; () banked
 16104  0032D2  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16105  0032D4  0100               	movlb	0	; () banked
 16106  0032D6  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16107  0032D8  0100               	movlb	0	; () banked
 16108  0032DA  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16109                           
 16110                           ; BSR set to: 0
 16111                           ;MISC.c: 422: temp += (This & 0x00000040) << 19;
 16112  0032DC  0E40               	movlw	64
 16113  0032DE  0100               	movlb	0	; () banked
 16114  0032E0  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16115  0032E2  0100               	movlb	0	; () banked
 16116  0032E4  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16117  0032E6  0E00               	movlw	0
 16118  0032E8  0100               	movlb	0	; () banked
 16119  0032EA  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16120  0032EC  0100               	movlb	0	; () banked
 16121  0032EE  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16122  0032F0  0E00               	movlw	0
 16123  0032F2  0100               	movlb	0	; () banked
 16124  0032F4  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16125  0032F6  0100               	movlb	0	; () banked
 16126  0032F8  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16127  0032FA  0E00               	movlw	0
 16128  0032FC  0100               	movlb	0	; () banked
 16129  0032FE  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16130  003300  0100               	movlb	0	; () banked
 16131  003302  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16132  003304  0E13               	movlw	19
 16133  003306                     u15915:
 16134  003306  90D8               	bcf	status,0,c
 16135  003308  0100               	movlb	0	; () banked
 16136  00330A  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16137  00330C  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16138  00330E  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16139  003310  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16140  003312  2EE8               	decfsz	wreg,f,c
 16141  003314  D7F8               	goto	u15915
 16142  003316  0100               	movlb	0	; () banked
 16143  003318  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16144  00331A  0100               	movlb	0	; () banked
 16145  00331C  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16146  00331E  0100               	movlb	0	; () banked
 16147  003320  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16148  003322  0100               	movlb	0	; () banked
 16149  003324  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16150  003326  0100               	movlb	0	; () banked
 16151  003328  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16152  00332A  0100               	movlb	0	; () banked
 16153  00332C  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16154  00332E  0100               	movlb	0	; () banked
 16155  003330  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16156  003332  0100               	movlb	0	; () banked
 16157  003334  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16158                           
 16159                           ; BSR set to: 0
 16160                           ;MISC.c: 423: temp += (This & 0x00000080) << 17;
 16161  003336  0E80               	movlw	128
 16162  003338  0100               	movlb	0	; () banked
 16163  00333A  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16164  00333C  0100               	movlb	0	; () banked
 16165  00333E  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16166  003340  0E00               	movlw	0
 16167  003342  0100               	movlb	0	; () banked
 16168  003344  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16169  003346  0100               	movlb	0	; () banked
 16170  003348  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16171  00334A  0E00               	movlw	0
 16172  00334C  0100               	movlb	0	; () banked
 16173  00334E  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16174  003350  0100               	movlb	0	; () banked
 16175  003352  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16176  003354  0E00               	movlw	0
 16177  003356  0100               	movlb	0	; () banked
 16178  003358  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16179  00335A  0100               	movlb	0	; () banked
 16180  00335C  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16181  00335E  0E11               	movlw	17
 16182  003360                     u15925:
 16183  003360  90D8               	bcf	status,0,c
 16184  003362  0100               	movlb	0	; () banked
 16185  003364  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16186  003366  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16187  003368  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16188  00336A  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16189  00336C  2EE8               	decfsz	wreg,f,c
 16190  00336E  D7F8               	goto	u15925
 16191  003370  0100               	movlb	0	; () banked
 16192  003372  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16193  003374  0100               	movlb	0	; () banked
 16194  003376  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16195  003378  0100               	movlb	0	; () banked
 16196  00337A  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16197  00337C  0100               	movlb	0	; () banked
 16198  00337E  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16199  003380  0100               	movlb	0	; () banked
 16200  003382  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16201  003384  0100               	movlb	0	; () banked
 16202  003386  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16203  003388  0100               	movlb	0	; () banked
 16204  00338A  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16205  00338C  0100               	movlb	0	; () banked
 16206  00338E  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16207                           
 16208                           ; BSR set to: 0
 16209                           ;MISC.c: 424: temp += (This & 0x00000100) << 15;
 16210  003390  0E00               	movlw	0
 16211  003392  0100               	movlb	0	; () banked
 16212  003394  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16213  003396  0100               	movlb	0	; () banked
 16214  003398  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16215  00339A  0E01               	movlw	1
 16216  00339C  0100               	movlb	0	; () banked
 16217  00339E  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16218  0033A0  0100               	movlb	0	; () banked
 16219  0033A2  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16220  0033A4  0E00               	movlw	0
 16221  0033A6  0100               	movlb	0	; () banked
 16222  0033A8  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16223  0033AA  0100               	movlb	0	; () banked
 16224  0033AC  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16225  0033AE  0E00               	movlw	0
 16226  0033B0  0100               	movlb	0	; () banked
 16227  0033B2  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16228  0033B4  0100               	movlb	0	; () banked
 16229  0033B6  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16230  0033B8  0E0F               	movlw	15
 16231  0033BA                     u15935:
 16232  0033BA  90D8               	bcf	status,0,c
 16233  0033BC  0100               	movlb	0	; () banked
 16234  0033BE  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16235  0033C0  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16236  0033C2  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16237  0033C4  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16238  0033C6  2EE8               	decfsz	wreg,f,c
 16239  0033C8  D7F8               	goto	u15935
 16240  0033CA  0100               	movlb	0	; () banked
 16241  0033CC  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16242  0033CE  0100               	movlb	0	; () banked
 16243  0033D0  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16244  0033D2  0100               	movlb	0	; () banked
 16245  0033D4  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16246  0033D6  0100               	movlb	0	; () banked
 16247  0033D8  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16248  0033DA  0100               	movlb	0	; () banked
 16249  0033DC  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16250  0033DE  0100               	movlb	0	; () banked
 16251  0033E0  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16252  0033E2  0100               	movlb	0	; () banked
 16253  0033E4  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16254  0033E6  0100               	movlb	0	; () banked
 16255  0033E8  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16256                           
 16257                           ; BSR set to: 0
 16258                           ;MISC.c: 425: temp += (This & 0x00000200) << 13;
 16259  0033EA  0E00               	movlw	0
 16260  0033EC  0100               	movlb	0	; () banked
 16261  0033EE  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16262  0033F0  0100               	movlb	0	; () banked
 16263  0033F2  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16264  0033F4  0E02               	movlw	2
 16265  0033F6  0100               	movlb	0	; () banked
 16266  0033F8  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16267  0033FA  0100               	movlb	0	; () banked
 16268  0033FC  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16269  0033FE  0E00               	movlw	0
 16270  003400  0100               	movlb	0	; () banked
 16271  003402  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16272  003404  0100               	movlb	0	; () banked
 16273  003406  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16274  003408  0E00               	movlw	0
 16275  00340A  0100               	movlb	0	; () banked
 16276  00340C  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16277  00340E  0100               	movlb	0	; () banked
 16278  003410  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16279  003412  0E0D               	movlw	13
 16280  003414                     u15945:
 16281  003414  90D8               	bcf	status,0,c
 16282  003416  0100               	movlb	0	; () banked
 16283  003418  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16284  00341A  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16285  00341C  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16286  00341E  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16287  003420  2EE8               	decfsz	wreg,f,c
 16288  003422  D7F8               	goto	u15945
 16289  003424  0100               	movlb	0	; () banked
 16290  003426  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16291  003428  0100               	movlb	0	; () banked
 16292  00342A  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16293  00342C  0100               	movlb	0	; () banked
 16294  00342E  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16295  003430  0100               	movlb	0	; () banked
 16296  003432  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16297  003434  0100               	movlb	0	; () banked
 16298  003436  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16299  003438  0100               	movlb	0	; () banked
 16300  00343A  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16301  00343C  0100               	movlb	0	; () banked
 16302  00343E  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16303  003440  0100               	movlb	0	; () banked
 16304  003442  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16305                           
 16306                           ; BSR set to: 0
 16307                           ;MISC.c: 426: temp += (This & 0x00000400) << 11;
 16308  003444  0E00               	movlw	0
 16309  003446  0100               	movlb	0	; () banked
 16310  003448  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16311  00344A  0100               	movlb	0	; () banked
 16312  00344C  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16313  00344E  0E04               	movlw	4
 16314  003450  0100               	movlb	0	; () banked
 16315  003452  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16316  003454  0100               	movlb	0	; () banked
 16317  003456  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16318  003458  0E00               	movlw	0
 16319  00345A  0100               	movlb	0	; () banked
 16320  00345C  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16321  00345E  0100               	movlb	0	; () banked
 16322  003460  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16323  003462  0E00               	movlw	0
 16324  003464  0100               	movlb	0	; () banked
 16325  003466  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16326  003468  0100               	movlb	0	; () banked
 16327  00346A  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16328  00346C  0E0B               	movlw	11
 16329  00346E                     u15955:
 16330  00346E  90D8               	bcf	status,0,c
 16331  003470  0100               	movlb	0	; () banked
 16332  003472  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16333  003474  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16334  003476  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16335  003478  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16336  00347A  2EE8               	decfsz	wreg,f,c
 16337  00347C  D7F8               	goto	u15955
 16338  00347E  0100               	movlb	0	; () banked
 16339  003480  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16340  003482  0100               	movlb	0	; () banked
 16341  003484  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16342  003486  0100               	movlb	0	; () banked
 16343  003488  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16344  00348A  0100               	movlb	0	; () banked
 16345  00348C  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16346  00348E  0100               	movlb	0	; () banked
 16347  003490  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16348  003492  0100               	movlb	0	; () banked
 16349  003494  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16350  003496  0100               	movlb	0	; () banked
 16351  003498  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16352  00349A  0100               	movlb	0	; () banked
 16353  00349C  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16354                           
 16355                           ; BSR set to: 0
 16356                           ;MISC.c: 427: temp += (This & 0x00000800) << 9;
 16357  00349E  0E00               	movlw	0
 16358  0034A0  0100               	movlb	0	; () banked
 16359  0034A2  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16360  0034A4  0100               	movlb	0	; () banked
 16361  0034A6  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16362  0034A8  0E08               	movlw	8
 16363  0034AA  0100               	movlb	0	; () banked
 16364  0034AC  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16365  0034AE  0100               	movlb	0	; () banked
 16366  0034B0  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16367  0034B2  0E00               	movlw	0
 16368  0034B4  0100               	movlb	0	; () banked
 16369  0034B6  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16370  0034B8  0100               	movlb	0	; () banked
 16371  0034BA  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16372  0034BC  0E00               	movlw	0
 16373  0034BE  0100               	movlb	0	; () banked
 16374  0034C0  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16375  0034C2  0100               	movlb	0	; () banked
 16376  0034C4  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16377  0034C6  0E09               	movlw	9
 16378  0034C8                     u15965:
 16379  0034C8  90D8               	bcf	status,0,c
 16380  0034CA  0100               	movlb	0	; () banked
 16381  0034CC  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16382  0034CE  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16383  0034D0  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16384  0034D2  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16385  0034D4  2EE8               	decfsz	wreg,f,c
 16386  0034D6  D7F8               	goto	u15965
 16387  0034D8  0100               	movlb	0	; () banked
 16388  0034DA  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16389  0034DC  0100               	movlb	0	; () banked
 16390  0034DE  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16391  0034E0  0100               	movlb	0	; () banked
 16392  0034E2  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16393  0034E4  0100               	movlb	0	; () banked
 16394  0034E6  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16395  0034E8  0100               	movlb	0	; () banked
 16396  0034EA  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16397  0034EC  0100               	movlb	0	; () banked
 16398  0034EE  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16399  0034F0  0100               	movlb	0	; () banked
 16400  0034F2  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16401  0034F4  0100               	movlb	0	; () banked
 16402  0034F6  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16403                           
 16404                           ; BSR set to: 0
 16405                           ;MISC.c: 428: temp += (This & 0x00001000) << 7;
 16406  0034F8  0E00               	movlw	0
 16407  0034FA  0100               	movlb	0	; () banked
 16408  0034FC  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16409  0034FE  0100               	movlb	0	; () banked
 16410  003500  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16411  003502  0E10               	movlw	16
 16412  003504  0100               	movlb	0	; () banked
 16413  003506  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16414  003508  0100               	movlb	0	; () banked
 16415  00350A  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16416  00350C  0E00               	movlw	0
 16417  00350E  0100               	movlb	0	; () banked
 16418  003510  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16419  003512  0100               	movlb	0	; () banked
 16420  003514  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16421  003516  0E00               	movlw	0
 16422  003518  0100               	movlb	0	; () banked
 16423  00351A  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16424  00351C  0100               	movlb	0	; () banked
 16425  00351E  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16426  003520  0E07               	movlw	7
 16427  003522                     u15975:
 16428  003522  90D8               	bcf	status,0,c
 16429  003524  0100               	movlb	0	; () banked
 16430  003526  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16431  003528  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16432  00352A  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16433  00352C  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16434  00352E  2EE8               	decfsz	wreg,f,c
 16435  003530  D7F8               	goto	u15975
 16436  003532  0100               	movlb	0	; () banked
 16437  003534  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16438  003536  0100               	movlb	0	; () banked
 16439  003538  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16440  00353A  0100               	movlb	0	; () banked
 16441  00353C  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16442  00353E  0100               	movlb	0	; () banked
 16443  003540  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16444  003542  0100               	movlb	0	; () banked
 16445  003544  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16446  003546  0100               	movlb	0	; () banked
 16447  003548  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16448  00354A  0100               	movlb	0	; () banked
 16449  00354C  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16450  00354E  0100               	movlb	0	; () banked
 16451  003550  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16452                           
 16453                           ; BSR set to: 0
 16454                           ;MISC.c: 429: temp += (This & 0x00002000) << 5;
 16455  003552  0E00               	movlw	0
 16456  003554  0100               	movlb	0	; () banked
 16457  003556  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16458  003558  0100               	movlb	0	; () banked
 16459  00355A  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16460  00355C  0E20               	movlw	32
 16461  00355E  0100               	movlb	0	; () banked
 16462  003560  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16463  003562  0100               	movlb	0	; () banked
 16464  003564  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16465  003566  0E00               	movlw	0
 16466  003568  0100               	movlb	0	; () banked
 16467  00356A  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16468  00356C  0100               	movlb	0	; () banked
 16469  00356E  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16470  003570  0E00               	movlw	0
 16471  003572  0100               	movlb	0	; () banked
 16472  003574  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16473  003576  0100               	movlb	0	; () banked
 16474  003578  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16475  00357A  0E05               	movlw	5
 16476  00357C                     u15985:
 16477  00357C  90D8               	bcf	status,0,c
 16478  00357E  0100               	movlb	0	; () banked
 16479  003580  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16480  003582  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16481  003584  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16482  003586  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16483  003588  2EE8               	decfsz	wreg,f,c
 16484  00358A  D7F8               	goto	u15985
 16485  00358C  0100               	movlb	0	; () banked
 16486  00358E  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16487  003590  0100               	movlb	0	; () banked
 16488  003592  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16489  003594  0100               	movlb	0	; () banked
 16490  003596  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16491  003598  0100               	movlb	0	; () banked
 16492  00359A  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16493  00359C  0100               	movlb	0	; () banked
 16494  00359E  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16495  0035A0  0100               	movlb	0	; () banked
 16496  0035A2  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16497  0035A4  0100               	movlb	0	; () banked
 16498  0035A6  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16499  0035A8  0100               	movlb	0	; () banked
 16500  0035AA  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16501                           
 16502                           ; BSR set to: 0
 16503                           ;MISC.c: 430: temp += (This & 0x00004000) << 3;
 16504  0035AC  0E00               	movlw	0
 16505  0035AE  0100               	movlb	0	; () banked
 16506  0035B0  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16507  0035B2  0100               	movlb	0	; () banked
 16508  0035B4  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16509  0035B6  0E40               	movlw	64
 16510  0035B8  0100               	movlb	0	; () banked
 16511  0035BA  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16512  0035BC  0100               	movlb	0	; () banked
 16513  0035BE  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16514  0035C0  0E00               	movlw	0
 16515  0035C2  0100               	movlb	0	; () banked
 16516  0035C4  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16517  0035C6  0100               	movlb	0	; () banked
 16518  0035C8  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16519  0035CA  0E00               	movlw	0
 16520  0035CC  0100               	movlb	0	; () banked
 16521  0035CE  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16522  0035D0  0100               	movlb	0	; () banked
 16523  0035D2  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16524  0035D4  0E03               	movlw	3
 16525  0035D6                     u15995:
 16526  0035D6  90D8               	bcf	status,0,c
 16527  0035D8  0100               	movlb	0	; () banked
 16528  0035DA  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16529  0035DC  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16530  0035DE  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16531  0035E0  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16532  0035E2  2EE8               	decfsz	wreg,f,c
 16533  0035E4  D7F8               	goto	u15995
 16534  0035E6  0100               	movlb	0	; () banked
 16535  0035E8  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16536  0035EA  0100               	movlb	0	; () banked
 16537  0035EC  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16538  0035EE  0100               	movlb	0	; () banked
 16539  0035F0  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16540  0035F2  0100               	movlb	0	; () banked
 16541  0035F4  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16542  0035F6  0100               	movlb	0	; () banked
 16543  0035F8  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16544  0035FA  0100               	movlb	0	; () banked
 16545  0035FC  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16546  0035FE  0100               	movlb	0	; () banked
 16547  003600  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16548  003602  0100               	movlb	0	; () banked
 16549  003604  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16550                           
 16551                           ; BSR set to: 0
 16552                           ;MISC.c: 431: temp += (This & 0x00008000) << 1;
 16553  003606  0E00               	movlw	0
 16554  003608  0100               	movlb	0	; () banked
 16555  00360A  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16556  00360C  0100               	movlb	0	; () banked
 16557  00360E  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16558  003610  0E80               	movlw	128
 16559  003612  0100               	movlb	0	; () banked
 16560  003614  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16561  003616  0100               	movlb	0	; () banked
 16562  003618  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16563  00361A  0E00               	movlw	0
 16564  00361C  0100               	movlb	0	; () banked
 16565  00361E  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16566  003620  0100               	movlb	0	; () banked
 16567  003622  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16568  003624  0E00               	movlw	0
 16569  003626  0100               	movlb	0	; () banked
 16570  003628  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16571  00362A  0100               	movlb	0	; () banked
 16572  00362C  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16573  00362E  90D8               	bcf	status,0,c
 16574  003630  0100               	movlb	0	; () banked
 16575  003632  357D               	rlcf	??_Reverse_4Byte& (0+255),w,b
 16576  003634  0100               	movlb	0	; () banked
 16577  003636  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16578  003638  0100               	movlb	0	; () banked
 16579  00363A  357E               	rlcf	(??_Reverse_4Byte+1)& (0+255),w,b
 16580  00363C  0100               	movlb	0	; () banked
 16581  00363E  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16582  003640  0100               	movlb	0	; () banked
 16583  003642  357F               	rlcf	(??_Reverse_4Byte+2)& (0+255),w,b
 16584  003644  0100               	movlb	0	; () banked
 16585  003646  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16586  003648  0100               	movlb	0	; () banked
 16587  00364A  3580               	rlcf	(??_Reverse_4Byte+3)& (0+255),w,b
 16588  00364C  0100               	movlb	0	; () banked
 16589  00364E  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16590  003650  0100               	movlb	0	; () banked
 16591  003652  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16592  003654  0100               	movlb	0	; () banked
 16593  003656  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16594  003658  0100               	movlb	0	; () banked
 16595  00365A  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16596  00365C  0100               	movlb	0	; () banked
 16597  00365E  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16598  003660  0100               	movlb	0	; () banked
 16599  003662  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16600  003664  0100               	movlb	0	; () banked
 16601  003666  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16602  003668  0100               	movlb	0	; () banked
 16603  00366A  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16604  00366C  0100               	movlb	0	; () banked
 16605  00366E  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16606                           
 16607                           ; BSR set to: 0
 16608                           ;MISC.c: 432: temp += (This & 0x00010000) >> 1;
 16609  003670  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16610  003674  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16611  003678  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16612  00367C  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16613  003680  0100               	movlb	0	; () banked
 16614  003682  90D8               	bcf	status,0,c
 16615  003684  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16616  003686  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16617  003688  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16618  00368A  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16619  00368C  0E00               	movlw	0
 16620  00368E  0100               	movlb	0	; () banked
 16621  003690  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16622  003692  0100               	movlb	0	; () banked
 16623  003694  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16624  003696  0E80               	movlw	128
 16625  003698  0100               	movlb	0	; () banked
 16626  00369A  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16627  00369C  0100               	movlb	0	; () banked
 16628  00369E  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16629  0036A0  0E00               	movlw	0
 16630  0036A2  0100               	movlb	0	; () banked
 16631  0036A4  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16632  0036A6  0100               	movlb	0	; () banked
 16633  0036A8  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16634  0036AA  0E00               	movlw	0
 16635  0036AC  0100               	movlb	0	; () banked
 16636  0036AE  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16637  0036B0  0100               	movlb	0	; () banked
 16638  0036B2  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16639  0036B4  0100               	movlb	0	; () banked
 16640  0036B6  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16641  0036B8  0100               	movlb	0	; () banked
 16642  0036BA  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16643  0036BC  0100               	movlb	0	; () banked
 16644  0036BE  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16645  0036C0  0100               	movlb	0	; () banked
 16646  0036C2  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16647  0036C4  0100               	movlb	0	; () banked
 16648  0036C6  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16649  0036C8  0100               	movlb	0	; () banked
 16650  0036CA  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16651  0036CC  0100               	movlb	0	; () banked
 16652  0036CE  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16653  0036D0  0100               	movlb	0	; () banked
 16654  0036D2  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16655                           
 16656                           ; BSR set to: 0
 16657                           ;MISC.c: 433: temp += (This & 0x00020000) >> 3;
 16658  0036D4  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16659  0036D8  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16660  0036DC  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16661  0036E0  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16662  0036E4  0E04               	movlw	4
 16663  0036E6  D006               	goto	u16000
 16664  0036E8                     u16005:
 16665  0036E8  0100               	movlb	0	; () banked
 16666  0036EA  90D8               	bcf	status,0,c
 16667  0036EC  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16668  0036EE  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16669  0036F0  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16670  0036F2  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16671  0036F4                     u16000:
 16672  0036F4  2EE8               	decfsz	wreg,f,c
 16673  0036F6  D7F8               	goto	u16005
 16674  0036F8  0E00               	movlw	0
 16675  0036FA  0100               	movlb	0	; () banked
 16676  0036FC  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16677  0036FE  0100               	movlb	0	; () banked
 16678  003700  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16679  003702  0E40               	movlw	64
 16680  003704  0100               	movlb	0	; () banked
 16681  003706  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16682  003708  0100               	movlb	0	; () banked
 16683  00370A  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16684  00370C  0E00               	movlw	0
 16685  00370E  0100               	movlb	0	; () banked
 16686  003710  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16687  003712  0100               	movlb	0	; () banked
 16688  003714  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16689  003716  0E00               	movlw	0
 16690  003718  0100               	movlb	0	; () banked
 16691  00371A  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16692  00371C  0100               	movlb	0	; () banked
 16693  00371E  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16694  003720  0100               	movlb	0	; () banked
 16695  003722  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16696  003724  0100               	movlb	0	; () banked
 16697  003726  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16698  003728  0100               	movlb	0	; () banked
 16699  00372A  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16700  00372C  0100               	movlb	0	; () banked
 16701  00372E  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16702  003730  0100               	movlb	0	; () banked
 16703  003732  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16704  003734  0100               	movlb	0	; () banked
 16705  003736  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16706  003738  0100               	movlb	0	; () banked
 16707  00373A  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16708  00373C  0100               	movlb	0	; () banked
 16709  00373E  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16710                           
 16711                           ; BSR set to: 0
 16712                           ;MISC.c: 434: temp += (This & 0x00040000) >> 5;
 16713  003740  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16714  003744  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16715  003748  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16716  00374C  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16717  003750  0E06               	movlw	6
 16718  003752  D006               	goto	u16010
 16719  003754                     u16015:
 16720  003754  0100               	movlb	0	; () banked
 16721  003756  90D8               	bcf	status,0,c
 16722  003758  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16723  00375A  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16724  00375C  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16725  00375E  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16726  003760                     u16010:
 16727  003760  2EE8               	decfsz	wreg,f,c
 16728  003762  D7F8               	goto	u16015
 16729  003764  0E00               	movlw	0
 16730  003766  0100               	movlb	0	; () banked
 16731  003768  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16732  00376A  0100               	movlb	0	; () banked
 16733  00376C  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16734  00376E  0E20               	movlw	32
 16735  003770  0100               	movlb	0	; () banked
 16736  003772  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16737  003774  0100               	movlb	0	; () banked
 16738  003776  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16739  003778  0E00               	movlw	0
 16740  00377A  0100               	movlb	0	; () banked
 16741  00377C  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16742  00377E  0100               	movlb	0	; () banked
 16743  003780  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16744  003782  0E00               	movlw	0
 16745  003784  0100               	movlb	0	; () banked
 16746  003786  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16747  003788  0100               	movlb	0	; () banked
 16748  00378A  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16749  00378C  0100               	movlb	0	; () banked
 16750  00378E  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16751  003790  0100               	movlb	0	; () banked
 16752  003792  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16753  003794  0100               	movlb	0	; () banked
 16754  003796  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16755  003798  0100               	movlb	0	; () banked
 16756  00379A  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16757  00379C  0100               	movlb	0	; () banked
 16758  00379E  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16759  0037A0  0100               	movlb	0	; () banked
 16760  0037A2  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16761  0037A4  0100               	movlb	0	; () banked
 16762  0037A6  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16763  0037A8  0100               	movlb	0	; () banked
 16764  0037AA  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16765                           
 16766                           ; BSR set to: 0
 16767                           ;MISC.c: 435: temp += (This & 0x00080000) >> 7;
 16768  0037AC  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16769  0037B0  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16770  0037B4  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16771  0037B8  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16772  0037BC  0E08               	movlw	8
 16773  0037BE  D006               	goto	u16020
 16774  0037C0                     u16025:
 16775  0037C0  0100               	movlb	0	; () banked
 16776  0037C2  90D8               	bcf	status,0,c
 16777  0037C4  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16778  0037C6  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16779  0037C8  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16780  0037CA  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16781  0037CC                     u16020:
 16782  0037CC  2EE8               	decfsz	wreg,f,c
 16783  0037CE  D7F8               	goto	u16025
 16784  0037D0  0E00               	movlw	0
 16785  0037D2  0100               	movlb	0	; () banked
 16786  0037D4  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16787  0037D6  0100               	movlb	0	; () banked
 16788  0037D8  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16789  0037DA  0E10               	movlw	16
 16790  0037DC  0100               	movlb	0	; () banked
 16791  0037DE  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16792  0037E0  0100               	movlb	0	; () banked
 16793  0037E2  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16794  0037E4  0E00               	movlw	0
 16795  0037E6  0100               	movlb	0	; () banked
 16796  0037E8  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16797  0037EA  0100               	movlb	0	; () banked
 16798  0037EC  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16799  0037EE  0E00               	movlw	0
 16800  0037F0  0100               	movlb	0	; () banked
 16801  0037F2  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16802  0037F4  0100               	movlb	0	; () banked
 16803  0037F6  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16804  0037F8  0100               	movlb	0	; () banked
 16805  0037FA  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16806  0037FC  0100               	movlb	0	; () banked
 16807  0037FE  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16808  003800  0100               	movlb	0	; () banked
 16809  003802  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16810  003804  0100               	movlb	0	; () banked
 16811  003806  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16812  003808  0100               	movlb	0	; () banked
 16813  00380A  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16814  00380C  0100               	movlb	0	; () banked
 16815  00380E  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16816  003810  0100               	movlb	0	; () banked
 16817  003812  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16818  003814  0100               	movlb	0	; () banked
 16819  003816  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16820                           
 16821                           ; BSR set to: 0
 16822                           ;MISC.c: 436: temp += (This & 0x00100000) >> 9;
 16823  003818  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16824  00381C  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16825  003820  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16826  003824  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16827  003828  0E0A               	movlw	10
 16828  00382A  D006               	goto	u16030
 16829  00382C                     u16035:
 16830  00382C  0100               	movlb	0	; () banked
 16831  00382E  90D8               	bcf	status,0,c
 16832  003830  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16833  003832  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16834  003834  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16835  003836  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16836  003838                     u16030:
 16837  003838  2EE8               	decfsz	wreg,f,c
 16838  00383A  D7F8               	goto	u16035
 16839  00383C  0E00               	movlw	0
 16840  00383E  0100               	movlb	0	; () banked
 16841  003840  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16842  003842  0100               	movlb	0	; () banked
 16843  003844  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16844  003846  0E08               	movlw	8
 16845  003848  0100               	movlb	0	; () banked
 16846  00384A  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16847  00384C  0100               	movlb	0	; () banked
 16848  00384E  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16849  003850  0E00               	movlw	0
 16850  003852  0100               	movlb	0	; () banked
 16851  003854  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16852  003856  0100               	movlb	0	; () banked
 16853  003858  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16854  00385A  0E00               	movlw	0
 16855  00385C  0100               	movlb	0	; () banked
 16856  00385E  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16857  003860  0100               	movlb	0	; () banked
 16858  003862  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16859  003864  0100               	movlb	0	; () banked
 16860  003866  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16861  003868  0100               	movlb	0	; () banked
 16862  00386A  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16863  00386C  0100               	movlb	0	; () banked
 16864  00386E  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16865  003870  0100               	movlb	0	; () banked
 16866  003872  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16867  003874  0100               	movlb	0	; () banked
 16868  003876  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16869  003878  0100               	movlb	0	; () banked
 16870  00387A  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16871  00387C  0100               	movlb	0	; () banked
 16872  00387E  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16873  003880  0100               	movlb	0	; () banked
 16874  003882  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16875                           
 16876                           ; BSR set to: 0
 16877                           ;MISC.c: 437: temp += (This & 0x00200000) >> 11;
 16878  003884  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16879  003888  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16880  00388C  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16881  003890  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16882  003894  0E0C               	movlw	12
 16883  003896  D006               	goto	u16040
 16884  003898                     u16045:
 16885  003898  0100               	movlb	0	; () banked
 16886  00389A  90D8               	bcf	status,0,c
 16887  00389C  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16888  00389E  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16889  0038A0  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16890  0038A2  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16891  0038A4                     u16040:
 16892  0038A4  2EE8               	decfsz	wreg,f,c
 16893  0038A6  D7F8               	goto	u16045
 16894  0038A8  0E00               	movlw	0
 16895  0038AA  0100               	movlb	0	; () banked
 16896  0038AC  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16897  0038AE  0100               	movlb	0	; () banked
 16898  0038B0  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16899  0038B2  0E04               	movlw	4
 16900  0038B4  0100               	movlb	0	; () banked
 16901  0038B6  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16902  0038B8  0100               	movlb	0	; () banked
 16903  0038BA  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16904  0038BC  0E00               	movlw	0
 16905  0038BE  0100               	movlb	0	; () banked
 16906  0038C0  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16907  0038C2  0100               	movlb	0	; () banked
 16908  0038C4  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16909  0038C6  0E00               	movlw	0
 16910  0038C8  0100               	movlb	0	; () banked
 16911  0038CA  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16912  0038CC  0100               	movlb	0	; () banked
 16913  0038CE  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16914  0038D0  0100               	movlb	0	; () banked
 16915  0038D2  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16916  0038D4  0100               	movlb	0	; () banked
 16917  0038D6  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16918  0038D8  0100               	movlb	0	; () banked
 16919  0038DA  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16920  0038DC  0100               	movlb	0	; () banked
 16921  0038DE  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16922  0038E0  0100               	movlb	0	; () banked
 16923  0038E2  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16924  0038E4  0100               	movlb	0	; () banked
 16925  0038E6  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16926  0038E8  0100               	movlb	0	; () banked
 16927  0038EA  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16928  0038EC  0100               	movlb	0	; () banked
 16929  0038EE  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16930                           
 16931                           ; BSR set to: 0
 16932                           ;MISC.c: 438: temp += (This & 0x00400000) >> 13;
 16933  0038F0  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16934  0038F4  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16935  0038F8  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16936  0038FC  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16937  003900  0E0E               	movlw	14
 16938  003902  D006               	goto	u16050
 16939  003904                     u16055:
 16940  003904  0100               	movlb	0	; () banked
 16941  003906  90D8               	bcf	status,0,c
 16942  003908  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16943  00390A  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16944  00390C  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16945  00390E  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16946  003910                     u16050:
 16947  003910  2EE8               	decfsz	wreg,f,c
 16948  003912  D7F8               	goto	u16055
 16949  003914  0E00               	movlw	0
 16950  003916  0100               	movlb	0	; () banked
 16951  003918  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16952  00391A  0100               	movlb	0	; () banked
 16953  00391C  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16954  00391E  0E02               	movlw	2
 16955  003920  0100               	movlb	0	; () banked
 16956  003922  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16957  003924  0100               	movlb	0	; () banked
 16958  003926  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16959  003928  0E00               	movlw	0
 16960  00392A  0100               	movlb	0	; () banked
 16961  00392C  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16962  00392E  0100               	movlb	0	; () banked
 16963  003930  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16964  003932  0E00               	movlw	0
 16965  003934  0100               	movlb	0	; () banked
 16966  003936  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16967  003938  0100               	movlb	0	; () banked
 16968  00393A  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16969  00393C  0100               	movlb	0	; () banked
 16970  00393E  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16971  003940  0100               	movlb	0	; () banked
 16972  003942  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16973  003944  0100               	movlb	0	; () banked
 16974  003946  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16975  003948  0100               	movlb	0	; () banked
 16976  00394A  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16977  00394C  0100               	movlb	0	; () banked
 16978  00394E  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16979  003950  0100               	movlb	0	; () banked
 16980  003952  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16981  003954  0100               	movlb	0	; () banked
 16982  003956  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16983  003958  0100               	movlb	0	; () banked
 16984  00395A  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16985                           
 16986                           ; BSR set to: 0
 16987                           ;MISC.c: 439: temp += (This & 0x00800000) >> 15;
 16988  00395C  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16989  003960  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16990  003964  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16991  003968  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16992  00396C  0E10               	movlw	16
 16993  00396E  D006               	goto	u16060
 16994  003970                     u16065:
 16995  003970  0100               	movlb	0	; () banked
 16996  003972  90D8               	bcf	status,0,c
 16997  003974  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16998  003976  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16999  003978  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17000  00397A  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17001  00397C                     u16060:
 17002  00397C  2EE8               	decfsz	wreg,f,c
 17003  00397E  D7F8               	goto	u16065
 17004  003980  0E00               	movlw	0
 17005  003982  0100               	movlb	0	; () banked
 17006  003984  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17007  003986  0100               	movlb	0	; () banked
 17008  003988  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17009  00398A  0E01               	movlw	1
 17010  00398C  0100               	movlb	0	; () banked
 17011  00398E  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17012  003990  0100               	movlb	0	; () banked
 17013  003992  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17014  003994  0E00               	movlw	0
 17015  003996  0100               	movlb	0	; () banked
 17016  003998  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17017  00399A  0100               	movlb	0	; () banked
 17018  00399C  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17019  00399E  0E00               	movlw	0
 17020  0039A0  0100               	movlb	0	; () banked
 17021  0039A2  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17022  0039A4  0100               	movlb	0	; () banked
 17023  0039A6  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17024  0039A8  0100               	movlb	0	; () banked
 17025  0039AA  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17026  0039AC  0100               	movlb	0	; () banked
 17027  0039AE  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17028  0039B0  0100               	movlb	0	; () banked
 17029  0039B2  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17030  0039B4  0100               	movlb	0	; () banked
 17031  0039B6  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17032  0039B8  0100               	movlb	0	; () banked
 17033  0039BA  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17034  0039BC  0100               	movlb	0	; () banked
 17035  0039BE  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17036  0039C0  0100               	movlb	0	; () banked
 17037  0039C2  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17038  0039C4  0100               	movlb	0	; () banked
 17039  0039C6  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17040                           
 17041                           ; BSR set to: 0
 17042                           ;MISC.c: 440: temp += (This & 0x01000000) >> 17;
 17043  0039C8  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17044  0039CC  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17045  0039D0  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17046  0039D4  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17047  0039D8  0E12               	movlw	18
 17048  0039DA  D006               	goto	u16070
 17049  0039DC                     u16075:
 17050  0039DC  0100               	movlb	0	; () banked
 17051  0039DE  90D8               	bcf	status,0,c
 17052  0039E0  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17053  0039E2  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17054  0039E4  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17055  0039E6  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17056  0039E8                     u16070:
 17057  0039E8  2EE8               	decfsz	wreg,f,c
 17058  0039EA  D7F8               	goto	u16075
 17059  0039EC  0E80               	movlw	128
 17060  0039EE  0100               	movlb	0	; () banked
 17061  0039F0  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17062  0039F2  0100               	movlb	0	; () banked
 17063  0039F4  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17064  0039F6  0E00               	movlw	0
 17065  0039F8  0100               	movlb	0	; () banked
 17066  0039FA  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17067  0039FC  0100               	movlb	0	; () banked
 17068  0039FE  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17069  003A00  0E00               	movlw	0
 17070  003A02  0100               	movlb	0	; () banked
 17071  003A04  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17072  003A06  0100               	movlb	0	; () banked
 17073  003A08  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17074  003A0A  0E00               	movlw	0
 17075  003A0C  0100               	movlb	0	; () banked
 17076  003A0E  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17077  003A10  0100               	movlb	0	; () banked
 17078  003A12  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17079  003A14  0100               	movlb	0	; () banked
 17080  003A16  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17081  003A18  0100               	movlb	0	; () banked
 17082  003A1A  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17083  003A1C  0100               	movlb	0	; () banked
 17084  003A1E  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17085  003A20  0100               	movlb	0	; () banked
 17086  003A22  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17087  003A24  0100               	movlb	0	; () banked
 17088  003A26  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17089  003A28  0100               	movlb	0	; () banked
 17090  003A2A  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17091  003A2C  0100               	movlb	0	; () banked
 17092  003A2E  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17093  003A30  0100               	movlb	0	; () banked
 17094  003A32  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17095                           
 17096                           ; BSR set to: 0
 17097                           ;MISC.c: 441: temp += (This & 0x02000000) >> 19;
 17098  003A34  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17099  003A38  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17100  003A3C  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17101  003A40  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17102  003A44  0E14               	movlw	20
 17103  003A46  D006               	goto	u16080
 17104  003A48                     u16085:
 17105  003A48  0100               	movlb	0	; () banked
 17106  003A4A  90D8               	bcf	status,0,c
 17107  003A4C  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17108  003A4E  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17109  003A50  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17110  003A52  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17111  003A54                     u16080:
 17112  003A54  2EE8               	decfsz	wreg,f,c
 17113  003A56  D7F8               	goto	u16085
 17114  003A58  0E40               	movlw	64
 17115  003A5A  0100               	movlb	0	; () banked
 17116  003A5C  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17117  003A5E  0100               	movlb	0	; () banked
 17118  003A60  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17119  003A62  0E00               	movlw	0
 17120  003A64  0100               	movlb	0	; () banked
 17121  003A66  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17122  003A68  0100               	movlb	0	; () banked
 17123  003A6A  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17124  003A6C  0E00               	movlw	0
 17125  003A6E  0100               	movlb	0	; () banked
 17126  003A70  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17127  003A72  0100               	movlb	0	; () banked
 17128  003A74  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17129  003A76  0E00               	movlw	0
 17130  003A78  0100               	movlb	0	; () banked
 17131  003A7A  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17132  003A7C  0100               	movlb	0	; () banked
 17133  003A7E  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17134  003A80  0100               	movlb	0	; () banked
 17135  003A82  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17136  003A84  0100               	movlb	0	; () banked
 17137  003A86  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17138  003A88  0100               	movlb	0	; () banked
 17139  003A8A  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17140  003A8C  0100               	movlb	0	; () banked
 17141  003A8E  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17142  003A90  0100               	movlb	0	; () banked
 17143  003A92  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17144  003A94  0100               	movlb	0	; () banked
 17145  003A96  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17146  003A98  0100               	movlb	0	; () banked
 17147  003A9A  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17148  003A9C  0100               	movlb	0	; () banked
 17149  003A9E  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17150                           
 17151                           ; BSR set to: 0
 17152                           ;MISC.c: 442: temp += (This & 0x04000000) >> 21;
 17153  003AA0  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17154  003AA4  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17155  003AA8  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17156  003AAC  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17157  003AB0  0E16               	movlw	22
 17158  003AB2  D006               	goto	u16090
 17159  003AB4                     u16095:
 17160  003AB4  0100               	movlb	0	; () banked
 17161  003AB6  90D8               	bcf	status,0,c
 17162  003AB8  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17163  003ABA  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17164  003ABC  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17165  003ABE  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17166  003AC0                     u16090:
 17167  003AC0  2EE8               	decfsz	wreg,f,c
 17168  003AC2  D7F8               	goto	u16095
 17169  003AC4  0E20               	movlw	32
 17170  003AC6  0100               	movlb	0	; () banked
 17171  003AC8  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17172  003ACA  0100               	movlb	0	; () banked
 17173  003ACC  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17174  003ACE  0E00               	movlw	0
 17175  003AD0  0100               	movlb	0	; () banked
 17176  003AD2  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17177  003AD4  0100               	movlb	0	; () banked
 17178  003AD6  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17179  003AD8  0E00               	movlw	0
 17180  003ADA  0100               	movlb	0	; () banked
 17181  003ADC  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17182  003ADE  0100               	movlb	0	; () banked
 17183  003AE0  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17184  003AE2  0E00               	movlw	0
 17185  003AE4  0100               	movlb	0	; () banked
 17186  003AE6  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17187  003AE8  0100               	movlb	0	; () banked
 17188  003AEA  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17189  003AEC  0100               	movlb	0	; () banked
 17190  003AEE  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17191  003AF0  0100               	movlb	0	; () banked
 17192  003AF2  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17193  003AF4  0100               	movlb	0	; () banked
 17194  003AF6  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17195  003AF8  0100               	movlb	0	; () banked
 17196  003AFA  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17197  003AFC  0100               	movlb	0	; () banked
 17198  003AFE  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17199  003B00  0100               	movlb	0	; () banked
 17200  003B02  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17201  003B04  0100               	movlb	0	; () banked
 17202  003B06  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17203  003B08  0100               	movlb	0	; () banked
 17204  003B0A  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17205                           
 17206                           ; BSR set to: 0
 17207                           ;MISC.c: 443: temp += (This & 0x08000000) >> 23;
 17208  003B0C  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17209  003B10  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17210  003B14  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17211  003B18  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17212  003B1C  0E18               	movlw	24
 17213  003B1E  D006               	goto	u16100
 17214  003B20                     u16105:
 17215  003B20  0100               	movlb	0	; () banked
 17216  003B22  90D8               	bcf	status,0,c
 17217  003B24  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17218  003B26  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17219  003B28  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17220  003B2A  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17221  003B2C                     u16100:
 17222  003B2C  2EE8               	decfsz	wreg,f,c
 17223  003B2E  D7F8               	goto	u16105
 17224  003B30  0E10               	movlw	16
 17225  003B32  0100               	movlb	0	; () banked
 17226  003B34  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17227  003B36  0100               	movlb	0	; () banked
 17228  003B38  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17229  003B3A  0E00               	movlw	0
 17230  003B3C  0100               	movlb	0	; () banked
 17231  003B3E  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17232  003B40  0100               	movlb	0	; () banked
 17233  003B42  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17234  003B44  0E00               	movlw	0
 17235  003B46  0100               	movlb	0	; () banked
 17236  003B48  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17237  003B4A  0100               	movlb	0	; () banked
 17238  003B4C  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17239  003B4E  0E00               	movlw	0
 17240  003B50  0100               	movlb	0	; () banked
 17241  003B52  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17242  003B54  0100               	movlb	0	; () banked
 17243  003B56  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17244  003B58  0100               	movlb	0	; () banked
 17245  003B5A  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17246  003B5C  0100               	movlb	0	; () banked
 17247  003B5E  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17248  003B60  0100               	movlb	0	; () banked
 17249  003B62  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17250  003B64  0100               	movlb	0	; () banked
 17251  003B66  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17252  003B68  0100               	movlb	0	; () banked
 17253  003B6A  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17254  003B6C  0100               	movlb	0	; () banked
 17255  003B6E  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17256  003B70  0100               	movlb	0	; () banked
 17257  003B72  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17258  003B74  0100               	movlb	0	; () banked
 17259  003B76  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17260                           
 17261                           ; BSR set to: 0
 17262                           ;MISC.c: 444: temp += (This & 0x10000000) >> 25;
 17263  003B78  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17264  003B7C  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17265  003B80  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17266  003B84  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17267  003B88  0E1A               	movlw	26
 17268  003B8A  D006               	goto	u16110
 17269  003B8C                     u16115:
 17270  003B8C  0100               	movlb	0	; () banked
 17271  003B8E  90D8               	bcf	status,0,c
 17272  003B90  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17273  003B92  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17274  003B94  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17275  003B96  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17276  003B98                     u16110:
 17277  003B98  2EE8               	decfsz	wreg,f,c
 17278  003B9A  D7F8               	goto	u16115
 17279  003B9C  0E08               	movlw	8
 17280  003B9E  0100               	movlb	0	; () banked
 17281  003BA0  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17282  003BA2  0100               	movlb	0	; () banked
 17283  003BA4  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17284  003BA6  0E00               	movlw	0
 17285  003BA8  0100               	movlb	0	; () banked
 17286  003BAA  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17287  003BAC  0100               	movlb	0	; () banked
 17288  003BAE  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17289  003BB0  0E00               	movlw	0
 17290  003BB2  0100               	movlb	0	; () banked
 17291  003BB4  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17292  003BB6  0100               	movlb	0	; () banked
 17293  003BB8  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17294  003BBA  0E00               	movlw	0
 17295  003BBC  0100               	movlb	0	; () banked
 17296  003BBE  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17297  003BC0  0100               	movlb	0	; () banked
 17298  003BC2  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17299  003BC4  0100               	movlb	0	; () banked
 17300  003BC6  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17301  003BC8  0100               	movlb	0	; () banked
 17302  003BCA  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17303  003BCC  0100               	movlb	0	; () banked
 17304  003BCE  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17305  003BD0  0100               	movlb	0	; () banked
 17306  003BD2  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17307  003BD4  0100               	movlb	0	; () banked
 17308  003BD6  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17309  003BD8  0100               	movlb	0	; () banked
 17310  003BDA  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17311  003BDC  0100               	movlb	0	; () banked
 17312  003BDE  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17313  003BE0  0100               	movlb	0	; () banked
 17314  003BE2  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17315                           
 17316                           ; BSR set to: 0
 17317                           ;MISC.c: 445: temp += (This & 0x20000000) >> 27;
 17318  003BE4  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17319  003BE8  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17320  003BEC  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17321  003BF0  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17322  003BF4  0E1C               	movlw	28
 17323  003BF6  D006               	goto	u16120
 17324  003BF8                     u16125:
 17325  003BF8  0100               	movlb	0	; () banked
 17326  003BFA  90D8               	bcf	status,0,c
 17327  003BFC  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17328  003BFE  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17329  003C00  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17330  003C02  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17331  003C04                     u16120:
 17332  003C04  2EE8               	decfsz	wreg,f,c
 17333  003C06  D7F8               	goto	u16125
 17334  003C08  0E04               	movlw	4
 17335  003C0A  0100               	movlb	0	; () banked
 17336  003C0C  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17337  003C0E  0100               	movlb	0	; () banked
 17338  003C10  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17339  003C12  0E00               	movlw	0
 17340  003C14  0100               	movlb	0	; () banked
 17341  003C16  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17342  003C18  0100               	movlb	0	; () banked
 17343  003C1A  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17344  003C1C  0E00               	movlw	0
 17345  003C1E  0100               	movlb	0	; () banked
 17346  003C20  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17347  003C22  0100               	movlb	0	; () banked
 17348  003C24  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17349  003C26  0E00               	movlw	0
 17350  003C28  0100               	movlb	0	; () banked
 17351  003C2A  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17352  003C2C  0100               	movlb	0	; () banked
 17353  003C2E  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17354  003C30  0100               	movlb	0	; () banked
 17355  003C32  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17356  003C34  0100               	movlb	0	; () banked
 17357  003C36  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17358  003C38  0100               	movlb	0	; () banked
 17359  003C3A  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17360  003C3C  0100               	movlb	0	; () banked
 17361  003C3E  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17362  003C40  0100               	movlb	0	; () banked
 17363  003C42  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17364  003C44  0100               	movlb	0	; () banked
 17365  003C46  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17366  003C48  0100               	movlb	0	; () banked
 17367  003C4A  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17368  003C4C  0100               	movlb	0	; () banked
 17369  003C4E  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17370                           
 17371                           ; BSR set to: 0
 17372                           ;MISC.c: 446: temp += (This & 0x40000000) >> 29;
 17373  003C50  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17374  003C54  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17375  003C58  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17376  003C5C  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17377  003C60  0E1E               	movlw	30
 17378  003C62  D006               	goto	u16130
 17379  003C64                     u16135:
 17380  003C64  0100               	movlb	0	; () banked
 17381  003C66  90D8               	bcf	status,0,c
 17382  003C68  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17383  003C6A  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17384  003C6C  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17385  003C6E  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17386  003C70                     u16130:
 17387  003C70  2EE8               	decfsz	wreg,f,c
 17388  003C72  D7F8               	goto	u16135
 17389  003C74  0E02               	movlw	2
 17390  003C76  0100               	movlb	0	; () banked
 17391  003C78  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17392  003C7A  0100               	movlb	0	; () banked
 17393  003C7C  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17394  003C7E  0E00               	movlw	0
 17395  003C80  0100               	movlb	0	; () banked
 17396  003C82  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17397  003C84  0100               	movlb	0	; () banked
 17398  003C86  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17399  003C88  0E00               	movlw	0
 17400  003C8A  0100               	movlb	0	; () banked
 17401  003C8C  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17402  003C8E  0100               	movlb	0	; () banked
 17403  003C90  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17404  003C92  0E00               	movlw	0
 17405  003C94  0100               	movlb	0	; () banked
 17406  003C96  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17407  003C98  0100               	movlb	0	; () banked
 17408  003C9A  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17409  003C9C  0100               	movlb	0	; () banked
 17410  003C9E  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17411  003CA0  0100               	movlb	0	; () banked
 17412  003CA2  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17413  003CA4  0100               	movlb	0	; () banked
 17414  003CA6  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17415  003CA8  0100               	movlb	0	; () banked
 17416  003CAA  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17417  003CAC  0100               	movlb	0	; () banked
 17418  003CAE  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17419  003CB0  0100               	movlb	0	; () banked
 17420  003CB2  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17421  003CB4  0100               	movlb	0	; () banked
 17422  003CB6  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17423  003CB8  0100               	movlb	0	; () banked
 17424  003CBA  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17425                           
 17426                           ; BSR set to: 0
 17427                           ;MISC.c: 447: temp += (This & 0x80000000) >> 31;
 17428  003CBC  0E00               	movlw	0
 17429  003CBE  0100               	movlb	0	; () banked
 17430  003CC0  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 17431  003CC2  0100               	movlb	0	; () banked
 17432  003CC4  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 17433  003CC6  0E00               	movlw	0
 17434  003CC8  0100               	movlb	0	; () banked
 17435  003CCA  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17436  003CCC  0100               	movlb	0	; () banked
 17437  003CCE  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17438  003CD0  0E00               	movlw	0
 17439  003CD2  0100               	movlb	0	; () banked
 17440  003CD4  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17441  003CD6  0100               	movlb	0	; () banked
 17442  003CD8  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17443  003CDA  0E80               	movlw	128
 17444  003CDC  0100               	movlb	0	; () banked
 17445  003CDE  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17446  003CE0  0100               	movlb	0	; () banked
 17447  003CE2  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17448  003CE4  0E20               	movlw	32
 17449  003CE6  D006               	goto	u16140
 17450  003CE8                     u16145:
 17451  003CE8  0100               	movlb	0	; () banked
 17452  003CEA  90D8               	bcf	status,0,c
 17453  003CEC  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17454  003CEE  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17455  003CF0  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17456  003CF2  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17457  003CF4                     u16140:
 17458  003CF4  2EE8               	decfsz	wreg,f,c
 17459  003CF6  D7F8               	goto	u16145
 17460  003CF8  0100               	movlb	0	; () banked
 17461  003CFA  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 17462  003CFC  0100               	movlb	0	; () banked
 17463  003CFE  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17464  003D00  0100               	movlb	0	; () banked
 17465  003D02  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17466  003D04  0100               	movlb	0	; () banked
 17467  003D06  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17468  003D08  0100               	movlb	0	; () banked
 17469  003D0A  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17470  003D0C  0100               	movlb	0	; () banked
 17471  003D0E  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17472  003D10  0100               	movlb	0	; () banked
 17473  003D12  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17474  003D14  0100               	movlb	0	; () banked
 17475  003D16  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17476                           
 17477                           ; BSR set to: 0
 17478                           ;MISC.c: 449: return temp;
 17479  003D18  C085  F079         	movff	Reverse_4Byte@temp,?_Reverse_4Byte
 17480  003D1C  C086  F07A         	movff	Reverse_4Byte@temp+1,?_Reverse_4Byte+1
 17481  003D20  C087  F07B         	movff	Reverse_4Byte@temp+2,?_Reverse_4Byte+2
 17482  003D24  C088  F07C         	movff	Reverse_4Byte@temp+3,?_Reverse_4Byte+3
 17483  003D28  0012               	return	
 17484                           
 17485                           ; BSR set to: 0
 17486                           
 17487                           ; BSR set to: 0
 17488  003D2A  0012               	return		;funcret
 17489  003D2C                     __end_of_Reverse_4Byte:
 17490                           	opt stack 0
 17491                           tblptru	equ	0xFF8
 17492                           tblptrh	equ	0xFF7
 17493                           tblptrl	equ	0xFF6
 17494                           tablat	equ	0xFF5
 17495                           prodh	equ	0xFF4
 17496                           prodl	equ	0xFF3
 17497                           intcon	equ	0xFF2
 17498                           indf0	equ	0xFEF
 17499                           postinc0	equ	0xFEE
 17500                           fsr0h	equ	0xFEA
 17501                           fsr0l	equ	0xFE9
 17502                           wreg	equ	0xFE8
 17503                           indf1	equ	0xFE7
 17504                           postdec1	equ	0xFE5
 17505                           fsr1h	equ	0xFE2
 17506                           fsr1l	equ	0xFE1
 17507                           indf2	equ	0xFDF
 17508                           postinc2	equ	0xFDE
 17509                           fsr2h	equ	0xFDA
 17510                           fsr2l	equ	0xFD9
 17511                           status	equ	0xFD8
 17512                           
 17513 ;; *************** function _CheckReceivingIR *****************
 17514 ;; Defined at:
 17515 ;;		line 516 in file "IR.c"
 17516 ;; Parameters:    Size  Location     Type
 17517 ;;		None
 17518 ;; Auto vars:     Size  Location     Type
 17519 ;;		None
 17520 ;; Return value:  Size  Location     Type
 17521 ;;                  1    wreg      unsigned char 
 17522 ;; Registers used:
 17523 ;;		wreg, status,2, status,0
 17524 ;; Tracked objects:
 17525 ;;		On entry : 0/0
 17526 ;;		On exit  : 0/0
 17527 ;;		Unchanged: 0/0
 17528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17533 ;;Total ram usage:        0 bytes
 17534 ;; Hardware stack levels used:    1
 17535 ;; Hardware stack levels required when called:    6
 17536 ;; This function calls:
 17537 ;;		Nothing
 17538 ;; This function is called by:
 17539 ;;		_SendNEC_wait
 17540 ;; This function uses a non-reentrant model
 17541 ;;
 17542                           
 17543                           	psect	text22
 17544  00945E                     __ptext22:
 17545                           	opt stack 0
 17546  00945E                     _CheckReceivingIR:
 17547                           	opt stack 22
 17548                           
 17549                           ;IR.c: 518: if(ReceivingIR == 13)
 17550                           
 17551                           ; BSR set to: 0
 17552                           ;incstack = 0
 17553  00945E  0E0D               	movlw	13
 17554  009460  1844               	xorwf	_ReceivingIR,w,c	;volatile
 17555  009462  A4D8               	btfss	status,2,c
 17556  009464  D002               	goto	l14146
 17557                           
 17558                           ;IR.c: 519: {
 17559                           ;IR.c: 520: return 0;
 17560  009466  0E00               	movlw	0
 17561  009468  0012               	return	
 17562  00946A                     l14146:
 17563                           
 17564                           ;IR.c: 521: }
 17565                           ;IR.c: 522: return 1;
 17566  00946A  0E01               	movlw	1
 17567  00946C  0012               	return	
 17568  00946E  0012               	return		;funcret
 17569  009470                     __end_of_CheckReceivingIR:
 17570                           	opt stack 0
 17571                           tblptru	equ	0xFF8
 17572                           tblptrh	equ	0xFF7
 17573                           tblptrl	equ	0xFF6
 17574                           tablat	equ	0xFF5
 17575                           prodh	equ	0xFF4
 17576                           prodl	equ	0xFF3
 17577                           intcon	equ	0xFF2
 17578                           indf0	equ	0xFEF
 17579                           postinc0	equ	0xFEE
 17580                           fsr0h	equ	0xFEA
 17581                           fsr0l	equ	0xFE9
 17582                           wreg	equ	0xFE8
 17583                           indf1	equ	0xFE7
 17584                           postdec1	equ	0xFE5
 17585                           fsr1h	equ	0xFE2
 17586                           fsr1l	equ	0xFE1
 17587                           indf2	equ	0xFDF
 17588                           postinc2	equ	0xFDE
 17589                           fsr2h	equ	0xFDA
 17590                           fsr2l	equ	0xFD9
 17591                           status	equ	0xFD8
 17592                           
 17593 ;; *************** function _ReadVoltage *****************
 17594 ;; Defined at:
 17595 ;;		line 60 in file "ADC.c"
 17596 ;; Parameters:    Size  Location     Type
 17597 ;;		None
 17598 ;; Auto vars:     Size  Location     Type
 17599 ;;  voltage         3   69[BANK0 ] unsigned char 
 17600 ;;  temp            2   72[BANK0 ] unsigned int 
 17601 ;; Return value:  Size  Location     Type
 17602 ;;                  3   66[BANK0 ] unsigned int 
 17603 ;; Registers used:
 17604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17605 ;; Tracked objects:
 17606 ;;		On entry : 0/0
 17607 ;;		On exit  : 0/0
 17608 ;;		Unchanged: 0/0
 17609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17610 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17611 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17613 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17614 ;;Total ram usage:        8 bytes
 17615 ;; Hardware stack levels used:    1
 17616 ;; Hardware stack levels required when called:    8
 17617 ;; This function calls:
 17618 ;;		_InternalADC_Read
 17619 ;;		_VoltageDividerOFF
 17620 ;;		_VoltageDividerON
 17621 ;;		___ftdiv
 17622 ;;		___ftmul
 17623 ;;		___lwtoft
 17624 ;;		_delayUS
 17625 ;; This function is called by:
 17626 ;;		_main
 17627 ;;		_UseBluetooth
 17628 ;; This function uses a non-reentrant model
 17629 ;;
 17630                           
 17631                           	psect	text23
 17632  008022                     __ptext23:
 17633                           	opt stack 0
 17634  008022                     _ReadVoltage:
 17635                           	opt stack 21
 17636                           
 17637                           ;ADC.c: 62: unsigned int temp;
 17638                           ;ADC.c: 63: double voltage;
 17639                           ;ADC.c: 65: VoltageDividerON();
 17640                           
 17641                           ;incstack = 0
 17642  008022  ECA9  F04A         	call	_VoltageDividerON	;wreg free
 17643                           
 17644                           ;ADC.c: 66: delayUS(5);
 17645  008026  0E05               	movlw	5
 17646  008028  0100               	movlb	0	; () banked
 17647  00802A  6F79               	movwf	delayUS@US& (0+255),b
 17648  00802C  0E00               	movlw	0
 17649  00802E  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 17650  008030  0E00               	movlw	0
 17651  008032  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 17652  008034  0E00               	movlw	0
 17653  008036  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 17654  008038  EC48  F047         	call	_delayUS	;wreg free
 17655                           
 17656                           ;ADC.c: 67: if(InternalADC_Read(0, &temp))
 17657  00803C  0EA8               	movlw	low ReadVoltage@temp
 17658  00803E  0100               	movlb	0	; () banked
 17659  008040  6F82               	movwf	InternalADC_Read@ADCcounts& (0+255),b
 17660  008042  0E00               	movlw	high ReadVoltage@temp
 17661  008044  0100               	movlb	0	; () banked
 17662  008046  6F83               	movwf	(InternalADC_Read@ADCcounts+1)& (0+255),b
 17663  008048  0E00               	movlw	0
 17664  00804A  EC24  F042         	call	_InternalADC_Read
 17665  00804E  0900               	iorlw	0
 17666  008050  B4D8               	btfsc	status,2,c
 17667  008052  D02F               	goto	l14370
 17668                           
 17669                           ;ADC.c: 68: {
 17670                           ;ADC.c: 69: voltage = ((double)temp / 1024.0) * 11 * 3.3;
 17671  008054  0E00               	movlw	0
 17672  008056  0100               	movlb	0	; () banked
 17673  008058  6F87               	movwf	___ftdiv@f2& (0+255),b
 17674  00805A  0E80               	movlw	128
 17675  00805C  0100               	movlb	0	; () banked
 17676  00805E  6F88               	movwf	(___ftdiv@f2+1)& (0+255),b
 17677  008060  0E44               	movlw	68
 17678  008062  0100               	movlb	0	; () banked
 17679  008064  6F89               	movwf	(___ftdiv@f2+2)& (0+255),b
 17680  008066  C0A8  F081         	movff	ReadVoltage@temp,___lwtoft@c
 17681  00806A  C0A9  F082         	movff	ReadVoltage@temp+1,___lwtoft@c+1
 17682  00806E  EC4C  F049         	call	___lwtoft	;wreg free
 17683  008072  C081  F084         	movff	?___lwtoft,___ftdiv@f1
 17684  008076  C082  F085         	movff	?___lwtoft+1,___ftdiv@f1+1
 17685  00807A  C083  F086         	movff	?___lwtoft+2,___ftdiv@f1+2
 17686  00807E  ECCD  F037         	call	___ftdiv	;wreg free
 17687  008082  C084  F093         	movff	?___ftdiv,___ftmul@f1
 17688  008086  C085  F094         	movff	?___ftdiv+1,___ftmul@f1+1
 17689  00808A  C086  F095         	movff	?___ftdiv+2,___ftmul@f1+2
 17690  00808E  0E33               	movlw	51
 17691  008090  0100               	movlb	0	; () banked
 17692  008092  6F96               	movwf	___ftmul@f2& (0+255),b
 17693  008094  0E11               	movlw	17
 17694  008096  0100               	movlb	0	; () banked
 17695  008098  6F97               	movwf	(___ftmul@f2+1)& (0+255),b
 17696  00809A  0E42               	movlw	66
 17697  00809C  0100               	movlb	0	; () banked
 17698  00809E  6F98               	movwf	(___ftmul@f2+2)& (0+255),b
 17699  0080A0  EC17  F037         	call	___ftmul	;wreg free
 17700  0080A4  C093  F0A5         	movff	?___ftmul,ReadVoltage@voltage
 17701  0080A8  C094  F0A6         	movff	?___ftmul+1,ReadVoltage@voltage+1
 17702  0080AC  C095  F0A7         	movff	?___ftmul+2,ReadVoltage@voltage+2
 17703                           
 17704                           ;ADC.c: 70: }
 17705  0080B0  D00A               	goto	l14372
 17706  0080B2                     l14370:
 17707                           
 17708                           ;ADC.c: 71: else
 17709                           ;ADC.c: 72: {
 17710                           ;ADC.c: 73: voltage = 0.0;
 17711  0080B2  0E00               	movlw	0
 17712  0080B4  0100               	movlb	0	; () banked
 17713  0080B6  6FA5               	movwf	ReadVoltage@voltage& (0+255),b
 17714  0080B8  0E00               	movlw	0
 17715  0080BA  0100               	movlb	0	; () banked
 17716  0080BC  6FA6               	movwf	(ReadVoltage@voltage+1)& (0+255),b
 17717  0080BE  0E00               	movlw	0
 17718  0080C0  0100               	movlb	0	; () banked
 17719  0080C2  6FA7               	movwf	(ReadVoltage@voltage+2)& (0+255),b
 17720  0080C4  D000               	goto	l14372
 17721  0080C6                     l14372:
 17722                           
 17723                           ;ADC.c: 74: }
 17724                           ;ADC.c: 75: VoltageDividerOFF();
 17725  0080C6  ECAC  F04A         	call	_VoltageDividerOFF	;wreg free
 17726                           
 17727                           ;ADC.c: 76: return voltage;
 17728  0080CA  C0A5  F0A2         	movff	ReadVoltage@voltage,?_ReadVoltage
 17729  0080CE  C0A6  F0A3         	movff	ReadVoltage@voltage+1,?_ReadVoltage+1
 17730  0080D2  C0A7  F0A4         	movff	ReadVoltage@voltage+2,?_ReadVoltage+2
 17731  0080D6  0012               	return	
 17732  0080D8  0012               	return		;funcret
 17733  0080DA                     __end_of_ReadVoltage:
 17734                           	opt stack 0
 17735                           tblptru	equ	0xFF8
 17736                           tblptrh	equ	0xFF7
 17737                           tblptrl	equ	0xFF6
 17738                           tablat	equ	0xFF5
 17739                           prodh	equ	0xFF4
 17740                           prodl	equ	0xFF3
 17741                           intcon	equ	0xFF2
 17742                           indf0	equ	0xFEF
 17743                           postinc0	equ	0xFEE
 17744                           fsr0h	equ	0xFEA
 17745                           fsr0l	equ	0xFE9
 17746                           wreg	equ	0xFE8
 17747                           indf1	equ	0xFE7
 17748                           postdec1	equ	0xFE5
 17749                           fsr1h	equ	0xFE2
 17750                           fsr1l	equ	0xFE1
 17751                           indf2	equ	0xFDF
 17752                           postinc2	equ	0xFDE
 17753                           fsr2h	equ	0xFDA
 17754                           fsr2l	equ	0xFD9
 17755                           status	equ	0xFD8
 17756                           
 17757 ;; *************** function ___lwtoft *****************
 17758 ;; Defined at:
 17759 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
 17760 ;; Parameters:    Size  Location     Type
 17761 ;;  c               2   33[BANK0 ] unsigned int 
 17762 ;; Auto vars:     Size  Location     Type
 17763 ;;		None
 17764 ;; Return value:  Size  Location     Type
 17765 ;;                  3   33[BANK0 ] float 
 17766 ;; Registers used:
 17767 ;;		wreg, status,2, status,0, cstack
 17768 ;; Tracked objects:
 17769 ;;		On entry : 0/0
 17770 ;;		On exit  : 0/0
 17771 ;;		Unchanged: 0/0
 17772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17773 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17776 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17777 ;;Total ram usage:        3 bytes
 17778 ;; Hardware stack levels used:    1
 17779 ;; Hardware stack levels required when called:    7
 17780 ;; This function calls:
 17781 ;;		___ftpack
 17782 ;; This function is called by:
 17783 ;;		_ReadVoltage
 17784 ;; This function uses a non-reentrant model
 17785 ;;
 17786                           
 17787                           	psect	text24
 17788  009298                     __ptext24:
 17789                           	opt stack 0
 17790  009298                     ___lwtoft:
 17791                           	opt stack 21
 17792                           
 17793                           ;incstack = 0
 17794  009298  C081  F079         	movff	___lwtoft@c,___ftpack@arg
 17795  00929C  C082  F07A         	movff	___lwtoft@c+1,___ftpack@arg+1
 17796  0092A0  0100               	movlb	0	; () banked
 17797  0092A2  6B7B               	clrf	(___ftpack@arg+2)& (0+255),b
 17798  0092A4  0E8E               	movlw	142
 17799  0092A6  0100               	movlb	0	; () banked
 17800  0092A8  6F7C               	movwf	___ftpack@exp& (0+255),b
 17801  0092AA  0E00               	movlw	0
 17802  0092AC  0100               	movlb	0	; () banked
 17803  0092AE  6F7D               	movwf	___ftpack@sign& (0+255),b
 17804  0092B0  ECED  F03A         	call	___ftpack	;wreg free
 17805  0092B4  C079  F081         	movff	?___ftpack,?___lwtoft
 17806  0092B8  C07A  F082         	movff	?___ftpack+1,?___lwtoft+1
 17807  0092BC  C07B  F083         	movff	?___ftpack+2,?___lwtoft+2
 17808  0092C0  0012               	return	
 17809  0092C2  0012               	return		;funcret
 17810  0092C4                     __end_of___lwtoft:
 17811                           	opt stack 0
 17812                           tblptru	equ	0xFF8
 17813                           tblptrh	equ	0xFF7
 17814                           tblptrl	equ	0xFF6
 17815                           tablat	equ	0xFF5
 17816                           prodh	equ	0xFF4
 17817                           prodl	equ	0xFF3
 17818                           intcon	equ	0xFF2
 17819                           indf0	equ	0xFEF
 17820                           postinc0	equ	0xFEE
 17821                           fsr0h	equ	0xFEA
 17822                           fsr0l	equ	0xFE9
 17823                           wreg	equ	0xFE8
 17824                           indf1	equ	0xFE7
 17825                           postdec1	equ	0xFE5
 17826                           fsr1h	equ	0xFE2
 17827                           fsr1l	equ	0xFE1
 17828                           indf2	equ	0xFDF
 17829                           postinc2	equ	0xFDE
 17830                           fsr2h	equ	0xFDA
 17831                           fsr2l	equ	0xFD9
 17832                           status	equ	0xFD8
 17833                           
 17834 ;; *************** function ___ftdiv *****************
 17835 ;; Defined at:
 17836 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 17837 ;; Parameters:    Size  Location     Type
 17838 ;;  f1              3   36[BANK0 ] float 
 17839 ;;  f2              3   39[BANK0 ] float 
 17840 ;; Auto vars:     Size  Location     Type
 17841 ;;  f3              3   46[BANK0 ] float 
 17842 ;;  sign            1   50[BANK0 ] unsigned char 
 17843 ;;  exp             1   49[BANK0 ] unsigned char 
 17844 ;;  cntr            1   45[BANK0 ] unsigned char 
 17845 ;; Return value:  Size  Location     Type
 17846 ;;                  3   36[BANK0 ] float 
 17847 ;; Registers used:
 17848 ;;		wreg, status,2, status,0, cstack
 17849 ;; Tracked objects:
 17850 ;;		On entry : 0/0
 17851 ;;		On exit  : 0/0
 17852 ;;		Unchanged: 0/0
 17853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17854 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17855 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17856 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17857 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17858 ;;Total ram usage:       15 bytes
 17859 ;; Hardware stack levels used:    1
 17860 ;; Hardware stack levels required when called:    7
 17861 ;; This function calls:
 17862 ;;		___ftpack
 17863 ;; This function is called by:
 17864 ;;		_ReadVoltage
 17865 ;; This function uses a non-reentrant model
 17866 ;;
 17867                           
 17868                           	psect	text25
 17869  006F9A                     __ptext25:
 17870                           	opt stack 0
 17871  006F9A                     ___ftdiv:
 17872                           	opt stack 21
 17873                           
 17874                           ;incstack = 0
 17875  006F9A  C086  F08A         	movff	___ftdiv@f1+2,??___ftdiv
 17876  006F9E  0100               	movlb	0	; () banked
 17877  006FA0  6B8B               	clrf	(??___ftdiv+1)& (0+255),b
 17878  006FA2  6B8C               	clrf	(??___ftdiv+2)& (0+255),b
 17879  006FA4  0100               	movlb	0	; () banked
 17880  006FA6  3585               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 17881  006FA8  0100               	movlb	0	; () banked
 17882  006FAA  378A               	rlcf	??___ftdiv& (0+255),f,b
 17883  006FAC  E301               	bnc	u17481
 17884  006FAE  818B               	bsf	(??___ftdiv+1)& (0+255),0,b
 17885  006FB0                     u17481:
 17886  006FB0  0100               	movlb	0	; () banked
 17887  006FB2  518A               	movf	??___ftdiv& (0+255),w,b
 17888  006FB4  0100               	movlb	0	; () banked
 17889  006FB6  6F91               	movwf	___ftdiv@exp& (0+255),b
 17890  006FB8  0100               	movlb	0	; () banked
 17891  006FBA  5191               	movf	___ftdiv@exp& (0+255),w,b
 17892  006FBC  A4D8               	btfss	status,2,c
 17893  006FBE  D00A               	goto	l14318
 17894                           
 17895                           ; BSR set to: 0
 17896  006FC0  0E00               	movlw	0
 17897  006FC2  0100               	movlb	0	; () banked
 17898  006FC4  6F84               	movwf	?___ftdiv& (0+255),b
 17899  006FC6  0E00               	movlw	0
 17900  006FC8  0100               	movlb	0	; () banked
 17901  006FCA  6F85               	movwf	(?___ftdiv+1)& (0+255),b
 17902  006FCC  0E00               	movlw	0
 17903  006FCE  0100               	movlb	0	; () banked
 17904  006FD0  6F86               	movwf	(?___ftdiv+2)& (0+255),b
 17905                           
 17906                           ; BSR set to: 0
 17907  006FD2  0012               	return	
 17908  006FD4                     l14318:
 17909                           
 17910                           ; BSR set to: 0
 17911  006FD4  C089  F08A         	movff	___ftdiv@f2+2,??___ftdiv
 17912  006FD8  0100               	movlb	0	; () banked
 17913  006FDA  6B8B               	clrf	(??___ftdiv+1)& (0+255),b
 17914  006FDC  6B8C               	clrf	(??___ftdiv+2)& (0+255),b
 17915  006FDE  0100               	movlb	0	; () banked
 17916  006FE0  3588               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 17917  006FE2  0100               	movlb	0	; () banked
 17918  006FE4  378A               	rlcf	??___ftdiv& (0+255),f,b
 17919  006FE6  E301               	bnc	u17501
 17920  006FE8  818B               	bsf	(??___ftdiv+1)& (0+255),0,b
 17921  006FEA                     u17501:
 17922  006FEA  0100               	movlb	0	; () banked
 17923  006FEC  518A               	movf	??___ftdiv& (0+255),w,b
 17924  006FEE  0100               	movlb	0	; () banked
 17925  006FF0  6F92               	movwf	___ftdiv@sign& (0+255),b
 17926  006FF2  0100               	movlb	0	; () banked
 17927  006FF4  5192               	movf	___ftdiv@sign& (0+255),w,b
 17928  006FF6  A4D8               	btfss	status,2,c
 17929  006FF8  D00A               	goto	l14324
 17930                           
 17931                           ; BSR set to: 0
 17932  006FFA  0E00               	movlw	0
 17933  006FFC  0100               	movlb	0	; () banked
 17934  006FFE  6F84               	movwf	?___ftdiv& (0+255),b
 17935  007000  0E00               	movlw	0
 17936  007002  0100               	movlb	0	; () banked
 17937  007004  6F85               	movwf	(?___ftdiv+1)& (0+255),b
 17938  007006  0E00               	movlw	0
 17939  007008  0100               	movlb	0	; () banked
 17940  00700A  6F86               	movwf	(?___ftdiv+2)& (0+255),b
 17941                           
 17942                           ; BSR set to: 0
 17943  00700C  0012               	return	
 17944  00700E                     l14324:
 17945                           
 17946                           ; BSR set to: 0
 17947  00700E  0E00               	movlw	0
 17948  007010  0100               	movlb	0	; () banked
 17949  007012  6F8E               	movwf	___ftdiv@f3& (0+255),b
 17950  007014  0E00               	movlw	0
 17951  007016  0100               	movlb	0	; () banked
 17952  007018  6F8F               	movwf	(___ftdiv@f3+1)& (0+255),b
 17953  00701A  0E00               	movlw	0
 17954  00701C  0100               	movlb	0	; () banked
 17955  00701E  6F90               	movwf	(___ftdiv@f3+2)& (0+255),b
 17956                           
 17957                           ; BSR set to: 0
 17958  007020  0100               	movlb	0	; () banked
 17959  007022  5192               	movf	___ftdiv@sign& (0+255),w,b
 17960  007024  0F89               	addlw	137
 17961  007026  0100               	movlb	0	; () banked
 17962  007028  5F91               	subwf	___ftdiv@exp& (0+255),f,b
 17963                           
 17964                           ; BSR set to: 0
 17965  00702A  C086  F092         	movff	___ftdiv@f1+2,___ftdiv@sign
 17966                           
 17967                           ; BSR set to: 0
 17968  00702E  0100               	movlb	0	; () banked
 17969  007030  5189               	movf	(___ftdiv@f2+2)& (0+255),w,b
 17970  007032  0100               	movlb	0	; () banked
 17971  007034  1B92               	xorwf	___ftdiv@sign& (0+255),f,b
 17972                           
 17973                           ; BSR set to: 0
 17974  007036  0E80               	movlw	128
 17975  007038  0100               	movlb	0	; () banked
 17976  00703A  1792               	andwf	___ftdiv@sign& (0+255),f,b
 17977                           
 17978                           ; BSR set to: 0
 17979  00703C  0100               	movlb	0	; () banked
 17980  00703E  8F85               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 17981                           
 17982                           ; BSR set to: 0
 17983  007040  0EFF               	movlw	255
 17984  007042  0100               	movlb	0	; () banked
 17985  007044  1784               	andwf	___ftdiv@f1& (0+255),f,b
 17986  007046  0EFF               	movlw	255
 17987  007048  0100               	movlb	0	; () banked
 17988  00704A  1785               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 17989  00704C  0E00               	movlw	0
 17990  00704E  0100               	movlb	0	; () banked
 17991  007050  1786               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 17992                           
 17993                           ; BSR set to: 0
 17994  007052  0100               	movlb	0	; () banked
 17995  007054  8F88               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 17996                           
 17997                           ; BSR set to: 0
 17998  007056  0EFF               	movlw	255
 17999  007058  0100               	movlb	0	; () banked
 18000  00705A  1787               	andwf	___ftdiv@f2& (0+255),f,b
 18001  00705C  0EFF               	movlw	255
 18002  00705E  0100               	movlb	0	; () banked
 18003  007060  1788               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 18004  007062  0E00               	movlw	0
 18005  007064  0100               	movlb	0	; () banked
 18006  007066  1789               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 18007                           
 18008                           ; BSR set to: 0
 18009  007068  0E18               	movlw	24
 18010  00706A  0100               	movlb	0	; () banked
 18011  00706C  6F8D               	movwf	___ftdiv@cntr& (0+255),b
 18012  00706E  D000               	goto	l14344
 18013  007070                     l14344:
 18014                           
 18015                           ; BSR set to: 0
 18016  007070  0100               	movlb	0	; () banked
 18017  007072  90D8               	bcf	status,0,c
 18018  007074  378E               	rlcf	___ftdiv@f3& (0+255),f,b
 18019  007076  378F               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 18020  007078  3790               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 18021                           
 18022                           ; BSR set to: 0
 18023  00707A  0100               	movlb	0	; () banked
 18024  00707C  5187               	movf	___ftdiv@f2& (0+255),w,b
 18025  00707E  0100               	movlb	0	; () banked
 18026  007080  5D84               	subwf	___ftdiv@f1& (0+255),w,b
 18027  007082  0100               	movlb	0	; () banked
 18028  007084  5188               	movf	(___ftdiv@f2+1)& (0+255),w,b
 18029  007086  0100               	movlb	0	; () banked
 18030  007088  5985               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 18031  00708A  0100               	movlb	0	; () banked
 18032  00708C  5189               	movf	(___ftdiv@f2+2)& (0+255),w,b
 18033  00708E  0100               	movlb	0	; () banked
 18034  007090  5986               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 18035  007092  A0D8               	btfss	status,0,c
 18036  007094  D00E               	goto	l2724
 18037                           
 18038                           ; BSR set to: 0
 18039  007096  0100               	movlb	0	; () banked
 18040  007098  5187               	movf	___ftdiv@f2& (0+255),w,b
 18041  00709A  0100               	movlb	0	; () banked
 18042  00709C  5F84               	subwf	___ftdiv@f1& (0+255),f,b
 18043  00709E  0100               	movlb	0	; () banked
 18044  0070A0  5188               	movf	(___ftdiv@f2+1)& (0+255),w,b
 18045  0070A2  0100               	movlb	0	; () banked
 18046  0070A4  5B85               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 18047  0070A6  0100               	movlb	0	; () banked
 18048  0070A8  5189               	movf	(___ftdiv@f2+2)& (0+255),w,b
 18049  0070AA  0100               	movlb	0	; () banked
 18050  0070AC  5B86               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 18051                           
 18052                           ; BSR set to: 0
 18053  0070AE  0100               	movlb	0	; () banked
 18054  0070B0  818E               	bsf	___ftdiv@f3& (0+255),0,b
 18055  0070B2                     l2724:
 18056                           
 18057                           ; BSR set to: 0
 18058  0070B2  0100               	movlb	0	; () banked
 18059  0070B4  90D8               	bcf	status,0,c
 18060  0070B6  3784               	rlcf	___ftdiv@f1& (0+255),f,b
 18061  0070B8  3785               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 18062  0070BA  3786               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 18063                           
 18064                           ; BSR set to: 0
 18065  0070BC  0100               	movlb	0	; () banked
 18066  0070BE  2F8D               	decfsz	___ftdiv@cntr& (0+255),f,b
 18067  0070C0  D7D7               	goto	l14344
 18068  0070C2  D000               	goto	l14354
 18069  0070C4                     l14354:
 18070                           
 18071                           ; BSR set to: 0
 18072  0070C4  C08E  F079         	movff	___ftdiv@f3,___ftpack@arg
 18073  0070C8  C08F  F07A         	movff	___ftdiv@f3+1,___ftpack@arg+1
 18074  0070CC  C090  F07B         	movff	___ftdiv@f3+2,___ftpack@arg+2
 18075  0070D0  C091  F07C         	movff	___ftdiv@exp,___ftpack@exp
 18076  0070D4  C092  F07D         	movff	___ftdiv@sign,___ftpack@sign
 18077  0070D8  ECED  F03A         	call	___ftpack	;wreg free
 18078  0070DC  C079  F084         	movff	?___ftpack,?___ftdiv
 18079  0070E0  C07A  F085         	movff	?___ftpack+1,?___ftdiv+1
 18080  0070E4  C07B  F086         	movff	?___ftpack+2,?___ftdiv+2
 18081  0070E8  0012               	return	
 18082  0070EA  0012               	return		;funcret
 18083  0070EC                     __end_of___ftdiv:
 18084                           	opt stack 0
 18085                           tblptru	equ	0xFF8
 18086                           tblptrh	equ	0xFF7
 18087                           tblptrl	equ	0xFF6
 18088                           tablat	equ	0xFF5
 18089                           prodh	equ	0xFF4
 18090                           prodl	equ	0xFF3
 18091                           intcon	equ	0xFF2
 18092                           indf0	equ	0xFEF
 18093                           postinc0	equ	0xFEE
 18094                           fsr0h	equ	0xFEA
 18095                           fsr0l	equ	0xFE9
 18096                           wreg	equ	0xFE8
 18097                           indf1	equ	0xFE7
 18098                           postdec1	equ	0xFE5
 18099                           fsr1h	equ	0xFE2
 18100                           fsr1l	equ	0xFE1
 18101                           indf2	equ	0xFDF
 18102                           postinc2	equ	0xFDE
 18103                           fsr2h	equ	0xFDA
 18104                           fsr2l	equ	0xFD9
 18105                           status	equ	0xFD8
 18106                           
 18107 ;; *************** function _VoltageDividerON *****************
 18108 ;; Defined at:
 18109 ;;		line 148 in file "ADC.c"
 18110 ;; Parameters:    Size  Location     Type
 18111 ;;		None
 18112 ;; Auto vars:     Size  Location     Type
 18113 ;;		None
 18114 ;; Return value:  Size  Location     Type
 18115 ;;		None               void
 18116 ;; Registers used:
 18117 ;;		status,2, status,0
 18118 ;; Tracked objects:
 18119 ;;		On entry : 0/0
 18120 ;;		On exit  : 0/0
 18121 ;;		Unchanged: 0/0
 18122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18127 ;;Total ram usage:        0 bytes
 18128 ;; Hardware stack levels used:    1
 18129 ;; Hardware stack levels required when called:    6
 18130 ;; This function calls:
 18131 ;;		Nothing
 18132 ;; This function is called by:
 18133 ;;		_ReadVoltage
 18134 ;; This function uses a non-reentrant model
 18135 ;;
 18136                           
 18137                           	psect	text26
 18138  009552                     __ptext26:
 18139                           	opt stack 0
 18140  009552                     _VoltageDividerON:
 18141                           	opt stack 22
 18142                           
 18143                           ;ADC.c: 150: TRISBbits.TRISB5 = 0;
 18144                           
 18145                           ;incstack = 0
 18146  009552  9A93               	bcf	3987,5,c	;volatile
 18147                           
 18148                           ;ADC.c: 151: LATB &= ~0x20;
 18149  009554  9A8A               	bcf	3978,5,c	;volatile
 18150  009556  0012               	return		;funcret
 18151  009558                     __end_of_VoltageDividerON:
 18152                           	opt stack 0
 18153                           tblptru	equ	0xFF8
 18154                           tblptrh	equ	0xFF7
 18155                           tblptrl	equ	0xFF6
 18156                           tablat	equ	0xFF5
 18157                           prodh	equ	0xFF4
 18158                           prodl	equ	0xFF3
 18159                           intcon	equ	0xFF2
 18160                           indf0	equ	0xFEF
 18161                           postinc0	equ	0xFEE
 18162                           fsr0h	equ	0xFEA
 18163                           fsr0l	equ	0xFE9
 18164                           wreg	equ	0xFE8
 18165                           indf1	equ	0xFE7
 18166                           postdec1	equ	0xFE5
 18167                           fsr1h	equ	0xFE2
 18168                           fsr1l	equ	0xFE1
 18169                           indf2	equ	0xFDF
 18170                           postinc2	equ	0xFDE
 18171                           fsr2h	equ	0xFDA
 18172                           fsr2l	equ	0xFD9
 18173                           status	equ	0xFD8
 18174                           
 18175 ;; *************** function _VoltageDividerOFF *****************
 18176 ;; Defined at:
 18177 ;;		line 159 in file "ADC.c"
 18178 ;; Parameters:    Size  Location     Type
 18179 ;;		None
 18180 ;; Auto vars:     Size  Location     Type
 18181 ;;		None
 18182 ;; Return value:  Size  Location     Type
 18183 ;;		None               void
 18184 ;; Registers used:
 18185 ;;		None
 18186 ;; Tracked objects:
 18187 ;;		On entry : 0/0
 18188 ;;		On exit  : 0/0
 18189 ;;		Unchanged: 0/0
 18190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18195 ;;Total ram usage:        0 bytes
 18196 ;; Hardware stack levels used:    1
 18197 ;; Hardware stack levels required when called:    6
 18198 ;; This function calls:
 18199 ;;		Nothing
 18200 ;; This function is called by:
 18201 ;;		_ReadVoltage
 18202 ;; This function uses a non-reentrant model
 18203 ;;
 18204                           
 18205                           	psect	text27
 18206  009558                     __ptext27:
 18207                           	opt stack 0
 18208  009558                     _VoltageDividerOFF:
 18209                           	opt stack 22
 18210                           
 18211                           ;ADC.c: 161: TRISBbits.TRISB5 = 1;
 18212                           
 18213                           ;incstack = 0
 18214  009558  8A93               	bsf	3987,5,c	;volatile
 18215  00955A  0012               	return		;funcret
 18216  00955C                     __end_of_VoltageDividerOFF:
 18217                           	opt stack 0
 18218                           tblptru	equ	0xFF8
 18219                           tblptrh	equ	0xFF7
 18220                           tblptrl	equ	0xFF6
 18221                           tablat	equ	0xFF5
 18222                           prodh	equ	0xFF4
 18223                           prodl	equ	0xFF3
 18224                           intcon	equ	0xFF2
 18225                           indf0	equ	0xFEF
 18226                           postinc0	equ	0xFEE
 18227                           fsr0h	equ	0xFEA
 18228                           fsr0l	equ	0xFE9
 18229                           wreg	equ	0xFE8
 18230                           indf1	equ	0xFE7
 18231                           postdec1	equ	0xFE5
 18232                           fsr1h	equ	0xFE2
 18233                           fsr1l	equ	0xFE1
 18234                           indf2	equ	0xFDF
 18235                           postinc2	equ	0xFDE
 18236                           fsr2h	equ	0xFDA
 18237                           fsr2l	equ	0xFD9
 18238                           status	equ	0xFD8
 18239                           
 18240 ;; *************** function _InternalADC_Read *****************
 18241 ;; Defined at:
 18242 ;;		line 84 in file "ADC.c"
 18243 ;; Parameters:    Size  Location     Type
 18244 ;;  channel         1    wreg     unsigned char 
 18245 ;;  ADCcounts       2   34[BANK0 ] PTR unsigned int 
 18246 ;;		 -> ReadVoltage@temp(2), 
 18247 ;; Auto vars:     Size  Location     Type
 18248 ;;  channel         1   39[BANK0 ] unsigned char 
 18249 ;;  AnaChanSel      1   38[BANK0 ] unsigned char 
 18250 ;; Return value:  Size  Location     Type
 18251 ;;                  1    wreg      unsigned char 
 18252 ;; Registers used:
 18253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18254 ;; Tracked objects:
 18255 ;;		On entry : 0/0
 18256 ;;		On exit  : 0/0
 18257 ;;		Unchanged: 0/0
 18258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18259 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18260 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18261 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18262 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18263 ;;Total ram usage:        6 bytes
 18264 ;; Hardware stack levels used:    1
 18265 ;; Hardware stack levels required when called:    7
 18266 ;; This function calls:
 18267 ;;		_delayUS
 18268 ;; This function is called by:
 18269 ;;		_ReadVoltage
 18270 ;; This function uses a non-reentrant model
 18271 ;;
 18272                           
 18273                           	psect	text28
 18274  008448                     __ptext28:
 18275                           	opt stack 0
 18276  008448                     _InternalADC_Read:
 18277                           	opt stack 21
 18278                           
 18279                           ;incstack = 0
 18280                           ;InternalADC_Read@channel stored from wreg
 18281  008448  0100               	movlb	0	; () banked
 18282  00844A  6F87               	movwf	InternalADC_Read@channel& (0+255),b
 18283                           
 18284                           ; BSR set to: 0
 18285                           ;ADC.c: 86: unsigned char AnaChanSel = 1;
 18286  00844C  0E01               	movlw	1
 18287  00844E  0100               	movlb	0	; () banked
 18288  008450  6F86               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 18289                           
 18290                           ; BSR set to: 0
 18291                           ;ADC.c: 87: if(channel > 0b1100)
 18292  008452  0E0C               	movlw	12
 18293  008454  0100               	movlb	0	; () banked
 18294  008456  6587               	cpfsgt	InternalADC_Read@channel& (0+255),b
 18295  008458  D00A               	goto	l14002
 18296                           
 18297                           ; BSR set to: 0
 18298                           ;ADC.c: 88: {
 18299                           ;ADC.c: 89: *ADCcounts = 0;
 18300  00845A  C082  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 18301  00845E  C083  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 18302  008462  0E00               	movlw	0
 18303  008464  6EDE               	movwf	postinc2,c
 18304  008466  0E00               	movlw	0
 18305  008468  6EDD               	movwf	postdec2,c
 18306                           
 18307                           ; BSR set to: 0
 18308                           ;ADC.c: 90: return 0;
 18309  00846A  0E00               	movlw	0
 18310                           
 18311                           ; BSR set to: 0
 18312  00846C  0012               	return	
 18313  00846E                     l14002:
 18314                           
 18315                           ; BSR set to: 0
 18316                           ;ADC.c: 91: }
 18317                           ;ADC.c: 92: if(channel > 1)
 18318  00846E  0E01               	movlw	1
 18319  008470  0100               	movlb	0	; () banked
 18320  008472  6587               	cpfsgt	InternalADC_Read@channel& (0+255),b
 18321  008474  D001               	goto	l14006
 18322                           
 18323                           ; BSR set to: 0
 18324                           ;ADC.c: 95: }
 18325  008476  D009               	goto	l14010
 18326  008478                     l14006:
 18327                           
 18328                           ; BSR set to: 0
 18329                           ;ADC.c: 96: else if (channel == 0)
 18330  008478  0100               	movlb	0	; () banked
 18331  00847A  5187               	movf	InternalADC_Read@channel& (0+255),w,b
 18332  00847C  0100               	movlb	0	; () banked
 18333  00847E  A4D8               	btfss	status,2,c
 18334  008480  D004               	goto	l14010
 18335                           
 18336                           ; BSR set to: 0
 18337                           ;ADC.c: 97: {
 18338                           ;ADC.c: 98: AnaChanSel = 0;
 18339  008482  0E00               	movlw	0
 18340  008484  0100               	movlb	0	; () banked
 18341  008486  6F86               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 18342                           
 18343                           ; BSR set to: 0
 18344  008488  D000               	goto	l14010
 18345  00848A                     l14010:
 18346                           
 18347                           ; BSR set to: 0
 18348                           ;ADC.c: 99: }
 18349                           ;ADC.c: 101: ADCON0 |= (AnaChanSel << 2);
 18350  00848A  0100               	movlb	0	; () banked
 18351  00848C  4586               	rlncf	InternalADC_Read@AnaChanSel& (0+255),w,b
 18352  00848E  46E8               	rlncf	wreg,f,c
 18353  008490  0BFC               	andlw	252
 18354  008492  12C2               	iorwf	4034,f,c	;volatile
 18355                           
 18356                           ; BSR set to: 0
 18357                           ;ADC.c: 103: ADCON1bits.VCFG0 = 0;
 18358  008494  98C1               	bcf	4033,4,c	;volatile
 18359                           
 18360                           ; BSR set to: 0
 18361                           ;ADC.c: 104: ADCON1bits.VCFG1 = 0;
 18362  008496  9AC1               	bcf	4033,5,c	;volatile
 18363                           
 18364                           ; BSR set to: 0
 18365                           ;ADC.c: 106: (ADCON0bits.ADON = 1);
 18366  008498  80C2               	bsf	4034,0,c	;volatile
 18367                           
 18368                           ; BSR set to: 0
 18369                           ;ADC.c: 107: delayUS(50);
 18370  00849A  0E32               	movlw	50
 18371  00849C  0100               	movlb	0	; () banked
 18372  00849E  6F79               	movwf	delayUS@US& (0+255),b
 18373  0084A0  0E00               	movlw	0
 18374  0084A2  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 18375  0084A4  0E00               	movlw	0
 18376  0084A6  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 18377  0084A8  0E00               	movlw	0
 18378  0084AA  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 18379  0084AC  EC48  F047         	call	_delayUS	;wreg free
 18380                           
 18381                           ;ADC.c: 109: ADCON0bits.GO = 1;
 18382  0084B0  82C2               	bsf	4034,1,c	;volatile
 18383                           
 18384                           ;ADC.c: 110: while(ADCON0bits.GO);
 18385  0084B2  D000               	goto	l741
 18386  0084B4                     l741:
 18387  0084B4  B2C2               	btfsc	4034,1,c	;volatile
 18388  0084B6  D7FE               	goto	l741
 18389                           
 18390                           ;ADC.c: 111: (ADCON0bits.ADON = 0);
 18391  0084B8  90C2               	bcf	4034,0,c	;volatile
 18392                           
 18393                           ;ADC.c: 113: *ADCcounts = ((ADRESH << 8) + ADRESL);
 18394  0084BA  50C3               	movf	4035,w,c	;volatile
 18395  0084BC  CFC4 F084          	movff	4036,??_InternalADC_Read	;volatile
 18396  0084C0  0100               	movlb	0	; () banked
 18397  0084C2  6B85               	clrf	(??_InternalADC_Read+1)& (0+255),b
 18398  0084C4  C084  F085         	movff	??_InternalADC_Read,??_InternalADC_Read+1
 18399  0084C8  0100               	movlb	0	; () banked
 18400  0084CA  6B84               	clrf	??_InternalADC_Read& (0+255),b
 18401  0084CC  0100               	movlb	0	; () banked
 18402  0084CE  2784               	addwf	??_InternalADC_Read& (0+255),f,b
 18403  0084D0  0E00               	movlw	0
 18404  0084D2  2385               	addwfc	(??_InternalADC_Read+1)& (0+255),f,b
 18405  0084D4  C082  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 18406  0084D8  C083  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 18407  0084DC  C084  FFDE         	movff	??_InternalADC_Read,postinc2
 18408  0084E0  C085  FFDD         	movff	??_InternalADC_Read+1,postdec2
 18409                           
 18410                           ; BSR set to: 0
 18411                           ;ADC.c: 114: return 1;
 18412  0084E4  0E01               	movlw	1
 18413  0084E6  0012               	return	
 18414                           
 18415                           ; BSR set to: 0
 18416                           
 18417                           ; BSR set to: 0
 18418  0084E8  0012               	return		;funcret
 18419  0084EA                     __end_of_InternalADC_Read:
 18420                           	opt stack 0
 18421                           tblptru	equ	0xFF8
 18422                           tblptrh	equ	0xFF7
 18423                           tblptrl	equ	0xFF6
 18424                           tablat	equ	0xFF5
 18425                           prodh	equ	0xFF4
 18426                           prodl	equ	0xFF3
 18427                           intcon	equ	0xFF2
 18428                           indf0	equ	0xFEF
 18429                           postinc0	equ	0xFEE
 18430                           fsr0h	equ	0xFEA
 18431                           fsr0l	equ	0xFE9
 18432                           wreg	equ	0xFE8
 18433                           indf1	equ	0xFE7
 18434                           postdec1	equ	0xFE5
 18435                           fsr1h	equ	0xFE2
 18436                           fsr1l	equ	0xFE1
 18437                           indf2	equ	0xFDF
 18438                           postinc2	equ	0xFDE
 18439                           postdec2	equ	0xFDD
 18440                           fsr2h	equ	0xFDA
 18441                           fsr2l	equ	0xFD9
 18442                           status	equ	0xFD8
 18443                           
 18444 ;; *************** function _GetStringAfterComma *****************
 18445 ;; Defined at:
 18446 ;;		line 646 in file "MISC.c"
 18447 ;; Parameters:    Size  Location     Type
 18448 ;;  This            2   25[BANK0 ] PTR unsigned char 
 18449 ;;		 -> main@BluetoothString(255), 
 18450 ;;  CommaNumber     1   27[BANK0 ] unsigned char 
 18451 ;;  result          2   28[BANK0 ] PTR unsigned char 
 18452 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 18453 ;; Auto vars:     Size  Location     Type
 18454 ;;  count           1   32[BANK0 ] unsigned char 
 18455 ;;  tempCommaNum    1   31[BANK0 ] unsigned char 
 18456 ;; Return value:  Size  Location     Type
 18457 ;;                  1    wreg      unsigned char 
 18458 ;; Registers used:
 18459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18460 ;; Tracked objects:
 18461 ;;		On entry : 0/0
 18462 ;;		On exit  : 0/0
 18463 ;;		Unchanged: 0/0
 18464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18465 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18466 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18467 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18468 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18469 ;;Total ram usage:        8 bytes
 18470 ;; Hardware stack levels used:    1
 18471 ;; Hardware stack levels required when called:    6
 18472 ;; This function calls:
 18473 ;;		Nothing
 18474 ;; This function is called by:
 18475 ;;		_UseBluetooth
 18476 ;; This function uses a non-reentrant model
 18477 ;;
 18478                           
 18479                           	psect	text29
 18480  007818                     __ptext29:
 18481                           	opt stack 0
 18482  007818                     _GetStringAfterComma:
 18483                           	opt stack 23
 18484                           
 18485                           ;MISC.c: 648: unsigned char tempCommaNumber = 1;
 18486                           
 18487                           ; BSR set to: 0
 18488                           ;incstack = 0
 18489  007818  0E01               	movlw	1
 18490  00781A  0100               	movlb	0	; () banked
 18491  00781C  6F7F               	movwf	GetStringAfterComma@tempCommaNumber& (0+255),b
 18492                           
 18493                           ;MISC.c: 649: unsigned char count = 0;
 18494  00781E  0E00               	movlw	0
 18495  007820  0100               	movlb	0	; () banked
 18496  007822  6F80               	movwf	GetStringAfterComma@count& (0+255),b
 18497                           
 18498                           ; BSR set to: 0
 18499                           
 18500                           ;MISC.c: 651: SCAN:while(*This != ',' && *This != 0)
 18501  007824  D001               	goto	l14942
 18502                           
 18503                           ; BSR set to: 0
 18504  007826  D02B               	goto	L14
 18505  007828                     l14942:
 18506                           
 18507                           ; BSR set to: 0
 18508  007828  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18509  00782C  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18510  007830  0E2C               	movlw	44
 18511  007832  18DE               	xorwf	postinc2,w,c
 18512  007834  B4D8               	btfsc	status,2,c
 18513  007836  D009               	goto	l14946
 18514                           
 18515                           ; BSR set to: 0
 18516  007838  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18517  00783C  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18518  007840  50DF               	movf	indf2,w,c
 18519  007842  B4D8               	btfsc	status,2,c
 18520  007844  D002               	goto	l14946
 18521  007846  D01B               	goto	L14
 18522                           
 18523                           ; BSR set to: 0
 18524  007848  D000               	goto	l14946
 18525  00784A                     l14946:
 18526                           
 18527                           ; BSR set to: 0
 18528                           ;MISC.c: 655: }
 18529                           ;MISC.c: 656: if(*This == 0)
 18530  00784A  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18531  00784E  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18532  007852  50DF               	movf	indf2,w,c
 18533  007854  A4D8               	btfss	status,2,c
 18534  007856  D003               	goto	l14954
 18535                           
 18536                           ; BSR set to: 0
 18537                           ;MISC.c: 657: {
 18538                           ;MISC.c: 658: return 1;
 18539  007858  0E01               	movlw	1
 18540                           
 18541                           ; BSR set to: 0
 18542  00785A  0012               	return	
 18543                           
 18544                           ; BSR set to: 0
 18545                           ;MISC.c: 659: }
 18546  00785C  D015               	goto	l14960
 18547  00785E                     l14954:
 18548                           
 18549                           ; BSR set to: 0
 18550                           ;MISC.c: 660: else if(*This != ',')
 18551  00785E  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18552  007862  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18553  007866  0E2C               	movlw	44
 18554  007868  18DE               	xorwf	postinc2,w,c
 18555  00786A  B4D8               	btfsc	status,2,c
 18556  00786C  D00D               	goto	l14960
 18557                           
 18558                           ; BSR set to: 0
 18559                           ;MISC.c: 661: {
 18560                           ;MISC.c: 662: if(tempCommaNumber < CommaNumber)
 18561  00786E  0100               	movlb	0	; () banked
 18562  007870  517B               	movf	GetStringAfterComma@CommaNumber& (0+255),w,b
 18563  007872  0100               	movlb	0	; () banked
 18564  007874  5D7F               	subwf	GetStringAfterComma@tempCommaNumber& (0+255),w,b
 18565  007876  B0D8               	btfsc	status,0,c
 18566  007878  D007               	goto	l14960
 18567                           
 18568                           ; BSR set to: 0
 18569                           ;MISC.c: 663: {
 18570                           ;MISC.c: 664: tempCommaNumber++;
 18571  00787A  0100               	movlb	0	; () banked
 18572  00787C  2B7F               	incf	GetStringAfterComma@tempCommaNumber& (0+255),f,b
 18573  00787E                     L14:
 18574                           
 18575                           ;MISC.c: 665: This++;
 18576  00787E  0100               	movlb	0	; () banked
 18577  007880  4B79               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18578  007882  2B7A               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18579                           
 18580                           ;MISC.c: 666: goto SCAN;
 18581  007884  D7D1               	goto	l14942
 18582                           
 18583                           ; BSR set to: 0
 18584                           
 18585                           ; BSR set to: 0
 18586  007886  D000               	goto	l14960
 18587  007888                     l14960:
 18588                           
 18589                           ; BSR set to: 0
 18590                           ;MISC.c: 667: }
 18591                           ;MISC.c: 668: }
 18592                           ;MISC.c: 669: if(*This == 0)
 18593  007888  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18594  00788C  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18595  007890  50DF               	movf	indf2,w,c
 18596  007892  A4D8               	btfss	status,2,c
 18597  007894  D002               	goto	l14966
 18598                           
 18599                           ; BSR set to: 0
 18600                           ;MISC.c: 670: {
 18601                           ;MISC.c: 671: return 1;
 18602  007896  0E01               	movlw	1
 18603                           
 18604                           ; BSR set to: 0
 18605  007898  0012               	return	
 18606  00789A                     l14966:
 18607                           
 18608                           ; BSR set to: 0
 18609                           ;MISC.c: 672: }
 18610                           ;MISC.c: 673: This++;
 18611  00789A  0100               	movlb	0	; () banked
 18612  00789C  4B79               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18613  00789E  2B7A               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18614                           
 18615                           ; BSR set to: 0
 18616                           ;MISC.c: 674: if(*This == ' ')
 18617  0078A0  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18618  0078A4  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18619  0078A8  0E20               	movlw	32
 18620  0078AA  18DE               	xorwf	postinc2,w,c
 18621  0078AC  A4D8               	btfss	status,2,c
 18622  0078AE  D004               	goto	l14972
 18623                           
 18624                           ; BSR set to: 0
 18625                           ;MISC.c: 675: {
 18626                           ;MISC.c: 676: This++;
 18627  0078B0  0100               	movlb	0	; () banked
 18628  0078B2  4B79               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18629  0078B4  2B7A               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18630                           
 18631                           ;MISC.c: 678: }
 18632  0078B6  D028               	goto	l14994
 18633  0078B8                     l14972:
 18634                           
 18635                           ; BSR set to: 0
 18636                           ;MISC.c: 679: else if (*This == ',')
 18637  0078B8  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18638  0078BC  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18639  0078C0  0E2C               	movlw	44
 18640  0078C2  18DE               	xorwf	postinc2,w,c
 18641  0078C4  A4D8               	btfss	status,2,c
 18642  0078C6  D003               	goto	l14980
 18643                           
 18644                           ; BSR set to: 0
 18645                           ;MISC.c: 680: {
 18646                           ;MISC.c: 681: return 2;
 18647  0078C8  0E02               	movlw	2
 18648                           
 18649                           ; BSR set to: 0
 18650  0078CA  0012               	return	
 18651                           
 18652                           ; BSR set to: 0
 18653                           ;MISC.c: 682: }
 18654  0078CC  D01D               	goto	l14994
 18655  0078CE                     l14980:
 18656                           
 18657                           ; BSR set to: 0
 18658                           ;MISC.c: 683: else if(*This == 0)
 18659  0078CE  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18660  0078D2  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18661  0078D6  50DF               	movf	indf2,w,c
 18662  0078D8  A4D8               	btfss	status,2,c
 18663  0078DA  D016               	goto	l14994
 18664                           
 18665                           ; BSR set to: 0
 18666                           ;MISC.c: 684: {
 18667                           ;MISC.c: 685: return 3;
 18668  0078DC  0E03               	movlw	3
 18669                           
 18670                           ; BSR set to: 0
 18671  0078DE  0012               	return	
 18672                           
 18673                           ; BSR set to: 0
 18674                           ;MISC.c: 686: }
 18675                           ;MISC.c: 687: while(*This != 0 && *This != ' ' && count < 10)
 18676                           
 18677                           ; BSR set to: 0
 18678                           
 18679                           ; BSR set to: 0
 18680  0078E0  D013               	goto	l14994
 18681  0078E2                     l14986:
 18682                           
 18683                           ; BSR set to: 0
 18684                           ;MISC.c: 688: {
 18685                           ;MISC.c: 689: *result = *This;
 18686  0078E2  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18687  0078E6  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18688  0078EA  C07C  FFE1         	movff	GetStringAfterComma@result,fsr1l
 18689  0078EE  C07D  FFE2         	movff	GetStringAfterComma@result+1,fsr1h
 18690  0078F2  CFDF FFE7          	movff	indf2,indf1
 18691                           
 18692                           ; BSR set to: 0
 18693                           ;MISC.c: 690: result++;
 18694  0078F6  0100               	movlb	0	; () banked
 18695  0078F8  4B7C               	infsnz	GetStringAfterComma@result& (0+255),f,b
 18696  0078FA  2B7D               	incf	(GetStringAfterComma@result+1)& (0+255),f,b
 18697                           
 18698                           ; BSR set to: 0
 18699                           ;MISC.c: 691: This++;
 18700  0078FC  0100               	movlb	0	; () banked
 18701  0078FE  4B79               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18702  007900  2B7A               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18703                           
 18704                           ; BSR set to: 0
 18705                           ;MISC.c: 692: count++;
 18706  007902  0100               	movlb	0	; () banked
 18707  007904  2B80               	incf	GetStringAfterComma@count& (0+255),f,b
 18708  007906  D000               	goto	l14994
 18709  007908                     l14994:
 18710                           
 18711                           ; BSR set to: 0
 18712  007908  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18713  00790C  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18714  007910  50DF               	movf	indf2,w,c
 18715  007912  B4D8               	btfsc	status,2,c
 18716  007914  D00D               	goto	l15000
 18717                           
 18718                           ; BSR set to: 0
 18719  007916  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18720  00791A  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18721  00791E  0E20               	movlw	32
 18722  007920  18DE               	xorwf	postinc2,w,c
 18723  007922  B4D8               	btfsc	status,2,c
 18724  007924  D005               	goto	l15000
 18725                           
 18726                           ; BSR set to: 0
 18727  007926  0E09               	movlw	9
 18728  007928  0100               	movlb	0	; () banked
 18729  00792A  6580               	cpfsgt	GetStringAfterComma@count& (0+255),b
 18730  00792C  D7DA               	goto	l14986
 18731                           
 18732                           ; BSR set to: 0
 18733  00792E  D000               	goto	l15000
 18734  007930                     l15000:
 18735                           
 18736                           ; BSR set to: 0
 18737                           ;MISC.c: 693: }
 18738                           ;MISC.c: 694: return 0;
 18739  007930  0E00               	movlw	0
 18740  007932  0012               	return	
 18741                           
 18742                           ; BSR set to: 0
 18743                           
 18744                           ; BSR set to: 0
 18745  007934  0012               	return		;funcret
 18746  007936                     __end_of_GetStringAfterComma:
 18747                           	opt stack 0
 18748                           tblptru	equ	0xFF8
 18749                           tblptrh	equ	0xFF7
 18750                           tblptrl	equ	0xFF6
 18751                           tablat	equ	0xFF5
 18752                           prodh	equ	0xFF4
 18753                           prodl	equ	0xFF3
 18754                           intcon	equ	0xFF2
 18755                           indf0	equ	0xFEF
 18756                           postinc0	equ	0xFEE
 18757                           fsr0h	equ	0xFEA
 18758                           fsr0l	equ	0xFE9
 18759                           wreg	equ	0xFE8
 18760                           indf1	equ	0xFE7
 18761                           postdec1	equ	0xFE5
 18762                           fsr1h	equ	0xFE2
 18763                           fsr1l	equ	0xFE1
 18764                           indf2	equ	0xFDF
 18765                           postinc2	equ	0xFDE
 18766                           postdec2	equ	0xFDD
 18767                           fsr2h	equ	0xFDA
 18768                           fsr2l	equ	0xFD9
 18769                           status	equ	0xFD8
 18770                           
 18771 ;; *************** function _GetNumber *****************
 18772 ;; Defined at:
 18773 ;;		line 457 in file "MISC.c"
 18774 ;; Parameters:    Size  Location     Type
 18775 ;;  This            2   37[BANK0 ] PTR unsigned char 
 18776 ;;		 -> main@BluetoothString(255), 
 18777 ;;  CommaNumber     1   39[BANK0 ] unsigned char 
 18778 ;;  result          2   40[BANK0 ] PTR unsigned long 
 18779 ;;		 -> UseBluetooth@temp(4), UseBluetooth@EnteredNEC(4), 
 18780 ;; Auto vars:     Size  Location     Type
 18781 ;;  temp            4   53[BANK0 ] long 
 18782 ;;  tempThis        1   52[BANK0 ] unsigned char 
 18783 ;;  i               1   51[BANK0 ] unsigned char 
 18784 ;;  Hex             1   50[BANK0 ] unsigned char 
 18785 ;;  count           1   49[BANK0 ] unsigned char 
 18786 ;;  negative        1   48[BANK0 ] unsigned char 
 18787 ;;  tempCommaNum    1   47[BANK0 ] unsigned char 
 18788 ;; Return value:  Size  Location     Type
 18789 ;;                  1    wreg      unsigned char 
 18790 ;; Registers used:
 18791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18792 ;; Tracked objects:
 18793 ;;		On entry : 0/0
 18794 ;;		On exit  : 0/0
 18795 ;;		Unchanged: 0/0
 18796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18797 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18798 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18799 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18800 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18801 ;;Total ram usage:       20 bytes
 18802 ;; Hardware stack levels used:    1
 18803 ;; Hardware stack levels required when called:    7
 18804 ;; This function calls:
 18805 ;;		_IsLetter
 18806 ;;		___lmul
 18807 ;;		_lowercaseChar
 18808 ;; This function is called by:
 18809 ;;		_UseBluetooth
 18810 ;; This function uses a non-reentrant model
 18811 ;;
 18812                           
 18813                           	psect	text30
 18814  0047D8                     __ptext30:
 18815                           	opt stack 0
 18816  0047D8                     _GetNumber:
 18817                           	opt stack 22
 18818                           
 18819                           ;MISC.c: 459: unsigned char i =0;
 18820                           
 18821                           ; BSR set to: 0
 18822                           ;incstack = 0
 18823  0047D8  0E00               	movlw	0
 18824  0047DA  0100               	movlb	0	; () banked
 18825  0047DC  6F93               	movwf	GetNumber@i& (0+255),b
 18826                           
 18827                           ;MISC.c: 460: long temp =0;
 18828  0047DE  0E00               	movlw	0
 18829  0047E0  0100               	movlb	0	; () banked
 18830  0047E2  6F95               	movwf	GetNumber@temp& (0+255),b
 18831  0047E4  0E00               	movlw	0
 18832  0047E6  6F96               	movwf	(GetNumber@temp+1)& (0+255),b
 18833  0047E8  0E00               	movlw	0
 18834  0047EA  6F97               	movwf	(GetNumber@temp+2)& (0+255),b
 18835  0047EC  0E00               	movlw	0
 18836  0047EE  6F98               	movwf	(GetNumber@temp+3)& (0+255),b
 18837                           
 18838                           ;MISC.c: 461: unsigned char negative =0;
 18839  0047F0  0E00               	movlw	0
 18840  0047F2  0100               	movlb	0	; () banked
 18841  0047F4  6F90               	movwf	GetNumber@negative& (0+255),b
 18842                           
 18843                           ;MISC.c: 462: unsigned char tempCommaNumber = 1;
 18844  0047F6  0E01               	movlw	1
 18845  0047F8  0100               	movlb	0	; () banked
 18846  0047FA  6F8F               	movwf	GetNumber@tempCommaNumber& (0+255),b
 18847                           
 18848                           ;MISC.c: 463: unsigned char count =0;
 18849  0047FC  0E00               	movlw	0
 18850  0047FE  0100               	movlb	0	; () banked
 18851  004800  6F91               	movwf	GetNumber@count& (0+255),b
 18852                           
 18853                           ;MISC.c: 464: unsigned char Hex = 0;
 18854  004802  0E00               	movlw	0
 18855  004804  0100               	movlb	0	; () banked
 18856  004806  6F92               	movwf	GetNumber@Hex& (0+255),b
 18857                           
 18858                           ;MISC.c: 465: unsigned char tempThis;
 18859                           ;MISC.c: 467: while(*This != 0)
 18860  004808  D038               	goto	l14724
 18861  00480A                     l14704:
 18862                           
 18863                           ; BSR set to: 0
 18864                           ;MISC.c: 468: {
 18865                           ;MISC.c: 469: if(*This == '0')
 18866  00480A  C085  FFD9         	movff	GetNumber@This,fsr2l
 18867  00480E  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18868  004812  0E30               	movlw	48
 18869  004814  18DE               	xorwf	postinc2,w,c
 18870  004816  A4D8               	btfss	status,2,c
 18871  004818  D02A               	goto	l14720
 18872                           
 18873                           ; BSR set to: 0
 18874                           ;MISC.c: 470: {
 18875                           ;MISC.c: 471: count++;
 18876  00481A  0100               	movlb	0	; () banked
 18877  00481C  2B91               	incf	GetNumber@count& (0+255),f,b
 18878                           
 18879                           ;MISC.c: 472: This++;
 18880  00481E  0100               	movlb	0	; () banked
 18881  004820  4B85               	infsnz	GetNumber@This& (0+255),f,b
 18882  004822  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 18883                           
 18884                           ; BSR set to: 0
 18885                           ;MISC.c: 473: if(*This == 'x' || *This == 'X')
 18886  004824  C085  FFD9         	movff	GetNumber@This,fsr2l
 18887  004828  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18888  00482C  0E78               	movlw	120
 18889  00482E  18DE               	xorwf	postinc2,w,c
 18890  004830  B4D8               	btfsc	status,2,c
 18891  004832  D008               	goto	l14712
 18892                           
 18893                           ; BSR set to: 0
 18894  004834  C085  FFD9         	movff	GetNumber@This,fsr2l
 18895  004838  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18896  00483C  0E58               	movlw	88
 18897  00483E  18DE               	xorwf	postinc2,w,c
 18898  004840  A4D8               	btfss	status,2,c
 18899  004842  D015               	goto	l14720
 18900  004844                     l14712:
 18901                           
 18902                           ; BSR set to: 0
 18903                           ;MISC.c: 474: {
 18904                           ;MISC.c: 475: This++;
 18905  004844  0100               	movlb	0	; () banked
 18906  004846  4B85               	infsnz	GetNumber@This& (0+255),f,b
 18907  004848  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 18908                           
 18909                           ; BSR set to: 0
 18910                           ;MISC.c: 476: if(*This >='0' && *This <='9')
 18911  00484A  C085  FFD9         	movff	GetNumber@This,fsr2l
 18912  00484E  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18913  004852  0E2F               	movlw	47
 18914  004854  64DF               	cpfsgt	indf2,c
 18915  004856  D00B               	goto	l14720
 18916                           
 18917                           ; BSR set to: 0
 18918  004858  C085  FFD9         	movff	GetNumber@This,fsr2l
 18919  00485C  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18920  004860  0E3A               	movlw	58
 18921  004862  60DF               	cpfslt	indf2,c
 18922  004864  D004               	goto	l14720
 18923                           
 18924                           ; BSR set to: 0
 18925                           ;MISC.c: 477: {
 18926                           ;MISC.c: 478: Hex = 1;
 18927  004866  0E01               	movlw	1
 18928  004868  0100               	movlb	0	; () banked
 18929  00486A  6F92               	movwf	GetNumber@Hex& (0+255),b
 18930                           
 18931                           ; BSR set to: 0
 18932                           
 18933                           ; BSR set to: 0
 18934  00486C  D000               	goto	l14720
 18935  00486E                     l14720:
 18936                           
 18937                           ; BSR set to: 0
 18938                           ;MISC.c: 479: }
 18939                           ;MISC.c: 480: }
 18940                           ;MISC.c: 481: }
 18941                           ;MISC.c: 482: count++;
 18942  00486E  0100               	movlb	0	; () banked
 18943  004870  2B91               	incf	GetNumber@count& (0+255),f,b
 18944                           
 18945                           ; BSR set to: 0
 18946                           ;MISC.c: 483: This++;
 18947  004872  0100               	movlb	0	; () banked
 18948  004874  4B85               	infsnz	GetNumber@This& (0+255),f,b
 18949  004876  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 18950  004878  D000               	goto	l14724
 18951  00487A                     l14724:
 18952                           
 18953                           ; BSR set to: 0
 18954  00487A  C085  FFD9         	movff	GetNumber@This,fsr2l
 18955  00487E  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18956  004882  50DF               	movf	indf2,w,c
 18957  004884  A4D8               	btfss	status,2,c
 18958  004886  D7C1               	goto	l14704
 18959                           
 18960                           ; BSR set to: 0
 18961                           ;MISC.c: 484: }
 18962                           ;MISC.c: 485: This-=count;
 18963                           
 18964                           ; BSR set to: 0
 18965  004888  0100               	movlb	0	; () banked
 18966  00488A  5191               	movf	GetNumber@count& (0+255),w,b
 18967  00488C  0D01               	mullw	1
 18968  00488E  50F3               	movf	prodl,w,c
 18969  004890  0100               	movlb	0	; () banked
 18970  004892  5F85               	subwf	GetNumber@This& (0+255),f,b
 18971  004894  50F4               	movf	prodh,w,c
 18972  004896  0100               	movlb	0	; () banked
 18973  004898  5B86               	subwfb	(GetNumber@This+1)& (0+255),f,b
 18974                           
 18975                           ; BSR set to: 0
 18976                           
 18977                           ;MISC.c: 487: SCAN:while(*This != '=' && *This != ',' && *This != 0)
 18978  00489A  D001               	goto	l14730
 18979                           
 18980                           ; BSR set to: 0
 18981  00489C  D03B               	goto	L15
 18982  00489E                     l14730:
 18983                           
 18984                           ; BSR set to: 0
 18985  00489E  C085  FFD9         	movff	GetNumber@This,fsr2l
 18986  0048A2  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18987  0048A6  0E3D               	movlw	61
 18988  0048A8  18DE               	xorwf	postinc2,w,c
 18989  0048AA  B4D8               	btfsc	status,2,c
 18990  0048AC  D011               	goto	l14736
 18991                           
 18992                           ; BSR set to: 0
 18993  0048AE  C085  FFD9         	movff	GetNumber@This,fsr2l
 18994  0048B2  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18995  0048B6  0E2C               	movlw	44
 18996  0048B8  18DE               	xorwf	postinc2,w,c
 18997  0048BA  B4D8               	btfsc	status,2,c
 18998  0048BC  D009               	goto	l14736
 18999                           
 19000                           ; BSR set to: 0
 19001  0048BE  C085  FFD9         	movff	GetNumber@This,fsr2l
 19002  0048C2  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19003  0048C6  50DF               	movf	indf2,w,c
 19004  0048C8  B4D8               	btfsc	status,2,c
 19005  0048CA  D002               	goto	l14736
 19006  0048CC  D023               	goto	L15
 19007                           
 19008                           ; BSR set to: 0
 19009  0048CE  D000               	goto	l14736
 19010  0048D0                     l14736:
 19011                           
 19012                           ; BSR set to: 0
 19013                           ;MISC.c: 491: }
 19014                           ;MISC.c: 492: if(*This == 0)
 19015  0048D0  C085  FFD9         	movff	GetNumber@This,fsr2l
 19016  0048D4  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19017  0048D8  50DF               	movf	indf2,w,c
 19018  0048DA  A4D8               	btfss	status,2,c
 19019  0048DC  D003               	goto	l14744
 19020                           
 19021                           ; BSR set to: 0
 19022                           ;MISC.c: 493: {
 19023                           ;MISC.c: 494: return 1;
 19024  0048DE  0E01               	movlw	1
 19025                           
 19026                           ; BSR set to: 0
 19027  0048E0  0012               	return	
 19028                           
 19029                           ; BSR set to: 0
 19030                           ;MISC.c: 495: }
 19031  0048E2  D01D               	goto	l14752
 19032  0048E4                     l14744:
 19033                           
 19034                           ; BSR set to: 0
 19035                           ;MISC.c: 496: else if(*This != '=' || *This != ',')
 19036  0048E4  C085  FFD9         	movff	GetNumber@This,fsr2l
 19037  0048E8  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19038  0048EC  0E3D               	movlw	61
 19039  0048EE  18DE               	xorwf	postinc2,w,c
 19040  0048F0  A4D8               	btfss	status,2,c
 19041  0048F2  D008               	goto	l14748
 19042                           
 19043                           ; BSR set to: 0
 19044  0048F4  C085  FFD9         	movff	GetNumber@This,fsr2l
 19045  0048F8  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19046  0048FC  0E2C               	movlw	44
 19047  0048FE  18DE               	xorwf	postinc2,w,c
 19048  004900  B4D8               	btfsc	status,2,c
 19049  004902  D00D               	goto	l14752
 19050  004904                     l14748:
 19051                           
 19052                           ; BSR set to: 0
 19053                           ;MISC.c: 497: {
 19054                           ;MISC.c: 498: if(tempCommaNumber < CommaNumber)
 19055  004904  0100               	movlb	0	; () banked
 19056  004906  5187               	movf	GetNumber@CommaNumber& (0+255),w,b
 19057  004908  0100               	movlb	0	; () banked
 19058  00490A  5D8F               	subwf	GetNumber@tempCommaNumber& (0+255),w,b
 19059  00490C  B0D8               	btfsc	status,0,c
 19060  00490E  D007               	goto	l14752
 19061                           
 19062                           ; BSR set to: 0
 19063                           ;MISC.c: 499: {
 19064                           ;MISC.c: 500: tempCommaNumber++;
 19065  004910  0100               	movlb	0	; () banked
 19066  004912  2B8F               	incf	GetNumber@tempCommaNumber& (0+255),f,b
 19067  004914                     L15:
 19068                           
 19069                           ;MISC.c: 501: This++;
 19070  004914  0100               	movlb	0	; () banked
 19071  004916  4B85               	infsnz	GetNumber@This& (0+255),f,b
 19072  004918  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 19073                           
 19074                           ;MISC.c: 502: goto SCAN;
 19075  00491A  D7C1               	goto	l14730
 19076                           
 19077                           ; BSR set to: 0
 19078                           
 19079                           ; BSR set to: 0
 19080  00491C  D000               	goto	l14752
 19081  00491E                     l14752:
 19082                           
 19083                           ; BSR set to: 0
 19084                           ;MISC.c: 503: }
 19085                           ;MISC.c: 504: }
 19086                           ;MISC.c: 505: if(*This == 0)
 19087  00491E  C085  FFD9         	movff	GetNumber@This,fsr2l
 19088  004922  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19089  004926  50DF               	movf	indf2,w,c
 19090  004928  A4D8               	btfss	status,2,c
 19091  00492A  D002               	goto	l14758
 19092                           
 19093                           ; BSR set to: 0
 19094                           ;MISC.c: 506: {
 19095                           ;MISC.c: 507: return 1;
 19096  00492C  0E01               	movlw	1
 19097                           
 19098                           ; BSR set to: 0
 19099  00492E  0012               	return	
 19100  004930                     l14758:
 19101                           
 19102                           ; BSR set to: 0
 19103                           ;MISC.c: 508: }
 19104                           ;MISC.c: 509: This++;
 19105  004930  0100               	movlb	0	; () banked
 19106  004932  4B85               	infsnz	GetNumber@This& (0+255),f,b
 19107  004934  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 19108                           
 19109                           ; BSR set to: 0
 19110                           ;MISC.c: 510: if(*This == ' ')
 19111  004936  C085  FFD9         	movff	GetNumber@This,fsr2l
 19112  00493A  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19113  00493E  0E20               	movlw	32
 19114  004940  18DE               	xorwf	postinc2,w,c
 19115  004942  B4D8               	btfsc	status,2,c
 19116  004944  D01E               	goto	l14778
 19117                           
 19118                           ; BSR set to: 0
 19119                           ;MISC.c: 515: else if (*This == '=' || *This == ',')
 19120                           
 19121                           ; BSR set to: 0
 19122                           
 19123                           ;MISC.c: 514: }
 19124                           
 19125                           ; BSR set to: 0
 19126                           ;MISC.c: 511: {
 19127                           ;MISC.c: 512: This++;
 19128  004946  C085  FFD9         	movff	GetNumber@This,fsr2l
 19129  00494A  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19130  00494E  0E3D               	movlw	61
 19131  004950  18DE               	xorwf	postinc2,w,c
 19132  004952  B4D8               	btfsc	status,2,c
 19133  004954  D008               	goto	l14768
 19134                           
 19135                           ; BSR set to: 0
 19136  004956  C085  FFD9         	movff	GetNumber@This,fsr2l
 19137  00495A  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19138  00495E  0E2C               	movlw	44
 19139  004960  18DE               	xorwf	postinc2,w,c
 19140  004962  A4D8               	btfss	status,2,c
 19141  004964  D003               	goto	l14774
 19142  004966                     l14768:
 19143                           
 19144                           ; BSR set to: 0
 19145                           ;MISC.c: 516: {
 19146                           ;MISC.c: 517: return 2;
 19147  004966  0E02               	movlw	2
 19148                           
 19149                           ; BSR set to: 0
 19150  004968  0012               	return	
 19151                           
 19152                           ; BSR set to: 0
 19153                           ;MISC.c: 518: }
 19154  00496A  D019               	goto	l14786
 19155  00496C                     l14774:
 19156                           
 19157                           ; BSR set to: 0
 19158                           ;MISC.c: 519: else if(*This == '-')
 19159  00496C  C085  FFD9         	movff	GetNumber@This,fsr2l
 19160  004970  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19161  004974  0E2D               	movlw	45
 19162  004976  18DE               	xorwf	postinc2,w,c
 19163  004978  A4D8               	btfss	status,2,c
 19164  00497A  D007               	goto	l14780
 19165                           
 19166                           ; BSR set to: 0
 19167                           ;MISC.c: 520: {
 19168                           ;MISC.c: 521: negative = 1;
 19169  00497C  0E01               	movlw	1
 19170  00497E  0100               	movlb	0	; () banked
 19171  004980  6F90               	movwf	GetNumber@negative& (0+255),b
 19172  004982                     l14778:
 19173                           
 19174                           ; BSR set to: 0
 19175                           ;MISC.c: 522: This++;
 19176  004982  0100               	movlb	0	; () banked
 19177  004984  4B85               	infsnz	GetNumber@This& (0+255),f,b
 19178  004986  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 19179                           
 19180                           ;MISC.c: 524: }
 19181  004988  D00A               	goto	l14786
 19182  00498A                     l14780:
 19183                           
 19184                           ; BSR set to: 0
 19185                           ;MISC.c: 525: else if(*This == 0)
 19186  00498A  C085  FFD9         	movff	GetNumber@This,fsr2l
 19187  00498E  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19188  004992  50DF               	movf	indf2,w,c
 19189  004994  A4D8               	btfss	status,2,c
 19190  004996  D003               	goto	l14786
 19191                           
 19192                           ; BSR set to: 0
 19193                           ;MISC.c: 526: {
 19194                           ;MISC.c: 527: return 3;
 19195  004998  0E03               	movlw	3
 19196                           
 19197                           ; BSR set to: 0
 19198  00499A  0012               	return	
 19199                           
 19200                           ; BSR set to: 0
 19201                           
 19202                           ; BSR set to: 0
 19203                           
 19204                           ; BSR set to: 0
 19205  00499C  D000               	goto	l14786
 19206  00499E                     l14786:
 19207                           
 19208                           ; BSR set to: 0
 19209                           ;MISC.c: 528: }
 19210                           ;MISC.c: 529: if(Hex)
 19211  00499E  0100               	movlb	0	; () banked
 19212  0049A0  5192               	movf	GetNumber@Hex& (0+255),w,b
 19213  0049A2  0100               	movlb	0	; () banked
 19214  0049A4  B4D8               	btfsc	status,2,c
 19215  0049A6  D11C               	goto	l14850
 19216                           
 19217                           ; BSR set to: 0
 19218                           ;MISC.c: 530: {
 19219                           ;MISC.c: 531: negative = 0;
 19220  0049A8  0E00               	movlw	0
 19221  0049AA  0100               	movlb	0	; () banked
 19222  0049AC  6F90               	movwf	GetNumber@negative& (0+255),b
 19223                           
 19224                           ;MISC.c: 532: while(*This != 'x' && *This != 'X')
 19225  0049AE  D004               	goto	l14792
 19226  0049B0                     l14790:
 19227                           
 19228                           ; BSR set to: 0
 19229                           ;MISC.c: 533: {
 19230                           ;MISC.c: 535: This++;
 19231  0049B0  0100               	movlb	0	; () banked
 19232  0049B2  4B85               	infsnz	GetNumber@This& (0+255),f,b
 19233  0049B4  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 19234  0049B6  D000               	goto	l14792
 19235  0049B8                     l14792:
 19236                           
 19237                           ; BSR set to: 0
 19238  0049B8  C085  FFD9         	movff	GetNumber@This,fsr2l
 19239  0049BC  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19240  0049C0  0E78               	movlw	120
 19241  0049C2  18DE               	xorwf	postinc2,w,c
 19242  0049C4  B4D8               	btfsc	status,2,c
 19243  0049C6  D108               	goto	l14848
 19244                           
 19245                           ; BSR set to: 0
 19246  0049C8  C085  FFD9         	movff	GetNumber@This,fsr2l
 19247  0049CC  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19248  0049D0  0E58               	movlw	88
 19249  0049D2  18DE               	xorwf	postinc2,w,c
 19250  0049D4  B4D8               	btfsc	status,2,c
 19251  0049D6  D100               	goto	l14848
 19252  0049D8  D7EB               	goto	l14790
 19253                           
 19254                           ; BSR set to: 0
 19255  0049DA  D0FE               	goto	l14848
 19256                           
 19257                           ; BSR set to: 0
 19258  0049DC  D0FD               	goto	l14848
 19259                           
 19260                           ; BSR set to: 0
 19261                           ;MISC.c: 538: }
 19262                           ;MISC.c: 539: while(*This != 0 && *This != ' ' && *This != ',' && *This != '=')
 19263                           
 19264                           ; BSR set to: 0
 19265                           ;MISC.c: 536: }
 19266                           ;MISC.c: 537: This++;
 19267  0049DE  D100               	goto	l14850
 19268  0049E0                     l14798:
 19269                           
 19270                           ; BSR set to: 0
 19271                           ;MISC.c: 540: {
 19272                           ;MISC.c: 541: if(!Hex)
 19273  0049E0  0100               	movlb	0	; () banked
 19274  0049E2  5192               	movf	GetNumber@Hex& (0+255),w,b
 19275  0049E4  0100               	movlb	0	; () banked
 19276  0049E6  A4D8               	btfss	status,2,c
 19277  0049E8  D05B               	goto	l14816
 19278                           
 19279                           ; BSR set to: 0
 19280                           ;MISC.c: 542: {
 19281                           ;MISC.c: 543: if(*This >=48 && *This <= 57)
 19282  0049EA  C085  FFD9         	movff	GetNumber@This,fsr2l
 19283  0049EE  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19284  0049F2  0E2F               	movlw	47
 19285  0049F4  64DF               	cpfsgt	indf2,c
 19286  0049F6  D0F0               	goto	l14848
 19287                           
 19288                           ; BSR set to: 0
 19289  0049F8  C085  FFD9         	movff	GetNumber@This,fsr2l
 19290  0049FC  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19291  004A00  0E3A               	movlw	58
 19292  004A02  60DF               	cpfslt	indf2,c
 19293  004A04  D0E9               	goto	l14848
 19294                           
 19295                           ; BSR set to: 0
 19296                           ;MISC.c: 544: {
 19297                           ;MISC.c: 545: temp = temp * 10;
 19298  004A06  C095  F079         	movff	GetNumber@temp,___lmul@multiplier
 19299  004A0A  C096  F07A         	movff	GetNumber@temp+1,___lmul@multiplier+1
 19300  004A0E  C097  F07B         	movff	GetNumber@temp+2,___lmul@multiplier+2
 19301  004A12  C098  F07C         	movff	GetNumber@temp+3,___lmul@multiplier+3
 19302  004A16  0E0A               	movlw	10
 19303  004A18  0100               	movlb	0	; () banked
 19304  004A1A  6F7D               	movwf	___lmul@multiplicand& (0+255),b
 19305  004A1C  0E00               	movlw	0
 19306  004A1E  6F7E               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19307  004A20  0E00               	movlw	0
 19308  004A22  6F7F               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19309  004A24  0E00               	movlw	0
 19310  004A26  6F80               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19311  004A28  ECF0  F044         	call	___lmul	;wreg free
 19312  004A2C  C079  F095         	movff	?___lmul,GetNumber@temp
 19313  004A30  C07A  F096         	movff	?___lmul+1,GetNumber@temp+1
 19314  004A34  C07B  F097         	movff	?___lmul+2,GetNumber@temp+2
 19315  004A38  C07C  F098         	movff	?___lmul+3,GetNumber@temp+3
 19316                           
 19317                           ;MISC.c: 546: temp += *This - 48;
 19318  004A3C  C085  FFD9         	movff	GetNumber@This,fsr2l
 19319  004A40  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19320  004A44  50DF               	movf	indf2,w,c
 19321  004A46  0100               	movlb	0	; () banked
 19322  004A48  6F8A               	movwf	??_GetNumber& (0+255),b
 19323  004A4A  0ED0               	movlw	208
 19324  004A4C  0100               	movlb	0	; () banked
 19325  004A4E  258A               	addwf	??_GetNumber& (0+255),w,b
 19326  004A50  0100               	movlb	0	; () banked
 19327  004A52  6F8B               	movwf	(??_GetNumber+1)& (0+255),b
 19328  004A54  0100               	movlb	0	; () banked
 19329  004A56  6B8C               	clrf	(??_GetNumber+2)& (0+255),b
 19330  004A58  0EFF               	movlw	255
 19331  004A5A  238C               	addwfc	(??_GetNumber+2)& (0+255),f,b
 19332  004A5C  0100               	movlb	0	; () banked
 19333  004A5E  6B8D               	clrf	(??_GetNumber+3)& (0+255),b
 19334  004A60  0100               	movlb	0	; () banked
 19335  004A62  BF8C               	btfsc	(??_GetNumber+2)& (0+255),7,b
 19336  004A64  078D               	decf	(??_GetNumber+3)& (0+255),f,b
 19337  004A66  0100               	movlb	0	; () banked
 19338  004A68  518D               	movf	(??_GetNumber+3)& (0+255),w,b
 19339  004A6A  0100               	movlb	0	; () banked
 19340  004A6C  6F8E               	movwf	(??_GetNumber+4)& (0+255),b
 19341  004A6E  0100               	movlb	0	; () banked
 19342  004A70  518B               	movf	(??_GetNumber+1)& (0+255),w,b
 19343  004A72  0100               	movlb	0	; () banked
 19344  004A74  2795               	addwf	GetNumber@temp& (0+255),f,b
 19345  004A76  0100               	movlb	0	; () banked
 19346  004A78  518C               	movf	(??_GetNumber+2)& (0+255),w,b
 19347  004A7A  0100               	movlb	0	; () banked
 19348  004A7C  2396               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19349  004A7E  0100               	movlb	0	; () banked
 19350  004A80  518D               	movf	(??_GetNumber+3)& (0+255),w,b
 19351  004A82  0100               	movlb	0	; () banked
 19352  004A84  2397               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19353  004A86  0100               	movlb	0	; () banked
 19354  004A88  518E               	movf	(??_GetNumber+4)& (0+255),w,b
 19355  004A8A  0100               	movlb	0	; () banked
 19356  004A8C  2398               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 19357                           
 19358                           ; BSR set to: 0
 19359                           ;MISC.c: 547: i++;
 19360  004A8E  0100               	movlb	0	; () banked
 19361  004A90  2B93               	incf	GetNumber@i& (0+255),f,b
 19362  004A92                     l14810:
 19363                           
 19364                           ; BSR set to: 0
 19365                           ;MISC.c: 548: if(i>32)
 19366  004A92  0E20               	movlw	32
 19367  004A94  0100               	movlb	0	; () banked
 19368  004A96  6593               	cpfsgt	GetNumber@i& (0+255),b
 19369  004A98  D09F               	goto	l14848
 19370                           
 19371                           ; BSR set to: 0
 19372                           ;MISC.c: 549: {
 19373                           ;MISC.c: 550: return 4;
 19374  004A9A  0E04               	movlw	4
 19375                           
 19376                           ; BSR set to: 0
 19377  004A9C  0012               	return	
 19378                           
 19379                           ; BSR set to: 0
 19380                           ;MISC.c: 551: }
 19381                           ;MISC.c: 552: }
 19382                           ;MISC.c: 553: }
 19383                           
 19384                           ; BSR set to: 0
 19385  004A9E  D09C               	goto	l14848
 19386  004AA0                     l14816:
 19387                           
 19388                           ; BSR set to: 0
 19389                           ;MISC.c: 554: else
 19390                           ;MISC.c: 555: {
 19391                           ;MISC.c: 556: if((*This >=48 && *This <= 57) || (*This >=65 && *This <= 70) || (*This >=
      +                           97 && *This <= 102))
 19392  004AA0  C085  FFD9         	movff	GetNumber@This,fsr2l
 19393  004AA4  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19394  004AA8  0E2F               	movlw	47
 19395  004AAA  64DF               	cpfsgt	indf2,c
 19396  004AAC  D008               	goto	l14820
 19397                           
 19398                           ; BSR set to: 0
 19399  004AAE  C085  FFD9         	movff	GetNumber@This,fsr2l
 19400  004AB2  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19401  004AB6  0E39               	movlw	57
 19402  004AB8  64DF               	cpfsgt	indf2,c
 19403  004ABA  D01F               	goto	l14828
 19404  004ABC  D000               	goto	l14820
 19405  004ABE                     l14820:
 19406                           
 19407                           ; BSR set to: 0
 19408  004ABE  C085  FFD9         	movff	GetNumber@This,fsr2l
 19409  004AC2  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19410  004AC6  0E40               	movlw	64
 19411  004AC8  64DF               	cpfsgt	indf2,c
 19412  004ACA  D008               	goto	l14824
 19413                           
 19414                           ; BSR set to: 0
 19415  004ACC  C085  FFD9         	movff	GetNumber@This,fsr2l
 19416  004AD0  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19417  004AD4  0E46               	movlw	70
 19418  004AD6  64DF               	cpfsgt	indf2,c
 19419  004AD8  D010               	goto	l14828
 19420  004ADA  D000               	goto	l14824
 19421  004ADC                     l14824:
 19422                           
 19423                           ; BSR set to: 0
 19424  004ADC  C085  FFD9         	movff	GetNumber@This,fsr2l
 19425  004AE0  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19426  004AE4  0E60               	movlw	96
 19427  004AE6  64DF               	cpfsgt	indf2,c
 19428  004AE8  D077               	goto	l14848
 19429                           
 19430                           ; BSR set to: 0
 19431  004AEA  C085  FFD9         	movff	GetNumber@This,fsr2l
 19432  004AEE  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19433  004AF2  0E67               	movlw	103
 19434  004AF4  60DF               	cpfslt	indf2,c
 19435  004AF6  D070               	goto	l14848
 19436  004AF8  D000               	goto	l14828
 19437  004AFA                     l14828:
 19438                           
 19439                           ; BSR set to: 0
 19440                           ;MISC.c: 557: {
 19441                           ;MISC.c: 558: temp <<= 4;
 19442  004AFA  0100               	movlb	0	; () banked
 19443  004AFC  0E04               	movlw	4
 19444  004AFE                     u18305:
 19445  004AFE  90D8               	bcf	status,0,c
 19446  004B00  3795               	rlcf	GetNumber@temp& (0+255),f,b
 19447  004B02  3796               	rlcf	(GetNumber@temp+1)& (0+255),f,b
 19448  004B04  3797               	rlcf	(GetNumber@temp+2)& (0+255),f,b
 19449  004B06  3798               	rlcf	(GetNumber@temp+3)& (0+255),f,b
 19450  004B08  2EE8               	decfsz	wreg,f,c
 19451  004B0A  D7F9               	goto	u18305
 19452                           
 19453                           ; BSR set to: 0
 19454                           ;MISC.c: 559: tempThis = *This;
 19455  004B0C  C085  FFD9         	movff	GetNumber@This,fsr2l
 19456  004B10  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19457  004B14  50DF               	movf	indf2,w,c
 19458  004B16  0100               	movlb	0	; () banked
 19459  004B18  6F94               	movwf	GetNumber@tempThis& (0+255),b
 19460                           
 19461                           ; BSR set to: 0
 19462                           ;MISC.c: 560: if(IsLetter(tempThis))
 19463  004B1A  0100               	movlb	0	; () banked
 19464  004B1C  5194               	movf	GetNumber@tempThis& (0+255),w,b
 19465  004B1E  ECA1  F049         	call	_IsLetter
 19466  004B22  0900               	iorlw	0
 19467  004B24  B4D8               	btfsc	status,2,c
 19468  004B26  D029               	goto	l14838
 19469                           
 19470                           ;MISC.c: 561: {
 19471                           ;MISC.c: 562: lowercaseChar(&tempThis);
 19472  004B28  0E94               	movlw	low GetNumber@tempThis
 19473  004B2A  0100               	movlb	0	; () banked
 19474  004B2C  6F79               	movwf	lowercaseChar@Input& (0+255),b
 19475  004B2E  0E00               	movlw	high GetNumber@tempThis
 19476  004B30  0100               	movlb	0	; () banked
 19477  004B32  6F7A               	movwf	(lowercaseChar@Input+1)& (0+255),b
 19478  004B34  EC62  F049         	call	_lowercaseChar	;wreg free
 19479                           
 19480                           ;MISC.c: 563: temp += (tempThis - 87);
 19481  004B38  0EA9               	movlw	169
 19482  004B3A  0100               	movlb	0	; () banked
 19483  004B3C  2594               	addwf	GetNumber@tempThis& (0+255),w,b
 19484  004B3E  0100               	movlb	0	; () banked
 19485  004B40  6F8A               	movwf	??_GetNumber& (0+255),b
 19486  004B42  0100               	movlb	0	; () banked
 19487  004B44  6B8B               	clrf	(??_GetNumber+1)& (0+255),b
 19488  004B46  0EFF               	movlw	255
 19489  004B48  238B               	addwfc	(??_GetNumber+1)& (0+255),f,b
 19490  004B4A  0100               	movlb	0	; () banked
 19491  004B4C  6B8C               	clrf	(??_GetNumber+2)& (0+255),b
 19492  004B4E  0100               	movlb	0	; () banked
 19493  004B50  BF8B               	btfsc	(??_GetNumber+1)& (0+255),7,b
 19494  004B52  078C               	decf	(??_GetNumber+2)& (0+255),f,b
 19495  004B54  0100               	movlb	0	; () banked
 19496  004B56  518C               	movf	(??_GetNumber+2)& (0+255),w,b
 19497  004B58  0100               	movlb	0	; () banked
 19498  004B5A  6F8D               	movwf	(??_GetNumber+3)& (0+255),b
 19499  004B5C  0100               	movlb	0	; () banked
 19500  004B5E  518A               	movf	??_GetNumber& (0+255),w,b
 19501  004B60  0100               	movlb	0	; () banked
 19502  004B62  2795               	addwf	GetNumber@temp& (0+255),f,b
 19503  004B64  0100               	movlb	0	; () banked
 19504  004B66  518B               	movf	(??_GetNumber+1)& (0+255),w,b
 19505  004B68  0100               	movlb	0	; () banked
 19506  004B6A  2396               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19507  004B6C  0100               	movlb	0	; () banked
 19508  004B6E  518C               	movf	(??_GetNumber+2)& (0+255),w,b
 19509  004B70  0100               	movlb	0	; () banked
 19510  004B72  2397               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19511  004B74  0100               	movlb	0	; () banked
 19512  004B76  518D               	movf	(??_GetNumber+3)& (0+255),w,b
 19513  004B78  D027               	goto	L16
 19514  004B7A                     l14838:
 19515                           
 19516                           ;MISC.c: 565: else
 19517                           ;MISC.c: 566: {
 19518                           ;MISC.c: 567: temp += (*This - 48);
 19519  004B7A  C085  FFD9         	movff	GetNumber@This,fsr2l
 19520  004B7E  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19521  004B82  50DF               	movf	indf2,w,c
 19522  004B84  0100               	movlb	0	; () banked
 19523  004B86  6F8A               	movwf	??_GetNumber& (0+255),b
 19524  004B88  0ED0               	movlw	208
 19525  004B8A  0100               	movlb	0	; () banked
 19526  004B8C  258A               	addwf	??_GetNumber& (0+255),w,b
 19527  004B8E  0100               	movlb	0	; () banked
 19528  004B90  6F8B               	movwf	(??_GetNumber+1)& (0+255),b
 19529  004B92  0100               	movlb	0	; () banked
 19530  004B94  6B8C               	clrf	(??_GetNumber+2)& (0+255),b
 19531  004B96  0EFF               	movlw	255
 19532  004B98  238C               	addwfc	(??_GetNumber+2)& (0+255),f,b
 19533  004B9A  0100               	movlb	0	; () banked
 19534  004B9C  6B8D               	clrf	(??_GetNumber+3)& (0+255),b
 19535  004B9E  0100               	movlb	0	; () banked
 19536  004BA0  BF8C               	btfsc	(??_GetNumber+2)& (0+255),7,b
 19537  004BA2  078D               	decf	(??_GetNumber+3)& (0+255),f,b
 19538  004BA4  0100               	movlb	0	; () banked
 19539  004BA6  518D               	movf	(??_GetNumber+3)& (0+255),w,b
 19540  004BA8  0100               	movlb	0	; () banked
 19541  004BAA  6F8E               	movwf	(??_GetNumber+4)& (0+255),b
 19542  004BAC  0100               	movlb	0	; () banked
 19543  004BAE  518B               	movf	(??_GetNumber+1)& (0+255),w,b
 19544  004BB0  0100               	movlb	0	; () banked
 19545  004BB2  2795               	addwf	GetNumber@temp& (0+255),f,b
 19546  004BB4  0100               	movlb	0	; () banked
 19547  004BB6  518C               	movf	(??_GetNumber+2)& (0+255),w,b
 19548  004BB8  0100               	movlb	0	; () banked
 19549  004BBA  2396               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19550  004BBC  0100               	movlb	0	; () banked
 19551  004BBE  518D               	movf	(??_GetNumber+3)& (0+255),w,b
 19552  004BC0  0100               	movlb	0	; () banked
 19553  004BC2  2397               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19554  004BC4  0100               	movlb	0	; () banked
 19555  004BC6  518E               	movf	(??_GetNumber+4)& (0+255),w,b
 19556  004BC8                     L16:
 19557  004BC8  0100               	movlb	0	; () banked
 19558  004BCA  2398               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 19559  004BCC  D000               	goto	l14840
 19560  004BCE                     l14840:
 19561                           
 19562                           ; BSR set to: 0
 19563                           ;MISC.c: 568: }
 19564                           ;MISC.c: 569: i++;
 19565  004BCE  0100               	movlb	0	; () banked
 19566  004BD0  2B93               	incf	GetNumber@i& (0+255),f,b
 19567  004BD2  D75F               	goto	l14810
 19568                           
 19569                           ; BSR set to: 0
 19570                           
 19571                           ; BSR set to: 0
 19572                           ;MISC.c: 571: {
 19573                           ;MISC.c: 572: return 4;
 19574                           
 19575                           ; BSR set to: 0
 19576                           ;MISC.c: 570: if(i>32)
 19577  004BD4  0012               	return	
 19578                           
 19579                           ; BSR set to: 0
 19580                           
 19581                           ; BSR set to: 0
 19582  004BD6  D000               	goto	l14848
 19583  004BD8                     l14848:
 19584                           
 19585                           ; BSR set to: 0
 19586                           ;MISC.c: 573: }
 19587                           ;MISC.c: 574: }
 19588                           ;MISC.c: 575: }
 19589                           ;MISC.c: 576: This++;
 19590  004BD8  0100               	movlb	0	; () banked
 19591  004BDA  4B85               	infsnz	GetNumber@This& (0+255),f,b
 19592  004BDC  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 19593  004BDE  D000               	goto	l14850
 19594  004BE0                     l14850:
 19595                           
 19596                           ; BSR set to: 0
 19597  004BE0  C085  FFD9         	movff	GetNumber@This,fsr2l
 19598  004BE4  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19599  004BE8  50DF               	movf	indf2,w,c
 19600  004BEA  B4D8               	btfsc	status,2,c
 19601  004BEC  D01A               	goto	l14858
 19602                           
 19603                           ; BSR set to: 0
 19604  004BEE  C085  FFD9         	movff	GetNumber@This,fsr2l
 19605  004BF2  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19606  004BF6  0E20               	movlw	32
 19607  004BF8  18DE               	xorwf	postinc2,w,c
 19608  004BFA  B4D8               	btfsc	status,2,c
 19609  004BFC  D012               	goto	l14858
 19610                           
 19611                           ; BSR set to: 0
 19612  004BFE  C085  FFD9         	movff	GetNumber@This,fsr2l
 19613  004C02  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19614  004C06  0E2C               	movlw	44
 19615  004C08  18DE               	xorwf	postinc2,w,c
 19616  004C0A  B4D8               	btfsc	status,2,c
 19617  004C0C  D00A               	goto	l14858
 19618                           
 19619                           ; BSR set to: 0
 19620  004C0E  C085  FFD9         	movff	GetNumber@This,fsr2l
 19621  004C12  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19622  004C16  0E3D               	movlw	61
 19623  004C18  18DE               	xorwf	postinc2,w,c
 19624  004C1A  B4D8               	btfsc	status,2,c
 19625  004C1C  D002               	goto	l14858
 19626  004C1E  D6E0               	goto	l14798
 19627                           
 19628                           ; BSR set to: 0
 19629  004C20  D000               	goto	l14858
 19630  004C22                     l14858:
 19631                           
 19632                           ; BSR set to: 0
 19633                           ;MISC.c: 577: }
 19634                           ;MISC.c: 578: if(negative)
 19635  004C22  0100               	movlb	0	; () banked
 19636  004C24  5190               	movf	GetNumber@negative& (0+255),w,b
 19637  004C26  0100               	movlb	0	; () banked
 19638  004C28  B4D8               	btfsc	status,2,c
 19639  004C2A  D00A               	goto	l14862
 19640                           
 19641                           ; BSR set to: 0
 19642                           ;MISC.c: 579: {
 19643                           ;MISC.c: 580: temp = (temp * -1);
 19644  004C2C  0100               	movlb	0	; () banked
 19645  004C2E  1F98               	comf	(GetNumber@temp+3)& (0+255),f,b
 19646  004C30  1F97               	comf	(GetNumber@temp+2)& (0+255),f,b
 19647  004C32  1F96               	comf	(GetNumber@temp+1)& (0+255),f,b
 19648  004C34  6D95               	negf	GetNumber@temp& (0+255),b
 19649  004C36  0E00               	movlw	0
 19650  004C38  2396               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19651  004C3A  2397               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19652  004C3C  2398               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 19653  004C3E  D000               	goto	l14862
 19654  004C40                     l14862:
 19655                           
 19656                           ; BSR set to: 0
 19657                           ;MISC.c: 581: }
 19658                           ;MISC.c: 582: *result = temp;
 19659  004C40  C088  FFD9         	movff	GetNumber@result,fsr2l
 19660  004C44  C089  FFDA         	movff	GetNumber@result+1,fsr2h
 19661  004C48  C095  FFDE         	movff	GetNumber@temp,postinc2
 19662  004C4C  C096  FFDE         	movff	GetNumber@temp+1,postinc2
 19663  004C50  C097  FFDE         	movff	GetNumber@temp+2,postinc2
 19664  004C54  C098  FFDE         	movff	GetNumber@temp+3,postinc2
 19665                           
 19666                           ; BSR set to: 0
 19667                           ;MISC.c: 583: return 0;
 19668  004C58  0E00               	movlw	0
 19669  004C5A  0012               	return	
 19670                           
 19671                           ; BSR set to: 0
 19672                           
 19673                           ; BSR set to: 0
 19674  004C5C  0012               	return		;funcret
 19675  004C5E                     __end_of_GetNumber:
 19676                           	opt stack 0
 19677                           tblptru	equ	0xFF8
 19678                           tblptrh	equ	0xFF7
 19679                           tblptrl	equ	0xFF6
 19680                           tablat	equ	0xFF5
 19681                           prodh	equ	0xFF4
 19682                           prodl	equ	0xFF3
 19683                           intcon	equ	0xFF2
 19684                           indf0	equ	0xFEF
 19685                           postinc0	equ	0xFEE
 19686                           fsr0h	equ	0xFEA
 19687                           fsr0l	equ	0xFE9
 19688                           wreg	equ	0xFE8
 19689                           indf1	equ	0xFE7
 19690                           postdec1	equ	0xFE5
 19691                           fsr1h	equ	0xFE2
 19692                           fsr1l	equ	0xFE1
 19693                           indf2	equ	0xFDF
 19694                           postinc2	equ	0xFDE
 19695                           postdec2	equ	0xFDD
 19696                           fsr2h	equ	0xFDA
 19697                           fsr2l	equ	0xFD9
 19698                           status	equ	0xFD8
 19699                           
 19700 ;; *************** function _lowercaseChar *****************
 19701 ;; Defined at:
 19702 ;;		line 349 in file "MISC.c"
 19703 ;; Parameters:    Size  Location     Type
 19704 ;;  Input           2   25[BANK0 ] PTR unsigned char 
 19705 ;;		 -> GetNumber@tempThis(1), StringContainsCaseInsensitive@tempThat(1), StringContainsCaseInsensitive@tempThis(1), Str
      +ingMatchCaseInsensitive@tempThat(1), 
 19706 ;;		 -> StringMatchCaseInsensitive@tempThis(1), 
 19707 ;; Auto vars:     Size  Location     Type
 19708 ;;		None
 19709 ;; Return value:  Size  Location     Type
 19710 ;;		None               void
 19711 ;; Registers used:
 19712 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19713 ;; Tracked objects:
 19714 ;;		On entry : 0/0
 19715 ;;		On exit  : 0/0
 19716 ;;		Unchanged: 0/0
 19717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19718 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19720 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19721 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19722 ;;Total ram usage:        3 bytes
 19723 ;; Hardware stack levels used:    1
 19724 ;; Hardware stack levels required when called:    6
 19725 ;; This function calls:
 19726 ;;		Nothing
 19727 ;; This function is called by:
 19728 ;;		_StringMatchCaseInsensitive
 19729 ;;		_StringContainsCaseInsensitive
 19730 ;;		_GetNumber
 19731 ;; This function uses a non-reentrant model
 19732 ;;
 19733                           
 19734                           	psect	text31
 19735  0092C4                     __ptext31:
 19736                           	opt stack 0
 19737  0092C4                     _lowercaseChar:
 19738                           	opt stack 22
 19739                           
 19740                           ;MISC.c: 351: if((*Input >= 65) && (*Input <= 90 ))
 19741                           
 19742                           ; BSR set to: 0
 19743                           ;incstack = 0
 19744  0092C4  C079  FFD9         	movff	lowercaseChar@Input,fsr2l
 19745  0092C8  C07A  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 19746  0092CC  0E40               	movlw	64
 19747  0092CE  64DF               	cpfsgt	indf2,c
 19748  0092D0  0012               	return	
 19749  0092D2  C079  FFD9         	movff	lowercaseChar@Input,fsr2l
 19750  0092D6  C07A  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 19751  0092DA  0E5B               	movlw	91
 19752  0092DC  60DF               	cpfslt	indf2,c
 19753  0092DE  0012               	return	
 19754                           
 19755                           ;MISC.c: 352: {
 19756                           ;MISC.c: 353: *Input += 32;
 19757  0092E0  C079  FFD9         	movff	lowercaseChar@Input,fsr2l
 19758  0092E4  C07A  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 19759  0092E8  0E20               	movlw	32
 19760  0092EA  26DF               	addwf	indf2,f,c
 19761  0092EC  0012               	return	
 19762  0092EE  0012               	return		;funcret
 19763  0092F0                     __end_of_lowercaseChar:
 19764                           	opt stack 0
 19765                           tblptru	equ	0xFF8
 19766                           tblptrh	equ	0xFF7
 19767                           tblptrl	equ	0xFF6
 19768                           tablat	equ	0xFF5
 19769                           prodh	equ	0xFF4
 19770                           prodl	equ	0xFF3
 19771                           intcon	equ	0xFF2
 19772                           indf0	equ	0xFEF
 19773                           postinc0	equ	0xFEE
 19774                           fsr0h	equ	0xFEA
 19775                           fsr0l	equ	0xFE9
 19776                           wreg	equ	0xFE8
 19777                           indf1	equ	0xFE7
 19778                           postdec1	equ	0xFE5
 19779                           fsr1h	equ	0xFE2
 19780                           fsr1l	equ	0xFE1
 19781                           indf2	equ	0xFDF
 19782                           postinc2	equ	0xFDE
 19783                           postdec2	equ	0xFDD
 19784                           fsr2h	equ	0xFDA
 19785                           fsr2l	equ	0xFD9
 19786                           status	equ	0xFD8
 19787                           
 19788 ;; *************** function ___lmul *****************
 19789 ;; Defined at:
 19790 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
 19791 ;; Parameters:    Size  Location     Type
 19792 ;;  multiplier      4   25[BANK0 ] unsigned long 
 19793 ;;  multiplicand    4   29[BANK0 ] unsigned long 
 19794 ;; Auto vars:     Size  Location     Type
 19795 ;;  product         4   33[BANK0 ] unsigned long 
 19796 ;; Return value:  Size  Location     Type
 19797 ;;                  4   25[BANK0 ] unsigned long 
 19798 ;; Registers used:
 19799 ;;		wreg, status,2, status,0
 19800 ;; Tracked objects:
 19801 ;;		On entry : 0/0
 19802 ;;		On exit  : 0/0
 19803 ;;		Unchanged: 0/0
 19804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19805 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19806 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19808 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19809 ;;Total ram usage:       12 bytes
 19810 ;; Hardware stack levels used:    1
 19811 ;; Hardware stack levels required when called:    6
 19812 ;; This function calls:
 19813 ;;		Nothing
 19814 ;; This function is called by:
 19815 ;;		_GetNumber
 19816 ;; This function uses a non-reentrant model
 19817 ;;
 19818                           
 19819                           	psect	text32
 19820  0089E0                     __ptext32:
 19821                           	opt stack 0
 19822  0089E0                     ___lmul:
 19823                           	opt stack 22
 19824                           
 19825                           ;incstack = 0
 19826  0089E0  0E00               	movlw	0
 19827  0089E2  0100               	movlb	0	; () banked
 19828  0089E4  6F81               	movwf	___lmul@product& (0+255),b
 19829  0089E6  0E00               	movlw	0
 19830  0089E8  6F82               	movwf	(___lmul@product+1)& (0+255),b
 19831  0089EA  0E00               	movlw	0
 19832  0089EC  6F83               	movwf	(___lmul@product+2)& (0+255),b
 19833  0089EE  0E00               	movlw	0
 19834  0089F0  6F84               	movwf	(___lmul@product+3)& (0+255),b
 19835  0089F2  D000               	goto	l14304
 19836  0089F4                     l14304:
 19837                           
 19838                           ; BSR set to: 0
 19839  0089F4  0100               	movlb	0	; () banked
 19840  0089F6  A179               	btfss	___lmul@multiplier& (0+255),0,b
 19841  0089F8  D011               	goto	l14308
 19842                           
 19843                           ; BSR set to: 0
 19844  0089FA  0100               	movlb	0	; () banked
 19845  0089FC  517D               	movf	___lmul@multiplicand& (0+255),w,b
 19846  0089FE  0100               	movlb	0	; () banked
 19847  008A00  2781               	addwf	___lmul@product& (0+255),f,b
 19848  008A02  0100               	movlb	0	; () banked
 19849  008A04  517E               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 19850  008A06  0100               	movlb	0	; () banked
 19851  008A08  2382               	addwfc	(___lmul@product+1)& (0+255),f,b
 19852  008A0A  0100               	movlb	0	; () banked
 19853  008A0C  517F               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 19854  008A0E  0100               	movlb	0	; () banked
 19855  008A10  2383               	addwfc	(___lmul@product+2)& (0+255),f,b
 19856  008A12  0100               	movlb	0	; () banked
 19857  008A14  5180               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 19858  008A16  0100               	movlb	0	; () banked
 19859  008A18  2384               	addwfc	(___lmul@product+3)& (0+255),f,b
 19860  008A1A  D000               	goto	l14308
 19861  008A1C                     l14308:
 19862                           
 19863                           ; BSR set to: 0
 19864  008A1C  0100               	movlb	0	; () banked
 19865  008A1E  90D8               	bcf	status,0,c
 19866  008A20  377D               	rlcf	___lmul@multiplicand& (0+255),f,b
 19867  008A22  377E               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 19868  008A24  377F               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 19869  008A26  3780               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 19870                           
 19871                           ; BSR set to: 0
 19872  008A28  0100               	movlb	0	; () banked
 19873  008A2A  90D8               	bcf	status,0,c
 19874  008A2C  337C               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 19875  008A2E  337B               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 19876  008A30  337A               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 19877  008A32  3379               	rrcf	___lmul@multiplier& (0+255),f,b
 19878  008A34  0100               	movlb	0	; () banked
 19879  008A36  5179               	movf	___lmul@multiplier& (0+255),w,b
 19880  008A38  0100               	movlb	0	; () banked
 19881  008A3A  117A               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 19882  008A3C  0100               	movlb	0	; () banked
 19883  008A3E  117B               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 19884  008A40  0100               	movlb	0	; () banked
 19885  008A42  117C               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 19886  008A44  A4D8               	btfss	status,2,c
 19887  008A46  D7D6               	goto	l14304
 19888                           
 19889                           ; BSR set to: 0
 19890  008A48  C081  F079         	movff	___lmul@product,?___lmul
 19891  008A4C  C082  F07A         	movff	___lmul@product+1,?___lmul+1
 19892  008A50  C083  F07B         	movff	___lmul@product+2,?___lmul+2
 19893  008A54  C084  F07C         	movff	___lmul@product+3,?___lmul+3
 19894                           
 19895                           ; BSR set to: 0
 19896  008A58  0012               	return		;funcret
 19897  008A5A                     __end_of___lmul:
 19898                           	opt stack 0
 19899                           tblptru	equ	0xFF8
 19900                           tblptrh	equ	0xFF7
 19901                           tblptrl	equ	0xFF6
 19902                           tablat	equ	0xFF5
 19903                           prodh	equ	0xFF4
 19904                           prodl	equ	0xFF3
 19905                           intcon	equ	0xFF2
 19906                           indf0	equ	0xFEF
 19907                           postinc0	equ	0xFEE
 19908                           fsr0h	equ	0xFEA
 19909                           fsr0l	equ	0xFE9
 19910                           wreg	equ	0xFE8
 19911                           indf1	equ	0xFE7
 19912                           postdec1	equ	0xFE5
 19913                           fsr1h	equ	0xFE2
 19914                           fsr1l	equ	0xFE1
 19915                           indf2	equ	0xFDF
 19916                           postinc2	equ	0xFDE
 19917                           postdec2	equ	0xFDD
 19918                           fsr2h	equ	0xFDA
 19919                           fsr2l	equ	0xFD9
 19920                           status	equ	0xFD8
 19921                           
 19922 ;; *************** function _IsLetter *****************
 19923 ;; Defined at:
 19924 ;;		line 99 in file "MISC.c"
 19925 ;; Parameters:    Size  Location     Type
 19926 ;;  data            1    wreg     unsigned char 
 19927 ;; Auto vars:     Size  Location     Type
 19928 ;;  data            1   25[BANK0 ] unsigned char 
 19929 ;; Return value:  Size  Location     Type
 19930 ;;                  1    wreg      unsigned char 
 19931 ;; Registers used:
 19932 ;;		wreg, status,2, status,0
 19933 ;; Tracked objects:
 19934 ;;		On entry : 0/0
 19935 ;;		On exit  : 0/0
 19936 ;;		Unchanged: 0/0
 19937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19939 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19941 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19942 ;;Total ram usage:        1 bytes
 19943 ;; Hardware stack levels used:    1
 19944 ;; Hardware stack levels required when called:    6
 19945 ;; This function calls:
 19946 ;;		Nothing
 19947 ;; This function is called by:
 19948 ;;		_GetNumber
 19949 ;; This function uses a non-reentrant model
 19950 ;;
 19951                           
 19952                           	psect	text33
 19953  009342                     __ptext33:
 19954                           	opt stack 0
 19955  009342                     _IsLetter:
 19956                           	opt stack 22
 19957                           
 19958                           ; BSR set to: 0
 19959                           ;incstack = 0
 19960                           ;IsLetter@data stored from wreg
 19961  009342  0100               	movlb	0	; () banked
 19962  009344  6F79               	movwf	IsLetter@data& (0+255),b
 19963                           
 19964                           ; BSR set to: 0
 19965                           ;MISC.c: 101: if(data >= 65 && data <= 90)
 19966  009346  0E40               	movlw	64
 19967  009348  0100               	movlb	0	; () banked
 19968  00934A  6579               	cpfsgt	IsLetter@data& (0+255),b
 19969  00934C  D006               	goto	l13892
 19970                           
 19971                           ; BSR set to: 0
 19972  00934E  0E5B               	movlw	91
 19973  009350  0100               	movlb	0	; () banked
 19974  009352  6179               	cpfslt	IsLetter@data& (0+255),b
 19975  009354  D002               	goto	l13892
 19976                           
 19977                           ; BSR set to: 0
 19978                           ;MISC.c: 102: {
 19979                           ;MISC.c: 103: return 1;
 19980  009356  0E01               	movlw	1
 19981                           
 19982                           ; BSR set to: 0
 19983  009358  0012               	return	
 19984  00935A                     l13892:
 19985                           
 19986                           ; BSR set to: 0
 19987                           ;MISC.c: 104: }
 19988                           ;MISC.c: 105: return 0;
 19989  00935A  0E00               	movlw	0
 19990  00935C  0012               	return	
 19991                           
 19992                           ; BSR set to: 0
 19993                           
 19994                           ; BSR set to: 0
 19995  00935E  0012               	return		;funcret
 19996  009360                     __end_of_IsLetter:
 19997                           	opt stack 0
 19998                           tblptru	equ	0xFF8
 19999                           tblptrh	equ	0xFF7
 20000                           tblptrl	equ	0xFF6
 20001                           tablat	equ	0xFF5
 20002                           prodh	equ	0xFF4
 20003                           prodl	equ	0xFF3
 20004                           intcon	equ	0xFF2
 20005                           indf0	equ	0xFEF
 20006                           postinc0	equ	0xFEE
 20007                           fsr0h	equ	0xFEA
 20008                           fsr0l	equ	0xFE9
 20009                           wreg	equ	0xFE8
 20010                           indf1	equ	0xFE7
 20011                           postdec1	equ	0xFE5
 20012                           fsr1h	equ	0xFE2
 20013                           fsr1l	equ	0xFE1
 20014                           indf2	equ	0xFDF
 20015                           postinc2	equ	0xFDE
 20016                           postdec2	equ	0xFDD
 20017                           fsr2h	equ	0xFDA
 20018                           fsr2l	equ	0xFD9
 20019                           status	equ	0xFD8
 20020                           
 20021 ;; *************** function _EncodeNEC *****************
 20022 ;; Defined at:
 20023 ;;		line 530 in file "IR.c"
 20024 ;; Parameters:    Size  Location     Type
 20025 ;;  address         1    wreg     unsigned char 
 20026 ;;  command         1   29[BANK0 ] unsigned char 
 20027 ;; Auto vars:     Size  Location     Type
 20028 ;;  address         1   69[BANK0 ] unsigned char 
 20029 ;;  temp4           4   65[BANK0 ] unsigned long 
 20030 ;;  temp3           4   61[BANK0 ] unsigned long 
 20031 ;;  temp2           4   57[BANK0 ] unsigned long 
 20032 ;;  temp1           4   53[BANK0 ] unsigned long 
 20033 ;; Return value:  Size  Location     Type
 20034 ;;                  4   29[BANK0 ] unsigned long 
 20035 ;; Registers used:
 20036 ;;		wreg, status,2, status,0, cstack
 20037 ;; Tracked objects:
 20038 ;;		On entry : 0/0
 20039 ;;		On exit  : 0/0
 20040 ;;		Unchanged: 0/0
 20041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20042 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20043 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20044 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20045 ;;      Totals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20046 ;;Total ram usage:       41 bytes
 20047 ;; Hardware stack levels used:    1
 20048 ;; Hardware stack levels required when called:    7
 20049 ;; This function calls:
 20050 ;;		_Reverse_Byte
 20051 ;; This function is called by:
 20052 ;;		_UseBluetooth
 20053 ;; This function uses a non-reentrant model
 20054 ;;
 20055                           
 20056                           	psect	text34
 20057  00723E                     __ptext34:
 20058                           	opt stack 0
 20059  00723E                     _EncodeNEC:
 20060                           	opt stack 22
 20061                           
 20062                           ; BSR set to: 0
 20063                           ;incstack = 0
 20064                           ;EncodeNEC@address stored from wreg
 20065  00723E  0100               	movlb	0	; () banked
 20066  007240  6FA5               	movwf	EncodeNEC@address& (0+255),b
 20067                           
 20068                           ; BSR set to: 0
 20069                           ;IR.c: 532: unsigned long temp1,
 20070                           ;IR.c: 533: temp2,
 20071                           ;IR.c: 534: temp3,
 20072                           ;IR.c: 535: temp4;
 20073                           ;IR.c: 543: temp1 = (unsigned long) Reverse_Byte(address);
 20074  007242  0100               	movlb	0	; () banked
 20075  007244  51A5               	movf	EncodeNEC@address& (0+255),w,b
 20076  007246  EC6D  F040         	call	_Reverse_Byte
 20077  00724A  0100               	movlb	0	; () banked
 20078  00724C  6F81               	movwf	??_EncodeNEC& (0+255),b
 20079  00724E  0100               	movlb	0	; () banked
 20080  007250  5181               	movf	??_EncodeNEC& (0+255),w,b
 20081  007252  0100               	movlb	0	; () banked
 20082  007254  6F95               	movwf	EncodeNEC@temp1& (0+255),b
 20083  007256  6B96               	clrf	(EncodeNEC@temp1+1)& (0+255),b
 20084  007258  6B97               	clrf	(EncodeNEC@temp1+2)& (0+255),b
 20085  00725A  6B98               	clrf	(EncodeNEC@temp1+3)& (0+255),b
 20086                           
 20087                           ;IR.c: 544: temp2 = (unsigned long) Reverse_Byte(~address);
 20088  00725C  0100               	movlb	0	; () banked
 20089  00725E  51A5               	movf	EncodeNEC@address& (0+255),w,b
 20090  007260  0AFF               	xorlw	255
 20091  007262  EC6D  F040         	call	_Reverse_Byte
 20092  007266  0100               	movlb	0	; () banked
 20093  007268  6F81               	movwf	??_EncodeNEC& (0+255),b
 20094  00726A  0100               	movlb	0	; () banked
 20095  00726C  5181               	movf	??_EncodeNEC& (0+255),w,b
 20096  00726E  0100               	movlb	0	; () banked
 20097  007270  6F99               	movwf	EncodeNEC@temp2& (0+255),b
 20098  007272  6B9A               	clrf	(EncodeNEC@temp2+1)& (0+255),b
 20099  007274  6B9B               	clrf	(EncodeNEC@temp2+2)& (0+255),b
 20100  007276  6B9C               	clrf	(EncodeNEC@temp2+3)& (0+255),b
 20101                           
 20102                           ;IR.c: 545: temp3 = (unsigned long) Reverse_Byte(command);
 20103  007278  0100               	movlb	0	; () banked
 20104  00727A  517D               	movf	EncodeNEC@command& (0+255),w,b
 20105  00727C  EC6D  F040         	call	_Reverse_Byte
 20106  007280  0100               	movlb	0	; () banked
 20107  007282  6F81               	movwf	??_EncodeNEC& (0+255),b
 20108  007284  0100               	movlb	0	; () banked
 20109  007286  5181               	movf	??_EncodeNEC& (0+255),w,b
 20110  007288  0100               	movlb	0	; () banked
 20111  00728A  6F9D               	movwf	EncodeNEC@temp3& (0+255),b
 20112  00728C  6B9E               	clrf	(EncodeNEC@temp3+1)& (0+255),b
 20113  00728E  6B9F               	clrf	(EncodeNEC@temp3+2)& (0+255),b
 20114  007290  6BA0               	clrf	(EncodeNEC@temp3+3)& (0+255),b
 20115                           
 20116                           ;IR.c: 546: temp4 = (unsigned long) Reverse_Byte(~command);
 20117  007292  0100               	movlb	0	; () banked
 20118  007294  517D               	movf	EncodeNEC@command& (0+255),w,b
 20119  007296  0AFF               	xorlw	255
 20120  007298  EC6D  F040         	call	_Reverse_Byte
 20121  00729C  0100               	movlb	0	; () banked
 20122  00729E  6F81               	movwf	??_EncodeNEC& (0+255),b
 20123  0072A0  0100               	movlb	0	; () banked
 20124  0072A2  5181               	movf	??_EncodeNEC& (0+255),w,b
 20125  0072A4  0100               	movlb	0	; () banked
 20126  0072A6  6FA1               	movwf	EncodeNEC@temp4& (0+255),b
 20127  0072A8  6BA2               	clrf	(EncodeNEC@temp4+1)& (0+255),b
 20128  0072AA  6BA3               	clrf	(EncodeNEC@temp4+2)& (0+255),b
 20129  0072AC  6BA4               	clrf	(EncodeNEC@temp4+3)& (0+255),b
 20130                           
 20131                           ; BSR set to: 0
 20132                           ;IR.c: 548: return ((temp1 << 24) + (temp2 << 16) + (temp3 << 8) + temp4);
 20133  0072AE  C09D  F082         	movff	EncodeNEC@temp3,??_EncodeNEC+1
 20134  0072B2  C09E  F083         	movff	EncodeNEC@temp3+1,??_EncodeNEC+2
 20135  0072B6  C09F  F084         	movff	EncodeNEC@temp3+2,??_EncodeNEC+3
 20136  0072BA  0100               	movlb	0	; () banked
 20137  0072BC  6B81               	clrf	??_EncodeNEC& (0+255),b
 20138  0072BE  C099  F085         	movff	EncodeNEC@temp2,??_EncodeNEC+4
 20139  0072C2  C09A  F086         	movff	EncodeNEC@temp2+1,??_EncodeNEC+5
 20140  0072C6  C09B  F087         	movff	EncodeNEC@temp2+2,??_EncodeNEC+6
 20141  0072CA  C09C  F088         	movff	EncodeNEC@temp2+3,??_EncodeNEC+7
 20142  0072CE  C086  F088         	movff	??_EncodeNEC+5,??_EncodeNEC+7
 20143  0072D2  C085  F087         	movff	??_EncodeNEC+4,??_EncodeNEC+6
 20144  0072D6  0100               	movlb	0	; () banked
 20145  0072D8  6B86               	clrf	(??_EncodeNEC+5)& (0+255),b
 20146  0072DA  6B85               	clrf	(??_EncodeNEC+4)& (0+255),b
 20147  0072DC  C095  F089         	movff	EncodeNEC@temp1,??_EncodeNEC+8
 20148  0072E0  C096  F08A         	movff	EncodeNEC@temp1+1,??_EncodeNEC+9
 20149  0072E4  C097  F08B         	movff	EncodeNEC@temp1+2,??_EncodeNEC+10
 20150  0072E8  C098  F08C         	movff	EncodeNEC@temp1+3,??_EncodeNEC+11
 20151  0072EC  C089  F08C         	movff	??_EncodeNEC+8,??_EncodeNEC+11
 20152  0072F0  0100               	movlb	0	; () banked
 20153  0072F2  6B8B               	clrf	(??_EncodeNEC+10)& (0+255),b
 20154  0072F4  6B8A               	clrf	(??_EncodeNEC+9)& (0+255),b
 20155  0072F6  6B89               	clrf	(??_EncodeNEC+8)& (0+255),b
 20156  0072F8  0100               	movlb	0	; () banked
 20157  0072FA  5185               	movf	(??_EncodeNEC+4)& (0+255),w,b
 20158  0072FC  0100               	movlb	0	; () banked
 20159  0072FE  2589               	addwf	(??_EncodeNEC+8)& (0+255),w,b
 20160  007300  0100               	movlb	0	; () banked
 20161  007302  6F8D               	movwf	(??_EncodeNEC+12)& (0+255),b
 20162  007304  0100               	movlb	0	; () banked
 20163  007306  5186               	movf	(??_EncodeNEC+5)& (0+255),w,b
 20164  007308  0100               	movlb	0	; () banked
 20165  00730A  218A               	addwfc	(??_EncodeNEC+9)& (0+255),w,b
 20166  00730C  0100               	movlb	0	; () banked
 20167  00730E  6F8E               	movwf	(??_EncodeNEC+13)& (0+255),b
 20168  007310  0100               	movlb	0	; () banked
 20169  007312  5187               	movf	(??_EncodeNEC+6)& (0+255),w,b
 20170  007314  0100               	movlb	0	; () banked
 20171  007316  218B               	addwfc	(??_EncodeNEC+10)& (0+255),w,b
 20172  007318  0100               	movlb	0	; () banked
 20173  00731A  6F8F               	movwf	(??_EncodeNEC+14)& (0+255),b
 20174  00731C  0100               	movlb	0	; () banked
 20175  00731E  5188               	movf	(??_EncodeNEC+7)& (0+255),w,b
 20176  007320  0100               	movlb	0	; () banked
 20177  007322  218C               	addwfc	(??_EncodeNEC+11)& (0+255),w,b
 20178  007324  0100               	movlb	0	; () banked
 20179  007326  6F90               	movwf	(??_EncodeNEC+15)& (0+255),b
 20180  007328  0100               	movlb	0	; () banked
 20181  00732A  5181               	movf	??_EncodeNEC& (0+255),w,b
 20182  00732C  0100               	movlb	0	; () banked
 20183  00732E  258D               	addwf	(??_EncodeNEC+12)& (0+255),w,b
 20184  007330  0100               	movlb	0	; () banked
 20185  007332  6F91               	movwf	(??_EncodeNEC+16)& (0+255),b
 20186  007334  0100               	movlb	0	; () banked
 20187  007336  5182               	movf	(??_EncodeNEC+1)& (0+255),w,b
 20188  007338  0100               	movlb	0	; () banked
 20189  00733A  218E               	addwfc	(??_EncodeNEC+13)& (0+255),w,b
 20190  00733C  0100               	movlb	0	; () banked
 20191  00733E  6F92               	movwf	(??_EncodeNEC+17)& (0+255),b
 20192  007340  0100               	movlb	0	; () banked
 20193  007342  5183               	movf	(??_EncodeNEC+2)& (0+255),w,b
 20194  007344  0100               	movlb	0	; () banked
 20195  007346  218F               	addwfc	(??_EncodeNEC+14)& (0+255),w,b
 20196  007348  0100               	movlb	0	; () banked
 20197  00734A  6F93               	movwf	(??_EncodeNEC+18)& (0+255),b
 20198  00734C  0100               	movlb	0	; () banked
 20199  00734E  5184               	movf	(??_EncodeNEC+3)& (0+255),w,b
 20200  007350  0100               	movlb	0	; () banked
 20201  007352  2190               	addwfc	(??_EncodeNEC+15)& (0+255),w,b
 20202  007354  0100               	movlb	0	; () banked
 20203  007356  6F94               	movwf	(??_EncodeNEC+19)& (0+255),b
 20204  007358  0100               	movlb	0	; () banked
 20205  00735A  51A1               	movf	EncodeNEC@temp4& (0+255),w,b
 20206  00735C  0100               	movlb	0	; () banked
 20207  00735E  2591               	addwf	(??_EncodeNEC+16)& (0+255),w,b
 20208  007360  0100               	movlb	0	; () banked
 20209  007362  6F7D               	movwf	?_EncodeNEC& (0+255),b
 20210  007364  0100               	movlb	0	; () banked
 20211  007366  51A2               	movf	(EncodeNEC@temp4+1)& (0+255),w,b
 20212  007368  0100               	movlb	0	; () banked
 20213  00736A  2192               	addwfc	(??_EncodeNEC+17)& (0+255),w,b
 20214  00736C  0100               	movlb	0	; () banked
 20215  00736E  6F7E               	movwf	(?_EncodeNEC+1)& (0+255),b
 20216  007370  0100               	movlb	0	; () banked
 20217  007372  51A3               	movf	(EncodeNEC@temp4+2)& (0+255),w,b
 20218  007374  0100               	movlb	0	; () banked
 20219  007376  2193               	addwfc	(??_EncodeNEC+18)& (0+255),w,b
 20220  007378  0100               	movlb	0	; () banked
 20221  00737A  6F7F               	movwf	(?_EncodeNEC+2)& (0+255),b
 20222  00737C  0100               	movlb	0	; () banked
 20223  00737E  51A4               	movf	(EncodeNEC@temp4+3)& (0+255),w,b
 20224  007380  0100               	movlb	0	; () banked
 20225  007382  2194               	addwfc	(??_EncodeNEC+19)& (0+255),w,b
 20226  007384  0100               	movlb	0	; () banked
 20227  007386  6F80               	movwf	(?_EncodeNEC+3)& (0+255),b
 20228  007388  0012               	return	
 20229                           
 20230                           ; BSR set to: 0
 20231                           
 20232                           ; BSR set to: 0
 20233  00738A  0012               	return		;funcret
 20234  00738C                     __end_of_EncodeNEC:
 20235                           	opt stack 0
 20236                           tblptru	equ	0xFF8
 20237                           tblptrh	equ	0xFF7
 20238                           tblptrl	equ	0xFF6
 20239                           tablat	equ	0xFF5
 20240                           prodh	equ	0xFF4
 20241                           prodl	equ	0xFF3
 20242                           intcon	equ	0xFF2
 20243                           indf0	equ	0xFEF
 20244                           postinc0	equ	0xFEE
 20245                           fsr0h	equ	0xFEA
 20246                           fsr0l	equ	0xFE9
 20247                           wreg	equ	0xFE8
 20248                           indf1	equ	0xFE7
 20249                           postdec1	equ	0xFE5
 20250                           fsr1h	equ	0xFE2
 20251                           fsr1l	equ	0xFE1
 20252                           indf2	equ	0xFDF
 20253                           postinc2	equ	0xFDE
 20254                           postdec2	equ	0xFDD
 20255                           fsr2h	equ	0xFDA
 20256                           fsr2l	equ	0xFD9
 20257                           status	equ	0xFD8
 20258                           
 20259 ;; *************** function _DecodeNEC *****************
 20260 ;; Defined at:
 20261 ;;		line 556 in file "IR.c"
 20262 ;; Parameters:    Size  Location     Type
 20263 ;;  Nec             4   29[BANK0 ] unsigned long 
 20264 ;;  address         2   33[BANK0 ] PTR unsigned char 
 20265 ;;		 -> UseBluetooth@NecAddress(1), IRaddress(1), 
 20266 ;;  command         2   35[BANK0 ] PTR unsigned char 
 20267 ;;		 -> UseBluetooth@NecCommand(1), IRcommand(1), 
 20268 ;; Auto vars:     Size  Location     Type
 20269 ;;  temp1           1   43[BANK0 ] unsigned char 
 20270 ;;  temp3           1   42[BANK0 ] unsigned char 
 20271 ;;  temp2           1   41[BANK0 ] unsigned char 
 20272 ;; Return value:  Size  Location     Type
 20273 ;;                  1    wreg      unsigned char 
 20274 ;; Registers used:
 20275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20276 ;; Tracked objects:
 20277 ;;		On entry : 0/0
 20278 ;;		On exit  : 0/0
 20279 ;;		Unchanged: 0/0
 20280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20281 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20282 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20283 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20284 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20285 ;;Total ram usage:       15 bytes
 20286 ;; Hardware stack levels used:    1
 20287 ;; Hardware stack levels required when called:    7
 20288 ;; This function calls:
 20289 ;;		_Reverse_Byte
 20290 ;; This function is called by:
 20291 ;;		_UseIRCode
 20292 ;;		_UseBluetooth
 20293 ;; This function uses a non-reentrant model
 20294 ;;
 20295                           
 20296                           	psect	text35
 20297  0082F6                     __ptext35:
 20298                           	opt stack 0
 20299  0082F6                     _DecodeNEC:
 20300                           	opt stack 22
 20301                           
 20302                           ;IR.c: 558: unsigned char temp1,
 20303                           ;IR.c: 559: temp2,
 20304                           ;IR.c: 560: temp3;
 20305                           ;IR.c: 562: temp1 = ~Reverse_Byte((unsigned char) (Nec & 0x00FF));
 20306                           
 20307                           ; BSR set to: 0
 20308                           ;incstack = 0
 20309  0082F6  0100               	movlb	0	; () banked
 20310  0082F8  517D               	movf	DecodeNEC@Nec& (0+255),w,b
 20311  0082FA  EC6D  F040         	call	_Reverse_Byte
 20312  0082FE  0AFF               	xorlw	255
 20313  008300  0100               	movlb	0	; () banked
 20314  008302  6F8B               	movwf	DecodeNEC@temp1& (0+255),b
 20315                           
 20316                           ;IR.c: 563: temp2 = Reverse_Byte((unsigned char) ((Nec & 0xFF00)>> 8));
 20317  008304  0100               	movlb	0	; () banked
 20318  008306  517E               	movf	(DecodeNEC@Nec+1)& (0+255),w,b
 20319  008308  EC6D  F040         	call	_Reverse_Byte
 20320  00830C  0100               	movlb	0	; () banked
 20321  00830E  6F89               	movwf	DecodeNEC@temp2& (0+255),b
 20322                           
 20323                           ; BSR set to: 0
 20324                           ;IR.c: 564: if(temp1 != temp2)
 20325  008310  0100               	movlb	0	; () banked
 20326  008312  5189               	movf	DecodeNEC@temp2& (0+255),w,b
 20327  008314  0100               	movlb	0	; () banked
 20328  008316  198B               	xorwf	DecodeNEC@temp1& (0+255),w,b
 20329  008318  B4D8               	btfsc	status,2,c
 20330  00831A  D002               	goto	l15046
 20331                           
 20332                           ; BSR set to: 0
 20333                           ;IR.c: 565: {
 20334                           ;IR.c: 567: return 0;
 20335  00831C  0E00               	movlw	0
 20336                           
 20337                           ; BSR set to: 0
 20338  00831E  0012               	return	
 20339  008320                     l15046:
 20340                           
 20341                           ; BSR set to: 0
 20342                           ;IR.c: 568: }
 20343                           ;IR.c: 569: temp1 = ~Reverse_Byte((unsigned char) ((Nec & 0x00FF0000) >> 16));
 20344  008320  0100               	movlb	0	; () banked
 20345  008322  517F               	movf	(DecodeNEC@Nec+2)& (0+255),w,b
 20346  008324  EC6D  F040         	call	_Reverse_Byte
 20347  008328  0AFF               	xorlw	255
 20348  00832A  0100               	movlb	0	; () banked
 20349  00832C  6F8B               	movwf	DecodeNEC@temp1& (0+255),b
 20350                           
 20351                           ;IR.c: 570: temp3 = Reverse_Byte((unsigned char) ((Nec & 0xFF000000) >> 24));
 20352  00832E  0E00               	movlw	0
 20353  008330  0100               	movlb	0	; () banked
 20354  008332  157D               	andwf	DecodeNEC@Nec& (0+255),w,b
 20355  008334  0100               	movlb	0	; () banked
 20356  008336  6F85               	movwf	??_DecodeNEC& (0+255),b
 20357  008338  0E00               	movlw	0
 20358  00833A  0100               	movlb	0	; () banked
 20359  00833C  157E               	andwf	(DecodeNEC@Nec+1)& (0+255),w,b
 20360  00833E  0100               	movlb	0	; () banked
 20361  008340  6F86               	movwf	(??_DecodeNEC+1)& (0+255),b
 20362  008342  0E00               	movlw	0
 20363  008344  0100               	movlb	0	; () banked
 20364  008346  157F               	andwf	(DecodeNEC@Nec+2)& (0+255),w,b
 20365  008348  0100               	movlb	0	; () banked
 20366  00834A  6F87               	movwf	(??_DecodeNEC+2)& (0+255),b
 20367  00834C  0EFF               	movlw	255
 20368  00834E  0100               	movlb	0	; () banked
 20369  008350  1580               	andwf	(DecodeNEC@Nec+3)& (0+255),w,b
 20370  008352  0100               	movlb	0	; () banked
 20371  008354  6F88               	movwf	(??_DecodeNEC+3)& (0+255),b
 20372  008356  0E19               	movlw	25
 20373  008358  D006               	goto	u18700
 20374  00835A                     u18705:
 20375  00835A  0100               	movlb	0	; () banked
 20376  00835C  90D8               	bcf	status,0,c
 20377  00835E  3388               	rrcf	(??_DecodeNEC+3)& (0+255),f,b
 20378  008360  3387               	rrcf	(??_DecodeNEC+2)& (0+255),f,b
 20379  008362  3386               	rrcf	(??_DecodeNEC+1)& (0+255),f,b
 20380  008364  3385               	rrcf	??_DecodeNEC& (0+255),f,b
 20381  008366                     u18700:
 20382  008366  2EE8               	decfsz	wreg,f,c
 20383  008368  D7F8               	goto	u18705
 20384  00836A  0100               	movlb	0	; () banked
 20385  00836C  5185               	movf	??_DecodeNEC& (0+255),w,b
 20386  00836E  EC6D  F040         	call	_Reverse_Byte
 20387  008372  0100               	movlb	0	; () banked
 20388  008374  6F8A               	movwf	DecodeNEC@temp3& (0+255),b
 20389                           
 20390                           ; BSR set to: 0
 20391                           ;IR.c: 571: if(temp1 != temp3)
 20392  008376  0100               	movlb	0	; () banked
 20393  008378  518A               	movf	DecodeNEC@temp3& (0+255),w,b
 20394  00837A  0100               	movlb	0	; () banked
 20395  00837C  198B               	xorwf	DecodeNEC@temp1& (0+255),w,b
 20396  00837E  B4D8               	btfsc	status,2,c
 20397  008380  D002               	goto	l15054
 20398                           
 20399                           ; BSR set to: 0
 20400                           ;IR.c: 572: {
 20401                           ;IR.c: 574: return 0;
 20402  008382  0E00               	movlw	0
 20403                           
 20404                           ; BSR set to: 0
 20405  008384  0012               	return	
 20406  008386                     l15054:
 20407                           
 20408                           ; BSR set to: 0
 20409                           ;IR.c: 575: }
 20410                           ;IR.c: 576: *command = temp2;
 20411  008386  C083  FFD9         	movff	DecodeNEC@command,fsr2l
 20412  00838A  C084  FFDA         	movff	DecodeNEC@command+1,fsr2h
 20413  00838E  C089  FFDF         	movff	DecodeNEC@temp2,indf2
 20414                           
 20415                           ;IR.c: 577: *address = temp3;
 20416  008392  C081  FFD9         	movff	DecodeNEC@address,fsr2l
 20417  008396  C082  FFDA         	movff	DecodeNEC@address+1,fsr2h
 20418  00839A  C08A  FFDF         	movff	DecodeNEC@temp3,indf2
 20419                           
 20420                           ; BSR set to: 0
 20421                           ;IR.c: 578: return 1;
 20422  00839E  0E01               	movlw	1
 20423  0083A0  0012               	return	
 20424                           
 20425                           ; BSR set to: 0
 20426                           
 20427                           ; BSR set to: 0
 20428  0083A2  0012               	return		;funcret
 20429  0083A4                     __end_of_DecodeNEC:
 20430                           	opt stack 0
 20431                           tblptru	equ	0xFF8
 20432                           tblptrh	equ	0xFF7
 20433                           tblptrl	equ	0xFF6
 20434                           tablat	equ	0xFF5
 20435                           prodh	equ	0xFF4
 20436                           prodl	equ	0xFF3
 20437                           intcon	equ	0xFF2
 20438                           indf0	equ	0xFEF
 20439                           postinc0	equ	0xFEE
 20440                           fsr0h	equ	0xFEA
 20441                           fsr0l	equ	0xFE9
 20442                           wreg	equ	0xFE8
 20443                           indf1	equ	0xFE7
 20444                           postdec1	equ	0xFE5
 20445                           fsr1h	equ	0xFE2
 20446                           fsr1l	equ	0xFE1
 20447                           indf2	equ	0xFDF
 20448                           postinc2	equ	0xFDE
 20449                           postdec2	equ	0xFDD
 20450                           fsr2h	equ	0xFDA
 20451                           fsr2l	equ	0xFD9
 20452                           status	equ	0xFD8
 20453                           
 20454 ;; *************** function _Reverse_Byte *****************
 20455 ;; Defined at:
 20456 ;;		line 362 in file "MISC.c"
 20457 ;; Parameters:    Size  Location     Type
 20458 ;;  This            1    wreg     unsigned char 
 20459 ;; Auto vars:     Size  Location     Type
 20460 ;;  This            1   28[BANK0 ] unsigned char 
 20461 ;;  temp            1   27[BANK0 ] unsigned char 
 20462 ;; Return value:  Size  Location     Type
 20463 ;;                  1    wreg      unsigned char 
 20464 ;; Registers used:
 20465 ;;		wreg, status,2, status,0
 20466 ;; Tracked objects:
 20467 ;;		On entry : 0/0
 20468 ;;		On exit  : 0/0
 20469 ;;		Unchanged: 0/0
 20470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20472 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20473 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20474 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20475 ;;Total ram usage:        4 bytes
 20476 ;; Hardware stack levels used:    1
 20477 ;; Hardware stack levels required when called:    6
 20478 ;; This function calls:
 20479 ;;		Nothing
 20480 ;; This function is called by:
 20481 ;;		_EncodeNEC
 20482 ;;		_DecodeNEC
 20483 ;; This function uses a non-reentrant model
 20484 ;;
 20485                           
 20486                           	psect	text36
 20487  0080DA                     __ptext36:
 20488                           	opt stack 0
 20489  0080DA                     _Reverse_Byte:
 20490                           	opt stack 22
 20491                           
 20492                           ; BSR set to: 0
 20493                           ;incstack = 0
 20494                           ;Reverse_Byte@This stored from wreg
 20495  0080DA  0100               	movlb	0	; () banked
 20496  0080DC  6F7C               	movwf	Reverse_Byte@This& (0+255),b
 20497                           
 20498                           ; BSR set to: 0
 20499                           ;MISC.c: 364: unsigned char temp=0;
 20500  0080DE  0E00               	movlw	0
 20501  0080E0  0100               	movlb	0	; () banked
 20502  0080E2  6F7B               	movwf	Reverse_Byte@temp& (0+255),b
 20503                           
 20504                           ; BSR set to: 0
 20505                           ;MISC.c: 366: temp += (This & 0x01) << 7;
 20506  0080E4  C07C  F079         	movff	Reverse_Byte@This,??_Reverse_Byte
 20507  0080E8  0E01               	movlw	1
 20508  0080EA  0100               	movlb	0	; () banked
 20509  0080EC  1779               	andwf	??_Reverse_Byte& (0+255),f,b
 20510  0080EE  0E00               	movlw	0
 20511  0080F0  B179               	btfsc	??_Reverse_Byte& (0+255),0,b
 20512  0080F2  0E80               	movlw	128
 20513  0080F4  6F79               	movwf	??_Reverse_Byte& (0+255),b
 20514  0080F6  0100               	movlb	0	; () banked
 20515  0080F8  5179               	movf	??_Reverse_Byte& (0+255),w,b
 20516  0080FA  0100               	movlb	0	; () banked
 20517  0080FC  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20518                           
 20519                           ; BSR set to: 0
 20520                           ;MISC.c: 367: temp += (This & 0x02) << 5;
 20521  0080FE  C07C  F079         	movff	Reverse_Byte@This,??_Reverse_Byte
 20522  008102  0E02               	movlw	2
 20523  008104  0100               	movlb	0	; () banked
 20524  008106  1779               	andwf	??_Reverse_Byte& (0+255),f,b
 20525  008108  0E05               	movlw	5
 20526  00810A  0100               	movlb	0	; () banked
 20527  00810C  6F7A               	movwf	(??_Reverse_Byte+1)& (0+255),b
 20528  00810E                     u16995:
 20529  00810E  0100               	movlb	0	; () banked
 20530  008110  90D8               	bcf	status,0,c
 20531  008112  3779               	rlcf	??_Reverse_Byte& (0+255),f,b
 20532  008114  0100               	movlb	0	; () banked
 20533  008116  2F7A               	decfsz	(??_Reverse_Byte+1)& (0+255),f,b
 20534  008118  D7FA               	goto	u16995
 20535  00811A  0100               	movlb	0	; () banked
 20536  00811C  5179               	movf	??_Reverse_Byte& (0+255),w,b
 20537  00811E  0100               	movlb	0	; () banked
 20538  008120  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20539                           
 20540                           ; BSR set to: 0
 20541                           ;MISC.c: 368: temp += (This & 0x04) << 3;
 20542  008122  C07C  F079         	movff	Reverse_Byte@This,??_Reverse_Byte
 20543  008126  0E04               	movlw	4
 20544  008128  0100               	movlb	0	; () banked
 20545  00812A  1779               	andwf	??_Reverse_Byte& (0+255),f,b
 20546  00812C  0100               	movlb	0	; () banked
 20547  00812E  90D8               	bcf	status,0,c
 20548  008130  3779               	rlcf	??_Reverse_Byte& (0+255),f,b
 20549  008132  0100               	movlb	0	; () banked
 20550  008134  90D8               	bcf	status,0,c
 20551  008136  3779               	rlcf	??_Reverse_Byte& (0+255),f,b
 20552  008138  0100               	movlb	0	; () banked
 20553  00813A  90D8               	bcf	status,0,c
 20554  00813C  3579               	rlcf	??_Reverse_Byte& (0+255),w,b
 20555  00813E  0100               	movlb	0	; () banked
 20556  008140  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20557                           
 20558                           ; BSR set to: 0
 20559                           ;MISC.c: 369: temp += (This & 0x08) << 1;
 20560  008142  C07C  F079         	movff	Reverse_Byte@This,??_Reverse_Byte
 20561  008146  0E08               	movlw	8
 20562  008148  0100               	movlb	0	; () banked
 20563  00814A  1779               	andwf	??_Reverse_Byte& (0+255),f,b
 20564  00814C  0100               	movlb	0	; () banked
 20565  00814E  90D8               	bcf	status,0,c
 20566  008150  3579               	rlcf	??_Reverse_Byte& (0+255),w,b
 20567  008152  0100               	movlb	0	; () banked
 20568  008154  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20569                           
 20570                           ; BSR set to: 0
 20571                           ;MISC.c: 370: temp += (This & 0x10) >> 1;
 20572  008156  0100               	movlb	0	; () banked
 20573  008158  90D8               	bcf	status,0,c
 20574  00815A  317C               	rrcf	Reverse_Byte@This& (0+255),w,b
 20575  00815C  0B08               	andlw	8
 20576  00815E  0100               	movlb	0	; () banked
 20577  008160  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20578                           
 20579                           ; BSR set to: 0
 20580                           ;MISC.c: 371: temp += (This & 0x20) >> 3;
 20581  008162  0100               	movlb	0	; () banked
 20582  008164  397C               	swapf	Reverse_Byte@This& (0+255),w,b
 20583  008166  46E8               	rlncf	wreg,f,c
 20584  008168  0B1F               	andlw	31
 20585  00816A  0B04               	andlw	4
 20586  00816C  0100               	movlb	0	; () banked
 20587  00816E  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20588                           
 20589                           ; BSR set to: 0
 20590                           ;MISC.c: 372: temp += (This & 0x40) >> 5;
 20591  008170  0100               	movlb	0	; () banked
 20592  008172  397C               	swapf	Reverse_Byte@This& (0+255),w,b
 20593  008174  42E8               	rrncf	wreg,f,c
 20594  008176  0B07               	andlw	7
 20595  008178  0B02               	andlw	2
 20596  00817A  0100               	movlb	0	; () banked
 20597  00817C  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20598                           
 20599                           ; BSR set to: 0
 20600                           ;MISC.c: 373: temp += (This & 0x80) >> 7;
 20601  00817E  0100               	movlb	0	; () banked
 20602  008180  457C               	rlncf	Reverse_Byte@This& (0+255),w,b
 20603  008182  0B01               	andlw	1
 20604  008184  0100               	movlb	0	; () banked
 20605  008186  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20606                           
 20607                           ; BSR set to: 0
 20608                           ;MISC.c: 375: return temp;
 20609  008188  0100               	movlb	0	; () banked
 20610  00818A  517B               	movf	Reverse_Byte@temp& (0+255),w,b
 20611  00818C  0012               	return	
 20612                           
 20613                           ; BSR set to: 0
 20614                           
 20615                           ; BSR set to: 0
 20616  00818E  0012               	return		;funcret
 20617  008190                     __end_of_Reverse_Byte:
 20618                           	opt stack 0
 20619                           tblptru	equ	0xFF8
 20620                           tblptrh	equ	0xFF7
 20621                           tblptrl	equ	0xFF6
 20622                           tablat	equ	0xFF5
 20623                           prodh	equ	0xFF4
 20624                           prodl	equ	0xFF3
 20625                           intcon	equ	0xFF2
 20626                           indf0	equ	0xFEF
 20627                           postinc0	equ	0xFEE
 20628                           fsr0h	equ	0xFEA
 20629                           fsr0l	equ	0xFE9
 20630                           wreg	equ	0xFE8
 20631                           indf1	equ	0xFE7
 20632                           postdec1	equ	0xFE5
 20633                           fsr1h	equ	0xFE2
 20634                           fsr1l	equ	0xFE1
 20635                           indf2	equ	0xFDF
 20636                           postinc2	equ	0xFDE
 20637                           postdec2	equ	0xFDD
 20638                           fsr2h	equ	0xFDA
 20639                           fsr2l	equ	0xFD9
 20640                           status	equ	0xFD8
 20641                           
 20642 ;; *************** function _Init_System *****************
 20643 ;; Defined at:
 20644 ;;		line 105 in file "user.c"
 20645 ;; Parameters:    Size  Location     Type
 20646 ;;		None
 20647 ;; Auto vars:     Size  Location     Type
 20648 ;;		None
 20649 ;; Return value:  Size  Location     Type
 20650 ;;		None               void
 20651 ;; Registers used:
 20652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20653 ;; Tracked objects:
 20654 ;;		On entry : 0/0
 20655 ;;		On exit  : 0/0
 20656 ;;		Unchanged: 0/0
 20657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20662 ;;Total ram usage:        0 bytes
 20663 ;; Hardware stack levels used:    1
 20664 ;; Hardware stack levels required when called:   13
 20665 ;; This function calls:
 20666 ;;		_EEPROMinitialized
 20667 ;;		_InitADC
 20668 ;;		_InitBluetooth
 20669 ;;		_InitIR
 20670 ;;		_InitTimers
 20671 ;;		_InitUART
 20672 ;;		_SetEEPROMdefault
 20673 ;;		_SyncEEPROMToGlobal
 20674 ;;		_SyncGlobalToEEPROM
 20675 ;;		_UARTchar
 20676 ;;		_UARTstring
 20677 ;;		_cleanBuffer
 20678 ;; This function is called by:
 20679 ;;		_main
 20680 ;; This function uses a non-reentrant model
 20681 ;;
 20682                           
 20683                           	psect	text37
 20684  00885E                     __ptext37:
 20685                           	opt stack 0
 20686  00885E                     _Init_System:
 20687                           	opt stack 17
 20688                           
 20689                           ;user.c: 107: cleanBuffer(&ReceivedString, 255);
 20690                           
 20691                           ; BSR set to: 0
 20692                           ;incstack = 0
 20693  00885E  0E00               	movlw	low _ReceivedString
 20694  008860  0100               	movlb	0	; () banked
 20695  008862  6F79               	movwf	cleanBuffer@data& (0+255),b
 20696  008864  0E06               	movlw	high _ReceivedString
 20697  008866  0100               	movlb	0	; () banked
 20698  008868  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 20699  00886A  0E00               	movlw	0
 20700  00886C  0100               	movlb	0	; () banked
 20701  00886E  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 20702  008870  697B               	setf	cleanBuffer@count& (0+255),b
 20703  008872  EC97  F046         	call	_cleanBuffer	;wreg free
 20704                           
 20705                           ;user.c: 110: IPR1bits.RCIP = 0;
 20706  008876  9A9F               	bcf	3999,5,c	;volatile
 20707                           
 20708                           ;user.c: 111: INTCON2bits.RBIP = 1;
 20709  008878  80F1               	bsf	intcon2,0,c	;volatile
 20710                           
 20711                           ;user.c: 112: INTCON2bits.TMR0IP = 1;
 20712  00887A  84F1               	bsf	intcon2,2,c	;volatile
 20713                           
 20714                           ;user.c: 113: IPR1bits.TMR2IP = 1;
 20715  00887C  829F               	bsf	3999,1,c	;volatile
 20716                           
 20717                           ;user.c: 114: IPR1bits.TMR1IP = 0;
 20718  00887E  909F               	bcf	3999,0,c	;volatile
 20719                           
 20720                           ;user.c: 115: IPR2bits.TMR3IP = 1;
 20721  008880  82A2               	bsf	4002,1,c	;volatile
 20722                           
 20723                           ;user.c: 118: RCONbits.IPEN = 1;
 20724  008882  8ED0               	bsf	4048,7,c	;volatile
 20725                           
 20726                           ;user.c: 119: INTCONbits.PEIE = 1;
 20727  008884  8CF2               	bsf	intcon,6,c	;volatile
 20728                           
 20729                           ;user.c: 120: INTCONbits.GIE = 1;
 20730  008886  8EF2               	bsf	intcon,7,c	;volatile
 20731                           
 20732                           ;user.c: 122: SyncEEPROMToGlobal();
 20733  008888  EC14  F033         	call	_SyncEEPROMToGlobal	;wreg free
 20734                           
 20735                           ;user.c: 123: if(!EEPROMinitialized())
 20736  00888C  EC1C  F04A         	call	_EEPROMinitialized	;wreg free
 20737  008890  0900               	iorlw	0
 20738  008892  A4D8               	btfss	status,2,c
 20739  008894  D008               	goto	l15316
 20740                           
 20741                           ;user.c: 124: {
 20742                           ;user.c: 125: SetEEPROMdefault();
 20743  008896  ECC6  F039         	call	_SetEEPROMdefault	;wreg free
 20744                           
 20745                           ;user.c: 126: Global.EEPROMinitFlag = 59;
 20746  00889A  0E3B               	movlw	59
 20747  00889C  0104               	movlb	4	; () banked
 20748  00889E  6F2D               	movwf	(_Global+45)& (0+255),b
 20749                           
 20750                           ; BSR set to: 4
 20751                           ;user.c: 127: SyncGlobalToEEPROM();
 20752  0088A0  ECE9  F047         	call	_SyncGlobalToEEPROM	;wreg free
 20753  0088A4  D000               	goto	l15316
 20754  0088A6                     l15316:
 20755                           
 20756                           ;user.c: 128: }
 20757                           ;user.c: 129: InitADC();
 20758  0088A6  ECFC  F049         	call	_InitADC	;wreg free
 20759                           
 20760                           ;user.c: 130: InitIR();
 20761  0088AA  ECC5  F047         	call	_InitIR	;wreg free
 20762                           
 20763                           ;user.c: 132: InitUART(115200);
 20764  0088AE  0E00               	movlw	0
 20765  0088B0  0100               	movlb	0	; () banked
 20766  0088B2  6FCE               	movwf	InitUART@Baud& (0+255),b
 20767  0088B4  0EC2               	movlw	194
 20768  0088B6  6FCF               	movwf	(InitUART@Baud+1)& (0+255),b
 20769  0088B8  0E01               	movlw	1
 20770  0088BA  6FD0               	movwf	(InitUART@Baud+2)& (0+255),b
 20771  0088BC  0E00               	movlw	0
 20772  0088BE  6FD1               	movwf	(InitUART@Baud+3)& (0+255),b
 20773  0088C0  EC9B  F03C         	call	_InitUART	;wreg free
 20774                           
 20775                           ;user.c: 133: InitBluetooth();
 20776  0088C4  EC1D  F047         	call	_InitBluetooth	;wreg free
 20777                           
 20778                           ;user.c: 134: UARTstring(CRLN);
 20779  0088C8  0ED1               	movlw	low _CRLN
 20780  0088CA  0100               	movlb	0	; () banked
 20781  0088CC  6F7A               	movwf	UARTstring@data& (0+255),b
 20782  0088CE  0EF3               	movlw	high _CRLN
 20783  0088D0  0100               	movlb	0	; () banked
 20784  0088D2  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 20785  0088D4  ECC4  F046         	call	_UARTstring	;wreg free
 20786                           
 20787                           ;user.c: 135: UARTchar('>');
 20788  0088D8  0E3E               	movlw	62
 20789  0088DA  ECB0  F049         	call	_UARTchar
 20790                           
 20791                           ;user.c: 137: InitTimers();
 20792  0088DE  EC12  F04A         	call	_InitTimers	;wreg free
 20793  0088E2  0012               	return		;funcret
 20794  0088E4                     __end_of_Init_System:
 20795                           	opt stack 0
 20796                           tblptru	equ	0xFF8
 20797                           tblptrh	equ	0xFF7
 20798                           tblptrl	equ	0xFF6
 20799                           tablat	equ	0xFF5
 20800                           prodh	equ	0xFF4
 20801                           prodl	equ	0xFF3
 20802                           intcon	equ	0xFF2
 20803                           intcon2	equ	0xFF1
 20804                           indf0	equ	0xFEF
 20805                           postinc0	equ	0xFEE
 20806                           fsr0h	equ	0xFEA
 20807                           fsr0l	equ	0xFE9
 20808                           wreg	equ	0xFE8
 20809                           indf1	equ	0xFE7
 20810                           postdec1	equ	0xFE5
 20811                           fsr1h	equ	0xFE2
 20812                           fsr1l	equ	0xFE1
 20813                           indf2	equ	0xFDF
 20814                           postinc2	equ	0xFDE
 20815                           postdec2	equ	0xFDD
 20816                           fsr2h	equ	0xFDA
 20817                           fsr2l	equ	0xFD9
 20818                           status	equ	0xFD8
 20819                           
 20820 ;; *************** function _SyncEEPROMToGlobal *****************
 20821 ;; Defined at:
 20822 ;;		line 302 in file "EEPROM.c"
 20823 ;; Parameters:    Size  Location     Type
 20824 ;;		None
 20825 ;; Auto vars:     Size  Location     Type
 20826 ;;  Temp          136    3[BANK1 ] struct EEdata
 20827 ;;  j               1    2[BANK1 ] unsigned char 
 20828 ;;  i               1    1[BANK1 ] unsigned char 
 20829 ;;  k               1    0[BANK1 ] unsigned char 
 20830 ;; Return value:  Size  Location     Type
 20831 ;;		None               void
 20832 ;; Registers used:
 20833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20834 ;; Tracked objects:
 20835 ;;		On entry : 0/0
 20836 ;;		On exit  : 0/0
 20837 ;;		Unchanged: 0/0
 20838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20840 ;;      Locals:         0       0     139       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20841 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20842 ;;      Totals:         0       4     139       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20843 ;;Total ram usage:      143 bytes
 20844 ;; Hardware stack levels used:    1
 20845 ;; Hardware stack levels required when called:    9
 20846 ;; This function calls:
 20847 ;;		_GetEEPROM
 20848 ;; This function is called by:
 20849 ;;		_Init_System
 20850 ;; This function uses a non-reentrant model
 20851 ;;
 20852                           
 20853                           	psect	text38
 20854  006628                     __ptext38:
 20855                           	opt stack 0
 20856  006628                     _SyncEEPROMToGlobal:
 20857                           	opt stack 20
 20858                           
 20859                           ;EEPROM.c: 304: unsigned char i,j,k;
 20860                           ;EEPROM.c: 305: GBLdata Temp;
 20861                           ;EEPROM.c: 307: GetEEPROM(&Temp);
 20862                           
 20863                           ;incstack = 0
 20864  006628  0E03               	movlw	low SyncEEPROMToGlobal@Temp
 20865  00662A  0100               	movlb	0	; () banked
 20866  00662C  6F9E               	movwf	GetEEPROM@Temp& (0+255),b
 20867  00662E  0E01               	movlw	high SyncEEPROMToGlobal@Temp
 20868  006630  0100               	movlb	0	; () banked
 20869  006632  6F9F               	movwf	(GetEEPROM@Temp+1)& (0+255),b
 20870  006634  EC98  F035         	call	_GetEEPROM	;wreg free
 20871                           
 20872                           ;EEPROM.c: 309: Global.BlueToothFlag = Temp.BlueToothFlag;
 20873  006638  C103  F400         	movff	SyncEEPROMToGlobal@Temp,_Global
 20874                           
 20875                           ;EEPROM.c: 310: Global.SWNECcode = Temp.SWNECcode;
 20876  00663C  C104  F401         	movff	SyncEEPROMToGlobal@Temp+1,_Global+1
 20877  006640  C105  F402         	movff	SyncEEPROMToGlobal@Temp+2,_Global+2
 20878  006644  C106  F403         	movff	SyncEEPROMToGlobal@Temp+3,_Global+3
 20879  006648  C107  F404         	movff	SyncEEPROMToGlobal@Temp+4,_Global+4
 20880                           
 20881                           ;EEPROM.c: 311: Global.EEPROMinitFlag = Temp.EEPROMinitFlag;
 20882  00664C  C130  F42D         	movff	SyncEEPROMToGlobal@Temp+45,_Global+45
 20883                           
 20884                           ;EEPROM.c: 312: for(i=0; i< 20; i++)
 20885  006650  0E00               	movlw	0
 20886  006652  0101               	movlb	1	; () banked
 20887  006654  6F01               	movwf	SyncEEPROMToGlobal@i& (0+255),b
 20888  006656  D04F               	goto	l14406
 20889                           
 20890                           ; BSR set to: 1
 20891                           
 20892                           ; BSR set to: 1
 20893  006658  D052               	goto	l994
 20894  00665A                     l14392:
 20895                           
 20896                           ; BSR set to: 1
 20897                           ;EEPROM.c: 313: {
 20898                           ;EEPROM.c: 314: for(j=0; j < 2; j++)
 20899  00665A  0E00               	movlw	0
 20900  00665C  0101               	movlb	1	; () banked
 20901  00665E  6F02               	movwf	SyncEEPROMToGlobal@j& (0+255),b
 20902  006660                     l14394:
 20903                           
 20904                           ; BSR set to: 1
 20905  006660  0E01               	movlw	1
 20906  006662  0101               	movlb	1	; () banked
 20907  006664  6502               	cpfsgt	SyncEEPROMToGlobal@j& (0+255),b
 20908  006666  D001               	goto	l14398
 20909                           
 20910                           ; BSR set to: 1
 20911  006668  D044               	goto	l14404
 20912  00666A                     l14398:
 20913                           
 20914                           ; BSR set to: 1
 20915                           ;EEPROM.c: 315: {
 20916                           ;EEPROM.c: 316: Global.RemoteButtonNEC[i][j] = Temp.RemoteButtonNEC[i][j];
 20917  00666A  0101               	movlb	1	; () banked
 20918  00666C  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 20919  00666E  0D02               	mullw	2
 20920  006670  0E03               	movlw	low SyncEEPROMToGlobal@Temp
 20921  006672  0100               	movlb	0	; () banked
 20922  006674  6FA6               	movwf	??_SyncEEPROMToGlobal& (0+255),b
 20923  006676  0E01               	movlw	high SyncEEPROMToGlobal@Temp
 20924  006678  0100               	movlb	0	; () banked
 20925  00667A  6FA7               	movwf	(??_SyncEEPROMToGlobal+1)& (0+255),b
 20926  00667C  50F3               	movf	prodl,w,c
 20927  00667E  0100               	movlb	0	; () banked
 20928  006680  27A6               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 20929  006682  50F4               	movf	prodh,w,c
 20930  006684  0100               	movlb	0	; () banked
 20931  006686  23A7               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 20932  006688  0101               	movlb	1	; () banked
 20933  00668A  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 20934  00668C  0D01               	mullw	1
 20935  00668E  50F3               	movf	prodl,w,c
 20936  006690  0100               	movlb	0	; () banked
 20937  006692  27A6               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 20938  006694  50F4               	movf	prodh,w,c
 20939  006696  0100               	movlb	0	; () banked
 20940  006698  23A7               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 20941  00669A  0E05               	movlw	5
 20942  00669C  0100               	movlb	0	; () banked
 20943  00669E  25A6               	addwf	??_SyncEEPROMToGlobal& (0+255),w,b
 20944  0066A0  6ED9               	movwf	fsr2l,c
 20945  0066A2  0E00               	movlw	0
 20946  0066A4  0100               	movlb	0	; () banked
 20947  0066A6  21A7               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),w,b
 20948  0066A8  6EDA               	movwf	fsr2h,c
 20949  0066AA  0101               	movlb	1	; () banked
 20950  0066AC  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 20951  0066AE  0D02               	mullw	2
 20952  0066B0  0E00               	movlw	low _Global
 20953  0066B2  0100               	movlb	0	; () banked
 20954  0066B4  6FA8               	movwf	(??_SyncEEPROMToGlobal+2)& (0+255),b
 20955  0066B6  0E04               	movlw	high _Global
 20956  0066B8  0100               	movlb	0	; () banked
 20957  0066BA  6FA9               	movwf	(??_SyncEEPROMToGlobal+3)& (0+255),b
 20958  0066BC  0E05               	movlw	5
 20959  0066BE  0100               	movlb	0	; () banked
 20960  0066C0  27A8               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 20961  0066C2  0E00               	movlw	0
 20962  0066C4  23A9               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 20963  0066C6  50F3               	movf	prodl,w,c
 20964  0066C8  0100               	movlb	0	; () banked
 20965  0066CA  27A8               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 20966  0066CC  50F4               	movf	prodh,w,c
 20967  0066CE  0100               	movlb	0	; () banked
 20968  0066D0  23A9               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 20969  0066D2  0101               	movlb	1	; () banked
 20970  0066D4  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 20971  0066D6  0D01               	mullw	1
 20972  0066D8  50F3               	movf	prodl,w,c
 20973  0066DA  0100               	movlb	0	; () banked
 20974  0066DC  25A8               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),w,b
 20975  0066DE  6EE1               	movwf	fsr1l,c
 20976  0066E0  50F4               	movf	prodh,w,c
 20977  0066E2  0100               	movlb	0	; () banked
 20978  0066E4  21A9               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),w,b
 20979  0066E6  6EE2               	movwf	fsr1h,c
 20980  0066E8  CFDF FFE7          	movff	indf2,indf1
 20981                           
 20982                           ; BSR set to: 0
 20983  0066EC  0101               	movlb	1	; () banked
 20984  0066EE  2B02               	incf	SyncEEPROMToGlobal@j& (0+255),f,b
 20985  0066F0  D7B7               	goto	l14394
 20986  0066F2                     l14404:
 20987                           
 20988                           ; BSR set to: 1
 20989  0066F2  0101               	movlb	1	; () banked
 20990  0066F4  2B01               	incf	SyncEEPROMToGlobal@i& (0+255),f,b
 20991  0066F6                     l14406:
 20992                           
 20993                           ; BSR set to: 1
 20994  0066F6  0E13               	movlw	19
 20995  0066F8  0101               	movlb	1	; () banked
 20996  0066FA  6501               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 20997  0066FC  D7AE               	goto	l14392
 20998  0066FE                     l994:
 20999                           
 21000                           ; BSR set to: 1
 21001                           ;EEPROM.c: 317: }
 21002                           ;EEPROM.c: 318: }
 21003                           ;EEPROM.c: 319: Global.EEPROMinitFlag = Temp.EEPROMinitFlag;
 21004  0066FE  C130  F42D         	movff	SyncEEPROMToGlobal@Temp+45,_Global+45
 21005                           
 21006                           ; BSR set to: 1
 21007                           ;EEPROM.c: 320: for(i=0; i< 15; i++)
 21008  006702  0E00               	movlw	0
 21009  006704  0101               	movlb	1	; () banked
 21010  006706  6F01               	movwf	SyncEEPROMToGlobal@i& (0+255),b
 21011                           
 21012                           ; BSR set to: 1
 21013  006708  0E0E               	movlw	14
 21014  00670A  0101               	movlb	1	; () banked
 21015  00670C  6501               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 21016  00670E  D002               	goto	l14414
 21017  006710  0012               	return	
 21018                           
 21019                           ; BSR set to: 1
 21020  006712  0012               	return	
 21021  006714                     l14414:
 21022                           
 21023                           ; BSR set to: 1
 21024                           ;EEPROM.c: 321: {
 21025                           ;EEPROM.c: 322: for(j=0; j < 3; j++)
 21026  006714  0E00               	movlw	0
 21027  006716  0101               	movlb	1	; () banked
 21028  006718  6F02               	movwf	SyncEEPROMToGlobal@j& (0+255),b
 21029  00671A                     l14416:
 21030                           
 21031                           ; BSR set to: 1
 21032  00671A  0E02               	movlw	2
 21033  00671C  0101               	movlb	1	; () banked
 21034  00671E  6502               	cpfsgt	SyncEEPROMToGlobal@j& (0+255),b
 21035  006720  D001               	goto	l14420
 21036                           
 21037                           ; BSR set to: 1
 21038  006722  D061               	goto	l14436
 21039  006724                     l14420:
 21040                           
 21041                           ; BSR set to: 1
 21042                           ;EEPROM.c: 323: {
 21043                           ;EEPROM.c: 324: for(k=0; k < 2; k++)
 21044  006724  0E00               	movlw	0
 21045  006726  0101               	movlb	1	; () banked
 21046  006728  6F00               	movwf	SyncEEPROMToGlobal@k& (0+255),b
 21047  00672A                     l14422:
 21048                           
 21049                           ; BSR set to: 1
 21050  00672A  0E01               	movlw	1
 21051  00672C  0101               	movlb	1	; () banked
 21052  00672E  6500               	cpfsgt	SyncEEPROMToGlobal@k& (0+255),b
 21053  006730  D001               	goto	l14426
 21054                           
 21055                           ; BSR set to: 1
 21056  006732  D056               	goto	l14432
 21057  006734                     l14426:
 21058                           
 21059                           ; BSR set to: 1
 21060                           ;EEPROM.c: 325: {
 21061                           ;EEPROM.c: 326: Global.RemoteButtonRF[i][j][k] = Temp.RemoteButtonRF[i][j][k];
 21062  006734  0101               	movlb	1	; () banked
 21063  006736  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 21064  006738  0D06               	mullw	6
 21065  00673A  0E03               	movlw	low SyncEEPROMToGlobal@Temp
 21066  00673C  0100               	movlb	0	; () banked
 21067  00673E  6FA6               	movwf	??_SyncEEPROMToGlobal& (0+255),b
 21068  006740  0E01               	movlw	high SyncEEPROMToGlobal@Temp
 21069  006742  0100               	movlb	0	; () banked
 21070  006744  6FA7               	movwf	(??_SyncEEPROMToGlobal+1)& (0+255),b
 21071  006746  50F3               	movf	prodl,w,c
 21072  006748  0100               	movlb	0	; () banked
 21073  00674A  27A6               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 21074  00674C  50F4               	movf	prodh,w,c
 21075  00674E  0100               	movlb	0	; () banked
 21076  006750  23A7               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 21077  006752  0101               	movlb	1	; () banked
 21078  006754  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 21079  006756  0D02               	mullw	2
 21080  006758  50F3               	movf	prodl,w,c
 21081  00675A  0100               	movlb	0	; () banked
 21082  00675C  27A6               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 21083  00675E  50F4               	movf	prodh,w,c
 21084  006760  0100               	movlb	0	; () banked
 21085  006762  23A7               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 21086  006764  0101               	movlb	1	; () banked
 21087  006766  5100               	movf	SyncEEPROMToGlobal@k& (0+255),w,b
 21088  006768  0D01               	mullw	1
 21089  00676A  50F3               	movf	prodl,w,c
 21090  00676C  0100               	movlb	0	; () banked
 21091  00676E  27A6               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 21092  006770  50F4               	movf	prodh,w,c
 21093  006772  0100               	movlb	0	; () banked
 21094  006774  23A7               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 21095  006776  0E2E               	movlw	46
 21096  006778  0100               	movlb	0	; () banked
 21097  00677A  25A6               	addwf	??_SyncEEPROMToGlobal& (0+255),w,b
 21098  00677C  6ED9               	movwf	fsr2l,c
 21099  00677E  0E00               	movlw	0
 21100  006780  0100               	movlb	0	; () banked
 21101  006782  21A7               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),w,b
 21102  006784  6EDA               	movwf	fsr2h,c
 21103  006786  0101               	movlb	1	; () banked
 21104  006788  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 21105  00678A  0D06               	mullw	6
 21106  00678C  0E00               	movlw	low _Global
 21107  00678E  0100               	movlb	0	; () banked
 21108  006790  6FA8               	movwf	(??_SyncEEPROMToGlobal+2)& (0+255),b
 21109  006792  0E04               	movlw	high _Global
 21110  006794  0100               	movlb	0	; () banked
 21111  006796  6FA9               	movwf	(??_SyncEEPROMToGlobal+3)& (0+255),b
 21112  006798  0E2E               	movlw	46
 21113  00679A  0100               	movlb	0	; () banked
 21114  00679C  27A8               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 21115  00679E  0E00               	movlw	0
 21116  0067A0  23A9               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 21117  0067A2  50F3               	movf	prodl,w,c
 21118  0067A4  0100               	movlb	0	; () banked
 21119  0067A6  27A8               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 21120  0067A8  50F4               	movf	prodh,w,c
 21121  0067AA  0100               	movlb	0	; () banked
 21122  0067AC  23A9               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 21123  0067AE  0101               	movlb	1	; () banked
 21124  0067B0  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 21125  0067B2  0D02               	mullw	2
 21126  0067B4  50F3               	movf	prodl,w,c
 21127  0067B6  0100               	movlb	0	; () banked
 21128  0067B8  27A8               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 21129  0067BA  50F4               	movf	prodh,w,c
 21130  0067BC  0100               	movlb	0	; () banked
 21131  0067BE  23A9               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 21132  0067C0  0101               	movlb	1	; () banked
 21133  0067C2  5100               	movf	SyncEEPROMToGlobal@k& (0+255),w,b
 21134  0067C4  0D01               	mullw	1
 21135  0067C6  50F3               	movf	prodl,w,c
 21136  0067C8  0100               	movlb	0	; () banked
 21137  0067CA  25A8               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),w,b
 21138  0067CC  6EE1               	movwf	fsr1l,c
 21139  0067CE  50F4               	movf	prodh,w,c
 21140  0067D0  0100               	movlb	0	; () banked
 21141  0067D2  21A9               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),w,b
 21142  0067D4  6EE2               	movwf	fsr1h,c
 21143  0067D6  CFDF FFE7          	movff	indf2,indf1
 21144                           
 21145                           ; BSR set to: 0
 21146  0067DA  0101               	movlb	1	; () banked
 21147  0067DC  2B00               	incf	SyncEEPROMToGlobal@k& (0+255),f,b
 21148  0067DE  D7A5               	goto	l14422
 21149  0067E0                     l14432:
 21150                           
 21151                           ; BSR set to: 1
 21152  0067E0  0101               	movlb	1	; () banked
 21153  0067E2  2B02               	incf	SyncEEPROMToGlobal@j& (0+255),f,b
 21154  0067E4  D79A               	goto	l14416
 21155  0067E6                     l14436:
 21156                           
 21157                           ; BSR set to: 1
 21158  0067E6  0101               	movlb	1	; () banked
 21159  0067E8  2B01               	incf	SyncEEPROMToGlobal@i& (0+255),f,b
 21160                           
 21161                           ; BSR set to: 1
 21162  0067EA  0E0E               	movlw	14
 21163  0067EC  0101               	movlb	1	; () banked
 21164  0067EE  6501               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 21165  0067F0  D791               	goto	l14414
 21166  0067F2  0012               	return	
 21167                           
 21168                           ; BSR set to: 1
 21169                           
 21170                           ; BSR set to: 1
 21171  0067F4  0012               	return		;funcret
 21172  0067F6                     __end_of_SyncEEPROMToGlobal:
 21173                           	opt stack 0
 21174                           tblptru	equ	0xFF8
 21175                           tblptrh	equ	0xFF7
 21176                           tblptrl	equ	0xFF6
 21177                           tablat	equ	0xFF5
 21178                           prodh	equ	0xFF4
 21179                           prodl	equ	0xFF3
 21180                           intcon	equ	0xFF2
 21181                           intcon2	equ	0xFF1
 21182                           indf0	equ	0xFEF
 21183                           postinc0	equ	0xFEE
 21184                           fsr0h	equ	0xFEA
 21185                           fsr0l	equ	0xFE9
 21186                           wreg	equ	0xFE8
 21187                           indf1	equ	0xFE7
 21188                           postdec1	equ	0xFE5
 21189                           fsr1h	equ	0xFE2
 21190                           fsr1l	equ	0xFE1
 21191                           indf2	equ	0xFDF
 21192                           postinc2	equ	0xFDE
 21193                           postdec2	equ	0xFDD
 21194                           fsr2h	equ	0xFDA
 21195                           fsr2l	equ	0xFD9
 21196                           status	equ	0xFD8
 21197                           
 21198 ;; *************** function _GetEEPROM *****************
 21199 ;; Defined at:
 21200 ;;		line 134 in file "EEPROM.c"
 21201 ;; Parameters:    Size  Location     Type
 21202 ;;  Temp            2   62[BANK0 ] PTR struct EEdata
 21203 ;;		 -> SyncEEPROMToGlobal@Temp(136), 
 21204 ;; Auto vars:     Size  Location     Type
 21205 ;;  j               1   69[BANK0 ] unsigned char 
 21206 ;;  i               1   68[BANK0 ] unsigned char 
 21207 ;;  k               1   67[BANK0 ] unsigned char 
 21208 ;;  Arrayspot       1   66[BANK0 ] unsigned char 
 21209 ;; Return value:  Size  Location     Type
 21210 ;;		None               void
 21211 ;; Registers used:
 21212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21213 ;; Tracked objects:
 21214 ;;		On entry : 0/0
 21215 ;;		On exit  : 0/0
 21216 ;;		Unchanged: 0/0
 21217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21218 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21219 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21220 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21221 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21222 ;;Total ram usage:        8 bytes
 21223 ;; Hardware stack levels used:    1
 21224 ;; Hardware stack levels required when called:    8
 21225 ;; This function calls:
 21226 ;;		_GetMemoryChar
 21227 ;;		_GetMemoryLong
 21228 ;; This function is called by:
 21229 ;;		_SyncEEPROMToGlobal
 21230 ;; This function uses a non-reentrant model
 21231 ;;
 21232                           
 21233                           	psect	text39
 21234  006B30                     __ptext39:
 21235                           	opt stack 0
 21236  006B30                     _GetEEPROM:
 21237                           	opt stack 20
 21238                           
 21239                           ;EEPROM.c: 136: unsigned char i,j,k;
 21240                           ;EEPROM.c: 137: unsigned char Arrayspot=5;
 21241                           
 21242                           ; BSR set to: 1
 21243                           ;incstack = 0
 21244  006B30  0E05               	movlw	5
 21245  006B32  0100               	movlb	0	; () banked
 21246  006B34  6FA2               	movwf	GetEEPROM@Arrayspot& (0+255),b
 21247                           
 21248                           ; BSR set to: 0
 21249                           ;EEPROM.c: 139: Temp->BlueToothFlag = GetMemoryChar(0);
 21250  006B36  0E00               	movlw	0
 21251  006B38  EC78  F049         	call	_GetMemoryChar
 21252  006B3C  0100               	movlb	0	; () banked
 21253  006B3E  517D               	movf	?_GetMemoryChar& (0+255),w,b
 21254  006B40  C09E  FFD9         	movff	GetEEPROM@Temp,fsr2l
 21255  006B44  C09F  FFDA         	movff	GetEEPROM@Temp+1,fsr2h
 21256  006B48  6EDF               	movwf	indf2,c
 21257                           
 21258                           ; BSR set to: 0
 21259                           ;EEPROM.c: 140: Temp->SWNECcode = GetMemoryLong(1);
 21260  006B4A  0E01               	movlw	1
 21261  006B4C  EC5F  F036         	call	_GetMemoryLong
 21262  006B50  0100               	movlb	0	; () banked
 21263  006B52  EE20 F001          	lfsr	2,1
 21264  006B56  519E               	movf	GetEEPROM@Temp& (0+255),w,b
 21265  006B58  26D9               	addwf	fsr2l,f,c
 21266  006B5A  519F               	movf	(GetEEPROM@Temp+1)& (0+255),w,b
 21267  006B5C  22DA               	addwfc	fsr2h,f,c
 21268  006B5E  0100               	movlb	0	; () banked
 21269  006B60  C07D  FFDE         	movff	?_GetMemoryLong,postinc2
 21270  006B64  0100               	movlb	0	; () banked
 21271  006B66  C07E  FFDE         	movff	?_GetMemoryLong+1,postinc2
 21272  006B6A  0100               	movlb	0	; () banked
 21273  006B6C  C07F  FFDE         	movff	?_GetMemoryLong+2,postinc2
 21274  006B70  0100               	movlb	0	; () banked
 21275  006B72  C080  FFDE         	movff	?_GetMemoryLong+3,postinc2
 21276                           
 21277                           ;EEPROM.c: 141: for(i=0; i< 20; i++)
 21278  006B76  0E00               	movlw	0
 21279  006B78  0100               	movlb	0	; () banked
 21280  006B7A  6FA4               	movwf	GetEEPROM@i& (0+255),b
 21281  006B7C                     l14060:
 21282                           
 21283                           ; BSR set to: 0
 21284  006B7C  0E13               	movlw	19
 21285  006B7E  0100               	movlb	0	; () banked
 21286  006B80  65A4               	cpfsgt	GetEEPROM@i& (0+255),b
 21287  006B82  D001               	goto	l14064
 21288                           
 21289                           ; BSR set to: 0
 21290  006B84  D035               	goto	l14082
 21291  006B86                     l14064:
 21292                           
 21293                           ; BSR set to: 0
 21294                           ;EEPROM.c: 142: {
 21295                           ;EEPROM.c: 143: for(j=0; j < 2; j++)
 21296  006B86  0E00               	movlw	0
 21297  006B88  0100               	movlb	0	; () banked
 21298  006B8A  6FA5               	movwf	GetEEPROM@j& (0+255),b
 21299  006B8C                     l14066:
 21300                           
 21301                           ; BSR set to: 0
 21302  006B8C  0E01               	movlw	1
 21303  006B8E  0100               	movlb	0	; () banked
 21304  006B90  65A5               	cpfsgt	GetEEPROM@j& (0+255),b
 21305  006B92  D001               	goto	l14070
 21306                           
 21307                           ; BSR set to: 0
 21308  006B94  D02A               	goto	l14078
 21309  006B96                     l14070:
 21310                           
 21311                           ; BSR set to: 0
 21312                           ;EEPROM.c: 144: {
 21313                           ;EEPROM.c: 145: Temp->RemoteButtonNEC[i][j] = GetMemoryChar(Arrayspot++);
 21314  006B96  0100               	movlb	0	; () banked
 21315  006B98  51A4               	movf	GetEEPROM@i& (0+255),w,b
 21316  006B9A  0D02               	mullw	2
 21317  006B9C  C09E  F0A0         	movff	GetEEPROM@Temp,??_GetEEPROM
 21318  006BA0  C09F  F0A1         	movff	GetEEPROM@Temp+1,??_GetEEPROM+1
 21319  006BA4  50F3               	movf	prodl,w,c
 21320  006BA6  0100               	movlb	0	; () banked
 21321  006BA8  27A0               	addwf	??_GetEEPROM& (0+255),f,b
 21322  006BAA  50F4               	movf	prodh,w,c
 21323  006BAC  0100               	movlb	0	; () banked
 21324  006BAE  23A1               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21325  006BB0  0100               	movlb	0	; () banked
 21326  006BB2  51A5               	movf	GetEEPROM@j& (0+255),w,b
 21327  006BB4  0D01               	mullw	1
 21328  006BB6  50F3               	movf	prodl,w,c
 21329  006BB8  0100               	movlb	0	; () banked
 21330  006BBA  27A0               	addwf	??_GetEEPROM& (0+255),f,b
 21331  006BBC  50F4               	movf	prodh,w,c
 21332  006BBE  0100               	movlb	0	; () banked
 21333  006BC0  23A1               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21334  006BC2  0E05               	movlw	5
 21335  006BC4  0100               	movlb	0	; () banked
 21336  006BC6  25A0               	addwf	??_GetEEPROM& (0+255),w,b
 21337  006BC8  6ED9               	movwf	fsr2l,c
 21338  006BCA  0E00               	movlw	0
 21339  006BCC  0100               	movlb	0	; () banked
 21340  006BCE  21A1               	addwfc	(??_GetEEPROM+1)& (0+255),w,b
 21341  006BD0  6EDA               	movwf	fsr2h,c
 21342  006BD2  0100               	movlb	0	; () banked
 21343  006BD4  51A2               	movf	GetEEPROM@Arrayspot& (0+255),w,b
 21344  006BD6  EC78  F049         	call	_GetMemoryChar
 21345  006BDA  0100               	movlb	0	; () banked
 21346  006BDC  517D               	movf	?_GetMemoryChar& (0+255),w,b
 21347  006BDE  6EDF               	movwf	indf2,c
 21348                           
 21349                           ; BSR set to: 0
 21350  006BE0  0100               	movlb	0	; () banked
 21351  006BE2  2BA2               	incf	GetEEPROM@Arrayspot& (0+255),f,b
 21352                           
 21353                           ; BSR set to: 0
 21354  006BE4  0100               	movlb	0	; () banked
 21355  006BE6  2BA5               	incf	GetEEPROM@j& (0+255),f,b
 21356  006BE8  D7D1               	goto	l14066
 21357  006BEA                     l14078:
 21358                           
 21359                           ; BSR set to: 0
 21360  006BEA  0100               	movlb	0	; () banked
 21361  006BEC  2BA4               	incf	GetEEPROM@i& (0+255),f,b
 21362  006BEE  D7C6               	goto	l14060
 21363  006BF0                     l14082:
 21364                           
 21365                           ; BSR set to: 0
 21366                           ;EEPROM.c: 146: }
 21367                           ;EEPROM.c: 147: }
 21368                           ;EEPROM.c: 148: Temp->EEPROMinitFlag = GetMemoryChar((2*20 + 5));
 21369  006BF0  0100               	movlb	0	; () banked
 21370  006BF2  EE20 F02D          	lfsr	2,45
 21371  006BF6  519E               	movf	GetEEPROM@Temp& (0+255),w,b
 21372  006BF8  26D9               	addwf	fsr2l,f,c
 21373  006BFA  519F               	movf	(GetEEPROM@Temp+1)& (0+255),w,b
 21374  006BFC  22DA               	addwfc	fsr2h,f,c
 21375  006BFE  0E2D               	movlw	45
 21376  006C00  EC78  F049         	call	_GetMemoryChar
 21377  006C04  0100               	movlb	0	; () banked
 21378  006C06  517D               	movf	?_GetMemoryChar& (0+255),w,b
 21379  006C08  6EDF               	movwf	indf2,c
 21380                           
 21381                           ; BSR set to: 0
 21382                           ;EEPROM.c: 149: Arrayspot=(2*20 + 7);
 21383  006C0A  0E2F               	movlw	47
 21384  006C0C  0100               	movlb	0	; () banked
 21385  006C0E  6FA2               	movwf	GetEEPROM@Arrayspot& (0+255),b
 21386                           
 21387                           ; BSR set to: 0
 21388                           ;EEPROM.c: 150: for(i=0; i< 15; i++)
 21389  006C10  0E00               	movlw	0
 21390  006C12  0100               	movlb	0	; () banked
 21391  006C14  6FA4               	movwf	GetEEPROM@i& (0+255),b
 21392                           
 21393                           ; BSR set to: 0
 21394  006C16  0E0E               	movlw	14
 21395  006C18  0100               	movlb	0	; () banked
 21396  006C1A  65A4               	cpfsgt	GetEEPROM@i& (0+255),b
 21397  006C1C  D002               	goto	l14092
 21398  006C1E  0012               	return	
 21399                           
 21400                           ; BSR set to: 0
 21401  006C20  0012               	return	
 21402  006C22                     l14092:
 21403                           
 21404                           ; BSR set to: 0
 21405                           ;EEPROM.c: 151: {
 21406                           ;EEPROM.c: 152: for(j=0; j < 3; j++)
 21407  006C22  0E00               	movlw	0
 21408  006C24  0100               	movlb	0	; () banked
 21409  006C26  6FA5               	movwf	GetEEPROM@j& (0+255),b
 21410  006C28                     l14094:
 21411                           
 21412                           ; BSR set to: 0
 21413  006C28  0E02               	movlw	2
 21414  006C2A  0100               	movlb	0	; () banked
 21415  006C2C  65A5               	cpfsgt	GetEEPROM@j& (0+255),b
 21416  006C2E  D001               	goto	l14098
 21417                           
 21418                           ; BSR set to: 0
 21419  006C30  D03E               	goto	l14116
 21420  006C32                     l14098:
 21421                           
 21422                           ; BSR set to: 0
 21423                           ;EEPROM.c: 153: {
 21424                           ;EEPROM.c: 154: for(k=0; k < 2; k++)
 21425  006C32  0E00               	movlw	0
 21426  006C34  0100               	movlb	0	; () banked
 21427  006C36  6FA3               	movwf	GetEEPROM@k& (0+255),b
 21428  006C38                     l14100:
 21429                           
 21430                           ; BSR set to: 0
 21431  006C38  0E01               	movlw	1
 21432  006C3A  0100               	movlb	0	; () banked
 21433  006C3C  65A3               	cpfsgt	GetEEPROM@k& (0+255),b
 21434  006C3E  D001               	goto	l14104
 21435                           
 21436                           ; BSR set to: 0
 21437  006C40  D033               	goto	l14112
 21438  006C42                     l14104:
 21439                           
 21440                           ; BSR set to: 0
 21441                           ;EEPROM.c: 155: {
 21442                           ;EEPROM.c: 156: Temp->RemoteButtonRF[i][j][k] = GetMemoryChar(Arrayspot++);
 21443  006C42  0100               	movlb	0	; () banked
 21444  006C44  51A4               	movf	GetEEPROM@i& (0+255),w,b
 21445  006C46  0D06               	mullw	6
 21446  006C48  C09E  F0A0         	movff	GetEEPROM@Temp,??_GetEEPROM
 21447  006C4C  C09F  F0A1         	movff	GetEEPROM@Temp+1,??_GetEEPROM+1
 21448  006C50  50F3               	movf	prodl,w,c
 21449  006C52  0100               	movlb	0	; () banked
 21450  006C54  27A0               	addwf	??_GetEEPROM& (0+255),f,b
 21451  006C56  50F4               	movf	prodh,w,c
 21452  006C58  0100               	movlb	0	; () banked
 21453  006C5A  23A1               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21454  006C5C  0100               	movlb	0	; () banked
 21455  006C5E  51A5               	movf	GetEEPROM@j& (0+255),w,b
 21456  006C60  0D02               	mullw	2
 21457  006C62  50F3               	movf	prodl,w,c
 21458  006C64  0100               	movlb	0	; () banked
 21459  006C66  27A0               	addwf	??_GetEEPROM& (0+255),f,b
 21460  006C68  50F4               	movf	prodh,w,c
 21461  006C6A  0100               	movlb	0	; () banked
 21462  006C6C  23A1               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21463  006C6E  0100               	movlb	0	; () banked
 21464  006C70  51A3               	movf	GetEEPROM@k& (0+255),w,b
 21465  006C72  0D01               	mullw	1
 21466  006C74  50F3               	movf	prodl,w,c
 21467  006C76  0100               	movlb	0	; () banked
 21468  006C78  27A0               	addwf	??_GetEEPROM& (0+255),f,b
 21469  006C7A  50F4               	movf	prodh,w,c
 21470  006C7C  0100               	movlb	0	; () banked
 21471  006C7E  23A1               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21472  006C80  0E2E               	movlw	46
 21473  006C82  0100               	movlb	0	; () banked
 21474  006C84  25A0               	addwf	??_GetEEPROM& (0+255),w,b
 21475  006C86  6ED9               	movwf	fsr2l,c
 21476  006C88  0E00               	movlw	0
 21477  006C8A  0100               	movlb	0	; () banked
 21478  006C8C  21A1               	addwfc	(??_GetEEPROM+1)& (0+255),w,b
 21479  006C8E  6EDA               	movwf	fsr2h,c
 21480  006C90  0100               	movlb	0	; () banked
 21481  006C92  51A2               	movf	GetEEPROM@Arrayspot& (0+255),w,b
 21482  006C94  EC78  F049         	call	_GetMemoryChar
 21483  006C98  0100               	movlb	0	; () banked
 21484  006C9A  517D               	movf	?_GetMemoryChar& (0+255),w,b
 21485  006C9C  6EDF               	movwf	indf2,c
 21486                           
 21487                           ; BSR set to: 0
 21488  006C9E  0100               	movlb	0	; () banked
 21489  006CA0  2BA2               	incf	GetEEPROM@Arrayspot& (0+255),f,b
 21490                           
 21491                           ; BSR set to: 0
 21492  006CA2  0100               	movlb	0	; () banked
 21493  006CA4  2BA3               	incf	GetEEPROM@k& (0+255),f,b
 21494  006CA6  D7C8               	goto	l14100
 21495  006CA8                     l14112:
 21496                           
 21497                           ; BSR set to: 0
 21498  006CA8  0100               	movlb	0	; () banked
 21499  006CAA  2BA5               	incf	GetEEPROM@j& (0+255),f,b
 21500  006CAC  D7BD               	goto	l14094
 21501  006CAE                     l14116:
 21502                           
 21503                           ; BSR set to: 0
 21504  006CAE  0100               	movlb	0	; () banked
 21505  006CB0  2BA4               	incf	GetEEPROM@i& (0+255),f,b
 21506                           
 21507                           ; BSR set to: 0
 21508  006CB2  0E0E               	movlw	14
 21509  006CB4  0100               	movlb	0	; () banked
 21510  006CB6  65A4               	cpfsgt	GetEEPROM@i& (0+255),b
 21511  006CB8  D7B4               	goto	l14092
 21512  006CBA  0012               	return	
 21513                           
 21514                           ; BSR set to: 0
 21515                           
 21516                           ; BSR set to: 0
 21517  006CBC  0012               	return		;funcret
 21518  006CBE                     __end_of_GetEEPROM:
 21519                           	opt stack 0
 21520                           tblptru	equ	0xFF8
 21521                           tblptrh	equ	0xFF7
 21522                           tblptrl	equ	0xFF6
 21523                           tablat	equ	0xFF5
 21524                           prodh	equ	0xFF4
 21525                           prodl	equ	0xFF3
 21526                           intcon	equ	0xFF2
 21527                           intcon2	equ	0xFF1
 21528                           indf0	equ	0xFEF
 21529                           postinc0	equ	0xFEE
 21530                           fsr0h	equ	0xFEA
 21531                           fsr0l	equ	0xFE9
 21532                           wreg	equ	0xFE8
 21533                           indf1	equ	0xFE7
 21534                           postdec1	equ	0xFE5
 21535                           fsr1h	equ	0xFE2
 21536                           fsr1l	equ	0xFE1
 21537                           indf2	equ	0xFDF
 21538                           postinc2	equ	0xFDE
 21539                           postdec2	equ	0xFDD
 21540                           fsr2h	equ	0xFDA
 21541                           fsr2l	equ	0xFD9
 21542                           status	equ	0xFD8
 21543                           
 21544 ;; *************** function _SetEEPROMdefault *****************
 21545 ;; Defined at:
 21546 ;;		line 255 in file "EEPROM.c"
 21547 ;; Parameters:    Size  Location     Type
 21548 ;;		None
 21549 ;; Auto vars:     Size  Location     Type
 21550 ;;  j               1   94[BANK0 ] unsigned char 
 21551 ;;  i               1   93[BANK0 ] unsigned char 
 21552 ;;  k               1   92[BANK0 ] unsigned char 
 21553 ;; Return value:  Size  Location     Type
 21554 ;;		None               void
 21555 ;; Registers used:
 21556 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21557 ;; Tracked objects:
 21558 ;;		On entry : 0/0
 21559 ;;		On exit  : 0/0
 21560 ;;		Unchanged: 0/0
 21561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21563 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21564 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21565 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21566 ;;Total ram usage:        5 bytes
 21567 ;; Hardware stack levels used:    1
 21568 ;; Hardware stack levels required when called:   11
 21569 ;; This function calls:
 21570 ;;		_SyncGlobalToEEPROM
 21571 ;; This function is called by:
 21572 ;;		_Init_System
 21573 ;; This function uses a non-reentrant model
 21574 ;;
 21575                           
 21576                           	psect	text40
 21577  00738C                     __ptext40:
 21578                           	opt stack 0
 21579  00738C                     _SetEEPROMdefault:
 21580                           	opt stack 18
 21581                           
 21582                           ;EEPROM.c: 257: unsigned char i,j,k;
 21583                           ;EEPROM.c: 259: Global.BlueToothFlag = 0;
 21584                           
 21585                           ; BSR set to: 0
 21586                           ;incstack = 0
 21587  00738C  0E00               	movlw	0
 21588  00738E  0104               	movlb	4	; () banked
 21589  007390  6F00               	movwf	_Global& (0+255),b
 21590                           
 21591                           ;EEPROM.c: 260: Global.SWNECcode = 0x00FF00FF;
 21592  007392  0EFF               	movlw	255
 21593  007394  0104               	movlb	4	; () banked
 21594  007396  6F01               	movwf	(_Global+1)& (0+255),b
 21595  007398  0E00               	movlw	0
 21596  00739A  6F02               	movwf	(_Global+2)& (0+255),b
 21597  00739C  0EFF               	movlw	255
 21598  00739E  6F03               	movwf	(_Global+3)& (0+255),b
 21599  0073A0  0E00               	movlw	0
 21600  0073A2  6F04               	movwf	(_Global+4)& (0+255),b
 21601                           
 21602                           ;EEPROM.c: 261: Global.EEPROMinitFlag = 0;
 21603  0073A4  0E00               	movlw	0
 21604  0073A6  0104               	movlb	4	; () banked
 21605  0073A8  6F2D               	movwf	(_Global+45)& (0+255),b
 21606                           
 21607                           ;EEPROM.c: 262: for(i=0; i< 20; i++)
 21608  0073AA  0E00               	movlw	0
 21609  0073AC  0100               	movlb	0	; () banked
 21610  0073AE  6FBD               	movwf	SetEEPROMdefault@i& (0+255),b
 21611  0073B0                     l14452:
 21612                           
 21613                           ; BSR set to: 0
 21614  0073B0  0E13               	movlw	19
 21615  0073B2  0100               	movlb	0	; () banked
 21616  0073B4  65BD               	cpfsgt	SetEEPROMdefault@i& (0+255),b
 21617  0073B6  D001               	goto	l14456
 21618                           
 21619                           ; BSR set to: 0
 21620  0073B8  D02F               	goto	l14472
 21621  0073BA                     l14456:
 21622                           
 21623                           ; BSR set to: 0
 21624                           ;EEPROM.c: 263: {
 21625                           ;EEPROM.c: 264: for(j=0; j < 2; j++)
 21626  0073BA  0E00               	movlw	0
 21627  0073BC  0100               	movlb	0	; () banked
 21628  0073BE  6FBE               	movwf	SetEEPROMdefault@j& (0+255),b
 21629  0073C0                     l14458:
 21630                           
 21631                           ; BSR set to: 0
 21632  0073C0  0E01               	movlw	1
 21633  0073C2  0100               	movlb	0	; () banked
 21634  0073C4  65BE               	cpfsgt	SetEEPROMdefault@j& (0+255),b
 21635  0073C6  D001               	goto	l14462
 21636                           
 21637                           ; BSR set to: 0
 21638  0073C8  D024               	goto	l14468
 21639  0073CA                     l14462:
 21640                           
 21641                           ; BSR set to: 0
 21642                           ;EEPROM.c: 265: {
 21643                           ;EEPROM.c: 266: Global.RemoteButtonNEC[i][j] = 0x00;
 21644  0073CA  0100               	movlb	0	; () banked
 21645  0073CC  51BD               	movf	SetEEPROMdefault@i& (0+255),w,b
 21646  0073CE  0D02               	mullw	2
 21647  0073D0  0E00               	movlw	low _Global
 21648  0073D2  0100               	movlb	0	; () banked
 21649  0073D4  6FBA               	movwf	??_SetEEPROMdefault& (0+255),b
 21650  0073D6  0E04               	movlw	high _Global
 21651  0073D8  0100               	movlb	0	; () banked
 21652  0073DA  6FBB               	movwf	(??_SetEEPROMdefault+1)& (0+255),b
 21653  0073DC  0E05               	movlw	5
 21654  0073DE  0100               	movlb	0	; () banked
 21655  0073E0  27BA               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21656  0073E2  0E00               	movlw	0
 21657  0073E4  23BB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21658  0073E6  50F3               	movf	prodl,w,c
 21659  0073E8  0100               	movlb	0	; () banked
 21660  0073EA  27BA               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21661  0073EC  50F4               	movf	prodh,w,c
 21662  0073EE  0100               	movlb	0	; () banked
 21663  0073F0  23BB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21664  0073F2  0100               	movlb	0	; () banked
 21665  0073F4  51BE               	movf	SetEEPROMdefault@j& (0+255),w,b
 21666  0073F6  0D01               	mullw	1
 21667  0073F8  50F3               	movf	prodl,w,c
 21668  0073FA  0100               	movlb	0	; () banked
 21669  0073FC  25BA               	addwf	??_SetEEPROMdefault& (0+255),w,b
 21670  0073FE  6ED9               	movwf	fsr2l,c
 21671  007400  50F4               	movf	prodh,w,c
 21672  007402  0100               	movlb	0	; () banked
 21673  007404  21BB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),w,b
 21674  007406  6EDA               	movwf	fsr2h,c
 21675  007408  0E00               	movlw	0
 21676  00740A  6EDF               	movwf	indf2,c
 21677                           
 21678                           ; BSR set to: 0
 21679  00740C  0100               	movlb	0	; () banked
 21680  00740E  2BBE               	incf	SetEEPROMdefault@j& (0+255),f,b
 21681  007410  D7D7               	goto	l14458
 21682  007412                     l14468:
 21683                           
 21684                           ; BSR set to: 0
 21685  007412  0100               	movlb	0	; () banked
 21686  007414  2BBD               	incf	SetEEPROMdefault@i& (0+255),f,b
 21687  007416  D7CC               	goto	l14452
 21688  007418                     l14472:
 21689                           
 21690                           ; BSR set to: 0
 21691                           ;EEPROM.c: 267: }
 21692                           ;EEPROM.c: 268: }
 21693                           ;EEPROM.c: 269: for(i=0; i< 15; i++)
 21694  007418  0E00               	movlw	0
 21695  00741A  0100               	movlb	0	; () banked
 21696  00741C  6FBD               	movwf	SetEEPROMdefault@i& (0+255),b
 21697  00741E                     l14474:
 21698                           
 21699                           ; BSR set to: 0
 21700  00741E  0E0E               	movlw	14
 21701  007420  0100               	movlb	0	; () banked
 21702  007422  65BD               	cpfsgt	SetEEPROMdefault@i& (0+255),b
 21703  007424  D001               	goto	l14478
 21704                           
 21705                           ; BSR set to: 0
 21706  007426  D043               	goto	l14504
 21707  007428                     l14478:
 21708                           
 21709                           ; BSR set to: 0
 21710                           ;EEPROM.c: 270: {
 21711                           ;EEPROM.c: 271: for(j=0; j < 3; j++)
 21712  007428  0E00               	movlw	0
 21713  00742A  0100               	movlb	0	; () banked
 21714  00742C  6FBE               	movwf	SetEEPROMdefault@j& (0+255),b
 21715  00742E                     l14480:
 21716                           
 21717                           ; BSR set to: 0
 21718  00742E  0E02               	movlw	2
 21719  007430  0100               	movlb	0	; () banked
 21720  007432  65BE               	cpfsgt	SetEEPROMdefault@j& (0+255),b
 21721  007434  D001               	goto	l14484
 21722                           
 21723                           ; BSR set to: 0
 21724  007436  D038               	goto	l14500
 21725  007438                     l14484:
 21726                           
 21727                           ; BSR set to: 0
 21728                           ;EEPROM.c: 272: {
 21729                           ;EEPROM.c: 273: for(k=0; k < 2; k++)
 21730  007438  0E00               	movlw	0
 21731  00743A  0100               	movlb	0	; () banked
 21732  00743C  6FBC               	movwf	SetEEPROMdefault@k& (0+255),b
 21733  00743E                     l14486:
 21734                           
 21735                           ; BSR set to: 0
 21736  00743E  0E01               	movlw	1
 21737  007440  0100               	movlb	0	; () banked
 21738  007442  65BC               	cpfsgt	SetEEPROMdefault@k& (0+255),b
 21739  007444  D001               	goto	l14490
 21740                           
 21741                           ; BSR set to: 0
 21742  007446  D02D               	goto	l14496
 21743  007448                     l14490:
 21744                           
 21745                           ; BSR set to: 0
 21746                           ;EEPROM.c: 274: {
 21747                           ;EEPROM.c: 275: Global.RemoteButtonRF[i][j][k] = 0x00;
 21748  007448  0100               	movlb	0	; () banked
 21749  00744A  51BD               	movf	SetEEPROMdefault@i& (0+255),w,b
 21750  00744C  0D06               	mullw	6
 21751  00744E  0E00               	movlw	low _Global
 21752  007450  0100               	movlb	0	; () banked
 21753  007452  6FBA               	movwf	??_SetEEPROMdefault& (0+255),b
 21754  007454  0E04               	movlw	high _Global
 21755  007456  0100               	movlb	0	; () banked
 21756  007458  6FBB               	movwf	(??_SetEEPROMdefault+1)& (0+255),b
 21757  00745A  0E2E               	movlw	46
 21758  00745C  0100               	movlb	0	; () banked
 21759  00745E  27BA               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21760  007460  0E00               	movlw	0
 21761  007462  23BB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21762  007464  50F3               	movf	prodl,w,c
 21763  007466  0100               	movlb	0	; () banked
 21764  007468  27BA               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21765  00746A  50F4               	movf	prodh,w,c
 21766  00746C  0100               	movlb	0	; () banked
 21767  00746E  23BB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21768  007470  0100               	movlb	0	; () banked
 21769  007472  51BE               	movf	SetEEPROMdefault@j& (0+255),w,b
 21770  007474  0D02               	mullw	2
 21771  007476  50F3               	movf	prodl,w,c
 21772  007478  0100               	movlb	0	; () banked
 21773  00747A  27BA               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21774  00747C  50F4               	movf	prodh,w,c
 21775  00747E  0100               	movlb	0	; () banked
 21776  007480  23BB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21777  007482  0100               	movlb	0	; () banked
 21778  007484  51BC               	movf	SetEEPROMdefault@k& (0+255),w,b
 21779  007486  0D01               	mullw	1
 21780  007488  50F3               	movf	prodl,w,c
 21781  00748A  0100               	movlb	0	; () banked
 21782  00748C  25BA               	addwf	??_SetEEPROMdefault& (0+255),w,b
 21783  00748E  6ED9               	movwf	fsr2l,c
 21784  007490  50F4               	movf	prodh,w,c
 21785  007492  0100               	movlb	0	; () banked
 21786  007494  21BB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),w,b
 21787  007496  6EDA               	movwf	fsr2h,c
 21788  007498  0E00               	movlw	0
 21789  00749A  6EDF               	movwf	indf2,c
 21790                           
 21791                           ; BSR set to: 0
 21792  00749C  0100               	movlb	0	; () banked
 21793  00749E  2BBC               	incf	SetEEPROMdefault@k& (0+255),f,b
 21794  0074A0  D7CE               	goto	l14486
 21795  0074A2                     l14496:
 21796                           
 21797                           ; BSR set to: 0
 21798  0074A2  0100               	movlb	0	; () banked
 21799  0074A4  2BBE               	incf	SetEEPROMdefault@j& (0+255),f,b
 21800  0074A6  D7C3               	goto	l14480
 21801  0074A8                     l14500:
 21802                           
 21803                           ; BSR set to: 0
 21804  0074A8  0100               	movlb	0	; () banked
 21805  0074AA  2BBD               	incf	SetEEPROMdefault@i& (0+255),f,b
 21806  0074AC  D7B8               	goto	l14474
 21807  0074AE                     l14504:
 21808                           
 21809                           ; BSR set to: 0
 21810                           ;EEPROM.c: 276: }
 21811                           ;EEPROM.c: 277: }
 21812                           ;EEPROM.c: 278: }
 21813                           ;EEPROM.c: 279: SyncGlobalToEEPROM();
 21814  0074AE  ECE9  F047         	call	_SyncGlobalToEEPROM	;wreg free
 21815  0074B2  0012               	return		;funcret
 21816  0074B4                     __end_of_SetEEPROMdefault:
 21817                           	opt stack 0
 21818                           tblptru	equ	0xFF8
 21819                           tblptrh	equ	0xFF7
 21820                           tblptrl	equ	0xFF6
 21821                           tablat	equ	0xFF5
 21822                           prodh	equ	0xFF4
 21823                           prodl	equ	0xFF3
 21824                           intcon	equ	0xFF2
 21825                           intcon2	equ	0xFF1
 21826                           indf0	equ	0xFEF
 21827                           postinc0	equ	0xFEE
 21828                           fsr0h	equ	0xFEA
 21829                           fsr0l	equ	0xFE9
 21830                           wreg	equ	0xFE8
 21831                           indf1	equ	0xFE7
 21832                           postdec1	equ	0xFE5
 21833                           fsr1h	equ	0xFE2
 21834                           fsr1l	equ	0xFE1
 21835                           indf2	equ	0xFDF
 21836                           postinc2	equ	0xFDE
 21837                           postdec2	equ	0xFDD
 21838                           fsr2h	equ	0xFDA
 21839                           fsr2l	equ	0xFD9
 21840                           status	equ	0xFD8
 21841                           
 21842 ;; *************** function _InitUART *****************
 21843 ;; Defined at:
 21844 ;;		line 80 in file "UART.c"
 21845 ;; Parameters:    Size  Location     Type
 21846 ;;  Baud            4  110[BANK0 ] unsigned long 
 21847 ;; Auto vars:     Size  Location     Type
 21848 ;;  temp            4    6[BANK1 ] unsigned long 
 21849 ;;  spbrg           2    3[BANK1 ] unsigned int 
 21850 ;;  config          1    5[BANK1 ] unsigned char 
 21851 ;; Return value:  Size  Location     Type
 21852 ;;		None               void
 21853 ;; Registers used:
 21854 ;;		wreg, status,2, status,0, cstack
 21855 ;; Tracked objects:
 21856 ;;		On entry : 0/0
 21857 ;;		On exit  : 0/0
 21858 ;;		Unchanged: 0/0
 21859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21860 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21861 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21862 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21863 ;;      Totals:         0       8      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21864 ;;Total ram usage:       18 bytes
 21865 ;; Hardware stack levels used:    1
 21866 ;; Hardware stack levels required when called:    9
 21867 ;; This function calls:
 21868 ;;		_ClearUSART
 21869 ;;		_Local_CloseUSART
 21870 ;;		_OpenUSART
 21871 ;;		_Round
 21872 ;;		___fttol
 21873 ;;		___lldiv
 21874 ;;		___lltoft
 21875 ;; This function is called by:
 21876 ;;		_Init_System
 21877 ;; This function uses a non-reentrant model
 21878 ;;
 21879                           
 21880                           	psect	text41
 21881  007936                     __ptext41:
 21882                           	opt stack 0
 21883  007936                     _InitUART:
 21884                           	opt stack 20
 21885                           
 21886                           ;UART.c: 82: unsigned long temp;
 21887                           ;UART.c: 83: unsigned char config = 0;
 21888                           
 21889                           ;incstack = 0
 21890  007936  0E00               	movlw	0
 21891  007938  0101               	movlb	1	; () banked
 21892  00793A  6F05               	movwf	InitUART@config& (0+255),b
 21893                           
 21894                           ; BSR set to: 1
 21895                           ;UART.c: 84: unsigned int spbrg;
 21896                           ;UART.c: 86: Local_CloseUSART();
 21897  00793C  EC47  F04A         	call	_Local_CloseUSART	;wreg free
 21898                           
 21899                           ;UART.c: 91: config |= 0b00001000;
 21900  007940  0101               	movlb	1	; () banked
 21901  007942  8705               	bsf	InitUART@config& (0+255),3,b
 21902                           
 21903                           ; BSR set to: 1
 21904                           ;UART.c: 92: config |= 0b00010000;
 21905  007944  0101               	movlb	1	; () banked
 21906  007946  8905               	bsf	InitUART@config& (0+255),4,b
 21907                           
 21908                           ; BSR set to: 1
 21909                           ;UART.c: 93: config &= ~0b00000010;
 21910  007948  0101               	movlb	1	; () banked
 21911  00794A  9305               	bcf	InitUART@config& (0+255),1,b
 21912                           
 21913                           ; BSR set to: 1
 21914                           ;UART.c: 96: temp = (64000000L / Baud) - 1;
 21915  00794C  0E00               	movlw	0
 21916  00794E  0100               	movlb	0	; () banked
 21917  007950  6F79               	movwf	___lldiv@dividend& (0+255),b
 21918  007952  0E90               	movlw	144
 21919  007954  6F7A               	movwf	(___lldiv@dividend+1)& (0+255),b
 21920  007956  0ED0               	movlw	208
 21921  007958  6F7B               	movwf	(___lldiv@dividend+2)& (0+255),b
 21922  00795A  0E03               	movlw	3
 21923  00795C  6F7C               	movwf	(___lldiv@dividend+3)& (0+255),b
 21924  00795E  C0CE  F07D         	movff	InitUART@Baud,___lldiv@divisor
 21925  007962  C0CF  F07E         	movff	InitUART@Baud+1,___lldiv@divisor+1
 21926  007966  C0D0  F07F         	movff	InitUART@Baud+2,___lldiv@divisor+2
 21927  00796A  C0D1  F080         	movff	InitUART@Baud+3,___lldiv@divisor+3
 21928  00796E  EC4E  F03F         	call	___lldiv	;wreg free
 21929  007972  0EFF               	movlw	255
 21930  007974  0100               	movlb	0	; () banked
 21931  007976  2579               	addwf	?___lldiv& (0+255),w,b
 21932  007978  0101               	movlb	1	; () banked
 21933  00797A  6F06               	movwf	InitUART@temp& (0+255),b
 21934  00797C  0EFF               	movlw	255
 21935  00797E  0100               	movlb	0	; () banked
 21936  007980  217A               	addwfc	(?___lldiv+1)& (0+255),w,b
 21937  007982  0101               	movlb	1	; () banked
 21938  007984  6F07               	movwf	(InitUART@temp+1)& (0+255),b
 21939  007986  0EFF               	movlw	255
 21940  007988  0100               	movlb	0	; () banked
 21941  00798A  217B               	addwfc	(?___lldiv+2)& (0+255),w,b
 21942  00798C  0101               	movlb	1	; () banked
 21943  00798E  6F08               	movwf	(InitUART@temp+2)& (0+255),b
 21944  007990  0EFF               	movlw	255
 21945  007992  0100               	movlb	0	; () banked
 21946  007994  217C               	addwfc	(?___lldiv+3)& (0+255),w,b
 21947  007996  0101               	movlb	1	; () banked
 21948  007998  6F09               	movwf	(InitUART@temp+3)& (0+255),b
 21949                           
 21950                           ; BSR set to: 1
 21951                           ;UART.c: 97: temp = (temp >> 2) - 1;
 21952  00799A  C106  F0D2         	movff	InitUART@temp,??_InitUART
 21953  00799E  C107  F0D3         	movff	InitUART@temp+1,??_InitUART+1
 21954  0079A2  C108  F0D4         	movff	InitUART@temp+2,??_InitUART+2
 21955  0079A6  C109  F0D5         	movff	InitUART@temp+3,??_InitUART+3
 21956  0079AA  0E03               	movlw	3
 21957  0079AC  D006               	goto	u17750
 21958  0079AE                     u17755:
 21959  0079AE  0100               	movlb	0	; () banked
 21960  0079B0  90D8               	bcf	status,0,c
 21961  0079B2  33D5               	rrcf	(??_InitUART+3)& (0+255),f,b
 21962  0079B4  33D4               	rrcf	(??_InitUART+2)& (0+255),f,b
 21963  0079B6  33D3               	rrcf	(??_InitUART+1)& (0+255),f,b
 21964  0079B8  33D2               	rrcf	??_InitUART& (0+255),f,b
 21965  0079BA                     u17750:
 21966  0079BA  2EE8               	decfsz	wreg,f,c
 21967  0079BC  D7F8               	goto	u17755
 21968  0079BE  0EFF               	movlw	255
 21969  0079C0  0100               	movlb	0	; () banked
 21970  0079C2  25D2               	addwf	??_InitUART& (0+255),w,b
 21971  0079C4  0101               	movlb	1	; () banked
 21972  0079C6  6F06               	movwf	InitUART@temp& (0+255),b
 21973  0079C8  0EFF               	movlw	255
 21974  0079CA  0100               	movlb	0	; () banked
 21975  0079CC  21D3               	addwfc	(??_InitUART+1)& (0+255),w,b
 21976  0079CE  0101               	movlb	1	; () banked
 21977  0079D0  6F07               	movwf	(InitUART@temp+1)& (0+255),b
 21978  0079D2  0EFF               	movlw	255
 21979  0079D4  0100               	movlb	0	; () banked
 21980  0079D6  21D4               	addwfc	(??_InitUART+2)& (0+255),w,b
 21981  0079D8  0101               	movlb	1	; () banked
 21982  0079DA  6F08               	movwf	(InitUART@temp+2)& (0+255),b
 21983  0079DC  0EFF               	movlw	255
 21984  0079DE  0100               	movlb	0	; () banked
 21985  0079E0  21D5               	addwfc	(??_InitUART+3)& (0+255),w,b
 21986  0079E2  0101               	movlb	1	; () banked
 21987  0079E4  6F09               	movwf	(InitUART@temp+3)& (0+255),b
 21988                           
 21989                           ; BSR set to: 1
 21990                           ;UART.c: 98: spbrg = (unsigned int) Round(temp);
 21991  0079E6  C106  F081         	movff	InitUART@temp,___lltoft@c
 21992  0079EA  C107  F082         	movff	InitUART@temp+1,___lltoft@c+1
 21993  0079EE  C108  F083         	movff	InitUART@temp+2,___lltoft@c+2
 21994  0079F2  C109  F084         	movff	InitUART@temp+3,___lltoft@c+3
 21995  0079F6  EC72  F044         	call	___lltoft	;wreg free
 21996  0079FA  C081  F0C7         	movff	?___lltoft,Round@input
 21997  0079FE  C082  F0C8         	movff	?___lltoft+1,Round@input+1
 21998  007A02  C083  F0C9         	movff	?___lltoft+2,Round@input+2
 21999  007A06  EC9E  F045         	call	_Round	;wreg free
 22000  007A0A  C0C7  F100         	movff	?_Round,_InitUART$3797
 22001  007A0E  C0C8  F101         	movff	?_Round+1,_InitUART$3797+1
 22002  007A12  C0C9  F102         	movff	?_Round+2,_InitUART$3797+2
 22003                           
 22004                           ;UART.c: 98: spbrg = (unsigned int) Round(temp);
 22005  007A16  C100  F0B8         	movff	_InitUART$3797,___fttol@f1
 22006  007A1A  C101  F0B9         	movff	_InitUART$3797+1,___fttol@f1+1
 22007  007A1E  C102  F0BA         	movff	_InitUART$3797+2,___fttol@f1+2
 22008  007A22  EC76  F038         	call	___fttol	;wreg free
 22009  007A26  C0B8  F103         	movff	?___fttol,InitUART@spbrg
 22010  007A2A  C0B9  F104         	movff	?___fttol+1,InitUART@spbrg+1
 22011                           
 22012                           ;UART.c: 100: BAUDCONbits.BRG16 = 1;
 22013  007A2E  86B8               	bsf	4024,3,c	;volatile
 22014                           
 22015                           ;UART.c: 102: ClearUSART();
 22016  007A30  EC4E  F04A         	call	_ClearUSART	;wreg free
 22017                           
 22018                           ;UART.c: 103: OpenUSART(config, spbrg);
 22019  007A34  C103  F079         	movff	InitUART@spbrg,OpenUSART@spbrg
 22020  007A38  C104  F07A         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
 22021  007A3C  0101               	movlb	1	; () banked
 22022  007A3E  5105               	movf	InitUART@config& (0+255),w,b
 22023  007A40  ECB2  F044         	call	_OpenUSART
 22024                           
 22025                           ;UART.c: 105: PIR1bits.RCIF = 0;
 22026  007A44  9A9E               	bcf	3998,5,c	;volatile
 22027                           
 22028                           ;UART.c: 106: PIE1bits.RCIE = 1;
 22029  007A46  8A9D               	bsf	3997,5,c	;volatile
 22030                           
 22031                           ;UART.c: 107: INTCONbits.PEIE = 1;
 22032  007A48  8CF2               	bsf	intcon,6,c	;volatile
 22033  007A4A  0012               	return		;funcret
 22034  007A4C                     __end_of_InitUART:
 22035                           	opt stack 0
 22036                           tblptru	equ	0xFF8
 22037                           tblptrh	equ	0xFF7
 22038                           tblptrl	equ	0xFF6
 22039                           tablat	equ	0xFF5
 22040                           prodh	equ	0xFF4
 22041                           prodl	equ	0xFF3
 22042                           intcon	equ	0xFF2
 22043                           intcon2	equ	0xFF1
 22044                           indf0	equ	0xFEF
 22045                           postinc0	equ	0xFEE
 22046                           fsr0h	equ	0xFEA
 22047                           fsr0l	equ	0xFE9
 22048                           wreg	equ	0xFE8
 22049                           indf1	equ	0xFE7
 22050                           postdec1	equ	0xFE5
 22051                           fsr1h	equ	0xFE2
 22052                           fsr1l	equ	0xFE1
 22053                           indf2	equ	0xFDF
 22054                           postinc2	equ	0xFDE
 22055                           postdec2	equ	0xFDD
 22056                           fsr2h	equ	0xFDA
 22057                           fsr2l	equ	0xFD9
 22058                           status	equ	0xFD8
 22059                           
 22060 ;; *************** function _Round *****************
 22061 ;; Defined at:
 22062 ;;		line 155 in file "MISC.c"
 22063 ;; Parameters:    Size  Location     Type
 22064 ;;  input           3  103[BANK0 ] unsigned char 
 22065 ;; Auto vars:     Size  Location     Type
 22066 ;;  temp            4  106[BANK0 ] long 
 22067 ;; Return value:  Size  Location     Type
 22068 ;;                  3  103[BANK0 ] long 
 22069 ;; Registers used:
 22070 ;;		wreg, status,2, status,0, cstack
 22071 ;; Tracked objects:
 22072 ;;		On entry : 0/0
 22073 ;;		On exit  : 0/0
 22074 ;;		Unchanged: 0/0
 22075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22076 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22077 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22079 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22080 ;;Total ram usage:        7 bytes
 22081 ;; Hardware stack levels used:    1
 22082 ;; Hardware stack levels required when called:    8
 22083 ;; This function calls:
 22084 ;;		___altoft
 22085 ;;		___ftadd
 22086 ;;		___fttol
 22087 ;; This function is called by:
 22088 ;;		_InitUART
 22089 ;; This function uses a non-reentrant model
 22090 ;;
 22091                           
 22092                           	psect	text42
 22093  008B3C                     __ptext42:
 22094                           	opt stack 0
 22095  008B3C                     _Round:
 22096                           	opt stack 20
 22097                           
 22098                           ;MISC.c: 157: long temp = (long)(input + 0.5);
 22099                           
 22100                           ;incstack = 0
 22101  008B3C  0E00               	movlw	0
 22102  008B3E  0100               	movlb	0	; () banked
 22103  008B40  6FAF               	movwf	___ftadd@f2& (0+255),b
 22104  008B42  0E00               	movlw	0
 22105  008B44  0100               	movlb	0	; () banked
 22106  008B46  6FB0               	movwf	(___ftadd@f2+1)& (0+255),b
 22107  008B48  0E3F               	movlw	63
 22108  008B4A  0100               	movlb	0	; () banked
 22109  008B4C  6FB1               	movwf	(___ftadd@f2+2)& (0+255),b
 22110  008B4E  C0C7  F0AC         	movff	Round@input,___ftadd@f1
 22111  008B52  C0C8  F0AD         	movff	Round@input+1,___ftadd@f1+1
 22112  008B56  C0C9  F0AE         	movff	Round@input+2,___ftadd@f1+2
 22113  008B5A  EC80  F02D         	call	___ftadd	;wreg free
 22114  008B5E  C0AC  F0B8         	movff	?___ftadd,___fttol@f1
 22115  008B62  C0AD  F0B9         	movff	?___ftadd+1,___fttol@f1+1
 22116  008B66  C0AE  F0BA         	movff	?___ftadd+2,___fttol@f1+2
 22117  008B6A  EC76  F038         	call	___fttol	;wreg free
 22118  008B6E  C0B8  F0CA         	movff	?___fttol,Round@temp
 22119  008B72  C0B9  F0CB         	movff	?___fttol+1,Round@temp+1
 22120  008B76  C0BA  F0CC         	movff	?___fttol+2,Round@temp+2
 22121  008B7A  C0BB  F0CD         	movff	?___fttol+3,Round@temp+3
 22122                           
 22123                           ;MISC.c: 159: return temp;
 22124  008B7E  C0CA  F081         	movff	Round@temp,___altoft@c
 22125  008B82  C0CB  F082         	movff	Round@temp+1,___altoft@c+1
 22126  008B86  C0CC  F083         	movff	Round@temp+2,___altoft@c+2
 22127  008B8A  C0CD  F084         	movff	Round@temp+3,___altoft@c+3
 22128  008B8E  EC75  F042         	call	___altoft	;wreg free
 22129  008B92  C081  F0C7         	movff	?___altoft,?_Round
 22130  008B96  C082  F0C8         	movff	?___altoft+1,?_Round+1
 22131  008B9A  C083  F0C9         	movff	?___altoft+2,?_Round+2
 22132  008B9E  0012               	return	
 22133  008BA0  0012               	return		;funcret
 22134  008BA2                     __end_of_Round:
 22135                           	opt stack 0
 22136                           tblptru	equ	0xFF8
 22137                           tblptrh	equ	0xFF7
 22138                           tblptrl	equ	0xFF6
 22139                           tablat	equ	0xFF5
 22140                           prodh	equ	0xFF4
 22141                           prodl	equ	0xFF3
 22142                           intcon	equ	0xFF2
 22143                           intcon2	equ	0xFF1
 22144                           indf0	equ	0xFEF
 22145                           postinc0	equ	0xFEE
 22146                           fsr0h	equ	0xFEA
 22147                           fsr0l	equ	0xFE9
 22148                           wreg	equ	0xFE8
 22149                           indf1	equ	0xFE7
 22150                           postdec1	equ	0xFE5
 22151                           fsr1h	equ	0xFE2
 22152                           fsr1l	equ	0xFE1
 22153                           indf2	equ	0xFDF
 22154                           postinc2	equ	0xFDE
 22155                           postdec2	equ	0xFDD
 22156                           fsr2h	equ	0xFDA
 22157                           fsr2l	equ	0xFD9
 22158                           status	equ	0xFD8
 22159                           
 22160 ;; *************** function ___altoft *****************
 22161 ;; Defined at:
 22162 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
 22163 ;; Parameters:    Size  Location     Type
 22164 ;;  c               4   33[BANK0 ] long 
 22165 ;; Auto vars:     Size  Location     Type
 22166 ;;  sign            1   42[BANK0 ] unsigned char 
 22167 ;;  exp             1   41[BANK0 ] unsigned char 
 22168 ;; Return value:  Size  Location     Type
 22169 ;;                  3   33[BANK0 ] float 
 22170 ;; Registers used:
 22171 ;;		wreg, status,2, status,0, cstack
 22172 ;; Tracked objects:
 22173 ;;		On entry : 0/0
 22174 ;;		On exit  : 0/0
 22175 ;;		Unchanged: 0/0
 22176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22177 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22178 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22179 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22180 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22181 ;;Total ram usage:       10 bytes
 22182 ;; Hardware stack levels used:    1
 22183 ;; Hardware stack levels required when called:    7
 22184 ;; This function calls:
 22185 ;;		___ftpack
 22186 ;; This function is called by:
 22187 ;;		_Round
 22188 ;; This function uses a non-reentrant model
 22189 ;;
 22190                           
 22191                           	psect	text43
 22192  0084EA                     __ptext43:
 22193                           	opt stack 0
 22194  0084EA                     ___altoft:
 22195                           	opt stack 20
 22196                           
 22197                           ;incstack = 0
 22198  0084EA  0E00               	movlw	0
 22199  0084EC  0100               	movlb	0	; () banked
 22200  0084EE  6F8A               	movwf	___altoft@sign& (0+255),b
 22201  0084F0  0E8E               	movlw	142
 22202  0084F2  0100               	movlb	0	; () banked
 22203  0084F4  6F89               	movwf	___altoft@exp& (0+255),b
 22204                           
 22205                           ; BSR set to: 0
 22206  0084F6  0100               	movlb	0	; () banked
 22207  0084F8  AF84               	btfss	(___altoft@c+3)& (0+255),7,b
 22208  0084FA  D016               	goto	l13846
 22209                           
 22210                           ; BSR set to: 0
 22211  0084FC  0100               	movlb	0	; () banked
 22212  0084FE  1F84               	comf	(___altoft@c+3)& (0+255),f,b
 22213  008500  1F83               	comf	(___altoft@c+2)& (0+255),f,b
 22214  008502  1F82               	comf	(___altoft@c+1)& (0+255),f,b
 22215  008504  6D81               	negf	___altoft@c& (0+255),b
 22216  008506  0E00               	movlw	0
 22217  008508  2382               	addwfc	(___altoft@c+1)& (0+255),f,b
 22218  00850A  2383               	addwfc	(___altoft@c+2)& (0+255),f,b
 22219  00850C  2384               	addwfc	(___altoft@c+3)& (0+255),f,b
 22220                           
 22221                           ; BSR set to: 0
 22222  00850E  0E01               	movlw	1
 22223  008510  0100               	movlb	0	; () banked
 22224  008512  6F8A               	movwf	___altoft@sign& (0+255),b
 22225                           
 22226                           ; BSR set to: 0
 22227  008514  D009               	goto	l13846
 22228  008516                     l13844:
 22229                           
 22230                           ; BSR set to: 0
 22231  008516  0100               	movlb	0	; () banked
 22232  008518  90D8               	bcf	status,0,c
 22233  00851A  3384               	rrcf	(___altoft@c+3)& (0+255),f,b
 22234  00851C  3383               	rrcf	(___altoft@c+2)& (0+255),f,b
 22235  00851E  3382               	rrcf	(___altoft@c+1)& (0+255),f,b
 22236  008520  3381               	rrcf	___altoft@c& (0+255),f,b
 22237  008522  0100               	movlb	0	; () banked
 22238  008524  2B89               	incf	___altoft@exp& (0+255),f,b
 22239  008526  D000               	goto	l13846
 22240  008528                     l13846:
 22241                           
 22242                           ; BSR set to: 0
 22243  008528  0E00               	movlw	0
 22244  00852A  0100               	movlb	0	; () banked
 22245  00852C  1581               	andwf	___altoft@c& (0+255),w,b
 22246  00852E  0100               	movlb	0	; () banked
 22247  008530  6F85               	movwf	??___altoft& (0+255),b
 22248  008532  0E00               	movlw	0
 22249  008534  0100               	movlb	0	; () banked
 22250  008536  1582               	andwf	(___altoft@c+1)& (0+255),w,b
 22251  008538  0100               	movlb	0	; () banked
 22252  00853A  6F86               	movwf	(??___altoft+1)& (0+255),b
 22253  00853C  0E00               	movlw	0
 22254  00853E  0100               	movlb	0	; () banked
 22255  008540  1583               	andwf	(___altoft@c+2)& (0+255),w,b
 22256  008542  0100               	movlb	0	; () banked
 22257  008544  6F87               	movwf	(??___altoft+2)& (0+255),b
 22258  008546  0EFF               	movlw	255
 22259  008548  0100               	movlb	0	; () banked
 22260  00854A  1584               	andwf	(___altoft@c+3)& (0+255),w,b
 22261  00854C  0100               	movlb	0	; () banked
 22262  00854E  6F88               	movwf	(??___altoft+3)& (0+255),b
 22263  008550  0100               	movlb	0	; () banked
 22264  008552  5185               	movf	??___altoft& (0+255),w,b
 22265  008554  0100               	movlb	0	; () banked
 22266  008556  1186               	iorwf	(??___altoft+1)& (0+255),w,b
 22267  008558  0100               	movlb	0	; () banked
 22268  00855A  1187               	iorwf	(??___altoft+2)& (0+255),w,b
 22269  00855C  0100               	movlb	0	; () banked
 22270  00855E  1188               	iorwf	(??___altoft+3)& (0+255),w,b
 22271  008560  A4D8               	btfss	status,2,c
 22272  008562  D7D9               	goto	l13844
 22273                           
 22274                           ; BSR set to: 0
 22275                           
 22276                           ; BSR set to: 0
 22277  008564  C081  F079         	movff	___altoft@c,___ftpack@arg
 22278  008568  C082  F07A         	movff	___altoft@c+1,___ftpack@arg+1
 22279  00856C  C083  F07B         	movff	___altoft@c+2,___ftpack@arg+2
 22280  008570  C089  F07C         	movff	___altoft@exp,___ftpack@exp
 22281  008574  C08A  F07D         	movff	___altoft@sign,___ftpack@sign
 22282  008578  ECED  F03A         	call	___ftpack	;wreg free
 22283  00857C  C079  F081         	movff	?___ftpack,?___altoft
 22284  008580  C07A  F082         	movff	?___ftpack+1,?___altoft+1
 22285  008584  C07B  F083         	movff	?___ftpack+2,?___altoft+2
 22286  008588  0012               	return	
 22287  00858A  0012               	return		;funcret
 22288  00858C                     __end_of___altoft:
 22289                           	opt stack 0
 22290                           tblptru	equ	0xFF8
 22291                           tblptrh	equ	0xFF7
 22292                           tblptrl	equ	0xFF6
 22293                           tablat	equ	0xFF5
 22294                           prodh	equ	0xFF4
 22295                           prodl	equ	0xFF3
 22296                           intcon	equ	0xFF2
 22297                           intcon2	equ	0xFF1
 22298                           indf0	equ	0xFEF
 22299                           postinc0	equ	0xFEE
 22300                           fsr0h	equ	0xFEA
 22301                           fsr0l	equ	0xFE9
 22302                           wreg	equ	0xFE8
 22303                           indf1	equ	0xFE7
 22304                           postdec1	equ	0xFE5
 22305                           fsr1h	equ	0xFE2
 22306                           fsr1l	equ	0xFE1
 22307                           indf2	equ	0xFDF
 22308                           postinc2	equ	0xFDE
 22309                           postdec2	equ	0xFDD
 22310                           fsr2h	equ	0xFDA
 22311                           fsr2l	equ	0xFD9
 22312                           status	equ	0xFD8
 22313                           
 22314 ;; *************** function _OpenUSART *****************
 22315 ;; Defined at:
 22316 ;;		line 115 in file "UART.c"
 22317 ;; Parameters:    Size  Location     Type
 22318 ;;  config          1    wreg     unsigned char 
 22319 ;;  spbrg           2   25[BANK0 ] unsigned int 
 22320 ;; Auto vars:     Size  Location     Type
 22321 ;;  config          1   27[BANK0 ] unsigned char 
 22322 ;; Return value:  Size  Location     Type
 22323 ;;		None               void
 22324 ;; Registers used:
 22325 ;;		wreg, status,2
 22326 ;; Tracked objects:
 22327 ;;		On entry : 0/0
 22328 ;;		On exit  : 0/0
 22329 ;;		Unchanged: 0/0
 22330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22331 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22332 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22334 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22335 ;;Total ram usage:        3 bytes
 22336 ;; Hardware stack levels used:    1
 22337 ;; Hardware stack levels required when called:    6
 22338 ;; This function calls:
 22339 ;;		Nothing
 22340 ;; This function is called by:
 22341 ;;		_InitUART
 22342 ;; This function uses a non-reentrant model
 22343 ;;
 22344                           
 22345                           	psect	text44
 22346  008964                     __ptext44:
 22347                           	opt stack 0
 22348  008964                     _OpenUSART:
 22349                           	opt stack 22
 22350                           
 22351                           ;incstack = 0
 22352                           ;OpenUSART@config stored from wreg
 22353  008964  0100               	movlb	0	; () banked
 22354  008966  6F7B               	movwf	OpenUSART@config& (0+255),b
 22355                           
 22356                           ; BSR set to: 0
 22357                           ;UART.c: 117: TXSTA = 0;
 22358  008968  0E00               	movlw	0
 22359  00896A  6EAC               	movwf	4012,c	;volatile
 22360                           
 22361                           ;UART.c: 118: RCSTA = 0;
 22362  00896C  0E00               	movlw	0
 22363  00896E  6EAB               	movwf	4011,c	;volatile
 22364                           
 22365                           ; BSR set to: 0
 22366                           ;UART.c: 120: if(config&0x01)
 22367  008970  0100               	movlb	0	; () banked
 22368  008972  A17B               	btfss	OpenUSART@config& (0+255),0,b
 22369  008974  D002               	goto	l13944
 22370                           
 22371                           ; BSR set to: 0
 22372                           ;UART.c: 121: {
 22373                           ;UART.c: 122: TXSTAbits.SYNC = 1;
 22374  008976  88AC               	bsf	4012,4,c	;volatile
 22375  008978  D000               	goto	l13944
 22376  00897A                     l13944:
 22377                           
 22378                           ; BSR set to: 0
 22379                           ;UART.c: 123: }
 22380                           ;UART.c: 125: if(config&0x02)
 22381  00897A  0100               	movlb	0	; () banked
 22382  00897C  A37B               	btfss	OpenUSART@config& (0+255),1,b
 22383  00897E  D003               	goto	l13948
 22384                           
 22385                           ; BSR set to: 0
 22386                           ;UART.c: 126: {
 22387                           ;UART.c: 127: TXSTAbits.TX9 = 1;
 22388  008980  8CAC               	bsf	4012,6,c	;volatile
 22389                           
 22390                           ;UART.c: 128: RCSTAbits.RX9 = 1;
 22391  008982  8CAB               	bsf	4011,6,c	;volatile
 22392  008984  D000               	goto	l13948
 22393  008986                     l13948:
 22394                           
 22395                           ; BSR set to: 0
 22396                           ;UART.c: 129: }
 22397                           ;UART.c: 131: if(config&0x04)
 22398  008986  0100               	movlb	0	; () banked
 22399  008988  A57B               	btfss	OpenUSART@config& (0+255),2,b
 22400  00898A  D002               	goto	l13952
 22401                           
 22402                           ; BSR set to: 0
 22403                           ;UART.c: 132: {
 22404                           ;UART.c: 133: TXSTAbits.CSRC = 1;
 22405  00898C  8EAC               	bsf	4012,7,c	;volatile
 22406  00898E  D000               	goto	l13952
 22407  008990                     l13952:
 22408                           
 22409                           ; BSR set to: 0
 22410                           ;UART.c: 134: }
 22411                           ;UART.c: 136: if(config&0x08)
 22412  008990  0100               	movlb	0	; () banked
 22413  008992  A77B               	btfss	OpenUSART@config& (0+255),3,b
 22414  008994  D002               	goto	l634
 22415                           
 22416                           ; BSR set to: 0
 22417                           ;UART.c: 137: {
 22418                           ;UART.c: 138: RCSTAbits.CREN = 1;
 22419  008996  88AB               	bsf	4011,4,c	;volatile
 22420                           
 22421                           ;UART.c: 139: }
 22422  008998  D002               	goto	l13956
 22423  00899A                     l634:
 22424                           
 22425                           ; BSR set to: 0
 22426                           ;UART.c: 140: else
 22427                           ;UART.c: 141: {
 22428                           ;UART.c: 142: RCSTAbits.SREN = 1;
 22429  00899A  8AAB               	bsf	4011,5,c	;volatile
 22430  00899C  D000               	goto	l13956
 22431  00899E                     l13956:
 22432                           
 22433                           ; BSR set to: 0
 22434                           ;UART.c: 143: }
 22435                           ;UART.c: 145: if(config&0x10)
 22436  00899E  0100               	movlb	0	; () banked
 22437  0089A0  A97B               	btfss	OpenUSART@config& (0+255),4,b
 22438  0089A2  D002               	goto	l13960
 22439                           
 22440                           ; BSR set to: 0
 22441                           ;UART.c: 146: {
 22442                           ;UART.c: 147: TXSTAbits.BRGH = 1;
 22443  0089A4  84AC               	bsf	4012,2,c	;volatile
 22444  0089A6  D000               	goto	l13960
 22445  0089A8                     l13960:
 22446                           
 22447                           ; BSR set to: 0
 22448                           ;UART.c: 148: }
 22449                           ;UART.c: 150: if(config&0x20)
 22450  0089A8  0100               	movlb	0	; () banked
 22451  0089AA  AB7B               	btfss	OpenUSART@config& (0+255),5,b
 22452  0089AC  D002               	goto	l13964
 22453                           
 22454                           ; BSR set to: 0
 22455                           ;UART.c: 151: {
 22456                           ;UART.c: 152: RCSTAbits.ADEN = 1;
 22457  0089AE  86AB               	bsf	4011,3,c	;volatile
 22458  0089B0  D000               	goto	l13964
 22459  0089B2                     l13964:
 22460                           
 22461                           ; BSR set to: 0
 22462                           ;UART.c: 153: }
 22463                           ;UART.c: 155: if(config&0x40)
 22464  0089B2  0100               	movlb	0	; () banked
 22465  0089B4  AD7B               	btfss	OpenUSART@config& (0+255),6,b
 22466  0089B6  D003               	goto	l638
 22467                           
 22468                           ; BSR set to: 0
 22469                           ;UART.c: 156: {
 22470                           ;UART.c: 157: PIR1bits.RCIF = 0;
 22471  0089B8  9A9E               	bcf	3998,5,c	;volatile
 22472                           
 22473                           ;UART.c: 158: PIE1bits.RCIE = 1;
 22474  0089BA  8A9D               	bsf	3997,5,c	;volatile
 22475                           
 22476                           ;UART.c: 160: }
 22477  0089BC  D002               	goto	l13968
 22478  0089BE                     l638:
 22479                           
 22480                           ; BSR set to: 0
 22481                           ;UART.c: 161: else
 22482                           ;UART.c: 162: {
 22483                           ;UART.c: 163: PIE1bits.RCIE = 0;
 22484  0089BE  9A9D               	bcf	3997,5,c	;volatile
 22485  0089C0  D000               	goto	l13968
 22486  0089C2                     l13968:
 22487                           
 22488                           ; BSR set to: 0
 22489                           ;UART.c: 164: }
 22490                           ;UART.c: 166: if(config&0x80)
 22491  0089C2  0100               	movlb	0	; () banked
 22492  0089C4  AF7B               	btfss	OpenUSART@config& (0+255),7,b
 22493  0089C6  D003               	goto	l640
 22494                           
 22495                           ; BSR set to: 0
 22496                           ;UART.c: 167: {
 22497                           ;UART.c: 168: PIR1bits.TXIF = 0;
 22498  0089C8  989E               	bcf	3998,4,c	;volatile
 22499                           
 22500                           ;UART.c: 169: PIE1bits.TXIE = 1;
 22501  0089CA  889D               	bsf	3997,4,c	;volatile
 22502                           
 22503                           ;UART.c: 170: }
 22504  0089CC  D001               	goto	l641
 22505  0089CE                     l640:
 22506                           
 22507                           ; BSR set to: 0
 22508                           ;UART.c: 171: else
 22509                           ;UART.c: 172: {
 22510                           ;UART.c: 173: PIE1bits.TXIE = 0;
 22511  0089CE  989D               	bcf	3997,4,c	;volatile
 22512  0089D0                     l641:
 22513                           
 22514                           ; BSR set to: 0
 22515                           ;UART.c: 174: }
 22516                           ;UART.c: 176: SPBRG = spbrg;
 22517  0089D0  C079  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 22518                           
 22519                           ; BSR set to: 0
 22520                           ;UART.c: 177: SPBRGH = spbrg >> 8;
 22521  0089D4  0100               	movlb	0	; () banked
 22522  0089D6  517A               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
 22523  0089D8  6EB0               	movwf	4016,c	;volatile
 22524                           
 22525                           ; BSR set to: 0
 22526                           ;UART.c: 179: TXSTAbits.TXEN = 1;
 22527  0089DA  8AAC               	bsf	4012,5,c	;volatile
 22528                           
 22529                           ; BSR set to: 0
 22530                           ;UART.c: 180: RCSTAbits.SPEN = 1;
 22531  0089DC  8EAB               	bsf	4011,7,c	;volatile
 22532                           
 22533                           ; BSR set to: 0
 22534  0089DE  0012               	return		;funcret
 22535  0089E0                     __end_of_OpenUSART:
 22536                           	opt stack 0
 22537                           tblptru	equ	0xFF8
 22538                           tblptrh	equ	0xFF7
 22539                           tblptrl	equ	0xFF6
 22540                           tablat	equ	0xFF5
 22541                           prodh	equ	0xFF4
 22542                           prodl	equ	0xFF3
 22543                           intcon	equ	0xFF2
 22544                           intcon2	equ	0xFF1
 22545                           indf0	equ	0xFEF
 22546                           postinc0	equ	0xFEE
 22547                           fsr0h	equ	0xFEA
 22548                           fsr0l	equ	0xFE9
 22549                           wreg	equ	0xFE8
 22550                           indf1	equ	0xFE7
 22551                           postdec1	equ	0xFE5
 22552                           fsr1h	equ	0xFE2
 22553                           fsr1l	equ	0xFE1
 22554                           indf2	equ	0xFDF
 22555                           postinc2	equ	0xFDE
 22556                           postdec2	equ	0xFDD
 22557                           fsr2h	equ	0xFDA
 22558                           fsr2l	equ	0xFD9
 22559                           status	equ	0xFD8
 22560                           
 22561 ;; *************** function _Local_CloseUSART *****************
 22562 ;; Defined at:
 22563 ;;		line 64 in file "UART.c"
 22564 ;; Parameters:    Size  Location     Type
 22565 ;;		None
 22566 ;; Auto vars:     Size  Location     Type
 22567 ;;		None
 22568 ;; Return value:  Size  Location     Type
 22569 ;;		None               void
 22570 ;; Registers used:
 22571 ;;		None
 22572 ;; Tracked objects:
 22573 ;;		On entry : 0/0
 22574 ;;		On exit  : 0/0
 22575 ;;		Unchanged: 0/0
 22576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22581 ;;Total ram usage:        0 bytes
 22582 ;; Hardware stack levels used:    1
 22583 ;; Hardware stack levels required when called:    6
 22584 ;; This function calls:
 22585 ;;		Nothing
 22586 ;; This function is called by:
 22587 ;;		_InitUART
 22588 ;; This function uses a non-reentrant model
 22589 ;;
 22590                           
 22591                           	psect	text45
 22592  00948E                     __ptext45:
 22593                           	opt stack 0
 22594  00948E                     _Local_CloseUSART:
 22595                           	opt stack 22
 22596                           
 22597                           ;UART.c: 66: PIE1bits.RCIE = 0;
 22598                           
 22599                           ; BSR set to: 0
 22600                           ;incstack = 0
 22601  00948E  9A9D               	bcf	3997,5,c	;volatile
 22602                           
 22603                           ;UART.c: 67: PIE1bits.TXIE = 0;
 22604  009490  989D               	bcf	3997,4,c	;volatile
 22605                           
 22606                           ;UART.c: 68: RCSTAbits.SPEN = 0;
 22607  009492  9EAB               	bcf	4011,7,c	;volatile
 22608                           
 22609                           ;UART.c: 69: RCSTAbits.CREN = 0;
 22610  009494  98AB               	bcf	4011,4,c	;volatile
 22611                           
 22612                           ;UART.c: 70: RCSTAbits.FERR = 0;
 22613  009496  94AB               	bcf	4011,2,c	;volatile
 22614                           
 22615                           ;UART.c: 71: TXSTAbits.TXEN = 0;
 22616  009498  9AAC               	bcf	4012,5,c	;volatile
 22617  00949A  0012               	return		;funcret
 22618  00949C                     __end_of_Local_CloseUSART:
 22619                           	opt stack 0
 22620                           tblptru	equ	0xFF8
 22621                           tblptrh	equ	0xFF7
 22622                           tblptrl	equ	0xFF6
 22623                           tablat	equ	0xFF5
 22624                           prodh	equ	0xFF4
 22625                           prodl	equ	0xFF3
 22626                           intcon	equ	0xFF2
 22627                           intcon2	equ	0xFF1
 22628                           indf0	equ	0xFEF
 22629                           postinc0	equ	0xFEE
 22630                           fsr0h	equ	0xFEA
 22631                           fsr0l	equ	0xFE9
 22632                           wreg	equ	0xFE8
 22633                           indf1	equ	0xFE7
 22634                           postdec1	equ	0xFE5
 22635                           fsr1h	equ	0xFE2
 22636                           fsr1l	equ	0xFE1
 22637                           indf2	equ	0xFDF
 22638                           postinc2	equ	0xFDE
 22639                           postdec2	equ	0xFDD
 22640                           fsr2h	equ	0xFDA
 22641                           fsr2l	equ	0xFD9
 22642                           status	equ	0xFD8
 22643                           
 22644 ;; *************** function _ClearUSART *****************
 22645 ;; Defined at:
 22646 ;;		line 216 in file "UART.c"
 22647 ;; Parameters:    Size  Location     Type
 22648 ;;		None
 22649 ;; Auto vars:     Size  Location     Type
 22650 ;;		None
 22651 ;; Return value:  Size  Location     Type
 22652 ;;		None               void
 22653 ;; Registers used:
 22654 ;;		wreg, status,2, cstack
 22655 ;; Tracked objects:
 22656 ;;		On entry : 0/0
 22657 ;;		On exit  : 0/0
 22658 ;;		Unchanged: 0/0
 22659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22664 ;;Total ram usage:        0 bytes
 22665 ;; Hardware stack levels used:    1
 22666 ;; Hardware stack levels required when called:    7
 22667 ;; This function calls:
 22668 ;;		_ReadUSART
 22669 ;; This function is called by:
 22670 ;;		_main
 22671 ;;		_InitUART
 22672 ;;		_UseBluetooth
 22673 ;; This function uses a non-reentrant model
 22674 ;;
 22675                           
 22676                           	psect	text46
 22677  00949C                     __ptext46:
 22678                           	opt stack 0
 22679  00949C                     _ClearUSART:
 22680                           	opt stack 22
 22681                           
 22682                           ;UART.c: 218: ReadUSART();
 22683                           
 22684                           ;incstack = 0
 22685  00949C  ECCD  F049         	call	_ReadUSART	;wreg free
 22686                           
 22687                           ;UART.c: 219: ReadUSART();
 22688  0094A0  ECCD  F049         	call	_ReadUSART	;wreg free
 22689                           
 22690                           ;UART.c: 220: ReadUSART();
 22691  0094A4  ECCD  F049         	call	_ReadUSART	;wreg free
 22692  0094A8  0012               	return		;funcret
 22693  0094AA                     __end_of_ClearUSART:
 22694                           	opt stack 0
 22695                           tblptru	equ	0xFF8
 22696                           tblptrh	equ	0xFF7
 22697                           tblptrl	equ	0xFF6
 22698                           tablat	equ	0xFF5
 22699                           prodh	equ	0xFF4
 22700                           prodl	equ	0xFF3
 22701                           intcon	equ	0xFF2
 22702                           intcon2	equ	0xFF1
 22703                           indf0	equ	0xFEF
 22704                           postinc0	equ	0xFEE
 22705                           fsr0h	equ	0xFEA
 22706                           fsr0l	equ	0xFE9
 22707                           wreg	equ	0xFE8
 22708                           indf1	equ	0xFE7
 22709                           postdec1	equ	0xFE5
 22710                           fsr1h	equ	0xFE2
 22711                           fsr1l	equ	0xFE1
 22712                           indf2	equ	0xFDF
 22713                           postinc2	equ	0xFDE
 22714                           postdec2	equ	0xFDD
 22715                           fsr2h	equ	0xFDA
 22716                           fsr2l	equ	0xFD9
 22717                           status	equ	0xFD8
 22718                           
 22719 ;; *************** function _ReadUSART *****************
 22720 ;; Defined at:
 22721 ;;		line 227 in file "UART.c"
 22722 ;; Parameters:    Size  Location     Type
 22723 ;;		None
 22724 ;; Auto vars:     Size  Location     Type
 22725 ;;  data            1   25[BANK0 ] unsigned char 
 22726 ;; Return value:  Size  Location     Type
 22727 ;;                  1    wreg      unsigned char 
 22728 ;; Registers used:
 22729 ;;		wreg, status,2
 22730 ;; Tracked objects:
 22731 ;;		On entry : 0/0
 22732 ;;		On exit  : 0/0
 22733 ;;		Unchanged: 0/0
 22734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22736 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22738 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22739 ;;Total ram usage:        1 bytes
 22740 ;; Hardware stack levels used:    1
 22741 ;; Hardware stack levels required when called:    6
 22742 ;; This function calls:
 22743 ;;		Nothing
 22744 ;; This function is called by:
 22745 ;;		_ClearUSART
 22746 ;; This function uses a non-reentrant model
 22747 ;;
 22748                           
 22749                           	psect	text47
 22750  00939A                     __ptext47:
 22751                           	opt stack 0
 22752  00939A                     _ReadUSART:
 22753                           	opt stack 22
 22754                           
 22755                           ;UART.c: 229: unsigned char data;
 22756                           ;UART.c: 231: if(RCSTAbits.OERR)
 22757                           
 22758                           ;incstack = 0
 22759  00939A  A2AB               	btfss	4011,1,c	;volatile
 22760  00939C  D004               	goto	l661
 22761                           
 22762                           ;UART.c: 232: {
 22763                           ;UART.c: 234: RCSTAbits.CREN = 0;
 22764  00939E  98AB               	bcf	4011,4,c	;volatile
 22765                           
 22766                           ;UART.c: 235: RCSTAbits.CREN = 1;
 22767  0093A0  88AB               	bsf	4011,4,c	;volatile
 22768                           
 22769                           ;UART.c: 236: return 0;
 22770  0093A2  0E00               	movlw	0
 22771  0093A4  0012               	return	
 22772  0093A6                     l661:
 22773                           
 22774                           ;UART.c: 237: }
 22775                           ;UART.c: 239: data = RCREG;
 22776  0093A6  CFAE F079          	movff	4014,ReadUSART@data	;volatile
 22777                           
 22778                           ;UART.c: 240: return (data);
 22779  0093AA  0100               	movlb	0	; () banked
 22780  0093AC  5179               	movf	ReadUSART@data& (0+255),w,b
 22781  0093AE  0012               	return	
 22782                           
 22783                           ; BSR set to: 0
 22784  0093B0  0012               	return		;funcret
 22785  0093B2                     __end_of_ReadUSART:
 22786                           	opt stack 0
 22787                           tblptru	equ	0xFF8
 22788                           tblptrh	equ	0xFF7
 22789                           tblptrl	equ	0xFF6
 22790                           tablat	equ	0xFF5
 22791                           prodh	equ	0xFF4
 22792                           prodl	equ	0xFF3
 22793                           intcon	equ	0xFF2
 22794                           intcon2	equ	0xFF1
 22795                           indf0	equ	0xFEF
 22796                           postinc0	equ	0xFEE
 22797                           fsr0h	equ	0xFEA
 22798                           fsr0l	equ	0xFE9
 22799                           wreg	equ	0xFE8
 22800                           indf1	equ	0xFE7
 22801                           postdec1	equ	0xFE5
 22802                           fsr1h	equ	0xFE2
 22803                           fsr1l	equ	0xFE1
 22804                           indf2	equ	0xFDF
 22805                           postinc2	equ	0xFDE
 22806                           postdec2	equ	0xFDD
 22807                           fsr2h	equ	0xFDA
 22808                           fsr2l	equ	0xFD9
 22809                           status	equ	0xFD8
 22810                           
 22811 ;; *************** function _InitTimers *****************
 22812 ;; Defined at:
 22813 ;;		line 51 in file "Timer.c"
 22814 ;; Parameters:    Size  Location     Type
 22815 ;;		None
 22816 ;; Auto vars:     Size  Location     Type
 22817 ;;		None
 22818 ;; Return value:  Size  Location     Type
 22819 ;;		None               void
 22820 ;; Registers used:
 22821 ;;		wreg, status,2, cstack
 22822 ;; Tracked objects:
 22823 ;;		On entry : 0/0
 22824 ;;		On exit  : 0/0
 22825 ;;		Unchanged: 0/0
 22826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22831 ;;Total ram usage:        0 bytes
 22832 ;; Hardware stack levels used:    1
 22833 ;; Hardware stack levels required when called:    7
 22834 ;; This function calls:
 22835 ;;		_InitTimer1
 22836 ;;		_InitTimer2
 22837 ;;		_InitTimer3
 22838 ;; This function is called by:
 22839 ;;		_Init_System
 22840 ;; This function uses a non-reentrant model
 22841 ;;
 22842                           
 22843                           	psect	text48
 22844  009424                     __ptext48:
 22845                           	opt stack 0
 22846  009424                     _InitTimers:
 22847                           	opt stack 22
 22848                           
 22849                           ;Timer.c: 53: InitTimer1();
 22850                           
 22851                           ;incstack = 0
 22852  009424  EC5C  F04A         	call	_InitTimer1	;wreg free
 22853                           
 22854                           ;Timer.c: 54: (PIE1bits.TMR1IE = TRUE);
 22855  009428  809D               	bsf	3997,0,c	;volatile
 22856                           
 22857                           ;Timer.c: 55: InitTimer2();
 22858  00942A  EC55  F04A         	call	_InitTimer2	;wreg free
 22859                           
 22860                           ;Timer.c: 56: (PIE1bits.TMR2IE = TRUE);
 22861  00942E  829D               	bsf	3997,1,c	;volatile
 22862                           
 22863                           ;Timer.c: 57: InitTimer3();
 22864  009430  EC8B  F04A         	call	_InitTimer3	;wreg free
 22865                           
 22866                           ;Timer.c: 58: (PIE2bits.TMR3IE = TRUE);
 22867  009434  82A0               	bsf	4000,1,c	;volatile
 22868  009436  0012               	return		;funcret
 22869  009438                     __end_of_InitTimers:
 22870                           	opt stack 0
 22871                           tblptru	equ	0xFF8
 22872                           tblptrh	equ	0xFF7
 22873                           tblptrl	equ	0xFF6
 22874                           tablat	equ	0xFF5
 22875                           prodh	equ	0xFF4
 22876                           prodl	equ	0xFF3
 22877                           intcon	equ	0xFF2
 22878                           intcon2	equ	0xFF1
 22879                           indf0	equ	0xFEF
 22880                           postinc0	equ	0xFEE
 22881                           fsr0h	equ	0xFEA
 22882                           fsr0l	equ	0xFE9
 22883                           wreg	equ	0xFE8
 22884                           indf1	equ	0xFE7
 22885                           postdec1	equ	0xFE5
 22886                           fsr1h	equ	0xFE2
 22887                           fsr1l	equ	0xFE1
 22888                           indf2	equ	0xFDF
 22889                           postinc2	equ	0xFDE
 22890                           postdec2	equ	0xFDD
 22891                           fsr2h	equ	0xFDA
 22892                           fsr2l	equ	0xFD9
 22893                           status	equ	0xFD8
 22894                           
 22895 ;; *************** function _InitTimer3 *****************
 22896 ;; Defined at:
 22897 ;;		line 163 in file "Timer.c"
 22898 ;; Parameters:    Size  Location     Type
 22899 ;;		None
 22900 ;; Auto vars:     Size  Location     Type
 22901 ;;		None
 22902 ;; Return value:  Size  Location     Type
 22903 ;;		None               void
 22904 ;; Registers used:
 22905 ;;		wreg, status,2
 22906 ;; Tracked objects:
 22907 ;;		On entry : 0/0
 22908 ;;		On exit  : 0/0
 22909 ;;		Unchanged: 0/0
 22910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22915 ;;Total ram usage:        0 bytes
 22916 ;; Hardware stack levels used:    1
 22917 ;; Hardware stack levels required when called:    6
 22918 ;; This function calls:
 22919 ;;		Nothing
 22920 ;; This function is called by:
 22921 ;;		_InitTimers
 22922 ;; This function uses a non-reentrant model
 22923 ;;
 22924                           
 22925                           	psect	text49
 22926  009516                     __ptext49:
 22927                           	opt stack 0
 22928  009516                     _InitTimer3:
 22929                           	opt stack 22
 22930                           
 22931                           ;Timer.c: 165: T3CONbits.RD16 = TRUE;
 22932                           
 22933                           ;incstack = 0
 22934  009516  8EB1               	bsf	4017,7,c	;volatile
 22935                           
 22936                           ;Timer.c: 166: T3CONbits.T3CKPS = 0x3;
 22937  009518  0E30               	movlw	48
 22938  00951A  12B1               	iorwf	4017,f,c	;volatile
 22939                           
 22940                           ;Timer.c: 167: T3CONbits.TMR3CS = FALSE;
 22941  00951C  92B1               	bcf	4017,1,c	;volatile
 22942  00951E  0012               	return		;funcret
 22943  009520                     __end_of_InitTimer3:
 22944                           	opt stack 0
 22945                           tblptru	equ	0xFF8
 22946                           tblptrh	equ	0xFF7
 22947                           tblptrl	equ	0xFF6
 22948                           tablat	equ	0xFF5
 22949                           prodh	equ	0xFF4
 22950                           prodl	equ	0xFF3
 22951                           intcon	equ	0xFF2
 22952                           intcon2	equ	0xFF1
 22953                           indf0	equ	0xFEF
 22954                           postinc0	equ	0xFEE
 22955                           fsr0h	equ	0xFEA
 22956                           fsr0l	equ	0xFE9
 22957                           wreg	equ	0xFE8
 22958                           indf1	equ	0xFE7
 22959                           postdec1	equ	0xFE5
 22960                           fsr1h	equ	0xFE2
 22961                           fsr1l	equ	0xFE1
 22962                           indf2	equ	0xFDF
 22963                           postinc2	equ	0xFDE
 22964                           postdec2	equ	0xFDD
 22965                           fsr2h	equ	0xFDA
 22966                           fsr2l	equ	0xFD9
 22967                           status	equ	0xFD8
 22968                           
 22969 ;; *************** function _InitTimer2 *****************
 22970 ;; Defined at:
 22971 ;;		line 138 in file "Timer.c"
 22972 ;; Parameters:    Size  Location     Type
 22973 ;;		None
 22974 ;; Auto vars:     Size  Location     Type
 22975 ;;		None
 22976 ;; Return value:  Size  Location     Type
 22977 ;;		None               void
 22978 ;; Registers used:
 22979 ;;		wreg, status,2
 22980 ;; Tracked objects:
 22981 ;;		On entry : 0/0
 22982 ;;		On exit  : 0/0
 22983 ;;		Unchanged: 0/0
 22984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22989 ;;Total ram usage:        0 bytes
 22990 ;; Hardware stack levels used:    1
 22991 ;; Hardware stack levels required when called:    6
 22992 ;; This function calls:
 22993 ;;		Nothing
 22994 ;; This function is called by:
 22995 ;;		_InitTimers
 22996 ;; This function uses a non-reentrant model
 22997 ;;
 22998                           
 22999                           	psect	text50
 23000  0094AA                     __ptext50:
 23001                           	opt stack 0
 23002  0094AA                     _InitTimer2:
 23003                           	opt stack 22
 23004                           
 23005                           ;Timer.c: 140: T2CONbits.T2OUTPS = 0xE;
 23006                           
 23007                           ;incstack = 0
 23008  0094AA  50CA               	movf	4042,w,c	;volatile
 23009  0094AC  0B87               	andlw	-121
 23010  0094AE  0970               	iorlw	112
 23011  0094B0  6ECA               	movwf	4042,c	;volatile
 23012                           
 23013                           ;Timer.c: 141: T2CONbits.T2CKPS = 0x3;
 23014  0094B2  0E03               	movlw	3
 23015  0094B4  12CA               	iorwf	4042,f,c	;volatile
 23016  0094B6  0012               	return		;funcret
 23017  0094B8                     __end_of_InitTimer2:
 23018                           	opt stack 0
 23019                           tblptru	equ	0xFF8
 23020                           tblptrh	equ	0xFF7
 23021                           tblptrl	equ	0xFF6
 23022                           tablat	equ	0xFF5
 23023                           prodh	equ	0xFF4
 23024                           prodl	equ	0xFF3
 23025                           intcon	equ	0xFF2
 23026                           intcon2	equ	0xFF1
 23027                           indf0	equ	0xFEF
 23028                           postinc0	equ	0xFEE
 23029                           fsr0h	equ	0xFEA
 23030                           fsr0l	equ	0xFE9
 23031                           wreg	equ	0xFE8
 23032                           indf1	equ	0xFE7
 23033                           postdec1	equ	0xFE5
 23034                           fsr1h	equ	0xFE2
 23035                           fsr1l	equ	0xFE1
 23036                           indf2	equ	0xFDF
 23037                           postinc2	equ	0xFDE
 23038                           postdec2	equ	0xFDD
 23039                           fsr2h	equ	0xFDA
 23040                           fsr2l	equ	0xFD9
 23041                           status	equ	0xFD8
 23042                           
 23043 ;; *************** function _InitTimer1 *****************
 23044 ;; Defined at:
 23045 ;;		line 109 in file "Timer.c"
 23046 ;; Parameters:    Size  Location     Type
 23047 ;;		None
 23048 ;; Auto vars:     Size  Location     Type
 23049 ;;		None
 23050 ;; Return value:  Size  Location     Type
 23051 ;;		None               void
 23052 ;; Registers used:
 23053 ;;		wreg, status,2
 23054 ;; Tracked objects:
 23055 ;;		On entry : 0/0
 23056 ;;		On exit  : 0/0
 23057 ;;		Unchanged: 0/0
 23058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23063 ;;Total ram usage:        0 bytes
 23064 ;; Hardware stack levels used:    1
 23065 ;; Hardware stack levels required when called:    6
 23066 ;; This function calls:
 23067 ;;		Nothing
 23068 ;; This function is called by:
 23069 ;;		_InitTimers
 23070 ;; This function uses a non-reentrant model
 23071 ;;
 23072                           
 23073                           	psect	text51
 23074  0094B8                     __ptext51:
 23075                           	opt stack 0
 23076  0094B8                     _InitTimer1:
 23077                           	opt stack 22
 23078                           
 23079                           ;Timer.c: 111: T1CONbits.RD16 = TRUE;
 23080                           
 23081                           ;incstack = 0
 23082  0094B8  8ECD               	bsf	4045,7,c	;volatile
 23083                           
 23084                           ;Timer.c: 112: T1CONbits.T1RUN = FALSE;
 23085  0094BA  9CCD               	bcf	4045,6,c	;volatile
 23086                           
 23087                           ;Timer.c: 113: T1CONbits.T1CKPS = 0x3;
 23088  0094BC  0E30               	movlw	48
 23089  0094BE  12CD               	iorwf	4045,f,c	;volatile
 23090                           
 23091                           ;Timer.c: 114: T1CONbits.T1OSCEN = FALSE;
 23092  0094C0  96CD               	bcf	4045,3,c	;volatile
 23093                           
 23094                           ;Timer.c: 115: T1CONbits.TMR1CS = FALSE;
 23095  0094C2  92CD               	bcf	4045,1,c	;volatile
 23096  0094C4  0012               	return		;funcret
 23097  0094C6                     __end_of_InitTimer1:
 23098                           	opt stack 0
 23099                           tblptru	equ	0xFF8
 23100                           tblptrh	equ	0xFF7
 23101                           tblptrl	equ	0xFF6
 23102                           tablat	equ	0xFF5
 23103                           prodh	equ	0xFF4
 23104                           prodl	equ	0xFF3
 23105                           intcon	equ	0xFF2
 23106                           intcon2	equ	0xFF1
 23107                           indf0	equ	0xFEF
 23108                           postinc0	equ	0xFEE
 23109                           fsr0h	equ	0xFEA
 23110                           fsr0l	equ	0xFE9
 23111                           wreg	equ	0xFE8
 23112                           indf1	equ	0xFE7
 23113                           postdec1	equ	0xFE5
 23114                           fsr1h	equ	0xFE2
 23115                           fsr1l	equ	0xFE1
 23116                           indf2	equ	0xFDF
 23117                           postinc2	equ	0xFDE
 23118                           postdec2	equ	0xFDD
 23119                           fsr2h	equ	0xFDA
 23120                           fsr2l	equ	0xFD9
 23121                           status	equ	0xFD8
 23122                           
 23123 ;; *************** function _InitIR *****************
 23124 ;; Defined at:
 23125 ;;		line 80 in file "IR.c"
 23126 ;; Parameters:    Size  Location     Type
 23127 ;;		None
 23128 ;; Auto vars:     Size  Location     Type
 23129 ;;		None
 23130 ;; Return value:  Size  Location     Type
 23131 ;;		None               void
 23132 ;; Registers used:
 23133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23134 ;; Tracked objects:
 23135 ;;		On entry : 0/0
 23136 ;;		On exit  : 0/0
 23137 ;;		Unchanged: 0/0
 23138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23143 ;;Total ram usage:        0 bytes
 23144 ;; Hardware stack levels used:    1
 23145 ;; Hardware stack levels required when called:    7
 23146 ;; This function calls:
 23147 ;;		_InitTimer0
 23148 ;;		_ReadIRpin
 23149 ;;		_ResetTimer0
 23150 ;;		_cleanBuffer16bit
 23151 ;; This function is called by:
 23152 ;;		_Init_System
 23153 ;; This function uses a non-reentrant model
 23154 ;;
 23155                           
 23156                           	psect	text52
 23157  008F8A                     __ptext52:
 23158                           	opt stack 0
 23159  008F8A                     _InitIR:
 23160                           	opt stack 22
 23161                           
 23162                           ;IR.c: 83: (IOCBbits.IOCB4 = 1);
 23163                           
 23164                           ;incstack = 0
 23165  008F8A  887D               	bsf	3965,4,c	;volatile
 23166                           
 23167                           ;IR.c: 85: IRpinOLD = ReadIRpin();
 23168  008F8C  EC63  F04A         	call	_ReadIRpin	;wreg free
 23169  008F90  6E2E               	movwf	_IRpinOLD,c
 23170                           
 23171                           ;IR.c: 87: InitTimer0();
 23172  008F92  EC38  F04A         	call	_InitTimer0	;wreg free
 23173                           
 23174                           ;IR.c: 89: cleanBuffer16bit(IRRawCode, 100);
 23175  008F96  0E00               	movlw	low _IRRawCode
 23176  008F98  0100               	movlb	0	; () banked
 23177  008F9A  6F79               	movwf	cleanBuffer16bit@data& (0+255),b
 23178  008F9C  0E07               	movlw	high _IRRawCode
 23179  008F9E  0100               	movlb	0	; () banked
 23180  008FA0  6F7A               	movwf	(cleanBuffer16bit@data+1)& (0+255),b
 23181  008FA2  0E00               	movlw	0
 23182  008FA4  0100               	movlb	0	; () banked
 23183  008FA6  6F7C               	movwf	(cleanBuffer16bit@count+1)& (0+255),b
 23184  008FA8  0E64               	movlw	100
 23185  008FAA  6F7B               	movwf	cleanBuffer16bit@count& (0+255),b
 23186  008FAC  EC68  F046         	call	_cleanBuffer16bit	;wreg free
 23187                           
 23188                           ;IR.c: 90: IR_NEC = 0;
 23189  008FB0  0E00               	movlw	0
 23190  008FB2  0100               	movlb	0	; () banked
 23191  008FB4  6FE1               	movwf	_IR_NEC& (0+255),b
 23192  008FB6  0E00               	movlw	0
 23193  008FB8  6FE2               	movwf	(_IR_NEC+1)& (0+255),b
 23194  008FBA  0E00               	movlw	0
 23195  008FBC  6FE3               	movwf	(_IR_NEC+2)& (0+255),b
 23196  008FBE  0E00               	movlw	0
 23197  008FC0  6FE4               	movwf	(_IR_NEC+3)& (0+255),b
 23198                           
 23199                           ; BSR set to: 0
 23200                           ;IR.c: 91: (T0CONbits.TMR0ON = 0);
 23201  008FC2  9ED5               	bcf	4053,7,c	;volatile
 23202                           
 23203                           ; BSR set to: 0
 23204                           ;IR.c: 93: ResetTimer0();
 23205  008FC4  EC90  F04A         	call	_ResetTimer0	;wreg free
 23206                           
 23207                           ;IR.c: 95: (INTCONbits.TMR0IE = 0);
 23208  008FC8  9AF2               	bcf	intcon,5,c	;volatile
 23209                           
 23210                           ;IR.c: 96: INTCONbits.TMR0IF = 0;
 23211  008FCA  94F2               	bcf	intcon,2,c	;volatile
 23212                           
 23213                           ;IR.c: 98: INTCONbits.RBIF = 0;
 23214  008FCC  90F2               	bcf	intcon,0,c	;volatile
 23215                           
 23216                           ;IR.c: 99: INTCONbits.RBIE = 1;
 23217  008FCE  86F2               	bsf	intcon,3,c	;volatile
 23218  008FD0  0012               	return		;funcret
 23219  008FD2                     __end_of_InitIR:
 23220                           	opt stack 0
 23221                           tblptru	equ	0xFF8
 23222                           tblptrh	equ	0xFF7
 23223                           tblptrl	equ	0xFF6
 23224                           tablat	equ	0xFF5
 23225                           prodh	equ	0xFF4
 23226                           prodl	equ	0xFF3
 23227                           intcon	equ	0xFF2
 23228                           intcon2	equ	0xFF1
 23229                           indf0	equ	0xFEF
 23230                           postinc0	equ	0xFEE
 23231                           fsr0h	equ	0xFEA
 23232                           fsr0l	equ	0xFE9
 23233                           wreg	equ	0xFE8
 23234                           indf1	equ	0xFE7
 23235                           postdec1	equ	0xFE5
 23236                           fsr1h	equ	0xFE2
 23237                           fsr1l	equ	0xFE1
 23238                           indf2	equ	0xFDF
 23239                           postinc2	equ	0xFDE
 23240                           postdec2	equ	0xFDD
 23241                           fsr2h	equ	0xFDA
 23242                           fsr2l	equ	0xFD9
 23243                           status	equ	0xFD8
 23244                           
 23245 ;; *************** function _cleanBuffer16bit *****************
 23246 ;; Defined at:
 23247 ;;		line 141 in file "MISC.c"
 23248 ;; Parameters:    Size  Location     Type
 23249 ;;  data            2   25[BANK0 ] PTR unsigned int 
 23250 ;;		 -> IRRawCode(200), 
 23251 ;;  count           2   27[BANK0 ] int 
 23252 ;; Auto vars:     Size  Location     Type
 23253 ;;  i               1   32[BANK0 ] unsigned char 
 23254 ;; Return value:  Size  Location     Type
 23255 ;;		None               void
 23256 ;; Registers used:
 23257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23258 ;; Tracked objects:
 23259 ;;		On entry : 0/0
 23260 ;;		On exit  : 0/0
 23261 ;;		Unchanged: 0/0
 23262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23263 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23264 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23265 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23266 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23267 ;;Total ram usage:        8 bytes
 23268 ;; Hardware stack levels used:    1
 23269 ;; Hardware stack levels required when called:    6
 23270 ;; This function calls:
 23271 ;;		Nothing
 23272 ;; This function is called by:
 23273 ;;		_InitIR
 23274 ;; This function uses a non-reentrant model
 23275 ;;
 23276                           
 23277                           	psect	text53
 23278  008CD0                     __ptext53:
 23279                           	opt stack 0
 23280  008CD0                     _cleanBuffer16bit:
 23281                           	opt stack 22
 23282                           
 23283                           ;MISC.c: 143: unsigned char i=0;
 23284                           
 23285                           ;incstack = 0
 23286  008CD0  0E00               	movlw	0
 23287  008CD2  0100               	movlb	0	; () banked
 23288  008CD4  6F80               	movwf	cleanBuffer16bit@i& (0+255),b
 23289                           
 23290                           ;MISC.c: 144: for(i=0; i<count;i++)
 23291  008CD6  0E00               	movlw	0
 23292  008CD8  0100               	movlb	0	; () banked
 23293  008CDA  6F80               	movwf	cleanBuffer16bit@i& (0+255),b
 23294  008CDC  D012               	goto	l13902
 23295  008CDE                     l13898:
 23296                           
 23297                           ; BSR set to: 0
 23298                           ;MISC.c: 145: {
 23299                           ;MISC.c: 146: data[i]= 0;
 23300  008CDE  0100               	movlb	0	; () banked
 23301  008CE0  5180               	movf	cleanBuffer16bit@i& (0+255),w,b
 23302  008CE2  0D02               	mullw	2
 23303  008CE4  50F3               	movf	prodl,w,c
 23304  008CE6  0100               	movlb	0	; () banked
 23305  008CE8  2579               	addwf	cleanBuffer16bit@data& (0+255),w,b
 23306  008CEA  6ED9               	movwf	fsr2l,c
 23307  008CEC  50F4               	movf	prodh,w,c
 23308  008CEE  0100               	movlb	0	; () banked
 23309  008CF0  217A               	addwfc	(cleanBuffer16bit@data+1)& (0+255),w,b
 23310  008CF2  6EDA               	movwf	fsr2h,c
 23311  008CF4  0E00               	movlw	0
 23312  008CF6  6EDE               	movwf	postinc2,c
 23313  008CF8  0E00               	movlw	0
 23314  008CFA  6EDD               	movwf	postdec2,c
 23315                           
 23316                           ; BSR set to: 0
 23317  008CFC  0100               	movlb	0	; () banked
 23318  008CFE  2B80               	incf	cleanBuffer16bit@i& (0+255),f,b
 23319  008D00  D000               	goto	l13902
 23320  008D02                     l13902:
 23321                           
 23322                           ; BSR set to: 0
 23323  008D02  0100               	movlb	0	; () banked
 23324  008D04  5180               	movf	cleanBuffer16bit@i& (0+255),w,b
 23325  008D06  0100               	movlb	0	; () banked
 23326  008D08  6F7D               	movwf	??_cleanBuffer16bit& (0+255),b
 23327  008D0A  6B7E               	clrf	(??_cleanBuffer16bit+1)& (0+255),b
 23328  008D0C  0100               	movlb	0	; () banked
 23329  008D0E  517B               	movf	cleanBuffer16bit@count& (0+255),w,b
 23330  008D10  0100               	movlb	0	; () banked
 23331  008D12  5D7D               	subwf	??_cleanBuffer16bit& (0+255),w,b
 23332  008D14  0100               	movlb	0	; () banked
 23333  008D16  517E               	movf	(??_cleanBuffer16bit+1)& (0+255),w,b
 23334  008D18  0A80               	xorlw	128
 23335  008D1A  0100               	movlb	0	; () banked
 23336  008D1C  6F7F               	movwf	(??_cleanBuffer16bit+2)& (0+255),b
 23337  008D1E  0100               	movlb	0	; () banked
 23338  008D20  517C               	movf	(cleanBuffer16bit@count+1)& (0+255),w,b
 23339  008D22  0A80               	xorlw	128
 23340  008D24  0100               	movlb	0	; () banked
 23341  008D26  597F               	subwfb	(??_cleanBuffer16bit+2)& (0+255),w,b
 23342  008D28  A0D8               	btfss	status,0,c
 23343  008D2A  D7D9               	goto	l13898
 23344                           
 23345                           ; BSR set to: 0
 23346                           
 23347                           ; BSR set to: 0
 23348  008D2C  0012               	return		;funcret
 23349  008D2E                     __end_of_cleanBuffer16bit:
 23350                           	opt stack 0
 23351                           tblptru	equ	0xFF8
 23352                           tblptrh	equ	0xFF7
 23353                           tblptrl	equ	0xFF6
 23354                           tablat	equ	0xFF5
 23355                           prodh	equ	0xFF4
 23356                           prodl	equ	0xFF3
 23357                           intcon	equ	0xFF2
 23358                           intcon2	equ	0xFF1
 23359                           indf0	equ	0xFEF
 23360                           postinc0	equ	0xFEE
 23361                           fsr0h	equ	0xFEA
 23362                           fsr0l	equ	0xFE9
 23363                           wreg	equ	0xFE8
 23364                           indf1	equ	0xFE7
 23365                           postdec1	equ	0xFE5
 23366                           fsr1h	equ	0xFE2
 23367                           fsr1l	equ	0xFE1
 23368                           indf2	equ	0xFDF
 23369                           postinc2	equ	0xFDE
 23370                           postdec2	equ	0xFDD
 23371                           fsr2h	equ	0xFDA
 23372                           fsr2l	equ	0xFD9
 23373                           status	equ	0xFD8
 23374                           
 23375 ;; *************** function _ResetTimer0 *****************
 23376 ;; Defined at:
 23377 ;;		line 79 in file "Timer.c"
 23378 ;; Parameters:    Size  Location     Type
 23379 ;;		None
 23380 ;; Auto vars:     Size  Location     Type
 23381 ;;		None
 23382 ;; Return value:  Size  Location     Type
 23383 ;;		None               void
 23384 ;; Registers used:
 23385 ;;		wreg, status,2
 23386 ;; Tracked objects:
 23387 ;;		On entry : 0/0
 23388 ;;		On exit  : 0/0
 23389 ;;		Unchanged: 0/0
 23390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23395 ;;Total ram usage:        0 bytes
 23396 ;; Hardware stack levels used:    1
 23397 ;; Hardware stack levels required when called:    6
 23398 ;; This function calls:
 23399 ;;		Nothing
 23400 ;; This function is called by:
 23401 ;;		_InitIR
 23402 ;; This function uses a non-reentrant model
 23403 ;;
 23404                           
 23405                           	psect	text54
 23406  009520                     __ptext54:
 23407                           	opt stack 0
 23408  009520                     _ResetTimer0:
 23409                           	opt stack 22
 23410                           
 23411                           ;Timer.c: 85: TMR0H = 0;
 23412                           
 23413                           ; BSR set to: 0
 23414                           ;incstack = 0
 23415  009520  0E00               	movlw	0
 23416  009522  6ED7               	movwf	4055,c	;volatile
 23417                           
 23418                           ;Timer.c: 86: TMR0L = 2;
 23419  009524  0E02               	movlw	2
 23420  009526  6ED6               	movwf	4054,c	;volatile
 23421  009528  0012               	return		;funcret
 23422  00952A                     __end_of_ResetTimer0:
 23423                           	opt stack 0
 23424                           tblptru	equ	0xFF8
 23425                           tblptrh	equ	0xFF7
 23426                           tblptrl	equ	0xFF6
 23427                           tablat	equ	0xFF5
 23428                           prodh	equ	0xFF4
 23429                           prodl	equ	0xFF3
 23430                           intcon	equ	0xFF2
 23431                           intcon2	equ	0xFF1
 23432                           indf0	equ	0xFEF
 23433                           postinc0	equ	0xFEE
 23434                           fsr0h	equ	0xFEA
 23435                           fsr0l	equ	0xFE9
 23436                           wreg	equ	0xFE8
 23437                           indf1	equ	0xFE7
 23438                           postdec1	equ	0xFE5
 23439                           fsr1h	equ	0xFE2
 23440                           fsr1l	equ	0xFE1
 23441                           indf2	equ	0xFDF
 23442                           postinc2	equ	0xFDE
 23443                           postdec2	equ	0xFDD
 23444                           fsr2h	equ	0xFDA
 23445                           fsr2l	equ	0xFD9
 23446                           status	equ	0xFD8
 23447                           
 23448 ;; *************** function _ReadIRpin *****************
 23449 ;; Defined at:
 23450 ;;		line 107 in file "IR.c"
 23451 ;; Parameters:    Size  Location     Type
 23452 ;;		None
 23453 ;; Auto vars:     Size  Location     Type
 23454 ;;		None
 23455 ;; Return value:  Size  Location     Type
 23456 ;;                  1    wreg      unsigned char 
 23457 ;; Registers used:
 23458 ;;		wreg
 23459 ;; Tracked objects:
 23460 ;;		On entry : 0/0
 23461 ;;		On exit  : 0/0
 23462 ;;		Unchanged: 0/0
 23463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23468 ;;Total ram usage:        0 bytes
 23469 ;; Hardware stack levels used:    1
 23470 ;; Hardware stack levels required when called:    6
 23471 ;; This function calls:
 23472 ;;		Nothing
 23473 ;; This function is called by:
 23474 ;;		_main
 23475 ;;		_InitIR
 23476 ;;		_UseIRCode
 23477 ;;		_SendNEC_wait
 23478 ;;		_SendRF_wait
 23479 ;; This function uses a non-reentrant model
 23480 ;;
 23481                           
 23482                           	psect	text55
 23483  0094C6                     __ptext55:
 23484                           	opt stack 0
 23485  0094C6                     _ReadIRpin:
 23486                           	opt stack 21
 23487                           
 23488                           ;IR.c: 110: if((PORTB & 0x10) == 0x10)
 23489                           
 23490                           ;incstack = 0
 23491  0094C6  A881               	btfss	3969,4,c	;volatile
 23492  0094C8  D002               	goto	l13268
 23493                           
 23494                           ;IR.c: 111: {
 23495                           ;IR.c: 112: return (1);
 23496  0094CA  0E01               	movlw	1
 23497                           
 23498                           ;IR.c: 113: }
 23499  0094CC  0012               	return	
 23500  0094CE                     l13268:
 23501                           
 23502                           ;IR.c: 114: else
 23503                           ;IR.c: 115: {
 23504                           ;IR.c: 116: return 0;
 23505  0094CE  0E00               	movlw	0
 23506  0094D0  0012               	return	
 23507  0094D2  0012               	return		;funcret
 23508  0094D4                     __end_of_ReadIRpin:
 23509                           	opt stack 0
 23510                           tblptru	equ	0xFF8
 23511                           tblptrh	equ	0xFF7
 23512                           tblptrl	equ	0xFF6
 23513                           tablat	equ	0xFF5
 23514                           prodh	equ	0xFF4
 23515                           prodl	equ	0xFF3
 23516                           intcon	equ	0xFF2
 23517                           intcon2	equ	0xFF1
 23518                           indf0	equ	0xFEF
 23519                           postinc0	equ	0xFEE
 23520                           fsr0h	equ	0xFEA
 23521                           fsr0l	equ	0xFE9
 23522                           wreg	equ	0xFE8
 23523                           indf1	equ	0xFE7
 23524                           postdec1	equ	0xFE5
 23525                           fsr1h	equ	0xFE2
 23526                           fsr1l	equ	0xFE1
 23527                           indf2	equ	0xFDF
 23528                           postinc2	equ	0xFDE
 23529                           postdec2	equ	0xFDD
 23530                           fsr2h	equ	0xFDA
 23531                           fsr2l	equ	0xFD9
 23532                           status	equ	0xFD8
 23533                           
 23534 ;; *************** function _InitTimer0 *****************
 23535 ;; Defined at:
 23536 ;;		line 66 in file "Timer.c"
 23537 ;; Parameters:    Size  Location     Type
 23538 ;;		None
 23539 ;; Auto vars:     Size  Location     Type
 23540 ;;		None
 23541 ;; Return value:  Size  Location     Type
 23542 ;;		None               void
 23543 ;; Registers used:
 23544 ;;		wreg, status,2
 23545 ;; Tracked objects:
 23546 ;;		On entry : 0/0
 23547 ;;		On exit  : 0/0
 23548 ;;		Unchanged: 0/0
 23549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23554 ;;Total ram usage:        0 bytes
 23555 ;; Hardware stack levels used:    1
 23556 ;; Hardware stack levels required when called:    6
 23557 ;; This function calls:
 23558 ;;		Nothing
 23559 ;; This function is called by:
 23560 ;;		_InitIR
 23561 ;; This function uses a non-reentrant model
 23562 ;;
 23563                           
 23564                           	psect	text56
 23565  009470                     __ptext56:
 23566                           	opt stack 0
 23567  009470                     _InitTimer0:
 23568                           	opt stack 22
 23569                           
 23570                           ;Timer.c: 68: T0CONbits.T08BIT = FALSE;
 23571                           
 23572                           ;incstack = 0
 23573  009470  9CD5               	bcf	4053,6,c	;volatile
 23574                           
 23575                           ;Timer.c: 69: T0CONbits.T0CS = FALSE;
 23576  009472  9AD5               	bcf	4053,5,c	;volatile
 23577                           
 23578                           ;Timer.c: 70: T0CONbits.PSA = FALSE;
 23579  009474  96D5               	bcf	4053,3,c	;volatile
 23580                           
 23581                           ;Timer.c: 71: T0CONbits.T0PS = 0x4;
 23582  009476  50D5               	movf	4053,w,c	;volatile
 23583  009478  0BF8               	andlw	-8
 23584  00947A  0904               	iorlw	4
 23585  00947C  6ED5               	movwf	4053,c	;volatile
 23586  00947E  0012               	return		;funcret
 23587  009480                     __end_of_InitTimer0:
 23588                           	opt stack 0
 23589                           tblptru	equ	0xFF8
 23590                           tblptrh	equ	0xFF7
 23591                           tblptrl	equ	0xFF6
 23592                           tablat	equ	0xFF5
 23593                           prodh	equ	0xFF4
 23594                           prodl	equ	0xFF3
 23595                           intcon	equ	0xFF2
 23596                           intcon2	equ	0xFF1
 23597                           indf0	equ	0xFEF
 23598                           postinc0	equ	0xFEE
 23599                           fsr0h	equ	0xFEA
 23600                           fsr0l	equ	0xFE9
 23601                           wreg	equ	0xFE8
 23602                           indf1	equ	0xFE7
 23603                           postdec1	equ	0xFE5
 23604                           fsr1h	equ	0xFE2
 23605                           fsr1l	equ	0xFE1
 23606                           indf2	equ	0xFDF
 23607                           postinc2	equ	0xFDE
 23608                           postdec2	equ	0xFDD
 23609                           fsr2h	equ	0xFDA
 23610                           fsr2l	equ	0xFD9
 23611                           status	equ	0xFD8
 23612                           
 23613 ;; *************** function _InitBluetooth *****************
 23614 ;; Defined at:
 23615 ;;		line 66 in file "Bluetooth.c"
 23616 ;; Parameters:    Size  Location     Type
 23617 ;;		None
 23618 ;; Auto vars:     Size  Location     Type
 23619 ;;		None
 23620 ;; Return value:  Size  Location     Type
 23621 ;;		None               void
 23622 ;; Registers used:
 23623 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23624 ;; Tracked objects:
 23625 ;;		On entry : 0/0
 23626 ;;		On exit  : 0/0
 23627 ;;		Unchanged: 0/0
 23628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23633 ;;Total ram usage:        0 bytes
 23634 ;; Hardware stack levels used:    1
 23635 ;; Hardware stack levels required when called:   12
 23636 ;; This function calls:
 23637 ;;		_BluetoothConfigured
 23638 ;;		_BluetoothInitialSetup
 23639 ;;		_ResetBlue
 23640 ;;		_cleanBuffer
 23641 ;; This function is called by:
 23642 ;;		_Init_System
 23643 ;; This function uses a non-reentrant model
 23644 ;;
 23645                           
 23646                           	psect	text57
 23647  008E3A                     __ptext57:
 23648                           	opt stack 0
 23649  008E3A                     _InitBluetooth:
 23650                           	opt stack 17
 23651                           
 23652                           ;Bluetooth.c: 68: cleanBuffer(ReceivedString,255);
 23653                           
 23654                           ;incstack = 0
 23655  008E3A  0E00               	movlw	low _ReceivedString
 23656  008E3C  0100               	movlb	0	; () banked
 23657  008E3E  6F79               	movwf	cleanBuffer@data& (0+255),b
 23658  008E40  0E06               	movlw	high _ReceivedString
 23659  008E42  0100               	movlb	0	; () banked
 23660  008E44  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 23661  008E46  0E00               	movlw	0
 23662  008E48  0100               	movlb	0	; () banked
 23663  008E4A  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 23664  008E4C  697B               	setf	cleanBuffer@count& (0+255),b
 23665  008E4E  EC97  F046         	call	_cleanBuffer	;wreg free
 23666                           
 23667                           ;Bluetooth.c: 69: ReceivedStringPos = 0;
 23668  008E52  0E00               	movlw	0
 23669  008E54  0100               	movlb	0	; () banked
 23670  008E56  6FE0               	movwf	_ReceivedStringPos& (0+255),b
 23671                           
 23672                           ; BSR set to: 0
 23673                           ;Bluetooth.c: 70: cleanBuffer(CommandString,255);
 23674  008E58  0E00               	movlw	low _CommandString
 23675  008E5A  0100               	movlb	0	; () banked
 23676  008E5C  6F79               	movwf	cleanBuffer@data& (0+255),b
 23677  008E5E  0E05               	movlw	high _CommandString
 23678  008E60  0100               	movlb	0	; () banked
 23679  008E62  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 23680  008E64  0E00               	movlw	0
 23681  008E66  0100               	movlb	0	; () banked
 23682  008E68  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 23683  008E6A  697B               	setf	cleanBuffer@count& (0+255),b
 23684  008E6C  EC97  F046         	call	_cleanBuffer	;wreg free
 23685                           
 23686                           ;Bluetooth.c: 71: CommandStringPos = 0;
 23687  008E70  0E00               	movlw	0
 23688  008E72  6E26               	movwf	_CommandStringPos,c
 23689                           
 23690                           ;Bluetooth.c: 73: LATA &= ~0x10;
 23691  008E74  9889               	bcf	3977,4,c	;volatile
 23692                           
 23693                           ;Bluetooth.c: 74: LATA |= 0x08;
 23694  008E76  8689               	bsf	3977,3,c	;volatile
 23695                           
 23696                           ;Bluetooth.c: 75: LATA &= ~0x10;
 23697  008E78  9889               	bcf	3977,4,c	;volatile
 23698                           
 23699                           ;Bluetooth.c: 76: if(!BluetoothConfigured())
 23700  008E7A  ECBF  F049         	call	_BluetoothConfigured	;wreg free
 23701  008E7E  0900               	iorlw	0
 23702  008E80  A4D8               	btfss	status,2,c
 23703  008E82  0012               	return	
 23704                           
 23705                           ;Bluetooth.c: 77: {
 23706                           ;Bluetooth.c: 78: BluetoothInitialSetup();
 23707  008E84  EC2F  F026         	call	_BluetoothInitialSetup	;wreg free
 23708                           
 23709                           ;Bluetooth.c: 79: ResetBlue();
 23710  008E88  EC04  F049         	call	_ResetBlue	;wreg free
 23711  008E8C  0012               	return	
 23712  008E8E  0012               	return		;funcret
 23713  008E90                     __end_of_InitBluetooth:
 23714                           	opt stack 0
 23715                           tblptru	equ	0xFF8
 23716                           tblptrh	equ	0xFF7
 23717                           tblptrl	equ	0xFF6
 23718                           tablat	equ	0xFF5
 23719                           prodh	equ	0xFF4
 23720                           prodl	equ	0xFF3
 23721                           intcon	equ	0xFF2
 23722                           intcon2	equ	0xFF1
 23723                           indf0	equ	0xFEF
 23724                           postinc0	equ	0xFEE
 23725                           fsr0h	equ	0xFEA
 23726                           fsr0l	equ	0xFE9
 23727                           wreg	equ	0xFE8
 23728                           indf1	equ	0xFE7
 23729                           postdec1	equ	0xFE5
 23730                           fsr1h	equ	0xFE2
 23731                           fsr1l	equ	0xFE1
 23732                           indf2	equ	0xFDF
 23733                           postinc2	equ	0xFDE
 23734                           postdec2	equ	0xFDD
 23735                           fsr2h	equ	0xFDA
 23736                           fsr2l	equ	0xFD9
 23737                           status	equ	0xFD8
 23738                           
 23739 ;; *************** function _BluetoothInitialSetup *****************
 23740 ;; Defined at:
 23741 ;;		line 149 in file "Bluetooth.c"
 23742 ;; Parameters:    Size  Location     Type
 23743 ;;		None
 23744 ;; Auto vars:     Size  Location     Type
 23745 ;;  buf            50   40[BANK1 ] unsigned char [50]
 23746 ;;  RFchannel      10   30[BANK1 ] unsigned char [10]
 23747 ;;  ok              1   90[BANK1 ] unsigned char 
 23748 ;; Return value:  Size  Location     Type
 23749 ;;                  1    wreg      unsigned char 
 23750 ;; Registers used:
 23751 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23752 ;; Tracked objects:
 23753 ;;		On entry : 0/0
 23754 ;;		On exit  : 0/0
 23755 ;;		Unchanged: 0/0
 23756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23758 ;;      Locals:         0       0      61       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23760 ;;      Totals:         0       0      61       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23761 ;;Total ram usage:       61 bytes
 23762 ;; Hardware stack levels used:    1
 23763 ;; Hardware stack levels required when called:   10
 23764 ;; This function calls:
 23765 ;;		_EnterCommandMode
 23766 ;;		_StringContains
 23767 ;;		_UARTstring
 23768 ;;		_cleanBuffer
 23769 ;;		_delayUS
 23770 ;;		_sprintf
 23771 ;; This function is called by:
 23772 ;;		_InitBluetooth
 23773 ;; This function uses a non-reentrant model
 23774 ;;
 23775                           
 23776                           	psect	text58
 23777  004C5E                     __ptext58:
 23778                           	opt stack 0
 23779  004C5E                     _BluetoothInitialSetup:
 23780                           	opt stack 18
 23781                           
 23782                           ;Bluetooth.c: 151: unsigned char buf[50];
 23783                           ;Bluetooth.c: 152: unsigned char ok = 1;
 23784                           
 23785                           ;incstack = 0
 23786  004C5E  0E01               	movlw	1
 23787  004C60  0101               	movlb	1	; () banked
 23788  004C62  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 23789                           
 23790                           ; BSR set to: 1
 23791                           ;Bluetooth.c: 153: unsigned char RFchannel[10];
 23792                           ;Bluetooth.c: 155: cleanBuffer(buf,50);
 23793  004C64  0E28               	movlw	low BluetoothInitialSetup@buf
 23794  004C66  0100               	movlb	0	; () banked
 23795  004C68  6F79               	movwf	cleanBuffer@data& (0+255),b
 23796  004C6A  0E01               	movlw	high BluetoothInitialSetup@buf
 23797  004C6C  0100               	movlb	0	; () banked
 23798  004C6E  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 23799  004C70  0E00               	movlw	0
 23800  004C72  0100               	movlb	0	; () banked
 23801  004C74  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 23802  004C76  0E32               	movlw	50
 23803  004C78  6F7B               	movwf	cleanBuffer@count& (0+255),b
 23804  004C7A  EC97  F046         	call	_cleanBuffer	;wreg free
 23805                           
 23806                           ;Bluetooth.c: 156: cleanBuffer(RFchannel,10);
 23807  004C7E  0E1E               	movlw	low BluetoothInitialSetup@RFchannel
 23808  004C80  0100               	movlb	0	; () banked
 23809  004C82  6F79               	movwf	cleanBuffer@data& (0+255),b
 23810  004C84  0E01               	movlw	high BluetoothInitialSetup@RFchannel
 23811  004C86  0100               	movlb	0	; () banked
 23812  004C88  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 23813  004C8A  0E00               	movlw	0
 23814  004C8C  0100               	movlb	0	; () banked
 23815  004C8E  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 23816  004C90  0E0A               	movlw	10
 23817  004C92  6F7B               	movwf	cleanBuffer@count& (0+255),b
 23818  004C94  EC97  F046         	call	_cleanBuffer	;wreg free
 23819                           
 23820                           ;Bluetooth.c: 158: if(!EnterCommandMode())
 23821  004C98  ECEA  F03E         	call	_EnterCommandMode	;wreg free
 23822  004C9C  0900               	iorlw	0
 23823  004C9E  B4D8               	btfsc	status,2,c
 23824  004CA0  0012               	return	
 23825  004CA2  D001               	goto	l14174
 23826                           
 23827                           ;Bluetooth.c: 159: {
 23828                           ;Bluetooth.c: 160: return 0;
 23829                           ;	Return value of _BluetoothInitialSetup is never used
 23830  004CA4  0012               	return	
 23831  004CA6                     l14174:
 23832                           
 23833                           ;Bluetooth.c: 161: }
 23834                           ;Bluetooth.c: 162: sprintf(buf,"SN,Home Automation %ld\r",SN);
 23835  004CA6  0E28               	movlw	low BluetoothInitialSetup@buf
 23836  004CA8  0100               	movlb	0	; () banked
 23837  004CAA  6FC7               	movwf	sprintf@sp& (0+255),b
 23838  004CAC  0E01               	movlw	high BluetoothInitialSetup@buf
 23839  004CAE  0100               	movlb	0	; () banked
 23840  004CB0  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 23841  004CB2  0E23               	movlw	low STR_4
 23842  004CB4  0100               	movlb	0	; () banked
 23843  004CB6  6FC9               	movwf	sprintf@f& (0+255),b
 23844  004CB8  0EFC               	movlw	high STR_4
 23845  004CBA  0100               	movlb	0	; () banked
 23846  004CBC  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 23847  004CBE  C03C  F0CB         	movff	_SN,?_sprintf+4
 23848  004CC2  C03D  F0CC         	movff	_SN+1,?_sprintf+5
 23849  004CC6  C03E  F0CD         	movff	_SN+2,?_sprintf+6
 23850  004CCA  C03F  F0CE         	movff	_SN+3,?_sprintf+7
 23851  004CCE  ECB5  F010         	call	_sprintf	;wreg free
 23852                           
 23853                           ;Bluetooth.c: 163: UARTstring(buf);
 23854  004CD2  0E28               	movlw	low BluetoothInitialSetup@buf
 23855  004CD4  0100               	movlb	0	; () banked
 23856  004CD6  6F7A               	movwf	UARTstring@data& (0+255),b
 23857  004CD8  0E01               	movlw	high BluetoothInitialSetup@buf
 23858  004CDA  0100               	movlb	0	; () banked
 23859  004CDC  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 23860  004CDE  ECC4  F046         	call	_UARTstring	;wreg free
 23861                           
 23862                           ;Bluetooth.c: 164: delayUS(50000);
 23863  004CE2  0E50               	movlw	80
 23864  004CE4  0100               	movlb	0	; () banked
 23865  004CE6  6F79               	movwf	delayUS@US& (0+255),b
 23866  004CE8  0EC3               	movlw	195
 23867  004CEA  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 23868  004CEC  0E00               	movlw	0
 23869  004CEE  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 23870  004CF0  0E00               	movlw	0
 23871  004CF2  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 23872  004CF4  EC48  F047         	call	_delayUS	;wreg free
 23873                           
 23874                           ;Bluetooth.c: 165: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 23875  004CF8  0E00               	movlw	low _CommandString
 23876  004CFA  0100               	movlb	0	; () banked
 23877  004CFC  6F79               	movwf	StringContains@This& (0+255),b
 23878  004CFE  0E05               	movlw	high _CommandString
 23879  004D00  0100               	movlb	0	; () banked
 23880  004D02  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 23881  004D04  0EFB               	movlw	low STR_5
 23882  004D06  0100               	movlb	0	; () banked
 23883  004D08  6F7B               	movwf	StringContains@That& (0+255),b
 23884  004D0A  0EFF               	movlw	high STR_5
 23885  004D0C  0100               	movlb	0	; () banked
 23886  004D0E  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 23887  004D10  EC22  F041         	call	_StringContains	;wreg free
 23888  004D14  0900               	iorlw	0
 23889  004D16  A4D8               	btfss	status,2,c
 23890  004D18  D004               	goto	l14184
 23891                           
 23892                           ;Bluetooth.c: 166: {
 23893                           ;Bluetooth.c: 167: ok = 0;
 23894  004D1A  0E00               	movlw	0
 23895  004D1C  0101               	movlb	1	; () banked
 23896  004D1E  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 23897  004D20  D000               	goto	l14184
 23898  004D22                     l14184:
 23899                           
 23900                           ;Bluetooth.c: 168: }
 23901                           ;Bluetooth.c: 169: cleanBuffer(CommandString,CommandStringPos);
 23902  004D22  0E00               	movlw	low _CommandString
 23903  004D24  0100               	movlb	0	; () banked
 23904  004D26  6F79               	movwf	cleanBuffer@data& (0+255),b
 23905  004D28  0E05               	movlw	high _CommandString
 23906  004D2A  0100               	movlb	0	; () banked
 23907  004D2C  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 23908  004D2E  C026  F07B         	movff	_CommandStringPos,cleanBuffer@count
 23909  004D32  0100               	movlb	0	; () banked
 23910  004D34  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 23911  004D36  EC97  F046         	call	_cleanBuffer	;wreg free
 23912                           
 23913                           ;Bluetooth.c: 170: CommandStringPos = 0;
 23914  004D3A  0E00               	movlw	0
 23915  004D3C  6E26               	movwf	_CommandStringPos,c
 23916                           
 23917                           ;Bluetooth.c: 172: if(ok)
 23918  004D3E  0101               	movlb	1	; () banked
 23919  004D40  515A               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 23920  004D42  0101               	movlb	1	; () banked
 23921  004D44  B4D8               	btfsc	status,2,c
 23922  004D46  D028               	goto	l1820
 23923                           
 23924                           ; BSR set to: 1
 23925                           ;Bluetooth.c: 173: {
 23926                           ;Bluetooth.c: 174: UARTstring((unsigned char *)"SU, 115K\r");
 23927  004D48  0E74               	movlw	low STR_6
 23928  004D4A  0100               	movlb	0	; () banked
 23929  004D4C  6F7A               	movwf	UARTstring@data& (0+255),b
 23930  004D4E  0EFF               	movlw	high STR_6
 23931  004D50  0100               	movlb	0	; () banked
 23932  004D52  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 23933  004D54  ECC4  F046         	call	_UARTstring	;wreg free
 23934                           
 23935                           ;Bluetooth.c: 175: delayUS(50000);
 23936  004D58  0E50               	movlw	80
 23937  004D5A  0100               	movlb	0	; () banked
 23938  004D5C  6F79               	movwf	delayUS@US& (0+255),b
 23939  004D5E  0EC3               	movlw	195
 23940  004D60  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 23941  004D62  0E00               	movlw	0
 23942  004D64  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 23943  004D66  0E00               	movlw	0
 23944  004D68  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 23945  004D6A  EC48  F047         	call	_delayUS	;wreg free
 23946                           
 23947                           ;Bluetooth.c: 176: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 23948  004D6E  0E00               	movlw	low _CommandString
 23949  004D70  0100               	movlb	0	; () banked
 23950  004D72  6F79               	movwf	StringContains@This& (0+255),b
 23951  004D74  0E05               	movlw	high _CommandString
 23952  004D76  0100               	movlb	0	; () banked
 23953  004D78  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 23954  004D7A  0EFB               	movlw	low STR_5
 23955  004D7C  0100               	movlb	0	; () banked
 23956  004D7E  6F7B               	movwf	StringContains@That& (0+255),b
 23957  004D80  0EFF               	movlw	high STR_5
 23958  004D82  0100               	movlb	0	; () banked
 23959  004D84  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 23960  004D86  EC22  F041         	call	_StringContains	;wreg free
 23961  004D8A  0900               	iorlw	0
 23962  004D8C  A4D8               	btfss	status,2,c
 23963  004D8E  D004               	goto	l1820
 23964                           
 23965                           ;Bluetooth.c: 177: {
 23966                           ;Bluetooth.c: 178: ok = 0;
 23967  004D90  0E00               	movlw	0
 23968  004D92  0101               	movlb	1	; () banked
 23969  004D94  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 23970  004D96  D000               	goto	l1820
 23971  004D98                     l1820:
 23972                           
 23973                           ;Bluetooth.c: 179: }
 23974                           ;Bluetooth.c: 180: }
 23975                           ;Bluetooth.c: 182: if(ok)
 23976  004D98  0101               	movlb	1	; () banked
 23977  004D9A  515A               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 23978  004D9C  0101               	movlb	1	; () banked
 23979  004D9E  B4D8               	btfsc	status,2,c
 23980  004DA0  D028               	goto	l14206
 23981                           
 23982                           ; BSR set to: 1
 23983                           ;Bluetooth.c: 183: {
 23984                           ;Bluetooth.c: 184: UARTstring((unsigned char *)"SS, Home Automation\r");
 23985  004DA2  0EAD               	movlw	low STR_8
 23986  004DA4  0100               	movlb	0	; () banked
 23987  004DA6  6F7A               	movwf	UARTstring@data& (0+255),b
 23988  004DA8  0EFC               	movlw	high STR_8
 23989  004DAA  0100               	movlb	0	; () banked
 23990  004DAC  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 23991  004DAE  ECC4  F046         	call	_UARTstring	;wreg free
 23992                           
 23993                           ;Bluetooth.c: 185: delayUS(50000);
 23994  004DB2  0E50               	movlw	80
 23995  004DB4  0100               	movlb	0	; () banked
 23996  004DB6  6F79               	movwf	delayUS@US& (0+255),b
 23997  004DB8  0EC3               	movlw	195
 23998  004DBA  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 23999  004DBC  0E00               	movlw	0
 24000  004DBE  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 24001  004DC0  0E00               	movlw	0
 24002  004DC2  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 24003  004DC4  EC48  F047         	call	_delayUS	;wreg free
 24004                           
 24005                           ;Bluetooth.c: 186: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24006  004DC8  0E00               	movlw	low _CommandString
 24007  004DCA  0100               	movlb	0	; () banked
 24008  004DCC  6F79               	movwf	StringContains@This& (0+255),b
 24009  004DCE  0E05               	movlw	high _CommandString
 24010  004DD0  0100               	movlb	0	; () banked
 24011  004DD2  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 24012  004DD4  0EFB               	movlw	low STR_5
 24013  004DD6  0100               	movlb	0	; () banked
 24014  004DD8  6F7B               	movwf	StringContains@That& (0+255),b
 24015  004DDA  0EFF               	movlw	high STR_5
 24016  004DDC  0100               	movlb	0	; () banked
 24017  004DDE  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 24018  004DE0  EC22  F041         	call	_StringContains	;wreg free
 24019  004DE4  0900               	iorlw	0
 24020  004DE6  A4D8               	btfss	status,2,c
 24021  004DE8  D004               	goto	l14206
 24022                           
 24023                           ;Bluetooth.c: 187: {
 24024                           ;Bluetooth.c: 188: ok = 0;
 24025  004DEA  0E00               	movlw	0
 24026  004DEC  0101               	movlb	1	; () banked
 24027  004DEE  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24028                           
 24029                           ; BSR set to: 1
 24030  004DF0  D000               	goto	l14206
 24031  004DF2                     l14206:
 24032                           
 24033                           ;Bluetooth.c: 189: }
 24034                           ;Bluetooth.c: 190: }
 24035                           ;Bluetooth.c: 191: cleanBuffer(CommandString,CommandStringPos);
 24036  004DF2  0E00               	movlw	low _CommandString
 24037  004DF4  0100               	movlb	0	; () banked
 24038  004DF6  6F79               	movwf	cleanBuffer@data& (0+255),b
 24039  004DF8  0E05               	movlw	high _CommandString
 24040  004DFA  0100               	movlb	0	; () banked
 24041  004DFC  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 24042  004DFE  C026  F07B         	movff	_CommandStringPos,cleanBuffer@count
 24043  004E02  0100               	movlb	0	; () banked
 24044  004E04  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 24045  004E06  EC97  F046         	call	_cleanBuffer	;wreg free
 24046                           
 24047                           ;Bluetooth.c: 192: CommandStringPos = 0;
 24048  004E0A  0E00               	movlw	0
 24049  004E0C  6E26               	movwf	_CommandStringPos,c
 24050                           
 24051                           ;Bluetooth.c: 194: if(ok)
 24052  004E0E  0101               	movlb	1	; () banked
 24053  004E10  515A               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24054  004E12  0101               	movlb	1	; () banked
 24055  004E14  B4D8               	btfsc	status,2,c
 24056  004E16  D028               	goto	l14220
 24057                           
 24058                           ; BSR set to: 1
 24059                           ;Bluetooth.c: 195: {
 24060                           ;Bluetooth.c: 196: UARTstring((unsigned char *)"SY,0010\r");
 24061  004E18  0E88               	movlw	low STR_10
 24062  004E1A  0100               	movlb	0	; () banked
 24063  004E1C  6F7A               	movwf	UARTstring@data& (0+255),b
 24064  004E1E  0EFF               	movlw	high STR_10
 24065  004E20  0100               	movlb	0	; () banked
 24066  004E22  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 24067  004E24  ECC4  F046         	call	_UARTstring	;wreg free
 24068                           
 24069                           ;Bluetooth.c: 197: delayUS(50000);
 24070  004E28  0E50               	movlw	80
 24071  004E2A  0100               	movlb	0	; () banked
 24072  004E2C  6F79               	movwf	delayUS@US& (0+255),b
 24073  004E2E  0EC3               	movlw	195
 24074  004E30  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 24075  004E32  0E00               	movlw	0
 24076  004E34  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 24077  004E36  0E00               	movlw	0
 24078  004E38  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 24079  004E3A  EC48  F047         	call	_delayUS	;wreg free
 24080                           
 24081                           ;Bluetooth.c: 198: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24082  004E3E  0E00               	movlw	low _CommandString
 24083  004E40  0100               	movlb	0	; () banked
 24084  004E42  6F79               	movwf	StringContains@This& (0+255),b
 24085  004E44  0E05               	movlw	high _CommandString
 24086  004E46  0100               	movlb	0	; () banked
 24087  004E48  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 24088  004E4A  0EFB               	movlw	low STR_5
 24089  004E4C  0100               	movlb	0	; () banked
 24090  004E4E  6F7B               	movwf	StringContains@That& (0+255),b
 24091  004E50  0EFF               	movlw	high STR_5
 24092  004E52  0100               	movlb	0	; () banked
 24093  004E54  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 24094  004E56  EC22  F041         	call	_StringContains	;wreg free
 24095  004E5A  0900               	iorlw	0
 24096  004E5C  A4D8               	btfss	status,2,c
 24097  004E5E  D004               	goto	l14220
 24098                           
 24099                           ;Bluetooth.c: 199: {
 24100                           ;Bluetooth.c: 200: ok = 0;
 24101  004E60  0E00               	movlw	0
 24102  004E62  0101               	movlb	1	; () banked
 24103  004E64  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24104                           
 24105                           ; BSR set to: 1
 24106  004E66  D000               	goto	l14220
 24107  004E68                     l14220:
 24108                           
 24109                           ;Bluetooth.c: 201: }
 24110                           ;Bluetooth.c: 202: }
 24111                           ;Bluetooth.c: 203: cleanBuffer(CommandString,CommandStringPos);
 24112  004E68  0E00               	movlw	low _CommandString
 24113  004E6A  0100               	movlb	0	; () banked
 24114  004E6C  6F79               	movwf	cleanBuffer@data& (0+255),b
 24115  004E6E  0E05               	movlw	high _CommandString
 24116  004E70  0100               	movlb	0	; () banked
 24117  004E72  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 24118  004E74  C026  F07B         	movff	_CommandStringPos,cleanBuffer@count
 24119  004E78  0100               	movlb	0	; () banked
 24120  004E7A  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 24121  004E7C  EC97  F046         	call	_cleanBuffer	;wreg free
 24122                           
 24123                           ;Bluetooth.c: 204: CommandStringPos = 0;
 24124  004E80  0E00               	movlw	0
 24125  004E82  6E26               	movwf	_CommandStringPos,c
 24126                           
 24127                           ;Bluetooth.c: 206: if(ok)
 24128  004E84  0101               	movlb	1	; () banked
 24129  004E86  515A               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24130  004E88  0101               	movlb	1	; () banked
 24131  004E8A  B4D8               	btfsc	status,2,c
 24132  004E8C  D028               	goto	l14234
 24133                           
 24134                           ; BSR set to: 1
 24135                           ;Bluetooth.c: 207: {
 24136                           ;Bluetooth.c: 208: UARTstring((unsigned char *)"S~,0\r");
 24137  004E8E  0EC0               	movlw	low STR_12
 24138  004E90  0100               	movlb	0	; () banked
 24139  004E92  6F7A               	movwf	UARTstring@data& (0+255),b
 24140  004E94  0EFF               	movlw	high STR_12
 24141  004E96  0100               	movlb	0	; () banked
 24142  004E98  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 24143  004E9A  ECC4  F046         	call	_UARTstring	;wreg free
 24144                           
 24145                           ;Bluetooth.c: 209: delayUS(50000);
 24146  004E9E  0E50               	movlw	80
 24147  004EA0  0100               	movlb	0	; () banked
 24148  004EA2  6F79               	movwf	delayUS@US& (0+255),b
 24149  004EA4  0EC3               	movlw	195
 24150  004EA6  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 24151  004EA8  0E00               	movlw	0
 24152  004EAA  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 24153  004EAC  0E00               	movlw	0
 24154  004EAE  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 24155  004EB0  EC48  F047         	call	_delayUS	;wreg free
 24156                           
 24157                           ;Bluetooth.c: 210: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24158  004EB4  0E00               	movlw	low _CommandString
 24159  004EB6  0100               	movlb	0	; () banked
 24160  004EB8  6F79               	movwf	StringContains@This& (0+255),b
 24161  004EBA  0E05               	movlw	high _CommandString
 24162  004EBC  0100               	movlb	0	; () banked
 24163  004EBE  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 24164  004EC0  0EFB               	movlw	low STR_5
 24165  004EC2  0100               	movlb	0	; () banked
 24166  004EC4  6F7B               	movwf	StringContains@That& (0+255),b
 24167  004EC6  0EFF               	movlw	high STR_5
 24168  004EC8  0100               	movlb	0	; () banked
 24169  004ECA  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 24170  004ECC  EC22  F041         	call	_StringContains	;wreg free
 24171  004ED0  0900               	iorlw	0
 24172  004ED2  A4D8               	btfss	status,2,c
 24173  004ED4  D004               	goto	l14234
 24174                           
 24175                           ;Bluetooth.c: 211: {
 24176                           ;Bluetooth.c: 212: ok = 0;
 24177  004ED6  0E00               	movlw	0
 24178  004ED8  0101               	movlb	1	; () banked
 24179  004EDA  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24180                           
 24181                           ; BSR set to: 1
 24182  004EDC  D000               	goto	l14234
 24183  004EDE                     l14234:
 24184                           
 24185                           ;Bluetooth.c: 213: }
 24186                           ;Bluetooth.c: 214: }
 24187                           ;Bluetooth.c: 215: cleanBuffer(CommandString,CommandStringPos);
 24188  004EDE  0E00               	movlw	low _CommandString
 24189  004EE0  0100               	movlb	0	; () banked
 24190  004EE2  6F79               	movwf	cleanBuffer@data& (0+255),b
 24191  004EE4  0E05               	movlw	high _CommandString
 24192  004EE6  0100               	movlb	0	; () banked
 24193  004EE8  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 24194  004EEA  C026  F07B         	movff	_CommandStringPos,cleanBuffer@count
 24195  004EEE  0100               	movlb	0	; () banked
 24196  004EF0  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 24197  004EF2  EC97  F046         	call	_cleanBuffer	;wreg free
 24198                           
 24199                           ;Bluetooth.c: 216: CommandStringPos = 0;
 24200  004EF6  0E00               	movlw	0
 24201  004EF8  6E26               	movwf	_CommandStringPos,c
 24202                           
 24203                           ;Bluetooth.c: 218: if(ok)
 24204  004EFA  0101               	movlb	1	; () banked
 24205  004EFC  515A               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24206  004EFE  0101               	movlb	1	; () banked
 24207  004F00  B4D8               	btfsc	status,2,c
 24208  004F02  D028               	goto	l14248
 24209                           
 24210                           ; BSR set to: 1
 24211                           ;Bluetooth.c: 219: {
 24212                           ;Bluetooth.c: 220: UARTstring((unsigned char *)"S~,0\r");
 24213  004F04  0EC0               	movlw	low STR_12
 24214  004F06  0100               	movlb	0	; () banked
 24215  004F08  6F7A               	movwf	UARTstring@data& (0+255),b
 24216  004F0A  0EFF               	movlw	high STR_12
 24217  004F0C  0100               	movlb	0	; () banked
 24218  004F0E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 24219  004F10  ECC4  F046         	call	_UARTstring	;wreg free
 24220                           
 24221                           ;Bluetooth.c: 221: delayUS(50000);
 24222  004F14  0E50               	movlw	80
 24223  004F16  0100               	movlb	0	; () banked
 24224  004F18  6F79               	movwf	delayUS@US& (0+255),b
 24225  004F1A  0EC3               	movlw	195
 24226  004F1C  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 24227  004F1E  0E00               	movlw	0
 24228  004F20  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 24229  004F22  0E00               	movlw	0
 24230  004F24  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 24231  004F26  EC48  F047         	call	_delayUS	;wreg free
 24232                           
 24233                           ;Bluetooth.c: 222: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24234  004F2A  0E00               	movlw	low _CommandString
 24235  004F2C  0100               	movlb	0	; () banked
 24236  004F2E  6F79               	movwf	StringContains@This& (0+255),b
 24237  004F30  0E05               	movlw	high _CommandString
 24238  004F32  0100               	movlb	0	; () banked
 24239  004F34  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 24240  004F36  0EFB               	movlw	low STR_5
 24241  004F38  0100               	movlb	0	; () banked
 24242  004F3A  6F7B               	movwf	StringContains@That& (0+255),b
 24243  004F3C  0EFF               	movlw	high STR_5
 24244  004F3E  0100               	movlb	0	; () banked
 24245  004F40  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 24246  004F42  EC22  F041         	call	_StringContains	;wreg free
 24247  004F46  0900               	iorlw	0
 24248  004F48  A4D8               	btfss	status,2,c
 24249  004F4A  D004               	goto	l14248
 24250                           
 24251                           ;Bluetooth.c: 223: {
 24252                           ;Bluetooth.c: 224: ok = 0;
 24253  004F4C  0E00               	movlw	0
 24254  004F4E  0101               	movlb	1	; () banked
 24255  004F50  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24256                           
 24257                           ; BSR set to: 1
 24258  004F52  D000               	goto	l14248
 24259  004F54                     l14248:
 24260                           
 24261                           ;Bluetooth.c: 225: }
 24262                           ;Bluetooth.c: 226: }
 24263                           ;Bluetooth.c: 227: cleanBuffer(CommandString,CommandStringPos);
 24264  004F54  0E00               	movlw	low _CommandString
 24265  004F56  0100               	movlb	0	; () banked
 24266  004F58  6F79               	movwf	cleanBuffer@data& (0+255),b
 24267  004F5A  0E05               	movlw	high _CommandString
 24268  004F5C  0100               	movlb	0	; () banked
 24269  004F5E  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 24270  004F60  C026  F07B         	movff	_CommandStringPos,cleanBuffer@count
 24271  004F64  0100               	movlb	0	; () banked
 24272  004F66  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 24273  004F68  EC97  F046         	call	_cleanBuffer	;wreg free
 24274                           
 24275                           ;Bluetooth.c: 228: CommandStringPos = 0;
 24276  004F6C  0E00               	movlw	0
 24277  004F6E  6E26               	movwf	_CommandStringPos,c
 24278                           
 24279                           ;Bluetooth.c: 230: if(ok)
 24280  004F70  0101               	movlb	1	; () banked
 24281  004F72  515A               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24282  004F74  0101               	movlb	1	; () banked
 24283  004F76  B4D8               	btfsc	status,2,c
 24284  004F78  D03E               	goto	l14264
 24285                           
 24286                           ; BSR set to: 1
 24287                           ;Bluetooth.c: 231: {
 24288                           ;Bluetooth.c: 232: UARTstring((unsigned char *)"D,0\r");
 24289  004F7A  0EDD               	movlw	low STR_16
 24290  004F7C  0100               	movlb	0	; () banked
 24291  004F7E  6F7A               	movwf	UARTstring@data& (0+255),b
 24292  004F80  0EFF               	movlw	high STR_16
 24293  004F82  0100               	movlb	0	; () banked
 24294  004F84  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 24295  004F86  ECC4  F046         	call	_UARTstring	;wreg free
 24296                           
 24297                           ;Bluetooth.c: 233: delayUS(50000);
 24298  004F8A  0E50               	movlw	80
 24299  004F8C  0100               	movlb	0	; () banked
 24300  004F8E  6F79               	movwf	delayUS@US& (0+255),b
 24301  004F90  0EC3               	movlw	195
 24302  004F92  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 24303  004F94  0E00               	movlw	0
 24304  004F96  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 24305  004F98  0E00               	movlw	0
 24306  004F9A  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 24307  004F9C  EC48  F047         	call	_delayUS	;wreg free
 24308                           
 24309                           ;Bluetooth.c: 234: sprintf(buf,"BTName=Home Automation %ld\r",SN);
 24310  004FA0  0E28               	movlw	low BluetoothInitialSetup@buf
 24311  004FA2  0100               	movlb	0	; () banked
 24312  004FA4  6FC7               	movwf	sprintf@sp& (0+255),b
 24313  004FA6  0E01               	movlw	high BluetoothInitialSetup@buf
 24314  004FA8  0100               	movlb	0	; () banked
 24315  004FAA  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 24316  004FAC  0E81               	movlw	low STR_17
 24317  004FAE  0100               	movlb	0	; () banked
 24318  004FB0  6FC9               	movwf	sprintf@f& (0+255),b
 24319  004FB2  0EFB               	movlw	high STR_17
 24320  004FB4  0100               	movlb	0	; () banked
 24321  004FB6  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 24322  004FB8  C03C  F0CB         	movff	_SN,?_sprintf+4
 24323  004FBC  C03D  F0CC         	movff	_SN+1,?_sprintf+5
 24324  004FC0  C03E  F0CD         	movff	_SN+2,?_sprintf+6
 24325  004FC4  C03F  F0CE         	movff	_SN+3,?_sprintf+7
 24326  004FC8  ECB5  F010         	call	_sprintf	;wreg free
 24327                           
 24328                           ;Bluetooth.c: 235: if(!StringContains(CommandString, buf))
 24329  004FCC  0E00               	movlw	low _CommandString
 24330  004FCE  0100               	movlb	0	; () banked
 24331  004FD0  6F79               	movwf	StringContains@This& (0+255),b
 24332  004FD2  0E05               	movlw	high _CommandString
 24333  004FD4  0100               	movlb	0	; () banked
 24334  004FD6  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 24335  004FD8  0E28               	movlw	low BluetoothInitialSetup@buf
 24336  004FDA  0100               	movlb	0	; () banked
 24337  004FDC  6F7B               	movwf	StringContains@That& (0+255),b
 24338  004FDE  0E01               	movlw	high BluetoothInitialSetup@buf
 24339  004FE0  0100               	movlb	0	; () banked
 24340  004FE2  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 24341  004FE4  EC22  F041         	call	_StringContains	;wreg free
 24342  004FE8  0900               	iorlw	0
 24343  004FEA  A4D8               	btfss	status,2,c
 24344  004FEC  D004               	goto	l14264
 24345                           
 24346                           ;Bluetooth.c: 236: {
 24347                           ;Bluetooth.c: 237: ok = 0;
 24348  004FEE  0E00               	movlw	0
 24349  004FF0  0101               	movlb	1	; () banked
 24350  004FF2  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24351                           
 24352                           ; BSR set to: 1
 24353  004FF4  D000               	goto	l14264
 24354  004FF6                     l14264:
 24355                           
 24356                           ;Bluetooth.c: 238: }
 24357                           ;Bluetooth.c: 239: }
 24358                           ;Bluetooth.c: 240: cleanBuffer(CommandString,CommandStringPos);
 24359  004FF6  0E00               	movlw	low _CommandString
 24360  004FF8  0100               	movlb	0	; () banked
 24361  004FFA  6F79               	movwf	cleanBuffer@data& (0+255),b
 24362  004FFC  0E05               	movlw	high _CommandString
 24363  004FFE  0100               	movlb	0	; () banked
 24364  005000  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 24365  005002  C026  F07B         	movff	_CommandStringPos,cleanBuffer@count
 24366  005006  0100               	movlb	0	; () banked
 24367  005008  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 24368  00500A  EC97  F046         	call	_cleanBuffer	;wreg free
 24369                           
 24370                           ;Bluetooth.c: 241: CommandStringPos = 0;
 24371  00500E  0E00               	movlw	0
 24372  005010  6E26               	movwf	_CommandStringPos,c
 24373                           
 24374                           ;Bluetooth.c: 243: UARTstring((unsigned char *)"---\r");
 24375  005012  0ED8               	movlw	low STR_18
 24376  005014  0100               	movlb	0	; () banked
 24377  005016  6F7A               	movwf	UARTstring@data& (0+255),b
 24378  005018  0EFF               	movlw	high STR_18
 24379  00501A  0100               	movlb	0	; () banked
 24380  00501C  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 24381  00501E  ECC4  F046         	call	_UARTstring	;wreg free
 24382                           
 24383                           ;Bluetooth.c: 244: delayUS(50000);
 24384  005022  0E50               	movlw	80
 24385  005024  0100               	movlb	0	; () banked
 24386  005026  6F79               	movwf	delayUS@US& (0+255),b
 24387  005028  0EC3               	movlw	195
 24388  00502A  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 24389  00502C  0E00               	movlw	0
 24390  00502E  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 24391  005030  0E00               	movlw	0
 24392  005032  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 24393  005034  EC48  F047         	call	_delayUS	;wreg free
 24394                           
 24395                           ;Bluetooth.c: 245: if(!StringContains(CommandString,(unsigned char *)"END"))
 24396  005038  0E00               	movlw	low _CommandString
 24397  00503A  0100               	movlb	0	; () banked
 24398  00503C  6F79               	movwf	StringContains@This& (0+255),b
 24399  00503E  0E05               	movlw	high _CommandString
 24400  005040  0100               	movlb	0	; () banked
 24401  005042  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 24402  005044  0EF7               	movlw	low STR_19
 24403  005046  0100               	movlb	0	; () banked
 24404  005048  6F7B               	movwf	StringContains@That& (0+255),b
 24405  00504A  0EFF               	movlw	high STR_19
 24406  00504C  0100               	movlb	0	; () banked
 24407  00504E  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 24408  005050  EC22  F041         	call	_StringContains	;wreg free
 24409  005054  0900               	iorlw	0
 24410  005056  A4D8               	btfss	status,2,c
 24411  005058  D004               	goto	l14276
 24412                           
 24413                           ;Bluetooth.c: 246: {
 24414                           ;Bluetooth.c: 247: ok = 0;
 24415  00505A  0E00               	movlw	0
 24416  00505C  0101               	movlb	1	; () banked
 24417  00505E  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24418  005060  D000               	goto	l14276
 24419  005062                     l14276:
 24420                           
 24421                           ;Bluetooth.c: 248: }
 24422                           ;Bluetooth.c: 249: cleanBuffer(CommandString,CommandStringPos);
 24423  005062  0E00               	movlw	low _CommandString
 24424  005064  0100               	movlb	0	; () banked
 24425  005066  6F79               	movwf	cleanBuffer@data& (0+255),b
 24426  005068  0E05               	movlw	high _CommandString
 24427  00506A  0100               	movlb	0	; () banked
 24428  00506C  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 24429  00506E  C026  F07B         	movff	_CommandStringPos,cleanBuffer@count
 24430  005072  0100               	movlb	0	; () banked
 24431  005074  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 24432  005076  EC97  F046         	call	_cleanBuffer	;wreg free
 24433                           
 24434                           ;Bluetooth.c: 250: CommandStringPos = 0;
 24435  00507A  0E00               	movlw	0
 24436  00507C  6E26               	movwf	_CommandStringPos,c
 24437                           
 24438                           ;Bluetooth.c: 253: {
 24439                           ;Bluetooth.c: 254: return 1;
 24440                           ;	Return value of _BluetoothInitialSetup is never used
 24441  00507E  0012               	return	
 24442                           
 24443                           ;Bluetooth.c: 255: }
 24444                           ;Bluetooth.c: 256: return 0;
 24445                           ;	Return value of _BluetoothInitialSetup is never used
 24446  005080  0012               	return		;funcret
 24447  005082                     __end_of_BluetoothInitialSetup:
 24448                           	opt stack 0
 24449                           tblptru	equ	0xFF8
 24450                           tblptrh	equ	0xFF7
 24451                           tblptrl	equ	0xFF6
 24452                           tablat	equ	0xFF5
 24453                           prodh	equ	0xFF4
 24454                           prodl	equ	0xFF3
 24455                           intcon	equ	0xFF2
 24456                           intcon2	equ	0xFF1
 24457                           indf0	equ	0xFEF
 24458                           postinc0	equ	0xFEE
 24459                           fsr0h	equ	0xFEA
 24460                           fsr0l	equ	0xFE9
 24461                           wreg	equ	0xFE8
 24462                           indf1	equ	0xFE7
 24463                           postdec1	equ	0xFE5
 24464                           fsr1h	equ	0xFE2
 24465                           fsr1l	equ	0xFE1
 24466                           indf2	equ	0xFDF
 24467                           postinc2	equ	0xFDE
 24468                           postdec2	equ	0xFDD
 24469                           fsr2h	equ	0xFDA
 24470                           fsr2l	equ	0xFD9
 24471                           status	equ	0xFD8
 24472                           
 24473 ;; *************** function _sprintf *****************
 24474 ;; Defined at:
 24475 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 24476 ;; Parameters:    Size  Location     Type
 24477 ;;  sp              2  103[BANK0 ] PTR unsigned char 
 24478 ;;		 -> UseBluetooth@buf(100), BluetoothInitialSetup@buf(50), 
 24479 ;;  f               2  105[BANK0 ] PTR const unsigned char 
 24480 ;;		 -> STR_103(19), STR_101(15), STR_87(29), STR_86(16), 
 24481 ;;		 -> STR_85(21), STR_83(20), STR_75(44), STR_74(54), 
 24482 ;;		 -> STR_73(54), STR_72(63), STR_50(44), STR_49(46), 
 24483 ;;		 -> STR_47(44), STR_46(21), STR_33(17), STR_32(17), 
 24484 ;;		 -> STR_31(20), STR_29(23), STR_28(21), STR_27(21), 
 24485 ;;		 -> STR_17(28), STR_4(24), 
 24486 ;; Auto vars:     Size  Location     Type
 24487 ;;  idx             1    3[BANK1 ] unsigned char 
 24488 ;;  val             4   18[BANK1 ] unsigned long 
 24489 ;;  tmpval          4   12[BANK1 ] struct .
 24490 ;;  fval            3   22[BANK1 ] struct .
 24491 ;;  flag            2   27[BANK1 ] unsigned short 
 24492 ;;  width           2   25[BANK1 ] int 
 24493 ;;  exp             2   16[BANK1 ] int 
 24494 ;;  prec            2   10[BANK1 ] int 
 24495 ;;  ap              2    8[BANK1 ] PTR void [1]
 24496 ;;		 -> ?_sprintf(2), 
 24497 ;;  len             2    6[BANK1 ] unsigned int 
 24498 ;;  cp              2    4[BANK1 ] PTR const unsigned char 
 24499 ;;		 -> STR_148(7), sprintf@c(1), PCBVersion(5), FirmVersion(9), 
 24500 ;;		 -> GetNumber@temp(4), 
 24501 ;;  c               1   29[BANK1 ] char 
 24502 ;;  d               1    0        unsigned char 
 24503 ;; Return value:  Size  Location     Type
 24504 ;;                  2  103[BANK0 ] int 
 24505 ;; Registers used:
 24506 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24507 ;; Tracked objects:
 24508 ;;		On entry : 0/0
 24509 ;;		On exit  : 0/0
 24510 ;;		Unchanged: 0/0
 24511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24512 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24513 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24514 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24515 ;;      Totals:         0      20      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24516 ;;Total ram usage:       50 bytes
 24517 ;; Hardware stack levels used:    1
 24518 ;; Hardware stack levels required when called:    9
 24519 ;; This function calls:
 24520 ;;		___awdiv
 24521 ;;		___ftadd
 24522 ;;		___ftge
 24523 ;;		___ftmul
 24524 ;;		___ftneg
 24525 ;;		___ftsub
 24526 ;;		___fttol
 24527 ;;		___lldiv
 24528 ;;		___llmod
 24529 ;;		___lltoft
 24530 ;;		___wmul
 24531 ;;		__div_to_l_
 24532 ;;		__tdiv_to_l_
 24533 ;;		_fround
 24534 ;;		_isdigit
 24535 ;;		_scale
 24536 ;; This function is called by:
 24537 ;;		_BluetoothInitialSetup
 24538 ;;		_UseBluetooth
 24539 ;; This function uses a non-reentrant model
 24540 ;;
 24541                           
 24542                           	psect	text59
 24543  00216A                     __ptext59:
 24544                           	opt stack 0
 24545  00216A                     _sprintf:
 24546                           	opt stack 20
 24547                           
 24548                           ;doprnt.c: 494: va_list ap;
 24549                           ;doprnt.c: 499: signed char c;
 24550                           ;doprnt.c: 501: int width;
 24551                           ;doprnt.c: 504: int prec;
 24552                           ;doprnt.c: 508: unsigned short flag;
 24553                           ;doprnt.c: 515: char d;
 24554                           ;doprnt.c: 516: double fval;
 24555                           ;doprnt.c: 517: int exp;
 24556                           ;doprnt.c: 523: union {
 24557                           ;doprnt.c: 524: unsigned long vd;
 24558                           ;doprnt.c: 525: double integ;
 24559                           ;doprnt.c: 526: } tmpval;
 24560                           ;doprnt.c: 528: unsigned long val;
 24561                           ;doprnt.c: 529: unsigned len;
 24562                           ;doprnt.c: 530: const char * cp;
 24563                           ;doprnt.c: 533: *ap = __va_start();
 24564                           
 24565                           ;incstack = 0
 24566  00216A  0ECB               	movlw	low (?_sprintf+4)
 24567  00216C  0101               	movlb	1	; () banked
 24568  00216E  6F08               	movwf	sprintf@ap& (0+255),b
 24569  002170  0E00               	movlw	high (?_sprintf+4)
 24570  002172  0101               	movlb	1	; () banked
 24571  002174  6F09               	movwf	(sprintf@ap+1)& (0+255),b
 24572                           
 24573                           ;doprnt.c: 536: while(c = *f++) {
 24574  002176  EF3D  F018         	goto	l13786
 24575  00217A                     l13414:
 24576                           
 24577                           ; BSR set to: 1
 24578                           ;doprnt.c: 538: if(c != '%')
 24579  00217A  0E25               	movlw	37
 24580  00217C  0101               	movlb	1	; () banked
 24581  00217E  191D               	xorwf	sprintf@c& (0+255),w,b
 24582  002180  B4D8               	btfsc	status,2,c
 24583  002182  D00B               	goto	l13420
 24584                           
 24585                           ; BSR set to: 1
 24586                           ;doprnt.c: 540: {
 24587                           ;doprnt.c: 541: ((*sp++ = (c)));
 24588  002184  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 24589  002188  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 24590  00218C  C11D  FFDF         	movff	sprintf@c,indf2
 24591                           
 24592                           ; BSR set to: 1
 24593  002190  0100               	movlb	0	; () banked
 24594  002192  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 24595  002194  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 24596                           
 24597                           ;doprnt.c: 542: continue;
 24598  002196  EF3D  F018         	goto	l13786
 24599  00219A                     l13420:
 24600                           
 24601                           ;doprnt.c: 543: }
 24602                           ;doprnt.c: 546: width = 0;
 24603  00219A  0E00               	movlw	0
 24604  00219C  0101               	movlb	1	; () banked
 24605  00219E  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 24606  0021A0  0E00               	movlw	0
 24607  0021A2  6F19               	movwf	sprintf@width& (0+255),b
 24608                           
 24609                           ;doprnt.c: 548: flag = 0;
 24610  0021A4  0E00               	movlw	0
 24611  0021A6  0101               	movlb	1	; () banked
 24612  0021A8  6F1C               	movwf	(sprintf@flag+1)& (0+255),b
 24613  0021AA  0E00               	movlw	0
 24614  0021AC  6F1B               	movwf	sprintf@flag& (0+255),b
 24615                           
 24616                           ; BSR set to: 1
 24617                           ;doprnt.c: 551: switch(*f) {
 24618                           
 24619                           ;doprnt.c: 550: for(;;) {
 24620  0021AE  D007               	goto	l13426
 24621  0021B0                     l13422:
 24622                           
 24623                           ;doprnt.c: 580: flag |= 0x04;
 24624  0021B0  0101               	movlb	1	; () banked
 24625  0021B2  851B               	bsf	sprintf@flag& (0+255),2,b
 24626                           
 24627                           ;doprnt.c: 581: f++;
 24628  0021B4  0100               	movlb	0	; () banked
 24629  0021B6  4BC9               	infsnz	sprintf@f& (0+255),f,b
 24630  0021B8  2BCA               	incf	(sprintf@f+1)& (0+255),f,b
 24631                           
 24632                           ;doprnt.c: 582: continue;
 24633  0021BA  D001               	goto	l13426
 24634                           
 24635                           ; BSR set to: 0
 24636                           ;doprnt.c: 584: }
 24637  0021BC  D00C               	goto	l13428
 24638  0021BE                     l13426:
 24639  0021BE  C0C9  FFF6         	movff	sprintf@f,tblptrl
 24640  0021C2  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
 24641  0021C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24642  0021C6  6AF8               	clrf	tblptru,c
 24643  0021C8                     	endif
 24644  0021C8                     	if	0	;tblptru may be non-zero
 24645  0021C8                     	endif
 24646  0021C8  0008               	tblrd		*
 24647  0021CA  50F5               	movf	tablat,w,c
 24648                           
 24649                           ; Switch size 1, requested type "space"
 24650                           ; Number of cases is 1, Range of values is 48 to 48
 24651                           ; switch strategies available:
 24652                           ; Name         Instructions Cycles
 24653                           ; simple_byte            4     3 (average)
 24654                           ;	Chosen strategy is simple_byte
 24655  0021CC  0A30               	xorlw	48	; case 48
 24656  0021CE  B4D8               	btfsc	status,2,c
 24657  0021D0  D7EF               	goto	l13422
 24658                           
 24659                           ;doprnt.c: 585: break;
 24660  0021D2  D001               	goto	l13428
 24661                           
 24662                           ;doprnt.c: 586: }
 24663  0021D4  D7F4               	goto	l13426
 24664  0021D6                     l13428:
 24665                           
 24666                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 24667  0021D6  C0C9  FFF6         	movff	sprintf@f,tblptrl
 24668  0021DA  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
 24669  0021DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24670  0021DE  6AF8               	clrf	tblptru,c
 24671  0021E0                     	endif
 24672  0021E0                     	if	0	;tblptru may be non-zero
 24673  0021E0                     	endif
 24674  0021E0  0008               	tblrd		*
 24675  0021E2  50F5               	movf	tablat,w,c
 24676  0021E4  EC35  F049         	call	_isdigit
 24677  0021E8  A0D8               	btfss	status,0,c
 24678  0021EA  D10D               	goto	l13490
 24679                           
 24680                           ;doprnt.c: 598: width = 0;
 24681  0021EC  0E00               	movlw	0
 24682  0021EE  0101               	movlb	1	; () banked
 24683  0021F0  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 24684  0021F2  0E00               	movlw	0
 24685  0021F4  6F19               	movwf	sprintf@width& (0+255),b
 24686  0021F6  D000               	goto	l13432
 24687  0021F8                     l13432:
 24688                           
 24689                           ;doprnt.c: 600: width *= 10;
 24690  0021F8  C119  F087         	movff	sprintf@width,___wmul@multiplier
 24691  0021FC  C11A  F088         	movff	sprintf@width+1,___wmul@multiplier+1
 24692  002200  0E00               	movlw	0
 24693  002202  0100               	movlb	0	; () banked
 24694  002204  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24695  002206  0E0A               	movlw	10
 24696  002208  6F89               	movwf	___wmul@multiplicand& (0+255),b
 24697  00220A  ECCD  F048         	call	___wmul	;wreg free
 24698  00220E  C087  F119         	movff	?___wmul,sprintf@width
 24699  002212  C088  F11A         	movff	?___wmul+1,sprintf@width+1
 24700                           
 24701                           ;doprnt.c: 601: width += *f++ - '0';
 24702  002216  0ED0               	movlw	208
 24703  002218  0100               	movlb	0	; () banked
 24704  00221A  6FD5               	movwf	??_sprintf& (0+255),b
 24705  00221C  0EFF               	movlw	255
 24706  00221E  0100               	movlb	0	; () banked
 24707  002220  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 24708  002222  C0C9  FFF6         	movff	sprintf@f,tblptrl
 24709  002226  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
 24710  00222A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24711  00222A  6AF8               	clrf	tblptru,c
 24712  00222C                     	endif
 24713  00222C                     	if	0	;tblptru may be non-zero
 24714  00222C                     	endif
 24715  00222C  0008               	tblrd		*
 24716  00222E  50F5               	movf	tablat,w,c
 24717  002230  0100               	movlb	0	; () banked
 24718  002232  6FD7               	movwf	(??_sprintf+2)& (0+255),b
 24719  002234  6BD8               	clrf	(??_sprintf+3)& (0+255),b
 24720  002236  0100               	movlb	0	; () banked
 24721  002238  51D5               	movf	??_sprintf& (0+255),w,b
 24722  00223A  0100               	movlb	0	; () banked
 24723  00223C  27D7               	addwf	(??_sprintf+2)& (0+255),f,b
 24724  00223E  0100               	movlb	0	; () banked
 24725  002240  51D6               	movf	(??_sprintf+1)& (0+255),w,b
 24726  002242  0100               	movlb	0	; () banked
 24727  002244  23D8               	addwfc	(??_sprintf+3)& (0+255),f,b
 24728  002246  0100               	movlb	0	; () banked
 24729  002248  51D7               	movf	(??_sprintf+2)& (0+255),w,b
 24730  00224A  0101               	movlb	1	; () banked
 24731  00224C  2719               	addwf	sprintf@width& (0+255),f,b
 24732  00224E  0100               	movlb	0	; () banked
 24733  002250  51D8               	movf	(??_sprintf+3)& (0+255),w,b
 24734  002252  0101               	movlb	1	; () banked
 24735  002254  231A               	addwfc	(sprintf@width+1)& (0+255),f,b
 24736                           
 24737                           ; BSR set to: 1
 24738  002256  0100               	movlb	0	; () banked
 24739  002258  4BC9               	infsnz	sprintf@f& (0+255),f,b
 24740  00225A  2BCA               	incf	(sprintf@f+1)& (0+255),f,b
 24741                           
 24742                           ; BSR set to: 0
 24743                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 24744  00225C  C0C9  FFF6         	movff	sprintf@f,tblptrl
 24745  002260  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
 24746  002264                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24747  002264  6AF8               	clrf	tblptru,c
 24748  002266                     	endif
 24749  002266                     	if	0	;tblptru may be non-zero
 24750  002266                     	endif
 24751  002266  0008               	tblrd		*
 24752  002268  50F5               	movf	tablat,w,c
 24753  00226A  EC35  F049         	call	_isdigit
 24754  00226E  A0D8               	btfss	status,0,c
 24755  002270  D0CA               	goto	l13490
 24756  002272  D7C2               	goto	l13432
 24757                           
 24758                           ;doprnt.c: 635: switch(c = *f++) {
 24759                           
 24760                           ;doprnt.c: 608: }
 24761                           ;doprnt.c: 633: loop:
 24762  002274  D0C8               	goto	l13490
 24763                           
 24764                           ;doprnt.c: 638: goto alldone;
 24765                           
 24766                           ;doprnt.c: 637: case 0:
 24767  002276  EF4F  F018         	goto	l13788
 24768  00227A                     l13440:
 24769                           
 24770                           ;doprnt.c: 643: flag |= 0x10;
 24771  00227A  0101               	movlb	1	; () banked
 24772  00227C  891B               	bsf	sprintf@flag& (0+255),4,b
 24773                           
 24774                           ;doprnt.c: 644: goto loop;
 24775  00227E  D0C3               	goto	l13490
 24776  002280                     l13442:
 24777                           
 24778                           ; BSR set to: 1
 24779                           ;doprnt.c: 663: flag |= 0x400;
 24780  002280  0101               	movlb	1	; () banked
 24781  002282  851C               	bsf	(sprintf@flag+1)& (0+255),2,b
 24782                           
 24783                           ; BSR set to: 1
 24784                           ;doprnt.c: 698: case 'i':
 24785                           ;doprnt.c: 699: break;
 24786                           
 24787                           ; BSR set to: 1
 24788                           
 24789                           ;doprnt.c: 697: case 'd':
 24790                           
 24791                           ;doprnt.c: 664: break;
 24792  002284  D0EA               	goto	l13492
 24793                           
 24794                           ; BSR set to: 1
 24795                           
 24796                           ;doprnt.c: 712: case 'X':
 24797  002286  D000               	goto	l13444
 24798  002288                     l13444:
 24799                           
 24800                           ; BSR set to: 1
 24801                           ;doprnt.c: 718: case 'x':
 24802                           ;doprnt.c: 721: flag |= 0x80;
 24803  002288  0101               	movlb	1	; () banked
 24804  00228A  8F1B               	bsf	sprintf@flag& (0+255),7,b
 24805                           
 24806                           ;doprnt.c: 723: break;
 24807  00228C  D0E6               	goto	l13492
 24808  00228E                     l13446:
 24809                           
 24810                           ; BSR set to: 1
 24811                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 24812  00228E  C108  FFD9         	movff	sprintf@ap,fsr2l
 24813  002292  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 24814  002296  CFDE F104          	movff	postinc2,sprintf@cp
 24815  00229A  CFDD F105          	movff	postdec2,sprintf@cp+1
 24816                           
 24817                           ; BSR set to: 1
 24818  00229E  0E02               	movlw	2
 24819  0022A0  0101               	movlb	1	; () banked
 24820  0022A2  2708               	addwf	sprintf@ap& (0+255),f,b
 24821  0022A4  0E00               	movlw	0
 24822  0022A6  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 24823                           
 24824                           ; BSR set to: 1
 24825                           ;doprnt.c: 740: if(!cp)
 24826  0022A8  0101               	movlb	1	; () banked
 24827  0022AA  5104               	movf	sprintf@cp& (0+255),w,b
 24828  0022AC  0101               	movlb	1	; () banked
 24829  0022AE  1105               	iorwf	(sprintf@cp+1)& (0+255),w,b
 24830  0022B0  A4D8               	btfss	status,2,c
 24831  0022B2  D007               	goto	l13454
 24832                           
 24833                           ; BSR set to: 1
 24834                           ;doprnt.c: 741: cp = "(null)";
 24835  0022B4  0EAB               	movlw	low STR_148
 24836  0022B6  0101               	movlb	1	; () banked
 24837  0022B8  6F04               	movwf	sprintf@cp& (0+255),b
 24838  0022BA  0EFF               	movlw	high STR_148
 24839  0022BC  0101               	movlb	1	; () banked
 24840  0022BE  6F05               	movwf	(sprintf@cp+1)& (0+255),b
 24841  0022C0  D000               	goto	l13454
 24842  0022C2                     l13454:
 24843                           
 24844                           ; BSR set to: 1
 24845                           ;doprnt.c: 745: len = 0;
 24846  0022C2  0E00               	movlw	0
 24847  0022C4  0101               	movlb	1	; () banked
 24848  0022C6  6F07               	movwf	(sprintf@len+1)& (0+255),b
 24849  0022C8  0E00               	movlw	0
 24850  0022CA  6F06               	movwf	sprintf@len& (0+255),b
 24851                           
 24852                           ;doprnt.c: 746: while(cp[len])
 24853  0022CC  D004               	goto	l13458
 24854  0022CE                     l13456:
 24855                           
 24856                           ;doprnt.c: 747: len++;
 24857  0022CE  0101               	movlb	1	; () banked
 24858  0022D0  4B06               	infsnz	sprintf@len& (0+255),f,b
 24859  0022D2  2B07               	incf	(sprintf@len+1)& (0+255),f,b
 24860  0022D4  D000               	goto	l13458
 24861  0022D6                     l13458:
 24862                           
 24863                           ; BSR set to: 1
 24864  0022D6  0101               	movlb	1	; () banked
 24865  0022D8  5106               	movf	sprintf@len& (0+255),w,b
 24866  0022DA  0101               	movlb	1	; () banked
 24867  0022DC  2504               	addwf	sprintf@cp& (0+255),w,b
 24868  0022DE  0100               	movlb	0	; () banked
 24869  0022E0  6FD5               	movwf	??_sprintf& (0+255),b
 24870  0022E2  0101               	movlb	1	; () banked
 24871  0022E4  5107               	movf	(sprintf@len+1)& (0+255),w,b
 24872  0022E6  0101               	movlb	1	; () banked
 24873  0022E8  2105               	addwfc	(sprintf@cp+1)& (0+255),w,b
 24874  0022EA  0100               	movlb	0	; () banked
 24875  0022EC  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 24876  0022EE  C0D5  FFF6         	movff	??_sprintf,tblptrl
 24877  0022F2  C0D6  FFF7         	movff	??_sprintf+1,tblptrh
 24878  0022F6  0E00               	movlw	low (__mediumconst shr (0+16))
 24879  0022F8  6EF8               	movwf	tblptru,c
 24880  0022FA  0E0F               	movlw	(high __ramtop+-1)
 24881  0022FC  64F7               	cpfsgt	tblptrh,c
 24882  0022FE  D003               	bra	u16237
 24883  002300  0008               	tblrd		*
 24884  002302  50F5               	movf	tablat,w,c
 24885  002304  D005               	bra	u16230
 24886  002306                     u16237:
 24887  002306  CFF6 FFE9          	movff	tblptrl,fsr0l
 24888  00230A  CFF7 FFEA          	movff	tblptrh,fsr0h
 24889  00230E  50EF               	movf	indf0,w,c
 24890  002310                     u16230:
 24891  002310  0900               	iorlw	0
 24892  002312  B4D8               	btfsc	status,2,c
 24893  002314  D002               	goto	l13460
 24894  002316  D7DB               	goto	l13456
 24895  002318  D000               	goto	l13460
 24896  00231A                     l13460:
 24897                           
 24898                           ;doprnt.c: 757: if(width > len)
 24899  00231A  0101               	movlb	1	; () banked
 24900  00231C  5119               	movf	sprintf@width& (0+255),w,b
 24901  00231E  0101               	movlb	1	; () banked
 24902  002320  5D06               	subwf	sprintf@len& (0+255),w,b
 24903  002322  0101               	movlb	1	; () banked
 24904  002324  511A               	movf	(sprintf@width+1)& (0+255),w,b
 24905  002326  0101               	movlb	1	; () banked
 24906  002328  5907               	subwfb	(sprintf@len+1)& (0+255),w,b
 24907  00232A  B0D8               	btfsc	status,0,c
 24908  00232C  D009               	goto	l13464
 24909                           
 24910                           ; BSR set to: 1
 24911                           ;doprnt.c: 758: width -= len;
 24912  00232E  0101               	movlb	1	; () banked
 24913  002330  5106               	movf	sprintf@len& (0+255),w,b
 24914  002332  0101               	movlb	1	; () banked
 24915  002334  5F19               	subwf	sprintf@width& (0+255),f,b
 24916  002336  0101               	movlb	1	; () banked
 24917  002338  5107               	movf	(sprintf@len+1)& (0+255),w,b
 24918  00233A  0101               	movlb	1	; () banked
 24919  00233C  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 24920  00233E  D010               	goto	l13470
 24921  002340                     l13464:
 24922                           
 24923                           ; BSR set to: 1
 24924                           ;doprnt.c: 759: else
 24925                           ;doprnt.c: 760: width = 0;
 24926  002340  0E00               	movlw	0
 24927  002342  0101               	movlb	1	; () banked
 24928  002344  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 24929  002346  0E00               	movlw	0
 24930  002348  6F19               	movwf	sprintf@width& (0+255),b
 24931                           
 24932                           ; BSR set to: 1
 24933                           ;doprnt.c: 764: while(width--)
 24934  00234A  D00A               	goto	l13470
 24935  00234C                     l13466:
 24936                           
 24937                           ; BSR set to: 1
 24938                           ;doprnt.c: 765: ((*sp++ = (' ')));
 24939  00234C  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 24940  002350  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 24941  002354  0E20               	movlw	32
 24942  002356  6EDF               	movwf	indf2,c
 24943                           
 24944                           ; BSR set to: 1
 24945  002358  0100               	movlb	0	; () banked
 24946  00235A  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 24947  00235C  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 24948  00235E  D000               	goto	l13470
 24949  002360                     l13470:
 24950  002360  0101               	movlb	1	; () banked
 24951  002362  0719               	decf	sprintf@width& (0+255),f,b
 24952  002364  A0D8               	btfss	status,0,c
 24953  002366  071A               	decf	(sprintf@width+1)& (0+255),f,b
 24954  002368  0101               	movlb	1	; () banked
 24955  00236A  2919               	incf	sprintf@width& (0+255),w,b
 24956  00236C  E1EF               	bnz	l13466
 24957  00236E  0101               	movlb	1	; () banked
 24958  002370  291A               	incf	(sprintf@width+1)& (0+255),w,b
 24959  002372  B4D8               	btfsc	status,2,c
 24960  002374  D01F               	goto	l13478
 24961  002376  D7EA               	goto	l13466
 24962                           
 24963                           ; BSR set to: 1
 24964                           ;doprnt.c: 767: while(len--)
 24965  002378  D01D               	goto	l13478
 24966  00237A                     l13472:
 24967                           
 24968                           ; BSR set to: 1
 24969                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 24970  00237A  C104  FFF6         	movff	sprintf@cp,tblptrl
 24971  00237E  C105  FFF7         	movff	sprintf@cp+1,tblptrh
 24972  002382  0E00               	movlw	low (__mediumconst shr (0+16))
 24973  002384  6EF8               	movwf	tblptru,c
 24974  002386  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 24975  00238A  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 24976  00238E  0E0F               	movlw	(high __ramtop+-1)
 24977  002390  64F7               	cpfsgt	tblptrh,c
 24978  002392  D003               	bra	u16277
 24979  002394  0008               	tblrd		*
 24980  002396  50F5               	movf	tablat,w,c
 24981  002398  D005               	bra	u16270
 24982  00239A                     u16277:
 24983  00239A  CFF6 FFE9          	movff	tblptrl,fsr0l
 24984  00239E  CFF7 FFEA          	movff	tblptrh,fsr0h
 24985  0023A2  50EF               	movf	indf0,w,c
 24986  0023A4                     u16270:
 24987  0023A4  6EDF               	movwf	indf2,c
 24988  0023A6  0101               	movlb	1	; () banked
 24989  0023A8  4B04               	infsnz	sprintf@cp& (0+255),f,b
 24990  0023AA  2B05               	incf	(sprintf@cp+1)& (0+255),f,b
 24991                           
 24992                           ; BSR set to: 1
 24993  0023AC  0100               	movlb	0	; () banked
 24994  0023AE  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 24995  0023B0  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 24996  0023B2  D000               	goto	l13478
 24997  0023B4                     l13478:
 24998  0023B4  0101               	movlb	1	; () banked
 24999  0023B6  0706               	decf	sprintf@len& (0+255),f,b
 25000  0023B8  A0D8               	btfss	status,0,c
 25001  0023BA  0707               	decf	(sprintf@len+1)& (0+255),f,b
 25002  0023BC  0101               	movlb	1	; () banked
 25003  0023BE  2906               	incf	sprintf@len& (0+255),w,b
 25004  0023C0  E1DC               	bnz	l13472
 25005  0023C2  0101               	movlb	1	; () banked
 25006  0023C4  2907               	incf	(sprintf@len+1)& (0+255),w,b
 25007  0023C6  B4D8               	btfsc	status,2,c
 25008  0023C8  EF3D  F018         	goto	l13786
 25009  0023CC  D7D6               	goto	l13472
 25010                           
 25011                           ; BSR set to: 1
 25012                           ;doprnt.c: 774: continue;
 25013  0023CE  EF3D  F018         	goto	l13786
 25014  0023D2                     l13480:
 25015                           
 25016                           ; BSR set to: 1
 25017                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 25018  0023D2  C108  FFD9         	movff	sprintf@ap,fsr2l
 25019  0023D6  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 25020  0023DA  50DF               	movf	indf2,w,c
 25021  0023DC  0101               	movlb	1	; () banked
 25022  0023DE  6F1D               	movwf	sprintf@c& (0+255),b
 25023                           
 25024                           ; BSR set to: 1
 25025  0023E0  0E02               	movlw	2
 25026  0023E2  0101               	movlb	1	; () banked
 25027  0023E4  2708               	addwf	sprintf@ap& (0+255),f,b
 25028  0023E6  0E00               	movlw	0
 25029  0023E8  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 25030  0023EA  D000               	goto	l13484
 25031  0023EC                     l13484:
 25032                           
 25033                           ; BSR set to: 1
 25034                           ;doprnt.c: 805: cp = (char *)&c;
 25035  0023EC  0E1D               	movlw	low sprintf@c
 25036  0023EE  0101               	movlb	1	; () banked
 25037  0023F0  6F04               	movwf	sprintf@cp& (0+255),b
 25038  0023F2  0E01               	movlw	high sprintf@c
 25039  0023F4  0101               	movlb	1	; () banked
 25040  0023F6  6F05               	movwf	(sprintf@cp+1)& (0+255),b
 25041                           
 25042                           ; BSR set to: 1
 25043                           ;doprnt.c: 806: len = 1;
 25044  0023F8  0E00               	movlw	0
 25045  0023FA  0101               	movlb	1	; () banked
 25046  0023FC  6F07               	movwf	(sprintf@len+1)& (0+255),b
 25047  0023FE  0E01               	movlw	1
 25048  002400  6F06               	movwf	sprintf@len& (0+255),b
 25049                           
 25050                           ;doprnt.c: 807: goto dostring;
 25051  002402  D78B               	goto	l13460
 25052                           
 25053                           ; BSR set to: 1
 25054                           ;doprnt.c: 822: }
 25055  002404  D02A               	goto	l13492
 25056  002406                     l13490:
 25057  002406  C0C9  FFF6         	movff	sprintf@f,tblptrl
 25058  00240A  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
 25059  00240E  0100               	movlb	0	; () banked
 25060  002410  4BC9               	infsnz	sprintf@f& (0+255),f,b
 25061  002412  2BCA               	incf	(sprintf@f+1)& (0+255),f,b
 25062  002414                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25063  002414  6AF8               	clrf	tblptru,c
 25064  002416                     	endif
 25065  002416                     	if	0	;tblptru may be non-zero
 25066  002416                     	endif
 25067  002416  0008               	tblrd		*
 25068  002418  CFF5 F11D          	movff	tablat,sprintf@c
 25069  00241C  0101               	movlb	1	; () banked
 25070  00241E  511D               	movf	sprintf@c& (0+255),w,b
 25071                           
 25072                           ; Switch size 1, requested type "space"
 25073                           ; Number of cases is 9, Range of values is 0 to 120
 25074                           ; switch strategies available:
 25075                           ; Name         Instructions Cycles
 25076                           ; simple_byte           28    15 (average)
 25077                           ;	Chosen strategy is simple_byte
 25078  002420  0A00               	xorlw	0	; case 0
 25079  002422  B4D8               	btfsc	status,2,c
 25080  002424  EF4F  F018         	goto	l13788
 25081  002428  0A58               	xorlw	88	; case 88
 25082  00242A  B4D8               	btfsc	status,2,c
 25083  00242C  D72D               	goto	l13444
 25084  00242E  0A3B               	xorlw	59	; case 99
 25085  002430  B4D8               	btfsc	status,2,c
 25086  002432  D7CF               	goto	l13480
 25087  002434  0A07               	xorlw	7	; case 100
 25088  002436  B4D8               	btfsc	status,2,c
 25089  002438  D010               	goto	l13492
 25090  00243A  0A02               	xorlw	2	; case 102
 25091  00243C  B4D8               	btfsc	status,2,c
 25092  00243E  D720               	goto	l13442
 25093  002440  0A0F               	xorlw	15	; case 105
 25094  002442  B4D8               	btfsc	status,2,c
 25095  002444  D00A               	goto	l13492
 25096  002446  0A05               	xorlw	5	; case 108
 25097  002448  B4D8               	btfsc	status,2,c
 25098  00244A  D717               	goto	l13440
 25099  00244C  0A1F               	xorlw	31	; case 115
 25100  00244E  B4D8               	btfsc	status,2,c
 25101  002450  D71E               	goto	l13446
 25102  002452  0A0B               	xorlw	11	; case 120
 25103  002454  B4D8               	btfsc	status,2,c
 25104  002456  D718               	goto	l13444
 25105  002458  D7C9               	goto	l13484
 25106  00245A                     l13492:
 25107                           
 25108                           ; BSR set to: 1
 25109                           ;doprnt.c: 825: if(flag & (0x700)) {
 25110  00245A  0E07               	movlw	7
 25111  00245C  0101               	movlb	1	; () banked
 25112  00245E  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 25113  002460  B4D8               	btfsc	status,2,c
 25114  002462  D3ED               	goto	l2235
 25115                           
 25116                           ; BSR set to: 1
 25117                           ;doprnt.c: 829: prec = 6;
 25118  002464  0E00               	movlw	0
 25119  002466  0101               	movlb	1	; () banked
 25120  002468  6F0B               	movwf	(sprintf@prec+1)& (0+255),b
 25121  00246A  0E06               	movlw	6
 25122  00246C  6F0A               	movwf	sprintf@prec& (0+255),b
 25123                           
 25124                           ; BSR set to: 1
 25125                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 25126  00246E  C108  FFD9         	movff	sprintf@ap,fsr2l
 25127  002472  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 25128  002476  CFDE F116          	movff	postinc2,sprintf@fval
 25129  00247A  CFDE F117          	movff	postinc2,sprintf@fval+1
 25130  00247E  CFDD F118          	movff	postdec2,sprintf@fval+2
 25131                           
 25132                           ; BSR set to: 1
 25133  002482  0E03               	movlw	3
 25134  002484  0101               	movlb	1	; () banked
 25135  002486  2708               	addwf	sprintf@ap& (0+255),f,b
 25136  002488  0E00               	movlw	0
 25137  00248A  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 25138                           
 25139                           ; BSR set to: 1
 25140                           ;doprnt.c: 831: if(fval < 0.0) {
 25141  00248C  0101               	movlb	1	; () banked
 25142  00248E  AF18               	btfss	(sprintf@fval+2)& (0+255),7,b
 25143  002490  D012               	goto	l13506
 25144                           
 25145                           ; BSR set to: 1
 25146                           ;doprnt.c: 832: fval = -fval;
 25147  002492  C116  F079         	movff	sprintf@fval,___ftneg@f1
 25148  002496  C117  F07A         	movff	sprintf@fval+1,___ftneg@f1+1
 25149  00249A  C118  F07B         	movff	sprintf@fval+2,___ftneg@f1+2
 25150  00249E  EC1D  F049         	call	___ftneg	;wreg free
 25151  0024A2  C079  F116         	movff	?___ftneg,sprintf@fval
 25152  0024A6  C07A  F117         	movff	?___ftneg+1,sprintf@fval+1
 25153  0024AA  C07B  F118         	movff	?___ftneg+2,sprintf@fval+2
 25154                           
 25155                           ;doprnt.c: 833: flag |= 0x03;
 25156  0024AE  0E03               	movlw	3
 25157  0024B0  0101               	movlb	1	; () banked
 25158  0024B2  131B               	iorwf	sprintf@flag& (0+255),f,b
 25159  0024B4  D000               	goto	l13506
 25160  0024B6                     l13506:
 25161                           
 25162                           ; BSR set to: 1
 25163                           ;doprnt.c: 834: }
 25164                           ;doprnt.c: 835: exp = 0;
 25165  0024B6  0E00               	movlw	0
 25166  0024B8  0101               	movlb	1	; () banked
 25167  0024BA  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 25168  0024BC  0E00               	movlw	0
 25169  0024BE  6F10               	movwf	sprintf@exp& (0+255),b
 25170                           
 25171                           ; BSR set to: 1
 25172                           ;doprnt.c: 836: if( fval!=0) {
 25173  0024C0  0101               	movlb	1	; () banked
 25174  0024C2  5116               	movf	sprintf@fval& (0+255),w,b
 25175  0024C4  0101               	movlb	1	; () banked
 25176  0024C6  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
 25177  0024C8  0101               	movlb	1	; () banked
 25178  0024CA  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
 25179  0024CC  B4D8               	btfsc	status,2,c
 25180  0024CE  D09D               	goto	l13534
 25181                           
 25182                           ; BSR set to: 1
 25183                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 25184  0024D0  0E82               	movlw	130
 25185  0024D2  0100               	movlb	0	; () banked
 25186  0024D4  6FD5               	movwf	??_sprintf& (0+255),b
 25187  0024D6  0EFF               	movlw	255
 25188  0024D8  0100               	movlb	0	; () banked
 25189  0024DA  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 25190  0024DC  C116  F0D7         	movff	sprintf@fval,??_sprintf+2
 25191  0024E0  C117  F0D8         	movff	sprintf@fval+1,??_sprintf+3
 25192  0024E4  C118  F0D9         	movff	sprintf@fval+2,??_sprintf+4
 25193  0024E8  C119  F0DA         	movff	sprintf@fval+3,??_sprintf+5
 25194  0024EC  0E10               	movlw	16
 25195  0024EE  D006               	goto	u16320
 25196  0024F0                     u16325:
 25197  0024F0  0100               	movlb	0	; () banked
 25198  0024F2  90D8               	bcf	status,0,c
 25199  0024F4  33DA               	rrcf	(??_sprintf+5)& (0+255),f,b
 25200  0024F6  33D9               	rrcf	(??_sprintf+4)& (0+255),f,b
 25201  0024F8  33D8               	rrcf	(??_sprintf+3)& (0+255),f,b
 25202  0024FA  33D7               	rrcf	(??_sprintf+2)& (0+255),f,b
 25203  0024FC                     u16320:
 25204  0024FC  2EE8               	decfsz	wreg,f,c
 25205  0024FE  D7F8               	goto	u16325
 25206  002500  0100               	movlb	0	; () banked
 25207  002502  51D7               	movf	(??_sprintf+2)& (0+255),w,b
 25208  002504  0100               	movlb	0	; () banked
 25209  002506  25D5               	addwf	??_sprintf& (0+255),w,b
 25210  002508  0101               	movlb	1	; () banked
 25211  00250A  6F10               	movwf	sprintf@exp& (0+255),b
 25212  00250C  0E00               	movlw	0
 25213  00250E  0100               	movlb	0	; () banked
 25214  002510  21D6               	addwfc	(??_sprintf+1)& (0+255),w,b
 25215  002512  0101               	movlb	1	; () banked
 25216  002514  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 25217                           
 25218                           ; BSR set to: 1
 25219                           ;doprnt.c: 838: exp--;
 25220  002516  0101               	movlb	1	; () banked
 25221  002518  0710               	decf	sprintf@exp& (0+255),f,b
 25222  00251A  A0D8               	btfss	status,0,c
 25223  00251C  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 25224                           
 25225                           ; BSR set to: 1
 25226                           ;doprnt.c: 839: exp *= 3;
 25227  00251E  C110  F087         	movff	sprintf@exp,___wmul@multiplier
 25228  002522  C111  F088         	movff	sprintf@exp+1,___wmul@multiplier+1
 25229  002526  0E00               	movlw	0
 25230  002528  0100               	movlb	0	; () banked
 25231  00252A  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 25232  00252C  0E03               	movlw	3
 25233  00252E  6F89               	movwf	___wmul@multiplicand& (0+255),b
 25234  002530  ECCD  F048         	call	___wmul	;wreg free
 25235  002534  C087  F110         	movff	?___wmul,sprintf@exp
 25236  002538  C088  F111         	movff	?___wmul+1,sprintf@exp+1
 25237                           
 25238                           ;doprnt.c: 840: exp /= 10;
 25239  00253C  C110  F07F         	movff	sprintf@exp,___awdiv@dividend
 25240  002540  C111  F080         	movff	sprintf@exp+1,___awdiv@dividend+1
 25241  002544  0E00               	movlw	0
 25242  002546  0100               	movlb	0	; () banked
 25243  002548  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 25244  00254A  0E0A               	movlw	10
 25245  00254C  6F81               	movwf	___awdiv@divisor& (0+255),b
 25246  00254E  EC1B  F03E         	call	___awdiv	;wreg free
 25247  002552  C07F  F110         	movff	?___awdiv,sprintf@exp
 25248  002556  C080  F111         	movff	?___awdiv+1,sprintf@exp+1
 25249                           
 25250                           ;doprnt.c: 841: if(exp < 0)
 25251  00255A  0101               	movlb	1	; () banked
 25252  00255C  AF11               	btfss	(sprintf@exp+1)& (0+255),7,b
 25253  00255E  D005               	goto	l13522
 25254                           
 25255                           ; BSR set to: 1
 25256                           ;doprnt.c: 842: exp--;
 25257  002560  0101               	movlb	1	; () banked
 25258  002562  0710               	decf	sprintf@exp& (0+255),f,b
 25259  002564  A0D8               	btfss	status,0,c
 25260  002566  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 25261  002568  D000               	goto	l13522
 25262  00256A                     l13522:
 25263                           
 25264                           ; BSR set to: 1
 25265                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 25266  00256A  0101               	movlb	1	; () banked
 25267  00256C  5110               	movf	sprintf@exp& (0+255),w,b
 25268  00256E  0800               	sublw	0
 25269  002570  EC6A  F021         	call	_scale
 25270  002574  C0A2  F10C         	movff	?_scale,sprintf@tmpval
 25271  002578  C0A3  F10D         	movff	?_scale+1,sprintf@tmpval+1
 25272  00257C  C0A4  F10E         	movff	?_scale+2,sprintf@tmpval+2
 25273                           
 25274                           ;doprnt.c: 847: tmpval.integ *= fval;
 25275  002580  C10C  F093         	movff	sprintf@tmpval,___ftmul@f1
 25276  002584  C10D  F094         	movff	sprintf@tmpval+1,___ftmul@f1+1
 25277  002588  C10E  F095         	movff	sprintf@tmpval+2,___ftmul@f1+2
 25278  00258C  C116  F096         	movff	sprintf@fval,___ftmul@f2
 25279  002590  C117  F097         	movff	sprintf@fval+1,___ftmul@f2+1
 25280  002594  C118  F098         	movff	sprintf@fval+2,___ftmul@f2+2
 25281  002598  EC17  F037         	call	___ftmul	;wreg free
 25282  00259C  C093  F10C         	movff	?___ftmul,sprintf@tmpval
 25283  0025A0  C094  F10D         	movff	?___ftmul+1,sprintf@tmpval+1
 25284  0025A4  C095  F10E         	movff	?___ftmul+2,sprintf@tmpval+2
 25285                           
 25286                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 25287  0025A8  C10C  F079         	movff	sprintf@tmpval,___ftge@ff1
 25288  0025AC  C10D  F07A         	movff	sprintf@tmpval+1,___ftge@ff1+1
 25289  0025B0  C10E  F07B         	movff	sprintf@tmpval+2,___ftge@ff1+2
 25290  0025B4  0E00               	movlw	0
 25291  0025B6  0100               	movlb	0	; () banked
 25292  0025B8  6F7C               	movwf	___ftge@ff2& (0+255),b
 25293  0025BA  0E80               	movlw	128
 25294  0025BC  0100               	movlb	0	; () banked
 25295  0025BE  6F7D               	movwf	(___ftge@ff2+1)& (0+255),b
 25296  0025C0  0E3F               	movlw	63
 25297  0025C2  0100               	movlb	0	; () banked
 25298  0025C4  6F7E               	movwf	(___ftge@ff2+2)& (0+255),b
 25299  0025C6  EC83  F03E         	call	___ftge	;wreg free
 25300  0025CA  0100               	movlb	0	; () banked
 25301  0025CC  B0D8               	btfsc	status,0,c
 25302  0025CE  D005               	goto	l13530
 25303                           
 25304                           ; BSR set to: 0
 25305                           ;doprnt.c: 849: exp--;
 25306  0025D0  0101               	movlb	1	; () banked
 25307  0025D2  0710               	decf	sprintf@exp& (0+255),f,b
 25308  0025D4  A0D8               	btfss	status,0,c
 25309  0025D6  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 25310  0025D8  D018               	goto	l13534
 25311  0025DA                     l13530:
 25312                           
 25313                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 25314  0025DA  C10C  F079         	movff	sprintf@tmpval,___ftge@ff1
 25315  0025DE  C10D  F07A         	movff	sprintf@tmpval+1,___ftge@ff1+1
 25316  0025E2  C10E  F07B         	movff	sprintf@tmpval+2,___ftge@ff1+2
 25317  0025E6  0E00               	movlw	0
 25318  0025E8  0100               	movlb	0	; () banked
 25319  0025EA  6F7C               	movwf	___ftge@ff2& (0+255),b
 25320  0025EC  0E20               	movlw	32
 25321  0025EE  0100               	movlb	0	; () banked
 25322  0025F0  6F7D               	movwf	(___ftge@ff2+1)& (0+255),b
 25323  0025F2  0E41               	movlw	65
 25324  0025F4  0100               	movlb	0	; () banked
 25325  0025F6  6F7E               	movwf	(___ftge@ff2+2)& (0+255),b
 25326  0025F8  EC83  F03E         	call	___ftge	;wreg free
 25327  0025FC  0100               	movlb	0	; () banked
 25328  0025FE  A0D8               	btfss	status,0,c
 25329  002600  D004               	goto	l13534
 25330                           
 25331                           ; BSR set to: 0
 25332                           ;doprnt.c: 851: exp++;
 25333  002602  0101               	movlb	1	; () banked
 25334  002604  4B10               	infsnz	sprintf@exp& (0+255),f,b
 25335  002606  2B11               	incf	(sprintf@exp+1)& (0+255),f,b
 25336                           
 25337                           ; BSR set to: 1
 25338                           
 25339                           ; BSR set to: 1
 25340  002608  D000               	goto	l13534
 25341  00260A                     l13534:
 25342                           
 25343                           ;doprnt.c: 852: }
 25344                           ;doprnt.c: 1112: if(prec <= 12)
 25345  00260A  0101               	movlb	1	; () banked
 25346  00260C  BF0B               	btfsc	(sprintf@prec+1)& (0+255),7,b
 25347  00260E  D008               	goto	l13536
 25348  002610  0101               	movlb	1	; () banked
 25349  002612  510B               	movf	(sprintf@prec+1)& (0+255),w,b
 25350  002614  E11E               	bnz	l13538
 25351  002616  0E0D               	movlw	13
 25352  002618  0101               	movlb	1	; () banked
 25353  00261A  5D0A               	subwf	sprintf@prec& (0+255),w,b
 25354  00261C  B0D8               	btfsc	status,0,c
 25355  00261E  D019               	goto	l13538
 25356  002620                     l13536:
 25357                           
 25358                           ; BSR set to: 1
 25359                           ;doprnt.c: 1113: fval += fround(prec);
 25360  002620  C116  F0AC         	movff	sprintf@fval,___ftadd@f1
 25361  002624  C117  F0AD         	movff	sprintf@fval+1,___ftadd@f1+1
 25362  002628  C118  F0AE         	movff	sprintf@fval+2,___ftadd@f1+2
 25363  00262C  0101               	movlb	1	; () banked
 25364  00262E  510A               	movf	sprintf@prec& (0+255),w,b
 25365  002630  EC14  F02C         	call	_fround
 25366  002634  C0A2  F0AF         	movff	?_fround,___ftadd@f2
 25367  002638  C0A3  F0B0         	movff	?_fround+1,___ftadd@f2+1
 25368  00263C  C0A4  F0B1         	movff	?_fround+2,___ftadd@f2+2
 25369  002640  EC80  F02D         	call	___ftadd	;wreg free
 25370  002644  C0AC  F116         	movff	?___ftadd,sprintf@fval
 25371  002648  C0AD  F117         	movff	?___ftadd+1,sprintf@fval+1
 25372  00264C  C0AE  F118         	movff	?___ftadd+2,sprintf@fval+2
 25373  002650  D000               	goto	l13538
 25374  002652                     l13538:
 25375                           
 25376                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 25377  002652  0101               	movlb	1	; () banked
 25378  002654  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 25379  002656  D008               	goto	l13540
 25380  002658  0101               	movlb	1	; () banked
 25381  00265A  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 25382  00265C  E12C               	bnz	l13546
 25383  00265E  0E0A               	movlw	10
 25384  002660  0101               	movlb	1	; () banked
 25385  002662  5D10               	subwf	sprintf@exp& (0+255),w,b
 25386  002664  B0D8               	btfsc	status,0,c
 25387  002666  D027               	goto	l13546
 25388  002668                     l13540:
 25389                           
 25390                           ; BSR set to: 1
 25391  002668  0101               	movlb	1	; () banked
 25392  00266A  5116               	movf	sprintf@fval& (0+255),w,b
 25393  00266C  0101               	movlb	1	; () banked
 25394  00266E  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
 25395  002670  0101               	movlb	1	; () banked
 25396  002672  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
 25397  002674  B4D8               	btfsc	status,2,c
 25398  002676  D07F               	goto	l13560
 25399                           
 25400                           ; BSR set to: 1
 25401  002678  C116  F0B8         	movff	sprintf@fval,___fttol@f1
 25402  00267C  C117  F0B9         	movff	sprintf@fval+1,___fttol@f1+1
 25403  002680  C118  F0BA         	movff	sprintf@fval+2,___fttol@f1+2
 25404  002684  EC76  F038         	call	___fttol	;wreg free
 25405  002688  0100               	movlb	0	; () banked
 25406  00268A  51B8               	movf	?___fttol& (0+255),w,b
 25407  00268C  0100               	movlb	0	; () banked
 25408  00268E  11B9               	iorwf	(?___fttol+1)& (0+255),w,b
 25409  002690  0100               	movlb	0	; () banked
 25410  002692  11BA               	iorwf	(?___fttol+2)& (0+255),w,b
 25411  002694  0100               	movlb	0	; () banked
 25412  002696  11BB               	iorwf	(?___fttol+3)& (0+255),w,b
 25413  002698  A4D8               	btfss	status,2,c
 25414  00269A  D06D               	goto	l13560
 25415                           
 25416                           ; BSR set to: 0
 25417  00269C  0101               	movlb	1	; () banked
 25418  00269E  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 25419  0026A0  D06A               	goto	l13560
 25420  0026A2  0101               	movlb	1	; () banked
 25421  0026A4  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 25422  0026A6  E107               	bnz	l13546
 25423  0026A8  0E02               	movlw	2
 25424  0026AA  0101               	movlb	1	; () banked
 25425  0026AC  5D10               	subwf	sprintf@exp& (0+255),w,b
 25426  0026AE  B0D8               	btfsc	status,0,c
 25427  0026B0  D002               	goto	l13546
 25428  0026B2  D061               	goto	l13560
 25429  0026B4  D000               	goto	l13546
 25430  0026B6                     l13546:
 25431                           
 25432                           ; BSR set to: 1
 25433                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 25434  0026B6  C10C  F079         	movff	sprintf@tmpval,___ftge@ff1
 25435  0026BA  C10D  F07A         	movff	sprintf@tmpval+1,___ftge@ff1+1
 25436  0026BE  C10E  F07B         	movff	sprintf@tmpval+2,___ftge@ff1+2
 25437  0026C2  0E70               	movlw	112
 25438  0026C4  0100               	movlb	0	; () banked
 25439  0026C6  6F7C               	movwf	___ftge@ff2& (0+255),b
 25440  0026C8  0E89               	movlw	137
 25441  0026CA  0100               	movlb	0	; () banked
 25442  0026CC  6F7D               	movwf	(___ftge@ff2+1)& (0+255),b
 25443  0026CE  0E40               	movlw	64
 25444  0026D0  0100               	movlb	0	; () banked
 25445  0026D2  6F7E               	movwf	(___ftge@ff2+2)& (0+255),b
 25446  0026D4  EC83  F03E         	call	___ftge	;wreg free
 25447  0026D8  0100               	movlb	0	; () banked
 25448  0026DA  B0D8               	btfsc	status,0,c
 25449  0026DC  D003               	goto	l13550
 25450                           
 25451                           ; BSR set to: 0
 25452                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 25453  0026DE  0101               	movlb	1	; () banked
 25454  0026E0  0EF7               	movlw	247
 25455  0026E2  D002               	goto	L17
 25456  0026E4                     l13550:
 25457                           
 25458                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 25459  0026E4  0101               	movlb	1	; () banked
 25460  0026E6  0EF8               	movlw	248
 25461  0026E8                     L17:
 25462  0026E8  2710               	addwf	sprintf@exp& (0+255),f,b
 25463  0026EA  0EFF               	movlw	255
 25464  0026EC  2311               	addwfc	(sprintf@exp+1)& (0+255),f,b
 25465  0026EE  D000               	goto	l13552
 25466  0026F0                     l13552:
 25467                           
 25468                           ; BSR set to: 1
 25469                           ;doprnt.c: 1124: }
 25470                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 25471  0026F0  0101               	movlb	1	; () banked
 25472  0026F2  5110               	movf	sprintf@exp& (0+255),w,b
 25473  0026F4  EC6A  F021         	call	_scale
 25474  0026F8  C0A2  F10C         	movff	?_scale,sprintf@tmpval
 25475  0026FC  C0A3  F10D         	movff	?_scale+1,sprintf@tmpval+1
 25476  002700  C0A4  F10E         	movff	?_scale+2,sprintf@tmpval+2
 25477                           
 25478                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 25479  002704  D017               	goto	l13556
 25480  002706  C116  F079         	movff	sprintf@fval,__div_to_l_@f1
 25481  00270A  C117  F07A         	movff	sprintf@fval+1,__div_to_l_@f1+1
 25482  00270E  C118  F07B         	movff	sprintf@fval+2,__div_to_l_@f1+2
 25483  002712  C10C  F07C         	movff	sprintf@tmpval,__div_to_l_@f2
 25484  002716  C10D  F07D         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
 25485  00271A  C10E  F07E         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
 25486  00271E  ECCE  F034         	call	__div_to_l_	;wreg free
 25487  002722  C079  F112         	movff	?__div_to_l_,sprintf@val
 25488  002726  C07A  F113         	movff	?__div_to_l_+1,sprintf@val+1
 25489  00272A  C07B  F114         	movff	?__div_to_l_+2,sprintf@val+2
 25490  00272E  C07C  F115         	movff	?__div_to_l_+3,sprintf@val+3
 25491  002732  D017               	goto	l13558
 25492  002734                     l13556:
 25493  002734  C116  F079         	movff	sprintf@fval,__tdiv_to_l_@f1
 25494  002738  C117  F07A         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
 25495  00273C  C118  F07B         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
 25496  002740  C10C  F07C         	movff	sprintf@tmpval,__tdiv_to_l_@f2
 25497  002744  C10D  F07D         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
 25498  002748  C10E  F07E         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
 25499  00274C  ECFB  F033         	call	__tdiv_to_l_	;wreg free
 25500  002750  C079  F112         	movff	?__tdiv_to_l_,sprintf@val
 25501  002754  C07A  F113         	movff	?__tdiv_to_l_+1,sprintf@val+1
 25502  002758  C07B  F114         	movff	?__tdiv_to_l_+2,sprintf@val+2
 25503  00275C  C07C  F115         	movff	?__tdiv_to_l_+3,sprintf@val+3
 25504  002760  D000               	goto	l13558
 25505  002762                     l13558:
 25506                           
 25507                           ;doprnt.c: 1129: fval = 0.0;
 25508  002762  0E00               	movlw	0
 25509  002764  0101               	movlb	1	; () banked
 25510  002766  6F16               	movwf	sprintf@fval& (0+255),b
 25511  002768  0E00               	movlw	0
 25512  00276A  0101               	movlb	1	; () banked
 25513  00276C  6F17               	movwf	(sprintf@fval+1)& (0+255),b
 25514  00276E  0E00               	movlw	0
 25515  002770  0101               	movlb	1	; () banked
 25516  002772  6F18               	movwf	(sprintf@fval+2)& (0+255),b
 25517                           
 25518                           ;doprnt.c: 1130: } else {
 25519  002774  D034               	goto	l13564
 25520  002776                     l13560:
 25521                           
 25522                           ;doprnt.c: 1131: val = (unsigned long)fval;
 25523  002776  C116  F0B8         	movff	sprintf@fval,___fttol@f1
 25524  00277A  C117  F0B9         	movff	sprintf@fval+1,___fttol@f1+1
 25525  00277E  C118  F0BA         	movff	sprintf@fval+2,___fttol@f1+2
 25526  002782  EC76  F038         	call	___fttol	;wreg free
 25527  002786  C0B8  F112         	movff	?___fttol,sprintf@val
 25528  00278A  C0B9  F113         	movff	?___fttol+1,sprintf@val+1
 25529  00278E  C0BA  F114         	movff	?___fttol+2,sprintf@val+2
 25530  002792  C0BB  F115         	movff	?___fttol+3,sprintf@val+3
 25531                           
 25532                           ;doprnt.c: 1132: fval -= (double)val;
 25533  002796  C116  F0B8         	movff	sprintf@fval,___ftsub@f1
 25534  00279A  C117  F0B9         	movff	sprintf@fval+1,___ftsub@f1+1
 25535  00279E  C118  F0BA         	movff	sprintf@fval+2,___ftsub@f1+2
 25536  0027A2  C112  F081         	movff	sprintf@val,___lltoft@c
 25537  0027A6  C113  F082         	movff	sprintf@val+1,___lltoft@c+1
 25538  0027AA  C114  F083         	movff	sprintf@val+2,___lltoft@c+2
 25539  0027AE  C115  F084         	movff	sprintf@val+3,___lltoft@c+3
 25540  0027B2  EC72  F044         	call	___lltoft	;wreg free
 25541  0027B6  C081  F0BB         	movff	?___lltoft,___ftsub@f2
 25542  0027BA  C082  F0BC         	movff	?___lltoft+1,___ftsub@f2+1
 25543  0027BE  C083  F0BD         	movff	?___lltoft+2,___ftsub@f2+2
 25544  0027C2  EC9D  F047         	call	___ftsub	;wreg free
 25545  0027C6  C0B8  F116         	movff	?___ftsub,sprintf@fval
 25546  0027CA  C0B9  F117         	movff	?___ftsub+1,sprintf@fval+1
 25547  0027CE  C0BA  F118         	movff	?___ftsub+2,sprintf@fval+2
 25548                           
 25549                           ;doprnt.c: 1133: exp = 0;
 25550  0027D2  0E00               	movlw	0
 25551  0027D4  0101               	movlb	1	; () banked
 25552  0027D6  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 25553  0027D8  0E00               	movlw	0
 25554  0027DA  6F10               	movwf	sprintf@exp& (0+255),b
 25555  0027DC  D000               	goto	l13564
 25556  0027DE                     l13564:
 25557                           
 25558                           ; BSR set to: 1
 25559                           ;doprnt.c: 1134: }
 25560                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 25561  0027DE  0E01               	movlw	1
 25562  0027E0  0101               	movlb	1	; () banked
 25563  0027E2  6F1D               	movwf	sprintf@c& (0+255),b
 25564  0027E4                     l13566:
 25565                           
 25566                           ; BSR set to: 1
 25567  0027E4  0E0A               	movlw	10
 25568  0027E6  0101               	movlb	1	; () banked
 25569  0027E8  191D               	xorwf	sprintf@c& (0+255),w,b
 25570  0027EA  B4D8               	btfsc	status,2,c
 25571  0027EC  D025               	goto	l13578
 25572  0027EE  D001               	goto	l13570
 25573                           
 25574                           ; BSR set to: 1
 25575  0027F0  D023               	goto	l13578
 25576  0027F2                     l13570:
 25577                           
 25578                           ; BSR set to: 1
 25579                           ;doprnt.c: 1137: if(val < dpowers[c])
 25580  0027F2  0101               	movlb	1	; () banked
 25581  0027F4  511D               	movf	sprintf@c& (0+255),w,b
 25582  0027F6  0D04               	mullw	4
 25583  0027F8  0E61               	movlw	low _dpowers
 25584  0027FA  24F3               	addwf	prodl,w,c
 25585  0027FC  6EF6               	movwf	tblptrl,c
 25586  0027FE  0EF1               	movlw	high _dpowers
 25587  002800  20F4               	addwfc	prodh,w,c
 25588  002802  6EF7               	movwf	tblptrh,c
 25589  002804                     	if	1	;There are 3 active tblptr bytes
 25590  002804  6AF8               	clrf	tblptru,c
 25591  002806  0E00               	movlw	low (__mediumconst shr (0+16))
 25592  002808  22F8               	addwfc	tblptru,f,c
 25593  00280A                     	endif
 25594  00280A  0009               	tblrd		*+
 25595  00280C  50F5               	movf	tablat,w,c
 25596  00280E  0101               	movlb	1	; () banked
 25597  002810  5D12               	subwf	sprintf@val& (0+255),w,b
 25598  002812  0009               	tblrd		*+
 25599  002814  50F5               	movf	tablat,w,c
 25600  002816  0101               	movlb	1	; () banked
 25601  002818  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 25602  00281A  0009               	tblrd		*+
 25603  00281C  50F5               	movf	tablat,w,c
 25604  00281E  0101               	movlb	1	; () banked
 25605  002820  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 25606  002822  0009               	tblrd		*+
 25607  002824  50F5               	movf	tablat,w,c
 25608  002826  0101               	movlb	1	; () banked
 25609  002828  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 25610  00282A  A0D8               	btfss	status,0,c
 25611  00282C  D005               	goto	l13578
 25612  00282E  D001               	goto	l13574
 25613                           
 25614                           ; BSR set to: 1
 25615                           ;doprnt.c: 1138: break;
 25616  002830  D003               	goto	l13578
 25617  002832                     l13574:
 25618                           
 25619                           ; BSR set to: 1
 25620  002832  0101               	movlb	1	; () banked
 25621  002834  2B1D               	incf	sprintf@c& (0+255),f,b
 25622  002836  D7D6               	goto	l13566
 25623  002838                     l13578:
 25624                           
 25625                           ; BSR set to: 1
 25626                           ;doprnt.c: 1142: width -= prec + c + exp;
 25627  002838  C11D  F0D5         	movff	sprintf@c,??_sprintf
 25628  00283C  0100               	movlb	0	; () banked
 25629  00283E  6BD6               	clrf	(??_sprintf+1)& (0+255),b
 25630  002840  BFD5               	btfsc	??_sprintf& (0+255),7,b
 25631  002842  07D6               	decf	(??_sprintf+1)& (0+255),f,b
 25632  002844  0101               	movlb	1	; () banked
 25633  002846  510A               	movf	sprintf@prec& (0+255),w,b
 25634  002848  0100               	movlb	0	; () banked
 25635  00284A  27D5               	addwf	??_sprintf& (0+255),f,b
 25636  00284C  0101               	movlb	1	; () banked
 25637  00284E  510B               	movf	(sprintf@prec+1)& (0+255),w,b
 25638  002850  0100               	movlb	0	; () banked
 25639  002852  23D6               	addwfc	(??_sprintf+1)& (0+255),f,b
 25640  002854  0101               	movlb	1	; () banked
 25641  002856  5110               	movf	sprintf@exp& (0+255),w,b
 25642  002858  0100               	movlb	0	; () banked
 25643  00285A  27D5               	addwf	??_sprintf& (0+255),f,b
 25644  00285C  0101               	movlb	1	; () banked
 25645  00285E  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 25646  002860  0100               	movlb	0	; () banked
 25647  002862  23D6               	addwfc	(??_sprintf+1)& (0+255),f,b
 25648  002864  0100               	movlb	0	; () banked
 25649  002866  51D5               	movf	??_sprintf& (0+255),w,b
 25650  002868  0101               	movlb	1	; () banked
 25651  00286A  5F19               	subwf	sprintf@width& (0+255),f,b
 25652  00286C  0100               	movlb	0	; () banked
 25653  00286E  51D6               	movf	(??_sprintf+1)& (0+255),w,b
 25654  002870  0101               	movlb	1	; () banked
 25655  002872  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 25656                           
 25657                           ;doprnt.c: 1143: if(
 25658                           ;doprnt.c: 1147: prec)
 25659  002874  0101               	movlb	1	; () banked
 25660  002876  510A               	movf	sprintf@prec& (0+255),w,b
 25661  002878  0101               	movlb	1	; () banked
 25662  00287A  110B               	iorwf	(sprintf@prec+1)& (0+255),w,b
 25663  00287C  B4D8               	btfsc	status,2,c
 25664  00287E  D005               	goto	l13582
 25665                           
 25666                           ; BSR set to: 1
 25667                           ;doprnt.c: 1148: width--;
 25668  002880  0101               	movlb	1	; () banked
 25669  002882  0719               	decf	sprintf@width& (0+255),f,b
 25670  002884  A0D8               	btfss	status,0,c
 25671  002886  071A               	decf	(sprintf@width+1)& (0+255),f,b
 25672  002888  D000               	goto	l13582
 25673  00288A                     l13582:
 25674                           
 25675                           ; BSR set to: 1
 25676                           ;doprnt.c: 1149: if(flag & 0x03)
 25677  00288A  0E03               	movlw	3
 25678  00288C  0101               	movlb	1	; () banked
 25679  00288E  151B               	andwf	sprintf@flag& (0+255),w,b
 25680  002890  0100               	movlb	0	; () banked
 25681  002892  6FD5               	movwf	??_sprintf& (0+255),b
 25682  002894  0E00               	movlw	0
 25683  002896  0101               	movlb	1	; () banked
 25684  002898  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 25685  00289A  0100               	movlb	0	; () banked
 25686  00289C  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 25687  00289E  0100               	movlb	0	; () banked
 25688  0028A0  51D5               	movf	??_sprintf& (0+255),w,b
 25689  0028A2  0100               	movlb	0	; () banked
 25690  0028A4  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
 25691  0028A6  B4D8               	btfsc	status,2,c
 25692  0028A8  D005               	goto	l13586
 25693                           
 25694                           ; BSR set to: 0
 25695                           ;doprnt.c: 1150: width--;
 25696  0028AA  0101               	movlb	1	; () banked
 25697  0028AC  0719               	decf	sprintf@width& (0+255),f,b
 25698  0028AE  A0D8               	btfss	status,0,c
 25699  0028B0  071A               	decf	(sprintf@width+1)& (0+255),f,b
 25700  0028B2  D000               	goto	l13586
 25701  0028B4                     l13586:
 25702                           
 25703                           ;doprnt.c: 1153: if(flag & 0x04) {
 25704  0028B4  0101               	movlb	1	; () banked
 25705  0028B6  A51B               	btfss	sprintf@flag& (0+255),2,b
 25706  0028B8  D043               	goto	l13608
 25707                           
 25708                           ; BSR set to: 1
 25709                           ;doprnt.c: 1157: if(flag & 0x03)
 25710  0028BA  0E03               	movlw	3
 25711  0028BC  0101               	movlb	1	; () banked
 25712  0028BE  151B               	andwf	sprintf@flag& (0+255),w,b
 25713  0028C0  0100               	movlb	0	; () banked
 25714  0028C2  6FD5               	movwf	??_sprintf& (0+255),b
 25715  0028C4  0E00               	movlw	0
 25716  0028C6  0101               	movlb	1	; () banked
 25717  0028C8  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 25718  0028CA  0100               	movlb	0	; () banked
 25719  0028CC  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 25720  0028CE  0100               	movlb	0	; () banked
 25721  0028D0  51D5               	movf	??_sprintf& (0+255),w,b
 25722  0028D2  0100               	movlb	0	; () banked
 25723  0028D4  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
 25724  0028D6  B4D8               	btfsc	status,2,c
 25725  0028D8  D018               	goto	l13600
 25726                           
 25727                           ; BSR set to: 0
 25728                           ;doprnt.c: 1159: ((*sp++ = ('-')));
 25729  0028DA  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25730  0028DE  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25731  0028E2  0E2D               	movlw	45
 25732  0028E4  6EDF               	movwf	indf2,c
 25733                           
 25734                           ; BSR set to: 0
 25735  0028E6  0100               	movlb	0	; () banked
 25736  0028E8  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 25737  0028EA  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 25738                           
 25739                           ; BSR set to: 0
 25740                           ;doprnt.c: 1168: while(width > 0) {
 25741  0028EC  D00E               	goto	l13600
 25742  0028EE                     l13594:
 25743                           
 25744                           ;doprnt.c: 1169: ((*sp++ = ('0')));
 25745  0028EE  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25746  0028F2  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25747  0028F6  0E30               	movlw	48
 25748  0028F8  6EDF               	movwf	indf2,c
 25749  0028FA  0100               	movlb	0	; () banked
 25750  0028FC  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 25751  0028FE  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 25752                           
 25753                           ; BSR set to: 0
 25754                           ;doprnt.c: 1170: width--;
 25755  002900  0101               	movlb	1	; () banked
 25756  002902  0719               	decf	sprintf@width& (0+255),f,b
 25757  002904  A0D8               	btfss	status,0,c
 25758  002906  071A               	decf	(sprintf@width+1)& (0+255),f,b
 25759  002908  D000               	goto	l13600
 25760  00290A                     l13600:
 25761  00290A  0101               	movlb	1	; () banked
 25762  00290C  BF1A               	btfsc	(sprintf@width+1)& (0+255),7,b
 25763  00290E  D08A               	goto	l13624
 25764  002910  0101               	movlb	1	; () banked
 25765  002912  511A               	movf	(sprintf@width+1)& (0+255),w,b
 25766  002914  E1EC               	bnz	l13594
 25767  002916  0101               	movlb	1	; () banked
 25768  002918  0519               	decf	sprintf@width& (0+255),w,b
 25769  00291A  A0D8               	btfss	status,0,c
 25770  00291C  D083               	goto	l13624
 25771  00291E  D7E7               	goto	l13594
 25772                           
 25773                           ; BSR set to: 1
 25774                           ;doprnt.c: 1171: }
 25775                           ;doprnt.c: 1173: } else
 25776  002920  D081               	goto	l13624
 25777                           
 25778                           ; BSR set to: 1
 25779                           ;doprnt.c: 1175: {
 25780                           ;doprnt.c: 1180: while(width > 0) {
 25781  002922  D00E               	goto	l13608
 25782  002924                     l13602:
 25783                           
 25784                           ; BSR set to: 1
 25785                           ;doprnt.c: 1181: ((*sp++ = (' ')));
 25786  002924  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25787  002928  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25788  00292C  0E20               	movlw	32
 25789  00292E  6EDF               	movwf	indf2,c
 25790                           
 25791                           ; BSR set to: 1
 25792  002930  0100               	movlb	0	; () banked
 25793  002932  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 25794  002934  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 25795                           
 25796                           ; BSR set to: 0
 25797                           ;doprnt.c: 1182: width--;
 25798  002936  0101               	movlb	1	; () banked
 25799  002938  0719               	decf	sprintf@width& (0+255),f,b
 25800  00293A  A0D8               	btfss	status,0,c
 25801  00293C  071A               	decf	(sprintf@width+1)& (0+255),f,b
 25802  00293E  D000               	goto	l13608
 25803  002940                     l13608:
 25804                           
 25805                           ; BSR set to: 1
 25806  002940  0101               	movlb	1	; () banked
 25807  002942  BF1A               	btfsc	(sprintf@width+1)& (0+255),7,b
 25808  002944  D007               	goto	l13610
 25809  002946  0101               	movlb	1	; () banked
 25810  002948  511A               	movf	(sprintf@width+1)& (0+255),w,b
 25811  00294A  E1EC               	bnz	l13602
 25812  00294C  0101               	movlb	1	; () banked
 25813  00294E  0519               	decf	sprintf@width& (0+255),w,b
 25814  002950  B0D8               	btfsc	status,0,c
 25815  002952  D7E8               	goto	l13602
 25816  002954                     l13610:
 25817                           
 25818                           ; BSR set to: 1
 25819                           ;doprnt.c: 1183: }
 25820                           ;doprnt.c: 1188: if(flag & 0x03)
 25821  002954  0E03               	movlw	3
 25822  002956  0101               	movlb	1	; () banked
 25823  002958  151B               	andwf	sprintf@flag& (0+255),w,b
 25824  00295A  0100               	movlb	0	; () banked
 25825  00295C  6FD5               	movwf	??_sprintf& (0+255),b
 25826  00295E  0E00               	movlw	0
 25827  002960  0101               	movlb	1	; () banked
 25828  002962  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 25829  002964  0100               	movlb	0	; () banked
 25830  002966  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 25831  002968  0100               	movlb	0	; () banked
 25832  00296A  51D5               	movf	??_sprintf& (0+255),w,b
 25833  00296C  0100               	movlb	0	; () banked
 25834  00296E  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
 25835  002970  B4D8               	btfsc	status,2,c
 25836  002972  D058               	goto	l13624
 25837                           
 25838                           ; BSR set to: 0
 25839                           ;doprnt.c: 1190: ((*sp++ = ('-')));
 25840  002974  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25841  002978  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25842  00297C  0E2D               	movlw	45
 25843  00297E  D050               	goto	L18
 25844  002980                     l13614:
 25845                           
 25846                           ; BSR set to: 0
 25847  002980  0100               	movlb	0	; () banked
 25848  002982  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 25849  002984  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 25850                           
 25851                           ; BSR set to: 0
 25852                           ;doprnt.c: 1195: }
 25853                           ;doprnt.c: 1196: while(c--) {
 25854                           
 25855                           ; BSR set to: 0
 25856  002986  D04E               	goto	l13624
 25857  002988                     l13616:
 25858                           
 25859                           ;doprnt.c: 1200: {
 25860                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 25861  002988  C112  F079         	movff	sprintf@val,___lldiv@dividend
 25862  00298C  C113  F07A         	movff	sprintf@val+1,___lldiv@dividend+1
 25863  002990  C114  F07B         	movff	sprintf@val+2,___lldiv@dividend+2
 25864  002994  C115  F07C         	movff	sprintf@val+3,___lldiv@dividend+3
 25865  002998  0101               	movlb	1	; () banked
 25866  00299A  511D               	movf	sprintf@c& (0+255),w,b
 25867  00299C  0D04               	mullw	4
 25868  00299E  0E61               	movlw	low _dpowers
 25869  0029A0  24F3               	addwf	prodl,w,c
 25870  0029A2  6EF6               	movwf	tblptrl,c
 25871  0029A4  0EF1               	movlw	high _dpowers
 25872  0029A6  20F4               	addwfc	prodh,w,c
 25873  0029A8  6EF7               	movwf	tblptrh,c
 25874  0029AA                     	if	1	;There are 3 active tblptr bytes
 25875  0029AA  6AF8               	clrf	tblptru,c
 25876  0029AC  0E00               	movlw	low (__mediumconst shr (0+16))
 25877  0029AE  22F8               	addwfc	tblptru,f,c
 25878  0029B0                     	endif
 25879  0029B0  0009               	tblrd		*+
 25880  0029B2  CFF5 F07D          	movff	tablat,___lldiv@divisor
 25881  0029B6  0009               	tblrd		*+
 25882  0029B8  CFF5 F07E          	movff	tablat,___lldiv@divisor+1
 25883  0029BC  0009               	tblrd		*+
 25884  0029BE  CFF5 F07F          	movff	tablat,___lldiv@divisor+2
 25885  0029C2  000A               	tblrd		*-
 25886  0029C4  CFF5 F080          	movff	tablat,___lldiv@divisor+3
 25887  0029C8  EC4E  F03F         	call	___lldiv	;wreg free
 25888  0029CC  C079  F10C         	movff	?___lldiv,sprintf@tmpval
 25889  0029D0  C07A  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
 25890  0029D4  C07B  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
 25891  0029D8  C07C  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
 25892                           
 25893                           ;doprnt.c: 1202: tmpval.vd %= 10;
 25894  0029DC  C10C  F086         	movff	sprintf@tmpval,___llmod@dividend
 25895  0029E0  C10D  F087         	movff	sprintf@tmpval+1,___llmod@dividend+1
 25896  0029E4  C10E  F088         	movff	sprintf@tmpval+2,___llmod@dividend+2
 25897  0029E8  C10F  F089         	movff	sprintf@tmpval+3,___llmod@dividend+3
 25898  0029EC  0E0A               	movlw	10
 25899  0029EE  0100               	movlb	0	; () banked
 25900  0029F0  6F8A               	movwf	___llmod@divisor& (0+255),b
 25901  0029F2  0E00               	movlw	0
 25902  0029F4  6F8B               	movwf	(___llmod@divisor+1)& (0+255),b
 25903  0029F6  0E00               	movlw	0
 25904  0029F8  6F8C               	movwf	(___llmod@divisor+2)& (0+255),b
 25905  0029FA  0E00               	movlw	0
 25906  0029FC  6F8D               	movwf	(___llmod@divisor+3)& (0+255),b
 25907  0029FE  ECD2  F041         	call	___llmod	;wreg free
 25908  002A02  C086  F10C         	movff	?___llmod,sprintf@tmpval
 25909  002A06  C087  F10D         	movff	?___llmod+1,sprintf@tmpval+1
 25910  002A0A  C088  F10E         	movff	?___llmod+2,sprintf@tmpval+2
 25911  002A0E  C089  F10F         	movff	?___llmod+3,sprintf@tmpval+3
 25912                           
 25913                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 25914  002A12  0101               	movlb	1	; () banked
 25915  002A14  510C               	movf	sprintf@tmpval& (0+255),w,b
 25916  002A16  0F30               	addlw	48
 25917  002A18  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25918  002A1C  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25919  002A20                     L18:
 25920  002A20  6EDF               	movwf	indf2,c
 25921  002A22  D7AE               	goto	l13614
 25922  002A24                     l13624:
 25923  002A24  0101               	movlb	1	; () banked
 25924  002A26  071D               	decf	sprintf@c& (0+255),f,b
 25925  002A28  0101               	movlb	1	; () banked
 25926  002A2A  291D               	incf	sprintf@c& (0+255),w,b
 25927  002A2C  B4D8               	btfsc	status,2,c
 25928  002A2E  D010               	goto	l13632
 25929  002A30  D7AB               	goto	l13616
 25930                           
 25931                           ; BSR set to: 1
 25932                           ;doprnt.c: 1204: }
 25933                           ;doprnt.c: 1206: }
 25934                           ;doprnt.c: 1207: while(exp > 0) {
 25935  002A32  D00E               	goto	l13632
 25936  002A34                     l13626:
 25937                           
 25938                           ; BSR set to: 1
 25939                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 25940  002A34  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25941  002A38  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25942  002A3C  0E30               	movlw	48
 25943  002A3E  6EDF               	movwf	indf2,c
 25944                           
 25945                           ; BSR set to: 1
 25946  002A40  0100               	movlb	0	; () banked
 25947  002A42  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 25948  002A44  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 25949                           
 25950                           ; BSR set to: 0
 25951                           ;doprnt.c: 1209: exp--;
 25952  002A46  0101               	movlb	1	; () banked
 25953  002A48  0710               	decf	sprintf@exp& (0+255),f,b
 25954  002A4A  A0D8               	btfss	status,0,c
 25955  002A4C  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 25956  002A4E  D000               	goto	l13632
 25957  002A50                     l13632:
 25958                           
 25959                           ; BSR set to: 1
 25960  002A50  0101               	movlb	1	; () banked
 25961  002A52  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 25962  002A54  D007               	goto	l13634
 25963  002A56  0101               	movlb	1	; () banked
 25964  002A58  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 25965  002A5A  E1EC               	bnz	l13626
 25966  002A5C  0101               	movlb	1	; () banked
 25967  002A5E  0510               	decf	sprintf@exp& (0+255),w,b
 25968  002A60  B0D8               	btfsc	status,0,c
 25969  002A62  D7E8               	goto	l13626
 25970  002A64                     l13634:
 25971                           
 25972                           ; BSR set to: 1
 25973                           ;doprnt.c: 1210: }
 25974                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 25975  002A64  0101               	movlb	1	; () banked
 25976  002A66  BF0B               	btfsc	(sprintf@prec+1)& (0+255),7,b
 25977  002A68  D00C               	goto	l2274
 25978  002A6A  0101               	movlb	1	; () banked
 25979  002A6C  510B               	movf	(sprintf@prec+1)& (0+255),w,b
 25980  002A6E  E105               	bnz	u16540
 25981  002A70  0E09               	movlw	9
 25982  002A72  0101               	movlb	1	; () banked
 25983  002A74  5D0A               	subwf	sprintf@prec& (0+255),w,b
 25984  002A76  A0D8               	btfss	status,0,c
 25985  002A78  D004               	goto	l2274
 25986  002A7A                     u16540:
 25987                           
 25988                           ; BSR set to: 1
 25989                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 25990  002A7A  0E08               	movlw	8
 25991  002A7C  0101               	movlb	1	; () banked
 25992  002A7E  6F1D               	movwf	sprintf@c& (0+255),b
 25993  002A80  D003               	goto	l13638
 25994  002A82                     l2274:
 25995                           
 25996                           ; BSR set to: 1
 25997                           ;doprnt.c: 1213: else
 25998                           ;doprnt.c: 1214: c = prec;
 25999  002A82  C10A  F11D         	movff	sprintf@prec,sprintf@c
 26000  002A86  D000               	goto	l13638
 26001  002A88                     l13638:
 26002                           
 26003                           ; BSR set to: 1
 26004                           ;doprnt.c: 1215: prec -= c;
 26005  002A88  0101               	movlb	1	; () banked
 26006  002A8A  511D               	movf	sprintf@c& (0+255),w,b
 26007  002A8C  0101               	movlb	1	; () banked
 26008  002A8E  5F0A               	subwf	sprintf@prec& (0+255),f,b
 26009  002A90  0E00               	movlw	0
 26010  002A92  0101               	movlb	1	; () banked
 26011  002A94  BF1D               	btfsc	sprintf@c& (0+255),7,b
 26012  002A96  0EFF               	movlw	255
 26013  002A98  0101               	movlb	1	; () banked
 26014  002A9A  5B0B               	subwfb	(sprintf@prec+1)& (0+255),f,b
 26015                           
 26016                           ; BSR set to: 1
 26017                           ;doprnt.c: 1219: if(c)
 26018  002A9C  0101               	movlb	1	; () banked
 26019  002A9E  511D               	movf	sprintf@c& (0+255),w,b
 26020  002AA0  0101               	movlb	1	; () banked
 26021  002AA2  B4D8               	btfsc	status,2,c
 26022  002AA4  D00A               	goto	l13646
 26023                           
 26024                           ; BSR set to: 1
 26025                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 26026  002AA6  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26027  002AAA  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26028  002AAE  0E2E               	movlw	46
 26029  002AB0  6EDF               	movwf	indf2,c
 26030                           
 26031                           ; BSR set to: 1
 26032  002AB2  0100               	movlb	0	; () banked
 26033  002AB4  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26034  002AB6  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26035  002AB8  D000               	goto	l13646
 26036  002ABA                     l13646:
 26037                           
 26038                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 26039  002ABA  0101               	movlb	1	; () banked
 26040  002ABC  511D               	movf	sprintf@c& (0+255),w,b
 26041  002ABE  EC6A  F021         	call	_scale
 26042  002AC2  C0A2  F100         	movff	?_scale,_sprintf$3801
 26043  002AC6  C0A3  F101         	movff	?_scale+1,_sprintf$3801+1
 26044  002ACA  C0A4  F102         	movff	?_scale+2,_sprintf$3801+2
 26045                           
 26046                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 26047  002ACE  C116  F096         	movff	sprintf@fval,___ftmul@f2
 26048  002AD2  C117  F097         	movff	sprintf@fval+1,___ftmul@f2+1
 26049  002AD6  C118  F098         	movff	sprintf@fval+2,___ftmul@f2+2
 26050  002ADA  C100  F093         	movff	_sprintf$3801,___ftmul@f1
 26051  002ADE  C101  F094         	movff	_sprintf$3801+1,___ftmul@f1+1
 26052  002AE2  C102  F095         	movff	_sprintf$3801+2,___ftmul@f1+2
 26053  002AE6  EC17  F037         	call	___ftmul	;wreg free
 26054  002AEA  C093  F0B8         	movff	?___ftmul,___fttol@f1
 26055  002AEE  C094  F0B9         	movff	?___ftmul+1,___fttol@f1+1
 26056  002AF2  C095  F0BA         	movff	?___ftmul+2,___fttol@f1+2
 26057  002AF6  EC76  F038         	call	___fttol	;wreg free
 26058  002AFA  C0B8  F112         	movff	?___fttol,sprintf@val
 26059  002AFE  C0B9  F113         	movff	?___fttol+1,sprintf@val+1
 26060  002B02  C0BA  F114         	movff	?___fttol+2,sprintf@val+2
 26061  002B06  C0BB  F115         	movff	?___fttol+3,sprintf@val+3
 26062                           
 26063                           ;doprnt.c: 1228: while(c--) {
 26064  002B0A  D07B               	goto	l13660
 26065  002B0C                     l13650:
 26066                           
 26067                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 26068  002B0C  C112  F079         	movff	sprintf@val,___lldiv@dividend
 26069  002B10  C113  F07A         	movff	sprintf@val+1,___lldiv@dividend+1
 26070  002B14  C114  F07B         	movff	sprintf@val+2,___lldiv@dividend+2
 26071  002B18  C115  F07C         	movff	sprintf@val+3,___lldiv@dividend+3
 26072  002B1C  0101               	movlb	1	; () banked
 26073  002B1E  511D               	movf	sprintf@c& (0+255),w,b
 26074  002B20  0D04               	mullw	4
 26075  002B22  0E61               	movlw	low _dpowers
 26076  002B24  24F3               	addwf	prodl,w,c
 26077  002B26  6EF6               	movwf	tblptrl,c
 26078  002B28  0EF1               	movlw	high _dpowers
 26079  002B2A  20F4               	addwfc	prodh,w,c
 26080  002B2C  6EF7               	movwf	tblptrh,c
 26081  002B2E                     	if	1	;There are 3 active tblptr bytes
 26082  002B2E  6AF8               	clrf	tblptru,c
 26083  002B30  0E00               	movlw	low (__mediumconst shr (0+16))
 26084  002B32  22F8               	addwfc	tblptru,f,c
 26085  002B34                     	endif
 26086  002B34  0009               	tblrd		*+
 26087  002B36  CFF5 F07D          	movff	tablat,___lldiv@divisor
 26088  002B3A  0009               	tblrd		*+
 26089  002B3C  CFF5 F07E          	movff	tablat,___lldiv@divisor+1
 26090  002B40  0009               	tblrd		*+
 26091  002B42  CFF5 F07F          	movff	tablat,___lldiv@divisor+2
 26092  002B46  000A               	tblrd		*-
 26093  002B48  CFF5 F080          	movff	tablat,___lldiv@divisor+3
 26094  002B4C  EC4E  F03F         	call	___lldiv	;wreg free
 26095  002B50  C079  F10C         	movff	?___lldiv,sprintf@tmpval
 26096  002B54  C07A  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
 26097  002B58  C07B  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
 26098  002B5C  C07C  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
 26099                           
 26100                           ;doprnt.c: 1230: tmpval.vd %= 10;
 26101  002B60  C10C  F086         	movff	sprintf@tmpval,___llmod@dividend
 26102  002B64  C10D  F087         	movff	sprintf@tmpval+1,___llmod@dividend+1
 26103  002B68  C10E  F088         	movff	sprintf@tmpval+2,___llmod@dividend+2
 26104  002B6C  C10F  F089         	movff	sprintf@tmpval+3,___llmod@dividend+3
 26105  002B70  0E0A               	movlw	10
 26106  002B72  0100               	movlb	0	; () banked
 26107  002B74  6F8A               	movwf	___llmod@divisor& (0+255),b
 26108  002B76  0E00               	movlw	0
 26109  002B78  6F8B               	movwf	(___llmod@divisor+1)& (0+255),b
 26110  002B7A  0E00               	movlw	0
 26111  002B7C  6F8C               	movwf	(___llmod@divisor+2)& (0+255),b
 26112  002B7E  0E00               	movlw	0
 26113  002B80  6F8D               	movwf	(___llmod@divisor+3)& (0+255),b
 26114  002B82  ECD2  F041         	call	___llmod	;wreg free
 26115  002B86  C086  F10C         	movff	?___llmod,sprintf@tmpval
 26116  002B8A  C087  F10D         	movff	?___llmod+1,sprintf@tmpval+1
 26117  002B8E  C088  F10E         	movff	?___llmod+2,sprintf@tmpval+2
 26118  002B92  C089  F10F         	movff	?___llmod+3,sprintf@tmpval+3
 26119                           
 26120                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 26121  002B96  0101               	movlb	1	; () banked
 26122  002B98  510C               	movf	sprintf@tmpval& (0+255),w,b
 26123  002B9A  0F30               	addlw	48
 26124  002B9C  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26125  002BA0  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26126  002BA4  6EDF               	movwf	indf2,c
 26127                           
 26128                           ; BSR set to: 1
 26129  002BA6  0100               	movlb	0	; () banked
 26130  002BA8  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26131  002BAA  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26132                           
 26133                           ; BSR set to: 0
 26134                           ;doprnt.c: 1232: val %= dpowers[c];
 26135  002BAC  C112  F086         	movff	sprintf@val,___llmod@dividend
 26136  002BB0  C113  F087         	movff	sprintf@val+1,___llmod@dividend+1
 26137  002BB4  C114  F088         	movff	sprintf@val+2,___llmod@dividend+2
 26138  002BB8  C115  F089         	movff	sprintf@val+3,___llmod@dividend+3
 26139  002BBC  0101               	movlb	1	; () banked
 26140  002BBE  511D               	movf	sprintf@c& (0+255),w,b
 26141  002BC0  0D04               	mullw	4
 26142  002BC2  0E61               	movlw	low _dpowers
 26143  002BC4  24F3               	addwf	prodl,w,c
 26144  002BC6  6EF6               	movwf	tblptrl,c
 26145  002BC8  0EF1               	movlw	high _dpowers
 26146  002BCA  20F4               	addwfc	prodh,w,c
 26147  002BCC  6EF7               	movwf	tblptrh,c
 26148  002BCE                     	if	1	;There are 3 active tblptr bytes
 26149  002BCE  6AF8               	clrf	tblptru,c
 26150  002BD0  0E00               	movlw	low (__mediumconst shr (0+16))
 26151  002BD2  22F8               	addwfc	tblptru,f,c
 26152  002BD4                     	endif
 26153  002BD4  0009               	tblrd		*+
 26154  002BD6  CFF5 F08A          	movff	tablat,___llmod@divisor
 26155  002BDA  0009               	tblrd		*+
 26156  002BDC  CFF5 F08B          	movff	tablat,___llmod@divisor+1
 26157  002BE0  0009               	tblrd		*+
 26158  002BE2  CFF5 F08C          	movff	tablat,___llmod@divisor+2
 26159  002BE6  000A               	tblrd		*-
 26160  002BE8  CFF5 F08D          	movff	tablat,___llmod@divisor+3
 26161  002BEC  ECD2  F041         	call	___llmod	;wreg free
 26162  002BF0  C086  F112         	movff	?___llmod,sprintf@val
 26163  002BF4  C087  F113         	movff	?___llmod+1,sprintf@val+1
 26164  002BF8  C088  F114         	movff	?___llmod+2,sprintf@val+2
 26165  002BFC  C089  F115         	movff	?___llmod+3,sprintf@val+3
 26166  002C00  D000               	goto	l13660
 26167  002C02                     l13660:
 26168  002C02  0101               	movlb	1	; () banked
 26169  002C04  071D               	decf	sprintf@c& (0+255),f,b
 26170  002C06  0101               	movlb	1	; () banked
 26171  002C08  291D               	incf	sprintf@c& (0+255),w,b
 26172  002C0A  B4D8               	btfsc	status,2,c
 26173  002C0C  D010               	goto	l13668
 26174  002C0E  D77E               	goto	l13650
 26175                           
 26176                           ; BSR set to: 1
 26177                           ;doprnt.c: 1233: }
 26178                           ;doprnt.c: 1235: while(prec) {
 26179  002C10  D00E               	goto	l13668
 26180  002C12                     l13662:
 26181                           
 26182                           ; BSR set to: 1
 26183                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 26184  002C12  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26185  002C16  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26186  002C1A  0E30               	movlw	48
 26187  002C1C  6EDF               	movwf	indf2,c
 26188                           
 26189                           ; BSR set to: 1
 26190  002C1E  0100               	movlb	0	; () banked
 26191  002C20  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26192  002C22  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26193                           
 26194                           ; BSR set to: 0
 26195                           ;doprnt.c: 1237: prec--;
 26196  002C24  0101               	movlb	1	; () banked
 26197  002C26  070A               	decf	sprintf@prec& (0+255),f,b
 26198  002C28  A0D8               	btfss	status,0,c
 26199  002C2A  070B               	decf	(sprintf@prec+1)& (0+255),f,b
 26200  002C2C  D000               	goto	l13668
 26201  002C2E                     l13668:
 26202                           
 26203                           ; BSR set to: 1
 26204  002C2E  0101               	movlb	1	; () banked
 26205  002C30  510A               	movf	sprintf@prec& (0+255),w,b
 26206  002C32  0101               	movlb	1	; () banked
 26207  002C34  110B               	iorwf	(sprintf@prec+1)& (0+255),w,b
 26208  002C36  B4D8               	btfsc	status,2,c
 26209  002C38  D220               	goto	l13786
 26210  002C3A  D7EB               	goto	l13662
 26211                           
 26212                           ; BSR set to: 1
 26213                           ;doprnt.c: 1238: }
 26214                           ;doprnt.c: 1245: continue;
 26215  002C3C  D21E               	goto	l13786
 26216  002C3E                     l2235:
 26217                           
 26218                           ; BSR set to: 1
 26219                           ;doprnt.c: 1246: }
 26220                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
 26221  002C3E  0101               	movlb	1	; () banked
 26222  002C40  BF1B               	btfsc	sprintf@flag& (0+255),7,b
 26223  002C42  D035               	goto	l2283
 26224                           
 26225                           ; BSR set to: 1
 26226                           ;doprnt.c: 1253: {
 26227                           ;doprnt.c: 1255: if(flag & 0x10)
 26228  002C44  0101               	movlb	1	; () banked
 26229  002C46  A91B               	btfss	sprintf@flag& (0+255),4,b
 26230  002C48  D00E               	goto	l13676
 26231                           
 26232                           ; BSR set to: 1
 26233                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 26234  002C4A  C108  FFD9         	movff	sprintf@ap,fsr2l
 26235  002C4E  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 26236  002C52  CFDE F112          	movff	postinc2,sprintf@val
 26237  002C56  CFDE F113          	movff	postinc2,sprintf@val+1
 26238  002C5A  CFDE F114          	movff	postinc2,sprintf@val+2
 26239  002C5E  CFDE F115          	movff	postinc2,sprintf@val+3
 26240                           
 26241                           ; BSR set to: 1
 26242  002C62  0E04               	movlw	4
 26243  002C64  D00F               	goto	L19
 26244  002C66                     l13676:
 26245                           
 26246                           ; BSR set to: 1
 26247                           ;doprnt.c: 1257: else
 26248                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 26249  002C66  C108  FFD9         	movff	sprintf@ap,fsr2l
 26250  002C6A  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 26251  002C6E  CFDE F112          	movff	postinc2,sprintf@val
 26252  002C72  CFDD F113          	movff	postdec2,sprintf@val+1
 26253  002C76  0101               	movlb	1	; () banked
 26254  002C78  0E00               	movlw	0
 26255  002C7A  BF13               	btfsc	(sprintf@val+1)& (0+255),7,b
 26256  002C7C  0EFF               	movlw	-1
 26257  002C7E  6F14               	movwf	(sprintf@val+2)& (0+255),b
 26258  002C80  6F15               	movwf	(sprintf@val+3)& (0+255),b
 26259                           
 26260                           ; BSR set to: 1
 26261  002C82  0E02               	movlw	2
 26262  002C84                     L19:
 26263  002C84  0101               	movlb	1	; () banked
 26264  002C86  2708               	addwf	sprintf@ap& (0+255),f,b
 26265  002C88  0E00               	movlw	0
 26266  002C8A  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 26267  002C8C  D000               	goto	l13680
 26268  002C8E                     l13680:
 26269                           
 26270                           ; BSR set to: 1
 26271                           ;doprnt.c: 1261: if((long)val < 0) {
 26272  002C8E  0101               	movlb	1	; () banked
 26273  002C90  AF15               	btfss	(sprintf@val+3)& (0+255),7,b
 26274  002C92  D08F               	goto	l13724
 26275                           
 26276                           ; BSR set to: 1
 26277                           ;doprnt.c: 1262: flag |= 0x03;
 26278  002C94  0E03               	movlw	3
 26279  002C96  0101               	movlb	1	; () banked
 26280  002C98  131B               	iorwf	sprintf@flag& (0+255),f,b
 26281                           
 26282                           ; BSR set to: 1
 26283                           ;doprnt.c: 1263: val = -val;
 26284  002C9A  0101               	movlb	1	; () banked
 26285  002C9C  1F15               	comf	(sprintf@val+3)& (0+255),f,b
 26286  002C9E  1F14               	comf	(sprintf@val+2)& (0+255),f,b
 26287  002CA0  1F13               	comf	(sprintf@val+1)& (0+255),f,b
 26288  002CA2  6D12               	negf	sprintf@val& (0+255),b
 26289  002CA4  0E00               	movlw	0
 26290  002CA6  2313               	addwfc	(sprintf@val+1)& (0+255),f,b
 26291  002CA8  2314               	addwfc	(sprintf@val+2)& (0+255),f,b
 26292  002CAA  2315               	addwfc	(sprintf@val+3)& (0+255),f,b
 26293                           
 26294                           ; BSR set to: 1
 26295                           ;doprnt.c: 1264: }
 26296                           ;doprnt.c: 1266: }
 26297  002CAC  D082               	goto	l13724
 26298  002CAE                     l2283:
 26299                           
 26300                           ; BSR set to: 1
 26301                           ;doprnt.c: 1268: else
 26302                           ;doprnt.c: 1273: {
 26303                           ;doprnt.c: 1281: if(flag & 0x10)
 26304  002CAE  0101               	movlb	1	; () banked
 26305  002CB0  A91B               	btfss	sprintf@flag& (0+255),4,b
 26306  002CB2  D00E               	goto	l13690
 26307                           
 26308                           ; BSR set to: 1
 26309                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 26310  002CB4  C108  FFD9         	movff	sprintf@ap,fsr2l
 26311  002CB8  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 26312  002CBC  CFDE F112          	movff	postinc2,sprintf@val
 26313  002CC0  CFDE F113          	movff	postinc2,sprintf@val+1
 26314  002CC4  CFDE F114          	movff	postinc2,sprintf@val+2
 26315  002CC8  CFDE F115          	movff	postinc2,sprintf@val+3
 26316                           
 26317                           ; BSR set to: 1
 26318  002CCC  0E04               	movlw	4
 26319  002CCE  D010               	goto	L20
 26320  002CD0                     l13690:
 26321                           
 26322                           ; BSR set to: 1
 26323                           ;doprnt.c: 1283: else
 26324                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 26325  002CD0  C108  FFD9         	movff	sprintf@ap,fsr2l
 26326  002CD4  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 26327  002CD8  CFDE F0D5          	movff	postinc2,??_sprintf
 26328  002CDC  CFDD F0D6          	movff	postdec2,??_sprintf+1
 26329  002CE0  C0D5  F112         	movff	??_sprintf,sprintf@val
 26330  002CE4  C0D6  F113         	movff	??_sprintf+1,sprintf@val+1
 26331  002CE8  0101               	movlb	1	; () banked
 26332  002CEA  6B14               	clrf	(sprintf@val+2)& (0+255),b
 26333  002CEC  6B15               	clrf	(sprintf@val+3)& (0+255),b
 26334                           
 26335                           ; BSR set to: 1
 26336  002CEE  0E02               	movlw	2
 26337  002CF0                     L20:
 26338  002CF0  0101               	movlb	1	; () banked
 26339  002CF2  2708               	addwf	sprintf@ap& (0+255),f,b
 26340  002CF4  0E00               	movlw	0
 26341  002CF6  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 26342                           
 26343                           ; BSR set to: 1
 26344                           ;doprnt.c: 1287: }
 26345                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
 26346                           
 26347                           ; BSR set to: 1
 26348  002CF8  D05C               	goto	l13724
 26349  002CFA                     l13694:
 26350                           
 26351                           ; BSR set to: 1
 26352                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 26353  002CFA  0E01               	movlw	1
 26354  002CFC  0101               	movlb	1	; () banked
 26355  002CFE  6F1D               	movwf	sprintf@c& (0+255),b
 26356  002D00                     l13696:
 26357                           
 26358                           ; BSR set to: 1
 26359  002D00  0E0A               	movlw	10
 26360  002D02  0101               	movlb	1	; () banked
 26361  002D04  191D               	xorwf	sprintf@c& (0+255),w,b
 26362  002D06  B4D8               	btfsc	status,2,c
 26363  002D08  D05E               	goto	l13726
 26364  002D0A  D001               	goto	l13700
 26365                           
 26366                           ; BSR set to: 1
 26367  002D0C  D05C               	goto	l13726
 26368  002D0E                     l13700:
 26369                           
 26370                           ; BSR set to: 1
 26371                           ;doprnt.c: 1306: if(val < dpowers[c])
 26372  002D0E  0101               	movlb	1	; () banked
 26373  002D10  511D               	movf	sprintf@c& (0+255),w,b
 26374  002D12  0D04               	mullw	4
 26375  002D14  0E61               	movlw	low _dpowers
 26376  002D16  24F3               	addwf	prodl,w,c
 26377  002D18  6EF6               	movwf	tblptrl,c
 26378  002D1A  0EF1               	movlw	high _dpowers
 26379  002D1C  20F4               	addwfc	prodh,w,c
 26380  002D1E  6EF7               	movwf	tblptrh,c
 26381  002D20                     	if	1	;There are 3 active tblptr bytes
 26382  002D20  6AF8               	clrf	tblptru,c
 26383  002D22  0E00               	movlw	low (__mediumconst shr (0+16))
 26384  002D24  22F8               	addwfc	tblptru,f,c
 26385  002D26                     	endif
 26386  002D26  0009               	tblrd		*+
 26387  002D28  50F5               	movf	tablat,w,c
 26388  002D2A  0101               	movlb	1	; () banked
 26389  002D2C  5D12               	subwf	sprintf@val& (0+255),w,b
 26390  002D2E  0009               	tblrd		*+
 26391  002D30  50F5               	movf	tablat,w,c
 26392  002D32  0101               	movlb	1	; () banked
 26393  002D34  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 26394  002D36  0009               	tblrd		*+
 26395  002D38  50F5               	movf	tablat,w,c
 26396  002D3A  0101               	movlb	1	; () banked
 26397  002D3C  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 26398  002D3E  0009               	tblrd		*+
 26399  002D40  50F5               	movf	tablat,w,c
 26400  002D42  0101               	movlb	1	; () banked
 26401  002D44  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 26402  002D46  A0D8               	btfss	status,0,c
 26403  002D48  D03E               	goto	l13726
 26404  002D4A  D001               	goto	l13704
 26405                           
 26406                           ; BSR set to: 1
 26407                           ;doprnt.c: 1307: break;
 26408  002D4C  D03C               	goto	l13726
 26409  002D4E                     l13704:
 26410                           
 26411                           ; BSR set to: 1
 26412  002D4E  0101               	movlb	1	; () banked
 26413  002D50  2B1D               	incf	sprintf@c& (0+255),f,b
 26414  002D52  D7D6               	goto	l13696
 26415                           
 26416                           ; BSR set to: 1
 26417                           ;doprnt.c: 1309: break;
 26418                           
 26419                           ; BSR set to: 1
 26420  002D54  D038               	goto	l13726
 26421  002D56                     l13708:
 26422                           
 26423                           ; BSR set to: 1
 26424                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 26425  002D56  0E01               	movlw	1
 26426  002D58  0101               	movlb	1	; () banked
 26427  002D5A  6F1D               	movwf	sprintf@c& (0+255),b
 26428  002D5C                     l13710:
 26429                           
 26430                           ; BSR set to: 1
 26431  002D5C  0E08               	movlw	8
 26432  002D5E  0101               	movlb	1	; () banked
 26433  002D60  191D               	xorwf	sprintf@c& (0+255),w,b
 26434  002D62  B4D8               	btfsc	status,2,c
 26435  002D64  D030               	goto	l13726
 26436  002D66  D001               	goto	l13714
 26437                           
 26438                           ; BSR set to: 1
 26439  002D68  D02E               	goto	l13726
 26440  002D6A                     l13714:
 26441                           
 26442                           ; BSR set to: 1
 26443                           ;doprnt.c: 1317: if(val < hexpowers[c])
 26444  002D6A  0101               	movlb	1	; () banked
 26445  002D6C  511D               	movf	sprintf@c& (0+255),w,b
 26446  002D6E  0D04               	mullw	4
 26447  002D70  0ED7               	movlw	low _hexpowers
 26448  002D72  24F3               	addwf	prodl,w,c
 26449  002D74  6EF6               	movwf	tblptrl,c
 26450  002D76  0EF1               	movlw	high _hexpowers
 26451  002D78  20F4               	addwfc	prodh,w,c
 26452  002D7A  6EF7               	movwf	tblptrh,c
 26453  002D7C                     	if	1	;There are 3 active tblptr bytes
 26454  002D7C  6AF8               	clrf	tblptru,c
 26455  002D7E  0E00               	movlw	low (__mediumconst shr (0+16))
 26456  002D80  22F8               	addwfc	tblptru,f,c
 26457  002D82                     	endif
 26458  002D82  0009               	tblrd		*+
 26459  002D84  50F5               	movf	tablat,w,c
 26460  002D86  0101               	movlb	1	; () banked
 26461  002D88  5D12               	subwf	sprintf@val& (0+255),w,b
 26462  002D8A  0009               	tblrd		*+
 26463  002D8C  50F5               	movf	tablat,w,c
 26464  002D8E  0101               	movlb	1	; () banked
 26465  002D90  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 26466  002D92  0009               	tblrd		*+
 26467  002D94  50F5               	movf	tablat,w,c
 26468  002D96  0101               	movlb	1	; () banked
 26469  002D98  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 26470  002D9A  0009               	tblrd		*+
 26471  002D9C  50F5               	movf	tablat,w,c
 26472  002D9E  0101               	movlb	1	; () banked
 26473  002DA0  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 26474  002DA2  A0D8               	btfss	status,0,c
 26475  002DA4  D010               	goto	l13726
 26476  002DA6  D001               	goto	l13718
 26477                           
 26478                           ; BSR set to: 1
 26479                           ;doprnt.c: 1318: break;
 26480  002DA8  D00E               	goto	l13726
 26481  002DAA                     l13718:
 26482                           
 26483                           ; BSR set to: 1
 26484  002DAA  0101               	movlb	1	; () banked
 26485  002DAC  2B1D               	incf	sprintf@c& (0+255),f,b
 26486  002DAE  D7D6               	goto	l13710
 26487                           
 26488                           ; BSR set to: 1
 26489                           ;doprnt.c: 1336: }
 26490                           
 26491                           ; BSR set to: 1
 26492                           ;doprnt.c: 1320: break;
 26493                           
 26494                           ; BSR set to: 1
 26495  002DB0  D00A               	goto	l13726
 26496  002DB2                     l13724:
 26497                           
 26498                           ; BSR set to: 1
 26499  002DB2  0101               	movlb	1	; () banked
 26500  002DB4  511B               	movf	sprintf@flag& (0+255),w,b
 26501  002DB6  0B80               	andlw	128
 26502                           
 26503                           ; Switch size 1, requested type "space"
 26504                           ; Number of cases is 2, Range of values is 0 to 128
 26505                           ; switch strategies available:
 26506                           ; Name         Instructions Cycles
 26507                           ; simple_byte            7     4 (average)
 26508                           ;	Chosen strategy is simple_byte
 26509  002DB8  0A00               	xorlw	0	; case 0
 26510  002DBA  B4D8               	btfsc	status,2,c
 26511  002DBC  D79E               	goto	l13694
 26512  002DBE  0A80               	xorlw	128	; case 128
 26513  002DC0  B4D8               	btfsc	status,2,c
 26514  002DC2  D7C9               	goto	l13708
 26515  002DC4  D000               	goto	l13726
 26516  002DC6                     l13726:
 26517                           
 26518                           ; BSR set to: 1
 26519                           ;doprnt.c: 1345: if(width && flag & 0x03)
 26520  002DC6  0101               	movlb	1	; () banked
 26521  002DC8  5119               	movf	sprintf@width& (0+255),w,b
 26522  002DCA  0101               	movlb	1	; () banked
 26523  002DCC  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 26524  002DCE  B4D8               	btfsc	status,2,c
 26525  002DD0  D015               	goto	l13732
 26526                           
 26527                           ; BSR set to: 1
 26528  002DD2  0E03               	movlw	3
 26529  002DD4  0101               	movlb	1	; () banked
 26530  002DD6  151B               	andwf	sprintf@flag& (0+255),w,b
 26531  002DD8  0100               	movlb	0	; () banked
 26532  002DDA  6FD5               	movwf	??_sprintf& (0+255),b
 26533  002DDC  0E00               	movlw	0
 26534  002DDE  0101               	movlb	1	; () banked
 26535  002DE0  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 26536  002DE2  0100               	movlb	0	; () banked
 26537  002DE4  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 26538  002DE6  0100               	movlb	0	; () banked
 26539  002DE8  51D5               	movf	??_sprintf& (0+255),w,b
 26540  002DEA  0100               	movlb	0	; () banked
 26541  002DEC  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
 26542  002DEE  B4D8               	btfsc	status,2,c
 26543  002DF0  D005               	goto	l13732
 26544                           
 26545                           ; BSR set to: 0
 26546                           ;doprnt.c: 1346: width--;
 26547  002DF2  0101               	movlb	1	; () banked
 26548  002DF4  0719               	decf	sprintf@width& (0+255),f,b
 26549  002DF6  A0D8               	btfss	status,0,c
 26550  002DF8  071A               	decf	(sprintf@width+1)& (0+255),f,b
 26551  002DFA  D000               	goto	l13732
 26552  002DFC                     l13732:
 26553                           
 26554                           ;doprnt.c: 1381: if(width > c)
 26555  002DFC  0E80               	movlw	128
 26556  002DFE  0101               	movlb	1	; () banked
 26557  002E00  BF1D               	btfsc	sprintf@c& (0+255),7,b
 26558  002E02  0E7F               	movlw	127
 26559  002E04  0100               	movlb	0	; () banked
 26560  002E06  6FD5               	movwf	??_sprintf& (0+255),b
 26561  002E08  0101               	movlb	1	; () banked
 26562  002E0A  5119               	movf	sprintf@width& (0+255),w,b
 26563  002E0C  0101               	movlb	1	; () banked
 26564  002E0E  5D1D               	subwf	sprintf@c& (0+255),w,b
 26565  002E10  0101               	movlb	1	; () banked
 26566  002E12  511A               	movf	(sprintf@width+1)& (0+255),w,b
 26567  002E14  0A80               	xorlw	128
 26568  002E16  0100               	movlb	0	; () banked
 26569  002E18  59D5               	subwfb	??_sprintf& (0+255),w,b
 26570  002E1A  B0D8               	btfsc	status,0,c
 26571  002E1C  D00B               	goto	l13736
 26572                           
 26573                           ; BSR set to: 0
 26574                           ;doprnt.c: 1382: width -= c;
 26575  002E1E  0101               	movlb	1	; () banked
 26576  002E20  511D               	movf	sprintf@c& (0+255),w,b
 26577  002E22  0101               	movlb	1	; () banked
 26578  002E24  5F19               	subwf	sprintf@width& (0+255),f,b
 26579  002E26  0E00               	movlw	0
 26580  002E28  0101               	movlb	1	; () banked
 26581  002E2A  BF1D               	btfsc	sprintf@c& (0+255),7,b
 26582  002E2C  0EFF               	movlw	255
 26583  002E2E  0101               	movlb	1	; () banked
 26584  002E30  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 26585  002E32  D006               	goto	l13738
 26586  002E34                     l13736:
 26587                           
 26588                           ;doprnt.c: 1383: else
 26589                           ;doprnt.c: 1384: width = 0;
 26590  002E34  0E00               	movlw	0
 26591  002E36  0101               	movlb	1	; () banked
 26592  002E38  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 26593  002E3A  0E00               	movlw	0
 26594  002E3C  6F19               	movwf	sprintf@width& (0+255),b
 26595  002E3E  D000               	goto	l13738
 26596  002E40                     l13738:
 26597                           
 26598                           ; BSR set to: 1
 26599                           ;doprnt.c: 1387: if(flag & 0x04) {
 26600  002E40  0101               	movlb	1	; () banked
 26601  002E42  A51B               	btfss	sprintf@flag& (0+255),2,b
 26602  002E44  D035               	goto	l13754
 26603                           
 26604                           ; BSR set to: 1
 26605                           ;doprnt.c: 1392: if(flag & 0x03)
 26606  002E46  0E03               	movlw	3
 26607  002E48  0101               	movlb	1	; () banked
 26608  002E4A  151B               	andwf	sprintf@flag& (0+255),w,b
 26609  002E4C  0100               	movlb	0	; () banked
 26610  002E4E  6FD5               	movwf	??_sprintf& (0+255),b
 26611  002E50  0E00               	movlw	0
 26612  002E52  0101               	movlb	1	; () banked
 26613  002E54  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 26614  002E56  0100               	movlb	0	; () banked
 26615  002E58  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 26616  002E5A  0100               	movlb	0	; () banked
 26617  002E5C  51D5               	movf	??_sprintf& (0+255),w,b
 26618  002E5E  0100               	movlb	0	; () banked
 26619  002E60  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
 26620  002E62  B4D8               	btfsc	status,2,c
 26621  002E64  D00A               	goto	l13746
 26622                           
 26623                           ; BSR set to: 0
 26624                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 26625  002E66  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26626  002E6A  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26627  002E6E  0E2D               	movlw	45
 26628  002E70  6EDF               	movwf	indf2,c
 26629                           
 26630                           ; BSR set to: 0
 26631  002E72  0100               	movlb	0	; () banked
 26632  002E74  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26633  002E76  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26634  002E78  D000               	goto	l13746
 26635  002E7A                     l13746:
 26636                           
 26637                           ; BSR set to: 0
 26638                           ;doprnt.c: 1415: if(width)
 26639  002E7A  0101               	movlb	1	; () banked
 26640  002E7C  5119               	movf	sprintf@width& (0+255),w,b
 26641  002E7E  0101               	movlb	1	; () banked
 26642  002E80  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 26643  002E82  B4D8               	btfsc	status,2,c
 26644  002E84  D04A               	goto	l13768
 26645  002E86                     l13748:
 26646                           
 26647                           ; BSR set to: 1
 26648                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 26649  002E86  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26650  002E8A  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26651  002E8E  0E30               	movlw	48
 26652  002E90  6EDF               	movwf	indf2,c
 26653                           
 26654                           ; BSR set to: 1
 26655  002E92  0100               	movlb	0	; () banked
 26656  002E94  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26657  002E96  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26658                           
 26659                           ; BSR set to: 0
 26660                           ;doprnt.c: 1418: while(--width);
 26661  002E98  0101               	movlb	1	; () banked
 26662  002E9A  0719               	decf	sprintf@width& (0+255),f,b
 26663  002E9C  A0D8               	btfss	status,0,c
 26664  002E9E  071A               	decf	(sprintf@width+1)& (0+255),f,b
 26665  002EA0  0101               	movlb	1	; () banked
 26666  002EA2  5119               	movf	sprintf@width& (0+255),w,b
 26667  002EA4  0101               	movlb	1	; () banked
 26668  002EA6  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 26669  002EA8  B4D8               	btfsc	status,2,c
 26670  002EAA  D037               	goto	l13768
 26671  002EAC  D7EC               	goto	l13748
 26672                           
 26673                           ; BSR set to: 1
 26674                           ;doprnt.c: 1420: } else
 26675                           
 26676                           ; BSR set to: 1
 26677  002EAE  D035               	goto	l13768
 26678  002EB0                     l13754:
 26679                           
 26680                           ; BSR set to: 1
 26681                           ;doprnt.c: 1422: {
 26682                           ;doprnt.c: 1424: if(width
 26683                           ;doprnt.c: 1428: )
 26684  002EB0  0101               	movlb	1	; () banked
 26685  002EB2  5119               	movf	sprintf@width& (0+255),w,b
 26686  002EB4  0101               	movlb	1	; () banked
 26687  002EB6  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 26688  002EB8  B4D8               	btfsc	status,2,c
 26689  002EBA  D015               	goto	l13762
 26690  002EBC                     l13756:
 26691                           
 26692                           ; BSR set to: 1
 26693                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 26694  002EBC  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26695  002EC0  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26696  002EC4  0E20               	movlw	32
 26697  002EC6  6EDF               	movwf	indf2,c
 26698                           
 26699                           ; BSR set to: 1
 26700  002EC8  0100               	movlb	0	; () banked
 26701  002ECA  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26702  002ECC  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26703                           
 26704                           ; BSR set to: 0
 26705                           ;doprnt.c: 1431: while(--width);
 26706  002ECE  0101               	movlb	1	; () banked
 26707  002ED0  0719               	decf	sprintf@width& (0+255),f,b
 26708  002ED2  A0D8               	btfss	status,0,c
 26709  002ED4  071A               	decf	(sprintf@width+1)& (0+255),f,b
 26710  002ED6  0101               	movlb	1	; () banked
 26711  002ED8  5119               	movf	sprintf@width& (0+255),w,b
 26712  002EDA  0101               	movlb	1	; () banked
 26713  002EDC  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 26714  002EDE  B4D8               	btfsc	status,2,c
 26715  002EE0  D002               	goto	l13762
 26716  002EE2  D7EC               	goto	l13756
 26717                           
 26718                           ; BSR set to: 1
 26719  002EE4  D000               	goto	l13762
 26720  002EE6                     l13762:
 26721                           
 26722                           ; BSR set to: 1
 26723                           ;doprnt.c: 1438: if(flag & 0x03)
 26724  002EE6  0E03               	movlw	3
 26725  002EE8  0101               	movlb	1	; () banked
 26726  002EEA  151B               	andwf	sprintf@flag& (0+255),w,b
 26727  002EEC  0100               	movlb	0	; () banked
 26728  002EEE  6FD5               	movwf	??_sprintf& (0+255),b
 26729  002EF0  0E00               	movlw	0
 26730  002EF2  0101               	movlb	1	; () banked
 26731  002EF4  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 26732  002EF6  0100               	movlb	0	; () banked
 26733  002EF8  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 26734  002EFA  0100               	movlb	0	; () banked
 26735  002EFC  51D5               	movf	??_sprintf& (0+255),w,b
 26736  002EFE  0100               	movlb	0	; () banked
 26737  002F00  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
 26738  002F02  B4D8               	btfsc	status,2,c
 26739  002F04  D00A               	goto	l13768
 26740                           
 26741                           ; BSR set to: 0
 26742                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 26743  002F06  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26744  002F0A  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26745  002F0E  0E2D               	movlw	45
 26746  002F10  6EDF               	movwf	indf2,c
 26747                           
 26748                           ; BSR set to: 0
 26749  002F12  0100               	movlb	0	; () banked
 26750  002F14  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26751  002F16  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26752                           
 26753                           ; BSR set to: 0
 26754  002F18  D000               	goto	l13768
 26755  002F1A                     l13768:
 26756                           
 26757                           ;doprnt.c: 1469: }
 26758                           ;doprnt.c: 1472: prec = c;
 26759  002F1A  0101               	movlb	1	; () banked
 26760  002F1C  511D               	movf	sprintf@c& (0+255),w,b
 26761  002F1E  0101               	movlb	1	; () banked
 26762  002F20  6F0A               	movwf	sprintf@prec& (0+255),b
 26763  002F22  6B0B               	clrf	(sprintf@prec+1)& (0+255),b
 26764  002F24  BF0A               	btfsc	sprintf@prec& (0+255),7,b
 26765  002F26  070B               	decf	(sprintf@prec+1)& (0+255),f,b
 26766                           
 26767                           ;doprnt.c: 1474: while(prec--) {
 26768  002F28  D09B               	goto	l13784
 26769                           
 26770                           ; BSR set to: 1
 26771                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
 26772  002F2A  D086               	goto	l13778
 26773  002F2C                     l13770:
 26774                           
 26775                           ; BSR set to: 1
 26776                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 26777  002F2C  C10A  F0D5         	movff	sprintf@prec,??_sprintf
 26778  002F30  C10B  F0D6         	movff	sprintf@prec+1,??_sprintf+1
 26779  002F34  0100               	movlb	0	; () banked
 26780  002F36  90D8               	bcf	status,0,c
 26781  002F38  37D5               	rlcf	??_sprintf& (0+255),f,b
 26782  002F3A  37D6               	rlcf	(??_sprintf+1)& (0+255),f,b
 26783  002F3C  0100               	movlb	0	; () banked
 26784  002F3E  90D8               	bcf	status,0,c
 26785  002F40  37D5               	rlcf	??_sprintf& (0+255),f,b
 26786  002F42  37D6               	rlcf	(??_sprintf+1)& (0+255),f,b
 26787  002F44  0E61               	movlw	low _dpowers
 26788  002F46  0100               	movlb	0	; () banked
 26789  002F48  25D5               	addwf	??_sprintf& (0+255),w,b
 26790  002F4A  6EF6               	movwf	tblptrl,c
 26791  002F4C  0EF1               	movlw	high _dpowers
 26792  002F4E  21D6               	addwfc	(??_sprintf+1)& (0+255),w,b
 26793  002F50  6EF7               	movwf	tblptrh,c
 26794  002F52                     	if	1	;There are 3 active tblptr bytes
 26795  002F52  6AF8               	clrf	tblptru,c
 26796  002F54  0E00               	movlw	low (__mediumconst shr (0+16))
 26797  002F56  22F8               	addwfc	tblptru,f,c
 26798  002F58                     	endif
 26799  002F58  0009               	tblrd		*+
 26800  002F5A  CFF5 F07D          	movff	tablat,___lldiv@divisor
 26801  002F5E  0009               	tblrd		*+
 26802  002F60  CFF5 F07E          	movff	tablat,___lldiv@divisor+1
 26803  002F64  0009               	tblrd		*+
 26804  002F66  CFF5 F07F          	movff	tablat,___lldiv@divisor+2
 26805  002F6A  000A               	tblrd		*-
 26806  002F6C  CFF5 F080          	movff	tablat,___lldiv@divisor+3
 26807  002F70  C112  F079         	movff	sprintf@val,___lldiv@dividend
 26808  002F74  C113  F07A         	movff	sprintf@val+1,___lldiv@dividend+1
 26809  002F78  C114  F07B         	movff	sprintf@val+2,___lldiv@dividend+2
 26810  002F7C  C115  F07C         	movff	sprintf@val+3,___lldiv@dividend+3
 26811  002F80  EC4E  F03F         	call	___lldiv	;wreg free
 26812  002F84  C079  F086         	movff	?___lldiv,___llmod@dividend
 26813  002F88  C07A  F087         	movff	?___lldiv+1,___llmod@dividend+1
 26814  002F8C  C07B  F088         	movff	?___lldiv+2,___llmod@dividend+2
 26815  002F90  C07C  F089         	movff	?___lldiv+3,___llmod@dividend+3
 26816  002F94  0E0A               	movlw	10
 26817  002F96  0100               	movlb	0	; () banked
 26818  002F98  6F8A               	movwf	___llmod@divisor& (0+255),b
 26819  002F9A  0E00               	movlw	0
 26820  002F9C  6F8B               	movwf	(___llmod@divisor+1)& (0+255),b
 26821  002F9E  0E00               	movlw	0
 26822  002FA0  6F8C               	movwf	(___llmod@divisor+2)& (0+255),b
 26823  002FA2  0E00               	movlw	0
 26824  002FA4  6F8D               	movwf	(___llmod@divisor+3)& (0+255),b
 26825  002FA6  ECD2  F041         	call	___llmod	;wreg free
 26826  002FAA  0100               	movlb	0	; () banked
 26827  002FAC  5186               	movf	?___llmod& (0+255),w,b
 26828  002FAE  0F30               	addlw	48
 26829  002FB0  0101               	movlb	1	; () banked
 26830  002FB2  6F1D               	movwf	sprintf@c& (0+255),b
 26831                           
 26832                           ;doprnt.c: 1491: break;
 26833  002FB4  D04B               	goto	l13780
 26834  002FB6                     l13772:
 26835                           
 26836                           ; BSR set to: 1
 26837                           ;doprnt.c: 1499: {
 26838                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 26839  002FB6  C112  F079         	movff	sprintf@val,___lldiv@dividend
 26840  002FBA  C113  F07A         	movff	sprintf@val+1,___lldiv@dividend+1
 26841  002FBE  C114  F07B         	movff	sprintf@val+2,___lldiv@dividend+2
 26842  002FC2  C115  F07C         	movff	sprintf@val+3,___lldiv@dividend+3
 26843  002FC6  C10A  F0D5         	movff	sprintf@prec,??_sprintf
 26844  002FCA  C10B  F0D6         	movff	sprintf@prec+1,??_sprintf+1
 26845  002FCE  0100               	movlb	0	; () banked
 26846  002FD0  90D8               	bcf	status,0,c
 26847  002FD2  37D5               	rlcf	??_sprintf& (0+255),f,b
 26848  002FD4  37D6               	rlcf	(??_sprintf+1)& (0+255),f,b
 26849  002FD6  0100               	movlb	0	; () banked
 26850  002FD8  90D8               	bcf	status,0,c
 26851  002FDA  37D5               	rlcf	??_sprintf& (0+255),f,b
 26852  002FDC  37D6               	rlcf	(??_sprintf+1)& (0+255),f,b
 26853  002FDE  0ED7               	movlw	low _hexpowers
 26854  002FE0  0100               	movlb	0	; () banked
 26855  002FE2  25D5               	addwf	??_sprintf& (0+255),w,b
 26856  002FE4  6EF6               	movwf	tblptrl,c
 26857  002FE6  0EF1               	movlw	high _hexpowers
 26858  002FE8  21D6               	addwfc	(??_sprintf+1)& (0+255),w,b
 26859  002FEA  6EF7               	movwf	tblptrh,c
 26860  002FEC                     	if	1	;There are 3 active tblptr bytes
 26861  002FEC  6AF8               	clrf	tblptru,c
 26862  002FEE  0E00               	movlw	low (__mediumconst shr (0+16))
 26863  002FF0  22F8               	addwfc	tblptru,f,c
 26864  002FF2                     	endif
 26865  002FF2  0009               	tblrd		*+
 26866  002FF4  CFF5 F07D          	movff	tablat,___lldiv@divisor
 26867  002FF8  0009               	tblrd		*+
 26868  002FFA  CFF5 F07E          	movff	tablat,___lldiv@divisor+1
 26869  002FFE  0009               	tblrd		*+
 26870  003000  CFF5 F07F          	movff	tablat,___lldiv@divisor+2
 26871  003004  000A               	tblrd		*-
 26872  003006  CFF5 F080          	movff	tablat,___lldiv@divisor+3
 26873  00300A  EC4E  F03F         	call	___lldiv	;wreg free
 26874  00300E  0100               	movlb	0	; () banked
 26875  003010  5179               	movf	?___lldiv& (0+255),w,b
 26876  003012  0B0F               	andlw	15
 26877  003014  0101               	movlb	1	; () banked
 26878  003016  6F03               	movwf	sprintf@idx& (0+255),b
 26879                           
 26880                           ; BSR set to: 1
 26881                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 26882  003018  0101               	movlb	1	; () banked
 26883  00301A  5103               	movf	sprintf@idx& (0+255),w,b
 26884  00301C  0D01               	mullw	1
 26885  00301E  0E24               	movlw	low STR_149
 26886  003020  24F3               	addwf	prodl,w,c
 26887  003022  6EF6               	movwf	tblptrl,c
 26888  003024  0EFE               	movlw	high STR_149
 26889  003026  20F4               	addwfc	prodh,w,c
 26890  003028  6EF7               	movwf	tblptrh,c
 26891  00302A                     	if	1	;There are 3 active tblptr bytes
 26892  00302A  6AF8               	clrf	tblptru,c
 26893  00302C  0E00               	movlw	low (__mediumconst shr (0+16))
 26894  00302E  22F8               	addwfc	tblptru,f,c
 26895  003030                     	endif
 26896  003030  0008               	tblrd		*
 26897  003032  CFF5 F11D          	movff	tablat,sprintf@c
 26898                           
 26899                           ; BSR set to: 1
 26900                           ;doprnt.c: 1523: }
 26901                           
 26902                           ;doprnt.c: 1508: }
 26903                           ;doprnt.c: 1510: break;
 26904  003036  D00A               	goto	l13780
 26905  003038                     l13778:
 26906                           
 26907                           ; BSR set to: 1
 26908  003038  0101               	movlb	1	; () banked
 26909  00303A  511B               	movf	sprintf@flag& (0+255),w,b
 26910  00303C  0B80               	andlw	128
 26911                           
 26912                           ; Switch size 1, requested type "space"
 26913                           ; Number of cases is 2, Range of values is 0 to 128
 26914                           ; switch strategies available:
 26915                           ; Name         Instructions Cycles
 26916                           ; simple_byte            7     4 (average)
 26917                           ;	Chosen strategy is simple_byte
 26918  00303E  0A00               	xorlw	0	; case 0
 26919  003040  B4D8               	btfsc	status,2,c
 26920  003042  D774               	goto	l13770
 26921  003044  0A80               	xorlw	128	; case 128
 26922  003046  B4D8               	btfsc	status,2,c
 26923  003048  D7B6               	goto	l13772
 26924  00304A  D000               	goto	l13780
 26925  00304C                     l13780:
 26926                           
 26927                           ; BSR set to: 1
 26928                           ;doprnt.c: 1524: ((*sp++ = (c)));
 26929  00304C  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26930  003050  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26931  003054  C11D  FFDF         	movff	sprintf@c,indf2
 26932                           
 26933                           ; BSR set to: 1
 26934  003058  0100               	movlb	0	; () banked
 26935  00305A  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26936  00305C  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26937  00305E  D000               	goto	l13784
 26938  003060                     l13784:
 26939  003060  0101               	movlb	1	; () banked
 26940  003062  070A               	decf	sprintf@prec& (0+255),f,b
 26941  003064  A0D8               	btfss	status,0,c
 26942  003066  070B               	decf	(sprintf@prec+1)& (0+255),f,b
 26943  003068  0101               	movlb	1	; () banked
 26944  00306A  290A               	incf	sprintf@prec& (0+255),w,b
 26945  00306C  E1E5               	bnz	l13778
 26946  00306E  0101               	movlb	1	; () banked
 26947  003070  290B               	incf	(sprintf@prec+1)& (0+255),w,b
 26948  003072  B4D8               	btfsc	status,2,c
 26949  003074  D002               	goto	l13786
 26950  003076  D7E0               	goto	l13778
 26951                           
 26952                           ; BSR set to: 1
 26953  003078  D000               	goto	l13786
 26954  00307A                     l13786:
 26955  00307A  C0C9  FFF6         	movff	sprintf@f,tblptrl
 26956  00307E  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
 26957  003082  0100               	movlb	0	; () banked
 26958  003084  4BC9               	infsnz	sprintf@f& (0+255),f,b
 26959  003086  2BCA               	incf	(sprintf@f+1)& (0+255),f,b
 26960  003088                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26961  003088  6AF8               	clrf	tblptru,c
 26962  00308A                     	endif
 26963  00308A                     	if	0	;tblptru may be non-zero
 26964  00308A                     	endif
 26965  00308A  0008               	tblrd		*
 26966  00308C  CFF5 F11D          	movff	tablat,sprintf@c
 26967  003090  0101               	movlb	1	; () banked
 26968  003092  511D               	movf	sprintf@c& (0+255),w,b
 26969  003094  B4D8               	btfsc	status,2,c
 26970  003096  D003               	goto	l13788
 26971  003098  EFBD  F010         	goto	l13414
 26972                           
 26973                           ; BSR set to: 1
 26974  00309C  D000               	goto	l13788
 26975  00309E                     l13788:
 26976                           
 26977                           ;doprnt.c: 1538: *sp = 0;
 26978  00309E  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26979  0030A2  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26980  0030A6  0E00               	movlw	0
 26981  0030A8  6EDF               	movwf	indf2,c
 26982  0030AA  0012               	return	
 26983                           
 26984                           ;doprnt.c: 1540: return 0;
 26985                           ;	Return value of _sprintf is never used
 26986  0030AC  0012               	return		;funcret
 26987  0030AE                     __end_of_sprintf:
 26988                           	opt stack 0
 26989                           tblptru	equ	0xFF8
 26990                           tblptrh	equ	0xFF7
 26991                           tblptrl	equ	0xFF6
 26992                           tablat	equ	0xFF5
 26993                           prodh	equ	0xFF4
 26994                           prodl	equ	0xFF3
 26995                           intcon	equ	0xFF2
 26996                           intcon2	equ	0xFF1
 26997                           indf0	equ	0xFEF
 26998                           postinc0	equ	0xFEE
 26999                           fsr0h	equ	0xFEA
 27000                           fsr0l	equ	0xFE9
 27001                           wreg	equ	0xFE8
 27002                           indf1	equ	0xFE7
 27003                           postdec1	equ	0xFE5
 27004                           fsr1h	equ	0xFE2
 27005                           fsr1l	equ	0xFE1
 27006                           indf2	equ	0xFDF
 27007                           postinc2	equ	0xFDE
 27008                           postdec2	equ	0xFDD
 27009                           fsr2h	equ	0xFDA
 27010                           fsr2l	equ	0xFD9
 27011                           status	equ	0xFD8
 27012                           
 27013 ;; *************** function _scale *****************
 27014 ;; Defined at:
 27015 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 27016 ;; Parameters:    Size  Location     Type
 27017 ;;  scl             1    wreg     char 
 27018 ;; Auto vars:     Size  Location     Type
 27019 ;;  scl             1   72[BANK0 ] char 
 27020 ;; Return value:  Size  Location     Type
 27021 ;;                  3   66[BANK0 ] char 
 27022 ;; Registers used:
 27023 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27024 ;; Tracked objects:
 27025 ;;		On entry : 0/0
 27026 ;;		On exit  : 0/0
 27027 ;;		Unchanged: 0/0
 27028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27029 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27030 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27032 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27033 ;;Total ram usage:        7 bytes
 27034 ;; Hardware stack levels used:    1
 27035 ;; Hardware stack levels required when called:    8
 27036 ;; This function calls:
 27037 ;;		___awdiv
 27038 ;;		___awmod
 27039 ;;		___ftmul
 27040 ;;		___wmul
 27041 ;; This function is called by:
 27042 ;;		_sprintf
 27043 ;; This function uses a non-reentrant model
 27044 ;;
 27045                           
 27046                           	psect	text60
 27047  0042D4                     __ptext60:
 27048                           	opt stack 0
 27049  0042D4                     _scale:
 27050                           	opt stack 20
 27051                           
 27052                           ;incstack = 0
 27053                           ;scale@scl stored from wreg
 27054  0042D4  0100               	movlb	0	; () banked
 27055  0042D6  6FA8               	movwf	scale@scl& (0+255),b
 27056                           
 27057                           ; BSR set to: 0
 27058                           ;doprnt.c: 428: if(scl < 0) {
 27059  0042D8  0100               	movlb	0	; () banked
 27060  0042DA  AFA8               	btfss	scale@scl& (0+255),7,b
 27061  0042DC  D13F               	goto	l12990
 27062                           
 27063                           ; BSR set to: 0
 27064                           ;doprnt.c: 429: scl = -scl;
 27065  0042DE  0100               	movlb	0	; () banked
 27066  0042E0  6DA8               	negf	scale@scl& (0+255),b
 27067                           
 27068                           ;doprnt.c: 430: if(scl>=110)
 27069  0042E2  0100               	movlb	0	; () banked
 27070  0042E4  51A8               	movf	scale@scl& (0+255),w,b
 27071  0042E6  0A80               	xorlw	128
 27072  0042E8  0F12               	addlw	-238
 27073  0042EA  A0D8               	btfss	status,0,c
 27074  0042EC  D0B6               	goto	l12980
 27075                           
 27076                           ; BSR set to: 0
 27077                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 27078  0042EE  0E00               	movlw	0
 27079  0042F0  0100               	movlb	0	; () banked
 27080  0042F2  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27081  0042F4  0E03               	movlw	3
 27082  0042F6  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27083  0042F8  0E00               	movlw	0
 27084  0042FA  0100               	movlb	0	; () banked
 27085  0042FC  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27086  0042FE  0E0A               	movlw	10
 27087  004300  6F81               	movwf	___awdiv@divisor& (0+255),b
 27088  004302  0E00               	movlw	0
 27089  004304  0100               	movlb	0	; () banked
 27090  004306  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27091  004308  0E64               	movlw	100
 27092  00430A  6F7B               	movwf	___awmod@divisor& (0+255),b
 27093  00430C  0100               	movlb	0	; () banked
 27094  00430E  51A8               	movf	scale@scl& (0+255),w,b
 27095  004310  0100               	movlb	0	; () banked
 27096  004312  6F79               	movwf	___awmod@dividend& (0+255),b
 27097  004314  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27098  004316  BF79               	btfsc	___awmod@dividend& (0+255),7,b
 27099  004318  077A               	decf	(___awmod@dividend+1)& (0+255),f,b
 27100  00431A  ECC8  F040         	call	___awmod	;wreg free
 27101  00431E  C079  F07F         	movff	?___awmod,___awdiv@dividend
 27102  004322  C07A  F080         	movff	?___awmod+1,___awdiv@dividend+1
 27103  004326  EC1B  F03E         	call	___awdiv	;wreg free
 27104  00432A  0E09               	movlw	9
 27105  00432C  0100               	movlb	0	; () banked
 27106  00432E  257F               	addwf	?___awdiv& (0+255),w,b
 27107  004330  0100               	movlb	0	; () banked
 27108  004332  6F87               	movwf	___wmul@multiplier& (0+255),b
 27109  004334  0E00               	movlw	0
 27110  004336  0100               	movlb	0	; () banked
 27111  004338  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27112  00433A  0100               	movlb	0	; () banked
 27113  00433C  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27114  00433E  ECCD  F048         	call	___wmul	;wreg free
 27115  004342  0E89               	movlw	low __npowers_
 27116  004344  0100               	movlb	0	; () banked
 27117  004346  2587               	addwf	?___wmul& (0+255),w,b
 27118  004348  6EF6               	movwf	tblptrl,c
 27119  00434A  0EF1               	movlw	high __npowers_
 27120  00434C  0100               	movlb	0	; () banked
 27121  00434E  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27122  004350  6EF7               	movwf	tblptrh,c
 27123  004352                     	if	1	;There are 3 active tblptr bytes
 27124  004352  6AF8               	clrf	tblptru,c
 27125  004354  0E00               	movlw	low (__mediumconst shr (0+16))
 27126  004356  22F8               	addwfc	tblptru,f,c
 27127  004358                     	endif
 27128  004358  0009               	tblrd		*+
 27129  00435A  CFF5 F096          	movff	tablat,___ftmul@f2
 27130  00435E  0009               	tblrd		*+
 27131  004360  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27132  004364  000A               	tblrd		*-
 27133  004366  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27134  00436A  0E00               	movlw	0
 27135  00436C  0100               	movlb	0	; () banked
 27136  00436E  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27137  004370  0E64               	movlw	100
 27138  004372  6F81               	movwf	___awdiv@divisor& (0+255),b
 27139  004374  0100               	movlb	0	; () banked
 27140  004376  51A8               	movf	scale@scl& (0+255),w,b
 27141  004378  0100               	movlb	0	; () banked
 27142  00437A  6F7F               	movwf	___awdiv@dividend& (0+255),b
 27143  00437C  6B80               	clrf	(___awdiv@dividend+1)& (0+255),b
 27144  00437E  BF7F               	btfsc	___awdiv@dividend& (0+255),7,b
 27145  004380  0780               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27146  004382  EC1B  F03E         	call	___awdiv	;wreg free
 27147  004386  0E12               	movlw	18
 27148  004388  0100               	movlb	0	; () banked
 27149  00438A  257F               	addwf	?___awdiv& (0+255),w,b
 27150  00438C  0100               	movlb	0	; () banked
 27151  00438E  6F87               	movwf	___wmul@multiplier& (0+255),b
 27152  004390  0E00               	movlw	0
 27153  004392  0100               	movlb	0	; () banked
 27154  004394  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27155  004396  0100               	movlb	0	; () banked
 27156  004398  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27157  00439A  0E00               	movlw	0
 27158  00439C  0100               	movlb	0	; () banked
 27159  00439E  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27160  0043A0  0E03               	movlw	3
 27161  0043A2  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27162  0043A4  ECCD  F048         	call	___wmul	;wreg free
 27163  0043A8  0E89               	movlw	low __npowers_
 27164  0043AA  0100               	movlb	0	; () banked
 27165  0043AC  2587               	addwf	?___wmul& (0+255),w,b
 27166  0043AE  6EF6               	movwf	tblptrl,c
 27167  0043B0  0EF1               	movlw	high __npowers_
 27168  0043B2  0100               	movlb	0	; () banked
 27169  0043B4  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27170  0043B6  6EF7               	movwf	tblptrh,c
 27171  0043B8                     	if	1	;There are 3 active tblptr bytes
 27172  0043B8  6AF8               	clrf	tblptru,c
 27173  0043BA  0E00               	movlw	low (__mediumconst shr (0+16))
 27174  0043BC  22F8               	addwfc	tblptru,f,c
 27175  0043BE                     	endif
 27176  0043BE  0009               	tblrd		*+
 27177  0043C0  CFF5 F093          	movff	tablat,___ftmul@f1
 27178  0043C4  0009               	tblrd		*+
 27179  0043C6  CFF5 F094          	movff	tablat,___ftmul@f1+1
 27180  0043CA  000A               	tblrd		*-
 27181  0043CC  CFF5 F095          	movff	tablat,___ftmul@f1+2
 27182  0043D0  EC17  F037         	call	___ftmul	;wreg free
 27183  0043D4  C093  F0A5         	movff	?___ftmul,_scale$3800
 27184  0043D8  C094  F0A6         	movff	?___ftmul+1,_scale$3800+1
 27185  0043DC  C095  F0A7         	movff	?___ftmul+2,_scale$3800+2
 27186                           
 27187                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 27188  0043E0  C0A5  F093         	movff	_scale$3800,___ftmul@f1
 27189  0043E4  C0A6  F094         	movff	_scale$3800+1,___ftmul@f1+1
 27190  0043E8  C0A7  F095         	movff	_scale$3800+2,___ftmul@f1+2
 27191  0043EC  0E00               	movlw	0
 27192  0043EE  0100               	movlb	0	; () banked
 27193  0043F0  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27194  0043F2  0E03               	movlw	3
 27195  0043F4  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27196  0043F6  0E00               	movlw	0
 27197  0043F8  0100               	movlb	0	; () banked
 27198  0043FA  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27199  0043FC  0E0A               	movlw	10
 27200  0043FE  6F7B               	movwf	___awmod@divisor& (0+255),b
 27201  004400  0100               	movlb	0	; () banked
 27202  004402  51A8               	movf	scale@scl& (0+255),w,b
 27203  004404  0100               	movlb	0	; () banked
 27204  004406  6F79               	movwf	___awmod@dividend& (0+255),b
 27205  004408  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27206  00440A  BF79               	btfsc	___awmod@dividend& (0+255),7,b
 27207  00440C  077A               	decf	(___awmod@dividend+1)& (0+255),f,b
 27208  00440E  ECC8  F040         	call	___awmod	;wreg free
 27209  004412  C079  F087         	movff	?___awmod,___wmul@multiplier
 27210  004416  C07A  F088         	movff	?___awmod+1,___wmul@multiplier+1
 27211  00441A  ECCD  F048         	call	___wmul	;wreg free
 27212  00441E  0E89               	movlw	low __npowers_
 27213  004420  0100               	movlb	0	; () banked
 27214  004422  2587               	addwf	?___wmul& (0+255),w,b
 27215  004424  6EF6               	movwf	tblptrl,c
 27216  004426  0EF1               	movlw	high __npowers_
 27217  004428  0100               	movlb	0	; () banked
 27218  00442A  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27219  00442C  6EF7               	movwf	tblptrh,c
 27220  00442E                     	if	1	;There are 3 active tblptr bytes
 27221  00442E  6AF8               	clrf	tblptru,c
 27222  004430  0E00               	movlw	low (__mediumconst shr (0+16))
 27223  004432  22F8               	addwfc	tblptru,f,c
 27224  004434                     	endif
 27225  004434  0009               	tblrd		*+
 27226  004436  CFF5 F096          	movff	tablat,___ftmul@f2
 27227  00443A  0009               	tblrd		*+
 27228  00443C  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27229  004440  000A               	tblrd		*-
 27230  004442  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27231  004446  EC17  F037         	call	___ftmul	;wreg free
 27232  00444A  C093  F0A2         	movff	?___ftmul,?_scale
 27233  00444E  C094  F0A3         	movff	?___ftmul+1,?_scale+1
 27234  004452  C095  F0A4         	movff	?___ftmul+2,?_scale+2
 27235  004456  0012               	return	
 27236  004458  D06B               	goto	l12986
 27237  00445A                     l12980:
 27238                           
 27239                           ;doprnt.c: 432: else if(scl > 10)
 27240  00445A  0100               	movlb	0	; () banked
 27241  00445C  51A8               	movf	scale@scl& (0+255),w,b
 27242  00445E  0A80               	xorlw	128
 27243  004460  0F75               	addlw	-139
 27244  004462  A0D8               	btfss	status,0,c
 27245  004464  D065               	goto	l12986
 27246                           
 27247                           ; BSR set to: 0
 27248                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 27249  004466  0E00               	movlw	0
 27250  004468  0100               	movlb	0	; () banked
 27251  00446A  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27252  00446C  0E0A               	movlw	10
 27253  00446E  6F81               	movwf	___awdiv@divisor& (0+255),b
 27254  004470  0100               	movlb	0	; () banked
 27255  004472  51A8               	movf	scale@scl& (0+255),w,b
 27256  004474  0100               	movlb	0	; () banked
 27257  004476  6F7F               	movwf	___awdiv@dividend& (0+255),b
 27258  004478  6B80               	clrf	(___awdiv@dividend+1)& (0+255),b
 27259  00447A  BF7F               	btfsc	___awdiv@dividend& (0+255),7,b
 27260  00447C  0780               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27261  00447E  EC1B  F03E         	call	___awdiv	;wreg free
 27262  004482  0E09               	movlw	9
 27263  004484  0100               	movlb	0	; () banked
 27264  004486  257F               	addwf	?___awdiv& (0+255),w,b
 27265  004488  0100               	movlb	0	; () banked
 27266  00448A  6F87               	movwf	___wmul@multiplier& (0+255),b
 27267  00448C  0E00               	movlw	0
 27268  00448E  0100               	movlb	0	; () banked
 27269  004490  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27270  004492  0100               	movlb	0	; () banked
 27271  004494  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27272  004496  0E00               	movlw	0
 27273  004498  0100               	movlb	0	; () banked
 27274  00449A  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27275  00449C  0E03               	movlw	3
 27276  00449E  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27277  0044A0  ECCD  F048         	call	___wmul	;wreg free
 27278  0044A4  0E89               	movlw	low __npowers_
 27279  0044A6  0100               	movlb	0	; () banked
 27280  0044A8  2587               	addwf	?___wmul& (0+255),w,b
 27281  0044AA  6EF6               	movwf	tblptrl,c
 27282  0044AC  0EF1               	movlw	high __npowers_
 27283  0044AE  0100               	movlb	0	; () banked
 27284  0044B0  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27285  0044B2  6EF7               	movwf	tblptrh,c
 27286  0044B4                     	if	1	;There are 3 active tblptr bytes
 27287  0044B4  6AF8               	clrf	tblptru,c
 27288  0044B6  0E00               	movlw	low (__mediumconst shr (0+16))
 27289  0044B8  22F8               	addwfc	tblptru,f,c
 27290  0044BA                     	endif
 27291  0044BA  0009               	tblrd		*+
 27292  0044BC  CFF5 F093          	movff	tablat,___ftmul@f1
 27293  0044C0  0009               	tblrd		*+
 27294  0044C2  CFF5 F094          	movff	tablat,___ftmul@f1+1
 27295  0044C6  000A               	tblrd		*-
 27296  0044C8  CFF5 F095          	movff	tablat,___ftmul@f1+2
 27297  0044CC  0E00               	movlw	0
 27298  0044CE  0100               	movlb	0	; () banked
 27299  0044D0  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27300  0044D2  0E03               	movlw	3
 27301  0044D4  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27302  0044D6  0E00               	movlw	0
 27303  0044D8  0100               	movlb	0	; () banked
 27304  0044DA  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27305  0044DC  0E0A               	movlw	10
 27306  0044DE  6F7B               	movwf	___awmod@divisor& (0+255),b
 27307  0044E0  0100               	movlb	0	; () banked
 27308  0044E2  51A8               	movf	scale@scl& (0+255),w,b
 27309  0044E4  0100               	movlb	0	; () banked
 27310  0044E6  6F79               	movwf	___awmod@dividend& (0+255),b
 27311  0044E8  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27312  0044EA  BF79               	btfsc	___awmod@dividend& (0+255),7,b
 27313  0044EC  077A               	decf	(___awmod@dividend+1)& (0+255),f,b
 27314  0044EE  ECC8  F040         	call	___awmod	;wreg free
 27315  0044F2  C079  F087         	movff	?___awmod,___wmul@multiplier
 27316  0044F6  C07A  F088         	movff	?___awmod+1,___wmul@multiplier+1
 27317  0044FA  ECCD  F048         	call	___wmul	;wreg free
 27318  0044FE  0E89               	movlw	low __npowers_
 27319  004500  0100               	movlb	0	; () banked
 27320  004502  2587               	addwf	?___wmul& (0+255),w,b
 27321  004504  6EF6               	movwf	tblptrl,c
 27322  004506  0EF1               	movlw	high __npowers_
 27323  004508  0100               	movlb	0	; () banked
 27324  00450A  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27325  00450C  6EF7               	movwf	tblptrh,c
 27326  00450E                     	if	1	;There are 3 active tblptr bytes
 27327  00450E  6AF8               	clrf	tblptru,c
 27328  004510  0E00               	movlw	low (__mediumconst shr (0+16))
 27329  004512  22F8               	addwfc	tblptru,f,c
 27330  004514                     	endif
 27331  004514  0009               	tblrd		*+
 27332  004516  CFF5 F096          	movff	tablat,___ftmul@f2
 27333  00451A  0009               	tblrd		*+
 27334  00451C  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27335  004520  000A               	tblrd		*-
 27336  004522  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27337  004526  EC17  F037         	call	___ftmul	;wreg free
 27338  00452A  D78F               	goto	L21
 27339  00452C  0012               	return	
 27340  00452E  D000               	goto	l12986
 27341  004530                     l12986:
 27342                           
 27343                           ;doprnt.c: 434: return _npowers_[scl];
 27344  004530  0100               	movlb	0	; () banked
 27345  004532  51A8               	movf	scale@scl& (0+255),w,b
 27346  004534  0D03               	mullw	3
 27347  004536  0E89               	movlw	low __npowers_
 27348  004538  24F3               	addwf	prodl,w,c
 27349  00453A  6EF6               	movwf	tblptrl,c
 27350  00453C  0EF1               	movlw	high __npowers_
 27351  00453E  20F4               	addwfc	prodh,w,c
 27352  004540  6EF7               	movwf	tblptrh,c
 27353  004542                     	if	1	;There are 3 active tblptr bytes
 27354  004542  6AF8               	clrf	tblptru,c
 27355  004544  0E00               	movlw	low (__mediumconst shr (0+16))
 27356  004546  22F8               	addwfc	tblptru,f,c
 27357  004548                     	endif
 27358  004548  0009               	tblrd		*+
 27359  00454A  CFF5 F0A2          	movff	tablat,?_scale
 27360  00454E  0009               	tblrd		*+
 27361  004550  CFF5 F0A3          	movff	tablat,?_scale+1
 27362  004554  000A               	tblrd		*-
 27363  004556  CFF5 F0A4          	movff	tablat,?_scale+2
 27364                           
 27365                           ; BSR set to: 0
 27366  00455A  0012               	return	
 27367  00455C                     l12990:
 27368                           
 27369                           ; BSR set to: 0
 27370                           ;doprnt.c: 435: }
 27371                           ;doprnt.c: 436: if(scl>=110)
 27372  00455C  0100               	movlb	0	; () banked
 27373  00455E  51A8               	movf	scale@scl& (0+255),w,b
 27374  004560  0A80               	xorlw	128
 27375  004562  0F12               	addlw	-238
 27376  004564  A0D8               	btfss	status,0,c
 27377  004566  D0B6               	goto	l12998
 27378                           
 27379                           ; BSR set to: 0
 27380                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 27381  004568  0E00               	movlw	0
 27382  00456A  0100               	movlb	0	; () banked
 27383  00456C  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27384  00456E  0E03               	movlw	3
 27385  004570  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27386  004572  0E00               	movlw	0
 27387  004574  0100               	movlb	0	; () banked
 27388  004576  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27389  004578  0E0A               	movlw	10
 27390  00457A  6F81               	movwf	___awdiv@divisor& (0+255),b
 27391  00457C  0E00               	movlw	0
 27392  00457E  0100               	movlb	0	; () banked
 27393  004580  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27394  004582  0E64               	movlw	100
 27395  004584  6F7B               	movwf	___awmod@divisor& (0+255),b
 27396  004586  0100               	movlb	0	; () banked
 27397  004588  51A8               	movf	scale@scl& (0+255),w,b
 27398  00458A  0100               	movlb	0	; () banked
 27399  00458C  6F79               	movwf	___awmod@dividend& (0+255),b
 27400  00458E  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27401  004590  BF79               	btfsc	___awmod@dividend& (0+255),7,b
 27402  004592  077A               	decf	(___awmod@dividend+1)& (0+255),f,b
 27403  004594  ECC8  F040         	call	___awmod	;wreg free
 27404  004598  C079  F07F         	movff	?___awmod,___awdiv@dividend
 27405  00459C  C07A  F080         	movff	?___awmod+1,___awdiv@dividend+1
 27406  0045A0  EC1B  F03E         	call	___awdiv	;wreg free
 27407  0045A4  0E09               	movlw	9
 27408  0045A6  0100               	movlb	0	; () banked
 27409  0045A8  257F               	addwf	?___awdiv& (0+255),w,b
 27410  0045AA  0100               	movlb	0	; () banked
 27411  0045AC  6F87               	movwf	___wmul@multiplier& (0+255),b
 27412  0045AE  0E00               	movlw	0
 27413  0045B0  0100               	movlb	0	; () banked
 27414  0045B2  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27415  0045B4  0100               	movlb	0	; () banked
 27416  0045B6  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27417  0045B8  ECCD  F048         	call	___wmul	;wreg free
 27418  0045BC  0EB0               	movlw	low __powers_
 27419  0045BE  0100               	movlb	0	; () banked
 27420  0045C0  2587               	addwf	?___wmul& (0+255),w,b
 27421  0045C2  6EF6               	movwf	tblptrl,c
 27422  0045C4  0EF1               	movlw	high __powers_
 27423  0045C6  0100               	movlb	0	; () banked
 27424  0045C8  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27425  0045CA  6EF7               	movwf	tblptrh,c
 27426  0045CC                     	if	1	;There are 3 active tblptr bytes
 27427  0045CC  6AF8               	clrf	tblptru,c
 27428  0045CE  0E00               	movlw	low (__mediumconst shr (0+16))
 27429  0045D0  22F8               	addwfc	tblptru,f,c
 27430  0045D2                     	endif
 27431  0045D2  0009               	tblrd		*+
 27432  0045D4  CFF5 F096          	movff	tablat,___ftmul@f2
 27433  0045D8  0009               	tblrd		*+
 27434  0045DA  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27435  0045DE  000A               	tblrd		*-
 27436  0045E0  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27437  0045E4  0E00               	movlw	0
 27438  0045E6  0100               	movlb	0	; () banked
 27439  0045E8  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27440  0045EA  0E64               	movlw	100
 27441  0045EC  6F81               	movwf	___awdiv@divisor& (0+255),b
 27442  0045EE  0100               	movlb	0	; () banked
 27443  0045F0  51A8               	movf	scale@scl& (0+255),w,b
 27444  0045F2  0100               	movlb	0	; () banked
 27445  0045F4  6F7F               	movwf	___awdiv@dividend& (0+255),b
 27446  0045F6  6B80               	clrf	(___awdiv@dividend+1)& (0+255),b
 27447  0045F8  BF7F               	btfsc	___awdiv@dividend& (0+255),7,b
 27448  0045FA  0780               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27449  0045FC  EC1B  F03E         	call	___awdiv	;wreg free
 27450  004600  0E12               	movlw	18
 27451  004602  0100               	movlb	0	; () banked
 27452  004604  257F               	addwf	?___awdiv& (0+255),w,b
 27453  004606  0100               	movlb	0	; () banked
 27454  004608  6F87               	movwf	___wmul@multiplier& (0+255),b
 27455  00460A  0E00               	movlw	0
 27456  00460C  0100               	movlb	0	; () banked
 27457  00460E  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27458  004610  0100               	movlb	0	; () banked
 27459  004612  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27460  004614  0E00               	movlw	0
 27461  004616  0100               	movlb	0	; () banked
 27462  004618  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27463  00461A  0E03               	movlw	3
 27464  00461C  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27465  00461E  ECCD  F048         	call	___wmul	;wreg free
 27466  004622  0EB0               	movlw	low __powers_
 27467  004624  0100               	movlb	0	; () banked
 27468  004626  2587               	addwf	?___wmul& (0+255),w,b
 27469  004628  6EF6               	movwf	tblptrl,c
 27470  00462A  0EF1               	movlw	high __powers_
 27471  00462C  0100               	movlb	0	; () banked
 27472  00462E  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27473  004630  6EF7               	movwf	tblptrh,c
 27474  004632                     	if	1	;There are 3 active tblptr bytes
 27475  004632  6AF8               	clrf	tblptru,c
 27476  004634  0E00               	movlw	low (__mediumconst shr (0+16))
 27477  004636  22F8               	addwfc	tblptru,f,c
 27478  004638                     	endif
 27479  004638  0009               	tblrd		*+
 27480  00463A  CFF5 F093          	movff	tablat,___ftmul@f1
 27481  00463E  0009               	tblrd		*+
 27482  004640  CFF5 F094          	movff	tablat,___ftmul@f1+1
 27483  004644  000A               	tblrd		*-
 27484  004646  CFF5 F095          	movff	tablat,___ftmul@f1+2
 27485  00464A  EC17  F037         	call	___ftmul	;wreg free
 27486  00464E  C093  F0A5         	movff	?___ftmul,_scale$3800
 27487  004652  C094  F0A6         	movff	?___ftmul+1,_scale$3800+1
 27488  004656  C095  F0A7         	movff	?___ftmul+2,_scale$3800+2
 27489                           
 27490                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 27491  00465A  C0A5  F093         	movff	_scale$3800,___ftmul@f1
 27492  00465E  C0A6  F094         	movff	_scale$3800+1,___ftmul@f1+1
 27493  004662  C0A7  F095         	movff	_scale$3800+2,___ftmul@f1+2
 27494  004666  0E00               	movlw	0
 27495  004668  0100               	movlb	0	; () banked
 27496  00466A  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27497  00466C  0E03               	movlw	3
 27498  00466E  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27499  004670  0E00               	movlw	0
 27500  004672  0100               	movlb	0	; () banked
 27501  004674  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27502  004676  0E0A               	movlw	10
 27503  004678  6F7B               	movwf	___awmod@divisor& (0+255),b
 27504  00467A  0100               	movlb	0	; () banked
 27505  00467C  51A8               	movf	scale@scl& (0+255),w,b
 27506  00467E  0100               	movlb	0	; () banked
 27507  004680  6F79               	movwf	___awmod@dividend& (0+255),b
 27508  004682  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27509  004684  BF79               	btfsc	___awmod@dividend& (0+255),7,b
 27510  004686  077A               	decf	(___awmod@dividend+1)& (0+255),f,b
 27511  004688  ECC8  F040         	call	___awmod	;wreg free
 27512  00468C  C079  F087         	movff	?___awmod,___wmul@multiplier
 27513  004690  C07A  F088         	movff	?___awmod+1,___wmul@multiplier+1
 27514  004694  ECCD  F048         	call	___wmul	;wreg free
 27515  004698  0EB0               	movlw	low __powers_
 27516  00469A  0100               	movlb	0	; () banked
 27517  00469C  2587               	addwf	?___wmul& (0+255),w,b
 27518  00469E  6EF6               	movwf	tblptrl,c
 27519  0046A0  0EF1               	movlw	high __powers_
 27520  0046A2  0100               	movlb	0	; () banked
 27521  0046A4  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27522  0046A6  6EF7               	movwf	tblptrh,c
 27523  0046A8                     	if	1	;There are 3 active tblptr bytes
 27524  0046A8  6AF8               	clrf	tblptru,c
 27525  0046AA  0E00               	movlw	low (__mediumconst shr (0+16))
 27526  0046AC  22F8               	addwfc	tblptru,f,c
 27527  0046AE                     	endif
 27528  0046AE  0009               	tblrd		*+
 27529  0046B0  CFF5 F096          	movff	tablat,___ftmul@f2
 27530  0046B4  0009               	tblrd		*+
 27531  0046B6  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27532  0046BA  000A               	tblrd		*-
 27533  0046BC  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27534  0046C0  EC17  F037         	call	___ftmul	;wreg free
 27535  0046C4  C093  F0A2         	movff	?___ftmul,?_scale
 27536  0046C8  C094  F0A3         	movff	?___ftmul+1,?_scale+1
 27537  0046CC  C095  F0A4         	movff	?___ftmul+2,?_scale+2
 27538  0046D0  0012               	return	
 27539  0046D2  D06B               	goto	l13004
 27540  0046D4                     l12998:
 27541                           
 27542                           ;doprnt.c: 438: else if(scl > 10)
 27543  0046D4  0100               	movlb	0	; () banked
 27544  0046D6  51A8               	movf	scale@scl& (0+255),w,b
 27545  0046D8  0A80               	xorlw	128
 27546  0046DA  0F75               	addlw	-139
 27547  0046DC  A0D8               	btfss	status,0,c
 27548  0046DE  D065               	goto	l13004
 27549                           
 27550                           ; BSR set to: 0
 27551                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 27552  0046E0  0E00               	movlw	0
 27553  0046E2  0100               	movlb	0	; () banked
 27554  0046E4  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27555  0046E6  0E0A               	movlw	10
 27556  0046E8  6F81               	movwf	___awdiv@divisor& (0+255),b
 27557  0046EA  0100               	movlb	0	; () banked
 27558  0046EC  51A8               	movf	scale@scl& (0+255),w,b
 27559  0046EE  0100               	movlb	0	; () banked
 27560  0046F0  6F7F               	movwf	___awdiv@dividend& (0+255),b
 27561  0046F2  6B80               	clrf	(___awdiv@dividend+1)& (0+255),b
 27562  0046F4  BF7F               	btfsc	___awdiv@dividend& (0+255),7,b
 27563  0046F6  0780               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27564  0046F8  EC1B  F03E         	call	___awdiv	;wreg free
 27565  0046FC  0E09               	movlw	9
 27566  0046FE  0100               	movlb	0	; () banked
 27567  004700  257F               	addwf	?___awdiv& (0+255),w,b
 27568  004702  0100               	movlb	0	; () banked
 27569  004704  6F87               	movwf	___wmul@multiplier& (0+255),b
 27570  004706  0E00               	movlw	0
 27571  004708  0100               	movlb	0	; () banked
 27572  00470A  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27573  00470C  0100               	movlb	0	; () banked
 27574  00470E  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27575  004710  0E00               	movlw	0
 27576  004712  0100               	movlb	0	; () banked
 27577  004714  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27578  004716  0E03               	movlw	3
 27579  004718  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27580  00471A  ECCD  F048         	call	___wmul	;wreg free
 27581  00471E  0EB0               	movlw	low __powers_
 27582  004720  0100               	movlb	0	; () banked
 27583  004722  2587               	addwf	?___wmul& (0+255),w,b
 27584  004724  6EF6               	movwf	tblptrl,c
 27585  004726  0EF1               	movlw	high __powers_
 27586  004728  0100               	movlb	0	; () banked
 27587  00472A  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27588  00472C  6EF7               	movwf	tblptrh,c
 27589  00472E                     	if	1	;There are 3 active tblptr bytes
 27590  00472E  6AF8               	clrf	tblptru,c
 27591  004730  0E00               	movlw	low (__mediumconst shr (0+16))
 27592  004732  22F8               	addwfc	tblptru,f,c
 27593  004734                     	endif
 27594  004734  0009               	tblrd		*+
 27595  004736  CFF5 F093          	movff	tablat,___ftmul@f1
 27596  00473A  0009               	tblrd		*+
 27597  00473C  CFF5 F094          	movff	tablat,___ftmul@f1+1
 27598  004740  000A               	tblrd		*-
 27599  004742  CFF5 F095          	movff	tablat,___ftmul@f1+2
 27600  004746  0E00               	movlw	0
 27601  004748  0100               	movlb	0	; () banked
 27602  00474A  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27603  00474C  0E03               	movlw	3
 27604  00474E  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27605  004750  0E00               	movlw	0
 27606  004752  0100               	movlb	0	; () banked
 27607  004754  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27608  004756  0E0A               	movlw	10
 27609  004758  6F7B               	movwf	___awmod@divisor& (0+255),b
 27610  00475A  0100               	movlb	0	; () banked
 27611  00475C  51A8               	movf	scale@scl& (0+255),w,b
 27612  00475E  0100               	movlb	0	; () banked
 27613  004760  6F79               	movwf	___awmod@dividend& (0+255),b
 27614  004762  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27615  004764  BF79               	btfsc	___awmod@dividend& (0+255),7,b
 27616  004766  077A               	decf	(___awmod@dividend+1)& (0+255),f,b
 27617  004768  ECC8  F040         	call	___awmod	;wreg free
 27618  00476C  C079  F087         	movff	?___awmod,___wmul@multiplier
 27619  004770  C07A  F088         	movff	?___awmod+1,___wmul@multiplier+1
 27620  004774  ECCD  F048         	call	___wmul	;wreg free
 27621  004778  0EB0               	movlw	low __powers_
 27622  00477A  0100               	movlb	0	; () banked
 27623  00477C  2587               	addwf	?___wmul& (0+255),w,b
 27624  00477E  6EF6               	movwf	tblptrl,c
 27625  004780  0EF1               	movlw	high __powers_
 27626  004782  0100               	movlb	0	; () banked
 27627  004784  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27628  004786  6EF7               	movwf	tblptrh,c
 27629  004788                     	if	1	;There are 3 active tblptr bytes
 27630  004788  6AF8               	clrf	tblptru,c
 27631  00478A  0E00               	movlw	low (__mediumconst shr (0+16))
 27632  00478C  22F8               	addwfc	tblptru,f,c
 27633  00478E                     	endif
 27634  00478E  0009               	tblrd		*+
 27635  004790  CFF5 F096          	movff	tablat,___ftmul@f2
 27636  004794  0009               	tblrd		*+
 27637  004796  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27638  00479A  000A               	tblrd		*-
 27639  00479C  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27640  0047A0  EC17  F037         	call	___ftmul	;wreg free
 27641  0047A4  D78F               	goto	L22
 27642  0047A6  0012               	return	
 27643  0047A8  D000               	goto	l13004
 27644  0047AA                     l13004:
 27645                           
 27646                           ;doprnt.c: 440: return _powers_[scl];
 27647  0047AA  0100               	movlb	0	; () banked
 27648  0047AC  51A8               	movf	scale@scl& (0+255),w,b
 27649  0047AE  0D03               	mullw	3
 27650  0047B0  0EB0               	movlw	low __powers_
 27651  0047B2  24F3               	addwf	prodl,w,c
 27652  0047B4  6EF6               	movwf	tblptrl,c
 27653  0047B6  0EF1               	movlw	high __powers_
 27654  0047B8  20F4               	addwfc	prodh,w,c
 27655  0047BA  6EF7               	movwf	tblptrh,c
 27656  0047BC                     	if	1	;There are 3 active tblptr bytes
 27657  0047BC  6AF8               	clrf	tblptru,c
 27658  0047BE  0E00               	movlw	low (__mediumconst shr (0+16))
 27659  0047C0  22F8               	addwfc	tblptru,f,c
 27660  0047C2                     	endif
 27661  0047C2  0009               	tblrd		*+
 27662  0047C4  CFF5 F0A2          	movff	tablat,?_scale
 27663  0047C8  0009               	tblrd		*+
 27664  0047CA  CFF5 F0A3          	movff	tablat,?_scale+1
 27665  0047CE  000A               	tblrd		*-
 27666  0047D0  CFF5 F0A4          	movff	tablat,?_scale+2
 27667  0047D4  0012               	return	
 27668                           
 27669                           ; BSR set to: 0
 27670  0047D6  0012               	return		;funcret
 27671  0047D8                     __end_of_scale:
 27672                           	opt stack 0
 27673                           tblptru	equ	0xFF8
 27674                           tblptrh	equ	0xFF7
 27675                           tblptrl	equ	0xFF6
 27676                           tablat	equ	0xFF5
 27677                           prodh	equ	0xFF4
 27678                           prodl	equ	0xFF3
 27679                           intcon	equ	0xFF2
 27680                           intcon2	equ	0xFF1
 27681                           indf0	equ	0xFEF
 27682                           postinc0	equ	0xFEE
 27683                           fsr0h	equ	0xFEA
 27684                           fsr0l	equ	0xFE9
 27685                           wreg	equ	0xFE8
 27686                           indf1	equ	0xFE7
 27687                           postdec1	equ	0xFE5
 27688                           fsr1h	equ	0xFE2
 27689                           fsr1l	equ	0xFE1
 27690                           indf2	equ	0xFDF
 27691                           postinc2	equ	0xFDE
 27692                           postdec2	equ	0xFDD
 27693                           fsr2h	equ	0xFDA
 27694                           fsr2l	equ	0xFD9
 27695                           status	equ	0xFD8
 27696                           
 27697 ;; *************** function _isdigit *****************
 27698 ;; Defined at:
 27699 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
 27700 ;; Parameters:    Size  Location     Type
 27701 ;;  c               1    wreg     unsigned char 
 27702 ;; Auto vars:     Size  Location     Type
 27703 ;;  c               1   27[BANK0 ] unsigned char 
 27704 ;; Return value:  Size  Location     Type
 27705 ;;		None               void
 27706 ;; Registers used:
 27707 ;;		wreg, status,2, status,0
 27708 ;; Tracked objects:
 27709 ;;		On entry : 0/0
 27710 ;;		On exit  : 0/0
 27711 ;;		Unchanged: 0/0
 27712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27714 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27715 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27716 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27717 ;;Total ram usage:        3 bytes
 27718 ;; Hardware stack levels used:    1
 27719 ;; Hardware stack levels required when called:    6
 27720 ;; This function calls:
 27721 ;;		Nothing
 27722 ;; This function is called by:
 27723 ;;		_sprintf
 27724 ;; This function uses a non-reentrant model
 27725 ;;
 27726                           
 27727                           	psect	text61
 27728  00926A                     __ptext61:
 27729                           	opt stack 0
 27730  00926A                     _isdigit:
 27731                           	opt stack 22
 27732                           
 27733                           ;incstack = 0
 27734                           ;isdigit@c stored from wreg
 27735  00926A  0100               	movlb	0	; () banked
 27736  00926C  6F7B               	movwf	isdigit@c& (0+255),b
 27737                           
 27738                           ; BSR set to: 0
 27739  00926E  0E00               	movlw	0
 27740  009270  0100               	movlb	0	; () banked
 27741  009272  6F7A               	movwf	_isdigit$3474& (0+255),b
 27742                           
 27743                           ; BSR set to: 0
 27744  009274  0E3A               	movlw	58
 27745  009276  0100               	movlb	0	; () banked
 27746  009278  617B               	cpfslt	isdigit@c& (0+255),b
 27747  00927A  D008               	goto	l13016
 27748                           
 27749                           ; BSR set to: 0
 27750  00927C  0E2F               	movlw	47
 27751  00927E  0100               	movlb	0	; () banked
 27752  009280  657B               	cpfsgt	isdigit@c& (0+255),b
 27753  009282  D004               	goto	l13016
 27754                           
 27755                           ; BSR set to: 0
 27756  009284  0E01               	movlw	1
 27757  009286  0100               	movlb	0	; () banked
 27758  009288  6F7A               	movwf	_isdigit$3474& (0+255),b
 27759  00928A  D000               	goto	l13016
 27760  00928C                     l13016:
 27761                           
 27762                           ; BSR set to: 0
 27763  00928C  C07A  F079         	movff	_isdigit$3474,??_isdigit
 27764  009290  0100               	movlb	0	; () banked
 27765  009292  3179               	rrcf	??_isdigit& (0+255),w,b
 27766  009294  0012               	return	
 27767                           
 27768                           ; BSR set to: 0
 27769                           
 27770                           ; BSR set to: 0
 27771  009296  0012               	return		;funcret
 27772  009298                     __end_of_isdigit:
 27773                           	opt stack 0
 27774                           tblptru	equ	0xFF8
 27775                           tblptrh	equ	0xFF7
 27776                           tblptrl	equ	0xFF6
 27777                           tablat	equ	0xFF5
 27778                           prodh	equ	0xFF4
 27779                           prodl	equ	0xFF3
 27780                           intcon	equ	0xFF2
 27781                           intcon2	equ	0xFF1
 27782                           indf0	equ	0xFEF
 27783                           postinc0	equ	0xFEE
 27784                           fsr0h	equ	0xFEA
 27785                           fsr0l	equ	0xFE9
 27786                           wreg	equ	0xFE8
 27787                           indf1	equ	0xFE7
 27788                           postdec1	equ	0xFE5
 27789                           fsr1h	equ	0xFE2
 27790                           fsr1l	equ	0xFE1
 27791                           indf2	equ	0xFDF
 27792                           postinc2	equ	0xFDE
 27793                           postdec2	equ	0xFDD
 27794                           fsr2h	equ	0xFDA
 27795                           fsr2l	equ	0xFD9
 27796                           status	equ	0xFD8
 27797                           
 27798 ;; *************** function _fround *****************
 27799 ;; Defined at:
 27800 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 27801 ;; Parameters:    Size  Location     Type
 27802 ;;  prec            1    wreg     unsigned char 
 27803 ;; Auto vars:     Size  Location     Type
 27804 ;;  prec            1   75[BANK0 ] unsigned char 
 27805 ;; Return value:  Size  Location     Type
 27806 ;;                  3   66[BANK0 ] unsigned char 
 27807 ;; Registers used:
 27808 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27809 ;; Tracked objects:
 27810 ;;		On entry : 0/0
 27811 ;;		On exit  : 0/0
 27812 ;;		Unchanged: 0/0
 27813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27814 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27815 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27817 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27818 ;;Total ram usage:       10 bytes
 27819 ;; Hardware stack levels used:    1
 27820 ;; Hardware stack levels required when called:    8
 27821 ;; This function calls:
 27822 ;;		___awdiv
 27823 ;;		___awmod
 27824 ;;		___ftmul
 27825 ;;		___wmul
 27826 ;; This function is called by:
 27827 ;;		_sprintf
 27828 ;; This function uses a non-reentrant model
 27829 ;;
 27830                           
 27831                           	psect	text62
 27832  005828                     __ptext62:
 27833                           	opt stack 0
 27834  005828                     _fround:
 27835                           	opt stack 20
 27836                           
 27837                           ; BSR set to: 0
 27838                           ;incstack = 0
 27839                           ;fround@prec stored from wreg
 27840  005828  0100               	movlb	0	; () banked
 27841  00582A  6FAB               	movwf	fround@prec& (0+255),b
 27842                           
 27843                           ; BSR set to: 0
 27844                           ;doprnt.c: 413: if(prec>=110)
 27845  00582C  0E6D               	movlw	109
 27846  00582E  0100               	movlb	0	; () banked
 27847  005830  65AB               	cpfsgt	fround@prec& (0+255),b
 27848  005832  D0C4               	goto	l12958
 27849                           
 27850                           ; BSR set to: 0
 27851                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27852  005834  0E00               	movlw	0
 27853  005836  0100               	movlb	0	; () banked
 27854  005838  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27855  00583A  0E03               	movlw	3
 27856  00583C  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27857  00583E  0E00               	movlw	0
 27858  005840  0100               	movlb	0	; () banked
 27859  005842  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27860  005844  0E0A               	movlw	10
 27861  005846  6F81               	movwf	___awdiv@divisor& (0+255),b
 27862  005848  0E00               	movlw	0
 27863  00584A  0100               	movlb	0	; () banked
 27864  00584C  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27865  00584E  0E64               	movlw	100
 27866  005850  6F7B               	movwf	___awmod@divisor& (0+255),b
 27867  005852  C0AB  F079         	movff	fround@prec,___awmod@dividend
 27868  005856  0100               	movlb	0	; () banked
 27869  005858  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27870  00585A  ECC8  F040         	call	___awmod	;wreg free
 27871  00585E  C079  F07F         	movff	?___awmod,___awdiv@dividend
 27872  005862  C07A  F080         	movff	?___awmod+1,___awdiv@dividend+1
 27873  005866  EC1B  F03E         	call	___awdiv	;wreg free
 27874  00586A  0E09               	movlw	9
 27875  00586C  0100               	movlb	0	; () banked
 27876  00586E  257F               	addwf	?___awdiv& (0+255),w,b
 27877  005870  0100               	movlb	0	; () banked
 27878  005872  6F87               	movwf	___wmul@multiplier& (0+255),b
 27879  005874  0E00               	movlw	0
 27880  005876  0100               	movlb	0	; () banked
 27881  005878  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27882  00587A  0100               	movlb	0	; () banked
 27883  00587C  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27884  00587E  ECCD  F048         	call	___wmul	;wreg free
 27885  005882  0E89               	movlw	low __npowers_
 27886  005884  0100               	movlb	0	; () banked
 27887  005886  2587               	addwf	?___wmul& (0+255),w,b
 27888  005888  6EF6               	movwf	tblptrl,c
 27889  00588A  0EF1               	movlw	high __npowers_
 27890  00588C  0100               	movlb	0	; () banked
 27891  00588E  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27892  005890  6EF7               	movwf	tblptrh,c
 27893  005892                     	if	1	;There are 3 active tblptr bytes
 27894  005892  6AF8               	clrf	tblptru,c
 27895  005894  0E00               	movlw	low (__mediumconst shr (0+16))
 27896  005896  22F8               	addwfc	tblptru,f,c
 27897  005898                     	endif
 27898  005898  0009               	tblrd		*+
 27899  00589A  CFF5 F096          	movff	tablat,___ftmul@f2
 27900  00589E  0009               	tblrd		*+
 27901  0058A0  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27902  0058A4  000A               	tblrd		*-
 27903  0058A6  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27904  0058AA  0E00               	movlw	0
 27905  0058AC  0100               	movlb	0	; () banked
 27906  0058AE  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27907  0058B0  0E64               	movlw	100
 27908  0058B2  6F81               	movwf	___awdiv@divisor& (0+255),b
 27909  0058B4  C0AB  F07F         	movff	fround@prec,___awdiv@dividend
 27910  0058B8  0100               	movlb	0	; () banked
 27911  0058BA  6B80               	clrf	(___awdiv@dividend+1)& (0+255),b
 27912  0058BC  EC1B  F03E         	call	___awdiv	;wreg free
 27913  0058C0  0E12               	movlw	18
 27914  0058C2  0100               	movlb	0	; () banked
 27915  0058C4  257F               	addwf	?___awdiv& (0+255),w,b
 27916  0058C6  0100               	movlb	0	; () banked
 27917  0058C8  6F87               	movwf	___wmul@multiplier& (0+255),b
 27918  0058CA  0E00               	movlw	0
 27919  0058CC  0100               	movlb	0	; () banked
 27920  0058CE  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27921  0058D0  0100               	movlb	0	; () banked
 27922  0058D2  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27923  0058D4  0E00               	movlw	0
 27924  0058D6  0100               	movlb	0	; () banked
 27925  0058D8  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27926  0058DA  0E03               	movlw	3
 27927  0058DC  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27928  0058DE  ECCD  F048         	call	___wmul	;wreg free
 27929  0058E2  0E89               	movlw	low __npowers_
 27930  0058E4  0100               	movlb	0	; () banked
 27931  0058E6  2587               	addwf	?___wmul& (0+255),w,b
 27932  0058E8  6EF6               	movwf	tblptrl,c
 27933  0058EA  0EF1               	movlw	high __npowers_
 27934  0058EC  0100               	movlb	0	; () banked
 27935  0058EE  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27936  0058F0  6EF7               	movwf	tblptrh,c
 27937  0058F2                     	if	1	;There are 3 active tblptr bytes
 27938  0058F2  6AF8               	clrf	tblptru,c
 27939  0058F4  0E00               	movlw	low (__mediumconst shr (0+16))
 27940  0058F6  22F8               	addwfc	tblptru,f,c
 27941  0058F8                     	endif
 27942  0058F8  0009               	tblrd		*+
 27943  0058FA  CFF5 F093          	movff	tablat,___ftmul@f1
 27944  0058FE  0009               	tblrd		*+
 27945  005900  CFF5 F094          	movff	tablat,___ftmul@f1+1
 27946  005904  000A               	tblrd		*-
 27947  005906  CFF5 F095          	movff	tablat,___ftmul@f1+2
 27948  00590A  EC17  F037         	call	___ftmul	;wreg free
 27949  00590E  C093  F0A8         	movff	?___ftmul,_fround$3798
 27950  005912  C094  F0A9         	movff	?___ftmul+1,_fround$3798+1
 27951  005916  C095  F0AA         	movff	?___ftmul+2,_fround$3798+2
 27952                           
 27953                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27954  00591A  0E00               	movlw	0
 27955  00591C  0100               	movlb	0	; () banked
 27956  00591E  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27957  005920  0E03               	movlw	3
 27958  005922  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27959  005924  0E00               	movlw	0
 27960  005926  0100               	movlb	0	; () banked
 27961  005928  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27962  00592A  0E0A               	movlw	10
 27963  00592C  6F7B               	movwf	___awmod@divisor& (0+255),b
 27964  00592E  C0AB  F079         	movff	fround@prec,___awmod@dividend
 27965  005932  0100               	movlb	0	; () banked
 27966  005934  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27967  005936  ECC8  F040         	call	___awmod	;wreg free
 27968  00593A  C079  F087         	movff	?___awmod,___wmul@multiplier
 27969  00593E  C07A  F088         	movff	?___awmod+1,___wmul@multiplier+1
 27970  005942  ECCD  F048         	call	___wmul	;wreg free
 27971  005946  0E89               	movlw	low __npowers_
 27972  005948  0100               	movlb	0	; () banked
 27973  00594A  2587               	addwf	?___wmul& (0+255),w,b
 27974  00594C  6EF6               	movwf	tblptrl,c
 27975  00594E  0EF1               	movlw	high __npowers_
 27976  005950  0100               	movlb	0	; () banked
 27977  005952  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27978  005954  6EF7               	movwf	tblptrh,c
 27979  005956                     	if	1	;There are 3 active tblptr bytes
 27980  005956  6AF8               	clrf	tblptru,c
 27981  005958  0E00               	movlw	low (__mediumconst shr (0+16))
 27982  00595A  22F8               	addwfc	tblptru,f,c
 27983  00595C                     	endif
 27984  00595C  0009               	tblrd		*+
 27985  00595E  CFF5 F096          	movff	tablat,___ftmul@f2
 27986  005962  0009               	tblrd		*+
 27987  005964  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27988  005968  000A               	tblrd		*-
 27989  00596A  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27990  00596E  C0A8  F093         	movff	_fround$3798,___ftmul@f1
 27991  005972  C0A9  F094         	movff	_fround$3798+1,___ftmul@f1+1
 27992  005976  C0AA  F095         	movff	_fround$3798+2,___ftmul@f1+2
 27993  00597A  EC17  F037         	call	___ftmul	;wreg free
 27994  00597E  C093  F0A5         	movff	?___ftmul,_fround$3799
 27995  005982  C094  F0A6         	movff	?___ftmul+1,_fround$3799+1
 27996  005986  C095  F0A7         	movff	?___ftmul+2,_fround$3799+2
 27997                           
 27998                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27999  00598A  C0A5  F093         	movff	_fround$3799,___ftmul@f1
 28000  00598E  C0A6  F094         	movff	_fround$3799+1,___ftmul@f1+1
 28001  005992  C0A7  F095         	movff	_fround$3799+2,___ftmul@f1+2
 28002  005996  0E00               	movlw	0
 28003  005998  0100               	movlb	0	; () banked
 28004  00599A  6F96               	movwf	___ftmul@f2& (0+255),b
 28005  00599C  0E00               	movlw	0
 28006  00599E  0100               	movlb	0	; () banked
 28007  0059A0  6F97               	movwf	(___ftmul@f2+1)& (0+255),b
 28008  0059A2  0E3F               	movlw	63
 28009  0059A4  0100               	movlb	0	; () banked
 28010  0059A6  6F98               	movwf	(___ftmul@f2+2)& (0+255),b
 28011  0059A8  EC17  F037         	call	___ftmul	;wreg free
 28012  0059AC  C093  F0A2         	movff	?___ftmul,?_fround
 28013  0059B0  C094  F0A3         	movff	?___ftmul+1,?_fround+1
 28014  0059B4  C095  F0A4         	movff	?___ftmul+2,?_fround+2
 28015  0059B8  0012               	return	
 28016  0059BA  D07A               	goto	l12966
 28017  0059BC                     l12958:
 28018                           
 28019                           ;doprnt.c: 415: else if(prec > 10)
 28020  0059BC  0E0A               	movlw	10
 28021  0059BE  0100               	movlb	0	; () banked
 28022  0059C0  65AB               	cpfsgt	fround@prec& (0+255),b
 28023  0059C2  D076               	goto	l12966
 28024                           
 28025                           ; BSR set to: 0
 28026                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 28027  0059C4  0E00               	movlw	0
 28028  0059C6  0100               	movlb	0	; () banked
 28029  0059C8  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28030  0059CA  0E03               	movlw	3
 28031  0059CC  6F89               	movwf	___wmul@multiplicand& (0+255),b
 28032  0059CE  0E00               	movlw	0
 28033  0059D0  0100               	movlb	0	; () banked
 28034  0059D2  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 28035  0059D4  0E0A               	movlw	10
 28036  0059D6  6F7B               	movwf	___awmod@divisor& (0+255),b
 28037  0059D8  C0AB  F079         	movff	fround@prec,___awmod@dividend
 28038  0059DC  0100               	movlb	0	; () banked
 28039  0059DE  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 28040  0059E0  ECC8  F040         	call	___awmod	;wreg free
 28041  0059E4  C079  F087         	movff	?___awmod,___wmul@multiplier
 28042  0059E8  C07A  F088         	movff	?___awmod+1,___wmul@multiplier+1
 28043  0059EC  ECCD  F048         	call	___wmul	;wreg free
 28044  0059F0  0E89               	movlw	low __npowers_
 28045  0059F2  0100               	movlb	0	; () banked
 28046  0059F4  2587               	addwf	?___wmul& (0+255),w,b
 28047  0059F6  6EF6               	movwf	tblptrl,c
 28048  0059F8  0EF1               	movlw	high __npowers_
 28049  0059FA  0100               	movlb	0	; () banked
 28050  0059FC  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 28051  0059FE  6EF7               	movwf	tblptrh,c
 28052  005A00                     	if	1	;There are 3 active tblptr bytes
 28053  005A00  6AF8               	clrf	tblptru,c
 28054  005A02  0E00               	movlw	low (__mediumconst shr (0+16))
 28055  005A04  22F8               	addwfc	tblptru,f,c
 28056  005A06                     	endif
 28057  005A06  0009               	tblrd		*+
 28058  005A08  CFF5 F096          	movff	tablat,___ftmul@f2
 28059  005A0C  0009               	tblrd		*+
 28060  005A0E  CFF5 F097          	movff	tablat,___ftmul@f2+1
 28061  005A12  000A               	tblrd		*-
 28062  005A14  CFF5 F098          	movff	tablat,___ftmul@f2+2
 28063  005A18  0E00               	movlw	0
 28064  005A1A  0100               	movlb	0	; () banked
 28065  005A1C  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 28066  005A1E  0E0A               	movlw	10
 28067  005A20  6F81               	movwf	___awdiv@divisor& (0+255),b
 28068  005A22  C0AB  F07F         	movff	fround@prec,___awdiv@dividend
 28069  005A26  0100               	movlb	0	; () banked
 28070  005A28  6B80               	clrf	(___awdiv@dividend+1)& (0+255),b
 28071  005A2A  EC1B  F03E         	call	___awdiv	;wreg free
 28072  005A2E  0E09               	movlw	9
 28073  005A30  0100               	movlb	0	; () banked
 28074  005A32  257F               	addwf	?___awdiv& (0+255),w,b
 28075  005A34  0100               	movlb	0	; () banked
 28076  005A36  6F87               	movwf	___wmul@multiplier& (0+255),b
 28077  005A38  0E00               	movlw	0
 28078  005A3A  0100               	movlb	0	; () banked
 28079  005A3C  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 28080  005A3E  0100               	movlb	0	; () banked
 28081  005A40  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 28082  005A42  0E00               	movlw	0
 28083  005A44  0100               	movlb	0	; () banked
 28084  005A46  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28085  005A48  0E03               	movlw	3
 28086  005A4A  6F89               	movwf	___wmul@multiplicand& (0+255),b
 28087  005A4C  ECCD  F048         	call	___wmul	;wreg free
 28088  005A50  0E89               	movlw	low __npowers_
 28089  005A52  0100               	movlb	0	; () banked
 28090  005A54  2587               	addwf	?___wmul& (0+255),w,b
 28091  005A56  6EF6               	movwf	tblptrl,c
 28092  005A58  0EF1               	movlw	high __npowers_
 28093  005A5A  0100               	movlb	0	; () banked
 28094  005A5C  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 28095  005A5E  6EF7               	movwf	tblptrh,c
 28096  005A60                     	if	1	;There are 3 active tblptr bytes
 28097  005A60  6AF8               	clrf	tblptru,c
 28098  005A62  0E00               	movlw	low (__mediumconst shr (0+16))
 28099  005A64  22F8               	addwfc	tblptru,f,c
 28100  005A66                     	endif
 28101  005A66  0009               	tblrd		*+
 28102  005A68  CFF5 F093          	movff	tablat,___ftmul@f1
 28103  005A6C  0009               	tblrd		*+
 28104  005A6E  CFF5 F094          	movff	tablat,___ftmul@f1+1
 28105  005A72  000A               	tblrd		*-
 28106  005A74  CFF5 F095          	movff	tablat,___ftmul@f1+2
 28107  005A78  EC17  F037         	call	___ftmul	;wreg free
 28108  005A7C  C093  F0A8         	movff	?___ftmul,_fround$3798
 28109  005A80  C094  F0A9         	movff	?___ftmul+1,_fround$3798+1
 28110  005A84  C095  F0AA         	movff	?___ftmul+2,_fround$3798+2
 28111                           
 28112                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 28113  005A88  C0A8  F093         	movff	_fround$3798,___ftmul@f1
 28114  005A8C  C0A9  F094         	movff	_fround$3798+1,___ftmul@f1+1
 28115  005A90  C0AA  F095         	movff	_fround$3798+2,___ftmul@f1+2
 28116  005A94  0E00               	movlw	0
 28117  005A96  0100               	movlb	0	; () banked
 28118  005A98  6F96               	movwf	___ftmul@f2& (0+255),b
 28119  005A9A  0E00               	movlw	0
 28120  005A9C  0100               	movlb	0	; () banked
 28121  005A9E  6F97               	movwf	(___ftmul@f2+1)& (0+255),b
 28122  005AA0  0E3F               	movlw	63
 28123  005AA2  0100               	movlb	0	; () banked
 28124  005AA4  6F98               	movwf	(___ftmul@f2+2)& (0+255),b
 28125  005AA6  EC17  F037         	call	___ftmul	;wreg free
 28126  005AAA  D780               	goto	L23
 28127  005AAC  0012               	return	
 28128  005AAE  D000               	goto	l12966
 28129  005AB0                     l12966:
 28130                           
 28131                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 28132  005AB0  0100               	movlb	0	; () banked
 28133  005AB2  51AB               	movf	fround@prec& (0+255),w,b
 28134  005AB4  0D03               	mullw	3
 28135  005AB6  0E89               	movlw	low __npowers_
 28136  005AB8  24F3               	addwf	prodl,w,c
 28137  005ABA  6EF6               	movwf	tblptrl,c
 28138  005ABC  0EF1               	movlw	high __npowers_
 28139  005ABE  20F4               	addwfc	prodh,w,c
 28140  005AC0  6EF7               	movwf	tblptrh,c
 28141  005AC2                     	if	1	;There are 3 active tblptr bytes
 28142  005AC2  6AF8               	clrf	tblptru,c
 28143  005AC4  0E00               	movlw	low (__mediumconst shr (0+16))
 28144  005AC6  22F8               	addwfc	tblptru,f,c
 28145  005AC8                     	endif
 28146  005AC8  0009               	tblrd		*+
 28147  005ACA  CFF5 F093          	movff	tablat,___ftmul@f1
 28148  005ACE  0009               	tblrd		*+
 28149  005AD0  CFF5 F094          	movff	tablat,___ftmul@f1+1
 28150  005AD4  000A               	tblrd		*-
 28151  005AD6  CFF5 F095          	movff	tablat,___ftmul@f1+2
 28152  005ADA  0E00               	movlw	0
 28153  005ADC  0100               	movlb	0	; () banked
 28154  005ADE  6F96               	movwf	___ftmul@f2& (0+255),b
 28155  005AE0  0E00               	movlw	0
 28156  005AE2  0100               	movlb	0	; () banked
 28157  005AE4  6F97               	movwf	(___ftmul@f2+1)& (0+255),b
 28158  005AE6  0E3F               	movlw	63
 28159  005AE8  0100               	movlb	0	; () banked
 28160  005AEA  6F98               	movwf	(___ftmul@f2+2)& (0+255),b
 28161  005AEC  EC17  F037         	call	___ftmul	;wreg free
 28162  005AF0  C093  F0A2         	movff	?___ftmul,?_fround
 28163  005AF4  C094  F0A3         	movff	?___ftmul+1,?_fround+1
 28164  005AF8  C095  F0A4         	movff	?___ftmul+2,?_fround+2
 28165  005AFC  0012               	return	
 28166  005AFE  0012               	return		;funcret
 28167  005B00                     __end_of_fround:
 28168                           	opt stack 0
 28169                           tblptru	equ	0xFF8
 28170                           tblptrh	equ	0xFF7
 28171                           tblptrl	equ	0xFF6
 28172                           tablat	equ	0xFF5
 28173                           prodh	equ	0xFF4
 28174                           prodl	equ	0xFF3
 28175                           intcon	equ	0xFF2
 28176                           intcon2	equ	0xFF1
 28177                           indf0	equ	0xFEF
 28178                           postinc0	equ	0xFEE
 28179                           fsr0h	equ	0xFEA
 28180                           fsr0l	equ	0xFE9
 28181                           wreg	equ	0xFE8
 28182                           indf1	equ	0xFE7
 28183                           postdec1	equ	0xFE5
 28184                           fsr1h	equ	0xFE2
 28185                           fsr1l	equ	0xFE1
 28186                           indf2	equ	0xFDF
 28187                           postinc2	equ	0xFDE
 28188                           postdec2	equ	0xFDD
 28189                           fsr2h	equ	0xFDA
 28190                           fsr2l	equ	0xFD9
 28191                           status	equ	0xFD8
 28192                           
 28193 ;; *************** function ___wmul *****************
 28194 ;; Defined at:
 28195 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 28196 ;; Parameters:    Size  Location     Type
 28197 ;;  multiplier      2   39[BANK0 ] unsigned int 
 28198 ;;  multiplicand    2   41[BANK0 ] unsigned int 
 28199 ;; Auto vars:     Size  Location     Type
 28200 ;;  product         2   43[BANK0 ] unsigned int 
 28201 ;; Return value:  Size  Location     Type
 28202 ;;                  2   39[BANK0 ] unsigned int 
 28203 ;; Registers used:
 28204 ;;		wreg, status,2, status,0, prodl, prodh
 28205 ;; Tracked objects:
 28206 ;;		On entry : 0/0
 28207 ;;		On exit  : 0/0
 28208 ;;		Unchanged: 0/0
 28209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28210 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28211 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28213 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28214 ;;Total ram usage:        6 bytes
 28215 ;; Hardware stack levels used:    1
 28216 ;; Hardware stack levels required when called:    6
 28217 ;; This function calls:
 28218 ;;		Nothing
 28219 ;; This function is called by:
 28220 ;;		_fround
 28221 ;;		_scale
 28222 ;;		_sprintf
 28223 ;; This function uses a non-reentrant model
 28224 ;;
 28225                           
 28226                           	psect	text63
 28227  00919A                     __ptext63:
 28228                           	opt stack 0
 28229  00919A                     ___wmul:
 28230                           	opt stack 21
 28231                           
 28232                           ;incstack = 0
 28233  00919A  0100               	movlb	0	; () banked
 28234  00919C  5187               	movf	___wmul@multiplier& (0+255),w,b
 28235  00919E  0100               	movlb	0	; () banked
 28236  0091A0  0389               	mulwf	___wmul@multiplicand& (0+255),b
 28237  0091A2  CFF3 F08B          	movff	prodl,___wmul@product
 28238  0091A6  CFF4 F08C          	movff	prodh,___wmul@product+1
 28239  0091AA  0100               	movlb	0	; () banked
 28240  0091AC  5187               	movf	___wmul@multiplier& (0+255),w,b
 28241  0091AE  0100               	movlb	0	; () banked
 28242  0091B0  038A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 28243  0091B2  50F3               	movf	prodl,w,c
 28244  0091B4  0100               	movlb	0	; () banked
 28245  0091B6  278C               	addwf	(___wmul@product+1)& (0+255),f,b
 28246  0091B8  0100               	movlb	0	; () banked
 28247  0091BA  5188               	movf	(___wmul@multiplier+1)& (0+255),w,b
 28248  0091BC  0100               	movlb	0	; () banked
 28249  0091BE  0389               	mulwf	___wmul@multiplicand& (0+255),b
 28250  0091C0  50F3               	movf	prodl,w,c
 28251  0091C2  0100               	movlb	0	; () banked
 28252  0091C4  278C               	addwf	(___wmul@product+1)& (0+255),f,b
 28253                           
 28254                           ; BSR set to: 0
 28255  0091C6  C08B  F087         	movff	___wmul@product,?___wmul
 28256  0091CA  C08C  F088         	movff	___wmul@product+1,?___wmul+1
 28257  0091CE  0012               	return	
 28258                           
 28259                           ; BSR set to: 0
 28260                           
 28261                           ; BSR set to: 0
 28262  0091D0  0012               	return		;funcret
 28263  0091D2                     __end_of___wmul:
 28264                           	opt stack 0
 28265                           tblptru	equ	0xFF8
 28266                           tblptrh	equ	0xFF7
 28267                           tblptrl	equ	0xFF6
 28268                           tablat	equ	0xFF5
 28269                           prodh	equ	0xFF4
 28270                           prodl	equ	0xFF3
 28271                           intcon	equ	0xFF2
 28272                           intcon2	equ	0xFF1
 28273                           indf0	equ	0xFEF
 28274                           postinc0	equ	0xFEE
 28275                           fsr0h	equ	0xFEA
 28276                           fsr0l	equ	0xFE9
 28277                           wreg	equ	0xFE8
 28278                           indf1	equ	0xFE7
 28279                           postdec1	equ	0xFE5
 28280                           fsr1h	equ	0xFE2
 28281                           fsr1l	equ	0xFE1
 28282                           indf2	equ	0xFDF
 28283                           postinc2	equ	0xFDE
 28284                           postdec2	equ	0xFDD
 28285                           fsr2h	equ	0xFDA
 28286                           fsr2l	equ	0xFD9
 28287                           status	equ	0xFD8
 28288                           
 28289 ;; *************** function ___ftmul *****************
 28290 ;; Defined at:
 28291 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 28292 ;; Parameters:    Size  Location     Type
 28293 ;;  f1              3   51[BANK0 ] float 
 28294 ;;  f2              3   54[BANK0 ] float 
 28295 ;; Auto vars:     Size  Location     Type
 28296 ;;  f3_as_produc    3   61[BANK0 ] unsigned um
 28297 ;;  sign            1   65[BANK0 ] unsigned char 
 28298 ;;  cntr            1   64[BANK0 ] unsigned char 
 28299 ;;  exp             1   60[BANK0 ] unsigned char 
 28300 ;; Return value:  Size  Location     Type
 28301 ;;                  3   51[BANK0 ] float 
 28302 ;; Registers used:
 28303 ;;		wreg, status,2, status,0, cstack
 28304 ;; Tracked objects:
 28305 ;;		On entry : 0/0
 28306 ;;		On exit  : 0/0
 28307 ;;		Unchanged: 0/0
 28308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28309 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28310 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28311 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28312 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28313 ;;Total ram usage:       15 bytes
 28314 ;; Hardware stack levels used:    1
 28315 ;; Hardware stack levels required when called:    7
 28316 ;; This function calls:
 28317 ;;		___ftpack
 28318 ;; This function is called by:
 28319 ;;		_ReadVoltage
 28320 ;;		_fround
 28321 ;;		_scale
 28322 ;;		_sprintf
 28323 ;; This function uses a non-reentrant model
 28324 ;;
 28325                           
 28326                           	psect	text64
 28327  006E2E                     __ptext64:
 28328                           	opt stack 0
 28329  006E2E                     ___ftmul:
 28330                           	opt stack 20
 28331                           
 28332                           ; BSR set to: 0
 28333                           ;incstack = 0
 28334  006E2E  C095  F099         	movff	___ftmul@f1+2,??___ftmul
 28335  006E32  0100               	movlb	0	; () banked
 28336  006E34  6B9A               	clrf	(??___ftmul+1)& (0+255),b
 28337  006E36  6B9B               	clrf	(??___ftmul+2)& (0+255),b
 28338  006E38  0100               	movlb	0	; () banked
 28339  006E3A  3594               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 28340  006E3C  0100               	movlb	0	; () banked
 28341  006E3E  3799               	rlcf	??___ftmul& (0+255),f,b
 28342  006E40  E301               	bnc	u14871
 28343  006E42  819A               	bsf	(??___ftmul+1)& (0+255),0,b
 28344  006E44                     u14871:
 28345  006E44  0100               	movlb	0	; () banked
 28346  006E46  5199               	movf	??___ftmul& (0+255),w,b
 28347  006E48  0100               	movlb	0	; () banked
 28348  006E4A  6F9C               	movwf	___ftmul@exp& (0+255),b
 28349  006E4C  0100               	movlb	0	; () banked
 28350  006E4E  519C               	movf	___ftmul@exp& (0+255),w,b
 28351  006E50  A4D8               	btfss	status,2,c
 28352  006E52  D00A               	goto	l12678
 28353                           
 28354                           ; BSR set to: 0
 28355  006E54  0E00               	movlw	0
 28356  006E56  0100               	movlb	0	; () banked
 28357  006E58  6F93               	movwf	?___ftmul& (0+255),b
 28358  006E5A  0E00               	movlw	0
 28359  006E5C  0100               	movlb	0	; () banked
 28360  006E5E  6F94               	movwf	(?___ftmul+1)& (0+255),b
 28361  006E60  0E00               	movlw	0
 28362  006E62  0100               	movlb	0	; () banked
 28363  006E64  6F95               	movwf	(?___ftmul+2)& (0+255),b
 28364                           
 28365                           ; BSR set to: 0
 28366  006E66  0012               	return	
 28367  006E68                     l12678:
 28368                           
 28369                           ; BSR set to: 0
 28370  006E68  C098  F099         	movff	___ftmul@f2+2,??___ftmul
 28371  006E6C  0100               	movlb	0	; () banked
 28372  006E6E  6B9A               	clrf	(??___ftmul+1)& (0+255),b
 28373  006E70  6B9B               	clrf	(??___ftmul+2)& (0+255),b
 28374  006E72  0100               	movlb	0	; () banked
 28375  006E74  3597               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 28376  006E76  0100               	movlb	0	; () banked
 28377  006E78  3799               	rlcf	??___ftmul& (0+255),f,b
 28378  006E7A  E301               	bnc	u14891
 28379  006E7C  819A               	bsf	(??___ftmul+1)& (0+255),0,b
 28380  006E7E                     u14891:
 28381  006E7E  0100               	movlb	0	; () banked
 28382  006E80  5199               	movf	??___ftmul& (0+255),w,b
 28383  006E82  0100               	movlb	0	; () banked
 28384  006E84  6FA1               	movwf	___ftmul@sign& (0+255),b
 28385  006E86  0100               	movlb	0	; () banked
 28386  006E88  51A1               	movf	___ftmul@sign& (0+255),w,b
 28387  006E8A  A4D8               	btfss	status,2,c
 28388  006E8C  D00A               	goto	l12684
 28389                           
 28390                           ; BSR set to: 0
 28391  006E8E  0E00               	movlw	0
 28392  006E90  0100               	movlb	0	; () banked
 28393  006E92  6F93               	movwf	?___ftmul& (0+255),b
 28394  006E94  0E00               	movlw	0
 28395  006E96  0100               	movlb	0	; () banked
 28396  006E98  6F94               	movwf	(?___ftmul+1)& (0+255),b
 28397  006E9A  0E00               	movlw	0
 28398  006E9C  0100               	movlb	0	; () banked
 28399  006E9E  6F95               	movwf	(?___ftmul+2)& (0+255),b
 28400                           
 28401                           ; BSR set to: 0
 28402  006EA0  0012               	return	
 28403  006EA2                     l12684:
 28404                           
 28405                           ; BSR set to: 0
 28406  006EA2  0100               	movlb	0	; () banked
 28407  006EA4  51A1               	movf	___ftmul@sign& (0+255),w,b
 28408  006EA6  0F7B               	addlw	123
 28409  006EA8  0100               	movlb	0	; () banked
 28410  006EAA  279C               	addwf	___ftmul@exp& (0+255),f,b
 28411                           
 28412                           ; BSR set to: 0
 28413  006EAC  C095  F0A1         	movff	___ftmul@f1+2,___ftmul@sign
 28414  006EB0  0100               	movlb	0	; () banked
 28415  006EB2  5198               	movf	(___ftmul@f2+2)& (0+255),w,b
 28416  006EB4  0100               	movlb	0	; () banked
 28417  006EB6  1BA1               	xorwf	___ftmul@sign& (0+255),f,b
 28418  006EB8  0E80               	movlw	128
 28419  006EBA  0100               	movlb	0	; () banked
 28420  006EBC  17A1               	andwf	___ftmul@sign& (0+255),f,b
 28421                           
 28422                           ; BSR set to: 0
 28423  006EBE  0100               	movlb	0	; () banked
 28424  006EC0  8F94               	bsf	(___ftmul@f1+1)& (0+255),7,b
 28425                           
 28426                           ; BSR set to: 0
 28427  006EC2  0100               	movlb	0	; () banked
 28428  006EC4  8F97               	bsf	(___ftmul@f2+1)& (0+255),7,b
 28429                           
 28430                           ; BSR set to: 0
 28431  006EC6  0EFF               	movlw	255
 28432  006EC8  0100               	movlb	0	; () banked
 28433  006ECA  1796               	andwf	___ftmul@f2& (0+255),f,b
 28434  006ECC  0EFF               	movlw	255
 28435  006ECE  0100               	movlb	0	; () banked
 28436  006ED0  1797               	andwf	(___ftmul@f2+1)& (0+255),f,b
 28437  006ED2  0E00               	movlw	0
 28438  006ED4  0100               	movlb	0	; () banked
 28439  006ED6  1798               	andwf	(___ftmul@f2+2)& (0+255),f,b
 28440                           
 28441                           ; BSR set to: 0
 28442  006ED8  0E00               	movlw	0
 28443  006EDA  0100               	movlb	0	; () banked
 28444  006EDC  6F9D               	movwf	___ftmul@f3_as_product& (0+255),b
 28445  006EDE  0E00               	movlw	0
 28446  006EE0  0100               	movlb	0	; () banked
 28447  006EE2  6F9E               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 28448  006EE4  0E00               	movlw	0
 28449  006EE6  0100               	movlb	0	; () banked
 28450  006EE8  6F9F               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 28451                           
 28452                           ; BSR set to: 0
 28453  006EEA  0E07               	movlw	7
 28454  006EEC  0100               	movlb	0	; () banked
 28455  006EEE  6FA0               	movwf	___ftmul@cntr& (0+255),b
 28456  006EF0  D000               	goto	l12698
 28457  006EF2                     l12698:
 28458                           
 28459                           ; BSR set to: 0
 28460  006EF2  0100               	movlb	0	; () banked
 28461  006EF4  A193               	btfss	___ftmul@f1& (0+255),0,b
 28462  006EF6  D00D               	goto	l12702
 28463                           
 28464                           ; BSR set to: 0
 28465  006EF8  0100               	movlb	0	; () banked
 28466  006EFA  5196               	movf	___ftmul@f2& (0+255),w,b
 28467  006EFC  0100               	movlb	0	; () banked
 28468  006EFE  279D               	addwf	___ftmul@f3_as_product& (0+255),f,b
 28469  006F00  0100               	movlb	0	; () banked
 28470  006F02  5197               	movf	(___ftmul@f2+1)& (0+255),w,b
 28471  006F04  0100               	movlb	0	; () banked
 28472  006F06  239E               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 28473  006F08  0100               	movlb	0	; () banked
 28474  006F0A  5198               	movf	(___ftmul@f2+2)& (0+255),w,b
 28475  006F0C  0100               	movlb	0	; () banked
 28476  006F0E  239F               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 28477  006F10  D000               	goto	l12702
 28478  006F12                     l12702:
 28479                           
 28480                           ; BSR set to: 0
 28481  006F12  0100               	movlb	0	; () banked
 28482  006F14  90D8               	bcf	status,0,c
 28483  006F16  3395               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 28484  006F18  3394               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 28485  006F1A  3393               	rrcf	___ftmul@f1& (0+255),f,b
 28486  006F1C  0100               	movlb	0	; () banked
 28487  006F1E  90D8               	bcf	status,0,c
 28488  006F20  3796               	rlcf	___ftmul@f2& (0+255),f,b
 28489  006F22  3797               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 28490  006F24  3798               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 28491                           
 28492                           ; BSR set to: 0
 28493  006F26  0100               	movlb	0	; () banked
 28494  006F28  2FA0               	decfsz	___ftmul@cntr& (0+255),f,b
 28495  006F2A  D7E3               	goto	l12698
 28496  006F2C  D000               	goto	l12706
 28497  006F2E                     l12706:
 28498                           
 28499                           ; BSR set to: 0
 28500  006F2E  0E09               	movlw	9
 28501  006F30  0100               	movlb	0	; () banked
 28502  006F32  6FA0               	movwf	___ftmul@cntr& (0+255),b
 28503  006F34  D000               	goto	l12708
 28504  006F36                     l12708:
 28505                           
 28506                           ; BSR set to: 0
 28507  006F36  0100               	movlb	0	; () banked
 28508  006F38  A193               	btfss	___ftmul@f1& (0+255),0,b
 28509  006F3A  D00D               	goto	l12712
 28510                           
 28511                           ; BSR set to: 0
 28512  006F3C  0100               	movlb	0	; () banked
 28513  006F3E  5196               	movf	___ftmul@f2& (0+255),w,b
 28514  006F40  0100               	movlb	0	; () banked
 28515  006F42  279D               	addwf	___ftmul@f3_as_product& (0+255),f,b
 28516  006F44  0100               	movlb	0	; () banked
 28517  006F46  5197               	movf	(___ftmul@f2+1)& (0+255),w,b
 28518  006F48  0100               	movlb	0	; () banked
 28519  006F4A  239E               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 28520  006F4C  0100               	movlb	0	; () banked
 28521  006F4E  5198               	movf	(___ftmul@f2+2)& (0+255),w,b
 28522  006F50  0100               	movlb	0	; () banked
 28523  006F52  239F               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 28524  006F54  D000               	goto	l12712
 28525  006F56                     l12712:
 28526                           
 28527                           ; BSR set to: 0
 28528  006F56  0100               	movlb	0	; () banked
 28529  006F58  90D8               	bcf	status,0,c
 28530  006F5A  3395               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 28531  006F5C  3394               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 28532  006F5E  3393               	rrcf	___ftmul@f1& (0+255),f,b
 28533  006F60  0100               	movlb	0	; () banked
 28534  006F62  90D8               	bcf	status,0,c
 28535  006F64  339F               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 28536  006F66  339E               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 28537  006F68  339D               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 28538                           
 28539                           ; BSR set to: 0
 28540  006F6A  0100               	movlb	0	; () banked
 28541  006F6C  2FA0               	decfsz	___ftmul@cntr& (0+255),f,b
 28542  006F6E  D7E3               	goto	l12708
 28543  006F70  D000               	goto	l12716
 28544  006F72                     l12716:
 28545                           
 28546                           ; BSR set to: 0
 28547  006F72  C09D  F079         	movff	___ftmul@f3_as_product,___ftpack@arg
 28548  006F76  C09E  F07A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 28549  006F7A  C09F  F07B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 28550  006F7E  C09C  F07C         	movff	___ftmul@exp,___ftpack@exp
 28551  006F82  C0A1  F07D         	movff	___ftmul@sign,___ftpack@sign
 28552  006F86  ECED  F03A         	call	___ftpack	;wreg free
 28553  006F8A  C079  F093         	movff	?___ftpack,?___ftmul
 28554  006F8E  C07A  F094         	movff	?___ftpack+1,?___ftmul+1
 28555  006F92  C07B  F095         	movff	?___ftpack+2,?___ftmul+2
 28556  006F96  0012               	return	
 28557  006F98  0012               	return		;funcret
 28558  006F9A                     __end_of___ftmul:
 28559                           	opt stack 0
 28560                           tblptru	equ	0xFF8
 28561                           tblptrh	equ	0xFF7
 28562                           tblptrl	equ	0xFF6
 28563                           tablat	equ	0xFF5
 28564                           prodh	equ	0xFF4
 28565                           prodl	equ	0xFF3
 28566                           intcon	equ	0xFF2
 28567                           intcon2	equ	0xFF1
 28568                           indf0	equ	0xFEF
 28569                           postinc0	equ	0xFEE
 28570                           fsr0h	equ	0xFEA
 28571                           fsr0l	equ	0xFE9
 28572                           wreg	equ	0xFE8
 28573                           indf1	equ	0xFE7
 28574                           postdec1	equ	0xFE5
 28575                           fsr1h	equ	0xFE2
 28576                           fsr1l	equ	0xFE1
 28577                           indf2	equ	0xFDF
 28578                           postinc2	equ	0xFDE
 28579                           postdec2	equ	0xFDD
 28580                           fsr2h	equ	0xFDA
 28581                           fsr2l	equ	0xFD9
 28582                           status	equ	0xFD8
 28583                           
 28584 ;; *************** function ___awmod *****************
 28585 ;; Defined at:
 28586 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 28587 ;; Parameters:    Size  Location     Type
 28588 ;;  dividend        2   25[BANK0 ] int 
 28589 ;;  divisor         2   27[BANK0 ] int 
 28590 ;; Auto vars:     Size  Location     Type
 28591 ;;  sign            1   30[BANK0 ] unsigned char 
 28592 ;;  counter         1   29[BANK0 ] unsigned char 
 28593 ;; Return value:  Size  Location     Type
 28594 ;;                  2   25[BANK0 ] int 
 28595 ;; Registers used:
 28596 ;;		wreg, status,2, status,0
 28597 ;; Tracked objects:
 28598 ;;		On entry : 0/0
 28599 ;;		On exit  : 0/0
 28600 ;;		Unchanged: 0/0
 28601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28602 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28603 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28605 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28606 ;;Total ram usage:        6 bytes
 28607 ;; Hardware stack levels used:    1
 28608 ;; Hardware stack levels required when called:    6
 28609 ;; This function calls:
 28610 ;;		Nothing
 28611 ;; This function is called by:
 28612 ;;		_fround
 28613 ;;		_scale
 28614 ;; This function uses a non-reentrant model
 28615 ;;
 28616                           
 28617                           	psect	text65
 28618  008190                     __ptext65:
 28619                           	opt stack 0
 28620  008190                     ___awmod:
 28621                           	opt stack 21
 28622                           
 28623                           ;incstack = 0
 28624  008190  0E00               	movlw	0
 28625  008192  0100               	movlb	0	; () banked
 28626  008194  6F7E               	movwf	___awmod@sign& (0+255),b
 28627                           
 28628                           ; BSR set to: 0
 28629  008196  0100               	movlb	0	; () banked
 28630  008198  AF7A               	btfss	(___awmod@dividend+1)& (0+255),7,b
 28631  00819A  D009               	goto	l12772
 28632                           
 28633                           ; BSR set to: 0
 28634  00819C  0100               	movlb	0	; () banked
 28635  00819E  6D79               	negf	___awmod@dividend& (0+255),b
 28636  0081A0  1F7A               	comf	(___awmod@dividend+1)& (0+255),f,b
 28637  0081A2  B0D8               	btfsc	status,0,c
 28638  0081A4  2B7A               	incf	(___awmod@dividend+1)& (0+255),f,b
 28639                           
 28640                           ; BSR set to: 0
 28641  0081A6  0E01               	movlw	1
 28642  0081A8  0100               	movlb	0	; () banked
 28643  0081AA  6F7E               	movwf	___awmod@sign& (0+255),b
 28644  0081AC  D000               	goto	l12772
 28645  0081AE                     l12772:
 28646                           
 28647                           ; BSR set to: 0
 28648  0081AE  0100               	movlb	0	; () banked
 28649  0081B0  AF7C               	btfss	(___awmod@divisor+1)& (0+255),7,b
 28650  0081B2  D006               	goto	l12776
 28651                           
 28652                           ; BSR set to: 0
 28653  0081B4  0100               	movlb	0	; () banked
 28654  0081B6  6D7B               	negf	___awmod@divisor& (0+255),b
 28655  0081B8  1F7C               	comf	(___awmod@divisor+1)& (0+255),f,b
 28656  0081BA  B0D8               	btfsc	status,0,c
 28657  0081BC  2B7C               	incf	(___awmod@divisor+1)& (0+255),f,b
 28658  0081BE  D000               	goto	l12776
 28659  0081C0                     l12776:
 28660                           
 28661                           ; BSR set to: 0
 28662  0081C0  0100               	movlb	0	; () banked
 28663  0081C2  517B               	movf	___awmod@divisor& (0+255),w,b
 28664  0081C4  0100               	movlb	0	; () banked
 28665  0081C6  117C               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 28666  0081C8  B4D8               	btfsc	status,2,c
 28667  0081CA  D02B               	goto	l12792
 28668                           
 28669                           ; BSR set to: 0
 28670  0081CC  0E01               	movlw	1
 28671  0081CE  0100               	movlb	0	; () banked
 28672  0081D0  6F7D               	movwf	___awmod@counter& (0+255),b
 28673  0081D2  D007               	goto	l12782
 28674  0081D4                     l12780:
 28675                           
 28676                           ; BSR set to: 0
 28677  0081D4  0100               	movlb	0	; () banked
 28678  0081D6  90D8               	bcf	status,0,c
 28679  0081D8  377B               	rlcf	___awmod@divisor& (0+255),f,b
 28680  0081DA  377C               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 28681  0081DC  0100               	movlb	0	; () banked
 28682  0081DE  2B7D               	incf	___awmod@counter& (0+255),f,b
 28683  0081E0  D000               	goto	l12782
 28684  0081E2                     l12782:
 28685                           
 28686                           ; BSR set to: 0
 28687  0081E2  0100               	movlb	0	; () banked
 28688  0081E4  BF7C               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 28689  0081E6  D002               	goto	l12784
 28690  0081E8  D7F5               	goto	l12780
 28691                           
 28692                           ; BSR set to: 0
 28693  0081EA  D000               	goto	l12784
 28694  0081EC                     l12784:
 28695                           
 28696                           ; BSR set to: 0
 28697  0081EC  0100               	movlb	0	; () banked
 28698  0081EE  517B               	movf	___awmod@divisor& (0+255),w,b
 28699  0081F0  0100               	movlb	0	; () banked
 28700  0081F2  5D79               	subwf	___awmod@dividend& (0+255),w,b
 28701  0081F4  0100               	movlb	0	; () banked
 28702  0081F6  517C               	movf	(___awmod@divisor+1)& (0+255),w,b
 28703  0081F8  0100               	movlb	0	; () banked
 28704  0081FA  597A               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 28705  0081FC  A0D8               	btfss	status,0,c
 28706  0081FE  D009               	goto	l12788
 28707                           
 28708                           ; BSR set to: 0
 28709  008200  0100               	movlb	0	; () banked
 28710  008202  517B               	movf	___awmod@divisor& (0+255),w,b
 28711  008204  0100               	movlb	0	; () banked
 28712  008206  5F79               	subwf	___awmod@dividend& (0+255),f,b
 28713  008208  0100               	movlb	0	; () banked
 28714  00820A  517C               	movf	(___awmod@divisor+1)& (0+255),w,b
 28715  00820C  0100               	movlb	0	; () banked
 28716  00820E  5B7A               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 28717  008210  D000               	goto	l12788
 28718  008212                     l12788:
 28719                           
 28720                           ; BSR set to: 0
 28721  008212  0100               	movlb	0	; () banked
 28722  008214  90D8               	bcf	status,0,c
 28723  008216  337C               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 28724  008218  337B               	rrcf	___awmod@divisor& (0+255),f,b
 28725                           
 28726                           ; BSR set to: 0
 28727  00821A  0100               	movlb	0	; () banked
 28728  00821C  2F7D               	decfsz	___awmod@counter& (0+255),f,b
 28729  00821E  D7E6               	goto	l12784
 28730                           
 28731                           ; BSR set to: 0
 28732  008220  D000               	goto	l12792
 28733  008222                     l12792:
 28734                           
 28735                           ; BSR set to: 0
 28736  008222  0100               	movlb	0	; () banked
 28737  008224  517E               	movf	___awmod@sign& (0+255),w,b
 28738  008226  0100               	movlb	0	; () banked
 28739  008228  B4D8               	btfsc	status,2,c
 28740  00822A  D006               	goto	l12796
 28741                           
 28742                           ; BSR set to: 0
 28743  00822C  0100               	movlb	0	; () banked
 28744  00822E  6D79               	negf	___awmod@dividend& (0+255),b
 28745  008230  1F7A               	comf	(___awmod@dividend+1)& (0+255),f,b
 28746  008232  B0D8               	btfsc	status,0,c
 28747  008234  2B7A               	incf	(___awmod@dividend+1)& (0+255),f,b
 28748  008236  D000               	goto	l12796
 28749  008238                     l12796:
 28750                           
 28751                           ; BSR set to: 0
 28752  008238  C079  F079         	movff	___awmod@dividend,?___awmod
 28753  00823C  C07A  F07A         	movff	___awmod@dividend+1,?___awmod+1
 28754  008240  0012               	return	
 28755                           
 28756                           ; BSR set to: 0
 28757                           
 28758                           ; BSR set to: 0
 28759  008242  0012               	return		;funcret
 28760  008244                     __end_of___awmod:
 28761                           	opt stack 0
 28762                           tblptru	equ	0xFF8
 28763                           tblptrh	equ	0xFF7
 28764                           tblptrl	equ	0xFF6
 28765                           tablat	equ	0xFF5
 28766                           prodh	equ	0xFF4
 28767                           prodl	equ	0xFF3
 28768                           intcon	equ	0xFF2
 28769                           intcon2	equ	0xFF1
 28770                           indf0	equ	0xFEF
 28771                           postinc0	equ	0xFEE
 28772                           fsr0h	equ	0xFEA
 28773                           fsr0l	equ	0xFE9
 28774                           wreg	equ	0xFE8
 28775                           indf1	equ	0xFE7
 28776                           postdec1	equ	0xFE5
 28777                           fsr1h	equ	0xFE2
 28778                           fsr1l	equ	0xFE1
 28779                           indf2	equ	0xFDF
 28780                           postinc2	equ	0xFDE
 28781                           postdec2	equ	0xFDD
 28782                           fsr2h	equ	0xFDA
 28783                           fsr2l	equ	0xFD9
 28784                           status	equ	0xFD8
 28785                           
 28786 ;; *************** function ___awdiv *****************
 28787 ;; Defined at:
 28788 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 28789 ;; Parameters:    Size  Location     Type
 28790 ;;  dividend        2   31[BANK0 ] int 
 28791 ;;  divisor         2   33[BANK0 ] int 
 28792 ;; Auto vars:     Size  Location     Type
 28793 ;;  quotient        2   37[BANK0 ] int 
 28794 ;;  sign            1   36[BANK0 ] unsigned char 
 28795 ;;  counter         1   35[BANK0 ] unsigned char 
 28796 ;; Return value:  Size  Location     Type
 28797 ;;                  2   31[BANK0 ] int 
 28798 ;; Registers used:
 28799 ;;		wreg, status,2, status,0
 28800 ;; Tracked objects:
 28801 ;;		On entry : 0/0
 28802 ;;		On exit  : 0/0
 28803 ;;		Unchanged: 0/0
 28804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28805 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28806 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28808 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28809 ;;Total ram usage:        8 bytes
 28810 ;; Hardware stack levels used:    1
 28811 ;; Hardware stack levels required when called:    6
 28812 ;; This function calls:
 28813 ;;		Nothing
 28814 ;; This function is called by:
 28815 ;;		_fround
 28816 ;;		_scale
 28817 ;;		_sprintf
 28818 ;; This function uses a non-reentrant model
 28819 ;;
 28820                           
 28821                           	psect	text66
 28822  007C36                     __ptext66:
 28823                           	opt stack 0
 28824  007C36                     ___awdiv:
 28825                           	opt stack 21
 28826                           
 28827                           ; BSR set to: 0
 28828                           ;incstack = 0
 28829  007C36  0E00               	movlw	0
 28830  007C38  0100               	movlb	0	; () banked
 28831  007C3A  6F84               	movwf	___awdiv@sign& (0+255),b
 28832                           
 28833                           ; BSR set to: 0
 28834  007C3C  0100               	movlb	0	; () banked
 28835  007C3E  AF82               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 28836  007C40  D009               	goto	l12728
 28837                           
 28838                           ; BSR set to: 0
 28839  007C42  0100               	movlb	0	; () banked
 28840  007C44  6D81               	negf	___awdiv@divisor& (0+255),b
 28841  007C46  1F82               	comf	(___awdiv@divisor+1)& (0+255),f,b
 28842  007C48  B0D8               	btfsc	status,0,c
 28843  007C4A  2B82               	incf	(___awdiv@divisor+1)& (0+255),f,b
 28844                           
 28845                           ; BSR set to: 0
 28846  007C4C  0E01               	movlw	1
 28847  007C4E  0100               	movlb	0	; () banked
 28848  007C50  6F84               	movwf	___awdiv@sign& (0+255),b
 28849  007C52  D000               	goto	l12728
 28850  007C54                     l12728:
 28851                           
 28852                           ; BSR set to: 0
 28853  007C54  0100               	movlb	0	; () banked
 28854  007C56  AF80               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 28855  007C58  D009               	goto	l12734
 28856                           
 28857                           ; BSR set to: 0
 28858  007C5A  0100               	movlb	0	; () banked
 28859  007C5C  6D7F               	negf	___awdiv@dividend& (0+255),b
 28860  007C5E  1F80               	comf	(___awdiv@dividend+1)& (0+255),f,b
 28861  007C60  B0D8               	btfsc	status,0,c
 28862  007C62  2B80               	incf	(___awdiv@dividend+1)& (0+255),f,b
 28863                           
 28864                           ; BSR set to: 0
 28865  007C64  0E01               	movlw	1
 28866  007C66  0100               	movlb	0	; () banked
 28867  007C68  1B84               	xorwf	___awdiv@sign& (0+255),f,b
 28868  007C6A  D000               	goto	l12734
 28869  007C6C                     l12734:
 28870                           
 28871                           ; BSR set to: 0
 28872  007C6C  0E00               	movlw	0
 28873  007C6E  0100               	movlb	0	; () banked
 28874  007C70  6F86               	movwf	(___awdiv@quotient+1)& (0+255),b
 28875  007C72  0E00               	movlw	0
 28876  007C74  6F85               	movwf	___awdiv@quotient& (0+255),b
 28877                           
 28878                           ; BSR set to: 0
 28879  007C76  0100               	movlb	0	; () banked
 28880  007C78  5181               	movf	___awdiv@divisor& (0+255),w,b
 28881  007C7A  0100               	movlb	0	; () banked
 28882  007C7C  1182               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 28883  007C7E  B4D8               	btfsc	status,2,c
 28884  007C80  D031               	goto	l12756
 28885                           
 28886                           ; BSR set to: 0
 28887  007C82  0E01               	movlw	1
 28888  007C84  0100               	movlb	0	; () banked
 28889  007C86  6F83               	movwf	___awdiv@counter& (0+255),b
 28890  007C88  D007               	goto	l12742
 28891  007C8A                     l12740:
 28892                           
 28893                           ; BSR set to: 0
 28894  007C8A  0100               	movlb	0	; () banked
 28895  007C8C  90D8               	bcf	status,0,c
 28896  007C8E  3781               	rlcf	___awdiv@divisor& (0+255),f,b
 28897  007C90  3782               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 28898  007C92  0100               	movlb	0	; () banked
 28899  007C94  2B83               	incf	___awdiv@counter& (0+255),f,b
 28900  007C96  D000               	goto	l12742
 28901  007C98                     l12742:
 28902                           
 28903                           ; BSR set to: 0
 28904  007C98  0100               	movlb	0	; () banked
 28905  007C9A  BF82               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 28906  007C9C  D002               	goto	l12744
 28907  007C9E  D7F5               	goto	l12740
 28908                           
 28909                           ; BSR set to: 0
 28910  007CA0  D000               	goto	l12744
 28911  007CA2                     l12744:
 28912                           
 28913                           ; BSR set to: 0
 28914  007CA2  0100               	movlb	0	; () banked
 28915  007CA4  90D8               	bcf	status,0,c
 28916  007CA6  3785               	rlcf	___awdiv@quotient& (0+255),f,b
 28917  007CA8  3786               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 28918                           
 28919                           ; BSR set to: 0
 28920  007CAA  0100               	movlb	0	; () banked
 28921  007CAC  5181               	movf	___awdiv@divisor& (0+255),w,b
 28922  007CAE  0100               	movlb	0	; () banked
 28923  007CB0  5D7F               	subwf	___awdiv@dividend& (0+255),w,b
 28924  007CB2  0100               	movlb	0	; () banked
 28925  007CB4  5182               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28926  007CB6  0100               	movlb	0	; () banked
 28927  007CB8  5980               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 28928  007CBA  A0D8               	btfss	status,0,c
 28929  007CBC  D00B               	goto	l12752
 28930                           
 28931                           ; BSR set to: 0
 28932  007CBE  0100               	movlb	0	; () banked
 28933  007CC0  5181               	movf	___awdiv@divisor& (0+255),w,b
 28934  007CC2  0100               	movlb	0	; () banked
 28935  007CC4  5F7F               	subwf	___awdiv@dividend& (0+255),f,b
 28936  007CC6  0100               	movlb	0	; () banked
 28937  007CC8  5182               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28938  007CCA  0100               	movlb	0	; () banked
 28939  007CCC  5B80               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 28940                           
 28941                           ; BSR set to: 0
 28942  007CCE  0100               	movlb	0	; () banked
 28943  007CD0  8185               	bsf	___awdiv@quotient& (0+255),0,b
 28944  007CD2  D000               	goto	l12752
 28945  007CD4                     l12752:
 28946                           
 28947                           ; BSR set to: 0
 28948  007CD4  0100               	movlb	0	; () banked
 28949  007CD6  90D8               	bcf	status,0,c
 28950  007CD8  3382               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 28951  007CDA  3381               	rrcf	___awdiv@divisor& (0+255),f,b
 28952                           
 28953                           ; BSR set to: 0
 28954  007CDC  0100               	movlb	0	; () banked
 28955  007CDE  2F83               	decfsz	___awdiv@counter& (0+255),f,b
 28956  007CE0  D7E0               	goto	l12744
 28957                           
 28958                           ; BSR set to: 0
 28959  007CE2  D000               	goto	l12756
 28960  007CE4                     l12756:
 28961                           
 28962                           ; BSR set to: 0
 28963  007CE4  0100               	movlb	0	; () banked
 28964  007CE6  5184               	movf	___awdiv@sign& (0+255),w,b
 28965  007CE8  0100               	movlb	0	; () banked
 28966  007CEA  B4D8               	btfsc	status,2,c
 28967  007CEC  D006               	goto	l12760
 28968                           
 28969                           ; BSR set to: 0
 28970  007CEE  0100               	movlb	0	; () banked
 28971  007CF0  6D85               	negf	___awdiv@quotient& (0+255),b
 28972  007CF2  1F86               	comf	(___awdiv@quotient+1)& (0+255),f,b
 28973  007CF4  B0D8               	btfsc	status,0,c
 28974  007CF6  2B86               	incf	(___awdiv@quotient+1)& (0+255),f,b
 28975  007CF8  D000               	goto	l12760
 28976  007CFA                     l12760:
 28977                           
 28978                           ; BSR set to: 0
 28979  007CFA  C085  F07F         	movff	___awdiv@quotient,?___awdiv
 28980  007CFE  C086  F080         	movff	___awdiv@quotient+1,?___awdiv+1
 28981  007D02  0012               	return	
 28982                           
 28983                           ; BSR set to: 0
 28984                           
 28985                           ; BSR set to: 0
 28986  007D04  0012               	return		;funcret
 28987  007D06                     __end_of___awdiv:
 28988                           	opt stack 0
 28989                           tblptru	equ	0xFF8
 28990                           tblptrh	equ	0xFF7
 28991                           tblptrl	equ	0xFF6
 28992                           tablat	equ	0xFF5
 28993                           prodh	equ	0xFF4
 28994                           prodl	equ	0xFF3
 28995                           intcon	equ	0xFF2
 28996                           intcon2	equ	0xFF1
 28997                           indf0	equ	0xFEF
 28998                           postinc0	equ	0xFEE
 28999                           fsr0h	equ	0xFEA
 29000                           fsr0l	equ	0xFE9
 29001                           wreg	equ	0xFE8
 29002                           indf1	equ	0xFE7
 29003                           postdec1	equ	0xFE5
 29004                           fsr1h	equ	0xFE2
 29005                           fsr1l	equ	0xFE1
 29006                           indf2	equ	0xFDF
 29007                           postinc2	equ	0xFDE
 29008                           postdec2	equ	0xFDD
 29009                           fsr2h	equ	0xFDA
 29010                           fsr2l	equ	0xFD9
 29011                           status	equ	0xFD8
 29012                           
 29013 ;; *************** function __tdiv_to_l_ *****************
 29014 ;; Defined at:
 29015 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
 29016 ;; Parameters:    Size  Location     Type
 29017 ;;  f1              3   25[BANK0 ] float 
 29018 ;;  f2              3   28[BANK0 ] float 
 29019 ;; Auto vars:     Size  Location     Type
 29020 ;;  quot            4   34[BANK0 ] unsigned long 
 29021 ;;  exp1            1   39[BANK0 ] unsigned char 
 29022 ;;  cntr            1   38[BANK0 ] unsigned char 
 29023 ;; Return value:  Size  Location     Type
 29024 ;;                  4   25[BANK0 ] unsigned long 
 29025 ;; Registers used:
 29026 ;;		wreg, status,2, status,0
 29027 ;; Tracked objects:
 29028 ;;		On entry : 0/0
 29029 ;;		On exit  : 0/0
 29030 ;;		Unchanged: 0/0
 29031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29032 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29033 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29034 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29035 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29036 ;;Total ram usage:       15 bytes
 29037 ;; Hardware stack levels used:    1
 29038 ;; Hardware stack levels required when called:    6
 29039 ;; This function calls:
 29040 ;;		Nothing
 29041 ;; This function is called by:
 29042 ;;		_sprintf
 29043 ;; This function uses a non-reentrant model
 29044 ;;
 29045                           
 29046                           	psect	text67
 29047  0067F6                     __ptext67:
 29048                           	opt stack 0
 29049  0067F6                     __tdiv_to_l_:
 29050                           	opt stack 22
 29051                           
 29052                           ; BSR set to: 0
 29053                           ;incstack = 0
 29054  0067F6  C07B  F07F         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 29055  0067FA  0100               	movlb	0	; () banked
 29056  0067FC  6B80               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 29057  0067FE  6B81               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 29058  006800  0100               	movlb	0	; () banked
 29059  006802  357A               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 29060  006804  0100               	movlb	0	; () banked
 29061  006806  377F               	rlcf	??__tdiv_to_l_& (0+255),f,b
 29062  006808  E301               	bnc	u15461
 29063  00680A  8180               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 29064  00680C                     u15461:
 29065  00680C  0100               	movlb	0	; () banked
 29066  00680E  517F               	movf	??__tdiv_to_l_& (0+255),w,b
 29067  006810  0100               	movlb	0	; () banked
 29068  006812  6F87               	movwf	__tdiv_to_l_@exp1& (0+255),b
 29069  006814  0100               	movlb	0	; () banked
 29070  006816  5187               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29071  006818  A4D8               	btfss	status,2,c
 29072  00681A  D00A               	goto	l13026
 29073                           
 29074                           ; BSR set to: 0
 29075  00681C  0E00               	movlw	0
 29076  00681E  0100               	movlb	0	; () banked
 29077  006820  6F79               	movwf	?__tdiv_to_l_& (0+255),b
 29078  006822  0E00               	movlw	0
 29079  006824  6F7A               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29080  006826  0E00               	movlw	0
 29081  006828  6F7B               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29082  00682A  0E00               	movlw	0
 29083  00682C  6F7C               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29084                           
 29085                           ; BSR set to: 0
 29086  00682E  0012               	return	
 29087  006830                     l13026:
 29088                           
 29089                           ; BSR set to: 0
 29090  006830  C07E  F07F         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 29091  006834  0100               	movlb	0	; () banked
 29092  006836  6B80               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 29093  006838  6B81               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 29094  00683A  0100               	movlb	0	; () banked
 29095  00683C  357D               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29096  00683E  0100               	movlb	0	; () banked
 29097  006840  377F               	rlcf	??__tdiv_to_l_& (0+255),f,b
 29098  006842  E301               	bnc	u15481
 29099  006844  8180               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 29100  006846                     u15481:
 29101  006846  0100               	movlb	0	; () banked
 29102  006848  517F               	movf	??__tdiv_to_l_& (0+255),w,b
 29103  00684A  0100               	movlb	0	; () banked
 29104  00684C  6F86               	movwf	__tdiv_to_l_@cntr& (0+255),b
 29105  00684E  0100               	movlb	0	; () banked
 29106  006850  5186               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 29107  006852  A4D8               	btfss	status,2,c
 29108  006854  D00A               	goto	l13032
 29109                           
 29110                           ; BSR set to: 0
 29111  006856  0E00               	movlw	0
 29112  006858  0100               	movlb	0	; () banked
 29113  00685A  6F79               	movwf	?__tdiv_to_l_& (0+255),b
 29114  00685C  0E00               	movlw	0
 29115  00685E  6F7A               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29116  006860  0E00               	movlw	0
 29117  006862  6F7B               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29118  006864  0E00               	movlw	0
 29119  006866  6F7C               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29120                           
 29121                           ; BSR set to: 0
 29122  006868  0012               	return	
 29123  00686A                     l13032:
 29124                           
 29125                           ; BSR set to: 0
 29126  00686A  0100               	movlb	0	; () banked
 29127  00686C  8F7A               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 29128                           
 29129                           ; BSR set to: 0
 29130  00686E  0EFF               	movlw	255
 29131  006870  0100               	movlb	0	; () banked
 29132  006872  1779               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 29133  006874  0EFF               	movlw	255
 29134  006876  0100               	movlb	0	; () banked
 29135  006878  177A               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29136  00687A  0E00               	movlw	0
 29137  00687C  0100               	movlb	0	; () banked
 29138  00687E  177B               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29139  006880  0100               	movlb	0	; () banked
 29140  006882  8F7D               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 29141                           
 29142                           ; BSR set to: 0
 29143  006884  0EFF               	movlw	255
 29144  006886  0100               	movlb	0	; () banked
 29145  006888  177C               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 29146  00688A  0EFF               	movlw	255
 29147  00688C  0100               	movlb	0	; () banked
 29148  00688E  177D               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 29149  006890  0E00               	movlw	0
 29150  006892  0100               	movlb	0	; () banked
 29151  006894  177E               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 29152                           
 29153                           ; BSR set to: 0
 29154  006896  0E00               	movlw	0
 29155  006898  0100               	movlb	0	; () banked
 29156  00689A  6F82               	movwf	__tdiv_to_l_@quot& (0+255),b
 29157  00689C  0E00               	movlw	0
 29158  00689E  6F83               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 29159  0068A0  0E00               	movlw	0
 29160  0068A2  6F84               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 29161  0068A4  0E00               	movlw	0
 29162  0068A6  6F85               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 29163                           
 29164                           ; BSR set to: 0
 29165  0068A8  0E7F               	movlw	127
 29166  0068AA  0100               	movlb	0	; () banked
 29167  0068AC  5F87               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 29168                           
 29169                           ; BSR set to: 0
 29170  0068AE  0100               	movlb	0	; () banked
 29171  0068B0  5186               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 29172  0068B2  0F98               	addlw	152
 29173  0068B4  0100               	movlb	0	; () banked
 29174  0068B6  5F87               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 29175                           
 29176                           ; BSR set to: 0
 29177  0068B8  0E18               	movlw	24
 29178  0068BA  0100               	movlb	0	; () banked
 29179  0068BC  6F86               	movwf	__tdiv_to_l_@cntr& (0+255),b
 29180  0068BE                     l2731:
 29181                           
 29182                           ; BSR set to: 0
 29183  0068BE  0100               	movlb	0	; () banked
 29184  0068C0  90D8               	bcf	status,0,c
 29185  0068C2  3782               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 29186  0068C4  3783               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29187  0068C6  3784               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29188  0068C8  3785               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29189                           
 29190                           ; BSR set to: 0
 29191  0068CA  0100               	movlb	0	; () banked
 29192  0068CC  517C               	movf	__tdiv_to_l_@f2& (0+255),w,b
 29193  0068CE  0100               	movlb	0	; () banked
 29194  0068D0  5D79               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 29195  0068D2  0100               	movlb	0	; () banked
 29196  0068D4  517D               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29197  0068D6  0100               	movlb	0	; () banked
 29198  0068D8  597A               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 29199  0068DA  0100               	movlb	0	; () banked
 29200  0068DC  517E               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 29201  0068DE  0100               	movlb	0	; () banked
 29202  0068E0  597B               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 29203  0068E2  A0D8               	btfss	status,0,c
 29204  0068E4  D00E               	goto	l2732
 29205                           
 29206                           ; BSR set to: 0
 29207  0068E6  0100               	movlb	0	; () banked
 29208  0068E8  517C               	movf	__tdiv_to_l_@f2& (0+255),w,b
 29209  0068EA  0100               	movlb	0	; () banked
 29210  0068EC  5F79               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 29211  0068EE  0100               	movlb	0	; () banked
 29212  0068F0  517D               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29213  0068F2  0100               	movlb	0	; () banked
 29214  0068F4  5B7A               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29215  0068F6  0100               	movlb	0	; () banked
 29216  0068F8  517E               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 29217  0068FA  0100               	movlb	0	; () banked
 29218  0068FC  5B7B               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29219                           
 29220                           ; BSR set to: 0
 29221  0068FE  0100               	movlb	0	; () banked
 29222  006900  8182               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 29223  006902                     l2732:
 29224                           
 29225                           ; BSR set to: 0
 29226  006902  0100               	movlb	0	; () banked
 29227  006904  90D8               	bcf	status,0,c
 29228  006906  3779               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 29229  006908  377A               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29230  00690A  377B               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29231                           
 29232                           ; BSR set to: 0
 29233  00690C  0100               	movlb	0	; () banked
 29234  00690E  2F86               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 29235  006910  D7D6               	goto	l2731
 29236  006912  D000               	goto	l13054
 29237  006914                     l13054:
 29238                           
 29239                           ; BSR set to: 0
 29240  006914  0100               	movlb	0	; () banked
 29241  006916  AF87               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 29242  006918  D01B               	goto	l13066
 29243                           
 29244                           ; BSR set to: 0
 29245  00691A  0100               	movlb	0	; () banked
 29246  00691C  5187               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29247  00691E  0A80               	xorlw	128
 29248  006920  0F97               	addlw	151
 29249  006922  B0D8               	btfsc	status,0,c
 29250  006924  D00B               	goto	l13062
 29251                           
 29252                           ; BSR set to: 0
 29253  006926  0E00               	movlw	0
 29254  006928  0100               	movlb	0	; () banked
 29255  00692A  6F79               	movwf	?__tdiv_to_l_& (0+255),b
 29256  00692C  0E00               	movlw	0
 29257  00692E  6F7A               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29258  006930  0E00               	movlw	0
 29259  006932  6F7B               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29260  006934  0E00               	movlw	0
 29261  006936  6F7C               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29262                           
 29263                           ; BSR set to: 0
 29264  006938  0012               	return	
 29265                           
 29266                           ; BSR set to: 0
 29267  00693A  D000               	goto	l13062
 29268  00693C                     l13062:
 29269                           
 29270                           ; BSR set to: 0
 29271  00693C  0100               	movlb	0	; () banked
 29272  00693E  90D8               	bcf	status,0,c
 29273  006940  3385               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29274  006942  3384               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29275  006944  3383               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29276  006946  3382               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 29277                           
 29278                           ; BSR set to: 0
 29279  006948  0100               	movlb	0	; () banked
 29280  00694A  3F87               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 29281  00694C  D7F7               	goto	l13062
 29282                           
 29283                           ; BSR set to: 0
 29284  00694E  D01D               	goto	l2738
 29285  006950                     l13066:
 29286                           
 29287                           ; BSR set to: 0
 29288  006950  0E17               	movlw	23
 29289  006952  0100               	movlb	0	; () banked
 29290  006954  6587               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 29291  006956  D014               	goto	l13074
 29292                           
 29293                           ; BSR set to: 0
 29294  006958  0E00               	movlw	0
 29295  00695A  0100               	movlb	0	; () banked
 29296  00695C  6F79               	movwf	?__tdiv_to_l_& (0+255),b
 29297  00695E  0E00               	movlw	0
 29298  006960  6F7A               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29299  006962  0E00               	movlw	0
 29300  006964  6F7B               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29301  006966  0E00               	movlw	0
 29302  006968  6F7C               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29303                           
 29304                           ; BSR set to: 0
 29305  00696A  0012               	return	
 29306                           
 29307                           ; BSR set to: 0
 29308  00696C  D009               	goto	l13074
 29309  00696E                     l13072:
 29310                           
 29311                           ; BSR set to: 0
 29312  00696E  0100               	movlb	0	; () banked
 29313  006970  90D8               	bcf	status,0,c
 29314  006972  3782               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 29315  006974  3783               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29316  006976  3784               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29317  006978  3785               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29318  00697A  0100               	movlb	0	; () banked
 29319  00697C  0787               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 29320  00697E  D000               	goto	l13074
 29321  006980                     l13074:
 29322                           
 29323                           ; BSR set to: 0
 29324  006980  0100               	movlb	0	; () banked
 29325  006982  5187               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29326  006984  0100               	movlb	0	; () banked
 29327  006986  A4D8               	btfss	status,2,c
 29328  006988  D7F2               	goto	l13072
 29329  00698A                     l2738:
 29330                           
 29331                           ; BSR set to: 0
 29332  00698A  C082  F079         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 29333  00698E  C083  F07A         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 29334  006992  C084  F07B         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 29335  006996  C085  F07C         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 29336                           
 29337                           ; BSR set to: 0
 29338  00699A  0012               	return		;funcret
 29339  00699C                     __end_of__tdiv_to_l_:
 29340                           	opt stack 0
 29341                           tblptru	equ	0xFF8
 29342                           tblptrh	equ	0xFF7
 29343                           tblptrl	equ	0xFF6
 29344                           tablat	equ	0xFF5
 29345                           prodh	equ	0xFF4
 29346                           prodl	equ	0xFF3
 29347                           intcon	equ	0xFF2
 29348                           intcon2	equ	0xFF1
 29349                           indf0	equ	0xFEF
 29350                           postinc0	equ	0xFEE
 29351                           fsr0h	equ	0xFEA
 29352                           fsr0l	equ	0xFE9
 29353                           wreg	equ	0xFE8
 29354                           indf1	equ	0xFE7
 29355                           postdec1	equ	0xFE5
 29356                           fsr1h	equ	0xFE2
 29357                           fsr1l	equ	0xFE1
 29358                           indf2	equ	0xFDF
 29359                           postinc2	equ	0xFDE
 29360                           postdec2	equ	0xFDD
 29361                           fsr2h	equ	0xFDA
 29362                           fsr2l	equ	0xFD9
 29363                           status	equ	0xFD8
 29364                           
 29365 ;; *************** function __div_to_l_ *****************
 29366 ;; Defined at:
 29367 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
 29368 ;; Parameters:    Size  Location     Type
 29369 ;;  f1              3   25[BANK0 ] unsigned long 
 29370 ;;  f2              3   28[BANK0 ] unsigned long 
 29371 ;; Auto vars:     Size  Location     Type
 29372 ;;  quot            4   31[BANK0 ] unsigned long 
 29373 ;;  exp1            1   36[BANK0 ] unsigned char 
 29374 ;;  cntr            1   35[BANK0 ] unsigned char 
 29375 ;; Return value:  Size  Location     Type
 29376 ;;                  4   25[BANK0 ] unsigned long 
 29377 ;; Registers used:
 29378 ;;		wreg, status,2, status,0
 29379 ;; Tracked objects:
 29380 ;;		On entry : 0/0
 29381 ;;		On exit  : 0/0
 29382 ;;		Unchanged: 0/0
 29383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29384 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29385 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29387 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29388 ;;Total ram usage:       12 bytes
 29389 ;; Hardware stack levels used:    1
 29390 ;; Hardware stack levels required when called:    6
 29391 ;; This function calls:
 29392 ;;		Nothing
 29393 ;; This function is called by:
 29394 ;;		_sprintf
 29395 ;; This function uses a non-reentrant model
 29396 ;;
 29397                           
 29398                           	psect	text68
 29399  00699C                     __ptext68:
 29400                           	opt stack 0
 29401  00699C                     __div_to_l_:
 29402                           	opt stack 22
 29403                           
 29404                           ; BSR set to: 0
 29405                           ;incstack = 0
 29406  00699C  0100               	movlb	0	; () banked
 29407  00699E  357B               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 29408  0069A0  357C               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 29409  0069A2  0100               	movlb	0	; () banked
 29410  0069A4  6F84               	movwf	__div_to_l_@exp1& (0+255),b
 29411  0069A6  0100               	movlb	0	; () banked
 29412  0069A8  5184               	movf	__div_to_l_@exp1& (0+255),w,b
 29413  0069AA  A4D8               	btfss	status,2,c
 29414  0069AC  D00A               	goto	l13082
 29415                           
 29416                           ; BSR set to: 0
 29417  0069AE  0E00               	movlw	0
 29418  0069B0  0100               	movlb	0	; () banked
 29419  0069B2  6F79               	movwf	?__div_to_l_& (0+255),b
 29420  0069B4  0E00               	movlw	0
 29421  0069B6  6F7A               	movwf	(?__div_to_l_+1)& (0+255),b
 29422  0069B8  0E00               	movlw	0
 29423  0069BA  6F7B               	movwf	(?__div_to_l_+2)& (0+255),b
 29424  0069BC  0E00               	movlw	0
 29425  0069BE  6F7C               	movwf	(?__div_to_l_+3)& (0+255),b
 29426                           
 29427                           ; BSR set to: 0
 29428  0069C0  0012               	return	
 29429  0069C2                     l13082:
 29430                           
 29431                           ; BSR set to: 0
 29432  0069C2  0100               	movlb	0	; () banked
 29433  0069C4  357E               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 29434  0069C6  357F               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 29435  0069C8  0100               	movlb	0	; () banked
 29436  0069CA  6F83               	movwf	__div_to_l_@cntr& (0+255),b
 29437  0069CC  0100               	movlb	0	; () banked
 29438  0069CE  5183               	movf	__div_to_l_@cntr& (0+255),w,b
 29439  0069D0  A4D8               	btfss	status,2,c
 29440  0069D2  D00A               	goto	l13088
 29441                           
 29442                           ; BSR set to: 0
 29443  0069D4  0E00               	movlw	0
 29444  0069D6  0100               	movlb	0	; () banked
 29445  0069D8  6F79               	movwf	?__div_to_l_& (0+255),b
 29446  0069DA  0E00               	movlw	0
 29447  0069DC  6F7A               	movwf	(?__div_to_l_+1)& (0+255),b
 29448  0069DE  0E00               	movlw	0
 29449  0069E0  6F7B               	movwf	(?__div_to_l_+2)& (0+255),b
 29450  0069E2  0E00               	movlw	0
 29451  0069E4  6F7C               	movwf	(?__div_to_l_+3)& (0+255),b
 29452                           
 29453                           ; BSR set to: 0
 29454  0069E6  0012               	return	
 29455  0069E8                     l13088:
 29456                           
 29457                           ; BSR set to: 0
 29458  0069E8  0100               	movlb	0	; () banked
 29459  0069EA  8F7B               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 29460                           
 29461                           ; BSR set to: 0
 29462  0069EC  0EFF               	movlw	255
 29463  0069EE  0100               	movlb	0	; () banked
 29464  0069F0  1779               	andwf	__div_to_l_@f1& (0+255),f,b
 29465  0069F2  0EFF               	movlw	255
 29466  0069F4  177A               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 29467  0069F6  0EFF               	movlw	255
 29468  0069F8  177B               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 29469  0069FA  0E00               	movlw	0
 29470  0069FC  177C               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 29471                           
 29472                           ; BSR set to: 0
 29473  0069FE  0100               	movlb	0	; () banked
 29474  006A00  8F7E               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 29475  006A02  0EFF               	movlw	255
 29476  006A04  0100               	movlb	0	; () banked
 29477  006A06  177C               	andwf	__div_to_l_@f2& (0+255),f,b
 29478  006A08  0EFF               	movlw	255
 29479  006A0A  177D               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 29480  006A0C  0EFF               	movlw	255
 29481  006A0E  177E               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 29482  006A10  0E00               	movlw	0
 29483  006A12  177F               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 29484                           
 29485                           ; BSR set to: 0
 29486  006A14  0E00               	movlw	0
 29487  006A16  0100               	movlb	0	; () banked
 29488  006A18  6F7F               	movwf	__div_to_l_@quot& (0+255),b
 29489  006A1A  0E00               	movlw	0
 29490  006A1C  6F80               	movwf	(__div_to_l_@quot+1)& (0+255),b
 29491  006A1E  0E00               	movlw	0
 29492  006A20  6F81               	movwf	(__div_to_l_@quot+2)& (0+255),b
 29493  006A22  0E00               	movlw	0
 29494  006A24  6F82               	movwf	(__div_to_l_@quot+3)& (0+255),b
 29495                           
 29496                           ; BSR set to: 0
 29497  006A26  0E7F               	movlw	127
 29498  006A28  0100               	movlb	0	; () banked
 29499  006A2A  5F84               	subwf	__div_to_l_@exp1& (0+255),f,b
 29500                           
 29501                           ; BSR set to: 0
 29502  006A2C  0100               	movlb	0	; () banked
 29503  006A2E  5183               	movf	__div_to_l_@cntr& (0+255),w,b
 29504  006A30  0FA0               	addlw	160
 29505  006A32  0100               	movlb	0	; () banked
 29506  006A34  5F84               	subwf	__div_to_l_@exp1& (0+255),f,b
 29507                           
 29508                           ; BSR set to: 0
 29509  006A36  0E20               	movlw	32
 29510  006A38  0100               	movlb	0	; () banked
 29511  006A3A  6F83               	movwf	__div_to_l_@cntr& (0+255),b
 29512  006A3C  D000               	goto	l13102
 29513  006A3E                     l13102:
 29514                           
 29515                           ; BSR set to: 0
 29516  006A3E  0100               	movlb	0	; () banked
 29517  006A40  90D8               	bcf	status,0,c
 29518  006A42  377F               	rlcf	__div_to_l_@quot& (0+255),f,b
 29519  006A44  3780               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 29520  006A46  3781               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 29521  006A48  3782               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 29522                           
 29523                           ; BSR set to: 0
 29524  006A4A  0100               	movlb	0	; () banked
 29525  006A4C  517C               	movf	__div_to_l_@f2& (0+255),w,b
 29526  006A4E  0100               	movlb	0	; () banked
 29527  006A50  5D79               	subwf	__div_to_l_@f1& (0+255),w,b
 29528  006A52  0100               	movlb	0	; () banked
 29529  006A54  517D               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 29530  006A56  0100               	movlb	0	; () banked
 29531  006A58  597A               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 29532  006A5A  0100               	movlb	0	; () banked
 29533  006A5C  517E               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 29534  006A5E  0100               	movlb	0	; () banked
 29535  006A60  597B               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 29536  006A62  0100               	movlb	0	; () banked
 29537  006A64  517F               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 29538  006A66  0100               	movlb	0	; () banked
 29539  006A68  597C               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 29540  006A6A  A0D8               	btfss	status,0,c
 29541  006A6C  D013               	goto	l13110
 29542                           
 29543                           ; BSR set to: 0
 29544  006A6E  0100               	movlb	0	; () banked
 29545  006A70  517C               	movf	__div_to_l_@f2& (0+255),w,b
 29546  006A72  0100               	movlb	0	; () banked
 29547  006A74  5F79               	subwf	__div_to_l_@f1& (0+255),f,b
 29548  006A76  0100               	movlb	0	; () banked
 29549  006A78  517D               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 29550  006A7A  0100               	movlb	0	; () banked
 29551  006A7C  5B7A               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 29552  006A7E  0100               	movlb	0	; () banked
 29553  006A80  517E               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 29554  006A82  0100               	movlb	0	; () banked
 29555  006A84  5B7B               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 29556  006A86  0100               	movlb	0	; () banked
 29557  006A88  517F               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 29558  006A8A  0100               	movlb	0	; () banked
 29559  006A8C  5B7C               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 29560                           
 29561                           ; BSR set to: 0
 29562  006A8E  0100               	movlb	0	; () banked
 29563  006A90  817F               	bsf	__div_to_l_@quot& (0+255),0,b
 29564  006A92  D000               	goto	l13110
 29565  006A94                     l13110:
 29566                           
 29567                           ; BSR set to: 0
 29568  006A94  0100               	movlb	0	; () banked
 29569  006A96  90D8               	bcf	status,0,c
 29570  006A98  3779               	rlcf	__div_to_l_@f1& (0+255),f,b
 29571  006A9A  377A               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 29572  006A9C  377B               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 29573  006A9E  377C               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 29574                           
 29575                           ; BSR set to: 0
 29576  006AA0  0100               	movlb	0	; () banked
 29577  006AA2  2F83               	decfsz	__div_to_l_@cntr& (0+255),f,b
 29578  006AA4  D7CC               	goto	l13102
 29579  006AA6  D000               	goto	l13114
 29580  006AA8                     l13114:
 29581                           
 29582                           ; BSR set to: 0
 29583  006AA8  0100               	movlb	0	; () banked
 29584  006AAA  AF84               	btfss	__div_to_l_@exp1& (0+255),7,b
 29585  006AAC  D01B               	goto	l13126
 29586                           
 29587                           ; BSR set to: 0
 29588  006AAE  0100               	movlb	0	; () banked
 29589  006AB0  5184               	movf	__div_to_l_@exp1& (0+255),w,b
 29590  006AB2  0A80               	xorlw	128
 29591  006AB4  0F9F               	addlw	159
 29592  006AB6  B0D8               	btfsc	status,0,c
 29593  006AB8  D00B               	goto	l13122
 29594                           
 29595                           ; BSR set to: 0
 29596  006ABA  0E00               	movlw	0
 29597  006ABC  0100               	movlb	0	; () banked
 29598  006ABE  6F79               	movwf	?__div_to_l_& (0+255),b
 29599  006AC0  0E00               	movlw	0
 29600  006AC2  6F7A               	movwf	(?__div_to_l_+1)& (0+255),b
 29601  006AC4  0E00               	movlw	0
 29602  006AC6  6F7B               	movwf	(?__div_to_l_+2)& (0+255),b
 29603  006AC8  0E00               	movlw	0
 29604  006ACA  6F7C               	movwf	(?__div_to_l_+3)& (0+255),b
 29605                           
 29606                           ; BSR set to: 0
 29607  006ACC  0012               	return	
 29608                           
 29609                           ; BSR set to: 0
 29610  006ACE  D000               	goto	l13122
 29611  006AD0                     l13122:
 29612                           
 29613                           ; BSR set to: 0
 29614  006AD0  0100               	movlb	0	; () banked
 29615  006AD2  90D8               	bcf	status,0,c
 29616  006AD4  3382               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 29617  006AD6  3381               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 29618  006AD8  3380               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 29619  006ADA  337F               	rrcf	__div_to_l_@quot& (0+255),f,b
 29620                           
 29621                           ; BSR set to: 0
 29622  006ADC  0100               	movlb	0	; () banked
 29623  006ADE  3F84               	incfsz	__div_to_l_@exp1& (0+255),f,b
 29624  006AE0  D7F7               	goto	l13122
 29625                           
 29626                           ; BSR set to: 0
 29627  006AE2  D01D               	goto	l2617
 29628  006AE4                     l13126:
 29629                           
 29630                           ; BSR set to: 0
 29631  006AE4  0E1F               	movlw	31
 29632  006AE6  0100               	movlb	0	; () banked
 29633  006AE8  6584               	cpfsgt	__div_to_l_@exp1& (0+255),b
 29634  006AEA  D014               	goto	l13134
 29635                           
 29636                           ; BSR set to: 0
 29637  006AEC  0E00               	movlw	0
 29638  006AEE  0100               	movlb	0	; () banked
 29639  006AF0  6F79               	movwf	?__div_to_l_& (0+255),b
 29640  006AF2  0E00               	movlw	0
 29641  006AF4  6F7A               	movwf	(?__div_to_l_+1)& (0+255),b
 29642  006AF6  0E00               	movlw	0
 29643  006AF8  6F7B               	movwf	(?__div_to_l_+2)& (0+255),b
 29644  006AFA  0E00               	movlw	0
 29645  006AFC  6F7C               	movwf	(?__div_to_l_+3)& (0+255),b
 29646                           
 29647                           ; BSR set to: 0
 29648  006AFE  0012               	return	
 29649                           
 29650                           ; BSR set to: 0
 29651  006B00  D009               	goto	l13134
 29652  006B02                     l13132:
 29653                           
 29654                           ; BSR set to: 0
 29655  006B02  0100               	movlb	0	; () banked
 29656  006B04  90D8               	bcf	status,0,c
 29657  006B06  377F               	rlcf	__div_to_l_@quot& (0+255),f,b
 29658  006B08  3780               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 29659  006B0A  3781               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 29660  006B0C  3782               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 29661  006B0E  0100               	movlb	0	; () banked
 29662  006B10  0784               	decf	__div_to_l_@exp1& (0+255),f,b
 29663  006B12  D000               	goto	l13134
 29664  006B14                     l13134:
 29665                           
 29666                           ; BSR set to: 0
 29667  006B14  0100               	movlb	0	; () banked
 29668  006B16  5184               	movf	__div_to_l_@exp1& (0+255),w,b
 29669  006B18  0100               	movlb	0	; () banked
 29670  006B1A  A4D8               	btfss	status,2,c
 29671  006B1C  D7F2               	goto	l13132
 29672  006B1E                     l2617:
 29673                           
 29674                           ; BSR set to: 0
 29675  006B1E  C07F  F079         	movff	__div_to_l_@quot,?__div_to_l_
 29676  006B22  C080  F07A         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 29677  006B26  C081  F07B         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 29678  006B2A  C082  F07C         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 29679                           
 29680                           ; BSR set to: 0
 29681  006B2E  0012               	return		;funcret
 29682  006B30                     __end_of__div_to_l_:
 29683                           	opt stack 0
 29684                           tblptru	equ	0xFF8
 29685                           tblptrh	equ	0xFF7
 29686                           tblptrl	equ	0xFF6
 29687                           tablat	equ	0xFF5
 29688                           prodh	equ	0xFF4
 29689                           prodl	equ	0xFF3
 29690                           intcon	equ	0xFF2
 29691                           intcon2	equ	0xFF1
 29692                           indf0	equ	0xFEF
 29693                           postinc0	equ	0xFEE
 29694                           fsr0h	equ	0xFEA
 29695                           fsr0l	equ	0xFE9
 29696                           wreg	equ	0xFE8
 29697                           indf1	equ	0xFE7
 29698                           postdec1	equ	0xFE5
 29699                           fsr1h	equ	0xFE2
 29700                           fsr1l	equ	0xFE1
 29701                           indf2	equ	0xFDF
 29702                           postinc2	equ	0xFDE
 29703                           postdec2	equ	0xFDD
 29704                           fsr2h	equ	0xFDA
 29705                           fsr2l	equ	0xFD9
 29706                           status	equ	0xFD8
 29707                           
 29708 ;; *************** function ___lltoft *****************
 29709 ;; Defined at:
 29710 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
 29711 ;; Parameters:    Size  Location     Type
 29712 ;;  c               4   33[BANK0 ] unsigned long 
 29713 ;; Auto vars:     Size  Location     Type
 29714 ;;  exp             1   41[BANK0 ] unsigned char 
 29715 ;; Return value:  Size  Location     Type
 29716 ;;                  3   33[BANK0 ] float 
 29717 ;; Registers used:
 29718 ;;		wreg, status,2, status,0, cstack
 29719 ;; Tracked objects:
 29720 ;;		On entry : 0/0
 29721 ;;		On exit  : 0/0
 29722 ;;		Unchanged: 0/0
 29723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29724 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29725 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29726 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29727 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29728 ;;Total ram usage:        9 bytes
 29729 ;; Hardware stack levels used:    1
 29730 ;; Hardware stack levels required when called:    7
 29731 ;; This function calls:
 29732 ;;		___ftpack
 29733 ;; This function is called by:
 29734 ;;		_InitUART
 29735 ;;		_sprintf
 29736 ;; This function uses a non-reentrant model
 29737 ;;
 29738                           
 29739                           	psect	text69
 29740  0088E4                     __ptext69:
 29741                           	opt stack 0
 29742  0088E4                     ___lltoft:
 29743                           	opt stack 21
 29744                           
 29745                           ; BSR set to: 0
 29746                           ;incstack = 0
 29747  0088E4  0E8E               	movlw	142
 29748  0088E6  0100               	movlb	0	; () banked
 29749  0088E8  6F89               	movwf	___lltoft@exp& (0+255),b
 29750  0088EA  D009               	goto	l13254
 29751  0088EC                     l13252:
 29752                           
 29753                           ; BSR set to: 0
 29754  0088EC  0100               	movlb	0	; () banked
 29755  0088EE  90D8               	bcf	status,0,c
 29756  0088F0  3384               	rrcf	(___lltoft@c+3)& (0+255),f,b
 29757  0088F2  3383               	rrcf	(___lltoft@c+2)& (0+255),f,b
 29758  0088F4  3382               	rrcf	(___lltoft@c+1)& (0+255),f,b
 29759  0088F6  3381               	rrcf	___lltoft@c& (0+255),f,b
 29760  0088F8  0100               	movlb	0	; () banked
 29761  0088FA  2B89               	incf	___lltoft@exp& (0+255),f,b
 29762  0088FC  D000               	goto	l13254
 29763  0088FE                     l13254:
 29764                           
 29765                           ; BSR set to: 0
 29766  0088FE  0E00               	movlw	0
 29767  008900  0100               	movlb	0	; () banked
 29768  008902  1581               	andwf	___lltoft@c& (0+255),w,b
 29769  008904  0100               	movlb	0	; () banked
 29770  008906  6F85               	movwf	??___lltoft& (0+255),b
 29771  008908  0E00               	movlw	0
 29772  00890A  0100               	movlb	0	; () banked
 29773  00890C  1582               	andwf	(___lltoft@c+1)& (0+255),w,b
 29774  00890E  0100               	movlb	0	; () banked
 29775  008910  6F86               	movwf	(??___lltoft+1)& (0+255),b
 29776  008912  0E00               	movlw	0
 29777  008914  0100               	movlb	0	; () banked
 29778  008916  1583               	andwf	(___lltoft@c+2)& (0+255),w,b
 29779  008918  0100               	movlb	0	; () banked
 29780  00891A  6F87               	movwf	(??___lltoft+2)& (0+255),b
 29781  00891C  0EFF               	movlw	255
 29782  00891E  0100               	movlb	0	; () banked
 29783  008920  1584               	andwf	(___lltoft@c+3)& (0+255),w,b
 29784  008922  0100               	movlb	0	; () banked
 29785  008924  6F88               	movwf	(??___lltoft+3)& (0+255),b
 29786  008926  0100               	movlb	0	; () banked
 29787  008928  5185               	movf	??___lltoft& (0+255),w,b
 29788  00892A  0100               	movlb	0	; () banked
 29789  00892C  1186               	iorwf	(??___lltoft+1)& (0+255),w,b
 29790  00892E  0100               	movlb	0	; () banked
 29791  008930  1187               	iorwf	(??___lltoft+2)& (0+255),w,b
 29792  008932  0100               	movlb	0	; () banked
 29793  008934  1188               	iorwf	(??___lltoft+3)& (0+255),w,b
 29794  008936  A4D8               	btfss	status,2,c
 29795  008938  D7D9               	goto	l13252
 29796                           
 29797                           ; BSR set to: 0
 29798                           
 29799                           ; BSR set to: 0
 29800  00893A  C081  F079         	movff	___lltoft@c,___ftpack@arg
 29801  00893E  C082  F07A         	movff	___lltoft@c+1,___ftpack@arg+1
 29802  008942  C083  F07B         	movff	___lltoft@c+2,___ftpack@arg+2
 29803  008946  C089  F07C         	movff	___lltoft@exp,___ftpack@exp
 29804  00894A  0E00               	movlw	0
 29805  00894C  0100               	movlb	0	; () banked
 29806  00894E  6F7D               	movwf	___ftpack@sign& (0+255),b
 29807  008950  ECED  F03A         	call	___ftpack	;wreg free
 29808  008954  C079  F081         	movff	?___ftpack,?___lltoft
 29809  008958  C07A  F082         	movff	?___ftpack+1,?___lltoft+1
 29810  00895C  C07B  F083         	movff	?___ftpack+2,?___lltoft+2
 29811  008960  0012               	return	
 29812  008962  0012               	return		;funcret
 29813  008964                     __end_of___lltoft:
 29814                           	opt stack 0
 29815                           tblptru	equ	0xFF8
 29816                           tblptrh	equ	0xFF7
 29817                           tblptrl	equ	0xFF6
 29818                           tablat	equ	0xFF5
 29819                           prodh	equ	0xFF4
 29820                           prodl	equ	0xFF3
 29821                           intcon	equ	0xFF2
 29822                           intcon2	equ	0xFF1
 29823                           indf0	equ	0xFEF
 29824                           postinc0	equ	0xFEE
 29825                           fsr0h	equ	0xFEA
 29826                           fsr0l	equ	0xFE9
 29827                           wreg	equ	0xFE8
 29828                           indf1	equ	0xFE7
 29829                           postdec1	equ	0xFE5
 29830                           fsr1h	equ	0xFE2
 29831                           fsr1l	equ	0xFE1
 29832                           indf2	equ	0xFDF
 29833                           postinc2	equ	0xFDE
 29834                           postdec2	equ	0xFDD
 29835                           fsr2h	equ	0xFDA
 29836                           fsr2l	equ	0xFD9
 29837                           status	equ	0xFD8
 29838                           
 29839 ;; *************** function ___llmod *****************
 29840 ;; Defined at:
 29841 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 29842 ;; Parameters:    Size  Location     Type
 29843 ;;  dividend        4   38[BANK0 ] unsigned long 
 29844 ;;  divisor         4   42[BANK0 ] unsigned long 
 29845 ;; Auto vars:     Size  Location     Type
 29846 ;;  counter         1   46[BANK0 ] unsigned char 
 29847 ;; Return value:  Size  Location     Type
 29848 ;;                  4   38[BANK0 ] unsigned long 
 29849 ;; Registers used:
 29850 ;;		wreg, status,2, status,0
 29851 ;; Tracked objects:
 29852 ;;		On entry : 0/0
 29853 ;;		On exit  : 0/0
 29854 ;;		Unchanged: 0/0
 29855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29856 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29857 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29859 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29860 ;;Total ram usage:        9 bytes
 29861 ;; Hardware stack levels used:    1
 29862 ;; Hardware stack levels required when called:    6
 29863 ;; This function calls:
 29864 ;;		Nothing
 29865 ;; This function is called by:
 29866 ;;		_sprintf
 29867 ;; This function uses a non-reentrant model
 29868 ;;
 29869                           
 29870                           	psect	text70
 29871  0083A4                     __ptext70:
 29872                           	opt stack 0
 29873  0083A4                     ___llmod:
 29874                           	opt stack 22
 29875                           
 29876                           ;incstack = 0
 29877  0083A4  0100               	movlb	0	; () banked
 29878  0083A6  518A               	movf	___llmod@divisor& (0+255),w,b
 29879  0083A8  0100               	movlb	0	; () banked
 29880  0083AA  118B               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 29881  0083AC  0100               	movlb	0	; () banked
 29882  0083AE  118C               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 29883  0083B0  0100               	movlb	0	; () banked
 29884  0083B2  118D               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 29885  0083B4  B4D8               	btfsc	status,2,c
 29886  0083B6  D03F               	goto	l2828
 29887                           
 29888                           ; BSR set to: 0
 29889  0083B8  0E01               	movlw	1
 29890  0083BA  0100               	movlb	0	; () banked
 29891  0083BC  6F8E               	movwf	___llmod@counter& (0+255),b
 29892  0083BE  D009               	goto	l13240
 29893  0083C0                     l13238:
 29894                           
 29895                           ; BSR set to: 0
 29896  0083C0  0100               	movlb	0	; () banked
 29897  0083C2  90D8               	bcf	status,0,c
 29898  0083C4  378A               	rlcf	___llmod@divisor& (0+255),f,b
 29899  0083C6  378B               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 29900  0083C8  378C               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 29901  0083CA  378D               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 29902  0083CC  0100               	movlb	0	; () banked
 29903  0083CE  2B8E               	incf	___llmod@counter& (0+255),f,b
 29904  0083D0  D000               	goto	l13240
 29905  0083D2                     l13240:
 29906                           
 29907                           ; BSR set to: 0
 29908  0083D2  0100               	movlb	0	; () banked
 29909  0083D4  BF8D               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 29910  0083D6  D002               	goto	l13242
 29911  0083D8  D7F3               	goto	l13238
 29912                           
 29913                           ; BSR set to: 0
 29914  0083DA  D000               	goto	l13242
 29915  0083DC                     l13242:
 29916                           
 29917                           ; BSR set to: 0
 29918  0083DC  0100               	movlb	0	; () banked
 29919  0083DE  518A               	movf	___llmod@divisor& (0+255),w,b
 29920  0083E0  0100               	movlb	0	; () banked
 29921  0083E2  5D86               	subwf	___llmod@dividend& (0+255),w,b
 29922  0083E4  0100               	movlb	0	; () banked
 29923  0083E6  518B               	movf	(___llmod@divisor+1)& (0+255),w,b
 29924  0083E8  0100               	movlb	0	; () banked
 29925  0083EA  5987               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 29926  0083EC  0100               	movlb	0	; () banked
 29927  0083EE  518C               	movf	(___llmod@divisor+2)& (0+255),w,b
 29928  0083F0  0100               	movlb	0	; () banked
 29929  0083F2  5988               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 29930  0083F4  0100               	movlb	0	; () banked
 29931  0083F6  518D               	movf	(___llmod@divisor+3)& (0+255),w,b
 29932  0083F8  0100               	movlb	0	; () banked
 29933  0083FA  5989               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 29934  0083FC  A0D8               	btfss	status,0,c
 29935  0083FE  D011               	goto	l13246
 29936                           
 29937                           ; BSR set to: 0
 29938  008400  0100               	movlb	0	; () banked
 29939  008402  518A               	movf	___llmod@divisor& (0+255),w,b
 29940  008404  0100               	movlb	0	; () banked
 29941  008406  5F86               	subwf	___llmod@dividend& (0+255),f,b
 29942  008408  0100               	movlb	0	; () banked
 29943  00840A  518B               	movf	(___llmod@divisor+1)& (0+255),w,b
 29944  00840C  0100               	movlb	0	; () banked
 29945  00840E  5B87               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 29946  008410  0100               	movlb	0	; () banked
 29947  008412  518C               	movf	(___llmod@divisor+2)& (0+255),w,b
 29948  008414  0100               	movlb	0	; () banked
 29949  008416  5B88               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 29950  008418  0100               	movlb	0	; () banked
 29951  00841A  518D               	movf	(___llmod@divisor+3)& (0+255),w,b
 29952  00841C  0100               	movlb	0	; () banked
 29953  00841E  5B89               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 29954  008420  D000               	goto	l13246
 29955  008422                     l13246:
 29956                           
 29957                           ; BSR set to: 0
 29958  008422  0100               	movlb	0	; () banked
 29959  008424  90D8               	bcf	status,0,c
 29960  008426  338D               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 29961  008428  338C               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 29962  00842A  338B               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 29963  00842C  338A               	rrcf	___llmod@divisor& (0+255),f,b
 29964                           
 29965                           ; BSR set to: 0
 29966  00842E  0100               	movlb	0	; () banked
 29967  008430  2F8E               	decfsz	___llmod@counter& (0+255),f,b
 29968  008432  D7D4               	goto	l13242
 29969  008434  D000               	goto	l2828
 29970  008436                     l2828:
 29971                           
 29972                           ; BSR set to: 0
 29973  008436  C086  F086         	movff	___llmod@dividend,?___llmod
 29974  00843A  C087  F087         	movff	___llmod@dividend+1,?___llmod+1
 29975  00843E  C088  F088         	movff	___llmod@dividend+2,?___llmod+2
 29976  008442  C089  F089         	movff	___llmod@dividend+3,?___llmod+3
 29977                           
 29978                           ; BSR set to: 0
 29979  008446  0012               	return		;funcret
 29980  008448                     __end_of___llmod:
 29981                           	opt stack 0
 29982                           tblptru	equ	0xFF8
 29983                           tblptrh	equ	0xFF7
 29984                           tblptrl	equ	0xFF6
 29985                           tablat	equ	0xFF5
 29986                           prodh	equ	0xFF4
 29987                           prodl	equ	0xFF3
 29988                           intcon	equ	0xFF2
 29989                           intcon2	equ	0xFF1
 29990                           indf0	equ	0xFEF
 29991                           postinc0	equ	0xFEE
 29992                           fsr0h	equ	0xFEA
 29993                           fsr0l	equ	0xFE9
 29994                           wreg	equ	0xFE8
 29995                           indf1	equ	0xFE7
 29996                           postdec1	equ	0xFE5
 29997                           fsr1h	equ	0xFE2
 29998                           fsr1l	equ	0xFE1
 29999                           indf2	equ	0xFDF
 30000                           postinc2	equ	0xFDE
 30001                           postdec2	equ	0xFDD
 30002                           fsr2h	equ	0xFDA
 30003                           fsr2l	equ	0xFD9
 30004                           status	equ	0xFD8
 30005                           
 30006 ;; *************** function ___lldiv *****************
 30007 ;; Defined at:
 30008 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 30009 ;; Parameters:    Size  Location     Type
 30010 ;;  dividend        4   25[BANK0 ] unsigned long 
 30011 ;;  divisor         4   29[BANK0 ] unsigned long 
 30012 ;; Auto vars:     Size  Location     Type
 30013 ;;  quotient        4   33[BANK0 ] unsigned long 
 30014 ;;  counter         1   37[BANK0 ] unsigned char 
 30015 ;; Return value:  Size  Location     Type
 30016 ;;                  4   25[BANK0 ] unsigned long 
 30017 ;; Registers used:
 30018 ;;		wreg, status,2, status,0
 30019 ;; Tracked objects:
 30020 ;;		On entry : 0/0
 30021 ;;		On exit  : 0/0
 30022 ;;		Unchanged: 0/0
 30023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30024 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30025 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30027 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30028 ;;Total ram usage:       13 bytes
 30029 ;; Hardware stack levels used:    1
 30030 ;; Hardware stack levels required when called:    6
 30031 ;; This function calls:
 30032 ;;		Nothing
 30033 ;; This function is called by:
 30034 ;;		_InitUART
 30035 ;;		_sprintf
 30036 ;; This function uses a non-reentrant model
 30037 ;;
 30038                           
 30039                           	psect	text71
 30040  007E9C                     __ptext71:
 30041                           	opt stack 0
 30042  007E9C                     ___lldiv:
 30043                           	opt stack 22
 30044                           
 30045                           ; BSR set to: 0
 30046                           ;incstack = 0
 30047  007E9C  0E00               	movlw	0
 30048  007E9E  0100               	movlb	0	; () banked
 30049  007EA0  6F81               	movwf	___lldiv@quotient& (0+255),b
 30050  007EA2  0E00               	movlw	0
 30051  007EA4  6F82               	movwf	(___lldiv@quotient+1)& (0+255),b
 30052  007EA6  0E00               	movlw	0
 30053  007EA8  6F83               	movwf	(___lldiv@quotient+2)& (0+255),b
 30054  007EAA  0E00               	movlw	0
 30055  007EAC  6F84               	movwf	(___lldiv@quotient+3)& (0+255),b
 30056                           
 30057                           ; BSR set to: 0
 30058  007EAE  0100               	movlb	0	; () banked
 30059  007EB0  517D               	movf	___lldiv@divisor& (0+255),w,b
 30060  007EB2  0100               	movlb	0	; () banked
 30061  007EB4  117E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 30062  007EB6  0100               	movlb	0	; () banked
 30063  007EB8  117F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 30064  007EBA  0100               	movlb	0	; () banked
 30065  007EBC  1180               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 30066  007EBE  B4D8               	btfsc	status,2,c
 30067  007EC0  D047               	goto	l2818
 30068                           
 30069                           ; BSR set to: 0
 30070  007EC2  0E01               	movlw	1
 30071  007EC4  0100               	movlb	0	; () banked
 30072  007EC6  6F85               	movwf	___lldiv@counter& (0+255),b
 30073  007EC8  D009               	goto	l13220
 30074  007ECA                     l13218:
 30075                           
 30076                           ; BSR set to: 0
 30077  007ECA  0100               	movlb	0	; () banked
 30078  007ECC  90D8               	bcf	status,0,c
 30079  007ECE  377D               	rlcf	___lldiv@divisor& (0+255),f,b
 30080  007ED0  377E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 30081  007ED2  377F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 30082  007ED4  3780               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 30083  007ED6  0100               	movlb	0	; () banked
 30084  007ED8  2B85               	incf	___lldiv@counter& (0+255),f,b
 30085  007EDA  D000               	goto	l13220
 30086  007EDC                     l13220:
 30087                           
 30088                           ; BSR set to: 0
 30089  007EDC  0100               	movlb	0	; () banked
 30090  007EDE  BF80               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 30091  007EE0  D002               	goto	l13222
 30092  007EE2  D7F3               	goto	l13218
 30093                           
 30094                           ; BSR set to: 0
 30095  007EE4  D000               	goto	l13222
 30096  007EE6                     l13222:
 30097                           
 30098                           ; BSR set to: 0
 30099  007EE6  0100               	movlb	0	; () banked
 30100  007EE8  90D8               	bcf	status,0,c
 30101  007EEA  3781               	rlcf	___lldiv@quotient& (0+255),f,b
 30102  007EEC  3782               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 30103  007EEE  3783               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 30104  007EF0  3784               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 30105                           
 30106                           ; BSR set to: 0
 30107  007EF2  0100               	movlb	0	; () banked
 30108  007EF4  517D               	movf	___lldiv@divisor& (0+255),w,b
 30109  007EF6  0100               	movlb	0	; () banked
 30110  007EF8  5D79               	subwf	___lldiv@dividend& (0+255),w,b
 30111  007EFA  0100               	movlb	0	; () banked
 30112  007EFC  517E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30113  007EFE  0100               	movlb	0	; () banked
 30114  007F00  597A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 30115  007F02  0100               	movlb	0	; () banked
 30116  007F04  517F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30117  007F06  0100               	movlb	0	; () banked
 30118  007F08  597B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 30119  007F0A  0100               	movlb	0	; () banked
 30120  007F0C  5180               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30121  007F0E  0100               	movlb	0	; () banked
 30122  007F10  597C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 30123  007F12  A0D8               	btfss	status,0,c
 30124  007F14  D013               	goto	l13230
 30125                           
 30126                           ; BSR set to: 0
 30127  007F16  0100               	movlb	0	; () banked
 30128  007F18  517D               	movf	___lldiv@divisor& (0+255),w,b
 30129  007F1A  0100               	movlb	0	; () banked
 30130  007F1C  5F79               	subwf	___lldiv@dividend& (0+255),f,b
 30131  007F1E  0100               	movlb	0	; () banked
 30132  007F20  517E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30133  007F22  0100               	movlb	0	; () banked
 30134  007F24  5B7A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 30135  007F26  0100               	movlb	0	; () banked
 30136  007F28  517F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30137  007F2A  0100               	movlb	0	; () banked
 30138  007F2C  5B7B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 30139  007F2E  0100               	movlb	0	; () banked
 30140  007F30  5180               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30141  007F32  0100               	movlb	0	; () banked
 30142  007F34  5B7C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 30143                           
 30144                           ; BSR set to: 0
 30145  007F36  0100               	movlb	0	; () banked
 30146  007F38  8181               	bsf	___lldiv@quotient& (0+255),0,b
 30147  007F3A  D000               	goto	l13230
 30148  007F3C                     l13230:
 30149                           
 30150                           ; BSR set to: 0
 30151  007F3C  0100               	movlb	0	; () banked
 30152  007F3E  90D8               	bcf	status,0,c
 30153  007F40  3380               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 30154  007F42  337F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 30155  007F44  337E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 30156  007F46  337D               	rrcf	___lldiv@divisor& (0+255),f,b
 30157                           
 30158                           ; BSR set to: 0
 30159  007F48  0100               	movlb	0	; () banked
 30160  007F4A  2F85               	decfsz	___lldiv@counter& (0+255),f,b
 30161  007F4C  D7CC               	goto	l13222
 30162  007F4E  D000               	goto	l2818
 30163  007F50                     l2818:
 30164                           
 30165                           ; BSR set to: 0
 30166  007F50  C081  F079         	movff	___lldiv@quotient,?___lldiv
 30167  007F54  C082  F07A         	movff	___lldiv@quotient+1,?___lldiv+1
 30168  007F58  C083  F07B         	movff	___lldiv@quotient+2,?___lldiv+2
 30169  007F5C  C084  F07C         	movff	___lldiv@quotient+3,?___lldiv+3
 30170                           
 30171                           ; BSR set to: 0
 30172  007F60  0012               	return		;funcret
 30173  007F62                     __end_of___lldiv:
 30174                           	opt stack 0
 30175                           tblptru	equ	0xFF8
 30176                           tblptrh	equ	0xFF7
 30177                           tblptrl	equ	0xFF6
 30178                           tablat	equ	0xFF5
 30179                           prodh	equ	0xFF4
 30180                           prodl	equ	0xFF3
 30181                           intcon	equ	0xFF2
 30182                           intcon2	equ	0xFF1
 30183                           indf0	equ	0xFEF
 30184                           postinc0	equ	0xFEE
 30185                           fsr0h	equ	0xFEA
 30186                           fsr0l	equ	0xFE9
 30187                           wreg	equ	0xFE8
 30188                           indf1	equ	0xFE7
 30189                           postdec1	equ	0xFE5
 30190                           fsr1h	equ	0xFE2
 30191                           fsr1l	equ	0xFE1
 30192                           indf2	equ	0xFDF
 30193                           postinc2	equ	0xFDE
 30194                           postdec2	equ	0xFDD
 30195                           fsr2h	equ	0xFDA
 30196                           fsr2l	equ	0xFD9
 30197                           status	equ	0xFD8
 30198                           
 30199 ;; *************** function ___fttol *****************
 30200 ;; Defined at:
 30201 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 30202 ;; Parameters:    Size  Location     Type
 30203 ;;  f1              3   88[BANK0 ] float 
 30204 ;; Auto vars:     Size  Location     Type
 30205 ;;  lval            4   98[BANK0 ] unsigned long 
 30206 ;;  exp1            1  102[BANK0 ] unsigned char 
 30207 ;;  sign1           1   97[BANK0 ] unsigned char 
 30208 ;; Return value:  Size  Location     Type
 30209 ;;                  4   88[BANK0 ] long 
 30210 ;; Registers used:
 30211 ;;		wreg, status,2, status,0
 30212 ;; Tracked objects:
 30213 ;;		On entry : 0/0
 30214 ;;		On exit  : 0/0
 30215 ;;		Unchanged: 0/0
 30216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30217 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30218 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30219 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30220 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30221 ;;Total ram usage:       15 bytes
 30222 ;; Hardware stack levels used:    1
 30223 ;; Hardware stack levels required when called:    6
 30224 ;; This function calls:
 30225 ;;		Nothing
 30226 ;; This function is called by:
 30227 ;;		_Round
 30228 ;;		_InitUART
 30229 ;;		_sprintf
 30230 ;; This function uses a non-reentrant model
 30231 ;;
 30232                           
 30233                           	psect	text72
 30234  0070EC                     __ptext72:
 30235                           	opt stack 0
 30236  0070EC                     ___fttol:
 30237                           	opt stack 22
 30238                           
 30239                           ; BSR set to: 0
 30240                           ;incstack = 0
 30241  0070EC  C0BA  F0BC         	movff	___fttol@f1+2,??___fttol
 30242  0070F0  0100               	movlb	0	; () banked
 30243  0070F2  6BBD               	clrf	(??___fttol+1)& (0+255),b
 30244  0070F4  6BBE               	clrf	(??___fttol+2)& (0+255),b
 30245  0070F6  0100               	movlb	0	; () banked
 30246  0070F8  35B9               	rlcf	(___fttol@f1+1)& (0+255),w,b
 30247  0070FA  0100               	movlb	0	; () banked
 30248  0070FC  37BC               	rlcf	??___fttol& (0+255),f,b
 30249  0070FE  E301               	bnc	u15671
 30250  007100  81BD               	bsf	(??___fttol+1)& (0+255),0,b
 30251  007102                     u15671:
 30252  007102  0100               	movlb	0	; () banked
 30253  007104  51BC               	movf	??___fttol& (0+255),w,b
 30254  007106  0100               	movlb	0	; () banked
 30255  007108  6FC6               	movwf	___fttol@exp1& (0+255),b
 30256  00710A  0100               	movlb	0	; () banked
 30257  00710C  51C6               	movf	___fttol@exp1& (0+255),w,b
 30258  00710E  A4D8               	btfss	status,2,c
 30259  007110  D00A               	goto	l13172
 30260                           
 30261                           ; BSR set to: 0
 30262  007112  0E00               	movlw	0
 30263  007114  0100               	movlb	0	; () banked
 30264  007116  6FB8               	movwf	?___fttol& (0+255),b
 30265  007118  0E00               	movlw	0
 30266  00711A  6FB9               	movwf	(?___fttol+1)& (0+255),b
 30267  00711C  0E00               	movlw	0
 30268  00711E  6FBA               	movwf	(?___fttol+2)& (0+255),b
 30269  007120  0E00               	movlw	0
 30270  007122  6FBB               	movwf	(?___fttol+3)& (0+255),b
 30271                           
 30272                           ; BSR set to: 0
 30273  007124  0012               	return	
 30274  007126                     l13172:
 30275                           
 30276                           ; BSR set to: 0
 30277  007126  0E17               	movlw	23
 30278  007128  0100               	movlb	0	; () banked
 30279  00712A  6FBC               	movwf	??___fttol& (0+255),b
 30280  00712C  C0B8  F0BD         	movff	___fttol@f1,??___fttol+1
 30281  007130  C0B9  F0BE         	movff	___fttol@f1+1,??___fttol+2
 30282  007134  C0BA  F0BF         	movff	___fttol@f1+2,??___fttol+3
 30283  007138  0100               	movlb	0	; () banked
 30284  00713A  29BC               	incf	??___fttol& (0+255),w,b
 30285  00713C  0100               	movlb	0	; () banked
 30286  00713E  6FC0               	movwf	(??___fttol+4)& (0+255),b
 30287  007140  D005               	goto	u15690
 30288  007142                     u15695:
 30289  007142  0100               	movlb	0	; () banked
 30290  007144  90D8               	bcf	status,0,c
 30291  007146  33BF               	rrcf	(??___fttol+3)& (0+255),f,b
 30292  007148  33BE               	rrcf	(??___fttol+2)& (0+255),f,b
 30293  00714A  33BD               	rrcf	(??___fttol+1)& (0+255),f,b
 30294  00714C                     u15690:
 30295  00714C  0100               	movlb	0	; () banked
 30296  00714E  2FC0               	decfsz	(??___fttol+4)& (0+255),f,b
 30297  007150  D7F8               	goto	u15695
 30298  007152  0100               	movlb	0	; () banked
 30299  007154  51BD               	movf	(??___fttol+1)& (0+255),w,b
 30300  007156  0100               	movlb	0	; () banked
 30301  007158  6FC1               	movwf	___fttol@sign1& (0+255),b
 30302                           
 30303                           ; BSR set to: 0
 30304  00715A  0100               	movlb	0	; () banked
 30305  00715C  8FB9               	bsf	(___fttol@f1+1)& (0+255),7,b
 30306                           
 30307                           ; BSR set to: 0
 30308  00715E  0EFF               	movlw	255
 30309  007160  0100               	movlb	0	; () banked
 30310  007162  17B8               	andwf	___fttol@f1& (0+255),f,b
 30311  007164  0EFF               	movlw	255
 30312  007166  0100               	movlb	0	; () banked
 30313  007168  17B9               	andwf	(___fttol@f1+1)& (0+255),f,b
 30314  00716A  0E00               	movlw	0
 30315  00716C  0100               	movlb	0	; () banked
 30316  00716E  17BA               	andwf	(___fttol@f1+2)& (0+255),f,b
 30317                           
 30318                           ; BSR set to: 0
 30319  007170  0100               	movlb	0	; () banked
 30320  007172  51B8               	movf	___fttol@f1& (0+255),w,b
 30321  007174  0100               	movlb	0	; () banked
 30322  007176  6FC2               	movwf	___fttol@lval& (0+255),b
 30323  007178  0100               	movlb	0	; () banked
 30324  00717A  51B9               	movf	(___fttol@f1+1)& (0+255),w,b
 30325  00717C  0100               	movlb	0	; () banked
 30326  00717E  6FC3               	movwf	(___fttol@lval+1)& (0+255),b
 30327  007180  0100               	movlb	0	; () banked
 30328  007182  51BA               	movf	(___fttol@f1+2)& (0+255),w,b
 30329  007184  0100               	movlb	0	; () banked
 30330  007186  6FC4               	movwf	(___fttol@lval+2)& (0+255),b
 30331  007188  0100               	movlb	0	; () banked
 30332  00718A  6BC5               	clrf	(___fttol@lval+3)& (0+255),b
 30333                           
 30334                           ; BSR set to: 0
 30335  00718C  0E8E               	movlw	142
 30336  00718E  0100               	movlb	0	; () banked
 30337  007190  5FC6               	subwf	___fttol@exp1& (0+255),f,b
 30338                           
 30339                           ; BSR set to: 0
 30340  007192  0100               	movlb	0	; () banked
 30341  007194  AFC6               	btfss	___fttol@exp1& (0+255),7,b
 30342  007196  D01B               	goto	l13194
 30343                           
 30344                           ; BSR set to: 0
 30345  007198  0100               	movlb	0	; () banked
 30346  00719A  51C6               	movf	___fttol@exp1& (0+255),w,b
 30347  00719C  0A80               	xorlw	128
 30348  00719E  0F8F               	addlw	143
 30349  0071A0  B0D8               	btfsc	status,0,c
 30350  0071A2  D00B               	goto	l13190
 30351                           
 30352                           ; BSR set to: 0
 30353  0071A4  0E00               	movlw	0
 30354  0071A6  0100               	movlb	0	; () banked
 30355  0071A8  6FB8               	movwf	?___fttol& (0+255),b
 30356  0071AA  0E00               	movlw	0
 30357  0071AC  6FB9               	movwf	(?___fttol+1)& (0+255),b
 30358  0071AE  0E00               	movlw	0
 30359  0071B0  6FBA               	movwf	(?___fttol+2)& (0+255),b
 30360  0071B2  0E00               	movlw	0
 30361  0071B4  6FBB               	movwf	(?___fttol+3)& (0+255),b
 30362                           
 30363                           ; BSR set to: 0
 30364  0071B6  0012               	return	
 30365                           
 30366                           ; BSR set to: 0
 30367  0071B8  D000               	goto	l13190
 30368  0071BA                     l13190:
 30369                           
 30370                           ; BSR set to: 0
 30371  0071BA  0100               	movlb	0	; () banked
 30372  0071BC  90D8               	bcf	status,0,c
 30373  0071BE  33C5               	rrcf	(___fttol@lval+3)& (0+255),f,b
 30374  0071C0  33C4               	rrcf	(___fttol@lval+2)& (0+255),f,b
 30375  0071C2  33C3               	rrcf	(___fttol@lval+1)& (0+255),f,b
 30376  0071C4  33C2               	rrcf	___fttol@lval& (0+255),f,b
 30377                           
 30378                           ; BSR set to: 0
 30379  0071C6  0100               	movlb	0	; () banked
 30380  0071C8  3FC6               	incfsz	___fttol@exp1& (0+255),f,b
 30381  0071CA  D7F7               	goto	l13190
 30382                           
 30383                           ; BSR set to: 0
 30384  0071CC  D01F               	goto	l13204
 30385  0071CE                     l13194:
 30386                           
 30387                           ; BSR set to: 0
 30388  0071CE  0E17               	movlw	23
 30389  0071D0  0100               	movlb	0	; () banked
 30390  0071D2  65C6               	cpfsgt	___fttol@exp1& (0+255),b
 30391  0071D4  D014               	goto	l13202
 30392                           
 30393                           ; BSR set to: 0
 30394  0071D6  0E00               	movlw	0
 30395  0071D8  0100               	movlb	0	; () banked
 30396  0071DA  6FB8               	movwf	?___fttol& (0+255),b
 30397  0071DC  0E00               	movlw	0
 30398  0071DE  6FB9               	movwf	(?___fttol+1)& (0+255),b
 30399  0071E0  0E00               	movlw	0
 30400  0071E2  6FBA               	movwf	(?___fttol+2)& (0+255),b
 30401  0071E4  0E00               	movlw	0
 30402  0071E6  6FBB               	movwf	(?___fttol+3)& (0+255),b
 30403                           
 30404                           ; BSR set to: 0
 30405  0071E8  0012               	return	
 30406                           
 30407                           ; BSR set to: 0
 30408  0071EA  D009               	goto	l13202
 30409  0071EC                     l13200:
 30410                           
 30411                           ; BSR set to: 0
 30412  0071EC  0100               	movlb	0	; () banked
 30413  0071EE  90D8               	bcf	status,0,c
 30414  0071F0  37C2               	rlcf	___fttol@lval& (0+255),f,b
 30415  0071F2  37C3               	rlcf	(___fttol@lval+1)& (0+255),f,b
 30416  0071F4  37C4               	rlcf	(___fttol@lval+2)& (0+255),f,b
 30417  0071F6  37C5               	rlcf	(___fttol@lval+3)& (0+255),f,b
 30418  0071F8  0100               	movlb	0	; () banked
 30419  0071FA  07C6               	decf	___fttol@exp1& (0+255),f,b
 30420  0071FC  D000               	goto	l13202
 30421  0071FE                     l13202:
 30422                           
 30423                           ; BSR set to: 0
 30424  0071FE  0100               	movlb	0	; () banked
 30425  007200  51C6               	movf	___fttol@exp1& (0+255),w,b
 30426  007202  0100               	movlb	0	; () banked
 30427  007204  B4D8               	btfsc	status,2,c
 30428  007206  D002               	goto	l13204
 30429  007208  D7F1               	goto	l13200
 30430                           
 30431                           ; BSR set to: 0
 30432  00720A  D000               	goto	l13204
 30433  00720C                     l13204:
 30434                           
 30435                           ; BSR set to: 0
 30436  00720C  0100               	movlb	0	; () banked
 30437  00720E  51C1               	movf	___fttol@sign1& (0+255),w,b
 30438  007210  0100               	movlb	0	; () banked
 30439  007212  B4D8               	btfsc	status,2,c
 30440  007214  D00A               	goto	l13208
 30441                           
 30442                           ; BSR set to: 0
 30443  007216  0100               	movlb	0	; () banked
 30444  007218  1FC5               	comf	(___fttol@lval+3)& (0+255),f,b
 30445  00721A  1FC4               	comf	(___fttol@lval+2)& (0+255),f,b
 30446  00721C  1FC3               	comf	(___fttol@lval+1)& (0+255),f,b
 30447  00721E  6DC2               	negf	___fttol@lval& (0+255),b
 30448  007220  0E00               	movlw	0
 30449  007222  23C3               	addwfc	(___fttol@lval+1)& (0+255),f,b
 30450  007224  23C4               	addwfc	(___fttol@lval+2)& (0+255),f,b
 30451  007226  23C5               	addwfc	(___fttol@lval+3)& (0+255),f,b
 30452  007228  D000               	goto	l13208
 30453  00722A                     l13208:
 30454                           
 30455                           ; BSR set to: 0
 30456  00722A  C0C2  F0B8         	movff	___fttol@lval,?___fttol
 30457  00722E  C0C3  F0B9         	movff	___fttol@lval+1,?___fttol+1
 30458  007232  C0C4  F0BA         	movff	___fttol@lval+2,?___fttol+2
 30459  007236  C0C5  F0BB         	movff	___fttol@lval+3,?___fttol+3
 30460  00723A  0012               	return	
 30461                           
 30462                           ; BSR set to: 0
 30463                           
 30464                           ; BSR set to: 0
 30465  00723C  0012               	return		;funcret
 30466  00723E                     __end_of___fttol:
 30467                           	opt stack 0
 30468                           tblptru	equ	0xFF8
 30469                           tblptrh	equ	0xFF7
 30470                           tblptrl	equ	0xFF6
 30471                           tablat	equ	0xFF5
 30472                           prodh	equ	0xFF4
 30473                           prodl	equ	0xFF3
 30474                           intcon	equ	0xFF2
 30475                           intcon2	equ	0xFF1
 30476                           indf0	equ	0xFEF
 30477                           postinc0	equ	0xFEE
 30478                           fsr0h	equ	0xFEA
 30479                           fsr0l	equ	0xFE9
 30480                           wreg	equ	0xFE8
 30481                           indf1	equ	0xFE7
 30482                           postdec1	equ	0xFE5
 30483                           fsr1h	equ	0xFE2
 30484                           fsr1l	equ	0xFE1
 30485                           indf2	equ	0xFDF
 30486                           postinc2	equ	0xFDE
 30487                           postdec2	equ	0xFDD
 30488                           fsr2h	equ	0xFDA
 30489                           fsr2l	equ	0xFD9
 30490                           status	equ	0xFD8
 30491                           
 30492 ;; *************** function ___ftsub *****************
 30493 ;; Defined at:
 30494 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
 30495 ;; Parameters:    Size  Location     Type
 30496 ;;  f1              3   88[BANK0 ] float 
 30497 ;;  f2              3   91[BANK0 ] float 
 30498 ;; Auto vars:     Size  Location     Type
 30499 ;;		None
 30500 ;; Return value:  Size  Location     Type
 30501 ;;                  3   88[BANK0 ] float 
 30502 ;; Registers used:
 30503 ;;		wreg, status,2, status,0, cstack
 30504 ;; Tracked objects:
 30505 ;;		On entry : 0/0
 30506 ;;		On exit  : 0/0
 30507 ;;		Unchanged: 0/0
 30508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30509 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30512 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30513 ;;Total ram usage:        6 bytes
 30514 ;; Hardware stack levels used:    1
 30515 ;; Hardware stack levels required when called:    8
 30516 ;; This function calls:
 30517 ;;		___ftadd
 30518 ;; This function is called by:
 30519 ;;		_main
 30520 ;;		_sprintf
 30521 ;; This function uses a non-reentrant model
 30522 ;;
 30523                           
 30524                           	psect	text73
 30525  008F3A                     __ptext73:
 30526                           	opt stack 0
 30527  008F3A                     ___ftsub:
 30528                           	opt stack 22
 30529                           
 30530                           ; BSR set to: 0
 30531                           ;incstack = 0
 30532  008F3A  0100               	movlb	0	; () banked
 30533  008F3C  51BB               	movf	___ftsub@f2& (0+255),w,b
 30534  008F3E  0100               	movlb	0	; () banked
 30535  008F40  11BC               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 30536  008F42  0100               	movlb	0	; () banked
 30537  008F44  11BD               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 30538  008F46  B4D8               	btfsc	status,2,c
 30539  008F48  D00A               	goto	l13140
 30540                           
 30541                           ; BSR set to: 0
 30542  008F4A  0E00               	movlw	0
 30543  008F4C  0100               	movlb	0	; () banked
 30544  008F4E  1BBB               	xorwf	___ftsub@f2& (0+255),f,b
 30545  008F50  0E00               	movlw	0
 30546  008F52  0100               	movlb	0	; () banked
 30547  008F54  1BBC               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 30548  008F56  0E80               	movlw	128
 30549  008F58  0100               	movlb	0	; () banked
 30550  008F5A  1BBD               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 30551  008F5C  D000               	goto	l13140
 30552  008F5E                     l13140:
 30553                           
 30554                           ; BSR set to: 0
 30555  008F5E  C0B8  F0AC         	movff	___ftsub@f1,___ftadd@f1
 30556  008F62  C0B9  F0AD         	movff	___ftsub@f1+1,___ftadd@f1+1
 30557  008F66  C0BA  F0AE         	movff	___ftsub@f1+2,___ftadd@f1+2
 30558  008F6A  C0BB  F0AF         	movff	___ftsub@f2,___ftadd@f2
 30559  008F6E  C0BC  F0B0         	movff	___ftsub@f2+1,___ftadd@f2+1
 30560  008F72  C0BD  F0B1         	movff	___ftsub@f2+2,___ftadd@f2+2
 30561  008F76  EC80  F02D         	call	___ftadd	;wreg free
 30562  008F7A  C0AC  F0B8         	movff	?___ftadd,?___ftsub
 30563  008F7E  C0AD  F0B9         	movff	?___ftadd+1,?___ftsub+1
 30564  008F82  C0AE  F0BA         	movff	?___ftadd+2,?___ftsub+2
 30565  008F86  0012               	return	
 30566  008F88  0012               	return		;funcret
 30567  008F8A                     __end_of___ftsub:
 30568                           	opt stack 0
 30569                           tblptru	equ	0xFF8
 30570                           tblptrh	equ	0xFF7
 30571                           tblptrl	equ	0xFF6
 30572                           tablat	equ	0xFF5
 30573                           prodh	equ	0xFF4
 30574                           prodl	equ	0xFF3
 30575                           intcon	equ	0xFF2
 30576                           intcon2	equ	0xFF1
 30577                           indf0	equ	0xFEF
 30578                           postinc0	equ	0xFEE
 30579                           fsr0h	equ	0xFEA
 30580                           fsr0l	equ	0xFE9
 30581                           wreg	equ	0xFE8
 30582                           indf1	equ	0xFE7
 30583                           postdec1	equ	0xFE5
 30584                           fsr1h	equ	0xFE2
 30585                           fsr1l	equ	0xFE1
 30586                           indf2	equ	0xFDF
 30587                           postinc2	equ	0xFDE
 30588                           postdec2	equ	0xFDD
 30589                           fsr2h	equ	0xFDA
 30590                           fsr2l	equ	0xFD9
 30591                           status	equ	0xFD8
 30592                           
 30593 ;; *************** function ___ftadd *****************
 30594 ;; Defined at:
 30595 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
 30596 ;; Parameters:    Size  Location     Type
 30597 ;;  f1              3   76[BANK0 ] float 
 30598 ;;  f2              3   79[BANK0 ] float 
 30599 ;; Auto vars:     Size  Location     Type
 30600 ;;  exp1            1   87[BANK0 ] unsigned char 
 30601 ;;  exp2            1   86[BANK0 ] unsigned char 
 30602 ;;  sign            1   85[BANK0 ] unsigned char 
 30603 ;; Return value:  Size  Location     Type
 30604 ;;                  3   76[BANK0 ] float 
 30605 ;; Registers used:
 30606 ;;		wreg, status,2, status,0, cstack
 30607 ;; Tracked objects:
 30608 ;;		On entry : 0/0
 30609 ;;		On exit  : 0/0
 30610 ;;		Unchanged: 0/0
 30611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30612 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30613 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30614 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30615 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30616 ;;Total ram usage:       12 bytes
 30617 ;; Hardware stack levels used:    1
 30618 ;; Hardware stack levels required when called:    7
 30619 ;; This function calls:
 30620 ;;		___ftpack
 30621 ;; This function is called by:
 30622 ;;		_main
 30623 ;;		_Round
 30624 ;;		_sprintf
 30625 ;;		___ftsub
 30626 ;; This function uses a non-reentrant model
 30627 ;;
 30628                           
 30629                           	psect	text74
 30630  005B00                     __ptext74:
 30631                           	opt stack 0
 30632  005B00                     ___ftadd:
 30633                           	opt stack 22
 30634                           
 30635                           ;incstack = 0
 30636  005B00  C0AE  F0B2         	movff	___ftadd@f1+2,??___ftadd
 30637  005B04  0100               	movlb	0	; () banked
 30638  005B06  6BB3               	clrf	(??___ftadd+1)& (0+255),b
 30639  005B08  6BB4               	clrf	(??___ftadd+2)& (0+255),b
 30640  005B0A  0100               	movlb	0	; () banked
 30641  005B0C  35AD               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 30642  005B0E  0100               	movlb	0	; () banked
 30643  005B10  37B2               	rlcf	??___ftadd& (0+255),f,b
 30644  005B12  E301               	bnc	u14661
 30645  005B14  81B3               	bsf	(??___ftadd+1)& (0+255),0,b
 30646  005B16                     u14661:
 30647  005B16  0100               	movlb	0	; () banked
 30648  005B18  51B2               	movf	??___ftadd& (0+255),w,b
 30649  005B1A  0100               	movlb	0	; () banked
 30650  005B1C  6FB7               	movwf	___ftadd@exp1& (0+255),b
 30651  005B1E  C0B1  F0B2         	movff	___ftadd@f2+2,??___ftadd
 30652  005B22  0100               	movlb	0	; () banked
 30653  005B24  6BB3               	clrf	(??___ftadd+1)& (0+255),b
 30654  005B26  6BB4               	clrf	(??___ftadd+2)& (0+255),b
 30655  005B28  0100               	movlb	0	; () banked
 30656  005B2A  35B0               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 30657  005B2C  0100               	movlb	0	; () banked
 30658  005B2E  37B2               	rlcf	??___ftadd& (0+255),f,b
 30659  005B30  E301               	bnc	u14671
 30660  005B32  81B3               	bsf	(??___ftadd+1)& (0+255),0,b
 30661  005B34                     u14671:
 30662  005B34  0100               	movlb	0	; () banked
 30663  005B36  51B2               	movf	??___ftadd& (0+255),w,b
 30664  005B38  0100               	movlb	0	; () banked
 30665  005B3A  6FB6               	movwf	___ftadd@exp2& (0+255),b
 30666                           
 30667                           ; BSR set to: 0
 30668  005B3C  0100               	movlb	0	; () banked
 30669  005B3E  51B7               	movf	___ftadd@exp1& (0+255),w,b
 30670  005B40  0100               	movlb	0	; () banked
 30671  005B42  B4D8               	btfsc	status,2,c
 30672  005B44  D011               	goto	l2689
 30673                           
 30674                           ; BSR set to: 0
 30675  005B46  0100               	movlb	0	; () banked
 30676  005B48  51B6               	movf	___ftadd@exp2& (0+255),w,b
 30677  005B4A  0100               	movlb	0	; () banked
 30678  005B4C  5DB7               	subwf	___ftadd@exp1& (0+255),w,b
 30679  005B4E  B0D8               	btfsc	status,0,c
 30680  005B50  D012               	goto	l12610
 30681                           
 30682                           ; BSR set to: 0
 30683  005B52  0100               	movlb	0	; () banked
 30684  005B54  51B7               	movf	___ftadd@exp1& (0+255),w,b
 30685  005B56  0800               	sublw	0
 30686  005B58  0100               	movlb	0	; () banked
 30687  005B5A  25B6               	addwf	___ftadd@exp2& (0+255),w,b
 30688  005B5C  0100               	movlb	0	; () banked
 30689  005B5E  6FB2               	movwf	??___ftadd& (0+255),b
 30690  005B60  0E18               	movlw	24
 30691  005B62  0100               	movlb	0	; () banked
 30692  005B64  65B2               	cpfsgt	??___ftadd& (0+255),b
 30693  005B66  D007               	goto	l12610
 30694  005B68                     l2689:
 30695                           
 30696                           ; BSR set to: 0
 30697  005B68  C0AF  F0AC         	movff	___ftadd@f2,?___ftadd
 30698  005B6C  C0B0  F0AD         	movff	___ftadd@f2+1,?___ftadd+1
 30699  005B70  C0B1  F0AE         	movff	___ftadd@f2+2,?___ftadd+2
 30700  005B74  0012               	return	
 30701  005B76                     l12610:
 30702                           
 30703                           ; BSR set to: 0
 30704  005B76  0100               	movlb	0	; () banked
 30705  005B78  51B6               	movf	___ftadd@exp2& (0+255),w,b
 30706  005B7A  0100               	movlb	0	; () banked
 30707  005B7C  B4D8               	btfsc	status,2,c
 30708  005B7E  D011               	goto	l2693
 30709                           
 30710                           ; BSR set to: 0
 30711  005B80  0100               	movlb	0	; () banked
 30712  005B82  51B7               	movf	___ftadd@exp1& (0+255),w,b
 30713  005B84  0100               	movlb	0	; () banked
 30714  005B86  5DB6               	subwf	___ftadd@exp2& (0+255),w,b
 30715  005B88  B0D8               	btfsc	status,0,c
 30716  005B8A  D012               	goto	l12616
 30717                           
 30718                           ; BSR set to: 0
 30719  005B8C  0100               	movlb	0	; () banked
 30720  005B8E  51B6               	movf	___ftadd@exp2& (0+255),w,b
 30721  005B90  0800               	sublw	0
 30722  005B92  0100               	movlb	0	; () banked
 30723  005B94  25B7               	addwf	___ftadd@exp1& (0+255),w,b
 30724  005B96  0100               	movlb	0	; () banked
 30725  005B98  6FB2               	movwf	??___ftadd& (0+255),b
 30726  005B9A  0E18               	movlw	24
 30727  005B9C  0100               	movlb	0	; () banked
 30728  005B9E  65B2               	cpfsgt	??___ftadd& (0+255),b
 30729  005BA0  D007               	goto	l12616
 30730  005BA2                     l2693:
 30731                           
 30732                           ; BSR set to: 0
 30733  005BA2  C0AC  F0AC         	movff	___ftadd@f1,?___ftadd
 30734  005BA6  C0AD  F0AD         	movff	___ftadd@f1+1,?___ftadd+1
 30735  005BAA  C0AE  F0AE         	movff	___ftadd@f1+2,?___ftadd+2
 30736  005BAE  0012               	return	
 30737  005BB0                     l12616:
 30738                           
 30739                           ; BSR set to: 0
 30740  005BB0  0E06               	movlw	6
 30741  005BB2  0100               	movlb	0	; () banked
 30742  005BB4  6FB5               	movwf	___ftadd@sign& (0+255),b
 30743                           
 30744                           ; BSR set to: 0
 30745  005BB6  0100               	movlb	0	; () banked
 30746  005BB8  AFAE               	btfss	(___ftadd@f1+2)& (0+255),7,b
 30747  005BBA  D003               	goto	l12622
 30748                           
 30749                           ; BSR set to: 0
 30750  005BBC  0100               	movlb	0	; () banked
 30751  005BBE  8FB5               	bsf	___ftadd@sign& (0+255),7,b
 30752  005BC0  D000               	goto	l12622
 30753  005BC2                     l12622:
 30754                           
 30755                           ; BSR set to: 0
 30756  005BC2  0100               	movlb	0	; () banked
 30757  005BC4  AFB1               	btfss	(___ftadd@f2+2)& (0+255),7,b
 30758  005BC6  D002               	goto	l2695
 30759                           
 30760                           ; BSR set to: 0
 30761  005BC8  0100               	movlb	0	; () banked
 30762  005BCA  8DB5               	bsf	___ftadd@sign& (0+255),6,b
 30763  005BCC                     l2695:
 30764                           
 30765                           ; BSR set to: 0
 30766  005BCC  0100               	movlb	0	; () banked
 30767  005BCE  8FAD               	bsf	(___ftadd@f1+1)& (0+255),7,b
 30768                           
 30769                           ; BSR set to: 0
 30770  005BD0  0EFF               	movlw	255
 30771  005BD2  0100               	movlb	0	; () banked
 30772  005BD4  17AC               	andwf	___ftadd@f1& (0+255),f,b
 30773  005BD6  0EFF               	movlw	255
 30774  005BD8  0100               	movlb	0	; () banked
 30775  005BDA  17AD               	andwf	(___ftadd@f1+1)& (0+255),f,b
 30776  005BDC  0E00               	movlw	0
 30777  005BDE  0100               	movlb	0	; () banked
 30778  005BE0  17AE               	andwf	(___ftadd@f1+2)& (0+255),f,b
 30779  005BE2  0100               	movlb	0	; () banked
 30780  005BE4  8FB0               	bsf	(___ftadd@f2+1)& (0+255),7,b
 30781                           
 30782                           ; BSR set to: 0
 30783  005BE6  0EFF               	movlw	255
 30784  005BE8  0100               	movlb	0	; () banked
 30785  005BEA  17AF               	andwf	___ftadd@f2& (0+255),f,b
 30786  005BEC  0EFF               	movlw	255
 30787  005BEE  0100               	movlb	0	; () banked
 30788  005BF0  17B0               	andwf	(___ftadd@f2+1)& (0+255),f,b
 30789  005BF2  0E00               	movlw	0
 30790  005BF4  0100               	movlb	0	; () banked
 30791  005BF6  17B1               	andwf	(___ftadd@f2+2)& (0+255),f,b
 30792                           
 30793                           ; BSR set to: 0
 30794  005BF8  0100               	movlb	0	; () banked
 30795  005BFA  51B6               	movf	___ftadd@exp2& (0+255),w,b
 30796  005BFC  0100               	movlb	0	; () banked
 30797  005BFE  5DB7               	subwf	___ftadd@exp1& (0+255),w,b
 30798  005C00  B0D8               	btfsc	status,0,c
 30799  005C02  D028               	goto	l12642
 30800  005C04                     l12632:
 30801                           
 30802                           ; BSR set to: 0
 30803  005C04  0100               	movlb	0	; () banked
 30804  005C06  90D8               	bcf	status,0,c
 30805  005C08  37AF               	rlcf	___ftadd@f2& (0+255),f,b
 30806  005C0A  37B0               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 30807  005C0C  37B1               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 30808  005C0E  0100               	movlb	0	; () banked
 30809  005C10  07B6               	decf	___ftadd@exp2& (0+255),f,b
 30810                           
 30811                           ; BSR set to: 0
 30812  005C12  0100               	movlb	0	; () banked
 30813  005C14  51B7               	movf	___ftadd@exp1& (0+255),w,b
 30814  005C16  0100               	movlb	0	; () banked
 30815  005C18  19B6               	xorwf	___ftadd@exp2& (0+255),w,b
 30816  005C1A  B4D8               	btfsc	status,2,c
 30817  005C1C  D013               	goto	l12640
 30818                           
 30819                           ; BSR set to: 0
 30820  005C1E  0100               	movlb	0	; () banked
 30821  005C20  07B5               	decf	___ftadd@sign& (0+255),f,b
 30822  005C22  C0B5  F0B2         	movff	___ftadd@sign,??___ftadd
 30823  005C26  0E07               	movlw	7
 30824  005C28  0100               	movlb	0	; () banked
 30825  005C2A  17B2               	andwf	??___ftadd& (0+255),f,b
 30826  005C2C  B4D8               	btfsc	status,2,c
 30827  005C2E  D00A               	goto	l12640
 30828  005C30  D7E9               	goto	l12632
 30829                           
 30830                           ; BSR set to: 0
 30831                           
 30832                           ; BSR set to: 0
 30833  005C32  D008               	goto	l12640
 30834  005C34                     l12638:
 30835                           
 30836                           ; BSR set to: 0
 30837  005C34  0100               	movlb	0	; () banked
 30838  005C36  90D8               	bcf	status,0,c
 30839  005C38  33AE               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 30840  005C3A  33AD               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 30841  005C3C  33AC               	rrcf	___ftadd@f1& (0+255),f,b
 30842  005C3E  0100               	movlb	0	; () banked
 30843  005C40  2BB7               	incf	___ftadd@exp1& (0+255),f,b
 30844  005C42  D000               	goto	l12640
 30845  005C44                     l12640:
 30846                           
 30847                           ; BSR set to: 0
 30848  005C44  0100               	movlb	0	; () banked
 30849  005C46  51B6               	movf	___ftadd@exp2& (0+255),w,b
 30850  005C48  0100               	movlb	0	; () banked
 30851  005C4A  19B7               	xorwf	___ftadd@exp1& (0+255),w,b
 30852  005C4C  B4D8               	btfsc	status,2,c
 30853  005C4E  D030               	goto	l2704
 30854  005C50  D7F1               	goto	l12638
 30855                           
 30856                           ; BSR set to: 0
 30857  005C52  D02E               	goto	l2704
 30858  005C54                     l12642:
 30859                           
 30860                           ; BSR set to: 0
 30861  005C54  0100               	movlb	0	; () banked
 30862  005C56  51B7               	movf	___ftadd@exp1& (0+255),w,b
 30863  005C58  0100               	movlb	0	; () banked
 30864  005C5A  5DB6               	subwf	___ftadd@exp2& (0+255),w,b
 30865  005C5C  B0D8               	btfsc	status,0,c
 30866  005C5E  D028               	goto	l2704
 30867  005C60                     l12644:
 30868                           
 30869                           ; BSR set to: 0
 30870  005C60  0100               	movlb	0	; () banked
 30871  005C62  90D8               	bcf	status,0,c
 30872  005C64  37AC               	rlcf	___ftadd@f1& (0+255),f,b
 30873  005C66  37AD               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 30874  005C68  37AE               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 30875  005C6A  0100               	movlb	0	; () banked
 30876  005C6C  07B7               	decf	___ftadd@exp1& (0+255),f,b
 30877                           
 30878                           ; BSR set to: 0
 30879  005C6E  0100               	movlb	0	; () banked
 30880  005C70  51B7               	movf	___ftadd@exp1& (0+255),w,b
 30881  005C72  0100               	movlb	0	; () banked
 30882  005C74  19B6               	xorwf	___ftadd@exp2& (0+255),w,b
 30883  005C76  B4D8               	btfsc	status,2,c
 30884  005C78  D013               	goto	l12652
 30885                           
 30886                           ; BSR set to: 0
 30887  005C7A  0100               	movlb	0	; () banked
 30888  005C7C  07B5               	decf	___ftadd@sign& (0+255),f,b
 30889  005C7E  C0B5  F0B2         	movff	___ftadd@sign,??___ftadd
 30890  005C82  0E07               	movlw	7
 30891  005C84  0100               	movlb	0	; () banked
 30892  005C86  17B2               	andwf	??___ftadd& (0+255),f,b
 30893  005C88  B4D8               	btfsc	status,2,c
 30894  005C8A  D00A               	goto	l12652
 30895  005C8C  D7E9               	goto	l12644
 30896                           
 30897                           ; BSR set to: 0
 30898                           
 30899                           ; BSR set to: 0
 30900  005C8E  D008               	goto	l12652
 30901  005C90                     l12650:
 30902                           
 30903                           ; BSR set to: 0
 30904  005C90  0100               	movlb	0	; () banked
 30905  005C92  90D8               	bcf	status,0,c
 30906  005C94  33B1               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 30907  005C96  33B0               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 30908  005C98  33AF               	rrcf	___ftadd@f2& (0+255),f,b
 30909  005C9A  0100               	movlb	0	; () banked
 30910  005C9C  2BB6               	incf	___ftadd@exp2& (0+255),f,b
 30911  005C9E  D000               	goto	l12652
 30912  005CA0                     l12652:
 30913                           
 30914                           ; BSR set to: 0
 30915  005CA0  0100               	movlb	0	; () banked
 30916  005CA2  51B6               	movf	___ftadd@exp2& (0+255),w,b
 30917  005CA4  0100               	movlb	0	; () banked
 30918  005CA6  19B7               	xorwf	___ftadd@exp1& (0+255),w,b
 30919  005CA8  B4D8               	btfsc	status,2,c
 30920  005CAA  D002               	goto	l2704
 30921  005CAC  D7F1               	goto	l12650
 30922                           
 30923                           ; BSR set to: 0
 30924  005CAE  D000               	goto	l2704
 30925  005CB0                     l2704:
 30926                           
 30927                           ; BSR set to: 0
 30928  005CB0  0100               	movlb	0	; () banked
 30929  005CB2  AFB5               	btfss	___ftadd@sign& (0+255),7,b
 30930  005CB4  D012               	goto	l2713
 30931                           
 30932                           ; BSR set to: 0
 30933  005CB6  0EFF               	movlw	255
 30934  005CB8  0100               	movlb	0	; () banked
 30935  005CBA  1BAC               	xorwf	___ftadd@f1& (0+255),f,b
 30936  005CBC  0EFF               	movlw	255
 30937  005CBE  0100               	movlb	0	; () banked
 30938  005CC0  1BAD               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 30939  005CC2  0EFF               	movlw	255
 30940  005CC4  0100               	movlb	0	; () banked
 30941  005CC6  1BAE               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 30942  005CC8  0E01               	movlw	1
 30943  005CCA  0100               	movlb	0	; () banked
 30944  005CCC  27AC               	addwf	___ftadd@f1& (0+255),f,b
 30945  005CCE  0E00               	movlw	0
 30946  005CD0  0100               	movlb	0	; () banked
 30947  005CD2  23AD               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 30948  005CD4  0E00               	movlw	0
 30949  005CD6  0100               	movlb	0	; () banked
 30950  005CD8  23AE               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 30951  005CDA                     l2713:
 30952                           
 30953                           ; BSR set to: 0
 30954  005CDA  0100               	movlb	0	; () banked
 30955  005CDC  ADB5               	btfss	___ftadd@sign& (0+255),6,b
 30956  005CDE  D013               	goto	l12658
 30957                           
 30958                           ; BSR set to: 0
 30959  005CE0  0EFF               	movlw	255
 30960  005CE2  0100               	movlb	0	; () banked
 30961  005CE4  1BAF               	xorwf	___ftadd@f2& (0+255),f,b
 30962  005CE6  0EFF               	movlw	255
 30963  005CE8  0100               	movlb	0	; () banked
 30964  005CEA  1BB0               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 30965  005CEC  0EFF               	movlw	255
 30966  005CEE  0100               	movlb	0	; () banked
 30967  005CF0  1BB1               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 30968  005CF2  0E01               	movlw	1
 30969  005CF4  0100               	movlb	0	; () banked
 30970  005CF6  27AF               	addwf	___ftadd@f2& (0+255),f,b
 30971  005CF8  0E00               	movlw	0
 30972  005CFA  0100               	movlb	0	; () banked
 30973  005CFC  23B0               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 30974  005CFE  0E00               	movlw	0
 30975  005D00  0100               	movlb	0	; () banked
 30976  005D02  23B1               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 30977  005D04  D000               	goto	l12658
 30978  005D06                     l12658:
 30979                           
 30980                           ; BSR set to: 0
 30981  005D06  0E00               	movlw	0
 30982  005D08  0100               	movlb	0	; () banked
 30983  005D0A  6FB5               	movwf	___ftadd@sign& (0+255),b
 30984                           
 30985                           ; BSR set to: 0
 30986  005D0C  0100               	movlb	0	; () banked
 30987  005D0E  51AC               	movf	___ftadd@f1& (0+255),w,b
 30988  005D10  0100               	movlb	0	; () banked
 30989  005D12  27AF               	addwf	___ftadd@f2& (0+255),f,b
 30990  005D14  0100               	movlb	0	; () banked
 30991  005D16  51AD               	movf	(___ftadd@f1+1)& (0+255),w,b
 30992  005D18  0100               	movlb	0	; () banked
 30993  005D1A  23B0               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 30994  005D1C  0100               	movlb	0	; () banked
 30995  005D1E  51AE               	movf	(___ftadd@f1+2)& (0+255),w,b
 30996  005D20  0100               	movlb	0	; () banked
 30997  005D22  23B1               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 30998                           
 30999                           ; BSR set to: 0
 31000  005D24  0100               	movlb	0	; () banked
 31001  005D26  AFB1               	btfss	(___ftadd@f2+2)& (0+255),7,b
 31002  005D28  D016               	goto	l12668
 31003                           
 31004                           ; BSR set to: 0
 31005  005D2A  0EFF               	movlw	255
 31006  005D2C  0100               	movlb	0	; () banked
 31007  005D2E  1BAF               	xorwf	___ftadd@f2& (0+255),f,b
 31008  005D30  0EFF               	movlw	255
 31009  005D32  0100               	movlb	0	; () banked
 31010  005D34  1BB0               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 31011  005D36  0EFF               	movlw	255
 31012  005D38  0100               	movlb	0	; () banked
 31013  005D3A  1BB1               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 31014  005D3C  0E01               	movlw	1
 31015  005D3E  0100               	movlb	0	; () banked
 31016  005D40  27AF               	addwf	___ftadd@f2& (0+255),f,b
 31017  005D42  0E00               	movlw	0
 31018  005D44  0100               	movlb	0	; () banked
 31019  005D46  23B0               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 31020  005D48  0E00               	movlw	0
 31021  005D4A  0100               	movlb	0	; () banked
 31022  005D4C  23B1               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 31023                           
 31024                           ; BSR set to: 0
 31025  005D4E  0E01               	movlw	1
 31026  005D50  0100               	movlb	0	; () banked
 31027  005D52  6FB5               	movwf	___ftadd@sign& (0+255),b
 31028  005D54  D000               	goto	l12668
 31029  005D56                     l12668:
 31030                           
 31031                           ; BSR set to: 0
 31032  005D56  C0AF  F079         	movff	___ftadd@f2,___ftpack@arg
 31033  005D5A  C0B0  F07A         	movff	___ftadd@f2+1,___ftpack@arg+1
 31034  005D5E  C0B1  F07B         	movff	___ftadd@f2+2,___ftpack@arg+2
 31035  005D62  C0B7  F07C         	movff	___ftadd@exp1,___ftpack@exp
 31036  005D66  C0B5  F07D         	movff	___ftadd@sign,___ftpack@sign
 31037  005D6A  ECED  F03A         	call	___ftpack	;wreg free
 31038  005D6E  C079  F0AC         	movff	?___ftpack,?___ftadd
 31039  005D72  C07A  F0AD         	movff	?___ftpack+1,?___ftadd+1
 31040  005D76  C07B  F0AE         	movff	?___ftpack+2,?___ftadd+2
 31041  005D7A  0012               	return	
 31042  005D7C  0012               	return		;funcret
 31043  005D7E                     __end_of___ftadd:
 31044                           	opt stack 0
 31045                           tblptru	equ	0xFF8
 31046                           tblptrh	equ	0xFF7
 31047                           tblptrl	equ	0xFF6
 31048                           tablat	equ	0xFF5
 31049                           prodh	equ	0xFF4
 31050                           prodl	equ	0xFF3
 31051                           intcon	equ	0xFF2
 31052                           intcon2	equ	0xFF1
 31053                           indf0	equ	0xFEF
 31054                           postinc0	equ	0xFEE
 31055                           fsr0h	equ	0xFEA
 31056                           fsr0l	equ	0xFE9
 31057                           wreg	equ	0xFE8
 31058                           indf1	equ	0xFE7
 31059                           postdec1	equ	0xFE5
 31060                           fsr1h	equ	0xFE2
 31061                           fsr1l	equ	0xFE1
 31062                           indf2	equ	0xFDF
 31063                           postinc2	equ	0xFDE
 31064                           postdec2	equ	0xFDD
 31065                           fsr2h	equ	0xFDA
 31066                           fsr2l	equ	0xFD9
 31067                           status	equ	0xFD8
 31068                           
 31069 ;; *************** function ___ftpack *****************
 31070 ;; Defined at:
 31071 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 31072 ;; Parameters:    Size  Location     Type
 31073 ;;  arg             3   25[BANK0 ] unsigned um
 31074 ;;  exp             1   28[BANK0 ] unsigned char 
 31075 ;;  sign            1   29[BANK0 ] unsigned char 
 31076 ;; Auto vars:     Size  Location     Type
 31077 ;;		None
 31078 ;; Return value:  Size  Location     Type
 31079 ;;                  3   25[BANK0 ] float 
 31080 ;; Registers used:
 31081 ;;		wreg, status,2, status,0
 31082 ;; Tracked objects:
 31083 ;;		On entry : 0/0
 31084 ;;		On exit  : 0/0
 31085 ;;		Unchanged: 0/0
 31086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31087 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31089 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31090 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31091 ;;Total ram usage:        8 bytes
 31092 ;; Hardware stack levels used:    1
 31093 ;; Hardware stack levels required when called:    6
 31094 ;; This function calls:
 31095 ;;		Nothing
 31096 ;; This function is called by:
 31097 ;;		___altoft
 31098 ;;		___ftadd
 31099 ;;		___ftdiv
 31100 ;;		___ftmul
 31101 ;;		___lltoft
 31102 ;;		___lwtoft
 31103 ;; This function uses a non-reentrant model
 31104 ;;
 31105                           
 31106                           	psect	text75
 31107  0075DA                     __ptext75:
 31108                           	opt stack 0
 31109  0075DA                     ___ftpack:
 31110                           	opt stack 22
 31111                           
 31112                           ;incstack = 0
 31113  0075DA  0100               	movlb	0	; () banked
 31114  0075DC  517C               	movf	___ftpack@exp& (0+255),w,b
 31115  0075DE  0100               	movlb	0	; () banked
 31116  0075E0  B4D8               	btfsc	status,2,c
 31117  0075E2  D008               	goto	l12516
 31118                           
 31119                           ; BSR set to: 0
 31120  0075E4  0100               	movlb	0	; () banked
 31121  0075E6  5179               	movf	___ftpack@arg& (0+255),w,b
 31122  0075E8  0100               	movlb	0	; () banked
 31123  0075EA  117A               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 31124  0075EC  0100               	movlb	0	; () banked
 31125  0075EE  117B               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 31126  0075F0  A4D8               	btfss	status,2,c
 31127  0075F2  D013               	goto	l12522
 31128  0075F4                     l12516:
 31129                           
 31130                           ; BSR set to: 0
 31131  0075F4  0E00               	movlw	0
 31132  0075F6  0100               	movlb	0	; () banked
 31133  0075F8  6F79               	movwf	?___ftpack& (0+255),b
 31134  0075FA  0E00               	movlw	0
 31135  0075FC  0100               	movlb	0	; () banked
 31136  0075FE  6F7A               	movwf	(?___ftpack+1)& (0+255),b
 31137  007600  0E00               	movlw	0
 31138  007602  0100               	movlb	0	; () banked
 31139  007604  6F7B               	movwf	(?___ftpack+2)& (0+255),b
 31140                           
 31141                           ; BSR set to: 0
 31142  007606  0012               	return	
 31143                           
 31144                           ; BSR set to: 0
 31145  007608  D008               	goto	l12522
 31146  00760A                     l12520:
 31147                           
 31148                           ; BSR set to: 0
 31149  00760A  0100               	movlb	0	; () banked
 31150  00760C  2B7C               	incf	___ftpack@exp& (0+255),f,b
 31151  00760E  0100               	movlb	0	; () banked
 31152  007610  90D8               	bcf	status,0,c
 31153  007612  337B               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 31154  007614  337A               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 31155  007616  3379               	rrcf	___ftpack@arg& (0+255),f,b
 31156  007618  D000               	goto	l12522
 31157  00761A                     l12522:
 31158                           
 31159                           ; BSR set to: 0
 31160  00761A  0E00               	movlw	0
 31161  00761C  0100               	movlb	0	; () banked
 31162  00761E  1579               	andwf	___ftpack@arg& (0+255),w,b
 31163  007620  0100               	movlb	0	; () banked
 31164  007622  6F7E               	movwf	??___ftpack& (0+255),b
 31165  007624  0E00               	movlw	0
 31166  007626  0100               	movlb	0	; () banked
 31167  007628  157A               	andwf	(___ftpack@arg+1)& (0+255),w,b
 31168  00762A  0100               	movlb	0	; () banked
 31169  00762C  6F7F               	movwf	(??___ftpack+1)& (0+255),b
 31170  00762E  0EFE               	movlw	254
 31171  007630  0100               	movlb	0	; () banked
 31172  007632  157B               	andwf	(___ftpack@arg+2)& (0+255),w,b
 31173  007634  0100               	movlb	0	; () banked
 31174  007636  6F80               	movwf	(??___ftpack+2)& (0+255),b
 31175  007638  0100               	movlb	0	; () banked
 31176  00763A  517E               	movf	??___ftpack& (0+255),w,b
 31177  00763C  0100               	movlb	0	; () banked
 31178  00763E  117F               	iorwf	(??___ftpack+1)& (0+255),w,b
 31179  007640  0100               	movlb	0	; () banked
 31180  007642  1180               	iorwf	(??___ftpack+2)& (0+255),w,b
 31181  007644  B4D8               	btfsc	status,2,c
 31182  007646  D013               	goto	l12528
 31183  007648  D7E0               	goto	l12520
 31184                           
 31185                           ; BSR set to: 0
 31186  00764A  D011               	goto	l12528
 31187  00764C                     l12524:
 31188                           
 31189                           ; BSR set to: 0
 31190  00764C  0100               	movlb	0	; () banked
 31191  00764E  2B7C               	incf	___ftpack@exp& (0+255),f,b
 31192                           
 31193                           ; BSR set to: 0
 31194  007650  0E01               	movlw	1
 31195  007652  0100               	movlb	0	; () banked
 31196  007654  2779               	addwf	___ftpack@arg& (0+255),f,b
 31197  007656  0E00               	movlw	0
 31198  007658  0100               	movlb	0	; () banked
 31199  00765A  237A               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 31200  00765C  0E00               	movlw	0
 31201  00765E  0100               	movlb	0	; () banked
 31202  007660  237B               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 31203  007662  0100               	movlb	0	; () banked
 31204  007664  90D8               	bcf	status,0,c
 31205  007666  337B               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 31206  007668  337A               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 31207  00766A  3379               	rrcf	___ftpack@arg& (0+255),f,b
 31208  00766C  D000               	goto	l12528
 31209  00766E                     l12528:
 31210                           
 31211                           ; BSR set to: 0
 31212  00766E  0E00               	movlw	0
 31213  007670  0100               	movlb	0	; () banked
 31214  007672  1579               	andwf	___ftpack@arg& (0+255),w,b
 31215  007674  0100               	movlb	0	; () banked
 31216  007676  6F7E               	movwf	??___ftpack& (0+255),b
 31217  007678  0E00               	movlw	0
 31218  00767A  0100               	movlb	0	; () banked
 31219  00767C  157A               	andwf	(___ftpack@arg+1)& (0+255),w,b
 31220  00767E  0100               	movlb	0	; () banked
 31221  007680  6F7F               	movwf	(??___ftpack+1)& (0+255),b
 31222  007682  0EFF               	movlw	255
 31223  007684  0100               	movlb	0	; () banked
 31224  007686  157B               	andwf	(___ftpack@arg+2)& (0+255),w,b
 31225  007688  0100               	movlb	0	; () banked
 31226  00768A  6F80               	movwf	(??___ftpack+2)& (0+255),b
 31227  00768C  0100               	movlb	0	; () banked
 31228  00768E  517E               	movf	??___ftpack& (0+255),w,b
 31229  007690  0100               	movlb	0	; () banked
 31230  007692  117F               	iorwf	(??___ftpack+1)& (0+255),w,b
 31231  007694  0100               	movlb	0	; () banked
 31232  007696  1180               	iorwf	(??___ftpack+2)& (0+255),w,b
 31233  007698  B4D8               	btfsc	status,2,c
 31234  00769A  D00A               	goto	l12532
 31235  00769C  D7D7               	goto	l12524
 31236                           
 31237                           ; BSR set to: 0
 31238  00769E  D008               	goto	l12532
 31239  0076A0                     l12530:
 31240                           
 31241                           ; BSR set to: 0
 31242  0076A0  0100               	movlb	0	; () banked
 31243  0076A2  077C               	decf	___ftpack@exp& (0+255),f,b
 31244  0076A4  0100               	movlb	0	; () banked
 31245  0076A6  90D8               	bcf	status,0,c
 31246  0076A8  3779               	rlcf	___ftpack@arg& (0+255),f,b
 31247  0076AA  377A               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 31248  0076AC  377B               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 31249  0076AE  D000               	goto	l12532
 31250  0076B0                     l12532:
 31251                           
 31252                           ; BSR set to: 0
 31253  0076B0  0100               	movlb	0	; () banked
 31254  0076B2  BF7A               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 31255  0076B4  D005               	goto	l2660
 31256                           
 31257                           ; BSR set to: 0
 31258  0076B6  0E02               	movlw	2
 31259  0076B8  0100               	movlb	0	; () banked
 31260  0076BA  617C               	cpfslt	___ftpack@exp& (0+255),b
 31261  0076BC  D7F1               	goto	l12530
 31262  0076BE  D000               	goto	l2660
 31263  0076C0                     l2660:
 31264                           
 31265                           ; BSR set to: 0
 31266  0076C0  0100               	movlb	0	; () banked
 31267  0076C2  B17C               	btfsc	___ftpack@exp& (0+255),0,b
 31268  0076C4  D003               	goto	l12538
 31269                           
 31270                           ; BSR set to: 0
 31271  0076C6  0100               	movlb	0	; () banked
 31272  0076C8  9F7A               	bcf	(___ftpack@arg+1)& (0+255),7,b
 31273  0076CA  D000               	goto	l12538
 31274  0076CC                     l12538:
 31275                           
 31276                           ; BSR set to: 0
 31277  0076CC  0100               	movlb	0	; () banked
 31278  0076CE  90D8               	bcf	status,0,c
 31279  0076D0  337C               	rrcf	___ftpack@exp& (0+255),f,b
 31280  0076D2  0100               	movlb	0	; () banked
 31281  0076D4  517C               	movf	___ftpack@exp& (0+255),w,b
 31282  0076D6  0100               	movlb	0	; () banked
 31283  0076D8  137B               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 31284                           
 31285                           ; BSR set to: 0
 31286  0076DA  0100               	movlb	0	; () banked
 31287  0076DC  517D               	movf	___ftpack@sign& (0+255),w,b
 31288  0076DE  0100               	movlb	0	; () banked
 31289  0076E0  B4D8               	btfsc	status,2,c
 31290  0076E2  D003               	goto	l12544
 31291                           
 31292                           ; BSR set to: 0
 31293  0076E4  0100               	movlb	0	; () banked
 31294  0076E6  8F7B               	bsf	(___ftpack@arg+2)& (0+255),7,b
 31295  0076E8  D000               	goto	l12544
 31296  0076EA                     l12544:
 31297                           
 31298                           ; BSR set to: 0
 31299  0076EA  C079  F079         	movff	___ftpack@arg,?___ftpack
 31300  0076EE  C07A  F07A         	movff	___ftpack@arg+1,?___ftpack+1
 31301  0076F2  C07B  F07B         	movff	___ftpack@arg+2,?___ftpack+2
 31302  0076F6  0012               	return	
 31303                           
 31304                           ; BSR set to: 0
 31305                           
 31306                           ; BSR set to: 0
 31307  0076F8  0012               	return		;funcret
 31308  0076FA                     __end_of___ftpack:
 31309                           	opt stack 0
 31310                           tblptru	equ	0xFF8
 31311                           tblptrh	equ	0xFF7
 31312                           tblptrl	equ	0xFF6
 31313                           tablat	equ	0xFF5
 31314                           prodh	equ	0xFF4
 31315                           prodl	equ	0xFF3
 31316                           intcon	equ	0xFF2
 31317                           intcon2	equ	0xFF1
 31318                           indf0	equ	0xFEF
 31319                           postinc0	equ	0xFEE
 31320                           fsr0h	equ	0xFEA
 31321                           fsr0l	equ	0xFE9
 31322                           wreg	equ	0xFE8
 31323                           indf1	equ	0xFE7
 31324                           postdec1	equ	0xFE5
 31325                           fsr1h	equ	0xFE2
 31326                           fsr1l	equ	0xFE1
 31327                           indf2	equ	0xFDF
 31328                           postinc2	equ	0xFDE
 31329                           postdec2	equ	0xFDD
 31330                           fsr2h	equ	0xFDA
 31331                           fsr2l	equ	0xFD9
 31332                           status	equ	0xFD8
 31333                           
 31334 ;; *************** function ___ftneg *****************
 31335 ;; Defined at:
 31336 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
 31337 ;; Parameters:    Size  Location     Type
 31338 ;;  f1              3   25[BANK0 ] float 
 31339 ;; Auto vars:     Size  Location     Type
 31340 ;;		None
 31341 ;; Return value:  Size  Location     Type
 31342 ;;                  3   25[BANK0 ] float 
 31343 ;; Registers used:
 31344 ;;		wreg, status,2, status,0
 31345 ;; Tracked objects:
 31346 ;;		On entry : 0/0
 31347 ;;		On exit  : 0/0
 31348 ;;		Unchanged: 0/0
 31349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31350 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31353 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31354 ;;Total ram usage:        3 bytes
 31355 ;; Hardware stack levels used:    1
 31356 ;; Hardware stack levels required when called:    6
 31357 ;; This function calls:
 31358 ;;		Nothing
 31359 ;; This function is called by:
 31360 ;;		_sprintf
 31361 ;; This function uses a non-reentrant model
 31362 ;;
 31363                           
 31364                           	psect	text76
 31365  00923A                     __ptext76:
 31366                           	opt stack 0
 31367  00923A                     ___ftneg:
 31368                           	opt stack 22
 31369                           
 31370                           ; BSR set to: 0
 31371                           ;incstack = 0
 31372  00923A  0100               	movlb	0	; () banked
 31373  00923C  5179               	movf	___ftneg@f1& (0+255),w,b
 31374  00923E  0100               	movlb	0	; () banked
 31375  009240  117A               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 31376  009242  0100               	movlb	0	; () banked
 31377  009244  117B               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 31378  009246  B4D8               	btfsc	status,2,c
 31379  009248  D009               	goto	l2763
 31380                           
 31381                           ; BSR set to: 0
 31382  00924A  0E00               	movlw	0
 31383  00924C  0100               	movlb	0	; () banked
 31384  00924E  1B79               	xorwf	___ftneg@f1& (0+255),f,b
 31385  009250  0E00               	movlw	0
 31386  009252  0100               	movlb	0	; () banked
 31387  009254  1B7A               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 31388  009256  0E80               	movlw	128
 31389  009258  0100               	movlb	0	; () banked
 31390  00925A  1B7B               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 31391  00925C                     l2763:
 31392                           
 31393                           ; BSR set to: 0
 31394  00925C  C079  F079         	movff	___ftneg@f1,?___ftneg
 31395  009260  C07A  F07A         	movff	___ftneg@f1+1,?___ftneg+1
 31396  009264  C07B  F07B         	movff	___ftneg@f1+2,?___ftneg+2
 31397                           
 31398                           ; BSR set to: 0
 31399  009268  0012               	return		;funcret
 31400  00926A                     __end_of___ftneg:
 31401                           	opt stack 0
 31402                           tblptru	equ	0xFF8
 31403                           tblptrh	equ	0xFF7
 31404                           tblptrl	equ	0xFF6
 31405                           tablat	equ	0xFF5
 31406                           prodh	equ	0xFF4
 31407                           prodl	equ	0xFF3
 31408                           intcon	equ	0xFF2
 31409                           intcon2	equ	0xFF1
 31410                           indf0	equ	0xFEF
 31411                           postinc0	equ	0xFEE
 31412                           fsr0h	equ	0xFEA
 31413                           fsr0l	equ	0xFE9
 31414                           wreg	equ	0xFE8
 31415                           indf1	equ	0xFE7
 31416                           postdec1	equ	0xFE5
 31417                           fsr1h	equ	0xFE2
 31418                           fsr1l	equ	0xFE1
 31419                           indf2	equ	0xFDF
 31420                           postinc2	equ	0xFDE
 31421                           postdec2	equ	0xFDD
 31422                           fsr2h	equ	0xFDA
 31423                           fsr2l	equ	0xFD9
 31424                           status	equ	0xFD8
 31425                           
 31426 ;; *************** function ___ftge *****************
 31427 ;; Defined at:
 31428 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
 31429 ;; Parameters:    Size  Location     Type
 31430 ;;  ff1             3   25[BANK0 ] float 
 31431 ;;  ff2             3   28[BANK0 ] float 
 31432 ;; Auto vars:     Size  Location     Type
 31433 ;;		None
 31434 ;; Return value:  Size  Location     Type
 31435 ;;		None               void
 31436 ;; Registers used:
 31437 ;;		wreg, status,2, status,0
 31438 ;; Tracked objects:
 31439 ;;		On entry : 0/0
 31440 ;;		On exit  : 0/0
 31441 ;;		Unchanged: 0/0
 31442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31443 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31445 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31446 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31447 ;;Total ram usage:        9 bytes
 31448 ;; Hardware stack levels used:    1
 31449 ;; Hardware stack levels required when called:    6
 31450 ;; This function calls:
 31451 ;;		Nothing
 31452 ;; This function is called by:
 31453 ;;		_main
 31454 ;;		_sprintf
 31455 ;; This function uses a non-reentrant model
 31456 ;;
 31457                           
 31458                           	psect	text77
 31459  007D06                     __ptext77:
 31460                           	opt stack 0
 31461  007D06                     ___ftge:
 31462                           	opt stack 24
 31463                           
 31464                           ; BSR set to: 0
 31465                           ;incstack = 0
 31466  007D06  0100               	movlb	0	; () banked
 31467  007D08  AF7B               	btfss	(___ftge@ff1+2)& (0+255),7,b
 31468  007D0A  D01E               	goto	l13148
 31469                           
 31470                           ; BSR set to: 0
 31471  007D0C  C079  F07F         	movff	___ftge@ff1,??___ftge
 31472  007D10  C07A  F080         	movff	___ftge@ff1+1,??___ftge+1
 31473  007D14  C07B  F081         	movff	___ftge@ff1+2,??___ftge+2
 31474  007D18  0100               	movlb	0	; () banked
 31475  007D1A  1F7F               	comf	??___ftge& (0+255),f,b
 31476  007D1C  1F80               	comf	(??___ftge+1)& (0+255),f,b
 31477  007D1E  1F81               	comf	(??___ftge+2)& (0+255),f,b
 31478  007D20  2B7F               	incf	??___ftge& (0+255),f,b
 31479  007D22  0E00               	movlw	0
 31480  007D24  2380               	addwfc	(??___ftge+1)& (0+255),f,b
 31481  007D26  2381               	addwfc	(??___ftge+2)& (0+255),f,b
 31482  007D28  0E00               	movlw	0
 31483  007D2A  0100               	movlb	0	; () banked
 31484  007D2C  257F               	addwf	??___ftge& (0+255),w,b
 31485  007D2E  0100               	movlb	0	; () banked
 31486  007D30  6F79               	movwf	___ftge@ff1& (0+255),b
 31487  007D32  0E00               	movlw	0
 31488  007D34  0100               	movlb	0	; () banked
 31489  007D36  2180               	addwfc	(??___ftge+1)& (0+255),w,b
 31490  007D38  0100               	movlb	0	; () banked
 31491  007D3A  6F7A               	movwf	(___ftge@ff1+1)& (0+255),b
 31492  007D3C  0E80               	movlw	128
 31493  007D3E  0100               	movlb	0	; () banked
 31494  007D40  2181               	addwfc	(??___ftge+2)& (0+255),w,b
 31495  007D42  0100               	movlb	0	; () banked
 31496  007D44  6F7B               	movwf	(___ftge@ff1+2)& (0+255),b
 31497  007D46  D000               	goto	l13148
 31498  007D48                     l13148:
 31499                           
 31500                           ; BSR set to: 0
 31501  007D48  0100               	movlb	0	; () banked
 31502  007D4A  AF7E               	btfss	(___ftge@ff2+2)& (0+255),7,b
 31503  007D4C  D01E               	goto	l13152
 31504                           
 31505                           ; BSR set to: 0
 31506  007D4E  C07C  F07F         	movff	___ftge@ff2,??___ftge
 31507  007D52  C07D  F080         	movff	___ftge@ff2+1,??___ftge+1
 31508  007D56  C07E  F081         	movff	___ftge@ff2+2,??___ftge+2
 31509  007D5A  0100               	movlb	0	; () banked
 31510  007D5C  1F7F               	comf	??___ftge& (0+255),f,b
 31511  007D5E  1F80               	comf	(??___ftge+1)& (0+255),f,b
 31512  007D60  1F81               	comf	(??___ftge+2)& (0+255),f,b
 31513  007D62  2B7F               	incf	??___ftge& (0+255),f,b
 31514  007D64  0E00               	movlw	0
 31515  007D66  2380               	addwfc	(??___ftge+1)& (0+255),f,b
 31516  007D68  2381               	addwfc	(??___ftge+2)& (0+255),f,b
 31517  007D6A  0E00               	movlw	0
 31518  007D6C  0100               	movlb	0	; () banked
 31519  007D6E  257F               	addwf	??___ftge& (0+255),w,b
 31520  007D70  0100               	movlb	0	; () banked
 31521  007D72  6F7C               	movwf	___ftge@ff2& (0+255),b
 31522  007D74  0E00               	movlw	0
 31523  007D76  0100               	movlb	0	; () banked
 31524  007D78  2180               	addwfc	(??___ftge+1)& (0+255),w,b
 31525  007D7A  0100               	movlb	0	; () banked
 31526  007D7C  6F7D               	movwf	(___ftge@ff2+1)& (0+255),b
 31527  007D7E  0E80               	movlw	128
 31528  007D80  0100               	movlb	0	; () banked
 31529  007D82  2181               	addwfc	(??___ftge+2)& (0+255),w,b
 31530  007D84  0100               	movlb	0	; () banked
 31531  007D86  6F7E               	movwf	(___ftge@ff2+2)& (0+255),b
 31532  007D88  D000               	goto	l13152
 31533  007D8A                     l13152:
 31534                           
 31535                           ; BSR set to: 0
 31536  007D8A  0E00               	movlw	0
 31537  007D8C  0100               	movlb	0	; () banked
 31538  007D8E  1B79               	xorwf	___ftge@ff1& (0+255),f,b
 31539  007D90  0E00               	movlw	0
 31540  007D92  0100               	movlb	0	; () banked
 31541  007D94  1B7A               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 31542  007D96  0E80               	movlw	128
 31543  007D98  0100               	movlb	0	; () banked
 31544  007D9A  1B7B               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 31545                           
 31546                           ; BSR set to: 0
 31547  007D9C  0E00               	movlw	0
 31548  007D9E  0100               	movlb	0	; () banked
 31549  007DA0  1B7C               	xorwf	___ftge@ff2& (0+255),f,b
 31550  007DA2  0E00               	movlw	0
 31551  007DA4  0100               	movlb	0	; () banked
 31552  007DA6  1B7D               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 31553  007DA8  0E80               	movlw	128
 31554  007DAA  0100               	movlb	0	; () banked
 31555  007DAC  1B7E               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 31556  007DAE  0100               	movlb	0	; () banked
 31557  007DB0  517C               	movf	___ftge@ff2& (0+255),w,b
 31558  007DB2  0100               	movlb	0	; () banked
 31559  007DB4  5D79               	subwf	___ftge@ff1& (0+255),w,b
 31560  007DB6  0100               	movlb	0	; () banked
 31561  007DB8  517D               	movf	(___ftge@ff2+1)& (0+255),w,b
 31562  007DBA  0100               	movlb	0	; () banked
 31563  007DBC  597A               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 31564  007DBE  0100               	movlb	0	; () banked
 31565  007DC0  517E               	movf	(___ftge@ff2+2)& (0+255),w,b
 31566  007DC2  0100               	movlb	0	; () banked
 31567  007DC4  597B               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 31568  007DC6  B0D8               	btfsc	status,0,c
 31569  007DC8  D002               	goto	l13158
 31570                           
 31571                           ; BSR set to: 0
 31572  007DCA  90D8               	bcf	status,0,c
 31573  007DCC  0012               	return	
 31574  007DCE                     l13158:
 31575                           
 31576                           ; BSR set to: 0
 31577  007DCE  80D8               	bsf	status,0,c
 31578                           
 31579                           ; BSR set to: 0
 31580  007DD0  0012               	return	
 31581                           
 31582                           ; BSR set to: 0
 31583                           
 31584                           ; BSR set to: 0
 31585  007DD2  0012               	return		;funcret
 31586  007DD4                     __end_of___ftge:
 31587                           	opt stack 0
 31588                           tblptru	equ	0xFF8
 31589                           tblptrh	equ	0xFF7
 31590                           tblptrl	equ	0xFF6
 31591                           tablat	equ	0xFF5
 31592                           prodh	equ	0xFF4
 31593                           prodl	equ	0xFF3
 31594                           intcon	equ	0xFF2
 31595                           intcon2	equ	0xFF1
 31596                           indf0	equ	0xFEF
 31597                           postinc0	equ	0xFEE
 31598                           fsr0h	equ	0xFEA
 31599                           fsr0l	equ	0xFE9
 31600                           wreg	equ	0xFE8
 31601                           indf1	equ	0xFE7
 31602                           postdec1	equ	0xFE5
 31603                           fsr1h	equ	0xFE2
 31604                           fsr1l	equ	0xFE1
 31605                           indf2	equ	0xFDF
 31606                           postinc2	equ	0xFDE
 31607                           postdec2	equ	0xFDD
 31608                           fsr2h	equ	0xFDA
 31609                           fsr2l	equ	0xFD9
 31610                           status	equ	0xFD8
 31611                           
 31612 ;; *************** function _EnterCommandMode *****************
 31613 ;; Defined at:
 31614 ;;		line 116 in file "Bluetooth.c"
 31615 ;; Parameters:    Size  Location     Type
 31616 ;;		None
 31617 ;; Auto vars:     Size  Location     Type
 31618 ;;  count           1   34[BANK0 ] unsigned char 
 31619 ;; Return value:  Size  Location     Type
 31620 ;;                  1    wreg      unsigned char 
 31621 ;; Registers used:
 31622 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31623 ;; Tracked objects:
 31624 ;;		On entry : 0/0
 31625 ;;		On exit  : 0/0
 31626 ;;		Unchanged: 0/0
 31627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31629 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31631 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31632 ;;Total ram usage:        1 bytes
 31633 ;; Hardware stack levels used:    1
 31634 ;; Hardware stack levels required when called:    8
 31635 ;; This function calls:
 31636 ;;		_BlueConnected
 31637 ;;		_ResetBlue
 31638 ;;		_StringContains
 31639 ;;		_UARTstring
 31640 ;;		_cleanBuffer
 31641 ;;		_delayUS
 31642 ;; This function is called by:
 31643 ;;		_BluetoothInitialSetup
 31644 ;; This function uses a non-reentrant model
 31645 ;;
 31646                           
 31647                           	psect	text78
 31648  007DD4                     __ptext78:
 31649                           	opt stack 0
 31650  007DD4                     _EnterCommandMode:
 31651                           	opt stack 19
 31652                           
 31653                           ;Bluetooth.c: 118: unsigned char count = 0;
 31654                           
 31655                           ; BSR set to: 0
 31656                           ;incstack = 0
 31657  007DD4  0E00               	movlw	0
 31658  007DD6  0100               	movlb	0	; () banked
 31659  007DD8  6F82               	movwf	EnterCommandMode@count& (0+255),b
 31660                           
 31661                           ;Bluetooth.c: 119: while(BlueConnected())
 31662  007DDA  D00B               	goto	l13386
 31663  007DDC                     l13376:
 31664                           
 31665                           ;Bluetooth.c: 120: {
 31666                           ;Bluetooth.c: 121: ResetBlue();
 31667  007DDC  EC04  F049         	call	_ResetBlue	;wreg free
 31668                           
 31669                           ;Bluetooth.c: 122: count++;
 31670  007DE0  0100               	movlb	0	; () banked
 31671  007DE2  2B82               	incf	EnterCommandMode@count& (0+255),f,b
 31672                           
 31673                           ; BSR set to: 0
 31674                           ;Bluetooth.c: 123: if(count > 4)
 31675  007DE4  0E04               	movlw	4
 31676  007DE6  0100               	movlb	0	; () banked
 31677  007DE8  6582               	cpfsgt	EnterCommandMode@count& (0+255),b
 31678  007DEA  D003               	goto	l13386
 31679                           
 31680                           ; BSR set to: 0
 31681                           ;Bluetooth.c: 124: {
 31682                           ;Bluetooth.c: 126: return 0;
 31683  007DEC  0E00               	movlw	0
 31684                           
 31685                           ; BSR set to: 0
 31686  007DEE  0012               	return	
 31687                           
 31688                           ; BSR set to: 0
 31689  007DF0  D000               	goto	l13386
 31690  007DF2                     l13386:
 31691                           
 31692                           ; BSR set to: 0
 31693  007DF2  EC6A  F04A         	call	_BlueConnected	;wreg free
 31694  007DF6  0900               	iorlw	0
 31695  007DF8  A4D8               	btfss	status,2,c
 31696  007DFA  D7F0               	goto	l13376
 31697                           
 31698                           ;Bluetooth.c: 127: }
 31699                           ;Bluetooth.c: 128: }
 31700                           ;Bluetooth.c: 130: delayUS(50000);
 31701  007DFC  0E50               	movlw	80
 31702  007DFE  0100               	movlb	0	; () banked
 31703  007E00  6F79               	movwf	delayUS@US& (0+255),b
 31704  007E02  0EC3               	movlw	195
 31705  007E04  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 31706  007E06  0E00               	movlw	0
 31707  007E08  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 31708  007E0A  0E00               	movlw	0
 31709  007E0C  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 31710  007E0E  EC48  F047         	call	_delayUS	;wreg free
 31711                           
 31712                           ;Bluetooth.c: 131: UARTstring((unsigned char *)"$$$");
 31713  007E12  0EE7               	movlw	low STR_2
 31714  007E14  0100               	movlb	0	; () banked
 31715  007E16  6F7A               	movwf	UARTstring@data& (0+255),b
 31716  007E18  0EFF               	movlw	high STR_2
 31717  007E1A  0100               	movlb	0	; () banked
 31718  007E1C  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 31719  007E1E  ECC4  F046         	call	_UARTstring	;wreg free
 31720                           
 31721                           ;Bluetooth.c: 132: delayUS(50000);
 31722  007E22  0E50               	movlw	80
 31723  007E24  0100               	movlb	0	; () banked
 31724  007E26  6F79               	movwf	delayUS@US& (0+255),b
 31725  007E28  0EC3               	movlw	195
 31726  007E2A  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 31727  007E2C  0E00               	movlw	0
 31728  007E2E  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 31729  007E30  0E00               	movlw	0
 31730  007E32  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 31731  007E34  EC48  F047         	call	_delayUS	;wreg free
 31732                           
 31733                           ;Bluetooth.c: 133: if(StringContains(CommandString,(unsigned char *)"CMD"))
 31734  007E38  0E00               	movlw	low _CommandString
 31735  007E3A  0100               	movlb	0	; () banked
 31736  007E3C  6F79               	movwf	StringContains@This& (0+255),b
 31737  007E3E  0E05               	movlw	high _CommandString
 31738  007E40  0100               	movlb	0	; () banked
 31739  007E42  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 31740  007E44  0EF3               	movlw	low STR_3
 31741  007E46  0100               	movlb	0	; () banked
 31742  007E48  6F7B               	movwf	StringContains@That& (0+255),b
 31743  007E4A  0EFF               	movlw	high STR_3
 31744  007E4C  0100               	movlb	0	; () banked
 31745  007E4E  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 31746  007E50  EC22  F041         	call	_StringContains	;wreg free
 31747  007E54  0900               	iorlw	0
 31748  007E56  B4D8               	btfsc	status,2,c
 31749  007E58  D010               	goto	l13404
 31750                           
 31751                           ;Bluetooth.c: 134: {
 31752                           ;Bluetooth.c: 135: cleanBuffer(CommandString,CommandStringPos);
 31753  007E5A  0E00               	movlw	low _CommandString
 31754  007E5C  0100               	movlb	0	; () banked
 31755  007E5E  6F79               	movwf	cleanBuffer@data& (0+255),b
 31756  007E60  0E05               	movlw	high _CommandString
 31757  007E62  0100               	movlb	0	; () banked
 31758  007E64  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 31759  007E66  C026  F07B         	movff	_CommandStringPos,cleanBuffer@count
 31760  007E6A  0100               	movlb	0	; () banked
 31761  007E6C  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 31762  007E6E  EC97  F046         	call	_cleanBuffer	;wreg free
 31763                           
 31764                           ;Bluetooth.c: 136: CommandStringPos = 0;
 31765  007E72  0E00               	movlw	0
 31766  007E74  6E26               	movwf	_CommandStringPos,c
 31767                           
 31768                           ;Bluetooth.c: 137: return 1;
 31769  007E76  0E01               	movlw	1
 31770  007E78  0012               	return	
 31771  007E7A                     l13404:
 31772                           
 31773                           ;Bluetooth.c: 138: }
 31774                           ;Bluetooth.c: 139: cleanBuffer(CommandString,CommandStringPos);
 31775  007E7A  0E00               	movlw	low _CommandString
 31776  007E7C  0100               	movlb	0	; () banked
 31777  007E7E  6F79               	movwf	cleanBuffer@data& (0+255),b
 31778  007E80  0E05               	movlw	high _CommandString
 31779  007E82  0100               	movlb	0	; () banked
 31780  007E84  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 31781  007E86  C026  F07B         	movff	_CommandStringPos,cleanBuffer@count
 31782  007E8A  0100               	movlb	0	; () banked
 31783  007E8C  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 31784  007E8E  EC97  F046         	call	_cleanBuffer	;wreg free
 31785                           
 31786                           ;Bluetooth.c: 140: CommandStringPos = 0;
 31787  007E92  0E00               	movlw	0
 31788  007E94  6E26               	movwf	_CommandStringPos,c
 31789                           
 31790                           ;Bluetooth.c: 141: return 0;
 31791  007E96  0E00               	movlw	0
 31792  007E98  0012               	return	
 31793  007E9A  0012               	return		;funcret
 31794  007E9C                     __end_of_EnterCommandMode:
 31795                           	opt stack 0
 31796                           tblptru	equ	0xFF8
 31797                           tblptrh	equ	0xFF7
 31798                           tblptrl	equ	0xFF6
 31799                           tablat	equ	0xFF5
 31800                           prodh	equ	0xFF4
 31801                           prodl	equ	0xFF3
 31802                           intcon	equ	0xFF2
 31803                           intcon2	equ	0xFF1
 31804                           indf0	equ	0xFEF
 31805                           postinc0	equ	0xFEE
 31806                           fsr0h	equ	0xFEA
 31807                           fsr0l	equ	0xFE9
 31808                           wreg	equ	0xFE8
 31809                           indf1	equ	0xFE7
 31810                           postdec1	equ	0xFE5
 31811                           fsr1h	equ	0xFE2
 31812                           fsr1l	equ	0xFE1
 31813                           indf2	equ	0xFDF
 31814                           postinc2	equ	0xFDE
 31815                           postdec2	equ	0xFDD
 31816                           fsr2h	equ	0xFDA
 31817                           fsr2l	equ	0xFD9
 31818                           status	equ	0xFD8
 31819                           
 31820 ;; *************** function _cleanBuffer *****************
 31821 ;; Defined at:
 31822 ;;		line 127 in file "MISC.c"
 31823 ;; Parameters:    Size  Location     Type
 31824 ;;  data            2   25[BANK0 ] PTR unsigned char 
 31825 ;;		 -> UseBluetooth@rfchannelSTR(10), UseBluetooth@buf(100), BluetoothInitialSetup@RFchannel(10), BluetoothInitialSetup
      +@buf(50), 
 31826 ;;		 -> CommandString(255), StringAddEqual@temp(255), ReceivedString(255), main@BluetoothString(255), 
 31827 ;;  count           2   27[BANK0 ] int 
 31828 ;; Auto vars:     Size  Location     Type
 31829 ;;  i               1   32[BANK0 ] unsigned char 
 31830 ;; Return value:  Size  Location     Type
 31831 ;;		None               void
 31832 ;; Registers used:
 31833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31834 ;; Tracked objects:
 31835 ;;		On entry : 0/0
 31836 ;;		On exit  : 0/0
 31837 ;;		Unchanged: 0/0
 31838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31839 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31840 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31841 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31842 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31843 ;;Total ram usage:        8 bytes
 31844 ;; Hardware stack levels used:    1
 31845 ;; Hardware stack levels required when called:    6
 31846 ;; This function calls:
 31847 ;;		Nothing
 31848 ;; This function is called by:
 31849 ;;		_main
 31850 ;;		_Init_System
 31851 ;;		_BufferCopy
 31852 ;;		_StringAddEqual
 31853 ;;		_InitBluetooth
 31854 ;;		_EnterCommandMode
 31855 ;;		_BluetoothInitialSetup
 31856 ;;		_UseBluetooth
 31857 ;; This function uses a non-reentrant model
 31858 ;;
 31859                           
 31860                           	psect	text79
 31861  008D2E                     __ptext79:
 31862                           	opt stack 0
 31863  008D2E                     _cleanBuffer:
 31864                           	opt stack 24
 31865                           
 31866                           ;MISC.c: 129: unsigned char i=0;
 31867                           
 31868                           ;incstack = 0
 31869  008D2E  0E00               	movlw	0
 31870  008D30  0100               	movlb	0	; () banked
 31871  008D32  6F80               	movwf	cleanBuffer@i& (0+255),b
 31872                           
 31873                           ;MISC.c: 130: for(i=0; i<count;i++)
 31874  008D34  0E00               	movlw	0
 31875  008D36  0100               	movlb	0	; () banked
 31876  008D38  6F80               	movwf	cleanBuffer@i& (0+255),b
 31877  008D3A  D010               	goto	l12806
 31878  008D3C                     l12802:
 31879                           
 31880                           ; BSR set to: 0
 31881                           ;MISC.c: 131: {
 31882                           ;MISC.c: 132: data[i]= 0;
 31883  008D3C  0100               	movlb	0	; () banked
 31884  008D3E  5180               	movf	cleanBuffer@i& (0+255),w,b
 31885  008D40  0D01               	mullw	1
 31886  008D42  50F3               	movf	prodl,w,c
 31887  008D44  0100               	movlb	0	; () banked
 31888  008D46  2579               	addwf	cleanBuffer@data& (0+255),w,b
 31889  008D48  6ED9               	movwf	fsr2l,c
 31890  008D4A  50F4               	movf	prodh,w,c
 31891  008D4C  0100               	movlb	0	; () banked
 31892  008D4E  217A               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
 31893  008D50  6EDA               	movwf	fsr2h,c
 31894  008D52  0E00               	movlw	0
 31895  008D54  6EDF               	movwf	indf2,c
 31896                           
 31897                           ; BSR set to: 0
 31898  008D56  0100               	movlb	0	; () banked
 31899  008D58  2B80               	incf	cleanBuffer@i& (0+255),f,b
 31900  008D5A  D000               	goto	l12806
 31901  008D5C                     l12806:
 31902                           
 31903                           ; BSR set to: 0
 31904  008D5C  0100               	movlb	0	; () banked
 31905  008D5E  5180               	movf	cleanBuffer@i& (0+255),w,b
 31906  008D60  0100               	movlb	0	; () banked
 31907  008D62  6F7D               	movwf	??_cleanBuffer& (0+255),b
 31908  008D64  6B7E               	clrf	(??_cleanBuffer+1)& (0+255),b
 31909  008D66  0100               	movlb	0	; () banked
 31910  008D68  517B               	movf	cleanBuffer@count& (0+255),w,b
 31911  008D6A  0100               	movlb	0	; () banked
 31912  008D6C  5D7D               	subwf	??_cleanBuffer& (0+255),w,b
 31913  008D6E  0100               	movlb	0	; () banked
 31914  008D70  517E               	movf	(??_cleanBuffer+1)& (0+255),w,b
 31915  008D72  0A80               	xorlw	128
 31916  008D74  0100               	movlb	0	; () banked
 31917  008D76  6F7F               	movwf	(??_cleanBuffer+2)& (0+255),b
 31918  008D78  0100               	movlb	0	; () banked
 31919  008D7A  517C               	movf	(cleanBuffer@count+1)& (0+255),w,b
 31920  008D7C  0A80               	xorlw	128
 31921  008D7E  0100               	movlb	0	; () banked
 31922  008D80  597F               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
 31923  008D82  A0D8               	btfss	status,0,c
 31924  008D84  D7DB               	goto	l12802
 31925                           
 31926                           ; BSR set to: 0
 31927                           
 31928                           ; BSR set to: 0
 31929  008D86  0012               	return		;funcret
 31930  008D88                     __end_of_cleanBuffer:
 31931                           	opt stack 0
 31932                           tblptru	equ	0xFF8
 31933                           tblptrh	equ	0xFF7
 31934                           tblptrl	equ	0xFF6
 31935                           tablat	equ	0xFF5
 31936                           prodh	equ	0xFF4
 31937                           prodl	equ	0xFF3
 31938                           intcon	equ	0xFF2
 31939                           intcon2	equ	0xFF1
 31940                           indf0	equ	0xFEF
 31941                           postinc0	equ	0xFEE
 31942                           fsr0h	equ	0xFEA
 31943                           fsr0l	equ	0xFE9
 31944                           wreg	equ	0xFE8
 31945                           indf1	equ	0xFE7
 31946                           postdec1	equ	0xFE5
 31947                           fsr1h	equ	0xFE2
 31948                           fsr1l	equ	0xFE1
 31949                           indf2	equ	0xFDF
 31950                           postinc2	equ	0xFDE
 31951                           postdec2	equ	0xFDD
 31952                           fsr2h	equ	0xFDA
 31953                           fsr2l	equ	0xFD9
 31954                           status	equ	0xFD8
 31955                           
 31956 ;; *************** function _UARTstring *****************
 31957 ;; Defined at:
 31958 ;;		line 202 in file "UART.c"
 31959 ;; Parameters:    Size  Location     Type
 31960 ;;  data            2   26[BANK0 ] PTR unsigned char 
 31961 ;;		 -> STR_146(28), STR_89(13), STR_78(32), STR_67(14), 
 31962 ;;		 -> SYNTAX_ERR(14), STR_18(5), STR_16(5), STR_14(6), 
 31963 ;;		 -> STR_12(6), STR_10(9), STR_8(21), STR_6(10), 
 31964 ;;		 -> BluetoothInitialSetup@buf(50), STR_2(4), CRLN(3), ReceivedString(255), 
 31965 ;; Auto vars:     Size  Location     Type
 31966 ;;		None
 31967 ;; Return value:  Size  Location     Type
 31968 ;;		None               void
 31969 ;; Registers used:
 31970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31971 ;; Tracked objects:
 31972 ;;		On entry : 0/0
 31973 ;;		On exit  : 0/0
 31974 ;;		Unchanged: 0/0
 31975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31976 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31979 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31980 ;;Total ram usage:        2 bytes
 31981 ;; Hardware stack levels used:    1
 31982 ;; Hardware stack levels required when called:    7
 31983 ;; This function calls:
 31984 ;;		_UARTchar
 31985 ;; This function is called by:
 31986 ;;		_main
 31987 ;;		_Init_System
 31988 ;;		_UARTstringCRLN
 31989 ;;		_UARTcommandMenu
 31990 ;;		_EnterCommandMode
 31991 ;;		_BluetoothInitialSetup
 31992 ;;		_UseBluetooth
 31993 ;;		_WaitForIRsignal
 31994 ;; This function uses a non-reentrant model
 31995 ;;
 31996                           
 31997                           	psect	text80
 31998  008D88                     __ptext80:
 31999                           	opt stack 0
 32000  008D88                     _UARTstring:
 32001                           	opt stack 20
 32002                           
 32003                           ;UART.c: 204: while(*data != 0)
 32004                           
 32005                           ; BSR set to: 0
 32006                           ;incstack = 0
 32007  008D88  D017               	goto	l12814
 32008  008D8A                     l12810:
 32009                           
 32010                           ;UART.c: 205: {
 32011                           ;UART.c: 206: UARTchar(*data);
 32012  008D8A  C07A  FFF6         	movff	UARTstring@data,tblptrl
 32013  008D8E  C07B  FFF7         	movff	UARTstring@data+1,tblptrh
 32014  008D92  0E00               	movlw	low (__mediumconst shr (0+16))
 32015  008D94  6EF8               	movwf	tblptru,c
 32016  008D96  0E0F               	movlw	(high __ramtop+-1)
 32017  008D98  64F7               	cpfsgt	tblptrh,c
 32018  008D9A  D003               	bra	u15067
 32019  008D9C  0008               	tblrd		*
 32020  008D9E  50F5               	movf	tablat,w,c
 32021  008DA0  D005               	bra	u15060
 32022  008DA2                     u15067:
 32023  008DA2  CFF6 FFE9          	movff	tblptrl,fsr0l
 32024  008DA6  CFF7 FFEA          	movff	tblptrh,fsr0h
 32025  008DAA  50EF               	movf	indf0,w,c
 32026  008DAC                     u15060:
 32027  008DAC  ECB0  F049         	call	_UARTchar
 32028                           
 32029                           ;UART.c: 207: *data++;
 32030  008DB0  0100               	movlb	0	; () banked
 32031  008DB2  4B7A               	infsnz	UARTstring@data& (0+255),f,b
 32032  008DB4  2B7B               	incf	(UARTstring@data+1)& (0+255),f,b
 32033  008DB6  D000               	goto	l12814
 32034  008DB8                     l12814:
 32035  008DB8  C07A  FFF6         	movff	UARTstring@data,tblptrl
 32036  008DBC  C07B  FFF7         	movff	UARTstring@data+1,tblptrh
 32037  008DC0  0E00               	movlw	low (__mediumconst shr (0+16))
 32038  008DC2  6EF8               	movwf	tblptru,c
 32039  008DC4  0E0F               	movlw	(high __ramtop+-1)
 32040  008DC6  64F7               	cpfsgt	tblptrh,c
 32041  008DC8  D003               	bra	u15077
 32042  008DCA  0008               	tblrd		*
 32043  008DCC  50F5               	movf	tablat,w,c
 32044  008DCE  D005               	bra	u15070
 32045  008DD0                     u15077:
 32046  008DD0  CFF6 FFE9          	movff	tblptrl,fsr0l
 32047  008DD4  CFF7 FFEA          	movff	tblptrh,fsr0h
 32048  008DD8  50EF               	movf	indf0,w,c
 32049  008DDA                     u15070:
 32050  008DDA  0900               	iorlw	0
 32051  008DDC  A4D8               	btfss	status,2,c
 32052  008DDE  D7D5               	goto	l12810
 32053  008DE0  0012               	return		;funcret
 32054  008DE2                     __end_of_UARTstring:
 32055                           	opt stack 0
 32056                           tblptru	equ	0xFF8
 32057                           tblptrh	equ	0xFF7
 32058                           tblptrl	equ	0xFF6
 32059                           tablat	equ	0xFF5
 32060                           prodh	equ	0xFF4
 32061                           prodl	equ	0xFF3
 32062                           intcon	equ	0xFF2
 32063                           intcon2	equ	0xFF1
 32064                           indf0	equ	0xFEF
 32065                           postinc0	equ	0xFEE
 32066                           fsr0h	equ	0xFEA
 32067                           fsr0l	equ	0xFE9
 32068                           wreg	equ	0xFE8
 32069                           indf1	equ	0xFE7
 32070                           postdec1	equ	0xFE5
 32071                           fsr1h	equ	0xFE2
 32072                           fsr1l	equ	0xFE1
 32073                           indf2	equ	0xFDF
 32074                           postinc2	equ	0xFDE
 32075                           postdec2	equ	0xFDD
 32076                           fsr2h	equ	0xFDA
 32077                           fsr2l	equ	0xFD9
 32078                           status	equ	0xFD8
 32079                           
 32080 ;; *************** function _UARTchar *****************
 32081 ;; Defined at:
 32082 ;;		line 188 in file "UART.c"
 32083 ;; Parameters:    Size  Location     Type
 32084 ;;  data            1    wreg     unsigned char 
 32085 ;; Auto vars:     Size  Location     Type
 32086 ;;  data            1   25[BANK0 ] unsigned char 
 32087 ;; Return value:  Size  Location     Type
 32088 ;;		None               void
 32089 ;; Registers used:
 32090 ;;		wreg, status,2
 32091 ;; Tracked objects:
 32092 ;;		On entry : 0/0
 32093 ;;		On exit  : 0/0
 32094 ;;		Unchanged: 0/0
 32095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32097 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32099 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32100 ;;Total ram usage:        1 bytes
 32101 ;; Hardware stack levels used:    1
 32102 ;; Hardware stack levels required when called:    6
 32103 ;; This function calls:
 32104 ;;		Nothing
 32105 ;; This function is called by:
 32106 ;;		_main
 32107 ;;		_Init_System
 32108 ;;		_UARTstring
 32109 ;;		_UARTstringCRLN
 32110 ;;		_UARTcommandMenu
 32111 ;;		_UseBluetooth
 32112 ;;		_WaitForIRsignal
 32113 ;; This function uses a non-reentrant model
 32114 ;;
 32115                           
 32116                           	psect	text81
 32117  009360                     __ptext81:
 32118                           	opt stack 0
 32119  009360                     _UARTchar:
 32120                           	opt stack 20
 32121                           
 32122                           ;incstack = 0
 32123                           ;UARTchar@data stored from wreg
 32124  009360  0100               	movlb	0	; () banked
 32125  009362  6F79               	movwf	UARTchar@data& (0+255),b
 32126                           
 32127                           ; BSR set to: 0
 32128                           ;UART.c: 190: if(data != 0)
 32129  009364  0100               	movlb	0	; () banked
 32130  009366  5179               	movf	UARTchar@data& (0+255),w,b
 32131  009368  0100               	movlb	0	; () banked
 32132  00936A  B4D8               	btfsc	status,2,c
 32133  00936C  0012               	return	
 32134                           
 32135                           ; BSR set to: 0
 32136                           ;UART.c: 191: {
 32137                           ;UART.c: 192: TXREG = data;
 32138  00936E  C079  FFAD         	movff	UARTchar@data,4013	;volatile
 32139                           
 32140                           ;UART.c: 193: while(!TXSTAbits.TRMT);
 32141  009372  D000               	goto	l646
 32142  009374                     l646:
 32143                           
 32144                           ; BSR set to: 0
 32145  009374  B2AC               	btfsc	4012,1,c	;volatile
 32146  009376  0012               	return	
 32147  009378  D7FD               	goto	l646
 32148                           
 32149                           ; BSR set to: 0
 32150  00937A  0012               	return	
 32151                           
 32152                           ; BSR set to: 0
 32153                           
 32154                           ; BSR set to: 0
 32155  00937C  0012               	return		;funcret
 32156  00937E                     __end_of_UARTchar:
 32157                           	opt stack 0
 32158                           tblptru	equ	0xFF8
 32159                           tblptrh	equ	0xFF7
 32160                           tblptrl	equ	0xFF6
 32161                           tablat	equ	0xFF5
 32162                           prodh	equ	0xFF4
 32163                           prodl	equ	0xFF3
 32164                           intcon	equ	0xFF2
 32165                           intcon2	equ	0xFF1
 32166                           indf0	equ	0xFEF
 32167                           postinc0	equ	0xFEE
 32168                           fsr0h	equ	0xFEA
 32169                           fsr0l	equ	0xFE9
 32170                           wreg	equ	0xFE8
 32171                           indf1	equ	0xFE7
 32172                           postdec1	equ	0xFE5
 32173                           fsr1h	equ	0xFE2
 32174                           fsr1l	equ	0xFE1
 32175                           indf2	equ	0xFDF
 32176                           postinc2	equ	0xFDE
 32177                           postdec2	equ	0xFDD
 32178                           fsr2h	equ	0xFDA
 32179                           fsr2l	equ	0xFD9
 32180                           status	equ	0xFD8
 32181                           
 32182 ;; *************** function _StringContains *****************
 32183 ;; Defined at:
 32184 ;;		line 252 in file "MISC.c"
 32185 ;; Parameters:    Size  Location     Type
 32186 ;;  This            2   25[BANK0 ] PTR unsigned char 
 32187 ;;		 -> CommandString(255), 
 32188 ;;  That            2   27[BANK0 ] PTR const unsigned char 
 32189 ;;		 -> STR_19(4), STR_15(4), STR_13(4), STR_11(4), 
 32190 ;;		 -> STR_9(4), STR_7(4), STR_5(4), BluetoothInitialSetup@buf(50), 
 32191 ;;		 -> STR_3(4), 
 32192 ;; Auto vars:     Size  Location     Type
 32193 ;;  begin           1   30[BANK0 ] unsigned char 
 32194 ;; Return value:  Size  Location     Type
 32195 ;;                  1    wreg      unsigned char 
 32196 ;; Registers used:
 32197 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 32198 ;; Tracked objects:
 32199 ;;		On entry : 0/0
 32200 ;;		On exit  : 0/0
 32201 ;;		Unchanged: 0/0
 32202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32203 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32204 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32205 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32206 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32207 ;;Total ram usage:        6 bytes
 32208 ;; Hardware stack levels used:    1
 32209 ;; Hardware stack levels required when called:    6
 32210 ;; This function calls:
 32211 ;;		Nothing
 32212 ;; This function is called by:
 32213 ;;		_EnterCommandMode
 32214 ;;		_BluetoothInitialSetup
 32215 ;; This function uses a non-reentrant model
 32216 ;;
 32217                           
 32218                           	psect	text82
 32219  008244                     __ptext82:
 32220                           	opt stack 0
 32221  008244                     _StringContains:
 32222                           	opt stack 21
 32223                           
 32224                           ;MISC.c: 254: unsigned char begin = 0;
 32225                           
 32226                           ; BSR set to: 0
 32227                           ;incstack = 0
 32228  008244  0E00               	movlw	0
 32229  008246  0100               	movlb	0	; () banked
 32230  008248  6F7E               	movwf	StringContains@begin& (0+255),b
 32231                           
 32232                           ;MISC.c: 256: while(*This != 0)
 32233  00824A  D04B               	goto	l12844
 32234  00824C                     l12818:
 32235                           
 32236                           ; BSR set to: 0
 32237                           ;MISC.c: 257: {
 32238                           ;MISC.c: 258: if(*This == *That)
 32239  00824C  C079  FFD9         	movff	StringContains@This,fsr2l
 32240  008250  C07A  FFDA         	movff	StringContains@This+1,fsr2h
 32241  008254  50DF               	movf	indf2,w,c
 32242  008256  0100               	movlb	0	; () banked
 32243  008258  6F7D               	movwf	??_StringContains& (0+255),b
 32244  00825A  C07B  FFF6         	movff	StringContains@That,tblptrl
 32245  00825E  C07C  FFF7         	movff	StringContains@That+1,tblptrh
 32246  008262  0E00               	movlw	low (__mediumconst shr (0+16))
 32247  008264  6EF8               	movwf	tblptru,c
 32248  008266  0E0F               	movlw	(high __ramtop+-1)
 32249  008268  64F7               	cpfsgt	tblptrh,c
 32250  00826A  D003               	bra	u15097
 32251  00826C  0008               	tblrd		*
 32252  00826E  50F5               	movf	tablat,w,c
 32253  008270  D005               	bra	u15090
 32254  008272                     u15097:
 32255  008272  CFF6 FFE9          	movff	tblptrl,fsr0l
 32256  008276  CFF7 FFEA          	movff	tblptrh,fsr0h
 32257  00827A  50EF               	movf	indf0,w,c
 32258  00827C                     u15090:
 32259  00827C  0100               	movlb	0	; () banked
 32260  00827E  197D               	xorwf	??_StringContains& (0+255),w,b
 32261  008280  A4D8               	btfss	status,2,c
 32262  008282  D026               	goto	l12836
 32263                           
 32264                           ; BSR set to: 0
 32265                           ;MISC.c: 259: {
 32266                           ;MISC.c: 260: begin = 1;
 32267  008284  0E01               	movlw	1
 32268  008286  0100               	movlb	0	; () banked
 32269  008288  6F7E               	movwf	StringContains@begin& (0+255),b
 32270                           
 32271                           ; BSR set to: 0
 32272                           ;MISC.c: 261: That++;
 32273  00828A  0100               	movlb	0	; () banked
 32274  00828C  4B7B               	infsnz	StringContains@That& (0+255),f,b
 32275  00828E  2B7C               	incf	(StringContains@That+1)& (0+255),f,b
 32276                           
 32277                           ; BSR set to: 0
 32278                           ;MISC.c: 262: if(*That == 0)
 32279  008290  C07B  FFF6         	movff	StringContains@That,tblptrl
 32280  008294  C07C  FFF7         	movff	StringContains@That+1,tblptrh
 32281  008298  0E00               	movlw	low (__mediumconst shr (0+16))
 32282  00829A  6EF8               	movwf	tblptru,c
 32283  00829C  0E0F               	movlw	(high __ramtop+-1)
 32284  00829E  64F7               	cpfsgt	tblptrh,c
 32285  0082A0  D003               	bra	u15117
 32286  0082A2  0008               	tblrd		*
 32287  0082A4  50F5               	movf	tablat,w,c
 32288  0082A6  D005               	bra	u15110
 32289  0082A8                     u15117:
 32290  0082A8  CFF6 FFE9          	movff	tblptrl,fsr0l
 32291  0082AC  CFF7 FFEA          	movff	tblptrh,fsr0h
 32292  0082B0  50EF               	movf	indf0,w,c
 32293  0082B2                     u15110:
 32294  0082B2  0900               	iorlw	0
 32295  0082B4  A4D8               	btfss	status,2,c
 32296  0082B6  D002               	goto	l12830
 32297                           
 32298                           ;MISC.c: 263: {
 32299                           ;MISC.c: 264: return 1;
 32300  0082B8  0E01               	movlw	1
 32301  0082BA  0012               	return	
 32302  0082BC                     l12830:
 32303                           
 32304                           ;MISC.c: 265: }
 32305                           ;MISC.c: 266: if(*This == 0)
 32306  0082BC  C079  FFD9         	movff	StringContains@This,fsr2l
 32307  0082C0  C07A  FFDA         	movff	StringContains@This+1,fsr2h
 32308  0082C4  50DF               	movf	indf2,w,c
 32309  0082C6  A4D8               	btfss	status,2,c
 32310  0082C8  D008               	goto	l12842
 32311                           
 32312                           ;MISC.c: 267: {
 32313                           ;MISC.c: 268: return 0;
 32314  0082CA  0E00               	movlw	0
 32315  0082CC  0012               	return	
 32316                           
 32317                           ;MISC.c: 269: }
 32318                           ;MISC.c: 270: }
 32319  0082CE  D005               	goto	l12842
 32320  0082D0                     l12836:
 32321                           
 32322                           ;MISC.c: 271: else
 32323                           ;MISC.c: 272: {
 32324                           ;MISC.c: 273: if(begin == 1)
 32325  0082D0  0100               	movlb	0	; () banked
 32326  0082D2  057E               	decf	StringContains@begin& (0+255),w,b
 32327  0082D4  D7F8               	goto	L24
 32328                           
 32329                           ; BSR set to: 0
 32330                           
 32331                           ; BSR set to: 0
 32332                           ;MISC.c: 274: {
 32333                           ;MISC.c: 275: return 0;
 32334  0082D6  0012               	return	
 32335                           
 32336                           ; BSR set to: 0
 32337  0082D8  D000               	goto	l12842
 32338  0082DA                     l12842:
 32339                           
 32340                           ;MISC.c: 276: }
 32341                           ;MISC.c: 277: }
 32342                           ;MISC.c: 278: This++;
 32343  0082DA  0100               	movlb	0	; () banked
 32344  0082DC  4B79               	infsnz	StringContains@This& (0+255),f,b
 32345  0082DE  2B7A               	incf	(StringContains@This+1)& (0+255),f,b
 32346  0082E0  D000               	goto	l12844
 32347  0082E2                     l12844:
 32348                           
 32349                           ; BSR set to: 0
 32350  0082E2  C079  FFD9         	movff	StringContains@This,fsr2l
 32351  0082E6  C07A  FFDA         	movff	StringContains@This+1,fsr2h
 32352  0082EA  50DF               	movf	indf2,w,c
 32353  0082EC  A4D8               	btfss	status,2,c
 32354  0082EE  D7AE               	goto	l12818
 32355                           
 32356                           ; BSR set to: 0
 32357                           ;MISC.c: 279: }
 32358                           ;MISC.c: 280: return 0;
 32359                           
 32360                           ; BSR set to: 0
 32361  0082F0  0E00               	movlw	0
 32362  0082F2  0012               	return	
 32363                           
 32364                           ; BSR set to: 0
 32365  0082F4  0012               	return		;funcret
 32366  0082F6                     __end_of_StringContains:
 32367                           	opt stack 0
 32368                           tblptru	equ	0xFF8
 32369                           tblptrh	equ	0xFF7
 32370                           tblptrl	equ	0xFF6
 32371                           tablat	equ	0xFF5
 32372                           prodh	equ	0xFF4
 32373                           prodl	equ	0xFF3
 32374                           intcon	equ	0xFF2
 32375                           intcon2	equ	0xFF1
 32376                           indf0	equ	0xFEF
 32377                           postinc0	equ	0xFEE
 32378                           fsr0h	equ	0xFEA
 32379                           fsr0l	equ	0xFE9
 32380                           wreg	equ	0xFE8
 32381                           indf1	equ	0xFE7
 32382                           postdec1	equ	0xFE5
 32383                           fsr1h	equ	0xFE2
 32384                           fsr1l	equ	0xFE1
 32385                           indf2	equ	0xFDF
 32386                           postinc2	equ	0xFDE
 32387                           postdec2	equ	0xFDD
 32388                           fsr2h	equ	0xFDA
 32389                           fsr2l	equ	0xFD9
 32390                           status	equ	0xFD8
 32391                           
 32392 ;; *************** function _ResetBlue *****************
 32393 ;; Defined at:
 32394 ;;		line 103 in file "Bluetooth.c"
 32395 ;; Parameters:    Size  Location     Type
 32396 ;;		None
 32397 ;; Auto vars:     Size  Location     Type
 32398 ;;		None
 32399 ;; Return value:  Size  Location     Type
 32400 ;;		None               void
 32401 ;; Registers used:
 32402 ;;		wreg, status,2, status,0, cstack
 32403 ;; Tracked objects:
 32404 ;;		On entry : 0/0
 32405 ;;		On exit  : 0/0
 32406 ;;		Unchanged: 0/0
 32407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32412 ;;Total ram usage:        0 bytes
 32413 ;; Hardware stack levels used:    1
 32414 ;; Hardware stack levels required when called:    7
 32415 ;; This function calls:
 32416 ;;		_delayUS
 32417 ;; This function is called by:
 32418 ;;		_InitBluetooth
 32419 ;;		_EnterCommandMode
 32420 ;; This function uses a non-reentrant model
 32421 ;;
 32422                           
 32423                           	psect	text83
 32424  009208                     __ptext83:
 32425                           	opt stack 0
 32426  009208                     _ResetBlue:
 32427                           	opt stack 21
 32428                           
 32429                           ;Bluetooth.c: 105: LATA &= ~0x04;
 32430                           
 32431                           ;incstack = 0
 32432  009208  9489               	bcf	3977,2,c	;volatile
 32433                           
 32434                           ;Bluetooth.c: 106: delayUS(50000);
 32435  00920A  0E50               	movlw	80
 32436  00920C  0100               	movlb	0	; () banked
 32437  00920E  6F79               	movwf	delayUS@US& (0+255),b
 32438  009210  0EC3               	movlw	195
 32439  009212  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 32440  009214  0E00               	movlw	0
 32441  009216  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 32442  009218  0E00               	movlw	0
 32443  00921A  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 32444  00921C  EC48  F047         	call	_delayUS	;wreg free
 32445                           
 32446                           ;Bluetooth.c: 107: LATA |= 0x04;
 32447  009220  8489               	bsf	3977,2,c	;volatile
 32448                           
 32449                           ;Bluetooth.c: 108: delayUS(50000);
 32450  009222  0E50               	movlw	80
 32451  009224  0100               	movlb	0	; () banked
 32452  009226  6F79               	movwf	delayUS@US& (0+255),b
 32453  009228  0EC3               	movlw	195
 32454  00922A  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 32455  00922C  0E00               	movlw	0
 32456  00922E  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 32457  009230  0E00               	movlw	0
 32458  009232  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 32459  009234  EC48  F047         	call	_delayUS	;wreg free
 32460  009238  0012               	return		;funcret
 32461  00923A                     __end_of_ResetBlue:
 32462                           	opt stack 0
 32463                           tblptru	equ	0xFF8
 32464                           tblptrh	equ	0xFF7
 32465                           tblptrl	equ	0xFF6
 32466                           tablat	equ	0xFF5
 32467                           prodh	equ	0xFF4
 32468                           prodl	equ	0xFF3
 32469                           intcon	equ	0xFF2
 32470                           intcon2	equ	0xFF1
 32471                           indf0	equ	0xFEF
 32472                           postinc0	equ	0xFEE
 32473                           fsr0h	equ	0xFEA
 32474                           fsr0l	equ	0xFE9
 32475                           wreg	equ	0xFE8
 32476                           indf1	equ	0xFE7
 32477                           postdec1	equ	0xFE5
 32478                           fsr1h	equ	0xFE2
 32479                           fsr1l	equ	0xFE1
 32480                           indf2	equ	0xFDF
 32481                           postinc2	equ	0xFDE
 32482                           postdec2	equ	0xFDD
 32483                           fsr2h	equ	0xFDA
 32484                           fsr2l	equ	0xFD9
 32485                           status	equ	0xFD8
 32486                           
 32487 ;; *************** function _delayUS *****************
 32488 ;; Defined at:
 32489 ;;		line 51 in file "MISC.c"
 32490 ;; Parameters:    Size  Location     Type
 32491 ;;  US              4   25[BANK0 ] long 
 32492 ;; Auto vars:     Size  Location     Type
 32493 ;;  i               4   30[BANK0 ] long 
 32494 ;; Return value:  Size  Location     Type
 32495 ;;		None               void
 32496 ;; Registers used:
 32497 ;;		wreg, status,2, status,0
 32498 ;; Tracked objects:
 32499 ;;		On entry : 0/0
 32500 ;;		On exit  : 0/0
 32501 ;;		Unchanged: 0/0
 32502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32503 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32504 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32505 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32506 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32507 ;;Total ram usage:        9 bytes
 32508 ;; Hardware stack levels used:    1
 32509 ;; Hardware stack levels required when called:    6
 32510 ;; This function calls:
 32511 ;;		Nothing
 32512 ;; This function is called by:
 32513 ;;		_main
 32514 ;;		_ReadVoltage
 32515 ;;		_InternalADC_Read
 32516 ;;		_UseIRCode
 32517 ;;		_SendNEC_wait
 32518 ;;		_ReadCodeButtons
 32519 ;;		_ResetBlue
 32520 ;;		_EnterCommandMode
 32521 ;;		_BluetoothInitialSetup
 32522 ;;		_UseBluetooth
 32523 ;;		_WaitForIRsignal
 32524 ;;		_CalibrateDelay
 32525 ;; This function uses a non-reentrant model
 32526 ;;
 32527                           
 32528                           	psect	text84
 32529  008E90                     __ptext84:
 32530                           	opt stack 0
 32531  008E90                     _delayUS:
 32532                           	opt stack 24
 32533                           
 32534                           ;MISC.c: 53: long i;
 32535                           ;MISC.c: 54: for(i=0; i<US; i += 2)
 32536                           
 32537                           ;incstack = 0
 32538  008E90  0E00               	movlw	0
 32539  008E92  0100               	movlb	0	; () banked
 32540  008E94  6F7E               	movwf	delayUS@i& (0+255),b
 32541  008E96  0E00               	movlw	0
 32542  008E98  6F7F               	movwf	(delayUS@i+1)& (0+255),b
 32543  008E9A  0E00               	movlw	0
 32544  008E9C  6F80               	movwf	(delayUS@i+2)& (0+255),b
 32545  008E9E  0E00               	movlw	0
 32546  008EA0  6F81               	movwf	(delayUS@i+3)& (0+255),b
 32547  008EA2  D008               	goto	l298
 32548  008EA4                     l299:
 32549                           
 32550                           ; BSR set to: 0
 32551                           ;MISC.c: 55: {
 32552                           ;MISC.c: 56: __nop();
 32553  008EA4  F000               	nop	
 32554  008EA6  0E02               	movlw	2
 32555  008EA8  0100               	movlb	0	; () banked
 32556  008EAA  277E               	addwf	delayUS@i& (0+255),f,b
 32557  008EAC  0E00               	movlw	0
 32558  008EAE  237F               	addwfc	(delayUS@i+1)& (0+255),f,b
 32559  008EB0  2380               	addwfc	(delayUS@i+2)& (0+255),f,b
 32560  008EB2  2381               	addwfc	(delayUS@i+3)& (0+255),f,b
 32561  008EB4                     l298:
 32562                           
 32563                           ; BSR set to: 0
 32564  008EB4  0100               	movlb	0	; () banked
 32565  008EB6  5179               	movf	delayUS@US& (0+255),w,b
 32566  008EB8  0100               	movlb	0	; () banked
 32567  008EBA  5D7E               	subwf	delayUS@i& (0+255),w,b
 32568  008EBC  0100               	movlb	0	; () banked
 32569  008EBE  517A               	movf	(delayUS@US+1)& (0+255),w,b
 32570  008EC0  0100               	movlb	0	; () banked
 32571  008EC2  597F               	subwfb	(delayUS@i+1)& (0+255),w,b
 32572  008EC4  0100               	movlb	0	; () banked
 32573  008EC6  517B               	movf	(delayUS@US+2)& (0+255),w,b
 32574  008EC8  0100               	movlb	0	; () banked
 32575  008ECA  5980               	subwfb	(delayUS@i+2)& (0+255),w,b
 32576  008ECC  0100               	movlb	0	; () banked
 32577  008ECE  5181               	movf	(delayUS@i+3)& (0+255),w,b
 32578  008ED0  0A80               	xorlw	128
 32579  008ED2  0100               	movlb	0	; () banked
 32580  008ED4  6F7D               	movwf	??_delayUS& (0+255),b
 32581  008ED6  0100               	movlb	0	; () banked
 32582  008ED8  517C               	movf	(delayUS@US+3)& (0+255),w,b
 32583  008EDA  0A80               	xorlw	128
 32584  008EDC  0100               	movlb	0	; () banked
 32585  008EDE  597D               	subwfb	??_delayUS& (0+255),w,b
 32586  008EE0  A0D8               	btfss	status,0,c
 32587  008EE2  D7E0               	goto	l299
 32588                           
 32589                           ; BSR set to: 0
 32590                           
 32591                           ; BSR set to: 0
 32592  008EE4  0012               	return		;funcret
 32593  008EE6                     __end_of_delayUS:
 32594                           	opt stack 0
 32595                           tblptru	equ	0xFF8
 32596                           tblptrh	equ	0xFF7
 32597                           tblptrl	equ	0xFF6
 32598                           tablat	equ	0xFF5
 32599                           prodh	equ	0xFF4
 32600                           prodl	equ	0xFF3
 32601                           intcon	equ	0xFF2
 32602                           intcon2	equ	0xFF1
 32603                           indf0	equ	0xFEF
 32604                           postinc0	equ	0xFEE
 32605                           fsr0h	equ	0xFEA
 32606                           fsr0l	equ	0xFE9
 32607                           wreg	equ	0xFE8
 32608                           indf1	equ	0xFE7
 32609                           postdec1	equ	0xFE5
 32610                           fsr1h	equ	0xFE2
 32611                           fsr1l	equ	0xFE1
 32612                           indf2	equ	0xFDF
 32613                           postinc2	equ	0xFDE
 32614                           postdec2	equ	0xFDD
 32615                           fsr2h	equ	0xFDA
 32616                           fsr2l	equ	0xFD9
 32617                           status	equ	0xFD8
 32618                           
 32619 ;; *************** function _BlueConnected *****************
 32620 ;; Defined at:
 32621 ;;		line 88 in file "Bluetooth.c"
 32622 ;; Parameters:    Size  Location     Type
 32623 ;;		None
 32624 ;; Auto vars:     Size  Location     Type
 32625 ;;		None
 32626 ;; Return value:  Size  Location     Type
 32627 ;;                  1    wreg      unsigned char 
 32628 ;; Registers used:
 32629 ;;		wreg
 32630 ;; Tracked objects:
 32631 ;;		On entry : 0/0
 32632 ;;		On exit  : 0/0
 32633 ;;		Unchanged: 0/0
 32634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32639 ;;Total ram usage:        0 bytes
 32640 ;; Hardware stack levels used:    1
 32641 ;; Hardware stack levels required when called:    6
 32642 ;; This function calls:
 32643 ;;		Nothing
 32644 ;; This function is called by:
 32645 ;;		_EnterCommandMode
 32646 ;; This function uses a non-reentrant model
 32647 ;;
 32648                           
 32649                           	psect	text85
 32650  0094D4                     __ptext85:
 32651                           	opt stack 0
 32652  0094D4                     _BlueConnected:
 32653                           	opt stack 20
 32654                           
 32655                           ;Bluetooth.c: 91: if((PORTA & 0x02) == 0x02)
 32656                           
 32657                           ; BSR set to: 0
 32658                           ;incstack = 0
 32659  0094D4  A280               	btfss	3968,1,c	;volatile
 32660  0094D6  D002               	goto	l12938
 32661                           
 32662                           ;Bluetooth.c: 92: {
 32663                           ;Bluetooth.c: 93: return 1;
 32664  0094D8  0E01               	movlw	1
 32665  0094DA  0012               	return	
 32666  0094DC                     l12938:
 32667                           
 32668                           ;Bluetooth.c: 94: }
 32669                           ;Bluetooth.c: 95: return 0;
 32670  0094DC  0E00               	movlw	0
 32671  0094DE  0012               	return	
 32672  0094E0  0012               	return		;funcret
 32673  0094E2                     __end_of_BlueConnected:
 32674                           	opt stack 0
 32675                           tblptru	equ	0xFF8
 32676                           tblptrh	equ	0xFF7
 32677                           tblptrl	equ	0xFF6
 32678                           tablat	equ	0xFF5
 32679                           prodh	equ	0xFF4
 32680                           prodl	equ	0xFF3
 32681                           intcon	equ	0xFF2
 32682                           intcon2	equ	0xFF1
 32683                           indf0	equ	0xFEF
 32684                           postinc0	equ	0xFEE
 32685                           fsr0h	equ	0xFEA
 32686                           fsr0l	equ	0xFE9
 32687                           wreg	equ	0xFE8
 32688                           indf1	equ	0xFE7
 32689                           postdec1	equ	0xFE5
 32690                           fsr1h	equ	0xFE2
 32691                           fsr1l	equ	0xFE1
 32692                           indf2	equ	0xFDF
 32693                           postinc2	equ	0xFDE
 32694                           postdec2	equ	0xFDD
 32695                           fsr2h	equ	0xFDA
 32696                           fsr2l	equ	0xFD9
 32697                           status	equ	0xFD8
 32698                           
 32699 ;; *************** function _BluetoothConfigured *****************
 32700 ;; Defined at:
 32701 ;;		line 264 in file "Bluetooth.c"
 32702 ;; Parameters:    Size  Location     Type
 32703 ;;		None
 32704 ;; Auto vars:     Size  Location     Type
 32705 ;;		None
 32706 ;; Return value:  Size  Location     Type
 32707 ;;                  1    wreg      unsigned char 
 32708 ;; Registers used:
 32709 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32710 ;; Tracked objects:
 32711 ;;		On entry : 0/0
 32712 ;;		On exit  : 0/0
 32713 ;;		Unchanged: 0/0
 32714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32719 ;;Total ram usage:        0 bytes
 32720 ;; Hardware stack levels used:    1
 32721 ;; Hardware stack levels required when called:   11
 32722 ;; This function calls:
 32723 ;;		_SyncGlobalToEEPROM
 32724 ;; This function is called by:
 32725 ;;		_InitBluetooth
 32726 ;; This function uses a non-reentrant model
 32727 ;;
 32728                           
 32729                           	psect	text86
 32730  00937E                     __ptext86:
 32731                           	opt stack 0
 32732  00937E                     _BluetoothConfigured:
 32733                           	opt stack 17
 32734                           
 32735                           ;Bluetooth.c: 266: if(Global.BlueToothFlag != 1)
 32736                           
 32737                           ;incstack = 0
 32738  00937E  0104               	movlb	4	; () banked
 32739  009380  0500               	decf	_Global& (0+255),w,b
 32740  009382  B4D8               	btfsc	status,2,c
 32741  009384  D007               	goto	l14160
 32742                           
 32743                           ; BSR set to: 4
 32744                           ;Bluetooth.c: 267: {
 32745                           ;Bluetooth.c: 268: Global.BlueToothFlag = 1;
 32746  009386  0E01               	movlw	1
 32747  009388  0104               	movlb	4	; () banked
 32748  00938A  6F00               	movwf	_Global& (0+255),b
 32749                           
 32750                           ; BSR set to: 4
 32751                           ;Bluetooth.c: 269: SyncGlobalToEEPROM();
 32752  00938C  ECE9  F047         	call	_SyncGlobalToEEPROM	;wreg free
 32753                           
 32754                           ;Bluetooth.c: 270: return 0;
 32755  009390  0E00               	movlw	0
 32756  009392  0012               	return	
 32757  009394                     l14160:
 32758                           
 32759                           ;Bluetooth.c: 271: }
 32760                           ;Bluetooth.c: 272: return 1;
 32761  009394  0E01               	movlw	1
 32762  009396  0012               	return	
 32763  009398  0012               	return		;funcret
 32764  00939A                     __end_of_BluetoothConfigured:
 32765                           	opt stack 0
 32766                           tblptru	equ	0xFF8
 32767                           tblptrh	equ	0xFF7
 32768                           tblptrl	equ	0xFF6
 32769                           tablat	equ	0xFF5
 32770                           prodh	equ	0xFF4
 32771                           prodl	equ	0xFF3
 32772                           intcon	equ	0xFF2
 32773                           intcon2	equ	0xFF1
 32774                           indf0	equ	0xFEF
 32775                           postinc0	equ	0xFEE
 32776                           fsr0h	equ	0xFEA
 32777                           fsr0l	equ	0xFE9
 32778                           wreg	equ	0xFE8
 32779                           indf1	equ	0xFE7
 32780                           postdec1	equ	0xFE5
 32781                           fsr1h	equ	0xFE2
 32782                           fsr1l	equ	0xFE1
 32783                           indf2	equ	0xFDF
 32784                           postinc2	equ	0xFDE
 32785                           postdec2	equ	0xFDD
 32786                           fsr2h	equ	0xFDA
 32787                           fsr2l	equ	0xFD9
 32788                           status	equ	0xFD8
 32789                           
 32790 ;; *************** function _SyncGlobalToEEPROM *****************
 32791 ;; Defined at:
 32792 ;;		line 239 in file "EEPROM.c"
 32793 ;; Parameters:    Size  Location     Type
 32794 ;;		None
 32795 ;; Auto vars:     Size  Location     Type
 32796 ;;		None
 32797 ;; Return value:  Size  Location     Type
 32798 ;;                  1    wreg      unsigned char 
 32799 ;; Registers used:
 32800 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32801 ;; Tracked objects:
 32802 ;;		On entry : 0/0
 32803 ;;		On exit  : 0/0
 32804 ;;		Unchanged: 0/0
 32805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32810 ;;Total ram usage:        0 bytes
 32811 ;; Hardware stack levels used:    1
 32812 ;; Hardware stack levels required when called:   10
 32813 ;; This function calls:
 32814 ;;		_SetEEPROM
 32815 ;; This function is called by:
 32816 ;;		_Init_System
 32817 ;;		_SetEEPROMdefault
 32818 ;;		_UseIRCode
 32819 ;;		_BluetoothConfigured
 32820 ;;		_UseBluetooth
 32821 ;; This function uses a non-reentrant model
 32822 ;;
 32823                           
 32824                           	psect	text87
 32825  008FD2                     __ptext87:
 32826                           	opt stack 0
 32827  008FD2                     _SyncGlobalToEEPROM:
 32828                           	opt stack 19
 32829                           
 32830                           ;EEPROM.c: 242: if(!SetEEPROM(Global,0xFFFFFFFF))
 32831                           
 32832                           ;incstack = 0
 32833  008FD2  EE24  F000         	lfsr	2,_Global
 32834  008FD6  EE01  F000         	lfsr	0,SetEEPROM@Temp
 32835  008FDA  0E87               	movlw	135
 32836  008FDC                     u15831:
 32837  008FDC  CFDB FFEB          	movff	plusw2,plusw0
 32838  008FE0  06E8               	decf	wreg,f,c
 32839  008FE2  E2FC               	bc	u15831
 32840  008FE4  0EFF               	movlw	255
 32841  008FE6  0101               	movlb	1	; () banked
 32842  008FE8  6F88               	movwf	SetEEPROM@burn& (0+255),b
 32843  008FEA  0EFF               	movlw	255
 32844  008FEC  6F89               	movwf	(SetEEPROM@burn+1)& (0+255),b
 32845  008FEE  0EFF               	movlw	255
 32846  008FF0  6F8A               	movwf	(SetEEPROM@burn+2)& (0+255),b
 32847  008FF2  0EFF               	movlw	255
 32848  008FF4  6F8B               	movwf	(SetEEPROM@burn+3)& (0+255),b
 32849  008FF6  EC1E  F032         	call	_SetEEPROM	;wreg free
 32850  008FFA  0101               	movlb	1	; () banked
 32851  008FFC  5100               	movf	?_SetEEPROM& (0+255),w,b
 32852  008FFE  0101               	movlb	1	; () banked
 32853  009000  1101               	iorwf	(?_SetEEPROM+1)& (0+255),w,b
 32854  009002  0101               	movlb	1	; () banked
 32855  009004  1102               	iorwf	(?_SetEEPROM+2)& (0+255),w,b
 32856  009006  0101               	movlb	1	; () banked
 32857  009008  1103               	iorwf	(?_SetEEPROM+3)& (0+255),w,b
 32858  00900A  A4D8               	btfss	status,2,c
 32859  00900C  D002               	goto	l13278
 32860                           
 32861                           ; BSR set to: 1
 32862                           ;EEPROM.c: 243: {
 32863                           ;EEPROM.c: 244: return 1;
 32864  00900E  0E01               	movlw	1
 32865                           
 32866                           ; BSR set to: 1
 32867  009010  0012               	return	
 32868  009012                     l13278:
 32869                           
 32870                           ; BSR set to: 1
 32871                           ;EEPROM.c: 245: }
 32872                           ;EEPROM.c: 246: return 0;
 32873  009012  0E00               	movlw	0
 32874  009014  0012               	return	
 32875                           
 32876                           ; BSR set to: 1
 32877                           
 32878                           ; BSR set to: 1
 32879  009016  0012               	return		;funcret
 32880  009018                     __end_of_SyncGlobalToEEPROM:
 32881                           	opt stack 0
 32882                           tblptru	equ	0xFF8
 32883                           tblptrh	equ	0xFF7
 32884                           tblptrl	equ	0xFF6
 32885                           tablat	equ	0xFF5
 32886                           prodh	equ	0xFF4
 32887                           prodl	equ	0xFF3
 32888                           intcon	equ	0xFF2
 32889                           intcon2	equ	0xFF1
 32890                           indf0	equ	0xFEF
 32891                           postinc0	equ	0xFEE
 32892                           plusw0	equ	0xFEB
 32893                           fsr0h	equ	0xFEA
 32894                           fsr0l	equ	0xFE9
 32895                           wreg	equ	0xFE8
 32896                           indf1	equ	0xFE7
 32897                           postdec1	equ	0xFE5
 32898                           fsr1h	equ	0xFE2
 32899                           fsr1l	equ	0xFE1
 32900                           indf2	equ	0xFDF
 32901                           postinc2	equ	0xFDE
 32902                           postdec2	equ	0xFDD
 32903                           plusw2	equ	0xFDB
 32904                           fsr2h	equ	0xFDA
 32905                           fsr2l	equ	0xFD9
 32906                           status	equ	0xFD8
 32907                           
 32908 ;; *************** function _SetEEPROM *****************
 32909 ;; Defined at:
 32910 ;;		line 167 in file "EEPROM.c"
 32911 ;; Parameters:    Size  Location     Type
 32912 ;;  Temp          136    0[BANK1 ] struct EEdata
 32913 ;;  burn            4  136[BANK1 ] unsigned long 
 32914 ;; Auto vars:     Size  Location     Type
 32915 ;;  fail            4   81[BANK0 ] unsigned long 
 32916 ;;  j               1   89[BANK0 ] unsigned char 
 32917 ;;  i               1   88[BANK0 ] unsigned char 
 32918 ;;  k               1   87[BANK0 ] unsigned char 
 32919 ;;  Arrayspot       1   86[BANK0 ] unsigned char 
 32920 ;;  temp            1   85[BANK0 ] unsigned char 
 32921 ;; Return value:  Size  Location     Type
 32922 ;;                  4    0[BANK1 ] unsigned long 
 32923 ;; Registers used:
 32924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32925 ;; Tracked objects:
 32926 ;;		On entry : 0/0
 32927 ;;		On exit  : 0/0
 32928 ;;		Unchanged: 0/0
 32929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32930 ;;      Params:         0       0     140       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32931 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32932 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32933 ;;      Totals:         0      11     140       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32934 ;;Total ram usage:      151 bytes
 32935 ;; Hardware stack levels used:    1
 32936 ;; Hardware stack levels required when called:    9
 32937 ;; This function calls:
 32938 ;;		_SetMemoryChar
 32939 ;;		_SetMemoryLong
 32940 ;; This function is called by:
 32941 ;;		_SyncGlobalToEEPROM
 32942 ;; This function uses a non-reentrant model
 32943 ;;
 32944                           
 32945                           	psect	text88
 32946  00643C                     __ptext88:
 32947                           	opt stack 0
 32948  00643C                     _SetEEPROM:
 32949                           	opt stack 19
 32950                           
 32951                           ;EEPROM.c: 169: unsigned long fail = 0;
 32952                           
 32953                           ; BSR set to: 1
 32954                           ;incstack = 0
 32955  00643C  0E00               	movlw	0
 32956  00643E  0100               	movlb	0	; () banked
 32957  006440  6FB1               	movwf	SetEEPROM@fail& (0+255),b
 32958  006442  0E00               	movlw	0
 32959  006444  6FB2               	movwf	(SetEEPROM@fail+1)& (0+255),b
 32960  006446  0E00               	movlw	0
 32961  006448  6FB3               	movwf	(SetEEPROM@fail+2)& (0+255),b
 32962  00644A  0E00               	movlw	0
 32963  00644C  6FB4               	movwf	(SetEEPROM@fail+3)& (0+255),b
 32964                           
 32965                           ;EEPROM.c: 170: unsigned char i,j,k,temp;
 32966                           ;EEPROM.c: 171: unsigned char Arrayspot=5;
 32967  00644E  0E05               	movlw	5
 32968  006450  0100               	movlb	0	; () banked
 32969  006452  6FB6               	movwf	SetEEPROM@Arrayspot& (0+255),b
 32970                           
 32971                           ; BSR set to: 0
 32972                           ;EEPROM.c: 173: if(burn & 0x00000001)
 32973  006454  0101               	movlb	1	; () banked
 32974  006456  A188               	btfss	SetEEPROM@burn& (0+255),0,b
 32975  006458  D00D               	goto	l12860
 32976                           
 32977                           ; BSR set to: 1
 32978                           ;EEPROM.c: 174: {
 32979                           ;EEPROM.c: 175: if(!SetMemoryChar(Temp.BlueToothFlag,0))
 32980  00645A  0E00               	movlw	0
 32981  00645C  0100               	movlb	0	; () banked
 32982  00645E  6F83               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 32983  006460  0101               	movlb	1	; () banked
 32984  006462  5100               	movf	SetEEPROM@Temp& (0+255),w,b
 32985  006464  ECB0  F048         	call	_SetMemoryChar
 32986  006468  0900               	iorlw	0
 32987  00646A  A4D8               	btfss	status,2,c
 32988  00646C  D003               	goto	l12860
 32989                           
 32990                           ;EEPROM.c: 176: {
 32991                           ;EEPROM.c: 178: fail |= 0x00000001;
 32992  00646E  0100               	movlb	0	; () banked
 32993  006470  81B1               	bsf	SetEEPROM@fail& (0+255),0,b
 32994                           
 32995                           ; BSR set to: 0
 32996  006472  D000               	goto	l12860
 32997  006474                     l12860:
 32998                           
 32999                           ;EEPROM.c: 179: }
 33000                           ;EEPROM.c: 180: }
 33001                           ;EEPROM.c: 181: if(burn & 0x00000002)
 33002  006474  0101               	movlb	1	; () banked
 33003  006476  A388               	btfss	SetEEPROM@burn& (0+255),1,b
 33004  006478  D013               	goto	l12866
 33005                           
 33006                           ; BSR set to: 1
 33007                           ;EEPROM.c: 182: {
 33008                           ;EEPROM.c: 183: if(!SetMemoryLong(Temp.SWNECcode,1))
 33009  00647A  C101  F09E         	movff	SetEEPROM@Temp+1,SetMemoryLong@Data
 33010  00647E  C102  F09F         	movff	SetEEPROM@Temp+2,SetMemoryLong@Data+1
 33011  006482  C103  F0A0         	movff	SetEEPROM@Temp+3,SetMemoryLong@Data+2
 33012  006486  C104  F0A1         	movff	SetEEPROM@Temp+4,SetMemoryLong@Data+3
 33013  00648A  0E01               	movlw	1
 33014  00648C  0100               	movlb	0	; () banked
 33015  00648E  6FA2               	movwf	SetMemoryLong@AddressFirst& (0+255),b
 33016  006490  EC26  F03D         	call	_SetMemoryLong	;wreg free
 33017  006494  0900               	iorlw	0
 33018  006496  A4D8               	btfss	status,2,c
 33019  006498  D003               	goto	l12866
 33020                           
 33021                           ;EEPROM.c: 184: {
 33022                           ;EEPROM.c: 186: fail |= 0x00000002;
 33023  00649A  0100               	movlb	0	; () banked
 33024  00649C  83B1               	bsf	SetEEPROM@fail& (0+255),1,b
 33025                           
 33026                           ; BSR set to: 0
 33027  00649E  D000               	goto	l12866
 33028  0064A0                     l12866:
 33029                           
 33030                           ;EEPROM.c: 187: }
 33031                           ;EEPROM.c: 188: }
 33032                           ;EEPROM.c: 189: if(burn & 0x00000004)
 33033  0064A0  0101               	movlb	1	; () banked
 33034  0064A2  A588               	btfss	SetEEPROM@burn& (0+255),2,b
 33035  0064A4  D047               	goto	l953
 33036                           
 33037                           ; BSR set to: 1
 33038                           ;EEPROM.c: 190: {
 33039                           ;EEPROM.c: 191: for(i=0; i< 20; i++)
 33040  0064A6  0E00               	movlw	0
 33041  0064A8  0100               	movlb	0	; () banked
 33042  0064AA  6FB8               	movwf	SetEEPROM@i& (0+255),b
 33043  0064AC                     l12870:
 33044                           
 33045                           ; BSR set to: 0
 33046  0064AC  0E13               	movlw	19
 33047  0064AE  0100               	movlb	0	; () banked
 33048  0064B0  65B8               	cpfsgt	SetEEPROM@i& (0+255),b
 33049  0064B2  D001               	goto	l12874
 33050                           
 33051                           ; BSR set to: 0
 33052  0064B4  D03F               	goto	l953
 33053  0064B6                     l12874:
 33054                           
 33055                           ; BSR set to: 0
 33056                           ;EEPROM.c: 192: {
 33057                           ;EEPROM.c: 193: for(j=0; j < 2; j++)
 33058  0064B6  0E00               	movlw	0
 33059  0064B8  0100               	movlb	0	; () banked
 33060  0064BA  6FB9               	movwf	SetEEPROM@j& (0+255),b
 33061  0064BC                     l12876:
 33062                           
 33063                           ; BSR set to: 0
 33064  0064BC  0E01               	movlw	1
 33065  0064BE  0100               	movlb	0	; () banked
 33066  0064C0  65B9               	cpfsgt	SetEEPROM@j& (0+255),b
 33067  0064C2  D001               	goto	l12880
 33068                           
 33069                           ; BSR set to: 0
 33070  0064C4  D034               	goto	l12888
 33071  0064C6                     l12880:
 33072                           
 33073                           ; BSR set to: 0
 33074                           ;EEPROM.c: 194: {
 33075                           ;EEPROM.c: 195: temp = Temp.RemoteButtonNEC[i][j];
 33076  0064C6  0100               	movlb	0	; () banked
 33077  0064C8  51B8               	movf	SetEEPROM@i& (0+255),w,b
 33078  0064CA  0D02               	mullw	2
 33079  0064CC  0E00               	movlw	low SetEEPROM@Temp
 33080  0064CE  0100               	movlb	0	; () banked
 33081  0064D0  6FAF               	movwf	??_SetEEPROM& (0+255),b
 33082  0064D2  0E01               	movlw	high SetEEPROM@Temp
 33083  0064D4  0100               	movlb	0	; () banked
 33084  0064D6  6FB0               	movwf	(??_SetEEPROM+1)& (0+255),b
 33085  0064D8  50F3               	movf	prodl,w,c
 33086  0064DA  0100               	movlb	0	; () banked
 33087  0064DC  27AF               	addwf	??_SetEEPROM& (0+255),f,b
 33088  0064DE  50F4               	movf	prodh,w,c
 33089  0064E0  0100               	movlb	0	; () banked
 33090  0064E2  23B0               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33091  0064E4  0100               	movlb	0	; () banked
 33092  0064E6  51B9               	movf	SetEEPROM@j& (0+255),w,b
 33093  0064E8  0D01               	mullw	1
 33094  0064EA  50F3               	movf	prodl,w,c
 33095  0064EC  0100               	movlb	0	; () banked
 33096  0064EE  27AF               	addwf	??_SetEEPROM& (0+255),f,b
 33097  0064F0  50F4               	movf	prodh,w,c
 33098  0064F2  0100               	movlb	0	; () banked
 33099  0064F4  23B0               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33100  0064F6  0E05               	movlw	5
 33101  0064F8  0100               	movlb	0	; () banked
 33102  0064FA  25AF               	addwf	??_SetEEPROM& (0+255),w,b
 33103  0064FC  6ED9               	movwf	fsr2l,c
 33104  0064FE  0E00               	movlw	0
 33105  006500  0100               	movlb	0	; () banked
 33106  006502  21B0               	addwfc	(??_SetEEPROM+1)& (0+255),w,b
 33107  006504  6EDA               	movwf	fsr2h,c
 33108  006506  50DF               	movf	indf2,w,c
 33109  006508  0100               	movlb	0	; () banked
 33110  00650A  6FB5               	movwf	SetEEPROM@temp& (0+255),b
 33111                           
 33112                           ; BSR set to: 0
 33113                           ;EEPROM.c: 196: if(!SetMemoryChar(temp,Arrayspot++))
 33114  00650C  0100               	movlb	0	; () banked
 33115  00650E  2BB6               	incf	SetEEPROM@Arrayspot& (0+255),f,b
 33116  006510  05B6               	decf	SetEEPROM@Arrayspot& (0+255),w,b
 33117  006512  0100               	movlb	0	; () banked
 33118  006514  6F83               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 33119  006516  0100               	movlb	0	; () banked
 33120  006518  51B5               	movf	SetEEPROM@temp& (0+255),w,b
 33121  00651A  ECB0  F048         	call	_SetMemoryChar
 33122  00651E  0900               	iorlw	0
 33123  006520  A4D8               	btfss	status,2,c
 33124  006522  D002               	goto	l958
 33125                           
 33126                           ;EEPROM.c: 197: {
 33127                           ;EEPROM.c: 199: fail |= 0x00000004;
 33128  006524  0100               	movlb	0	; () banked
 33129  006526  85B1               	bsf	SetEEPROM@fail& (0+255),2,b
 33130  006528                     l958:
 33131  006528  0100               	movlb	0	; () banked
 33132  00652A  2BB9               	incf	SetEEPROM@j& (0+255),f,b
 33133  00652C  D7C7               	goto	l12876
 33134  00652E                     l12888:
 33135                           
 33136                           ; BSR set to: 0
 33137  00652E  0100               	movlb	0	; () banked
 33138  006530  2BB8               	incf	SetEEPROM@i& (0+255),f,b
 33139  006532  D7BC               	goto	l12870
 33140  006534                     l953:
 33141                           
 33142                           ;EEPROM.c: 200: }
 33143                           ;EEPROM.c: 201: }
 33144                           ;EEPROM.c: 202: }
 33145                           ;EEPROM.c: 203: }
 33146                           ;EEPROM.c: 204: if(burn & 0x00000008)
 33147  006534  0101               	movlb	1	; () banked
 33148  006536  A788               	btfss	SetEEPROM@burn& (0+255),3,b
 33149  006538  D00D               	goto	l12896
 33150                           
 33151                           ; BSR set to: 1
 33152                           ;EEPROM.c: 205: {
 33153                           ;EEPROM.c: 206: if(!SetMemoryChar(Temp.EEPROMinitFlag,(2*20 + 5)))
 33154  00653A  0E2D               	movlw	45
 33155  00653C  0100               	movlb	0	; () banked
 33156  00653E  6F83               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 33157  006540  0101               	movlb	1	; () banked
 33158  006542  512D               	movf	(SetEEPROM@Temp+45)& (0+255),w,b
 33159  006544  ECB0  F048         	call	_SetMemoryChar
 33160  006548  0900               	iorlw	0
 33161  00654A  A4D8               	btfss	status,2,c
 33162  00654C  D003               	goto	l12896
 33163                           
 33164                           ;EEPROM.c: 207: {
 33165                           ;EEPROM.c: 209: fail |= 0x00000008;
 33166  00654E  0100               	movlb	0	; () banked
 33167  006550  87B1               	bsf	SetEEPROM@fail& (0+255),3,b
 33168                           
 33169                           ; BSR set to: 0
 33170  006552  D000               	goto	l12896
 33171  006554                     l12896:
 33172                           
 33173                           ;EEPROM.c: 210: }
 33174                           ;EEPROM.c: 211: }
 33175                           ;EEPROM.c: 212: if(burn & 0x00000010)
 33176  006554  0101               	movlb	1	; () banked
 33177  006556  A988               	btfss	SetEEPROM@burn& (0+255),4,b
 33178  006558  D05E               	goto	l961
 33179                           
 33180                           ; BSR set to: 1
 33181                           ;EEPROM.c: 213: {
 33182                           ;EEPROM.c: 214: Arrayspot=(2*20 + 7);
 33183  00655A  0E2F               	movlw	47
 33184  00655C  0100               	movlb	0	; () banked
 33185  00655E  6FB6               	movwf	SetEEPROM@Arrayspot& (0+255),b
 33186                           
 33187                           ;EEPROM.c: 215: for(i=0; i< 15; i++)
 33188  006560  0E00               	movlw	0
 33189  006562  0100               	movlb	0	; () banked
 33190  006564  6FB8               	movwf	SetEEPROM@i& (0+255),b
 33191  006566                     l12900:
 33192                           
 33193                           ; BSR set to: 0
 33194  006566  0E0E               	movlw	14
 33195  006568  0100               	movlb	0	; () banked
 33196  00656A  65B8               	cpfsgt	SetEEPROM@i& (0+255),b
 33197  00656C  D001               	goto	l12904
 33198                           
 33199                           ; BSR set to: 0
 33200  00656E  D053               	goto	l961
 33201  006570                     l12904:
 33202                           
 33203                           ; BSR set to: 0
 33204                           ;EEPROM.c: 216: {
 33205                           ;EEPROM.c: 217: for(j=0; j < 3; j++)
 33206  006570  0E00               	movlw	0
 33207  006572  0100               	movlb	0	; () banked
 33208  006574  6FB9               	movwf	SetEEPROM@j& (0+255),b
 33209  006576                     l12906:
 33210                           
 33211                           ; BSR set to: 0
 33212  006576  0E02               	movlw	2
 33213  006578  0100               	movlb	0	; () banked
 33214  00657A  65B9               	cpfsgt	SetEEPROM@j& (0+255),b
 33215  00657C  D001               	goto	l12910
 33216                           
 33217                           ; BSR set to: 0
 33218  00657E  D048               	goto	l12928
 33219  006580                     l12910:
 33220                           
 33221                           ; BSR set to: 0
 33222                           ;EEPROM.c: 218: {
 33223                           ;EEPROM.c: 219: for(k=0; k < 2; k++)
 33224  006580  0E00               	movlw	0
 33225  006582  0100               	movlb	0	; () banked
 33226  006584  6FB7               	movwf	SetEEPROM@k& (0+255),b
 33227  006586                     l12912:
 33228                           
 33229                           ; BSR set to: 0
 33230  006586  0E01               	movlw	1
 33231  006588  0100               	movlb	0	; () banked
 33232  00658A  65B7               	cpfsgt	SetEEPROM@k& (0+255),b
 33233  00658C  D001               	goto	l12916
 33234                           
 33235                           ; BSR set to: 0
 33236  00658E  D03D               	goto	l12924
 33237  006590                     l12916:
 33238                           
 33239                           ; BSR set to: 0
 33240                           ;EEPROM.c: 220: {
 33241                           ;EEPROM.c: 221: temp = Temp.RemoteButtonRF[i][j][k];
 33242  006590  0100               	movlb	0	; () banked
 33243  006592  51B8               	movf	SetEEPROM@i& (0+255),w,b
 33244  006594  0D06               	mullw	6
 33245  006596  0E00               	movlw	low SetEEPROM@Temp
 33246  006598  0100               	movlb	0	; () banked
 33247  00659A  6FAF               	movwf	??_SetEEPROM& (0+255),b
 33248  00659C  0E01               	movlw	high SetEEPROM@Temp
 33249  00659E  0100               	movlb	0	; () banked
 33250  0065A0  6FB0               	movwf	(??_SetEEPROM+1)& (0+255),b
 33251  0065A2  50F3               	movf	prodl,w,c
 33252  0065A4  0100               	movlb	0	; () banked
 33253  0065A6  27AF               	addwf	??_SetEEPROM& (0+255),f,b
 33254  0065A8  50F4               	movf	prodh,w,c
 33255  0065AA  0100               	movlb	0	; () banked
 33256  0065AC  23B0               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33257  0065AE  0100               	movlb	0	; () banked
 33258  0065B0  51B9               	movf	SetEEPROM@j& (0+255),w,b
 33259  0065B2  0D02               	mullw	2
 33260  0065B4  50F3               	movf	prodl,w,c
 33261  0065B6  0100               	movlb	0	; () banked
 33262  0065B8  27AF               	addwf	??_SetEEPROM& (0+255),f,b
 33263  0065BA  50F4               	movf	prodh,w,c
 33264  0065BC  0100               	movlb	0	; () banked
 33265  0065BE  23B0               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33266  0065C0  0100               	movlb	0	; () banked
 33267  0065C2  51B7               	movf	SetEEPROM@k& (0+255),w,b
 33268  0065C4  0D01               	mullw	1
 33269  0065C6  50F3               	movf	prodl,w,c
 33270  0065C8  0100               	movlb	0	; () banked
 33271  0065CA  27AF               	addwf	??_SetEEPROM& (0+255),f,b
 33272  0065CC  50F4               	movf	prodh,w,c
 33273  0065CE  0100               	movlb	0	; () banked
 33274  0065D0  23B0               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33275  0065D2  0E2E               	movlw	46
 33276  0065D4  0100               	movlb	0	; () banked
 33277  0065D6  25AF               	addwf	??_SetEEPROM& (0+255),w,b
 33278  0065D8  6ED9               	movwf	fsr2l,c
 33279  0065DA  0E00               	movlw	0
 33280  0065DC  0100               	movlb	0	; () banked
 33281  0065DE  21B0               	addwfc	(??_SetEEPROM+1)& (0+255),w,b
 33282  0065E0  6EDA               	movwf	fsr2h,c
 33283  0065E2  50DF               	movf	indf2,w,c
 33284  0065E4  0100               	movlb	0	; () banked
 33285  0065E6  6FB5               	movwf	SetEEPROM@temp& (0+255),b
 33286                           
 33287                           ; BSR set to: 0
 33288                           ;EEPROM.c: 222: if(!SetMemoryChar(temp,Arrayspot++))
 33289  0065E8  0100               	movlb	0	; () banked
 33290  0065EA  2BB6               	incf	SetEEPROM@Arrayspot& (0+255),f,b
 33291  0065EC  05B6               	decf	SetEEPROM@Arrayspot& (0+255),w,b
 33292  0065EE  0100               	movlb	0	; () banked
 33293  0065F0  6F83               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 33294  0065F2  0100               	movlb	0	; () banked
 33295  0065F4  51B5               	movf	SetEEPROM@temp& (0+255),w,b
 33296  0065F6  ECB0  F048         	call	_SetMemoryChar
 33297  0065FA  0900               	iorlw	0
 33298  0065FC  A4D8               	btfss	status,2,c
 33299  0065FE  D002               	goto	l968
 33300                           
 33301                           ;EEPROM.c: 223: {
 33302                           ;EEPROM.c: 225: fail |= 0x00000010;
 33303  006600  0100               	movlb	0	; () banked
 33304  006602  89B1               	bsf	SetEEPROM@fail& (0+255),4,b
 33305  006604                     l968:
 33306  006604  0100               	movlb	0	; () banked
 33307  006606  2BB7               	incf	SetEEPROM@k& (0+255),f,b
 33308  006608  D7BE               	goto	l12912
 33309  00660A                     l12924:
 33310                           
 33311                           ; BSR set to: 0
 33312  00660A  0100               	movlb	0	; () banked
 33313  00660C  2BB9               	incf	SetEEPROM@j& (0+255),f,b
 33314  00660E  D7B3               	goto	l12906
 33315  006610                     l12928:
 33316                           
 33317                           ; BSR set to: 0
 33318  006610  0100               	movlb	0	; () banked
 33319  006612  2BB8               	incf	SetEEPROM@i& (0+255),f,b
 33320  006614  D7A8               	goto	l12900
 33321  006616                     l961:
 33322                           
 33323                           ;EEPROM.c: 226: }
 33324                           ;EEPROM.c: 227: }
 33325                           ;EEPROM.c: 228: }
 33326                           ;EEPROM.c: 229: }
 33327                           ;EEPROM.c: 230: }
 33328                           ;EEPROM.c: 231: return fail;
 33329  006616  C0B1  F100         	movff	SetEEPROM@fail,?_SetEEPROM
 33330  00661A  C0B2  F101         	movff	SetEEPROM@fail+1,?_SetEEPROM+1
 33331  00661E  C0B3  F102         	movff	SetEEPROM@fail+2,?_SetEEPROM+2
 33332  006622  C0B4  F103         	movff	SetEEPROM@fail+3,?_SetEEPROM+3
 33333  006626  0012               	return		;funcret
 33334  006628                     __end_of_SetEEPROM:
 33335                           	opt stack 0
 33336                           tblptru	equ	0xFF8
 33337                           tblptrh	equ	0xFF7
 33338                           tblptrl	equ	0xFF6
 33339                           tablat	equ	0xFF5
 33340                           prodh	equ	0xFF4
 33341                           prodl	equ	0xFF3
 33342                           intcon	equ	0xFF2
 33343                           intcon2	equ	0xFF1
 33344                           indf0	equ	0xFEF
 33345                           postinc0	equ	0xFEE
 33346                           plusw0	equ	0xFEB
 33347                           fsr0h	equ	0xFEA
 33348                           fsr0l	equ	0xFE9
 33349                           wreg	equ	0xFE8
 33350                           indf1	equ	0xFE7
 33351                           postdec1	equ	0xFE5
 33352                           fsr1h	equ	0xFE2
 33353                           fsr1l	equ	0xFE1
 33354                           indf2	equ	0xFDF
 33355                           postinc2	equ	0xFDE
 33356                           postdec2	equ	0xFDD
 33357                           plusw2	equ	0xFDB
 33358                           fsr2h	equ	0xFDA
 33359                           fsr2l	equ	0xFD9
 33360                           status	equ	0xFD8
 33361                           
 33362 ;; *************** function _SetMemoryLong *****************
 33363 ;; Defined at:
 33364 ;;		line 360 in file "EEPROM.c"
 33365 ;; Parameters:    Size  Location     Type
 33366 ;;  Data            4   62[BANK0 ] unsigned long 
 33367 ;;  AddressFirst    1   66[BANK0 ] unsigned char 
 33368 ;; Auto vars:     Size  Location     Type
 33369 ;;  Test            4   71[BANK0 ] unsigned long 
 33370 ;;  L               1   78[BANK0 ] unsigned char 
 33371 ;;  ML              1   77[BANK0 ] unsigned char 
 33372 ;;  MH              1   76[BANK0 ] unsigned char 
 33373 ;;  H               1   75[BANK0 ] unsigned char 
 33374 ;; Return value:  Size  Location     Type
 33375 ;;                  1    wreg      unsigned char 
 33376 ;; Registers used:
 33377 ;;		wreg, status,2, status,0, cstack
 33378 ;; Tracked objects:
 33379 ;;		On entry : 0/0
 33380 ;;		On exit  : 0/0
 33381 ;;		Unchanged: 0/0
 33382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33383 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33384 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33385 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33386 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33387 ;;Total ram usage:       17 bytes
 33388 ;; Hardware stack levels used:    1
 33389 ;; Hardware stack levels required when called:    8
 33390 ;; This function calls:
 33391 ;;		_GetMemoryLong
 33392 ;;		_WriteEEPROM_1Byte
 33393 ;; This function is called by:
 33394 ;;		_SetEEPROM
 33395 ;; This function uses a non-reentrant model
 33396 ;;
 33397                           
 33398                           	psect	text89
 33399  007A4C                     __ptext89:
 33400                           	opt stack 0
 33401  007A4C                     _SetMemoryLong:
 33402                           	opt stack 19
 33403                           
 33404                           ;EEPROM.c: 362: unsigned char H;
 33405                           ;EEPROM.c: 363: unsigned char MH;
 33406                           ;EEPROM.c: 364: unsigned char ML;
 33407                           ;EEPROM.c: 365: unsigned char L;
 33408                           ;EEPROM.c: 366: unsigned long Test;
 33409                           ;EEPROM.c: 368: H = (unsigned char) ((Data & 0XFF000000) >> 24);
 33410                           
 33411                           ;incstack = 0
 33412  007A4C  0E00               	movlw	0
 33413  007A4E  0100               	movlb	0	; () banked
 33414  007A50  159E               	andwf	SetMemoryLong@Data& (0+255),w,b
 33415  007A52  0100               	movlb	0	; () banked
 33416  007A54  6FA3               	movwf	??_SetMemoryLong& (0+255),b
 33417  007A56  0E00               	movlw	0
 33418  007A58  0100               	movlb	0	; () banked
 33419  007A5A  159F               	andwf	(SetMemoryLong@Data+1)& (0+255),w,b
 33420  007A5C  0100               	movlb	0	; () banked
 33421  007A5E  6FA4               	movwf	(??_SetMemoryLong+1)& (0+255),b
 33422  007A60  0E00               	movlw	0
 33423  007A62  0100               	movlb	0	; () banked
 33424  007A64  15A0               	andwf	(SetMemoryLong@Data+2)& (0+255),w,b
 33425  007A66  0100               	movlb	0	; () banked
 33426  007A68  6FA5               	movwf	(??_SetMemoryLong+2)& (0+255),b
 33427  007A6A  0EFF               	movlw	255
 33428  007A6C  0100               	movlb	0	; () banked
 33429  007A6E  15A1               	andwf	(SetMemoryLong@Data+3)& (0+255),w,b
 33430  007A70  0100               	movlb	0	; () banked
 33431  007A72  6FA6               	movwf	(??_SetMemoryLong+3)& (0+255),b
 33432  007A74  0E19               	movlw	25
 33433  007A76  D006               	goto	u14640
 33434  007A78                     u14645:
 33435  007A78  0100               	movlb	0	; () banked
 33436  007A7A  90D8               	bcf	status,0,c
 33437  007A7C  33A6               	rrcf	(??_SetMemoryLong+3)& (0+255),f,b
 33438  007A7E  33A5               	rrcf	(??_SetMemoryLong+2)& (0+255),f,b
 33439  007A80  33A4               	rrcf	(??_SetMemoryLong+1)& (0+255),f,b
 33440  007A82  33A3               	rrcf	??_SetMemoryLong& (0+255),f,b
 33441  007A84                     u14640:
 33442  007A84  2EE8               	decfsz	wreg,f,c
 33443  007A86  D7F8               	goto	u14645
 33444  007A88  0100               	movlb	0	; () banked
 33445  007A8A  51A3               	movf	??_SetMemoryLong& (0+255),w,b
 33446  007A8C  0100               	movlb	0	; () banked
 33447  007A8E  6FAB               	movwf	SetMemoryLong@H& (0+255),b
 33448                           
 33449                           ; BSR set to: 0
 33450                           ;EEPROM.c: 369: MH = (unsigned char) ((Data & 0X00FF0000) >> 16);
 33451  007A90  C0A0  F0AC         	movff	SetMemoryLong@Data+2,SetMemoryLong@MH
 33452                           
 33453                           ; BSR set to: 0
 33454                           ;EEPROM.c: 370: ML = (unsigned char) ((Data & 0X0000FF00) >> 8);
 33455  007A94  C09F  F0AD         	movff	SetMemoryLong@Data+1,SetMemoryLong@ML
 33456                           
 33457                           ; BSR set to: 0
 33458                           ;EEPROM.c: 371: L = (unsigned char) (Data & 0X000000FF);
 33459  007A98  C09E  F0AE         	movff	SetMemoryLong@Data,SetMemoryLong@L
 33460                           
 33461                           ; BSR set to: 0
 33462                           ;EEPROM.c: 374: WriteEEPROM_1Byte(AddressFirst, H);
 33463  007A9C  C0A2  F079         	movff	SetMemoryLong@AddressFirst,WriteEEPROM_1Byte@address
 33464  007AA0  0100               	movlb	0	; () banked
 33465  007AA2  6B7A               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33466  007AA4  C0AB  F07B         	movff	SetMemoryLong@H,WriteEEPROM_1Byte@data
 33467  007AA8  EC04  F046         	call	_WriteEEPROM_1Byte	;wreg free
 33468                           
 33469                           ;EEPROM.c: 375: WriteEEPROM_1Byte((AddressFirst + 1), MH);
 33470  007AAC  0E01               	movlw	1
 33471  007AAE  0100               	movlb	0	; () banked
 33472  007AB0  25A2               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 33473  007AB2  0100               	movlb	0	; () banked
 33474  007AB4  6F79               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 33475  007AB6  0100               	movlb	0	; () banked
 33476  007AB8  6B7A               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33477  007ABA  0E00               	movlw	0
 33478  007ABC  237A               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 33479  007ABE  C0AC  F07B         	movff	SetMemoryLong@MH,WriteEEPROM_1Byte@data
 33480  007AC2  EC04  F046         	call	_WriteEEPROM_1Byte	;wreg free
 33481                           
 33482                           ;EEPROM.c: 376: WriteEEPROM_1Byte((AddressFirst + 2), ML);
 33483  007AC6  0E02               	movlw	2
 33484  007AC8  0100               	movlb	0	; () banked
 33485  007ACA  25A2               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 33486  007ACC  0100               	movlb	0	; () banked
 33487  007ACE  6F79               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 33488  007AD0  0100               	movlb	0	; () banked
 33489  007AD2  6B7A               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33490  007AD4  0E00               	movlw	0
 33491  007AD6  237A               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 33492  007AD8  C0AD  F07B         	movff	SetMemoryLong@ML,WriteEEPROM_1Byte@data
 33493  007ADC  EC04  F046         	call	_WriteEEPROM_1Byte	;wreg free
 33494                           
 33495                           ;EEPROM.c: 377: WriteEEPROM_1Byte((AddressFirst + 3), L);
 33496  007AE0  0E03               	movlw	3
 33497  007AE2  0100               	movlb	0	; () banked
 33498  007AE4  25A2               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 33499  007AE6  0100               	movlb	0	; () banked
 33500  007AE8  6F79               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 33501  007AEA  0100               	movlb	0	; () banked
 33502  007AEC  6B7A               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33503  007AEE  0E00               	movlw	0
 33504  007AF0  237A               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 33505  007AF2  C0AE  F07B         	movff	SetMemoryLong@L,WriteEEPROM_1Byte@data
 33506  007AF6  EC04  F046         	call	_WriteEEPROM_1Byte	;wreg free
 33507                           
 33508                           ;EEPROM.c: 380: Test = GetMemoryLong(AddressFirst);
 33509  007AFA  0100               	movlb	0	; () banked
 33510  007AFC  51A2               	movf	SetMemoryLong@AddressFirst& (0+255),w,b
 33511  007AFE  EC5F  F036         	call	_GetMemoryLong
 33512  007B02  C07D  F0A7         	movff	?_GetMemoryLong,SetMemoryLong@Test
 33513  007B06  C07E  F0A8         	movff	?_GetMemoryLong+1,SetMemoryLong@Test+1
 33514  007B0A  C07F  F0A9         	movff	?_GetMemoryLong+2,SetMemoryLong@Test+2
 33515  007B0E  C080  F0AA         	movff	?_GetMemoryLong+3,SetMemoryLong@Test+3
 33516                           
 33517                           ;EEPROM.c: 382: if(Test == Data)
 33518  007B12  0100               	movlb	0	; () banked
 33519  007B14  519E               	movf	SetMemoryLong@Data& (0+255),w,b
 33520  007B16  0100               	movlb	0	; () banked
 33521  007B18  19A7               	xorwf	SetMemoryLong@Test& (0+255),w,b
 33522  007B1A  E112               	bnz	l12592
 33523  007B1C  0100               	movlb	0	; () banked
 33524  007B1E  519F               	movf	(SetMemoryLong@Data+1)& (0+255),w,b
 33525  007B20  0100               	movlb	0	; () banked
 33526  007B22  19A8               	xorwf	(SetMemoryLong@Test+1)& (0+255),w,b
 33527  007B24  E10D               	bnz	l12592
 33528  007B26  0100               	movlb	0	; () banked
 33529  007B28  51A0               	movf	(SetMemoryLong@Data+2)& (0+255),w,b
 33530  007B2A  0100               	movlb	0	; () banked
 33531  007B2C  19A9               	xorwf	(SetMemoryLong@Test+2)& (0+255),w,b
 33532  007B2E  E108               	bnz	l12592
 33533  007B30  0100               	movlb	0	; () banked
 33534  007B32  51A1               	movf	(SetMemoryLong@Data+3)& (0+255),w,b
 33535  007B34  0100               	movlb	0	; () banked
 33536  007B36  19AA               	xorwf	(SetMemoryLong@Test+3)& (0+255),w,b
 33537  007B38  A4D8               	btfss	status,2,c
 33538  007B3A  D002               	goto	l12592
 33539                           
 33540                           ; BSR set to: 0
 33541                           ;EEPROM.c: 383: {
 33542                           ;EEPROM.c: 384: return 1;
 33543  007B3C  0E01               	movlw	1
 33544                           
 33545                           ; BSR set to: 0
 33546  007B3E  0012               	return	
 33547  007B40                     l12592:
 33548                           
 33549                           ; BSR set to: 0
 33550                           ;EEPROM.c: 385: }
 33551                           ;EEPROM.c: 386: return 0;
 33552  007B40  0E00               	movlw	0
 33553  007B42  0012               	return	
 33554                           
 33555                           ; BSR set to: 0
 33556                           
 33557                           ; BSR set to: 0
 33558  007B44  0012               	return		;funcret
 33559  007B46                     __end_of_SetMemoryLong:
 33560                           	opt stack 0
 33561                           tblptru	equ	0xFF8
 33562                           tblptrh	equ	0xFF7
 33563                           tblptrl	equ	0xFF6
 33564                           tablat	equ	0xFF5
 33565                           prodh	equ	0xFF4
 33566                           prodl	equ	0xFF3
 33567                           intcon	equ	0xFF2
 33568                           intcon2	equ	0xFF1
 33569                           indf0	equ	0xFEF
 33570                           postinc0	equ	0xFEE
 33571                           plusw0	equ	0xFEB
 33572                           fsr0h	equ	0xFEA
 33573                           fsr0l	equ	0xFE9
 33574                           wreg	equ	0xFE8
 33575                           indf1	equ	0xFE7
 33576                           postdec1	equ	0xFE5
 33577                           fsr1h	equ	0xFE2
 33578                           fsr1l	equ	0xFE1
 33579                           indf2	equ	0xFDF
 33580                           postinc2	equ	0xFDE
 33581                           postdec2	equ	0xFDD
 33582                           plusw2	equ	0xFDB
 33583                           fsr2h	equ	0xFDA
 33584                           fsr2l	equ	0xFD9
 33585                           status	equ	0xFD8
 33586                           
 33587 ;; *************** function _GetMemoryLong *****************
 33588 ;; Defined at:
 33589 ;;		line 337 in file "EEPROM.c"
 33590 ;; Parameters:    Size  Location     Type
 33591 ;;  AddressFirst    1    wreg     unsigned char 
 33592 ;; Auto vars:     Size  Location     Type
 33593 ;;  AddressFirst    1   61[BANK0 ] unsigned char 
 33594 ;;  temp            4   53[BANK0 ] unsigned long 
 33595 ;;  L               1   60[BANK0 ] unsigned char 
 33596 ;;  ML              1   59[BANK0 ] unsigned char 
 33597 ;;  MH              1   58[BANK0 ] unsigned char 
 33598 ;;  H               1   57[BANK0 ] unsigned char 
 33599 ;; Return value:  Size  Location     Type
 33600 ;;                  4   29[BANK0 ] unsigned long 
 33601 ;; Registers used:
 33602 ;;		wreg, status,2, status,0, cstack
 33603 ;; Tracked objects:
 33604 ;;		On entry : 0/0
 33605 ;;		On exit  : 0/0
 33606 ;;		Unchanged: 0/0
 33607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33608 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33609 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33610 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33611 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33612 ;;Total ram usage:       33 bytes
 33613 ;; Hardware stack levels used:    1
 33614 ;; Hardware stack levels required when called:    7
 33615 ;; This function calls:
 33616 ;;		_ReadEEPROM_1Byte
 33617 ;; This function is called by:
 33618 ;;		_GetEEPROM
 33619 ;;		_SetMemoryLong
 33620 ;; This function uses a non-reentrant model
 33621 ;;
 33622                           
 33623                           	psect	text90
 33624  006CBE                     __ptext90:
 33625                           	opt stack 0
 33626  006CBE                     _GetMemoryLong:
 33627                           	opt stack 19
 33628                           
 33629                           ; BSR set to: 0
 33630                           ;incstack = 0
 33631                           ;GetMemoryLong@AddressFirst stored from wreg
 33632  006CBE  0100               	movlb	0	; () banked
 33633  006CC0  6F9D               	movwf	GetMemoryLong@AddressFirst& (0+255),b
 33634                           
 33635                           ; BSR set to: 0
 33636                           ;EEPROM.c: 339: unsigned char H;
 33637                           ;EEPROM.c: 340: unsigned char MH;
 33638                           ;EEPROM.c: 341: unsigned char ML;
 33639                           ;EEPROM.c: 342: unsigned char L;
 33640                           ;EEPROM.c: 343: unsigned long temp =0;
 33641  006CC2  0E00               	movlw	0
 33642  006CC4  0100               	movlb	0	; () banked
 33643  006CC6  6F95               	movwf	GetMemoryLong@temp& (0+255),b
 33644  006CC8  0E00               	movlw	0
 33645  006CCA  6F96               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 33646  006CCC  0E00               	movlw	0
 33647  006CCE  6F97               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 33648  006CD0  0E00               	movlw	0
 33649  006CD2  6F98               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 33650                           
 33651                           ; BSR set to: 0
 33652                           ;EEPROM.c: 345: H = ReadEEPROM_1Byte(AddressFirst);
 33653  006CD4  C09D  F079         	movff	GetMemoryLong@AddressFirst,ReadEEPROM_1Byte@address
 33654  006CD8  0100               	movlb	0	; () banked
 33655  006CDA  6B7A               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33656  006CDC  ECD1  F045         	call	_ReadEEPROM_1Byte	;wreg free
 33657  006CE0  0100               	movlb	0	; () banked
 33658  006CE2  5179               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33659  006CE4  0100               	movlb	0	; () banked
 33660  006CE6  6F99               	movwf	GetMemoryLong@H& (0+255),b
 33661                           
 33662                           ; BSR set to: 0
 33663                           ;EEPROM.c: 346: MH = ReadEEPROM_1Byte(AddressFirst + 1);
 33664  006CE8  0E01               	movlw	1
 33665  006CEA  0100               	movlb	0	; () banked
 33666  006CEC  259D               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 33667  006CEE  0100               	movlb	0	; () banked
 33668  006CF0  6F79               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 33669  006CF2  0100               	movlb	0	; () banked
 33670  006CF4  6B7A               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33671  006CF6  0E00               	movlw	0
 33672  006CF8  237A               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 33673  006CFA  ECD1  F045         	call	_ReadEEPROM_1Byte	;wreg free
 33674  006CFE  0100               	movlb	0	; () banked
 33675  006D00  5179               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33676  006D02  0100               	movlb	0	; () banked
 33677  006D04  6F9A               	movwf	GetMemoryLong@MH& (0+255),b
 33678                           
 33679                           ; BSR set to: 0
 33680                           ;EEPROM.c: 347: ML = ReadEEPROM_1Byte(AddressFirst + 2);
 33681  006D06  0E02               	movlw	2
 33682  006D08  0100               	movlb	0	; () banked
 33683  006D0A  259D               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 33684  006D0C  0100               	movlb	0	; () banked
 33685  006D0E  6F79               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 33686  006D10  0100               	movlb	0	; () banked
 33687  006D12  6B7A               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33688  006D14  0E00               	movlw	0
 33689  006D16  237A               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 33690  006D18  ECD1  F045         	call	_ReadEEPROM_1Byte	;wreg free
 33691  006D1C  0100               	movlb	0	; () banked
 33692  006D1E  5179               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33693  006D20  0100               	movlb	0	; () banked
 33694  006D22  6F9B               	movwf	GetMemoryLong@ML& (0+255),b
 33695                           
 33696                           ; BSR set to: 0
 33697                           ;EEPROM.c: 348: L = ReadEEPROM_1Byte(AddressFirst + 3);
 33698  006D24  0E03               	movlw	3
 33699  006D26  0100               	movlb	0	; () banked
 33700  006D28  259D               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 33701  006D2A  0100               	movlb	0	; () banked
 33702  006D2C  6F79               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 33703  006D2E  0100               	movlb	0	; () banked
 33704  006D30  6B7A               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33705  006D32  0E00               	movlw	0
 33706  006D34  237A               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 33707  006D36  ECD1  F045         	call	_ReadEEPROM_1Byte	;wreg free
 33708  006D3A  0100               	movlb	0	; () banked
 33709  006D3C  5179               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33710  006D3E  0100               	movlb	0	; () banked
 33711  006D40  6F9C               	movwf	GetMemoryLong@L& (0+255),b
 33712                           
 33713                           ; BSR set to: 0
 33714                           ;EEPROM.c: 350: temp = (((unsigned long) H << 24) + ((unsigned long)MH << 16)
 33715                           ;EEPROM.c: 351: + ((unsigned long)ML << 8) + (unsigned long)L);
 33716  006D42  C09B  F081         	movff	GetMemoryLong@ML,??_GetMemoryLong
 33717  006D46  0100               	movlb	0	; () banked
 33718  006D48  6B82               	clrf	(??_GetMemoryLong+1)& (0+255),b
 33719  006D4A  6B83               	clrf	(??_GetMemoryLong+2)& (0+255),b
 33720  006D4C  6B84               	clrf	(??_GetMemoryLong+3)& (0+255),b
 33721  006D4E  C083  F084         	movff	??_GetMemoryLong+2,??_GetMemoryLong+3
 33722  006D52  C082  F083         	movff	??_GetMemoryLong+1,??_GetMemoryLong+2
 33723  006D56  C081  F082         	movff	??_GetMemoryLong,??_GetMemoryLong+1
 33724  006D5A  0100               	movlb	0	; () banked
 33725  006D5C  6B81               	clrf	??_GetMemoryLong& (0+255),b
 33726  006D5E  C09A  F085         	movff	GetMemoryLong@MH,??_GetMemoryLong+4
 33727  006D62  0100               	movlb	0	; () banked
 33728  006D64  6B86               	clrf	(??_GetMemoryLong+5)& (0+255),b
 33729  006D66  6B87               	clrf	(??_GetMemoryLong+6)& (0+255),b
 33730  006D68  6B88               	clrf	(??_GetMemoryLong+7)& (0+255),b
 33731  006D6A  C086  F088         	movff	??_GetMemoryLong+5,??_GetMemoryLong+7
 33732  006D6E  C085  F087         	movff	??_GetMemoryLong+4,??_GetMemoryLong+6
 33733  006D72  0100               	movlb	0	; () banked
 33734  006D74  6B86               	clrf	(??_GetMemoryLong+5)& (0+255),b
 33735  006D76  6B85               	clrf	(??_GetMemoryLong+4)& (0+255),b
 33736  006D78  C099  F089         	movff	GetMemoryLong@H,??_GetMemoryLong+8
 33737  006D7C  0100               	movlb	0	; () banked
 33738  006D7E  6B8A               	clrf	(??_GetMemoryLong+9)& (0+255),b
 33739  006D80  6B8B               	clrf	(??_GetMemoryLong+10)& (0+255),b
 33740  006D82  6B8C               	clrf	(??_GetMemoryLong+11)& (0+255),b
 33741  006D84  C089  F08C         	movff	??_GetMemoryLong+8,??_GetMemoryLong+11
 33742  006D88  0100               	movlb	0	; () banked
 33743  006D8A  6B8B               	clrf	(??_GetMemoryLong+10)& (0+255),b
 33744  006D8C  6B8A               	clrf	(??_GetMemoryLong+9)& (0+255),b
 33745  006D8E  6B89               	clrf	(??_GetMemoryLong+8)& (0+255),b
 33746  006D90  0100               	movlb	0	; () banked
 33747  006D92  5185               	movf	(??_GetMemoryLong+4)& (0+255),w,b
 33748  006D94  0100               	movlb	0	; () banked
 33749  006D96  2589               	addwf	(??_GetMemoryLong+8)& (0+255),w,b
 33750  006D98  0100               	movlb	0	; () banked
 33751  006D9A  6F8D               	movwf	(??_GetMemoryLong+12)& (0+255),b
 33752  006D9C  0100               	movlb	0	; () banked
 33753  006D9E  5186               	movf	(??_GetMemoryLong+5)& (0+255),w,b
 33754  006DA0  0100               	movlb	0	; () banked
 33755  006DA2  218A               	addwfc	(??_GetMemoryLong+9)& (0+255),w,b
 33756  006DA4  0100               	movlb	0	; () banked
 33757  006DA6  6F8E               	movwf	(??_GetMemoryLong+13)& (0+255),b
 33758  006DA8  0100               	movlb	0	; () banked
 33759  006DAA  5187               	movf	(??_GetMemoryLong+6)& (0+255),w,b
 33760  006DAC  0100               	movlb	0	; () banked
 33761  006DAE  218B               	addwfc	(??_GetMemoryLong+10)& (0+255),w,b
 33762  006DB0  0100               	movlb	0	; () banked
 33763  006DB2  6F8F               	movwf	(??_GetMemoryLong+14)& (0+255),b
 33764  006DB4  0100               	movlb	0	; () banked
 33765  006DB6  5188               	movf	(??_GetMemoryLong+7)& (0+255),w,b
 33766  006DB8  0100               	movlb	0	; () banked
 33767  006DBA  218C               	addwfc	(??_GetMemoryLong+11)& (0+255),w,b
 33768  006DBC  0100               	movlb	0	; () banked
 33769  006DBE  6F90               	movwf	(??_GetMemoryLong+15)& (0+255),b
 33770  006DC0  0100               	movlb	0	; () banked
 33771  006DC2  5181               	movf	??_GetMemoryLong& (0+255),w,b
 33772  006DC4  0100               	movlb	0	; () banked
 33773  006DC6  258D               	addwf	(??_GetMemoryLong+12)& (0+255),w,b
 33774  006DC8  0100               	movlb	0	; () banked
 33775  006DCA  6F91               	movwf	(??_GetMemoryLong+16)& (0+255),b
 33776  006DCC  0100               	movlb	0	; () banked
 33777  006DCE  5182               	movf	(??_GetMemoryLong+1)& (0+255),w,b
 33778  006DD0  0100               	movlb	0	; () banked
 33779  006DD2  218E               	addwfc	(??_GetMemoryLong+13)& (0+255),w,b
 33780  006DD4  0100               	movlb	0	; () banked
 33781  006DD6  6F92               	movwf	(??_GetMemoryLong+17)& (0+255),b
 33782  006DD8  0100               	movlb	0	; () banked
 33783  006DDA  5183               	movf	(??_GetMemoryLong+2)& (0+255),w,b
 33784  006DDC  0100               	movlb	0	; () banked
 33785  006DDE  218F               	addwfc	(??_GetMemoryLong+14)& (0+255),w,b
 33786  006DE0  0100               	movlb	0	; () banked
 33787  006DE2  6F93               	movwf	(??_GetMemoryLong+18)& (0+255),b
 33788  006DE4  0100               	movlb	0	; () banked
 33789  006DE6  5184               	movf	(??_GetMemoryLong+3)& (0+255),w,b
 33790  006DE8  0100               	movlb	0	; () banked
 33791  006DEA  2190               	addwfc	(??_GetMemoryLong+15)& (0+255),w,b
 33792  006DEC  0100               	movlb	0	; () banked
 33793  006DEE  6F94               	movwf	(??_GetMemoryLong+19)& (0+255),b
 33794  006DF0  0100               	movlb	0	; () banked
 33795  006DF2  519C               	movf	GetMemoryLong@L& (0+255),w,b
 33796  006DF4  0100               	movlb	0	; () banked
 33797  006DF6  2591               	addwf	(??_GetMemoryLong+16)& (0+255),w,b
 33798  006DF8  0100               	movlb	0	; () banked
 33799  006DFA  6F95               	movwf	GetMemoryLong@temp& (0+255),b
 33800  006DFC  0E00               	movlw	0
 33801  006DFE  0100               	movlb	0	; () banked
 33802  006E00  2192               	addwfc	(??_GetMemoryLong+17)& (0+255),w,b
 33803  006E02  0100               	movlb	0	; () banked
 33804  006E04  6F96               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 33805  006E06  0E00               	movlw	0
 33806  006E08  0100               	movlb	0	; () banked
 33807  006E0A  2193               	addwfc	(??_GetMemoryLong+18)& (0+255),w,b
 33808  006E0C  0100               	movlb	0	; () banked
 33809  006E0E  6F97               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 33810  006E10  0E00               	movlw	0
 33811  006E12  0100               	movlb	0	; () banked
 33812  006E14  2194               	addwfc	(??_GetMemoryLong+19)& (0+255),w,b
 33813  006E16  0100               	movlb	0	; () banked
 33814  006E18  6F98               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 33815                           
 33816                           ; BSR set to: 0
 33817                           ;EEPROM.c: 352: return temp;
 33818  006E1A  C095  F07D         	movff	GetMemoryLong@temp,?_GetMemoryLong
 33819  006E1E  C096  F07E         	movff	GetMemoryLong@temp+1,?_GetMemoryLong+1
 33820  006E22  C097  F07F         	movff	GetMemoryLong@temp+2,?_GetMemoryLong+2
 33821  006E26  C098  F080         	movff	GetMemoryLong@temp+3,?_GetMemoryLong+3
 33822  006E2A  0012               	return	
 33823                           
 33824                           ; BSR set to: 0
 33825                           
 33826                           ; BSR set to: 0
 33827  006E2C  0012               	return		;funcret
 33828  006E2E                     __end_of_GetMemoryLong:
 33829                           	opt stack 0
 33830                           tblptru	equ	0xFF8
 33831                           tblptrh	equ	0xFF7
 33832                           tblptrl	equ	0xFF6
 33833                           tablat	equ	0xFF5
 33834                           prodh	equ	0xFF4
 33835                           prodl	equ	0xFF3
 33836                           intcon	equ	0xFF2
 33837                           intcon2	equ	0xFF1
 33838                           indf0	equ	0xFEF
 33839                           postinc0	equ	0xFEE
 33840                           plusw0	equ	0xFEB
 33841                           fsr0h	equ	0xFEA
 33842                           fsr0l	equ	0xFE9
 33843                           wreg	equ	0xFE8
 33844                           indf1	equ	0xFE7
 33845                           postdec1	equ	0xFE5
 33846                           fsr1h	equ	0xFE2
 33847                           fsr1l	equ	0xFE1
 33848                           indf2	equ	0xFDF
 33849                           postinc2	equ	0xFDE
 33850                           postdec2	equ	0xFDD
 33851                           plusw2	equ	0xFDB
 33852                           fsr2h	equ	0xFDA
 33853                           fsr2l	equ	0xFD9
 33854                           status	equ	0xFD8
 33855                           
 33856 ;; *************** function _SetMemoryChar *****************
 33857 ;; Defined at:
 33858 ;;		line 454 in file "EEPROM.c"
 33859 ;; Parameters:    Size  Location     Type
 33860 ;;  Data            1    wreg     unsigned char 
 33861 ;;  AddressFirst    1   35[BANK0 ] unsigned char 
 33862 ;; Auto vars:     Size  Location     Type
 33863 ;;  Data            1   37[BANK0 ] unsigned char 
 33864 ;;  Test            1   36[BANK0 ] unsigned char 
 33865 ;; Return value:  Size  Location     Type
 33866 ;;                  1    wreg      unsigned char 
 33867 ;; Registers used:
 33868 ;;		wreg, status,2, status,0, cstack
 33869 ;; Tracked objects:
 33870 ;;		On entry : 0/0
 33871 ;;		On exit  : 0/0
 33872 ;;		Unchanged: 0/0
 33873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33874 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33875 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33877 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33878 ;;Total ram usage:        3 bytes
 33879 ;; Hardware stack levels used:    1
 33880 ;; Hardware stack levels required when called:    8
 33881 ;; This function calls:
 33882 ;;		_GetMemoryChar
 33883 ;;		_WriteEEPROM_1Byte
 33884 ;; This function is called by:
 33885 ;;		_SetEEPROM
 33886 ;; This function uses a non-reentrant model
 33887 ;;
 33888                           
 33889                           	psect	text91
 33890  009160                     __ptext91:
 33891                           	opt stack 0
 33892  009160                     _SetMemoryChar:
 33893                           	opt stack 19
 33894                           
 33895                           ; BSR set to: 0
 33896                           ;incstack = 0
 33897                           ;SetMemoryChar@Data stored from wreg
 33898  009160  0100               	movlb	0	; () banked
 33899  009162  6F85               	movwf	SetMemoryChar@Data& (0+255),b
 33900                           
 33901                           ; BSR set to: 0
 33902                           ;EEPROM.c: 456: unsigned char Test;
 33903                           ;EEPROM.c: 458: WriteEEPROM_1Byte(AddressFirst, Data);
 33904  009164  C083  F079         	movff	SetMemoryChar@AddressFirst,WriteEEPROM_1Byte@address
 33905  009168  0100               	movlb	0	; () banked
 33906  00916A  6B7A               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33907  00916C  C085  F07B         	movff	SetMemoryChar@Data,WriteEEPROM_1Byte@data
 33908  009170  EC04  F046         	call	_WriteEEPROM_1Byte	;wreg free
 33909                           
 33910                           ;EEPROM.c: 461: Test = GetMemoryChar(AddressFirst);
 33911  009174  0100               	movlb	0	; () banked
 33912  009176  5183               	movf	SetMemoryChar@AddressFirst& (0+255),w,b
 33913  009178  EC78  F049         	call	_GetMemoryChar
 33914  00917C  0100               	movlb	0	; () banked
 33915  00917E  517D               	movf	?_GetMemoryChar& (0+255),w,b
 33916  009180  0100               	movlb	0	; () banked
 33917  009182  6F84               	movwf	SetMemoryChar@Test& (0+255),b
 33918                           
 33919                           ; BSR set to: 0
 33920                           ;EEPROM.c: 463: if(Test == Data)
 33921  009184  0100               	movlb	0	; () banked
 33922  009186  5185               	movf	SetMemoryChar@Data& (0+255),w,b
 33923  009188  0100               	movlb	0	; () banked
 33924  00918A  1984               	xorwf	SetMemoryChar@Test& (0+255),w,b
 33925  00918C  A4D8               	btfss	status,2,c
 33926  00918E  D002               	goto	l12564
 33927                           
 33928                           ; BSR set to: 0
 33929                           ;EEPROM.c: 464: {
 33930                           ;EEPROM.c: 465: return 1;
 33931  009190  0E01               	movlw	1
 33932                           
 33933                           ; BSR set to: 0
 33934  009192  0012               	return	
 33935  009194                     l12564:
 33936                           
 33937                           ; BSR set to: 0
 33938                           ;EEPROM.c: 466: }
 33939                           ;EEPROM.c: 467: return 0;
 33940  009194  0E00               	movlw	0
 33941  009196  0012               	return	
 33942                           
 33943                           ; BSR set to: 0
 33944                           
 33945                           ; BSR set to: 0
 33946  009198  0012               	return		;funcret
 33947  00919A                     __end_of_SetMemoryChar:
 33948                           	opt stack 0
 33949                           tblptru	equ	0xFF8
 33950                           tblptrh	equ	0xFF7
 33951                           tblptrl	equ	0xFF6
 33952                           tablat	equ	0xFF5
 33953                           prodh	equ	0xFF4
 33954                           prodl	equ	0xFF3
 33955                           intcon	equ	0xFF2
 33956                           intcon2	equ	0xFF1
 33957                           indf0	equ	0xFEF
 33958                           postinc0	equ	0xFEE
 33959                           plusw0	equ	0xFEB
 33960                           fsr0h	equ	0xFEA
 33961                           fsr0l	equ	0xFE9
 33962                           wreg	equ	0xFE8
 33963                           indf1	equ	0xFE7
 33964                           postdec1	equ	0xFE5
 33965                           fsr1h	equ	0xFE2
 33966                           fsr1l	equ	0xFE1
 33967                           indf2	equ	0xFDF
 33968                           postinc2	equ	0xFDE
 33969                           postdec2	equ	0xFDD
 33970                           plusw2	equ	0xFDB
 33971                           fsr2h	equ	0xFDA
 33972                           fsr2l	equ	0xFD9
 33973                           status	equ	0xFD8
 33974                           
 33975 ;; *************** function _WriteEEPROM_1Byte *****************
 33976 ;; Defined at:
 33977 ;;		line 102 in file "EEPROM.c"
 33978 ;; Parameters:    Size  Location     Type
 33979 ;;  address         2   25[BANK0 ] unsigned int 
 33980 ;;  data            1   27[BANK0 ] unsigned char 
 33981 ;; Auto vars:     Size  Location     Type
 33982 ;;  PEIEstatus      1   29[BANK0 ] unsigned char 
 33983 ;;  GIEstatus       1   28[BANK0 ] unsigned char 
 33984 ;; Return value:  Size  Location     Type
 33985 ;;		None               void
 33986 ;; Registers used:
 33987 ;;		wreg, status,2, status,0, cstack
 33988 ;; Tracked objects:
 33989 ;;		On entry : 0/0
 33990 ;;		On exit  : 0/0
 33991 ;;		Unchanged: 0/0
 33992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33993 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33994 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33996 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33997 ;;Total ram usage:        5 bytes
 33998 ;; Hardware stack levels used:    1
 33999 ;; Hardware stack levels required when called:    7
 34000 ;; This function calls:
 34001 ;;		_EEPROM_UNLOCK
 34002 ;; This function is called by:
 34003 ;;		_SetMemoryLong
 34004 ;;		_SetMemoryChar
 34005 ;;		_SetMemoryInt
 34006 ;; This function uses a non-reentrant model
 34007 ;;
 34008                           
 34009                           	psect	text92
 34010  008C08                     __ptext92:
 34011                           	opt stack 0
 34012  008C08                     _WriteEEPROM_1Byte:
 34013                           	opt stack 19
 34014                           
 34015                           ;EEPROM.c: 104: unsigned char GIEstatus = INTCONbits.GIE;
 34016                           
 34017                           ; BSR set to: 0
 34018                           ;incstack = 0
 34019  008C08  0E00               	movlw	0
 34020  008C0A  BEF2               	btfsc	intcon,7,c	;volatile
 34021  008C0C  0E01               	movlw	1
 34022  008C0E  0100               	movlb	0	; () banked
 34023  008C10  6F7C               	movwf	WriteEEPROM_1Byte@GIEstatus& (0+255),b
 34024                           
 34025                           ;EEPROM.c: 105: unsigned char PEIEstatus = INTCONbits.PEIE;
 34026  008C12  0E00               	movlw	0
 34027  008C14  BCF2               	btfsc	intcon,6,c	;volatile
 34028  008C16  0E01               	movlw	1
 34029  008C18  0100               	movlb	0	; () banked
 34030  008C1A  6F7D               	movwf	WriteEEPROM_1Byte@PEIEstatus& (0+255),b
 34031                           
 34032                           ; BSR set to: 0
 34033                           ;EEPROM.c: 106: INTCONbits.GIE = 0;
 34034  008C1C  9EF2               	bcf	intcon,7,c	;volatile
 34035                           
 34036                           ; BSR set to: 0
 34037                           ;EEPROM.c: 107: INTCONbits.PEIE = 0;
 34038  008C1E  9CF2               	bcf	intcon,6,c	;volatile
 34039                           
 34040                           ; BSR set to: 0
 34041                           ;EEPROM.c: 108: EEADRH = (unsigned char)((address & 0x300) >> 8);
 34042  008C20  0100               	movlb	0	; () banked
 34043  008C22  517A               	movf	(WriteEEPROM_1Byte@address+1)& (0+255),w,b
 34044  008C24  0B03               	andlw	3
 34045  008C26  6EAA               	movwf	4010,c	;volatile
 34046                           
 34047                           ; BSR set to: 0
 34048                           ;EEPROM.c: 109: EEADR = (unsigned char)(address & 0xFF);
 34049  008C28  C079  FFA9         	movff	WriteEEPROM_1Byte@address,4009	;volatile
 34050                           
 34051                           ; BSR set to: 0
 34052                           ;EEPROM.c: 110: EEDATA = data;
 34053  008C2C  C07B  FFA8         	movff	WriteEEPROM_1Byte@data,4008	;volatile
 34054                           
 34055                           ; BSR set to: 0
 34056                           ;EEPROM.c: 111: EECON1bits.EEPGD = 0;
 34057  008C30  9EA6               	bcf	4006,7,c	;volatile
 34058                           
 34059                           ; BSR set to: 0
 34060                           ;EEPROM.c: 112: EECON1bits.CFGS = 0;
 34061  008C32  9CA6               	bcf	4006,6,c	;volatile
 34062                           
 34063                           ; BSR set to: 0
 34064                           ;EEPROM.c: 113: EECON1bits.WREN =1;
 34065  008C34  84A6               	bsf	4006,2,c	;volatile
 34066                           
 34067                           ; BSR set to: 0
 34068                           ;EEPROM.c: 114: INTCONbits.GIE =0;
 34069  008C36  9EF2               	bcf	intcon,7,c	;volatile
 34070                           
 34071                           ; BSR set to: 0
 34072                           ;EEPROM.c: 115: EEPROM_UNLOCK();
 34073  008C38  ECF1  F049         	call	_EEPROM_UNLOCK	;wreg free
 34074                           
 34075                           ;EEPROM.c: 116: EECON1bits.WR =1;
 34076  008C3C  82A6               	bsf	4006,1,c	;volatile
 34077                           
 34078                           ;EEPROM.c: 117: while(EECON1bits.WR);
 34079  008C3E  D000               	goto	l928
 34080  008C40                     l928:
 34081  008C40  B2A6               	btfsc	4006,1,c	;volatile
 34082  008C42  D7FE               	goto	l928
 34083                           
 34084                           ;EEPROM.c: 118: EECON1bits.WREN =0;
 34085  008C44  94A6               	bcf	4006,2,c	;volatile
 34086                           
 34087                           ;EEPROM.c: 119: if(GIEstatus)
 34088  008C46  0100               	movlb	0	; () banked
 34089  008C48  517C               	movf	WriteEEPROM_1Byte@GIEstatus& (0+255),w,b
 34090  008C4A  0100               	movlb	0	; () banked
 34091  008C4C  B4D8               	btfsc	status,2,c
 34092  008C4E  D002               	goto	l12486
 34093                           
 34094                           ; BSR set to: 0
 34095                           ;EEPROM.c: 120: {
 34096                           ;EEPROM.c: 121: INTCONbits.GIE =1;
 34097  008C50  8EF2               	bsf	intcon,7,c	;volatile
 34098  008C52  D000               	goto	l12486
 34099  008C54                     l12486:
 34100                           
 34101                           ; BSR set to: 0
 34102                           ;EEPROM.c: 122: }
 34103                           ;EEPROM.c: 123: if(PEIEstatus)
 34104  008C54  0100               	movlb	0	; () banked
 34105  008C56  517D               	movf	WriteEEPROM_1Byte@PEIEstatus& (0+255),w,b
 34106  008C58  0100               	movlb	0	; () banked
 34107  008C5A  B4D8               	btfsc	status,2,c
 34108  008C5C  0012               	return	
 34109                           
 34110                           ; BSR set to: 0
 34111                           ;EEPROM.c: 124: {
 34112                           ;EEPROM.c: 125: PEIEstatus = INTCONbits.PEIE;
 34113  008C5E  0E00               	movlw	0
 34114  008C60  BCF2               	btfsc	intcon,6,c	;volatile
 34115  008C62  0E01               	movlw	1
 34116  008C64  0100               	movlb	0	; () banked
 34117  008C66  6F7D               	movwf	WriteEEPROM_1Byte@PEIEstatus& (0+255),b
 34118  008C68  0012               	return	
 34119                           
 34120                           ; BSR set to: 0
 34121                           
 34122                           ; BSR set to: 0
 34123  008C6A  0012               	return		;funcret
 34124  008C6C                     __end_of_WriteEEPROM_1Byte:
 34125                           	opt stack 0
 34126                           tblptru	equ	0xFF8
 34127                           tblptrh	equ	0xFF7
 34128                           tblptrl	equ	0xFF6
 34129                           tablat	equ	0xFF5
 34130                           prodh	equ	0xFF4
 34131                           prodl	equ	0xFF3
 34132                           intcon	equ	0xFF2
 34133                           intcon2	equ	0xFF1
 34134                           indf0	equ	0xFEF
 34135                           postinc0	equ	0xFEE
 34136                           plusw0	equ	0xFEB
 34137                           fsr0h	equ	0xFEA
 34138                           fsr0l	equ	0xFE9
 34139                           wreg	equ	0xFE8
 34140                           indf1	equ	0xFE7
 34141                           postdec1	equ	0xFE5
 34142                           fsr1h	equ	0xFE2
 34143                           fsr1l	equ	0xFE1
 34144                           indf2	equ	0xFDF
 34145                           postinc2	equ	0xFDE
 34146                           postdec2	equ	0xFDD
 34147                           plusw2	equ	0xFDB
 34148                           fsr2h	equ	0xFDA
 34149                           fsr2l	equ	0xFD9
 34150                           status	equ	0xFD8
 34151                           
 34152 ;; *************** function _EEPROM_UNLOCK *****************
 34153 ;; Defined at:
 34154 ;;		line 87 in file "EEPROM.c"
 34155 ;; Parameters:    Size  Location     Type
 34156 ;;		None
 34157 ;; Auto vars:     Size  Location     Type
 34158 ;;		None
 34159 ;; Return value:  Size  Location     Type
 34160 ;;		None               void
 34161 ;; Registers used:
 34162 ;;		wreg, status,2
 34163 ;; Tracked objects:
 34164 ;;		On entry : 0/0
 34165 ;;		On exit  : 0/0
 34166 ;;		Unchanged: 0/0
 34167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34172 ;;Total ram usage:        0 bytes
 34173 ;; Hardware stack levels used:    1
 34174 ;; Hardware stack levels required when called:    6
 34175 ;; This function calls:
 34176 ;;		Nothing
 34177 ;; This function is called by:
 34178 ;;		_WriteEEPROM_1Byte
 34179 ;; This function uses a non-reentrant model
 34180 ;;
 34181                           
 34182                           	psect	text93
 34183  0093E2                     __ptext93:
 34184                           	opt stack 0
 34185  0093E2                     _EEPROM_UNLOCK:
 34186                           	opt stack 19
 34187                           
 34188                           ;EEPROM.c: 89: EECON2 = 0x55;
 34189                           
 34190                           ; BSR set to: 0
 34191                           ;incstack = 0
 34192  0093E2  0E55               	movlw	85
 34193  0093E4  6EA7               	movwf	4007,c	;volatile
 34194                           
 34195                           ;EEPROM.c: 90: EECON2 = 0xAA;
 34196  0093E6  0EAA               	movlw	170
 34197  0093E8  6EA7               	movwf	4007,c	;volatile
 34198                           
 34199                           ;EEPROM.c: 91: EECON1bits.WR =1;
 34200  0093EA  82A6               	bsf	4006,1,c	;volatile
 34201                           
 34202                           ;EEPROM.c: 92: while(EECON1bits.WR);
 34203  0093EC  D000               	goto	l922
 34204  0093EE                     l922:
 34205  0093EE  B2A6               	btfsc	4006,1,c	;volatile
 34206  0093F0  D7FE               	goto	l922
 34207                           
 34208                           ;EEPROM.c: 93: __nop();
 34209  0093F2  F000               	nop	
 34210                           
 34211                           ;EEPROM.c: 94: __nop();
 34212  0093F4  F000               	nop	
 34213  0093F6  0012               	return		;funcret
 34214  0093F8                     __end_of_EEPROM_UNLOCK:
 34215                           	opt stack 0
 34216                           tblptru	equ	0xFF8
 34217                           tblptrh	equ	0xFF7
 34218                           tblptrl	equ	0xFF6
 34219                           tablat	equ	0xFF5
 34220                           prodh	equ	0xFF4
 34221                           prodl	equ	0xFF3
 34222                           intcon	equ	0xFF2
 34223                           intcon2	equ	0xFF1
 34224                           indf0	equ	0xFEF
 34225                           postinc0	equ	0xFEE
 34226                           plusw0	equ	0xFEB
 34227                           fsr0h	equ	0xFEA
 34228                           fsr0l	equ	0xFE9
 34229                           wreg	equ	0xFE8
 34230                           indf1	equ	0xFE7
 34231                           postdec1	equ	0xFE5
 34232                           fsr1h	equ	0xFE2
 34233                           fsr1l	equ	0xFE1
 34234                           indf2	equ	0xFDF
 34235                           postinc2	equ	0xFDE
 34236                           postdec2	equ	0xFDD
 34237                           plusw2	equ	0xFDB
 34238                           fsr2h	equ	0xFDA
 34239                           fsr2l	equ	0xFD9
 34240                           status	equ	0xFD8
 34241                           
 34242 ;; *************** function _GetMemoryChar *****************
 34243 ;; Defined at:
 34244 ;;		line 440 in file "EEPROM.c"
 34245 ;; Parameters:    Size  Location     Type
 34246 ;;  AddressFirst    1    wreg     unsigned char 
 34247 ;; Auto vars:     Size  Location     Type
 34248 ;;  AddressFirst    1   33[BANK0 ] unsigned char 
 34249 ;;  H               1   34[BANK0 ] unsigned char 
 34250 ;; Return value:  Size  Location     Type
 34251 ;;                  4   29[BANK0 ] unsigned long 
 34252 ;; Registers used:
 34253 ;;		wreg, status,2, status,0, cstack
 34254 ;; Tracked objects:
 34255 ;;		On entry : 0/0
 34256 ;;		On exit  : 0/0
 34257 ;;		Unchanged: 0/0
 34258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34259 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34260 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34262 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34263 ;;Total ram usage:        6 bytes
 34264 ;; Hardware stack levels used:    1
 34265 ;; Hardware stack levels required when called:    7
 34266 ;; This function calls:
 34267 ;;		_ReadEEPROM_1Byte
 34268 ;; This function is called by:
 34269 ;;		_GetEEPROM
 34270 ;;		_SetMemoryChar
 34271 ;; This function uses a non-reentrant model
 34272 ;;
 34273                           
 34274                           	psect	text94
 34275  0092F0                     __ptext94:
 34276                           	opt stack 0
 34277  0092F0                     _GetMemoryChar:
 34278                           	opt stack 19
 34279                           
 34280                           ;incstack = 0
 34281                           ;GetMemoryChar@AddressFirst stored from wreg
 34282  0092F0  0100               	movlb	0	; () banked
 34283  0092F2  6F81               	movwf	GetMemoryChar@AddressFirst& (0+255),b
 34284                           
 34285                           ; BSR set to: 0
 34286                           ;EEPROM.c: 442: unsigned char H;
 34287                           ;EEPROM.c: 444: H = ReadEEPROM_1Byte(AddressFirst);
 34288  0092F4  C081  F079         	movff	GetMemoryChar@AddressFirst,ReadEEPROM_1Byte@address
 34289  0092F8  0100               	movlb	0	; () banked
 34290  0092FA  6B7A               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 34291  0092FC  ECD1  F045         	call	_ReadEEPROM_1Byte	;wreg free
 34292  009300  0100               	movlb	0	; () banked
 34293  009302  5179               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 34294  009304  0100               	movlb	0	; () banked
 34295  009306  6F82               	movwf	GetMemoryChar@H& (0+255),b
 34296                           
 34297                           ; BSR set to: 0
 34298                           ;EEPROM.c: 446: return H;
 34299  009308  0100               	movlb	0	; () banked
 34300  00930A  5182               	movf	GetMemoryChar@H& (0+255),w,b
 34301  00930C  0100               	movlb	0	; () banked
 34302  00930E  6F7D               	movwf	?_GetMemoryChar& (0+255),b
 34303  009310  6B7E               	clrf	(?_GetMemoryChar+1)& (0+255),b
 34304  009312  6B7F               	clrf	(?_GetMemoryChar+2)& (0+255),b
 34305  009314  6B80               	clrf	(?_GetMemoryChar+3)& (0+255),b
 34306  009316  0012               	return	
 34307                           
 34308                           ; BSR set to: 0
 34309                           
 34310                           ; BSR set to: 0
 34311  009318  0012               	return		;funcret
 34312  00931A                     __end_of_GetMemoryChar:
 34313                           	opt stack 0
 34314                           tblptru	equ	0xFF8
 34315                           tblptrh	equ	0xFF7
 34316                           tblptrl	equ	0xFF6
 34317                           tablat	equ	0xFF5
 34318                           prodh	equ	0xFF4
 34319                           prodl	equ	0xFF3
 34320                           intcon	equ	0xFF2
 34321                           intcon2	equ	0xFF1
 34322                           indf0	equ	0xFEF
 34323                           postinc0	equ	0xFEE
 34324                           plusw0	equ	0xFEB
 34325                           fsr0h	equ	0xFEA
 34326                           fsr0l	equ	0xFE9
 34327                           wreg	equ	0xFE8
 34328                           indf1	equ	0xFE7
 34329                           postdec1	equ	0xFE5
 34330                           fsr1h	equ	0xFE2
 34331                           fsr1l	equ	0xFE1
 34332                           indf2	equ	0xFDF
 34333                           postinc2	equ	0xFDE
 34334                           postdec2	equ	0xFDD
 34335                           plusw2	equ	0xFDB
 34336                           fsr2h	equ	0xFDA
 34337                           fsr2l	equ	0xFD9
 34338                           status	equ	0xFD8
 34339                           
 34340 ;; *************** function _ReadEEPROM_1Byte *****************
 34341 ;; Defined at:
 34342 ;;		line 55 in file "EEPROM.c"
 34343 ;; Parameters:    Size  Location     Type
 34344 ;;  address         2   25[BANK0 ] unsigned int 
 34345 ;; Auto vars:     Size  Location     Type
 34346 ;;  PEIEstatus      1   28[BANK0 ] unsigned char 
 34347 ;;  GIEstatus       1   27[BANK0 ] unsigned char 
 34348 ;; Return value:  Size  Location     Type
 34349 ;;                  2   25[BANK0 ] unsigned int 
 34350 ;; Registers used:
 34351 ;;		wreg, status,2, status,0
 34352 ;; Tracked objects:
 34353 ;;		On entry : 0/0
 34354 ;;		On exit  : 0/0
 34355 ;;		Unchanged: 0/0
 34356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34357 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34358 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34360 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34361 ;;Total ram usage:        4 bytes
 34362 ;; Hardware stack levels used:    1
 34363 ;; Hardware stack levels required when called:    6
 34364 ;; This function calls:
 34365 ;;		Nothing
 34366 ;; This function is called by:
 34367 ;;		_GetMemoryLong
 34368 ;;		_GetMemoryChar
 34369 ;;		_GetMemoryInt
 34370 ;; This function uses a non-reentrant model
 34371 ;;
 34372                           
 34373                           	psect	text95
 34374  008BA2                     __ptext95:
 34375                           	opt stack 0
 34376  008BA2                     _ReadEEPROM_1Byte:
 34377                           	opt stack 19
 34378                           
 34379                           ;EEPROM.c: 57: unsigned char GIEstatus = INTCONbits.GIE;
 34380                           
 34381                           ; BSR set to: 0
 34382                           ;incstack = 0
 34383  008BA2  0E00               	movlw	0
 34384  008BA4  BEF2               	btfsc	intcon,7,c	;volatile
 34385  008BA6  0E01               	movlw	1
 34386  008BA8  0100               	movlb	0	; () banked
 34387  008BAA  6F7B               	movwf	ReadEEPROM_1Byte@GIEstatus& (0+255),b
 34388                           
 34389                           ;EEPROM.c: 58: unsigned char PEIEstatus = INTCONbits.PEIE;
 34390  008BAC  0E00               	movlw	0
 34391  008BAE  BCF2               	btfsc	intcon,6,c	;volatile
 34392  008BB0  0E01               	movlw	1
 34393  008BB2  0100               	movlb	0	; () banked
 34394  008BB4  6F7C               	movwf	ReadEEPROM_1Byte@PEIEstatus& (0+255),b
 34395                           
 34396                           ; BSR set to: 0
 34397                           ;EEPROM.c: 59: INTCONbits.GIE = 0;
 34398  008BB6  9EF2               	bcf	intcon,7,c	;volatile
 34399                           
 34400                           ; BSR set to: 0
 34401                           ;EEPROM.c: 60: INTCONbits.PEIE = 0;
 34402  008BB8  9CF2               	bcf	intcon,6,c	;volatile
 34403                           
 34404                           ; BSR set to: 0
 34405                           ;EEPROM.c: 61: EECON1bits.EEPGD = 0;
 34406  008BBA  9EA6               	bcf	4006,7,c	;volatile
 34407                           
 34408                           ; BSR set to: 0
 34409                           ;EEPROM.c: 62: EECON1bits.CFGS = 0;
 34410  008BBC  9CA6               	bcf	4006,6,c	;volatile
 34411                           
 34412                           ; BSR set to: 0
 34413                           ;EEPROM.c: 63: EEADRH = (unsigned char)((address & 0x300) >> 8);
 34414  008BBE  0100               	movlb	0	; () banked
 34415  008BC0  517A               	movf	(ReadEEPROM_1Byte@address+1)& (0+255),w,b
 34416  008BC2  0B03               	andlw	3
 34417  008BC4  6EAA               	movwf	4010,c	;volatile
 34418                           
 34419                           ; BSR set to: 0
 34420                           ;EEPROM.c: 64: EEADR = (unsigned char)(address & 0xFF);
 34421  008BC6  C079  FFA9         	movff	ReadEEPROM_1Byte@address,4009	;volatile
 34422                           
 34423                           ; BSR set to: 0
 34424                           ;EEPROM.c: 65: INTCONbits.GIE =0;
 34425  008BCA  9EF2               	bcf	intcon,7,c	;volatile
 34426                           
 34427                           ; BSR set to: 0
 34428                           ;EEPROM.c: 66: EECON1bits.RD = 1;
 34429  008BCC  80A6               	bsf	4006,0,c	;volatile
 34430                           
 34431                           ;EEPROM.c: 67: while(EECON1bits.RD);
 34432  008BCE  D000               	goto	l914
 34433  008BD0                     l914:
 34434  008BD0  B0A6               	btfsc	4006,0,c	;volatile
 34435  008BD2  D7FE               	goto	l914
 34436                           
 34437                           ;EEPROM.c: 68: __nop();
 34438  008BD4  F000               	nop	
 34439                           
 34440                           ;EEPROM.c: 69: __nop();
 34441  008BD6  F000               	nop	
 34442                           
 34443                           ;EEPROM.c: 70: if(GIEstatus)
 34444  008BD8  0100               	movlb	0	; () banked
 34445  008BDA  517B               	movf	ReadEEPROM_1Byte@GIEstatus& (0+255),w,b
 34446  008BDC  0100               	movlb	0	; () banked
 34447  008BDE  B4D8               	btfsc	status,2,c
 34448  008BE0  D002               	goto	l12446
 34449                           
 34450                           ; BSR set to: 0
 34451                           ;EEPROM.c: 71: {
 34452                           ;EEPROM.c: 72: INTCONbits.GIE =1;
 34453  008BE2  8EF2               	bsf	intcon,7,c	;volatile
 34454  008BE4  D000               	goto	l12446
 34455  008BE6                     l12446:
 34456                           
 34457                           ; BSR set to: 0
 34458                           ;EEPROM.c: 73: }
 34459                           ;EEPROM.c: 74: if(PEIEstatus)
 34460  008BE6  0100               	movlb	0	; () banked
 34461  008BE8  517C               	movf	ReadEEPROM_1Byte@PEIEstatus& (0+255),w,b
 34462  008BEA  0100               	movlb	0	; () banked
 34463  008BEC  B4D8               	btfsc	status,2,c
 34464  008BEE  D006               	goto	l12450
 34465                           
 34466                           ; BSR set to: 0
 34467                           ;EEPROM.c: 75: {
 34468                           ;EEPROM.c: 76: PEIEstatus = INTCONbits.PEIE;
 34469  008BF0  0E00               	movlw	0
 34470  008BF2  BCF2               	btfsc	intcon,6,c	;volatile
 34471  008BF4  0E01               	movlw	1
 34472  008BF6  0100               	movlb	0	; () banked
 34473  008BF8  6F7C               	movwf	ReadEEPROM_1Byte@PEIEstatus& (0+255),b
 34474  008BFA  D000               	goto	l12450
 34475  008BFC                     l12450:
 34476                           
 34477                           ; BSR set to: 0
 34478                           ;EEPROM.c: 77: }
 34479                           ;EEPROM.c: 78: return (EEDATA);
 34480  008BFC  CFA8 F079          	movff	4008,?_ReadEEPROM_1Byte	;volatile
 34481  008C00  0100               	movlb	0	; () banked
 34482  008C02  6B7A               	clrf	(?_ReadEEPROM_1Byte+1)& (0+255),b
 34483  008C04  0012               	return	
 34484                           
 34485                           ; BSR set to: 0
 34486                           
 34487                           ; BSR set to: 0
 34488  008C06  0012               	return		;funcret
 34489  008C08                     __end_of_ReadEEPROM_1Byte:
 34490                           	opt stack 0
 34491                           tblptru	equ	0xFF8
 34492                           tblptrh	equ	0xFF7
 34493                           tblptrl	equ	0xFF6
 34494                           tablat	equ	0xFF5
 34495                           prodh	equ	0xFF4
 34496                           prodl	equ	0xFF3
 34497                           intcon	equ	0xFF2
 34498                           intcon2	equ	0xFF1
 34499                           indf0	equ	0xFEF
 34500                           postinc0	equ	0xFEE
 34501                           plusw0	equ	0xFEB
 34502                           fsr0h	equ	0xFEA
 34503                           fsr0l	equ	0xFE9
 34504                           wreg	equ	0xFE8
 34505                           indf1	equ	0xFE7
 34506                           postdec1	equ	0xFE5
 34507                           fsr1h	equ	0xFE2
 34508                           fsr1l	equ	0xFE1
 34509                           indf2	equ	0xFDF
 34510                           postinc2	equ	0xFDE
 34511                           postdec2	equ	0xFDD
 34512                           plusw2	equ	0xFDB
 34513                           fsr2h	equ	0xFDA
 34514                           fsr2l	equ	0xFD9
 34515                           status	equ	0xFD8
 34516                           
 34517 ;; *************** function _InitADC *****************
 34518 ;; Defined at:
 34519 ;;		line 135 in file "ADC.c"
 34520 ;; Parameters:    Size  Location     Type
 34521 ;;		None
 34522 ;; Auto vars:     Size  Location     Type
 34523 ;;		None
 34524 ;; Return value:  Size  Location     Type
 34525 ;;		None               void
 34526 ;; Registers used:
 34527 ;;		wreg, status,2, cstack
 34528 ;; Tracked objects:
 34529 ;;		On entry : 0/0
 34530 ;;		On exit  : 0/0
 34531 ;;		Unchanged: 0/0
 34532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34537 ;;Total ram usage:        0 bytes
 34538 ;; Hardware stack levels used:    1
 34539 ;; Hardware stack levels required when called:    7
 34540 ;; This function calls:
 34541 ;;		_ResetADC
 34542 ;; This function is called by:
 34543 ;;		_Init_System
 34544 ;; This function uses a non-reentrant model
 34545 ;;
 34546                           
 34547                           	psect	text96
 34548  0093F8                     __ptext96:
 34549                           	opt stack 0
 34550  0093F8                     _InitADC:
 34551                           	opt stack 22
 34552                           
 34553                           ;ADC.c: 137: ResetADC();
 34554                           
 34555                           ; BSR set to: 0
 34556                           ;incstack = 0
 34557  0093F8  EC71  F04A         	call	_ResetADC	;wreg free
 34558                           
 34559                           ;ADC.c: 138: ADCON2bits.ADFM = 1;
 34560  0093FC  8EC0               	bsf	4032,7,c	;volatile
 34561                           
 34562                           ;ADC.c: 139: ADCON2bits.ACQT = 0x7;
 34563  0093FE  86C0               	bsf	4032,3,c	;volatile
 34564  009400  88C0               	bsf	4032,4,c	;volatile
 34565  009402  8AC0               	bsf	4032,5,c	;volatile
 34566                           
 34567                           ;ADC.c: 140: ADCON2bits.ADCS = 0x4;
 34568  009404  50C0               	movf	4032,w,c	;volatile
 34569  009406  0BF8               	andlw	-8
 34570  009408  0904               	iorlw	4
 34571  00940A  6EC0               	movwf	4032,c	;volatile
 34572  00940C  0012               	return		;funcret
 34573  00940E                     __end_of_InitADC:
 34574                           	opt stack 0
 34575                           tblptru	equ	0xFF8
 34576                           tblptrh	equ	0xFF7
 34577                           tblptrl	equ	0xFF6
 34578                           tablat	equ	0xFF5
 34579                           prodh	equ	0xFF4
 34580                           prodl	equ	0xFF3
 34581                           intcon	equ	0xFF2
 34582                           intcon2	equ	0xFF1
 34583                           indf0	equ	0xFEF
 34584                           postinc0	equ	0xFEE
 34585                           plusw0	equ	0xFEB
 34586                           fsr0h	equ	0xFEA
 34587                           fsr0l	equ	0xFE9
 34588                           wreg	equ	0xFE8
 34589                           indf1	equ	0xFE7
 34590                           postdec1	equ	0xFE5
 34591                           fsr1h	equ	0xFE2
 34592                           fsr1l	equ	0xFE1
 34593                           indf2	equ	0xFDF
 34594                           postinc2	equ	0xFDE
 34595                           postdec2	equ	0xFDD
 34596                           plusw2	equ	0xFDB
 34597                           fsr2h	equ	0xFDA
 34598                           fsr2l	equ	0xFD9
 34599                           status	equ	0xFD8
 34600                           
 34601 ;; *************** function _ResetADC *****************
 34602 ;; Defined at:
 34603 ;;		line 123 in file "ADC.c"
 34604 ;; Parameters:    Size  Location     Type
 34605 ;;		None
 34606 ;; Auto vars:     Size  Location     Type
 34607 ;;		None
 34608 ;; Return value:  Size  Location     Type
 34609 ;;		None               void
 34610 ;; Registers used:
 34611 ;;		wreg, status,2
 34612 ;; Tracked objects:
 34613 ;;		On entry : 0/0
 34614 ;;		On exit  : 0/0
 34615 ;;		Unchanged: 0/0
 34616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34621 ;;Total ram usage:        0 bytes
 34622 ;; Hardware stack levels used:    1
 34623 ;; Hardware stack levels required when called:    6
 34624 ;; This function calls:
 34625 ;;		Nothing
 34626 ;; This function is called by:
 34627 ;;		_InitADC
 34628 ;; This function uses a non-reentrant model
 34629 ;;
 34630                           
 34631                           	psect	text97
 34632  0094E2                     __ptext97:
 34633                           	opt stack 0
 34634  0094E2                     _ResetADC:
 34635                           	opt stack 22
 34636                           
 34637                           ;ADC.c: 125: ADCON0 =0;
 34638                           
 34639                           ;incstack = 0
 34640  0094E2  0E00               	movlw	0
 34641  0094E4  6EC2               	movwf	4034,c	;volatile
 34642                           
 34643                           ;ADC.c: 126: ADCON1 =0;
 34644  0094E6  0E00               	movlw	0
 34645  0094E8  6EC1               	movwf	4033,c	;volatile
 34646                           
 34647                           ;ADC.c: 127: ADCON2 =0;
 34648  0094EA  0E00               	movlw	0
 34649  0094EC  6EC0               	movwf	4032,c	;volatile
 34650  0094EE  0012               	return		;funcret
 34651  0094F0                     __end_of_ResetADC:
 34652                           	opt stack 0
 34653                           tblptru	equ	0xFF8
 34654                           tblptrh	equ	0xFF7
 34655                           tblptrl	equ	0xFF6
 34656                           tablat	equ	0xFF5
 34657                           prodh	equ	0xFF4
 34658                           prodl	equ	0xFF3
 34659                           intcon	equ	0xFF2
 34660                           intcon2	equ	0xFF1
 34661                           indf0	equ	0xFEF
 34662                           postinc0	equ	0xFEE
 34663                           plusw0	equ	0xFEB
 34664                           fsr0h	equ	0xFEA
 34665                           fsr0l	equ	0xFE9
 34666                           wreg	equ	0xFE8
 34667                           indf1	equ	0xFE7
 34668                           postdec1	equ	0xFE5
 34669                           fsr1h	equ	0xFE2
 34670                           fsr1l	equ	0xFE1
 34671                           indf2	equ	0xFDF
 34672                           postinc2	equ	0xFDE
 34673                           postdec2	equ	0xFDD
 34674                           plusw2	equ	0xFDB
 34675                           fsr2h	equ	0xFDA
 34676                           fsr2l	equ	0xFD9
 34677                           status	equ	0xFD8
 34678                           
 34679 ;; *************** function _EEPROMinitialized *****************
 34680 ;; Defined at:
 34681 ;;		line 288 in file "EEPROM.c"
 34682 ;; Parameters:    Size  Location     Type
 34683 ;;		None
 34684 ;; Auto vars:     Size  Location     Type
 34685 ;;		None
 34686 ;; Return value:  Size  Location     Type
 34687 ;;                  1    wreg      unsigned char 
 34688 ;; Registers used:
 34689 ;;		wreg, status,2, status,0
 34690 ;; Tracked objects:
 34691 ;;		On entry : 0/0
 34692 ;;		On exit  : 0/0
 34693 ;;		Unchanged: 0/0
 34694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34699 ;;Total ram usage:        0 bytes
 34700 ;; Hardware stack levels used:    1
 34701 ;; Hardware stack levels required when called:    6
 34702 ;; This function calls:
 34703 ;;		Nothing
 34704 ;; This function is called by:
 34705 ;;		_Init_System
 34706 ;; This function uses a non-reentrant model
 34707 ;;
 34708                           
 34709                           	psect	text98
 34710  009438                     __ptext98:
 34711                           	opt stack 0
 34712  009438                     _EEPROMinitialized:
 34713                           	opt stack 23
 34714                           
 34715                           ;EEPROM.c: 290: if(Global.EEPROMinitFlag == 59)
 34716                           
 34717                           ;incstack = 0
 34718  009438  0E3B               	movlw	59
 34719  00943A  0104               	movlb	4	; () banked
 34720  00943C  192D               	xorwf	(_Global+45)& (0+255),w,b
 34721  00943E  A4D8               	btfss	status,2,c
 34722  009440  D002               	goto	l14446
 34723                           
 34724                           ; BSR set to: 4
 34725                           ;EEPROM.c: 291: {
 34726                           ;EEPROM.c: 292: return 1;
 34727  009442  0E01               	movlw	1
 34728                           
 34729                           ; BSR set to: 4
 34730  009444  0012               	return	
 34731  009446                     l14446:
 34732                           
 34733                           ; BSR set to: 4
 34734                           ;EEPROM.c: 293: }
 34735                           ;EEPROM.c: 294: return 0;
 34736  009446  0E00               	movlw	0
 34737  009448  0012               	return	
 34738                           
 34739                           ; BSR set to: 4
 34740                           
 34741                           ; BSR set to: 4
 34742  00944A  0012               	return		;funcret
 34743  00944C                     __end_of_EEPROMinitialized:
 34744                           	opt stack 0
 34745                           tblptru	equ	0xFF8
 34746                           tblptrh	equ	0xFF7
 34747                           tblptrl	equ	0xFF6
 34748                           tablat	equ	0xFF5
 34749                           prodh	equ	0xFF4
 34750                           prodl	equ	0xFF3
 34751                           intcon	equ	0xFF2
 34752                           intcon2	equ	0xFF1
 34753                           indf0	equ	0xFEF
 34754                           postinc0	equ	0xFEE
 34755                           plusw0	equ	0xFEB
 34756                           fsr0h	equ	0xFEA
 34757                           fsr0l	equ	0xFE9
 34758                           wreg	equ	0xFE8
 34759                           indf1	equ	0xFE7
 34760                           postdec1	equ	0xFE5
 34761                           fsr1h	equ	0xFE2
 34762                           fsr1l	equ	0xFE1
 34763                           indf2	equ	0xFDF
 34764                           postinc2	equ	0xFDE
 34765                           postdec2	equ	0xFDD
 34766                           plusw2	equ	0xFDB
 34767                           fsr2h	equ	0xFDA
 34768                           fsr2l	equ	0xFD9
 34769                           status	equ	0xFD8
 34770                           
 34771 ;; *************** function _InitApp *****************
 34772 ;; Defined at:
 34773 ;;		line 62 in file "user.c"
 34774 ;; Parameters:    Size  Location     Type
 34775 ;;		None
 34776 ;; Auto vars:     Size  Location     Type
 34777 ;;		None
 34778 ;; Return value:  Size  Location     Type
 34779 ;;		None               void
 34780 ;; Registers used:
 34781 ;;		wreg, status,2, status,0
 34782 ;; Tracked objects:
 34783 ;;		On entry : 0/0
 34784 ;;		On exit  : 0/0
 34785 ;;		Unchanged: 0/0
 34786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34791 ;;Total ram usage:        0 bytes
 34792 ;; Hardware stack levels used:    1
 34793 ;; Hardware stack levels required when called:    6
 34794 ;; This function calls:
 34795 ;;		Nothing
 34796 ;; This function is called by:
 34797 ;;		_main
 34798 ;; This function uses a non-reentrant model
 34799 ;;
 34800                           
 34801                           	psect	text99
 34802  009018                     __ptext99:
 34803                           	opt stack 0
 34804  009018                     _InitApp:
 34805                           	opt stack 24
 34806                           
 34807                           ;user.c: 64: LATA = 0;
 34808                           
 34809                           ; BSR set to: 4
 34810                           ;incstack = 0
 34811  009018  0E00               	movlw	0
 34812  00901A  6E89               	movwf	3977,c	;volatile
 34813                           
 34814                           ;user.c: 65: LATB = 0;
 34815  00901C  0E00               	movlw	0
 34816  00901E  6E8A               	movwf	3978,c	;volatile
 34817                           
 34818                           ;user.c: 66: LATC = 0;
 34819  009020  0E00               	movlw	0
 34820  009022  6E8B               	movwf	3979,c	;volatile
 34821                           
 34822                           ;user.c: 67: LATA |= 0x04;
 34823  009024  8489               	bsf	3977,2,c	;volatile
 34824                           
 34825                           ;user.c: 69: TRISAbits.TRISA0 = 1;
 34826  009026  8092               	bsf	3986,0,c	;volatile
 34827                           
 34828                           ;user.c: 70: TRISAbits.TRISA1 = 1;
 34829  009028  8292               	bsf	3986,1,c	;volatile
 34830                           
 34831                           ;user.c: 71: TRISAbits.TRISA2 = 0;
 34832  00902A  9492               	bcf	3986,2,c	;volatile
 34833                           
 34834                           ;user.c: 72: TRISAbits.TRISA3 = 0;
 34835  00902C  9692               	bcf	3986,3,c	;volatile
 34836                           
 34837                           ;user.c: 73: TRISAbits.TRISA4 = 0;
 34838  00902E  9892               	bcf	3986,4,c	;volatile
 34839                           
 34840                           ;user.c: 74: TRISAbits.TRISA5 = 0;
 34841  009030  9A92               	bcf	3986,5,c	;volatile
 34842                           
 34843                           ;user.c: 75: TRISCbits.TRISC0 = 1;
 34844  009032  8094               	bsf	3988,0,c	;volatile
 34845                           
 34846                           ;user.c: 76: TRISCbits.TRISC1 = 0;
 34847  009034  9294               	bcf	3988,1,c	;volatile
 34848                           
 34849                           ;user.c: 77: TRISCbits.TRISC2 = 0;
 34850  009036  9494               	bcf	3988,2,c	;volatile
 34851                           
 34852                           ;user.c: 78: TRISCbits.TRISC3 = 0;
 34853  009038  9694               	bcf	3988,3,c	;volatile
 34854                           
 34855                           ;user.c: 79: TRISCbits.TRISC4 = 0;
 34856  00903A  9894               	bcf	3988,4,c	;volatile
 34857                           
 34858                           ;user.c: 80: TRISCbits.TRISC5 = 0;
 34859  00903C  9A94               	bcf	3988,5,c	;volatile
 34860                           
 34861                           ;user.c: 81: TRISCbits.TRISC6 = 0;
 34862  00903E  9C94               	bcf	3988,6,c	;volatile
 34863                           
 34864                           ;user.c: 82: TRISCbits.TRISC7 = 1;
 34865  009040  8E94               	bsf	3988,7,c	;volatile
 34866                           
 34867                           ;user.c: 83: TRISBbits.TRISB0 = 1;
 34868  009042  8093               	bsf	3987,0,c	;volatile
 34869                           
 34870                           ;user.c: 84: TRISBbits.TRISB1 = 1;
 34871  009044  8293               	bsf	3987,1,c	;volatile
 34872                           
 34873                           ;user.c: 85: TRISBbits.TRISB2 = 1;
 34874  009046  8493               	bsf	3987,2,c	;volatile
 34875                           
 34876                           ;user.c: 86: TRISBbits.TRISB3 = 1;
 34877  009048  8693               	bsf	3987,3,c	;volatile
 34878                           
 34879                           ;user.c: 87: TRISBbits.TRISB4 = 1;
 34880  00904A  8893               	bsf	3987,4,c	;volatile
 34881                           
 34882                           ;user.c: 88: TRISBbits.TRISB5 = 1;
 34883  00904C  8A93               	bsf	3987,5,c	;volatile
 34884                           
 34885                           ;user.c: 91: ANSEL = 0x01;
 34886  00904E  0E01               	movlw	1
 34887  009050  6E7E               	movwf	3966,c	;volatile
 34888                           
 34889                           ;user.c: 92: ANSELH = 0x00;
 34890  009052  0E00               	movlw	0
 34891  009054  6E7F               	movwf	3967,c	;volatile
 34892                           
 34893                           ;user.c: 95: INTCON2bits.RBPU = 0;
 34894  009056  9EF1               	bcf	intcon2,7,c	;volatile
 34895                           
 34896                           ;user.c: 97: WPUB = 0x0F;
 34897  009058  0E0F               	movlw	15
 34898  00905A  6E7C               	movwf	3964,c	;volatile
 34899  00905C  0012               	return		;funcret
 34900  00905E                     __end_of_InitApp:
 34901                           	opt stack 0
 34902                           tblptru	equ	0xFF8
 34903                           tblptrh	equ	0xFF7
 34904                           tblptrl	equ	0xFF6
 34905                           tablat	equ	0xFF5
 34906                           prodh	equ	0xFF4
 34907                           prodl	equ	0xFF3
 34908                           intcon	equ	0xFF2
 34909                           intcon2	equ	0xFF1
 34910                           indf0	equ	0xFEF
 34911                           postinc0	equ	0xFEE
 34912                           plusw0	equ	0xFEB
 34913                           fsr0h	equ	0xFEA
 34914                           fsr0l	equ	0xFE9
 34915                           wreg	equ	0xFE8
 34916                           indf1	equ	0xFE7
 34917                           postdec1	equ	0xFE5
 34918                           fsr1h	equ	0xFE2
 34919                           fsr1l	equ	0xFE1
 34920                           indf2	equ	0xFDF
 34921                           postinc2	equ	0xFDE
 34922                           postdec2	equ	0xFDD
 34923                           plusw2	equ	0xFDB
 34924                           fsr2h	equ	0xFDA
 34925                           fsr2l	equ	0xFD9
 34926                           status	equ	0xFD8
 34927                           
 34928 ;; *************** function _ConfigureOscillator *****************
 34929 ;; Defined at:
 34930 ;;		line 43 in file "system.c"
 34931 ;; Parameters:    Size  Location     Type
 34932 ;;		None
 34933 ;; Auto vars:     Size  Location     Type
 34934 ;;		None
 34935 ;; Return value:  Size  Location     Type
 34936 ;;		None               void
 34937 ;; Registers used:
 34938 ;;		None
 34939 ;; Tracked objects:
 34940 ;;		On entry : 0/0
 34941 ;;		On exit  : 0/0
 34942 ;;		Unchanged: 0/0
 34943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34948 ;;Total ram usage:        0 bytes
 34949 ;; Hardware stack levels used:    1
 34950 ;; Hardware stack levels required when called:    6
 34951 ;; This function calls:
 34952 ;;		Nothing
 34953 ;; This function is called by:
 34954 ;;		_main
 34955 ;; This function uses a non-reentrant model
 34956 ;;
 34957                           
 34958                           	psect	text100
 34959  00955C                     __ptext100:
 34960                           	opt stack 0
 34961  00955C                     _ConfigureOscillator:
 34962                           	opt stack 24
 34963                           
 34964                           ;incstack = 0
 34965  00955C  0012               	return		;funcret
 34966  00955E                     __end_of_ConfigureOscillator:
 34967                           	opt stack 0
 34968                           tblptru	equ	0xFF8
 34969                           tblptrh	equ	0xFF7
 34970                           tblptrl	equ	0xFF6
 34971                           tablat	equ	0xFF5
 34972                           prodh	equ	0xFF4
 34973                           prodl	equ	0xFF3
 34974                           intcon	equ	0xFF2
 34975                           intcon2	equ	0xFF1
 34976                           indf0	equ	0xFEF
 34977                           postinc0	equ	0xFEE
 34978                           plusw0	equ	0xFEB
 34979                           fsr0h	equ	0xFEA
 34980                           fsr0l	equ	0xFE9
 34981                           wreg	equ	0xFE8
 34982                           indf1	equ	0xFE7
 34983                           postdec1	equ	0xFE5
 34984                           fsr1h	equ	0xFE2
 34985                           fsr1l	equ	0xFE1
 34986                           indf2	equ	0xFDF
 34987                           postinc2	equ	0xFDE
 34988                           postdec2	equ	0xFDD
 34989                           plusw2	equ	0xFDB
 34990                           fsr2h	equ	0xFDA
 34991                           fsr2l	equ	0xFD9
 34992                           status	equ	0xFD8
 34993                           
 34994 ;; *************** function _low_isr *****************
 34995 ;; Defined at:
 34996 ;;		line 608 in file "interrupts.c"
 34997 ;; Parameters:    Size  Location     Type
 34998 ;;		None
 34999 ;; Auto vars:     Size  Location     Type
 35000 ;;  data            1   25[COMRAM] unsigned char 
 35001 ;; Return value:  Size  Location     Type
 35002 ;;		None               void
 35003 ;; Registers used:
 35004 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35005 ;; Tracked objects:
 35006 ;;		On entry : 0/0
 35007 ;;		On exit  : 0/0
 35008 ;;		Unchanged: 0/0
 35009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35011 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35012 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35013 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35014 ;;Total ram usage:       18 bytes
 35015 ;; Hardware stack levels used:    1
 35016 ;; Hardware stack levels required when called:    5
 35017 ;; This function calls:
 35018 ;;		_EraseScreen
 35019 ;;		_IsCharacter
 35020 ;;		i1_BlueConnected
 35021 ;;		i1_ReadUSART
 35022 ;;		i1_UARTchar
 35023 ;;		i1_UARTstring
 35024 ;;		i1_UARTstringCRLN
 35025 ;;		i1_cleanBuffer
 35026 ;; This function is called by:
 35027 ;;		Interrupt level 1
 35028 ;; This function uses a non-reentrant model
 35029 ;;
 35030                           
 35031                           	psect	intcodelo
 35032  000018                     __pintcodelo:
 35033                           	opt stack 0
 35034  000018                     _low_isr:
 35035                           	opt stack 17
 35036                           
 35037                           ;incstack = 0
 35038  000018  CFD8 F009          	movff	status,??_low_isr
 35039  00001C  CFE8 F00A          	movff	wreg,??_low_isr+1
 35040  000020  CFE0 F00B          	movff	bsr,??_low_isr+2
 35041  000024  CFFA F00C          	movff	pclath,??_low_isr+3
 35042  000028  CFFB F00D          	movff	pclatu,??_low_isr+4
 35043  00002C  CFE9 F00E          	movff	fsr0l,??_low_isr+5
 35044  000030  CFEA F00F          	movff	fsr0h,??_low_isr+6
 35045  000034  CFE1 F010          	movff	fsr1l,??_low_isr+7
 35046  000038  CFE2 F011          	movff	fsr1h,??_low_isr+8
 35047  00003C  CFD9 F012          	movff	fsr2l,??_low_isr+9
 35048  000040  CFDA F013          	movff	fsr2h,??_low_isr+10
 35049  000044  CFF3 F014          	movff	prodl,??_low_isr+11
 35050  000048  CFF4 F015          	movff	prodh,??_low_isr+12
 35051  00004C  CFF6 F016          	movff	tblptrl,??_low_isr+13
 35052  000050  CFF7 F017          	movff	tblptrh,??_low_isr+14
 35053  000054  CFF8 F018          	movff	tblptru,??_low_isr+15
 35054  000058  CFF5 F019          	movff	tablat,??_low_isr+16
 35055                           
 35056                           ;interrupts.c: 617: char data = 0;
 35057  00005C  0E00               	movlw	0
 35058  00005E  6E1A               	movwf	low_isr@data,c
 35059                           
 35060                           ;interrupts.c: 619: INTCONbits.PEIE = 0;
 35061  000060  9CF2               	bcf	intcon,6,c	;volatile
 35062                           
 35063                           ;interrupts.c: 621: if(PIR1bits.RCIF)
 35064  000062  AA9E               	btfss	3998,5,c	;volatile
 35065  000064  D093               	goto	i1l1338
 35066                           
 35067                           ;interrupts.c: 622: {
 35068                           ;interrupts.c: 624: data = ReadUSART();
 35069  000066  EC07  F04A         	call	i1_ReadUSART	;wreg free
 35070  00006A  6E1A               	movwf	low_isr@data,c
 35071                           
 35072                           ;interrupts.c: 626: if(!BlueConnected())
 35073  00006C  EC78  F04A         	call	i1_BlueConnected	;wreg free
 35074  000070  0900               	iorlw	0
 35075  000072  A4D8               	btfss	status,2,c
 35076  000074  D00F               	goto	i1l12358
 35077                           
 35078                           ;interrupts.c: 627: {
 35079                           ;interrupts.c: 628: if(CommandStringPos < 255)
 35080  000076  2826               	incf	_CommandStringPos,w,c
 35081  000078  B4D8               	btfsc	status,2,c
 35082  00007A  D086               	goto	i1l12408
 35083                           
 35084                           ;interrupts.c: 629: {
 35085                           ;interrupts.c: 630: CommandString[CommandStringPos] = data;
 35086  00007C  5026               	movf	_CommandStringPos,w,c
 35087  00007E  0D01               	mullw	1
 35088  000080  0E00               	movlw	low _CommandString
 35089  000082  24F3               	addwf	prodl,w,c
 35090  000084  6ED9               	movwf	fsr2l,c
 35091  000086  0E05               	movlw	high _CommandString
 35092  000088  20F4               	addwfc	prodh,w,c
 35093  00008A  6EDA               	movwf	fsr2h,c
 35094  00008C  C01A  FFDF         	movff	low_isr@data,indf2
 35095                           
 35096                           ;interrupts.c: 631: CommandStringPos++;
 35097  000090  2A26               	incf	_CommandStringPos,f,c
 35098                           
 35099                           ;interrupts.c: 632: }
 35100                           ;interrupts.c: 633: }
 35101  000092  D07A               	goto	i1l12408
 35102  000094                     i1l12358:
 35103                           
 35104                           ;interrupts.c: 634: else
 35105                           ;interrupts.c: 635: {
 35106                           ;interrupts.c: 636: if(data != '\r' && data != '\n')
 35107  000094  0E0D               	movlw	13
 35108  000096  181A               	xorwf	low_isr@data,w,c
 35109  000098  B4D8               	btfsc	status,2,c
 35110  00009A  D063               	goto	i1l12398
 35111  00009C  0E0A               	movlw	10
 35112  00009E  181A               	xorwf	low_isr@data,w,c
 35113  0000A0  B4D8               	btfsc	status,2,c
 35114  0000A2  D05F               	goto	i1l12398
 35115                           
 35116                           ;interrupts.c: 637: {
 35117                           ;interrupts.c: 638: if((data == 127 || data == 8) && (ReceivedStringPos > 0))
 35118  0000A4  0E7F               	movlw	127
 35119  0000A6  181A               	xorwf	low_isr@data,w,c
 35120  0000A8  B4D8               	btfsc	status,2,c
 35121  0000AA  D004               	goto	i1l12366
 35122  0000AC  0E08               	movlw	8
 35123  0000AE  181A               	xorwf	low_isr@data,w,c
 35124  0000B0  A4D8               	btfss	status,2,c
 35125  0000B2  D01F               	goto	i1l12378
 35126  0000B4                     i1l12366:
 35127  0000B4  0100               	movlb	0	; () banked
 35128  0000B6  51E0               	movf	_ReceivedStringPos& (0+255),w,b
 35129  0000B8  B4D8               	btfsc	status,2,c
 35130  0000BA  D01B               	goto	i1l12378
 35131                           
 35132                           ; BSR set to: 0
 35133                           ;interrupts.c: 639: {
 35134                           ;interrupts.c: 641: EraseScreen(ReceivedStringPos + 1);
 35135  0000BC  0100               	movlb	0	; () banked
 35136  0000BE  29E0               	incf	_ReceivedStringPos& (0+255),w,b
 35137  0000C0  EC8D  F049         	call	_EraseScreen
 35138                           
 35139                           ;interrupts.c: 642: ReceivedStringPos--;
 35140  0000C4  0100               	movlb	0	; () banked
 35141  0000C6  07E0               	decf	_ReceivedStringPos& (0+255),f,b
 35142                           
 35143                           ; BSR set to: 0
 35144                           ;interrupts.c: 643: ReceivedString[ReceivedStringPos] = '\0';
 35145  0000C8  0100               	movlb	0	; () banked
 35146  0000CA  51E0               	movf	_ReceivedStringPos& (0+255),w,b
 35147  0000CC  0D01               	mullw	1
 35148  0000CE  0E00               	movlw	low _ReceivedString
 35149  0000D0  24F3               	addwf	prodl,w,c
 35150  0000D2  6ED9               	movwf	fsr2l,c
 35151  0000D4  0E06               	movlw	high _ReceivedString
 35152  0000D6  20F4               	addwfc	prodh,w,c
 35153  0000D8  6EDA               	movwf	fsr2h,c
 35154  0000DA  0E00               	movlw	0
 35155  0000DC  6EDF               	movwf	indf2,c
 35156                           
 35157                           ; BSR set to: 0
 35158                           ;interrupts.c: 644: UARTchar('>');
 35159  0000DE  0E3E               	movlw	62
 35160  0000E0  ECE5  F049         	call	i1_UARTchar
 35161                           
 35162                           ;interrupts.c: 645: UARTstring(ReceivedString);
 35163  0000E4  0E00               	movlw	low _ReceivedString
 35164  0000E6  6E02               	movwf	i1UARTstring@data,c
 35165  0000E8  0E06               	movlw	high _ReceivedString
 35166  0000EA  6E03               	movwf	i1UARTstring@data+1,c
 35167  0000EC  ECF1  F046         	call	i1_UARTstring	;wreg free
 35168                           
 35169                           ;interrupts.c: 646: }
 35170  0000F0  D04B               	goto	i1l12408
 35171  0000F2                     i1l12378:
 35172                           
 35173                           ;interrupts.c: 647: else if(ReceivedStringPos < 255)
 35174  0000F2  0100               	movlb	0	; () banked
 35175  0000F4  29E0               	incf	_ReceivedStringPos& (0+255),w,b
 35176  0000F6  B4D8               	btfsc	status,2,c
 35177  0000F8  D01B               	goto	i1l12390
 35178                           
 35179                           ; BSR set to: 0
 35180                           ;interrupts.c: 648: {
 35181                           ;interrupts.c: 649: if(!NewReceivedString)
 35182  0000FA  0100               	movlb	0	; () banked
 35183  0000FC  51DF               	movf	_NewReceivedString& (0+255),w,b	;volatile
 35184  0000FE  A4D8               	btfss	status,2,c
 35185  000100  D043               	goto	i1l12408
 35186                           
 35187                           ; BSR set to: 0
 35188                           ;interrupts.c: 650: {
 35189                           ;interrupts.c: 651: if(IsCharacter(data))
 35190  000102  501A               	movf	low_isr@data,w,c
 35191  000104  ECD9  F049         	call	_IsCharacter
 35192  000108  0900               	iorlw	0
 35193  00010A  B4D8               	btfsc	status,2,c
 35194  00010C  D03D               	goto	i1l12408
 35195                           
 35196                           ;interrupts.c: 652: {
 35197                           ;interrupts.c: 653: UARTchar(data);
 35198  00010E  501A               	movf	low_isr@data,w,c
 35199  000110  ECE5  F049         	call	i1_UARTchar
 35200                           
 35201                           ;interrupts.c: 654: ReceivedString[ReceivedStringPos] = data;
 35202  000114  0100               	movlb	0	; () banked
 35203  000116  51E0               	movf	_ReceivedStringPos& (0+255),w,b
 35204  000118  0D01               	mullw	1
 35205  00011A  0E00               	movlw	low _ReceivedString
 35206  00011C  24F3               	addwf	prodl,w,c
 35207  00011E  6ED9               	movwf	fsr2l,c
 35208  000120  0E06               	movlw	high _ReceivedString
 35209  000122  20F4               	addwfc	prodh,w,c
 35210  000124  6EDA               	movwf	fsr2h,c
 35211  000126  C01A  FFDF         	movff	low_isr@data,indf2
 35212                           
 35213                           ; BSR set to: 0
 35214                           ;interrupts.c: 655: ReceivedStringPos++;
 35215  00012A  0100               	movlb	0	; () banked
 35216  00012C  2BE0               	incf	_ReceivedStringPos& (0+255),f,b
 35217                           
 35218                           ; BSR set to: 0
 35219                           ;interrupts.c: 656: }
 35220                           ;interrupts.c: 657: }
 35221                           ;interrupts.c: 658: }
 35222                           
 35223                           ; BSR set to: 0
 35224  00012E  D02C               	goto	i1l12408
 35225  000130                     i1l12390:
 35226                           
 35227                           ; BSR set to: 0
 35228                           ;interrupts.c: 659: else
 35229                           ;interrupts.c: 660: {
 35230                           ;interrupts.c: 661: cleanBuffer(ReceivedString,255);
 35231  000130  0E00               	movlw	low _ReceivedString
 35232  000132  6E01               	movwf	i1cleanBuffer@data,c
 35233  000134  0E06               	movlw	high _ReceivedString
 35234  000136  6E02               	movwf	i1cleanBuffer@data+1,c
 35235  000138  0E00               	movlw	0
 35236  00013A  6E04               	movwf	i1cleanBuffer@count+1,c
 35237  00013C  6803               	setf	i1cleanBuffer@count,c
 35238  00013E  EC91  F048         	call	i1_cleanBuffer	;wreg free
 35239                           
 35240                           ;interrupts.c: 662: ReceivedStringPos = 0;
 35241  000142  0E00               	movlw	0
 35242  000144  0100               	movlb	0	; () banked
 35243  000146  6FE0               	movwf	_ReceivedStringPos& (0+255),b
 35244                           
 35245                           ; BSR set to: 0
 35246                           ;interrupts.c: 663: UARTstring(CRLN);
 35247  000148  0ED1               	movlw	low _CRLN
 35248  00014A  6E02               	movwf	i1UARTstring@data,c
 35249  00014C  0EF3               	movlw	high _CRLN
 35250  00014E  6E03               	movwf	i1UARTstring@data+1,c
 35251  000150  ECF1  F046         	call	i1_UARTstring	;wreg free
 35252                           
 35253                           ;interrupts.c: 664: UARTstringCRLN((unsigned char *)"Buffer Overflow");
 35254  000154  0E77               	movlw	low STR_1
 35255  000156  6E04               	movwf	i1UARTstringCRLN@data,c
 35256  000158  0EFE               	movlw	high STR_1
 35257  00015A  6E05               	movwf	i1UARTstringCRLN@data+1,c
 35258  00015C  EC36  F046         	call	i1_UARTstringCRLN	;wreg free
 35259                           
 35260                           ;interrupts.c: 665: }
 35261                           ;interrupts.c: 666: }
 35262  000160  D013               	goto	i1l12408
 35263  000162                     i1l12398:
 35264                           
 35265                           ;interrupts.c: 667: else if(ReceivedStringPos > 0 && (NewReceivedString == 0))
 35266  000162  0100               	movlb	0	; () banked
 35267  000164  51E0               	movf	_ReceivedStringPos& (0+255),w,b
 35268  000166  B4D8               	btfsc	status,2,c
 35269  000168  D00F               	goto	i1l12408
 35270                           
 35271                           ; BSR set to: 0
 35272  00016A  0100               	movlb	0	; () banked
 35273  00016C  51DF               	movf	_NewReceivedString& (0+255),w,b	;volatile
 35274  00016E  A4D8               	btfss	status,2,c
 35275  000170  D00B               	goto	i1l12408
 35276                           
 35277                           ; BSR set to: 0
 35278                           ;interrupts.c: 668: {
 35279                           ;interrupts.c: 669: PIE1bits.RCIE = 0;
 35280  000172  9A9D               	bcf	3997,5,c	;volatile
 35281                           
 35282                           ; BSR set to: 0
 35283                           ;interrupts.c: 670: UARTstring(CRLN);
 35284  000174  0ED1               	movlw	low _CRLN
 35285  000176  6E02               	movwf	i1UARTstring@data,c
 35286  000178  0EF3               	movlw	high _CRLN
 35287  00017A  6E03               	movwf	i1UARTstring@data+1,c
 35288  00017C  ECF1  F046         	call	i1_UARTstring	;wreg free
 35289                           
 35290                           ;interrupts.c: 671: NewReceivedString = 1;
 35291  000180  0E01               	movlw	1
 35292  000182  0100               	movlb	0	; () banked
 35293  000184  6FDF               	movwf	_NewReceivedString& (0+255),b	;volatile
 35294                           
 35295                           ; BSR set to: 0
 35296                           
 35297                           ; BSR set to: 0
 35298  000186  D000               	goto	i1l12408
 35299  000188                     i1l12408:
 35300                           
 35301                           ;interrupts.c: 672: }
 35302                           ;interrupts.c: 673: }
 35303                           ;interrupts.c: 674: PIR1bits.RCIF = 0;
 35304  000188  9A9E               	bcf	3998,5,c	;volatile
 35305                           
 35306                           ;interrupts.c: 675: }
 35307  00018A  D00F               	goto	i1l1353
 35308  00018C                     i1l1338:
 35309                           
 35310                           ;interrupts.c: 676: else if(PIR1bits.TMR1IF)
 35311  00018C  A09E               	btfss	3998,0,c	;volatile
 35312  00018E  D00B               	goto	i1l1354
 35313                           
 35314                           ;interrupts.c: 677: {
 35315                           ;interrupts.c: 678: Timer1_Postscaler++;
 35316  000190  2A38               	incf	_Timer1_Postscaler,f,c
 35317                           
 35318                           ;interrupts.c: 679: if(Timer1_Postscaler == 3)
 35319  000192  0E03               	movlw	3
 35320  000194  1838               	xorwf	_Timer1_Postscaler,w,c
 35321  000196  A4D8               	btfss	status,2,c
 35322  000198  D004               	goto	i1l12418
 35323                           
 35324                           ;interrupts.c: 680: {
 35325                           ;interrupts.c: 681: (LATC &= ~0x04);
 35326  00019A  948B               	bcf	3979,2,c	;volatile
 35327                           
 35328                           ;interrupts.c: 682: (LATC &= ~0x02);
 35329  00019C  928B               	bcf	3979,1,c	;volatile
 35330                           
 35331                           ;interrupts.c: 683: (T1CONbits.TMR1ON = 0);
 35332  00019E  90CD               	bcf	4045,0,c	;volatile
 35333  0001A0  D000               	goto	i1l12418
 35334  0001A2                     i1l12418:
 35335                           
 35336                           ;interrupts.c: 684: }
 35337                           ;interrupts.c: 685: PIR1bits.TMR1IF = 0;
 35338  0001A2  909E               	bcf	3998,0,c	;volatile
 35339                           
 35340                           ;interrupts.c: 686: }
 35341  0001A4  D002               	goto	i1l1353
 35342  0001A6                     i1l1354:
 35343                           
 35344                           ;interrupts.c: 687: else
 35345                           ;interrupts.c: 688: {
 35346                           ;interrupts.c: 690: __nop();
 35347  0001A6  F000               	nop	
 35348  0001A8  D000               	goto	i1l1353
 35349  0001AA                     i1l1353:
 35350                           
 35351                           ;interrupts.c: 691: }
 35352                           ;interrupts.c: 692: INTCONbits.PEIE = 1;
 35353  0001AA  8CF2               	bsf	intcon,6,c	;volatile
 35354  0001AC  C019  FFF5         	movff	??_low_isr+16,tablat
 35355  0001B0  C018  FFF8         	movff	??_low_isr+15,tblptru
 35356  0001B4  C017  FFF7         	movff	??_low_isr+14,tblptrh
 35357  0001B8  C016  FFF6         	movff	??_low_isr+13,tblptrl
 35358  0001BC  C015  FFF4         	movff	??_low_isr+12,prodh
 35359  0001C0  C014  FFF3         	movff	??_low_isr+11,prodl
 35360  0001C4  C013  FFDA         	movff	??_low_isr+10,fsr2h
 35361  0001C8  C012  FFD9         	movff	??_low_isr+9,fsr2l
 35362  0001CC  C011  FFE2         	movff	??_low_isr+8,fsr1h
 35363  0001D0  C010  FFE1         	movff	??_low_isr+7,fsr1l
 35364  0001D4  C00F  FFEA         	movff	??_low_isr+6,fsr0h
 35365  0001D8  C00E  FFE9         	movff	??_low_isr+5,fsr0l
 35366  0001DC  C00D  FFFB         	movff	??_low_isr+4,pclatu
 35367  0001E0  C00C  FFFA         	movff	??_low_isr+3,pclath
 35368  0001E4  C00B  FFE0         	movff	??_low_isr+2,bsr
 35369  0001E8  C00A  FFE8         	movff	??_low_isr+1,wreg
 35370  0001EC  C009  FFD8         	movff	??_low_isr,status
 35371  0001F0  0010               	retfie	
 35372  0001F2                     __end_of_low_isr:
 35373                           	opt stack 0
 35374                           pclatu	equ	0xFFB
 35375                           pclath	equ	0xFFA
 35376                           tblptru	equ	0xFF8
 35377                           tblptrh	equ	0xFF7
 35378                           tblptrl	equ	0xFF6
 35379                           tablat	equ	0xFF5
 35380                           prodh	equ	0xFF4
 35381                           prodl	equ	0xFF3
 35382                           intcon	equ	0xFF2
 35383                           intcon2	equ	0xFF1
 35384                           indf0	equ	0xFEF
 35385                           postinc0	equ	0xFEE
 35386                           plusw0	equ	0xFEB
 35387                           fsr0h	equ	0xFEA
 35388                           fsr0l	equ	0xFE9
 35389                           wreg	equ	0xFE8
 35390                           indf1	equ	0xFE7
 35391                           postdec1	equ	0xFE5
 35392                           fsr1h	equ	0xFE2
 35393                           fsr1l	equ	0xFE1
 35394                           bsr	equ	0xFE0
 35395                           indf2	equ	0xFDF
 35396                           postinc2	equ	0xFDE
 35397                           postdec2	equ	0xFDD
 35398                           plusw2	equ	0xFDB
 35399                           fsr2h	equ	0xFDA
 35400                           fsr2l	equ	0xFD9
 35401                           status	equ	0xFD8
 35402                           
 35403 ;; *************** function i1_cleanBuffer *****************
 35404 ;; Defined at:
 35405 ;;		line 127 in file "MISC.c"
 35406 ;; Parameters:    Size  Location     Type
 35407 ;;  data            2    0[COMRAM] PTR unsigned char 
 35408 ;;		 -> UseBluetooth@rfchannelSTR(10), UseBluetooth@buf(100), BluetoothInitialSetup@RFchannel(10), BluetoothInitialSetup
      +@buf(50), 
 35409 ;;		 -> CommandString(255), StringAddEqual@temp(255), ReceivedString(255), main@BluetoothString(255), 
 35410 ;;  count           2    2[COMRAM] int 
 35411 ;; Auto vars:     Size  Location     Type
 35412 ;;  cleanBuffer     1    7[COMRAM] unsigned char 
 35413 ;; Return value:  Size  Location     Type
 35414 ;;		None               void
 35415 ;; Registers used:
 35416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35417 ;; Tracked objects:
 35418 ;;		On entry : 0/0
 35419 ;;		On exit  : 0/0
 35420 ;;		Unchanged: 0/0
 35421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35422 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35423 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35424 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35425 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35426 ;;Total ram usage:        8 bytes
 35427 ;; Hardware stack levels used:    1
 35428 ;; Hardware stack levels required when called:    2
 35429 ;; This function calls:
 35430 ;;		Nothing
 35431 ;; This function is called by:
 35432 ;;		_low_isr
 35433 ;; This function uses a non-reentrant model
 35434 ;;
 35435                           
 35436                           	psect	text102
 35437  009122                     __ptext102:
 35438                           	opt stack 0
 35439  009122                     i1_cleanBuffer:
 35440                           	opt stack 19
 35441                           
 35442                           ;MISC.c: 129: unsigned char i=0;
 35443                           
 35444                           ;incstack = 0
 35445  009122  0E00               	movlw	0
 35446  009124  6E08               	movwf	i1cleanBuffer@i,c
 35447                           
 35448                           ;MISC.c: 130: for(i=0; i<count;i++)
 35449  009126  0E00               	movlw	0
 35450  009128  6E08               	movwf	i1cleanBuffer@i,c
 35451  00912A  D00C               	goto	i1l11680
 35452  00912C                     i1l11676:
 35453                           
 35454                           ;MISC.c: 131: {
 35455                           ;MISC.c: 132: data[i]= 0;
 35456  00912C  5008               	movf	i1cleanBuffer@i,w,c
 35457  00912E  0D01               	mullw	1
 35458  009130  50F3               	movf	prodl,w,c
 35459  009132  2401               	addwf	i1cleanBuffer@data,w,c
 35460  009134  6ED9               	movwf	fsr2l,c
 35461  009136  50F4               	movf	prodh,w,c
 35462  009138  2002               	addwfc	i1cleanBuffer@data+1,w,c
 35463  00913A  6EDA               	movwf	fsr2h,c
 35464  00913C  0E00               	movlw	0
 35465  00913E  6EDF               	movwf	indf2,c
 35466  009140  2A08               	incf	i1cleanBuffer@i,f,c
 35467  009142  D000               	goto	i1l11680
 35468  009144                     i1l11680:
 35469  009144  5008               	movf	i1cleanBuffer@i,w,c
 35470  009146  6E05               	movwf	??i1_cleanBuffer& (0+255),c
 35471  009148  6A06               	clrf	(??i1_cleanBuffer+1)& (0+255),c
 35472  00914A  5003               	movf	i1cleanBuffer@count,w,c
 35473  00914C  5C05               	subwf	??i1_cleanBuffer,w,c
 35474  00914E  5006               	movf	??i1_cleanBuffer+1,w,c
 35475  009150  0A80               	xorlw	128
 35476  009152  6E07               	movwf	(??i1_cleanBuffer+2)& (0+255),c
 35477  009154  5004               	movf	i1cleanBuffer@count+1,w,c
 35478  009156  0A80               	xorlw	128
 35479  009158  5807               	subwfb	(??i1_cleanBuffer+2)& (0+255),w,c
 35480  00915A  A0D8               	btfss	status,0,c
 35481  00915C  D7E7               	goto	i1l11676
 35482  00915E  0012               	return		;funcret
 35483  009160                     __end_ofi1_cleanBuffer:
 35484                           	opt stack 0
 35485                           pclatu	equ	0xFFB
 35486                           pclath	equ	0xFFA
 35487                           tblptru	equ	0xFF8
 35488                           tblptrh	equ	0xFF7
 35489                           tblptrl	equ	0xFF6
 35490                           tablat	equ	0xFF5
 35491                           prodh	equ	0xFF4
 35492                           prodl	equ	0xFF3
 35493                           intcon	equ	0xFF2
 35494                           intcon2	equ	0xFF1
 35495                           indf0	equ	0xFEF
 35496                           postinc0	equ	0xFEE
 35497                           plusw0	equ	0xFEB
 35498                           fsr0h	equ	0xFEA
 35499                           fsr0l	equ	0xFE9
 35500                           wreg	equ	0xFE8
 35501                           indf1	equ	0xFE7
 35502                           postdec1	equ	0xFE5
 35503                           fsr1h	equ	0xFE2
 35504                           fsr1l	equ	0xFE1
 35505                           bsr	equ	0xFE0
 35506                           indf2	equ	0xFDF
 35507                           postinc2	equ	0xFDE
 35508                           postdec2	equ	0xFDD
 35509                           plusw2	equ	0xFDB
 35510                           fsr2h	equ	0xFDA
 35511                           fsr2l	equ	0xFD9
 35512                           status	equ	0xFD8
 35513                           
 35514 ;; *************** function i1_UARTstringCRLN *****************
 35515 ;; Defined at:
 35516 ;;		line 262 in file "UART.c"
 35517 ;; Parameters:    Size  Location     Type
 35518 ;;  data            2    3[COMRAM] PTR unsigned char 
 35519 ;;		 -> STR_147(36), STR_145(27), STR_131(13), STR_100(13), 
 35520 ;;		 -> STR_97(21), STR_90(17), STR_81(29), STR_80(18), 
 35521 ;;		 -> STR_79(29), STR_76(44), STR_71(46), STR_70(42), 
 35522 ;;		 -> STR_69(50), STR_68(50), STR_66(31), STR_65(31), 
 35523 ;;		 -> STR_64(37), STR_63(37), STR_62(37), STR_58(18), 
 35524 ;;		 -> STR_57(14), STR_56(9), STR_55(20), STR_54(16), 
 35525 ;;		 -> STR_53(7), STR_52(35), STR_51(37), STR_48(47), 
 35526 ;;		 -> STR_43(17), STR_42(9), STR_41(18), STR_40(9), 
 35527 ;;		 -> STR_39(22), STR_38(11), STR_37(20), STR_36(7), 
 35528 ;;		 -> STR_35(31), STR_34(33), STR_30(32), STR_26(31), 
 35529 ;;		 -> STR_25(31), STR_23(29), STR_21(29), SYNTAX_ERR(14), 
 35530 ;;		 -> UseBluetooth@buf(100), STR_1(16), 
 35531 ;; Auto vars:     Size  Location     Type
 35532 ;;		None
 35533 ;; Return value:  Size  Location     Type
 35534 ;;		None               void
 35535 ;; Registers used:
 35536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35537 ;; Tracked objects:
 35538 ;;		On entry : 0/0
 35539 ;;		On exit  : 0/0
 35540 ;;		Unchanged: 0/0
 35541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35542 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35545 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35546 ;;Total ram usage:        2 bytes
 35547 ;; Hardware stack levels used:    1
 35548 ;; Hardware stack levels required when called:    4
 35549 ;; This function calls:
 35550 ;;		i1_UARTchar
 35551 ;;		i1_UARTstring
 35552 ;; This function is called by:
 35553 ;;		_low_isr
 35554 ;; This function uses a non-reentrant model
 35555 ;;
 35556                           
 35557                           	psect	text103
 35558  008C6C                     __ptext103:
 35559                           	opt stack 0
 35560  008C6C                     i1_UARTstringCRLN:
 35561                           	opt stack 17
 35562                           
 35563                           ;UART.c: 264: while(*data != 0)
 35564                           
 35565                           ;incstack = 0
 35566  008C6C  D016               	goto	i1l11708
 35567  008C6E                     i1l11704:
 35568                           
 35569                           ;UART.c: 265: {
 35570                           ;UART.c: 266: UARTchar(*data);
 35571  008C6E  C004  FFF6         	movff	i1UARTstringCRLN@data,tblptrl
 35572  008C72  C005  FFF7         	movff	i1UARTstringCRLN@data+1,tblptrh
 35573  008C76  0E00               	movlw	low (__mediumconst shr (0+16))
 35574  008C78  6EF8               	movwf	tblptru,c
 35575  008C7A  0E0F               	movlw	(high __ramtop+-1)
 35576  008C7C  64F7               	cpfsgt	tblptrh,c
 35577  008C7E  D003               	bra	i1u1338_27
 35578  008C80  0008               	tblrd		*
 35579  008C82  50F5               	movf	tablat,w,c
 35580  008C84  D005               	bra	i1u1338_20
 35581  008C86                     i1u1338_27:
 35582  008C86  CFF6 FFE9          	movff	tblptrl,fsr0l
 35583  008C8A  CFF7 FFEA          	movff	tblptrh,fsr0h
 35584  008C8E  50EF               	movf	indf0,w,c
 35585  008C90                     i1u1338_20:
 35586  008C90  ECE5  F049         	call	i1_UARTchar
 35587                           
 35588                           ;UART.c: 267: *data++;
 35589  008C94  4A04               	infsnz	i1UARTstringCRLN@data,f,c
 35590  008C96  2A05               	incf	i1UARTstringCRLN@data+1,f,c
 35591  008C98  D000               	goto	i1l11708
 35592  008C9A                     i1l11708:
 35593  008C9A  C004  FFF6         	movff	i1UARTstringCRLN@data,tblptrl
 35594  008C9E  C005  FFF7         	movff	i1UARTstringCRLN@data+1,tblptrh
 35595  008CA2  0E00               	movlw	low (__mediumconst shr (0+16))
 35596  008CA4  6EF8               	movwf	tblptru,c
 35597  008CA6  0E0F               	movlw	(high __ramtop+-1)
 35598  008CA8  64F7               	cpfsgt	tblptrh,c
 35599  008CAA  D003               	bra	i1u1339_27
 35600  008CAC  0008               	tblrd		*
 35601  008CAE  50F5               	movf	tablat,w,c
 35602  008CB0  D005               	bra	i1u1339_20
 35603  008CB2                     i1u1339_27:
 35604  008CB2  CFF6 FFE9          	movff	tblptrl,fsr0l
 35605  008CB6  CFF7 FFEA          	movff	tblptrh,fsr0h
 35606  008CBA  50EF               	movf	indf0,w,c
 35607  008CBC                     i1u1339_20:
 35608  008CBC  0900               	iorlw	0
 35609  008CBE  A4D8               	btfss	status,2,c
 35610  008CC0  D7D6               	goto	i1l11704
 35611                           
 35612                           ;UART.c: 268: }
 35613                           ;UART.c: 269: UARTstring(CRLN);
 35614  008CC2  0ED1               	movlw	low _CRLN
 35615  008CC4  6E02               	movwf	i1UARTstring@data,c
 35616  008CC6  0EF3               	movlw	high _CRLN
 35617  008CC8  6E03               	movwf	i1UARTstring@data+1,c
 35618  008CCA  ECF1  F046         	call	i1_UARTstring	;wreg free
 35619  008CCE  0012               	return		;funcret
 35620  008CD0                     __end_ofi1_UARTstringCRLN:
 35621                           	opt stack 0
 35622                           pclatu	equ	0xFFB
 35623                           pclath	equ	0xFFA
 35624                           tblptru	equ	0xFF8
 35625                           tblptrh	equ	0xFF7
 35626                           tblptrl	equ	0xFF6
 35627                           tablat	equ	0xFF5
 35628                           prodh	equ	0xFF4
 35629                           prodl	equ	0xFF3
 35630                           intcon	equ	0xFF2
 35631                           intcon2	equ	0xFF1
 35632                           indf0	equ	0xFEF
 35633                           postinc0	equ	0xFEE
 35634                           plusw0	equ	0xFEB
 35635                           fsr0h	equ	0xFEA
 35636                           fsr0l	equ	0xFE9
 35637                           wreg	equ	0xFE8
 35638                           indf1	equ	0xFE7
 35639                           postdec1	equ	0xFE5
 35640                           fsr1h	equ	0xFE2
 35641                           fsr1l	equ	0xFE1
 35642                           bsr	equ	0xFE0
 35643                           indf2	equ	0xFDF
 35644                           postinc2	equ	0xFDE
 35645                           postdec2	equ	0xFDD
 35646                           plusw2	equ	0xFDB
 35647                           fsr2h	equ	0xFDA
 35648                           fsr2l	equ	0xFD9
 35649                           status	equ	0xFD8
 35650                           
 35651 ;; *************** function i1_UARTstring *****************
 35652 ;; Defined at:
 35653 ;;		line 202 in file "UART.c"
 35654 ;; Parameters:    Size  Location     Type
 35655 ;;  data            2    1[COMRAM] PTR unsigned char 
 35656 ;;		 -> STR_146(28), STR_89(13), STR_78(32), STR_67(14), 
 35657 ;;		 -> SYNTAX_ERR(14), STR_18(5), STR_16(5), STR_14(6), 
 35658 ;;		 -> STR_12(6), STR_10(9), STR_8(21), STR_6(10), 
 35659 ;;		 -> BluetoothInitialSetup@buf(50), STR_2(4), CRLN(3), ReceivedString(255), 
 35660 ;; Auto vars:     Size  Location     Type
 35661 ;;		None
 35662 ;; Return value:  Size  Location     Type
 35663 ;;		None               void
 35664 ;; Registers used:
 35665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35666 ;; Tracked objects:
 35667 ;;		On entry : 0/0
 35668 ;;		On exit  : 0/0
 35669 ;;		Unchanged: 0/0
 35670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35675 ;;Total ram usage:        2 bytes
 35676 ;; Hardware stack levels used:    1
 35677 ;; Hardware stack levels required when called:    3
 35678 ;; This function calls:
 35679 ;;		i1_UARTchar
 35680 ;; This function is called by:
 35681 ;;		_low_isr
 35682 ;;		i1_UARTstringCRLN
 35683 ;; This function uses a non-reentrant model
 35684 ;;
 35685                           
 35686                           	psect	text104
 35687  008DE2                     __ptext104:
 35688                           	opt stack 0
 35689  008DE2                     i1_UARTstring:
 35690                           	opt stack 17
 35691                           
 35692                           ;UART.c: 204: while(*data != 0)
 35693                           
 35694                           ;incstack = 0
 35695  008DE2  D016               	goto	i1l10606
 35696  008DE4                     i1l10602:
 35697                           
 35698                           ;UART.c: 205: {
 35699                           ;UART.c: 206: UARTchar(*data);
 35700  008DE4  C002  FFF6         	movff	i1UARTstring@data,tblptrl
 35701  008DE8  C003  FFF7         	movff	i1UARTstring@data+1,tblptrh
 35702  008DEC  0E00               	movlw	low (__mediumconst shr (0+16))
 35703  008DEE  6EF8               	movwf	tblptru,c
 35704  008DF0  0E0F               	movlw	(high __ramtop+-1)
 35705  008DF2  64F7               	cpfsgt	tblptrh,c
 35706  008DF4  D003               	bra	i1u1178_27
 35707  008DF6  0008               	tblrd		*
 35708  008DF8  50F5               	movf	tablat,w,c
 35709  008DFA  D005               	bra	i1u1178_20
 35710  008DFC                     i1u1178_27:
 35711  008DFC  CFF6 FFE9          	movff	tblptrl,fsr0l
 35712  008E00  CFF7 FFEA          	movff	tblptrh,fsr0h
 35713  008E04  50EF               	movf	indf0,w,c
 35714  008E06                     i1u1178_20:
 35715  008E06  ECE5  F049         	call	i1_UARTchar
 35716                           
 35717                           ;UART.c: 207: *data++;
 35718  008E0A  4A02               	infsnz	i1UARTstring@data,f,c
 35719  008E0C  2A03               	incf	i1UARTstring@data+1,f,c
 35720  008E0E  D000               	goto	i1l10606
 35721  008E10                     i1l10606:
 35722  008E10  C002  FFF6         	movff	i1UARTstring@data,tblptrl
 35723  008E14  C003  FFF7         	movff	i1UARTstring@data+1,tblptrh
 35724  008E18  0E00               	movlw	low (__mediumconst shr (0+16))
 35725  008E1A  6EF8               	movwf	tblptru,c
 35726  008E1C  0E0F               	movlw	(high __ramtop+-1)
 35727  008E1E  64F7               	cpfsgt	tblptrh,c
 35728  008E20  D003               	bra	i1u1179_27
 35729  008E22  0008               	tblrd		*
 35730  008E24  50F5               	movf	tablat,w,c
 35731  008E26  D005               	bra	i1u1179_20
 35732  008E28                     i1u1179_27:
 35733  008E28  CFF6 FFE9          	movff	tblptrl,fsr0l
 35734  008E2C  CFF7 FFEA          	movff	tblptrh,fsr0h
 35735  008E30  50EF               	movf	indf0,w,c
 35736  008E32                     i1u1179_20:
 35737  008E32  0900               	iorlw	0
 35738  008E34  A4D8               	btfss	status,2,c
 35739  008E36  D7D6               	goto	i1l10602
 35740  008E38  0012               	return		;funcret
 35741  008E3A                     __end_ofi1_UARTstring:
 35742                           	opt stack 0
 35743                           pclatu	equ	0xFFB
 35744                           pclath	equ	0xFFA
 35745                           tblptru	equ	0xFF8
 35746                           tblptrh	equ	0xFF7
 35747                           tblptrl	equ	0xFF6
 35748                           tablat	equ	0xFF5
 35749                           prodh	equ	0xFF4
 35750                           prodl	equ	0xFF3
 35751                           intcon	equ	0xFF2
 35752                           intcon2	equ	0xFF1
 35753                           indf0	equ	0xFEF
 35754                           postinc0	equ	0xFEE
 35755                           plusw0	equ	0xFEB
 35756                           fsr0h	equ	0xFEA
 35757                           fsr0l	equ	0xFE9
 35758                           wreg	equ	0xFE8
 35759                           indf1	equ	0xFE7
 35760                           postdec1	equ	0xFE5
 35761                           fsr1h	equ	0xFE2
 35762                           fsr1l	equ	0xFE1
 35763                           bsr	equ	0xFE0
 35764                           indf2	equ	0xFDF
 35765                           postinc2	equ	0xFDE
 35766                           postdec2	equ	0xFDD
 35767                           plusw2	equ	0xFDB
 35768                           fsr2h	equ	0xFDA
 35769                           fsr2l	equ	0xFD9
 35770                           status	equ	0xFD8
 35771                           
 35772 ;; *************** function i1_ReadUSART *****************
 35773 ;; Defined at:
 35774 ;;		line 227 in file "UART.c"
 35775 ;; Parameters:    Size  Location     Type
 35776 ;;		None
 35777 ;; Auto vars:     Size  Location     Type
 35778 ;;  ReadUSART       1    0[COMRAM] unsigned char 
 35779 ;; Return value:  Size  Location     Type
 35780 ;;                  1    wreg      unsigned char 
 35781 ;; Registers used:
 35782 ;;		wreg, status,2
 35783 ;; Tracked objects:
 35784 ;;		On entry : 0/0
 35785 ;;		On exit  : 0/0
 35786 ;;		Unchanged: 0/0
 35787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35792 ;;Total ram usage:        1 bytes
 35793 ;; Hardware stack levels used:    1
 35794 ;; Hardware stack levels required when called:    2
 35795 ;; This function calls:
 35796 ;;		Nothing
 35797 ;; This function is called by:
 35798 ;;		_low_isr
 35799 ;; This function uses a non-reentrant model
 35800 ;;
 35801                           
 35802                           	psect	text105
 35803  00940E                     __ptext105:
 35804                           	opt stack 0
 35805  00940E                     i1_ReadUSART:
 35806                           	opt stack 19
 35807                           
 35808                           ;UART.c: 229: unsigned char data;
 35809                           ;UART.c: 231: if(RCSTAbits.OERR)
 35810                           
 35811                           ;incstack = 0
 35812  00940E  A2AB               	btfss	4011,1,c	;volatile
 35813  009410  D004               	goto	i1l661
 35814                           
 35815                           ;UART.c: 232: {
 35816                           ;UART.c: 234: RCSTAbits.CREN = 0;
 35817  009412  98AB               	bcf	4011,4,c	;volatile
 35818                           
 35819                           ;UART.c: 235: RCSTAbits.CREN = 1;
 35820  009414  88AB               	bsf	4011,4,c	;volatile
 35821                           
 35822                           ;UART.c: 236: return 0;
 35823  009416  0E00               	movlw	0
 35824  009418  0012               	return	
 35825  00941A                     i1l661:
 35826                           
 35827                           ;UART.c: 237: }
 35828                           ;UART.c: 239: data = RCREG;
 35829  00941A  CFAE F001          	movff	4014,i1ReadUSART@data	;volatile
 35830                           
 35831                           ;UART.c: 240: return (data);
 35832  00941E  5001               	movf	i1ReadUSART@data,w,c
 35833  009420  0012               	return	
 35834  009422  0012               	return		;funcret
 35835  009424                     __end_ofi1_ReadUSART:
 35836                           	opt stack 0
 35837                           pclatu	equ	0xFFB
 35838                           pclath	equ	0xFFA
 35839                           tblptru	equ	0xFF8
 35840                           tblptrh	equ	0xFF7
 35841                           tblptrl	equ	0xFF6
 35842                           tablat	equ	0xFF5
 35843                           prodh	equ	0xFF4
 35844                           prodl	equ	0xFF3
 35845                           intcon	equ	0xFF2
 35846                           intcon2	equ	0xFF1
 35847                           indf0	equ	0xFEF
 35848                           postinc0	equ	0xFEE
 35849                           plusw0	equ	0xFEB
 35850                           fsr0h	equ	0xFEA
 35851                           fsr0l	equ	0xFE9
 35852                           wreg	equ	0xFE8
 35853                           indf1	equ	0xFE7
 35854                           postdec1	equ	0xFE5
 35855                           fsr1h	equ	0xFE2
 35856                           fsr1l	equ	0xFE1
 35857                           bsr	equ	0xFE0
 35858                           indf2	equ	0xFDF
 35859                           postinc2	equ	0xFDE
 35860                           postdec2	equ	0xFDD
 35861                           plusw2	equ	0xFDB
 35862                           fsr2h	equ	0xFDA
 35863                           fsr2l	equ	0xFD9
 35864                           status	equ	0xFD8
 35865                           
 35866 ;; *************** function i1_BlueConnected *****************
 35867 ;; Defined at:
 35868 ;;		line 88 in file "Bluetooth.c"
 35869 ;; Parameters:    Size  Location     Type
 35870 ;;		None
 35871 ;; Auto vars:     Size  Location     Type
 35872 ;;		None
 35873 ;; Return value:  Size  Location     Type
 35874 ;;                  1    wreg      unsigned char 
 35875 ;; Registers used:
 35876 ;;		wreg
 35877 ;; Tracked objects:
 35878 ;;		On entry : 0/0
 35879 ;;		On exit  : 0/0
 35880 ;;		Unchanged: 0/0
 35881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35886 ;;Total ram usage:        0 bytes
 35887 ;; Hardware stack levels used:    1
 35888 ;; Hardware stack levels required when called:    2
 35889 ;; This function calls:
 35890 ;;		Nothing
 35891 ;; This function is called by:
 35892 ;;		_low_isr
 35893 ;; This function uses a non-reentrant model
 35894 ;;
 35895                           
 35896                           	psect	text106
 35897  0094F0                     __ptext106:
 35898                           	opt stack 0
 35899  0094F0                     i1_BlueConnected:
 35900                           	opt stack 19
 35901                           
 35902                           ;Bluetooth.c: 91: if((PORTA & 0x02) == 0x02)
 35903                           
 35904                           ;incstack = 0
 35905  0094F0  A280               	btfss	3968,1,c	;volatile
 35906  0094F2  D002               	goto	i1l11732
 35907                           
 35908                           ;Bluetooth.c: 92: {
 35909                           ;Bluetooth.c: 93: return 1;
 35910  0094F4  0E01               	movlw	1
 35911  0094F6  0012               	return	
 35912  0094F8                     i1l11732:
 35913                           
 35914                           ;Bluetooth.c: 94: }
 35915                           ;Bluetooth.c: 95: return 0;
 35916  0094F8  0E00               	movlw	0
 35917  0094FA  0012               	return	
 35918  0094FC  0012               	return		;funcret
 35919  0094FE                     __end_ofi1_BlueConnected:
 35920                           	opt stack 0
 35921                           pclatu	equ	0xFFB
 35922                           pclath	equ	0xFFA
 35923                           tblptru	equ	0xFF8
 35924                           tblptrh	equ	0xFF7
 35925                           tblptrl	equ	0xFF6
 35926                           tablat	equ	0xFF5
 35927                           prodh	equ	0xFF4
 35928                           prodl	equ	0xFF3
 35929                           intcon	equ	0xFF2
 35930                           intcon2	equ	0xFF1
 35931                           indf0	equ	0xFEF
 35932                           postinc0	equ	0xFEE
 35933                           plusw0	equ	0xFEB
 35934                           fsr0h	equ	0xFEA
 35935                           fsr0l	equ	0xFE9
 35936                           wreg	equ	0xFE8
 35937                           indf1	equ	0xFE7
 35938                           postdec1	equ	0xFE5
 35939                           fsr1h	equ	0xFE2
 35940                           fsr1l	equ	0xFE1
 35941                           bsr	equ	0xFE0
 35942                           indf2	equ	0xFDF
 35943                           postinc2	equ	0xFDE
 35944                           postdec2	equ	0xFDD
 35945                           plusw2	equ	0xFDB
 35946                           fsr2h	equ	0xFDA
 35947                           fsr2l	equ	0xFD9
 35948                           status	equ	0xFD8
 35949                           
 35950 ;; *************** function _IsCharacter *****************
 35951 ;; Defined at:
 35952 ;;		line 113 in file "MISC.c"
 35953 ;; Parameters:    Size  Location     Type
 35954 ;;  data            1    wreg     unsigned char 
 35955 ;; Auto vars:     Size  Location     Type
 35956 ;;  data            1    0[COMRAM] unsigned char 
 35957 ;; Return value:  Size  Location     Type
 35958 ;;                  1    wreg      unsigned char 
 35959 ;; Registers used:
 35960 ;;		wreg, status,2, status,0
 35961 ;; Tracked objects:
 35962 ;;		On entry : 0/0
 35963 ;;		On exit  : 0/0
 35964 ;;		Unchanged: 0/0
 35965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35969 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35970 ;;Total ram usage:        1 bytes
 35971 ;; Hardware stack levels used:    1
 35972 ;; Hardware stack levels required when called:    2
 35973 ;; This function calls:
 35974 ;;		Nothing
 35975 ;; This function is called by:
 35976 ;;		_low_isr
 35977 ;; This function uses a non-reentrant model
 35978 ;;
 35979                           
 35980                           	psect	text107
 35981  0093B2                     __ptext107:
 35982                           	opt stack 0
 35983  0093B2                     _IsCharacter:
 35984                           	opt stack 19
 35985                           
 35986                           ;incstack = 0
 35987                           ;IsCharacter@data stored from wreg
 35988  0093B2  6E01               	movwf	IsCharacter@data,c
 35989                           
 35990                           ;MISC.c: 115: if(data >= 32 && data <= 126)
 35991  0093B4  0E1F               	movlw	31
 35992  0093B6  6401               	cpfsgt	IsCharacter@data,c
 35993  0093B8  D005               	goto	i1l11490
 35994  0093BA  0E7F               	movlw	127
 35995  0093BC  6001               	cpfslt	IsCharacter@data,c
 35996  0093BE  D002               	goto	i1l11490
 35997                           
 35998                           ;MISC.c: 116: {
 35999                           ;MISC.c: 117: return 1;
 36000  0093C0  0E01               	movlw	1
 36001  0093C2  0012               	return	
 36002  0093C4                     i1l11490:
 36003                           
 36004                           ;MISC.c: 118: }
 36005                           ;MISC.c: 119: return 0;
 36006  0093C4  0E00               	movlw	0
 36007  0093C6  0012               	return	
 36008  0093C8  0012               	return		;funcret
 36009  0093CA                     __end_of_IsCharacter:
 36010                           	opt stack 0
 36011                           pclatu	equ	0xFFB
 36012                           pclath	equ	0xFFA
 36013                           tblptru	equ	0xFF8
 36014                           tblptrh	equ	0xFF7
 36015                           tblptrl	equ	0xFF6
 36016                           tablat	equ	0xFF5
 36017                           prodh	equ	0xFF4
 36018                           prodl	equ	0xFF3
 36019                           intcon	equ	0xFF2
 36020                           intcon2	equ	0xFF1
 36021                           indf0	equ	0xFEF
 36022                           postinc0	equ	0xFEE
 36023                           plusw0	equ	0xFEB
 36024                           fsr0h	equ	0xFEA
 36025                           fsr0l	equ	0xFE9
 36026                           wreg	equ	0xFE8
 36027                           indf1	equ	0xFE7
 36028                           postdec1	equ	0xFE5
 36029                           fsr1h	equ	0xFE2
 36030                           fsr1l	equ	0xFE1
 36031                           bsr	equ	0xFE0
 36032                           indf2	equ	0xFDF
 36033                           postinc2	equ	0xFDE
 36034                           postdec2	equ	0xFDD
 36035                           plusw2	equ	0xFDB
 36036                           fsr2h	equ	0xFDA
 36037                           fsr2l	equ	0xFD9
 36038                           status	equ	0xFD8
 36039                           
 36040 ;; *************** function _EraseScreen *****************
 36041 ;; Defined at:
 36042 ;;		line 308 in file "UART.c"
 36043 ;; Parameters:    Size  Location     Type
 36044 ;;  characters      1    wreg     unsigned char 
 36045 ;; Auto vars:     Size  Location     Type
 36046 ;;  characters      1    1[COMRAM] unsigned char 
 36047 ;;  i               1    2[COMRAM] unsigned char 
 36048 ;; Return value:  Size  Location     Type
 36049 ;;		None               void
 36050 ;; Registers used:
 36051 ;;		wreg, status,2, status,0, cstack
 36052 ;; Tracked objects:
 36053 ;;		On entry : 0/0
 36054 ;;		On exit  : 0/0
 36055 ;;		Unchanged: 0/0
 36056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36058 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36060 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36061 ;;Total ram usage:        2 bytes
 36062 ;; Hardware stack levels used:    1
 36063 ;; Hardware stack levels required when called:    3
 36064 ;; This function calls:
 36065 ;;		i1_UARTchar
 36066 ;; This function is called by:
 36067 ;;		_low_isr
 36068 ;; This function uses a non-reentrant model
 36069 ;;
 36070                           
 36071                           	psect	text108
 36072  00931A                     __ptext108:
 36073                           	opt stack 0
 36074  00931A                     _EraseScreen:
 36075                           	opt stack 18
 36076                           
 36077                           ;incstack = 0
 36078                           ;EraseScreen@characters stored from wreg
 36079  00931A  6E02               	movwf	EraseScreen@characters,c
 36080                           
 36081                           ;UART.c: 310: unsigned char i;
 36082                           ;UART.c: 312: UARTchar('\r');
 36083  00931C  0E0D               	movlw	13
 36084  00931E  ECE5  F049         	call	i1_UARTchar
 36085                           
 36086                           ;UART.c: 313: for (i = 0; i < characters; i++)
 36087  009322  0E00               	movlw	0
 36088  009324  6E03               	movwf	EraseScreen@i,c
 36089  009326  D005               	goto	i1l11502
 36090  009328                     i1l11498:
 36091                           
 36092                           ;UART.c: 314: {
 36093                           ;UART.c: 315: UARTchar(' ');
 36094  009328  0E20               	movlw	32
 36095  00932A  ECE5  F049         	call	i1_UARTchar
 36096  00932E  2A03               	incf	EraseScreen@i,f,c
 36097  009330  D000               	goto	i1l11502
 36098  009332                     i1l11502:
 36099  009332  5002               	movf	EraseScreen@characters,w,c
 36100  009334  5C03               	subwf	EraseScreen@i,w,c
 36101  009336  A0D8               	btfss	status,0,c
 36102  009338  D7F7               	goto	i1l11498
 36103                           
 36104                           ;UART.c: 316: }
 36105                           ;UART.c: 317: UARTchar('\r');
 36106  00933A  0E0D               	movlw	13
 36107  00933C  ECE5  F049         	call	i1_UARTchar
 36108  009340  0012               	return		;funcret
 36109  009342                     __end_of_EraseScreen:
 36110                           	opt stack 0
 36111                           pclatu	equ	0xFFB
 36112                           pclath	equ	0xFFA
 36113                           tblptru	equ	0xFF8
 36114                           tblptrh	equ	0xFF7
 36115                           tblptrl	equ	0xFF6
 36116                           tablat	equ	0xFF5
 36117                           prodh	equ	0xFF4
 36118                           prodl	equ	0xFF3
 36119                           intcon	equ	0xFF2
 36120                           intcon2	equ	0xFF1
 36121                           indf0	equ	0xFEF
 36122                           postinc0	equ	0xFEE
 36123                           plusw0	equ	0xFEB
 36124                           fsr0h	equ	0xFEA
 36125                           fsr0l	equ	0xFE9
 36126                           wreg	equ	0xFE8
 36127                           indf1	equ	0xFE7
 36128                           postdec1	equ	0xFE5
 36129                           fsr1h	equ	0xFE2
 36130                           fsr1l	equ	0xFE1
 36131                           bsr	equ	0xFE0
 36132                           indf2	equ	0xFDF
 36133                           postinc2	equ	0xFDE
 36134                           postdec2	equ	0xFDD
 36135                           plusw2	equ	0xFDB
 36136                           fsr2h	equ	0xFDA
 36137                           fsr2l	equ	0xFD9
 36138                           status	equ	0xFD8
 36139                           
 36140 ;; *************** function i1_UARTchar *****************
 36141 ;; Defined at:
 36142 ;;		line 188 in file "UART.c"
 36143 ;; Parameters:    Size  Location     Type
 36144 ;;  data            1    wreg     unsigned char 
 36145 ;; Auto vars:     Size  Location     Type
 36146 ;;  data            1    0[COMRAM] unsigned char 
 36147 ;; Return value:  Size  Location     Type
 36148 ;;		None               void
 36149 ;; Registers used:
 36150 ;;		wreg, status,2
 36151 ;; Tracked objects:
 36152 ;;		On entry : 0/0
 36153 ;;		On exit  : 0/0
 36154 ;;		Unchanged: 0/0
 36155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36157 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36159 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36160 ;;Total ram usage:        1 bytes
 36161 ;; Hardware stack levels used:    1
 36162 ;; Hardware stack levels required when called:    2
 36163 ;; This function calls:
 36164 ;;		Nothing
 36165 ;; This function is called by:
 36166 ;;		_EraseScreen
 36167 ;;		_low_isr
 36168 ;;		i1_UARTstring
 36169 ;;		i1_UARTstringCRLN
 36170 ;; This function uses a non-reentrant model
 36171 ;;
 36172                           
 36173                           	psect	text109
 36174  0093CA                     __ptext109:
 36175                           	opt stack 0
 36176  0093CA                     i1_UARTchar:
 36177                           	opt stack 17
 36178                           
 36179                           ;incstack = 0
 36180                           ;i1UARTchar@data stored from wreg
 36181  0093CA  6E01               	movwf	i1UARTchar@data,c
 36182                           
 36183                           ;UART.c: 190: if(data != 0)
 36184  0093CC  5001               	movf	i1UARTchar@data,w,c
 36185  0093CE  B4D8               	btfsc	status,2,c
 36186  0093D0  0012               	return	
 36187                           
 36188                           ;UART.c: 191: {
 36189                           ;UART.c: 192: TXREG = data;
 36190  0093D2  C001  FFAD         	movff	i1UARTchar@data,4013	;volatile
 36191                           
 36192                           ;UART.c: 193: while(!TXSTAbits.TRMT);
 36193  0093D6  D000               	goto	i1l646
 36194  0093D8                     i1l646:
 36195  0093D8  B2AC               	btfsc	4012,1,c	;volatile
 36196  0093DA  0012               	return	
 36197  0093DC  D7FD               	goto	i1l646
 36198  0093DE  0012               	return	
 36199  0093E0  0012               	return		;funcret
 36200  0093E2                     __end_ofi1_UARTchar:
 36201                           	opt stack 0
 36202                           pclatu	equ	0xFFB
 36203                           pclath	equ	0xFFA
 36204                           tblptru	equ	0xFF8
 36205                           tblptrh	equ	0xFF7
 36206                           tblptrl	equ	0xFF6
 36207                           tablat	equ	0xFF5
 36208                           prodh	equ	0xFF4
 36209                           prodl	equ	0xFF3
 36210                           intcon	equ	0xFF2
 36211                           intcon2	equ	0xFF1
 36212                           indf0	equ	0xFEF
 36213                           postinc0	equ	0xFEE
 36214                           plusw0	equ	0xFEB
 36215                           fsr0h	equ	0xFEA
 36216                           fsr0l	equ	0xFE9
 36217                           wreg	equ	0xFE8
 36218                           indf1	equ	0xFE7
 36219                           postdec1	equ	0xFE5
 36220                           fsr1h	equ	0xFE2
 36221                           fsr1l	equ	0xFE1
 36222                           bsr	equ	0xFE0
 36223                           indf2	equ	0xFDF
 36224                           postinc2	equ	0xFDE
 36225                           postdec2	equ	0xFDD
 36226                           plusw2	equ	0xFDB
 36227                           fsr2h	equ	0xFDA
 36228                           fsr2l	equ	0xFD9
 36229                           status	equ	0xFD8
 36230                           
 36231 ;; *************** function _high_isr *****************
 36232 ;; Defined at:
 36233 ;;		line 59 in file "interrupts.c"
 36234 ;; Parameters:    Size  Location     Type
 36235 ;;		None
 36236 ;; Auto vars:     Size  Location     Type
 36237 ;;  Time0           2   35[COMRAM] unsigned int 
 36238 ;;  IRpin           1   34[COMRAM] unsigned char 
 36239 ;; Return value:  Size  Location     Type
 36240 ;;		None               void
 36241 ;; Registers used:
 36242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36243 ;; Tracked objects:
 36244 ;;		On entry : 0/0
 36245 ;;		On exit  : 0/0
 36246 ;;		Unchanged: 0/0
 36247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36249 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36250 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36251 ;;      Totals:         3      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36252 ;;Total ram usage:       21 bytes
 36253 ;; Hardware stack levels used:    1
 36254 ;; Hardware stack levels required when called:    1
 36255 ;; This function calls:
 36256 ;;		_IRrawToNEC
 36257 ;;		_ResetTimer3
 36258 ;;		_SetTimer0
 36259 ;;		i2_ReadIRpin
 36260 ;;		i2_ResetTimer0
 36261 ;;		i2_cleanBuffer16bit
 36262 ;; This function is called by:
 36263 ;;		Interrupt level 2
 36264 ;; This function uses a non-reentrant model
 36265 ;;
 36266                           
 36267                           	psect	intcode
 36268  000008                     __pintcode:
 36269                           	opt stack 0
 36270  000008                     _high_isr:
 36271                           	opt stack 17
 36272                           
 36273                           ;incstack = 0
 36274  000008  CFFA F06B          	movff	pclath,??_high_isr+4
 36275  00000C  CFFB F06C          	movff	pclatu,??_high_isr+5
 36276  000010  CFE9 F06D          	movff	fsr0l,??_high_isr+6
 36277  000014  EF96  F01E         	goto	int_func
 36278                           pclatu	equ	0xFFB
 36279                           pclath	equ	0xFFA
 36280                           tblptru	equ	0xFF8
 36281                           tblptrh	equ	0xFF7
 36282                           tblptrl	equ	0xFF6
 36283                           tablat	equ	0xFF5
 36284                           prodh	equ	0xFF4
 36285                           prodl	equ	0xFF3
 36286                           intcon	equ	0xFF2
 36287                           intcon2	equ	0xFF1
 36288                           indf0	equ	0xFEF
 36289                           postinc0	equ	0xFEE
 36290                           plusw0	equ	0xFEB
 36291                           fsr0h	equ	0xFEA
 36292                           fsr0l	equ	0xFE9
 36293                           wreg	equ	0xFE8
 36294                           indf1	equ	0xFE7
 36295                           postdec1	equ	0xFE5
 36296                           fsr1h	equ	0xFE2
 36297                           fsr1l	equ	0xFE1
 36298                           bsr	equ	0xFE0
 36299                           indf2	equ	0xFDF
 36300                           postinc2	equ	0xFDE
 36301                           postdec2	equ	0xFDD
 36302                           plusw2	equ	0xFDB
 36303                           fsr2h	equ	0xFDA
 36304                           fsr2l	equ	0xFD9
 36305                           status	equ	0xFD8
 36306                           
 36307                           	psect	intcode_body
 36308  003D2C                     __pintcode_body:
 36309                           	opt stack 17
 36310  003D2C                     int_func:
 36311                           	opt stack 17
 36312  003D2C  CFEA F06E          	movff	fsr0h,??_high_isr+7
 36313  003D30  CFE1 F06F          	movff	fsr1l,??_high_isr+8
 36314  003D34  CFE2 F070          	movff	fsr1h,??_high_isr+9
 36315  003D38  CFD9 F071          	movff	fsr2l,??_high_isr+10
 36316  003D3C  CFDA F072          	movff	fsr2h,??_high_isr+11
 36317  003D40  CFF3 F073          	movff	prodl,??_high_isr+12
 36318  003D44  CFF4 F074          	movff	prodh,??_high_isr+13
 36319  003D48  CFF6 F075          	movff	tblptrl,??_high_isr+14
 36320  003D4C  CFF7 F076          	movff	tblptrh,??_high_isr+15
 36321  003D50  CFF8 F077          	movff	tblptru,??_high_isr+16
 36322  003D54  CFF5 F078          	movff	tablat,??_high_isr+17
 36323                           
 36324                           ;interrupts.c: 68: unsigned char IRpin;
 36325                           ;interrupts.c: 69: unsigned int Time0;
 36326                           ;interrupts.c: 71: INTCONbits.GIE = 0;
 36327  003D58  9EF2               	bcf	intcon,7,c	;volatile
 36328                           
 36329                           ;interrupts.c: 73: if(INTCONbits.RBIF)
 36330  003D5A  A0F2               	btfss	intcon,0,c	;volatile
 36331  003D5C  D083               	goto	i2l1211
 36332                           
 36333                           ;interrupts.c: 74: {
 36334                           ;interrupts.c: 75: __nop();
 36335  003D5E  F000               	nop	
 36336                           
 36337                           ;interrupts.c: 76: __nop();
 36338  003D60  F000               	nop	
 36339                           
 36340                           ;interrupts.c: 77: IRtimeout = 0;
 36341  003D62  0E00               	movlw	0
 36342  003D64  0102               	movlb	2	; () banked
 36343  003D66  6FCA               	movwf	_IRtimeout& (0+255),b
 36344  003D68  0E00               	movlw	0
 36345  003D6A  6FCB               	movwf	(_IRtimeout+1)& (0+255),b
 36346  003D6C  0E00               	movlw	0
 36347  003D6E  6FCC               	movwf	(_IRtimeout+2)& (0+255),b
 36348  003D70  0E00               	movlw	0
 36349  003D72  6FCD               	movwf	(_IRtimeout+3)& (0+255),b
 36350                           
 36351                           ; BSR set to: 2
 36352                           ;interrupts.c: 78: IRpin = ReadIRpin();
 36353  003D74  EC7F  F04A         	call	i2_ReadIRpin	;wreg free
 36354  003D78  6E23               	movwf	high_isr@IRpin,c
 36355                           
 36356                           ;interrupts.c: 79: if(IRpin != IRpinOLD)
 36357  003D7A  502E               	movf	_IRpinOLD,w,c
 36358  003D7C  1823               	xorwf	high_isr@IRpin,w,c
 36359  003D7E  B4D8               	btfsc	status,2,c
 36360  003D80  D06B               	goto	i2l1212
 36361                           
 36362                           ;interrupts.c: 80: {
 36363                           ;interrupts.c: 81: (T0CONbits.TMR0ON = 1);
 36364  003D82  8ED5               	bsf	4053,7,c	;volatile
 36365                           
 36366                           ;interrupts.c: 82: (INTCONbits.TMR0IE = 1);
 36367  003D84  8AF2               	bsf	intcon,5,c	;volatile
 36368                           
 36369                           ;interrupts.c: 83: ReceivingIR = 19;
 36370  003D86  0E13               	movlw	19
 36371  003D88  6E44               	movwf	_ReceivingIR,c	;volatile
 36372                           
 36373                           ;interrupts.c: 84: IR_New_Code = 0;
 36374  003D8A  0E00               	movlw	0
 36375  003D8C  0100               	movlb	0	; () banked
 36376  003D8E  6FE5               	movwf	_IR_New_Code& (0+255),b
 36377                           
 36378                           ; BSR set to: 0
 36379                           ;interrupts.c: 85: Time0 = TMR0L;
 36380  003D90  CFD6 F024          	movff	4054,high_isr@Time0	;volatile
 36381  003D94  6A25               	clrf	high_isr@Time0+1,c
 36382                           
 36383                           ;interrupts.c: 86: Time0 += (TMR0H << 8);
 36384  003D96  50D7               	movf	4055,w,c	;volatile
 36385  003D98  2625               	addwf	high_isr@Time0+1,f,c
 36386                           
 36387                           ; BSR set to: 0
 36388                           ;interrupts.c: 87: if(IRrawCodeNum < 100)
 36389  003D9A  0E64               	movlw	100
 36390  003D9C  602F               	cpfslt	_IRrawCodeNum,c
 36391  003D9E  D057               	goto	i2l1213
 36392                           
 36393                           ; BSR set to: 0
 36394                           ;interrupts.c: 88: {
 36395                           ;interrupts.c: 89: if((IRrawCodeNum > 0) && (IRrawCodeNum <= 100))
 36396  003DA0  502F               	movf	_IRrawCodeNum,w,c
 36397  003DA2  B4D8               	btfsc	status,2,c
 36398  003DA4  D04C               	goto	i2l16470
 36399                           
 36400                           ; BSR set to: 0
 36401  003DA6  0E65               	movlw	101
 36402  003DA8  602F               	cpfslt	_IRrawCodeNum,c
 36403  003DAA  D049               	goto	i2l16470
 36404                           
 36405                           ; BSR set to: 0
 36406                           ;interrupts.c: 90: {
 36407                           ;interrupts.c: 91: IRRawCode[IRrawCodeNum - 1] = Time0;
 36408  003DAC  0EFE               	movlw	254
 36409  003DAE  0100               	movlb	0	; () banked
 36410  003DB0  6F67               	movwf	??_high_isr& (0+255),b
 36411  003DB2  0EFF               	movlw	255
 36412  003DB4  0100               	movlb	0	; () banked
 36413  003DB6  6F68               	movwf	(??_high_isr+1)& (0+255),b
 36414  003DB8  502F               	movf	_IRrawCodeNum,w,c
 36415  003DBA  0100               	movlb	0	; () banked
 36416  003DBC  6F69               	movwf	(??_high_isr+2)& (0+255),b
 36417  003DBE  6B6A               	clrf	(??_high_isr+3)& (0+255),b
 36418  003DC0  90D8               	bcf	status,0,c
 36419  003DC2  0100               	movlb	0	; () banked
 36420  003DC4  3769               	rlcf	(??_high_isr+2)& (0+255),f,b
 36421  003DC6  376A               	rlcf	(??_high_isr+3)& (0+255),f,b
 36422  003DC8  0100               	movlb	0	; () banked
 36423  003DCA  5167               	movf	??_high_isr& (0+255),w,b
 36424  003DCC  0100               	movlb	0	; () banked
 36425  003DCE  2769               	addwf	(??_high_isr+2)& (0+255),f,b
 36426  003DD0  0100               	movlb	0	; () banked
 36427  003DD2  5168               	movf	(??_high_isr+1)& (0+255),w,b
 36428  003DD4  0100               	movlb	0	; () banked
 36429  003DD6  236A               	addwfc	(??_high_isr+3)& (0+255),f,b
 36430  003DD8  0E00               	movlw	low _IRRawCode
 36431  003DDA  0100               	movlb	0	; () banked
 36432  003DDC  2569               	addwf	(??_high_isr+2)& (0+255),w,b
 36433  003DDE  6ED9               	movwf	fsr2l,c
 36434  003DE0  0E07               	movlw	high _IRRawCode
 36435  003DE2  0100               	movlb	0	; () banked
 36436  003DE4  216A               	addwfc	(??_high_isr+3)& (0+255),w,b
 36437  003DE6  6EDA               	movwf	fsr2h,c
 36438  003DE8  C024  FFDE         	movff	high_isr@Time0,postinc2
 36439  003DEC  C025  FFDD         	movff	high_isr@Time0+1,postdec2
 36440                           
 36441                           ; BSR set to: 0
 36442                           ;interrupts.c: 92: if((Time0 <= 21000 && Time0 >= 19000))
 36443  003DF0  0E09               	movlw	9
 36444  003DF2  5C24               	subwf	high_isr@Time0,w,c
 36445  003DF4  0E52               	movlw	82
 36446  003DF6  5825               	subwfb	high_isr@Time0+1,w,c
 36447  003DF8  B0D8               	btfsc	status,0,c
 36448  003DFA  D00A               	goto	i2l16460
 36449                           
 36450                           ; BSR set to: 0
 36451  003DFC  0E38               	movlw	56
 36452  003DFE  5C24               	subwf	high_isr@Time0,w,c
 36453  003E00  0E4A               	movlw	74
 36454  003E02  5825               	subwfb	high_isr@Time0+1,w,c
 36455  003E04  A0D8               	btfss	status,0,c
 36456  003E06  D004               	goto	i2l16460
 36457                           
 36458                           ; BSR set to: 0
 36459                           ;interrupts.c: 93: {
 36460                           ;interrupts.c: 95: (IOCBbits.IOCB4 = 0);
 36461  003E08  987D               	bcf	3965,4,c	;volatile
 36462                           
 36463                           ;interrupts.c: 96: INTCONbits.RBIE = 0;
 36464  003E0A  96F2               	bcf	intcon,3,c	;volatile
 36465                           
 36466                           ;interrupts.c: 98: INTCONbits.TMR0IF = 1;
 36467  003E0C  84F2               	bsf	intcon,2,c	;volatile
 36468                           
 36469                           ;interrupts.c: 99: }
 36470  003E0E  D01A               	goto	i2l16472
 36471  003E10                     i2l16460:
 36472                           
 36473                           ; BSR set to: 0
 36474                           ;interrupts.c: 100: else if(Time0 <= 50000 && Time0 >= 45000)
 36475  003E10  0E51               	movlw	81
 36476  003E12  5C24               	subwf	high_isr@Time0,w,c
 36477  003E14  0EC3               	movlw	195
 36478  003E16  5825               	subwfb	high_isr@Time0+1,w,c
 36479  003E18  B0D8               	btfsc	status,0,c
 36480  003E1A  D00E               	goto	i2l16468
 36481                           
 36482                           ; BSR set to: 0
 36483  003E1C  0EC8               	movlw	200
 36484  003E1E  5C24               	subwf	high_isr@Time0,w,c
 36485  003E20  0EAF               	movlw	175
 36486  003E22  5825               	subwfb	high_isr@Time0+1,w,c
 36487  003E24  A0D8               	btfss	status,0,c
 36488  003E26  D008               	goto	i2l16468
 36489                           
 36490                           ; BSR set to: 0
 36491                           ;interrupts.c: 101: {
 36492                           ;interrupts.c: 103: (IOCBbits.IOCB4 = 0);
 36493  003E28  987D               	bcf	3965,4,c	;volatile
 36494                           
 36495                           ;interrupts.c: 104: INTCONbits.RBIE = 0;
 36496  003E2A  96F2               	bcf	intcon,3,c	;volatile
 36497                           
 36498                           ; BSR set to: 0
 36499                           ;interrupts.c: 106: SetTimer0(0x8FFF);
 36500  003E2C  0E8F               	movlw	143
 36501  003E2E  6E1C               	movwf	SetTimer0@temp+1,c
 36502  003E30  681B               	setf	SetTimer0@temp,c
 36503  003E32  EC9A  F04A         	call	_SetTimer0	;wreg free
 36504                           
 36505                           ;interrupts.c: 107: }
 36506  003E36  D006               	goto	i2l16472
 36507  003E38                     i2l16468:
 36508                           
 36509                           ;interrupts.c: 108: else
 36510                           ;interrupts.c: 109: {
 36511                           ;interrupts.c: 110: ResetTimer0();
 36512  003E38  EC95  F04A         	call	i2_ResetTimer0	;wreg free
 36513                           
 36514                           ;interrupts.c: 111: }
 36515                           ;interrupts.c: 112: }
 36516  003E3C  D003               	goto	i2l16472
 36517  003E3E                     i2l16470:
 36518                           
 36519                           ;interrupts.c: 113: else
 36520                           ;interrupts.c: 114: {
 36521                           ;interrupts.c: 115: ResetTimer0();
 36522  003E3E  EC95  F04A         	call	i2_ResetTimer0	;wreg free
 36523  003E42  D000               	goto	i2l16472
 36524  003E44                     i2l16472:
 36525                           
 36526                           ;interrupts.c: 116: }
 36527                           ;interrupts.c: 117: if(IRrawCodeNum <= 100)
 36528  003E44  0E65               	movlw	101
 36529  003E46  602F               	cpfslt	_IRrawCodeNum,c
 36530  003E48  D004               	goto	i2l1221
 36531                           
 36532                           ;interrupts.c: 118: {
 36533                           ;interrupts.c: 119: IRrawCodeNum++;
 36534  003E4A  2A2F               	incf	_IRrawCodeNum,f,c
 36535                           
 36536                           ;interrupts.c: 120: }
 36537                           ;interrupts.c: 121: }
 36538  003E4C  D002               	goto	i2l1221
 36539  003E4E                     i2l1213:
 36540                           
 36541                           ; BSR set to: 0
 36542                           ;interrupts.c: 122: else
 36543                           ;interrupts.c: 123: {
 36544                           ;interrupts.c: 124: (IOCBbits.IOCB4 = 0);
 36545  003E4E  987D               	bcf	3965,4,c	;volatile
 36546                           
 36547                           ;interrupts.c: 125: INTCONbits.RBIE = 0;
 36548  003E50  96F2               	bcf	intcon,3,c	;volatile
 36549  003E52                     i2l1221:
 36550                           
 36551                           ;interrupts.c: 126: }
 36552                           ;interrupts.c: 127: IRpinOLD = IRpin;
 36553  003E52  C023  F02E         	movff	high_isr@IRpin,_IRpinOLD
 36554                           
 36555                           ;interrupts.c: 128: }
 36556  003E56  D002               	goto	i2l16476
 36557  003E58                     i2l1212:
 36558                           
 36559                           ;interrupts.c: 129: else
 36560                           ;interrupts.c: 130: {
 36561                           ;interrupts.c: 132: __nop();
 36562  003E58  F000               	nop	
 36563  003E5A  D000               	goto	i2l16476
 36564  003E5C                     i2l16476:
 36565                           
 36566                           ;interrupts.c: 133: }
 36567                           ;interrupts.c: 135: ReadIRpin();
 36568  003E5C  EC7F  F04A         	call	i2_ReadIRpin	;wreg free
 36569                           
 36570                           ;interrupts.c: 136: INTCONbits.RBIF = 0;
 36571  003E60  90F2               	bcf	intcon,0,c	;volatile
 36572                           
 36573                           ;interrupts.c: 137: }
 36574  003E62  D21A               	goto	i2l1223
 36575  003E64                     i2l1211:
 36576                           
 36577                           ;interrupts.c: 138: else if(INTCONbits.TMR0IF)
 36578  003E64  A4F2               	btfss	intcon,2,c	;volatile
 36579  003E66  D030               	goto	i2l1224
 36580                           
 36581                           ;interrupts.c: 139: {
 36582                           ;interrupts.c: 141: (INTCONbits.TMR0IE = 0);
 36583  003E68  9AF2               	bcf	intcon,5,c	;volatile
 36584                           
 36585                           ;interrupts.c: 142: (T0CONbits.TMR0ON = 0);
 36586  003E6A  9ED5               	bcf	4053,7,c	;volatile
 36587                           
 36588                           ;interrupts.c: 143: if(IRrawCodeNum >= (4))
 36589  003E6C  0E03               	movlw	3
 36590  003E6E  642F               	cpfsgt	_IRrawCodeNum,c
 36591  003E70  D00E               	goto	i2l1225
 36592                           
 36593                           ;interrupts.c: 144: {
 36594                           ;interrupts.c: 145: IR_New_Code = IRrawToNEC(IRRawCode, &IR_NEC, 1);
 36595  003E72  0E00               	movlw	low _IRRawCode
 36596  003E74  6E1B               	movwf	IRrawToNEC@Raw,c
 36597  003E76  0E07               	movlw	high _IRRawCode
 36598  003E78  6E1C               	movwf	IRrawToNEC@Raw+1,c
 36599  003E7A  0EE1               	movlw	low _IR_NEC
 36600  003E7C  6E1D               	movwf	IRrawToNEC@NEC,c
 36601  003E7E  0E00               	movlw	high _IR_NEC
 36602  003E80  6E1E               	movwf	IRrawToNEC@NEC+1,c
 36603  003E82  0E01               	movlw	1
 36604  003E84  6E1F               	movwf	IRrawToNEC@Invert,c
 36605  003E86  EC41  F028         	call	_IRrawToNEC	;wreg free
 36606  003E8A  0100               	movlb	0	; () banked
 36607  003E8C  6FE5               	movwf	_IR_New_Code& (0+255),b
 36608  003E8E                     i2l1225:
 36609                           
 36610                           ;interrupts.c: 146: }
 36611                           ;interrupts.c: 147: cleanBuffer16bit(IRRawCode,100);
 36612  003E8E  0E00               	movlw	low _IRRawCode
 36613  003E90  6E1B               	movwf	i2cleanBuffer16bit@data,c
 36614  003E92  0E07               	movlw	high _IRRawCode
 36615  003E94  6E1C               	movwf	i2cleanBuffer16bit@data+1,c
 36616  003E96  0E00               	movlw	0
 36617  003E98  6E1E               	movwf	i2cleanBuffer16bit@count+1,c
 36618  003E9A  0E64               	movlw	100
 36619  003E9C  6E1D               	movwf	i2cleanBuffer16bit@count,c
 36620  003E9E  EC51  F048         	call	i2_cleanBuffer16bit	;wreg free
 36621                           
 36622                           ;interrupts.c: 148: IRrawCodeNum = 0;
 36623  003EA2  0E00               	movlw	0
 36624  003EA4  6E2F               	movwf	_IRrawCodeNum,c
 36625                           
 36626                           ;interrupts.c: 149: if(!IR_New_Code)
 36627  003EA6  0100               	movlb	0	; () banked
 36628  003EA8  51E5               	movf	_IR_New_Code& (0+255),w,b
 36629  003EAA  A4D8               	btfss	status,2,c
 36630  003EAC  D009               	goto	i2l16500
 36631                           
 36632                           ; BSR set to: 0
 36633                           ;interrupts.c: 150: {
 36634                           ;interrupts.c: 151: ReadIRpin();
 36635  003EAE  EC7F  F04A         	call	i2_ReadIRpin	;wreg free
 36636                           
 36637                           ;interrupts.c: 152: IRpinOLD = ReadIRpin();
 36638  003EB2  EC7F  F04A         	call	i2_ReadIRpin	;wreg free
 36639  003EB6  6E2E               	movwf	_IRpinOLD,c
 36640                           
 36641                           ;interrupts.c: 153: INTCONbits.RBIF = 0;
 36642  003EB8  90F2               	bcf	intcon,0,c	;volatile
 36643                           
 36644                           ;interrupts.c: 154: (IOCBbits.IOCB4 = 1);
 36645  003EBA  887D               	bsf	3965,4,c	;volatile
 36646                           
 36647                           ;interrupts.c: 155: INTCONbits.RBIE = 1;
 36648  003EBC  86F2               	bsf	intcon,3,c	;volatile
 36649  003EBE  D000               	goto	i2l16500
 36650  003EC0                     i2l16500:
 36651                           
 36652                           ;interrupts.c: 156: }
 36653                           ;interrupts.c: 157: ReceivingIR = 13;
 36654  003EC0  0E0D               	movlw	13
 36655  003EC2  6E44               	movwf	_ReceivingIR,c	;volatile
 36656                           
 36657                           ;interrupts.c: 158: INTCONbits.TMR0IF = 0;
 36658  003EC4  94F2               	bcf	intcon,2,c	;volatile
 36659                           
 36660                           ;interrupts.c: 159: }
 36661  003EC6  D1E8               	goto	i2l1223
 36662  003EC8                     i2l1224:
 36663                           
 36664                           ;interrupts.c: 160: else if(PIR1bits.TMR2IF)
 36665  003EC8  A29E               	btfss	3998,1,c	;volatile
 36666  003ECA  D1D3               	goto	i2l1228
 36667                           
 36668                           ;interrupts.c: 161: {
 36669                           ;interrupts.c: 164: Timer2_Postscaler++;
 36670  003ECC  2A39               	incf	_Timer2_Postscaler,f,c
 36671                           
 36672                           ;interrupts.c: 165: if(RF_IR == 55)
 36673  003ECE  0E37               	movlw	55
 36674  003ED0  1842               	xorwf	_RF_IR,w,c
 36675  003ED2  A4D8               	btfss	status,2,c
 36676  003ED4  D10C               	goto	i2l16738
 36677                           
 36678                           ;interrupts.c: 166: {
 36679                           ;interrupts.c: 168: if(Timer2_Postscaler >= RF_IR_Postscaler)
 36680  003ED6  5043               	movf	_RF_IR_Postscaler,w,c	;volatile
 36681  003ED8  5C39               	subwf	_Timer2_Postscaler,w,c
 36682  003EDA  A0D8               	btfss	status,0,c
 36683  003EDC  D103               	goto	i2l16734
 36684                           
 36685                           ;interrupts.c: 169: {
 36686                           ;interrupts.c: 170: Timer2_Postscaler = 0;
 36687  003EDE  0E00               	movlw	0
 36688  003EE0  6E39               	movwf	_Timer2_Postscaler,c
 36689                           
 36690                           ;interrupts.c: 171: if(RFsendCode[RFcodeBit] != 99)
 36691  003EE2  5034               	movf	_RFcodeBit,w,c
 36692  003EE4  0D01               	mullw	1
 36693  003EE6  0ECE               	movlw	low _RFsendCode
 36694  003EE8  24F3               	addwf	prodl,w,c
 36695  003EEA  6ED9               	movwf	fsr2l,c
 36696  003EEC  0E02               	movlw	high _RFsendCode
 36697  003EEE  20F4               	addwfc	prodh,w,c
 36698  003EF0  6EDA               	movwf	fsr2h,c
 36699  003EF2  0E63               	movlw	99
 36700  003EF4  18DE               	xorwf	postinc2,w,c
 36701  003EF6  B4D8               	btfsc	status,2,c
 36702  003EF8  D0B3               	goto	i2l16684
 36703                           
 36704                           ;interrupts.c: 172: {
 36705                           ;interrupts.c: 174: if(RFsendFlag)
 36706  003EFA  5036               	movf	_RFsendFlag,w,c	;volatile
 36707  003EFC  B4D8               	btfsc	status,2,c
 36708  003EFE  D0F2               	goto	i2l16734
 36709                           
 36710                           ;interrupts.c: 175: {
 36711                           ;interrupts.c: 176: if(RFsendCode[RFcodeBit] == 0)
 36712  003F00  5034               	movf	_RFcodeBit,w,c
 36713  003F02  0D01               	mullw	1
 36714  003F04  0ECE               	movlw	low _RFsendCode
 36715  003F06  24F3               	addwf	prodl,w,c
 36716  003F08  6ED9               	movwf	fsr2l,c
 36717  003F0A  0E02               	movlw	high _RFsendCode
 36718  003F0C  20F4               	addwfc	prodh,w,c
 36719  003F0E  6EDA               	movwf	fsr2h,c
 36720  003F10  50DF               	movf	indf2,w,c
 36721  003F12  A4D8               	btfss	status,2,c
 36722  003F14  D03F               	goto	i2l16576
 36723                           
 36724                           ;interrupts.c: 177: {
 36725                           ;interrupts.c: 179: if(RFConfig == 1)
 36726  003F16  0433               	decf	_RFConfig,w,c
 36727  003F18  A4D8               	btfss	status,2,c
 36728  003F1A  D025               	goto	i2l16554
 36729                           
 36730                           ;interrupts.c: 180: {
 36731                           ;interrupts.c: 181: if(RFcodePlace == 1)
 36732  003F1C  0435               	decf	_RFcodePlace,w,c
 36733  003F1E  A4D8               	btfss	status,2,c
 36734  003F20  D007               	goto	i2l16528
 36735  003F22  D077               	goto	i2l16642
 36736  003F24                     i2l16524:
 36737                           
 36738                           ;interrupts.c: 184: (PR2 = 8);
 36739  003F24  0E08               	movlw	8
 36740  003F26                     L26:
 36741  003F26  6ECB               	movwf	4043,c	;volatile
 36742  003F28  D076               	goto	i2l16646
 36743  003F2A                     L28:
 36744                           
 36745                           ;interrupts.c: 186: (TMR2 = 0);
 36746  003F2A  0E00               	movlw	0
 36747  003F2C  6ECC               	movwf	4044,c	;volatile
 36748                           
 36749                           ;interrupts.c: 187: }
 36750  003F2E  D0DA               	goto	i2l16734
 36751  003F30                     i2l16528:
 36752                           
 36753                           ;interrupts.c: 188: else if(RFcodePlace == 2)
 36754  003F30  0E02               	movlw	2
 36755  003F32  1835               	xorwf	_RFcodePlace,w,c
 36756  003F34  A4D8               	btfss	status,2,c
 36757  003F36  D004               	goto	i2l16536
 36758  003F38  D074               	goto	L42
 36759                           
 36760                           ;interrupts.c: 189: {
 36761                           ;interrupts.c: 190: (LATC &= ~0x20);
 36762  003F3A  D03E               	goto	i2l16584
 36763  003F3C                     i2l16534:
 36764                           
 36765                           ;interrupts.c: 192: RFcodePlace++;
 36766  003F3C  2A35               	incf	_RFcodePlace,f,c
 36767                           
 36768                           ;interrupts.c: 193: }
 36769  003F3E  D0D2               	goto	i2l16734
 36770  003F40                     i2l16536:
 36771                           
 36772                           ;interrupts.c: 194: else if(RFcodePlace == 3)
 36773  003F40  0E03               	movlw	3
 36774  003F42  1835               	xorwf	_RFcodePlace,w,c
 36775  003F44  A4D8               	btfss	status,2,c
 36776  003F46  D002               	goto	i2l16544
 36777  003F48  D064               	goto	i2l16642
 36778                           
 36779                           ;interrupts.c: 195: {
 36780                           ;interrupts.c: 196: (LATC |= 0x20);
 36781  003F4A  D7EC               	goto	i2l16524
 36782  003F4C                     i2l16544:
 36783                           
 36784                           ;interrupts.c: 201: else if(RFcodePlace == 4)
 36785  003F4C  0E04               	movlw	4
 36786  003F4E  1835               	xorwf	_RFcodePlace,w,c
 36787  003F50  A4D8               	btfss	status,2,c
 36788  003F52  D004               	goto	i2l1241
 36789                           
 36790                           ;interrupts.c: 202: {
 36791                           ;interrupts.c: 203: (LATC &= ~0x20);
 36792  003F54  9A8B               	bcf	3979,5,c	;volatile
 36793                           
 36794                           ;interrupts.c: 204: (PR2 = 24);
 36795  003F56  0E18               	movlw	24
 36796  003F58  D051               	goto	L27
 36797  003F5A  D016               	goto	i2l16570
 36798  003F5C                     i2l1241:
 36799                           
 36800                           ;interrupts.c: 208: else
 36801                           ;interrupts.c: 209: {
 36802                           ;interrupts.c: 211: (T2CONbits.TMR2ON = 0);
 36803  003F5C  94CA               	bcf	4042,2,c	;volatile
 36804  003F5E  D07B               	goto	i2l16682
 36805  003F60                     L31:
 36806                           
 36807                           ;interrupts.c: 213: RFsendFlag = 0;
 36808  003F60  0E00               	movlw	0
 36809  003F62  6E36               	movwf	_RFsendFlag,c	;volatile
 36810                           
 36811                           ; BSR set to: 0
 36812                           ;interrupts.c: 214: }
 36813                           ;interrupts.c: 215: }
 36814                           
 36815                           ; BSR set to: 0
 36816                           
 36817                           ; BSR set to: 0
 36818                           
 36819                           ; BSR set to: 0
 36820  003F64  D0BF               	goto	i2l16734
 36821  003F66                     i2l16554:
 36822                           
 36823                           ;interrupts.c: 216: else if(RFConfig == 2)
 36824  003F66  0E02               	movlw	2
 36825  003F68  1833               	xorwf	_RFConfig,w,c
 36826  003F6A  A4D8               	btfss	status,2,c
 36827  003F6C  D7F7               	goto	i2l1241
 36828                           
 36829                           ;interrupts.c: 217: {
 36830                           ;interrupts.c: 219: if(RFcodePlace == 1)
 36831  003F6E  0435               	decf	_RFcodePlace,w,c
 36832  003F70  A4D8               	btfss	status,2,c
 36833  003F72  D003               	goto	i2l16564
 36834                           
 36835                           ;interrupts.c: 220: {
 36836                           ;interrupts.c: 221: (LATC |= 0x20);
 36837  003F74  8A8B               	bsf	3979,5,c	;volatile
 36838                           
 36839                           ;interrupts.c: 222: (PR2 = 11);
 36840  003F76  0E0B               	movlw	11
 36841  003F78  D7D6               	goto	L26
 36842  003F7A                     i2l16564:
 36843                           
 36844                           ;interrupts.c: 226: else if(RFcodePlace == 2)
 36845  003F7A  0E02               	movlw	2
 36846  003F7C  1835               	xorwf	_RFcodePlace,w,c
 36847  003F7E  A4D8               	btfss	status,2,c
 36848  003F80  D7ED               	goto	i2l1241
 36849                           
 36850                           ;interrupts.c: 227: {
 36851                           ;interrupts.c: 228: (LATC &= ~0x20);
 36852  003F82  9A8B               	bcf	3979,5,c	;volatile
 36853                           
 36854                           ;interrupts.c: 229: (PR2 = 29);
 36855  003F84  0E1D               	movlw	29
 36856  003F86  D03A               	goto	L27
 36857  003F88                     i2l16570:
 36858                           
 36859                           ;interrupts.c: 230: RFcodePlace = 1;
 36860  003F88  0E01               	movlw	1
 36861  003F8A  6E35               	movwf	_RFcodePlace,c
 36862                           
 36863                           ;interrupts.c: 231: RFcodeBit++;
 36864  003F8C  2A34               	incf	_RFcodeBit,f,c
 36865                           
 36866                           ; BSR set to: 0
 36867                           ;interrupts.c: 239: }
 36868                           ;interrupts.c: 240: }
 36869                           
 36870                           ; BSR set to: 0
 36871                           
 36872                           ;interrupts.c: 238: RFsendFlag = 0;
 36873                           
 36874                           ;interrupts.c: 237: Sent = 1;
 36875                           
 36876                           ;interrupts.c: 233: else
 36877                           ;interrupts.c: 234: {
 36878                           ;interrupts.c: 236: (T2CONbits.TMR2ON = 0);
 36879                           
 36880                           ;interrupts.c: 232: }
 36881  003F8E  D0AA               	goto	i2l16734
 36882                           
 36883                           ;interrupts.c: 241: else
 36884                           ;interrupts.c: 242: {
 36885                           ;interrupts.c: 244: (T2CONbits.TMR2ON = 0);
 36886  003F90  D062               	goto	i2l16682
 36887                           
 36888                           ; BSR set to: 0
 36889                           ;interrupts.c: 247: }
 36890                           ;interrupts.c: 248: }
 36891                           
 36892                           ; BSR set to: 0
 36893                           
 36894                           ;interrupts.c: 246: RFsendFlag = 0;
 36895                           
 36896                           ;interrupts.c: 245: Sent = 1;
 36897  003F92  D0A8               	goto	i2l16734
 36898  003F94                     i2l16576:
 36899                           
 36900                           ;interrupts.c: 249: else if(RFsendCode[RFcodeBit] == 1)
 36901  003F94  5034               	movf	_RFcodeBit,w,c
 36902  003F96  0D01               	mullw	1
 36903  003F98  0ECE               	movlw	low _RFsendCode
 36904  003F9A  24F3               	addwf	prodl,w,c
 36905  003F9C  6ED9               	movwf	fsr2l,c
 36906  003F9E  0E02               	movlw	high _RFsendCode
 36907  003FA0  20F4               	addwfc	prodh,w,c
 36908  003FA2  6EDA               	movwf	fsr2h,c
 36909  003FA4  04DE               	decf	postinc2,w,c
 36910  003FA6  A4D8               	btfss	status,2,c
 36911  003FA8  D02E               	goto	i2l16638
 36912                           
 36913                           ;interrupts.c: 250: {
 36914                           ;interrupts.c: 251: if(RFConfig == 1)
 36915  003FAA  0433               	decf	_RFConfig,w,c
 36916  003FAC  A4D8               	btfss	status,2,c
 36917  003FAE  D016               	goto	i2l16616
 36918                           
 36919                           ;interrupts.c: 252: {
 36920                           ;interrupts.c: 253: if(RFcodePlace == 1)
 36921  003FB0  0435               	decf	_RFcodePlace,w,c
 36922  003FB2  A4D8               	btfss	status,2,c
 36923  003FB4  D004               	goto	i2l16588
 36924  003FB6  D03C               	goto	L43
 36925  003FB8                     i2l16584:
 36926                           
 36927                           ;interrupts.c: 256: (PR2 = 24);
 36928  003FB8  0E18               	movlw	24
 36929  003FBA  6ECB               	movwf	4043,c	;volatile
 36930  003FBC  D7BF               	goto	i2l16534
 36931  003FBE                     i2l16588:
 36932                           
 36933                           ;interrupts.c: 259: else if(RFcodePlace == 2)
 36934  003FBE  0E02               	movlw	2
 36935  003FC0  1835               	xorwf	_RFcodePlace,w,c
 36936  003FC2  A4D8               	btfss	status,2,c
 36937  003FC4  D031               	goto	i2l16656
 36938                           
 36939                           ;interrupts.c: 260: {
 36940                           ;interrupts.c: 261: (LATC &= ~0x20);
 36941  003FC6  9A8B               	bcf	3979,5,c	;volatile
 36942  003FC8  D7AD               	goto	i2l16524
 36943                           
 36944                           ;interrupts.c: 265: }
 36945                           
 36946                           ;interrupts.c: 264: (TMR2 = 0);
 36947                           
 36948                           ;interrupts.c: 263: RFcodePlace++;
 36949                           
 36950                           ;interrupts.c: 262: (PR2 = 8);
 36951  003FCA  D02E               	goto	i2l16656
 36952                           
 36953                           ;interrupts.c: 267: {
 36954                           ;interrupts.c: 268: (LATC |= 0x20);
 36955                           
 36956                           ;interrupts.c: 266: else if(RFcodePlace == 3)
 36957  003FCC  D7F5               	goto	i2l16584
 36958                           
 36959                           ;interrupts.c: 269: (PR2 = 24);
 36960  003FCE  D7B6               	goto	i2l16534
 36961                           
 36962                           ;interrupts.c: 271: }
 36963                           
 36964                           ;interrupts.c: 270: RFcodePlace++;
 36965  003FD0  D032               	goto	i2l16664
 36966  003FD2                     i2l16608:
 36967                           
 36968                           ;interrupts.c: 275: (PR2 = 8);
 36969  003FD2  0E08               	movlw	8
 36970  003FD4  6ECB               	movwf	4043,c	;volatile
 36971  003FD6  D035               	goto	i2l16670
 36972                           
 36973                           ;interrupts.c: 277: RFcodeBit++;
 36974                           
 36975                           ;interrupts.c: 276: RFcodePlace = 1;
 36976  003FD8  D7A8               	goto	L28
 36977                           
 36978                           ; BSR set to: 0
 36979                           ;interrupts.c: 286: }
 36980                           ;interrupts.c: 287: }
 36981                           
 36982                           ; BSR set to: 0
 36983                           
 36984                           ; BSR set to: 0
 36985                           
 36986                           ; BSR set to: 0
 36987                           
 36988                           ;interrupts.c: 285: RFsendFlag = 0;
 36989                           
 36990                           ;interrupts.c: 284: Sent = 1;
 36991                           
 36992                           ;interrupts.c: 280: else
 36993                           ;interrupts.c: 281: {
 36994                           ;interrupts.c: 283: (T2CONbits.TMR2ON = 0);
 36995                           
 36996                           ;interrupts.c: 279: }
 36997                           
 36998                           ;interrupts.c: 278: (TMR2 = 0);
 36999  003FDA  D084               	goto	i2l16734
 37000  003FDC                     i2l16616:
 37001                           
 37002                           ;interrupts.c: 288: else if(RFConfig == 2)
 37003  003FDC  0E02               	movlw	2
 37004  003FDE  1833               	xorwf	_RFConfig,w,c
 37005  003FE0  A4D8               	btfss	status,2,c
 37006  003FE2  D7BC               	goto	i2l1241
 37007                           
 37008                           ;interrupts.c: 289: {
 37009                           ;interrupts.c: 291: if(RFcodePlace == 1)
 37010  003FE4  0435               	decf	_RFcodePlace,w,c
 37011  003FE6  A4D8               	btfss	status,2,c
 37012  003FE8  D003               	goto	i2l16626
 37013                           
 37014                           ;interrupts.c: 292: {
 37015                           ;interrupts.c: 293: (LATC |= 0x20);
 37016  003FEA  8A8B               	bsf	3979,5,c	;volatile
 37017                           
 37018                           ;interrupts.c: 294: (PR2 = 29);
 37019  003FEC  0E1D               	movlw	29
 37020  003FEE  D79B               	goto	L26
 37021  003FF0                     i2l16626:
 37022                           
 37023                           ;interrupts.c: 298: else if(RFcodePlace == 2)
 37024  003FF0  0E02               	movlw	2
 37025  003FF2  1835               	xorwf	_RFcodePlace,w,c
 37026  003FF4  A4D8               	btfss	status,2,c
 37027  003FF6  D004               	goto	i2l1265
 37028                           
 37029                           ;interrupts.c: 299: {
 37030                           ;interrupts.c: 300: (LATC &= ~0x20);
 37031  003FF8  9A8B               	bcf	3979,5,c	;volatile
 37032                           
 37033                           ;interrupts.c: 301: (PR2 = 11);
 37034  003FFA  0E0B               	movlw	11
 37035  003FFC                     L27:
 37036  003FFC  6ECB               	movwf	4043,c	;volatile
 37037  003FFE  D7C4               	goto	i2l16570
 37038  004000                     i2l1265:
 37039                           
 37040                           ;interrupts.c: 305: else
 37041                           ;interrupts.c: 306: {
 37042                           ;interrupts.c: 308: (T2CONbits.TMR2ON = 0);
 37043  004000  94CA               	bcf	4042,2,c	;volatile
 37044  004002  D029               	goto	i2l16682
 37045                           
 37046                           ; BSR set to: 0
 37047                           ;interrupts.c: 319: }
 37048                           ;interrupts.c: 320: }
 37049                           
 37050                           ; BSR set to: 0
 37051                           
 37052                           ;interrupts.c: 318: RFsendFlag = 0;
 37053                           
 37054                           ;interrupts.c: 317: Sent = 1;
 37055                           
 37056                           ;interrupts.c: 313: else
 37057                           ;interrupts.c: 314: {
 37058                           ;interrupts.c: 316: (T2CONbits.TMR2ON = 0);
 37059                           
 37060                           ; BSR set to: 0
 37061                           ;interrupts.c: 311: }
 37062                           ;interrupts.c: 312: }
 37063                           
 37064                           ; BSR set to: 0
 37065                           
 37066                           ;interrupts.c: 310: RFsendFlag = 0;
 37067                           
 37068                           ;interrupts.c: 309: Sent = 1;
 37069  004004  D06F               	goto	i2l16734
 37070  004006                     i2l16638:
 37071                           
 37072                           ;interrupts.c: 321: else
 37073                           ;interrupts.c: 322: {
 37074                           ;interrupts.c: 323: if(RFConfig == 1)
 37075  004006  0433               	decf	_RFConfig,w,c
 37076  004008  A4D8               	btfss	status,2,c
 37077  00400A  D020               	goto	i2l16676
 37078                           
 37079                           ;interrupts.c: 324: {
 37080                           ;interrupts.c: 326: if(RFcodePlace == 1)
 37081  00400C  0435               	decf	_RFcodePlace,w,c
 37082  00400E  A4D8               	btfss	status,2,c
 37083  004010  D004               	goto	i2l16648
 37084  004012                     i2l16642:
 37085                           
 37086                           ;interrupts.c: 327: {
 37087                           ;interrupts.c: 328: (LATC |= 0x20);
 37088  004012  8A8B               	bsf	3979,5,c	;volatile
 37089  004014  D787               	goto	i2l16524
 37090  004016                     i2l16646:
 37091                           
 37092                           ;interrupts.c: 330: RFcodePlace++;
 37093  004016  2A35               	incf	_RFcodePlace,f,c
 37094  004018  D788               	goto	L28
 37095  00401A                     i2l16648:
 37096                           
 37097                           ;interrupts.c: 333: else if(RFcodePlace == 2)
 37098  00401A  0E02               	movlw	2
 37099  00401C  1835               	xorwf	_RFcodePlace,w,c
 37100  00401E  A4D8               	btfss	status,2,c
 37101  004020  D003               	goto	i2l16656
 37102  004022                     L42:
 37103                           
 37104                           ;interrupts.c: 334: {
 37105                           ;interrupts.c: 335: (LATC &= ~0x20);
 37106  004022  9A8B               	bcf	3979,5,c	;volatile
 37107  004024  D7C9               	goto	i2l16584
 37108                           
 37109                           ;interrupts.c: 336: (PR2 = 24);
 37110  004026  D78A               	goto	i2l16534
 37111  004028                     i2l16656:
 37112                           
 37113                           ;interrupts.c: 339: else if(RFcodePlace == 3)
 37114  004028  0E03               	movlw	3
 37115  00402A  1835               	xorwf	_RFcodePlace,w,c
 37116  00402C  A4D8               	btfss	status,2,c
 37117  00402E  D003               	goto	i2l16664
 37118  004030                     L43:
 37119                           
 37120                           ;interrupts.c: 340: {
 37121                           ;interrupts.c: 341: (LATC |= 0x20);
 37122  004030  8A8B               	bsf	3979,5,c	;volatile
 37123  004032  D7C2               	goto	i2l16584
 37124                           
 37125                           ;interrupts.c: 342: (PR2 = 24);
 37126  004034  D783               	goto	i2l16534
 37127  004036                     i2l16664:
 37128                           
 37129                           ;interrupts.c: 345: else if(RFcodePlace == 4)
 37130  004036  0E04               	movlw	4
 37131  004038  1835               	xorwf	_RFcodePlace,w,c
 37132  00403A  A4D8               	btfss	status,2,c
 37133  00403C  D78F               	goto	i2l1241
 37134                           
 37135                           ;interrupts.c: 346: {
 37136                           ;interrupts.c: 347: (LATC &= ~0x20);
 37137  00403E  9A8B               	bcf	3979,5,c	;volatile
 37138  004040  D7C8               	goto	i2l16608
 37139  004042                     i2l16670:
 37140                           
 37141                           ;interrupts.c: 349: RFcodePlace = 1;
 37142  004042  0E01               	movlw	1
 37143  004044  6E35               	movwf	_RFcodePlace,c
 37144                           
 37145                           ;interrupts.c: 350: RFcodeBit++;
 37146  004046  2A34               	incf	_RFcodeBit,f,c
 37147  004048  D770               	goto	L28
 37148                           
 37149                           ; BSR set to: 0
 37150                           ;interrupts.c: 359: }
 37151                           ;interrupts.c: 360: }
 37152                           
 37153                           ; BSR set to: 0
 37154                           
 37155                           ; BSR set to: 0
 37156                           
 37157                           ; BSR set to: 0
 37158                           
 37159                           ;interrupts.c: 358: RFsendFlag = 0;
 37160                           
 37161                           ;interrupts.c: 357: Sent = 1;
 37162                           
 37163                           ;interrupts.c: 353: else
 37164                           ;interrupts.c: 354: {
 37165                           ;interrupts.c: 356: (T2CONbits.TMR2ON = 0);
 37166                           
 37167                           ;interrupts.c: 352: }
 37168                           
 37169                           ;interrupts.c: 351: (TMR2 = 0);
 37170  00404A  D04C               	goto	i2l16734
 37171  00404C                     i2l16676:
 37172                           
 37173                           ;interrupts.c: 361: else if(RFConfig == 2)
 37174  00404C  0E02               	movlw	2
 37175  00404E  1833               	xorwf	_RFConfig,w,c
 37176  004050  A4D8               	btfss	status,2,c
 37177  004052  D784               	goto	i2l1241
 37178  004054  D783               	goto	i2l1241
 37179  004056                     i2l16682:
 37180                           
 37181                           ;interrupts.c: 372: Sent = 1;
 37182  004056  0E01               	movlw	1
 37183  004058  0100               	movlb	0	; () banked
 37184  00405A  6FE6               	movwf	_Sent& (0+255),b	;volatile
 37185  00405C  D781               	goto	L31
 37186                           
 37187                           ; BSR set to: 0
 37188                           ;interrupts.c: 374: }
 37189                           ;interrupts.c: 375: }
 37190                           ;interrupts.c: 376: }
 37191                           ;interrupts.c: 377: }
 37192                           
 37193                           ; BSR set to: 0
 37194                           
 37195                           ; BSR set to: 0
 37196                           
 37197                           ; BSR set to: 0
 37198                           
 37199                           ; BSR set to: 0
 37200                           
 37201                           ;interrupts.c: 373: RFsendFlag = 0;
 37202  00405E  D042               	goto	i2l16734
 37203  004060                     i2l16684:
 37204                           
 37205                           ;interrupts.c: 378: else
 37206                           ;interrupts.c: 379: {
 37207                           ;interrupts.c: 381: if(RFcodePlace == 1)
 37208  004060  0435               	decf	_RFcodePlace,w,c
 37209  004062  A4D8               	btfss	status,2,c
 37210  004064  D016               	goto	i2l16702
 37211                           
 37212                           ;interrupts.c: 382: {
 37213                           ;interrupts.c: 383: if(RFConfig == 1)
 37214  004066  0433               	decf	_RFConfig,w,c
 37215  004068  A4D8               	btfss	status,2,c
 37216  00406A  D003               	goto	i2l16692
 37217                           
 37218                           ;interrupts.c: 384: {
 37219                           ;interrupts.c: 385: (LATC |= 0x20);
 37220  00406C  8A8B               	bsf	3979,5,c	;volatile
 37221                           
 37222                           ;interrupts.c: 386: (PR2 = 8);
 37223  00406E  0E08               	movlw	8
 37224  004070  D006               	goto	L29
 37225  004072                     i2l16692:
 37226                           
 37227                           ;interrupts.c: 388: else if(RFConfig == 2)
 37228  004072  0E02               	movlw	2
 37229  004074  1833               	xorwf	_RFConfig,w,c
 37230  004076  A4D8               	btfss	status,2,c
 37231  004078  D004               	goto	i2l1285
 37232                           
 37233                           ;interrupts.c: 389: {
 37234                           ;interrupts.c: 390: (LATC &= ~0x20);
 37235  00407A  9A8B               	bcf	3979,5,c	;volatile
 37236                           
 37237                           ;interrupts.c: 391: (PR2 = 11);
 37238  00407C  0E0B               	movlw	11
 37239  00407E                     L29:
 37240  00407E  6ECB               	movwf	4043,c	;volatile
 37241                           
 37242                           ;interrupts.c: 392: }
 37243  004080  D005               	goto	i2l1284
 37244  004082                     i2l1285:
 37245                           
 37246                           ;interrupts.c: 393: else
 37247                           ;interrupts.c: 394: {
 37248                           ;interrupts.c: 396: (T2CONbits.TMR2ON = 0);
 37249  004082  94CA               	bcf	4042,2,c	;volatile
 37250                           
 37251                           ;interrupts.c: 397: Sent = 1;
 37252  004084  0E01               	movlw	1
 37253  004086  0100               	movlb	0	; () banked
 37254  004088  6FE6               	movwf	_Sent& (0+255),b	;volatile
 37255  00408A  D000               	goto	i2l1284
 37256  00408C                     i2l1284:
 37257                           
 37258                           ;interrupts.c: 398: }
 37259                           ;interrupts.c: 399: (TMR2 = 0);
 37260  00408C  0E00               	movlw	0
 37261  00408E  6ECC               	movwf	4044,c	;volatile
 37262  004090  D755               	goto	i2l16534
 37263  004092                     i2l16702:
 37264                           
 37265                           ;interrupts.c: 402: else if( RFcodePlace == 2)
 37266  004092  0E02               	movlw	2
 37267  004094  1835               	xorwf	_RFcodePlace,w,c
 37268  004096  A4D8               	btfss	status,2,c
 37269  004098  D01C               	goto	i2l16722
 37270                           
 37271                           ;interrupts.c: 403: {
 37272                           ;interrupts.c: 404: if(RFConfig == 1)
 37273  00409A  0433               	decf	_RFConfig,w,c
 37274  00409C  A4D8               	btfss	status,2,c
 37275  00409E  D003               	goto	i2l16710
 37276                           
 37277                           ;interrupts.c: 405: {
 37278                           ;interrupts.c: 406: (LATC &= ~0x20);
 37279  0040A0  9A8B               	bcf	3979,5,c	;volatile
 37280                           
 37281                           ;interrupts.c: 407: (PR2 = 250);
 37282  0040A2  0EFA               	movlw	250
 37283  0040A4  D005               	goto	L30
 37284  0040A6                     i2l16710:
 37285                           
 37286                           ;interrupts.c: 409: else if(RFConfig == 2)
 37287  0040A6  0E02               	movlw	2
 37288  0040A8  1833               	xorwf	_RFConfig,w,c
 37289  0040AA  A4D8               	btfss	status,2,c
 37290  0040AC  D003               	goto	i2l1291
 37291                           
 37292                           ;interrupts.c: 410: {
 37293                           ;interrupts.c: 411: (PR2 = 149);
 37294  0040AE  0E95               	movlw	149
 37295  0040B0                     L30:
 37296  0040B0  6ECB               	movwf	4043,c	;volatile
 37297                           
 37298                           ;interrupts.c: 412: }
 37299  0040B2  D005               	goto	i2l16716
 37300  0040B4                     i2l1291:
 37301                           
 37302                           ;interrupts.c: 413: else
 37303                           ;interrupts.c: 414: {
 37304                           ;interrupts.c: 416: (T2CONbits.TMR2ON = 0);
 37305  0040B4  94CA               	bcf	4042,2,c	;volatile
 37306                           
 37307                           ;interrupts.c: 417: Sent = 1;
 37308  0040B6  0E01               	movlw	1
 37309  0040B8  0100               	movlb	0	; () banked
 37310  0040BA  6FE6               	movwf	_Sent& (0+255),b	;volatile
 37311                           
 37312                           ; BSR set to: 0
 37313  0040BC  D000               	goto	i2l16716
 37314  0040BE                     i2l16716:
 37315                           
 37316                           ;interrupts.c: 418: }
 37317                           ;interrupts.c: 419: RFcodePlace++;
 37318  0040BE  2A35               	incf	_RFcodePlace,f,c
 37319                           
 37320                           ;interrupts.c: 420: Sendcount--;
 37321  0040C0  0637               	decf	_Sendcount,f,c	;volatile
 37322                           
 37323                           ;interrupts.c: 421: if(Sendcount)
 37324  0040C2  5037               	movf	_Sendcount,w,c	;volatile
 37325  0040C4  B4D8               	btfsc	status,2,c
 37326  0040C6  D00E               	goto	i2l16734
 37327                           
 37328                           ;interrupts.c: 422: {
 37329                           ;interrupts.c: 424: RFcodePlace = 1;
 37330  0040C8  0E01               	movlw	1
 37331  0040CA  6E35               	movwf	_RFcodePlace,c
 37332                           
 37333                           ;interrupts.c: 425: RFcodeBit = 0;
 37334  0040CC  0E00               	movlw	0
 37335  0040CE  6E34               	movwf	_RFcodeBit,c
 37336                           
 37337                           ;interrupts.c: 426: }
 37338                           ;interrupts.c: 427: }
 37339  0040D0  D009               	goto	i2l16734
 37340  0040D2                     i2l16722:
 37341                           
 37342                           ;interrupts.c: 428: else
 37343                           ;interrupts.c: 429: {
 37344                           ;interrupts.c: 431: ResetTimer3();
 37345  0040D2  EC9F  F04A         	call	_ResetTimer3	;wreg free
 37346                           
 37347                           ;interrupts.c: 432: PIR2bits.TMR3IF = 0;
 37348  0040D6  92A1               	bcf	4001,1,c	;volatile
 37349                           
 37350                           ;interrupts.c: 433: Timer3_Postscaler = 0;
 37351  0040D8  0E00               	movlw	0
 37352  0040DA  6E3A               	movwf	_Timer3_Postscaler,c
 37353                           
 37354                           ;interrupts.c: 434: (T3CONbits.TMR3ON = 1);
 37355  0040DC  80B1               	bsf	4017,0,c	;volatile
 37356                           
 37357                           ;interrupts.c: 435: (T2CONbits.TMR2ON = 0);
 37358  0040DE  94CA               	bcf	4042,2,c	;volatile
 37359  0040E0  D73F               	goto	L31
 37360                           
 37361                           ;interrupts.c: 436: RFsendFlag = 0;
 37362  0040E2  D000               	goto	i2l16734
 37363  0040E4                     i2l16734:
 37364                           
 37365                           ;interrupts.c: 437: }
 37366                           ;interrupts.c: 438: }
 37367                           ;interrupts.c: 439: }
 37368                           ;interrupts.c: 440: if(RFsendFlag)
 37369  0040E4  5036               	movf	_RFsendFlag,w,c	;volatile
 37370  0040E6  B4D8               	btfsc	status,2,c
 37371  0040E8  D0C2               	goto	i2l16862
 37372                           
 37373                           ;interrupts.c: 441: {
 37374                           ;interrupts.c: 443: (T2CONbits.TMR2ON = 1);
 37375  0040EA  84CA               	bsf	4042,2,c	;volatile
 37376                           
 37377                           ;interrupts.c: 444: }
 37378                           ;interrupts.c: 445: }
 37379  0040EC  D0C0               	goto	i2l16862
 37380  0040EE                     i2l16738:
 37381                           
 37382                           ;interrupts.c: 446: else
 37383                           ;interrupts.c: 447: {
 37384                           ;interrupts.c: 449: if(Timer2_Postscaler >= RF_IR_Postscaler)
 37385  0040EE  5043               	movf	_RF_IR_Postscaler,w,c	;volatile
 37386  0040F0  5C39               	subwf	_Timer2_Postscaler,w,c
 37387  0040F2  A0D8               	btfss	status,0,c
 37388  0040F4  D0BC               	goto	i2l16862
 37389                           
 37390                           ;interrupts.c: 450: {
 37391                           ;interrupts.c: 451: Timer2_Postscaler = 0;
 37392  0040F6  0E00               	movlw	0
 37393  0040F8  6E39               	movwf	_Timer2_Postscaler,c
 37394                           
 37395                           ;interrupts.c: 452: if(IRcodePlace == 7)
 37396  0040FA  0E07               	movlw	7
 37397  0040FC  1841               	xorwf	_IRcodePlace,w,c
 37398  0040FE  A4D8               	btfss	status,2,c
 37399  004100  D00D               	goto	i2l16754
 37400                           
 37401                           ;interrupts.c: 453: {
 37402                           ;interrupts.c: 454: IRbitPosition = 32;
 37403  004102  0E20               	movlw	32
 37404  004104  6E40               	movwf	_IRbitPosition,c	;volatile
 37405                           
 37406                           ;interrupts.c: 455: (IRmod = 0);
 37407  004106  0E00               	movlw	0
 37408  004108  0100               	movlb	0	; () banked
 37409  00410A  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37410                           
 37411                           ; BSR set to: 0
 37412                           ;interrupts.c: 456: (LATC &= ~0x08);
 37413  00410C  968B               	bcf	3979,3,c	;volatile
 37414                           
 37415                           ; BSR set to: 0
 37416                           ;interrupts.c: 457: IRcodePlace = 8;
 37417  00410E  0E08               	movlw	8
 37418  004110  6E41               	movwf	_IRcodePlace,c
 37419                           
 37420                           ; BSR set to: 0
 37421                           ;interrupts.c: 458: RF_IR_Postscaler = 4;
 37422  004112  0E04               	movlw	4
 37423  004114  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37424                           
 37425                           ; BSR set to: 0
 37426                           ;interrupts.c: 459: (PR2 = 75);
 37427  004116  0E4B               	movlw	75
 37428  004118  6ECB               	movwf	4043,c	;volatile
 37429                           
 37430                           ;interrupts.c: 460: }
 37431  00411A  D0A9               	goto	i2l16862
 37432  00411C                     i2l16754:
 37433                           
 37434                           ;interrupts.c: 461: else if(IRcodePlace == 8 || IRcodePlace == 10)
 37435  00411C  0E08               	movlw	8
 37436  00411E  1841               	xorwf	_IRcodePlace,w,c
 37437  004120  B4D8               	btfsc	status,2,c
 37438  004122  D004               	goto	i2l16758
 37439  004124  0E0A               	movlw	10
 37440  004126  1841               	xorwf	_IRcodePlace,w,c
 37441  004128  A4D8               	btfss	status,2,c
 37442  00412A  D013               	goto	i2l16768
 37443  00412C                     i2l16758:
 37444                           
 37445                           ;interrupts.c: 462: {
 37446                           ;interrupts.c: 463: (IRmod = 1);
 37447  00412C  0E01               	movlw	1
 37448  00412E  0100               	movlb	0	; () banked
 37449  004130  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37450                           
 37451                           ;interrupts.c: 464: RF_IR_Postscaler = 1;
 37452  004132  0E01               	movlw	1
 37453  004134  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37454                           
 37455                           ; BSR set to: 0
 37456                           ;interrupts.c: 465: IRbit = (unsigned char) (IRsendCode & 0x01);
 37457  004136  0102               	movlb	2	; () banked
 37458  004138  51E2               	movf	_IRsendCode& (0+255),w,b
 37459  00413A  0B01               	andlw	1
 37460  00413C  6E2C               	movwf	_IRbit,c
 37461                           
 37462                           ; BSR set to: 2
 37463                           ;interrupts.c: 466: IRsendCode >>= 1;
 37464  00413E  0102               	movlb	2	; () banked
 37465  004140  90D8               	bcf	status,0,c
 37466  004142  33E5               	rrcf	(_IRsendCode+3)& (0+255),f,b
 37467  004144  33E4               	rrcf	(_IRsendCode+2)& (0+255),f,b
 37468  004146  33E3               	rrcf	(_IRsendCode+1)& (0+255),f,b
 37469  004148  33E2               	rrcf	_IRsendCode& (0+255),f,b
 37470                           
 37471                           ; BSR set to: 2
 37472                           ;interrupts.c: 467: (PR2 = 38);
 37473  00414A  0E26               	movlw	38
 37474  00414C  6ECB               	movwf	4043,c	;volatile
 37475                           
 37476                           ; BSR set to: 2
 37477                           ;interrupts.c: 468: IRcodePlace = 9;
 37478  00414E  0E09               	movlw	9
 37479  004150  D07A               	goto	L41
 37480  004152                     i2l16768:
 37481                           
 37482                           ;interrupts.c: 470: else if(IRcodePlace == 9)
 37483  004152  0E09               	movlw	9
 37484  004154  1841               	xorwf	_IRcodePlace,w,c
 37485  004156  A4D8               	btfss	status,2,c
 37486  004158  D017               	goto	i2l16790
 37487                           
 37488                           ;interrupts.c: 471: {
 37489                           ;interrupts.c: 472: (IRmod = 0);
 37490  00415A  0E00               	movlw	0
 37491  00415C  0100               	movlb	0	; () banked
 37492  00415E  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37493                           
 37494                           ; BSR set to: 0
 37495                           ;interrupts.c: 473: (LATC &= ~0x08);
 37496  004160  968B               	bcf	3979,3,c	;volatile
 37497                           
 37498                           ; BSR set to: 0
 37499                           ;interrupts.c: 474: RF_IR_Postscaler = 1;
 37500  004162  0E01               	movlw	1
 37501  004164  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37502                           
 37503                           ; BSR set to: 0
 37504                           ;interrupts.c: 475: if(IRbit)
 37505  004166  502C               	movf	_IRbit,w,c
 37506  004168  B4D8               	btfsc	status,2,c
 37507  00416A  D002               	goto	i2l16780
 37508                           
 37509                           ; BSR set to: 0
 37510                           ;interrupts.c: 476: {
 37511                           ;interrupts.c: 478: (PR2 = 113);
 37512  00416C  0E71               	movlw	113
 37513  00416E  D001               	goto	L33
 37514  004170                     i2l16780:
 37515                           
 37516                           ; BSR set to: 0
 37517                           ;interrupts.c: 480: else
 37518                           ;interrupts.c: 481: {
 37519                           ;interrupts.c: 483: (PR2 = 38);
 37520  004170  0E26               	movlw	38
 37521  004172                     L33:
 37522  004172  6ECB               	movwf	4043,c	;volatile
 37523  004174  D000               	goto	i2l16782
 37524  004176                     i2l16782:
 37525                           
 37526                           ; BSR set to: 0
 37527                           ;interrupts.c: 484: }
 37528                           ;interrupts.c: 485: IRbitPosition--;
 37529  004176  0640               	decf	_IRbitPosition,f,c	;volatile
 37530                           
 37531                           ; BSR set to: 0
 37532                           ;interrupts.c: 486: if(IRbitPosition == 0)
 37533  004178  5040               	movf	_IRbitPosition,w,c	;volatile
 37534  00417A  A4D8               	btfss	status,2,c
 37535  00417C  D002               	goto	i2l16788
 37536                           
 37537                           ; BSR set to: 0
 37538                           ;interrupts.c: 487: {
 37539                           ;interrupts.c: 488: IRcodePlace = 11;
 37540  00417E  0E0B               	movlw	11
 37541  004180  D062               	goto	L41
 37542  004182                     i2l16788:
 37543                           
 37544                           ; BSR set to: 0
 37545                           ;interrupts.c: 490: else
 37546                           ;interrupts.c: 491: {
 37547                           ;interrupts.c: 492: IRcodePlace = 10;
 37548  004182  0E0A               	movlw	10
 37549  004184  D060               	goto	L41
 37550                           
 37551                           ; BSR set to: 0
 37552                           ;interrupts.c: 493: }
 37553                           ;interrupts.c: 494: }
 37554  004186  D073               	goto	i2l16862
 37555  004188                     i2l16790:
 37556                           
 37557                           ;interrupts.c: 495: else if(IRcodePlace == 11)
 37558  004188  0E0B               	movlw	11
 37559  00418A  1841               	xorwf	_IRcodePlace,w,c
 37560  00418C  A4D8               	btfss	status,2,c
 37561  00418E  D007               	goto	i2l16794
 37562                           
 37563                           ;interrupts.c: 496: {
 37564                           ;interrupts.c: 497: (IRmod = 1);
 37565  004190  0E01               	movlw	1
 37566  004192  0100               	movlb	0	; () banked
 37567  004194  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37568                           
 37569                           ;interrupts.c: 498: (PR2 = 38);
 37570  004196  0E26               	movlw	38
 37571  004198  6ECB               	movwf	4043,c	;volatile
 37572                           
 37573                           ;interrupts.c: 499: IRcodePlace = 12;
 37574  00419A  0E0C               	movlw	12
 37575  00419C  D054               	goto	L41
 37576  00419E                     i2l16794:
 37577                           
 37578                           ;interrupts.c: 501: else if(IRcodePlace == 12)
 37579  00419E  0E0C               	movlw	12
 37580  0041A0  1841               	xorwf	_IRcodePlace,w,c
 37581  0041A2  A4D8               	btfss	status,2,c
 37582  0041A4  D011               	goto	i2l16808
 37583                           
 37584                           ;interrupts.c: 502: {
 37585                           ;interrupts.c: 503: (IRmod = 0);
 37586  0041A6  0E00               	movlw	0
 37587  0041A8  0100               	movlb	0	; () banked
 37588  0041AA  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37589                           
 37590                           ; BSR set to: 0
 37591                           ;interrupts.c: 504: (LATC &= ~0x08);
 37592  0041AC  968B               	bcf	3979,3,c	;volatile
 37593                           
 37594                           ; BSR set to: 0
 37595                           ;interrupts.c: 505: if(!IRrepeatflag)
 37596  0041AE  5031               	movf	_IRrepeatflag,w,c
 37597  0041B0  A4D8               	btfss	status,2,c
 37598  0041B2  D003               	goto	i2l16806
 37599                           
 37600                           ; BSR set to: 0
 37601                           ;interrupts.c: 506: {
 37602                           ;interrupts.c: 508: IRcodePlace = 13;
 37603  0041B4  0E0D               	movlw	13
 37604  0041B6  6E41               	movwf	_IRcodePlace,c
 37605  0041B8  D057               	goto	i2l16858
 37606  0041BA                     i2l16806:
 37607                           
 37608                           ; BSR set to: 0
 37609                           ;interrupts.c: 512: else
 37610                           ;interrupts.c: 513: {
 37611                           ;interrupts.c: 514: RF_IR_Postscaler = 11;
 37612  0041BA  0E0B               	movlw	11
 37613  0041BC  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37614                           
 37615                           ;interrupts.c: 515: (PR2 = 242);
 37616  0041BE  0EF2               	movlw	242
 37617  0041C0  6ECB               	movwf	4043,c	;volatile
 37618                           
 37619                           ;interrupts.c: 516: IRcodePlace = 14;
 37620  0041C2  0E0E               	movlw	14
 37621  0041C4  D040               	goto	L41
 37622                           
 37623                           ; BSR set to: 0
 37624                           ;interrupts.c: 517: }
 37625                           ;interrupts.c: 518: }
 37626  0041C6  D053               	goto	i2l16862
 37627  0041C8                     i2l16808:
 37628                           
 37629                           ;interrupts.c: 519: else if(IRcodePlace == 14 || IRcodePlace == 18)
 37630  0041C8  0E0E               	movlw	14
 37631  0041CA  1841               	xorwf	_IRcodePlace,w,c
 37632  0041CC  B4D8               	btfsc	status,2,c
 37633  0041CE  D004               	goto	i2l16812
 37634  0041D0  0E12               	movlw	18
 37635  0041D2  1841               	xorwf	_IRcodePlace,w,c
 37636  0041D4  A4D8               	btfss	status,2,c
 37637  0041D6  D009               	goto	i2l16814
 37638  0041D8                     i2l16812:
 37639                           
 37640                           ;interrupts.c: 520: {
 37641                           ;interrupts.c: 521: (IRmod = 1);
 37642  0041D8  0E01               	movlw	1
 37643  0041DA  0100               	movlb	0	; () banked
 37644  0041DC  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37645                           
 37646                           ;interrupts.c: 522: RF_IR_Postscaler = 4;
 37647  0041DE  0E04               	movlw	4
 37648  0041E0  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37649                           
 37650                           ;interrupts.c: 523: (PR2 = 150);
 37651  0041E2  0E96               	movlw	150
 37652  0041E4  6ECB               	movwf	4043,c	;volatile
 37653                           
 37654                           ;interrupts.c: 524: IRcodePlace = 15;
 37655  0041E6  0E0F               	movlw	15
 37656  0041E8  D02E               	goto	L41
 37657  0041EA                     i2l16814:
 37658                           
 37659                           ;interrupts.c: 526: else if(IRcodePlace == 15)
 37660  0041EA  0E0F               	movlw	15
 37661  0041EC  1841               	xorwf	_IRcodePlace,w,c
 37662  0041EE  A4D8               	btfss	status,2,c
 37663  0041F0  D00A               	goto	i2l16826
 37664                           
 37665                           ;interrupts.c: 527: {
 37666                           ;interrupts.c: 528: (IRmod = 0);
 37667  0041F2  0E00               	movlw	0
 37668  0041F4  0100               	movlb	0	; () banked
 37669  0041F6  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37670                           
 37671                           ; BSR set to: 0
 37672                           ;interrupts.c: 529: (LATC &= ~0x08);
 37673  0041F8  968B               	bcf	3979,3,c	;volatile
 37674                           
 37675                           ; BSR set to: 0
 37676                           ;interrupts.c: 530: RF_IR_Postscaler = 1;
 37677  0041FA  0E01               	movlw	1
 37678  0041FC  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37679                           
 37680                           ; BSR set to: 0
 37681                           ;interrupts.c: 531: (PR2 = 149);
 37682  0041FE  0E95               	movlw	149
 37683  004200  6ECB               	movwf	4043,c	;volatile
 37684                           
 37685                           ; BSR set to: 0
 37686                           ;interrupts.c: 532: IRcodePlace = 16;
 37687  004202  0E10               	movlw	16
 37688  004204  D020               	goto	L41
 37689  004206                     i2l16826:
 37690                           
 37691                           ;interrupts.c: 534: else if(IRcodePlace == 16)
 37692  004206  0E10               	movlw	16
 37693  004208  1841               	xorwf	_IRcodePlace,w,c
 37694  00420A  A4D8               	btfss	status,2,c
 37695  00420C  D009               	goto	i2l16830
 37696                           
 37697                           ;interrupts.c: 535: {
 37698                           ;interrupts.c: 536: (IRmod = 1);
 37699  00420E  0E01               	movlw	1
 37700  004210  0100               	movlb	0	; () banked
 37701  004212  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37702                           
 37703                           ;interrupts.c: 537: RF_IR_Postscaler = 1;
 37704  004214  0E01               	movlw	1
 37705  004216  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37706                           
 37707                           ;interrupts.c: 538: (PR2 = 38);
 37708  004218  0E26               	movlw	38
 37709  00421A  6ECB               	movwf	4043,c	;volatile
 37710                           
 37711                           ;interrupts.c: 539: IRcodePlace = 17;
 37712  00421C  0E11               	movlw	17
 37713  00421E  D013               	goto	L41
 37714  004220                     i2l16830:
 37715                           
 37716                           ;interrupts.c: 541: else if(IRcodePlace == 17)
 37717  004220  0E11               	movlw	17
 37718  004222  1841               	xorwf	_IRcodePlace,w,c
 37719  004224  A4D8               	btfss	status,2,c
 37720  004226  D011               	goto	i2l16846
 37721                           
 37722                           ;interrupts.c: 542: {
 37723                           ;interrupts.c: 543: (IRmod = 0);
 37724  004228  0E00               	movlw	0
 37725  00422A  0100               	movlb	0	; () banked
 37726  00422C  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37727                           
 37728                           ; BSR set to: 0
 37729                           ;interrupts.c: 544: (LATC &= ~0x08);
 37730  00422E  968B               	bcf	3979,3,c	;volatile
 37731                           
 37732                           ; BSR set to: 0
 37733                           ;interrupts.c: 545: RF_IR_Postscaler = 26;
 37734  004230  0E1A               	movlw	26
 37735  004232  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37736                           
 37737                           ; BSR set to: 0
 37738                           ;interrupts.c: 546: (PR2 = 246);
 37739  004234  0EF6               	movlw	246
 37740  004236  6ECB               	movwf	4043,c	;volatile
 37741                           
 37742                           ; BSR set to: 0
 37743                           ;interrupts.c: 547: IRrepeatAmount--;
 37744  004238  0630               	decf	_IRrepeatAmount,f,c
 37745                           
 37746                           ;interrupts.c: 548: if(IRrepeatAmount)
 37747  00423A  5030               	movf	_IRrepeatAmount,w,c
 37748  00423C  B4D8               	btfsc	status,2,c
 37749  00423E  D002               	goto	i2l16844
 37750                           
 37751                           ; BSR set to: 0
 37752                           ;interrupts.c: 549: {
 37753                           ;interrupts.c: 550: IRcodePlace = 18;
 37754  004240  0E12               	movlw	18
 37755  004242  D001               	goto	L41
 37756  004244                     i2l16844:
 37757                           
 37758                           ; BSR set to: 0
 37759                           ;interrupts.c: 552: else
 37760                           ;interrupts.c: 553: {
 37761                           ;interrupts.c: 554: IRcodePlace = 13;
 37762  004244  0E0D               	movlw	13
 37763  004246                     L41:
 37764  004246  6E41               	movwf	_IRcodePlace,c
 37765                           
 37766                           ; BSR set to: 0
 37767                           ;interrupts.c: 555: }
 37768                           ;interrupts.c: 556: }
 37769  004248  D012               	goto	i2l16862
 37770  00424A                     i2l16846:
 37771                           
 37772                           ;interrupts.c: 557: else if(IRcodePlace == 13)
 37773  00424A  0E0D               	movlw	13
 37774  00424C  1841               	xorwf	_IRcodePlace,w,c
 37775  00424E  A4D8               	btfss	status,2,c
 37776  004250  D005               	goto	i2l16852
 37777  004252  D00A               	goto	i2l16858
 37778  004254                     i2l16850:
 37779                           
 37780                           ;interrupts.c: 561: Sent = 1;
 37781  004254  0E01               	movlw	1
 37782  004256  0100               	movlb	0	; () banked
 37783  004258  6FE6               	movwf	_Sent& (0+255),b	;volatile
 37784                           
 37785                           ;interrupts.c: 562: }
 37786  00425A  D009               	goto	i2l16862
 37787  00425C                     i2l16852:
 37788                           
 37789                           ;interrupts.c: 563: else
 37790                           ;interrupts.c: 564: {
 37791                           ;interrupts.c: 566: (IRmod = 0);
 37792  00425C  0E00               	movlw	0
 37793  00425E  0100               	movlb	0	; () banked
 37794  004260  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37795                           
 37796                           ; BSR set to: 0
 37797                           ;interrupts.c: 567: (LATC &= ~0x08);
 37798  004262  968B               	bcf	3979,3,c	;volatile
 37799                           
 37800                           ; BSR set to: 0
 37801                           ;interrupts.c: 568: IRcodePlace = 0;
 37802  004264  0E00               	movlw	0
 37803  004266  6E41               	movwf	_IRcodePlace,c
 37804  004268                     i2l16858:
 37805                           
 37806                           ; BSR set to: 0
 37807                           ;interrupts.c: 569: (T2CONbits.TMR2ON = 0);
 37808  004268  94CA               	bcf	4042,2,c	;volatile
 37809  00426A  D7F4               	goto	i2l16850
 37810                           
 37811                           ; BSR set to: 0
 37812                           
 37813                           ; BSR set to: 0
 37814                           
 37815                           ; BSR set to: 0
 37816                           
 37817                           ; BSR set to: 0
 37818                           
 37819                           ; BSR set to: 0
 37820                           
 37821                           ; BSR set to: 0
 37822                           
 37823                           ; BSR set to: 0
 37824                           
 37825                           ; BSR set to: 0
 37826                           
 37827                           ; BSR set to: 0
 37828                           
 37829                           ; BSR set to: 0
 37830                           
 37831                           ; BSR set to: 0
 37832                           
 37833                           ; BSR set to: 0
 37834                           ;interrupts.c: 570: Sent = 1;
 37835  00426C  D000               	goto	i2l16862
 37836  00426E                     i2l16862:
 37837                           
 37838                           ;interrupts.c: 571: }
 37839                           ;interrupts.c: 572: }
 37840                           ;interrupts.c: 573: }
 37841                           ;interrupts.c: 574: PIR1bits.TMR2IF = 0;
 37842  00426E  929E               	bcf	3998,1,c	;volatile
 37843                           
 37844                           ;interrupts.c: 575: }
 37845  004270  D013               	goto	i2l1223
 37846  004272                     i2l1228:
 37847                           
 37848                           ;interrupts.c: 576: else if(PIR2bits.TMR3IF)
 37849  004272  A2A1               	btfss	4001,1,c	;volatile
 37850  004274  D00F               	goto	i2l1331
 37851                           
 37852                           ;interrupts.c: 577: {
 37853                           ;interrupts.c: 578: (T3CONbits.TMR3ON = 0);
 37854  004276  90B1               	bcf	4017,0,c	;volatile
 37855                           
 37856                           ;interrupts.c: 579: if(Timer3_Postscaler < 4)
 37857  004278  0E04               	movlw	4
 37858  00427A  603A               	cpfslt	_Timer3_Postscaler,c
 37859  00427C  D005               	goto	i2l16874
 37860                           
 37861                           ;interrupts.c: 580: {
 37862                           ;interrupts.c: 581: ResetTimer3();
 37863  00427E  EC9F  F04A         	call	_ResetTimer3	;wreg free
 37864                           
 37865                           ;interrupts.c: 582: (T3CONbits.TMR3ON = 1);
 37866  004282  80B1               	bsf	4017,0,c	;volatile
 37867                           
 37868                           ;interrupts.c: 583: Timer3_Postscaler++;
 37869  004284  2A3A               	incf	_Timer3_Postscaler,f,c
 37870                           
 37871                           ;interrupts.c: 584: }
 37872  004286  D004               	goto	i2l16876
 37873  004288                     i2l16874:
 37874                           
 37875                           ;interrupts.c: 585: else
 37876                           ;interrupts.c: 586: {
 37877                           ;interrupts.c: 591: Sent = 1;
 37878  004288  0E01               	movlw	1
 37879  00428A  0100               	movlb	0	; () banked
 37880  00428C  6FE6               	movwf	_Sent& (0+255),b	;volatile
 37881  00428E  D000               	goto	i2l16876
 37882  004290                     i2l16876:
 37883                           
 37884                           ;interrupts.c: 592: }
 37885                           ;interrupts.c: 593: PIR2bits.TMR3IF = 0;
 37886  004290  92A1               	bcf	4001,1,c	;volatile
 37887                           
 37888                           ;interrupts.c: 594: }
 37889  004292  D002               	goto	i2l1223
 37890  004294                     i2l1331:
 37891                           
 37892                           ;interrupts.c: 595: else
 37893                           ;interrupts.c: 596: {
 37894                           ;interrupts.c: 598: __nop();
 37895  004294  F000               	nop	
 37896  004296  D000               	goto	i2l1223
 37897  004298                     i2l1223:
 37898                           
 37899                           ;interrupts.c: 599: }
 37900                           ;interrupts.c: 601: INTCONbits.GIE = 1;
 37901  004298  8EF2               	bsf	intcon,7,c	;volatile
 37902  00429A  C078  FFF5         	movff	??_high_isr+17,tablat
 37903  00429E  C077  FFF8         	movff	??_high_isr+16,tblptru
 37904  0042A2  C076  FFF7         	movff	??_high_isr+15,tblptrh
 37905  0042A6  C075  FFF6         	movff	??_high_isr+14,tblptrl
 37906  0042AA  C074  FFF4         	movff	??_high_isr+13,prodh
 37907  0042AE  C073  FFF3         	movff	??_high_isr+12,prodl
 37908  0042B2  C072  FFDA         	movff	??_high_isr+11,fsr2h
 37909  0042B6  C071  FFD9         	movff	??_high_isr+10,fsr2l
 37910  0042BA  C070  FFE2         	movff	??_high_isr+9,fsr1h
 37911  0042BE  C06F  FFE1         	movff	??_high_isr+8,fsr1l
 37912  0042C2  C06E  FFEA         	movff	??_high_isr+7,fsr0h
 37913  0042C6  C06D  FFE9         	movff	??_high_isr+6,fsr0l
 37914  0042CA  C06C  FFFB         	movff	??_high_isr+5,pclatu
 37915  0042CE  C06B  FFFA         	movff	??_high_isr+4,pclath
 37916  0042D2  0011               	retfie		f
 37917  0042D4                     __end_of_high_isr:
 37918                           	opt stack 0
 37919                           pclatu	equ	0xFFB
 37920                           pclath	equ	0xFFA
 37921                           tblptru	equ	0xFF8
 37922                           tblptrh	equ	0xFF7
 37923                           tblptrl	equ	0xFF6
 37924                           tablat	equ	0xFF5
 37925                           prodh	equ	0xFF4
 37926                           prodl	equ	0xFF3
 37927                           intcon	equ	0xFF2
 37928                           intcon2	equ	0xFF1
 37929                           indf0	equ	0xFEF
 37930                           postinc0	equ	0xFEE
 37931                           plusw0	equ	0xFEB
 37932                           fsr0h	equ	0xFEA
 37933                           fsr0l	equ	0xFE9
 37934                           wreg	equ	0xFE8
 37935                           indf1	equ	0xFE7
 37936                           postdec1	equ	0xFE5
 37937                           fsr1h	equ	0xFE2
 37938                           fsr1l	equ	0xFE1
 37939                           bsr	equ	0xFE0
 37940                           indf2	equ	0xFDF
 37941                           postinc2	equ	0xFDE
 37942                           postdec2	equ	0xFDD
 37943                           plusw2	equ	0xFDB
 37944                           fsr2h	equ	0xFDA
 37945                           fsr2l	equ	0xFD9
 37946                           status	equ	0xFD8
 37947                           
 37948 ;; *************** function i2_cleanBuffer16bit *****************
 37949 ;; Defined at:
 37950 ;;		line 141 in file "MISC.c"
 37951 ;; Parameters:    Size  Location     Type
 37952 ;;  data            2   26[COMRAM] PTR unsigned int 
 37953 ;;		 -> IRRawCode(200), 
 37954 ;;  count           2   28[COMRAM] int 
 37955 ;; Auto vars:     Size  Location     Type
 37956 ;;  cleanBuffer1    1   33[COMRAM] unsigned char 
 37957 ;; Return value:  Size  Location     Type
 37958 ;;		None               void
 37959 ;; Registers used:
 37960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37961 ;; Tracked objects:
 37962 ;;		On entry : 0/0
 37963 ;;		On exit  : 0/0
 37964 ;;		Unchanged: 0/0
 37965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37968 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37969 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37970 ;;Total ram usage:        8 bytes
 37971 ;; Hardware stack levels used:    1
 37972 ;; This function calls:
 37973 ;;		Nothing
 37974 ;; This function is called by:
 37975 ;;		_high_isr
 37976 ;; This function uses a non-reentrant model
 37977 ;;
 37978                           
 37979                           	psect	text111
 37980  0090A2                     __ptext111:
 37981                           	opt stack 0
 37982  0090A2                     i2_cleanBuffer16bit:
 37983                           	opt stack 17
 37984                           
 37985                           ;MISC.c: 143: unsigned char i=0;
 37986                           
 37987                           ;incstack = 0
 37988  0090A2  0E00               	movlw	0
 37989  0090A4  6E22               	movwf	i2cleanBuffer16bit@i,c
 37990                           
 37991                           ;MISC.c: 144: for(i=0; i<count;i++)
 37992  0090A6  0E00               	movlw	0
 37993  0090A8  6E22               	movwf	i2cleanBuffer16bit@i,c
 37994  0090AA  D00E               	goto	i2l11688
 37995  0090AC                     i2l11684:
 37996                           
 37997                           ;MISC.c: 145: {
 37998                           ;MISC.c: 146: data[i]= 0;
 37999  0090AC  5022               	movf	i2cleanBuffer16bit@i,w,c
 38000  0090AE  0D02               	mullw	2
 38001  0090B0  50F3               	movf	prodl,w,c
 38002  0090B2  241B               	addwf	i2cleanBuffer16bit@data,w,c
 38003  0090B4  6ED9               	movwf	fsr2l,c
 38004  0090B6  50F4               	movf	prodh,w,c
 38005  0090B8  201C               	addwfc	i2cleanBuffer16bit@data+1,w,c
 38006  0090BA  6EDA               	movwf	fsr2h,c
 38007  0090BC  0E00               	movlw	0
 38008  0090BE  6EDE               	movwf	postinc2,c
 38009  0090C0  0E00               	movlw	0
 38010  0090C2  6EDD               	movwf	postdec2,c
 38011  0090C4  2A22               	incf	i2cleanBuffer16bit@i,f,c
 38012  0090C6  D000               	goto	i2l11688
 38013  0090C8                     i2l11688:
 38014  0090C8  5022               	movf	i2cleanBuffer16bit@i,w,c
 38015  0090CA  6E1F               	movwf	??i2_cleanBuffer16bit& (0+255),c
 38016  0090CC  6A20               	clrf	(??i2_cleanBuffer16bit+1)& (0+255),c
 38017  0090CE  501D               	movf	i2cleanBuffer16bit@count,w,c
 38018  0090D0  5C1F               	subwf	??i2_cleanBuffer16bit,w,c
 38019  0090D2  5020               	movf	??i2_cleanBuffer16bit+1,w,c
 38020  0090D4  0A80               	xorlw	128
 38021  0090D6  6E21               	movwf	(??i2_cleanBuffer16bit+2)& (0+255),c
 38022  0090D8  501E               	movf	i2cleanBuffer16bit@count+1,w,c
 38023  0090DA  0A80               	xorlw	128
 38024  0090DC  5821               	subwfb	(??i2_cleanBuffer16bit+2)& (0+255),w,c
 38025  0090DE  A0D8               	btfss	status,0,c
 38026  0090E0  D7E5               	goto	i2l11684
 38027  0090E2  0012               	return		;funcret
 38028  0090E4                     __end_ofi2_cleanBuffer16bit:
 38029                           	opt stack 0
 38030                           pclatu	equ	0xFFB
 38031                           pclath	equ	0xFFA
 38032                           tblptru	equ	0xFF8
 38033                           tblptrh	equ	0xFF7
 38034                           tblptrl	equ	0xFF6
 38035                           tablat	equ	0xFF5
 38036                           prodh	equ	0xFF4
 38037                           prodl	equ	0xFF3
 38038                           intcon	equ	0xFF2
 38039                           intcon2	equ	0xFF1
 38040                           indf0	equ	0xFEF
 38041                           postinc0	equ	0xFEE
 38042                           plusw0	equ	0xFEB
 38043                           fsr0h	equ	0xFEA
 38044                           fsr0l	equ	0xFE9
 38045                           wreg	equ	0xFE8
 38046                           indf1	equ	0xFE7
 38047                           postdec1	equ	0xFE5
 38048                           fsr1h	equ	0xFE2
 38049                           fsr1l	equ	0xFE1
 38050                           bsr	equ	0xFE0
 38051                           indf2	equ	0xFDF
 38052                           postinc2	equ	0xFDE
 38053                           postdec2	equ	0xFDD
 38054                           plusw2	equ	0xFDB
 38055                           fsr2h	equ	0xFDA
 38056                           fsr2l	equ	0xFD9
 38057                           status	equ	0xFD8
 38058                           
 38059 ;; *************** function i2_ResetTimer0 *****************
 38060 ;; Defined at:
 38061 ;;		line 79 in file "Timer.c"
 38062 ;; Parameters:    Size  Location     Type
 38063 ;;		None
 38064 ;; Auto vars:     Size  Location     Type
 38065 ;;		None
 38066 ;; Return value:  Size  Location     Type
 38067 ;;		None               void
 38068 ;; Registers used:
 38069 ;;		wreg, status,2
 38070 ;; Tracked objects:
 38071 ;;		On entry : 0/0
 38072 ;;		On exit  : 0/0
 38073 ;;		Unchanged: 0/0
 38074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38079 ;;Total ram usage:        0 bytes
 38080 ;; Hardware stack levels used:    1
 38081 ;; This function calls:
 38082 ;;		Nothing
 38083 ;; This function is called by:
 38084 ;;		_high_isr
 38085 ;; This function uses a non-reentrant model
 38086 ;;
 38087                           
 38088                           	psect	text112
 38089  00952A                     __ptext112:
 38090                           	opt stack 0
 38091  00952A                     i2_ResetTimer0:
 38092                           	opt stack 17
 38093                           
 38094                           ;Timer.c: 85: TMR0H = 0;
 38095                           
 38096                           ;incstack = 0
 38097  00952A  0E00               	movlw	0
 38098  00952C  6ED7               	movwf	4055,c	;volatile
 38099                           
 38100                           ;Timer.c: 86: TMR0L = 2;
 38101  00952E  0E02               	movlw	2
 38102  009530  6ED6               	movwf	4054,c	;volatile
 38103  009532  0012               	return		;funcret
 38104  009534                     __end_ofi2_ResetTimer0:
 38105                           	opt stack 0
 38106                           pclatu	equ	0xFFB
 38107                           pclath	equ	0xFFA
 38108                           tblptru	equ	0xFF8
 38109                           tblptrh	equ	0xFF7
 38110                           tblptrl	equ	0xFF6
 38111                           tablat	equ	0xFF5
 38112                           prodh	equ	0xFF4
 38113                           prodl	equ	0xFF3
 38114                           intcon	equ	0xFF2
 38115                           intcon2	equ	0xFF1
 38116                           indf0	equ	0xFEF
 38117                           postinc0	equ	0xFEE
 38118                           plusw0	equ	0xFEB
 38119                           fsr0h	equ	0xFEA
 38120                           fsr0l	equ	0xFE9
 38121                           wreg	equ	0xFE8
 38122                           indf1	equ	0xFE7
 38123                           postdec1	equ	0xFE5
 38124                           fsr1h	equ	0xFE2
 38125                           fsr1l	equ	0xFE1
 38126                           bsr	equ	0xFE0
 38127                           indf2	equ	0xFDF
 38128                           postinc2	equ	0xFDE
 38129                           postdec2	equ	0xFDD
 38130                           plusw2	equ	0xFDB
 38131                           fsr2h	equ	0xFDA
 38132                           fsr2l	equ	0xFD9
 38133                           status	equ	0xFD8
 38134                           
 38135 ;; *************** function i2_ReadIRpin *****************
 38136 ;; Defined at:
 38137 ;;		line 107 in file "IR.c"
 38138 ;; Parameters:    Size  Location     Type
 38139 ;;		None
 38140 ;; Auto vars:     Size  Location     Type
 38141 ;;		None
 38142 ;; Return value:  Size  Location     Type
 38143 ;;                  1    wreg      unsigned char 
 38144 ;; Registers used:
 38145 ;;		wreg
 38146 ;; Tracked objects:
 38147 ;;		On entry : 0/0
 38148 ;;		On exit  : 0/0
 38149 ;;		Unchanged: 0/0
 38150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38155 ;;Total ram usage:        0 bytes
 38156 ;; Hardware stack levels used:    1
 38157 ;; This function calls:
 38158 ;;		Nothing
 38159 ;; This function is called by:
 38160 ;;		_high_isr
 38161 ;; This function uses a non-reentrant model
 38162 ;;
 38163                           
 38164                           	psect	text113
 38165  0094FE                     __ptext113:
 38166                           	opt stack 0
 38167  0094FE                     i2_ReadIRpin:
 38168                           	opt stack 17
 38169                           
 38170                           ;IR.c: 110: if((PORTB & 0x10) == 0x10)
 38171                           
 38172                           ;incstack = 0
 38173  0094FE  A881               	btfss	3969,4,c	;volatile
 38174  009500  D002               	goto	i2l11722
 38175                           
 38176                           ;IR.c: 111: {
 38177                           ;IR.c: 112: return (1);
 38178  009502  0E01               	movlw	1
 38179                           
 38180                           ;IR.c: 113: }
 38181  009504  0012               	return	
 38182  009506                     i2l11722:
 38183                           
 38184                           ;IR.c: 114: else
 38185                           ;IR.c: 115: {
 38186                           ;IR.c: 116: return 0;
 38187  009506  0E00               	movlw	0
 38188  009508  0012               	return	
 38189  00950A  0012               	return		;funcret
 38190  00950C                     __end_ofi2_ReadIRpin:
 38191                           	opt stack 0
 38192                           pclatu	equ	0xFFB
 38193                           pclath	equ	0xFFA
 38194                           tblptru	equ	0xFF8
 38195                           tblptrh	equ	0xFF7
 38196                           tblptrl	equ	0xFF6
 38197                           tablat	equ	0xFF5
 38198                           prodh	equ	0xFF4
 38199                           prodl	equ	0xFF3
 38200                           intcon	equ	0xFF2
 38201                           intcon2	equ	0xFF1
 38202                           indf0	equ	0xFEF
 38203                           postinc0	equ	0xFEE
 38204                           plusw0	equ	0xFEB
 38205                           fsr0h	equ	0xFEA
 38206                           fsr0l	equ	0xFE9
 38207                           wreg	equ	0xFE8
 38208                           indf1	equ	0xFE7
 38209                           postdec1	equ	0xFE5
 38210                           fsr1h	equ	0xFE2
 38211                           fsr1l	equ	0xFE1
 38212                           bsr	equ	0xFE0
 38213                           indf2	equ	0xFDF
 38214                           postinc2	equ	0xFDE
 38215                           postdec2	equ	0xFDD
 38216                           plusw2	equ	0xFDB
 38217                           fsr2h	equ	0xFDA
 38218                           fsr2l	equ	0xFD9
 38219                           status	equ	0xFD8
 38220                           
 38221 ;; *************** function _SetTimer0 *****************
 38222 ;; Defined at:
 38223 ;;		line 94 in file "Timer.c"
 38224 ;; Parameters:    Size  Location     Type
 38225 ;;  temp            2   26[COMRAM] unsigned int 
 38226 ;; Auto vars:     Size  Location     Type
 38227 ;;		None
 38228 ;; Return value:  Size  Location     Type
 38229 ;;		None               void
 38230 ;; Registers used:
 38231 ;;		wreg, status,2
 38232 ;; Tracked objects:
 38233 ;;		On entry : 0/0
 38234 ;;		On exit  : 0/0
 38235 ;;		Unchanged: 0/0
 38236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38240 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38241 ;;Total ram usage:        2 bytes
 38242 ;; Hardware stack levels used:    1
 38243 ;; This function calls:
 38244 ;;		Nothing
 38245 ;; This function is called by:
 38246 ;;		_high_isr
 38247 ;; This function uses a non-reentrant model
 38248 ;;
 38249                           
 38250                           	psect	text114
 38251  009534                     __ptext114:
 38252                           	opt stack 0
 38253  009534                     _SetTimer0:
 38254                           	opt stack 17
 38255                           
 38256                           ;Timer.c: 100: TMR0H = (temp & 0xFF00)>> 8;;
 38257                           
 38258                           ;incstack = 0
 38259  009534  501C               	movf	SetTimer0@temp+1,w,c
 38260  009536  6ED7               	movwf	4055,c	;volatile
 38261                           
 38262                           ;Timer.c: 101: TMR0L = temp & 0xFF;
 38263  009538  C01B  FFD6         	movff	SetTimer0@temp,4054	;volatile
 38264  00953C  0012               	return		;funcret
 38265  00953E                     __end_of_SetTimer0:
 38266                           	opt stack 0
 38267                           pclatu	equ	0xFFB
 38268                           pclath	equ	0xFFA
 38269                           tblptru	equ	0xFF8
 38270                           tblptrh	equ	0xFF7
 38271                           tblptrl	equ	0xFF6
 38272                           tablat	equ	0xFF5
 38273                           prodh	equ	0xFF4
 38274                           prodl	equ	0xFF3
 38275                           intcon	equ	0xFF2
 38276                           intcon2	equ	0xFF1
 38277                           indf0	equ	0xFEF
 38278                           postinc0	equ	0xFEE
 38279                           plusw0	equ	0xFEB
 38280                           fsr0h	equ	0xFEA
 38281                           fsr0l	equ	0xFE9
 38282                           wreg	equ	0xFE8
 38283                           indf1	equ	0xFE7
 38284                           postdec1	equ	0xFE5
 38285                           fsr1h	equ	0xFE2
 38286                           fsr1l	equ	0xFE1
 38287                           bsr	equ	0xFE0
 38288                           indf2	equ	0xFDF
 38289                           postinc2	equ	0xFDE
 38290                           postdec2	equ	0xFDD
 38291                           plusw2	equ	0xFDB
 38292                           fsr2h	equ	0xFDA
 38293                           fsr2l	equ	0xFD9
 38294                           status	equ	0xFD8
 38295                           
 38296 ;; *************** function _ResetTimer3 *****************
 38297 ;; Defined at:
 38298 ;;		line 175 in file "Timer.c"
 38299 ;; Parameters:    Size  Location     Type
 38300 ;;		None
 38301 ;; Auto vars:     Size  Location     Type
 38302 ;;		None
 38303 ;; Return value:  Size  Location     Type
 38304 ;;		None               void
 38305 ;; Registers used:
 38306 ;;		wreg, status,2
 38307 ;; Tracked objects:
 38308 ;;		On entry : 0/0
 38309 ;;		On exit  : 0/0
 38310 ;;		Unchanged: 0/0
 38311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38316 ;;Total ram usage:        0 bytes
 38317 ;; Hardware stack levels used:    1
 38318 ;; This function calls:
 38319 ;;		Nothing
 38320 ;; This function is called by:
 38321 ;;		_high_isr
 38322 ;; This function uses a non-reentrant model
 38323 ;;
 38324                           
 38325                           	psect	text115
 38326  00953E                     __ptext115:
 38327                           	opt stack 0
 38328  00953E                     _ResetTimer3:
 38329                           	opt stack 17
 38330                           
 38331                           ;Timer.c: 181: TMR3H = 0;
 38332                           
 38333                           ;incstack = 0
 38334  00953E  0E00               	movlw	0
 38335  009540  6EB3               	movwf	4019,c	;volatile
 38336                           
 38337                           ;Timer.c: 182: TMR3L = 2;
 38338  009542  0E02               	movlw	2
 38339  009544  6EB2               	movwf	4018,c	;volatile
 38340  009546  0012               	return		;funcret
 38341  009548                     __end_of_ResetTimer3:
 38342                           	opt stack 0
 38343                           pclatu	equ	0xFFB
 38344                           pclath	equ	0xFFA
 38345                           tblptru	equ	0xFF8
 38346                           tblptrh	equ	0xFF7
 38347                           tblptrl	equ	0xFF6
 38348                           tablat	equ	0xFF5
 38349                           prodh	equ	0xFF4
 38350                           prodl	equ	0xFF3
 38351                           intcon	equ	0xFF2
 38352                           intcon2	equ	0xFF1
 38353                           indf0	equ	0xFEF
 38354                           postinc0	equ	0xFEE
 38355                           plusw0	equ	0xFEB
 38356                           fsr0h	equ	0xFEA
 38357                           fsr0l	equ	0xFE9
 38358                           wreg	equ	0xFE8
 38359                           indf1	equ	0xFE7
 38360                           postdec1	equ	0xFE5
 38361                           fsr1h	equ	0xFE2
 38362                           fsr1l	equ	0xFE1
 38363                           bsr	equ	0xFE0
 38364                           indf2	equ	0xFDF
 38365                           postinc2	equ	0xFDE
 38366                           postdec2	equ	0xFDD
 38367                           plusw2	equ	0xFDB
 38368                           fsr2h	equ	0xFDA
 38369                           fsr2l	equ	0xFD9
 38370                           status	equ	0xFD8
 38371                           
 38372 ;; *************** function _IRrawToNEC *****************
 38373 ;; Defined at:
 38374 ;;		line 125 in file "IR.c"
 38375 ;; Parameters:    Size  Location     Type
 38376 ;;  Raw             2   26[COMRAM] PTR unsigned int 
 38377 ;;		 -> IRRawCode(200), 
 38378 ;;  NEC             2   28[COMRAM] PTR unsigned long 
 38379 ;;		 -> IR_NEC(4), 
 38380 ;;  Invert          1   30[COMRAM] unsigned char 
 38381 ;; Auto vars:     Size  Location     Type
 38382 ;;  NECtemp         4    0[BANK0 ] unsigned long 
 38383 ;;  StartBit        1    6[BANK0 ] unsigned char 
 38384 ;;  i               1    5[BANK0 ] unsigned char 
 38385 ;;  first           1    4[BANK0 ] unsigned char 
 38386 ;; Return value:  Size  Location     Type
 38387 ;;                  1    wreg      unsigned char 
 38388 ;; Registers used:
 38389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38390 ;; Tracked objects:
 38391 ;;		On entry : 0/0
 38392 ;;		On exit  : 0/0
 38393 ;;		Unchanged: 0/0
 38394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38395 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38396 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38397 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38398 ;;      Totals:         7       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38399 ;;Total ram usage:       14 bytes
 38400 ;; Hardware stack levels used:    1
 38401 ;; This function calls:
 38402 ;;		Nothing
 38403 ;; This function is called by:
 38404 ;;		_high_isr
 38405 ;; This function uses a non-reentrant model
 38406 ;;
 38407                           
 38408                           	psect	text116
 38409  005082                     __ptext116:
 38410                           	opt stack 0
 38411  005082                     _IRrawToNEC:
 38412                           	opt stack 17
 38413                           
 38414                           ;IR.c: 153: unsigned char i;
 38415                           ;IR.c: 154: unsigned char first =0;
 38416                           
 38417                           ;incstack = 0
 38418  005082  0E00               	movlw	0
 38419  005084  0100               	movlb	0	; () banked
 38420  005086  6F64               	movwf	IRrawToNEC@first& (0+255),b
 38421                           
 38422                           ;IR.c: 155: unsigned char StartBit=100;
 38423  005088  0E64               	movlw	100
 38424  00508A  0100               	movlb	0	; () banked
 38425  00508C  6F66               	movwf	IRrawToNEC@StartBit& (0+255),b
 38426                           
 38427                           ;IR.c: 156: unsigned long NECtemp = 0;
 38428  00508E  0E00               	movlw	0
 38429  005090  0100               	movlb	0	; () banked
 38430  005092  6F60               	movwf	IRrawToNEC@NECtemp& (0+255),b
 38431  005094  0E00               	movlw	0
 38432  005096  6F61               	movwf	(IRrawToNEC@NECtemp+1)& (0+255),b
 38433  005098  0E00               	movlw	0
 38434  00509A  6F62               	movwf	(IRrawToNEC@NECtemp+2)& (0+255),b
 38435  00509C  0E00               	movlw	0
 38436  00509E  6F63               	movwf	(IRrawToNEC@NECtemp+3)& (0+255),b
 38437                           
 38438                           ;IR.c: 159: for (i =0; i < 100; i++)
 38439  0050A0  0E00               	movlw	0
 38440  0050A2  0100               	movlb	0	; () banked
 38441  0050A4  6F65               	movwf	IRrawToNEC@i& (0+255),b
 38442  0050A6                     i2l16122:
 38443                           
 38444                           ; BSR set to: 0
 38445  0050A6  0E63               	movlw	99
 38446  0050A8  0100               	movlb	0	; () banked
 38447  0050AA  6565               	cpfsgt	IRrawToNEC@i& (0+255),b
 38448  0050AC  D001               	goto	i2l16126
 38449                           
 38450                           ; BSR set to: 0
 38451  0050AE  D046               	goto	i2l16146
 38452  0050B0                     i2l16126:
 38453                           
 38454                           ; BSR set to: 0
 38455                           ;IR.c: 160: {
 38456                           ;IR.c: 161: if(Raw[i] >= 45000 && Raw[i] <= 50000 )
 38457  0050B0  0100               	movlb	0	; () banked
 38458  0050B2  5165               	movf	IRrawToNEC@i& (0+255),w,b
 38459  0050B4  0D02               	mullw	2
 38460  0050B6  50F3               	movf	prodl,w,c
 38461  0050B8  241B               	addwf	IRrawToNEC@Raw,w,c
 38462  0050BA  6ED9               	movwf	fsr2l,c
 38463  0050BC  50F4               	movf	prodh,w,c
 38464  0050BE  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38465  0050C0  6EDA               	movwf	fsr2h,c
 38466  0050C2  0EC8               	movlw	200
 38467  0050C4  5CDE               	subwf	postinc2,w,c
 38468  0050C6  0EAF               	movlw	175
 38469  0050C8  58DE               	subwfb	postinc2,w,c
 38470  0050CA  A0D8               	btfss	status,0,c
 38471  0050CC  D012               	goto	i2l16136
 38472                           
 38473                           ; BSR set to: 0
 38474  0050CE  0100               	movlb	0	; () banked
 38475  0050D0  5165               	movf	IRrawToNEC@i& (0+255),w,b
 38476  0050D2  0D02               	mullw	2
 38477  0050D4  50F3               	movf	prodl,w,c
 38478  0050D6  241B               	addwf	IRrawToNEC@Raw,w,c
 38479  0050D8  6ED9               	movwf	fsr2l,c
 38480  0050DA  50F4               	movf	prodh,w,c
 38481  0050DC  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38482  0050DE  6EDA               	movwf	fsr2h,c
 38483  0050E0  0E51               	movlw	81
 38484  0050E2  5CDE               	subwf	postinc2,w,c
 38485  0050E4  0EC3               	movlw	195
 38486  0050E6  58DE               	subwfb	postinc2,w,c
 38487  0050E8  B0D8               	btfsc	status,0,c
 38488  0050EA  D003               	goto	i2l16136
 38489                           
 38490                           ; BSR set to: 0
 38491                           ;IR.c: 162: {
 38492                           ;IR.c: 164: return 2;
 38493  0050EC  0E02               	movlw	2
 38494                           
 38495                           ; BSR set to: 0
 38496  0050EE  0012               	return	
 38497                           
 38498                           ; BSR set to: 0
 38499                           ;IR.c: 165: }
 38500  0050F0  D022               	goto	i2l16142
 38501  0050F2                     i2l16136:
 38502                           
 38503                           ; BSR set to: 0
 38504                           ;IR.c: 166: else if(Raw[i] >= 4000 && Raw[i] <= 5000 )
 38505  0050F2  0100               	movlb	0	; () banked
 38506  0050F4  5165               	movf	IRrawToNEC@i& (0+255),w,b
 38507  0050F6  0D02               	mullw	2
 38508  0050F8  50F3               	movf	prodl,w,c
 38509  0050FA  241B               	addwf	IRrawToNEC@Raw,w,c
 38510  0050FC  6ED9               	movwf	fsr2l,c
 38511  0050FE  50F4               	movf	prodh,w,c
 38512  005100  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38513  005102  6EDA               	movwf	fsr2h,c
 38514  005104  0EA0               	movlw	160
 38515  005106  5CDE               	subwf	postinc2,w,c
 38516  005108  0E0F               	movlw	15
 38517  00510A  58DE               	subwfb	postinc2,w,c
 38518  00510C  A0D8               	btfss	status,0,c
 38519  00510E  D013               	goto	i2l16142
 38520                           
 38521                           ; BSR set to: 0
 38522  005110  0100               	movlb	0	; () banked
 38523  005112  5165               	movf	IRrawToNEC@i& (0+255),w,b
 38524  005114  0D02               	mullw	2
 38525  005116  50F3               	movf	prodl,w,c
 38526  005118  241B               	addwf	IRrawToNEC@Raw,w,c
 38527  00511A  6ED9               	movwf	fsr2l,c
 38528  00511C  50F4               	movf	prodh,w,c
 38529  00511E  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38530  005120  6EDA               	movwf	fsr2h,c
 38531  005122  0E89               	movlw	137
 38532  005124  5CDE               	subwf	postinc2,w,c
 38533  005126  0E13               	movlw	19
 38534  005128  58DE               	subwfb	postinc2,w,c
 38535  00512A  B0D8               	btfsc	status,0,c
 38536  00512C  D004               	goto	i2l16142
 38537                           
 38538                           ; BSR set to: 0
 38539                           ;IR.c: 167: {
 38540                           ;IR.c: 169: StartBit = i;
 38541  00512E  C065  F066         	movff	IRrawToNEC@i,IRrawToNEC@StartBit
 38542                           
 38543                           ;IR.c: 170: break;
 38544  005132  D004               	goto	i2l16146
 38545                           
 38546                           ; BSR set to: 0
 38547  005134  D000               	goto	i2l16142
 38548  005136                     i2l16142:
 38549                           
 38550                           ; BSR set to: 0
 38551  005136  0100               	movlb	0	; () banked
 38552  005138  2B65               	incf	IRrawToNEC@i& (0+255),f,b
 38553  00513A  D7B5               	goto	i2l16122
 38554  00513C                     i2l16146:
 38555                           
 38556                           ; BSR set to: 0
 38557                           ;IR.c: 171: }
 38558                           ;IR.c: 172: }
 38559                           ;IR.c: 173: if((100 - StartBit) < 50)
 38560  00513C  0100               	movlb	0	; () banked
 38561  00513E  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38562  005140  6E20               	movwf	??_IRrawToNEC& (0+255),c
 38563  005142  6A21               	clrf	(??_IRrawToNEC+1)& (0+255),c
 38564  005144  1E20               	comf	??_IRrawToNEC,f,c
 38565  005146  1E21               	comf	??_IRrawToNEC+1,f,c
 38566  005148  4A20               	infsnz	??_IRrawToNEC,f,c
 38567  00514A  2A21               	incf	??_IRrawToNEC+1,f,c
 38568  00514C  0E64               	movlw	100
 38569  00514E  2620               	addwf	??_IRrawToNEC,f,c
 38570  005150  0E00               	movlw	0
 38571  005152  2221               	addwfc	??_IRrawToNEC+1,f,c
 38572  005154  BE21               	btfsc	??_IRrawToNEC+1,7,c
 38573  005156  D006               	goto	i2l16148
 38574  005158  5021               	movf	??_IRrawToNEC+1,w,c
 38575  00515A  E106               	bnz	i2l16152
 38576  00515C  0E32               	movlw	50
 38577  00515E  5C20               	subwf	??_IRrawToNEC,w,c
 38578  005160  B0D8               	btfsc	status,0,c
 38579  005162  D002               	goto	i2l16152
 38580  005164                     i2l16148:
 38581                           
 38582                           ; BSR set to: 0
 38583                           ;IR.c: 174: {
 38584                           ;IR.c: 176: return 0;
 38585  005164  0E00               	movlw	0
 38586                           
 38587                           ; BSR set to: 0
 38588  005166  0012               	return	
 38589  005168                     i2l16152:
 38590                           
 38591                           ; BSR set to: 0
 38592                           ;IR.c: 177: }
 38593                           ;IR.c: 179: StartBit++;
 38594  005168  0100               	movlb	0	; () banked
 38595  00516A  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 38596                           
 38597                           ; BSR set to: 0
 38598                           ;IR.c: 180: if(Raw[StartBit] >= 925 && Raw[StartBit] <= 1250 )
 38599  00516C  0100               	movlb	0	; () banked
 38600  00516E  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38601  005170  0D02               	mullw	2
 38602  005172  50F3               	movf	prodl,w,c
 38603  005174  241B               	addwf	IRrawToNEC@Raw,w,c
 38604  005176  6ED9               	movwf	fsr2l,c
 38605  005178  50F4               	movf	prodh,w,c
 38606  00517A  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38607  00517C  6EDA               	movwf	fsr2h,c
 38608  00517E  0E9D               	movlw	157
 38609  005180  5CDE               	subwf	postinc2,w,c
 38610  005182  0E03               	movlw	3
 38611  005184  58DE               	subwfb	postinc2,w,c
 38612  005186  A0D8               	btfss	status,0,c
 38613  005188  D06E               	goto	i2l16174
 38614                           
 38615                           ; BSR set to: 0
 38616  00518A  0100               	movlb	0	; () banked
 38617  00518C  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38618  00518E  0D02               	mullw	2
 38619  005190  50F3               	movf	prodl,w,c
 38620  005192  241B               	addwf	IRrawToNEC@Raw,w,c
 38621  005194  6ED9               	movwf	fsr2l,c
 38622  005196  50F4               	movf	prodh,w,c
 38623  005198  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38624  00519A  6EDA               	movwf	fsr2h,c
 38625  00519C  0EE3               	movlw	227
 38626  00519E  5CDE               	subwf	postinc2,w,c
 38627  0051A0  0E04               	movlw	4
 38628  0051A2  58DE               	subwfb	postinc2,w,c
 38629  0051A4  B0D8               	btfsc	status,0,c
 38630  0051A6  D05F               	goto	i2l16174
 38631                           
 38632                           ; BSR set to: 0
 38633                           ;IR.c: 181: {
 38634                           ;IR.c: 183: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 38635  0051A8  0100               	movlb	0	; () banked
 38636  0051AA  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38637  0051AC  0D02               	mullw	2
 38638  0051AE  50F3               	movf	prodl,w,c
 38639  0051B0  241B               	addwf	IRrawToNEC@Raw,w,c
 38640  0051B2  6ED9               	movwf	fsr2l,c
 38641  0051B4  50F4               	movf	prodh,w,c
 38642  0051B6  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38643  0051B8  6EDA               	movwf	fsr2h,c
 38644  0051BA  0E01               	movlw	1
 38645  0051BC  50DB               	movf	plusw2,w,c
 38646  0051BE  E104               	bnz	i2u2017_40
 38647  0051C0  0E7D               	movlw	125
 38648  0051C2  5CDE               	subwf	postinc2,w,c
 38649  0051C4  A0D8               	btfss	status,0,c
 38650  0051C6  D070               	goto	i2l16182
 38651  0051C8                     i2u2017_40:
 38652                           
 38653                           ; BSR set to: 0
 38654  0051C8  0100               	movlb	0	; () banked
 38655  0051CA  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38656  0051CC  0D02               	mullw	2
 38657  0051CE  50F3               	movf	prodl,w,c
 38658  0051D0  241B               	addwf	IRrawToNEC@Raw,w,c
 38659  0051D2  6ED9               	movwf	fsr2l,c
 38660  0051D4  50F4               	movf	prodh,w,c
 38661  0051D6  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38662  0051D8  6EDA               	movwf	fsr2h,c
 38663  0051DA  0E59               	movlw	89
 38664  0051DC  5CDE               	subwf	postinc2,w,c
 38665  0051DE  0E02               	movlw	2
 38666  0051E0  58DE               	subwfb	postinc2,w,c
 38667  0051E2  B0D8               	btfsc	status,0,c
 38668  0051E4  D061               	goto	i2l16182
 38669                           
 38670                           ; BSR set to: 0
 38671                           ;IR.c: 184: {
 38672                           ;IR.c: 186: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 38673  0051E6  0100               	movlb	0	; () banked
 38674  0051E8  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38675  0051EA  0D02               	mullw	2
 38676  0051EC  50F3               	movf	prodl,w,c
 38677  0051EE  241B               	addwf	IRrawToNEC@Raw,w,c
 38678  0051F0  6ED9               	movwf	fsr2l,c
 38679  0051F2  50F4               	movf	prodh,w,c
 38680  0051F4  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38681  0051F6  6EDA               	movwf	fsr2h,c
 38682  0051F8  0E01               	movlw	1
 38683  0051FA  50DB               	movf	plusw2,w,c
 38684  0051FC  E104               	bnz	i2u2019_40
 38685  0051FE  0E7D               	movlw	125
 38686  005200  5CDE               	subwf	postinc2,w,c
 38687  005202  A0D8               	btfss	status,0,c
 38688  005204  D051               	goto	i2l16182
 38689  005206                     i2u2019_40:
 38690                           
 38691                           ; BSR set to: 0
 38692  005206  0100               	movlb	0	; () banked
 38693  005208  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38694  00520A  0D02               	mullw	2
 38695  00520C  50F3               	movf	prodl,w,c
 38696  00520E  241B               	addwf	IRrawToNEC@Raw,w,c
 38697  005210  6ED9               	movwf	fsr2l,c
 38698  005212  50F4               	movf	prodh,w,c
 38699  005214  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38700  005216  6EDA               	movwf	fsr2h,c
 38701  005218  0E59               	movlw	89
 38702  00521A  5CDE               	subwf	postinc2,w,c
 38703  00521C  0E02               	movlw	2
 38704  00521E  58DE               	subwfb	postinc2,w,c
 38705  005220  B0D8               	btfsc	status,0,c
 38706  005222  D042               	goto	i2l16182
 38707                           
 38708                           ; BSR set to: 0
 38709                           ;IR.c: 187: {
 38710                           ;IR.c: 189: if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 38711  005224  0100               	movlb	0	; () banked
 38712  005226  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38713  005228  0D02               	mullw	2
 38714  00522A  50F3               	movf	prodl,w,c
 38715  00522C  241B               	addwf	IRrawToNEC@Raw,w,c
 38716  00522E  6ED9               	movwf	fsr2l,c
 38717  005230  50F4               	movf	prodh,w,c
 38718  005232  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38719  005234  6EDA               	movwf	fsr2h,c
 38720  005236  0EC8               	movlw	200
 38721  005238  5CDE               	subwf	postinc2,w,c
 38722  00523A  0EAF               	movlw	175
 38723  00523C  58DE               	subwfb	postinc2,w,c
 38724  00523E  A0D8               	btfss	status,0,c
 38725  005240  D033               	goto	i2l16182
 38726                           
 38727                           ; BSR set to: 0
 38728  005242  0100               	movlb	0	; () banked
 38729  005244  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38730  005246  0D02               	mullw	2
 38731  005248  50F3               	movf	prodl,w,c
 38732  00524A  241B               	addwf	IRrawToNEC@Raw,w,c
 38733  00524C  6ED9               	movwf	fsr2l,c
 38734  00524E  50F4               	movf	prodh,w,c
 38735  005250  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38736  005252  6EDA               	movwf	fsr2h,c
 38737  005254  0E51               	movlw	81
 38738  005256  5CDE               	subwf	postinc2,w,c
 38739  005258  0EC3               	movlw	195
 38740  00525A  58DE               	subwfb	postinc2,w,c
 38741  00525C  B0D8               	btfsc	status,0,c
 38742  00525E  D024               	goto	i2l16182
 38743                           
 38744                           ; BSR set to: 0
 38745                           ;IR.c: 190: {
 38746                           ;IR.c: 192: return 2;
 38747  005260  0E02               	movlw	2
 38748                           
 38749                           ; BSR set to: 0
 38750  005262  0012               	return	
 38751                           
 38752                           ; BSR set to: 0
 38753                           ;IR.c: 193: }
 38754                           ;IR.c: 194: }
 38755                           ;IR.c: 195: }
 38756                           ;IR.c: 197: }
 38757                           
 38758                           ; BSR set to: 0
 38759                           
 38760                           ; BSR set to: 0
 38761  005264  D021               	goto	i2l16182
 38762  005266                     i2l16174:
 38763                           
 38764                           ; BSR set to: 0
 38765                           ;IR.c: 198: else if(Raw[StartBit] < 1750 || Raw[StartBit] > 2750 )
 38766  005266  0100               	movlb	0	; () banked
 38767  005268  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38768  00526A  0D02               	mullw	2
 38769  00526C  50F3               	movf	prodl,w,c
 38770  00526E  241B               	addwf	IRrawToNEC@Raw,w,c
 38771  005270  6ED9               	movwf	fsr2l,c
 38772  005272  50F4               	movf	prodh,w,c
 38773  005274  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38774  005276  6EDA               	movwf	fsr2h,c
 38775  005278  0ED6               	movlw	214
 38776  00527A  5CDE               	subwf	postinc2,w,c
 38777  00527C  0E06               	movlw	6
 38778  00527E  58DE               	subwfb	postinc2,w,c
 38779  005280  A0D8               	btfss	status,0,c
 38780  005282  D00F               	goto	i2l16178
 38781                           
 38782                           ; BSR set to: 0
 38783  005284  0100               	movlb	0	; () banked
 38784  005286  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38785  005288  0D02               	mullw	2
 38786  00528A  50F3               	movf	prodl,w,c
 38787  00528C  241B               	addwf	IRrawToNEC@Raw,w,c
 38788  00528E  6ED9               	movwf	fsr2l,c
 38789  005290  50F4               	movf	prodh,w,c
 38790  005292  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38791  005294  6EDA               	movwf	fsr2h,c
 38792  005296  0EBF               	movlw	191
 38793  005298  5CDE               	subwf	postinc2,w,c
 38794  00529A  0E0A               	movlw	10
 38795  00529C  58DE               	subwfb	postinc2,w,c
 38796  00529E  A0D8               	btfss	status,0,c
 38797  0052A0  D003               	goto	i2l16182
 38798  0052A2                     i2l16178:
 38799                           
 38800                           ; BSR set to: 0
 38801                           ;IR.c: 199: {
 38802                           ;IR.c: 201: return 0;
 38803  0052A2  0E00               	movlw	0
 38804                           
 38805                           ; BSR set to: 0
 38806  0052A4  0012               	return	
 38807                           
 38808                           ; BSR set to: 0
 38809  0052A6  D000               	goto	i2l16182
 38810  0052A8                     i2l16182:
 38811                           
 38812                           ; BSR set to: 0
 38813                           ;IR.c: 202: }
 38814                           ;IR.c: 204: StartBit++;
 38815  0052A8  0100               	movlb	0	; () banked
 38816  0052AA  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 38817                           
 38818                           ; BSR set to: 0
 38819                           ;IR.c: 205: for(i = StartBit; i < 100;i++)
 38820  0052AC  C066  F065         	movff	IRrawToNEC@StartBit,IRrawToNEC@i
 38821  0052B0                     i2l16186:
 38822                           
 38823                           ; BSR set to: 0
 38824  0052B0  0E63               	movlw	99
 38825  0052B2  0100               	movlb	0	; () banked
 38826  0052B4  6565               	cpfsgt	IRrawToNEC@i& (0+255),b
 38827  0052B6  D001               	goto	i2l16190
 38828                           
 38829                           ; BSR set to: 0
 38830  0052B8  D0E0               	goto	i2l16266
 38831  0052BA                     i2l16190:
 38832                           
 38833                           ; BSR set to: 0
 38834                           ;IR.c: 206: {
 38835                           ;IR.c: 207: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 38836  0052BA  0100               	movlb	0	; () banked
 38837  0052BC  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38838  0052BE  0D02               	mullw	2
 38839  0052C0  50F3               	movf	prodl,w,c
 38840  0052C2  241B               	addwf	IRrawToNEC@Raw,w,c
 38841  0052C4  6ED9               	movwf	fsr2l,c
 38842  0052C6  50F4               	movf	prodh,w,c
 38843  0052C8  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38844  0052CA  6EDA               	movwf	fsr2h,c
 38845  0052CC  0E01               	movlw	1
 38846  0052CE  50DB               	movf	plusw2,w,c
 38847  0052D0  E104               	bnz	i2u2026_40
 38848  0052D2  0E7D               	movlw	125
 38849  0052D4  5CDE               	subwf	postinc2,w,c
 38850  0052D6  A0D8               	btfss	status,0,c
 38851  0052D8  D02A               	goto	i2l16206
 38852  0052DA                     i2u2026_40:
 38853                           
 38854                           ; BSR set to: 0
 38855  0052DA  0100               	movlb	0	; () banked
 38856  0052DC  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38857  0052DE  0D02               	mullw	2
 38858  0052E0  50F3               	movf	prodl,w,c
 38859  0052E2  241B               	addwf	IRrawToNEC@Raw,w,c
 38860  0052E4  6ED9               	movwf	fsr2l,c
 38861  0052E6  50F4               	movf	prodh,w,c
 38862  0052E8  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38863  0052EA  6EDA               	movwf	fsr2h,c
 38864  0052EC  0E59               	movlw	89
 38865  0052EE  5CDE               	subwf	postinc2,w,c
 38866  0052F0  0E02               	movlw	2
 38867  0052F2  58DE               	subwfb	postinc2,w,c
 38868  0052F4  B0D8               	btfsc	status,0,c
 38869  0052F6  D01B               	goto	i2l16206
 38870                           
 38871                           ; BSR set to: 0
 38872                           ;IR.c: 208: {
 38873                           ;IR.c: 209: if(!first)
 38874  0052F8  0100               	movlb	0	; () banked
 38875  0052FA  5164               	movf	IRrawToNEC@first& (0+255),w,b
 38876  0052FC  0100               	movlb	0	; () banked
 38877  0052FE  A4D8               	btfss	status,2,c
 38878  005300  D002               	goto	i2l16198
 38879                           
 38880                           ; BSR set to: 0
 38881                           ;IR.c: 210: {
 38882                           ;IR.c: 212: first = 1;
 38883  005302  0E01               	movlw	1
 38884  005304  D049               	goto	L44
 38885  005306                     i2l16198:
 38886                           
 38887                           ; BSR set to: 0
 38888                           ;IR.c: 214: else
 38889                           ;IR.c: 215: {
 38890                           ;IR.c: 217: first = 0;
 38891  005306  0E00               	movlw	0
 38892  005308  0100               	movlb	0	; () banked
 38893  00530A  6F64               	movwf	IRrawToNEC@first& (0+255),b
 38894                           
 38895                           ; BSR set to: 0
 38896                           ;IR.c: 218: NECtemp <<= 1;
 38897  00530C  0100               	movlb	0	; () banked
 38898  00530E  90D8               	bcf	status,0,c
 38899  005310  3760               	rlcf	IRrawToNEC@NECtemp& (0+255),f,b
 38900  005312  3761               	rlcf	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 38901  005314  3762               	rlcf	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 38902  005316  3763               	rlcf	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 38903                           
 38904                           ; BSR set to: 0
 38905                           ;IR.c: 219: if(!Invert)
 38906  005318  501F               	movf	IRrawToNEC@Invert,w,c
 38907  00531A  A4D8               	btfss	status,2,c
 38908  00531C  D0A9               	goto	i2l16262
 38909                           
 38910                           ; BSR set to: 0
 38911                           ;IR.c: 220: {
 38912                           ;IR.c: 221: NECtemp++;
 38913  00531E  0E01               	movlw	1
 38914  005320  0100               	movlb	0	; () banked
 38915  005322  2760               	addwf	IRrawToNEC@NECtemp& (0+255),f,b
 38916  005324  0E00               	movlw	0
 38917  005326  2361               	addwfc	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 38918  005328  2362               	addwfc	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 38919  00532A  2363               	addwfc	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 38920                           
 38921                           ; BSR set to: 0
 38922                           ;IR.c: 222: }
 38923                           ;IR.c: 223: }
 38924                           ;IR.c: 224: }
 38925                           
 38926                           ; BSR set to: 0
 38927  00532C  D0A1               	goto	i2l16262
 38928  00532E                     i2l16206:
 38929                           
 38930                           ; BSR set to: 0
 38931                           ;IR.c: 225: else if(Raw[StartBit] >= 700 && Raw[StartBit] <= 950)
 38932  00532E  0100               	movlb	0	; () banked
 38933  005330  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38934  005332  0D02               	mullw	2
 38935  005334  50F3               	movf	prodl,w,c
 38936  005336  241B               	addwf	IRrawToNEC@Raw,w,c
 38937  005338  6ED9               	movwf	fsr2l,c
 38938  00533A  50F4               	movf	prodh,w,c
 38939  00533C  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38940  00533E  6EDA               	movwf	fsr2h,c
 38941  005340  0EBC               	movlw	188
 38942  005342  5CDE               	subwf	postinc2,w,c
 38943  005344  0E02               	movlw	2
 38944  005346  58DE               	subwfb	postinc2,w,c
 38945  005348  A0D8               	btfss	status,0,c
 38946  00534A  D02C               	goto	i2l16224
 38947                           
 38948                           ; BSR set to: 0
 38949  00534C  0100               	movlb	0	; () banked
 38950  00534E  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38951  005350  0D02               	mullw	2
 38952  005352  50F3               	movf	prodl,w,c
 38953  005354  241B               	addwf	IRrawToNEC@Raw,w,c
 38954  005356  6ED9               	movwf	fsr2l,c
 38955  005358  50F4               	movf	prodh,w,c
 38956  00535A  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38957  00535C  6EDA               	movwf	fsr2h,c
 38958  00535E  0EB7               	movlw	183
 38959  005360  5CDE               	subwf	postinc2,w,c
 38960  005362  0E03               	movlw	3
 38961  005364  58DE               	subwfb	postinc2,w,c
 38962  005366  B0D8               	btfsc	status,0,c
 38963  005368  D01D               	goto	i2l16224
 38964                           
 38965                           ; BSR set to: 0
 38966                           ;IR.c: 226: {
 38967                           ;IR.c: 227: if(first)
 38968  00536A  0100               	movlb	0	; () banked
 38969  00536C  5164               	movf	IRrawToNEC@first& (0+255),w,b
 38970  00536E  0100               	movlb	0	; () banked
 38971  005370  B4D8               	btfsc	status,2,c
 38972  005372  D015               	goto	i2l16220
 38973                           
 38974                           ; BSR set to: 0
 38975                           ;IR.c: 228: {
 38976                           ;IR.c: 230: NECtemp <<= 1;
 38977  005374  0100               	movlb	0	; () banked
 38978  005376  90D8               	bcf	status,0,c
 38979  005378  3760               	rlcf	IRrawToNEC@NECtemp& (0+255),f,b
 38980  00537A  3761               	rlcf	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 38981  00537C  3762               	rlcf	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 38982  00537E  3763               	rlcf	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 38983                           
 38984                           ; BSR set to: 0
 38985                           ;IR.c: 231: if(Invert)
 38986  005380  501F               	movf	IRrawToNEC@Invert,w,c
 38987  005382  B4D8               	btfsc	status,2,c
 38988  005384  D008               	goto	i2l16218
 38989                           
 38990                           ; BSR set to: 0
 38991                           ;IR.c: 232: {
 38992                           ;IR.c: 233: NECtemp++;
 38993  005386  0E01               	movlw	1
 38994  005388  0100               	movlb	0	; () banked
 38995  00538A  2760               	addwf	IRrawToNEC@NECtemp& (0+255),f,b
 38996  00538C  0E00               	movlw	0
 38997  00538E  2361               	addwfc	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 38998  005390  2362               	addwfc	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 38999  005392  2363               	addwfc	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 39000  005394  D000               	goto	i2l16218
 39001  005396                     i2l16218:
 39002                           
 39003                           ; BSR set to: 0
 39004                           ;IR.c: 234: }
 39005                           ;IR.c: 235: first = 0;
 39006  005396  0E00               	movlw	0
 39007  005398                     L44:
 39008  005398  0100               	movlb	0	; () banked
 39009  00539A  6F64               	movwf	IRrawToNEC@first& (0+255),b
 39010                           
 39011                           ;IR.c: 236: }
 39012  00539C  D069               	goto	i2l16262
 39013  00539E                     i2l16220:
 39014                           
 39015                           ; BSR set to: 0
 39016                           ;IR.c: 237: else
 39017                           ;IR.c: 238: {
 39018                           ;IR.c: 240: return 0;
 39019  00539E  0E00               	movlw	0
 39020                           
 39021                           ; BSR set to: 0
 39022  0053A0  0012               	return	
 39023                           
 39024                           ; BSR set to: 0
 39025                           ;IR.c: 241: }
 39026                           ;IR.c: 242: }
 39027  0053A2  D066               	goto	i2l16262
 39028  0053A4                     i2l16224:
 39029                           
 39030                           ; BSR set to: 0
 39031                           ;IR.c: 243: else if(Raw[StartBit] == 0 && first == 1)
 39032  0053A4  0100               	movlb	0	; () banked
 39033  0053A6  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39034  0053A8  0D02               	mullw	2
 39035  0053AA  50F3               	movf	prodl,w,c
 39036  0053AC  241B               	addwf	IRrawToNEC@Raw,w,c
 39037  0053AE  6ED9               	movwf	fsr2l,c
 39038  0053B0  50F4               	movf	prodh,w,c
 39039  0053B2  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39040  0053B4  6EDA               	movwf	fsr2h,c
 39041  0053B6  50DE               	movf	postinc2,w,c
 39042  0053B8  10DE               	iorwf	postinc2,w,c
 39043  0053BA  A4D8               	btfss	status,2,c
 39044  0053BC  D013               	goto	i2l16236
 39045                           
 39046                           ; BSR set to: 0
 39047  0053BE  0100               	movlb	0	; () banked
 39048  0053C0  0564               	decf	IRrawToNEC@first& (0+255),w,b
 39049  0053C2  A4D8               	btfss	status,2,c
 39050  0053C4  D00F               	goto	i2l16236
 39051  0053C6                     i2l16228:
 39052                           
 39053                           ; BSR set to: 0
 39054                           ;IR.c: 244: {
 39055                           ;IR.c: 249: *NEC = NECtemp;
 39056  0053C6  C01D  FFD9         	movff	IRrawToNEC@NEC,fsr2l
 39057  0053CA  C01E  FFDA         	movff	IRrawToNEC@NEC+1,fsr2h
 39058  0053CE  C060  FFDE         	movff	IRrawToNEC@NECtemp,postinc2
 39059  0053D2  C061  FFDE         	movff	IRrawToNEC@NECtemp+1,postinc2
 39060  0053D6  C062  FFDE         	movff	IRrawToNEC@NECtemp+2,postinc2
 39061  0053DA  C063  FFDE         	movff	IRrawToNEC@NECtemp+3,postinc2
 39062  0053DE  D021               	goto	i2l16242
 39063                           
 39064                           ; BSR set to: 0
 39065                           
 39066                           ; BSR set to: 0
 39067                           ;IR.c: 250: return 1;
 39068  0053E0  0012               	return	
 39069                           
 39070                           ; BSR set to: 0
 39071                           ;IR.c: 251: }
 39072  0053E2  D046               	goto	i2l16262
 39073  0053E4                     i2l16236:
 39074                           
 39075                           ; BSR set to: 0
 39076                           ;IR.c: 252: else if(Raw[StartBit] >= 19000 && Raw[StartBit] <= 21000)
 39077  0053E4  0100               	movlb	0	; () banked
 39078  0053E6  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39079  0053E8  0D02               	mullw	2
 39080  0053EA  50F3               	movf	prodl,w,c
 39081  0053EC  241B               	addwf	IRrawToNEC@Raw,w,c
 39082  0053EE  6ED9               	movwf	fsr2l,c
 39083  0053F0  50F4               	movf	prodh,w,c
 39084  0053F2  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39085  0053F4  6EDA               	movwf	fsr2h,c
 39086  0053F6  0E38               	movlw	56
 39087  0053F8  5CDE               	subwf	postinc2,w,c
 39088  0053FA  0E4A               	movlw	74
 39089  0053FC  58DE               	subwfb	postinc2,w,c
 39090  0053FE  A0D8               	btfss	status,0,c
 39091  005400  D013               	goto	i2l16248
 39092                           
 39093                           ; BSR set to: 0
 39094  005402  0100               	movlb	0	; () banked
 39095  005404  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39096  005406  0D02               	mullw	2
 39097  005408  50F3               	movf	prodl,w,c
 39098  00540A  241B               	addwf	IRrawToNEC@Raw,w,c
 39099  00540C  6ED9               	movwf	fsr2l,c
 39100  00540E  50F4               	movf	prodh,w,c
 39101  005410  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39102  005412  6EDA               	movwf	fsr2h,c
 39103  005414  0E09               	movlw	9
 39104  005416  5CDE               	subwf	postinc2,w,c
 39105  005418  0E52               	movlw	82
 39106  00541A  58DE               	subwfb	postinc2,w,c
 39107  00541C  B0D8               	btfsc	status,0,c
 39108  00541E  D004               	goto	i2l16248
 39109  005420  D7D2               	goto	i2l16228
 39110  005422                     i2l16242:
 39111                           
 39112                           ; BSR set to: 0
 39113                           ;IR.c: 256: return 1;
 39114  005422  0E01               	movlw	1
 39115                           
 39116                           ; BSR set to: 0
 39117  005424  0012               	return	
 39118                           
 39119                           ; BSR set to: 0
 39120                           ;IR.c: 257: }
 39121  005426  D024               	goto	i2l16262
 39122  005428                     i2l16248:
 39123                           
 39124                           ; BSR set to: 0
 39125                           ;IR.c: 258: else if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 39126  005428  0100               	movlb	0	; () banked
 39127  00542A  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39128  00542C  0D02               	mullw	2
 39129  00542E  50F3               	movf	prodl,w,c
 39130  005430  241B               	addwf	IRrawToNEC@Raw,w,c
 39131  005432  6ED9               	movwf	fsr2l,c
 39132  005434  50F4               	movf	prodh,w,c
 39133  005436  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39134  005438  6EDA               	movwf	fsr2h,c
 39135  00543A  0EC8               	movlw	200
 39136  00543C  5CDE               	subwf	postinc2,w,c
 39137  00543E  0EAF               	movlw	175
 39138  005440  58DE               	subwfb	postinc2,w,c
 39139  005442  A0D8               	btfss	status,0,c
 39140  005444  D012               	goto	i2l16258
 39141                           
 39142                           ; BSR set to: 0
 39143  005446  0100               	movlb	0	; () banked
 39144  005448  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39145  00544A  0D02               	mullw	2
 39146  00544C  50F3               	movf	prodl,w,c
 39147  00544E  241B               	addwf	IRrawToNEC@Raw,w,c
 39148  005450  6ED9               	movwf	fsr2l,c
 39149  005452  50F4               	movf	prodh,w,c
 39150  005454  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39151  005456  6EDA               	movwf	fsr2h,c
 39152  005458  0E51               	movlw	81
 39153  00545A  5CDE               	subwf	postinc2,w,c
 39154  00545C  0EC3               	movlw	195
 39155  00545E  58DE               	subwfb	postinc2,w,c
 39156  005460  B0D8               	btfsc	status,0,c
 39157  005462  D003               	goto	i2l16258
 39158                           
 39159                           ; BSR set to: 0
 39160                           ;IR.c: 259: {
 39161                           ;IR.c: 261: return 2;
 39162  005464  0E02               	movlw	2
 39163                           
 39164                           ; BSR set to: 0
 39165  005466  0012               	return	
 39166                           
 39167                           ; BSR set to: 0
 39168                           ;IR.c: 262: }
 39169  005468  D003               	goto	i2l16262
 39170  00546A                     i2l16258:
 39171                           
 39172                           ; BSR set to: 0
 39173                           ;IR.c: 263: else
 39174                           ;IR.c: 264: {
 39175                           ;IR.c: 265: return 0;
 39176  00546A  0E00               	movlw	0
 39177                           
 39178                           ; BSR set to: 0
 39179  00546C  0012               	return	
 39180                           
 39181                           ; BSR set to: 0
 39182                           
 39183                           ; BSR set to: 0
 39184                           
 39185                           ; BSR set to: 0
 39186                           
 39187                           ; BSR set to: 0
 39188  00546E  D000               	goto	i2l16262
 39189  005470                     i2l16262:
 39190                           
 39191                           ; BSR set to: 0
 39192                           ;IR.c: 266: }
 39193                           ;IR.c: 267: StartBit++;
 39194  005470  0100               	movlb	0	; () banked
 39195  005472  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 39196  005474  0100               	movlb	0	; () banked
 39197  005476  2B65               	incf	IRrawToNEC@i& (0+255),f,b
 39198  005478  D71B               	goto	i2l16186
 39199  00547A                     i2l16266:
 39200                           
 39201                           ; BSR set to: 0
 39202                           ;IR.c: 268: }
 39203                           ;IR.c: 270: return 0;
 39204  00547A  0E00               	movlw	0
 39205  00547C  0012               	return	
 39206                           
 39207                           ; BSR set to: 0
 39208                           
 39209                           ; BSR set to: 0
 39210  00547E  0012               	return		;funcret
 39211  005480                     __end_of_IRrawToNEC:
 39212                           	opt stack 0
 39213                           pclatu	equ	0xFFB
 39214                           pclath	equ	0xFFA
 39215                           tblptru	equ	0xFF8
 39216                           tblptrh	equ	0xFF7
 39217                           tblptrl	equ	0xFF6
 39218                           tablat	equ	0xFF5
 39219                           prodh	equ	0xFF4
 39220                           prodl	equ	0xFF3
 39221                           intcon	equ	0xFF2
 39222                           intcon2	equ	0xFF1
 39223                           indf0	equ	0xFEF
 39224                           postinc0	equ	0xFEE
 39225                           plusw0	equ	0xFEB
 39226                           fsr0h	equ	0xFEA
 39227                           fsr0l	equ	0xFE9
 39228                           wreg	equ	0xFE8
 39229                           indf1	equ	0xFE7
 39230                           postdec1	equ	0xFE5
 39231                           fsr1h	equ	0xFE2
 39232                           fsr1l	equ	0xFE1
 39233                           bsr	equ	0xFE0
 39234                           indf2	equ	0xFDF
 39235                           postinc2	equ	0xFDE
 39236                           postdec2	equ	0xFDD
 39237                           plusw2	equ	0xFDB
 39238                           fsr2h	equ	0xFDA
 39239                           fsr2l	equ	0xFD9
 39240                           status	equ	0xFD8
 39241                           pclatu	equ	0xFFB
 39242                           pclath	equ	0xFFA
 39243                           tblptru	equ	0xFF8
 39244                           tblptrh	equ	0xFF7
 39245                           tblptrl	equ	0xFF6
 39246                           tablat	equ	0xFF5
 39247                           prodh	equ	0xFF4
 39248                           prodl	equ	0xFF3
 39249                           intcon	equ	0xFF2
 39250                           intcon2	equ	0xFF1
 39251                           indf0	equ	0xFEF
 39252                           postinc0	equ	0xFEE
 39253                           plusw0	equ	0xFEB
 39254                           fsr0h	equ	0xFEA
 39255                           fsr0l	equ	0xFE9
 39256                           wreg	equ	0xFE8
 39257                           indf1	equ	0xFE7
 39258                           postdec1	equ	0xFE5
 39259                           fsr1h	equ	0xFE2
 39260                           fsr1l	equ	0xFE1
 39261                           bsr	equ	0xFE0
 39262                           indf2	equ	0xFDF
 39263                           postinc2	equ	0xFDE
 39264                           postdec2	equ	0xFDD
 39265                           plusw2	equ	0xFDB
 39266                           fsr2h	equ	0xFDA
 39267                           fsr2l	equ	0xFD9
 39268                           status	equ	0xFD8
 39269                           
 39270                           	psect	rparam
 39271  0000                     pclatu	equ	0xFFB
 39272                           pclath	equ	0xFFA
 39273                           tblptru	equ	0xFF8
 39274                           tblptrh	equ	0xFF7
 39275                           tblptrl	equ	0xFF6
 39276                           tablat	equ	0xFF5
 39277                           prodh	equ	0xFF4
 39278                           prodl	equ	0xFF3
 39279                           intcon	equ	0xFF2
 39280                           intcon2	equ	0xFF1
 39281                           indf0	equ	0xFEF
 39282                           postinc0	equ	0xFEE
 39283                           plusw0	equ	0xFEB
 39284                           fsr0h	equ	0xFEA
 39285                           fsr0l	equ	0xFE9
 39286                           wreg	equ	0xFE8
 39287                           indf1	equ	0xFE7
 39288                           postdec1	equ	0xFE5
 39289                           fsr1h	equ	0xFE2
 39290                           fsr1l	equ	0xFE1
 39291                           bsr	equ	0xFE0
 39292                           indf2	equ	0xFDF
 39293                           postinc2	equ	0xFDE
 39294                           postdec2	equ	0xFDD
 39295                           plusw2	equ	0xFDB
 39296                           fsr2h	equ	0xFDA
 39297                           fsr2l	equ	0xFD9
 39298                           status	equ	0xFD8


Data Sizes:
    Strings     3115
    Constant    627
    Data        64
    BSS         904
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      68
    BANK0           160    123     135
    BANK1           256    255     256
    BANK2           256    152     230
    BANK3           256    255     255
    BANK4           256      0     136
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0     200
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_148(CODE[7]), sprintf@c(BANK1[1]), PCBVersion(CODE[5]), FirmVersion(CODE[9]), 
		 -> GetNumber@temp(BANK0[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_103(CODE[19]), STR_101(CODE[15]), STR_87(CODE[29]), STR_86(CODE[16]), 
		 -> STR_85(CODE[21]), STR_83(CODE[20]), STR_75(CODE[44]), STR_74(CODE[54]), 
		 -> STR_73(CODE[54]), STR_72(CODE[63]), STR_50(CODE[44]), STR_49(CODE[46]), 
		 -> STR_47(CODE[44]), STR_46(CODE[21]), STR_33(CODE[17]), STR_32(CODE[17]), 
		 -> STR_31(CODE[20]), STR_29(CODE[23]), STR_28(CODE[21]), STR_27(CODE[21]), 
		 -> STR_17(CODE[28]), STR_4(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 100
		 -> UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@buf(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    SendRF_wait@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(CODE[16]), Conf2_ChannelH_3_ON(CODE[16]), Conf2_ChannelH_2_OFF(CODE[16]), Conf2_ChannelH_2_ON(CODE[16]), 
		 -> Conf2_ChannelH_1_OFF(CODE[16]), Conf2_ChannelH_1_ON(CODE[16]), Conf2_ChannelD_OFF(CODE[16]), Conf2_ChannelD_ON(CODE[16]), 
		 -> Conf2_ChannelB_OFF(CODE[16]), Conf2_ChannelB_ON(CODE[16]), Conf1_ChannelF(CODE[12]), Conf1_ChannelE(CODE[12]), 
		 -> Conf1_ChannelD(CODE[12]), 

    SendRF@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(CODE[16]), Conf2_ChannelH_3_ON(CODE[16]), Conf2_ChannelH_2_OFF(CODE[16]), Conf2_ChannelH_2_ON(CODE[16]), 
		 -> Conf2_ChannelH_1_OFF(CODE[16]), Conf2_ChannelH_1_ON(CODE[16]), Conf2_ChannelD_OFF(CODE[16]), Conf2_ChannelD_ON(CODE[16]), 
		 -> Conf2_ChannelB_OFF(CODE[16]), Conf2_ChannelB_ON(CODE[16]), Conf1_ChannelF(CODE[12]), Conf1_ChannelE(CODE[12]), 
		 -> Conf1_ChannelD(CODE[12]), 

    UseBluetooth@String	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    DecodeNEC@address	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecAddress(BANK2[1]), IRaddress(BANK1[1]), 

    DecodeNEC@command	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecCommand(BANK2[1]), IRcommand(COMRAM[1]), 

    UseIRCode@Code	PTR unsigned char  size(2) Largest target is 1
		 -> IR_New_Code(BANK0[1]), 

    IRrawToNEC@NEC	PTR unsigned long  size(2) Largest target is 4
		 -> IR_NEC(BANK0[4]), 

    IRrawToNEC@Raw	PTR unsigned int  size(2) Largest target is 200
		 -> IRRawCode(BANK7[200]), 

    GetEEPROM@Temp	PTR struct EEdata size(2) Largest target is 136
		 -> SyncEEPROMToGlobal@Temp(BANK1[136]), 

    InternalADC_Read@ADCcounts	PTR unsigned int  size(2) Largest target is 2
		 -> ReadVoltage@temp(BANK0[2]), 

    UARTcommandMenu@Desc	PTR unsigned char  size(2) Largest target is 49
		 -> STR_144(CODE[32]), STR_143(CODE[31]), STR_142(CODE[32]), STR_141(CODE[31]), 
		 -> STR_140(CODE[32]), STR_139(CODE[31]), STR_138(CODE[20]), STR_137(CODE[19]), 
		 -> STR_136(CODE[23]), STR_135(CODE[22]), STR_134(CODE[19]), STR_133(CODE[19]), 
		 -> STR_132(CODE[19]), STR_130(CODE[40]), STR_128(CODE[46]), STR_126(CODE[46]), 
		 -> STR_124(CODE[46]), STR_122(CODE[46]), STR_120(CODE[46]), STR_118(CODE[46]), 
		 -> STR_116(CODE[49]), STR_114(CODE[49]), STR_112(CODE[49]), STR_110(CODE[49]), 
		 -> STR_108(CODE[49]), STR_106(CODE[49]), STR_104(CODE[24]), STR_102(CODE[25]), 
		 -> STR_99(CODE[28]), STR_96(CODE[26]), STR_94(CODE[32]), STR_92(CODE[10]), 

    UARTcommandMenu@Command	PTR unsigned char  size(2) Largest target is 100
		 -> STR_129(CODE[5]), STR_127(CODE[13]), STR_125(CODE[13]), STR_123(CODE[13]), 
		 -> STR_121(CODE[13]), STR_119(CODE[13]), STR_117(CODE[13]), STR_115(CODE[11]), 
		 -> STR_113(CODE[11]), STR_111(CODE[11]), STR_109(CODE[11]), STR_107(CODE[11]), 
		 -> STR_105(CODE[11]), STR_98(CODE[8]), STR_95(CODE[8]), STR_93(CODE[6]), 
		 -> STR_91(CODE[4]), Conf2_ChannelH_3_OFF_STR(CODE[21]), Conf2_ChannelH_3_ON_STR(CODE[20]), Conf2_ChannelH_2_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_2_ON_STR(CODE[20]), Conf2_ChannelH_1_OFF_STR(CODE[21]), Conf2_ChannelH_1_ON_STR(CODE[20]), Conf2_ChannelD_OFF_STR(CODE[19]), 
		 -> Conf2_ChannelD_ON_STR(CODE[18]), Conf2_ChannelB_OFF_STR(CODE[19]), Conf2_ChannelB_ON_STR(CODE[18]), Conf1_ChannelF_STR(CODE[15]), 
		 -> Conf1_ChannelE_STR(CODE[15]), Conf1_ChannelD_STR(CODE[15]), UseBluetooth@buf(BANK2[100]), 

    UARTstringCRLN@data	PTR unsigned char  size(2) Largest target is 100
		 -> STR_147(CODE[36]), STR_145(CODE[27]), STR_131(CODE[13]), STR_100(CODE[13]), 
		 -> STR_97(CODE[21]), STR_90(CODE[17]), STR_81(CODE[29]), STR_80(CODE[18]), 
		 -> STR_79(CODE[29]), STR_76(CODE[44]), STR_71(CODE[46]), STR_70(CODE[42]), 
		 -> STR_69(CODE[50]), STR_68(CODE[50]), STR_66(CODE[31]), STR_65(CODE[31]), 
		 -> STR_64(CODE[37]), STR_63(CODE[37]), STR_62(CODE[37]), STR_58(CODE[18]), 
		 -> STR_57(CODE[14]), STR_56(CODE[9]), STR_55(CODE[20]), STR_54(CODE[16]), 
		 -> STR_53(CODE[7]), STR_52(CODE[35]), STR_51(CODE[37]), STR_48(CODE[47]), 
		 -> STR_43(CODE[17]), STR_42(CODE[9]), STR_41(CODE[18]), STR_40(CODE[9]), 
		 -> STR_39(CODE[22]), STR_38(CODE[11]), STR_37(CODE[20]), STR_36(CODE[7]), 
		 -> STR_35(CODE[31]), STR_34(CODE[33]), STR_30(CODE[32]), STR_26(CODE[31]), 
		 -> STR_25(CODE[31]), STR_23(CODE[29]), STR_21(CODE[29]), SYNTAX_ERR(CODE[14]), 
		 -> UseBluetooth@buf(BANK2[100]), STR_1(CODE[16]), 

    UARTstring@data	PTR unsigned char  size(2) Largest target is 255
		 -> STR_146(CODE[28]), STR_89(CODE[13]), STR_78(CODE[32]), STR_67(CODE[14]), 
		 -> SYNTAX_ERR(CODE[14]), STR_18(CODE[5]), STR_16(CODE[5]), STR_14(CODE[6]), 
		 -> STR_12(CODE[6]), STR_10(CODE[9]), STR_8(CODE[21]), STR_6(CODE[10]), 
		 -> BluetoothInitialSetup@buf(BANK1[50]), STR_2(CODE[4]), CRLN(CODE[3]), ReceivedString(BANK6[255]), 

    GetStringAfterComma@result	PTR unsigned char  size(2) Largest target is 10
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    GetStringAfterComma@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    StringAddEqual@Input	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    GetNumber@result	PTR unsigned long  size(2) Largest target is 4
		 -> UseBluetooth@temp(BANK2[4]), UseBluetooth@EnteredNEC(BANK2[4]), 

    GetNumber@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    lowercaseChar@Input	PTR unsigned char  size(2) Largest target is 1
		 -> GetNumber@tempThis(BANK0[1]), StringContainsCaseInsensitive@tempThat(BANK0[1]), StringContainsCaseInsensitive@tempThis(BANK0[1]), StringMatchCaseInsensitive@tempThat(BANK0[1]), 
		 -> StringMatchCaseInsensitive@tempThis(BANK0[1]), 

    lowercaseString@Input	PTR unsigned char  size(2) Largest target is 10
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    StringContainsCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_61(CODE[7]), STR_60(CODE[9]), STR_59(CODE[7]), STR_45(CODE[4]), 
		 -> STR_44(CODE[13]), STR_24(CODE[4]), STR_22(CODE[6]), STR_20(CODE[6]), 
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    StringContainsCaseInsensitive@This	PTR unsigned char  size(2) Largest target is 255
		 -> Conf2_Channels(CODE[4]), Conf1_Channels(CODE[4]), main@BluetoothString(BANK3[255]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_19(CODE[4]), STR_15(CODE[4]), STR_13(CODE[4]), STR_11(CODE[4]), 
		 -> STR_9(CODE[4]), STR_7(CODE[4]), STR_5(CODE[4]), BluetoothInitialSetup@buf(BANK1[50]), 
		 -> STR_3(CODE[4]), 

    StringContains@This	PTR unsigned char  size(2) Largest target is 255
		 -> CommandString(BANK5[255]), 

    StringMatchCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_84(CODE[8]), STR_82(CODE[8]), STR_77(CODE[6]), Conf2_ChannelH_3_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_3_ON_STR(CODE[20]), Conf2_ChannelH_2_OFF_STR(CODE[21]), Conf2_ChannelH_2_ON_STR(CODE[20]), Conf2_ChannelH_1_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_1_ON_STR(CODE[20]), Conf2_ChannelD_OFF_STR(CODE[19]), Conf2_ChannelD_ON_STR(CODE[18]), Conf2_ChannelB_OFF_STR(CODE[19]), 
		 -> Conf2_ChannelB_ON_STR(CODE[18]), Conf1_ChannelF_STR(CODE[15]), Conf1_ChannelE_STR(CODE[15]), Conf1_ChannelD_STR(CODE[15]), 

    StringMatchCaseInsensitive@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    StringMatch@That	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_88(CODE[4]), 

    StringMatch@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    BufferCopy@from	PTR unsigned char  size(2) Largest target is 255
		 -> StringAddEqual@temp(BANK1[255]), ReceivedString(BANK6[255]), 

    BufferCopy@to	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    cleanBuffer16bit@data	PTR unsigned int  size(2) Largest target is 200
		 -> IRRawCode(BANK7[200]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 255
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@RFchannel(BANK1[10]), BluetoothInitialSetup@buf(BANK1[50]), 
		 -> CommandString(BANK5[255]), StringAddEqual@temp(BANK1[255]), ReceivedString(BANK6[255]), main@BluetoothString(BANK3[255]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_cleanBuffer16bit

Critical Paths under _low_isr in COMRAM

    _low_isr->i1_cleanBuffer
    i1_UARTstringCRLN->i1_UARTstring
    i1_UARTstring->i1_UARTchar
    _EraseScreen->i1_UARTchar

Critical Paths under _main in BANK0

    _SendRF_Channel->_SendRF_wait
    _ReadCodeButtons->_delayUS
    _UseBluetooth->_sprintf
    _WaitForIRsignal->_delayUS
    _UARTstringCRLN->_UARTstring
    _UARTcommandMenu->_UARTstring
    _StringMatchCaseInsensitive->_lowercaseChar
    _StringContainsCaseInsensitive->_lowercaseChar
    _StringAddEqual->_BufferCopy
    _BufferCopy->_cleanBuffer
    _SendRF_wait->_SendRF
    _SendNEC_wait->_SendNEC_bytes
    _SendNEC_bytes->_Reverse_4Byte
    _ReadVoltage->___ftmul
    ___lwtoft->___ftpack
    ___ftdiv->___lwtoft
    _InternalADC_Read->_delayUS
    _GetNumber->___lmul
    _EncodeNEC->_Reverse_Byte
    _DecodeNEC->_Reverse_Byte
    _SyncEEPROMToGlobal->_GetEEPROM
    _GetEEPROM->_GetMemoryLong
    _InitUART->_Round
    _Round->___fttol
    ___altoft->___ftpack
    _ClearUSART->_ReadUSART
    _InitIR->_cleanBuffer16bit
    _BluetoothInitialSetup->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftadd
    ___ftsub->___ftadd
    ___ftadd->_fround
    _EnterCommandMode->_delayUS
    _UARTstring->_UARTchar
    _ResetBlue->_delayUS
    _SyncGlobalToEEPROM->_SetEEPROM
    _SetEEPROM->_SetMemoryLong
    _SetMemoryLong->_GetMemoryLong
    _GetMemoryLong->_ReadEEPROM_1Byte
    _SetMemoryChar->_GetMemoryChar
    _GetMemoryChar->_ReadEEPROM_1Byte

Critical Paths under _high_isr in BANK0

    _high_isr->_IRrawToNEC

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _UseBluetooth->_StringAddEqual
    _BluetoothInitialSetup->_sprintf
    _SyncGlobalToEEPROM->_SetEEPROM

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_UseBluetooth

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               260   260      0  400427
                                            147 BANK2      5     5      0
                                              0 BANK3    255   255      0
                         _BufferCopy
                         _ClearUSART
                _ConfigureOscillator
                            _InitApp
                        _Init_System
                          _ReadIRpin
                        _ReadVoltage
                           _UARTchar
                         _UARTstring
                       _UseBluetooth
                          _UseIRCode
                            ___ftadd
                             ___ftge
                            ___ftsub
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _UseIRCode                                           12     6      6   23412
                                             90 BANK0     12     6      6
                          _DecodeNEC
                         _LEDTimerON
                    _ReadCodeButtons
                          _ReadIRpin
                     _ReadPushButton
                     _SendRF_Channel
                 _SyncGlobalToEEPROM
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SendRF_Channel                                       1     1      0    8911
                                             38 BANK0      1     1      0
                        _SendRF_wait
 ---------------------------------------------------------------------------------
 (2) _ReadPushButton                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadCodeButtons                                      1     1      0    2809
                                             34 BANK0      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _UseBluetooth                                       147   144      3  182656
                                              0 BANK2    147   144      3
                         _ClearUSART
                          _DecodeNEC
                          _EncodeNEC
                          _GetNumber
                _GetStringAfterComma
                        _ReadVoltage
                       _SendNEC_wait
                        _SendRF_wait
                     _StringAddEqual
      _StringContainsCaseInsensitive
                        _StringMatch
         _StringMatchCaseInsensitive
                 _SyncGlobalToEEPROM
                           _UARTchar
                    _UARTcommandMenu
                         _UARTstring
                     _UARTstringCRLN
                    _WaitForIRsignal
                        _cleanBuffer
                            _delayUS
                    _lowercaseString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lowercaseString                                      3     1      2     204
                                             25 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _WaitForIRsignal                                      1     1      0   18786
                                             34 BANK0      1     1      0
                         _LEDTimerON
                           _UARTchar
                         _UARTstring
                     _UARTstringCRLN
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _UARTstringCRLN                                       2     0      2   10355
                                             28 BANK0      2     0      2
                           _UARTchar
                         _UARTstring
 ---------------------------------------------------------------------------------
 (2) _UARTcommandMenu                                     11     7      4   10828
                                             28 BANK0     11     7      4
                           _UARTchar
                         _UARTstring
 ---------------------------------------------------------------------------------
 (2) _StringMatchCaseInsensitive                           6     2      4    3257
                                             28 BANK0      6     2      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _StringMatch                                          5     1      4     315
                                             25 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringContainsCaseInsensitive                        7     3      4    2370
                                             28 BANK0      7     3      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _StringAddEqual                                     263   261      2   10768
                                             40 BANK0      8     6      2
                                              0 BANK1    255   255      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _BufferCopy                                           7     1      6    5168
                                             33 BANK0      7     1      6
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _SendRF_wait                                          5     0      5    8880
                                             33 BANK0      5     0      5
                         _LEDTimerON
                          _ReadIRpin
                             _SendRF
 ---------------------------------------------------------------------------------
 (4) _SendRF                                               8     3      5     748
                                             25 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _LEDTimerON                                           0     0      0       0
                        _ResetTimer1
 ---------------------------------------------------------------------------------
 (5) _ResetTimer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SendNEC_wait                                         6     1      5    4838
                                             46 BANK0      6     1      5
                   _CheckReceivingIR
                          _ReadIRpin
                      _SendNEC_bytes
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _SendNEC_bytes                                        5     0      5    1477
                                             41 BANK0      5     0      5
                      _Reverse_4Byte
 ---------------------------------------------------------------------------------
 (4) _Reverse_4Byte                                       16    12      4    1199
                                             25 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (3) _CheckReceivingIR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadVoltage                                          8     5      3   17366
                                             66 BANK0      8     5      3
                   _InternalADC_Read
                  _VoltageDividerOFF
                   _VoltageDividerON
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2692
                                             33 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3272
                                             36 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) _VoltageDividerON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _VoltageDividerOFF                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InternalADC_Read                                     6     4      2    3032
                                             34 BANK0      6     4      2
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _GetStringAfterComma                                  8     3      5     726
                                             25 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _GetNumber                                           20    15      5    3766
                                             37 BANK0     20    15      5
                           _IsLetter
                             ___lmul
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (3) _lowercaseChar                                        3     1      2     478
                                             25 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     404
                                             25 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _IsLetter                                             1     1      0      62
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EncodeNEC                                           41    37      4     720
                                             29 BANK0     41    37      4
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (2) _DecodeNEC                                           15     7      8    1614
                                             29 BANK0     15     7      8
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (3) _Reverse_Byte                                         4     4      0     306
                                             25 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0  147612
                  _EEPROMinitialized
                            _InitADC
                      _InitBluetooth
                             _InitIR
                         _InitTimers
                           _InitUART
                   _SetEEPROMdefault
                 _SyncEEPROMToGlobal
                 _SyncGlobalToEEPROM
                           _UARTchar
                         _UARTstring
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _SyncEEPROMToGlobal                                 143   143      0    3407
                                             70 BANK0      4     4      0
                                              0 BANK1    139   139      0
                          _GetEEPROM
 ---------------------------------------------------------------------------------
 (3) _GetEEPROM                                            8     6      2    2507
                                             62 BANK0      8     6      2
                      _GetMemoryChar
                      _GetMemoryLong
 ---------------------------------------------------------------------------------
 (2) _SetEEPROMdefault                                     5     5      0    6941
                                             90 BANK0      5     5      0
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (2) _InitUART                                            18    14      4   13617
                                            110 BANK0      8     4      4
                                              0 BANK1     10    10      0
                         _ClearUSART
                   _Local_CloseUSART
                          _OpenUSART
                              _Round
                            ___fttol
                            ___lldiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) _Round                                                7     4      3    8302
                                            103 BANK0      7     4      3
                           ___altoft
                            ___ftadd
                            ___fttol
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    2865
                                             33 BANK0     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     387
                                             25 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _Local_CloseUSART                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearUSART                                           0     0      0      34
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (3) _ReadUSART                                            1     1      0      34
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitTimers                                           0     0      0       0
                         _InitTimer1
                         _InitTimer2
                         _InitTimer3
 ---------------------------------------------------------------------------------
 (3) _InitTimer3                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitIR                                               0     0      0     371
                         _InitTimer0
                          _ReadIRpin
                        _ResetTimer0
                   _cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (3) _cleanBuffer16bit                                     8     4      4     371
                                             25 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _ResetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ReadIRpin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitBluetooth                                        0     0      0  106981
                _BluetoothConfigured
              _BluetoothInitialSetup
                          _ResetBlue
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _BluetoothInitialSetup                               61    61      0   93551
                                             30 BANK1     61    61      0
                   _EnterCommandMode
                     _StringContains
                         _UARTstring
                        _cleanBuffer
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             51    37     14   61903
                                            103 BANK0     20     6     14
                                              0 BANK1     30    30      0
                        _ReadVoltage (ARG)
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3   12847
                                             66 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             25 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3   12568
                                             66 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2850
                                             39 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    5496
                                             51 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             25 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             31 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     608
                                             25 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     827
                                             25 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2840
                                             33 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     848
                                             38 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1011
                                             25 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     756
                                             88 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lltoft (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    5057
                                             88 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4539
                                             76 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2584
                                             25 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     142
                                             25 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6    1276
                                             25 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (4) _EnterCommandMode                                     1     1      0   16934
                                             34 BANK0      1     1      0
                      _BlueConnected
                          _ResetBlue
                     _StringContains
                         _UARTstring
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _cleanBuffer                                          8     4      4    4221
                                             25 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _UARTstring                                           2     0      2    5566
                                             26 BANK0      2     0      2
                           _UARTchar
 ---------------------------------------------------------------------------------
 (5) _UARTchar                                             1     1      0      62
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _StringContains                                       6     2      4    1584
                                             25 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _ResetBlue                                            0     0      0    2763
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _delayUS                                              9     5      4    2763
                                             25 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (5) _BlueConnected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BluetoothConfigured                                  0     0      0    6446
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (2) _SyncGlobalToEEPROM                                   0     0      0    6446
                          _SetEEPROM
 ---------------------------------------------------------------------------------
 (3) _SetEEPROM                                          151    11    140    6446
                                             79 BANK0     11    11      0
                                              0 BANK1    140     0    140
                      _SetMemoryChar
                      _SetMemoryLong
 ---------------------------------------------------------------------------------
 (4) _SetMemoryLong                                       17    12      5    2845
                                             62 BANK0     17    12      5
                      _GetMemoryLong
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _GetMemoryLong                                       33    29      4     969
                                             29 BANK0     33    29      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (4) _SetMemoryChar                                        3     2      1    2445
                                             35 BANK0      3     2      1
                      _GetMemoryChar
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _WriteEEPROM_1Byte                                    5     2      3    1242
                                             25 BANK0      5     2      3
                      _EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (6) _EEPROM_UNLOCK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _GetMemoryChar                                        6     2      4     737
                                             29 BANK0      6     2      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (6) _ReadEEPROM_1Byte                                     4     2      2     672
                                             25 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
                           _ResetADC
 ---------------------------------------------------------------------------------
 (3) _ResetADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EEPROMinitialized                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                             18    18      0    1023
                                              8 COMRAM    18    18      0
                        _EraseScreen
                        _IsCharacter
                    i1_BlueConnected
                        i1_ReadUSART
                         i1_UARTchar
                       i1_UARTstring
                   i1_UARTstringCRLN
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (10) i1_cleanBuffer                                       8     4      4     143
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (10) i1_UARTstringCRLN                                    2     0      2     308
                                              3 COMRAM     2     0      2
                         i1_UARTchar
                       i1_UARTstring
 ---------------------------------------------------------------------------------
 (11) i1_UARTstring                                        2     0      2     193
                                              1 COMRAM     2     0      2
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (10) i1_ReadUSART                                         1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i1_BlueConnected                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _IsCharacter                                         1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EraseScreen                                         2     2      0      90
                                              1 COMRAM     2     2      0
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (12) i1_UARTchar                                          1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _high_isr                                           21    21      0    2684
                                             34 COMRAM     3     3      0
                                              7 BANK0     18    18      0
                         _IRrawToNEC
                        _ResetTimer3
                          _SetTimer0
                        i2_ReadIRpin
                      i2_ResetTimer0
                 i2_cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (14) i2_cleanBuffer16bit                                  8     4      4     143
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (14) i2_ResetTimer0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_ReadIRpin                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _SetTimer0                                           2     0      2     108
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _ResetTimer3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _IRrawToNEC                                         14     9      5    2207
                                             26 COMRAM     7     2      5
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BufferCopy
     _cleanBuffer
   _ClearUSART
     _ReadUSART
   _ConfigureOscillator
   _InitApp
   _Init_System
     _EEPROMinitialized
     _InitADC
       _ResetADC
     _InitBluetooth
       _BluetoothConfigured
         _SyncGlobalToEEPROM
           _SetEEPROM
             _SetMemoryChar
               _GetMemoryChar
                 _ReadEEPROM_1Byte
               _WriteEEPROM_1Byte
                 _EEPROM_UNLOCK
             _SetMemoryLong
               _GetMemoryLong
                 _ReadEEPROM_1Byte
               _WriteEEPROM_1Byte
                 _EEPROM_UNLOCK
       _BluetoothInitialSetup
         _EnterCommandMode
           _BlueConnected
           _ResetBlue
             _delayUS
           _StringContains
           _UARTstring
             _UARTchar
           _cleanBuffer
           _delayUS
         _StringContains
         _UARTstring
           _UARTchar
         _cleanBuffer
         _delayUS
         _sprintf
           _ReadVoltage (ARG)
             _InternalADC_Read
               _delayUS
             _VoltageDividerOFF
             _VoltageDividerON
             ___ftdiv
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lwtoft
               ___ftpack
             _delayUS
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftsub (ARG)
             ___ftadd
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_ (ARG)
           __tdiv_to_l_ (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _ResetBlue
         _delayUS
       _cleanBuffer
     _InitIR
       _InitTimer0
       _ReadIRpin
       _ResetTimer0
       _cleanBuffer16bit
     _InitTimers
       _InitTimer1
       _InitTimer2
       _InitTimer3
     _InitUART
       _ClearUSART
         _ReadUSART
       _Local_CloseUSART
       _OpenUSART
       _Round
         ___altoft
           ___ftpack
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___fttol
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___lltoft
         ___ftpack
     _SetEEPROMdefault
       _SyncGlobalToEEPROM
         _SetEEPROM
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
     _SyncEEPROMToGlobal
       _GetEEPROM
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _UARTchar
     _UARTstring
       _UARTchar
     _cleanBuffer
   _ReadIRpin
   _ReadVoltage
     _InternalADC_Read
       _delayUS
     _VoltageDividerOFF
     _VoltageDividerON
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lwtoft
       ___ftpack
     _delayUS
   _UARTchar
   _UARTstring
     _UARTchar
   _UseBluetooth
     _ClearUSART
       _ReadUSART
     _DecodeNEC
       _Reverse_Byte
     _EncodeNEC
       _Reverse_Byte
     _GetNumber
       _IsLetter
       ___lmul
       _lowercaseChar
     _GetStringAfterComma
     _ReadVoltage
       _InternalADC_Read
         _delayUS
       _VoltageDividerOFF
       _VoltageDividerON
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
       _delayUS
     _SendNEC_wait
       _CheckReceivingIR
       _ReadIRpin
       _SendNEC_bytes
         _Reverse_4Byte
       _delayUS
     _SendRF_wait
       _LEDTimerON
         _ResetTimer1
       _ReadIRpin
       _SendRF
     _StringAddEqual
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _StringContainsCaseInsensitive
       _lowercaseChar
     _StringMatch
     _StringMatchCaseInsensitive
       _lowercaseChar
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _UARTchar
     _UARTcommandMenu
       _UARTchar
       _UARTstring
         _UARTchar
     _UARTstring
       _UARTchar
     _UARTstringCRLN
       _UARTchar
       _UARTstring
         _UARTchar
     _WaitForIRsignal
       _LEDTimerON
         _ResetTimer1
       _UARTchar
       _UARTstring
         _UARTchar
       _UARTstringCRLN
         _UARTchar
         _UARTstring
           _UARTchar
       _delayUS
     _cleanBuffer
     _delayUS
     _lowercaseString
     _sprintf
       _ReadVoltage (ARG)
         _InternalADC_Read
           _delayUS
         _VoltageDividerOFF
         _VoltageDividerON
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft
           ___ftpack
         _delayUS
       ___awdiv (ARG)
         ___awmod (ARG)
       ___ftadd (ARG)
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _UseIRCode
     _DecodeNEC
       _Reverse_Byte
     _LEDTimerON
       _ResetTimer1
     _ReadCodeButtons
       _delayUS
     _ReadIRpin
     _ReadPushButton
     _SendRF_Channel
       _SendRF_wait
         _LEDTimerON
           _ResetTimer1
         _ReadIRpin
         _SendRF
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _delayUS
   ___ftadd
     ___ftpack
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftge
   ___ftsub
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lltoft (ARG)
       ___ftpack
   _cleanBuffer
   _delayUS

 _low_isr (ROOT)
   _EraseScreen
     i1_UARTchar
   _IsCharacter
   i1_BlueConnected
   i1_ReadUSART
   i1_UARTchar
   i1_UARTstring
     i1_UARTchar
   i1_UARTstringCRLN
     i1_UARTchar
     i1_UARTstring
       i1_UARTchar
   i1_cleanBuffer

 _high_isr (ROOT)
   _IRrawToNEC
   _ResetTimer3
   _SetTimer0
   i2_ReadIRpin
   i2_ResetTimer0
   i2_cleanBuffer16bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      C8      19       78.1%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      88      13       53.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100     FF      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     98      E6       9       89.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FF     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7B      87       5       84.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     25      44       1       71.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     6FE      32        0.0%
DATA                 0      0     6FE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Apr 10 12:40:26 2015

                       BufferCopy@shift 0086                      UARTstringCRLN@data 007C  
                __end_of_Conf1_ChannelD F3A3                  __end_of_Conf1_ChannelE F3AF  
                __end_of_Conf1_ChannelF F3BB                   UseBluetooth@StringPos 0202  
                          ___altoft@exp 0089                  __end_of_Conf1_Channels F3CD  
               __size_of_StringContains 00B2                           ??_EraseScreen 0002  
                           _IRcodePlace 0041                           ___altoft@sign 008A  
                  ?_BluetoothConfigured 0001                                      _SN 003C  
                          ___awdiv@sign 0084                     ?_SyncGlobalToEEPROM 0001  
                                    bsr 000FE0                  __end_of_Conf2_Channels F3D1  
                   ___wmul@multiplicand 0089                            __CFG_CP0$OFF 000000  
                          __CFG_CP1$OFF 000000                            __CFG_CP2$OFF 000000  
                          __CFG_CP3$OFF 000000                            ___ftadd@exp1 00B7  
                          ___ftadd@exp2 00B6                             ?_LEDTimerON 0001  
                    lowercaseChar@Input 0079                            ___ftadd@sign 00B5  
                            _SYNTAX_ERR F389                                     l134 55B4  
                                   l136 5640                                     l139 56A0  
                                   l640 89CE                                     l641 89D0  
 StringContainsCaseInsensitive@tempThat 0082                                     l298 8EB4  
                                   l634 899A                                     l299 8EA4  
                                   l661 93A6                                     l741 84B4  
                                   l646 9374                                     l638 89BE  
                                   l479 630C                                     l914 8BD0  
                                   l922 93EE                                     l928 8C40  
 StringContainsCaseInsensitive@tempThis 0081                                     l961 6616  
                                   l953 6534                                     l958 6528  
                                   l968 6604                                     l994 66FE  
                          __CFG_CPB$OFF 000000                                     _PR2 000FCB  
                          __CFG_CPD$OFF 000000              StringAddEqual@NullPosition 008C  
                  lowercaseString@Input 0079                              _IRrawToNEC 5082  
                         _IRbitPosition 0040                     __end_of_IsCharacter 93CA  
                          __CFG_BORV$27 000000                            ___awmod@sign 007E  
                                   prod 000FF3                                     wreg 000FE8  
                            _IRsendCode 02E2                              _IRsendFlag 0032  
                         _InitBluetooth 8E3A                            __CFG_LVP$OFF 000000  
                          ___ftdiv@cntr 008D                            ___ftdiv@sign 0092  
                                  l2112 7B68                                    l2235 2C3E  
                                  l2274 2A82                                    l2283 2CAE  
                                  l1820 4D98                                    l1644 8F30  
                                  l2704 5CB0                                    l2713 5CDA  
                                  l2617 6B1E                                    l2731 68BE  
                                  l1915 1228                                    l2660 76C0  
                                  l2732 6902                                    l2724 70B2  
                                  l2818 7F50                                    l2738 698A  
                                  l1882 099A                                    l2763 925C  
                                  l1875 0716                                    l2828 8436  
                                  l2693 5BA2                                    l1877 0772  
                                  l2695 5BCC                                    l2689 5B68  
                                  STR_1 FE77                                    STR_2 FFE7  
                                  STR_3 FFF3                                    STR_4 FC23  
                                  STR_5 FFFB                                    STR_6 FF74  
                                  STR_7 FFFB                                    STR_8 FCAD  
                                  STR_9 FFFB                    ??_SyncGlobalToEEPROM 00BA  
                                  _CRLN F3D1                                    _LATA 000F89  
                                  _LATB 000F8A                                    _LATC 000F8B  
                                  _TMR2 000FCC                                    _WPUB 000F7C  
                        ?i2_ResetTimer0 0001                                    _Sent 00E6  
            WriteEEPROM_1Byte@GIEstatus 007C                              _ClearUSART 949C  
             SetMemoryChar@AddressFirst 0083                                    _main 5480  
                          ___ftpack@arg 0079                            ___ftpack@exp 007C  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  indf0 000FEF                                    fsr0l 000FE9  
                                  fsr2h 000FDA                                    indf1 000FE7  
                            SetEEPROM@i 00B8                                    fsr1l 000FE1  
                                  indf2 000FDF                              SetEEPROM@j 00B9  
                            SetEEPROM@k 00B7                                    fsr2l 000FD9  
                            _RFsendCode 02CE                              _RFsendFlag 0036  
                                  pclat 000FFA                        i1_UARTstringCRLN 8C6C  
                           _RFcodePlace 0035                                    prodh 000FF4  
                   main@BluetoothString 0300                                    prodl 000FF3  
                                  start 01F2                           __CFG_IESO$OFF 000000  
                      Reverse_Byte@This 007C                            _sprintf$3801 0100  
                      Reverse_Byte@temp 007B                           __CFG_MCLRE$ON 000000  
                          ___ftmul@cntr 00A0                          UARTstring@data 007A  
                           ?i1_UARTchar 0001                            ___param_bank 000010  
                          ___ftmul@sign 00A1                         __end_of_InitADC 940E  
                       __end_of_InitApp 905E                      i2_cleanBuffer16bit 90A2  
 __end_of_StringContainsCaseInsensitive 75DA  __size_of_StringContainsCaseInsensitive 0126  
         _StringContainsCaseInsensitive 74B4                 __size_of_ReadPushButton 000E  
                 ??_BluetoothConfigured 00BA                            ___fttol@exp1 00C6  
                         ??_Init_System 00DB                            ___fttol@lval 00C2  
                  _Conf2_ChannelH_1_OFF F2FC                       IRrawToNEC@NECtemp 0060  
                  _Conf2_ChannelH_2_OFF F31C                    _Conf2_ChannelH_3_OFF F33C  
                                 l13004 47AA                                   l13110 6A94  
                                 l13102 6A3E                                   l13200 71EC  
                                 l13032 686A                                   l13016 928C  
                                 l13202 71FE                                   l13122 6AD0  
                                 l13114 6AA8                                   l13026 6830  
                                 l14010 848A                                   l14002 846E  
                                 l13140 8F5E                                   l13204 720C  
                                 l13220 7EDC                                   l13132 6B02  
                                 l14100 6C38                                   l13230 7F3C  
                                 l13222 7EE6                                   l13134 6B14  
                                 l13126 6AE4                                   l13062 693C  
                                 l13054 6914                                   l14006 8478  
                                 l13152 7D8A                                   l12520 760A  
                                 l13208 722A                                   l13240 83D2  
                                 l13072 696E                                   l14112 6CA8  
                                 l14104 6C42                                   l15000 7930  
                                 l12450 8BFC                                   l12530 76A0  
                                 l12522 761A                                   l12610 5B76  
                                 l13218 7ECA                                   l13242 83DC  
                                 l13082 69C2                                   l13074 6980  
                                 l13066 6950                                   l13404 7E7A  
                                 l13148 7D48                                   l12532 76B0  
                                 l12524 764C                                   l12516 75F4  
                                 l13172 7126                                   l13252 88EC  
                                 l13420 219A                                   l14220 4E68  
                                 l14116 6CAE                                   l14060 6B7C  
                                 l15012 7734                                   l15100 600E  
                                 l12446 8BE6                                   l13158 7DCE  
                                 l12622 5BC2                                   l13190 71BA  
                                 l13246 8422                                   l13238 83C0  
                                 l13254 88FE                                   l12702 6F12  
                                 l13422 21B0                                   l13414 217A  
                                 l14206 4DF2                                   l14070 6B96  
                                 l14134 8842                                   l14126 87F8  
                                 l15022 777A                                   l15006 7702  
                                 l15110 6084                                   l15102 6032  
                                 l14160 9394                                   l12544 76EA  
                                 l12528 766E                                   l12640 5C44  
                                 l12632 5C04                                   l12616 5BB0  
                                 l13088 69E8                                   l12712 6F56  
                                 l13600 290A                                   l13440 227A  
                                 l13432 21F8                                   l14064 6B86  
                                 l14304 89F4                                   l15032 77E8  
                                 l15016 7766                                   l16000 1A68  
                                 l15120 60DA                                   l15104 6056  
                                 l12810 8D8A                                   l12802 8D3C  
                                 l12538 76CC                                   l12650 5C90  
                                 l12642 5C54                                   l13194 71CE  
                                 l12706 6F2E                                   l13610 2954  
                                 l13602 2924                                   l13530 25DA  
                                 l13522 256A                                   l13506 24B6  
                                 l13442 2280                                   l13426 21BE  
                                 l14234 4EDE                                   l14066 6B8C  
                                 l14082 6BF0                                   l14146 946A  
                                 l15026 77CA                                   l15018 776E  
                                 l15210 86EC                                   l16010 1A8E  
                                 l15130 6130                                   l15114 60AC  
                                 l12564 9194                                   l12900 6566  
                                 l12652 5CA0                                   l12644 5C60  
                                 l12740 7C8A                                   l12716 6F72  
                                 l12708 6F36                                   l13700 2D0E  
                                 l13540 2668                                   l13460 231A  
                                 l13444 2288                                   l13428 21D6  
                                 l13268 94CE                                   l14500 74A8  
                                 l14092 6C22                                   l14420 6724  
                                 l14404 66F2                                   l14308 8A1C  
                                 l14324 700E                                   l15036 7806  
                                 l16020 1B0A                                   l15140 6186  
                                 l15124 6102                                   l12486 8C54  
                                 l12910 6580                                   l13278 9012  
                                 l12830 82BC                                   l12814 8DB8  
                                 l12806 8D5C                                   l12638 5C34  
                                 l12742 7C98                                   l12734 7C6C  
                                 l13710 2D5C                                   l13614 2980  
                                 l13550 26E4                                   l13534 260A  
                                 l13470 2360                                   l13454 22C2  
                                 l13446 228E                                   l14174 4CA6  
                                 l14094 6C28                                   l14078 6BEA  
                                 l14422 672A                                   l14414 6714  
                                 l14406 66F6                                   l15054 8386  
                                 l15046 8320                                   l14318 6FD4  
                                 l16102 1E2C                                   l15150 61DC  
                                 l15134 6158                                   l12592 7B40  
                                 l12912 6586                                   l12904 6570  
                                 l13376 7DDC                                   l12760 7CFA  
                                 l12752 7CD4                                   l12744 7CA2  
                                 l12728 7C54                                   l13704 2D4E  
                                 l13632 2A50                                   l13616 2988  
                                 l13624 2A24                                   l13608 2940  
                                 l13552 26F0                                   l13560 2776  
                                 l13536 2620                                   l13480 23D2  
                                 l13472 237A                                   l13464 2340  
                                 l13456 22CE                                   l14264 4FF6  
                                 l14248 4F54                                   l14184 4D22  
                                 l14504 74AE                                   l14432 67E0  
                                 l14416 671A                                   l14344 7070  
                                 l15160 8594                                   l14600 8A98  
                                 l15224 873A                                   l16104 2136  
                                 l15080 8F10                                   l15144 61AE  
                                 l15400 5EF2                                   l12906 6576  
                                 l12842 82DA                                   l12818 824C  
                                 l13386 7DF2                                   l12658 5D06  
                                 l13714 2D6A                                   l13650 2B0C  
                                 l13634 2A64                                   l13626 2A34  
                                 l13570 27F2                                   l13546 26B6  
                                 l13538 2652                                   l13466 234C  
                                 l13458 22D6                                   l13490 2406  
                                 l14098 6C32                                   l14426 6734  
                                 l14354 70C4                                   l14370 80B2  
                                 l15170 85D2                                   l13802 7B78  
                                 l14602 8AA6                                   l15066 9488  
                                 l12924 660A                                   l12916 6590  
                                 l12860 6474                                   l12836 82D0  
                                 l12844 82E2                                   l12668 5D56  
                                 l12756 7CE4                                   l12780 81D4  
                                 l12772 81AE                                   l12684 6EA2  
                                 l13732 2DFC                                   l13708 2D56  
                                 l13724 2DB2                                   l13660 2C02  
                                 l13564 27DE                                   l13556 2734  
                                 l13484 23EC                                   l13492 245A  
                                 l14276 5062                                   l14452 73B0  
                                 l14436 67E6                                   l15316 88A6  
                                 l14372 80C6                                   l15164 85BE  
                                 l13820 7BF8                                   l14292 910A  
                                 l14612 8ACC                                   l14700 9092  
                                 l16044 1C2A                                   l15084 8F1C  
                                 l15156 6204                                   l15412 5FB0  
                                 l15420 5FBC                                   l14446 9446  
                                 l12870 64AC                                   l12782 81E2  
                                 l12678 6E68                                   l13718 2DAA  
                                 l13726 2DC6                                   l13662 2C12  
                                 l13646 2ABA                                   l13638 2A88  
                                 l13582 288A                                   l13574 2832  
                                 l13566 27E4                                   l13558 2762  
                                 l13478 23B4                                   l13902 8D02  
                                 l14462 73CA                                   l15174 85DE  
                                 l15182 85F6                                   l13830 7C2A  
                                 l13814 7BAE                                   l13806 7B8C  
                                 l14630 8680                                   l16062 1C60  
                                 l16054 1C40                                   l16038 1BF6  
                                 l15502 061E                                   l15510 0684  
                                 l16310 556C                                   l12928 6610  
                                 l12880 64C6                                   l12784 81EC  
                                 l12792 8222                                   l12776 81C0  
                                 l13736 2E34                                   l13680 2C8E  
                                 l14480 742E                                   l14472 7418  
                                 l14456 73BA                                   l14392 665A  
                                 l14712 4844                                   l14720 486E  
                                 l14704 480A                                   l15176 85E6  
                                 l13832 7C30                                   l13816 7BB6  
                                 l16072 1D52                                   l16048 1C34  
                                 l15088 8F28                                   l15408 5FA0  
                                 l15416 5FB6                                   l15352 5E06  
                                 l15424 5FCA                                   l16312 5572  
                                 l12874 64B6                                   l12866 64A0  
                                 l12938 94DC                                   l12698 6EF2  
                                 l13770 2F2C                                   l13762 2EE6  
                                 l13746 2E7A                                   l13754 2EB0  
                                 l13738 2E40                                   l13690 2CD0  
                                 l13594 28EE                                   l13586 28B4  
                                 l13578 2838                                   l14490 7448  
                                 l14474 741E                                   l14458 73C0  
                                 l14394 6660                                   l14810 4A92  
                                 l14730 489E                                   l15178 85EC  
                                 l14634 8684                                   l14618 862C  
                                 l16058 1C56                                   l15610 0D42  
                                 l15506 0660                                   l15450 032C  
                                 l15098 5FEA                                   l15362 5E3E  
                                 l15338 5DA6                                   l12876 64BC  
                                 l12796 8238                                   l12788 8212  
                                 l12980 445A                                   l13772 2FB6  
                                 l13780 304C                                   l13756 2EBC  
                                 l13748 2E86                                   l13676 2C66  
                                 l13668 2C2E                                   l13844 8516  
                                 l14484 7438                                   l14468 7412  
                                 l14820 4ABE                                   l14724 487A  
                                 l14900 6334                                   l14652 74BC  
                                 l14636 8692                                   l16092 1DCC  
                                 l16076 1D5C                                   l16068 1C6C  
                                 l15620 0D74                                   l15516 06A0  
                                 l15364 5E44                                   l15348 5DFC  
                                 l16332 5606                                   l16316 557C  
                                 l16308 5568                                   l12966 5AB0  
                                 l12958 59BC                                   l12990 455C  
                                 l13694 2CFA                                   l13846 8528  
                                 l14486 743E                                   l14478 7428  
                                 l14398 666A                                   l13870 8794  
                                 l13862 877A                                   l14670 756C  
                                 l14646 86B8                                   l16086 1DBC  
                                 l15710 11A4                                   l15702 115E  
                                 l15550 0862                                   l15470 040E  
                                 l15454 036E                                   l15446 02EA  
                                 l15390 5ED8                                   l16342 5698  
                                 l12896 6554                                   l12888 652E  
                                 l13784 3060                                   l13768 2F1A  
                                 l13696 2D00                                   l13960 89A8  
                                 l13952 8990                                   l13944 897A  
                                 l14496 74A2                                   l14840 4BCE  
                                 l14824 4ADC                                   l14816 4AA0  
                                 l14752 491E                                   l14744 48E4  
                                 l14736 48D0                                   l14912 637A  
                                 l14592 8A5C                                   l16088 1DC2  
                                 l15616 0D66                                   l15552 0874  
                                 l15464 03AE                                   l15368 5E4E  
                                 l12986 4530                                   l13778 3038  
                                 l13786 307A                                   l14850 4BE0  
                                 l13858 876C                                   l14922 63AC  
                                 l14906 6340                                   l14682 75A4  
                                 l15802 1394                                   l15490 0558  
                                 l15482 04D4                                   l15474 0450  
                                 l15458 0392                                   l15394 5EE2  
                                 l15378 5E86                                   l16338 566C  
                                 l13788 309E                                   l13964 89B2  
                                 l13956 899E                                   l13948 8986  
                                 l13892 935A                                   l14828 4AFA  
                                 l14780 498A                                   l14748 4904  
                                 l14932 6410                                   l14908 6348  
                                 l14676 759A                                   l14684 75AC  
                                 l14596 8A94                                   l13980 8AD4  
                                 l14692 9060                                   l15812 13C6  
                                 l15740 126A                                   l15724 11FE  
                                 l15716 11C6                                   l15660 0F7A  
                                 l15396 5EE8                                   l15388 5ED2  
                                 l16348 56E0                                   l16292 5524  
                                 l16284 54E6                                   l12998 46D4  
                                 l14862 4C40                                   l14838 4B7A  
                                 l14790 49B0                                   l14774 496C  
                                 l14758 4930                                   l14942 7828  
                                 l13878 87BA                                   l14918 63A0  
                                 l15910 17A6                                   l15830 1446  
                                 l15822 13FE                                   l15734 1254  
                                 l15670 106A                                   l15646 0F04  
                                 l15574 09AC                                   l15494 059A  
                                 l15486 0516                                   l15478 0492  
                                 l16374 5796                                   l16366 5770  
                                 l13968 89C2                                   l14848 4BD8  
                                 l14792 49B8                                   l14768 4966  
                                 l14960 7888                                   l14928 640A  
                                 l14880 626C                                   l14872 624C  
                                 l13984 8B02                                   l15904 1796  
                                 l15744 1278                                   l15816 13E6  
                                 l15656 0F46                                   l15568 098A  
                                 l16392 57D6                                   l16296 552E  
                                 l16288 5516                                   l13898 8CDE  
                                 l14858 4C22                                   l14778 4982  
                                 l14786 499E                                   l14954 785E  
                                 l14946 784A                                   l14890 62B4  
                                 l14698 908A                                   l15922 1880  
                                 l15906 179C                                   l15842 14F0  
                                 l15834 1450                                   l15754 12A2  
                                 l15690 1106                                   l15682 10C8  
                                 l15674 108C                                   l15666 102C  
                                 l15578 0A7E                                   l15498 05DC  
                                 l14980 78CE                                   l14972 78B8  
                                 l14884 6278                                   l14876 6258  
                                 l15924 18AE                                   l15916 183C  
                                 l15852 1512                                   l15780 1314  
                                 l15748 128A                                   l15676 1094  
                                 l16388 57AC                                   l14798 49E0  
                                 l14966 789A                                   l14894 62EE  
                                 l15934 18E0                                   l15862 15D0  
                                 l15846 14F6                                   l15790 135A  
                                 l15758 12B0                                   l15694 1128  
                                 l14896 6312                                   l15880 16E6  
                                 l15872 1602                                   l15856 152A  
                                 l15864 15D6                                   l15944 1920  
                                 l14986 78E2                                   l14994 7908  
                                 l14898 6318                                   l15970 19BA  
                                 l15882 1724                                   l15866 15E6  
                                 l15698 113C                                   l15980 1A00  
                                 l15892 1756                                   l15948 1942  
                                 l15798 137C                           ??_ReadVoltage 00A5  
                                 l15988 1A26                                   l15998 1A46  
                                 ?_main 0001                  __size_ofi1_cleanBuffer 003E  
                       __end_of___awdiv 7D06                                   _EEADR 000FA9  
                       __end_of___ftadd 5D7E                                   STR_10 FF88  
                                 STR_11 FFFB                                   STR_20 FFC6  
                                 STR_12 FFC0                                   STR_13 FFFB  
                                 STR_21 FB2A                                   STR_14 FFC0  
                                 STR_22 FFCC                                   STR_30 F9F5  
                                 STR_15 FFFB                                   STR_31 FD53  
                                 STR_23 FB47                                   STR_32 FCDB  
                                 STR_24 FFEF                                   STR_16 FFDD  
                                 STR_40 FF91                                   STR_33 F7C3  
                                 STR_41 FDEE                                   STR_17 FB81  
                                 STR_25 FA15                                   STR_50 F7A8  
                                 STR_42 FF6B                                   STR_18 FFD8  
                                 STR_26 FA34                                   STR_34 F934  
                                 STR_19 FFF7                                   STR_43 FE46  
                                 STR_27 FCD7                                   STR_35 FAEE  
                                 STR_51 F8C8                                   STR_36 FFB2  
                                 STR_60 FF9A                                   STR_44 FF1A  
                                 STR_28 FCC2                                   STR_52 F911  
                       __end_of___awmod 8244                                   STR_53 FFB2  
                                 STR_45 FD8B                                   STR_61 FFB9  
                                 STR_37 FD2B                                   STR_29 FC53  
                                 STR_38 FF69                                   STR_54 FE57  
                                 STR_46 FCEC                                   STR_62 F87E  
                                 STR_70 F82C                                   STR_63 F87E  
                                 STR_55 FD7B                                   STR_39 FC97  
                                 STR_47 F7A8                                   STR_71 F77A  
                                 STR_56 FF91                                   STR_80 FE12  
                                 STR_64 F8A3                                   STR_48 F609  
                                 STR_72 F3D4                                   STR_81 FB0D  
                                 STR_57 FE96                                   STR_65 FAB0  
                                 STR_49 F638                                   STR_73 F413  
                                 STR_82 FFA3                                   STR_90 FE35  
                                 STR_58 FE00                                   STR_66 FACF  
                                 STR_74 F449                                   STR_91 FFEB  
                                 STR_59 FFB9                                   STR_67 FEA4  
                                 STR_83 FD67                                   STR_75 F7D4  
                                 STR_84 FC02                                   STR_92 FF7E  
                                 STR_76 F800                                   STR_68 F47F  
                                 STR_93 FFD2                                   STR_77 FFD2  
                                 STR_85 FD16                                   STR_69 F4B1  
                                 STR_86 FE67                                   STR_78 F9D5  
                                 STR_94 F9B5                                   STR_95 FC02  
                                 STR_87 FB64                                   STR_79 FB0D  
                                 STR_88 FFEB                                   STR_96 FBF0  
                                 STR_89 FBE3                                   STR_97 FD01  
                                 STR_98 FFA3                                   STR_99 FB9D  
                       __end_of___ftdiv 70EC                     ?i2_cleanBuffer16bit 001B  
                       __end_of___ftneg 926A                                   _ANSEL 000F7E  
                       __end_of___lldiv 7F62                         __end_of___ftmul 6F9A  
                       ___awdiv@divisor 0081                         __end_of___llmod 8448  
                       __end_of___ftsub 8F8A                         __end_of___fttol 723E  
                   __end_of_FirmVersion F3C4                                   u15110 82B2  
               ReadEEPROM_1Byte@address 0079                                   u16000 36F4  
                                 u16010 3760                                   u15060 8DAC  
                                 u16100 3B2C                                   u16020 37CC  
                                 u15117 82A8                                   u16005 36E8  
                                 u20581 57EE                                   u15070 8DDA  
                                 u16110 3B98                                   u16030 3838  
                                 u16015 3754                                   u16120 3C04  
                                 u16040 38A4                                   u16105 3B20  
                                 u16025 37C0                                   u15090 827C  
                                 u16130 3C70                                   u16050 3910  
                                 u15067 8DA2                                   u16115 3B8C  
                                 u16035 382C                                   u16140 3CF4  
                                 u16060 397C                                   u15077 8DD0  
                                 u16125 3BF8                                   u16045 3898  
                                 u16230 2310                                   u16070 39E8  
                                 u16135 3C64                                   u16055 3904  
                                 u14640 7A84                                   u16320 24FC  
                                 u16080 3A54                                   u15097 8272  
                                 u16145 3CE8                                   u16065 3970  
                                 u16090 3AC0                                   u16075 39DC  
                                 u14645 7A78                                   u14661 5B16  
                                 u15461 680C                                   u16325 24F0  
                                 u16237 2306                                   u16085 3A48  
                                 u16270 23A4                                   u14671 5B34  
                                 u16095 3AB4                                   u17080 8AF6  
                                 u15481 6846                                   u17090 8B24  
                                 u16540 2A7A                                   u16277 239A  
                                 u17501 6FEA                                   u15831 8FDC  
                                 u15671 7102                                   u14871 6E44  
                                 u17087 8AEC                                   u18305 4AFE  
                                 u15905 32AC                                   u17097 8B1A  
                                 u15690 714C                                   u14891 6E7E  
                                 u15915 3306                                   u19300 0750  
                                 u15925 3360                                   u15695 7142  
                                 u15935 33BA                                   u15855 30EA  
                                 u17481 6FB0                                   u15945 3414  
                                 u15865 3144                                   u15955 346E  
                                 u15875 319E                                   u18700 8366  
                                 u17900 758E                                   u18620 7724  
                                 u15965 34C8                                   u15885 31F8  
                                 u17750 79BA                                   u18630 7756  
                                 u15975 3522                                   u15895 3252  
                                 u19280 06F4                                   u18705 835A  
                                 u15985 357C                                   u19361 0AEC  
                                 u17930 75CE                                   u17850 74DE  
                                 u17755 79AE                                   u15995 35D6  
                                 u17907 7584                                   u18627 771A  
                                 u17860 7504                                   u18637 774C  
                                 u19390 0BF0                                   u17880 7562  
                                 u17937 75C4                                   u17857 74D4  
                                 u16995 810E                                   u17867 74FA  
                                 u17887 7558                                   i1l661 941A  
                                 i1l646 93D8                     __end_of_EraseScreen 9342  
                       ___awdiv@counter 0083                                   _RCREG 000FAE  
                                 _RCSTA 000FAB                                   _TMR0H 000FD7  
                                 _TMR1H 000FCF                                   _TMR0L 000FD6  
                                 _TMR3H 000FB3                                   _TMR1L 000FCE  
                                 _TMR3L 000FB2                                   _SPBRG 000FAF  
                            _BufferCopy 874E                                   _PORTA 000F80  
                                 _PORTB 000F81                                   _PORTC 000F82  
                                 _RF_IR 0042                            InitUART@Baud 00CE  
                                 _IRbit 002C                                   _IRmod 00DE  
                                 _TXREG 000FAD                                   _TXSTA 000FAC  
                   _ConfigureOscillator 955C                         __end_of_delayUS 8EE6  
                         __CFG_PWRT$OFF 000000                        _InternalADC_Read 8448  
                         __CFG_WRT0$OFF 000000                           __CFG_WRT1$OFF 000000  
                         __CFG_WRT2$OFF 000000                     ___lmul@multiplicand 007D  
                         __CFG_WRT3$OFF 000000                       _NewReceivedString 00DF  
                          ___lltoft@exp 0089                          __CFG_EBTR0$OFF 000000  
                        __CFG_FCMEN$OFF 000000                          ?_InitBluetooth 0001  
                        __CFG_EBTR1$OFF 000000                          __CFG_EBTR2$OFF 000000  
                        __CFG_EBTR3$OFF 000000                              SendRF@Code 0079  
                          InitUART@temp 0106                            _IRrawCodeNum 002F  
                                 _Round 8B3C                           __CFG_WRTB$OFF 000000  
                 _BluetoothInitialSetup 4C5E                __end_of_Local_CloseUSART 949C  
                         __CFG_WRTC$OFF 000000                   __end_of_BlueConnected 94E2  
                         __CFG_WRTD$OFF 000000                        ?_lowercaseString 0079  
                      __end_of_UARTchar 937E                          __CFG_EBTRB$OFF 000000  
                       __end_of_dpowers F189                                   _scale 42D4  
                            SendRF@size 007C                         __end_of_isdigit 9298  
                         ___ftpack@sign 007D                                   main@i 0297  
                       __end_of_low_isr 01F2                                   tablat 000FF5  
                      _RF_IR_Postscaler 0043                                   plusw0 000FEB  
                                 plusw2 000FDB                             ?_UARTstring 007A  
               InternalADC_Read@channel 0087                                   status 000FD8  
                  ??i2_cleanBuffer16bit 001F                         __end_of_sprintf 30AE  
                        __CFG_HFOFST$ON 000000             WriteEEPROM_1Byte@PEIEstatus 007D  
                  __size_of_cleanBuffer 005A                     __size_of_LEDTimerON 0012  
                 __end_of_GetMemoryChar 931A                    ?_ConfigureOscillator 0001  
                 __end_of_GetMemoryLong 6E2E                           ??_SendRF_wait 0086  
                    StringContains@That 007B                      StringContains@This 0079  
                          __end_of_CRLN F3D4                           high_isr@IRpin 0023  
                       __initialization 7F62                      StringAddEqual@temp 0100  
                 __end_of_EEPROM_UNLOCK 93F8                        __end_of_IsLetter 9360  
                            _InitTimer0 9470                              _InitTimer1 94B8  
                    _Conf1_ChannelD_STR F35C                              _InitTimer2 94AA  
                            _InitTimer3 9516                      __size_of_GetEEPROM 018E  
                         high_isr@Time0 0024                      _Conf1_ChannelE_STR F36B  
                    _Conf1_ChannelF_STR F37A        __end_of_Conf2_ChannelH_1_OFF_STR F20C  
                            _InitTimers 9424                            _IRrepeatflag 0031  
                    __size_of_DecodeNEC 00AE                            __end_of_main 5828  
                 __end_of_Reverse_4Byte 3D2C                        ??_UARTstringCRLN 007E  
                      __end_of_InitUART 7A4C        __end_of_Conf2_ChannelH_2_OFF_STR F221  
                WaitForIRsignal@timeout 0082            __size_of_GetStringAfterComma 011E  
                        GetNumber@count 0091        __end_of_Conf2_ChannelH_3_OFF_STR F236  
                           _IsCharacter 93B2                                  ??_main 00DB  
                         ___fttol@sign1 00C1                        __end_of_ResetADC 94F0  
                     GetNumber@negative 0090                           __activetblptr 000003  
                    SendRF@RepeatAmount 007D                             ?_IRrawToNEC 001B  
                    __size_of_GetNumber 0486                         _WaitForIRsignal 86BE  
                  __size_of__tdiv_to_l_ 01A6                      __size_of_EncodeNEC 014E  
                   __end_of_Init_System 88E4                       SetEEPROMdefault@i 00BD  
                     SetEEPROMdefault@j 00BE                       SetEEPROMdefault@k 00BC  
                 _Conf2_ChannelB_ON_STR F298                           ?_SendNEC_wait 008E  
                 _Conf2_ChannelD_ON_STR F2AA                  __size_of_SendNEC_bytes 0086  
                                ?_Round 00C7                     __end_of_ReadVoltage 80DA  
                     GetNumber@tempThis 0094                              UseIRCode@i 00C5  
                            UseIRCode@j 00C4                          _StringAddEqual 623C  
                                _ADCON0 000FC2                                  _ADCON1 000FC1  
                                _ADCON2 000FC0                     __size_ofi1_UARTchar 0018  
                      __end_of___altoft 858C                        ___llmod@dividend 0086  
                                ?_scale 00A2                                  STR_100 FEBF  
                                STR_101 FE87                                  STR_102 FC0A  
                                STR_110 F5A7                                  STR_111 FF27  
                                STR_103 FDDB                                  STR_104 FC3B  
                                STR_120 F6F0                                  STR_112 F4E3  
                                STR_113 FF3D                                  STR_105 FF32  
                                STR_121 FF00                                  STR_130 F856  
                                STR_122 F71E                                  STR_114 F545  
                                STR_106 F514                                  _ADRESH 000FC4  
                                STR_115 FF5E                                  STR_107 FF48  
                                STR_123 FECC                                  STR_131 FEB2  
                                STR_132 FD8F                                  STR_140 F955  
                                STR_124 F666                                  STR_116 F5D8  
                                STR_108 F576                                  _EEADRH 000FAA  
                                STR_109 FF53                                  STR_125 FEE6  
                                STR_117 FED9                                  STR_133 FDA2  
                                STR_141 FA72                                  STR_134 FDB5  
                                STR_142 F975                                  STR_126 F6C2  
                                STR_118 F694                                  _ADRESL 000FC3  
                                STR_127 FF0D                                  STR_119 FEF3  
                                STR_135 FC81                                  STR_143 FA91  
                                STR_136 FC6A                                  STR_144 F995  
                                STR_128 F74C                                  STR_129 FFE2  
                                STR_137 FDC8                                  STR_145 FBD5  
                                STR_138 FD3F                                  STR_146 FBB9  
                                STR_139 FA53                                  STR_147 F8ED  
                                STR_148 FFAB                                  STR_149 FE24  
                                _EEDATA 000FA8                                  _EECON2 000FA7  
                      ___awdiv@dividend 007F                         ??i2_ResetTimer0 001B  
                      __end_of___ftpack 76FA                                  _ANSELH 000F7F  
                     ?_VoltageDividerON 0001                   _Conf2_ChannelB_Status 0027  
                         ??_ResetTimer0 0079                           ??_ResetTimer1 0079  
                         ??_ResetTimer3 001B                        __end_of___lltoft 8964  
                                i1l1353 01AA                                  i1l1354 01A6  
                                i1l1338 018C                                  i2l1211 3E64  
                                i2l1212 3E58                                  i2l1221 3E52  
                                i2l1213 3E4E                                  i2l1223 4298  
                                i2l1224 3EC8                                  i2l1241 3F5C  
                                i2l1225 3E8E                                  i2l1331 4294  
                                i2l1228 4272                                  i2l1265 4000  
                                i2l1291 40B4                                  i2l1284 408C  
                                i2l1285 4082                          __CFG_WDTEN$OFF 000000  
                      __end_of___lwtoft 92C4                      __size_of_ReadUSART 0018  
                 _Conf2_ChannelD_Status 0028                           SetTimer0@temp 001B  
                                _IR_NEC 00E1                      __size_of_ReadIRpin 000E  
                                _SPBRGH 000FB0                      ??_VoltageDividerON 0079  
                         i1_cleanBuffer 9122                             ?_ClearUSART 0001  
                        SetMemoryLong@H 00AB                          SetMemoryLong@L 00AE  
                    __size_of_SetEEPROM 01EC                               ??_InitADC 0079  
                             ??_InitApp 0079                   ??_ConfigureOscillator 0079  
                                _Global 0400                                  _InitIR 8F8A  
                                _SendRF 7B46                          __CFG_XINST$OFF 000000  
                       _UARTcommandMenu 76FA                GetStringAfterComma@count 0080  
                      __end_of__powers_ F1D7                           InitUART@spbrg 0103  
                      __end_of_high_isr 42D4                         _ReadCodeButtons 8EE6  
                    __size_of_OpenUSART 007C                          _StringContains 8244  
                                ___ftge 7D06                                  ___lmul 89E0  
              SendNEC_wait@RepeatAmount 0092                                  ___wmul 919A  
            __end_of_SyncEEPROMToGlobal 67F6                               ??___awdiv 0083  
                           _FirmVersion F3BB                               ??___ftadd 00B2  
                        __CFG_STVREN$ON 000000                               ??___awmod 007D  
                             ??___ftdiv 008A             ?_StringMatchCaseInsensitive 007C  
                             ??___ftneg 007C                               ??___lldiv 0081  
                             ??___ftmul 0099                             _EraseScreen 931A  
                             ??___llmod 008E                               ??___ftsub 00BE  
                             ??___fttol 00BC                       cleanBuffer16bit@i 0080  
                    __size_of_SetTimer0 000A                      __size_of_ResetBlue 0032  
                   __end_of_SendRF_wait 9122                            ?i1_ReadUSART 0001  
                                _fround 5828                       ?_SetEEPROMdefault 0001  
                                clear_0 7F68                                  clear_1 7F76  
                                clear_2 7F8A                                  clear_3 7F9C  
                                clear_4 7FA8                                  clear_5 7FB8  
                                clear_6 7FC4                        ___awdiv@quotient 0085  
                             ??_delayUS 007D                         ___awmod@divisor 007B  
                    __size_of_UseIRCode 0266                         ___awmod@counter 007D  
                    ??_SetEEPROMdefault 00BA                   ___ftmul@f3_as_product 009D  
                   __size_of_UARTstring 005A                         ??_InitBluetooth 00DB  
                           ?_BufferCopy 0081                       ?_cleanBuffer16bit 0079  
                          __pdataCOMRAM 003C                               ??_isdigit 0079  
                        ??_SendNEC_wait 0093                  ?_BluetoothInitialSetup 0001  
                __end_of_StringAddEqual 643C                            __mediumconst F160  
                        EncodeNEC@temp1 0095                          EncodeNEC@temp2 0099  
                        EncodeNEC@temp3 009D                          EncodeNEC@temp4 00A1  
                          ?i2_ReadIRpin 0001                               ??_low_isr 0009  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                      ??_cleanBuffer16bit 007D  
                    IRrawToNEC@StartBit 0066                  SyncEEPROMToGlobal@Temp 0103  
                      _CommandStringPos 0026                       __end_of_GetEEPROM 6CBE  
                 __end_of_lowercaseChar 92F0                       __end_of_DecodeNEC 83A4  
                             ??_sprintf 00D5                         __CFG_FOSC$HSPLL 000000  
                        ?i1_cleanBuffer 0001                    UARTcommandMenu@place 0086  
                    UseBluetooth@String 0200                              __accesstop 0060  
               __end_of__initialization 801C                              ___altoft@c 0081  
                            Round@input 00C7                         __CFG_PBADEN$OFF 000000  
                            ___ftadd@f1 00AC                              ___ftadd@f2 00AF  
                            ___ftge@ff1 0079                              ___ftge@ff2 007C  
                    UseBluetooth@device 0284                           ___rparam_used 000001  
                   StringAddEqual@Input 0088                              ___ftdiv@f1 0084  
                            ___ftdiv@f2 0087                              ___ftdiv@f3 008E  
                   StringContains@begin 007E                              ___ftneg@f1 0079  
                     __end_of_GetNumber 4C5E                  __end_of_StringContains 82F6  
                    UseBluetooth@rfconf 028B                       __end_of_EncodeNEC 738C  
             __size_of_ReadEEPROM_1Byte 0066                     __end_of_ResetTimer0 952A  
                   __end_of_ResetTimer1 9516                     __end_of_ResetTimer3 9548  
                   __size_of_IRrawToNEC 03FE                              ___ftmul@f1 0093  
                            ___ftmul@f2 0096                           _SendNEC_bytes 87D8  
                            ___ftsub@f1 00B8                              ___ftsub@f2 00BB  
                            ___fttol@f1 00B8                          __pcstackCOMRAM 0001  
                           ?_InitTimer0 0001                             ?_InitTimer1 0001  
                           ?_InitTimer2 0001                             ?_InitTimer3 0001  
                           ?_InitTimers 0001                      _Conf2_ChannelB_OFF F2BC  
                    _Conf2_ChannelD_OFF F2DC                           __end_of_Round 8BA2  
                        _ReadPushButton 9480                  i2cleanBuffer16bit@data 001B  
                          __pidataBANK0 955E                            __pidataBANK2 91D2  
             __size_of_EnterCommandMode 00C8                              ___lltoft@c 0081  
                             ?_UARTchar 0001                 __end_of_WaitForIRsignal 874E  
                         __end_of_scale 47D8         __end_of_Conf2_ChannelH_1_ON_STR F24A  
                           _Init_System 885E                     SyncEEPROMToGlobal@i 0101  
                   SyncEEPROMToGlobal@j 0102                     SyncEEPROMToGlobal@k 0100  
       __end_of_Conf2_ChannelH_2_ON_STR F25E         __end_of_Conf2_ChannelH_3_ON_STR F272  
              _Conf2_ChannelH_1_OFF_STR F1F7                       __end_of_ReadUSART 93B2  
                     __end_of_ReadIRpin 94D4                           ?i1_UARTstring 0002  
                          ??_LEDTimerON 0079                              ___lwtoft@c 0081  
             __size_of_CheckReceivingIR 0012                             _ReadVoltage 8022  
              _Conf2_ChannelH_2_OFF_STR F20C                       __end_of_SetEEPROM 6628  
                       ReadVoltage@temp 00A8                     __size_of_ClearUSART 000E  
                            __div_to_l_ 699C                __end_ofi1_UARTstringCRLN 8CD0  
              _Conf2_ChannelH_3_OFF_STR F221                         GetNumber@result 0088  
                       ?_StringAddEqual 0088                                 ??_Round 00CA  
                         ReadUSART@data 0079                       __end_of_OpenUSART 89E0  
                       __div_to_l_@exp1 0084                         __div_to_l_@cntr 0083  
                               ??_scale 00A5                               ?_IsLetter 0001  
                       __div_to_l_@quot 007F                            sprintf@width 0119  
                __size_of_SetMemoryChar 003A                       __end_of_SetTimer0 953E  
                            __pbssBANK0 00DB                              __pbssBANK1 01FF  
                            __pbssBANK2 02CE                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              __pbssBANK6 0600  
                            __pbssBANK7 0700                  __size_of_SetMemoryLong 00FA  
                     _EEPROMinitialized 9438                               ?_InitUART 00CE  
                     __end_of_ResetBlue 923A                 __end_of_UARTcommandMenu 7818  
                _Conf2_ChannelB_OFF_STR F272                       __end_of_UseIRCode 5FE4  
                    ReadVoltage@voltage 00A5                 __end_of_ReadCodeButtons 8F3A  
                           _ReceivingIR 0044                      ?_EEPROMinitialized 0001  
                         ??_StringMatch 007D                  _Conf2_ChannelD_OFF_STR F285  
                         __div_to_l_@f1 0079                           __div_to_l_@f2 007C  
              __size_ofi1_BlueConnected 000E                   WriteEEPROM_1Byte@data 007B  
                             ?_ResetADC 0001                      __end_of_LEDTimerON 945E  
                               ?_InitIR 0001                         ?_StringContains 0079  
                        ?_SendNEC_bytes 0089                  __end_of_ReadPushButton 948E  
              __end_of_InternalADC_Read 84EA                     __size_of_BufferCopy 008A  
                               ?_SendRF 0079                             _SendRF_wait 90E4  
                          ??i1_UARTchar 0001                                 ?___ftge 0079  
                   ??_EEPROMinitialized 0079                                 ?___lmul 0079  
                               ?___wmul 0087                           ?_Reverse_Byte 0001  
                            ??_UARTchar 0079                       _VoltageDividerOFF 9558  
                             ?___altoft 0081                                 ?_fround 00A2  
                        ___lmul@product 0081                          ??i1_UARTstring 0004  
                             ?___ftpack 0079                   EnterCommandMode@count 0082  
                 cleanBuffer16bit@count 007B                               ?___lltoft 0081  
                    __end_of_PCBVersion F3C9                      ?_VoltageDividerOFF 0001  
             SendNEC_bytes@RepeatAmount 008D                               ?___lwtoft 0081  
                               i1l10602 8DE4                                 i1l11502 9332  
                               i1l10606 8E10                                 i1l11704 8C6E  
                               i1l12408 0188                                 i1l11490 93C4  
                               i1l12418 01A2                                 i1l11732 94F8  
                               i1l11708 8C9A                                 i1l12390 0130  
                               i1l12366 00B4                                 i1l12358 0094  
                               i1l11680 9144                                 i1l11498 9328  
                               i1l12378 00F2                                 i1l11676 912C  
                               i1l12398 0162                                 i2l11722 9506  
                               i2l11684 90AC                                 i2l11688 90C8  
                               i2l16122 50A6                                 i2l16220 539E  
                               i2l16206 532E                                 i2l16142 5136  
                               i2l16126 50B0                                 i2l16224 53A4  
                               i2l16152 5168                                 i2l16136 50F2  
                               i2l16242 5422                                 i2l16218 5396  
                               i2l16146 513C                                 i2l16228 53C6  
                               i2l16236 53E4                                 i2l16148 5164  
                               i2l16500 3EC0                                 i2l16262 5470  
                               i2l16190 52BA                                 i2l16182 52A8  
                               i2l16174 5266                                 i2l16248 5428  
                               i2l16258 546A                                 i2l16266 547A  
                               i2l16186 52B0                                 i2l16178 52A2  
                               i2l16524 3F24                                 i2l16460 3E10  
                               i2l16198 5306                                 i2l16710 40A6  
                               i2l16702 4092                                 i2l16534 3F3C  
                               i2l16470 3E3E                                 i2l16608 3FD2  
                               i2l16616 3FDC                                 i2l16544 3F4C  
                               i2l16536 3F40                                 i2l16528 3F30  
                               i2l16472 3E44                                 i2l16722 40D2  
                               i2l16642 4012                                 i2l16626 3FF0  
                               i2l16570 3F88                                 i2l16554 3F66  
                               i2l16812 41D8                                 i2l16716 40BE  
                               i2l16564 3F7A                                 i2l16476 3E5C  
                               i2l16468 3E38                                 i2l16830 4220  
                               i2l16814 41EA                                 i2l16806 41BA  
                               i2l16670 4042                                 i2l16646 4016  
                               i2l16638 4006                                 i2l16734 40E4  
                               i2l16808 41C8                                 i2l16664 4036  
                               i2l16656 4028                                 i2l16648 401A  
                               i2l16584 3FB8                                 i2l16576 3F94  
                               i2l16850 4254                                 i2l16826 4206  
                               i2l16754 411C                                 i2l16682 4056  
                               i2l16738 40EE                                 i2l16852 425C  
                               i2l16844 4244                                 i2l16780 4170  
                               i2l16692 4072                                 i2l16676 404C  
                               i2l16588 3FBE                                 i2l16684 4060  
                               i2l16846 424A                                 i2l16782 4176  
                               i2l16790 4188                                 i2l16758 412C  
                               i2l16862 426E                                 i2l16768 4152  
                               i2l16874 4288                                 i2l16858 4268  
                               i2l16794 419E                                 i2l16876 4290  
                               i2l16788 4182                        i1UARTstring@data 0002  
                         UseIRCode@Code 00BA                       _ReceivedStringPos 00E0  
                   ??_VoltageDividerOFF 0079                         SetMemoryLong@MH 00AC  
                       SetMemoryLong@ML 00AD                       ?_Local_CloseUSART 0001  
             __end_of_EEPROMinitialized 944C                 BluetoothInitialSetup@ok 015A  
                   __size_of_InitTimer0 0010                     __size_of_InitTimer1 000E  
                   __size_of_InitTimer2 000E                     __size_of_InitTimer3 000A  
                       ??i1_cleanBuffer 0005                              ??_IsLetter 0079  
                   __size_of_InitTimers 0014                               ?_high_isr 0001  
                    __end_ofi1_UARTchar 93E2                     _GetStringAfterComma 7818  
                    ??_Local_CloseUSART 0079             __size_of_SyncGlobalToEEPROM 0046  
                            ??_InitUART 00D2                             _ResetTimer0 9520  
                           _ResetTimer1 950C                             _ResetTimer3 953E  
   __size_of_StringMatchCaseInsensitive 0094                            ??_UARTstring 007C  
                               SendRF@i 0080                           ?_UseBluetooth 0200  
                               _InitADC 93F8                                 _InitApp 9018  
                        UseBluetooth@ok 0289                             low_isr@data 001A  
           __end_of_BluetoothConfigured 939A                 UseBluetooth@tempRFArray 028A  
                            ??_ResetADC 0079                          InitUART@config 0105  
                     __end_of__npowers_ F1B0                                 __Hparam 0000  
                            _scale$3800 00A5                         ?_ReadPushButton 0001  
                       __size_of_InitIR 0048                                 __Lparam 0000  
                  __end_of_SendNEC_wait 862A                 __size_of_SendRF_Channel 0258  
                       __size_of_SendRF 00F0                            SendRF@Config 007B  
             __end_of_VoltageDividerOFF 955C                       i1cleanBuffer@data 0001  
                        ??_Reverse_Byte 0079                         __size_of___ftge 00CE  
                               ___awdiv 7C36                         __size_of___lmul 007A  
                               ___ftadd 5B00                                 ___awmod 8190  
                               ___ftdiv 6F9A                                 ___ftneg 923A  
                               ___lldiv 7E9C                     __end_of_StringMatch 8AD2  
                  ?_GetStringAfterComma 0079                         __size_of___wmul 0038  
                               ___ftmul 6E2E                                 ___llmod 83A4  
                               ___ftsub 8F3A                                 ___fttol 70EC  
                         _SetMemoryChar 9160                            ?_IsCharacter 0001  
                         _SetMemoryLong 7A4C                        ?_WaitForIRsignal 0001  
                            ??___altoft 0085                                 __pcinit 7F62  
                               _delayUS 8E90                              ??___ftpack 007E  
                       __size_of_fround 02D8                                 __ramtop 1000  
                            ??___lltoft 0085                                 __ptext0 5480  
                               __ptext1 5D7E                                 __ptext2 5FE4  
                               __ptext3 9480                                 __ptext4 8EE6  
                               __ptext5 01F6                                 __ptext6 905E  
                               __ptext7 86BE                                 __ptext8 8AD2  
                               __ptext9 76FA                              ??___lwtoft 0084  
                             _T0CONbits 000FD5                    __size_ofi1_ReadUSART 0016  
                     __end_of_hexpowers F1F7                               _T1CONbits 000FCD  
                           ?__div_to_l_ 0079                       SetMemoryChar@Data 0085  
                               _dpowers F161                            ??_IRrawToNEC 0020  
                             _T2CONbits 000FCA                      __end_of_UARTstring 8DE2  
                     SetMemoryChar@Test 0084                                 _isdigit 926A  
                             _T3CONbits 000FB1                        ___awmod@dividend 0079  
             GetMemoryLong@AddressFirst 009D                                 _low_isr 0018  
                          DecodeNEC@Nec 007D                           SetEEPROM@Temp 0100  
                         SetEEPROM@fail 00B1                           SetEEPROM@burn 0188  
                         SetEEPROM@temp 00B5                                 _sprintf 216A  
                  __size_ofi2_ReadIRpin 000E                              ??_high_isr 0067  
                        __pintcode_body 3D2C                    end_of_initialization 801C  
                      SendNEC_wait@code 008E                           ??_cleanBuffer 007D  
                           _ProductName 0298                        ?_UARTcommandMenu 007C  
                       i1ReadUSART@data 0001                            ??_ClearUSART 007A  
                        ??_UseBluetooth 0203                                 int_func 3D2C  
                             i1u1178_20 8E06                               i1u1338_20 8C90  
                             i1u1178_27 8DFC                               i1u1338_27 8C86  
                             i1u1179_20 8E32                               i1u1339_20 8CBC  
                             i1u1179_27 8E28                               i1u1339_27 8CB2  
                      ?_ReadCodeButtons 0001             __size_ofi2_cleanBuffer16bit 0042  
                       ??_SendNEC_bytes 008E                __size_of_lowercaseString 0044  
                             i2u2017_40 51C8                               i2u2026_40 52DA  
                             i2u2019_40 5206                         ___lldiv@divisor 007D  
                 EraseScreen@characters 0002                      __end_of_SYNTAX_ERR F397  
                      _ReadEEPROM_1Byte 8BA2                         ___lldiv@counter 0085  
                    __end_of_IRrawToNEC 5480                  main@BluetoothStringPos 0295  
                             _RCSTAbits 000FAB                                 postdec1 000FE5  
                               postdec2 000FDD                   ??_GetStringAfterComma 007E  
                      _EnterCommandMode 7DD4                                 postinc0 000FEE  
                               postinc2 000FDE                          ?_SetMemoryChar 0083  
             __size_of_VoltageDividerON 0006                  __size_of_BlueConnected 000E  
                          ?_EraseScreen 0001                          ?_SetMemoryLong 009E  
                     ??i1_BlueConnected 0001                          __tdiv_to_l_@f1 0079  
                        __tdiv_to_l_@f2 007C                               _IRRawCode 0700  
                         ??__tdiv_to_l_ 007F                 ??_BluetoothInitialSetup 00DB  
                     SetMemoryLong@Data 009E                        _CheckReceivingIR 945E  
                     SetMemoryLong@Test 00A7                       GetMemoryLong@temp 0095  
                          ??_BufferCopy 0087                      __end_of_ClearUSART 94AA  
                             _IRaddress 01FF                  __size_of_GetMemoryChar 002A  
                             _TRISAbits 000F92                               _TRISBbits 000F93  
                    _SyncEEPROMToGlobal 6628                               _TRISCbits 000F94  
                        BufferCopy@from 0081                              main@IRtask 0293  
                __size_of_GetMemoryLong 0170                               _IRcodeBit 002D  
            __size_of_EEPROMinitialized 0014                  __size_of_EEPROM_UNLOCK 0016  
     StringContainsCaseInsensitive@That 007E       StringContainsCaseInsensitive@This 007C  
                             _IRcommand 003B             __end_of_ConfigureOscillator 955E  
                __size_of_Reverse_4Byte 0C7E               __size_of_SetEEPROMdefault 0128  
                             _RFcodeBit 0034                     ?_SyncEEPROMToGlobal 0001  
                 __end_ofi2_ResetTimer0 9534                               _GetEEPROM 6B30  
                     main@Bluetoothtask 0294                    __end_ofi1_UARTstring 8E3A  
                             _DecodeNEC 82F6                             ___ftdiv@exp 0091  
            ReadEEPROM_1Byte@PEIEstatus 007C                               _IRtimeout 02CA  
                             _TXSTAbits 000FAC               __size_of_cleanBuffer16bit 005E  
                   UseBluetooth@tempNec 027E                             _StringMatch 8A5A  
                   __size_of__div_to_l_ 0194                     UseBluetooth@timeout 0282  
    __end_of_StringMatchCaseInsensitive 86BE              _StringMatchCaseInsensitive 862A  
                   __end_of_cleanBuffer 8D88                       _Timer1_Postscaler 0038  
                        _IRrepeatAmount 0030                      __end_of_BufferCopy 87D8  
                           ___ftmul@exp 009C                            ??_InitTimer0 0079  
                          ??_InitTimer1 0079                            ??_InitTimer2 0079  
                          ??_InitTimer3 0079                          __end_of_InitIR 8FD2  
                          ??_InitTimers 0079              __size_of_VoltageDividerOFF 0004  
                        __end_of_SendRF 7C36                     _Conf2_ChannelH_1_ON F30C  
                   _Conf2_ChannelH_2_ON F32C                     _Conf2_ChannelH_3_ON F34C  
                             _GetNumber 47D8                               _EncodeNEC 723E  
        GetStringAfterComma@CommaNumber 007B                          __end_of___ftge 7DD4  
                          ?_Init_System 0001                          __end_of___lmul 8A5A  
               i2cleanBuffer16bit@count 001D                          _ReceivedString 0600  
                        __end_of___wmul 91D2                    ??_SyncEEPROMToGlobal 00A6  
                           _BAUDCONbits 000FB8                           __pidataCOMRAM 9548  
                      ??_StringAddEqual 008A                       __size_of_UARTchar 001E  
                          ?_ReadVoltage 00A2                          __end_of_fround 5B00  
                      IRrawToNEC@Invert 001F                       ?i1_UARTstringCRLN 0004  
                   start_initialization 7F62                               _ReadUSART 939A  
               __size_of_UARTstringCRLN 006A                       _Timer2_Postscaler 0039  
                             _ReadIRpin 94C6                   __end_of_InitBluetooth 8E90  
                      UseBluetooth@temp 028E                     __end_of__tdiv_to_l_ 699C  
                             _SetEEPROM 643C                           GetNumber@This 0085  
                    ??i1_UARTstringCRLN 0006                           _BlueConnected 94D4  
                         GetNumber@temp 0095                    __end_of_Reverse_Byte 8190  
                    __end_of_InitTimer0 9480                      __end_of_InitTimer1 94C6  
                    __end_of_InitTimer2 94B8                      __end_of_InitTimer3 9520  
                    __end_of_InitTimers 9438                        ??_StringContains 007D  
                            ?_GetEEPROM 009E                               _OpenUSART 8964  
                     __size_of_IsLetter 001E                   __size_of_SendNEC_wait 009E  
                            ?_DecodeNEC 007D                         ___llmod@divisor 008A  
                     __size_of_InitUART 0116                         ___llmod@counter 008E  
                             _SetTimer0 9534                               _ResetBlue 9208  
                             _Sendcount 0037                                ??_InitIR 0081  
                        _SendRF_Channel 5FE4                 GetStringAfterComma@This 0079  
                          ?_SendRF_wait 0081                               _UseIRCode 5D7E  
                         _GetMemoryChar 92F0                                ??_SendRF 007E  
                     _Timer3_Postscaler 003A               StringAddEqual@firstnumber 008D  
                       ??_SetMemoryChar 0084                           _GetMemoryLong 6CBE  
                     ?_InternalADC_Read 0082                         ??_SetMemoryLong 00A3  
                              ??___ftge 007F                       __size_of_ResetADC 000E  
                              ??___lmul 0081                           _EEPROM_UNLOCK 93E2  
                              ??___wmul 008B      StringContainsCaseInsensitive@begin 0080  
                     ??_lowercaseString 007B                              ?_GetNumber 0085  
                    ??_InternalADC_Read 0084                              ?_EncodeNEC 007D  
                         _Reverse_4Byte 30AE      StringMatchCaseInsensitive@tempThat 0081  
    StringMatchCaseInsensitive@tempThis 0080                  __size_of_lowercaseChar 002C  
                           __pdataBANK0 00E6                             __pdataBANK2 0298  
                      __CFG_LPT1OSC$OFF 000000                                ??_fround 00A5  
                         sprintf@tmpval 010C                     UARTcommandMenu@Desc 007E  
                  GetNumber@CommaNumber 0087                WriteEEPROM_1Byte@address 0079  
                  __size_of_IsCharacter 0018                    __end_of_UseBluetooth 216A  
                     __size_of___altoft 00A2                              fround@prec 00AB  
                     __size_of___ftpack 0120               SetMemoryLong@AddressFirst 00A2  
                             Round@temp 00CA                        cleanBuffer@count 007B  
                     __size_of___lltoft 0080                             __pbssCOMRAM 0026  
                            ?_ReadUSART 0001          ?_StringContainsCaseInsensitive 007C  
                     __size_of___lwtoft 002C                              ?_ReadIRpin 0001  
        __end_of_Conf2_ChannelB_OFF_STR F285                           __pcstackBANK0 0060  
                         __pcstackBANK1 0100                           __pcstackBANK2 0200  
                         __pcstackBANK3 0300                            _SendNEC_wait 858C  
                            ?_SetEEPROM 0100                       _Conf2_ChannelB_ON F2CC  
                     _Conf2_ChannelD_ON F2EC                          ?_BlueConnected 0001  
                          _isdigit$3474 007A          __end_of_Conf2_ChannelD_OFF_STR F298  
        StringMatchCaseInsensitive@That 007E          StringMatchCaseInsensitive@This 007C  
              GetNumber@tempCommaNumber 008F                 _Conf2_ChannelH_1_ON_STR F236  
                          ?_ResetTimer0 0001                            ?_ResetTimer1 0001  
                          ?_ResetTimer3 0001                             _cleanBuffer 8D2E  
               _Conf2_ChannelH_2_ON_STR F24A                        ??_ReadPushButton 0079  
                            ?_OpenUSART 0079                 _Conf2_ChannelH_3_ON_STR F25E  
                     __size_of_high_isr 42CC                             sprintf@flag 011B  
                           sprintf@fval 0116                             sprintf@prec 010A  
                __end_of_SendRF_Channel 623C                                ?_InitADC 0001  
                              ?_InitApp 0001                              ?_SetTimer0 001B  
                            ?_ResetBlue 0001                          ?_GetMemoryChar 007D  
                        ?_GetMemoryLong 007D                 _Conf2_ChannelH_1_Status 0029  
                            ?_UseIRCode 00BA                 _Conf2_ChannelH_2_Status 002A  
                     __CFG_CCP2MX$PORTC 000000                 _Conf2_ChannelH_3_Status 002B  
                        ?_EEPROM_UNLOCK 0001                         SendRF_wait@Code 0081  
             __size_of_Local_CloseUSART 000E                               __pintcode 0008  
                         __pmediumconst F160                          ?_Reverse_4Byte 0079  
                      _VoltageDividerON 9552                                ?___awdiv 007F  
                             __ptext100 955C                               __ptext102 9122  
                             __ptext111 90A2                               __ptext103 8C6C  
                             __ptext112 952A                               __ptext104 8DE2  
                             __ptext113 94FE                               __ptext105 940E  
                             __ptext114 9534                               __ptext106 94F0  
                             __ptext115 953E                               __ptext107 93B2  
                             __ptext116 5082                               __ptext108 931A  
                             __ptext109 93CA                                ?___ftadd 00AC  
                     SendRF_wait@Config 0083                             IRrawToNEC@i 0065  
                              ?___awmod 0079                                ?___ftdiv 0084  
                  cleanBuffer16bit@data 0079                                ?___ftneg 0079  
                       SendRF_wait@size 0084                                ?___lldiv 0079  
                              ?___ftmul 0093                                ?___llmod 0086  
                              ?___ftsub 00B8                               __npowers_ F189  
                              ?___fttol 00B8                            UseIRCode@NEC 00BC  
                           __pintcodelo 0018                                ?_delayUS 0079  
                  __size_of_EraseScreen 0028                             __tdiv_to_l_ 67F6  
                          ??__div_to_l_ 007F                       SendRF_wait@amount 0085  
                         IRrawToNEC@NEC 001D                       _WriteEEPROM_1Byte 8C08  
                              ?_isdigit 0001               __end_of_Conf2_ChannelB_ON F2DC  
             __end_of_Conf2_ChannelD_ON F2FC                           IRrawToNEC@Raw 001B  
                         UseBluetooth@i 0292                __end_of_ReadEEPROM_1Byte 8C08  
                              ?_low_isr 0001                      ?_WriteEEPROM_1Byte 0079  
                        __size_of_Round 0066                               _hexpowers F1D7  
            __end_of_SyncGlobalToEEPROM 9018                   __size_ofi1_UARTstring 0058  
              __end_of_EnterCommandMode 7E9C                                ?_sprintf 00C7  
                        __size_of_scale 0504                           _lowercaseChar 92C4  
              UseBluetooth@rfchannelSTR 0273                        _SetEEPROMdefault 738C  
                             delayUS@US 0079                   __end_ofi1_cleanBuffer 9160  
                       IsCharacter@data 0001                             ??_GetEEPROM 00A0  
                   ??_WriteEEPROM_1Byte 007C                             ??_DecodeNEC 0085  
                        ___wmul@product 008B                                _IOCBbits 000F7D  
                       i1_BlueConnected 94F0                __end_of_CheckReceivingIR 9470  
                      _cleanBuffer16bit 8CD0                         ?_SendRF_Channel 0001  
                              _IPR1bits 000F9F                                _IPR2bits 000FA2  
                              _PIE1bits 000F9D                                _PIE2bits 000FA0  
                          cleanBuffer@i 0080                                _PIR1bits 000F9E  
                    __end_of__div_to_l_ 6B30                                _PIR2bits 000FA1  
                              _RCONbits 000FD0                    i1UARTstringCRLN@data 0004  
                      __CFG_WDTPS$32768 000000                          UseIRCode@found 00C3  
                           ??_GetNumber 008A                             ??_EncodeNEC 0081  
                        DecodeNEC@temp1 008B                          DecodeNEC@temp2 0089  
                        DecodeNEC@temp3 008A                                _RFConfig 0033  
                              _UARTchar 9360            ??_StringMatchCaseInsensitive 0080  
                         ??i1_ReadUSART 0001            __size_of_BluetoothConfigured 001C  
              BluetoothInitialSetup@buf 0128               ReadEEPROM_1Byte@GIEstatus 007B  
             __end_of_WriteEEPROM_1Byte 8C6C                              _ADCON0bits 000FC2  
                            _ADCON1bits 000FC1                              _ADCON2bits 000FC0  
                     ___wmul@multiplier 0087                            i1_UARTstring 8DE2  
                  __size_of_Init_System 0086                                _IRpinOLD 002E  
        __size_of_BluetoothInitialSetup 0424                     ReadCodeButtons@temp 0082  
         __end_of_BluetoothInitialSetup 5082                   __size_of_Reverse_Byte 00B6  
                        _UARTstringCRLN 8AD2                         ??_BlueConnected 0079  
                           ??_ReadUSART 0079                           ??i2_ReadIRpin 001B  
                  __size_of_ReadVoltage 00B8                             ??_ReadIRpin 0079  
              __size_of_WaitForIRsignal 0090                         StringAddEqual@i 008E  
                       StringAddEqual@j 008F                             ??_SetEEPROM 00AF  
                        ?_lowercaseChar 0079                       ___lmul@multiplier 0079  
                           _INTCON2bits 000FF1                                _IsLetter 9342  
                             copy_data0 7FDE                               copy_data1 8010  
            __end_ofi2_cleanBuffer16bit 90E4                           _CommandString 0500  
                              _InitUART 7936                         UseBluetooth@buf 020F  
                       UseBluetooth@set 027D                             ??_OpenUSART 007B  
                          GetNumber@Hex 0092                         IRrawToNEC@first 0064  
                       ??_GetMemoryChar 0081                         OpenUSART@config 007B  
                       ??_GetMemoryLong 0081                      SendNEC_wait@toggle 0093  
                           ??_SetTimer0 001D             __end_of_GetStringAfterComma 7936  
                            _EECON1bits 000FA6                            ?_StringMatch 0079  
                           ??_ResetBlue 0082                        __size_of_InitADC 0016  
                       ??_EEPROM_UNLOCK 0079                                _ResetADC 94E2  
                 __end_of_SendNEC_bytes 885E                        __size_of_InitApp 0046  
                              __Hrparam 0000                             ??_UseIRCode 00C0  
                       ??_Reverse_4Byte 007D                                __Lrparam 0000  
                        i1cleanBuffer@i 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_UARTcommandMenu 011E                    __size_of_SendRF_wait 003E  
                 __size_of_UseBluetooth 1F74                __size_of_ReadCodeButtons 0054  
                          _Reverse_Byte 80DA               InternalADC_Read@ADCcounts 0082  
                    i1cleanBuffer@count 0003                       Reverse_4Byte@This 0079  
                         GetEEPROM@Temp 009E                        __size_of___awdiv 00D0  
                      __size_of___ftadd 027E                        __size_of___awmod 00B4  
                      __size_of___ftdiv 0152                         cleanBuffer@data 0079  
                      __size_of___ftneg 0030                        __size_of___lldiv 00C6  
                              ___altoft 84EA                        __size_of___ftmul 016C  
                      __size_of___llmod 00A4                        __size_of___ftsub 0050  
                      __size_of___fttol 0152                       Reverse_4Byte@temp 0085  
                              ___ftpack 75DA              InternalADC_Read@AnaChanSel 0086  
                           _fround$3798 00A8                             _fround$3799 00A5  
                              ___lltoft 88E4                  __end_of_UARTstringCRLN 8B3C  
                      __size_of_delayUS 0056           __end_of_Conf2_ChannelB_ON_STR F2AA  
                              ___lwtoft 9298           __end_of_Conf2_ChannelD_ON_STR F2BC  
                     main@VoltageStatus 0296                              sprintf@idx 0103  
                            sprintf@len 0106                              sprintf@exp 0110  
                            sprintf@val 0112                  UseBluetooth@NecAddress 028C  
                   __end_ofi1_ReadUSART 9424                        __size_of_isdigit 002E  
                UseBluetooth@NecCommand 028D                        __size_of_low_isr 01DA  
                              __ptext10 862A                                __ptext11 8A5A  
                              __ptext20 87D8                                __ptext12 74B4  
                              __ptext21 30AE                                __ptext13 623C  
                              __ptext30 47D8                                __ptext22 945E  
                              __ptext14 874E                                __ptext31 92C4  
                              __ptext23 8022                                __ptext15 90E4  
                              __ptext40 738C                                __ptext32 89E0  
                              __ptext24 9298                                __ptext16 7B46  
                              __ptext41 7936                                __ptext33 9342  
                              __ptext25 6F9A                                __ptext17 944C  
                              __ptext50 94AA                                __ptext42 8B3C  
                              __ptext34 723E                                __ptext26 9552  
                              __ptext18 950C                                __ptext51 94B8  
                              __ptext43 84EA                                __ptext35 82F6  
                              __ptext27 9558                                __ptext19 858C  
                              __ptext60 42D4                                __ptext52 8F8A  
                              __ptext44 8964                                __ptext36 80DA  
                              __ptext28 8448                                __ptext61 926A  
                              __ptext53 8CD0                                __ptext45 948E  
                              __ptext37 885E                                __ptext29 7818  
                              __ptext70 83A4                                __ptext62 5828  
                              __ptext54 9520                                __ptext46 949C  
                              __ptext38 6628                                __ptext71 7E9C  
                              __ptext63 919A                                __ptext55 94C6  
                              __ptext47 939A                                __ptext39 6B30  
                              __ptext80 8D88                                __ptext72 70EC  
                              __ptext64 6E2E                                __ptext56 9470  
                              __ptext48 9424                                __ptext81 9360  
                              __ptext73 8F3A                                __ptext65 8190  
                              __ptext57 8E3A                                __ptext49 9516  
                              __ptext90 6CBE                                __ptext82 8244  
                              __ptext74 5B00                                __ptext66 7C36  
                              __ptext58 4C5E                                __ptext91 9160  
                              __ptext83 9208                                __ptext75 75DA  
                              __ptext67 67F6                                __ptext59 216A  
                              __ptext92 8C08                                __ptext84 8E90  
                              __ptext76 923A                                __ptext68 699C  
                              __ptext93 93E2                                __ptext85 94D4  
                              __ptext77 7D06                                __ptext69 88E4  
                     SendNEC_bytes@code 0089                                __ptext94 92F0  
                              __ptext86 937E                                __ptext78 7DD4  
                              __ptext95 8BA2                                __ptext87 8FD2  
                              __ptext79 8D2E                                __ptext96 93F8  
                              __ptext88 643C                                __ptext97 94E2  
                              __ptext89 7A4C                 __end_ofi1_BlueConnected 94FE  
                              __ptext98 9438                                __ptext99 9018  
                              __powers_ F1B0                                _high_isr 0008  
            __end_of_Conf1_ChannelD_STR F36B              __end_of_Conf1_ChannelE_STR F37A  
            __end_of_Conf1_ChannelF_STR F389                        __size_of_sprintf 0F44  
                   __end_ofi2_ReadIRpin 950C                         _lowercaseString 905E  
                            GetEEPROM@i 00A4                              GetEEPROM@j 00A5  
                            GetEEPROM@k 00A3                           __size_of_main 03A8  
                 SendRF_Channel@channel 0086                            _UseBluetooth 01F6  
                              delayUS@i 007E                    __size_of_ResetTimer0 000A  
                  __size_of_ResetTimer1 000A                    __size_of_ResetTimer3 000A  
             __size_ofi1_UARTstringCRLN 0064               GetMemoryChar@AddressFirst 0081  
          __size_of_ConfigureOscillator 0002                  UseBluetooth@EnteredNEC 0285  
                      _Local_CloseUSART 948E                         GetMemoryLong@MH 009A  
                       GetMemoryLong@ML 009B                  UseBluetooth@EmptyPlace 0283  
                          BufferCopy@to 0083             __size_of_SyncEEPROMToGlobal 01CE  
            __size_of_WriteEEPROM_1Byte 0064                              _LEDTimerON 944C  
                       ?_UARTstringCRLN 007C                  __size_ofi2_ResetTimer0 000A  
                            _INTCONbits 000FF2               __size_of_InternalADC_Read 00A2  
                        OpenUSART@spbrg 0079                         ??_lowercaseChar 007B  
                          UARTchar@data 0079                         StringMatch@That 007B  
                       StringMatch@This 0079                                isdigit@c 007B  
                              scale@scl 00A8                      GetEEPROM@Arrayspot 00A2  
                    SetEEPROM@Arrayspot 00B6                        EncodeNEC@address 00A5  
              __end_of_VoltageDividerON 9558                     i2cleanBuffer16bit@i 0022  
          __end_of_Conf2_ChannelH_1_OFF F30C            __end_of_Conf2_ChannelH_2_OFF F32C  
          __end_of_Conf2_ChannelH_3_OFF F34C                                intlevel1 0000  
                              intlevel2 0000                              _PCBVersion F3C4  
                             sprintf@ap 0108                               sprintf@cp 0104  
                      __tdiv_to_l_@exp1 0087                               sprintf@sp 00C7  
                      __tdiv_to_l_@cntr 0086                            ?_cleanBuffer 0079  
    GetStringAfterComma@tempCommaNumber 007F                        __tdiv_to_l_@quot 0082  
                     ??_WaitForIRsignal 0082                        EncodeNEC@command 007D  
                      ___lldiv@dividend 0079                            IsLetter@data 0079  
       ??_StringContainsCaseInsensitive 0080                          _BatteryVoltage 00DB  
                        GetMemoryChar@H 0082                             _IR_New_Code 00E5  
                            i1_UARTchar 93CA                          GetMemoryLong@H 0099  
                        GetMemoryLong@L 009C                  __size_of_InitBluetooth 0056  
                           BufferCopy@i 0087                   __end_of_SetMemoryChar 919A  
                 __end_of_SetMemoryLong 7B46          BluetoothInitialSetup@RFchannel 011E  
                         ??_IsCharacter 0001                           _InitUART$3797 0100  
              __end_of_SetEEPROMdefault 74B4                          _Conf1_ChannelD F397  
                        _Conf1_ChannelE F3A3                          _Conf1_ChannelF F3AF  
                            GetNumber@i 0093                          _Conf1_Channels F3C9  
                           i1_ReadUSART 940E                        DecodeNEC@address 0081  
                          ?__tdiv_to_l_ 0079                        UARTcommandMenu@i 0085  
                UARTcommandMenu@Command 007C                       ??_UARTcommandMenu 0080  
           __end_of_Conf2_ChannelH_1_ON F31C             __end_of_Conf2_ChannelH_2_ON F33C  
           __end_of_Conf2_ChannelH_3_ON F35C                          _Conf2_Channels F3CD  
                              sprintf@c 011D                __end_of_cleanBuffer16bit 8D2E  
                              sprintf@f 00C9                        DecodeNEC@command 0083  
                     ??_ReadCodeButtons 0082                        ___lldiv@quotient 0081  
                           i2_ReadIRpin 94FE                       ?_ReadEEPROM_1Byte 0079  
                          EraseScreen@i 0003                 __end_of_lowercaseString 90A2  
                      ?i1_BlueConnected 0001                 __size_of_StringAddEqual 0200  
                        i1UARTchar@data 0001                        ??_SendRF_Channel 0086  
                    ??_ReadEEPROM_1Byte 007B                       ?_EnterCommandMode 0001  
            __end_of_Conf2_ChannelB_OFF F2CC              __end_of_Conf2_ChannelD_OFF F2EC  
                   _BluetoothConfigured 937E                      ??_EnterCommandMode 0082  
                            _UARTstring 8D88                           i2_ResetTimer0 952A  
                     ?_CheckReceivingIR 0001               GetStringAfterComma@result 007C  
                    _SyncGlobalToEEPROM 8FD2                      ??_CheckReceivingIR 0079  
                       BufferCopy@count 0085                    __size_of_StringMatch 0078  
