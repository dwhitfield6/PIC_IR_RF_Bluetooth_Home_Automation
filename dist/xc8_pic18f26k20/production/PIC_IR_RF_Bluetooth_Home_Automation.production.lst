

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Apr 24 18:56:24 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK3,global,class=CODE,delta=1
     8                           	psect	idataBANK5,global,class=CODE,delta=1
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    20                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    21                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    22                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    27                           	psect	text0,global,reloc=2,class=CODE,delta=1
    28                           	psect	text1,global,reloc=2,class=CODE,delta=1
    29                           	psect	text2,global,reloc=2,class=CODE,delta=1
    30                           	psect	text3,global,reloc=2,class=CODE,delta=1
    31                           	psect	text4,global,reloc=2,class=CODE,delta=1
    32                           	psect	text5,global,reloc=2,class=CODE,delta=1
    33                           	psect	text6,global,reloc=2,class=CODE,delta=1
    34                           	psect	text7,global,reloc=2,class=CODE,delta=1
    35                           	psect	text8,global,reloc=2,class=CODE,delta=1
    36                           	psect	text9,global,reloc=2,class=CODE,delta=1
    37                           	psect	text10,global,reloc=2,class=CODE,delta=1
    38                           	psect	text11,global,reloc=2,class=CODE,delta=1
    39                           	psect	text12,global,reloc=2,class=CODE,delta=1
    40                           	psect	text13,global,reloc=2,class=CODE,delta=1
    41                           	psect	text14,global,reloc=2,class=CODE,delta=1
    42                           	psect	text15,global,reloc=2,class=CODE,delta=1
    43                           	psect	text16,global,reloc=2,class=CODE,delta=1
    44                           	psect	text17,global,reloc=2,class=CODE,delta=1
    45                           	psect	text18,global,reloc=2,class=CODE,delta=1
    46                           	psect	text19,global,reloc=2,class=CODE,delta=1
    47                           	psect	text20,global,reloc=2,class=CODE,delta=1
    48                           	psect	text21,global,reloc=2,class=CODE,delta=1
    49                           	psect	text22,global,reloc=2,class=CODE,delta=1
    50                           	psect	text23,global,reloc=2,class=CODE,delta=1
    51                           	psect	text24,global,reloc=2,class=CODE,delta=1
    52                           	psect	text25,global,reloc=2,class=CODE,delta=1
    53                           	psect	text26,global,reloc=2,class=CODE,delta=1
    54                           	psect	text27,global,reloc=2,class=CODE,delta=1
    55                           	psect	text28,global,reloc=2,class=CODE,delta=1
    56                           	psect	text29,global,reloc=2,class=CODE,delta=1
    57                           	psect	text30,global,reloc=2,class=CODE,delta=1
    58                           	psect	text31,global,reloc=2,class=CODE,delta=1
    59                           	psect	text32,global,reloc=2,class=CODE,delta=1
    60                           	psect	text33,global,reloc=2,class=CODE,delta=1
    61                           	psect	text34,global,reloc=2,class=CODE,delta=1
    62                           	psect	text35,global,reloc=2,class=CODE,delta=1
    63                           	psect	text36,global,reloc=2,class=CODE,delta=1
    64                           	psect	text37,global,reloc=2,class=CODE,delta=1
    65                           	psect	text38,global,reloc=2,class=CODE,delta=1
    66                           	psect	text39,global,reloc=2,class=CODE,delta=1
    67                           	psect	text40,global,reloc=2,class=CODE,delta=1
    68                           	psect	text41,global,reloc=2,class=CODE,delta=1
    69                           	psect	text42,global,reloc=2,class=CODE,delta=1
    70                           	psect	text43,global,reloc=2,class=CODE,delta=1
    71                           	psect	text44,global,reloc=2,class=CODE,delta=1
    72                           	psect	text45,global,reloc=2,class=CODE,delta=1
    73                           	psect	text46,global,reloc=2,class=CODE,delta=1
    74                           	psect	text47,global,reloc=2,class=CODE,delta=1
    75                           	psect	text48,global,reloc=2,class=CODE,delta=1
    76                           	psect	text49,global,reloc=2,class=CODE,delta=1
    77                           	psect	text50,global,reloc=2,class=CODE,delta=1
    78                           	psect	text51,global,reloc=2,class=CODE,delta=1
    79                           	psect	text52,global,reloc=2,class=CODE,delta=1
    80                           	psect	text53,global,reloc=2,class=CODE,delta=1
    81                           	psect	text54,global,reloc=2,class=CODE,delta=1
    82                           	psect	text55,global,reloc=2,class=CODE,delta=1
    83                           	psect	text56,global,reloc=2,class=CODE,delta=1
    84                           	psect	text57,global,reloc=2,class=CODE,delta=1
    85                           	psect	text58,global,reloc=2,class=CODE,delta=1
    86                           	psect	text59,global,reloc=2,class=CODE,delta=1
    87                           	psect	text60,global,reloc=2,class=CODE,delta=1
    88                           	psect	text61,global,reloc=2,class=CODE,delta=1
    89                           	psect	text62,global,reloc=2,class=CODE,delta=1
    90                           	psect	text63,global,reloc=2,class=CODE,delta=1
    91                           	psect	text64,global,reloc=2,class=CODE,delta=1
    92                           	psect	text65,global,reloc=2,class=CODE,delta=1
    93                           	psect	text66,global,reloc=2,class=CODE,delta=1
    94                           	psect	text67,global,reloc=2,class=CODE,delta=1
    95                           	psect	text68,global,reloc=2,class=CODE,delta=1
    96                           	psect	text69,global,reloc=2,class=CODE,delta=1
    97                           	psect	text70,global,reloc=2,class=CODE,delta=1
    98                           	psect	text71,global,reloc=2,class=CODE,delta=1
    99                           	psect	text72,global,reloc=2,class=CODE,delta=1
   100                           	psect	text73,global,reloc=2,class=CODE,delta=1
   101                           	psect	text74,global,reloc=2,class=CODE,delta=1
   102                           	psect	text75,global,reloc=2,class=CODE,delta=1
   103                           	psect	text76,global,reloc=2,class=CODE,delta=1
   104                           	psect	text77,global,reloc=2,class=CODE,delta=1
   105                           	psect	text78,global,reloc=2,class=CODE,delta=1
   106                           	psect	text79,global,reloc=2,class=CODE,delta=1
   107                           	psect	text80,global,reloc=2,class=CODE,delta=1
   108                           	psect	text81,global,reloc=2,class=CODE,delta=1
   109                           	psect	text82,global,reloc=2,class=CODE,delta=1
   110                           	psect	text83,global,reloc=2,class=CODE,delta=1
   111                           	psect	text84,global,reloc=2,class=CODE,delta=1
   112                           	psect	text85,global,reloc=2,class=CODE,delta=1
   113                           	psect	text86,global,reloc=2,class=CODE,delta=1
   114                           	psect	text87,global,reloc=2,class=CODE,delta=1
   115                           	psect	text88,global,reloc=2,class=CODE,delta=1
   116                           	psect	text89,global,reloc=2,class=CODE,delta=1
   117                           	psect	text90,global,reloc=2,class=CODE,delta=1
   118                           	psect	text91,global,reloc=2,class=CODE,delta=1
   119                           	psect	text92,global,reloc=2,class=CODE,delta=1
   120                           	psect	text93,global,reloc=2,class=CODE,delta=1
   121                           	psect	text94,global,reloc=2,class=CODE,delta=1
   122                           	psect	text95,global,reloc=2,class=CODE,delta=1
   123                           	psect	text96,global,reloc=2,class=CODE,delta=1
   124                           	psect	text97,global,reloc=2,class=CODE,delta=1
   125                           	psect	text98,global,reloc=2,class=CODE,delta=1
   126                           	psect	text99,global,reloc=2,class=CODE,delta=1
   127                           	psect	text100,global,reloc=2,class=CODE,delta=1
   128                           	psect	text101,global,reloc=2,class=CODE,delta=1
   129                           	psect	text102,global,reloc=2,class=CODE,delta=1
   130                           	psect	text103,global,reloc=2,class=CODE,delta=1
   131                           	psect	text104,global,reloc=2,class=CODE,delta=1
   132                           	psect	text105,global,reloc=2,class=CODE,delta=1
   133                           	psect	text106,global,reloc=2,class=CODE,delta=1
   134                           	psect	text107,global,reloc=2,class=CODE,delta=1
   135                           	psect	text108,global,reloc=2,class=CODE,delta=1
   136                           	psect	text109,global,reloc=2,class=CODE,delta=1
   137                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   138                           	psect	text111,global,reloc=2,class=CODE,delta=1
   139                           	psect	text112,global,reloc=2,class=CODE,delta=1
   140                           	psect	text113,global,reloc=2,class=CODE,delta=1
   141                           	psect	text114,global,reloc=2,class=CODE,delta=1
   142                           	psect	text115,global,reloc=2,class=CODE,delta=1
   143                           	psect	text116,global,reloc=2,class=CODE,delta=1
   144                           	psect	text117,global,reloc=2,class=CODE,delta=1
   145                           	psect	text118,global,reloc=2,class=CODE,delta=1
   146                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   147                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   148                           	psect	text120,global,reloc=2,class=CODE,delta=1
   149                           	psect	text121,global,reloc=2,class=CODE,delta=1
   150                           	psect	text122,global,reloc=2,class=CODE,delta=1
   151                           	psect	text123,global,reloc=2,class=CODE,delta=1
   152                           	psect	text124,global,reloc=2,class=CODE,delta=1
   153                           	psect	text125,global,reloc=2,class=CODE,delta=1
   154                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   155                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   156  0000                     
   157                           	psect	idataCOMRAM
   158  00AA78                     __pidataCOMRAM:
   159                           	opt stack 0
   160                           
   161                           ;initializer for _IRbitPosition
   162  00AA78  20                 	db	32
   163                           
   164                           ;initializer for _IRcodePlace
   165  00AA79  01                 	db	1
   166                           
   167                           ;initializer for _RF_IR
   168  00AA7A  37                 	db	55
   169                           
   170                           ;initializer for _RF_IR_Postscaler
   171  00AA7B  02                 	db	2
   172                           
   173                           ;initializer for _ReceivingIR
   174  00AA7C  0D                 	db	13
   175                           
   176                           	psect	idataBANK0
   177  00AA88                     __pidataBANK0:
   178                           	opt stack 0
   179                           
   180                           ;initializer for _Sent
   181  00AA88  01                 	db	1
   182                           
   183                           	psect	idataBANK3
   184  00AA7D                     __pidataBANK3:
   185                           	opt stack 0
   186                           
   187                           ;initializer for _IRtimeout
   188  00AA7D  1389               	dw	5001
   189  00AA7F  0000               	dw	0
   190                           
   191                           	psect	idataBANK5
   192  00A620                     __pidataBANK5:
   193                           	opt stack 0
   194                           
   195                           ;initializer for _ProductName
   196  00A620  48                 	db	72
   197  00A621  6F                 	db	111
   198  00A622  6D                 	db	109
   199  00A623  65                 	db	101
   200  00A624  20                 	db	32
   201  00A625  41                 	db	65
   202  00A626  75                 	db	117
   203  00A627  74                 	db	116
   204  00A628  6F                 	db	111
   205  00A629  6D                 	db	109
   206  00A62A  61                 	db	97
   207  00A62B  74                 	db	116
   208  00A62C  69                 	db	105
   209  00A62D  6F                 	db	111
   210  00A62E  6E                 	db	110
   211  00A62F  00                 	db	0
   212  00A630  00                 	db	0
   213  00A631  00                 	db	0
   214  00A632  00                 	db	0
   215  00A633  00                 	db	0
   216  00A634  00                 	db	0
   217  00A635  00                 	db	0
   218  00A636  00                 	db	0
   219  00A637  00                 	db	0
   220  00A638  00                 	db	0
   221  00A639  00                 	db	0
   222  00A63A  00                 	db	0
   223  00A63B  00                 	db	0
   224  00A63C  00                 	db	0
   225  00A63D  00                 	db	0
   226  00A63E  00                 	db	0
   227  00A63F  00                 	db	0
   228  00A640  00                 	db	0
   229  00A641  00                 	db	0
   230  00A642  00                 	db	0
   231  00A643  00                 	db	0
   232  00A644  00                 	db	0
   233  00A645  00                 	db	0
   234  00A646  00                 	db	0
   235  00A647  00                 	db	0
   236  00A648  00                 	db	0
   237  00A649  00                 	db	0
   238  00A64A  00                 	db	0
   239  00A64B  00                 	db	0
   240  00A64C  00                 	db	0
   241  00A64D  00                 	db	0
   242  00A64E  00                 	db	0
   243  00A64F  00                 	db	0
   244  00A650  00                 	db	0
   245  00A651  00                 	db	0
   246                           
   247                           	psect	mediumconst
   248  00EDC2                     __pmediumconst:
   249                           	opt stack 0
   250  00EDC2  00                 	db	0
   251  00EDC3                     _dpowers:
   252                           	opt stack 0
   253  00EDC3  0001               	dw	1
   254  00EDC5  0000               	dw	0
   255  00EDC7  000A               	dw	10
   256  00EDC9  0000               	dw	0
   257  00EDCB  0064               	dw	100
   258  00EDCD  0000               	dw	0
   259  00EDCF  03E8               	dw	1000
   260  00EDD1  0000               	dw	0
   261  00EDD3  2710               	dw	10000
   262  00EDD5  0000               	dw	0
   263  00EDD7  86A0               	dw	34464
   264  00EDD9  0001               	dw	1
   265  00EDDB  4240               	dw	16960
   266  00EDDD  000F               	dw	15
   267  00EDDF  9680               	dw	38528
   268  00EDE1  0098               	dw	152
   269  00EDE3  E100               	dw	57600
   270  00EDE5  05F5               	dw	1525
   271  00EDE7  CA00               	dw	51712
   272  00EDE9  3B9A               	dw	15258
   273  00EDEB                     __end_of_dpowers:
   274                           	opt stack 0
   275  00EDEB                     __npowers_:
   276                           	opt stack 0
   277  00EDEB  00                 	db	0
   278  00EDEC  80                 	db	128
   279  00EDED  3F                 	db	63
   280  00EDEE  CD                 	db	205
   281  00EDEF  CC                 	db	204
   282  00EDF0  3D                 	db	61
   283  00EDF1  D7                 	db	215
   284  00EDF2  23                 	db	35
   285  00EDF3  3C                 	db	60
   286  00EDF4  12                 	db	18
   287  00EDF5  83                 	db	131
   288  00EDF6  3A                 	db	58
   289  00EDF7  B7                 	db	183
   290  00EDF8  D1                 	db	209
   291  00EDF9  38                 	db	56
   292  00EDFA  C6                 	db	198
   293  00EDFB  27                 	db	39
   294  00EDFC  37                 	db	55
   295  00EDFD  38                 	db	56
   296  00EDFE  86                 	db	134
   297  00EDFF  35                 	db	53
   298  00EE00  C0                 	db	192
   299  00EE01  D6                 	db	214
   300  00EE02  33                 	db	51
   301  00EE03  CC                 	db	204
   302  00EE04  2B                 	db	43
   303  00EE05  32                 	db	50
   304  00EE06  70                 	db	112
   305  00EE07  89                 	db	137
   306  00EE08  30                 	db	48
   307  00EE09  E7                 	db	231
   308  00EE0A  DB                 	db	219
   309  00EE0B  2E                 	db	46
   310  00EE0C  E5                 	db	229
   311  00EE0D  3C                 	db	60
   312  00EE0E  1E                 	db	30
   313  00EE0F  42                 	db	66
   314  00EE10  A2                 	db	162
   315  00EE11  0D                 	db	13
   316  00EE12                     __end_of__npowers_:
   317                           	opt stack 0
   318  00EE12                     __powers_:
   319                           	opt stack 0
   320  00EE12  00                 	db	0
   321  00EE13  80                 	db	128
   322  00EE14  3F                 	db	63
   323  00EE15  00                 	db	0
   324  00EE16  20                 	db	32
   325  00EE17  41                 	db	65
   326  00EE18  00                 	db	0
   327  00EE19  C8                 	db	200
   328  00EE1A  42                 	db	66
   329  00EE1B  00                 	db	0
   330  00EE1C  7A                 	db	122
   331  00EE1D  44                 	db	68
   332  00EE1E  40                 	db	64
   333  00EE1F  1C                 	db	28
   334  00EE20  46                 	db	70
   335  00EE21  50                 	db	80
   336  00EE22  C3                 	db	195
   337  00EE23  47                 	db	71
   338  00EE24  24                 	db	36
   339  00EE25  74                 	db	116
   340  00EE26  49                 	db	73
   341  00EE27  97                 	db	151
   342  00EE28  18                 	db	24
   343  00EE29  4B                 	db	75
   344  00EE2A  BC                 	db	188
   345  00EE2B  BE                 	db	190
   346  00EE2C  4C                 	db	76
   347  00EE2D  6B                 	db	107
   348  00EE2E  6E                 	db	110
   349  00EE2F  4E                 	db	78
   350  00EE30  03                 	db	3
   351  00EE31  15                 	db	21
   352  00EE32  50                 	db	80
   353  00EE33  79                 	db	121
   354  00EE34  AD                 	db	173
   355  00EE35  60                 	db	96
   356  00EE36  F3                 	db	243
   357  00EE37  49                 	db	73
   358  00EE38  71                 	db	113
   359  00EE39                     __end_of__powers_:
   360                           	opt stack 0
   361  00EE39                     _hexpowers:
   362                           	opt stack 0
   363  00EE39  0001               	dw	1
   364  00EE3B  0000               	dw	0
   365  00EE3D  0010               	dw	16
   366  00EE3F  0000               	dw	0
   367  00EE41  0100               	dw	256
   368  00EE43  0000               	dw	0
   369  00EE45  1000               	dw	4096
   370  00EE47  0000               	dw	0
   371  00EE49  0000               	dw	0
   372  00EE4B  0001               	dw	1
   373  00EE4D  0000               	dw	0
   374  00EE4F  0010               	dw	16
   375  00EE51  0000               	dw	0
   376  00EE53  0100               	dw	256
   377  00EE55  0000               	dw	0
   378  00EE57  1000               	dw	4096
   379  00EE59                     __end_of_hexpowers:
   380                           	opt stack 0
   381  00EE59                     _ProjectName:
   382                           	opt stack 0
   383  00EE59  48                 	db	72
   384  00EE5A  6F                 	db	111
   385  00EE5B  6D                 	db	109
   386  00EE5C  65                 	db	101
   387  00EE5D  20                 	db	32
   388  00EE5E  41                 	db	65
   389  00EE5F  75                 	db	117
   390  00EE60  74                 	db	116
   391  00EE61  6F                 	db	111
   392  00EE62  6D                 	db	109
   393  00EE63  61                 	db	97
   394  00EE64  74                 	db	116
   395  00EE65  69                 	db	105
   396  00EE66  6F                 	db	111
   397  00EE67  6E                 	db	110
   398  00EE68  20                 	db	32
   399  00EE69  49                 	db	73
   400  00EE6A  52                 	db	82
   401  00EE6B  2F                 	db	47
   402  00EE6C  52                 	db	82
   403  00EE6D  46                 	db	70
   404  00EE6E  20                 	db	32
   405  00EE6F  48                 	db	72
   406  00EE70  75                 	db	117
   407  00EE71  62                 	db	98
   408  00EE72  00                 	db	0
   409  00EE73                     __end_of_ProjectName:
   410                           	opt stack 0
   411  00EE73                     _Conf2_ChannelH_1_OFF_STR:
   412                           	opt stack 0
   413  00EE73  43                 	db	67
   414  00EE74  6F                 	db	111
   415  00EE75  6E                 	db	110
   416  00EE76  66                 	db	102
   417  00EE77  32                 	db	50
   418  00EE78  5F                 	db	95
   419  00EE79  43                 	db	67
   420  00EE7A  68                 	db	104
   421  00EE7B  61                 	db	97
   422  00EE7C  6E                 	db	110
   423  00EE7D  6E                 	db	110
   424  00EE7E  65                 	db	101
   425  00EE7F  6C                 	db	108
   426  00EE80  48                 	db	72
   427  00EE81  5F                 	db	95
   428  00EE82  31                 	db	49
   429  00EE83  5F                 	db	95
   430  00EE84  4F                 	db	79
   431  00EE85  46                 	db	70
   432  00EE86  46                 	db	70
   433  00EE87  00                 	db	0
   434  00EE88                     __end_of_Conf2_ChannelH_1_OFF_STR:
   435                           	opt stack 0
   436  00EE88                     _Conf2_ChannelH_2_OFF_STR:
   437                           	opt stack 0
   438  00EE88  43                 	db	67
   439  00EE89  6F                 	db	111
   440  00EE8A  6E                 	db	110
   441  00EE8B  66                 	db	102
   442  00EE8C  32                 	db	50
   443  00EE8D  5F                 	db	95
   444  00EE8E  43                 	db	67
   445  00EE8F  68                 	db	104
   446  00EE90  61                 	db	97
   447  00EE91  6E                 	db	110
   448  00EE92  6E                 	db	110
   449  00EE93  65                 	db	101
   450  00EE94  6C                 	db	108
   451  00EE95  48                 	db	72
   452  00EE96  5F                 	db	95
   453  00EE97  32                 	db	50
   454  00EE98  5F                 	db	95
   455  00EE99  4F                 	db	79
   456  00EE9A  46                 	db	70
   457  00EE9B  46                 	db	70
   458  00EE9C  00                 	db	0
   459  00EE9D                     __end_of_Conf2_ChannelH_2_OFF_STR:
   460                           	opt stack 0
   461  00EE9D                     _Conf2_ChannelH_3_OFF_STR:
   462                           	opt stack 0
   463  00EE9D  43                 	db	67
   464  00EE9E  6F                 	db	111
   465  00EE9F  6E                 	db	110
   466  00EEA0  66                 	db	102
   467  00EEA1  32                 	db	50
   468  00EEA2  5F                 	db	95
   469  00EEA3  43                 	db	67
   470  00EEA4  68                 	db	104
   471  00EEA5  61                 	db	97
   472  00EEA6  6E                 	db	110
   473  00EEA7  6E                 	db	110
   474  00EEA8  65                 	db	101
   475  00EEA9  6C                 	db	108
   476  00EEAA  48                 	db	72
   477  00EEAB  5F                 	db	95
   478  00EEAC  33                 	db	51
   479  00EEAD  5F                 	db	95
   480  00EEAE  4F                 	db	79
   481  00EEAF  46                 	db	70
   482  00EEB0  46                 	db	70
   483  00EEB1  00                 	db	0
   484  00EEB2                     __end_of_Conf2_ChannelH_3_OFF_STR:
   485                           	opt stack 0
   486  00EEB2                     _Conf2_ChannelH_1_ON_STR:
   487                           	opt stack 0
   488  00EEB2  43                 	db	67
   489  00EEB3  6F                 	db	111
   490  00EEB4  6E                 	db	110
   491  00EEB5  66                 	db	102
   492  00EEB6  32                 	db	50
   493  00EEB7  5F                 	db	95
   494  00EEB8  43                 	db	67
   495  00EEB9  68                 	db	104
   496  00EEBA  61                 	db	97
   497  00EEBB  6E                 	db	110
   498  00EEBC  6E                 	db	110
   499  00EEBD  65                 	db	101
   500  00EEBE  6C                 	db	108
   501  00EEBF  48                 	db	72
   502  00EEC0  5F                 	db	95
   503  00EEC1  31                 	db	49
   504  00EEC2  5F                 	db	95
   505  00EEC3  4F                 	db	79
   506  00EEC4  4E                 	db	78
   507  00EEC5  00                 	db	0
   508  00EEC6                     __end_of_Conf2_ChannelH_1_ON_STR:
   509                           	opt stack 0
   510  00EEC6                     _Conf2_ChannelH_2_ON_STR:
   511                           	opt stack 0
   512  00EEC6  43                 	db	67
   513  00EEC7  6F                 	db	111
   514  00EEC8  6E                 	db	110
   515  00EEC9  66                 	db	102
   516  00EECA  32                 	db	50
   517  00EECB  5F                 	db	95
   518  00EECC  43                 	db	67
   519  00EECD  68                 	db	104
   520  00EECE  61                 	db	97
   521  00EECF  6E                 	db	110
   522  00EED0  6E                 	db	110
   523  00EED1  65                 	db	101
   524  00EED2  6C                 	db	108
   525  00EED3  48                 	db	72
   526  00EED4  5F                 	db	95
   527  00EED5  32                 	db	50
   528  00EED6  5F                 	db	95
   529  00EED7  4F                 	db	79
   530  00EED8  4E                 	db	78
   531  00EED9  00                 	db	0
   532  00EEDA                     __end_of_Conf2_ChannelH_2_ON_STR:
   533                           	opt stack 0
   534  00EEDA                     _Conf2_ChannelH_3_ON_STR:
   535                           	opt stack 0
   536  00EEDA  43                 	db	67
   537  00EEDB  6F                 	db	111
   538  00EEDC  6E                 	db	110
   539  00EEDD  66                 	db	102
   540  00EEDE  32                 	db	50
   541  00EEDF  5F                 	db	95
   542  00EEE0  43                 	db	67
   543  00EEE1  68                 	db	104
   544  00EEE2  61                 	db	97
   545  00EEE3  6E                 	db	110
   546  00EEE4  6E                 	db	110
   547  00EEE5  65                 	db	101
   548  00EEE6  6C                 	db	108
   549  00EEE7  48                 	db	72
   550  00EEE8  5F                 	db	95
   551  00EEE9  33                 	db	51
   552  00EEEA  5F                 	db	95
   553  00EEEB  4F                 	db	79
   554  00EEEC  4E                 	db	78
   555  00EEED  00                 	db	0
   556  00EEEE                     __end_of_Conf2_ChannelH_3_ON_STR:
   557                           	opt stack 0
   558  00EEEE                     _Conf2_ChannelB_OFF_STR:
   559                           	opt stack 0
   560  00EEEE  43                 	db	67
   561  00EEEF  6F                 	db	111
   562  00EEF0  6E                 	db	110
   563  00EEF1  66                 	db	102
   564  00EEF2  32                 	db	50
   565  00EEF3  5F                 	db	95
   566  00EEF4  43                 	db	67
   567  00EEF5  68                 	db	104
   568  00EEF6  61                 	db	97
   569  00EEF7  6E                 	db	110
   570  00EEF8  6E                 	db	110
   571  00EEF9  65                 	db	101
   572  00EEFA  6C                 	db	108
   573  00EEFB  42                 	db	66
   574  00EEFC  5F                 	db	95
   575  00EEFD  4F                 	db	79
   576  00EEFE  46                 	db	70
   577  00EEFF  46                 	db	70
   578  00EF00  00                 	db	0
   579  00EF01                     __end_of_Conf2_ChannelB_OFF_STR:
   580                           	opt stack 0
   581  00EF01                     _Conf2_ChannelD_OFF_STR:
   582                           	opt stack 0
   583  00EF01  43                 	db	67
   584  00EF02  6F                 	db	111
   585  00EF03  6E                 	db	110
   586  00EF04  66                 	db	102
   587  00EF05  32                 	db	50
   588  00EF06  5F                 	db	95
   589  00EF07  43                 	db	67
   590  00EF08  68                 	db	104
   591  00EF09  61                 	db	97
   592  00EF0A  6E                 	db	110
   593  00EF0B  6E                 	db	110
   594  00EF0C  65                 	db	101
   595  00EF0D  6C                 	db	108
   596  00EF0E  44                 	db	68
   597  00EF0F  5F                 	db	95
   598  00EF10  4F                 	db	79
   599  00EF11  46                 	db	70
   600  00EF12  46                 	db	70
   601  00EF13  00                 	db	0
   602  00EF14                     __end_of_Conf2_ChannelD_OFF_STR:
   603                           	opt stack 0
   604  00EF14                     _Conf2_ChannelB_ON_STR:
   605                           	opt stack 0
   606  00EF14  43                 	db	67
   607  00EF15  6F                 	db	111
   608  00EF16  6E                 	db	110
   609  00EF17  66                 	db	102
   610  00EF18  32                 	db	50
   611  00EF19  5F                 	db	95
   612  00EF1A  43                 	db	67
   613  00EF1B  68                 	db	104
   614  00EF1C  61                 	db	97
   615  00EF1D  6E                 	db	110
   616  00EF1E  6E                 	db	110
   617  00EF1F  65                 	db	101
   618  00EF20  6C                 	db	108
   619  00EF21  42                 	db	66
   620  00EF22  5F                 	db	95
   621  00EF23  4F                 	db	79
   622  00EF24  4E                 	db	78
   623  00EF25  00                 	db	0
   624  00EF26                     __end_of_Conf2_ChannelB_ON_STR:
   625                           	opt stack 0
   626  00EF26                     _Conf2_ChannelD_ON_STR:
   627                           	opt stack 0
   628  00EF26  43                 	db	67
   629  00EF27  6F                 	db	111
   630  00EF28  6E                 	db	110
   631  00EF29  66                 	db	102
   632  00EF2A  32                 	db	50
   633  00EF2B  5F                 	db	95
   634  00EF2C  43                 	db	67
   635  00EF2D  68                 	db	104
   636  00EF2E  61                 	db	97
   637  00EF2F  6E                 	db	110
   638  00EF30  6E                 	db	110
   639  00EF31  65                 	db	101
   640  00EF32  6C                 	db	108
   641  00EF33  44                 	db	68
   642  00EF34  5F                 	db	95
   643  00EF35  4F                 	db	79
   644  00EF36  4E                 	db	78
   645  00EF37  00                 	db	0
   646  00EF38                     __end_of_Conf2_ChannelD_ON_STR:
   647                           	opt stack 0
   648  00EF38                     _Conf2_ChannelB_OFF:
   649                           	opt stack 0
   650  00EF38  00                 	db	0
   651  00EF39  01                 	db	1
   652  00EF3A  01                 	db	1
   653  00EF3B  00                 	db	0
   654  00EF3C  01                 	db	1
   655  00EF3D  00                 	db	0
   656  00EF3E  00                 	db	0
   657  00EF3F  00                 	db	0
   658  00EF40  00                 	db	0
   659  00EF41  00                 	db	0
   660  00EF42  00                 	db	0
   661  00EF43  01                 	db	1
   662  00EF44  00                 	db	0
   663  00EF45  01                 	db	1
   664  00EF46  00                 	db	0
   665  00EF47  00                 	db	0
   666  00EF48                     __end_of_Conf2_ChannelB_OFF:
   667                           	opt stack 0
   668  00EF48                     _Conf2_ChannelB_ON:
   669                           	opt stack 0
   670  00EF48  00                 	db	0
   671  00EF49  01                 	db	1
   672  00EF4A  01                 	db	1
   673  00EF4B  00                 	db	0
   674  00EF4C  01                 	db	1
   675  00EF4D  00                 	db	0
   676  00EF4E  00                 	db	0
   677  00EF4F  00                 	db	0
   678  00EF50  00                 	db	0
   679  00EF51  00                 	db	0
   680  00EF52  01                 	db	1
   681  00EF53  00                 	db	0
   682  00EF54  00                 	db	0
   683  00EF55  01                 	db	1
   684  00EF56  00                 	db	0
   685  00EF57  00                 	db	0
   686  00EF58                     __end_of_Conf2_ChannelB_ON:
   687                           	opt stack 0
   688  00EF58                     _Conf2_ChannelD_OFF:
   689                           	opt stack 0
   690  00EF58  00                 	db	0
   691  00EF59  01                 	db	1
   692  00EF5A  01                 	db	1
   693  00EF5B  00                 	db	0
   694  00EF5C  01                 	db	1
   695  00EF5D  00                 	db	0
   696  00EF5E  00                 	db	0
   697  00EF5F  00                 	db	0
   698  00EF60  00                 	db	0
   699  00EF61  00                 	db	0
   700  00EF62  00                 	db	0
   701  00EF63  01                 	db	1
   702  00EF64  00                 	db	0
   703  00EF65  00                 	db	0
   704  00EF66  00                 	db	0
   705  00EF67  01                 	db	1
   706  00EF68                     __end_of_Conf2_ChannelD_OFF:
   707                           	opt stack 0
   708  00EF68                     _Conf2_ChannelD_ON:
   709                           	opt stack 0
   710  00EF68  00                 	db	0
   711  00EF69  01                 	db	1
   712  00EF6A  01                 	db	1
   713  00EF6B  00                 	db	0
   714  00EF6C  01                 	db	1
   715  00EF6D  00                 	db	0
   716  00EF6E  00                 	db	0
   717  00EF6F  00                 	db	0
   718  00EF70  00                 	db	0
   719  00EF71  00                 	db	0
   720  00EF72  01                 	db	1
   721  00EF73  00                 	db	0
   722  00EF74  00                 	db	0
   723  00EF75  00                 	db	0
   724  00EF76  00                 	db	0
   725  00EF77  01                 	db	1
   726  00EF78                     __end_of_Conf2_ChannelD_ON:
   727                           	opt stack 0
   728  00EF78                     _Conf2_ChannelH_1_OFF:
   729                           	opt stack 0
   730  00EF78  00                 	db	0
   731  00EF79  01                 	db	1
   732  00EF7A  01                 	db	1
   733  00EF7B  00                 	db	0
   734  00EF7C  01                 	db	1
   735  00EF7D  00                 	db	0
   736  00EF7E  00                 	db	0
   737  00EF7F  00                 	db	0
   738  00EF80  00                 	db	0
   739  00EF81  01                 	db	1
   740  00EF82  00                 	db	0
   741  00EF83  00                 	db	0
   742  00EF84  00                 	db	0
   743  00EF85  00                 	db	0
   744  00EF86  00                 	db	0
   745  00EF87  00                 	db	0
   746  00EF88                     __end_of_Conf2_ChannelH_1_OFF:
   747                           	opt stack 0
   748  00EF88                     _Conf2_ChannelH_1_ON:
   749                           	opt stack 0
   750  00EF88  00                 	db	0
   751  00EF89  01                 	db	1
   752  00EF8A  01                 	db	1
   753  00EF8B  00                 	db	0
   754  00EF8C  01                 	db	1
   755  00EF8D  00                 	db	0
   756  00EF8E  00                 	db	0
   757  00EF8F  00                 	db	0
   758  00EF90  01                 	db	1
   759  00EF91  00                 	db	0
   760  00EF92  00                 	db	0
   761  00EF93  00                 	db	0
   762  00EF94  00                 	db	0
   763  00EF95  00                 	db	0
   764  00EF96  00                 	db	0
   765  00EF97  00                 	db	0
   766  00EF98                     __end_of_Conf2_ChannelH_1_ON:
   767                           	opt stack 0
   768  00EF98                     _Conf2_ChannelH_2_OFF:
   769                           	opt stack 0
   770  00EF98  00                 	db	0
   771  00EF99  01                 	db	1
   772  00EF9A  01                 	db	1
   773  00EF9B  00                 	db	0
   774  00EF9C  01                 	db	1
   775  00EF9D  00                 	db	0
   776  00EF9E  00                 	db	0
   777  00EF9F  00                 	db	0
   778  00EFA0  00                 	db	0
   779  00EFA1  00                 	db	0
   780  00EFA2  00                 	db	0
   781  00EFA3  01                 	db	1
   782  00EFA4  00                 	db	0
   783  00EFA5  00                 	db	0
   784  00EFA6  00                 	db	0
   785  00EFA7  00                 	db	0
   786  00EFA8                     __end_of_Conf2_ChannelH_2_OFF:
   787                           	opt stack 0
   788  00EFA8                     _Conf2_ChannelH_2_ON:
   789                           	opt stack 0
   790  00EFA8  00                 	db	0
   791  00EFA9  01                 	db	1
   792  00EFAA  01                 	db	1
   793  00EFAB  00                 	db	0
   794  00EFAC  01                 	db	1
   795  00EFAD  00                 	db	0
   796  00EFAE  00                 	db	0
   797  00EFAF  00                 	db	0
   798  00EFB0  00                 	db	0
   799  00EFB1  00                 	db	0
   800  00EFB2  01                 	db	1
   801  00EFB3  00                 	db	0
   802  00EFB4  00                 	db	0
   803  00EFB5  00                 	db	0
   804  00EFB6  00                 	db	0
   805  00EFB7  00                 	db	0
   806  00EFB8                     __end_of_Conf2_ChannelH_2_ON:
   807                           	opt stack 0
   808  00EFB8                     _Conf2_ChannelH_3_OFF:
   809                           	opt stack 0
   810  00EFB8  00                 	db	0
   811  00EFB9  01                 	db	1
   812  00EFBA  01                 	db	1
   813  00EFBB  00                 	db	0
   814  00EFBC  01                 	db	1
   815  00EFBD  00                 	db	0
   816  00EFBE  01                 	db	1
   817  00EFBF  00                 	db	0
   818  00EFC0  00                 	db	0
   819  00EFC1  00                 	db	0
   820  00EFC2  00                 	db	0
   821  00EFC3  00                 	db	0
   822  00EFC4  00                 	db	0
   823  00EFC5  00                 	db	0
   824  00EFC6  00                 	db	0
   825  00EFC7  00                 	db	0
   826  00EFC8                     __end_of_Conf2_ChannelH_3_OFF:
   827                           	opt stack 0
   828  00EFC8                     _Conf2_ChannelH_3_ON:
   829                           	opt stack 0
   830  00EFC8  00                 	db	0
   831  00EFC9  01                 	db	1
   832  00EFCA  01                 	db	1
   833  00EFCB  00                 	db	0
   834  00EFCC  01                 	db	1
   835  00EFCD  00                 	db	0
   836  00EFCE  00                 	db	0
   837  00EFCF  01                 	db	1
   838  00EFD0  00                 	db	0
   839  00EFD1  00                 	db	0
   840  00EFD2  00                 	db	0
   841  00EFD3  00                 	db	0
   842  00EFD4  00                 	db	0
   843  00EFD5  00                 	db	0
   844  00EFD6  00                 	db	0
   845  00EFD7  00                 	db	0
   846  00EFD8                     __end_of_Conf2_ChannelH_3_ON:
   847                           	opt stack 0
   848  00EFD8                     _Conf1_ChannelD_STR:
   849                           	opt stack 0
   850  00EFD8  43                 	db	67
   851  00EFD9  6F                 	db	111
   852  00EFDA  6E                 	db	110
   853  00EFDB  66                 	db	102
   854  00EFDC  31                 	db	49
   855  00EFDD  5F                 	db	95
   856  00EFDE  43                 	db	67
   857  00EFDF  68                 	db	104
   858  00EFE0  61                 	db	97
   859  00EFE1  6E                 	db	110
   860  00EFE2  6E                 	db	110
   861  00EFE3  65                 	db	101
   862  00EFE4  6C                 	db	108
   863  00EFE5  44                 	db	68
   864  00EFE6  00                 	db	0
   865  00EFE7                     __end_of_Conf1_ChannelD_STR:
   866                           	opt stack 0
   867  00EFE7                     _Conf1_ChannelE_STR:
   868                           	opt stack 0
   869  00EFE7  43                 	db	67
   870  00EFE8  6F                 	db	111
   871  00EFE9  6E                 	db	110
   872  00EFEA  66                 	db	102
   873  00EFEB  31                 	db	49
   874  00EFEC  5F                 	db	95
   875  00EFED  43                 	db	67
   876  00EFEE  68                 	db	104
   877  00EFEF  61                 	db	97
   878  00EFF0  6E                 	db	110
   879  00EFF1  6E                 	db	110
   880  00EFF2  65                 	db	101
   881  00EFF3  6C                 	db	108
   882  00EFF4  45                 	db	69
   883  00EFF5  00                 	db	0
   884  00EFF6                     __end_of_Conf1_ChannelE_STR:
   885                           	opt stack 0
   886  00EFF6                     _Conf1_ChannelF_STR:
   887                           	opt stack 0
   888  00EFF6  43                 	db	67
   889  00EFF7  6F                 	db	111
   890  00EFF8  6E                 	db	110
   891  00EFF9  66                 	db	102
   892  00EFFA  31                 	db	49
   893  00EFFB  5F                 	db	95
   894  00EFFC  43                 	db	67
   895  00EFFD  68                 	db	104
   896  00EFFE  61                 	db	97
   897  00EFFF  6E                 	db	110
   898  00F000  6E                 	db	110
   899  00F001  65                 	db	101
   900  00F002  6C                 	db	108
   901  00F003  46                 	db	70
   902  00F004  00                 	db	0
   903  00F005                     __end_of_Conf1_ChannelF_STR:
   904                           	opt stack 0
   905  00F005                     _SYNTAX_ERR:
   906                           	opt stack 0
   907  00F005  45                 	db	69
   908  00F006  72                 	db	114
   909  00F007  72                 	db	114
   910  00F008  6F                 	db	111
   911  00F009  72                 	db	114
   912  00F00A  3A                 	db	58
   913  00F00B  20                 	db	32
   914  00F00C  53                 	db	83
   915  00F00D  79                 	db	121
   916  00F00E  6E                 	db	110
   917  00F00F  74                 	db	116
   918  00F010  61                 	db	97
   919  00F011  78                 	db	120
   920  00F012  00                 	db	0
   921  00F013                     __end_of_SYNTAX_ERR:
   922                           	opt stack 0
   923  00F013                     _Conf1_ChannelD:
   924                           	opt stack 0
   925  00F013  03                 	db	3
   926  00F014  03                 	db	3
   927  00F015  03                 	db	3
   928  00F016  03                 	db	3
   929  00F017  03                 	db	3
   930  00F018  03                 	db	3
   931  00F019  00                 	db	0
   932  00F01A  00                 	db	0
   933  00F01B  01                 	db	1
   934  00F01C  00                 	db	0
   935  00F01D  00                 	db	0
   936  00F01E  00                 	db	0
   937  00F01F                     __end_of_Conf1_ChannelD:
   938                           	opt stack 0
   939  00F01F                     _Conf1_ChannelE:
   940                           	opt stack 0
   941  00F01F  00                 	db	0
   942  00F020  03                 	db	3
   943  00F021  03                 	db	3
   944  00F022  03                 	db	3
   945  00F023  03                 	db	3
   946  00F024  03                 	db	3
   947  00F025  00                 	db	0
   948  00F026  00                 	db	0
   949  00F027  01                 	db	1
   950  00F028  00                 	db	0
   951  00F029  00                 	db	0
   952  00F02A  00                 	db	0
   953  00F02B                     __end_of_Conf1_ChannelE:
   954                           	opt stack 0
   955  00F02B                     _Conf1_ChannelF:
   956                           	opt stack 0
   957  00F02B  03                 	db	3
   958  00F02C  00                 	db	0
   959  00F02D  03                 	db	3
   960  00F02E  03                 	db	3
   961  00F02F  03                 	db	3
   962  00F030  03                 	db	3
   963  00F031  00                 	db	0
   964  00F032  00                 	db	0
   965  00F033  01                 	db	1
   966  00F034  00                 	db	0
   967  00F035  00                 	db	0
   968  00F036  00                 	db	0
   969  00F037                     __end_of_Conf1_ChannelF:
   970                           	opt stack 0
   971  00F037                     _FirmVersion:
   972                           	opt stack 0
   973  00F037  31                 	db	49
   974  00F038  2E                 	db	46
   975  00F039  30                 	db	48
   976  00F03A  5F                 	db	95
   977  00F03B  44                 	db	68
   978  00F03C  57                 	db	87
   979  00F03D  30                 	db	48
   980  00F03E  64                 	db	100
   981  00F03F  00                 	db	0
   982  00F040                     __end_of_FirmVersion:
   983                           	opt stack 0
   984  00F040                     _PCBVersion:
   985                           	opt stack 0
   986  00F040  52                 	db	82
   987  00F041  65                 	db	101
   988  00F042  76                 	db	118
   989  00F043  41                 	db	65
   990  00F044  00                 	db	0
   991  00F045                     __end_of_PCBVersion:
   992                           	opt stack 0
   993  00F045                     _Conf1_Channels:
   994                           	opt stack 0
   995  00F045  44                 	db	68
   996  00F046  45                 	db	69
   997  00F047  46                 	db	70
   998  00F048  00                 	db	0
   999  00F049                     __end_of_Conf1_Channels:
  1000                           	opt stack 0
  1001  00F049                     _Conf2_Channels:
  1002                           	opt stack 0
  1003  00F049  42                 	db	66
  1004  00F04A  44                 	db	68
  1005  00F04B  48                 	db	72
  1006  00F04C  00                 	db	0
  1007  00F04D                     __end_of_Conf2_Channels:
  1008                           	opt stack 0
  1009  00F04D                     _Frequency:
  1010                           	opt stack 0
  1011  00F04D  33                 	db	51
  1012  00F04E  31                 	db	49
  1013  00F04F  35                 	db	53
  1014  00F050  00                 	db	0
  1015  00F051                     __end_of_Frequency:
  1016                           	opt stack 0
  1017  00F051                     _CRLN:
  1018                           	opt stack 0
  1019  00F051  0D                 	db	13
  1020  00F052  0A                 	db	10
  1021  00F053  00                 	db	0
  1022  00F054                     __end_of_CRLN:
  1023                           	opt stack 0
  1024  0000                     _ADCON0	set	4034
  1025  0000                     _ADCON0bits	set	4034
  1026  0000                     _ADCON1	set	4033
  1027  0000                     _ADCON1bits	set	4033
  1028  0000                     _ADCON2	set	4032
  1029  0000                     _ADCON2bits	set	4032
  1030  0000                     _ADRESH	set	4036
  1031  0000                     _ADRESL	set	4035
  1032  0000                     _ANSEL	set	3966
  1033  0000                     _ANSELH	set	3967
  1034  0000                     _BAUDCONbits	set	4024
  1035  0000                     _EEADR	set	4009
  1036  0000                     _EEADRH	set	4010
  1037  0000                     _EECON1bits	set	4006
  1038  0000                     _EECON2	set	4007
  1039  0000                     _EEDATA	set	4008
  1040  0000                     _INTCON2bits	set	4081
  1041  0000                     _INTCONbits	set	4082
  1042  0000                     _IOCBbits	set	3965
  1043  0000                     _IPR1bits	set	3999
  1044  0000                     _IPR2bits	set	4002
  1045  0000                     _LATA	set	3977
  1046  0000                     _LATB	set	3978
  1047  0000                     _LATC	set	3979
  1048  0000                     _PIE1bits	set	3997
  1049  0000                     _PIE2bits	set	4000
  1050  0000                     _PIR1bits	set	3998
  1051  0000                     _PIR2bits	set	4001
  1052  0000                     _PORTA	set	3968
  1053  0000                     _PORTB	set	3969
  1054  0000                     _PORTC	set	3970
  1055  0000                     _PR2	set	4043
  1056  0000                     _RCONbits	set	4048
  1057  0000                     _RCREG	set	4014
  1058  0000                     _RCSTA	set	4011
  1059  0000                     _RCSTAbits	set	4011
  1060  0000                     _SPBRG	set	4015
  1061  0000                     _SPBRGH	set	4016
  1062  0000                     _T0CONbits	set	4053
  1063  0000                     _T1CONbits	set	4045
  1064  0000                     _T2CONbits	set	4042
  1065  0000                     _T3CONbits	set	4017
  1066  0000                     _TABLAT	set	4085
  1067  0000                     _TBLPTRH	set	4087
  1068  0000                     _TBLPTRL	set	4086
  1069  0000                     _TBLPTRU	set	4088
  1070  0000                     _TMR0H	set	4055
  1071  0000                     _TMR0L	set	4054
  1072  0000                     _TMR1H	set	4047
  1073  0000                     _TMR1L	set	4046
  1074  0000                     _TMR2	set	4044
  1075  0000                     _TMR3H	set	4019
  1076  0000                     _TMR3L	set	4018
  1077  0000                     _TRISAbits	set	3986
  1078  0000                     _TRISBbits	set	3987
  1079  0000                     _TRISCbits	set	3988
  1080  0000                     _TXREG	set	4013
  1081  0000                     _TXSTA	set	4012
  1082  0000                     _TXSTAbits	set	4012
  1083  0000                     _WPUB	set	3964
  1084  00F054                     STR_104:
  1085  00F054  45                 	db	69	;'E'
  1086  00F055  6E                 	db	110	;'n'
  1087  00F056  74                 	db	116	;'t'
  1088  00F057  65                 	db	101	;'e'
  1089  00F058  72                 	db	114	;'r'
  1090  00F059  65                 	db	101	;'e'
  1091  00F05A  64                 	db	100	;'d'
  1092  00F05B  20                 	db	32
  1093  00F05C  4E                 	db	78	;'N'
  1094  00F05D  61                 	db	97	;'a'
  1095  00F05E  6D                 	db	109	;'m'
  1096  00F05F  65                 	db	101	;'e'
  1097  00F060  20                 	db	32
  1098  00F061  69                 	db	105	;'i'
  1099  00F062  73                 	db	115	;'s'
  1100  00F063  20                 	db	32
  1101  00F064  74                 	db	116	;'t'
  1102  00F065  6F                 	db	111	;'o'
  1103  00F066  6F                 	db	111	;'o'
  1104  00F067  20                 	db	32
  1105  00F068  6C                 	db	108	;'l'
  1106  00F069  6F                 	db	111	;'o'
  1107  00F06A  6E                 	db	110	;'n'
  1108  00F06B  67                 	db	103	;'g'
  1109  00F06C  2E                 	db	46
  1110  00F06D  20                 	db	32
  1111  00F06E  4E                 	db	78	;'N'
  1112  00F06F  61                 	db	97	;'a'
  1113  00F070  6D                 	db	109	;'m'
  1114  00F071  65                 	db	101	;'e'
  1115  00F072  20                 	db	32
  1116  00F073  6D                 	db	109	;'m'
  1117  00F074  75                 	db	117	;'u'
  1118  00F075  73                 	db	115	;'s'
  1119  00F076  74                 	db	116	;'t'
  1120  00F077  20                 	db	32
  1121  00F078  62                 	db	98	;'b'
  1122  00F079  65                 	db	101	;'e'
  1123  00F07A  20                 	db	32
  1124  00F07B  6C                 	db	108	;'l'
  1125  00F07C  65                 	db	101	;'e'
  1126  00F07D  73                 	db	115	;'s'
  1127  00F07E  73                 	db	115	;'s'
  1128  00F07F  20                 	db	32
  1129  00F080  74                 	db	116	;'t'
  1130  00F081  68                 	db	104	;'h'
  1131  00F082  61                 	db	97	;'a'
  1132  00F083  6E                 	db	110	;'n'
  1133  00F084  20                 	db	32
  1134  00F085  32                 	db	50	;'2'
  1135  00F086  31                 	db	49	;'1'
  1136  00F087  20                 	db	32
  1137  00F088  63                 	db	99	;'c'
  1138  00F089  68                 	db	104	;'h'
  1139  00F08A  61                 	db	97	;'a'
  1140  00F08B  72                 	db	114	;'r'
  1141  00F08C  61                 	db	97	;'a'
  1142  00F08D  63                 	db	99	;'c'
  1143  00F08E  74                 	db	116	;'t'
  1144  00F08F  65                 	db	101	;'e'
  1145  00F090  72                 	db	114	;'r'
  1146  00F091  73                 	db	115	;'s'
  1147  00F092  21                 	db	33
  1148  00F093  00                 	db	0
  1149  00F094                     STR_75:
  1150  00F094  4E                 	db	78	;'N'
  1151  00F095  45                 	db	69	;'E'
  1152  00F096  43                 	db	67	;'C'
  1153  00F097  20                 	db	32
  1154  00F098  63                 	db	99	;'c'
  1155  00F099  6F                 	db	111	;'o'
  1156  00F09A  64                 	db	100	;'d'
  1157  00F09B  65                 	db	101	;'e'
  1158  00F09C  20                 	db	32
  1159  00F09D  30                 	db	48	;'0'
  1160  00F09E  78                 	db	120	;'x'
  1161  00F09F  25                 	db	37
  1162  00F0A0  6C                 	db	108	;'l'
  1163  00F0A1  58                 	db	88	;'X'
  1164  00F0A2  20                 	db	32
  1165  00F0A3  6E                 	db	110	;'n'
  1166  00F0A4  6F                 	db	111	;'o'
  1167  00F0A5  77                 	db	119	;'w'
  1168  00F0A6  20                 	db	32
  1169  00F0A7  74                 	db	116	;'t'
  1170  00F0A8  72                 	db	114	;'r'
  1171  00F0A9  61                 	db	97	;'a'
  1172  00F0AA  6E                 	db	110	;'n'
  1173  00F0AB  73                 	db	115	;'s'
  1174  00F0AC  6D                 	db	109	;'m'
  1175  00F0AD  69                 	db	105	;'i'
  1176  00F0AE  74                 	db	116	;'t'
  1177  00F0AF  73                 	db	115	;'s'
  1178  00F0B0  20                 	db	32
  1179  00F0B1  52                 	db	82	;'R'
  1180  00F0B2  46                 	db	70	;'F'
  1181  00F0B3  20                 	db	32
  1182  00F0B4  63                 	db	99	;'c'
  1183  00F0B5  6F                 	db	111	;'o'
  1184  00F0B6  6E                 	db	110	;'n'
  1185  00F0B7  66                 	db	102	;'f'
  1186  00F0B8  69                 	db	105	;'i'
  1187  00F0B9  67                 	db	103	;'g'
  1188  00F0BA  20                 	db	32
  1189  00F0BB  25                 	db	37
  1190  00F0BC  64                 	db	100	;'d'
  1191  00F0BD  20                 	db	32
  1192  00F0BE  63                 	db	99	;'c'
  1193  00F0BF  68                 	db	104	;'h'
  1194  00F0C0  61                 	db	97	;'a'
  1195  00F0C1  6E                 	db	110	;'n'
  1196  00F0C2  6E                 	db	110	;'n'
  1197  00F0C3  65                 	db	101	;'e'
  1198  00F0C4  6C                 	db	108	;'l'
  1199  00F0C5  20                 	db	32
  1200  00F0C6  25                 	db	37
  1201  00F0C7  63                 	db	99	;'c'
  1202  00F0C8  20                 	db	32
  1203  00F0C9  64                 	db	100	;'d'
  1204  00F0CA  65                 	db	101	;'e'
  1205  00F0CB  76                 	db	118	;'v'
  1206  00F0CC  69                 	db	105	;'i'
  1207  00F0CD  63                 	db	99	;'c'
  1208  00F0CE  65                 	db	101	;'e'
  1209  00F0CF  20                 	db	32
  1210  00F0D0  25                 	db	37
  1211  00F0D1  64                 	db	100	;'d'
  1212  00F0D2  00                 	db	0
  1213  00F0D3                     STR_86:
  1214  00F0D3  45                 	db	69	;'E'
  1215  00F0D4  6E                 	db	110	;'n'
  1216  00F0D5  74                 	db	116	;'t'
  1217  00F0D6  65                 	db	101	;'e'
  1218  00F0D7  72                 	db	114	;'r'
  1219  00F0D8  20                 	db	32
  1220  00F0D9  73                 	db	115	;'s'
  1221  00F0DA  70                 	db	112	;'p'
  1222  00F0DB  65                 	db	101	;'e'
  1223  00F0DC  63                 	db	99	;'c'
  1224  00F0DD  69                 	db	105	;'i'
  1225  00F0DE  61                 	db	97	;'a'
  1226  00F0DF  6C                 	db	108	;'l'
  1227  00F0E0  20                 	db	32
  1228  00F0E1  27                 	db	39
  1229  00F0E2  43                 	db	67	;'C'
  1230  00F0E3  6F                 	db	111	;'o'
  1231  00F0E4  64                 	db	100	;'d'
  1232  00F0E5  65                 	db	101	;'e'
  1233  00F0E6  27                 	db	39
  1234  00F0E7  20                 	db	32
  1235  00F0E8  74                 	db	116	;'t'
  1236  00F0E9  6F                 	db	111	;'o'
  1237  00F0EA  20                 	db	32
  1238  00F0EB  63                 	db	99	;'c'
  1239  00F0EC  68                 	db	104	;'h'
  1240  00F0ED  61                 	db	97	;'a'
  1241  00F0EE  6E                 	db	110	;'n'
  1242  00F0EF  67                 	db	103	;'g'
  1243  00F0F0  65                 	db	101	;'e'
  1244  00F0F1  20                 	db	32
  1245  00F0F2  73                 	db	115	;'s'
  1246  00F0F3  65                 	db	101	;'e'
  1247  00F0F4  72                 	db	114	;'r'
  1248  00F0F5  69                 	db	105	;'i'
  1249  00F0F6  61                 	db	97	;'a'
  1250  00F0F7  6C                 	db	108	;'l'
  1251  00F0F8  20                 	db	32
  1252  00F0F9  6E                 	db	110	;'n'
  1253  00F0FA  75                 	db	117	;'u'
  1254  00F0FB  6D                 	db	109	;'m'
  1255  00F0FC  62                 	db	98	;'b'
  1256  00F0FD  65                 	db	101	;'e'
  1257  00F0FE  72                 	db	114	;'r'
  1258  00F0FF  20                 	db	32
  1259  00F100  6F                 	db	111	;'o'
  1260  00F101  72                 	db	114	;'r'
  1261  00F102  20                 	db	32
  1262  00F103  4E                 	db	78	;'N'
  1263  00F104  20                 	db	32
  1264  00F105  74                 	db	116	;'t'
  1265  00F106  6F                 	db	111	;'o'
  1266  00F107  20                 	db	32
  1267  00F108  63                 	db	99	;'c'
  1268  00F109  61                 	db	97	;'a'
  1269  00F10A  6E                 	db	110	;'n'
  1270  00F10B  63                 	db	99	;'c'
  1271  00F10C  65                 	db	101	;'e'
  1272  00F10D  6C                 	db	108	;'l'
  1273  00F10E  00                 	db	0
  1274  00F10F                     STR_99:
  1275  00F10F  44                 	db	68	;'D'
  1276  00F110  65                 	db	101	;'e'
  1277  00F111  76                 	db	118	;'v'
  1278  00F112  69                 	db	105	;'i'
  1279  00F113  63                 	db	99	;'c'
  1280  00F114  65                 	db	101	;'e'
  1281  00F115  20                 	db	32
  1282  00F116  72                 	db	114	;'r'
  1283  00F117  65                 	db	101	;'e'
  1284  00F118  73                 	db	115	;'s'
  1285  00F119  75                 	db	117	;'u'
  1286  00F11A  6D                 	db	109	;'m'
  1287  00F11B  65                 	db	101	;'e'
  1288  00F11C  73                 	db	115	;'s'
  1289  00F11D  20                 	db	32
  1290  00F11E  77                 	db	119	;'w'
  1291  00F11F  69                 	db	105	;'i'
  1292  00F120  74                 	db	116	;'t'
  1293  00F121  68                 	db	104	;'h'
  1294  00F122  6F                 	db	111	;'o'
  1295  00F123  75                 	db	117	;'u'
  1296  00F124  74                 	db	116	;'t'
  1297  00F125  20                 	db	32
  1298  00F126  63                 	db	99	;'c'
  1299  00F127  68                 	db	104	;'h'
  1300  00F128  61                 	db	97	;'a'
  1301  00F129  6E                 	db	110	;'n'
  1302  00F12A  67                 	db	103	;'g'
  1303  00F12B  69                 	db	105	;'i'
  1304  00F12C  6E                 	db	110	;'n'
  1305  00F12D  67                 	db	103	;'g'
  1306  00F12E  20                 	db	32
  1307  00F12F  42                 	db	66	;'B'
  1308  00F130  6C                 	db	108	;'l'
  1309  00F131  75                 	db	117	;'u'
  1310  00F132  65                 	db	101	;'e'
  1311  00F133  74                 	db	116	;'t'
  1312  00F134  6F                 	db	111	;'o'
  1313  00F135  6F                 	db	111	;'o'
  1314  00F136  74                 	db	116	;'t'
  1315  00F137  68                 	db	104	;'h'
  1316  00F138  20                 	db	32
  1317  00F139  42                 	db	66	;'B'
  1318  00F13A  72                 	db	114	;'r'
  1319  00F13B  6F                 	db	111	;'o'
  1320  00F13C  61                 	db	97	;'a'
  1321  00F13D  64                 	db	100	;'d'
  1322  00F13E  63                 	db	99	;'c'
  1323  00F13F  61                 	db	97	;'a'
  1324  00F140  73                 	db	115	;'s'
  1325  00F141  74                 	db	116	;'t'
  1326  00F142  20                 	db	32
  1327  00F143  4E                 	db	78	;'N'
  1328  00F144  61                 	db	97	;'a'
  1329  00F145  6D                 	db	109	;'m'
  1330  00F146  65                 	db	101	;'e'
  1331  00F147  00                 	db	0
  1332  00F148                     STR_76:
  1333  00F148  4E                 	db	78	;'N'
  1334  00F149  45                 	db	69	;'E'
  1335  00F14A  43                 	db	67	;'C'
  1336  00F14B  20                 	db	32
  1337  00F14C  63                 	db	99	;'c'
  1338  00F14D  6F                 	db	111	;'o'
  1339  00F14E  64                 	db	100	;'d'
  1340  00F14F  65                 	db	101	;'e'
  1341  00F150  20                 	db	32
  1342  00F151  30                 	db	48	;'0'
  1343  00F152  78                 	db	120	;'x'
  1344  00F153  25                 	db	37
  1345  00F154  6C                 	db	108	;'l'
  1346  00F155  58                 	db	88	;'X'
  1347  00F156  20                 	db	32
  1348  00F157  6E                 	db	110	;'n'
  1349  00F158  6F                 	db	111	;'o'
  1350  00F159  77                 	db	119	;'w'
  1351  00F15A  20                 	db	32
  1352  00F15B  74                 	db	116	;'t'
  1353  00F15C  72                 	db	114	;'r'
  1354  00F15D  61                 	db	97	;'a'
  1355  00F15E  6E                 	db	110	;'n'
  1356  00F15F  73                 	db	115	;'s'
  1357  00F160  6D                 	db	109	;'m'
  1358  00F161  69                 	db	105	;'i'
  1359  00F162  74                 	db	116	;'t'
  1360  00F163  73                 	db	115	;'s'
  1361  00F164  20                 	db	32
  1362  00F165  52                 	db	82	;'R'
  1363  00F166  46                 	db	70	;'F'
  1364  00F167  20                 	db	32
  1365  00F168  63                 	db	99	;'c'
  1366  00F169  6F                 	db	111	;'o'
  1367  00F16A  6E                 	db	110	;'n'
  1368  00F16B  66                 	db	102	;'f'
  1369  00F16C  69                 	db	105	;'i'
  1370  00F16D  67                 	db	103	;'g'
  1371  00F16E  20                 	db	32
  1372  00F16F  25                 	db	37
  1373  00F170  64                 	db	100	;'d'
  1374  00F171  20                 	db	32
  1375  00F172  63                 	db	99	;'c'
  1376  00F173  68                 	db	104	;'h'
  1377  00F174  61                 	db	97	;'a'
  1378  00F175  6E                 	db	110	;'n'
  1379  00F176  6E                 	db	110	;'n'
  1380  00F177  65                 	db	101	;'e'
  1381  00F178  6C                 	db	108	;'l'
  1382  00F179  20                 	db	32
  1383  00F17A  25                 	db	37
  1384  00F17B  63                 	db	99	;'c'
  1385  00F17C  20                 	db	32
  1386  00F17D  00                 	db	0
  1387  00F17E                     STR_77:
  1388  00F17E  52                 	db	82	;'R'
  1389  00F17F  46                 	db	70	;'F'
  1390  00F180  20                 	db	32
  1391  00F181  63                 	db	99	;'c'
  1392  00F182  6F                 	db	111	;'o'
  1393  00F183  6E                 	db	110	;'n'
  1394  00F184  66                 	db	102	;'f'
  1395  00F185  69                 	db	105	;'i'
  1396  00F186  67                 	db	103	;'g'
  1397  00F187  20                 	db	32
  1398  00F188  25                 	db	37
  1399  00F189  64                 	db	100	;'d'
  1400  00F18A  20                 	db	32
  1401  00F18B  63                 	db	99	;'c'
  1402  00F18C  68                 	db	104	;'h'
  1403  00F18D  61                 	db	97	;'a'
  1404  00F18E  6E                 	db	110	;'n'
  1405  00F18F  6E                 	db	110	;'n'
  1406  00F190  65                 	db	101	;'e'
  1407  00F191  6C                 	db	108	;'l'
  1408  00F192  20                 	db	32
  1409  00F193  25                 	db	37
  1410  00F194  63                 	db	99	;'c'
  1411  00F195  20                 	db	32
  1412  00F196  64                 	db	100	;'d'
  1413  00F197  65                 	db	101	;'e'
  1414  00F198  76                 	db	118	;'v'
  1415  00F199  69                 	db	105	;'i'
  1416  00F19A  63                 	db	99	;'c'
  1417  00F19B  65                 	db	101	;'e'
  1418  00F19C  20                 	db	32
  1419  00F19D  25                 	db	37
  1420  00F19E  64                 	db	100	;'d'
  1421  00F19F  20                 	db	32
  1422  00F1A0  73                 	db	115	;'s'
  1423  00F1A1  75                 	db	117	;'u'
  1424  00F1A2  63                 	db	99	;'c'
  1425  00F1A3  63                 	db	99	;'c'
  1426  00F1A4  65                 	db	101	;'e'
  1427  00F1A5  73                 	db	115	;'s'
  1428  00F1A6  73                 	db	115	;'s'
  1429  00F1A7  66                 	db	102	;'f'
  1430  00F1A8  75                 	db	117	;'u'
  1431  00F1A9  6C                 	db	108	;'l'
  1432  00F1AA  6C                 	db	108	;'l'
  1433  00F1AB  79                 	db	121	;'y'
  1434  00F1AC  20                 	db	32
  1435  00F1AD  65                 	db	101	;'e'
  1436  00F1AE  72                 	db	114	;'r'
  1437  00F1AF  61                 	db	97	;'a'
  1438  00F1B0  73                 	db	115	;'s'
  1439  00F1B1  65                 	db	101	;'e'
  1440  00F1B2  64                 	db	100	;'d'
  1441  00F1B3  00                 	db	0
  1442  00F1B4                     STR_102:
  1443  00F1B4  42                 	db	66	;'B'
  1444  00F1B5  6C                 	db	108	;'l'
  1445  00F1B6  75                 	db	117	;'u'
  1446  00F1B7  65                 	db	101	;'e'
  1447  00F1B8  74                 	db	116	;'t'
  1448  00F1B9  6F                 	db	111	;'o'
  1449  00F1BA  6F                 	db	111	;'o'
  1450  00F1BB  74                 	db	116	;'t'
  1451  00F1BC  68                 	db	104	;'h'
  1452  00F1BD  20                 	db	32
  1453  00F1BE  4D                 	db	77	;'M'
  1454  00F1BF  6F                 	db	111	;'o'
  1455  00F1C0  64                 	db	100	;'d'
  1456  00F1C1  75                 	db	117	;'u'
  1457  00F1C2  6C                 	db	108	;'l'
  1458  00F1C3  65                 	db	101	;'e'
  1459  00F1C4  20                 	db	32
  1460  00F1C5  77                 	db	119	;'w'
  1461  00F1C6  69                 	db	105	;'i'
  1462  00F1C7  6C                 	db	108	;'l'
  1463  00F1C8  6C                 	db	108	;'l'
  1464  00F1C9  20                 	db	32
  1465  00F1CA  52                 	db	82	;'R'
  1466  00F1CB  65                 	db	101	;'e'
  1467  00F1CC  73                 	db	115	;'s'
  1468  00F1CD  65                 	db	101	;'e'
  1469  00F1CE  74                 	db	116	;'t'
  1470  00F1CF  2E                 	db	46
  1471  00F1D0  20                 	db	32
  1472  00F1D1  50                 	db	80	;'P'
  1473  00F1D2  6C                 	db	108	;'l'
  1474  00F1D3  65                 	db	101	;'e'
  1475  00F1D4  61                 	db	97	;'a'
  1476  00F1D5  73                 	db	115	;'s'
  1477  00F1D6  65                 	db	101	;'e'
  1478  00F1D7  20                 	db	32
  1479  00F1D8  72                 	db	114	;'r'
  1480  00F1D9  65                 	db	101	;'e'
  1481  00F1DA  63                 	db	99	;'c'
  1482  00F1DB  6F                 	db	111	;'o'
  1483  00F1DC  6E                 	db	110	;'n'
  1484  00F1DD  6E                 	db	110	;'n'
  1485  00F1DE  65                 	db	101	;'e'
  1486  00F1DF  63                 	db	99	;'c'
  1487  00F1E0  74                 	db	116	;'t'
  1488  00F1E1  20                 	db	32
  1489  00F1E2  64                 	db	100	;'d'
  1490  00F1E3  65                 	db	101	;'e'
  1491  00F1E4  76                 	db	118	;'v'
  1492  00F1E5  69                 	db	105	;'i'
  1493  00F1E6  63                 	db	99	;'c'
  1494  00F1E7  65                 	db	101	;'e'
  1495  00F1E8  00                 	db	0
  1496  00F1E9                     STR_71:
  1497  00F1E9  45                 	db	69	;'E'
  1498  00F1EA  72                 	db	114	;'r'
  1499  00F1EB  72                 	db	114	;'r'
  1500  00F1EC  6F                 	db	111	;'o'
  1501  00F1ED  72                 	db	114	;'r'
  1502  00F1EE  3A                 	db	58	;':'
  1503  00F1EF  20                 	db	32
  1504  00F1F0  4E                 	db	78	;'N'
  1505  00F1F1  6F                 	db	111	;'o'
  1506  00F1F2  20                 	db	32
  1507  00F1F3  52                 	db	82	;'R'
  1508  00F1F4  46                 	db	70	;'F'
  1509  00F1F5  20                 	db	32
  1510  00F1F6  63                 	db	99	;'c'
  1511  00F1F7  6F                 	db	111	;'o'
  1512  00F1F8  6E                 	db	110	;'n'
  1513  00F1F9  66                 	db	102	;'f'
  1514  00F1FA  69                 	db	105	;'i'
  1515  00F1FB  67                 	db	103	;'g'
  1516  00F1FC  20                 	db	32
  1517  00F1FD  32                 	db	50	;'2'
  1518  00F1FE  2C                 	db	44
  1519  00F1FF  20                 	db	32
  1520  00F200  63                 	db	99	;'c'
  1521  00F201  68                 	db	104	;'h'
  1522  00F202  61                 	db	97	;'a'
  1523  00F203  6E                 	db	110	;'n'
  1524  00F204  6E                 	db	110	;'n'
  1525  00F205  65                 	db	101	;'e'
  1526  00F206  6C                 	db	108	;'l'
  1527  00F207  20                 	db	32
  1528  00F208  48                 	db	72	;'H'
  1529  00F209  20                 	db	32
  1530  00F20A  64                 	db	100	;'d'
  1531  00F20B  65                 	db	101	;'e'
  1532  00F20C  76                 	db	118	;'v'
  1533  00F20D  69                 	db	105	;'i'
  1534  00F20E  63                 	db	99	;'c'
  1535  00F20F  65                 	db	101	;'e'
  1536  00F210  20                 	db	32
  1537  00F211  73                 	db	115	;'s'
  1538  00F212  70                 	db	112	;'p'
  1539  00F213  65                 	db	101	;'e'
  1540  00F214  63                 	db	99	;'c'
  1541  00F215  69                 	db	105	;'i'
  1542  00F216  66                 	db	102	;'f'
  1543  00F217  69                 	db	105	;'i'
  1544  00F218  65                 	db	101	;'e'
  1545  00F219  64                 	db	100	;'d'
  1546  00F21A  00                 	db	0
  1547  00F21B                     STR_72:
  1548  00F21B  45                 	db	69	;'E'
  1549  00F21C  72                 	db	114	;'r'
  1550  00F21D  72                 	db	114	;'r'
  1551  00F21E  6F                 	db	111	;'o'
  1552  00F21F  72                 	db	114	;'r'
  1553  00F220  3A                 	db	58	;':'
  1554  00F221  20                 	db	32
  1555  00F222  52                 	db	82	;'R'
  1556  00F223  46                 	db	70	;'F'
  1557  00F224  20                 	db	32
  1558  00F225  63                 	db	99	;'c'
  1559  00F226  6F                 	db	111	;'o'
  1560  00F227  6E                 	db	110	;'n'
  1561  00F228  66                 	db	102	;'f'
  1562  00F229  69                 	db	105	;'i'
  1563  00F22A  67                 	db	103	;'g'
  1564  00F22B  20                 	db	32
  1565  00F22C  32                 	db	50	;'2'
  1566  00F22D  2C                 	db	44
  1567  00F22E  20                 	db	32
  1568  00F22F  63                 	db	99	;'c'
  1569  00F230  68                 	db	104	;'h'
  1570  00F231  61                 	db	97	;'a'
  1571  00F232  6E                 	db	110	;'n'
  1572  00F233  6E                 	db	110	;'n'
  1573  00F234  65                 	db	101	;'e'
  1574  00F235  6C                 	db	108	;'l'
  1575  00F236  20                 	db	32
  1576  00F237  48                 	db	72	;'H'
  1577  00F238  20                 	db	32
  1578  00F239  64                 	db	100	;'d'
  1579  00F23A  65                 	db	101	;'e'
  1580  00F23B  76                 	db	118	;'v'
  1581  00F23C  69                 	db	105	;'i'
  1582  00F23D  63                 	db	99	;'c'
  1583  00F23E  65                 	db	101	;'e'
  1584  00F23F  20                 	db	32
  1585  00F240  6F                 	db	111	;'o'
  1586  00F241  75                 	db	117	;'u'
  1587  00F242  74                 	db	116	;'t'
  1588  00F243  20                 	db	32
  1589  00F244  6F                 	db	111	;'o'
  1590  00F245  66                 	db	102	;'f'
  1591  00F246  20                 	db	32
  1592  00F247  72                 	db	114	;'r'
  1593  00F248  61                 	db	97	;'a'
  1594  00F249  6E                 	db	110	;'n'
  1595  00F24A  67                 	db	103	;'g'
  1596  00F24B  65                 	db	101	;'e'
  1597  00F24C  00                 	db	0
  1598  00F24D                     STR_1:
  1599  00F24D  42                 	db	66	;'B'
  1600  00F24E  6C                 	db	108	;'l'
  1601  00F24F  75                 	db	117	;'u'
  1602  00F250  65                 	db	101	;'e'
  1603  00F251  74                 	db	116	;'t'
  1604  00F252  6F                 	db	111	;'o'
  1605  00F253  6F                 	db	111	;'o'
  1606  00F254  74                 	db	116	;'t'
  1607  00F255  68                 	db	104	;'h'
  1608  00F256  20                 	db	32
  1609  00F257  4E                 	db	78	;'N'
  1610  00F258  61                 	db	97	;'a'
  1611  00F259  6D                 	db	109	;'m'
  1612  00F25A  65                 	db	101	;'e'
  1613  00F25B  20                 	db	32
  1614  00F25C  77                 	db	119	;'w'
  1615  00F25D  61                 	db	97	;'a'
  1616  00F25E  73                 	db	115	;'s'
  1617  00F25F  20                 	db	32
  1618  00F260  73                 	db	115	;'s'
  1619  00F261  75                 	db	117	;'u'
  1620  00F262  63                 	db	99	;'c'
  1621  00F263  63                 	db	99	;'c'
  1622  00F264  65                 	db	101	;'e'
  1623  00F265  73                 	db	115	;'s'
  1624  00F266  73                 	db	115	;'s'
  1625  00F267  66                 	db	102	;'f'
  1626  00F268  75                 	db	117	;'u'
  1627  00F269  6C                 	db	108	;'l'
  1628  00F26A  6C                 	db	108	;'l'
  1629  00F26B  79                 	db	121	;'y'
  1630  00F26C  20                 	db	32
  1631  00F26D  63                 	db	99	;'c'
  1632  00F26E  68                 	db	104	;'h'
  1633  00F26F  61                 	db	97	;'a'
  1634  00F270  6E                 	db	110	;'n'
  1635  00F271  67                 	db	103	;'g'
  1636  00F272  65                 	db	101	;'e'
  1637  00F273  64                 	db	100	;'d'
  1638  00F274  20                 	db	32
  1639  00F275  74                 	db	116	;'t'
  1640  00F276  6F                 	db	111	;'o'
  1641  00F277  20                 	db	32
  1642  00F278  22                 	db	34
  1643  00F279  20                 	db	32
  1644  00F27A  25                 	db	37
  1645  00F27B  73                 	db	115	;'s'
  1646  00F27C  20                 	db	32
  1647  00F27D  22                 	db	34
  1648  00F27E  00                 	db	0
  1649  00F27F                     STR_144:
  1650  00F27F  53                 	db	83	;'S'
  1651  00F280  65                 	db	101	;'e'
  1652  00F281  74                 	db	116	;'t'
  1653  00F282  73                 	db	115	;'s'
  1654  00F283  20                 	db	32
  1655  00F284  52                 	db	82	;'R'
  1656  00F285  65                 	db	101	;'e'
  1657  00F286  6D                 	db	109	;'m'
  1658  00F287  6F                 	db	111	;'o'
  1659  00F288  74                 	db	116	;'t'
  1660  00F289  65                 	db	101	;'e'
  1661  00F28A  20                 	db	32
  1662  00F28B  62                 	db	98	;'b'
  1663  00F28C  75                 	db	117	;'u'
  1664  00F28D  74                 	db	116	;'t'
  1665  00F28E  74                 	db	116	;'t'
  1666  00F28F  6F                 	db	111	;'o'
  1667  00F290  6E                 	db	110	;'n'
  1668  00F291  20                 	db	32
  1669  00F292  74                 	db	116	;'t'
  1670  00F293  6F                 	db	111	;'o'
  1671  00F294  20                 	db	32
  1672  00F295  73                 	db	115	;'s'
  1673  00F296  65                 	db	101	;'e'
  1674  00F297  6E                 	db	110	;'n'
  1675  00F298  64                 	db	100	;'d'
  1676  00F299  20                 	db	32
  1677  00F29A  52                 	db	82	;'R'
  1678  00F29B  46                 	db	70	;'F'
  1679  00F29C  20                 	db	32
  1680  00F29D  43                 	db	67	;'C'
  1681  00F29E  6F                 	db	111	;'o'
  1682  00F29F  6E                 	db	110	;'n'
  1683  00F2A0  66                 	db	102	;'f'
  1684  00F2A1  69                 	db	105	;'i'
  1685  00F2A2  67                 	db	103	;'g'
  1686  00F2A3  20                 	db	32
  1687  00F2A4  32                 	db	50	;'2'
  1688  00F2A5  20                 	db	32
  1689  00F2A6  63                 	db	99	;'c'
  1690  00F2A7  68                 	db	104	;'h'
  1691  00F2A8  61                 	db	97	;'a'
  1692  00F2A9  6E                 	db	110	;'n'
  1693  00F2AA  6E                 	db	110	;'n'
  1694  00F2AB  65                 	db	101	;'e'
  1695  00F2AC  6C                 	db	108	;'l'
  1696  00F2AD  20                 	db	32
  1697  00F2AE  42                 	db	66	;'B'
  1698  00F2AF  00                 	db	0
  1699  00F2B0                     STR_138:
  1700  00F2B0  53                 	db	83	;'S'
  1701  00F2B1  65                 	db	101	;'e'
  1702  00F2B2  74                 	db	116	;'t'
  1703  00F2B3  73                 	db	115	;'s'
  1704  00F2B4  20                 	db	32
  1705  00F2B5  52                 	db	82	;'R'
  1706  00F2B6  65                 	db	101	;'e'
  1707  00F2B7  6D                 	db	109	;'m'
  1708  00F2B8  6F                 	db	111	;'o'
  1709  00F2B9  74                 	db	116	;'t'
  1710  00F2BA  65                 	db	101	;'e'
  1711  00F2BB  20                 	db	32
  1712  00F2BC  62                 	db	98	;'b'
  1713  00F2BD  75                 	db	117	;'u'
  1714  00F2BE  74                 	db	116	;'t'
  1715  00F2BF  74                 	db	116	;'t'
  1716  00F2C0  6F                 	db	111	;'o'
  1717  00F2C1  6E                 	db	110	;'n'
  1718  00F2C2  20                 	db	32
  1719  00F2C3  74                 	db	116	;'t'
  1720  00F2C4  6F                 	db	111	;'o'
  1721  00F2C5  20                 	db	32
  1722  00F2C6  73                 	db	115	;'s'
  1723  00F2C7  65                 	db	101	;'e'
  1724  00F2C8  6E                 	db	110	;'n'
  1725  00F2C9  64                 	db	100	;'d'
  1726  00F2CA  20                 	db	32
  1727  00F2CB  52                 	db	82	;'R'
  1728  00F2CC  46                 	db	70	;'F'
  1729  00F2CD  20                 	db	32
  1730  00F2CE  43                 	db	67	;'C'
  1731  00F2CF  6F                 	db	111	;'o'
  1732  00F2D0  6E                 	db	110	;'n'
  1733  00F2D1  66                 	db	102	;'f'
  1734  00F2D2  69                 	db	105	;'i'
  1735  00F2D3  67                 	db	103	;'g'
  1736  00F2D4  20                 	db	32
  1737  00F2D5  31                 	db	49	;'1'
  1738  00F2D6  20                 	db	32
  1739  00F2D7  63                 	db	99	;'c'
  1740  00F2D8  68                 	db	104	;'h'
  1741  00F2D9  61                 	db	97	;'a'
  1742  00F2DA  6E                 	db	110	;'n'
  1743  00F2DB  6E                 	db	110	;'n'
  1744  00F2DC  65                 	db	101	;'e'
  1745  00F2DD  6C                 	db	108	;'l'
  1746  00F2DE  20                 	db	32
  1747  00F2DF  44                 	db	68	;'D'
  1748  00F2E0  00                 	db	0
  1749  00F2E1                     STR_146:
  1750  00F2E1  53                 	db	83	;'S'
  1751  00F2E2  65                 	db	101	;'e'
  1752  00F2E3  74                 	db	116	;'t'
  1753  00F2E4  73                 	db	115	;'s'
  1754  00F2E5  20                 	db	32
  1755  00F2E6  52                 	db	82	;'R'
  1756  00F2E7  65                 	db	101	;'e'
  1757  00F2E8  6D                 	db	109	;'m'
  1758  00F2E9  6F                 	db	111	;'o'
  1759  00F2EA  74                 	db	116	;'t'
  1760  00F2EB  65                 	db	101	;'e'
  1761  00F2EC  20                 	db	32
  1762  00F2ED  62                 	db	98	;'b'
  1763  00F2EE  75                 	db	117	;'u'
  1764  00F2EF  74                 	db	116	;'t'
  1765  00F2F0  74                 	db	116	;'t'
  1766  00F2F1  6F                 	db	111	;'o'
  1767  00F2F2  6E                 	db	110	;'n'
  1768  00F2F3  20                 	db	32
  1769  00F2F4  74                 	db	116	;'t'
  1770  00F2F5  6F                 	db	111	;'o'
  1771  00F2F6  20                 	db	32
  1772  00F2F7  73                 	db	115	;'s'
  1773  00F2F8  65                 	db	101	;'e'
  1774  00F2F9  6E                 	db	110	;'n'
  1775  00F2FA  64                 	db	100	;'d'
  1776  00F2FB  20                 	db	32
  1777  00F2FC  52                 	db	82	;'R'
  1778  00F2FD  46                 	db	70	;'F'
  1779  00F2FE  20                 	db	32
  1780  00F2FF  43                 	db	67	;'C'
  1781  00F300  6F                 	db	111	;'o'
  1782  00F301  6E                 	db	110	;'n'
  1783  00F302  66                 	db	102	;'f'
  1784  00F303  69                 	db	105	;'i'
  1785  00F304  67                 	db	103	;'g'
  1786  00F305  20                 	db	32
  1787  00F306  32                 	db	50	;'2'
  1788  00F307  20                 	db	32
  1789  00F308  63                 	db	99	;'c'
  1790  00F309  68                 	db	104	;'h'
  1791  00F30A  61                 	db	97	;'a'
  1792  00F30B  6E                 	db	110	;'n'
  1793  00F30C  6E                 	db	110	;'n'
  1794  00F30D  65                 	db	101	;'e'
  1795  00F30E  6C                 	db	108	;'l'
  1796  00F30F  20                 	db	32
  1797  00F310  44                 	db	68	;'D'
  1798  00F311  00                 	db	0
  1799  00F312                     STR_140:
  1800  00F312  53                 	db	83	;'S'
  1801  00F313  65                 	db	101	;'e'
  1802  00F314  74                 	db	116	;'t'
  1803  00F315  73                 	db	115	;'s'
  1804  00F316  20                 	db	32
  1805  00F317  52                 	db	82	;'R'
  1806  00F318  65                 	db	101	;'e'
  1807  00F319  6D                 	db	109	;'m'
  1808  00F31A  6F                 	db	111	;'o'
  1809  00F31B  74                 	db	116	;'t'
  1810  00F31C  65                 	db	101	;'e'
  1811  00F31D  20                 	db	32
  1812  00F31E  62                 	db	98	;'b'
  1813  00F31F  75                 	db	117	;'u'
  1814  00F320  74                 	db	116	;'t'
  1815  00F321  74                 	db	116	;'t'
  1816  00F322  6F                 	db	111	;'o'
  1817  00F323  6E                 	db	110	;'n'
  1818  00F324  20                 	db	32
  1819  00F325  74                 	db	116	;'t'
  1820  00F326  6F                 	db	111	;'o'
  1821  00F327  20                 	db	32
  1822  00F328  73                 	db	115	;'s'
  1823  00F329  65                 	db	101	;'e'
  1824  00F32A  6E                 	db	110	;'n'
  1825  00F32B  64                 	db	100	;'d'
  1826  00F32C  20                 	db	32
  1827  00F32D  52                 	db	82	;'R'
  1828  00F32E  46                 	db	70	;'F'
  1829  00F32F  20                 	db	32
  1830  00F330  43                 	db	67	;'C'
  1831  00F331  6F                 	db	111	;'o'
  1832  00F332  6E                 	db	110	;'n'
  1833  00F333  66                 	db	102	;'f'
  1834  00F334  69                 	db	105	;'i'
  1835  00F335  67                 	db	103	;'g'
  1836  00F336  20                 	db	32
  1837  00F337  31                 	db	49	;'1'
  1838  00F338  20                 	db	32
  1839  00F339  63                 	db	99	;'c'
  1840  00F33A  68                 	db	104	;'h'
  1841  00F33B  61                 	db	97	;'a'
  1842  00F33C  6E                 	db	110	;'n'
  1843  00F33D  6E                 	db	110	;'n'
  1844  00F33E  65                 	db	101	;'e'
  1845  00F33F  6C                 	db	108	;'l'
  1846  00F340  20                 	db	32
  1847  00F341  45                 	db	69	;'E'
  1848  00F342  00                 	db	0
  1849  00F343                     STR_142:
  1850  00F343  53                 	db	83	;'S'
  1851  00F344  65                 	db	101	;'e'
  1852  00F345  74                 	db	116	;'t'
  1853  00F346  73                 	db	115	;'s'
  1854  00F347  20                 	db	32
  1855  00F348  52                 	db	82	;'R'
  1856  00F349  65                 	db	101	;'e'
  1857  00F34A  6D                 	db	109	;'m'
  1858  00F34B  6F                 	db	111	;'o'
  1859  00F34C  74                 	db	116	;'t'
  1860  00F34D  65                 	db	101	;'e'
  1861  00F34E  20                 	db	32
  1862  00F34F  62                 	db	98	;'b'
  1863  00F350  75                 	db	117	;'u'
  1864  00F351  74                 	db	116	;'t'
  1865  00F352  74                 	db	116	;'t'
  1866  00F353  6F                 	db	111	;'o'
  1867  00F354  6E                 	db	110	;'n'
  1868  00F355  20                 	db	32
  1869  00F356  74                 	db	116	;'t'
  1870  00F357  6F                 	db	111	;'o'
  1871  00F358  20                 	db	32
  1872  00F359  73                 	db	115	;'s'
  1873  00F35A  65                 	db	101	;'e'
  1874  00F35B  6E                 	db	110	;'n'
  1875  00F35C  64                 	db	100	;'d'
  1876  00F35D  20                 	db	32
  1877  00F35E  52                 	db	82	;'R'
  1878  00F35F  46                 	db	70	;'F'
  1879  00F360  20                 	db	32
  1880  00F361  43                 	db	67	;'C'
  1881  00F362  6F                 	db	111	;'o'
  1882  00F363  6E                 	db	110	;'n'
  1883  00F364  66                 	db	102	;'f'
  1884  00F365  69                 	db	105	;'i'
  1885  00F366  67                 	db	103	;'g'
  1886  00F367  20                 	db	32
  1887  00F368  31                 	db	49	;'1'
  1888  00F369  20                 	db	32
  1889  00F36A  63                 	db	99	;'c'
  1890  00F36B  68                 	db	104	;'h'
  1891  00F36C  61                 	db	97	;'a'
  1892  00F36D  6E                 	db	110	;'n'
  1893  00F36E  6E                 	db	110	;'n'
  1894  00F36F  65                 	db	101	;'e'
  1895  00F370  6C                 	db	108	;'l'
  1896  00F371  20                 	db	32
  1897  00F372  46                 	db	70	;'F'
  1898  00F373  00                 	db	0
  1899  00F374                     STR_148:
  1900  00F374  53                 	db	83	;'S'
  1901  00F375  65                 	db	101	;'e'
  1902  00F376  74                 	db	116	;'t'
  1903  00F377  73                 	db	115	;'s'
  1904  00F378  20                 	db	32
  1905  00F379  52                 	db	82	;'R'
  1906  00F37A  65                 	db	101	;'e'
  1907  00F37B  6D                 	db	109	;'m'
  1908  00F37C  6F                 	db	111	;'o'
  1909  00F37D  74                 	db	116	;'t'
  1910  00F37E  65                 	db	101	;'e'
  1911  00F37F  20                 	db	32
  1912  00F380  62                 	db	98	;'b'
  1913  00F381  75                 	db	117	;'u'
  1914  00F382  74                 	db	116	;'t'
  1915  00F383  74                 	db	116	;'t'
  1916  00F384  6F                 	db	111	;'o'
  1917  00F385  6E                 	db	110	;'n'
  1918  00F386  20                 	db	32
  1919  00F387  74                 	db	116	;'t'
  1920  00F388  6F                 	db	111	;'o'
  1921  00F389  20                 	db	32
  1922  00F38A  73                 	db	115	;'s'
  1923  00F38B  65                 	db	101	;'e'
  1924  00F38C  6E                 	db	110	;'n'
  1925  00F38D  64                 	db	100	;'d'
  1926  00F38E  20                 	db	32
  1927  00F38F  52                 	db	82	;'R'
  1928  00F390  46                 	db	70	;'F'
  1929  00F391  20                 	db	32
  1930  00F392  43                 	db	67	;'C'
  1931  00F393  6F                 	db	111	;'o'
  1932  00F394  6E                 	db	110	;'n'
  1933  00F395  66                 	db	102	;'f'
  1934  00F396  69                 	db	105	;'i'
  1935  00F397  67                 	db	103	;'g'
  1936  00F398  20                 	db	32
  1937  00F399  32                 	db	50	;'2'
  1938  00F39A  20                 	db	32
  1939  00F39B  63                 	db	99	;'c'
  1940  00F39C  68                 	db	104	;'h'
  1941  00F39D  61                 	db	97	;'a'
  1942  00F39E  6E                 	db	110	;'n'
  1943  00F39F  6E                 	db	110	;'n'
  1944  00F3A0  65                 	db	101	;'e'
  1945  00F3A1  6C                 	db	108	;'l'
  1946  00F3A2  20                 	db	32
  1947  00F3A3  48                 	db	72	;'H'
  1948  00F3A4  00                 	db	0
  1949  00F3A5                     STR_51:
  1950  00F3A5  45                 	db	69	;'E'
  1951  00F3A6  72                 	db	114	;'r'
  1952  00F3A7  72                 	db	114	;'r'
  1953  00F3A8  6F                 	db	111	;'o'
  1954  00F3A9  72                 	db	114	;'r'
  1955  00F3AA  3A                 	db	58	;':'
  1956  00F3AB  20                 	db	32
  1957  00F3AC  4E                 	db	78	;'N'
  1958  00F3AD  6F                 	db	111	;'o'
  1959  00F3AE  20                 	db	32
  1960  00F3AF  4E                 	db	78	;'N'
  1961  00F3B0  45                 	db	69	;'E'
  1962  00F3B1  43                 	db	67	;'C'
  1963  00F3B2  20                 	db	32
  1964  00F3B3  63                 	db	99	;'c'
  1965  00F3B4  6F                 	db	111	;'o'
  1966  00F3B5  64                 	db	100	;'d'
  1967  00F3B6  65                 	db	101	;'e'
  1968  00F3B7  20                 	db	32
  1969  00F3B8  73                 	db	115	;'s'
  1970  00F3B9  61                 	db	97	;'a'
  1971  00F3BA  76                 	db	118	;'v'
  1972  00F3BB  65                 	db	101	;'e'
  1973  00F3BC  64                 	db	100	;'d'
  1974  00F3BD  20                 	db	32
  1975  00F3BE  66                 	db	102	;'f'
  1976  00F3BF  6F                 	db	111	;'o'
  1977  00F3C0  72                 	db	114	;'r'
  1978  00F3C1  20                 	db	32
  1979  00F3C2  73                 	db	115	;'s'
  1980  00F3C3  70                 	db	112	;'p'
  1981  00F3C4  65                 	db	101	;'e'
  1982  00F3C5  63                 	db	99	;'c'
  1983  00F3C6  69                 	db	105	;'i'
  1984  00F3C7  66                 	db	102	;'f'
  1985  00F3C8  69                 	db	105	;'i'
  1986  00F3C9  65                 	db	101	;'e'
  1987  00F3CA  64                 	db	100	;'d'
  1988  00F3CB  20                 	db	32
  1989  00F3CC  63                 	db	99	;'c'
  1990  00F3CD  6F                 	db	111	;'o'
  1991  00F3CE  6D                 	db	109	;'m'
  1992  00F3CF  6D                 	db	109	;'m'
  1993  00F3D0  61                 	db	97	;'a'
  1994  00F3D1  6E                 	db	110	;'n'
  1995  00F3D2  64                 	db	100	;'d'
  1996  00F3D3  00                 	db	0
  1997  00F3D4                     STR_52:
  1998  00F3D4  52                 	db	82	;'R'
  1999  00F3D5  65                 	db	101	;'e'
  2000  00F3D6  6D                 	db	109	;'m'
  2001  00F3D7  6F                 	db	111	;'o'
  2002  00F3D8  74                 	db	116	;'t'
  2003  00F3D9  65                 	db	101	;'e'
  2004  00F3DA  42                 	db	66	;'B'
  2005  00F3DB  75                 	db	117	;'u'
  2006  00F3DC  74                 	db	116	;'t'
  2007  00F3DD  74                 	db	116	;'t'
  2008  00F3DE  6F                 	db	111	;'o'
  2009  00F3DF  6E                 	db	110	;'n'
  2010  00F3E0  25                 	db	37
  2011  00F3E1  6C                 	db	108	;'l'
  2012  00F3E2  75                 	db	117	;'u'
  2013  00F3E3  20                 	db	32
  2014  00F3E4  6E                 	db	110	;'n'
  2015  00F3E5  6F                 	db	111	;'o'
  2016  00F3E6  77                 	db	119	;'w'
  2017  00F3E7  20                 	db	32
  2018  00F3E8  74                 	db	116	;'t'
  2019  00F3E9  72                 	db	114	;'r'
  2020  00F3EA  61                 	db	97	;'a'
  2021  00F3EB  6E                 	db	110	;'n'
  2022  00F3EC  73                 	db	115	;'s'
  2023  00F3ED  6D                 	db	109	;'m'
  2024  00F3EE  69                 	db	105	;'i'
  2025  00F3EF  74                 	db	116	;'t'
  2026  00F3F0  73                 	db	115	;'s'
  2027  00F3F1  20                 	db	32
  2028  00F3F2  4E                 	db	78	;'N'
  2029  00F3F3  45                 	db	69	;'E'
  2030  00F3F4  43                 	db	67	;'C'
  2031  00F3F5  20                 	db	32
  2032  00F3F6  63                 	db	99	;'c'
  2033  00F3F7  6F                 	db	111	;'o'
  2034  00F3F8  64                 	db	100	;'d'
  2035  00F3F9  65                 	db	101	;'e'
  2036  00F3FA  20                 	db	32
  2037  00F3FB  30                 	db	48	;'0'
  2038  00F3FC  78                 	db	120	;'x'
  2039  00F3FD  25                 	db	37
  2040  00F3FE  6C                 	db	108	;'l'
  2041  00F3FF  58                 	db	88	;'X'
  2042  00F400  20                 	db	32
  2043  00F401  00                 	db	0
  2044  00F402                     STR_156:
  2045  00F402  43                 	db	67	;'C'
  2046  00F403  6C                 	db	108	;'l'
  2047  00F404  65                 	db	101	;'e'
  2048  00F405  61                 	db	97	;'a'
  2049  00F406  72                 	db	114	;'r'
  2050  00F407  73                 	db	115	;'s'
  2051  00F408  20                 	db	32
  2052  00F409  73                 	db	115	;'s'
  2053  00F40A  61                 	db	97	;'a'
  2054  00F40B  76                 	db	118	;'v'
  2055  00F40C  65                 	db	101	;'e'
  2056  00F40D  64                 	db	100	;'d'
  2057  00F40E  20                 	db	32
  2058  00F40F  42                 	db	66	;'B'
  2059  00F410  75                 	db	117	;'u'
  2060  00F411  74                 	db	116	;'t'
  2061  00F412  74                 	db	116	;'t'
  2062  00F413  6F                 	db	111	;'o'
  2063  00F414  6E                 	db	110	;'n'
  2064  00F415  20                 	db	32
  2065  00F416  66                 	db	102	;'f'
  2066  00F417  6F                 	db	111	;'o'
  2067  00F418  72                 	db	114	;'r'
  2068  00F419  20                 	db	32
  2069  00F41A  52                 	db	82	;'R'
  2070  00F41B  46                 	db	70	;'F'
  2071  00F41C  20                 	db	32
  2072  00F41D  43                 	db	67	;'C'
  2073  00F41E  6F                 	db	111	;'o'
  2074  00F41F  6E                 	db	110	;'n'
  2075  00F420  66                 	db	102	;'f'
  2076  00F421  69                 	db	105	;'i'
  2077  00F422  67                 	db	103	;'g'
  2078  00F423  20                 	db	32
  2079  00F424  32                 	db	50	;'2'
  2080  00F425  20                 	db	32
  2081  00F426  63                 	db	99	;'c'
  2082  00F427  68                 	db	104	;'h'
  2083  00F428  61                 	db	97	;'a'
  2084  00F429  6E                 	db	110	;'n'
  2085  00F42A  6E                 	db	110	;'n'
  2086  00F42B  65                 	db	101	;'e'
  2087  00F42C  6C                 	db	108	;'l'
  2088  00F42D  20                 	db	32
  2089  00F42E  42                 	db	66	;'B'
  2090  00F42F  00                 	db	0
  2091  00F430                     STR_150:
  2092  00F430  43                 	db	67	;'C'
  2093  00F431  6C                 	db	108	;'l'
  2094  00F432  65                 	db	101	;'e'
  2095  00F433  61                 	db	97	;'a'
  2096  00F434  72                 	db	114	;'r'
  2097  00F435  73                 	db	115	;'s'
  2098  00F436  20                 	db	32
  2099  00F437  73                 	db	115	;'s'
  2100  00F438  61                 	db	97	;'a'
  2101  00F439  76                 	db	118	;'v'
  2102  00F43A  65                 	db	101	;'e'
  2103  00F43B  64                 	db	100	;'d'
  2104  00F43C  20                 	db	32
  2105  00F43D  42                 	db	66	;'B'
  2106  00F43E  75                 	db	117	;'u'
  2107  00F43F  74                 	db	116	;'t'
  2108  00F440  74                 	db	116	;'t'
  2109  00F441  6F                 	db	111	;'o'
  2110  00F442  6E                 	db	110	;'n'
  2111  00F443  20                 	db	32
  2112  00F444  66                 	db	102	;'f'
  2113  00F445  6F                 	db	111	;'o'
  2114  00F446  72                 	db	114	;'r'
  2115  00F447  20                 	db	32
  2116  00F448  52                 	db	82	;'R'
  2117  00F449  46                 	db	70	;'F'
  2118  00F44A  20                 	db	32
  2119  00F44B  43                 	db	67	;'C'
  2120  00F44C  6F                 	db	111	;'o'
  2121  00F44D  6E                 	db	110	;'n'
  2122  00F44E  66                 	db	102	;'f'
  2123  00F44F  69                 	db	105	;'i'
  2124  00F450  67                 	db	103	;'g'
  2125  00F451  20                 	db	32
  2126  00F452  31                 	db	49	;'1'
  2127  00F453  20                 	db	32
  2128  00F454  63                 	db	99	;'c'
  2129  00F455  68                 	db	104	;'h'
  2130  00F456  61                 	db	97	;'a'
  2131  00F457  6E                 	db	110	;'n'
  2132  00F458  6E                 	db	110	;'n'
  2133  00F459  65                 	db	101	;'e'
  2134  00F45A  6C                 	db	108	;'l'
  2135  00F45B  20                 	db	32
  2136  00F45C  44                 	db	68	;'D'
  2137  00F45D  00                 	db	0
  2138  00F45E                     STR_158:
  2139  00F45E  43                 	db	67	;'C'
  2140  00F45F  6C                 	db	108	;'l'
  2141  00F460  65                 	db	101	;'e'
  2142  00F461  61                 	db	97	;'a'
  2143  00F462  72                 	db	114	;'r'
  2144  00F463  73                 	db	115	;'s'
  2145  00F464  20                 	db	32
  2146  00F465  73                 	db	115	;'s'
  2147  00F466  61                 	db	97	;'a'
  2148  00F467  76                 	db	118	;'v'
  2149  00F468  65                 	db	101	;'e'
  2150  00F469  64                 	db	100	;'d'
  2151  00F46A  20                 	db	32
  2152  00F46B  42                 	db	66	;'B'
  2153  00F46C  75                 	db	117	;'u'
  2154  00F46D  74                 	db	116	;'t'
  2155  00F46E  74                 	db	116	;'t'
  2156  00F46F  6F                 	db	111	;'o'
  2157  00F470  6E                 	db	110	;'n'
  2158  00F471  20                 	db	32
  2159  00F472  66                 	db	102	;'f'
  2160  00F473  6F                 	db	111	;'o'
  2161  00F474  72                 	db	114	;'r'
  2162  00F475  20                 	db	32
  2163  00F476  52                 	db	82	;'R'
  2164  00F477  46                 	db	70	;'F'
  2165  00F478  20                 	db	32
  2166  00F479  43                 	db	67	;'C'
  2167  00F47A  6F                 	db	111	;'o'
  2168  00F47B  6E                 	db	110	;'n'
  2169  00F47C  66                 	db	102	;'f'
  2170  00F47D  69                 	db	105	;'i'
  2171  00F47E  67                 	db	103	;'g'
  2172  00F47F  20                 	db	32
  2173  00F480  32                 	db	50	;'2'
  2174  00F481  20                 	db	32
  2175  00F482  63                 	db	99	;'c'
  2176  00F483  68                 	db	104	;'h'
  2177  00F484  61                 	db	97	;'a'
  2178  00F485  6E                 	db	110	;'n'
  2179  00F486  6E                 	db	110	;'n'
  2180  00F487  65                 	db	101	;'e'
  2181  00F488  6C                 	db	108	;'l'
  2182  00F489  20                 	db	32
  2183  00F48A  44                 	db	68	;'D'
  2184  00F48B  00                 	db	0
  2185  00F48C                     STR_152:
  2186  00F48C  43                 	db	67	;'C'
  2187  00F48D  6C                 	db	108	;'l'
  2188  00F48E  65                 	db	101	;'e'
  2189  00F48F  61                 	db	97	;'a'
  2190  00F490  72                 	db	114	;'r'
  2191  00F491  73                 	db	115	;'s'
  2192  00F492  20                 	db	32
  2193  00F493  73                 	db	115	;'s'
  2194  00F494  61                 	db	97	;'a'
  2195  00F495  76                 	db	118	;'v'
  2196  00F496  65                 	db	101	;'e'
  2197  00F497  64                 	db	100	;'d'
  2198  00F498  20                 	db	32
  2199  00F499  42                 	db	66	;'B'
  2200  00F49A  75                 	db	117	;'u'
  2201  00F49B  74                 	db	116	;'t'
  2202  00F49C  74                 	db	116	;'t'
  2203  00F49D  6F                 	db	111	;'o'
  2204  00F49E  6E                 	db	110	;'n'
  2205  00F49F  20                 	db	32
  2206  00F4A0  66                 	db	102	;'f'
  2207  00F4A1  6F                 	db	111	;'o'
  2208  00F4A2  72                 	db	114	;'r'
  2209  00F4A3  20                 	db	32
  2210  00F4A4  52                 	db	82	;'R'
  2211  00F4A5  46                 	db	70	;'F'
  2212  00F4A6  20                 	db	32
  2213  00F4A7  43                 	db	67	;'C'
  2214  00F4A8  6F                 	db	111	;'o'
  2215  00F4A9  6E                 	db	110	;'n'
  2216  00F4AA  66                 	db	102	;'f'
  2217  00F4AB  69                 	db	105	;'i'
  2218  00F4AC  67                 	db	103	;'g'
  2219  00F4AD  20                 	db	32
  2220  00F4AE  31                 	db	49	;'1'
  2221  00F4AF  20                 	db	32
  2222  00F4B0  63                 	db	99	;'c'
  2223  00F4B1  68                 	db	104	;'h'
  2224  00F4B2  61                 	db	97	;'a'
  2225  00F4B3  6E                 	db	110	;'n'
  2226  00F4B4  6E                 	db	110	;'n'
  2227  00F4B5  65                 	db	101	;'e'
  2228  00F4B6  6C                 	db	108	;'l'
  2229  00F4B7  20                 	db	32
  2230  00F4B8  45                 	db	69	;'E'
  2231  00F4B9  00                 	db	0
  2232  00F4BA                     STR_154:
  2233  00F4BA  43                 	db	67	;'C'
  2234  00F4BB  6C                 	db	108	;'l'
  2235  00F4BC  65                 	db	101	;'e'
  2236  00F4BD  61                 	db	97	;'a'
  2237  00F4BE  72                 	db	114	;'r'
  2238  00F4BF  73                 	db	115	;'s'
  2239  00F4C0  20                 	db	32
  2240  00F4C1  73                 	db	115	;'s'
  2241  00F4C2  61                 	db	97	;'a'
  2242  00F4C3  76                 	db	118	;'v'
  2243  00F4C4  65                 	db	101	;'e'
  2244  00F4C5  64                 	db	100	;'d'
  2245  00F4C6  20                 	db	32
  2246  00F4C7  42                 	db	66	;'B'
  2247  00F4C8  75                 	db	117	;'u'
  2248  00F4C9  74                 	db	116	;'t'
  2249  00F4CA  74                 	db	116	;'t'
  2250  00F4CB  6F                 	db	111	;'o'
  2251  00F4CC  6E                 	db	110	;'n'
  2252  00F4CD  20                 	db	32
  2253  00F4CE  66                 	db	102	;'f'
  2254  00F4CF  6F                 	db	111	;'o'
  2255  00F4D0  72                 	db	114	;'r'
  2256  00F4D1  20                 	db	32
  2257  00F4D2  52                 	db	82	;'R'
  2258  00F4D3  46                 	db	70	;'F'
  2259  00F4D4  20                 	db	32
  2260  00F4D5  43                 	db	67	;'C'
  2261  00F4D6  6F                 	db	111	;'o'
  2262  00F4D7  6E                 	db	110	;'n'
  2263  00F4D8  66                 	db	102	;'f'
  2264  00F4D9  69                 	db	105	;'i'
  2265  00F4DA  67                 	db	103	;'g'
  2266  00F4DB  20                 	db	32
  2267  00F4DC  31                 	db	49	;'1'
  2268  00F4DD  20                 	db	32
  2269  00F4DE  63                 	db	99	;'c'
  2270  00F4DF  68                 	db	104	;'h'
  2271  00F4E0  61                 	db	97	;'a'
  2272  00F4E1  6E                 	db	110	;'n'
  2273  00F4E2  6E                 	db	110	;'n'
  2274  00F4E3  65                 	db	101	;'e'
  2275  00F4E4  6C                 	db	108	;'l'
  2276  00F4E5  20                 	db	32
  2277  00F4E6  46                 	db	70	;'F'
  2278  00F4E7  00                 	db	0
  2279  00F4E8                     STR_160:
  2280  00F4E8  43                 	db	67	;'C'
  2281  00F4E9  6C                 	db	108	;'l'
  2282  00F4EA  65                 	db	101	;'e'
  2283  00F4EB  61                 	db	97	;'a'
  2284  00F4EC  72                 	db	114	;'r'
  2285  00F4ED  73                 	db	115	;'s'
  2286  00F4EE  20                 	db	32
  2287  00F4EF  73                 	db	115	;'s'
  2288  00F4F0  61                 	db	97	;'a'
  2289  00F4F1  76                 	db	118	;'v'
  2290  00F4F2  65                 	db	101	;'e'
  2291  00F4F3  64                 	db	100	;'d'
  2292  00F4F4  20                 	db	32
  2293  00F4F5  42                 	db	66	;'B'
  2294  00F4F6  75                 	db	117	;'u'
  2295  00F4F7  74                 	db	116	;'t'
  2296  00F4F8  74                 	db	116	;'t'
  2297  00F4F9  6F                 	db	111	;'o'
  2298  00F4FA  6E                 	db	110	;'n'
  2299  00F4FB  20                 	db	32
  2300  00F4FC  66                 	db	102	;'f'
  2301  00F4FD  6F                 	db	111	;'o'
  2302  00F4FE  72                 	db	114	;'r'
  2303  00F4FF  20                 	db	32
  2304  00F500  52                 	db	82	;'R'
  2305  00F501  46                 	db	70	;'F'
  2306  00F502  20                 	db	32
  2307  00F503  43                 	db	67	;'C'
  2308  00F504  6F                 	db	111	;'o'
  2309  00F505  6E                 	db	110	;'n'
  2310  00F506  66                 	db	102	;'f'
  2311  00F507  69                 	db	105	;'i'
  2312  00F508  67                 	db	103	;'g'
  2313  00F509  20                 	db	32
  2314  00F50A  32                 	db	50	;'2'
  2315  00F50B  20                 	db	32
  2316  00F50C  63                 	db	99	;'c'
  2317  00F50D  68                 	db	104	;'h'
  2318  00F50E  61                 	db	97	;'a'
  2319  00F50F  6E                 	db	110	;'n'
  2320  00F510  6E                 	db	110	;'n'
  2321  00F511  65                 	db	101	;'e'
  2322  00F512  6C                 	db	108	;'l'
  2323  00F513  20                 	db	32
  2324  00F514  48                 	db	72	;'H'
  2325  00F515  00                 	db	0
  2326  00F516                     STR_74:
  2327  00F516  45                 	db	69	;'E'
  2328  00F517  72                 	db	114	;'r'
  2329  00F518  72                 	db	114	;'r'
  2330  00F519  6F                 	db	111	;'o'
  2331  00F51A  72                 	db	114	;'r'
  2332  00F51B  3A                 	db	58	;':'
  2333  00F51C  20                 	db	32
  2334  00F51D  4E                 	db	78	;'N'
  2335  00F51E  45                 	db	69	;'E'
  2336  00F51F  43                 	db	67	;'C'
  2337  00F520  20                 	db	32
  2338  00F521  63                 	db	99	;'c'
  2339  00F522  6F                 	db	111	;'o'
  2340  00F523  64                 	db	100	;'d'
  2341  00F524  65                 	db	101	;'e'
  2342  00F525  20                 	db	32
  2343  00F526  61                 	db	97	;'a'
  2344  00F527  6C                 	db	108	;'l'
  2345  00F528  72                 	db	114	;'r'
  2346  00F529  65                 	db	101	;'e'
  2347  00F52A  61                 	db	97	;'a'
  2348  00F52B  64                 	db	100	;'d'
  2349  00F52C  79                 	db	121	;'y'
  2350  00F52D  20                 	db	32
  2351  00F52E  73                 	db	115	;'s'
  2352  00F52F  61                 	db	97	;'a'
  2353  00F530  76                 	db	118	;'v'
  2354  00F531  65                 	db	101	;'e'
  2355  00F532  64                 	db	100	;'d'
  2356  00F533  20                 	db	32
  2357  00F534  74                 	db	116	;'t'
  2358  00F535  6F                 	db	111	;'o'
  2359  00F536  20                 	db	32
  2360  00F537  74                 	db	116	;'t'
  2361  00F538  68                 	db	104	;'h'
  2362  00F539  69                 	db	105	;'i'
  2363  00F53A  73                 	db	115	;'s'
  2364  00F53B  20                 	db	32
  2365  00F53C  52                 	db	82	;'R'
  2366  00F53D  46                 	db	70	;'F'
  2367  00F53E  20                 	db	32
  2368  00F53F  63                 	db	99	;'c'
  2369  00F540  6F                 	db	111	;'o'
  2370  00F541  64                 	db	100	;'d'
  2371  00F542  65                 	db	101	;'e'
  2372  00F543  00                 	db	0
  2373  00F544                     STR_87:
  2374  00F544  44                 	db	68	;'D'
  2375  00F545  65                 	db	101	;'e'
  2376  00F546  76                 	db	118	;'v'
  2377  00F547  69                 	db	105	;'i'
  2378  00F548  63                 	db	99	;'c'
  2379  00F549  65                 	db	101	;'e'
  2380  00F54A  20                 	db	32
  2381  00F54B  72                 	db	114	;'r'
  2382  00F54C  65                 	db	101	;'e'
  2383  00F54D  73                 	db	115	;'s'
  2384  00F54E  75                 	db	117	;'u'
  2385  00F54F  6D                 	db	109	;'m'
  2386  00F550  65                 	db	101	;'e'
  2387  00F551  73                 	db	115	;'s'
  2388  00F552  20                 	db	32
  2389  00F553  77                 	db	119	;'w'
  2390  00F554  69                 	db	105	;'i'
  2391  00F555  74                 	db	116	;'t'
  2392  00F556  68                 	db	104	;'h'
  2393  00F557  6F                 	db	111	;'o'
  2394  00F558  75                 	db	117	;'u'
  2395  00F559  74                 	db	116	;'t'
  2396  00F55A  20                 	db	32
  2397  00F55B  63                 	db	99	;'c'
  2398  00F55C  68                 	db	104	;'h'
  2399  00F55D  61                 	db	97	;'a'
  2400  00F55E  6E                 	db	110	;'n'
  2401  00F55F  67                 	db	103	;'g'
  2402  00F560  69                 	db	105	;'i'
  2403  00F561  6E                 	db	110	;'n'
  2404  00F562  67                 	db	103	;'g'
  2405  00F563  20                 	db	32
  2406  00F564  73                 	db	115	;'s'
  2407  00F565  65                 	db	101	;'e'
  2408  00F566  72                 	db	114	;'r'
  2409  00F567  69                 	db	105	;'i'
  2410  00F568  61                 	db	97	;'a'
  2411  00F569  6C                 	db	108	;'l'
  2412  00F56A  20                 	db	32
  2413  00F56B  6E                 	db	110	;'n'
  2414  00F56C  75                 	db	117	;'u'
  2415  00F56D  6D                 	db	109	;'m'
  2416  00F56E  62                 	db	98	;'b'
  2417  00F56F  65                 	db	101	;'e'
  2418  00F570  72                 	db	114	;'r'
  2419  00F571  00                 	db	0
  2420  00F572                     STR_50:
  2421  00F572  4E                 	db	78	;'N'
  2422  00F573  45                 	db	69	;'E'
  2423  00F574  43                 	db	67	;'C'
  2424  00F575  20                 	db	32
  2425  00F576  43                 	db	67	;'C'
  2426  00F577  6F                 	db	111	;'o'
  2427  00F578  64                 	db	100	;'d'
  2428  00F579  65                 	db	101	;'e'
  2429  00F57A  20                 	db	32
  2430  00F57B  61                 	db	97	;'a'
  2431  00F57C  64                 	db	100	;'d'
  2432  00F57D  64                 	db	100	;'d'
  2433  00F57E  72                 	db	114	;'r'
  2434  00F57F  65                 	db	101	;'e'
  2435  00F580  73                 	db	115	;'s'
  2436  00F581  73                 	db	115	;'s'
  2437  00F582  3A                 	db	58	;':'
  2438  00F583  20                 	db	32
  2439  00F584  30                 	db	48	;'0'
  2440  00F585  78                 	db	120	;'x'
  2441  00F586  25                 	db	37
  2442  00F587  30                 	db	48	;'0'
  2443  00F588  32                 	db	50	;'2'
  2444  00F589  58                 	db	88	;'X'
  2445  00F58A  20                 	db	32
  2446  00F58B  2C                 	db	44
  2447  00F58C  20                 	db	32
  2448  00F58D  63                 	db	99	;'c'
  2449  00F58E  6F                 	db	111	;'o'
  2450  00F58F  6D                 	db	109	;'m'
  2451  00F590  6D                 	db	109	;'m'
  2452  00F591  61                 	db	97	;'a'
  2453  00F592  6E                 	db	110	;'n'
  2454  00F593  64                 	db	100	;'d'
  2455  00F594  3A                 	db	58	;':'
  2456  00F595  20                 	db	32
  2457  00F596  30                 	db	48	;'0'
  2458  00F597  78                 	db	120	;'x'
  2459  00F598  25                 	db	37
  2460  00F599  30                 	db	48	;'0'
  2461  00F59A  32                 	db	50	;'2'
  2462  00F59B  58                 	db	88	;'X'
  2463  00F59C  20                 	db	32
  2464  00F59D  00                 	db	0
  2465  00F59E                     STR_94:
  2466  00F59E  53                 	db	83	;'S'
  2467  00F59F  65                 	db	101	;'e'
  2468  00F5A0  72                 	db	114	;'r'
  2469  00F5A1  69                 	db	105	;'i'
  2470  00F5A2  61                 	db	97	;'a'
  2471  00F5A3  6C                 	db	108	;'l'
  2472  00F5A4  20                 	db	32
  2473  00F5A5  4E                 	db	78	;'N'
  2474  00F5A6  75                 	db	117	;'u'
  2475  00F5A7  6D                 	db	109	;'m'
  2476  00F5A8  62                 	db	98	;'b'
  2477  00F5A9  65                 	db	101	;'e'
  2478  00F5AA  72                 	db	114	;'r'
  2479  00F5AB  20                 	db	32
  2480  00F5AC  63                 	db	99	;'c'
  2481  00F5AD  6F                 	db	111	;'o'
  2482  00F5AE  75                 	db	117	;'u'
  2483  00F5AF  6C                 	db	108	;'l'
  2484  00F5B0  64                 	db	100	;'d'
  2485  00F5B1  20                 	db	32
  2486  00F5B2  6E                 	db	110	;'n'
  2487  00F5B3  6F                 	db	111	;'o'
  2488  00F5B4  74                 	db	116	;'t'
  2489  00F5B5  20                 	db	32
  2490  00F5B6  62                 	db	98	;'b'
  2491  00F5B7  65                 	db	101	;'e'
  2492  00F5B8  20                 	db	32
  2493  00F5B9  62                 	db	98	;'b'
  2494  00F5BA  75                 	db	117	;'u'
  2495  00F5BB  72                 	db	114	;'r'
  2496  00F5BC  6E                 	db	110	;'n'
  2497  00F5BD  65                 	db	101	;'e'
  2498  00F5BE  64                 	db	100	;'d'
  2499  00F5BF  20                 	db	32
  2500  00F5C0  74                 	db	116	;'t'
  2501  00F5C1  6F                 	db	111	;'o'
  2502  00F5C2  20                 	db	32
  2503  00F5C3  45                 	db	69	;'E'
  2504  00F5C4  45                 	db	69	;'E'
  2505  00F5C5  50                 	db	80	;'P'
  2506  00F5C6  52                 	db	82	;'R'
  2507  00F5C7  4F                 	db	79	;'O'
  2508  00F5C8  4D                 	db	77	;'M'
  2509  00F5C9  00                 	db	0
  2510  00F5CA                     STR_91:
  2511  00F5CA  53                 	db	83	;'S'
  2512  00F5CB  65                 	db	101	;'e'
  2513  00F5CC  72                 	db	114	;'r'
  2514  00F5CD  69                 	db	105	;'i'
  2515  00F5CE  61                 	db	97	;'a'
  2516  00F5CF  6C                 	db	108	;'l'
  2517  00F5D0  20                 	db	32
  2518  00F5D1  4E                 	db	78	;'N'
  2519  00F5D2  75                 	db	117	;'u'
  2520  00F5D3  6D                 	db	109	;'m'
  2521  00F5D4  62                 	db	98	;'b'
  2522  00F5D5  65                 	db	101	;'e'
  2523  00F5D6  72                 	db	114	;'r'
  2524  00F5D7  20                 	db	32
  2525  00F5D8  73                 	db	115	;'s'
  2526  00F5D9  75                 	db	117	;'u'
  2527  00F5DA  63                 	db	99	;'c'
  2528  00F5DB  63                 	db	99	;'c'
  2529  00F5DC  65                 	db	101	;'e'
  2530  00F5DD  73                 	db	115	;'s'
  2531  00F5DE  73                 	db	115	;'s'
  2532  00F5DF  66                 	db	102	;'f'
  2533  00F5E0  75                 	db	117	;'u'
  2534  00F5E1  6C                 	db	108	;'l'
  2535  00F5E2  6C                 	db	108	;'l'
  2536  00F5E3  79                 	db	121	;'y'
  2537  00F5E4  20                 	db	32
  2538  00F5E5  62                 	db	98	;'b'
  2539  00F5E6  75                 	db	117	;'u'
  2540  00F5E7  72                 	db	114	;'r'
  2541  00F5E8  6E                 	db	110	;'n'
  2542  00F5E9  65                 	db	101	;'e'
  2543  00F5EA  64                 	db	100	;'d'
  2544  00F5EB  20                 	db	32
  2545  00F5EC  74                 	db	116	;'t'
  2546  00F5ED  6F                 	db	111	;'o'
  2547  00F5EE  20                 	db	32
  2548  00F5EF  45                 	db	69	;'E'
  2549  00F5F0  45                 	db	69	;'E'
  2550  00F5F1  50                 	db	80	;'P'
  2551  00F5F2  52                 	db	82	;'R'
  2552  00F5F3  4F                 	db	79	;'O'
  2553  00F5F4  4D                 	db	77	;'M'
  2554  00F5F5  00                 	db	0
  2555  00F5F6                     STR_78:
  2556  00F5F6  52                 	db	82	;'R'
  2557  00F5F7  46                 	db	70	;'F'
  2558  00F5F8  20                 	db	32
  2559  00F5F9  63                 	db	99	;'c'
  2560  00F5FA  6F                 	db	111	;'o'
  2561  00F5FB  6E                 	db	110	;'n'
  2562  00F5FC  66                 	db	102	;'f'
  2563  00F5FD  69                 	db	105	;'i'
  2564  00F5FE  67                 	db	103	;'g'
  2565  00F5FF  20                 	db	32
  2566  00F600  25                 	db	37
  2567  00F601  64                 	db	100	;'d'
  2568  00F602  20                 	db	32
  2569  00F603  63                 	db	99	;'c'
  2570  00F604  68                 	db	104	;'h'
  2571  00F605  61                 	db	97	;'a'
  2572  00F606  6E                 	db	110	;'n'
  2573  00F607  6E                 	db	110	;'n'
  2574  00F608  65                 	db	101	;'e'
  2575  00F609  6C                 	db	108	;'l'
  2576  00F60A  20                 	db	32
  2577  00F60B  25                 	db	37
  2578  00F60C  63                 	db	99	;'c'
  2579  00F60D  20                 	db	32
  2580  00F60E  73                 	db	115	;'s'
  2581  00F60F  75                 	db	117	;'u'
  2582  00F610  63                 	db	99	;'c'
  2583  00F611  63                 	db	99	;'c'
  2584  00F612  65                 	db	101	;'e'
  2585  00F613  73                 	db	115	;'s'
  2586  00F614  73                 	db	115	;'s'
  2587  00F615  66                 	db	102	;'f'
  2588  00F616  75                 	db	117	;'u'
  2589  00F617  6C                 	db	108	;'l'
  2590  00F618  6C                 	db	108	;'l'
  2591  00F619  79                 	db	121	;'y'
  2592  00F61A  20                 	db	32
  2593  00F61B  65                 	db	101	;'e'
  2594  00F61C  72                 	db	114	;'r'
  2595  00F61D  61                 	db	97	;'a'
  2596  00F61E  73                 	db	115	;'s'
  2597  00F61F  65                 	db	101	;'e'
  2598  00F620  64                 	db	100	;'d'
  2599  00F621  00                 	db	0
  2600  00F622                     STR_79:
  2601  00F622  45                 	db	69	;'E'
  2602  00F623  72                 	db	114	;'r'
  2603  00F624  72                 	db	114	;'r'
  2604  00F625  6F                 	db	111	;'o'
  2605  00F626  72                 	db	114	;'r'
  2606  00F627  3A                 	db	58	;':'
  2607  00F628  20                 	db	32
  2608  00F629  52                 	db	82	;'R'
  2609  00F62A  46                 	db	70	;'F'
  2610  00F62B  20                 	db	32
  2611  00F62C  63                 	db	99	;'c'
  2612  00F62D  68                 	db	104	;'h'
  2613  00F62E  61                 	db	97	;'a'
  2614  00F62F  6E                 	db	110	;'n'
  2615  00F630  6E                 	db	110	;'n'
  2616  00F631  65                 	db	101	;'e'
  2617  00F632  6C                 	db	108	;'l'
  2618  00F633  20                 	db	32
  2619  00F634  6E                 	db	110	;'n'
  2620  00F635  65                 	db	101	;'e'
  2621  00F636  65                 	db	101	;'e'
  2622  00F637  64                 	db	100	;'d'
  2623  00F638  73                 	db	115	;'s'
  2624  00F639  20                 	db	32
  2625  00F63A  74                 	db	116	;'t'
  2626  00F63B  6F                 	db	111	;'o'
  2627  00F63C  20                 	db	32
  2628  00F63D  62                 	db	98	;'b'
  2629  00F63E  65                 	db	101	;'e'
  2630  00F63F  20                 	db	32
  2631  00F640  6F                 	db	111	;'o'
  2632  00F641  6E                 	db	110	;'n'
  2633  00F642  65                 	db	101	;'e'
  2634  00F643  20                 	db	32
  2635  00F644  63                 	db	99	;'c'
  2636  00F645  68                 	db	104	;'h'
  2637  00F646  61                 	db	97	;'a'
  2638  00F647  72                 	db	114	;'r'
  2639  00F648  61                 	db	97	;'a'
  2640  00F649  63                 	db	99	;'c'
  2641  00F64A  74                 	db	116	;'t'
  2642  00F64B  65                 	db	101	;'e'
  2643  00F64C  72                 	db	114	;'r'
  2644  00F64D  00                 	db	0
  2645  00F64E                     STR_73:
  2646  00F64E  45                 	db	69	;'E'
  2647  00F64F  72                 	db	114	;'r'
  2648  00F650  72                 	db	114	;'r'
  2649  00F651  6F                 	db	111	;'o'
  2650  00F652  72                 	db	114	;'r'
  2651  00F653  3A                 	db	58	;':'
  2652  00F654  20                 	db	32
  2653  00F655  4E                 	db	78	;'N'
  2654  00F656  6F                 	db	111	;'o'
  2655  00F657  20                 	db	32
  2656  00F658  73                 	db	115	;'s'
  2657  00F659  70                 	db	112	;'p'
  2658  00F65A  61                 	db	97	;'a'
  2659  00F65B  63                 	db	99	;'c'
  2660  00F65C  65                 	db	101	;'e'
  2661  00F65D  20                 	db	32
  2662  00F65E  61                 	db	97	;'a'
  2663  00F65F  76                 	db	118	;'v'
  2664  00F660  61                 	db	97	;'a'
  2665  00F661  69                 	db	105	;'i'
  2666  00F662  6C                 	db	108	;'l'
  2667  00F663  61                 	db	97	;'a'
  2668  00F664  62                 	db	98	;'b'
  2669  00F665  6C                 	db	108	;'l'
  2670  00F666  65                 	db	101	;'e'
  2671  00F667  20                 	db	32
  2672  00F668  74                 	db	116	;'t'
  2673  00F669  6F                 	db	111	;'o'
  2674  00F66A  20                 	db	32
  2675  00F66B  74                 	db	116	;'t'
  2676  00F66C  68                 	db	104	;'h'
  2677  00F66D  69                 	db	105	;'i'
  2678  00F66E  73                 	db	115	;'s'
  2679  00F66F  20                 	db	32
  2680  00F670  52                 	db	82	;'R'
  2681  00F671  46                 	db	70	;'F'
  2682  00F672  20                 	db	32
  2683  00F673  63                 	db	99	;'c'
  2684  00F674  6F                 	db	111	;'o'
  2685  00F675  64                 	db	100	;'d'
  2686  00F676  65                 	db	101	;'e'
  2687  00F677  00                 	db	0
  2688  00F678                     STR_103:
  2689  00F678  4E                 	db	78	;'N'
  2690  00F679  61                 	db	97	;'a'
  2691  00F67A  6D                 	db	109	;'m'
  2692  00F67B  65                 	db	101	;'e'
  2693  00F67C  20                 	db	32
  2694  00F67D  68                 	db	104	;'h'
  2695  00F67E  61                 	db	97	;'a'
  2696  00F67F  73                 	db	115	;'s'
  2697  00F680  20                 	db	32
  2698  00F681  74                 	db	116	;'t'
  2699  00F682  6F                 	db	111	;'o'
  2700  00F683  20                 	db	32
  2701  00F684  62                 	db	98	;'b'
  2702  00F685  65                 	db	101	;'e'
  2703  00F686  20                 	db	32
  2704  00F687  41                 	db	65	;'A'
  2705  00F688  6C                 	db	108	;'l'
  2706  00F689  70                 	db	112	;'p'
  2707  00F68A  68                 	db	104	;'h'
  2708  00F68B  61                 	db	97	;'a'
  2709  00F68C  6E                 	db	110	;'n'
  2710  00F68D  75                 	db	117	;'u'
  2711  00F68E  6D                 	db	109	;'m'
  2712  00F68F  65                 	db	101	;'e'
  2713  00F690  72                 	db	114	;'r'
  2714  00F691  69                 	db	105	;'i'
  2715  00F692  63                 	db	99	;'c'
  2716  00F693  2E                 	db	46
  2717  00F694  20                 	db	32
  2718  00F695  4E                 	db	78	;'N'
  2719  00F696  6F                 	db	111	;'o'
  2720  00F697  20                 	db	32
  2721  00F698  73                 	db	115	;'s'
  2722  00F699  79                 	db	121	;'y'
  2723  00F69A  6D                 	db	109	;'m'
  2724  00F69B  62                 	db	98	;'b'
  2725  00F69C  6F                 	db	111	;'o'
  2726  00F69D  6C                 	db	108	;'l'
  2727  00F69E  73                 	db	115	;'s'
  2728  00F69F  21                 	db	33
  2729  00F6A0  00                 	db	0
  2730  00F6A1                     STR_162:
  2731  00F6A1  4E                 	db	78	;'N'
  2732  00F6A2  45                 	db	69	;'E'
  2733  00F6A3  43                 	db	67	;'C'
  2734  00F6A4  20                 	db	32
  2735  00F6A5  64                 	db	100	;'d'
  2736  00F6A6  65                 	db	101	;'e'
  2737  00F6A7  73                 	db	115	;'s'
  2738  00F6A8  63                 	db	99	;'c'
  2739  00F6A9  72                 	db	114	;'r'
  2740  00F6AA  69                 	db	105	;'i'
  2741  00F6AB  70                 	db	112	;'p'
  2742  00F6AC  74                 	db	116	;'t'
  2743  00F6AD  69                 	db	105	;'i'
  2744  00F6AE  6F                 	db	111	;'o'
  2745  00F6AF  6E                 	db	110	;'n'
  2746  00F6B0  20                 	db	32
  2747  00F6B1  66                 	db	102	;'f'
  2748  00F6B2  6F                 	db	111	;'o'
  2749  00F6B3  72                 	db	114	;'r'
  2750  00F6B4  20                 	db	32
  2751  00F6B5  41                 	db	65	;'A'
  2752  00F6B6  72                 	db	114	;'r'
  2753  00F6B7  62                 	db	98	;'b'
  2754  00F6B8  69                 	db	105	;'i'
  2755  00F6B9  74                 	db	116	;'t'
  2756  00F6BA  72                 	db	114	;'r'
  2757  00F6BB  61                 	db	97	;'a'
  2758  00F6BC  72                 	db	114	;'r'
  2759  00F6BD  79                 	db	121	;'y'
  2760  00F6BE  20                 	db	32
  2761  00F6BF  63                 	db	99	;'c'
  2762  00F6C0  6F                 	db	111	;'o'
  2763  00F6C1  64                 	db	100	;'d'
  2764  00F6C2  65                 	db	101	;'e'
  2765  00F6C3  20                 	db	32
  2766  00F6C4  73                 	db	115	;'s'
  2767  00F6C5  65                 	db	101	;'e'
  2768  00F6C6  6E                 	db	110	;'n'
  2769  00F6C7  64                 	db	100	;'d'
  2770  00F6C8  00                 	db	0
  2771  00F6C9                     STR_98:
  2772  00F6C9  45                 	db	69	;'E'
  2773  00F6CA  6E                 	db	110	;'n'
  2774  00F6CB  74                 	db	116	;'t'
  2775  00F6CC  65                 	db	101	;'e'
  2776  00F6CD  72                 	db	114	;'r'
  2777  00F6CE  20                 	db	32
  2778  00F6CF  59                 	db	89	;'Y'
  2779  00F6D0  20                 	db	32
  2780  00F6D1  74                 	db	116	;'t'
  2781  00F6D2  6F                 	db	111	;'o'
  2782  00F6D3  20                 	db	32
  2783  00F6D4  63                 	db	99	;'c'
  2784  00F6D5  68                 	db	104	;'h'
  2785  00F6D6  61                 	db	97	;'a'
  2786  00F6D7  6E                 	db	110	;'n'
  2787  00F6D8  67                 	db	103	;'g'
  2788  00F6D9  65                 	db	101	;'e'
  2789  00F6DA  20                 	db	32
  2790  00F6DB  4E                 	db	78	;'N'
  2791  00F6DC  61                 	db	97	;'a'
  2792  00F6DD  6D                 	db	109	;'m'
  2793  00F6DE  65                 	db	101	;'e'
  2794  00F6DF  20                 	db	32
  2795  00F6E0  6F                 	db	111	;'o'
  2796  00F6E1  72                 	db	114	;'r'
  2797  00F6E2  20                 	db	32
  2798  00F6E3  4E                 	db	78	;'N'
  2799  00F6E4  20                 	db	32
  2800  00F6E5  74                 	db	116	;'t'
  2801  00F6E6  6F                 	db	111	;'o'
  2802  00F6E7  20                 	db	32
  2803  00F6E8  63                 	db	99	;'c'
  2804  00F6E9  61                 	db	97	;'a'
  2805  00F6EA  6E                 	db	110	;'n'
  2806  00F6EB  63                 	db	99	;'c'
  2807  00F6EC  65                 	db	101	;'e'
  2808  00F6ED  6C                 	db	108	;'l'
  2809  00F6EE  00                 	db	0
  2810  00F6EF                     STR_65:
  2811  00F6EF  45                 	db	69	;'E'
  2812  00F6F0  72                 	db	114	;'r'
  2813  00F6F1  72                 	db	114	;'r'
  2814  00F6F2  6F                 	db	111	;'o'
  2815  00F6F3  72                 	db	114	;'r'
  2816  00F6F4  3A                 	db	58	;':'
  2817  00F6F5  20                 	db	32
  2818  00F6F6  4E                 	db	78	;'N'
  2819  00F6F7  6F                 	db	111	;'o'
  2820  00F6F8  20                 	db	32
  2821  00F6F9  52                 	db	82	;'R'
  2822  00F6FA  46                 	db	70	;'F'
  2823  00F6FB  20                 	db	32
  2824  00F6FC  63                 	db	99	;'c'
  2825  00F6FD  6F                 	db	111	;'o'
  2826  00F6FE  6E                 	db	110	;'n'
  2827  00F6FF  66                 	db	102	;'f'
  2828  00F700  69                 	db	105	;'i'
  2829  00F701  67                 	db	103	;'g'
  2830  00F702  75                 	db	117	;'u'
  2831  00F703  72                 	db	114	;'r'
  2832  00F704  61                 	db	97	;'a'
  2833  00F705  74                 	db	116	;'t'
  2834  00F706  69                 	db	105	;'i'
  2835  00F707  6F                 	db	111	;'o'
  2836  00F708  6E                 	db	110	;'n'
  2837  00F709  20                 	db	32
  2838  00F70A  73                 	db	115	;'s'
  2839  00F70B  70                 	db	112	;'p'
  2840  00F70C  65                 	db	101	;'e'
  2841  00F70D  63                 	db	99	;'c'
  2842  00F70E  69                 	db	105	;'i'
  2843  00F70F  66                 	db	102	;'f'
  2844  00F710  69                 	db	105	;'i'
  2845  00F711  65                 	db	101	;'e'
  2846  00F712  64                 	db	100	;'d'
  2847  00F713  00                 	db	0
  2848  00F714                     STR_67:
  2849  00F714  45                 	db	69	;'E'
  2850  00F715  72                 	db	114	;'r'
  2851  00F716  72                 	db	114	;'r'
  2852  00F717  6F                 	db	111	;'o'
  2853  00F718  72                 	db	114	;'r'
  2854  00F719  3A                 	db	58	;':'
  2855  00F71A  20                 	db	32
  2856  00F71B  52                 	db	82	;'R'
  2857  00F71C  46                 	db	70	;'F'
  2858  00F71D  20                 	db	32
  2859  00F71E  63                 	db	99	;'c'
  2860  00F71F  6F                 	db	111	;'o'
  2861  00F720  6E                 	db	110	;'n'
  2862  00F721  66                 	db	102	;'f'
  2863  00F722  69                 	db	105	;'i'
  2864  00F723  67                 	db	103	;'g'
  2865  00F724  75                 	db	117	;'u'
  2866  00F725  72                 	db	114	;'r'
  2867  00F726  61                 	db	97	;'a'
  2868  00F727  74                 	db	116	;'t'
  2869  00F728  69                 	db	105	;'i'
  2870  00F729  6F                 	db	111	;'o'
  2871  00F72A  6E                 	db	110	;'n'
  2872  00F72B  20                 	db	32
  2873  00F72C  6F                 	db	111	;'o'
  2874  00F72D  75                 	db	117	;'u'
  2875  00F72E  74                 	db	116	;'t'
  2876  00F72F  20                 	db	32
  2877  00F730  6F                 	db	111	;'o'
  2878  00F731  66                 	db	102	;'f'
  2879  00F732  20                 	db	32
  2880  00F733  72                 	db	114	;'r'
  2881  00F734  61                 	db	97	;'a'
  2882  00F735  6E                 	db	110	;'n'
  2883  00F736  67                 	db	103	;'g'
  2884  00F737  65                 	db	101	;'e'
  2885  00F738  00                 	db	0
  2886  00F739                     STR_54:
  2887  00F739  45                 	db	69	;'E'
  2888  00F73A  72                 	db	114	;'r'
  2889  00F73B  72                 	db	114	;'r'
  2890  00F73C  6F                 	db	111	;'o'
  2891  00F73D  72                 	db	114	;'r'
  2892  00F73E  3A                 	db	58	;':'
  2893  00F73F  20                 	db	32
  2894  00F740  52                 	db	82	;'R'
  2895  00F741  65                 	db	101	;'e'
  2896  00F742  6D                 	db	109	;'m'
  2897  00F743  6F                 	db	111	;'o'
  2898  00F744  74                 	db	116	;'t'
  2899  00F745  65                 	db	101	;'e'
  2900  00F746  20                 	db	32
  2901  00F747  62                 	db	98	;'b'
  2902  00F748  75                 	db	117	;'u'
  2903  00F749  74                 	db	116	;'t'
  2904  00F74A  74                 	db	116	;'t'
  2905  00F74B  6F                 	db	111	;'o'
  2906  00F74C  6E                 	db	110	;'n'
  2907  00F74D  20                 	db	32
  2908  00F74E  6E                 	db	110	;'n'
  2909  00F74F  75                 	db	117	;'u'
  2910  00F750  6D                 	db	109	;'m'
  2911  00F751  62                 	db	98	;'b'
  2912  00F752  65                 	db	101	;'e'
  2913  00F753  72                 	db	114	;'r'
  2914  00F754  20                 	db	32
  2915  00F755  74                 	db	116	;'t'
  2916  00F756  6F                 	db	111	;'o'
  2917  00F757  6F                 	db	111	;'o'
  2918  00F758  20                 	db	32
  2919  00F759  68                 	db	104	;'h'
  2920  00F75A  69                 	db	105	;'i'
  2921  00F75B  67                 	db	103	;'g'
  2922  00F75C  68                 	db	104	;'h'
  2923  00F75D  00                 	db	0
  2924  00F75E                     STR_179:
  2925  00F75E  45                 	db	69	;'E'
  2926  00F75F  72                 	db	114	;'r'
  2927  00F760  72                 	db	114	;'r'
  2928  00F761  6F                 	db	111	;'o'
  2929  00F762  72                 	db	114	;'r'
  2930  00F763  3A                 	db	58	;':'
  2931  00F764  20                 	db	32
  2932  00F765  4E                 	db	78	;'N'
  2933  00F766  6F                 	db	111	;'o'
  2934  00F767  20                 	db	32
  2935  00F768  72                 	db	114	;'r'
  2936  00F769  65                 	db	101	;'e'
  2937  00F76A  6D                 	db	109	;'m'
  2938  00F76B  6F                 	db	111	;'o'
  2939  00F76C  74                 	db	116	;'t'
  2940  00F76D  65                 	db	101	;'e'
  2941  00F76E  20                 	db	32
  2942  00F76F  62                 	db	98	;'b'
  2943  00F770  75                 	db	117	;'u'
  2944  00F771  74                 	db	116	;'t'
  2945  00F772  74                 	db	116	;'t'
  2946  00F773  6F                 	db	111	;'o'
  2947  00F774  6E                 	db	110	;'n'
  2948  00F775  20                 	db	32
  2949  00F776  77                 	db	119	;'w'
  2950  00F777  61                 	db	97	;'a'
  2951  00F778  73                 	db	115	;'s'
  2952  00F779  20                 	db	32
  2953  00F77A  70                 	db	112	;'p'
  2954  00F77B  72                 	db	114	;'r'
  2955  00F77C  65                 	db	101	;'e'
  2956  00F77D  73                 	db	115	;'s'
  2957  00F77E  73                 	db	115	;'s'
  2958  00F77F  65                 	db	101	;'e'
  2959  00F780  64                 	db	100	;'d'
  2960  00F781  00                 	db	0
  2961  00F782                     STR_55:
  2962  00F782  45                 	db	69	;'E'
  2963  00F783  72                 	db	114	;'r'
  2964  00F784  72                 	db	114	;'r'
  2965  00F785  6F                 	db	111	;'o'
  2966  00F786  72                 	db	114	;'r'
  2967  00F787  3A                 	db	58	;':'
  2968  00F788  20                 	db	32
  2969  00F789  52                 	db	82	;'R'
  2970  00F78A  65                 	db	101	;'e'
  2971  00F78B  6D                 	db	109	;'m'
  2972  00F78C  6F                 	db	111	;'o'
  2973  00F78D  74                 	db	116	;'t'
  2974  00F78E  65                 	db	101	;'e'
  2975  00F78F  20                 	db	32
  2976  00F790  62                 	db	98	;'b'
  2977  00F791  75                 	db	117	;'u'
  2978  00F792  74                 	db	116	;'t'
  2979  00F793  74                 	db	116	;'t'
  2980  00F794  6F                 	db	111	;'o'
  2981  00F795  6E                 	db	110	;'n'
  2982  00F796  20                 	db	32
  2983  00F797  6E                 	db	110	;'n'
  2984  00F798  6F                 	db	111	;'o'
  2985  00F799  74                 	db	116	;'t'
  2986  00F79A  20                 	db	32
  2987  00F79B  73                 	db	115	;'s'
  2988  00F79C  70                 	db	112	;'p'
  2989  00F79D  65                 	db	101	;'e'
  2990  00F79E  63                 	db	99	;'c'
  2991  00F79F  69                 	db	105	;'i'
  2992  00F7A0  66                 	db	102	;'f'
  2993  00F7A1  69                 	db	105	;'i'
  2994  00F7A2  65                 	db	101	;'e'
  2995  00F7A3  64                 	db	100	;'d'
  2996  00F7A4  00                 	db	0
  2997  00F7A5                     STR_100:
  2998  00F7A5  45                 	db	69	;'E'
  2999  00F7A6  6E                 	db	110	;'n'
  3000  00F7A7  74                 	db	116	;'t'
  3001  00F7A8  65                 	db	101	;'e'
  3002  00F7A9  72                 	db	114	;'r'
  3003  00F7AA  20                 	db	32
  3004  00F7AB  6E                 	db	110	;'n'
  3005  00F7AC  65                 	db	101	;'e'
  3006  00F7AD  77                 	db	119	;'w'
  3007  00F7AE  20                 	db	32
  3008  00F7AF  42                 	db	66	;'B'
  3009  00F7B0  6C                 	db	108	;'l'
  3010  00F7B1  75                 	db	117	;'u'
  3011  00F7B2  65                 	db	101	;'e'
  3012  00F7B3  74                 	db	116	;'t'
  3013  00F7B4  6F                 	db	111	;'o'
  3014  00F7B5  6F                 	db	111	;'o'
  3015  00F7B6  74                 	db	116	;'t'
  3016  00F7B7  68                 	db	104	;'h'
  3017  00F7B8  20                 	db	32
  3018  00F7B9  42                 	db	66	;'B'
  3019  00F7BA  72                 	db	114	;'r'
  3020  00F7BB  6F                 	db	111	;'o'
  3021  00F7BC  61                 	db	97	;'a'
  3022  00F7BD  64                 	db	100	;'d'
  3023  00F7BE  63                 	db	99	;'c'
  3024  00F7BF  61                 	db	97	;'a'
  3025  00F7C0  73                 	db	115	;'s'
  3026  00F7C1  74                 	db	116	;'t'
  3027  00F7C2  20                 	db	32
  3028  00F7C3  4E                 	db	78	;'N'
  3029  00F7C4  61                 	db	97	;'a'
  3030  00F7C5  6D                 	db	109	;'m'
  3031  00F7C6  65                 	db	101	;'e'
  3032  00F7C7  00                 	db	0
  3033  00F7C8                     STR_124:
  3034  00F7C8  44                 	db	68	;'D'
  3035  00F7C9  69                 	db	105	;'i'
  3036  00F7CA  73                 	db	115	;'s'
  3037  00F7CB  70                 	db	112	;'p'
  3038  00F7CC  6C                 	db	108	;'l'
  3039  00F7CD  61                 	db	97	;'a'
  3040  00F7CE  79                 	db	121	;'y'
  3041  00F7CF  73                 	db	115	;'s'
  3042  00F7D0  20                 	db	32
  3043  00F7D1  46                 	db	70	;'F'
  3044  00F7D2  69                 	db	105	;'i'
  3045  00F7D3  72                 	db	114	;'r'
  3046  00F7D4  6D                 	db	109	;'m'
  3047  00F7D5  77                 	db	119	;'w'
  3048  00F7D6  61                 	db	97	;'a'
  3049  00F7D7  72                 	db	114	;'r'
  3050  00F7D8  65                 	db	101	;'e'
  3051  00F7D9  2F                 	db	47
  3052  00F7DA  48                 	db	72	;'H'
  3053  00F7DB  61                 	db	97	;'a'
  3054  00F7DC  72                 	db	114	;'r'
  3055  00F7DD  64                 	db	100	;'d'
  3056  00F7DE  77                 	db	119	;'w'
  3057  00F7DF  61                 	db	97	;'a'
  3058  00F7E0  72                 	db	114	;'r'
  3059  00F7E1  65                 	db	101	;'e'
  3060  00F7E2  20                 	db	32
  3061  00F7E3  56                 	db	86	;'V'
  3062  00F7E4  65                 	db	101	;'e'
  3063  00F7E5  72                 	db	114	;'r'
  3064  00F7E6  73                 	db	115	;'s'
  3065  00F7E7  69                 	db	105	;'i'
  3066  00F7E8  6F                 	db	111	;'o'
  3067  00F7E9  6E                 	db	110	;'n'
  3068  00F7EA  00                 	db	0
  3069  00F7EB                     STR_95:
  3070  00F7EB  53                 	db	83	;'S'
  3071  00F7EC  65                 	db	101	;'e'
  3072  00F7ED  72                 	db	114	;'r'
  3073  00F7EE  69                 	db	105	;'i'
  3074  00F7EF  61                 	db	97	;'a'
  3075  00F7F0  6C                 	db	108	;'l'
  3076  00F7F1  20                 	db	32
  3077  00F7F2  4E                 	db	78	;'N'
  3078  00F7F3  75                 	db	117	;'u'
  3079  00F7F4  6D                 	db	109	;'m'
  3080  00F7F5  62                 	db	98	;'b'
  3081  00F7F6  65                 	db	101	;'e'
  3082  00F7F7  72                 	db	114	;'r'
  3083  00F7F8  20                 	db	32
  3084  00F7F9  65                 	db	101	;'e'
  3085  00F7FA  6E                 	db	110	;'n'
  3086  00F7FB  74                 	db	116	;'t'
  3087  00F7FC  65                 	db	101	;'e'
  3088  00F7FD  72                 	db	114	;'r'
  3089  00F7FE  65                 	db	101	;'e'
  3090  00F7FF  64                 	db	100	;'d'
  3091  00F800  20                 	db	32
  3092  00F801  69                 	db	105	;'i'
  3093  00F802  6E                 	db	110	;'n'
  3094  00F803  63                 	db	99	;'c'
  3095  00F804  6F                 	db	111	;'o'
  3096  00F805  72                 	db	114	;'r'
  3097  00F806  72                 	db	114	;'r'
  3098  00F807  65                 	db	101	;'e'
  3099  00F808  63                 	db	99	;'c'
  3100  00F809  74                 	db	116	;'t'
  3101  00F80A  6C                 	db	108	;'l'
  3102  00F80B  79                 	db	121	;'y'
  3103  00F80C  00                 	db	0
  3104  00F80D                     STR_36:
  3105  00F80D  45                 	db	69	;'E'
  3106  00F80E  72                 	db	114	;'r'
  3107  00F80F  72                 	db	114	;'r'
  3108  00F810  6F                 	db	111	;'o'
  3109  00F811  72                 	db	114	;'r'
  3110  00F812  3A                 	db	58	;':'
  3111  00F813  20                 	db	32
  3112  00F814  63                 	db	99	;'c'
  3113  00F815  6F                 	db	111	;'o'
  3114  00F816  75                 	db	117	;'u'
  3115  00F817  6C                 	db	108	;'l'
  3116  00F818  64                 	db	100	;'d'
  3117  00F819  20                 	db	32
  3118  00F81A  6E                 	db	110	;'n'
  3119  00F81B  6F                 	db	111	;'o'
  3120  00F81C  74                 	db	116	;'t'
  3121  00F81D  20                 	db	32
  3122  00F81E  64                 	db	100	;'d'
  3123  00F81F  65                 	db	101	;'e'
  3124  00F820  63                 	db	99	;'c'
  3125  00F821  6F                 	db	111	;'o'
  3126  00F822  64                 	db	100	;'d'
  3127  00F823  65                 	db	101	;'e'
  3128  00F824  20                 	db	32
  3129  00F825  4E                 	db	78	;'N'
  3130  00F826  45                 	db	69	;'E'
  3131  00F827  43                 	db	67	;'C'
  3132  00F828  20                 	db	32
  3133  00F829  63                 	db	99	;'c'
  3134  00F82A  6F                 	db	111	;'o'
  3135  00F82B  64                 	db	100	;'d'
  3136  00F82C  65                 	db	101	;'e'
  3137  00F82D  00                 	db	0
  3138  00F82E                     STR_128:
  3139  00F82E  43                 	db	67	;'C'
  3140  00F82F  68                 	db	104	;'h'
  3141  00F830  61                 	db	97	;'a'
  3142  00F831  6E                 	db	110	;'n'
  3143  00F832  67                 	db	103	;'g'
  3144  00F833  65                 	db	101	;'e'
  3145  00F834  73                 	db	115	;'s'
  3146  00F835  20                 	db	32
  3147  00F836  42                 	db	66	;'B'
  3148  00F837  6C                 	db	108	;'l'
  3149  00F838  75                 	db	117	;'u'
  3150  00F839  65                 	db	101	;'e'
  3151  00F83A  74                 	db	116	;'t'
  3152  00F83B  6F                 	db	111	;'o'
  3153  00F83C  6F                 	db	111	;'o'
  3154  00F83D  74                 	db	116	;'t'
  3155  00F83E  68                 	db	104	;'h'
  3156  00F83F  20                 	db	32
  3157  00F840  42                 	db	66	;'B'
  3158  00F841  72                 	db	114	;'r'
  3159  00F842  6F                 	db	111	;'o'
  3160  00F843  61                 	db	97	;'a'
  3161  00F844  64                 	db	100	;'d'
  3162  00F845  63                 	db	99	;'c'
  3163  00F846  61                 	db	97	;'a'
  3164  00F847  73                 	db	115	;'s'
  3165  00F848  74                 	db	116	;'t'
  3166  00F849  20                 	db	32
  3167  00F84A  4E                 	db	78	;'N'
  3168  00F84B  61                 	db	97	;'a'
  3169  00F84C  6D                 	db	109	;'m'
  3170  00F84D  65                 	db	101	;'e'
  3171  00F84E  00                 	db	0
  3172  00F84F                     STR_172:
  3173  00F84F  52                 	db	82	;'R'
  3174  00F850  43                 	db	67	;'C'
  3175  00F851  2D                 	db	45
  3176  00F852  30                 	db	48	;'0'
  3177  00F853  31                 	db	49	;'1'
  3178  00F854  35                 	db	53	;'5'
  3179  00F855  2A                 	db	42
  3180  00F856  33                 	db	51	;'3'
  3181  00F857  20                 	db	32
  3182  00F858  43                 	db	67	;'C'
  3183  00F859  68                 	db	104	;'h'
  3184  00F85A  61                 	db	97	;'a'
  3185  00F85B  6E                 	db	110	;'n'
  3186  00F85C  6E                 	db	110	;'n'
  3187  00F85D  65                 	db	101	;'e'
  3188  00F85E  6C                 	db	108	;'l'
  3189  00F85F  20                 	db	32
  3190  00F860  48                 	db	72	;'H'
  3191  00F861  20                 	db	32
  3192  00F862  64                 	db	100	;'d'
  3193  00F863  65                 	db	101	;'e'
  3194  00F864  76                 	db	118	;'v'
  3195  00F865  69                 	db	105	;'i'
  3196  00F866  63                 	db	99	;'c'
  3197  00F867  65                 	db	101	;'e'
  3198  00F868  20                 	db	32
  3199  00F869  31                 	db	49	;'1'
  3200  00F86A  20                 	db	32
  3201  00F86B  4F                 	db	79	;'O'
  3202  00F86C  46                 	db	70	;'F'
  3203  00F86D  46                 	db	70	;'F'
  3204  00F86E  00                 	db	0
  3205  00F86F                     STR_174:
  3206  00F86F  52                 	db	82	;'R'
  3207  00F870  43                 	db	67	;'C'
  3208  00F871  2D                 	db	45
  3209  00F872  30                 	db	48	;'0'
  3210  00F873  31                 	db	49	;'1'
  3211  00F874  35                 	db	53	;'5'
  3212  00F875  2A                 	db	42
  3213  00F876  33                 	db	51	;'3'
  3214  00F877  20                 	db	32
  3215  00F878  43                 	db	67	;'C'
  3216  00F879  68                 	db	104	;'h'
  3217  00F87A  61                 	db	97	;'a'
  3218  00F87B  6E                 	db	110	;'n'
  3219  00F87C  6E                 	db	110	;'n'
  3220  00F87D  65                 	db	101	;'e'
  3221  00F87E  6C                 	db	108	;'l'
  3222  00F87F  20                 	db	32
  3223  00F880  48                 	db	72	;'H'
  3224  00F881  20                 	db	32
  3225  00F882  64                 	db	100	;'d'
  3226  00F883  65                 	db	101	;'e'
  3227  00F884  76                 	db	118	;'v'
  3228  00F885  69                 	db	105	;'i'
  3229  00F886  63                 	db	99	;'c'
  3230  00F887  65                 	db	101	;'e'
  3231  00F888  20                 	db	32
  3232  00F889  32                 	db	50	;'2'
  3233  00F88A  20                 	db	32
  3234  00F88B  4F                 	db	79	;'O'
  3235  00F88C  46                 	db	70	;'F'
  3236  00F88D  46                 	db	70	;'F'
  3237  00F88E  00                 	db	0
  3238  00F88F                     STR_176:
  3239  00F88F  52                 	db	82	;'R'
  3240  00F890  43                 	db	67	;'C'
  3241  00F891  2D                 	db	45
  3242  00F892  30                 	db	48	;'0'
  3243  00F893  31                 	db	49	;'1'
  3244  00F894  35                 	db	53	;'5'
  3245  00F895  2A                 	db	42
  3246  00F896  33                 	db	51	;'3'
  3247  00F897  20                 	db	32
  3248  00F898  43                 	db	67	;'C'
  3249  00F899  68                 	db	104	;'h'
  3250  00F89A  61                 	db	97	;'a'
  3251  00F89B  6E                 	db	110	;'n'
  3252  00F89C  6E                 	db	110	;'n'
  3253  00F89D  65                 	db	101	;'e'
  3254  00F89E  6C                 	db	108	;'l'
  3255  00F89F  20                 	db	32
  3256  00F8A0  48                 	db	72	;'H'
  3257  00F8A1  20                 	db	32
  3258  00F8A2  64                 	db	100	;'d'
  3259  00F8A3  65                 	db	101	;'e'
  3260  00F8A4  76                 	db	118	;'v'
  3261  00F8A5  69                 	db	105	;'i'
  3262  00F8A6  63                 	db	99	;'c'
  3263  00F8A7  65                 	db	101	;'e'
  3264  00F8A8  20                 	db	32
  3265  00F8A9  33                 	db	51	;'3'
  3266  00F8AA  20                 	db	32
  3267  00F8AB  4F                 	db	79	;'O'
  3268  00F8AC  46                 	db	70	;'F'
  3269  00F8AD  46                 	db	70	;'F'
  3270  00F8AE  00                 	db	0
  3271  00F8AF                     STR_122:
  3272  00F8AF  43                 	db	67	;'C'
  3273  00F8B0  6C                 	db	108	;'l'
  3274  00F8B1  65                 	db	101	;'e'
  3275  00F8B2  61                 	db	97	;'a'
  3276  00F8B3  72                 	db	114	;'r'
  3277  00F8B4  73                 	db	115	;'s'
  3278  00F8B5  20                 	db	32
  3279  00F8B6  6D                 	db	109	;'m'
  3280  00F8B7  65                 	db	101	;'e'
  3281  00F8B8  6D                 	db	109	;'m'
  3282  00F8B9  6F                 	db	111	;'o'
  3283  00F8BA  72                 	db	114	;'r'
  3284  00F8BB  79                 	db	121	;'y'
  3285  00F8BC  20                 	db	32
  3286  00F8BD  61                 	db	97	;'a'
  3287  00F8BE  6E                 	db	110	;'n'
  3288  00F8BF  64                 	db	100	;'d'
  3289  00F8C0  20                 	db	32
  3290  00F8C1  72                 	db	114	;'r'
  3291  00F8C2  65                 	db	101	;'e'
  3292  00F8C3  73                 	db	115	;'s'
  3293  00F8C4  65                 	db	101	;'e'
  3294  00F8C5  74                 	db	116	;'t'
  3295  00F8C6  73                 	db	115	;'s'
  3296  00F8C7  20                 	db	32
  3297  00F8C8  64                 	db	100	;'d'
  3298  00F8C9  65                 	db	101	;'e'
  3299  00F8CA  76                 	db	118	;'v'
  3300  00F8CB  69                 	db	105	;'i'
  3301  00F8CC  63                 	db	99	;'c'
  3302  00F8CD  65                 	db	101	;'e'
  3303  00F8CE  00                 	db	0
  3304  00F8CF                     STR_81:
  3305  00F8CF  45                 	db	69	;'E'
  3306  00F8D0  6E                 	db	110	;'n'
  3307  00F8D1  74                 	db	116	;'t'
  3308  00F8D2  65                 	db	101	;'e'
  3309  00F8D3  72                 	db	114	;'r'
  3310  00F8D4  20                 	db	32
  3311  00F8D5  59                 	db	89	;'Y'
  3312  00F8D6  20                 	db	32
  3313  00F8D7  74                 	db	116	;'t'
  3314  00F8D8  6F                 	db	111	;'o'
  3315  00F8D9  20                 	db	32
  3316  00F8DA  72                 	db	114	;'r'
  3317  00F8DB  65                 	db	101	;'e'
  3318  00F8DC  73                 	db	115	;'s'
  3319  00F8DD  65                 	db	101	;'e'
  3320  00F8DE  74                 	db	116	;'t'
  3321  00F8DF  20                 	db	32
  3322  00F8E0  6F                 	db	111	;'o'
  3323  00F8E1  72                 	db	114	;'r'
  3324  00F8E2  20                 	db	32
  3325  00F8E3  4E                 	db	78	;'N'
  3326  00F8E4  20                 	db	32
  3327  00F8E5  74                 	db	116	;'t'
  3328  00F8E6  6F                 	db	111	;'o'
  3329  00F8E7  20                 	db	32
  3330  00F8E8  63                 	db	99	;'c'
  3331  00F8E9  61                 	db	97	;'a'
  3332  00F8EA  6E                 	db	110	;'n'
  3333  00F8EB  63                 	db	99	;'c'
  3334  00F8EC  65                 	db	101	;'e'
  3335  00F8ED  6C                 	db	108	;'l'
  3336  00F8EE  00                 	db	0
  3337  00F8EF                     STR_32:
  3338  00F8EF  45                 	db	69	;'E'
  3339  00F8F0  72                 	db	114	;'r'
  3340  00F8F1  72                 	db	114	;'r'
  3341  00F8F2  6F                 	db	111	;'o'
  3342  00F8F3  72                 	db	114	;'r'
  3343  00F8F4  3A                 	db	58	;':'
  3344  00F8F5  20                 	db	32
  3345  00F8F6  63                 	db	99	;'c'
  3346  00F8F7  6F                 	db	111	;'o'
  3347  00F8F8  75                 	db	117	;'u'
  3348  00F8F9  6C                 	db	108	;'l'
  3349  00F8FA  64                 	db	100	;'d'
  3350  00F8FB  20                 	db	32
  3351  00F8FC  6E                 	db	110	;'n'
  3352  00F8FD  6F                 	db	111	;'o'
  3353  00F8FE  74                 	db	116	;'t'
  3354  00F8FF  20                 	db	32
  3355  00F900  64                 	db	100	;'d'
  3356  00F901  65                 	db	101	;'e'
  3357  00F902  63                 	db	99	;'c'
  3358  00F903  6F                 	db	111	;'o'
  3359  00F904  64                 	db	100	;'d'
  3360  00F905  65                 	db	101	;'e'
  3361  00F906  20                 	db	32
  3362  00F907  41                 	db	65	;'A'
  3363  00F908  64                 	db	100	;'d'
  3364  00F909  64                 	db	100	;'d'
  3365  00F90A  72                 	db	114	;'r'
  3366  00F90B  65                 	db	101	;'e'
  3367  00F90C  73                 	db	115	;'s'
  3368  00F90D  73                 	db	115	;'s'
  3369  00F90E  00                 	db	0
  3370  00F90F                     STR_27:
  3371  00F90F  45                 	db	69	;'E'
  3372  00F910  72                 	db	114	;'r'
  3373  00F911  72                 	db	114	;'r'
  3374  00F912  6F                 	db	111	;'o'
  3375  00F913  72                 	db	114	;'r'
  3376  00F914  3A                 	db	58	;':'
  3377  00F915  20                 	db	32
  3378  00F916  43                 	db	67	;'C'
  3379  00F917  6F                 	db	111	;'o'
  3380  00F918  6D                 	db	109	;'m'
  3381  00F919  6D                 	db	109	;'m'
  3382  00F91A  61                 	db	97	;'a'
  3383  00F91B  6E                 	db	110	;'n'
  3384  00F91C  64                 	db	100	;'d'
  3385  00F91D  20                 	db	32
  3386  00F91E  6C                 	db	108	;'l'
  3387  00F91F  61                 	db	97	;'a'
  3388  00F920  72                 	db	114	;'r'
  3389  00F921  67                 	db	103	;'g'
  3390  00F922  65                 	db	101	;'e'
  3391  00F923  72                 	db	114	;'r'
  3392  00F924  20                 	db	32
  3393  00F925  74                 	db	116	;'t'
  3394  00F926  68                 	db	104	;'h'
  3395  00F927  61                 	db	97	;'a'
  3396  00F928  74                 	db	116	;'t'
  3397  00F929  20                 	db	32
  3398  00F92A  32                 	db	50	;'2'
  3399  00F92B  35                 	db	53	;'5'
  3400  00F92C  35                 	db	53	;'5'
  3401  00F92D  00                 	db	0
  3402  00F92E                     STR_28:
  3403  00F92E  45                 	db	69	;'E'
  3404  00F92F  72                 	db	114	;'r'
  3405  00F930  72                 	db	114	;'r'
  3406  00F931  6F                 	db	111	;'o'
  3407  00F932  72                 	db	114	;'r'
  3408  00F933  3A                 	db	58	;':'
  3409  00F934  20                 	db	32
  3410  00F935  41                 	db	65	;'A'
  3411  00F936  64                 	db	100	;'d'
  3412  00F937  64                 	db	100	;'d'
  3413  00F938  72                 	db	114	;'r'
  3414  00F939  65                 	db	101	;'e'
  3415  00F93A  73                 	db	115	;'s'
  3416  00F93B  73                 	db	115	;'s'
  3417  00F93C  20                 	db	32
  3418  00F93D  6C                 	db	108	;'l'
  3419  00F93E  61                 	db	97	;'a'
  3420  00F93F  72                 	db	114	;'r'
  3421  00F940  67                 	db	103	;'g'
  3422  00F941  65                 	db	101	;'e'
  3423  00F942  72                 	db	114	;'r'
  3424  00F943  20                 	db	32
  3425  00F944  74                 	db	116	;'t'
  3426  00F945  68                 	db	104	;'h'
  3427  00F946  61                 	db	97	;'a'
  3428  00F947  74                 	db	116	;'t'
  3429  00F948  20                 	db	32
  3430  00F949  32                 	db	50	;'2'
  3431  00F94A  35                 	db	53	;'5'
  3432  00F94B  35                 	db	53	;'5'
  3433  00F94C  00                 	db	0
  3434  00F94D                     STR_171:
  3435  00F94D  52                 	db	82	;'R'
  3436  00F94E  43                 	db	67	;'C'
  3437  00F94F  2D                 	db	45
  3438  00F950  30                 	db	48	;'0'
  3439  00F951  31                 	db	49	;'1'
  3440  00F952  35                 	db	53	;'5'
  3441  00F953  2A                 	db	42
  3442  00F954  33                 	db	51	;'3'
  3443  00F955  20                 	db	32
  3444  00F956  43                 	db	67	;'C'
  3445  00F957  68                 	db	104	;'h'
  3446  00F958  61                 	db	97	;'a'
  3447  00F959  6E                 	db	110	;'n'
  3448  00F95A  6E                 	db	110	;'n'
  3449  00F95B  65                 	db	101	;'e'
  3450  00F95C  6C                 	db	108	;'l'
  3451  00F95D  20                 	db	32
  3452  00F95E  48                 	db	72	;'H'
  3453  00F95F  20                 	db	32
  3454  00F960  64                 	db	100	;'d'
  3455  00F961  65                 	db	101	;'e'
  3456  00F962  76                 	db	118	;'v'
  3457  00F963  69                 	db	105	;'i'
  3458  00F964  63                 	db	99	;'c'
  3459  00F965  65                 	db	101	;'e'
  3460  00F966  20                 	db	32
  3461  00F967  31                 	db	49	;'1'
  3462  00F968  20                 	db	32
  3463  00F969  4F                 	db	79	;'O'
  3464  00F96A  4E                 	db	78	;'N'
  3465  00F96B  00                 	db	0
  3466  00F96C                     STR_173:
  3467  00F96C  52                 	db	82	;'R'
  3468  00F96D  43                 	db	67	;'C'
  3469  00F96E  2D                 	db	45
  3470  00F96F  30                 	db	48	;'0'
  3471  00F970  31                 	db	49	;'1'
  3472  00F971  35                 	db	53	;'5'
  3473  00F972  2A                 	db	42
  3474  00F973  33                 	db	51	;'3'
  3475  00F974  20                 	db	32
  3476  00F975  43                 	db	67	;'C'
  3477  00F976  68                 	db	104	;'h'
  3478  00F977  61                 	db	97	;'a'
  3479  00F978  6E                 	db	110	;'n'
  3480  00F979  6E                 	db	110	;'n'
  3481  00F97A  65                 	db	101	;'e'
  3482  00F97B  6C                 	db	108	;'l'
  3483  00F97C  20                 	db	32
  3484  00F97D  48                 	db	72	;'H'
  3485  00F97E  20                 	db	32
  3486  00F97F  64                 	db	100	;'d'
  3487  00F980  65                 	db	101	;'e'
  3488  00F981  76                 	db	118	;'v'
  3489  00F982  69                 	db	105	;'i'
  3490  00F983  63                 	db	99	;'c'
  3491  00F984  65                 	db	101	;'e'
  3492  00F985  20                 	db	32
  3493  00F986  32                 	db	50	;'2'
  3494  00F987  20                 	db	32
  3495  00F988  4F                 	db	79	;'O'
  3496  00F989  4E                 	db	78	;'N'
  3497  00F98A  00                 	db	0
  3498  00F98B                     STR_175:
  3499  00F98B  52                 	db	82	;'R'
  3500  00F98C  43                 	db	67	;'C'
  3501  00F98D  2D                 	db	45
  3502  00F98E  30                 	db	48	;'0'
  3503  00F98F  31                 	db	49	;'1'
  3504  00F990  35                 	db	53	;'5'
  3505  00F991  2A                 	db	42
  3506  00F992  33                 	db	51	;'3'
  3507  00F993  20                 	db	32
  3508  00F994  43                 	db	67	;'C'
  3509  00F995  68                 	db	104	;'h'
  3510  00F996  61                 	db	97	;'a'
  3511  00F997  6E                 	db	110	;'n'
  3512  00F998  6E                 	db	110	;'n'
  3513  00F999  65                 	db	101	;'e'
  3514  00F99A  6C                 	db	108	;'l'
  3515  00F99B  20                 	db	32
  3516  00F99C  48                 	db	72	;'H'
  3517  00F99D  20                 	db	32
  3518  00F99E  64                 	db	100	;'d'
  3519  00F99F  65                 	db	101	;'e'
  3520  00F9A0  76                 	db	118	;'v'
  3521  00F9A1  69                 	db	105	;'i'
  3522  00F9A2  63                 	db	99	;'c'
  3523  00F9A3  65                 	db	101	;'e'
  3524  00F9A4  20                 	db	32
  3525  00F9A5  33                 	db	51	;'3'
  3526  00F9A6  20                 	db	32
  3527  00F9A7  4F                 	db	79	;'O'
  3528  00F9A8  4E                 	db	78	;'N'
  3529  00F9A9  00                 	db	0
  3530  00F9AA                     STR_68:
  3531  00F9AA  45                 	db	69	;'E'
  3532  00F9AB  72                 	db	114	;'r'
  3533  00F9AC  72                 	db	114	;'r'
  3534  00F9AD  6F                 	db	111	;'o'
  3535  00F9AE  72                 	db	114	;'r'
  3536  00F9AF  3A                 	db	58	;':'
  3537  00F9B0  20                 	db	32
  3538  00F9B1  4E                 	db	78	;'N'
  3539  00F9B2  6F                 	db	111	;'o'
  3540  00F9B3  20                 	db	32
  3541  00F9B4  52                 	db	82	;'R'
  3542  00F9B5  46                 	db	70	;'F'
  3543  00F9B6  20                 	db	32
  3544  00F9B7  63                 	db	99	;'c'
  3545  00F9B8  68                 	db	104	;'h'
  3546  00F9B9  61                 	db	97	;'a'
  3547  00F9BA  6E                 	db	110	;'n'
  3548  00F9BB  6E                 	db	110	;'n'
  3549  00F9BC  65                 	db	101	;'e'
  3550  00F9BD  6C                 	db	108	;'l'
  3551  00F9BE  20                 	db	32
  3552  00F9BF  73                 	db	115	;'s'
  3553  00F9C0  70                 	db	112	;'p'
  3554  00F9C1  65                 	db	101	;'e'
  3555  00F9C2  63                 	db	99	;'c'
  3556  00F9C3  69                 	db	105	;'i'
  3557  00F9C4  66                 	db	102	;'f'
  3558  00F9C5  69                 	db	105	;'i'
  3559  00F9C6  65                 	db	101	;'e'
  3560  00F9C7  64                 	db	100	;'d'
  3561  00F9C8  00                 	db	0
  3562  00F9C9                     STR_69:
  3563  00F9C9  45                 	db	69	;'E'
  3564  00F9CA  72                 	db	114	;'r'
  3565  00F9CB  72                 	db	114	;'r'
  3566  00F9CC  6F                 	db	111	;'o'
  3567  00F9CD  72                 	db	114	;'r'
  3568  00F9CE  3A                 	db	58	;':'
  3569  00F9CF  20                 	db	32
  3570  00F9D0  52                 	db	82	;'R'
  3571  00F9D1  46                 	db	70	;'F'
  3572  00F9D2  20                 	db	32
  3573  00F9D3  63                 	db	99	;'c'
  3574  00F9D4  68                 	db	104	;'h'
  3575  00F9D5  61                 	db	97	;'a'
  3576  00F9D6  6E                 	db	110	;'n'
  3577  00F9D7  6E                 	db	110	;'n'
  3578  00F9D8  65                 	db	101	;'e'
  3579  00F9D9  6C                 	db	108	;'l'
  3580  00F9DA  20                 	db	32
  3581  00F9DB  6F                 	db	111	;'o'
  3582  00F9DC  75                 	db	117	;'u'
  3583  00F9DD  74                 	db	116	;'t'
  3584  00F9DE  20                 	db	32
  3585  00F9DF  6F                 	db	111	;'o'
  3586  00F9E0  66                 	db	102	;'f'
  3587  00F9E1  20                 	db	32
  3588  00F9E2  72                 	db	114	;'r'
  3589  00F9E3  61                 	db	97	;'a'
  3590  00F9E4  6E                 	db	110	;'n'
  3591  00F9E5  67                 	db	103	;'g'
  3592  00F9E6  65                 	db	101	;'e'
  3593  00F9E7  00                 	db	0
  3594  00F9E8                     STR_38:
  3595  00F9E8  4E                 	db	78	;'N'
  3596  00F9E9  45                 	db	69	;'E'
  3597  00F9EA  43                 	db	67	;'C'
  3598  00F9EB  20                 	db	32
  3599  00F9EC  63                 	db	99	;'c'
  3600  00F9ED  6F                 	db	111	;'o'
  3601  00F9EE  64                 	db	100	;'d'
  3602  00F9EF  65                 	db	101	;'e'
  3603  00F9F0  20                 	db	32
  3604  00F9F1  6E                 	db	110	;'n'
  3605  00F9F2  6F                 	db	111	;'o'
  3606  00F9F3  74                 	db	116	;'t'
  3607  00F9F4  20                 	db	32
  3608  00F9F5  65                 	db	101	;'e'
  3609  00F9F6  6E                 	db	110	;'n'
  3610  00F9F7  74                 	db	116	;'t'
  3611  00F9F8  65                 	db	101	;'e'
  3612  00F9F9  72                 	db	114	;'r'
  3613  00F9FA  65                 	db	101	;'e'
  3614  00F9FB  64                 	db	100	;'d'
  3615  00F9FC  20                 	db	32
  3616  00F9FD  63                 	db	99	;'c'
  3617  00F9FE  6F                 	db	111	;'o'
  3618  00F9FF  72                 	db	114	;'r'
  3619  00FA00  72                 	db	114	;'r'
  3620  00FA01  65                 	db	101	;'e'
  3621  00FA02  63                 	db	99	;'c'
  3622  00FA03  74                 	db	116	;'t'
  3623  00FA04  6C                 	db	108	;'l'
  3624  00FA05  79                 	db	121	;'y'
  3625  00FA06  00                 	db	0
  3626  00FA07                     STR_82:
  3627  00FA07  44                 	db	68	;'D'
  3628  00FA08  65                 	db	101	;'e'
  3629  00FA09  76                 	db	118	;'v'
  3630  00FA0A  69                 	db	105	;'i'
  3631  00FA0B  63                 	db	99	;'c'
  3632  00FA0C  65                 	db	101	;'e'
  3633  00FA0D  20                 	db	32
  3634  00FA0E  72                 	db	114	;'r'
  3635  00FA0F  65                 	db	101	;'e'
  3636  00FA10  73                 	db	115	;'s'
  3637  00FA11  75                 	db	117	;'u'
  3638  00FA12  6D                 	db	109	;'m'
  3639  00FA13  65                 	db	101	;'e'
  3640  00FA14  73                 	db	115	;'s'
  3641  00FA15  20                 	db	32
  3642  00FA16  77                 	db	119	;'w'
  3643  00FA17  69                 	db	105	;'i'
  3644  00FA18  74                 	db	116	;'t'
  3645  00FA19  68                 	db	104	;'h'
  3646  00FA1A  6F                 	db	111	;'o'
  3647  00FA1B  75                 	db	117	;'u'
  3648  00FA1C  74                 	db	116	;'t'
  3649  00FA1D  20                 	db	32
  3650  00FA1E  72                 	db	114	;'r'
  3651  00FA1F  65                 	db	101	;'e'
  3652  00FA20  73                 	db	115	;'s'
  3653  00FA21  65                 	db	101	;'e'
  3654  00FA22  74                 	db	116	;'t'
  3655  00FA23  00                 	db	0
  3656  00FA24                     STR_23:
  3657  00FA24  43                 	db	67	;'C'
  3658  00FA25  6F                 	db	111	;'o'
  3659  00FA26  6E                 	db	110	;'n'
  3660  00FA27  66                 	db	102	;'f'
  3661  00FA28  69                 	db	105	;'i'
  3662  00FA29  67                 	db	103	;'g'
  3663  00FA2A  75                 	db	117	;'u'
  3664  00FA2B  72                 	db	114	;'r'
  3665  00FA2C  61                 	db	97	;'a'
  3666  00FA2D  74                 	db	116	;'t'
  3667  00FA2E  69                 	db	105	;'i'
  3668  00FA2F  6F                 	db	111	;'o'
  3669  00FA30  6E                 	db	110	;'n'
  3670  00FA31  20                 	db	32
  3671  00FA32  31                 	db	49	;'1'
  3672  00FA33  20                 	db	32
  3673  00FA34  52                 	db	82	;'R'
  3674  00FA35  46                 	db	70	;'F'
  3675  00FA36  20                 	db	32
  3676  00FA37  63                 	db	99	;'c'
  3677  00FA38  6F                 	db	111	;'o'
  3678  00FA39  64                 	db	100	;'d'
  3679  00FA3A  65                 	db	101	;'e'
  3680  00FA3B  20                 	db	32
  3681  00FA3C  73                 	db	115	;'s'
  3682  00FA3D  65                 	db	101	;'e'
  3683  00FA3E  6E                 	db	110	;'n'
  3684  00FA3F  74                 	db	116	;'t'
  3685  00FA40  00                 	db	0
  3686  00FA41                     STR_25:
  3687  00FA41  43                 	db	67	;'C'
  3688  00FA42  6F                 	db	111	;'o'
  3689  00FA43  6E                 	db	110	;'n'
  3690  00FA44  66                 	db	102	;'f'
  3691  00FA45  69                 	db	105	;'i'
  3692  00FA46  67                 	db	103	;'g'
  3693  00FA47  75                 	db	117	;'u'
  3694  00FA48  72                 	db	114	;'r'
  3695  00FA49  61                 	db	97	;'a'
  3696  00FA4A  74                 	db	116	;'t'
  3697  00FA4B  69                 	db	105	;'i'
  3698  00FA4C  6F                 	db	111	;'o'
  3699  00FA4D  6E                 	db	110	;'n'
  3700  00FA4E  20                 	db	32
  3701  00FA4F  32                 	db	50	;'2'
  3702  00FA50  20                 	db	32
  3703  00FA51  52                 	db	82	;'R'
  3704  00FA52  46                 	db	70	;'F'
  3705  00FA53  20                 	db	32
  3706  00FA54  63                 	db	99	;'c'
  3707  00FA55  6F                 	db	111	;'o'
  3708  00FA56  64                 	db	100	;'d'
  3709  00FA57  65                 	db	101	;'e'
  3710  00FA58  20                 	db	32
  3711  00FA59  73                 	db	115	;'s'
  3712  00FA5A  65                 	db	101	;'e'
  3713  00FA5B  6E                 	db	110	;'n'
  3714  00FA5C  74                 	db	116	;'t'
  3715  00FA5D  00                 	db	0
  3716  00FA5E                     STR_110:
  3717  00FA5E  50                 	db	80	;'P'
  3718  00FA5F  43                 	db	67	;'C'
  3719  00FA60  42                 	db	66	;'B'
  3720  00FA61  20                 	db	32
  3721  00FA62  68                 	db	104	;'h'
  3722  00FA63  61                 	db	97	;'a'
  3723  00FA64  73                 	db	115	;'s'
  3724  00FA65  20                 	db	32
  3725  00FA66  42                 	db	66	;'B'
  3726  00FA67  6C                 	db	108	;'l'
  3727  00FA68  75                 	db	117	;'u'
  3728  00FA69  65                 	db	101	;'e'
  3729  00FA6A  74                 	db	116	;'t'
  3730  00FA6B  6F                 	db	111	;'o'
  3731  00FA6C  6F                 	db	111	;'o'
  3732  00FA6D  74                 	db	116	;'t'
  3733  00FA6E  68                 	db	104	;'h'
  3734  00FA6F  20                 	db	32
  3735  00FA70  63                 	db	99	;'c'
  3736  00FA71  61                 	db	97	;'a'
  3737  00FA72  70                 	db	112	;'p'
  3738  00FA73  61                 	db	97	;'a'
  3739  00FA74  62                 	db	98	;'b'
  3740  00FA75  69                 	db	105	;'i'
  3741  00FA76  6C                 	db	108	;'l'
  3742  00FA77  69                 	db	105	;'i'
  3743  00FA78  74                 	db	116	;'t'
  3744  00FA79  79                 	db	121	;'y'
  3745  00FA7A  00                 	db	0
  3746  00FA7B                     STR_18:
  3747  00FA7B  42                 	db	66	;'B'
  3748  00FA7C  54                 	db	84	;'T'
  3749  00FA7D  4E                 	db	78	;'N'
  3750  00FA7E  61                 	db	97	;'a'
  3751  00FA7F  6D                 	db	109	;'m'
  3752  00FA80  65                 	db	101	;'e'
  3753  00FA81  3D                 	db	61	;'='
  3754  00FA82  48                 	db	72	;'H'
  3755  00FA83  6F                 	db	111	;'o'
  3756  00FA84  6D                 	db	109	;'m'
  3757  00FA85  65                 	db	101	;'e'
  3758  00FA86  20                 	db	32
  3759  00FA87  41                 	db	65	;'A'
  3760  00FA88  75                 	db	117	;'u'
  3761  00FA89  74                 	db	116	;'t'
  3762  00FA8A  6F                 	db	111	;'o'
  3763  00FA8B  6D                 	db	109	;'m'
  3764  00FA8C  61                 	db	97	;'a'
  3765  00FA8D  74                 	db	116	;'t'
  3766  00FA8E  69                 	db	105	;'i'
  3767  00FA8F  6F                 	db	111	;'o'
  3768  00FA90  6E                 	db	110	;'n'
  3769  00FA91  20                 	db	32
  3770  00FA92  25                 	db	37
  3771  00FA93  6C                 	db	108	;'l'
  3772  00FA94  75                 	db	117	;'u'
  3773  00FA95  0D                 	db	13
  3774  00FA96  00                 	db	0
  3775  00FA97                     STR_131:
  3776  00FA97  44                 	db	68	;'D'
  3777  00FA98  69                 	db	105	;'i'
  3778  00FA99  73                 	db	115	;'s'
  3779  00FA9A  70                 	db	112	;'p'
  3780  00FA9B  6C                 	db	108	;'l'
  3781  00FA9C  61                 	db	97	;'a'
  3782  00FA9D  79                 	db	121	;'y'
  3783  00FA9E  73                 	db	115	;'s'
  3784  00FA9F  20                 	db	32
  3785  00FAA0  74                 	db	116	;'t'
  3786  00FAA1  68                 	db	104	;'h'
  3787  00FAA2  65                 	db	101	;'e'
  3788  00FAA3  20                 	db	32
  3789  00FAA4  73                 	db	115	;'s'
  3790  00FAA5  75                 	db	117	;'u'
  3791  00FAA6  70                 	db	112	;'p'
  3792  00FAA7  70                 	db	112	;'p'
  3793  00FAA8  6C                 	db	108	;'l'
  3794  00FAA9  79                 	db	121	;'y'
  3795  00FAAA  20                 	db	32
  3796  00FAAB  76                 	db	118	;'v'
  3797  00FAAC  6F                 	db	111	;'o'
  3798  00FAAD  6C                 	db	108	;'l'
  3799  00FAAE  74                 	db	116	;'t'
  3800  00FAAF  61                 	db	97	;'a'
  3801  00FAB0  67                 	db	103	;'g'
  3802  00FAB1  65                 	db	101	;'e'
  3803  00FAB2  00                 	db	0
  3804  00FAB3                     STR_178:
  3805  00FAB3  50                 	db	80	;'P'
  3806  00FAB4  72                 	db	114	;'r'
  3807  00FAB5  65                 	db	101	;'e'
  3808  00FAB6  73                 	db	115	;'s'
  3809  00FAB7  73                 	db	115	;'s'
  3810  00FAB8  20                 	db	32
  3811  00FAB9  52                 	db	82	;'R'
  3812  00FABA  65                 	db	101	;'e'
  3813  00FABB  6D                 	db	109	;'m'
  3814  00FABC  6F                 	db	111	;'o'
  3815  00FABD  74                 	db	116	;'t'
  3816  00FABE  65                 	db	101	;'e'
  3817  00FABF  20                 	db	32
  3818  00FAC0  43                 	db	67	;'C'
  3819  00FAC1  6F                 	db	111	;'o'
  3820  00FAC2  6E                 	db	110	;'n'
  3821  00FAC3  74                 	db	116	;'t'
  3822  00FAC4  72                 	db	114	;'r'
  3823  00FAC5  6F                 	db	111	;'o'
  3824  00FAC6  6C                 	db	108	;'l'
  3825  00FAC7  20                 	db	32
  3826  00FAC8  62                 	db	98	;'b'
  3827  00FAC9  75                 	db	117	;'u'
  3828  00FACA  74                 	db	116	;'t'
  3829  00FACB  74                 	db	116	;'t'
  3830  00FACC  6F                 	db	111	;'o'
  3831  00FACD  6E                 	db	110	;'n'
  3832  00FACE  00                 	db	0
  3833  00FACF                     STR_92:
  3834  00FACF  53                 	db	83	;'S'
  3835  00FAD0  65                 	db	101	;'e'
  3836  00FAD1  72                 	db	114	;'r'
  3837  00FAD2  69                 	db	105	;'i'
  3838  00FAD3  61                 	db	97	;'a'
  3839  00FAD4  6C                 	db	108	;'l'
  3840  00FAD5  20                 	db	32
  3841  00FAD6  4E                 	db	78	;'N'
  3842  00FAD7  75                 	db	117	;'u'
  3843  00FAD8  6D                 	db	109	;'m'
  3844  00FAD9  62                 	db	98	;'b'
  3845  00FADA  65                 	db	101	;'e'
  3846  00FADB  72                 	db	114	;'r'
  3847  00FADC  20                 	db	32
  3848  00FADD  69                 	db	105	;'i'
  3849  00FADE  73                 	db	115	;'s'
  3850  00FADF  20                 	db	32
  3851  00FAE0  6E                 	db	110	;'n'
  3852  00FAE1  6F                 	db	111	;'o'
  3853  00FAE2  77                 	db	119	;'w'
  3854  00FAE3  3A                 	db	58	;':'
  3855  00FAE4  20                 	db	32
  3856  00FAE5  25                 	db	37
  3857  00FAE6  6C                 	db	108	;'l'
  3858  00FAE7  75                 	db	117	;'u'
  3859  00FAE8  20                 	db	32
  3860  00FAE9  00                 	db	0
  3861  00FAEA                     STR_113:
  3862  00FAEA  54                 	db	84	;'T'
  3863  00FAEB  72                 	db	114	;'r'
  3864  00FAEC  61                 	db	97	;'a'
  3865  00FAED  6E                 	db	110	;'n'
  3866  00FAEE  73                 	db	115	;'s'
  3867  00FAEF  6D                 	db	109	;'m'
  3868  00FAF0  69                 	db	105	;'i'
  3869  00FAF1  74                 	db	116	;'t'
  3870  00FAF2  74                 	db	116	;'t'
  3871  00FAF3  69                 	db	105	;'i'
  3872  00FAF4  6E                 	db	110	;'n'
  3873  00FAF5  67                 	db	103	;'g'
  3874  00FAF6  20                 	db	32
  3875  00FAF7  46                 	db	70	;'F'
  3876  00FAF8  72                 	db	114	;'r'
  3877  00FAF9  65                 	db	101	;'e'
  3878  00FAFA  71                 	db	113	;'q'
  3879  00FAFB  75                 	db	117	;'u'
  3880  00FAFC  65                 	db	101	;'e'
  3881  00FAFD  6E                 	db	110	;'n'
  3882  00FAFE  63                 	db	99	;'c'
  3883  00FAFF  79                 	db	121	;'y'
  3884  00FB00  3A                 	db	58	;':'
  3885  00FB01  20                 	db	32
  3886  00FB02  25                 	db	37
  3887  00FB03  73                 	db	115	;'s'
  3888  00FB04  00                 	db	0
  3889  00FB05                     STR_177:
  3890  00FB05  45                 	db	69	;'E'
  3891  00FB06  6E                 	db	110	;'n'
  3892  00FB07  74                 	db	116	;'t'
  3893  00FB08  65                 	db	101	;'e'
  3894  00FB09  72                 	db	114	;'r'
  3895  00FB0A  20                 	db	32
  3896  00FB0B  3F                 	db	63	;'?'
  3897  00FB0C  3F                 	db	63	;'?'
  3898  00FB0D  3F                 	db	63	;'?'
  3899  00FB0E  20                 	db	32
  3900  00FB0F  66                 	db	102	;'f'
  3901  00FB10  6F                 	db	111	;'o'
  3902  00FB11  72                 	db	114	;'r'
  3903  00FB12  20                 	db	32
  3904  00FB13  43                 	db	67	;'C'
  3905  00FB14  6F                 	db	111	;'o'
  3906  00FB15  6D                 	db	109	;'m'
  3907  00FB16  6D                 	db	109	;'m'
  3908  00FB17  61                 	db	97	;'a'
  3909  00FB18  6E                 	db	110	;'n'
  3910  00FB19  64                 	db	100	;'d'
  3911  00FB1A  20                 	db	32
  3912  00FB1B  4D                 	db	77	;'M'
  3913  00FB1C  65                 	db	101	;'e'
  3914  00FB1D  6E                 	db	110	;'n'
  3915  00FB1E  75                 	db	117	;'u'
  3916  00FB1F  00                 	db	0
  3917  00FB20                     STR_134:
  3918  00FB20  54                 	db	84	;'T'
  3919  00FB21  72                 	db	114	;'r'
  3920  00FB22  61                 	db	97	;'a'
  3921  00FB23  6E                 	db	110	;'n'
  3922  00FB24  73                 	db	115	;'s'
  3923  00FB25  6D                 	db	109	;'m'
  3924  00FB26  69                 	db	105	;'i'
  3925  00FB27  74                 	db	116	;'t'
  3926  00FB28  73                 	db	115	;'s'
  3927  00FB29  20                 	db	32
  3928  00FB2A  73                 	db	115	;'s'
  3929  00FB2B  61                 	db	97	;'a'
  3930  00FB2C  76                 	db	118	;'v'
  3931  00FB2D  65                 	db	101	;'e'
  3932  00FB2E  64                 	db	100	;'d'
  3933  00FB2F  20                 	db	32
  3934  00FB30  4E                 	db	78	;'N'
  3935  00FB31  45                 	db	69	;'E'
  3936  00FB32  43                 	db	67	;'C'
  3937  00FB33  20                 	db	32
  3938  00FB34  63                 	db	99	;'c'
  3939  00FB35  6F                 	db	111	;'o'
  3940  00FB36  64                 	db	100	;'d'
  3941  00FB37  65                 	db	101	;'e'
  3942  00FB38  00                 	db	0
  3943  00FB39                     STR_9:
  3944  00FB39  53                 	db	83	;'S'
  3945  00FB3A  4E                 	db	78	;'N'
  3946  00FB3B  2C                 	db	44
  3947  00FB3C  48                 	db	72	;'H'
  3948  00FB3D  6F                 	db	111	;'o'
  3949  00FB3E  6D                 	db	109	;'m'
  3950  00FB3F  65                 	db	101	;'e'
  3951  00FB40  20                 	db	32
  3952  00FB41  41                 	db	65	;'A'
  3953  00FB42  75                 	db	117	;'u'
  3954  00FB43  74                 	db	116	;'t'
  3955  00FB44  6F                 	db	111	;'o'
  3956  00FB45  6D                 	db	109	;'m'
  3957  00FB46  61                 	db	97	;'a'
  3958  00FB47  74                 	db	116	;'t'
  3959  00FB48  69                 	db	105	;'i'
  3960  00FB49  6F                 	db	111	;'o'
  3961  00FB4A  6E                 	db	110	;'n'
  3962  00FB4B  20                 	db	32
  3963  00FB4C  25                 	db	37
  3964  00FB4D  6C                 	db	108	;'l'
  3965  00FB4E  75                 	db	117	;'u'
  3966  00FB4F  0D                 	db	13
  3967  00FB50  00                 	db	0
  3968  00FB51                     STR_96:
  3969  00FB51  54                 	db	84	;'T'
  3970  00FB52  68                 	db	104	;'h'
  3971  00FB53  65                 	db	101	;'e'
  3972  00FB54  20                 	db	32
  3973  00FB55  27                 	db	39
  3974  00FB56  43                 	db	67	;'C'
  3975  00FB57  6F                 	db	111	;'o'
  3976  00FB58  64                 	db	100	;'d'
  3977  00FB59  65                 	db	101	;'e'
  3978  00FB5A  27                 	db	39
  3979  00FB5B  20                 	db	32
  3980  00FB5C  77                 	db	119	;'w'
  3981  00FB5D  61                 	db	97	;'a'
  3982  00FB5E  73                 	db	115	;'s'
  3983  00FB5F  20                 	db	32
  3984  00FB60  77                 	db	119	;'w'
  3985  00FB61  72                 	db	114	;'r'
  3986  00FB62  6F                 	db	111	;'o'
  3987  00FB63  6E                 	db	110	;'n'
  3988  00FB64  67                 	db	103	;'g'
  3989  00FB65  21                 	db	33
  3990  00FB66  21                 	db	33
  3991  00FB67  21                 	db	33
  3992  00FB68  00                 	db	0
  3993  00FB69                     STR_89:
  3994  00FB69  45                 	db	69	;'E'
  3995  00FB6A  6E                 	db	110	;'n'
  3996  00FB6B  74                 	db	116	;'t'
  3997  00FB6C  65                 	db	101	;'e'
  3998  00FB6D  72                 	db	114	;'r'
  3999  00FB6E  20                 	db	32
  4000  00FB6F  6E                 	db	110	;'n'
  4001  00FB70  65                 	db	101	;'e'
  4002  00FB71  77                 	db	119	;'w'
  4003  00FB72  20                 	db	32
  4004  00FB73  53                 	db	83	;'S'
  4005  00FB74  65                 	db	101	;'e'
  4006  00FB75  72                 	db	114	;'r'
  4007  00FB76  69                 	db	105	;'i'
  4008  00FB77  61                 	db	97	;'a'
  4009  00FB78  6C                 	db	108	;'l'
  4010  00FB79  20                 	db	32
  4011  00FB7A  4E                 	db	78	;'N'
  4012  00FB7B  75                 	db	117	;'u'
  4013  00FB7C  6D                 	db	109	;'m'
  4014  00FB7D  62                 	db	98	;'b'
  4015  00FB7E  65                 	db	101	;'e'
  4016  00FB7F  72                 	db	114	;'r'
  4017  00FB80  00                 	db	0
  4018  00FB81                     STR_136:
  4019  00FB81  41                 	db	65	;'A'
  4020  00FB82  6C                 	db	108	;'l'
  4021  00FB83  6C                 	db	108	;'l'
  4022  00FB84  6F                 	db	111	;'o'
  4023  00FB85  77                 	db	119	;'w'
  4024  00FB86  73                 	db	115	;'s'
  4025  00FB87  20                 	db	32
  4026  00FB88  73                 	db	115	;'s'
  4027  00FB89  61                 	db	97	;'a'
  4028  00FB8A  76                 	db	118	;'v'
  4029  00FB8B  69                 	db	105	;'i'
  4030  00FB8C  6E                 	db	110	;'n'
  4031  00FB8D  67                 	db	103	;'g'
  4032  00FB8E  20                 	db	32
  4033  00FB8F  4E                 	db	78	;'N'
  4034  00FB90  45                 	db	69	;'E'
  4035  00FB91  43                 	db	67	;'C'
  4036  00FB92  20                 	db	32
  4037  00FB93  63                 	db	99	;'c'
  4038  00FB94  6F                 	db	111	;'o'
  4039  00FB95  64                 	db	100	;'d'
  4040  00FB96  65                 	db	101	;'e'
  4041  00FB97  73                 	db	115	;'s'
  4042  00FB98  00                 	db	0
  4043  00FB99                     STR_2:
  4044  00FB99  56                 	db	86	;'V'
  4045  00FB9A  6F                 	db	111	;'o'
  4046  00FB9B  6C                 	db	108	;'l'
  4047  00FB9C  74                 	db	116	;'t'
  4048  00FB9D  61                 	db	97	;'a'
  4049  00FB9E  67                 	db	103	;'g'
  4050  00FB9F  65                 	db	101	;'e'
  4051  00FBA0  20                 	db	32
  4052  00FBA1  6F                 	db	111	;'o'
  4053  00FBA2  75                 	db	117	;'u'
  4054  00FBA3  74                 	db	116	;'t'
  4055  00FBA4  20                 	db	32
  4056  00FBA5  6F                 	db	111	;'o'
  4057  00FBA6  66                 	db	102	;'f'
  4058  00FBA7  20                 	db	32
  4059  00FBA8  52                 	db	82	;'R'
  4060  00FBA9  61                 	db	97	;'a'
  4061  00FBAA  6E                 	db	110	;'n'
  4062  00FBAB  67                 	db	103	;'g'
  4063  00FBAC  65                 	db	101	;'e'
  4064  00FBAD  21                 	db	33
  4065  00FBAE  21                 	db	33
  4066  00FBAF  21                 	db	33
  4067  00FBB0  00                 	db	0
  4068  00FBB1                     STR_31:
  4069  00FBB1  53                 	db	83	;'S'
  4070  00FBB2  65                 	db	101	;'e'
  4071  00FBB3  6E                 	db	110	;'n'
  4072  00FBB4  74                 	db	116	;'t'
  4073  00FBB5  20                 	db	32
  4074  00FBB6  4E                 	db	78	;'N'
  4075  00FBB7  45                 	db	69	;'E'
  4076  00FBB8  43                 	db	67	;'C'
  4077  00FBB9  20                 	db	32
  4078  00FBBA  63                 	db	99	;'c'
  4079  00FBBB  6F                 	db	111	;'o'
  4080  00FBBC  64                 	db	100	;'d'
  4081  00FBBD  65                 	db	101	;'e'
  4082  00FBBE  20                 	db	32
  4083  00FBBF  3D                 	db	61	;'='
  4084  00FBC0  20                 	db	32
  4085  00FBC1  30                 	db	48	;'0'
  4086  00FBC2  78                 	db	120	;'x'
  4087  00FBC3  25                 	db	37
  4088  00FBC4  6C                 	db	108	;'l'
  4089  00FBC5  58                 	db	88	;'X'
  4090  00FBC6  20                 	db	32
  4091  00FBC7  00                 	db	0
  4092  00FBC8                     STR_111:
  4093  00FBC8  42                 	db	66	;'B'
  4094  00FBC9  6C                 	db	108	;'l'
  4095  00FBCA  75                 	db	117	;'u'
  4096  00FBCB  65                 	db	101	;'e'
  4097  00FBCC  74                 	db	116	;'t'
  4098  00FBCD  6F                 	db	111	;'o'
  4099  00FBCE  6F                 	db	111	;'o'
  4100  00FBCF  74                 	db	116	;'t'
  4101  00FBD0  68                 	db	104	;'h'
  4102  00FBD1  20                 	db	32
  4103  00FBD2  66                 	db	102	;'f'
  4104  00FBD3  69                 	db	105	;'i'
  4105  00FBD4  72                 	db	114	;'r'
  4106  00FBD5  6D                 	db	109	;'m'
  4107  00FBD6  77                 	db	119	;'w'
  4108  00FBD7  61                 	db	97	;'a'
  4109  00FBD8  72                 	db	114	;'r'
  4110  00FBD9  65                 	db	101	;'e'
  4111  00FBDA  20                 	db	32
  4112  00FBDB  69                 	db	105	;'i'
  4113  00FBDC  73                 	db	115	;'s'
  4114  00FBDD  3A                 	db	58	;':'
  4115  00FBDE  00                 	db	0
  4116  00FBDF                     STR_168:
  4117  00FBDF  52                 	db	82	;'R'
  4118  00FBE0  46                 	db	70	;'F'
  4119  00FBE1  4B                 	db	75	;'K'
  4120  00FBE2  33                 	db	51	;'3'
  4121  00FBE3  30                 	db	48	;'0'
  4122  00FBE4  36                 	db	54	;'6'
  4123  00FBE5  4C                 	db	76	;'L'
  4124  00FBE6  43                 	db	67	;'C'
  4125  00FBE7  20                 	db	32
  4126  00FBE8  43                 	db	67	;'C'
  4127  00FBE9  68                 	db	104	;'h'
  4128  00FBEA  61                 	db	97	;'a'
  4129  00FBEB  6E                 	db	110	;'n'
  4130  00FBEC  6E                 	db	110	;'n'
  4131  00FBED  65                 	db	101	;'e'
  4132  00FBEE  6C                 	db	108	;'l'
  4133  00FBEF  20                 	db	32
  4134  00FBF0  42                 	db	66	;'B'
  4135  00FBF1  20                 	db	32
  4136  00FBF2  4F                 	db	79	;'O'
  4137  00FBF3  46                 	db	70	;'F'
  4138  00FBF4  46                 	db	70	;'F'
  4139  00FBF5  00                 	db	0
  4140  00FBF6                     STR_5:
  4141  00FBF6  52                 	db	82	;'R'
  4142  00FBF7  45                 	db	69	;'E'
  4143  00FBF8  53                 	db	83	;'S'
  4144  00FBF9  45                 	db	69	;'E'
  4145  00FBFA  54                 	db	84	;'T'
  4146  00FBFB  20                 	db	32
  4147  00FBFC  74                 	db	116	;'t'
  4148  00FBFD  6F                 	db	111	;'o'
  4149  00FBFE  20                 	db	32
  4150  00FBFF  72                 	db	114	;'r'
  4151  00FC00  65                 	db	101	;'e'
  4152  00FC01  61                 	db	97	;'a'
  4153  00FC02  64                 	db	100	;'d'
  4154  00FC03  20                 	db	32
  4155  00FC04  76                 	db	118	;'v'
  4156  00FC05  65                 	db	101	;'e'
  4157  00FC06  72                 	db	114	;'r'
  4158  00FC07  73                 	db	115	;'s'
  4159  00FC08  69                 	db	105	;'i'
  4160  00FC09  6F                 	db	111	;'o'
  4161  00FC0A  6E                 	db	110	;'n'
  4162  00FC0B  21                 	db	33
  4163  00FC0C  00                 	db	0
  4164  00FC0D                     STR_167:
  4165  00FC0D  52                 	db	82	;'R'
  4166  00FC0E  46                 	db	70	;'F'
  4167  00FC0F  4B                 	db	75	;'K'
  4168  00FC10  33                 	db	51	;'3'
  4169  00FC11  30                 	db	48	;'0'
  4170  00FC12  36                 	db	54	;'6'
  4171  00FC13  4C                 	db	76	;'L'
  4172  00FC14  43                 	db	67	;'C'
  4173  00FC15  20                 	db	32
  4174  00FC16  43                 	db	67	;'C'
  4175  00FC17  68                 	db	104	;'h'
  4176  00FC18  61                 	db	97	;'a'
  4177  00FC19  6E                 	db	110	;'n'
  4178  00FC1A  6E                 	db	110	;'n'
  4179  00FC1B  65                 	db	101	;'e'
  4180  00FC1C  6C                 	db	108	;'l'
  4181  00FC1D  20                 	db	32
  4182  00FC1E  42                 	db	66	;'B'
  4183  00FC1F  20                 	db	32
  4184  00FC20  4F                 	db	79	;'O'
  4185  00FC21  4E                 	db	78	;'N'
  4186  00FC22  00                 	db	0
  4187  00FC23                     STR_42:
  4188  00FC23  4E                 	db	78	;'N'
  4189  00FC24  45                 	db	69	;'E'
  4190  00FC25  43                 	db	67	;'C'
  4191  00FC26  20                 	db	32
  4192  00FC27  3D                 	db	61	;'='
  4193  00FC28  20                 	db	32
  4194  00FC29  61                 	db	97	;'a'
  4195  00FC2A  64                 	db	100	;'d'
  4196  00FC2B  64                 	db	100	;'d'
  4197  00FC2C  72                 	db	114	;'r'
  4198  00FC2D  65                 	db	101	;'e'
  4199  00FC2E  73                 	db	115	;'s'
  4200  00FC2F  73                 	db	115	;'s'
  4201  00FC30  2C                 	db	44
  4202  00FC31  63                 	db	99	;'c'
  4203  00FC32  6F                 	db	111	;'o'
  4204  00FC33  6D                 	db	109	;'m'
  4205  00FC34  6D                 	db	109	;'m'
  4206  00FC35  61                 	db	97	;'a'
  4207  00FC36  6E                 	db	110	;'n'
  4208  00FC37  64                 	db	100	;'d'
  4209  00FC38  00                 	db	0
  4210  00FC39                     STR_97:
  4211  00FC39  43                 	db	67	;'C'
  4212  00FC3A  68                 	db	104	;'h'
  4213  00FC3B  61                 	db	97	;'a'
  4214  00FC3C  6E                 	db	110	;'n'
  4215  00FC3D  67                 	db	103	;'g'
  4216  00FC3E  65                 	db	101	;'e'
  4217  00FC3F  20                 	db	32
  4218  00FC40  42                 	db	66	;'B'
  4219  00FC41  6C                 	db	108	;'l'
  4220  00FC42  75                 	db	117	;'u'
  4221  00FC43  65                 	db	101	;'e'
  4222  00FC44  74                 	db	116	;'t'
  4223  00FC45  6F                 	db	111	;'o'
  4224  00FC46  6F                 	db	111	;'o'
  4225  00FC47  74                 	db	116	;'t'
  4226  00FC48  68                 	db	104	;'h'
  4227  00FC49  20                 	db	32
  4228  00FC4A  4E                 	db	78	;'N'
  4229  00FC4B  61                 	db	97	;'a'
  4230  00FC4C  6D                 	db	109	;'m'
  4231  00FC4D  65                 	db	101	;'e'
  4232  00FC4E  00                 	db	0
  4233  00FC4F                     STR_126:
  4234  00FC4F  43                 	db	67	;'C'
  4235  00FC50  68                 	db	104	;'h'
  4236  00FC51  61                 	db	97	;'a'
  4237  00FC52  6E                 	db	110	;'n'
  4238  00FC53  67                 	db	103	;'g'
  4239  00FC54  65                 	db	101	;'e'
  4240  00FC55  73                 	db	115	;'s'
  4241  00FC56  20                 	db	32
  4242  00FC57  53                 	db	83	;'S'
  4243  00FC58  65                 	db	101	;'e'
  4244  00FC59  72                 	db	114	;'r'
  4245  00FC5A  69                 	db	105	;'i'
  4246  00FC5B  61                 	db	97	;'a'
  4247  00FC5C  6C                 	db	108	;'l'
  4248  00FC5D  20                 	db	32
  4249  00FC5E  4E                 	db	78	;'N'
  4250  00FC5F  75                 	db	117	;'u'
  4251  00FC60  6D                 	db	109	;'m'
  4252  00FC61  62                 	db	98	;'b'
  4253  00FC62  65                 	db	101	;'e'
  4254  00FC63  72                 	db	114	;'r'
  4255  00FC64  00                 	db	0
  4256  00FC65                     STR_30:
  4257  00FC65  4E                 	db	78	;'N'
  4258  00FC66  45                 	db	69	;'E'
  4259  00FC67  43                 	db	67	;'C'
  4260  00FC68  20                 	db	32
  4261  00FC69  63                 	db	99	;'c'
  4262  00FC6A  6F                 	db	111	;'o'
  4263  00FC6B  6D                 	db	109	;'m'
  4264  00FC6C  6D                 	db	109	;'m'
  4265  00FC6D  61                 	db	97	;'a'
  4266  00FC6E  6E                 	db	110	;'n'
  4267  00FC6F  64                 	db	100	;'d'
  4268  00FC70  3A                 	db	58	;':'
  4269  00FC71  20                 	db	32
  4270  00FC72  30                 	db	48	;'0'
  4271  00FC73  78                 	db	120	;'x'
  4272  00FC74  25                 	db	37
  4273  00FC75  30                 	db	48	;'0'
  4274  00FC76  32                 	db	50	;'2'
  4275  00FC77  58                 	db	88	;'X'
  4276  00FC78  20                 	db	32
  4277  00FC79  00                 	db	0
  4278  00FC7A                     STR_29:
  4279  00FC7A  4E                 	db	78	;'N'
  4280  00FC7B  45                 	db	69	;'E'
  4281  00FC7C  43                 	db	67	;'C'
  4282  00FC7D  20                 	db	32
  4283  00FC7E  61                 	db	97	;'a'
  4284  00FC7F  64                 	db	100	;'d'
  4285  00FC80  64                 	db	100	;'d'
  4286  00FC81  72                 	db	114	;'r'
  4287  00FC82  65                 	db	101	;'e'
  4288  00FC83  73                 	db	115	;'s'
  4289  00FC84  73                 	db	115	;'s'
  4290  00FC85  3A                 	db	58	;':'
  4291  00FC86  20                 	db	32
  4292  00FC87  30                 	db	48	;'0'
  4293  00FC88  78                 	db	120	;'x'
  4294  00FC89  25                 	db	37
  4295  00FC8A  30                 	db	48	;'0'
  4296  00FC8B  32                 	db	50	;'2'
  4297  00FC8C  58                 	db	88	;'X'
  4298  00FC8D  20                 	db	32
  4299  00FC8E  00                 	db	0
  4300  00FC8F                     STR_49:
  4301  00FC8F  53                 	db	83	;'S'
  4302  00FC90  65                 	db	101	;'e'
  4303  00FC91  6E                 	db	110	;'n'
  4304  00FC92  74                 	db	116	;'t'
  4305  00FC93  20                 	db	32
  4306  00FC94  4E                 	db	78	;'N'
  4307  00FC95  45                 	db	69	;'E'
  4308  00FC96  43                 	db	67	;'C'
  4309  00FC97  20                 	db	32
  4310  00FC98  63                 	db	99	;'c'
  4311  00FC99  6F                 	db	111	;'o'
  4312  00FC9A  64                 	db	100	;'d'
  4313  00FC9B  65                 	db	101	;'e'
  4314  00FC9C  20                 	db	32
  4315  00FC9D  30                 	db	48	;'0'
  4316  00FC9E  78                 	db	120	;'x'
  4317  00FC9F  25                 	db	37
  4318  00FCA0  6C                 	db	108	;'l'
  4319  00FCA1  58                 	db	88	;'X'
  4320  00FCA2  20                 	db	32
  4321  00FCA3  00                 	db	0
  4322  00FCA4                     STR_129:
  4323  00FCA4  44                 	db	68	;'D'
  4324  00FCA5  69                 	db	105	;'i'
  4325  00FCA6  61                 	db	97	;'a'
  4326  00FCA7  67                 	db	103	;'g'
  4327  00FCA8  6E                 	db	110	;'n'
  4328  00FCA9  6F                 	db	111	;'o'
  4329  00FCAA  73                 	db	115	;'s'
  4330  00FCAB  74                 	db	116	;'t'
  4331  00FCAC  69                 	db	105	;'i'
  4332  00FCAD  63                 	db	99	;'c'
  4333  00FCAE  20                 	db	32
  4334  00FCAF  43                 	db	67	;'C'
  4335  00FCB0  6F                 	db	111	;'o'
  4336  00FCB1  6D                 	db	109	;'m'
  4337  00FCB2  6D                 	db	109	;'m'
  4338  00FCB3  61                 	db	97	;'a'
  4339  00FCB4  6E                 	db	110	;'n'
  4340  00FCB5  64                 	db	100	;'d'
  4341  00FCB6  73                 	db	115	;'s'
  4342  00FCB7  3A                 	db	58	;':'
  4343  00FCB8  00                 	db	0
  4344  00FCB9                     STR_109:
  4345  00FCB9  46                 	db	70	;'F'
  4346  00FCBA  69                 	db	105	;'i'
  4347  00FCBB  72                 	db	114	;'r'
  4348  00FCBC  6D                 	db	109	;'m'
  4349  00FCBD  77                 	db	119	;'w'
  4350  00FCBE  61                 	db	97	;'a'
  4351  00FCBF  72                 	db	114	;'r'
  4352  00FCC0  65                 	db	101	;'e'
  4353  00FCC1  20                 	db	32
  4354  00FCC2  56                 	db	86	;'V'
  4355  00FCC3  65                 	db	101	;'e'
  4356  00FCC4  72                 	db	114	;'r'
  4357  00FCC5  73                 	db	115	;'s'
  4358  00FCC6  69                 	db	105	;'i'
  4359  00FCC7  6F                 	db	111	;'o'
  4360  00FCC8  6E                 	db	110	;'n'
  4361  00FCC9  3A                 	db	58	;':'
  4362  00FCCA  20                 	db	32
  4363  00FCCB  25                 	db	37
  4364  00FCCC  73                 	db	115	;'s'
  4365  00FCCD  00                 	db	0
  4366  00FCCE                     STR_14:
  4367  00FCCE  53                 	db	83	;'S'
  4368  00FCCF  53                 	db	83	;'S'
  4369  00FCD0  2C                 	db	44
  4370  00FCD1  48                 	db	72	;'H'
  4371  00FCD2  6F                 	db	111	;'o'
  4372  00FCD3  6D                 	db	109	;'m'
  4373  00FCD4  65                 	db	101	;'e'
  4374  00FCD5  20                 	db	32
  4375  00FCD6  41                 	db	65	;'A'
  4376  00FCD7  75                 	db	117	;'u'
  4377  00FCD8  74                 	db	116	;'t'
  4378  00FCD9  6F                 	db	111	;'o'
  4379  00FCDA  6D                 	db	109	;'m'
  4380  00FCDB  61                 	db	97	;'a'
  4381  00FCDC  74                 	db	116	;'t'
  4382  00FCDD  69                 	db	105	;'i'
  4383  00FCDE  6F                 	db	111	;'o'
  4384  00FCDF  6E                 	db	110	;'n'
  4385  00FCE0  0D                 	db	13
  4386  00FCE1  00                 	db	0
  4387  00FCE2                     STR_40:
  4388  00FCE2  4E                 	db	78	;'N'
  4389  00FCE3  45                 	db	69	;'E'
  4390  00FCE4  43                 	db	67	;'C'
  4391  00FCE5  20                 	db	32
  4392  00FCE6  3D                 	db	61	;'='
  4393  00FCE7  20                 	db	32
  4394  00FCE8  28                 	db	40
  4395  00FCE9  33                 	db	51	;'3'
  4396  00FCEA  32                 	db	50	;'2'
  4397  00FCEB  20                 	db	32
  4398  00FCEC  62                 	db	98	;'b'
  4399  00FCED  69                 	db	105	;'i'
  4400  00FCEE  74                 	db	116	;'t'
  4401  00FCEF  20                 	db	32
  4402  00FCF0  63                 	db	99	;'c'
  4403  00FCF1  6F                 	db	111	;'o'
  4404  00FCF2  64                 	db	100	;'d'
  4405  00FCF3  65                 	db	101	;'e'
  4406  00FCF4  29                 	db	41
  4407  00FCF5  00                 	db	0
  4408  00FCF6                     STR_170:
  4409  00FCF6  54                 	db	84	;'T'
  4410  00FCF7  52                 	db	82	;'R'
  4411  00FCF8  30                 	db	48	;'0'
  4412  00FCF9  30                 	db	48	;'0'
  4413  00FCFA  39                 	db	57	;'9'
  4414  00FCFB  20                 	db	32
  4415  00FCFC  43                 	db	67	;'C'
  4416  00FCFD  68                 	db	104	;'h'
  4417  00FCFE  61                 	db	97	;'a'
  4418  00FCFF  6E                 	db	110	;'n'
  4419  00FD00  6E                 	db	110	;'n'
  4420  00FD01  65                 	db	101	;'e'
  4421  00FD02  6C                 	db	108	;'l'
  4422  00FD03  20                 	db	32
  4423  00FD04  44                 	db	68	;'D'
  4424  00FD05  20                 	db	32
  4425  00FD06  4F                 	db	79	;'O'
  4426  00FD07  46                 	db	70	;'F'
  4427  00FD08  46                 	db	70	;'F'
  4428  00FD09  00                 	db	0
  4429  00FD0A                     STR_33:
  4430  00FD0A  73                 	db	115	;'s'
  4431  00FD0B  65                 	db	101	;'e'
  4432  00FD0C  6E                 	db	110	;'n'
  4433  00FD0D  74                 	db	116	;'t'
  4434  00FD0E  20                 	db	32
  4435  00FD0F  4E                 	db	78	;'N'
  4436  00FD10  45                 	db	69	;'E'
  4437  00FD11  43                 	db	67	;'C'
  4438  00FD12  20                 	db	32
  4439  00FD13  63                 	db	99	;'c'
  4440  00FD14  6F                 	db	111	;'o'
  4441  00FD15  64                 	db	100	;'d'
  4442  00FD16  65                 	db	101	;'e'
  4443  00FD17  20                 	db	32
  4444  00FD18  30                 	db	48	;'0'
  4445  00FD19  78                 	db	120	;'x'
  4446  00FD1A  25                 	db	37
  4447  00FD1B  6C                 	db	108	;'l'
  4448  00FD1C  58                 	db	88	;'X'
  4449  00FD1D  00                 	db	0
  4450  00FD1E                     STR_107:
  4451  00FD1E  53                 	db	83	;'S'
  4452  00FD1F  75                 	db	117	;'u'
  4453  00FD20  70                 	db	112	;'p'
  4454  00FD21  70                 	db	112	;'p'
  4455  00FD22  6C                 	db	108	;'l'
  4456  00FD23  79                 	db	121	;'y'
  4457  00FD24  20                 	db	32
  4458  00FD25  56                 	db	86	;'V'
  4459  00FD26  6F                 	db	111	;'o'
  4460  00FD27  6C                 	db	108	;'l'
  4461  00FD28  74                 	db	116	;'t'
  4462  00FD29  61                 	db	97	;'a'
  4463  00FD2A  67                 	db	103	;'g'
  4464  00FD2B  65                 	db	101	;'e'
  4465  00FD2C  20                 	db	32
  4466  00FD2D  3D                 	db	61	;'='
  4467  00FD2E  20                 	db	32
  4468  00FD2F  25                 	db	37
  4469  00FD30  66                 	db	102	;'f'
  4470  00FD31  00                 	db	0
  4471  00FD32                     STR_58:
  4472  00FD32  52                 	db	82	;'R'
  4473  00FD33  65                 	db	101	;'e'
  4474  00FD34  6D                 	db	109	;'m'
  4475  00FD35  6F                 	db	111	;'o'
  4476  00FD36  74                 	db	116	;'t'
  4477  00FD37  65                 	db	101	;'e'
  4478  00FD38  42                 	db	66	;'B'
  4479  00FD39  75                 	db	117	;'u'
  4480  00FD3A  74                 	db	116	;'t'
  4481  00FD3B  74                 	db	116	;'t'
  4482  00FD3C  6F                 	db	111	;'o'
  4483  00FD3D  6E                 	db	110	;'n'
  4484  00FD3E  27                 	db	39
  4485  00FD3F  78                 	db	120	;'x'
  4486  00FD40  27                 	db	39
  4487  00FD41  20                 	db	32
  4488  00FD42  73                 	db	115	;'s'
  4489  00FD43  65                 	db	101	;'e'
  4490  00FD44  74                 	db	116	;'t'
  4491  00FD45  00                 	db	0
  4492  00FD46                     STR_164:
  4493  00FD46  52                 	db	82	;'R'
  4494  00FD47  46                 	db	70	;'F'
  4495  00FD48  4B                 	db	75	;'K'
  4496  00FD49  31                 	db	49	;'1'
  4497  00FD4A  30                 	db	48	;'0'
  4498  00FD4B  30                 	db	48	;'0'
  4499  00FD4C  4C                 	db	76	;'L'
  4500  00FD4D  43                 	db	67	;'C'
  4501  00FD4E  20                 	db	32
  4502  00FD4F  43                 	db	67	;'C'
  4503  00FD50  68                 	db	104	;'h'
  4504  00FD51  61                 	db	97	;'a'
  4505  00FD52  6E                 	db	110	;'n'
  4506  00FD53  6E                 	db	110	;'n'
  4507  00FD54  65                 	db	101	;'e'
  4508  00FD55  6C                 	db	108	;'l'
  4509  00FD56  20                 	db	32
  4510  00FD57  44                 	db	68	;'D'
  4511  00FD58  00                 	db	0
  4512  00FD59                     STR_165:
  4513  00FD59  52                 	db	82	;'R'
  4514  00FD5A  46                 	db	70	;'F'
  4515  00FD5B  4B                 	db	75	;'K'
  4516  00FD5C  31                 	db	49	;'1'
  4517  00FD5D  30                 	db	48	;'0'
  4518  00FD5E  30                 	db	48	;'0'
  4519  00FD5F  4C                 	db	76	;'L'
  4520  00FD60  43                 	db	67	;'C'
  4521  00FD61  20                 	db	32
  4522  00FD62  43                 	db	67	;'C'
  4523  00FD63  68                 	db	104	;'h'
  4524  00FD64  61                 	db	97	;'a'
  4525  00FD65  6E                 	db	110	;'n'
  4526  00FD66  6E                 	db	110	;'n'
  4527  00FD67  65                 	db	101	;'e'
  4528  00FD68  6C                 	db	108	;'l'
  4529  00FD69  20                 	db	32
  4530  00FD6A  45                 	db	69	;'E'
  4531  00FD6B  00                 	db	0
  4532  00FD6C                     STR_166:
  4533  00FD6C  52                 	db	82	;'R'
  4534  00FD6D  46                 	db	70	;'F'
  4535  00FD6E  4B                 	db	75	;'K'
  4536  00FD6F  31                 	db	49	;'1'
  4537  00FD70  30                 	db	48	;'0'
  4538  00FD71  30                 	db	48	;'0'
  4539  00FD72  4C                 	db	76	;'L'
  4540  00FD73  43                 	db	67	;'C'
  4541  00FD74  20                 	db	32
  4542  00FD75  43                 	db	67	;'C'
  4543  00FD76  68                 	db	104	;'h'
  4544  00FD77  61                 	db	97	;'a'
  4545  00FD78  6E                 	db	110	;'n'
  4546  00FD79  6E                 	db	110	;'n'
  4547  00FD7A  65                 	db	101	;'e'
  4548  00FD7B  6C                 	db	108	;'l'
  4549  00FD7C  20                 	db	32
  4550  00FD7D  46                 	db	70	;'F'
  4551  00FD7E  00                 	db	0
  4552  00FD7F                     STR_169:
  4553  00FD7F  54                 	db	84	;'T'
  4554  00FD80  52                 	db	82	;'R'
  4555  00FD81  30                 	db	48	;'0'
  4556  00FD82  30                 	db	48	;'0'
  4557  00FD83  39                 	db	57	;'9'
  4558  00FD84  20                 	db	32
  4559  00FD85  43                 	db	67	;'C'
  4560  00FD86  68                 	db	104	;'h'
  4561  00FD87  61                 	db	97	;'a'
  4562  00FD88  6E                 	db	110	;'n'
  4563  00FD89  6E                 	db	110	;'n'
  4564  00FD8A  65                 	db	101	;'e'
  4565  00FD8B  6C                 	db	108	;'l'
  4566  00FD8C  20                 	db	32
  4567  00FD8D  44                 	db	68	;'D'
  4568  00FD8E  20                 	db	32
  4569  00FD8F  4F                 	db	79	;'O'
  4570  00FD90  4E                 	db	78	;'N'
  4571  00FD91  00                 	db	0
  4572  00FD92                     STR_135:
  4573  00FD92  52                 	db	82	;'R'
  4574  00FD93  65                 	db	101	;'e'
  4575  00FD94  6D                 	db	109	;'m'
  4576  00FD95  6F                 	db	111	;'o'
  4577  00FD96  74                 	db	116	;'t'
  4578  00FD97  65                 	db	101	;'e'
  4579  00FD98  42                 	db	66	;'B'
  4580  00FD99  75                 	db	117	;'u'
  4581  00FD9A  74                 	db	116	;'t'
  4582  00FD9B  74                 	db	116	;'t'
  4583  00FD9C  6F                 	db	111	;'o'
  4584  00FD9D  6E                 	db	110	;'n'
  4585  00FD9E  25                 	db	37
  4586  00FD9F  64                 	db	100	;'d'
  4587  00FDA0  20                 	db	32
  4588  00FDA1  73                 	db	115	;'s'
  4589  00FDA2  65                 	db	101	;'e'
  4590  00FDA3  74                 	db	116	;'t'
  4591  00FDA4  00                 	db	0
  4592  00FDA5                     STR_115:
  4593  00FDA5  53                 	db	83	;'S'
  4594  00FDA6  65                 	db	101	;'e'
  4595  00FDA7  72                 	db	114	;'r'
  4596  00FDA8  69                 	db	105	;'i'
  4597  00FDA9  61                 	db	97	;'a'
  4598  00FDAA  6C                 	db	108	;'l'
  4599  00FDAB  20                 	db	32
  4600  00FDAC  4E                 	db	78	;'N'
  4601  00FDAD  75                 	db	117	;'u'
  4602  00FDAE  6D                 	db	109	;'m'
  4603  00FDAF  62                 	db	98	;'b'
  4604  00FDB0  65                 	db	101	;'e'
  4605  00FDB1  72                 	db	114	;'r'
  4606  00FDB2  3A                 	db	58	;':'
  4607  00FDB3  20                 	db	32
  4608  00FDB4  25                 	db	37
  4609  00FDB5  6C                 	db	108	;'l'
  4610  00FDB6  75                 	db	117	;'u'
  4611  00FDB7  00                 	db	0
  4612  00FDB8                     STR_44:
  4613  00FDB8  4E                 	db	78	;'N'
  4614  00FDB9  45                 	db	69	;'E'
  4615  00FDBA  43                 	db	67	;'C'
  4616  00FDBB  20                 	db	32
  4617  00FDBC  3D                 	db	61	;'='
  4618  00FDBD  20                 	db	32
  4619  00FDBE  30                 	db	48	;'0'
  4620  00FDBF  78                 	db	120	;'x'
  4621  00FDC0  31                 	db	49	;'1'
  4622  00FDC1  43                 	db	67	;'C'
  4623  00FDC2  45                 	db	69	;'E'
  4624  00FDC3  33                 	db	51	;'3'
  4625  00FDC4  35                 	db	53	;'5'
  4626  00FDC5  30                 	db	48	;'0'
  4627  00FDC6  41                 	db	65	;'A'
  4628  00FDC7  46                 	db	70	;'F'
  4629  00FDC8  20                 	db	32
  4630  00FDC9  00                 	db	0
  4631  00FDCA                     STR_61:
  4632  00FDCA  52                 	db	82	;'R'
  4633  00FDCB  65                 	db	101	;'e'
  4634  00FDCC  6D                 	db	109	;'m'
  4635  00FDCD  6F                 	db	111	;'o'
  4636  00FDCE  74                 	db	116	;'t'
  4637  00FDCF  65                 	db	101	;'e'
  4638  00FDD0  42                 	db	66	;'B'
  4639  00FDD1  75                 	db	117	;'u'
  4640  00FDD2  74                 	db	116	;'t'
  4641  00FDD3  74                 	db	116	;'t'
  4642  00FDD4  6F                 	db	111	;'o'
  4643  00FDD5  6E                 	db	110	;'n'
  4644  00FDD6  31                 	db	49	;'1'
  4645  00FDD7  20                 	db	32
  4646  00FDD8  73                 	db	115	;'s'
  4647  00FDD9  65                 	db	101	;'e'
  4648  00FDDA  74                 	db	116	;'t'
  4649  00FDDB  00                 	db	0
  4650  00FDDC                     STR_83:
  4651  00FDDC  53                 	db	83	;'S'
  4652  00FDDD  79                 	db	121	;'y'
  4653  00FDDE  73                 	db	115	;'s'
  4654  00FDDF  74                 	db	116	;'t'
  4655  00FDE0  65                 	db	101	;'e'
  4656  00FDE1  6D                 	db	109	;'m'
  4657  00FDE2  20                 	db	32
  4658  00FDE3  77                 	db	119	;'w'
  4659  00FDE4  69                 	db	105	;'i'
  4660  00FDE5  6C                 	db	108	;'l'
  4661  00FDE6  6C                 	db	108	;'l'
  4662  00FDE7  20                 	db	32
  4663  00FDE8  72                 	db	114	;'r'
  4664  00FDE9  65                 	db	101	;'e'
  4665  00FDEA  73                 	db	115	;'s'
  4666  00FDEB  65                 	db	101	;'e'
  4667  00FDEC  74                 	db	116	;'t'
  4668  00FDED  00                 	db	0
  4669  00FDEE                     STR_181:
  4670  00FDEE  30                 	db	48	;'0'
  4671  00FDEF  31                 	db	49	;'1'
  4672  00FDF0  32                 	db	50	;'2'
  4673  00FDF1  33                 	db	51	;'3'
  4674  00FDF2  34                 	db	52	;'4'
  4675  00FDF3  35                 	db	53	;'5'
  4676  00FDF4  36                 	db	54	;'6'
  4677  00FDF5  37                 	db	55	;'7'
  4678  00FDF6  38                 	db	56	;'8'
  4679  00FDF7  39                 	db	57	;'9'
  4680  00FDF8  41                 	db	65	;'A'
  4681  00FDF9  42                 	db	66	;'B'
  4682  00FDFA  43                 	db	67	;'C'
  4683  00FDFB  44                 	db	68	;'D'
  4684  00FDFC  45                 	db	69	;'E'
  4685  00FDFD  46                 	db	70	;'F'
  4686  00FDFE  00                 	db	0
  4687  00FDFF                     STR_118:
  4688  00FDFF  53                 	db	83	;'S'
  4689  00FE00  79                 	db	121	;'y'
  4690  00FE01  73                 	db	115	;'s'
  4691  00FE02  74                 	db	116	;'t'
  4692  00FE03  65                 	db	101	;'e'
  4693  00FE04  6D                 	db	109	;'m'
  4694  00FE05  20                 	db	32
  4695  00FE06  63                 	db	99	;'c'
  4696  00FE07  6F                 	db	111	;'o'
  4697  00FE08  6D                 	db	109	;'m'
  4698  00FE09  6D                 	db	109	;'m'
  4699  00FE0A  61                 	db	97	;'a'
  4700  00FE0B  6E                 	db	110	;'n'
  4701  00FE0C  64                 	db	100	;'d'
  4702  00FE0D  73                 	db	115	;'s'
  4703  00FE0E  3A                 	db	58	;':'
  4704  00FE0F  00                 	db	0
  4705  00FE10                     STR_46:
  4706  00FE10  4E                 	db	78	;'N'
  4707  00FE11  45                 	db	69	;'E'
  4708  00FE12  43                 	db	67	;'C'
  4709  00FE13  20                 	db	32
  4710  00FE14  3D                 	db	61	;'='
  4711  00FE15  20                 	db	32
  4712  00FE16  30                 	db	48	;'0'
  4713  00FE17  78                 	db	120	;'x'
  4714  00FE18  33                 	db	51	;'3'
  4715  00FE19  38                 	db	56	;'8'
  4716  00FE1A  2C                 	db	44
  4717  00FE1B  20                 	db	32
  4718  00FE1C  30                 	db	48	;'0'
  4719  00FE1D  78                 	db	120	;'x'
  4720  00FE1E  30                 	db	48	;'0'
  4721  00FE1F  41                 	db	65	;'A'
  4722  00FE20  00                 	db	0
  4723  00FE21                     STR_57:
  4724  00FE21  52                 	db	82	;'R'
  4725  00FE22  65                 	db	101	;'e'
  4726  00FE23  6D                 	db	109	;'m'
  4727  00FE24  6F                 	db	111	;'o'
  4728  00FE25  74                 	db	116	;'t'
  4729  00FE26  65                 	db	101	;'e'
  4730  00FE27  42                 	db	66	;'B'
  4731  00FE28  75                 	db	117	;'u'
  4732  00FE29  74                 	db	116	;'t'
  4733  00FE2A  74                 	db	116	;'t'
  4734  00FE2B  6F                 	db	111	;'o'
  4735  00FE2C  6E                 	db	110	;'n'
  4736  00FE2D  27                 	db	39
  4737  00FE2E  78                 	db	120	;'x'
  4738  00FE2F  27                 	db	39
  4739  00FE30  00                 	db	0
  4740  00FE31                     STR_112:
  4741  00FE31  50                 	db	80	;'P'
  4742  00FE32  43                 	db	67	;'C'
  4743  00FE33  42                 	db	66	;'B'
  4744  00FE34  20                 	db	32
  4745  00FE35  56                 	db	86	;'V'
  4746  00FE36  65                 	db	101	;'e'
  4747  00FE37  72                 	db	114	;'r'
  4748  00FE38  73                 	db	115	;'s'
  4749  00FE39  69                 	db	105	;'i'
  4750  00FE3A  6F                 	db	111	;'o'
  4751  00FE3B  6E                 	db	110	;'n'
  4752  00FE3C  3A                 	db	58	;':'
  4753  00FE3D  20                 	db	32
  4754  00FE3E  25                 	db	37
  4755  00FE3F  73                 	db	115	;'s'
  4756  00FE40  00                 	db	0
  4757  00FE41                     STR_3:
  4758  00FE41  42                 	db	66	;'B'
  4759  00FE42  75                 	db	117	;'u'
  4760  00FE43  66                 	db	102	;'f'
  4761  00FE44  66                 	db	102	;'f'
  4762  00FE45  65                 	db	101	;'e'
  4763  00FE46  72                 	db	114	;'r'
  4764  00FE47  20                 	db	32
  4765  00FE48  4F                 	db	79	;'O'
  4766  00FE49  76                 	db	118	;'v'
  4767  00FE4A  65                 	db	101	;'e'
  4768  00FE4B  72                 	db	114	;'r'
  4769  00FE4C  66                 	db	102	;'f'
  4770  00FE4D  6C                 	db	108	;'l'
  4771  00FE4E  6F                 	db	111	;'o'
  4772  00FE4F  77                 	db	119	;'w'
  4773  00FE50  00                 	db	0
  4774  00FE51                     STR_133:
  4775  00FE51  52                 	db	82	;'R'
  4776  00FE52  65                 	db	101	;'e'
  4777  00FE53  6D                 	db	109	;'m'
  4778  00FE54  6F                 	db	111	;'o'
  4779  00FE55  74                 	db	116	;'t'
  4780  00FE56  65                 	db	101	;'e'
  4781  00FE57  42                 	db	66	;'B'
  4782  00FE58  75                 	db	117	;'u'
  4783  00FE59  74                 	db	116	;'t'
  4784  00FE5A  74                 	db	116	;'t'
  4785  00FE5B  6F                 	db	111	;'o'
  4786  00FE5C  6E                 	db	110	;'n'
  4787  00FE5D  25                 	db	37
  4788  00FE5E  64                 	db	100	;'d'
  4789  00FE5F  00                 	db	0
  4790  00FE60                     STR_4:
  4791  00FE60  53                 	db	83	;'S'
  4792  00FE61  79                 	db	121	;'y'
  4793  00FE62  73                 	db	115	;'s'
  4794  00FE63  74                 	db	116	;'t'
  4795  00FE64  65                 	db	101	;'e'
  4796  00FE65  6D                 	db	109	;'m'
  4797  00FE66  20                 	db	32
  4798  00FE67  6D                 	db	109	;'m'
  4799  00FE68  75                 	db	117	;'u'
  4800  00FE69  73                 	db	115	;'s'
  4801  00FE6A  74                 	db	116	;'t'
  4802  00FE6B  20                 	db	32
  4803  00FE6C  62                 	db	98	;'b'
  4804  00FE6D  65                 	db	101	;'e'
  4805  00FE6E  00                 	db	0
  4806  00FE6F                     STR_60:
  4807  00FE6F  52                 	db	82	;'R'
  4808  00FE70  65                 	db	101	;'e'
  4809  00FE71  6D                 	db	109	;'m'
  4810  00FE72  6F                 	db	111	;'o'
  4811  00FE73  74                 	db	116	;'t'
  4812  00FE74  65                 	db	101	;'e'
  4813  00FE75  42                 	db	66	;'B'
  4814  00FE76  75                 	db	117	;'u'
  4815  00FE77  74                 	db	116	;'t'
  4816  00FE78  74                 	db	116	;'t'
  4817  00FE79  6F                 	db	111	;'o'
  4818  00FE7A  6E                 	db	110	;'n'
  4819  00FE7B  31                 	db	49	;'1'
  4820  00FE7C  00                 	db	0
  4821  00FE7D                     STR_70:
  4822  00FE7D  57                 	db	87	;'W'
  4823  00FE7E  68                 	db	104	;'h'
  4824  00FE7F  69                 	db	105	;'i'
  4825  00FE80  63                 	db	99	;'c'
  4826  00FE81  68                 	db	104	;'h'
  4827  00FE82  20                 	db	32
  4828  00FE83  64                 	db	100	;'d'
  4829  00FE84  65                 	db	101	;'e'
  4830  00FE85  76                 	db	118	;'v'
  4831  00FE86  69                 	db	105	;'i'
  4832  00FE87  63                 	db	99	;'c'
  4833  00FE88  65                 	db	101	;'e'
  4834  00FE89  3F                 	db	63	;'?'
  4835  00FE8A  00                 	db	0
  4836  00FE8B                     STR_163:
  4837  00FE8B  52                 	db	82	;'R'
  4838  00FE8C  46                 	db	70	;'F'
  4839  00FE8D  20                 	db	32
  4840  00FE8E  63                 	db	99	;'c'
  4841  00FE8F  6F                 	db	111	;'o'
  4842  00FE90  6D                 	db	109	;'m'
  4843  00FE91  6D                 	db	109	;'m'
  4844  00FE92  61                 	db	97	;'a'
  4845  00FE93  6E                 	db	110	;'n'
  4846  00FE94  64                 	db	100	;'d'
  4847  00FE95  73                 	db	115	;'s'
  4848  00FE96  3A                 	db	58	;':'
  4849  00FE97  00                 	db	0
  4850  00FE98                     STR_132:
  4851  00FE98  49                 	db	73	;'I'
  4852  00FE99  52                 	db	82	;'R'
  4853  00FE9A  20                 	db	32
  4854  00FE9B  63                 	db	99	;'c'
  4855  00FE9C  6F                 	db	111	;'o'
  4856  00FE9D  6D                 	db	109	;'m'
  4857  00FE9E  6D                 	db	109	;'m'
  4858  00FE9F  61                 	db	97	;'a'
  4859  00FEA0  6E                 	db	110	;'n'
  4860  00FEA1  64                 	db	100	;'d'
  4861  00FEA2  73                 	db	115	;'s'
  4862  00FEA3  3A                 	db	58	;':'
  4863  00FEA4  00                 	db	0
  4864  00FEA5                     STR_155:
  4865  00FEA5  52                 	db	82	;'R'
  4866  00FEA6  46                 	db	70	;'F'
  4867  00FEA7  20                 	db	32
  4868  00FEA8  63                 	db	99	;'c'
  4869  00FEA9  6C                 	db	108	;'l'
  4870  00FEAA  65                 	db	101	;'e'
  4871  00FEAB  61                 	db	97	;'a'
  4872  00FEAC  72                 	db	114	;'r'
  4873  00FEAD  20                 	db	32
  4874  00FEAE  32                 	db	50	;'2'
  4875  00FEAF  2C                 	db	44
  4876  00FEB0  42                 	db	66	;'B'
  4877  00FEB1  00                 	db	0
  4878  00FEB2                     STR_149:
  4879  00FEB2  52                 	db	82	;'R'
  4880  00FEB3  46                 	db	70	;'F'
  4881  00FEB4  20                 	db	32
  4882  00FEB5  63                 	db	99	;'c'
  4883  00FEB6  6C                 	db	108	;'l'
  4884  00FEB7  65                 	db	101	;'e'
  4885  00FEB8  61                 	db	97	;'a'
  4886  00FEB9  72                 	db	114	;'r'
  4887  00FEBA  20                 	db	32
  4888  00FEBB  31                 	db	49	;'1'
  4889  00FEBC  2C                 	db	44
  4890  00FEBD  44                 	db	68	;'D'
  4891  00FEBE  00                 	db	0
  4892  00FEBF                     STR_157:
  4893  00FEBF  52                 	db	82	;'R'
  4894  00FEC0  46                 	db	70	;'F'
  4895  00FEC1  20                 	db	32
  4896  00FEC2  63                 	db	99	;'c'
  4897  00FEC3  6C                 	db	108	;'l'
  4898  00FEC4  65                 	db	101	;'e'
  4899  00FEC5  61                 	db	97	;'a'
  4900  00FEC6  72                 	db	114	;'r'
  4901  00FEC7  20                 	db	32
  4902  00FEC8  32                 	db	50	;'2'
  4903  00FEC9  2C                 	db	44
  4904  00FECA  44                 	db	68	;'D'
  4905  00FECB  00                 	db	0
  4906  00FECC                     STR_151:
  4907  00FECC  52                 	db	82	;'R'
  4908  00FECD  46                 	db	70	;'F'
  4909  00FECE  20                 	db	32
  4910  00FECF  63                 	db	99	;'c'
  4911  00FED0  6C                 	db	108	;'l'
  4912  00FED1  65                 	db	101	;'e'
  4913  00FED2  61                 	db	97	;'a'
  4914  00FED3  72                 	db	114	;'r'
  4915  00FED4  20                 	db	32
  4916  00FED5  31                 	db	49	;'1'
  4917  00FED6  2C                 	db	44
  4918  00FED7  45                 	db	69	;'E'
  4919  00FED8  00                 	db	0
  4920  00FED9                     STR_153:
  4921  00FED9  52                 	db	82	;'R'
  4922  00FEDA  46                 	db	70	;'F'
  4923  00FEDB  20                 	db	32
  4924  00FEDC  63                 	db	99	;'c'
  4925  00FEDD  6C                 	db	108	;'l'
  4926  00FEDE  65                 	db	101	;'e'
  4927  00FEDF  61                 	db	97	;'a'
  4928  00FEE0  72                 	db	114	;'r'
  4929  00FEE1  20                 	db	32
  4930  00FEE2  31                 	db	49	;'1'
  4931  00FEE3  2C                 	db	44
  4932  00FEE4  46                 	db	70	;'F'
  4933  00FEE5  00                 	db	0
  4934  00FEE6                     STR_159:
  4935  00FEE6  52                 	db	82	;'R'
  4936  00FEE7  46                 	db	70	;'F'
  4937  00FEE8  20                 	db	32
  4938  00FEE9  63                 	db	99	;'c'
  4939  00FEEA  6C                 	db	108	;'l'
  4940  00FEEB  65                 	db	101	;'e'
  4941  00FEEC  61                 	db	97	;'a'
  4942  00FEED  72                 	db	114	;'r'
  4943  00FEEE  20                 	db	32
  4944  00FEEF  32                 	db	50	;'2'
  4945  00FEF0  2C                 	db	44
  4946  00FEF1  48                 	db	72	;'H'
  4947  00FEF2  00                 	db	0
  4948  00FEF3                     STR_47:
  4949  00FEF3  52                 	db	82	;'R'
  4950  00FEF4  65                 	db	101	;'e'
  4951  00FEF5  6D                 	db	109	;'m'
  4952  00FEF6  6F                 	db	111	;'o'
  4953  00FEF7  74                 	db	116	;'t'
  4954  00FEF8  65                 	db	101	;'e'
  4955  00FEF9  42                 	db	66	;'B'
  4956  00FEFA  75                 	db	117	;'u'
  4957  00FEFB  74                 	db	116	;'t'
  4958  00FEFC  74                 	db	116	;'t'
  4959  00FEFD  6F                 	db	111	;'o'
  4960  00FEFE  6E                 	db	110	;'n'
  4961  00FEFF  00                 	db	0
  4962  00FF00                     STR_19:
  4963  00FF00  42                 	db	66	;'B'
  4964  00FF01  54                 	db	84	;'T'
  4965  00FF02  4E                 	db	78	;'N'
  4966  00FF03  61                 	db	97	;'a'
  4967  00FF04  6D                 	db	109	;'m'
  4968  00FF05  65                 	db	101	;'e'
  4969  00FF06  3D                 	db	61	;'='
  4970  00FF07  25                 	db	37
  4971  00FF08  73                 	db	115	;'s'
  4972  00FF09  0D                 	db	13
  4973  00FF0A  00                 	db	0
  4974  00FF0B                     STR_143:
  4975  00FF0B  52                 	db	82	;'R'
  4976  00FF0C  46                 	db	70	;'F'
  4977  00FF0D  20                 	db	32
  4978  00FF0E  73                 	db	115	;'s'
  4979  00FF0F  65                 	db	101	;'e'
  4980  00FF10  74                 	db	116	;'t'
  4981  00FF11  20                 	db	32
  4982  00FF12  32                 	db	50	;'2'
  4983  00FF13  2C                 	db	44
  4984  00FF14  42                 	db	66	;'B'
  4985  00FF15  00                 	db	0
  4986  00FF16                     STR_137:
  4987  00FF16  52                 	db	82	;'R'
  4988  00FF17  46                 	db	70	;'F'
  4989  00FF18  20                 	db	32
  4990  00FF19  73                 	db	115	;'s'
  4991  00FF1A  65                 	db	101	;'e'
  4992  00FF1B  74                 	db	116	;'t'
  4993  00FF1C  20                 	db	32
  4994  00FF1D  31                 	db	49	;'1'
  4995  00FF1E  2C                 	db	44
  4996  00FF1F  44                 	db	68	;'D'
  4997  00FF20  00                 	db	0
  4998  00FF21                     STR_145:
  4999  00FF21  52                 	db	82	;'R'
  5000  00FF22  46                 	db	70	;'F'
  5001  00FF23  20                 	db	32
  5002  00FF24  73                 	db	115	;'s'
  5003  00FF25  65                 	db	101	;'e'
  5004  00FF26  74                 	db	116	;'t'
  5005  00FF27  20                 	db	32
  5006  00FF28  32                 	db	50	;'2'
  5007  00FF29  2C                 	db	44
  5008  00FF2A  44                 	db	68	;'D'
  5009  00FF2B  00                 	db	0
  5010  00FF2C                     STR_139:
  5011  00FF2C  52                 	db	82	;'R'
  5012  00FF2D  46                 	db	70	;'F'
  5013  00FF2E  20                 	db	32
  5014  00FF2F  73                 	db	115	;'s'
  5015  00FF30  65                 	db	101	;'e'
  5016  00FF31  74                 	db	116	;'t'
  5017  00FF32  20                 	db	32
  5018  00FF33  31                 	db	49	;'1'
  5019  00FF34  2C                 	db	44
  5020  00FF35  45                 	db	69	;'E'
  5021  00FF36  00                 	db	0
  5022  00FF37                     STR_141:
  5023  00FF37  52                 	db	82	;'R'
  5024  00FF38  46                 	db	70	;'F'
  5025  00FF39  20                 	db	32
  5026  00FF3A  73                 	db	115	;'s'
  5027  00FF3B  65                 	db	101	;'e'
  5028  00FF3C  74                 	db	116	;'t'
  5029  00FF3D  20                 	db	32
  5030  00FF3E  31                 	db	49	;'1'
  5031  00FF3F  2C                 	db	44
  5032  00FF40  46                 	db	70	;'F'
  5033  00FF41  00                 	db	0
  5034  00FF42                     STR_147:
  5035  00FF42  52                 	db	82	;'R'
  5036  00FF43  46                 	db	70	;'F'
  5037  00FF44  20                 	db	32
  5038  00FF45  73                 	db	115	;'s'
  5039  00FF46  65                 	db	101	;'e'
  5040  00FF47  74                 	db	116	;'t'
  5041  00FF48  20                 	db	32
  5042  00FF49  32                 	db	50	;'2'
  5043  00FF4A  2C                 	db	44
  5044  00FF4B  48                 	db	72	;'H'
  5045  00FF4C  00                 	db	0
  5046  00FF4D                     STR_41:
  5047  00FF4D  20                 	db	32
  5048  00FF4E  20                 	db	32
  5049  00FF4F  20                 	db	32
  5050  00FF50  20                 	db	32
  5051  00FF51  20                 	db	32
  5052  00FF52  20                 	db	32
  5053  00FF53  20                 	db	32
  5054  00FF54  20                 	db	32
  5055  00FF55  6F                 	db	111	;'o'
  5056  00FF56  72                 	db	114	;'r'
  5057  00FF57  00                 	db	0
  5058  00FF58                     STR_85:
  5059  00FF58  43                 	db	67	;'C'
  5060  00FF59  68                 	db	104	;'h'
  5061  00FF5A  61                 	db	97	;'a'
  5062  00FF5B  6E                 	db	110	;'n'
  5063  00FF5C  67                 	db	103	;'g'
  5064  00FF5D  65                 	db	101	;'e'
  5065  00FF5E  20                 	db	32
  5066  00FF5F  53                 	db	83	;'S'
  5067  00FF60  4E                 	db	78	;'N'
  5068  00FF61  00                 	db	0
  5069  00FF62                     STR_120:
  5070  00FF62  48                 	db	72	;'H'
  5071  00FF63  65                 	db	101	;'e'
  5072  00FF64  6C                 	db	108	;'l'
  5073  00FF65  70                 	db	112	;'p'
  5074  00FF66  20                 	db	32
  5075  00FF67  4D                 	db	77	;'M'
  5076  00FF68  65                 	db	101	;'e'
  5077  00FF69  6E                 	db	110	;'n'
  5078  00FF6A  75                 	db	117	;'u'
  5079  00FF6B  00                 	db	0
  5080  00FF6C                     STR_15:
  5081  00FF6C  53                 	db	83	;'S'
  5082  00FF6D  59                 	db	89	;'Y'
  5083  00FF6E  2C                 	db	44
  5084  00FF6F  30                 	db	48	;'0'
  5085  00FF70  30                 	db	48	;'0'
  5086  00FF71  31                 	db	49	;'1'
  5087  00FF72  30                 	db	48	;'0'
  5088  00FF73  0D                 	db	13
  5089  00FF74  00                 	db	0
  5090  00FF75                     STR_13:
  5091  00FF75  53                 	db	83	;'S'
  5092  00FF76  55                 	db	85	;'U'
  5093  00FF77  2C                 	db	44
  5094  00FF78  31                 	db	49	;'1'
  5095  00FF79  31                 	db	49	;'1'
  5096  00FF7A  35                 	db	53	;'5'
  5097  00FF7B  4B                 	db	75	;'K'
  5098  00FF7C  0D                 	db	13
  5099  00FF7D  00                 	db	0
  5100  00FF7E                     STR_43:
  5101  00FF7E  45                 	db	69	;'E'
  5102  00FF7F  78                 	db	120	;'x'
  5103  00FF80  61                 	db	97	;'a'
  5104  00FF81  6D                 	db	109	;'m'
  5105  00FF82  70                 	db	112	;'p'
  5106  00FF83  6C                 	db	108	;'l'
  5107  00FF84  65                 	db	101	;'e'
  5108  00FF85  3A                 	db	58	;':'
  5109  00FF86  00                 	db	0
  5110  00FF87                     STR_63:
  5111  00FF87  52                 	db	82	;'R'
  5112  00FF88  46                 	db	70	;'F'
  5113  00FF89  20                 	db	32
  5114  00FF8A  63                 	db	99	;'c'
  5115  00FF8B  6C                 	db	108	;'l'
  5116  00FF8C  65                 	db	101	;'e'
  5117  00FF8D  61                 	db	97	;'a'
  5118  00FF8E  72                 	db	114	;'r'
  5119  00FF8F  00                 	db	0
  5120  00FF90                     STR_106:
  5121  00FF90  56                 	db	86	;'V'
  5122  00FF91  6F                 	db	111	;'o'
  5123  00FF92  6C                 	db	108	;'l'
  5124  00FF93  74                 	db	116	;'t'
  5125  00FF94  61                 	db	97	;'a'
  5126  00FF95  67                 	db	103	;'g'
  5127  00FF96  65                 	db	101	;'e'
  5128  00FF97  00                 	db	0
  5129  00FF98                     STR_180:
  5130  00FF98  28                 	db	40
  5131  00FF99  6E                 	db	110	;'n'
  5132  00FF9A  75                 	db	117	;'u'
  5133  00FF9B  6C                 	db	108	;'l'
  5134  00FF9C  6C                 	db	108	;'l'
  5135  00FF9D  29                 	db	41
  5136  00FF9E  00                 	db	0
  5137  00FF9F                     STR_11:
  5138  00FF9F  53                 	db	83	;'S'
  5139  00FFA0  4E                 	db	78	;'N'
  5140  00FFA1  2C                 	db	44
  5141  00FFA2  25                 	db	37
  5142  00FFA3  73                 	db	115	;'s'
  5143  00FFA4  0D                 	db	13
  5144  00FFA5  00                 	db	0
  5145  00FFA6                     STR_39:
  5146  00FFA6  55                 	db	85	;'U'
  5147  00FFA7  73                 	db	115	;'s'
  5148  00FFA8  61                 	db	97	;'a'
  5149  00FFA9  67                 	db	103	;'g'
  5150  00FFAA  65                 	db	101	;'e'
  5151  00FFAB  3A                 	db	58	;':'
  5152  00FFAC  00                 	db	0
  5153  00FFAD                     STR_62:
  5154  00FFAD  52                 	db	82	;'R'
  5155  00FFAE  46                 	db	70	;'F'
  5156  00FFAF  20                 	db	32
  5157  00FFB0  73                 	db	115	;'s'
  5158  00FFB1  65                 	db	101	;'e'
  5159  00FFB2  74                 	db	116	;'t'
  5160  00FFB3  00                 	db	0
  5161  00FFB4                     STR_16:
  5162  00FFB4  53                 	db	83	;'S'
  5163  00FFB5  7E                 	db	126
  5164  00FFB6  2C                 	db	44
  5165  00FFB7  30                 	db	48	;'0'
  5166  00FFB8  0D                 	db	13
  5167  00FFB9  00                 	db	0
  5168  00FFBA                     STR_22:
  5169  00FFBA  43                 	db	67	;'C'
  5170  00FFBB  6F                 	db	111	;'o'
  5171  00FFBC  6E                 	db	110	;'n'
  5172  00FFBD  66                 	db	102	;'f'
  5173  00FFBE  31                 	db	49	;'1'
  5174  00FFBF  00                 	db	0
  5175  00FFC0                     STR_24:
  5176  00FFC0  43                 	db	67	;'C'
  5177  00FFC1  6F                 	db	111	;'o'
  5178  00FFC2  6E                 	db	110	;'n'
  5179  00FFC3  66                 	db	102	;'f'
  5180  00FFC4  32                 	db	50	;'2'
  5181  00FFC5  00                 	db	0
  5182  00FFC6                     STR_80:
  5183  00FFC6  52                 	db	82	;'R'
  5184  00FFC7  65                 	db	101	;'e'
  5185  00FFC8  73                 	db	115	;'s'
  5186  00FFC9  65                 	db	101	;'e'
  5187  00FFCA  74                 	db	116	;'t'
  5188  00FFCB  00                 	db	0
  5189  00FFCC                     STR_20:
  5190  00FFCC  2D                 	db	45
  5191  00FFCD  2D                 	db	45
  5192  00FFCE  2D                 	db	45
  5193  00FFCF  0D                 	db	13
  5194  00FFD0  00                 	db	0
  5195  00FFD1                     STR_161:
  5196  00FFD1  4E                 	db	78	;'N'
  5197  00FFD2  45                 	db	69	;'E'
  5198  00FFD3  43                 	db	67	;'C'
  5199  00FFD4  3F                 	db	63	;'?'
  5200  00FFD5  00                 	db	0
  5201  00FFD6                     STR_88:
  5202  00FFD6  43                 	db	67	;'C'
  5203  00FFD7  6F                 	db	111	;'o'
  5204  00FFD8  64                 	db	100	;'d'
  5205  00FFD9  65                 	db	101	;'e'
  5206  00FFDA  00                 	db	0
  5207  00FFDB                     STR_114:
  5208  00FFDB  20                 	db	32
  5209  00FFDC  4D                 	db	77	;'M'
  5210  00FFDD  48                 	db	72	;'H'
  5211  00FFDE  7A                 	db	122	;'z'
  5212  00FFDF  00                 	db	0
  5213  00FFE0                     STR_6:
  5214  00FFE0  24                 	db	36
  5215  00FFE1  24                 	db	36
  5216  00FFE2  24                 	db	36
  5217  00FFE3  00                 	db	0
  5218  00FFE4                     STR_116:
  5219  00FFE4  3F                 	db	63	;'?'
  5220  00FFE5  3F                 	db	63	;'?'
  5221  00FFE6  3F                 	db	63	;'?'
  5222  00FFE7  00                 	db	0
  5223  00FFE8                     STR_26:
  5224  00FFE8  4E                 	db	78	;'N'
  5225  00FFE9  45                 	db	69	;'E'
  5226  00FFEA  43                 	db	67	;'C'
  5227  00FFEB  00                 	db	0
  5228  00FFEC                     STR_7:
  5229  00FFEC  43                 	db	67	;'C'
  5230  00FFED  4D                 	db	77	;'M'
  5231  00FFEE  44                 	db	68	;'D'
  5232  00FFEF  00                 	db	0
  5233  00FFF0                     STR_21:
  5234  00FFF0  45                 	db	69	;'E'
  5235  00FFF1  4E                 	db	78	;'N'
  5236  00FFF2  44                 	db	68	;'D'
  5237  00FFF3  00                 	db	0
  5238  00FFF4                     STR_10:
  5239  00FFF4  41                 	db	65	;'A'
  5240  00FFF5  4F                 	db	79	;'O'
  5241  00FFF6  4B                 	db	75	;'K'
  5242  00FFF7  00                 	db	0
  5243  00FFF8                     STR_17:
  5244  00FFF8  44                 	db	68	;'D'
  5245  00FFF9  0D                 	db	13
  5246  00FFFA  00                 	db	0
  5247  00FFFB                     STR_8:
  5248  00FFFB  56                 	db	86	;'V'
  5249  00FFFC  0D                 	db	13
  5250  00FFFD  00                 	db	0
  5251  0000                     
  5252                           ; #config settings
  5253  00FFFE  00                 	db	0	; dummy byte at the end
  5254  0000                     
  5255                           	psect	cinit
  5256  0093BE                     __pcinit:
  5257                           	opt stack 0
  5258  0093BE                     start_initialization:
  5259                           	opt stack 0
  5260  0093BE                     __initialization:
  5261                           	opt stack 0
  5262                           
  5263                           ; Clear objects allocated to BANK6 (200 bytes)
  5264  0093BE  EE06  F000         	lfsr	0,__pbssBANK6
  5265  0093C2  0EC8               	movlw	200
  5266  0093C4                     clear_0:
  5267  0093C4  6AEE               	clrf	postinc0,c
  5268  0093C6  06E8               	decf	wreg,f,c
  5269  0093C8  E1FD               	bnz	clear_0
  5270                           
  5271                           ; Clear objects allocated to BANK5 (60 bytes)
  5272  0093CA  EE05  F000         	lfsr	0,__pbssBANK5
  5273  0093CE  0E3C               	movlw	60
  5274  0093D0                     clear_1:
  5275  0093D0  6AEE               	clrf	postinc0,c
  5276  0093D2  06E8               	decf	wreg,f,c
  5277  0093D4  E1FD               	bnz	clear_1
  5278                           
  5279                           ; Clear objects allocated to BANK4 (241 bytes)
  5280  0093D6  EE04  F000         	lfsr	0,__pbssBANK4
  5281  0093DA  0EF1               	movlw	241
  5282  0093DC                     clear_2:
  5283  0093DC  6AEE               	clrf	postinc0,c
  5284  0093DE  06E8               	decf	wreg,f,c
  5285  0093E0  E1FD               	bnz	clear_2
  5286                           
  5287                           ; Clear objects allocated to BANK3 (12 bytes)
  5288  0093E2  EE03  F0E5         	lfsr	0,__pbssBANK3
  5289  0093E6  0E0C               	movlw	12
  5290  0093E8                     clear_3:
  5291  0093E8  6AEE               	clrf	postinc0,c
  5292  0093EA  06E8               	decf	wreg,f,c
  5293  0093EC  E1FD               	bnz	clear_3
  5294                           
  5295                           ; Clear objects allocated to BANK2 (94 bytes)
  5296  0093EE  EE02  F095         	lfsr	0,__pbssBANK2
  5297  0093F2  0E5E               	movlw	94
  5298  0093F4                     clear_4:
  5299  0093F4  6AEE               	clrf	postinc0,c
  5300  0093F6  06E8               	decf	wreg,f,c
  5301  0093F8  E1FD               	bnz	clear_4
  5302                           
  5303                           ; Clear objects allocated to BANK0 (10 bytes)
  5304  0093FA  EE00  F0F5         	lfsr	0,__pbssBANK0
  5305  0093FE  0E0A               	movlw	10
  5306  009400                     clear_5:
  5307  009400  6AEE               	clrf	postinc0,c
  5308  009402  06E8               	decf	wreg,f,c
  5309  009404  E1FD               	bnz	clear_5
  5310                           
  5311                           ; Clear objects allocated to COMRAM (18 bytes)
  5312  009406  EE00  F03A         	lfsr	0,__pbssCOMRAM
  5313  00940A  0E12               	movlw	18
  5314  00940C                     clear_6:
  5315  00940C  6AEE               	clrf	postinc0,c
  5316  00940E  06E8               	decf	wreg,f,c
  5317  009410  E1FD               	bnz	clear_6
  5318                           
  5319                           ; Initialize objects allocated to BANK5 (50 bytes)
  5320                           ; load TBLPTR registers with __pidataBANK5
  5321  009412  0E20               	movlw	low __pidataBANK5
  5322  009414  6EF6               	movwf	tblptrl,c
  5323  009416  0EA6               	movlw	high __pidataBANK5
  5324  009418  6EF7               	movwf	tblptrh,c
  5325  00941A  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  5326  00941C  6EF8               	movwf	tblptru,c
  5327  00941E  EE05  F03C         	lfsr	0,__pdataBANK5
  5328  009422  EE10 F032          	lfsr	1,50
  5329  009426                     copy_data0:
  5330  009426  0009               	tblrd		*+
  5331  009428  CFF5 FFEE          	movff	tablat,postinc0
  5332  00942C  50E5               	movf	postdec1,w,c
  5333  00942E  50E1               	movf	fsr1l,w,c
  5334  009430  E1FA               	bnz	copy_data0
  5335                           
  5336                           ; Initialize objects allocated to BANK3 (4 bytes)
  5337                           ; load TBLPTR registers with __pidataBANK3
  5338  009432  0E7D               	movlw	low __pidataBANK3
  5339  009434  6EF6               	movwf	tblptrl,c
  5340  009436  0EAA               	movlw	high __pidataBANK3
  5341  009438  6EF7               	movwf	tblptrh,c
  5342  00943A  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  5343  00943C  6EF8               	movwf	tblptru,c
  5344  00943E  EE03  F0F1         	lfsr	0,__pdataBANK3
  5345  009442  EE10 F004          	lfsr	1,4
  5346  009446                     copy_data1:
  5347  009446  0009               	tblrd		*+
  5348  009448  CFF5 FFEE          	movff	tablat,postinc0
  5349  00944C  50E5               	movf	postdec1,w,c
  5350  00944E  50E1               	movf	fsr1l,w,c
  5351  009450  E1FA               	bnz	copy_data1
  5352                           
  5353                           ; Initialize objects allocated to BANK0 (1 bytes)
  5354                           ; load TBLPTR registers with __pidataBANK0
  5355  009452  0E88               	movlw	low __pidataBANK0
  5356  009454  6EF6               	movwf	tblptrl,c
  5357  009456  0EAA               	movlw	high __pidataBANK0
  5358  009458  6EF7               	movwf	tblptrh,c
  5359  00945A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  5360  00945C  6EF8               	movwf	tblptru,c
  5361  00945E  0009               	tblrd		*+	;fetch initializer
  5362  009460  CFF5 F0FF          	movff	tablat,__pdataBANK0
  5363                           
  5364                           ; Initialize objects allocated to COMRAM (5 bytes)
  5365                           ; load TBLPTR registers with __pidataCOMRAM
  5366  009464  0E78               	movlw	low __pidataCOMRAM
  5367  009466  6EF6               	movwf	tblptrl,c
  5368  009468  0EAA               	movlw	high __pidataCOMRAM
  5369  00946A  6EF7               	movwf	tblptrh,c
  5370  00946C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  5371  00946E  6EF8               	movwf	tblptru,c
  5372  009470  EE00  F04C         	lfsr	0,__pdataCOMRAM
  5373  009474  EE10 F005          	lfsr	1,5
  5374  009478                     copy_data2:
  5375  009478  0009               	tblrd		*+
  5376  00947A  CFF5 FFEE          	movff	tablat,postinc0
  5377  00947E  50E5               	movf	postdec1,w,c
  5378  009480  50E1               	movf	fsr1l,w,c
  5379  009482  E1FA               	bnz	copy_data2
  5380  009484                     end_of_initialization:
  5381                           	opt stack 0
  5382  009484                     __end_of__initialization:
  5383                           	opt stack 0
  5384  009484  0100               	movlb	0
  5385  009486  EF16  F026         	goto	_main	;jump to C main() function
  5386                           tblptru	equ	0xFF8
  5387                           tblptrh	equ	0xFF7
  5388                           tblptrl	equ	0xFF6
  5389                           tablat	equ	0xFF5
  5390                           postinc0	equ	0xFEE
  5391                           wreg	equ	0xFE8
  5392                           postdec1	equ	0xFE5
  5393                           fsr1l	equ	0xFE1
  5394                           
  5395                           	psect	bssCOMRAM
  5396  00003A                     __pbssCOMRAM:
  5397                           	opt stack 0
  5398  00003A                     _IRsendCode:
  5399                           	opt stack 0
  5400  00003A                     	ds	4
  5401  00003E                     _CommandStringPos:
  5402                           	opt stack 0
  5403  00003E                     	ds	1
  5404  00003F                     _IRbit:
  5405                           	opt stack 0
  5406  00003F                     	ds	1
  5407  000040                     _IRpinOLD:
  5408                           	opt stack 0
  5409  000040                     	ds	1
  5410  000041                     _IRrawCodeNum:
  5411                           	opt stack 0
  5412  000041                     	ds	1
  5413  000042                     _IRrepeatAmount:
  5414                           	opt stack 0
  5415  000042                     	ds	1
  5416  000043                     _IRrepeatflag:
  5417                           	opt stack 0
  5418  000043                     	ds	1
  5419  000044                     _RFConfig:
  5420                           	opt stack 0
  5421  000044                     	ds	1
  5422  000045                     _RFcodeBit:
  5423                           	opt stack 0
  5424  000045                     	ds	1
  5425  000046                     _RFcodePlace:
  5426                           	opt stack 0
  5427  000046                     	ds	1
  5428  000047                     _RFsendFlag:
  5429                           	opt stack 0
  5430  000047                     	ds	1
  5431  000048                     _Sendcount:
  5432                           	opt stack 0
  5433  000048                     	ds	1
  5434  000049                     _Timer1_Postscaler:
  5435                           	opt stack 0
  5436  000049                     	ds	1
  5437  00004A                     _Timer2_Postscaler:
  5438                           	opt stack 0
  5439  00004A                     	ds	1
  5440  00004B                     _Timer3_Postscaler:
  5441                           	opt stack 0
  5442  00004B                     	ds	1
  5443                           tblptru	equ	0xFF8
  5444                           tblptrh	equ	0xFF7
  5445                           tblptrl	equ	0xFF6
  5446                           tablat	equ	0xFF5
  5447                           postinc0	equ	0xFEE
  5448                           wreg	equ	0xFE8
  5449                           postdec1	equ	0xFE5
  5450                           fsr1l	equ	0xFE1
  5451                           
  5452                           	psect	dataCOMRAM
  5453  00004C                     __pdataCOMRAM:
  5454                           	opt stack 0
  5455  00004C                     _IRbitPosition:
  5456                           	opt stack 0
  5457  00004C                     	ds	1
  5458  00004D                     _IRcodePlace:
  5459                           	opt stack 0
  5460  00004D                     	ds	1
  5461  00004E                     _RF_IR:
  5462                           	opt stack 0
  5463  00004E                     	ds	1
  5464  00004F                     _RF_IR_Postscaler:
  5465                           	opt stack 0
  5466  00004F                     	ds	1
  5467  000050                     _ReceivingIR:
  5468                           	opt stack 0
  5469  000050                     	ds	1
  5470                           tblptru	equ	0xFF8
  5471                           tblptrh	equ	0xFF7
  5472                           tblptrl	equ	0xFF6
  5473                           tablat	equ	0xFF5
  5474                           postinc0	equ	0xFEE
  5475                           wreg	equ	0xFE8
  5476                           postdec1	equ	0xFE5
  5477                           fsr1l	equ	0xFE1
  5478                           
  5479                           	psect	bssBANK0
  5480  0000F5                     __pbssBANK0:
  5481                           	opt stack 0
  5482  0000F5                     _Conf2_ChannelB_Status:
  5483                           	opt stack 0
  5484  0000F5                     	ds	1
  5485  0000F6                     _Conf2_ChannelD_Status:
  5486                           	opt stack 0
  5487  0000F6                     	ds	1
  5488  0000F7                     _Conf2_ChannelH_1_Status:
  5489                           	opt stack 0
  5490  0000F7                     	ds	1
  5491  0000F8                     _Conf2_ChannelH_2_Status:
  5492                           	opt stack 0
  5493  0000F8                     	ds	1
  5494  0000F9                     _Conf2_ChannelH_3_Status:
  5495                           	opt stack 0
  5496  0000F9                     	ds	1
  5497  0000FA                     _IRcodeBit:
  5498                           	opt stack 0
  5499  0000FA                     	ds	1
  5500  0000FB                     _IRmod:
  5501                           	opt stack 0
  5502  0000FB                     	ds	1
  5503  0000FC                     _IRsendFlag:
  5504                           	opt stack 0
  5505  0000FC                     	ds	1
  5506  0000FD                     _IRaddress:
  5507                           	opt stack 0
  5508  0000FD                     	ds	1
  5509  0000FE                     _IRcommand:
  5510                           	opt stack 0
  5511  0000FE                     	ds	1
  5512                           tblptru	equ	0xFF8
  5513                           tblptrh	equ	0xFF7
  5514                           tblptrl	equ	0xFF6
  5515                           tablat	equ	0xFF5
  5516                           postinc0	equ	0xFEE
  5517                           wreg	equ	0xFE8
  5518                           postdec1	equ	0xFE5
  5519                           fsr1l	equ	0xFE1
  5520                           
  5521                           	psect	dataBANK0
  5522  0000FF                     __pdataBANK0:
  5523                           	opt stack 0
  5524  0000FF                     _Sent:
  5525                           	opt stack 0
  5526  0000FF                     	ds	1
  5527                           tblptru	equ	0xFF8
  5528                           tblptrh	equ	0xFF7
  5529                           tblptrl	equ	0xFF6
  5530                           tablat	equ	0xFF5
  5531                           postinc0	equ	0xFEE
  5532                           wreg	equ	0xFE8
  5533                           postdec1	equ	0xFE5
  5534                           fsr1l	equ	0xFE1
  5535                           
  5536                           	psect	bssBANK2
  5537  000295                     __pbssBANK2:
  5538                           	opt stack 0
  5539  000295                     _Global2:
  5540                           	opt stack 0
  5541  000295                     	ds	64
  5542  0002D5                     _Global1:
  5543                           	opt stack 0
  5544  0002D5                     	ds	30
  5545                           tblptru	equ	0xFF8
  5546                           tblptrh	equ	0xFF7
  5547                           tblptrl	equ	0xFF6
  5548                           tablat	equ	0xFF5
  5549                           postinc0	equ	0xFEE
  5550                           wreg	equ	0xFE8
  5551                           postdec1	equ	0xFE5
  5552                           fsr1l	equ	0xFE1
  5553                           
  5554                           	psect	bssBANK3
  5555  0003E5                     __pbssBANK3:
  5556                           	opt stack 0
  5557  0003E5                     _BatteryVoltage:
  5558                           	opt stack 0
  5559  0003E5                     	ds	3
  5560  0003E8                     _BluetoothChangeStatus:
  5561                           	opt stack 0
  5562  0003E8                     	ds	1
  5563  0003E9                     _BufferOverflow:
  5564                           	opt stack 0
  5565  0003E9                     	ds	1
  5566  0003EA                     _NewReceivedString:
  5567                           	opt stack 0
  5568  0003EA                     	ds	1
  5569  0003EB                     _ReceivedStringPos:
  5570                           	opt stack 0
  5571  0003EB                     	ds	1
  5572  0003EC                     _IR_NEC:
  5573                           	opt stack 0
  5574  0003EC                     	ds	4
  5575  0003F0                     _IR_New_Code:
  5576                           	opt stack 0
  5577  0003F0                     	ds	1
  5578                           tblptru	equ	0xFF8
  5579                           tblptrh	equ	0xFF7
  5580                           tblptrl	equ	0xFF6
  5581                           tablat	equ	0xFF5
  5582                           postinc0	equ	0xFEE
  5583                           wreg	equ	0xFE8
  5584                           postdec1	equ	0xFE5
  5585                           fsr1l	equ	0xFE1
  5586                           
  5587                           	psect	dataBANK3
  5588  0003F1                     __pdataBANK3:
  5589                           	opt stack 0
  5590  0003F1                     _IRtimeout:
  5591                           	opt stack 0
  5592  0003F1                     	ds	4
  5593                           tblptru	equ	0xFF8
  5594                           tblptrh	equ	0xFF7
  5595                           tblptrl	equ	0xFF6
  5596                           tablat	equ	0xFF5
  5597                           postinc0	equ	0xFEE
  5598                           wreg	equ	0xFE8
  5599                           postdec1	equ	0xFE5
  5600                           fsr1l	equ	0xFE1
  5601                           
  5602                           	psect	bssBANK4
  5603  000400                     __pbssBANK4:
  5604                           	opt stack 0
  5605  000400                     _RFsendCode:
  5606                           	opt stack 0
  5607  000400                     	ds	20
  5608  000414                     _CommandString:
  5609                           	opt stack 0
  5610  000414                     	ds	100
  5611  000478                     _ReceivedString:
  5612                           	opt stack 0
  5613  000478                     	ds	100
  5614  0004DC                     _BluetoothBroadcast:
  5615                           	opt stack 0
  5616  0004DC                     	ds	21
  5617                           tblptru	equ	0xFF8
  5618                           tblptrh	equ	0xFF7
  5619                           tblptrl	equ	0xFF6
  5620                           tablat	equ	0xFF5
  5621                           postinc0	equ	0xFEE
  5622                           wreg	equ	0xFE8
  5623                           postdec1	equ	0xFE5
  5624                           fsr1l	equ	0xFE1
  5625                           
  5626                           	psect	bssBANK5
  5627  000500                     __pbssBANK5:
  5628                           	opt stack 0
  5629  000500                     _BluetoothFirmware1:
  5630                           	opt stack 0
  5631  000500                     	ds	30
  5632  00051E                     _BluetoothFirmware2:
  5633                           	opt stack 0
  5634  00051E                     	ds	30
  5635                           tblptru	equ	0xFF8
  5636                           tblptrh	equ	0xFF7
  5637                           tblptrl	equ	0xFF6
  5638                           tablat	equ	0xFF5
  5639                           postinc0	equ	0xFEE
  5640                           wreg	equ	0xFE8
  5641                           postdec1	equ	0xFE5
  5642                           fsr1l	equ	0xFE1
  5643                           
  5644                           	psect	dataBANK5
  5645  00053C                     __pdataBANK5:
  5646                           	opt stack 0
  5647  00053C                     _ProductName:
  5648                           	opt stack 0
  5649  00053C                     	ds	50
  5650                           tblptru	equ	0xFF8
  5651                           tblptrh	equ	0xFF7
  5652                           tblptrl	equ	0xFF6
  5653                           tablat	equ	0xFF5
  5654                           postinc0	equ	0xFEE
  5655                           wreg	equ	0xFE8
  5656                           postdec1	equ	0xFE5
  5657                           fsr1l	equ	0xFE1
  5658                           
  5659                           	psect	bssBANK6
  5660  000600                     __pbssBANK6:
  5661                           	opt stack 0
  5662  000600                     _IRRawCode:
  5663                           	opt stack 0
  5664  000600                     	ds	200
  5665                           tblptru	equ	0xFF8
  5666                           tblptrh	equ	0xFF7
  5667                           tblptrl	equ	0xFF6
  5668                           tablat	equ	0xFF5
  5669                           postinc0	equ	0xFEE
  5670                           wreg	equ	0xFE8
  5671                           postdec1	equ	0xFE5
  5672                           fsr1l	equ	0xFE1
  5673                           
  5674                           	psect	cstackBANK3
  5675  000300                     __pcstackBANK3:
  5676                           	opt stack 0
  5677  000300                     main@buf:
  5678                           	opt stack 0
  5679                           
  5680                           ; 100 bytes @ 0x0
  5681  000300                     	ds	100
  5682  000364                     main@BluetoothString:
  5683                           	opt stack 0
  5684                           
  5685                           ; 100 bytes @ 0x64
  5686  000364                     	ds	100
  5687  0003C8                     main@BroadcastTEMP:
  5688                           	opt stack 0
  5689                           
  5690                           ; 21 bytes @ 0xC8
  5691  0003C8                     	ds	21
  5692  0003DD                     main@IRtask:
  5693                           	opt stack 0
  5694                           
  5695                           ; 1 bytes @ 0xDD
  5696  0003DD                     	ds	1
  5697  0003DE                     main@Bluetoothtask:
  5698                           	opt stack 0
  5699                           
  5700                           ; 1 bytes @ 0xDE
  5701  0003DE                     	ds	1
  5702  0003DF                     main@BluetoothStringPos:
  5703                           	opt stack 0
  5704                           
  5705                           ; 1 bytes @ 0xDF
  5706  0003DF                     	ds	1
  5707  0003E0                     main@ConnectedOLD:
  5708                           	opt stack 0
  5709                           
  5710                           ; 1 bytes @ 0xE0
  5711  0003E0                     	ds	1
  5712  0003E1                     main@VoltageStatusOLD:
  5713                           	opt stack 0
  5714                           
  5715                           ; 1 bytes @ 0xE1
  5716  0003E1                     	ds	1
  5717  0003E2                     main@Connected:
  5718                           	opt stack 0
  5719                           
  5720                           ; 1 bytes @ 0xE2
  5721  0003E2                     	ds	1
  5722  0003E3                     main@i:
  5723                           	opt stack 0
  5724                           
  5725                           ; 1 bytes @ 0xE3
  5726  0003E3                     	ds	1
  5727  0003E4                     main@VoltageStatus:
  5728                           	opt stack 0
  5729                           
  5730                           ; 1 bytes @ 0xE4
  5731  0003E4                     	ds	1
  5732                           tblptru	equ	0xFF8
  5733                           tblptrh	equ	0xFF7
  5734                           tblptrl	equ	0xFF6
  5735                           tablat	equ	0xFF5
  5736                           postinc0	equ	0xFEE
  5737                           wreg	equ	0xFE8
  5738                           postdec1	equ	0xFE5
  5739                           fsr1l	equ	0xFE1
  5740                           
  5741                           	psect	cstackBANK2
  5742  000200                     __pcstackBANK2:
  5743                           	opt stack 0
  5744  000200                     ??_UseBluetooth:
  5745                           
  5746                           ; 0 bytes @ 0x0
  5747  000200                     	ds	12
  5748  00020C                     UseBluetooth@buf:
  5749                           	opt stack 0
  5750                           
  5751                           ; 100 bytes @ 0xC
  5752  00020C                     	ds	100
  5753  000270                     UseBluetooth@rfchannelSTR:
  5754                           	opt stack 0
  5755                           
  5756                           ; 10 bytes @ 0x70
  5757  000270                     	ds	10
  5758  00027A                     UseBluetooth@set:
  5759                           	opt stack 0
  5760                           
  5761                           ; 1 bytes @ 0x7A
  5762  00027A                     	ds	1
  5763  00027B                     UseBluetooth@ReceivedStringPosOLD:
  5764                           	opt stack 0
  5765                           
  5766                           ; 1 bytes @ 0x7B
  5767  00027B                     	ds	1
  5768  00027C                     UseBluetooth@tempNec:
  5769                           	opt stack 0
  5770                           
  5771                           ; 4 bytes @ 0x7C
  5772  00027C                     	ds	4
  5773  000280                     UseBluetooth@SerialNumberTEMP:
  5774                           	opt stack 0
  5775                           
  5776                           ; 4 bytes @ 0x80
  5777  000280                     	ds	4
  5778  000284                     UseBluetooth@EmptyPlace:
  5779                           	opt stack 0
  5780                           
  5781                           ; 1 bytes @ 0x84
  5782  000284                     	ds	1
  5783  000285                     UseBluetooth@device:
  5784                           	opt stack 0
  5785                           
  5786                           ; 1 bytes @ 0x85
  5787  000285                     	ds	1
  5788  000286                     UseBluetooth@EnteredNEC:
  5789                           	opt stack 0
  5790                           
  5791                           ; 4 bytes @ 0x86
  5792  000286                     	ds	4
  5793  00028A                     UseBluetooth@ok:
  5794                           	opt stack 0
  5795                           
  5796                           ; 1 bytes @ 0x8A
  5797  00028A                     	ds	1
  5798  00028B                     UseBluetooth@tempRFArray:
  5799                           	opt stack 0
  5800                           
  5801                           ; 1 bytes @ 0x8B
  5802  00028B                     	ds	1
  5803  00028C                     UseBluetooth@timeout:
  5804                           	opt stack 0
  5805                           
  5806                           ; 1 bytes @ 0x8C
  5807  00028C                     	ds	1
  5808  00028D                     UseBluetooth@rfconf:
  5809                           	opt stack 0
  5810                           
  5811                           ; 1 bytes @ 0x8D
  5812  00028D                     	ds	1
  5813  00028E                     UseBluetooth@NecAddress:
  5814                           	opt stack 0
  5815                           
  5816                           ; 1 bytes @ 0x8E
  5817  00028E                     	ds	1
  5818  00028F                     UseBluetooth@NecCommand:
  5819                           	opt stack 0
  5820                           
  5821                           ; 1 bytes @ 0x8F
  5822  00028F                     	ds	1
  5823  000290                     UseBluetooth@temp:
  5824                           	opt stack 0
  5825                           
  5826                           ; 4 bytes @ 0x90
  5827  000290                     	ds	4
  5828  000294                     UseBluetooth@i:
  5829                           	opt stack 0
  5830                           
  5831                           ; 1 bytes @ 0x94
  5832  000294                     	ds	1
  5833                           tblptru	equ	0xFF8
  5834                           tblptrh	equ	0xFF7
  5835                           tblptrl	equ	0xFF6
  5836                           tablat	equ	0xFF5
  5837                           postinc0	equ	0xFEE
  5838                           wreg	equ	0xFE8
  5839                           postdec1	equ	0xFE5
  5840                           fsr1l	equ	0xFE1
  5841                           
  5842                           	psect	cstackBANK1
  5843  000100                     __pcstackBANK1:
  5844                           	opt stack 0
  5845  000100                     EnterCommandMode@buf:
  5846                           	opt stack 0
  5847  000100                     StringAddEqual@temp:
  5848                           	opt stack 0
  5849                           
  5850                           ; 255 bytes @ 0x0
  5851  000100                     	ds	50
  5852  000132                     EnterCommandMode@count:
  5853                           	opt stack 0
  5854                           
  5855                           ; 1 bytes @ 0x32
  5856  000132                     	ds	1
  5857  000133                     BluetoothInitialSetup@BluetoothVersionLine1:
  5858                           	opt stack 0
  5859                           
  5860                           ; 30 bytes @ 0x33
  5861  000133                     	ds	30
  5862  000151                     BluetoothInitialSetup@BluetoothVersionLine2:
  5863                           	opt stack 0
  5864                           
  5865                           ; 30 bytes @ 0x51
  5866  000151                     	ds	30
  5867  00016F                     BluetoothInitialSetup@BroadcastTEMP:
  5868                           	opt stack 0
  5869                           
  5870                           ; 21 bytes @ 0x6F
  5871  00016F                     	ds	21
  5872  000184                     BluetoothInitialSetup@buf:
  5873                           	opt stack 0
  5874                           
  5875                           ; 50 bytes @ 0x84
  5876  000184                     	ds	50
  5877  0001B6                     BluetoothInitialSetup@first:
  5878                           	opt stack 0
  5879                           
  5880                           ; 1 bytes @ 0xB6
  5881  0001B6                     	ds	1
  5882  0001B7                     BluetoothInitialSetup@Default:
  5883                           	opt stack 0
  5884                           
  5885                           ; 1 bytes @ 0xB7
  5886  0001B7                     	ds	1
  5887  0001B8                     BluetoothInitialSetup@j:
  5888                           	opt stack 0
  5889                           
  5890                           ; 1 bytes @ 0xB8
  5891  0001B8                     	ds	1
  5892  0001B9                     BluetoothInitialSetup@ok:
  5893                           	opt stack 0
  5894                           
  5895                           ; 1 bytes @ 0xB9
  5896  0001B9                     	ds	1
  5897  0001BA                     BluetoothInitialSetup@i:
  5898                           	opt stack 0
  5899                           
  5900                           ; 1 bytes @ 0xBA
  5901  0001BA                     	ds	1
  5902  0001BB                     Init_System@buf:
  5903                           	opt stack 0
  5904                           
  5905                           ; 50 bytes @ 0xBB
  5906  0001BB                     	ds	68
  5907                           tblptru	equ	0xFF8
  5908                           tblptrh	equ	0xFF7
  5909                           tblptrl	equ	0xFF6
  5910                           tablat	equ	0xFF5
  5911                           postinc0	equ	0xFEE
  5912                           wreg	equ	0xFE8
  5913                           postdec1	equ	0xFE5
  5914                           fsr1l	equ	0xFE1
  5915                           
  5916                           	psect	cstackBANK0
  5917  000060                     __pcstackBANK0:
  5918                           	opt stack 0
  5919  000060                     ??_isdigit:
  5920  000060                     ??_Reverse_Byte:
  5921  000060                     ?_ReadEEPROM_1Byte:
  5922                           	opt stack 0
  5923  000060                     ?___awmod:
  5924                           	opt stack 0
  5925  000060                     ?___ftpack:
  5926                           	opt stack 0
  5927  000060                     ?___ftneg:
  5928                           	opt stack 0
  5929  000060                     ?__tdiv_to_l_:
  5930                           	opt stack 0
  5931  000060                     ?__div_to_l_:
  5932                           	opt stack 0
  5933  000060                     ?_Reverse_4Byte:
  5934                           	opt stack 0
  5935  000060                     ?___lmul:
  5936                           	opt stack 0
  5937  000060                     ?___lldiv:
  5938                           	opt stack 0
  5939  000060                     IsLetter@data:
  5940                           	opt stack 0
  5941  000060                     IsNumber@data:
  5942                           	opt stack 0
  5943  000060                     UARTchar@data:
  5944                           	opt stack 0
  5945  000060                     UARTchar_CONST@data:
  5946                           	opt stack 0
  5947  000060                     ReadUSART@data:
  5948                           	opt stack 0
  5949  000060                     cleanBuffer@data:
  5950                           	opt stack 0
  5951  000060                     cleanBuffer16bit@data:
  5952                           	opt stack 0
  5953  000060                     StringMatch@This:
  5954                           	opt stack 0
  5955  000060                     StringContains@This:
  5956                           	opt stack 0
  5957  000060                     lowercaseString@Input:
  5958                           	opt stack 0
  5959  000060                     lowercaseChar@Input:
  5960                           	opt stack 0
  5961  000060                     GetStringAfterComma@This:
  5962                           	opt stack 0
  5963  000060                     OpenUSART@spbrg:
  5964                           	opt stack 0
  5965  000060                     ReadEEPROM_1Byte@address:
  5966                           	opt stack 0
  5967  000060                     WriteEEPROM_1Byte@address:
  5968                           	opt stack 0
  5969  000060                     SendRF@Code:
  5970                           	opt stack 0
  5971  000060                     ___awmod@dividend:
  5972                           	opt stack 0
  5973  000060                     __div_to_l_@f1:
  5974                           	opt stack 0
  5975  000060                     ___ftpack@arg:
  5976                           	opt stack 0
  5977  000060                     __tdiv_to_l_@f1:
  5978                           	opt stack 0
  5979  000060                     ___ftge@ff1:
  5980                           	opt stack 0
  5981  000060                     ___ftneg@f1:
  5982                           	opt stack 0
  5983  000060                     delayUS@US:
  5984                           	opt stack 0
  5985  000060                     Reverse_4Byte@This:
  5986                           	opt stack 0
  5987  000060                     ___lmul@multiplier:
  5988                           	opt stack 0
  5989  000060                     ___lldiv@dividend:
  5990                           	opt stack 0
  5991                           
  5992                           ; 4 bytes @ 0x0
  5993  000060                     	ds	1
  5994  000061                     IsAlphaNumeric@data:
  5995                           	opt stack 0
  5996  000061                     UARTchar_CONST@temp:
  5997                           	opt stack 0
  5998  000061                     _isdigit$3735:
  5999                           	opt stack 0
  6000  000061                     UARTstring@data:
  6001                           	opt stack 0
  6002                           
  6003                           ; 2 bytes @ 0x1
  6004  000061                     	ds	1
  6005  000062                     Reverse_Byte@temp:
  6006                           	opt stack 0
  6007  000062                     GetStringAfterComma@CommaNumber:
  6008                           	opt stack 0
  6009  000062                     OpenUSART@config:
  6010                           	opt stack 0
  6011  000062                     ReadEEPROM_1Byte@GIEstatus:
  6012                           	opt stack 0
  6013  000062                     WriteEEPROM_1Byte@data:
  6014                           	opt stack 0
  6015  000062                     SendRF@Config:
  6016                           	opt stack 0
  6017  000062                     isdigit@c:
  6018                           	opt stack 0
  6019  000062                     IsAlphaNumericString@data:
  6020                           	opt stack 0
  6021  000062                     cleanBuffer@count:
  6022                           	opt stack 0
  6023  000062                     cleanBuffer16bit@count:
  6024                           	opt stack 0
  6025  000062                     StringMatch@That:
  6026                           	opt stack 0
  6027  000062                     StringContains@That:
  6028                           	opt stack 0
  6029  000062                     UARTstring_CONST@data:
  6030                           	opt stack 0
  6031  000062                     ___awmod@divisor:
  6032                           	opt stack 0
  6033                           
  6034                           ; 2 bytes @ 0x2
  6035  000062                     	ds	1
  6036  000063                     Reverse_Byte@This:
  6037                           	opt stack 0
  6038  000063                     ReadEEPROM_1Byte@PEIEstatus:
  6039                           	opt stack 0
  6040  000063                     WriteEEPROM_1Byte@GIEstatus:
  6041                           	opt stack 0
  6042  000063                     SendRF@size:
  6043                           	opt stack 0
  6044  000063                     ___ftpack@exp:
  6045                           	opt stack 0
  6046  000063                     StringMatchCaseInsensitive@This:
  6047                           	opt stack 0
  6048  000063                     StringContainsCaseInsensitive@This:
  6049                           	opt stack 0
  6050  000063                     GetStringAfterComma@result:
  6051                           	opt stack 0
  6052  000063                     __div_to_l_@f2:
  6053                           	opt stack 0
  6054  000063                     __tdiv_to_l_@f2:
  6055                           	opt stack 0
  6056  000063                     ___ftge@ff2:
  6057                           	opt stack 0
  6058                           
  6059                           ; 3 bytes @ 0x3
  6060  000063                     	ds	1
  6061  000064                     ??_cleanBuffer:
  6062  000064                     ??_delayUS:
  6063  000064                     ??_cleanBuffer16bit:
  6064  000064                     ??_StringMatch:
  6065  000064                     ??_StringContains:
  6066  000064                     ??_Reverse_4Byte:
  6067  000064                     ?_GetMemoryChar:
  6068                           	opt stack 0
  6069  000064                     ?_GetMemoryLong:
  6070                           	opt stack 0
  6071  000064                     ?_EncodeNEC:
  6072                           	opt stack 0
  6073  000064                     WriteEEPROM_1Byte@PEIEstatus:
  6074                           	opt stack 0
  6075  000064                     EncodeNEC@command:
  6076                           	opt stack 0
  6077  000064                     SendRF@RepeatAmount:
  6078                           	opt stack 0
  6079  000064                     ___awmod@counter:
  6080                           	opt stack 0
  6081  000064                     ___ftpack@sign:
  6082                           	opt stack 0
  6083  000064                     UARTstringCRLN@data:
  6084                           	opt stack 0
  6085  000064                     UARTstringCRLN_CONST@data:
  6086                           	opt stack 0
  6087  000064                     UARTcommandMenu@Command:
  6088                           	opt stack 0
  6089  000064                     DecodeNEC@Nec:
  6090                           	opt stack 0
  6091  000064                     ___lmul@multiplicand:
  6092                           	opt stack 0
  6093  000064                     ___lldiv@divisor:
  6094                           	opt stack 0
  6095                           
  6096                           ; 4 bytes @ 0x4
  6097  000064                     	ds	1
  6098  000065                     ??___ftpack:
  6099  000065                     ??_SendRF:
  6100  000065                     ___awmod@sign:
  6101                           	opt stack 0
  6102  000065                     StringMatchCaseInsensitive@That:
  6103                           	opt stack 0
  6104  000065                     StringContainsCaseInsensitive@That:
  6105                           	opt stack 0
  6106  000065                     delayUS@i:
  6107                           	opt stack 0
  6108                           
  6109                           ; 4 bytes @ 0x5
  6110  000065                     	ds	1
  6111  000066                     ??__tdiv_to_l_:
  6112  000066                     ??___ftge:
  6113  000066                     ?___awdiv:
  6114                           	opt stack 0
  6115  000066                     StringContains@MatchAmount:
  6116                           	opt stack 0
  6117  000066                     GetStringAfterComma@tempCommaNumber:
  6118                           	opt stack 0
  6119  000066                     UARTcommandMenu@Desc:
  6120                           	opt stack 0
  6121  000066                     ___awdiv@dividend:
  6122                           	opt stack 0
  6123  000066                     __div_to_l_@quot:
  6124                           	opt stack 0
  6125                           
  6126                           ; 4 bytes @ 0x6
  6127  000066                     	ds	1
  6128  000067                     ??_StringContainsCaseInsensitive:
  6129  000067                     cleanBuffer@i:
  6130                           	opt stack 0
  6131  000067                     cleanBuffer16bit@i:
  6132                           	opt stack 0
  6133  000067                     StringMatchCaseInsensitive@tempThis:
  6134                           	opt stack 0
  6135  000067                     StringContains@MatchCount:
  6136                           	opt stack 0
  6137  000067                     GetStringAfterComma@count:
  6138                           	opt stack 0
  6139  000067                     SendRF@i:
  6140                           	opt stack 0
  6141                           
  6142                           ; 1 bytes @ 0x7
  6143  000067                     	ds	1
  6144  000068                     ??_GetMemoryLong:
  6145  000068                     ??_UARTcommandMenu:
  6146  000068                     ??_EncodeNEC:
  6147  000068                     ?___altoft:
  6148                           	opt stack 0
  6149  000068                     ?___lltoft:
  6150                           	opt stack 0
  6151  000068                     ?___lwtoft:
  6152                           	opt stack 0
  6153  000068                     StringMatchCaseInsensitive@tempThat:
  6154                           	opt stack 0
  6155  000068                     StringContains@i:
  6156                           	opt stack 0
  6157  000068                     GetMemoryChar@AddressFirst:
  6158                           	opt stack 0
  6159  000068                     BufferCopy@from:
  6160                           	opt stack 0
  6161  000068                     DecodeNEC@address:
  6162                           	opt stack 0
  6163  000068                     SendRF_wait@Code:
  6164                           	opt stack 0
  6165  000068                     ___awdiv@divisor:
  6166                           	opt stack 0
  6167  000068                     ___lwtoft@c:
  6168                           	opt stack 0
  6169  000068                     ___lmul@product:
  6170                           	opt stack 0
  6171  000068                     ___altoft@c:
  6172                           	opt stack 0
  6173  000068                     ___lldiv@quotient:
  6174                           	opt stack 0
  6175  000068                     ___lltoft@c:
  6176                           	opt stack 0
  6177                           
  6178                           ; 4 bytes @ 0x8
  6179  000068                     	ds	1
  6180  000069                     StringContainsCaseInsensitive@MatchAmount:
  6181                           	opt stack 0
  6182  000069                     GetMemoryChar@H:
  6183                           	opt stack 0
  6184  000069                     ReadCodeButtons@temp:
  6185                           	opt stack 0
  6186  000069                     WaitForIRsignal@timeout:
  6187                           	opt stack 0
  6188  000069                     InternalADC_Read@ADCcounts:
  6189                           	opt stack 0
  6190  000069                     __tdiv_to_l_@quot:
  6191                           	opt stack 0
  6192                           
  6193                           ; 4 bytes @ 0x9
  6194  000069                     	ds	1
  6195  00006A                     StringContainsCaseInsensitive@MatchCount:
  6196                           	opt stack 0
  6197  00006A                     SetMemoryChar@AddressFirst:
  6198                           	opt stack 0
  6199  00006A                     SendRF_wait@Config:
  6200                           	opt stack 0
  6201  00006A                     ___awdiv@counter:
  6202                           	opt stack 0
  6203  00006A                     __div_to_l_@cntr:
  6204                           	opt stack 0
  6205  00006A                     BufferCopy@to:
  6206                           	opt stack 0
  6207  00006A                     DecodeNEC@command:
  6208                           	opt stack 0
  6209                           
  6210                           ; 2 bytes @ 0xA
  6211  00006A                     	ds	1
  6212  00006B                     ??_InternalADC_Read:
  6213  00006B                     ?___ftdiv:
  6214                           	opt stack 0
  6215  00006B                     StringContainsCaseInsensitive@tempThis:
  6216                           	opt stack 0
  6217  00006B                     SetMemoryChar@Test:
  6218                           	opt stack 0
  6219  00006B                     SendRF_wait@size:
  6220                           	opt stack 0
  6221  00006B                     ___awdiv@sign:
  6222                           	opt stack 0
  6223  00006B                     __div_to_l_@exp1:
  6224                           	opt stack 0
  6225  00006B                     ___ftdiv@f1:
  6226                           	opt stack 0
  6227                           
  6228                           ; 3 bytes @ 0xB
  6229  00006B                     	ds	1
  6230  00006C                     ??_DecodeNEC:
  6231  00006C                     ??___altoft:
  6232  00006C                     ??___lltoft:
  6233  00006C                     BufferCopy@count:
  6234                           	opt stack 0
  6235  00006C                     StringContainsCaseInsensitive@tempThat:
  6236                           	opt stack 0
  6237  00006C                     SetMemoryChar@Data:
  6238                           	opt stack 0
  6239  00006C                     SendRF_wait@amount:
  6240                           	opt stack 0
  6241  00006C                     ___lldiv@counter:
  6242                           	opt stack 0
  6243  00006C                     GetNumber@This:
  6244                           	opt stack 0
  6245  00006C                     GetNumberUnsigned@This:
  6246                           	opt stack 0
  6247  00006C                     ___awdiv@quotient:
  6248                           	opt stack 0
  6249  00006C                     Reverse_4Byte@temp:
  6250                           	opt stack 0
  6251                           
  6252                           ; 4 bytes @ 0xC
  6253  00006C                     	ds	1
  6254  00006D                     ?___llmod:
  6255                           	opt stack 0
  6256  00006D                     BufferCopy@shift:
  6257                           	opt stack 0
  6258  00006D                     StringContainsCaseInsensitive@i:
  6259                           	opt stack 0
  6260  00006D                     UARTcommandMenu@i:
  6261                           	opt stack 0
  6262  00006D                     InternalADC_Read@AnaChanSel:
  6263                           	opt stack 0
  6264  00006D                     SendRF_Channel@channel:
  6265                           	opt stack 0
  6266  00006D                     __tdiv_to_l_@cntr:
  6267                           	opt stack 0
  6268  00006D                     ___llmod@dividend:
  6269                           	opt stack 0
  6270                           
  6271                           ; 4 bytes @ 0xD
  6272  00006D                     	ds	1
  6273  00006E                     ?___wmul:
  6274                           	opt stack 0
  6275  00006E                     BufferCopy@i:
  6276                           	opt stack 0
  6277  00006E                     GetNumber@CommaNumber:
  6278                           	opt stack 0
  6279  00006E                     GetNumberUnsigned@CommaNumber:
  6280                           	opt stack 0
  6281  00006E                     UARTcommandMenu@place:
  6282                           	opt stack 0
  6283  00006E                     InternalADC_Read@channel:
  6284                           	opt stack 0
  6285  00006E                     __tdiv_to_l_@exp1:
  6286                           	opt stack 0
  6287  00006E                     ___wmul@multiplier:
  6288                           	opt stack 0
  6289  00006E                     ___ftdiv@f2:
  6290                           	opt stack 0
  6291                           
  6292                           ; 3 bytes @ 0xE
  6293  00006E                     	ds	1
  6294  00006F                     GetNumber@result:
  6295                           	opt stack 0
  6296  00006F                     GetNumberUnsigned@result:
  6297                           	opt stack 0
  6298  00006F                     StringAddEqual@Input:
  6299                           	opt stack 0
  6300                           
  6301                           ; 2 bytes @ 0xF
  6302  00006F                     	ds	1
  6303  000070                     DecodeNEC@temp2:
  6304                           	opt stack 0
  6305  000070                     ___altoft@exp:
  6306                           	opt stack 0
  6307  000070                     ___lltoft@exp:
  6308                           	opt stack 0
  6309  000070                     ___wmul@multiplicand:
  6310                           	opt stack 0
  6311  000070                     SendNEC_bytes@code:
  6312                           	opt stack 0
  6313                           
  6314                           ; 4 bytes @ 0x10
  6315  000070                     	ds	1
  6316  000071                     ??___ftdiv:
  6317  000071                     ??_GetNumber:
  6318  000071                     ??_GetNumberUnsigned:
  6319  000071                     ??_StringAddEqual:
  6320  000071                     DecodeNEC@temp3:
  6321                           	opt stack 0
  6322  000071                     ___altoft@sign:
  6323                           	opt stack 0
  6324  000071                     ___llmod@divisor:
  6325                           	opt stack 0
  6326                           
  6327                           ; 4 bytes @ 0x11
  6328  000071                     	ds	1
  6329  000072                     DecodeNEC@temp1:
  6330                           	opt stack 0
  6331  000072                     ___wmul@product:
  6332                           	opt stack 0
  6333                           
  6334                           ; 2 bytes @ 0x12
  6335  000072                     	ds	1
  6336  000073                     StringAddEqual@NullPosition:
  6337                           	opt stack 0
  6338                           
  6339                           ; 1 bytes @ 0x13
  6340  000073                     	ds	1
  6341  000074                     StringAddEqual@firstnumber:
  6342                           	opt stack 0
  6343  000074                     SendNEC_bytes@RepeatAmount:
  6344                           	opt stack 0
  6345  000074                     ___ftdiv@cntr:
  6346                           	opt stack 0
  6347                           
  6348                           ; 1 bytes @ 0x14
  6349  000074                     	ds	1
  6350  000075                     StringAddEqual@i:
  6351                           	opt stack 0
  6352  000075                     ___llmod@counter:
  6353                           	opt stack 0
  6354  000075                     ___ftdiv@f3:
  6355                           	opt stack 0
  6356  000075                     SendNEC_wait@code:
  6357                           	opt stack 0
  6358                           
  6359                           ; 4 bytes @ 0x15
  6360  000075                     	ds	1
  6361  000076                     GetNumber@tempCommaNumber:
  6362                           	opt stack 0
  6363  000076                     GetNumberUnsigned@tempCommaNumber:
  6364                           	opt stack 0
  6365  000076                     StringAddEqual@j:
  6366                           	opt stack 0
  6367                           
  6368                           ; 1 bytes @ 0x16
  6369  000076                     	ds	1
  6370  000077                     GetNumber@negative:
  6371                           	opt stack 0
  6372  000077                     GetNumberUnsigned@count:
  6373                           	opt stack 0
  6374                           
  6375                           ; 1 bytes @ 0x17
  6376  000077                     	ds	1
  6377  000078                     GetNumber@count:
  6378                           	opt stack 0
  6379  000078                     GetNumberUnsigned@Hex:
  6380                           	opt stack 0
  6381  000078                     ___ftdiv@exp:
  6382                           	opt stack 0
  6383                           
  6384                           ; 1 bytes @ 0x18
  6385  000078                     	ds	1
  6386  000079                     GetNumber@Hex:
  6387                           	opt stack 0
  6388  000079                     GetNumberUnsigned@i:
  6389                           	opt stack 0
  6390  000079                     SendNEC_wait@RepeatAmount:
  6391                           	opt stack 0
  6392  000079                     ___ftdiv@sign:
  6393                           	opt stack 0
  6394                           
  6395                           ; 1 bytes @ 0x19
  6396  000079                     	ds	1
  6397  00007A                     ?___ftmul:
  6398                           	opt stack 0
  6399  00007A                     GetNumber@i:
  6400                           	opt stack 0
  6401  00007A                     SendNEC_wait@toggle:
  6402                           	opt stack 0
  6403  00007A                     ___ftmul@f1:
  6404                           	opt stack 0
  6405  00007A                     GetNumberUnsigned@temp:
  6406                           	opt stack 0
  6407                           
  6408                           ; 4 bytes @ 0x1A
  6409  00007A                     	ds	1
  6410  00007B                     GetNumber@tempThis:
  6411                           	opt stack 0
  6412                           
  6413                           ; 1 bytes @ 0x1B
  6414  00007B                     	ds	1
  6415  00007C                     GetNumber@temp:
  6416                           	opt stack 0
  6417  00007C                     GetMemoryLong@temp:
  6418                           	opt stack 0
  6419  00007C                     EncodeNEC@temp1:
  6420                           	opt stack 0
  6421                           
  6422                           ; 4 bytes @ 0x1C
  6423  00007C                     	ds	1
  6424  00007D                     ___ftmul@f2:
  6425                           	opt stack 0
  6426                           
  6427                           ; 3 bytes @ 0x1D
  6428  00007D                     	ds	1
  6429  00007E                     GetNumberUnsigned@tempThis:
  6430                           	opt stack 0
  6431                           
  6432                           ; 1 bytes @ 0x1E
  6433  00007E                     	ds	2
  6434  000080                     ??___ftmul:
  6435  000080                     GetMemoryLong@H:
  6436                           	opt stack 0
  6437  000080                     EncodeNEC@temp2:
  6438                           	opt stack 0
  6439                           
  6440                           ; 4 bytes @ 0x20
  6441  000080                     	ds	1
  6442  000081                     GetMemoryLong@MH:
  6443                           	opt stack 0
  6444                           
  6445                           ; 1 bytes @ 0x21
  6446  000081                     	ds	1
  6447  000082                     GetMemoryLong@ML:
  6448                           	opt stack 0
  6449                           
  6450                           ; 1 bytes @ 0x22
  6451  000082                     	ds	1
  6452  000083                     GetMemoryLong@L:
  6453                           	opt stack 0
  6454  000083                     ___ftmul@exp:
  6455                           	opt stack 0
  6456                           
  6457                           ; 1 bytes @ 0x23
  6458  000083                     	ds	1
  6459  000084                     GetMemoryLong@AddressFirst:
  6460                           	opt stack 0
  6461  000084                     ___ftmul@f3_as_product:
  6462                           	opt stack 0
  6463  000084                     EncodeNEC@temp3:
  6464                           	opt stack 0
  6465                           
  6466                           ; 4 bytes @ 0x24
  6467  000084                     	ds	1
  6468  000085                     GetEEPROM1@Temp:
  6469                           	opt stack 0
  6470  000085                     GetEEPROM2@Temp:
  6471                           	opt stack 0
  6472  000085                     SetMemoryLong@Data:
  6473                           	opt stack 0
  6474                           
  6475                           ; 4 bytes @ 0x25
  6476  000085                     	ds	2
  6477  000087                     ??_GetEEPROM1:
  6478  000087                     ??_GetEEPROM2:
  6479  000087                     ___ftmul@cntr:
  6480                           	opt stack 0
  6481                           
  6482                           ; 1 bytes @ 0x27
  6483  000087                     	ds	1
  6484  000088                     ___ftmul@sign:
  6485                           	opt stack 0
  6486  000088                     EncodeNEC@temp4:
  6487                           	opt stack 0
  6488                           
  6489                           ; 4 bytes @ 0x28
  6490  000088                     	ds	1
  6491  000089                     ?_ReadVoltage:
  6492                           	opt stack 0
  6493  000089                     ?_fround:
  6494                           	opt stack 0
  6495  000089                     ?_scale:
  6496                           	opt stack 0
  6497  000089                     GetEEPROM1@Arrayspot:
  6498                           	opt stack 0
  6499  000089                     GetEEPROM2@Arrayspot:
  6500                           	opt stack 0
  6501  000089                     SetMemoryLong@AddressFirst:
  6502                           	opt stack 0
  6503                           
  6504                           ; 1 bytes @ 0x29
  6505  000089                     	ds	1
  6506  00008A                     ??_SetMemoryLong:
  6507  00008A                     GetEEPROM1@i:
  6508                           	opt stack 0
  6509  00008A                     GetEEPROM2@i:
  6510                           	opt stack 0
  6511                           
  6512                           ; 1 bytes @ 0x2A
  6513  00008A                     	ds	1
  6514  00008B                     GetEEPROM1@j:
  6515                           	opt stack 0
  6516  00008B                     GetEEPROM2@j:
  6517                           	opt stack 0
  6518                           
  6519                           ; 1 bytes @ 0x2B
  6520  00008B                     	ds	1
  6521  00008C                     GetEEPROM2@k:
  6522                           	opt stack 0
  6523  00008C                     EncodeNEC@address:
  6524                           	opt stack 0
  6525  00008C                     ReadVoltage@voltage:
  6526                           	opt stack 0
  6527  00008C                     _fround$4079:
  6528                           	opt stack 0
  6529  00008C                     _scale$4080:
  6530                           	opt stack 0
  6531                           
  6532                           ; 3 bytes @ 0x2C
  6533  00008C                     	ds	1
  6534  00008D                     ??_SyncEEPROMToGlobal:
  6535                           
  6536                           ; 0 bytes @ 0x2D
  6537  00008D                     	ds	1
  6538  00008E                     SetMemoryLong@Test:
  6539                           	opt stack 0
  6540                           
  6541                           ; 4 bytes @ 0x2E
  6542  00008E                     	ds	1
  6543  00008F                     scale@scl:
  6544                           	opt stack 0
  6545  00008F                     ReadVoltage@temp:
  6546                           	opt stack 0
  6547  00008F                     _fround$4078:
  6548                           	opt stack 0
  6549                           
  6550                           ; 3 bytes @ 0x2F
  6551  00008F                     	ds	2
  6552  000091                     SyncEEPROMToGlobal@Temp2:
  6553                           	opt stack 0
  6554                           
  6555                           ; 64 bytes @ 0x31
  6556  000091                     	ds	1
  6557  000092                     SetMemoryLong@H:
  6558                           	opt stack 0
  6559  000092                     fround@prec:
  6560                           	opt stack 0
  6561                           
  6562                           ; 1 bytes @ 0x32
  6563  000092                     	ds	1
  6564  000093                     ?___ftadd:
  6565                           	opt stack 0
  6566  000093                     SetMemoryLong@MH:
  6567                           	opt stack 0
  6568  000093                     ___ftadd@f1:
  6569                           	opt stack 0
  6570                           
  6571                           ; 3 bytes @ 0x33
  6572  000093                     	ds	1
  6573  000094                     SetMemoryLong@ML:
  6574                           	opt stack 0
  6575                           
  6576                           ; 1 bytes @ 0x34
  6577  000094                     	ds	1
  6578  000095                     SetMemoryLong@L:
  6579                           	opt stack 0
  6580                           
  6581                           ; 1 bytes @ 0x35
  6582  000095                     	ds	1
  6583  000096                     ?_SetEEPROM2:
  6584                           	opt stack 0
  6585  000096                     ?_SetEEPROM1:
  6586                           	opt stack 0
  6587  000096                     ___ftadd@f2:
  6588                           	opt stack 0
  6589  000096                     SetEEPROM1@Temp:
  6590                           	opt stack 0
  6591  000096                     SetEEPROM2@Temp:
  6592                           	opt stack 0
  6593                           
  6594                           ; 64 bytes @ 0x36
  6595  000096                     	ds	3
  6596  000099                     ??___ftadd:
  6597                           
  6598                           ; 0 bytes @ 0x39
  6599  000099                     	ds	3
  6600  00009C                     ___ftadd@sign:
  6601                           	opt stack 0
  6602                           
  6603                           ; 1 bytes @ 0x3C
  6604  00009C                     	ds	1
  6605  00009D                     ___ftadd@exp2:
  6606                           	opt stack 0
  6607                           
  6608                           ; 1 bytes @ 0x3D
  6609  00009D                     	ds	1
  6610  00009E                     ___ftadd@exp1:
  6611                           	opt stack 0
  6612                           
  6613                           ; 1 bytes @ 0x3E
  6614  00009E                     	ds	1
  6615  00009F                     ?___ftsub:
  6616                           	opt stack 0
  6617  00009F                     ?___fttol:
  6618                           	opt stack 0
  6619  00009F                     ___ftsub@f1:
  6620                           	opt stack 0
  6621  00009F                     ___fttol@f1:
  6622                           	opt stack 0
  6623                           
  6624                           ; 3 bytes @ 0x3F
  6625  00009F                     	ds	3
  6626  0000A2                     ___ftsub@f2:
  6627                           	opt stack 0
  6628                           
  6629                           ; 3 bytes @ 0x42
  6630  0000A2                     	ds	1
  6631  0000A3                     ??___fttol:
  6632                           
  6633                           ; 0 bytes @ 0x43
  6634  0000A3                     	ds	2
  6635  0000A5                     
  6636                           ; 0 bytes @ 0x45
  6637  0000A5                     	ds	3
  6638  0000A8                     ___fttol@sign1:
  6639                           	opt stack 0
  6640                           
  6641                           ; 1 bytes @ 0x48
  6642  0000A8                     	ds	1
  6643  0000A9                     ___fttol@lval:
  6644                           	opt stack 0
  6645                           
  6646                           ; 4 bytes @ 0x49
  6647  0000A9                     	ds	4
  6648  0000AD                     ___fttol@exp1:
  6649                           	opt stack 0
  6650                           
  6651                           ; 1 bytes @ 0x4D
  6652  0000AD                     	ds	1
  6653  0000AE                     ?_sprintf:
  6654                           	opt stack 0
  6655  0000AE                     ?_Round:
  6656                           	opt stack 0
  6657  0000AE                     sprintf@sp:
  6658                           	opt stack 0
  6659  0000AE                     Round@input:
  6660                           	opt stack 0
  6661                           
  6662                           ; 3 bytes @ 0x4E
  6663  0000AE                     	ds	2
  6664  0000B0                     sprintf@f:
  6665                           	opt stack 0
  6666                           
  6667                           ; 2 bytes @ 0x50
  6668  0000B0                     	ds	1
  6669  0000B1                     Round@temp:
  6670                           	opt stack 0
  6671                           
  6672                           ; 4 bytes @ 0x51
  6673  0000B1                     	ds	3
  6674  0000B4                     SetEEPROM1@burn:
  6675                           	opt stack 0
  6676                           
  6677                           ; 4 bytes @ 0x54
  6678  0000B4                     	ds	1
  6679  0000B5                     InitUART@Baud:
  6680                           	opt stack 0
  6681                           
  6682                           ; 4 bytes @ 0x55
  6683  0000B5                     	ds	3
  6684  0000B8                     ??_SetEEPROM1:
  6685                           
  6686                           ; 0 bytes @ 0x58
  6687  0000B8                     	ds	1
  6688  0000B9                     ??_InitUART:
  6689                           
  6690                           ; 0 bytes @ 0x59
  6691  0000B9                     	ds	1
  6692  0000BA                     SetEEPROM1@temp:
  6693                           	opt stack 0
  6694                           
  6695                           ; 1 bytes @ 0x5A
  6696  0000BA                     	ds	1
  6697  0000BB                     SetEEPROM1@Arrayspot:
  6698                           	opt stack 0
  6699                           
  6700                           ; 1 bytes @ 0x5B
  6701  0000BB                     	ds	1
  6702  0000BC                     ??_sprintf:
  6703  0000BC                     SetEEPROM1@fail:
  6704                           	opt stack 0
  6705                           
  6706                           ; 4 bytes @ 0x5C
  6707  0000BC                     	ds	1
  6708  0000BD                     _InitUART$4077:
  6709                           	opt stack 0
  6710                           
  6711                           ; 3 bytes @ 0x5D
  6712  0000BD                     	ds	3
  6713  0000C0                     SetEEPROM1@i:
  6714                           	opt stack 0
  6715  0000C0                     InitUART@spbrg:
  6716                           	opt stack 0
  6717                           
  6718                           ; 2 bytes @ 0x60
  6719  0000C0                     	ds	1
  6720  0000C1                     SetEEPROM1@j:
  6721                           	opt stack 0
  6722                           
  6723                           ; 1 bytes @ 0x61
  6724  0000C1                     	ds	1
  6725  0000C2                     InitUART@config:
  6726                           	opt stack 0
  6727  0000C2                     _sprintf$4081:
  6728                           	opt stack 0
  6729                           
  6730                           ; 3 bytes @ 0x62
  6731  0000C2                     	ds	1
  6732  0000C3                     InitUART@temp:
  6733                           	opt stack 0
  6734                           
  6735                           ; 4 bytes @ 0x63
  6736  0000C3                     	ds	2
  6737  0000C5                     sprintf@idx:
  6738                           	opt stack 0
  6739                           
  6740                           ; 1 bytes @ 0x65
  6741  0000C5                     	ds	1
  6742  0000C6                     sprintf@cp:
  6743                           	opt stack 0
  6744                           
  6745                           ; 2 bytes @ 0x66
  6746  0000C6                     	ds	2
  6747  0000C8                     sprintf@len:
  6748                           	opt stack 0
  6749                           
  6750                           ; 2 bytes @ 0x68
  6751  0000C8                     	ds	2
  6752  0000CA                     sprintf@ap:
  6753                           	opt stack 0
  6754                           
  6755                           ; 2 bytes @ 0x6A
  6756  0000CA                     	ds	2
  6757  0000CC                     sprintf@prec:
  6758                           	opt stack 0
  6759                           
  6760                           ; 2 bytes @ 0x6C
  6761  0000CC                     	ds	2
  6762  0000CE                     sprintf@tmpval:
  6763                           	opt stack 0
  6764                           
  6765                           ; 4 bytes @ 0x6E
  6766  0000CE                     	ds	3
  6767  0000D1                     SyncEEPROMToGlobal@k:
  6768                           	opt stack 0
  6769                           
  6770                           ; 1 bytes @ 0x71
  6771  0000D1                     	ds	1
  6772  0000D2                     sprintf@exp:
  6773                           	opt stack 0
  6774  0000D2                     SyncEEPROMToGlobal@Temp1:
  6775                           	opt stack 0
  6776                           
  6777                           ; 30 bytes @ 0x72
  6778  0000D2                     	ds	2
  6779  0000D4                     sprintf@val:
  6780                           	opt stack 0
  6781                           
  6782                           ; 4 bytes @ 0x74
  6783  0000D4                     	ds	2
  6784  0000D6                     SetEEPROM2@burn:
  6785                           	opt stack 0
  6786                           
  6787                           ; 4 bytes @ 0x76
  6788  0000D6                     	ds	2
  6789  0000D8                     sprintf@fval:
  6790                           	opt stack 0
  6791                           
  6792                           ; 3 bytes @ 0x78
  6793  0000D8                     	ds	2
  6794  0000DA                     ??_SetEEPROM2:
  6795                           
  6796                           ; 0 bytes @ 0x7A
  6797  0000DA                     	ds	1
  6798  0000DB                     sprintf@width:
  6799                           	opt stack 0
  6800                           
  6801                           ; 2 bytes @ 0x7B
  6802  0000DB                     	ds	1
  6803  0000DC                     SetEEPROM2@temp:
  6804                           	opt stack 0
  6805                           
  6806                           ; 1 bytes @ 0x7C
  6807  0000DC                     	ds	1
  6808  0000DD                     sprintf@flag:
  6809                           	opt stack 0
  6810  0000DD                     SetEEPROM2@fail:
  6811                           	opt stack 0
  6812                           
  6813                           ; 4 bytes @ 0x7D
  6814  0000DD                     	ds	2
  6815  0000DF                     sprintf@c:
  6816                           	opt stack 0
  6817                           
  6818                           ; 1 bytes @ 0x7F
  6819  0000DF                     	ds	1
  6820  0000E0                     
  6821                           ; 0 bytes @ 0x80
  6822  0000E0                     	ds	1
  6823  0000E1                     SetEEPROM2@Arrayspot:
  6824                           	opt stack 0
  6825                           
  6826                           ; 1 bytes @ 0x81
  6827  0000E1                     	ds	1
  6828  0000E2                     SetEEPROM2@i:
  6829                           	opt stack 0
  6830                           
  6831                           ; 1 bytes @ 0x82
  6832  0000E2                     	ds	1
  6833  0000E3                     SetEEPROM2@j:
  6834                           	opt stack 0
  6835                           
  6836                           ; 1 bytes @ 0x83
  6837  0000E3                     	ds	1
  6838  0000E4                     SetEEPROM2@k:
  6839                           	opt stack 0
  6840                           
  6841                           ; 1 bytes @ 0x84
  6842  0000E4                     	ds	1
  6843  0000E5                     SyncGlobalToEEPROM@ok:
  6844                           	opt stack 0
  6845                           
  6846                           ; 1 bytes @ 0x85
  6847  0000E5                     	ds	1
  6848  0000E6                     ??_SetEEPROMdefault:
  6849  0000E6                     UseIRCode@Code:
  6850                           	opt stack 0
  6851                           
  6852                           ; 2 bytes @ 0x86
  6853  0000E6                     	ds	2
  6854  0000E8                     SetEEPROMdefault@k:
  6855                           	opt stack 0
  6856  0000E8                     UseIRCode@NEC:
  6857                           	opt stack 0
  6858                           
  6859                           ; 4 bytes @ 0x88
  6860  0000E8                     	ds	1
  6861  0000E9                     SetEEPROMdefault@i:
  6862                           	opt stack 0
  6863                           
  6864                           ; 1 bytes @ 0x89
  6865  0000E9                     	ds	1
  6866  0000EA                     SetEEPROMdefault@j:
  6867                           	opt stack 0
  6868                           
  6869                           ; 1 bytes @ 0x8A
  6870  0000EA                     	ds	2
  6871  0000EC                     ??_UseIRCode:
  6872                           
  6873                           ; 0 bytes @ 0x8C
  6874  0000EC                     	ds	3
  6875  0000EF                     UseIRCode@found:
  6876                           	opt stack 0
  6877                           
  6878                           ; 1 bytes @ 0x8F
  6879  0000EF                     	ds	1
  6880  0000F0                     SyncEEPROMToGlobal@i:
  6881                           	opt stack 0
  6882  0000F0                     UseIRCode@j:
  6883                           	opt stack 0
  6884                           
  6885                           ; 1 bytes @ 0x90
  6886  0000F0                     	ds	1
  6887  0000F1                     SyncEEPROMToGlobal@j:
  6888                           	opt stack 0
  6889  0000F1                     UseIRCode@i:
  6890                           	opt stack 0
  6891                           
  6892                           ; 1 bytes @ 0x91
  6893  0000F1                     	ds	1
  6894  0000F2                     UseBluetooth@String:
  6895                           	opt stack 0
  6896                           
  6897                           ; 2 bytes @ 0x92
  6898  0000F2                     	ds	2
  6899  0000F4                     UseBluetooth@StringPos:
  6900                           	opt stack 0
  6901                           
  6902                           ; 1 bytes @ 0x94
  6903  0000F4                     	ds	1
  6904  0000F5                     tblptru	equ	0xFF8
  6905                           tblptrh	equ	0xFF7
  6906                           tblptrl	equ	0xFF6
  6907                           tablat	equ	0xFF5
  6908                           postinc0	equ	0xFEE
  6909                           wreg	equ	0xFE8
  6910                           postdec1	equ	0xFE5
  6911                           fsr1l	equ	0xFE1
  6912                           
  6913                           ; 0 bytes @ 0x95
  6914                           
  6915                           	psect	cstackCOMRAM
  6916  000001                     __pcstackCOMRAM:
  6917                           	opt stack 0
  6918  000001                     IsCharacter@data:
  6919                           	opt stack 0
  6920  000001                     i1UARTchar@data:
  6921                           	opt stack 0
  6922  000001                     i1UARTchar_CONST@data:
  6923                           	opt stack 0
  6924  000001                     i1ReadUSART@data:
  6925                           	opt stack 0
  6926                           
  6927                           ; 1 bytes @ 0x0
  6928  000001                     	ds	1
  6929  000002                     EraseScreen@characters:
  6930                           	opt stack 0
  6931  000002                     i1UARTchar_CONST@temp:
  6932                           	opt stack 0
  6933  000002                     i1UARTstring@data:
  6934                           	opt stack 0
  6935                           
  6936                           ; 2 bytes @ 0x1
  6937  000002                     	ds	1
  6938  000003                     EraseScreen@i:
  6939                           	opt stack 0
  6940  000003                     i1UARTstring_CONST@data:
  6941                           	opt stack 0
  6942                           
  6943                           ; 2 bytes @ 0x2
  6944  000003                     	ds	1
  6945  000004                     
  6946                           ; 0 bytes @ 0x3
  6947  000004                     	ds	1
  6948  000005                     ??_low_isr:
  6949  000005                     
  6950                           ; 0 bytes @ 0x4
  6951  000005                     	ds	17
  6952  000016                     low_isr@data:
  6953                           	opt stack 0
  6954                           
  6955                           ; 1 bytes @ 0x15
  6956  000016                     	ds	1
  6957  000017                     SetTimer0@temp:
  6958                           	opt stack 0
  6959  000017                     IRrawToNEC@Raw:
  6960                           	opt stack 0
  6961  000017                     i2cleanBuffer16bit@data:
  6962                           	opt stack 0
  6963                           
  6964                           ; 2 bytes @ 0x16
  6965  000017                     	ds	2
  6966  000019                     IRrawToNEC@NEC:
  6967                           	opt stack 0
  6968  000019                     i2cleanBuffer16bit@count:
  6969                           	opt stack 0
  6970                           
  6971                           ; 2 bytes @ 0x18
  6972  000019                     	ds	2
  6973  00001B                     ??i2_cleanBuffer16bit:
  6974  00001B                     IRrawToNEC@Invert:
  6975                           	opt stack 0
  6976                           
  6977                           ; 1 bytes @ 0x1A
  6978  00001B                     	ds	1
  6979  00001C                     ??_IRrawToNEC:
  6980                           
  6981                           ; 0 bytes @ 0x1B
  6982  00001C                     	ds	2
  6983  00001E                     i2cleanBuffer16bit@i:
  6984                           	opt stack 0
  6985  00001E                     IRrawToNEC@NECtemp:
  6986                           	opt stack 0
  6987                           
  6988                           ; 4 bytes @ 0x1D
  6989  00001E                     	ds	4
  6990  000022                     IRrawToNEC@first:
  6991                           	opt stack 0
  6992                           
  6993                           ; 1 bytes @ 0x21
  6994  000022                     	ds	1
  6995  000023                     IRrawToNEC@i:
  6996                           	opt stack 0
  6997                           
  6998                           ; 1 bytes @ 0x22
  6999  000023                     	ds	1
  7000  000024                     IRrawToNEC@StartBit:
  7001                           	opt stack 0
  7002                           
  7003                           ; 1 bytes @ 0x23
  7004  000024                     	ds	1
  7005  000025                     ??_high_isr:
  7006                           
  7007                           ; 0 bytes @ 0x24
  7008  000025                     	ds	18
  7009  000037                     high_isr@IRpin:
  7010                           	opt stack 0
  7011                           
  7012                           ; 1 bytes @ 0x36
  7013  000037                     	ds	1
  7014  000038                     high_isr@Time0:
  7015                           	opt stack 0
  7016                           
  7017                           ; 2 bytes @ 0x37
  7018  000038                     	ds	2
  7019                           tblptru	equ	0xFF8
  7020                           tblptrh	equ	0xFF7
  7021                           tblptrl	equ	0xFF6
  7022                           tablat	equ	0xFF5
  7023                           postinc0	equ	0xFEE
  7024                           wreg	equ	0xFE8
  7025                           postdec1	equ	0xFE5
  7026                           fsr1l	equ	0xFE1
  7027                           
  7028 ;;
  7029 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7030 ;;
  7031 ;; *************** function _main *****************
  7032 ;; Defined at:
  7033 ;;		line 92 in file "main.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;		None
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;  BluetoothStr  100  100[BANK3 ] unsigned char [100]
  7038 ;;  buf           100    0[BANK3 ] unsigned char [100]
  7039 ;;  BroadcastTEM   21  200[BANK3 ] unsigned char [21]
  7040 ;;  VoltageStatu    1  228[BANK3 ] unsigned char 
  7041 ;;  i               1  227[BANK3 ] unsigned char 
  7042 ;;  Connected       1  226[BANK3 ] unsigned char 
  7043 ;;  VoltageStatu    1  225[BANK3 ] unsigned char 
  7044 ;;  ConnectedOLD    1  224[BANK3 ] unsigned char 
  7045 ;;  BluetoothStr    1  223[BANK3 ] unsigned char 
  7046 ;;  Bluetoothtas    1  222[BANK3 ] unsigned char 
  7047 ;;  IRtask          1  221[BANK3 ] unsigned char 
  7048 ;; Return value:  Size  Location     Type
  7049 ;;		None               void
  7050 ;; Registers used:
  7051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7058 ;;      Locals:         0       0       0       0     229       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7060 ;;      Totals:         0       0       0       0     229       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7061 ;;Total ram usage:      229 bytes
  7062 ;; Hardware stack levels required when called:   13
  7063 ;; This function calls:
  7064 ;;		_BlueConnected
  7065 ;;		_BufferCopy
  7066 ;;		_ClearUSART
  7067 ;;		_ConfigureOscillator
  7068 ;;		_InitApp
  7069 ;;		_Init_System
  7070 ;;		_LEDTimerON
  7071 ;;		_ReadIRpin
  7072 ;;		_ReadVoltage
  7073 ;;		_UARTchar
  7074 ;;		_UARTchar_CONST
  7075 ;;		_UARTstringCRLN
  7076 ;;		_UARTstringCRLN_CONST
  7077 ;;		_UARTstring_CONST
  7078 ;;		_UseBluetooth
  7079 ;;		_UseIRCode
  7080 ;;		___ftadd
  7081 ;;		___ftge
  7082 ;;		___ftsub
  7083 ;;		_cleanBuffer
  7084 ;;		_delayUS
  7085 ;;		_sprintf
  7086 ;; This function is called by:
  7087 ;;		Startup code after reset
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091                           	psect	text0
  7092  004C2C                     __ptext0:
  7093                           	opt stack 0
  7094  004C2C                     _main:
  7095                           	opt stack 18
  7096                           
  7097                           ;main.c: 94: unsigned char i=0;
  7098                           
  7099                           ;incstack = 0
  7100  004C2C  0E00               	movlw	0
  7101  004C2E  0103               	movlb	3	; () banked
  7102  004C30  6FE3               	movwf	main@i& (0+255),b
  7103                           
  7104                           ;main.c: 95: unsigned char IRtask = 0;
  7105  004C32  0E00               	movlw	0
  7106  004C34  0103               	movlb	3	; () banked
  7107  004C36  6FDD               	movwf	main@IRtask& (0+255),b
  7108                           
  7109                           ;main.c: 96: unsigned char Bluetoothtask = 0;
  7110  004C38  0E00               	movlw	0
  7111  004C3A  0103               	movlb	3	; () banked
  7112  004C3C  6FDE               	movwf	main@Bluetoothtask& (0+255),b
  7113                           
  7114                           ;main.c: 97: unsigned char VoltageStatus = 1;
  7115  004C3E  0E01               	movlw	1
  7116  004C40  0103               	movlb	3	; () banked
  7117  004C42  6FE4               	movwf	main@VoltageStatus& (0+255),b
  7118                           
  7119                           ;main.c: 98: unsigned char VoltageStatusOLD;
  7120                           ;main.c: 99: unsigned char BluetoothString[100];
  7121                           ;main.c: 100: unsigned char BluetoothStringPos = 0;
  7122  004C44  0E00               	movlw	0
  7123  004C46  0103               	movlb	3	; () banked
  7124  004C48  6FDF               	movwf	main@BluetoothStringPos& (0+255),b
  7125                           
  7126                           ; BSR set to: 3
  7127                           ;main.c: 101: unsigned char Connected, ConnectedOLD;
  7128                           ;main.c: 102: unsigned char BroadcastTEMP[21];
  7129                           ;main.c: 103: unsigned char buf[100];
  7130                           ;main.c: 105: cleanBuffer(buf, 100);
  7131  004C4A  0E00               	movlw	low main@buf
  7132  004C4C  0100               	movlb	0	; () banked
  7133  004C4E  6F60               	movwf	cleanBuffer@data& (0+255),b
  7134  004C50  0E03               	movlw	high main@buf
  7135  004C52  0100               	movlb	0	; () banked
  7136  004C54  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  7137  004C56  0E00               	movlw	0
  7138  004C58  0100               	movlb	0	; () banked
  7139  004C5A  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
  7140  004C5C  0E64               	movlw	100
  7141  004C5E  6F62               	movwf	cleanBuffer@count& (0+255),b
  7142  004C60  ECE6  F050         	call	_cleanBuffer	;wreg free
  7143                           
  7144                           ;main.c: 106: cleanBuffer(BluetoothString, 100);
  7145  004C64  0E64               	movlw	low main@BluetoothString
  7146  004C66  0100               	movlb	0	; () banked
  7147  004C68  6F60               	movwf	cleanBuffer@data& (0+255),b
  7148  004C6A  0E03               	movlw	high main@BluetoothString
  7149  004C6C  0100               	movlb	0	; () banked
  7150  004C6E  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  7151  004C70  0E00               	movlw	0
  7152  004C72  0100               	movlb	0	; () banked
  7153  004C74  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
  7154  004C76  0E64               	movlw	100
  7155  004C78  6F62               	movwf	cleanBuffer@count& (0+255),b
  7156  004C7A  ECE6  F050         	call	_cleanBuffer	;wreg free
  7157                           
  7158                           ;main.c: 107: cleanBuffer(BroadcastTEMP, 21);
  7159  004C7E  0EC8               	movlw	low main@BroadcastTEMP
  7160  004C80  0100               	movlb	0	; () banked
  7161  004C82  6F60               	movwf	cleanBuffer@data& (0+255),b
  7162  004C84  0E03               	movlw	high main@BroadcastTEMP
  7163  004C86  0100               	movlb	0	; () banked
  7164  004C88  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  7165  004C8A  0E00               	movlw	0
  7166  004C8C  0100               	movlb	0	; () banked
  7167  004C8E  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
  7168  004C90  0E15               	movlw	21
  7169  004C92  6F62               	movwf	cleanBuffer@count& (0+255),b
  7170  004C94  ECE6  F050         	call	_cleanBuffer	;wreg free
  7171                           
  7172                           ;main.c: 109: ConfigureOscillator();
  7173  004C98  EC43  F055         	call	_ConfigureOscillator	;wreg free
  7174                           
  7175                           ;main.c: 110: InitApp();
  7176  004C9C  ECE0  F051         	call	_InitApp	;wreg free
  7177                           
  7178                           ;main.c: 111: Init_System();
  7179  004CA0  ECE1  F03D         	call	_Init_System	;wreg free
  7180                           
  7181                           ;main.c: 113: BatteryVoltage = ReadVoltage();
  7182  004CA4  EC0D  F04B         	call	_ReadVoltage	;wreg free
  7183  004CA8  C089  F3E5         	movff	?_ReadVoltage,_BatteryVoltage
  7184  004CAC  C08A  F3E6         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  7185  004CB0  C08B  F3E7         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  7186                           
  7187                           ;main.c: 114: if(BatteryVoltage < 6.3 )
  7188  004CB4  C3E5  F060         	movff	_BatteryVoltage,___ftge@ff1
  7189  004CB8  C3E6  F061         	movff	_BatteryVoltage+1,___ftge@ff1+1
  7190  004CBC  C3E7  F062         	movff	_BatteryVoltage+2,___ftge@ff1+2
  7191  004CC0  0E9A               	movlw	154
  7192  004CC2  0100               	movlb	0	; () banked
  7193  004CC4  6F63               	movwf	___ftge@ff2& (0+255),b
  7194  004CC6  0EC9               	movlw	201
  7195  004CC8  0100               	movlb	0	; () banked
  7196  004CCA  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  7197  004CCC  0E40               	movlw	64
  7198  004CCE  0100               	movlb	0	; () banked
  7199  004CD0  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  7200  004CD2  EC78  F049         	call	___ftge	;wreg free
  7201  004CD6  0100               	movlb	0	; () banked
  7202  004CD8  B0D8               	btfsc	status,0,c
  7203  004CDA  D002               	goto	l13692
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;main.c: 115: {
  7207                           ;main.c: 116: VoltageStatus = 34;
  7208  004CDC  0E22               	movlw	34
  7209  004CDE  D015               	goto	L1
  7210  004CE0                     l13692:
  7211                           
  7212                           ;main.c: 118: else if (BatteryVoltage > 16.5)
  7213  004CE0  0E00               	movlw	0
  7214  004CE2  0100               	movlb	0	; () banked
  7215  004CE4  6F60               	movwf	___ftge@ff1& (0+255),b
  7216  004CE6  0E84               	movlw	132
  7217  004CE8  0100               	movlb	0	; () banked
  7218  004CEA  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  7219  004CEC  0E41               	movlw	65
  7220  004CEE  0100               	movlb	0	; () banked
  7221  004CF0  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  7222  004CF2  C3E5  F063         	movff	_BatteryVoltage,___ftge@ff2
  7223  004CF6  C3E6  F064         	movff	_BatteryVoltage+1,___ftge@ff2+1
  7224  004CFA  C3E7  F065         	movff	_BatteryVoltage+2,___ftge@ff2+2
  7225  004CFE  EC78  F049         	call	___ftge	;wreg free
  7226  004D02  0100               	movlb	0	; () banked
  7227  004D04  B0D8               	btfsc	status,0,c
  7228  004D06  D004               	goto	l13696
  7229                           
  7230                           ; BSR set to: 0
  7231                           ;main.c: 119: {
  7232                           ;main.c: 120: VoltageStatus = 98;
  7233  004D08  0E62               	movlw	98
  7234  004D0A                     L1:
  7235  004D0A  0103               	movlb	3	; () banked
  7236  004D0C  6FE4               	movwf	main@VoltageStatus& (0+255),b
  7237                           
  7238                           ; BSR set to: 3
  7239  004D0E  D000               	goto	l13696
  7240  004D10                     l13696:
  7241                           
  7242                           ;main.c: 121: }
  7243                           ;main.c: 122: if(VoltageStatus == 1)
  7244  004D10  0103               	movlb	3	; () banked
  7245  004D12  05E4               	decf	main@VoltageStatus& (0+255),w,b
  7246  004D14  A4D8               	btfss	status,2,c
  7247  004D16  D027               	goto	l13718
  7248                           
  7249                           ; BSR set to: 3
  7250                           ;main.c: 123: {
  7251                           ;main.c: 125: for(i =0;i<10;i++)
  7252  004D18  0E00               	movlw	0
  7253  004D1A  0103               	movlb	3	; () banked
  7254  004D1C  6FE3               	movwf	main@i& (0+255),b
  7255  004D1E                     l13700:
  7256                           
  7257                           ; BSR set to: 3
  7258  004D1E  0E09               	movlw	9
  7259  004D20  0103               	movlb	3	; () banked
  7260  004D22  65E3               	cpfsgt	main@i& (0+255),b
  7261  004D24  D001               	goto	l13704
  7262                           
  7263                           ; BSR set to: 3
  7264  004D26  D01D               	goto	l13716
  7265  004D28                     l13704:
  7266                           
  7267                           ; BSR set to: 3
  7268                           ;main.c: 126: {
  7269                           ;main.c: 127: (LATC |= 0x02);
  7270  004D28  828B               	bsf	3979,1,c	;volatile
  7271                           
  7272                           ;main.c: 128: (LATC &= ~0x04);
  7273  004D2A  948B               	bcf	3979,2,c	;volatile
  7274                           
  7275                           ; BSR set to: 3
  7276                           ;main.c: 129: delayUS(50000);
  7277  004D2C  0E50               	movlw	80
  7278  004D2E  0100               	movlb	0	; () banked
  7279  004D30  6F60               	movwf	delayUS@US& (0+255),b
  7280  004D32  0EC3               	movlw	195
  7281  004D34  6F61               	movwf	(delayUS@US+1)& (0+255),b
  7282  004D36  0E00               	movlw	0
  7283  004D38  6F62               	movwf	(delayUS@US+2)& (0+255),b
  7284  004D3A  0E00               	movlw	0
  7285  004D3C  6F63               	movwf	(delayUS@US+3)& (0+255),b
  7286  004D3E  EC3F  F051         	call	_delayUS	;wreg free
  7287                           
  7288                           ;main.c: 130: (LATC &= ~0x02);
  7289  004D42  928B               	bcf	3979,1,c	;volatile
  7290                           
  7291                           ;main.c: 131: (LATC |= 0x04);
  7292  004D44  848B               	bsf	3979,2,c	;volatile
  7293                           
  7294                           ;main.c: 132: delayUS(50000);
  7295  004D46  0E50               	movlw	80
  7296  004D48  0100               	movlb	0	; () banked
  7297  004D4A  6F60               	movwf	delayUS@US& (0+255),b
  7298  004D4C  0EC3               	movlw	195
  7299  004D4E  6F61               	movwf	(delayUS@US+1)& (0+255),b
  7300  004D50  0E00               	movlw	0
  7301  004D52  6F62               	movwf	(delayUS@US+2)& (0+255),b
  7302  004D54  0E00               	movlw	0
  7303  004D56  6F63               	movwf	(delayUS@US+3)& (0+255),b
  7304  004D58  EC3F  F051         	call	_delayUS	;wreg free
  7305  004D5C  0103               	movlb	3	; () banked
  7306  004D5E  2BE3               	incf	main@i& (0+255),f,b
  7307  004D60  D7DE               	goto	l13700
  7308  004D62                     l13716:
  7309                           
  7310                           ; BSR set to: 3
  7311                           ;main.c: 133: }
  7312                           ;main.c: 134: (LATC &= ~0x04);
  7313  004D62  948B               	bcf	3979,2,c	;volatile
  7314                           
  7315                           ;main.c: 135: }
  7316  004D64  D024               	goto	l13734
  7317  004D66                     l13718:
  7318                           
  7319                           ; BSR set to: 3
  7320                           ;main.c: 136: else
  7321                           ;main.c: 137: {
  7322                           ;main.c: 138: for(i =0;i<10;i++)
  7323  004D66  0E00               	movlw	0
  7324  004D68  0103               	movlb	3	; () banked
  7325  004D6A  6FE3               	movwf	main@i& (0+255),b
  7326  004D6C                     l13720:
  7327                           
  7328                           ; BSR set to: 3
  7329  004D6C  0E09               	movlw	9
  7330  004D6E  0103               	movlb	3	; () banked
  7331  004D70  65E3               	cpfsgt	main@i& (0+255),b
  7332  004D72  D001               	goto	l13724
  7333                           
  7334                           ; BSR set to: 3
  7335  004D74  D01C               	goto	l13734
  7336  004D76                     l13724:
  7337                           
  7338                           ; BSR set to: 3
  7339                           ;main.c: 139: {
  7340                           ;main.c: 140: (LATC |= 0x02);
  7341  004D76  828B               	bsf	3979,1,c	;volatile
  7342                           
  7343                           ; BSR set to: 3
  7344                           ;main.c: 141: delayUS(100000);
  7345  004D78  0EA0               	movlw	160
  7346  004D7A  0100               	movlb	0	; () banked
  7347  004D7C  6F60               	movwf	delayUS@US& (0+255),b
  7348  004D7E  0E86               	movlw	134
  7349  004D80  6F61               	movwf	(delayUS@US+1)& (0+255),b
  7350  004D82  0E01               	movlw	1
  7351  004D84  6F62               	movwf	(delayUS@US+2)& (0+255),b
  7352  004D86  0E00               	movlw	0
  7353  004D88  6F63               	movwf	(delayUS@US+3)& (0+255),b
  7354  004D8A  EC3F  F051         	call	_delayUS	;wreg free
  7355                           
  7356                           ;main.c: 142: (LATC &= ~0x02);
  7357  004D8E  928B               	bcf	3979,1,c	;volatile
  7358                           
  7359                           ;main.c: 143: delayUS(100000);
  7360  004D90  0EA0               	movlw	160
  7361  004D92  0100               	movlb	0	; () banked
  7362  004D94  6F60               	movwf	delayUS@US& (0+255),b
  7363  004D96  0E86               	movlw	134
  7364  004D98  6F61               	movwf	(delayUS@US+1)& (0+255),b
  7365  004D9A  0E01               	movlw	1
  7366  004D9C  6F62               	movwf	(delayUS@US+2)& (0+255),b
  7367  004D9E  0E00               	movlw	0
  7368  004DA0  6F63               	movwf	(delayUS@US+3)& (0+255),b
  7369  004DA2  EC3F  F051         	call	_delayUS	;wreg free
  7370  004DA6  0103               	movlb	3	; () banked
  7371  004DA8  2BE3               	incf	main@i& (0+255),f,b
  7372  004DAA  D7E0               	goto	l13720
  7373                           
  7374                           ; BSR set to: 3
  7375                           
  7376                           ; BSR set to: 3
  7377  004DAC  D000               	goto	l13734
  7378  004DAE                     l13734:
  7379                           
  7380                           ; BSR set to: 3
  7381                           ;main.c: 144: }
  7382                           ;main.c: 145: }
  7383                           ;main.c: 146: Connected = BlueConnected();
  7384  004DAE  ECFF  F054         	call	_BlueConnected	;wreg free
  7385  004DB2  0103               	movlb	3	; () banked
  7386  004DB4  6FE2               	movwf	main@Connected& (0+255),b
  7387                           
  7388                           ; BSR set to: 3
  7389                           ;main.c: 147: ConnectedOLD = 0;
  7390  004DB6  0E00               	movlw	0
  7391  004DB8  0103               	movlb	3	; () banked
  7392  004DBA  6FE0               	movwf	main@ConnectedOLD& (0+255),b
  7393  004DBC  D23B               	goto	l13912
  7394  004DBE                     l13740:
  7395                           
  7396                           ;main.c: 150: {
  7397                           ;main.c: 151: IRtask = IR_New_Code;
  7398  004DBE  C3F0  F3DD         	movff	_IR_New_Code,main@IRtask
  7399                           
  7400                           ;main.c: 152: Bluetoothtask = NewReceivedString;
  7401  004DC2  C3EA  F3DE         	movff	_NewReceivedString,main@Bluetoothtask	;volatile
  7402                           
  7403                           ;main.c: 154: BatteryVoltage = ReadVoltage();
  7404  004DC6  EC0D  F04B         	call	_ReadVoltage	;wreg free
  7405  004DCA  C089  F3E5         	movff	?_ReadVoltage,_BatteryVoltage
  7406  004DCE  C08A  F3E6         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  7407  004DD2  C08B  F3E7         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  7408                           
  7409                           ;main.c: 155: if(VoltageStatus == 34)
  7410  004DD6  0E22               	movlw	34
  7411  004DD8  0103               	movlb	3	; () banked
  7412  004DDA  19E4               	xorwf	main@VoltageStatus& (0+255),w,b
  7413  004DDC  A4D8               	btfss	status,2,c
  7414  004DDE  D018               	goto	l13750
  7415                           
  7416                           ; BSR set to: 3
  7417                           ;main.c: 156: {
  7418                           ;main.c: 157: BatteryVoltage -= 0.5;
  7419  004DE0  C3E5  F09F         	movff	_BatteryVoltage,___ftsub@f1
  7420  004DE4  C3E6  F0A0         	movff	_BatteryVoltage+1,___ftsub@f1+1
  7421  004DE8  C3E7  F0A1         	movff	_BatteryVoltage+2,___ftsub@f1+2
  7422  004DEC  0E00               	movlw	0
  7423  004DEE  0100               	movlb	0	; () banked
  7424  004DF0  6FA2               	movwf	___ftsub@f2& (0+255),b
  7425  004DF2  0E00               	movlw	0
  7426  004DF4  0100               	movlb	0	; () banked
  7427  004DF6  6FA3               	movwf	(___ftsub@f2+1)& (0+255),b
  7428  004DF8  0E3F               	movlw	63
  7429  004DFA  0100               	movlb	0	; () banked
  7430  004DFC  6FA4               	movwf	(___ftsub@f2+2)& (0+255),b
  7431  004DFE  EC94  F051         	call	___ftsub	;wreg free
  7432  004E02  C09F  F3E5         	movff	?___ftsub,_BatteryVoltage
  7433  004E06  C0A0  F3E6         	movff	?___ftsub+1,_BatteryVoltage+1
  7434  004E0A  C0A1  F3E7         	movff	?___ftsub+2,_BatteryVoltage+2
  7435                           
  7436                           ;main.c: 158: }
  7437  004E0E  D01D               	goto	l160
  7438  004E10                     l13750:
  7439                           
  7440                           ;main.c: 159: else if(VoltageStatus == 98)
  7441  004E10  0E62               	movlw	98
  7442  004E12  0103               	movlb	3	; () banked
  7443  004E14  19E4               	xorwf	main@VoltageStatus& (0+255),w,b
  7444  004E16  A4D8               	btfss	status,2,c
  7445  004E18  D018               	goto	l160
  7446                           
  7447                           ; BSR set to: 3
  7448                           ;main.c: 160: {
  7449                           ;main.c: 161: BatteryVoltage += 0.5;
  7450  004E1A  C3E5  F093         	movff	_BatteryVoltage,___ftadd@f1
  7451  004E1E  C3E6  F094         	movff	_BatteryVoltage+1,___ftadd@f1+1
  7452  004E22  C3E7  F095         	movff	_BatteryVoltage+2,___ftadd@f1+2
  7453  004E26  0E00               	movlw	0
  7454  004E28  0100               	movlb	0	; () banked
  7455  004E2A  6F96               	movwf	___ftadd@f2& (0+255),b
  7456  004E2C  0E00               	movlw	0
  7457  004E2E  0100               	movlb	0	; () banked
  7458  004E30  6F97               	movwf	(___ftadd@f2+1)& (0+255),b
  7459  004E32  0E3F               	movlw	63
  7460  004E34  0100               	movlb	0	; () banked
  7461  004E36  6F98               	movwf	(___ftadd@f2+2)& (0+255),b
  7462  004E38  EC1D  F037         	call	___ftadd	;wreg free
  7463  004E3C  C093  F3E5         	movff	?___ftadd,_BatteryVoltage
  7464  004E40  C094  F3E6         	movff	?___ftadd+1,_BatteryVoltage+1
  7465  004E44  C095  F3E7         	movff	?___ftadd+2,_BatteryVoltage+2
  7466  004E48  D000               	goto	l160
  7467  004E4A                     l160:
  7468                           
  7469                           ;main.c: 162: }
  7470                           ;main.c: 164: if(BatteryVoltage < 6.3 )
  7471  004E4A  C3E5  F060         	movff	_BatteryVoltage,___ftge@ff1
  7472  004E4E  C3E6  F061         	movff	_BatteryVoltage+1,___ftge@ff1+1
  7473  004E52  C3E7  F062         	movff	_BatteryVoltage+2,___ftge@ff1+2
  7474  004E56  0E9A               	movlw	154
  7475  004E58  0100               	movlb	0	; () banked
  7476  004E5A  6F63               	movwf	___ftge@ff2& (0+255),b
  7477  004E5C  0EC9               	movlw	201
  7478  004E5E  0100               	movlb	0	; () banked
  7479  004E60  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  7480  004E62  0E40               	movlw	64
  7481  004E64  0100               	movlb	0	; () banked
  7482  004E66  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  7483  004E68  EC78  F049         	call	___ftge	;wreg free
  7484  004E6C  0100               	movlb	0	; () banked
  7485  004E6E  B0D8               	btfsc	status,0,c
  7486  004E70  D002               	goto	l13756
  7487                           
  7488                           ; BSR set to: 0
  7489                           ;main.c: 165: {
  7490                           ;main.c: 166: VoltageStatus = 34;
  7491  004E72  0E22               	movlw	34
  7492  004E74  D017               	goto	L3
  7493  004E76                     l13756:
  7494                           
  7495                           ;main.c: 168: else if(BatteryVoltage > 16.5)
  7496  004E76  0E00               	movlw	0
  7497  004E78  0100               	movlb	0	; () banked
  7498  004E7A  6F60               	movwf	___ftge@ff1& (0+255),b
  7499  004E7C  0E84               	movlw	132
  7500  004E7E  0100               	movlb	0	; () banked
  7501  004E80  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  7502  004E82  0E41               	movlw	65
  7503  004E84  0100               	movlb	0	; () banked
  7504  004E86  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  7505  004E88  C3E5  F063         	movff	_BatteryVoltage,___ftge@ff2
  7506  004E8C  C3E6  F064         	movff	_BatteryVoltage+1,___ftge@ff2+1
  7507  004E90  C3E7  F065         	movff	_BatteryVoltage+2,___ftge@ff2+2
  7508  004E94  EC78  F049         	call	___ftge	;wreg free
  7509  004E98  0100               	movlb	0	; () banked
  7510  004E9A  B0D8               	btfsc	status,0,c
  7511  004E9C  D002               	goto	l13760
  7512                           
  7513                           ; BSR set to: 0
  7514                           ;main.c: 169: {
  7515                           ;main.c: 170: VoltageStatus = 98;
  7516  004E9E  0E62               	movlw	98
  7517  004EA0  D001               	goto	L3
  7518  004EA2                     l13760:
  7519                           
  7520                           ;main.c: 172: else
  7521                           ;main.c: 173: {
  7522                           ;main.c: 174: VoltageStatus = 1;
  7523  004EA2  0E01               	movlw	1
  7524  004EA4                     L3:
  7525  004EA4  0103               	movlb	3	; () banked
  7526  004EA6  6FE4               	movwf	main@VoltageStatus& (0+255),b
  7527                           
  7528                           ; BSR set to: 3
  7529  004EA8  D000               	goto	l13762
  7530  004EAA                     l13762:
  7531                           
  7532                           ; BSR set to: 3
  7533                           ;main.c: 175: }
  7534                           ;main.c: 176: if(VoltageStatus != 1)
  7535  004EAA  0103               	movlb	3	; () banked
  7536  004EAC  05E4               	decf	main@VoltageStatus& (0+255),w,b
  7537  004EAE  B4D8               	btfsc	status,2,c
  7538  004EB0  D002               	goto	l13766
  7539                           
  7540                           ; BSR set to: 3
  7541                           ;main.c: 177: {
  7542                           ;main.c: 178: (LATC |= 0x02);
  7543  004EB2  828B               	bsf	3979,1,c	;volatile
  7544  004EB4  D000               	goto	l13766
  7545  004EB6                     l13766:
  7546                           
  7547                           ; BSR set to: 3
  7548                           ;main.c: 179: }
  7549                           ;main.c: 180: if(VoltageStatus == 1 && VoltageStatusOLD != 1)
  7550  004EB6  0103               	movlb	3	; () banked
  7551  004EB8  05E4               	decf	main@VoltageStatus& (0+255),w,b
  7552  004EBA  A4D8               	btfss	status,2,c
  7553  004EBC  D007               	goto	l13772
  7554                           
  7555                           ; BSR set to: 3
  7556  004EBE  0103               	movlb	3	; () banked
  7557  004EC0  05E1               	decf	main@VoltageStatusOLD& (0+255),w,b
  7558  004EC2  B4D8               	btfsc	status,2,c
  7559  004EC4  D003               	goto	l13772
  7560                           
  7561                           ; BSR set to: 3
  7562                           ;main.c: 181: {
  7563                           ;main.c: 182: LEDTimerON();
  7564  004EC6  ECB0  F054         	call	_LEDTimerON	;wreg free
  7565  004ECA  D000               	goto	l13772
  7566  004ECC                     l13772:
  7567                           
  7568                           ;main.c: 183: }
  7569                           ;main.c: 186: if(IRtask && IR_NEC)
  7570  004ECC  0103               	movlb	3	; () banked
  7571  004ECE  51DD               	movf	main@IRtask& (0+255),w,b
  7572  004ED0  0103               	movlb	3	; () banked
  7573  004ED2  B4D8               	btfsc	status,2,c
  7574  004ED4  D01B               	goto	l13778
  7575                           
  7576                           ; BSR set to: 3
  7577  004ED6  0103               	movlb	3	; () banked
  7578  004ED8  51EC               	movf	_IR_NEC& (0+255),w,b
  7579  004EDA  0103               	movlb	3	; () banked
  7580  004EDC  11ED               	iorwf	(_IR_NEC+1)& (0+255),w,b
  7581  004EDE  0103               	movlb	3	; () banked
  7582  004EE0  11EE               	iorwf	(_IR_NEC+2)& (0+255),w,b
  7583  004EE2  0103               	movlb	3	; () banked
  7584  004EE4  11EF               	iorwf	(_IR_NEC+3)& (0+255),w,b
  7585  004EE6  B4D8               	btfsc	status,2,c
  7586  004EE8  D011               	goto	l13778
  7587                           
  7588                           ; BSR set to: 3
  7589                           ;main.c: 187: {
  7590                           ;main.c: 188: UseIRCode(&IR_New_Code, IR_NEC);
  7591  004EEA  0EF0               	movlw	low _IR_New_Code
  7592  004EEC  0100               	movlb	0	; () banked
  7593  004EEE  6FE6               	movwf	UseIRCode@Code& (0+255),b
  7594  004EF0  0E03               	movlw	high _IR_New_Code
  7595  004EF2  0100               	movlb	0	; () banked
  7596  004EF4  6FE7               	movwf	(UseIRCode@Code+1)& (0+255),b
  7597  004EF6  C3EC  F0E8         	movff	_IR_NEC,UseIRCode@NEC
  7598  004EFA  C3ED  F0E9         	movff	_IR_NEC+1,UseIRCode@NEC+1
  7599  004EFE  C3EE  F0EA         	movff	_IR_NEC+2,UseIRCode@NEC+2
  7600  004F02  C3EF  F0EB         	movff	_IR_NEC+3,UseIRCode@NEC+3
  7601  004F06  EC5C  F038         	call	_UseIRCode	;wreg free
  7602  004F0A  D000               	goto	l13778
  7603  004F0C                     l13778:
  7604                           
  7605                           ;main.c: 189: }
  7606                           ;main.c: 193: Connected = BlueConnected();
  7607  004F0C  ECFF  F054         	call	_BlueConnected	;wreg free
  7608  004F10  0103               	movlb	3	; () banked
  7609  004F12  6FE2               	movwf	main@Connected& (0+255),b
  7610                           
  7611                           ; BSR set to: 3
  7612                           ;main.c: 195: if(Connected != ConnectedOLD)
  7613  004F14  0103               	movlb	3	; () banked
  7614  004F16  51E0               	movf	main@ConnectedOLD& (0+255),w,b
  7615  004F18  0103               	movlb	3	; () banked
  7616  004F1A  19E2               	xorwf	main@Connected& (0+255),w,b
  7617  004F1C  B4D8               	btfsc	status,2,c
  7618  004F1E  D097               	goto	l13820
  7619                           
  7620                           ; BSR set to: 3
  7621                           ;main.c: 196: {
  7622                           ;main.c: 197: if(Connected)
  7623  004F20  0103               	movlb	3	; () banked
  7624  004F22  51E2               	movf	main@Connected& (0+255),w,b
  7625  004F24  0103               	movlb	3	; () banked
  7626  004F26  B4D8               	btfsc	status,2,c
  7627  004F28  D090               	goto	l170
  7628                           
  7629                           ; BSR set to: 3
  7630                           ;main.c: 198: {
  7631                           ;main.c: 199: cleanBuffer(ReceivedString, ReceivedStringPos);
  7632  004F2A  0E78               	movlw	low _ReceivedString
  7633  004F2C  0100               	movlb	0	; () banked
  7634  004F2E  6F60               	movwf	cleanBuffer@data& (0+255),b
  7635  004F30  0E04               	movlw	high _ReceivedString
  7636  004F32  0100               	movlb	0	; () banked
  7637  004F34  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  7638  004F36  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
  7639  004F3A  0100               	movlb	0	; () banked
  7640  004F3C  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
  7641  004F3E  ECE6  F050         	call	_cleanBuffer	;wreg free
  7642                           
  7643                           ;main.c: 200: ReceivedStringPos = 0;
  7644  004F42  0E00               	movlw	0
  7645  004F44  0103               	movlb	3	; () banked
  7646  004F46  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
  7647                           
  7648                           ; BSR set to: 3
  7649                           ;main.c: 201: delayUS(1000000);
  7650  004F48  0E40               	movlw	64
  7651  004F4A  0100               	movlb	0	; () banked
  7652  004F4C  6F60               	movwf	delayUS@US& (0+255),b
  7653  004F4E  0E42               	movlw	66
  7654  004F50  6F61               	movwf	(delayUS@US+1)& (0+255),b
  7655  004F52  0E0F               	movlw	15
  7656  004F54  6F62               	movwf	(delayUS@US+2)& (0+255),b
  7657  004F56  0E00               	movlw	0
  7658  004F58  6F63               	movwf	(delayUS@US+3)& (0+255),b
  7659  004F5A  EC3F  F051         	call	_delayUS	;wreg free
  7660                           
  7661                           ;main.c: 202: UARTstringCRLN_CONST(ProjectName);
  7662  004F5E  0E59               	movlw	low _ProjectName
  7663  004F60  0100               	movlb	0	; () banked
  7664  004F62  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
  7665  004F64  0EEE               	movlw	high _ProjectName
  7666  004F66  0100               	movlb	0	; () banked
  7667  004F68  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
  7668  004F6A  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
  7669                           
  7670                           ;main.c: 203: UARTstring_CONST(CRLN);
  7671  004F6E  0E51               	movlw	low _CRLN
  7672  004F70  0100               	movlb	0	; () banked
  7673  004F72  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  7674  004F74  0EF0               	movlw	high _CRLN
  7675  004F76  0100               	movlb	0	; () banked
  7676  004F78  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  7677  004F7A  EC42  F053         	call	_UARTstring_CONST	;wreg free
  7678                           
  7679                           ;main.c: 204: if(BluetoothChangeStatus)
  7680  004F7E  0103               	movlb	3	; () banked
  7681  004F80  51E8               	movf	_BluetoothChangeStatus& (0+255),w,b
  7682  004F82  B4D8               	btfsc	status,2,c
  7683  004F84  D041               	goto	l13806
  7684                           
  7685                           ; BSR set to: 3
  7686                           ;main.c: 205: {
  7687                           ;main.c: 206: UARTstring_CONST(CRLN);
  7688  004F86  0E51               	movlw	low _CRLN
  7689  004F88  0100               	movlb	0	; () banked
  7690  004F8A  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  7691  004F8C  0EF0               	movlw	high _CRLN
  7692  004F8E  0100               	movlb	0	; () banked
  7693  004F90  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  7694  004F92  EC42  F053         	call	_UARTstring_CONST	;wreg free
  7695                           
  7696                           ;main.c: 207: BufferCopy(BluetoothBroadcast,BroadcastTEMP, 21, 0);
  7697  004F96  0EDC               	movlw	low _BluetoothBroadcast
  7698  004F98  0100               	movlb	0	; () banked
  7699  004F9A  6F68               	movwf	BufferCopy@from& (0+255),b
  7700  004F9C  0E04               	movlw	high _BluetoothBroadcast
  7701  004F9E  0100               	movlb	0	; () banked
  7702  004FA0  6F69               	movwf	(BufferCopy@from+1)& (0+255),b
  7703  004FA2  0EC8               	movlw	low main@BroadcastTEMP
  7704  004FA4  0100               	movlb	0	; () banked
  7705  004FA6  6F6A               	movwf	BufferCopy@to& (0+255),b
  7706  004FA8  0E03               	movlw	high main@BroadcastTEMP
  7707  004FAA  0100               	movlb	0	; () banked
  7708  004FAC  6F6B               	movwf	(BufferCopy@to+1)& (0+255),b
  7709  004FAE  0E15               	movlw	21
  7710  004FB0  0100               	movlb	0	; () banked
  7711  004FB2  6F6C               	movwf	BufferCopy@count& (0+255),b
  7712  004FB4  0E00               	movlw	0
  7713  004FB6  0100               	movlb	0	; () banked
  7714  004FB8  6F6D               	movwf	BufferCopy@shift& (0+255),b
  7715  004FBA  ECDF  F04E         	call	_BufferCopy	;wreg free
  7716                           
  7717                           ;main.c: 208: sprintf(buf,"Bluetooth Name was successfully changed to \" %s \"",Broadcas
      +                          tTEMP);
  7718  004FBE  0E00               	movlw	low main@buf
  7719  004FC0  0100               	movlb	0	; () banked
  7720  004FC2  6FAE               	movwf	sprintf@sp& (0+255),b
  7721  004FC4  0E03               	movlw	high main@buf
  7722  004FC6  0100               	movlb	0	; () banked
  7723  004FC8  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
  7724  004FCA  0E4D               	movlw	low STR_1
  7725  004FCC  0100               	movlb	0	; () banked
  7726  004FCE  6FB0               	movwf	sprintf@f& (0+255),b
  7727  004FD0  0EF2               	movlw	high STR_1
  7728  004FD2  0100               	movlb	0	; () banked
  7729  004FD4  6FB1               	movwf	(sprintf@f+1)& (0+255),b
  7730  004FD6  0EC8               	movlw	low main@BroadcastTEMP
  7731  004FD8  0100               	movlb	0	; () banked
  7732  004FDA  6FB2               	movwf	(?_sprintf+4)& (0+255),b
  7733  004FDC  0E03               	movlw	high main@BroadcastTEMP
  7734  004FDE  0100               	movlb	0	; () banked
  7735  004FE0  6FB3               	movwf	(?_sprintf+5)& (0+255),b
  7736  004FE2  EC27  F014         	call	_sprintf	;wreg free
  7737                           
  7738                           ;main.c: 209: UARTstringCRLN(buf);
  7739  004FE6  0E00               	movlw	low main@buf
  7740  004FE8  0100               	movlb	0	; () banked
  7741  004FEA  6F64               	movwf	UARTstringCRLN@data& (0+255),b
  7742  004FEC  0E03               	movlw	high main@buf
  7743  004FEE  0100               	movlb	0	; () banked
  7744  004FF0  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7745  004FF2  ECA3  F052         	call	_UARTstringCRLN	;wreg free
  7746                           
  7747                           ;main.c: 210: UARTstring_CONST(CRLN);
  7748  004FF6  0E51               	movlw	low _CRLN
  7749  004FF8  0100               	movlb	0	; () banked
  7750  004FFA  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  7751  004FFC  0EF0               	movlw	high _CRLN
  7752  004FFE  0100               	movlb	0	; () banked
  7753  005000  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  7754  005002  EC42  F053         	call	_UARTstring_CONST	;wreg free
  7755  005006  D000               	goto	l13806
  7756  005008                     l13806:
  7757                           
  7758                           ;main.c: 211: }
  7759                           ;main.c: 212: if(VoltageStatus != 1 && VoltageStatusOLD != 1)
  7760  005008  0103               	movlb	3	; () banked
  7761  00500A  05E4               	decf	main@VoltageStatus& (0+255),w,b
  7762  00500C  B4D8               	btfsc	status,2,c
  7763  00500E  D015               	goto	l13812
  7764                           
  7765                           ; BSR set to: 3
  7766  005010  0103               	movlb	3	; () banked
  7767  005012  05E1               	decf	main@VoltageStatusOLD& (0+255),w,b
  7768  005014  B4D8               	btfsc	status,2,c
  7769  005016  D011               	goto	l13812
  7770                           
  7771                           ; BSR set to: 3
  7772                           ;main.c: 213: {
  7773                           ;main.c: 214: UARTstringCRLN_CONST("Voltage out of Range!!!");
  7774  005018  0E99               	movlw	low STR_2
  7775  00501A  0100               	movlb	0	; () banked
  7776  00501C  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
  7777  00501E  0EFB               	movlw	high STR_2
  7778  005020  0100               	movlb	0	; () banked
  7779  005022  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
  7780  005024  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
  7781                           
  7782                           ;main.c: 215: UARTstring_CONST(CRLN);
  7783  005028  0E51               	movlw	low _CRLN
  7784  00502A  0100               	movlb	0	; () banked
  7785  00502C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  7786  00502E  0EF0               	movlw	high _CRLN
  7787  005030  0100               	movlb	0	; () banked
  7788  005032  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  7789  005034  EC42  F053         	call	_UARTstring_CONST	;wreg free
  7790  005038  D000               	goto	l13812
  7791  00503A                     l13812:
  7792                           
  7793                           ;main.c: 216: }
  7794                           ;main.c: 217: ClearUSART();
  7795  00503A  ECC2  F054         	call	_ClearUSART	;wreg free
  7796                           
  7797                           ;main.c: 218: PIR1bits.RCIF = 0;
  7798  00503E  9A9E               	bcf	3998,5,c	;volatile
  7799                           
  7800                           ;main.c: 219: PIE1bits.RCIE = 1;
  7801  005040  8A9D               	bsf	3997,5,c	;volatile
  7802                           
  7803                           ;main.c: 220: UARTchar_CONST('>');
  7804  005042  0E3E               	movlw	62
  7805  005044  EC1E  F054         	call	_UARTchar_CONST
  7806                           
  7807                           ;main.c: 221: }
  7808  005048  D002               	goto	l13820
  7809  00504A                     l170:
  7810                           
  7811                           ; BSR set to: 3
  7812                           ;main.c: 222: else
  7813                           ;main.c: 223: {
  7814                           ;main.c: 224: PIE1bits.RCIE = 0;
  7815  00504A  9A9D               	bcf	3997,5,c	;volatile
  7816                           
  7817                           ; BSR set to: 3
  7818  00504C  D000               	goto	l13820
  7819  00504E                     l13820:
  7820                           
  7821                           ;main.c: 225: }
  7822                           ;main.c: 226: }
  7823                           ;main.c: 227: if(Bluetoothtask >= 1 && Connected)
  7824  00504E  0103               	movlb	3	; () banked
  7825  005050  51DE               	movf	main@Bluetoothtask& (0+255),w,b
  7826  005052  0103               	movlb	3	; () banked
  7827  005054  B4D8               	btfsc	status,2,c
  7828  005056  D079               	goto	l13868
  7829                           
  7830                           ; BSR set to: 3
  7831  005058  0103               	movlb	3	; () banked
  7832  00505A  51E2               	movf	main@Connected& (0+255),w,b
  7833  00505C  0103               	movlb	3	; () banked
  7834  00505E  B4D8               	btfsc	status,2,c
  7835  005060  D074               	goto	l13868
  7836                           
  7837                           ; BSR set to: 3
  7838                           ;main.c: 228: {
  7839                           ;main.c: 229: cleanBuffer(BluetoothString, 100);
  7840  005062  0E64               	movlw	low main@BluetoothString
  7841  005064  0100               	movlb	0	; () banked
  7842  005066  6F60               	movwf	cleanBuffer@data& (0+255),b
  7843  005068  0E03               	movlw	high main@BluetoothString
  7844  00506A  0100               	movlb	0	; () banked
  7845  00506C  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  7846  00506E  0E00               	movlw	0
  7847  005070  0100               	movlb	0	; () banked
  7848  005072  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
  7849  005074  0E64               	movlw	100
  7850  005076  6F62               	movwf	cleanBuffer@count& (0+255),b
  7851  005078  ECE6  F050         	call	_cleanBuffer	;wreg free
  7852                           
  7853                           ;main.c: 230: BufferCopy(ReceivedString,BluetoothString, ReceivedStringPos, 0);
  7854  00507C  0E78               	movlw	low _ReceivedString
  7855  00507E  0100               	movlb	0	; () banked
  7856  005080  6F68               	movwf	BufferCopy@from& (0+255),b
  7857  005082  0E04               	movlw	high _ReceivedString
  7858  005084  0100               	movlb	0	; () banked
  7859  005086  6F69               	movwf	(BufferCopy@from+1)& (0+255),b
  7860  005088  0E64               	movlw	low main@BluetoothString
  7861  00508A  0100               	movlb	0	; () banked
  7862  00508C  6F6A               	movwf	BufferCopy@to& (0+255),b
  7863  00508E  0E03               	movlw	high main@BluetoothString
  7864  005090  0100               	movlb	0	; () banked
  7865  005092  6F6B               	movwf	(BufferCopy@to+1)& (0+255),b
  7866  005094  C3EB  F06C         	movff	_ReceivedStringPos,BufferCopy@count	;volatile
  7867  005098  0E00               	movlw	0
  7868  00509A  0100               	movlb	0	; () banked
  7869  00509C  6F6D               	movwf	BufferCopy@shift& (0+255),b
  7870  00509E  ECDF  F04E         	call	_BufferCopy	;wreg free
  7871                           
  7872                           ;main.c: 231: BluetoothStringPos = ReceivedStringPos;
  7873  0050A2  C3EB  F3DF         	movff	_ReceivedStringPos,main@BluetoothStringPos	;volatile
  7874                           
  7875                           ;main.c: 232: cleanBuffer(ReceivedString, ReceivedStringPos);
  7876  0050A6  0E78               	movlw	low _ReceivedString
  7877  0050A8  0100               	movlb	0	; () banked
  7878  0050AA  6F60               	movwf	cleanBuffer@data& (0+255),b
  7879  0050AC  0E04               	movlw	high _ReceivedString
  7880  0050AE  0100               	movlb	0	; () banked
  7881  0050B0  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  7882  0050B2  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
  7883  0050B6  0100               	movlb	0	; () banked
  7884  0050B8  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
  7885  0050BA  ECE6  F050         	call	_cleanBuffer	;wreg free
  7886                           
  7887                           ;main.c: 233: ReceivedStringPos = 0;
  7888  0050BE  0E00               	movlw	0
  7889  0050C0  0103               	movlb	3	; () banked
  7890  0050C2  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
  7891                           
  7892                           ; BSR set to: 3
  7893                           ;main.c: 234: NewReceivedString = 0;
  7894  0050C4  0E00               	movlw	0
  7895  0050C6  0103               	movlb	3	; () banked
  7896  0050C8  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
  7897                           
  7898                           ; BSR set to: 3
  7899                           ;main.c: 235: if(BluetoothString[0] != 0)
  7900  0050CA  0103               	movlb	3	; () banked
  7901  0050CC  5164               	movf	main@BluetoothString& (0+255),w,b
  7902  0050CE  0103               	movlb	3	; () banked
  7903  0050D0  B4D8               	btfsc	status,2,c
  7904  0050D2  D00B               	goto	l13840
  7905                           
  7906                           ; BSR set to: 3
  7907                           ;main.c: 236: {
  7908                           ;main.c: 237: UseBluetooth(BluetoothString, BluetoothStringPos);
  7909  0050D4  0E64               	movlw	low main@BluetoothString
  7910  0050D6  0100               	movlb	0	; () banked
  7911  0050D8  6FF2               	movwf	UseBluetooth@String& (0+255),b
  7912  0050DA  0E03               	movlw	high main@BluetoothString
  7913  0050DC  0100               	movlb	0	; () banked
  7914  0050DE  6FF3               	movwf	(UseBluetooth@String+1)& (0+255),b
  7915  0050E0  C3DF  F0F4         	movff	main@BluetoothStringPos,UseBluetooth@StringPos
  7916  0050E4  ECE7  F000         	call	_UseBluetooth	;wreg free
  7917  0050E8  D000               	goto	l13840
  7918  0050EA                     l13840:
  7919                           
  7920                           ;main.c: 238: }
  7921                           ;main.c: 239: cleanBuffer(ReceivedString, ReceivedStringPos);
  7922  0050EA  0E78               	movlw	low _ReceivedString
  7923  0050EC  0100               	movlb	0	; () banked
  7924  0050EE  6F60               	movwf	cleanBuffer@data& (0+255),b
  7925  0050F0  0E04               	movlw	high _ReceivedString
  7926  0050F2  0100               	movlb	0	; () banked
  7927  0050F4  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  7928  0050F6  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
  7929  0050FA  0100               	movlb	0	; () banked
  7930  0050FC  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
  7931  0050FE  ECE6  F050         	call	_cleanBuffer	;wreg free
  7932                           
  7933                           ;main.c: 240: ReceivedStringPos = 0;
  7934  005102  0E00               	movlw	0
  7935  005104  0103               	movlb	3	; () banked
  7936  005106  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
  7937                           
  7938                           ; BSR set to: 3
  7939                           ;main.c: 241: NewReceivedString = 0;
  7940  005108  0E00               	movlw	0
  7941  00510A  0103               	movlb	3	; () banked
  7942  00510C  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
  7943                           
  7944                           ; BSR set to: 3
  7945                           ;main.c: 242: UARTstring_CONST(CRLN);
  7946  00510E  0E51               	movlw	low _CRLN
  7947  005110  0100               	movlb	0	; () banked
  7948  005112  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  7949  005114  0EF0               	movlw	high _CRLN
  7950  005116  0100               	movlb	0	; () banked
  7951  005118  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  7952  00511A  EC42  F053         	call	_UARTstring_CONST	;wreg free
  7953                           
  7954                           ;main.c: 243: UARTchar_CONST('>');
  7955  00511E  0E3E               	movlw	62
  7956  005120  EC1E  F054         	call	_UARTchar_CONST
  7957                           
  7958                           ;main.c: 244: if(IR_New_Code)
  7959  005124  0103               	movlb	3	; () banked
  7960  005126  51F0               	movf	_IR_New_Code& (0+255),w,b
  7961  005128  B4D8               	btfsc	status,2,c
  7962  00512A  D004               	goto	l13854
  7963                           
  7964                           ; BSR set to: 3
  7965                           ;main.c: 245: {
  7966                           ;main.c: 246: IR_New_Code = 0;
  7967  00512C  0E00               	movlw	0
  7968  00512E  0103               	movlb	3	; () banked
  7969  005130  6FF0               	movwf	_IR_New_Code& (0+255),b
  7970  005132  D000               	goto	l13854
  7971  005134                     l13854:
  7972                           
  7973                           ; BSR set to: 3
  7974                           ;main.c: 247: }
  7975                           ;main.c: 249: IRpinOLD = ReadIRpin();
  7976  005134  ECF8  F054         	call	_ReadIRpin	;wreg free
  7977  005138  6E40               	movwf	_IRpinOLD,c
  7978                           
  7979                           ;main.c: 250: INTCONbits.RBIF = 0;
  7980  00513A  90F2               	bcf	intcon,0,c	;volatile
  7981                           
  7982                           ;main.c: 251: (IOCBbits.IOCB4 = 1);
  7983  00513C  887D               	bsf	3965,4,c	;volatile
  7984                           
  7985                           ;main.c: 252: INTCONbits.RBIE = 1;
  7986  00513E  86F2               	bsf	intcon,3,c	;volatile
  7987                           
  7988                           ;main.c: 253: ClearUSART();
  7989  005140  ECC2  F054         	call	_ClearUSART	;wreg free
  7990                           
  7991                           ;main.c: 254: PIR1bits.RCIF = 0;
  7992  005144  9A9E               	bcf	3998,5,c	;volatile
  7993                           
  7994                           ;main.c: 255: PIE1bits.RCIE = 1;
  7995  005146  8A9D               	bsf	3997,5,c	;volatile
  7996  005148  D000               	goto	l13868
  7997  00514A                     l13868:
  7998                           
  7999                           ;main.c: 256: }
  8000                           ;main.c: 259: if(IRtimeout < 5000)
  8001  00514A  0103               	movlb	3	; () banked
  8002  00514C  51F4               	movf	(_IRtimeout+3)& (0+255),w,b
  8003  00514E  0103               	movlb	3	; () banked
  8004  005150  11F3               	iorwf	(_IRtimeout+2)& (0+255),w,b
  8005  005152  E110               	bnz	l13872
  8006  005154  0E88               	movlw	136
  8007  005156  0103               	movlb	3	; () banked
  8008  005158  5DF1               	subwf	_IRtimeout& (0+255),w,b
  8009  00515A  0E13               	movlw	19
  8010  00515C  0103               	movlb	3	; () banked
  8011  00515E  59F2               	subwfb	(_IRtimeout+1)& (0+255),w,b
  8012  005160  B0D8               	btfsc	status,0,c
  8013  005162  D008               	goto	l13872
  8014                           
  8015                           ; BSR set to: 3
  8016                           ;main.c: 260: {
  8017                           ;main.c: 261: IRtimeout++;
  8018  005164  0E01               	movlw	1
  8019  005166  0103               	movlb	3	; () banked
  8020  005168  27F1               	addwf	_IRtimeout& (0+255),f,b
  8021  00516A  0E00               	movlw	0
  8022  00516C  23F2               	addwfc	(_IRtimeout+1)& (0+255),f,b
  8023  00516E  23F3               	addwfc	(_IRtimeout+2)& (0+255),f,b
  8024  005170  23F4               	addwfc	(_IRtimeout+3)& (0+255),f,b
  8025                           
  8026                           ;main.c: 262: }
  8027  005172  D027               	goto	l13888
  8028  005174                     l13872:
  8029                           
  8030                           ; BSR set to: 3
  8031                           ;main.c: 263: else if(IRtimeout == 5000)
  8032  005174  0E88               	movlw	136
  8033  005176  0103               	movlb	3	; () banked
  8034  005178  19F1               	xorwf	_IRtimeout& (0+255),w,b
  8035  00517A  E123               	bnz	l13888
  8036  00517C  0E13               	movlw	19
  8037  00517E  0103               	movlb	3	; () banked
  8038  005180  19F2               	xorwf	(_IRtimeout+1)& (0+255),w,b
  8039  005182  0103               	movlb	3	; () banked
  8040  005184  11F3               	iorwf	(_IRtimeout+2)& (0+255),w,b
  8041  005186  0103               	movlb	3	; () banked
  8042  005188  11F4               	iorwf	(_IRtimeout+3)& (0+255),w,b
  8043  00518A  A4D8               	btfss	status,2,c
  8044  00518C  D01A               	goto	l13888
  8045                           
  8046                           ; BSR set to: 3
  8047                           ;main.c: 264: {
  8048                           ;main.c: 265: IRtimeout++;
  8049  00518E  0E01               	movlw	1
  8050  005190  0103               	movlb	3	; () banked
  8051  005192  27F1               	addwf	_IRtimeout& (0+255),f,b
  8052  005194  0E00               	movlw	0
  8053  005196  23F2               	addwfc	(_IRtimeout+1)& (0+255),f,b
  8054  005198  23F3               	addwfc	(_IRtimeout+2)& (0+255),f,b
  8055  00519A  23F4               	addwfc	(_IRtimeout+3)& (0+255),f,b
  8056                           
  8057                           ; BSR set to: 3
  8058                           ;main.c: 266: IR_NEC = 0;
  8059  00519C  0E00               	movlw	0
  8060  00519E  0103               	movlb	3	; () banked
  8061  0051A0  6FEC               	movwf	_IR_NEC& (0+255),b
  8062  0051A2  0E00               	movlw	0
  8063  0051A4  6FED               	movwf	(_IR_NEC+1)& (0+255),b
  8064  0051A6  0E00               	movlw	0
  8065  0051A8  6FEE               	movwf	(_IR_NEC+2)& (0+255),b
  8066  0051AA  0E00               	movlw	0
  8067  0051AC  6FEF               	movwf	(_IR_NEC+3)& (0+255),b
  8068                           
  8069                           ; BSR set to: 3
  8070                           ;main.c: 267: IR_New_Code = 0;
  8071  0051AE  0E00               	movlw	0
  8072  0051B0  0103               	movlb	3	; () banked
  8073  0051B2  6FF0               	movwf	_IR_New_Code& (0+255),b
  8074                           
  8075                           ; BSR set to: 3
  8076                           ;main.c: 268: IRpinOLD = ReadIRpin();
  8077  0051B4  ECF8  F054         	call	_ReadIRpin	;wreg free
  8078  0051B8  6E40               	movwf	_IRpinOLD,c
  8079                           
  8080                           ;main.c: 269: INTCONbits.RBIF = 0;
  8081  0051BA  90F2               	bcf	intcon,0,c	;volatile
  8082                           
  8083                           ;main.c: 270: (IOCBbits.IOCB4 = 1);
  8084  0051BC  887D               	bsf	3965,4,c	;volatile
  8085                           
  8086                           ;main.c: 271: INTCONbits.RBIE = 1;
  8087  0051BE  86F2               	bsf	intcon,3,c	;volatile
  8088  0051C0  D000               	goto	l13888
  8089  0051C2                     l13888:
  8090                           
  8091                           ;main.c: 272: }
  8092                           ;main.c: 273: if(BufferOverflow)
  8093  0051C2  0103               	movlb	3	; () banked
  8094  0051C4  51E9               	movf	_BufferOverflow& (0+255),w,b
  8095  0051C6  B4D8               	btfsc	status,2,c
  8096  0051C8  D033               	goto	l13910
  8097                           
  8098                           ; BSR set to: 3
  8099                           ;main.c: 274: {
  8100                           ;main.c: 276: cleanBuffer(ReceivedString,100);
  8101  0051CA  0E78               	movlw	low _ReceivedString
  8102  0051CC  0100               	movlb	0	; () banked
  8103  0051CE  6F60               	movwf	cleanBuffer@data& (0+255),b
  8104  0051D0  0E04               	movlw	high _ReceivedString
  8105  0051D2  0100               	movlb	0	; () banked
  8106  0051D4  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  8107  0051D6  0E00               	movlw	0
  8108  0051D8  0100               	movlb	0	; () banked
  8109  0051DA  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
  8110  0051DC  0E64               	movlw	100
  8111  0051DE  6F62               	movwf	cleanBuffer@count& (0+255),b
  8112  0051E0  ECE6  F050         	call	_cleanBuffer	;wreg free
  8113                           
  8114                           ;main.c: 277: ReceivedStringPos = 0;
  8115  0051E4  0E00               	movlw	0
  8116  0051E6  0103               	movlb	3	; () banked
  8117  0051E8  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
  8118                           
  8119                           ; BSR set to: 3
  8120                           ;main.c: 278: UARTstring_CONST(CRLN);
  8121  0051EA  0E51               	movlw	low _CRLN
  8122  0051EC  0100               	movlb	0	; () banked
  8123  0051EE  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  8124  0051F0  0EF0               	movlw	high _CRLN
  8125  0051F2  0100               	movlb	0	; () banked
  8126  0051F4  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  8127  0051F6  EC42  F053         	call	_UARTstring_CONST	;wreg free
  8128                           
  8129                           ;main.c: 279: UARTstringCRLN_CONST("Buffer Overflow");
  8130  0051FA  0E41               	movlw	low STR_3
  8131  0051FC  0100               	movlb	0	; () banked
  8132  0051FE  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
  8133  005200  0EFE               	movlw	high STR_3
  8134  005202  0100               	movlb	0	; () banked
  8135  005204  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
  8136  005206  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
  8137                           
  8138                           ;main.c: 280: UARTstring_CONST(CRLN);
  8139  00520A  0E51               	movlw	low _CRLN
  8140  00520C  0100               	movlb	0	; () banked
  8141  00520E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  8142  005210  0EF0               	movlw	high _CRLN
  8143  005212  0100               	movlb	0	; () banked
  8144  005214  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  8145  005216  EC42  F053         	call	_UARTstring_CONST	;wreg free
  8146                           
  8147                           ;main.c: 281: UARTchar('>');
  8148  00521A  0E3E               	movlw	62
  8149  00521C  EC3D  F054         	call	_UARTchar
  8150                           
  8151                           ;main.c: 282: BufferOverflow = 0;
  8152  005220  0E00               	movlw	0
  8153  005222  0103               	movlb	3	; () banked
  8154  005224  6FE9               	movwf	_BufferOverflow& (0+255),b
  8155                           
  8156                           ; BSR set to: 3
  8157                           ;main.c: 283: ClearUSART();
  8158  005226  ECC2  F054         	call	_ClearUSART	;wreg free
  8159                           
  8160                           ;main.c: 284: PIR1bits.RCIF = 0;
  8161  00522A  9A9E               	bcf	3998,5,c	;volatile
  8162                           
  8163                           ;main.c: 285: PIE1bits.RCIE = 1;
  8164  00522C  8A9D               	bsf	3997,5,c	;volatile
  8165  00522E  D000               	goto	l13910
  8166  005230                     l13910:
  8167                           
  8168                           ;main.c: 286: }
  8169                           ;main.c: 287: ConnectedOLD = Connected;
  8170  005230  C3E2  F3E0         	movff	main@Connected,main@ConnectedOLD
  8171  005234                     l13912:
  8172                           
  8173                           ;main.c: 288: VoltageStatusOLD = VoltageStatus;
  8174  005234  C3E4  F3E1         	movff	main@VoltageStatus,main@VoltageStatusOLD
  8175  005238  D5C2               	goto	l13740
  8176  00523A  EFE5  F000         	goto	start
  8177  00523E                     __end_of_main:
  8178                           	opt stack 0
  8179                           tblptru	equ	0xFF8
  8180                           tblptrh	equ	0xFF7
  8181                           tblptrl	equ	0xFF6
  8182                           tablat	equ	0xFF5
  8183                           intcon	equ	0xFF2
  8184                           postinc0	equ	0xFEE
  8185                           wreg	equ	0xFE8
  8186                           postdec1	equ	0xFE5
  8187                           fsr1l	equ	0xFE1
  8188                           status	equ	0xFD8
  8189                           
  8190 ;; *************** function _UseIRCode *****************
  8191 ;; Defined at:
  8192 ;;		line 271 in file "IR.c"
  8193 ;; Parameters:    Size  Location     Type
  8194 ;;  Code            2  134[BANK0 ] PTR unsigned char 
  8195 ;;		 -> IR_New_Code(1), 
  8196 ;;  NEC             4  136[BANK0 ] unsigned long 
  8197 ;; Auto vars:     Size  Location     Type
  8198 ;;  i               1  145[BANK0 ] unsigned char 
  8199 ;;  j               1  144[BANK0 ] unsigned char 
  8200 ;;  found           1  143[BANK0 ] unsigned char 
  8201 ;; Return value:  Size  Location     Type
  8202 ;;		None               void
  8203 ;; Registers used:
  8204 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8205 ;; Tracked objects:
  8206 ;;		On entry : 0/0
  8207 ;;		On exit  : 0/0
  8208 ;;		Unchanged: 0/0
  8209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8210 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8211 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8212 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8213 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8214 ;;Total ram usage:       12 bytes
  8215 ;; Hardware stack levels used:    1
  8216 ;; Hardware stack levels required when called:   10
  8217 ;; This function calls:
  8218 ;;		_DecodeNEC
  8219 ;;		_LEDTimerON
  8220 ;;		_ReadCodeButtons
  8221 ;;		_ReadIRpin
  8222 ;;		_ReadPushButton
  8223 ;;		_SendRF_Channel
  8224 ;;		_SyncGlobalToEEPROM
  8225 ;;		_delayUS
  8226 ;; This function is called by:
  8227 ;;		_main
  8228 ;; This function uses a non-reentrant model
  8229 ;;
  8230                           
  8231                           	psect	text1
  8232  0070B8                     __ptext1:
  8233                           	opt stack 0
  8234  0070B8                     _UseIRCode:
  8235                           	opt stack 20
  8236                           
  8237                           ;IR.c: 273: unsigned char i,j;
  8238                           ;IR.c: 274: unsigned char found = 0;
  8239                           
  8240                           ;incstack = 0
  8241  0070B8  0E00               	movlw	0
  8242  0070BA  0100               	movlb	0	; () banked
  8243  0070BC  6FEF               	movwf	UseIRCode@found& (0+255),b
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;IR.c: 276: LEDTimerON();
  8247  0070BE  ECB0  F054         	call	_LEDTimerON	;wreg free
  8248                           
  8249                           ;IR.c: 277: if(*Code == 2 || *Code == 1)
  8250  0070C2  C0E6  FFD9         	movff	UseIRCode@Code,fsr2l
  8251  0070C6  C0E7  FFDA         	movff	UseIRCode@Code+1,fsr2h
  8252  0070CA  0E02               	movlw	2
  8253  0070CC  18DE               	xorwf	postinc2,w,c
  8254  0070CE  B4D8               	btfsc	status,2,c
  8255  0070D0  D007               	goto	l12378
  8256  0070D2  C0E6  FFD9         	movff	UseIRCode@Code,fsr2l
  8257  0070D6  C0E7  FFDA         	movff	UseIRCode@Code+1,fsr2h
  8258  0070DA  04DE               	decf	postinc2,w,c
  8259  0070DC  A4D8               	btfss	status,2,c
  8260  0070DE  D109               	goto	l12464
  8261  0070E0                     l12378:
  8262                           
  8263                           ;IR.c: 278: {
  8264                           ;IR.c: 279: DecodeNEC(NEC, &IRaddress, &IRcommand);
  8265  0070E0  C0E8  F064         	movff	UseIRCode@NEC,DecodeNEC@Nec
  8266  0070E4  C0E9  F065         	movff	UseIRCode@NEC+1,DecodeNEC@Nec+1
  8267  0070E8  C0EA  F066         	movff	UseIRCode@NEC+2,DecodeNEC@Nec+2
  8268  0070EC  C0EB  F067         	movff	UseIRCode@NEC+3,DecodeNEC@Nec+3
  8269  0070F0  0EFD               	movlw	low _IRaddress
  8270  0070F2  0100               	movlb	0	; () banked
  8271  0070F4  6F68               	movwf	DecodeNEC@address& (0+255),b
  8272  0070F6  0E00               	movlw	high _IRaddress
  8273  0070F8  0100               	movlb	0	; () banked
  8274  0070FA  6F69               	movwf	(DecodeNEC@address+1)& (0+255),b
  8275  0070FC  0EFE               	movlw	low _IRcommand
  8276  0070FE  0100               	movlb	0	; () banked
  8277  007100  6F6A               	movwf	DecodeNEC@command& (0+255),b
  8278  007102  0E00               	movlw	high _IRcommand
  8279  007104  0100               	movlb	0	; () banked
  8280  007106  6F6B               	movwf	(DecodeNEC@command+1)& (0+255),b
  8281  007108  EC1E  F04C         	call	_DecodeNEC	;wreg free
  8282                           
  8283                           ;IR.c: 280: if(ReadPushButton())
  8284  00710C  ECDC  F054         	call	_ReadPushButton	;wreg free
  8285  007110  0900               	iorlw	0
  8286  007112  B4D8               	btfsc	status,2,c
  8287  007114  D055               	goto	l12418
  8288                           
  8289                           ;IR.c: 281: {
  8290                           ;IR.c: 282: Global1.SWNECcode = NEC;
  8291  007116  C0E8  F2D6         	movff	UseIRCode@NEC,_Global1+1
  8292  00711A  C0E9  F2D7         	movff	UseIRCode@NEC+1,_Global1+2
  8293  00711E  C0EA  F2D8         	movff	UseIRCode@NEC+2,_Global1+3
  8294  007122  C0EB  F2D9         	movff	UseIRCode@NEC+3,_Global1+4
  8295                           
  8296                           ;IR.c: 283: if(SyncGlobalToEEPROM())
  8297  007126  EC69  F04D         	call	_SyncGlobalToEEPROM	;wreg free
  8298  00712A  0900               	iorlw	0
  8299  00712C  B4D8               	btfsc	status,2,c
  8300  00712E  D024               	goto	l12402
  8301                           
  8302                           ;IR.c: 284: {
  8303                           ;IR.c: 286: for(i =0;i<10;i++)
  8304  007130  0E00               	movlw	0
  8305  007132  0100               	movlb	0	; () banked
  8306  007134  6FF1               	movwf	UseIRCode@i& (0+255),b
  8307  007136                     l12388:
  8308                           
  8309                           ; BSR set to: 0
  8310  007136  0E09               	movlw	9
  8311  007138  0100               	movlb	0	; () banked
  8312  00713A  65F1               	cpfsgt	UseIRCode@i& (0+255),b
  8313  00713C  D001               	goto	l12392
  8314                           
  8315                           ; BSR set to: 0
  8316  00713E  D0D9               	goto	l12464
  8317  007140                     l12392:
  8318                           
  8319                           ; BSR set to: 0
  8320                           ;IR.c: 287: {
  8321                           ;IR.c: 288: (LATC |= 0x04);
  8322  007140  848B               	bsf	3979,2,c	;volatile
  8323                           
  8324                           ; BSR set to: 0
  8325                           ;IR.c: 289: delayUS(50000);
  8326  007142  0E50               	movlw	80
  8327  007144  0100               	movlb	0	; () banked
  8328  007146  6F60               	movwf	delayUS@US& (0+255),b
  8329  007148  0EC3               	movlw	195
  8330  00714A  6F61               	movwf	(delayUS@US+1)& (0+255),b
  8331  00714C  0E00               	movlw	0
  8332  00714E  6F62               	movwf	(delayUS@US+2)& (0+255),b
  8333  007150  0E00               	movlw	0
  8334  007152  6F63               	movwf	(delayUS@US+3)& (0+255),b
  8335  007154  EC3F  F051         	call	_delayUS	;wreg free
  8336                           
  8337                           ;IR.c: 290: (LATC &= ~0x04);
  8338  007158  948B               	bcf	3979,2,c	;volatile
  8339                           
  8340                           ;IR.c: 291: delayUS(50000);
  8341  00715A  0E50               	movlw	80
  8342  00715C  0100               	movlb	0	; () banked
  8343  00715E  6F60               	movwf	delayUS@US& (0+255),b
  8344  007160  0EC3               	movlw	195
  8345  007162  6F61               	movwf	(delayUS@US+1)& (0+255),b
  8346  007164  0E00               	movlw	0
  8347  007166  6F62               	movwf	(delayUS@US+2)& (0+255),b
  8348  007168  0E00               	movlw	0
  8349  00716A  6F63               	movwf	(delayUS@US+3)& (0+255),b
  8350  00716C  EC3F  F051         	call	_delayUS	;wreg free
  8351  007170  0100               	movlb	0	; () banked
  8352  007172  2BF1               	incf	UseIRCode@i& (0+255),f,b
  8353  007174  D7E0               	goto	l12388
  8354                           
  8355                           ; BSR set to: 0
  8356                           ;IR.c: 292: }
  8357                           ;IR.c: 293: }
  8358                           
  8359                           ; BSR set to: 0
  8360  007176  D0BD               	goto	l12464
  8361  007178                     l12402:
  8362                           
  8363                           ;IR.c: 294: else
  8364                           ;IR.c: 295: {
  8365                           ;IR.c: 297: for(i =0;i<10;i++)
  8366  007178  0E00               	movlw	0
  8367  00717A  0100               	movlb	0	; () banked
  8368  00717C  6FF1               	movwf	UseIRCode@i& (0+255),b
  8369  00717E                     l12404:
  8370                           
  8371                           ; BSR set to: 0
  8372  00717E  0E09               	movlw	9
  8373  007180  0100               	movlb	0	; () banked
  8374  007182  65F1               	cpfsgt	UseIRCode@i& (0+255),b
  8375  007184  D001               	goto	l12408
  8376                           
  8377                           ; BSR set to: 0
  8378  007186  D0B5               	goto	l12464
  8379  007188                     l12408:
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;IR.c: 298: {
  8383                           ;IR.c: 299: (LATC |= 0x02);
  8384  007188  828B               	bsf	3979,1,c	;volatile
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;IR.c: 300: delayUS(50000);
  8388  00718A  0E50               	movlw	80
  8389  00718C  0100               	movlb	0	; () banked
  8390  00718E  6F60               	movwf	delayUS@US& (0+255),b
  8391  007190  0EC3               	movlw	195
  8392  007192  6F61               	movwf	(delayUS@US+1)& (0+255),b
  8393  007194  0E00               	movlw	0
  8394  007196  6F62               	movwf	(delayUS@US+2)& (0+255),b
  8395  007198  0E00               	movlw	0
  8396  00719A  6F63               	movwf	(delayUS@US+3)& (0+255),b
  8397  00719C  EC3F  F051         	call	_delayUS	;wreg free
  8398                           
  8399                           ;IR.c: 301: (LATC &= ~0x02);
  8400  0071A0  928B               	bcf	3979,1,c	;volatile
  8401                           
  8402                           ;IR.c: 302: delayUS(50000);
  8403  0071A2  0E50               	movlw	80
  8404  0071A4  0100               	movlb	0	; () banked
  8405  0071A6  6F60               	movwf	delayUS@US& (0+255),b
  8406  0071A8  0EC3               	movlw	195
  8407  0071AA  6F61               	movwf	(delayUS@US+1)& (0+255),b
  8408  0071AC  0E00               	movlw	0
  8409  0071AE  6F62               	movwf	(delayUS@US+2)& (0+255),b
  8410  0071B0  0E00               	movlw	0
  8411  0071B2  6F63               	movwf	(delayUS@US+3)& (0+255),b
  8412  0071B4  EC3F  F051         	call	_delayUS	;wreg free
  8413  0071B8  0100               	movlb	0	; () banked
  8414  0071BA  2BF1               	incf	UseIRCode@i& (0+255),f,b
  8415  0071BC  D7E0               	goto	l12404
  8416                           
  8417                           ; BSR set to: 0
  8418                           ;IR.c: 303: }
  8419                           ;IR.c: 304: }
  8420                           ;IR.c: 305: }
  8421                           
  8422                           ; BSR set to: 0
  8423                           
  8424                           ; BSR set to: 0
  8425  0071BE  D099               	goto	l12464
  8426  0071C0                     l12418:
  8427                           
  8428                           ;IR.c: 306: else
  8429                           ;IR.c: 307: {
  8430                           ;IR.c: 308: if(NEC == Global1.SWNECcode)
  8431  0071C0  0100               	movlb	0	; () banked
  8432  0071C2  51E8               	movf	UseIRCode@NEC& (0+255),w,b
  8433  0071C4  0102               	movlb	2	; () banked
  8434  0071C6  19D6               	xorwf	(_Global1+1)& (0+255),w,b
  8435  0071C8  E121               	bnz	l12428
  8436  0071CA  0100               	movlb	0	; () banked
  8437  0071CC  51E9               	movf	(UseIRCode@NEC+1)& (0+255),w,b
  8438  0071CE  0102               	movlb	2	; () banked
  8439  0071D0  19D7               	xorwf	(_Global1+2)& (0+255),w,b
  8440  0071D2  E11C               	bnz	l12428
  8441  0071D4  0100               	movlb	0	; () banked
  8442  0071D6  51EA               	movf	(UseIRCode@NEC+2)& (0+255),w,b
  8443  0071D8  0102               	movlb	2	; () banked
  8444  0071DA  19D8               	xorwf	(_Global1+3)& (0+255),w,b
  8445  0071DC  E117               	bnz	l12428
  8446  0071DE  0100               	movlb	0	; () banked
  8447  0071E0  51EB               	movf	(UseIRCode@NEC+3)& (0+255),w,b
  8448  0071E2  0102               	movlb	2	; () banked
  8449  0071E4  19D9               	xorwf	(_Global1+4)& (0+255),w,b
  8450  0071E6  A4D8               	btfss	status,2,c
  8451  0071E8  D011               	goto	l12428
  8452                           
  8453                           ; BSR set to: 2
  8454                           ;IR.c: 309: {
  8455                           ;IR.c: 310: if(*Code == 2)
  8456  0071EA  C0E6  FFD9         	movff	UseIRCode@Code,fsr2l
  8457  0071EE  C0E7  FFDA         	movff	UseIRCode@Code+1,fsr2h
  8458  0071F2  0E02               	movlw	2
  8459  0071F4  18DE               	xorwf	postinc2,w,c
  8460  0071F6  B4D8               	btfsc	status,2,c
  8461                           
  8462                           ; BSR set to: 2
  8463                           ;IR.c: 311: {
  8464                           ;IR.c: 312: (LATC |= 0x02);
  8465  0071F8  828B               	bsf	3979,1,c	;volatile
  8466                           
  8467                           ; BSR set to: 2
  8468                           ;IR.c: 313: }
  8469                           ;IR.c: 314: (LATC |= 0x04);
  8470  0071FA  848B               	bsf	3979,2,c	;volatile
  8471                           
  8472                           ; BSR set to: 2
  8473                           ;IR.c: 315: SendRF_Channel(ReadCodeButtons());
  8474  0071FC  EC6A  F051         	call	_ReadCodeButtons	;wreg free
  8475  007200  ECDD  F035         	call	_SendRF_Channel
  8476                           
  8477                           ;IR.c: 316: found = 1;
  8478  007204  0E01               	movlw	1
  8479  007206  0100               	movlb	0	; () banked
  8480  007208  6FEF               	movwf	UseIRCode@found& (0+255),b
  8481  00720A  D000               	goto	l12428
  8482  00720C                     l12428:
  8483                           
  8484                           ;IR.c: 317: }
  8485                           ;IR.c: 319: for(j=0; j < 3; j++)
  8486  00720C  0E00               	movlw	0
  8487  00720E  0100               	movlb	0	; () banked
  8488  007210  6FF0               	movwf	UseIRCode@j& (0+255),b
  8489  007212                     l12430:
  8490                           
  8491                           ; BSR set to: 0
  8492  007212  0E02               	movlw	2
  8493  007214  0100               	movlb	0	; () banked
  8494  007216  65F0               	cpfsgt	UseIRCode@j& (0+255),b
  8495  007218  D001               	goto	l12434
  8496                           
  8497                           ; BSR set to: 0
  8498  00721A  D064               	goto	l12460
  8499  00721C                     l12434:
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;IR.c: 320: {
  8503                           ;IR.c: 321: for(i=0; i < 10; i++)
  8504  00721C  0E00               	movlw	0
  8505  00721E  0100               	movlb	0	; () banked
  8506  007220  6FF1               	movwf	UseIRCode@i& (0+255),b
  8507  007222                     l12436:
  8508                           
  8509                           ; BSR set to: 0
  8510  007222  0E09               	movlw	9
  8511  007224  0100               	movlb	0	; () banked
  8512  007226  65F1               	cpfsgt	UseIRCode@i& (0+255),b
  8513  007228  D001               	goto	l12440
  8514                           
  8515                           ; BSR set to: 0
  8516  00722A  D059               	goto	l12456
  8517  00722C                     l12440:
  8518                           
  8519                           ; BSR set to: 0
  8520                           ;IR.c: 322: {
  8521                           ;IR.c: 324: if(IRaddress == Global2.RemoteButtonRF[i][j][0])
  8522  00722C  0100               	movlb	0	; () banked
  8523  00722E  51F1               	movf	UseIRCode@i& (0+255),w,b
  8524  007230  0D06               	mullw	6
  8525  007232  0E95               	movlw	low _Global2
  8526  007234  0100               	movlb	0	; () banked
  8527  007236  6FEC               	movwf	??_UseIRCode& (0+255),b
  8528  007238  0E02               	movlw	high _Global2
  8529  00723A  0100               	movlb	0	; () banked
  8530  00723C  6FED               	movwf	(??_UseIRCode+1)& (0+255),b
  8531  00723E  50F3               	movf	prodl,w,c
  8532  007240  0100               	movlb	0	; () banked
  8533  007242  27EC               	addwf	??_UseIRCode& (0+255),f,b
  8534  007244  50F4               	movf	prodh,w,c
  8535  007246  0100               	movlb	0	; () banked
  8536  007248  23ED               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  8537  00724A  0100               	movlb	0	; () banked
  8538  00724C  51F0               	movf	UseIRCode@j& (0+255),w,b
  8539  00724E  0D02               	mullw	2
  8540  007250  50F3               	movf	prodl,w,c
  8541  007252  0100               	movlb	0	; () banked
  8542  007254  25EC               	addwf	??_UseIRCode& (0+255),w,b
  8543  007256  6ED9               	movwf	fsr2l,c
  8544  007258  50F4               	movf	prodh,w,c
  8545  00725A  0100               	movlb	0	; () banked
  8546  00725C  21ED               	addwfc	(??_UseIRCode+1)& (0+255),w,b
  8547  00725E  6EDA               	movwf	fsr2h,c
  8548  007260  0100               	movlb	0	; () banked
  8549  007262  51FD               	movf	_IRaddress& (0+255),w,b
  8550  007264  18DE               	xorwf	postinc2,w,c
  8551  007266  A4D8               	btfss	status,2,c
  8552  007268  D037               	goto	l12452
  8553                           
  8554                           ; BSR set to: 0
  8555                           ;IR.c: 325: {
  8556                           ;IR.c: 326: if(IRcommand == Global2.RemoteButtonRF[i][j][1])
  8557  00726A  0100               	movlb	0	; () banked
  8558  00726C  51F1               	movf	UseIRCode@i& (0+255),w,b
  8559  00726E  0D06               	mullw	6
  8560  007270  0E95               	movlw	low _Global2
  8561  007272  0100               	movlb	0	; () banked
  8562  007274  6FEC               	movwf	??_UseIRCode& (0+255),b
  8563  007276  0E02               	movlw	high _Global2
  8564  007278  0100               	movlb	0	; () banked
  8565  00727A  6FED               	movwf	(??_UseIRCode+1)& (0+255),b
  8566  00727C  50F3               	movf	prodl,w,c
  8567  00727E  0100               	movlb	0	; () banked
  8568  007280  27EC               	addwf	??_UseIRCode& (0+255),f,b
  8569  007282  50F4               	movf	prodh,w,c
  8570  007284  0100               	movlb	0	; () banked
  8571  007286  23ED               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  8572  007288  0100               	movlb	0	; () banked
  8573  00728A  51F0               	movf	UseIRCode@j& (0+255),w,b
  8574  00728C  0D02               	mullw	2
  8575  00728E  50F3               	movf	prodl,w,c
  8576  007290  0100               	movlb	0	; () banked
  8577  007292  27EC               	addwf	??_UseIRCode& (0+255),f,b
  8578  007294  50F4               	movf	prodh,w,c
  8579  007296  0100               	movlb	0	; () banked
  8580  007298  23ED               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  8581  00729A  0E01               	movlw	1
  8582  00729C  0100               	movlb	0	; () banked
  8583  00729E  25EC               	addwf	??_UseIRCode& (0+255),w,b
  8584  0072A0  6ED9               	movwf	fsr2l,c
  8585  0072A2  0E00               	movlw	0
  8586  0072A4  0100               	movlb	0	; () banked
  8587  0072A6  21ED               	addwfc	(??_UseIRCode+1)& (0+255),w,b
  8588  0072A8  6EDA               	movwf	fsr2h,c
  8589  0072AA  0100               	movlb	0	; () banked
  8590  0072AC  51FE               	movf	_IRcommand& (0+255),w,b
  8591  0072AE  18DE               	xorwf	postinc2,w,c
  8592  0072B0  A4D8               	btfss	status,2,c
  8593  0072B2  D012               	goto	l12452
  8594                           
  8595                           ; BSR set to: 0
  8596                           ;IR.c: 327: {
  8597                           ;IR.c: 328: if(*Code == 2)
  8598  0072B4  C0E6  FFD9         	movff	UseIRCode@Code,fsr2l
  8599  0072B8  C0E7  FFDA         	movff	UseIRCode@Code+1,fsr2h
  8600  0072BC  0E02               	movlw	2
  8601  0072BE  18DE               	xorwf	postinc2,w,c
  8602  0072C0  A4D8               	btfss	status,2,c
  8603  0072C2  D002               	goto	l12448
  8604                           
  8605                           ; BSR set to: 0
  8606                           ;IR.c: 329: {
  8607                           ;IR.c: 330: (LATC |= 0x02);
  8608  0072C4  828B               	bsf	3979,1,c	;volatile
  8609  0072C6  D000               	goto	l12448
  8610  0072C8                     l12448:
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;IR.c: 331: }
  8614                           ;IR.c: 332: SendRF_Channel(i);
  8615  0072C8  0100               	movlb	0	; () banked
  8616  0072CA  51F1               	movf	UseIRCode@i& (0+255),w,b
  8617  0072CC  ECDD  F035         	call	_SendRF_Channel
  8618                           
  8619                           ;IR.c: 333: found = 1;
  8620  0072D0  0E01               	movlw	1
  8621  0072D2  0100               	movlb	0	; () banked
  8622  0072D4  6FEF               	movwf	UseIRCode@found& (0+255),b
  8623                           
  8624                           ; BSR set to: 0
  8625  0072D6  D000               	goto	l12452
  8626  0072D8                     l12452:
  8627                           
  8628                           ; BSR set to: 0
  8629  0072D8  0100               	movlb	0	; () banked
  8630  0072DA  2BF1               	incf	UseIRCode@i& (0+255),f,b
  8631  0072DC  D7A2               	goto	l12436
  8632  0072DE                     l12456:
  8633                           
  8634                           ; BSR set to: 0
  8635  0072DE  0100               	movlb	0	; () banked
  8636  0072E0  2BF0               	incf	UseIRCode@j& (0+255),f,b
  8637  0072E2  D797               	goto	l12430
  8638  0072E4                     l12460:
  8639                           
  8640                           ; BSR set to: 0
  8641                           ;IR.c: 334: }
  8642                           ;IR.c: 335: }
  8643                           ;IR.c: 336: }
  8644                           ;IR.c: 337: }
  8645                           ;IR.c: 339: if(found == 0)
  8646  0072E4  0100               	movlb	0	; () banked
  8647  0072E6  51EF               	movf	UseIRCode@found& (0+255),w,b
  8648  0072E8  0100               	movlb	0	; () banked
  8649  0072EA  A4D8               	btfss	status,2,c
  8650  0072EC  D002               	goto	l12464
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;IR.c: 340: {
  8654                           ;IR.c: 341: (LATC |= 0x02);
  8655  0072EE  828B               	bsf	3979,1,c	;volatile
  8656                           
  8657                           ; BSR set to: 0
  8658                           
  8659                           ; BSR set to: 0
  8660  0072F0  D000               	goto	l12464
  8661  0072F2                     l12464:
  8662                           
  8663                           ;IR.c: 342: }
  8664                           ;IR.c: 343: }
  8665                           ;IR.c: 344: }
  8666                           ;IR.c: 345: *Code = 0;
  8667  0072F2  C0E6  FFD9         	movff	UseIRCode@Code,fsr2l
  8668  0072F6  C0E7  FFDA         	movff	UseIRCode@Code+1,fsr2h
  8669  0072FA  0E00               	movlw	0
  8670  0072FC  6EDF               	movwf	indf2,c
  8671                           
  8672                           ;IR.c: 346: IRpinOLD = ReadIRpin();
  8673  0072FE  ECF8  F054         	call	_ReadIRpin	;wreg free
  8674  007302  6E40               	movwf	_IRpinOLD,c
  8675                           
  8676                           ;IR.c: 347: INTCONbits.RBIF = 0;
  8677  007304  90F2               	bcf	intcon,0,c	;volatile
  8678                           
  8679                           ;IR.c: 348: (IOCBbits.IOCB4 = 1);
  8680  007306  887D               	bsf	3965,4,c	;volatile
  8681                           
  8682                           ;IR.c: 349: INTCONbits.RBIE = 1;
  8683  007308  86F2               	bsf	intcon,3,c	;volatile
  8684  00730A  0012               	return		;funcret
  8685  00730C                     __end_of_UseIRCode:
  8686                           	opt stack 0
  8687                           tblptru	equ	0xFF8
  8688                           tblptrh	equ	0xFF7
  8689                           tblptrl	equ	0xFF6
  8690                           tablat	equ	0xFF5
  8691                           prodh	equ	0xFF4
  8692                           prodl	equ	0xFF3
  8693                           intcon	equ	0xFF2
  8694                           postinc0	equ	0xFEE
  8695                           wreg	equ	0xFE8
  8696                           postdec1	equ	0xFE5
  8697                           fsr1l	equ	0xFE1
  8698                           indf2	equ	0xFDF
  8699                           postinc2	equ	0xFDE
  8700                           fsr2h	equ	0xFDA
  8701                           fsr2l	equ	0xFD9
  8702                           status	equ	0xFD8
  8703                           
  8704 ;; *************** function _SendRF_Channel *****************
  8705 ;; Defined at:
  8706 ;;		line 165 in file "RF.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;  channel         1    wreg     unsigned char 
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;  channel         1   13[BANK0 ] unsigned char 
  8711 ;; Return value:  Size  Location     Type
  8712 ;;		None               void
  8713 ;; Registers used:
  8714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8715 ;; Tracked objects:
  8716 ;;		On entry : 0/0
  8717 ;;		On exit  : 0/0
  8718 ;;		Unchanged: 0/0
  8719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8723 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8724 ;;Total ram usage:        1 bytes
  8725 ;; Hardware stack levels used:    1
  8726 ;; Hardware stack levels required when called:    8
  8727 ;; This function calls:
  8728 ;;		_SendRF_wait
  8729 ;; This function is called by:
  8730 ;;		_UseIRCode
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           	psect	text2
  8735  006BBA                     __ptext2:
  8736                           	opt stack 0
  8737  006BBA                     _SendRF_Channel:
  8738                           	opt stack 21
  8739                           
  8740                           ;incstack = 0
  8741                           ;SendRF_Channel@channel stored from wreg
  8742  006BBA  0100               	movlb	0	; () banked
  8743  006BBC  6F6D               	movwf	SendRF_Channel@channel& (0+255),b
  8744                           
  8745                           ; BSR set to: 0
  8746                           ;RF.c: 167: switch (channel)
  8747  006BBE  D121               	goto	l12172
  8748  006BC0                     l12114:
  8749                           
  8750                           ; BSR set to: 0
  8751                           ;RF.c: 171: SendRF_wait(Conf1_ChannelD,1,12,5);
  8752  006BC0  0E13               	movlw	low _Conf1_ChannelD
  8753  006BC2  0100               	movlb	0	; () banked
  8754  006BC4  6F68               	movwf	SendRF_wait@Code& (0+255),b
  8755  006BC6  0EF0               	movlw	high _Conf1_ChannelD
  8756  006BC8  0100               	movlb	0	; () banked
  8757  006BCA  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8758  006BCC  0E01               	movlw	1
  8759  006BCE  0100               	movlb	0	; () banked
  8760  006BD0  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  8761  006BD2  0E0C               	movlw	12
  8762  006BD4  0100               	movlb	0	; () banked
  8763  006BD6  6F6B               	movwf	SendRF_wait@size& (0+255),b
  8764  006BD8  0E05               	movlw	5
  8765  006BDA  0100               	movlb	0	; () banked
  8766  006BDC  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  8767  006BDE  EC67  F052         	call	_SendRF_wait	;wreg free
  8768                           
  8769                           ;RF.c: 172: break;
  8770  006BE2  0012               	return	
  8771  006BE4                     l12116:
  8772                           
  8773                           ;RF.c: 175: SendRF_wait(Conf1_ChannelE,1,12,5);
  8774  006BE4  0E1F               	movlw	low _Conf1_ChannelE
  8775  006BE6  0100               	movlb	0	; () banked
  8776  006BE8  6F68               	movwf	SendRF_wait@Code& (0+255),b
  8777  006BEA  0EF0               	movlw	high _Conf1_ChannelE
  8778  006BEC  0100               	movlb	0	; () banked
  8779  006BEE  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8780  006BF0  0E01               	movlw	1
  8781  006BF2  0100               	movlb	0	; () banked
  8782  006BF4  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  8783  006BF6  0E0C               	movlw	12
  8784  006BF8  0100               	movlb	0	; () banked
  8785  006BFA  6F6B               	movwf	SendRF_wait@size& (0+255),b
  8786  006BFC  0E05               	movlw	5
  8787  006BFE  0100               	movlb	0	; () banked
  8788  006C00  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  8789  006C02  EC67  F052         	call	_SendRF_wait	;wreg free
  8790                           
  8791                           ;RF.c: 176: break;
  8792  006C06  0012               	return	
  8793  006C08                     l12118:
  8794                           
  8795                           ;RF.c: 179: SendRF_wait(Conf1_ChannelF,1,12,5);
  8796  006C08  0E2B               	movlw	low _Conf1_ChannelF
  8797  006C0A  0100               	movlb	0	; () banked
  8798  006C0C  6F68               	movwf	SendRF_wait@Code& (0+255),b
  8799  006C0E  0EF0               	movlw	high _Conf1_ChannelF
  8800  006C10  0100               	movlb	0	; () banked
  8801  006C12  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8802  006C14  0E01               	movlw	1
  8803  006C16  0100               	movlb	0	; () banked
  8804  006C18  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  8805  006C1A  0E0C               	movlw	12
  8806  006C1C  0100               	movlb	0	; () banked
  8807  006C1E  6F6B               	movwf	SendRF_wait@size& (0+255),b
  8808  006C20  0E05               	movlw	5
  8809  006C22  0100               	movlb	0	; () banked
  8810  006C24  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  8811  006C26  EC67  F052         	call	_SendRF_wait	;wreg free
  8812                           
  8813                           ;RF.c: 180: break;
  8814  006C2A  0012               	return	
  8815  006C2C                     l12120:
  8816                           
  8817                           ;RF.c: 183: if(Conf2_ChannelB_Status)
  8818  006C2C  0100               	movlb	0	; () banked
  8819  006C2E  51F5               	movf	_Conf2_ChannelB_Status& (0+255),w,b
  8820  006C30  0100               	movlb	0	; () banked
  8821  006C32  B4D8               	btfsc	status,2,c
  8822  006C34  D015               	goto	l12126
  8823                           
  8824                           ; BSR set to: 0
  8825                           ;RF.c: 184: {
  8826                           ;RF.c: 185: SendRF_wait(Conf2_ChannelB_OFF,2,16,5);
  8827  006C36  0E38               	movlw	low _Conf2_ChannelB_OFF
  8828  006C38  0100               	movlb	0	; () banked
  8829  006C3A  6F68               	movwf	SendRF_wait@Code& (0+255),b
  8830  006C3C  0EEF               	movlw	high _Conf2_ChannelB_OFF
  8831  006C3E  0100               	movlb	0	; () banked
  8832  006C40  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8833  006C42  0E02               	movlw	2
  8834  006C44  0100               	movlb	0	; () banked
  8835  006C46  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  8836  006C48  0E10               	movlw	16
  8837  006C4A  0100               	movlb	0	; () banked
  8838  006C4C  6F6B               	movwf	SendRF_wait@size& (0+255),b
  8839  006C4E  0E05               	movlw	5
  8840  006C50  0100               	movlb	0	; () banked
  8841  006C52  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  8842  006C54  EC67  F052         	call	_SendRF_wait	;wreg free
  8843                           
  8844                           ;RF.c: 186: Conf2_ChannelB_Status = 0;
  8845  006C58  0E00               	movlw	0
  8846  006C5A  0100               	movlb	0	; () banked
  8847  006C5C  6FF5               	movwf	_Conf2_ChannelB_Status& (0+255),b
  8848                           
  8849                           ;RF.c: 187: }
  8850  006C5E  0012               	return	
  8851  006C60                     l12126:
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;RF.c: 188: else
  8855                           ;RF.c: 189: {
  8856                           ;RF.c: 190: SendRF_wait(Conf2_ChannelB_ON,2,16,5);
  8857  006C60  0E48               	movlw	low _Conf2_ChannelB_ON
  8858  006C62  0100               	movlb	0	; () banked
  8859  006C64  6F68               	movwf	SendRF_wait@Code& (0+255),b
  8860  006C66  0EEF               	movlw	high _Conf2_ChannelB_ON
  8861  006C68  0100               	movlb	0	; () banked
  8862  006C6A  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8863  006C6C  0E02               	movlw	2
  8864  006C6E  0100               	movlb	0	; () banked
  8865  006C70  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  8866  006C72  0E10               	movlw	16
  8867  006C74  0100               	movlb	0	; () banked
  8868  006C76  6F6B               	movwf	SendRF_wait@size& (0+255),b
  8869  006C78  0E05               	movlw	5
  8870  006C7A  0100               	movlb	0	; () banked
  8871  006C7C  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  8872  006C7E  EC67  F052         	call	_SendRF_wait	;wreg free
  8873                           
  8874                           ;RF.c: 191: Conf2_ChannelB_Status = 1;
  8875  006C82  0E01               	movlw	1
  8876  006C84  0100               	movlb	0	; () banked
  8877  006C86  6FF5               	movwf	_Conf2_ChannelB_Status& (0+255),b
  8878                           
  8879                           ; BSR set to: 0
  8880                           ;RF.c: 192: }
  8881                           ;RF.c: 193: break;
  8882  006C88  0012               	return	
  8883  006C8A                     l12130:
  8884                           
  8885                           ; BSR set to: 0
  8886                           ;RF.c: 196: if(Conf2_ChannelD_Status)
  8887  006C8A  0100               	movlb	0	; () banked
  8888  006C8C  51F6               	movf	_Conf2_ChannelD_Status& (0+255),w,b
  8889  006C8E  0100               	movlb	0	; () banked
  8890  006C90  B4D8               	btfsc	status,2,c
  8891  006C92  D015               	goto	l12136
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;RF.c: 197: {
  8895                           ;RF.c: 198: SendRF_wait(Conf2_ChannelD_OFF,2,16,5);
  8896  006C94  0E58               	movlw	low _Conf2_ChannelD_OFF
  8897  006C96  0100               	movlb	0	; () banked
  8898  006C98  6F68               	movwf	SendRF_wait@Code& (0+255),b
  8899  006C9A  0EEF               	movlw	high _Conf2_ChannelD_OFF
  8900  006C9C  0100               	movlb	0	; () banked
  8901  006C9E  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8902  006CA0  0E02               	movlw	2
  8903  006CA2  0100               	movlb	0	; () banked
  8904  006CA4  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  8905  006CA6  0E10               	movlw	16
  8906  006CA8  0100               	movlb	0	; () banked
  8907  006CAA  6F6B               	movwf	SendRF_wait@size& (0+255),b
  8908  006CAC  0E05               	movlw	5
  8909  006CAE  0100               	movlb	0	; () banked
  8910  006CB0  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  8911  006CB2  EC67  F052         	call	_SendRF_wait	;wreg free
  8912                           
  8913                           ;RF.c: 199: Conf2_ChannelD_Status = 0;
  8914  006CB6  0E00               	movlw	0
  8915  006CB8  0100               	movlb	0	; () banked
  8916  006CBA  6FF6               	movwf	_Conf2_ChannelD_Status& (0+255),b
  8917                           
  8918                           ;RF.c: 200: }
  8919  006CBC  0012               	return	
  8920  006CBE                     l12136:
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;RF.c: 201: else
  8924                           ;RF.c: 202: {
  8925                           ;RF.c: 203: SendRF_wait(Conf2_ChannelD_ON,2,16,5);
  8926  006CBE  0E68               	movlw	low _Conf2_ChannelD_ON
  8927  006CC0  0100               	movlb	0	; () banked
  8928  006CC2  6F68               	movwf	SendRF_wait@Code& (0+255),b
  8929  006CC4  0EEF               	movlw	high _Conf2_ChannelD_ON
  8930  006CC6  0100               	movlb	0	; () banked
  8931  006CC8  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8932  006CCA  0E02               	movlw	2
  8933  006CCC  0100               	movlb	0	; () banked
  8934  006CCE  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  8935  006CD0  0E10               	movlw	16
  8936  006CD2  0100               	movlb	0	; () banked
  8937  006CD4  6F6B               	movwf	SendRF_wait@size& (0+255),b
  8938  006CD6  0E05               	movlw	5
  8939  006CD8  0100               	movlb	0	; () banked
  8940  006CDA  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  8941  006CDC  EC67  F052         	call	_SendRF_wait	;wreg free
  8942                           
  8943                           ;RF.c: 204: Conf2_ChannelD_Status = 1;
  8944  006CE0  0E01               	movlw	1
  8945  006CE2  0100               	movlb	0	; () banked
  8946  006CE4  6FF6               	movwf	_Conf2_ChannelD_Status& (0+255),b
  8947                           
  8948                           ; BSR set to: 0
  8949                           ;RF.c: 205: }
  8950                           ;RF.c: 206: break;
  8951  006CE6  0012               	return	
  8952  006CE8                     l12140:
  8953                           
  8954                           ; BSR set to: 0
  8955                           ;RF.c: 209: if(Conf2_ChannelH_1_Status)
  8956  006CE8  0100               	movlb	0	; () banked
  8957  006CEA  51F7               	movf	_Conf2_ChannelH_1_Status& (0+255),w,b
  8958  006CEC  0100               	movlb	0	; () banked
  8959  006CEE  B4D8               	btfsc	status,2,c
  8960  006CF0  D015               	goto	l12146
  8961                           
  8962                           ; BSR set to: 0
  8963                           ;RF.c: 210: {
  8964                           ;RF.c: 211: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,5);
  8965  006CF2  0E78               	movlw	low _Conf2_ChannelH_1_OFF
  8966  006CF4  0100               	movlb	0	; () banked
  8967  006CF6  6F68               	movwf	SendRF_wait@Code& (0+255),b
  8968  006CF8  0EEF               	movlw	high _Conf2_ChannelH_1_OFF
  8969  006CFA  0100               	movlb	0	; () banked
  8970  006CFC  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8971  006CFE  0E02               	movlw	2
  8972  006D00  0100               	movlb	0	; () banked
  8973  006D02  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  8974  006D04  0E10               	movlw	16
  8975  006D06  0100               	movlb	0	; () banked
  8976  006D08  6F6B               	movwf	SendRF_wait@size& (0+255),b
  8977  006D0A  0E05               	movlw	5
  8978  006D0C  0100               	movlb	0	; () banked
  8979  006D0E  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  8980  006D10  EC67  F052         	call	_SendRF_wait	;wreg free
  8981                           
  8982                           ;RF.c: 212: Conf2_ChannelH_1_Status = 0;
  8983  006D14  0E00               	movlw	0
  8984  006D16  0100               	movlb	0	; () banked
  8985  006D18  6FF7               	movwf	_Conf2_ChannelH_1_Status& (0+255),b
  8986                           
  8987                           ;RF.c: 213: }
  8988  006D1A  0012               	return	
  8989  006D1C                     l12146:
  8990                           
  8991                           ; BSR set to: 0
  8992                           ;RF.c: 214: else
  8993                           ;RF.c: 215: {
  8994                           ;RF.c: 216: SendRF_wait(Conf2_ChannelH_1_ON,2,16,5);
  8995  006D1C  0E88               	movlw	low _Conf2_ChannelH_1_ON
  8996  006D1E  0100               	movlb	0	; () banked
  8997  006D20  6F68               	movwf	SendRF_wait@Code& (0+255),b
  8998  006D22  0EEF               	movlw	high _Conf2_ChannelH_1_ON
  8999  006D24  0100               	movlb	0	; () banked
  9000  006D26  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9001  006D28  0E02               	movlw	2
  9002  006D2A  0100               	movlb	0	; () banked
  9003  006D2C  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9004  006D2E  0E10               	movlw	16
  9005  006D30  0100               	movlb	0	; () banked
  9006  006D32  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9007  006D34  0E05               	movlw	5
  9008  006D36  0100               	movlb	0	; () banked
  9009  006D38  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9010  006D3A  EC67  F052         	call	_SendRF_wait	;wreg free
  9011                           
  9012                           ;RF.c: 217: Conf2_ChannelH_1_Status = 1;
  9013  006D3E  0E01               	movlw	1
  9014  006D40  0100               	movlb	0	; () banked
  9015  006D42  6FF7               	movwf	_Conf2_ChannelH_1_Status& (0+255),b
  9016                           
  9017                           ; BSR set to: 0
  9018                           ;RF.c: 218: }
  9019                           ;RF.c: 219: break;
  9020  006D44  0012               	return	
  9021  006D46                     l12150:
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;RF.c: 222: if(Conf2_ChannelH_2_Status)
  9025  006D46  0100               	movlb	0	; () banked
  9026  006D48  51F8               	movf	_Conf2_ChannelH_2_Status& (0+255),w,b
  9027  006D4A  0100               	movlb	0	; () banked
  9028  006D4C  B4D8               	btfsc	status,2,c
  9029  006D4E  D015               	goto	l12156
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;RF.c: 223: {
  9033                           ;RF.c: 224: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,5);
  9034  006D50  0E98               	movlw	low _Conf2_ChannelH_2_OFF
  9035  006D52  0100               	movlb	0	; () banked
  9036  006D54  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9037  006D56  0EEF               	movlw	high _Conf2_ChannelH_2_OFF
  9038  006D58  0100               	movlb	0	; () banked
  9039  006D5A  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9040  006D5C  0E02               	movlw	2
  9041  006D5E  0100               	movlb	0	; () banked
  9042  006D60  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9043  006D62  0E10               	movlw	16
  9044  006D64  0100               	movlb	0	; () banked
  9045  006D66  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9046  006D68  0E05               	movlw	5
  9047  006D6A  0100               	movlb	0	; () banked
  9048  006D6C  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9049  006D6E  EC67  F052         	call	_SendRF_wait	;wreg free
  9050                           
  9051                           ;RF.c: 225: Conf2_ChannelH_2_Status = 0;
  9052  006D72  0E00               	movlw	0
  9053  006D74  0100               	movlb	0	; () banked
  9054  006D76  6FF8               	movwf	_Conf2_ChannelH_2_Status& (0+255),b
  9055                           
  9056                           ;RF.c: 226: }
  9057  006D78  0012               	return	
  9058  006D7A                     l12156:
  9059                           
  9060                           ; BSR set to: 0
  9061                           ;RF.c: 227: else
  9062                           ;RF.c: 228: {
  9063                           ;RF.c: 229: SendRF_wait(Conf2_ChannelH_2_ON,2,16,5);
  9064  006D7A  0EA8               	movlw	low _Conf2_ChannelH_2_ON
  9065  006D7C  0100               	movlb	0	; () banked
  9066  006D7E  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9067  006D80  0EEF               	movlw	high _Conf2_ChannelH_2_ON
  9068  006D82  0100               	movlb	0	; () banked
  9069  006D84  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9070  006D86  0E02               	movlw	2
  9071  006D88  0100               	movlb	0	; () banked
  9072  006D8A  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9073  006D8C  0E10               	movlw	16
  9074  006D8E  0100               	movlb	0	; () banked
  9075  006D90  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9076  006D92  0E05               	movlw	5
  9077  006D94  0100               	movlb	0	; () banked
  9078  006D96  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9079  006D98  EC67  F052         	call	_SendRF_wait	;wreg free
  9080                           
  9081                           ;RF.c: 230: Conf2_ChannelH_2_Status = 1;
  9082  006D9C  0E01               	movlw	1
  9083  006D9E  0100               	movlb	0	; () banked
  9084  006DA0  6FF8               	movwf	_Conf2_ChannelH_2_Status& (0+255),b
  9085                           
  9086                           ; BSR set to: 0
  9087                           ;RF.c: 231: }
  9088                           ;RF.c: 232: break;
  9089  006DA2  0012               	return	
  9090  006DA4                     l12160:
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;RF.c: 235: if(Conf2_ChannelH_3_Status)
  9094  006DA4  0100               	movlb	0	; () banked
  9095  006DA6  51F9               	movf	_Conf2_ChannelH_3_Status& (0+255),w,b
  9096  006DA8  0100               	movlb	0	; () banked
  9097  006DAA  B4D8               	btfsc	status,2,c
  9098  006DAC  D015               	goto	l12166
  9099                           
  9100                           ; BSR set to: 0
  9101                           ;RF.c: 236: {
  9102                           ;RF.c: 237: SendRF_wait(Conf2_ChannelH_3_OFF,2,16,5);
  9103  006DAE  0EB8               	movlw	low _Conf2_ChannelH_3_OFF
  9104  006DB0  0100               	movlb	0	; () banked
  9105  006DB2  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9106  006DB4  0EEF               	movlw	high _Conf2_ChannelH_3_OFF
  9107  006DB6  0100               	movlb	0	; () banked
  9108  006DB8  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9109  006DBA  0E02               	movlw	2
  9110  006DBC  0100               	movlb	0	; () banked
  9111  006DBE  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9112  006DC0  0E10               	movlw	16
  9113  006DC2  0100               	movlb	0	; () banked
  9114  006DC4  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9115  006DC6  0E05               	movlw	5
  9116  006DC8  0100               	movlb	0	; () banked
  9117  006DCA  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9118  006DCC  EC67  F052         	call	_SendRF_wait	;wreg free
  9119                           
  9120                           ;RF.c: 238: Conf2_ChannelH_3_Status = 0;
  9121  006DD0  0E00               	movlw	0
  9122  006DD2  0100               	movlb	0	; () banked
  9123  006DD4  6FF9               	movwf	_Conf2_ChannelH_3_Status& (0+255),b
  9124                           
  9125                           ;RF.c: 239: }
  9126  006DD6  0012               	return	
  9127  006DD8                     l12166:
  9128                           
  9129                           ; BSR set to: 0
  9130                           ;RF.c: 240: else
  9131                           ;RF.c: 241: {
  9132                           ;RF.c: 242: SendRF_wait(Conf2_ChannelH_3_ON,2,16,5);
  9133  006DD8  0EC8               	movlw	low _Conf2_ChannelH_3_ON
  9134  006DDA  0100               	movlb	0	; () banked
  9135  006DDC  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9136  006DDE  0EEF               	movlw	high _Conf2_ChannelH_3_ON
  9137  006DE0  0100               	movlb	0	; () banked
  9138  006DE2  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9139  006DE4  0E02               	movlw	2
  9140  006DE6  0100               	movlb	0	; () banked
  9141  006DE8  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9142  006DEA  0E10               	movlw	16
  9143  006DEC  0100               	movlb	0	; () banked
  9144  006DEE  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9145  006DF0  0E05               	movlw	5
  9146  006DF2  0100               	movlb	0	; () banked
  9147  006DF4  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9148  006DF6  EC67  F052         	call	_SendRF_wait	;wreg free
  9149                           
  9150                           ;RF.c: 243: Conf2_ChannelH_3_Status = 1;
  9151  006DFA  0E01               	movlw	1
  9152  006DFC  0100               	movlb	0	; () banked
  9153  006DFE  6FF9               	movwf	_Conf2_ChannelH_3_Status& (0+255),b
  9154                           
  9155                           ; BSR set to: 0
  9156                           ;RF.c: 248: }
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;RF.c: 247: break;
  9160                           
  9161                           ;RF.c: 246: default:
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;RF.c: 244: }
  9165                           ;RF.c: 245: break;
  9166  006E00  0012               	return	
  9167  006E02                     l12172:
  9168                           
  9169                           ; BSR set to: 0
  9170  006E02  0100               	movlb	0	; () banked
  9171  006E04  516D               	movf	SendRF_Channel@channel& (0+255),w,b
  9172                           
  9173                           ; Switch size 1, requested type "space"
  9174                           ; Number of cases is 8, Range of values is 0 to 7
  9175                           ; switch strategies available:
  9176                           ; Name         Instructions Cycles
  9177                           ; simple_byte           25    13 (average)
  9178                           ;	Chosen strategy is simple_byte
  9179  006E06  0A00               	xorlw	0	; case 0
  9180  006E08  B4D8               	btfsc	status,2,c
  9181  006E0A  D6DA               	goto	l12114
  9182  006E0C  0A01               	xorlw	1	; case 1
  9183  006E0E  B4D8               	btfsc	status,2,c
  9184  006E10  D6E9               	goto	l12116
  9185  006E12  0A03               	xorlw	3	; case 2
  9186  006E14  B4D8               	btfsc	status,2,c
  9187  006E16  D6F8               	goto	l12118
  9188  006E18  0A01               	xorlw	1	; case 3
  9189  006E1A  B4D8               	btfsc	status,2,c
  9190  006E1C  D707               	goto	l12120
  9191  006E1E  0A07               	xorlw	7	; case 4
  9192  006E20  B4D8               	btfsc	status,2,c
  9193  006E22  D733               	goto	l12130
  9194  006E24  0A01               	xorlw	1	; case 5
  9195  006E26  B4D8               	btfsc	status,2,c
  9196  006E28  D75F               	goto	l12140
  9197  006E2A  0A03               	xorlw	3	; case 6
  9198  006E2C  B4D8               	btfsc	status,2,c
  9199  006E2E  D78B               	goto	l12150
  9200  006E30  0A01               	xorlw	1	; case 7
  9201  006E32  A4D8               	btfss	status,2,c
  9202  006E34  0012               	return	
  9203  006E36  D7B6               	goto	l12160
  9204                           
  9205                           ; BSR set to: 0
  9206  006E38  0012               	return		;funcret
  9207  006E3A                     __end_of_SendRF_Channel:
  9208                           	opt stack 0
  9209                           tblptru	equ	0xFF8
  9210                           tblptrh	equ	0xFF7
  9211                           tblptrl	equ	0xFF6
  9212                           tablat	equ	0xFF5
  9213                           prodh	equ	0xFF4
  9214                           prodl	equ	0xFF3
  9215                           intcon	equ	0xFF2
  9216                           postinc0	equ	0xFEE
  9217                           wreg	equ	0xFE8
  9218                           postdec1	equ	0xFE5
  9219                           fsr1l	equ	0xFE1
  9220                           indf2	equ	0xFDF
  9221                           postinc2	equ	0xFDE
  9222                           fsr2h	equ	0xFDA
  9223                           fsr2l	equ	0xFD9
  9224                           status	equ	0xFD8
  9225                           
  9226 ;; *************** function _ReadPushButton *****************
  9227 ;; Defined at:
  9228 ;;		line 52 in file "Button.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;		None
  9231 ;; Auto vars:     Size  Location     Type
  9232 ;;		None
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  1    wreg      unsigned char 
  9235 ;; Registers used:
  9236 ;;		wreg
  9237 ;; Tracked objects:
  9238 ;;		On entry : 0/0
  9239 ;;		On exit  : 0/0
  9240 ;;		Unchanged: 0/0
  9241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9246 ;;Total ram usage:        0 bytes
  9247 ;; Hardware stack levels used:    1
  9248 ;; Hardware stack levels required when called:    5
  9249 ;; This function calls:
  9250 ;;		Nothing
  9251 ;; This function is called by:
  9252 ;;		_UseIRCode
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256                           	psect	text3
  9257  00A9B8                     __ptext3:
  9258                           	opt stack 0
  9259  00A9B8                     _ReadPushButton:
  9260                           	opt stack 24
  9261                           
  9262                           ;Button.c: 55: if((PORTC & 0x01) != 0x01)
  9263                           
  9264                           ;incstack = 0
  9265  00A9B8  B082               	btfsc	3970,0,c	;volatile
  9266  00A9BA  D002               	goto	l12082
  9267                           
  9268                           ;Button.c: 56: {
  9269                           ;Button.c: 57: return 1;
  9270  00A9BC  0E01               	movlw	1
  9271  00A9BE  0012               	return	
  9272  00A9C0                     l12082:
  9273                           
  9274                           ;Button.c: 58: }
  9275                           ;Button.c: 59: return 0;
  9276  00A9C0  0E00               	movlw	0
  9277  00A9C2  0012               	return	
  9278  00A9C4  0012               	return		;funcret
  9279  00A9C6                     __end_of_ReadPushButton:
  9280                           	opt stack 0
  9281                           tblptru	equ	0xFF8
  9282                           tblptrh	equ	0xFF7
  9283                           tblptrl	equ	0xFF6
  9284                           tablat	equ	0xFF5
  9285                           prodh	equ	0xFF4
  9286                           prodl	equ	0xFF3
  9287                           intcon	equ	0xFF2
  9288                           postinc0	equ	0xFEE
  9289                           wreg	equ	0xFE8
  9290                           postdec1	equ	0xFE5
  9291                           fsr1l	equ	0xFE1
  9292                           indf2	equ	0xFDF
  9293                           postinc2	equ	0xFDE
  9294                           fsr2h	equ	0xFDA
  9295                           fsr2l	equ	0xFD9
  9296                           status	equ	0xFD8
  9297                           
  9298 ;; *************** function _ReadCodeButtons *****************
  9299 ;; Defined at:
  9300 ;;		line 67 in file "Button.c"
  9301 ;; Parameters:    Size  Location     Type
  9302 ;;		None
  9303 ;; Auto vars:     Size  Location     Type
  9304 ;;  temp            1    9[BANK0 ] unsigned char 
  9305 ;; Return value:  Size  Location     Type
  9306 ;;                  1    wreg      unsigned char 
  9307 ;; Registers used:
  9308 ;;		wreg, status,2, status,0, cstack
  9309 ;; Tracked objects:
  9310 ;;		On entry : 0/0
  9311 ;;		On exit  : 0/0
  9312 ;;		Unchanged: 0/0
  9313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9315 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9317 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9318 ;;Total ram usage:        1 bytes
  9319 ;; Hardware stack levels used:    1
  9320 ;; Hardware stack levels required when called:    6
  9321 ;; This function calls:
  9322 ;;		_delayUS
  9323 ;; This function is called by:
  9324 ;;		_UseIRCode
  9325 ;; This function uses a non-reentrant model
  9326 ;;
  9327                           
  9328                           	psect	text4
  9329  00A2D4                     __ptext4:
  9330                           	opt stack 0
  9331  00A2D4                     _ReadCodeButtons:
  9332                           	opt stack 23
  9333                           
  9334                           ;Button.c: 69: unsigned char temp = 0;
  9335                           
  9336                           ;incstack = 0
  9337  00A2D4  0E00               	movlw	0
  9338  00A2D6  0100               	movlb	0	; () banked
  9339  00A2D8  6F69               	movwf	ReadCodeButtons@temp& (0+255),b
  9340                           
  9341                           ; BSR set to: 0
  9342                           ;Button.c: 71: (LATC &= ~0x10);
  9343  00A2DA  988B               	bcf	3979,4,c	;volatile
  9344                           
  9345                           ; BSR set to: 0
  9346                           ;Button.c: 72: delayUS(5);
  9347  00A2DC  0E05               	movlw	5
  9348  00A2DE  0100               	movlb	0	; () banked
  9349  00A2E0  6F60               	movwf	delayUS@US& (0+255),b
  9350  00A2E2  0E00               	movlw	0
  9351  00A2E4  6F61               	movwf	(delayUS@US+1)& (0+255),b
  9352  00A2E6  0E00               	movlw	0
  9353  00A2E8  6F62               	movwf	(delayUS@US+2)& (0+255),b
  9354  00A2EA  0E00               	movlw	0
  9355  00A2EC  6F63               	movwf	(delayUS@US+3)& (0+255),b
  9356  00A2EE  EC3F  F051         	call	_delayUS	;wreg free
  9357                           
  9358                           ;Button.c: 75: if((PORTB & 0x01) != 0x01)
  9359  00A2F2  B081               	btfsc	3969,0,c	;volatile
  9360  00A2F4  D004               	goto	l12096
  9361                           
  9362                           ;Button.c: 76: {
  9363                           ;Button.c: 77: temp +=8;
  9364  00A2F6  0E08               	movlw	8
  9365  00A2F8  0100               	movlb	0	; () banked
  9366  00A2FA  2769               	addwf	ReadCodeButtons@temp& (0+255),f,b
  9367  00A2FC  D000               	goto	l12096
  9368  00A2FE                     l12096:
  9369                           
  9370                           ;Button.c: 78: }
  9371                           ;Button.c: 79: if((PORTB & 0x02) != 0x02)
  9372  00A2FE  B281               	btfsc	3969,1,c	;volatile
  9373  00A300  D004               	goto	l12100
  9374                           
  9375                           ;Button.c: 80: {
  9376                           ;Button.c: 81: temp +=4;
  9377  00A302  0E04               	movlw	4
  9378  00A304  0100               	movlb	0	; () banked
  9379  00A306  2769               	addwf	ReadCodeButtons@temp& (0+255),f,b
  9380  00A308  D000               	goto	l12100
  9381  00A30A                     l12100:
  9382                           
  9383                           ;Button.c: 82: }
  9384                           ;Button.c: 83: if((PORTB & 0x04) != 0x04)
  9385  00A30A  B481               	btfsc	3969,2,c	;volatile
  9386  00A30C  D004               	goto	l12104
  9387                           
  9388                           ;Button.c: 84: {
  9389                           ;Button.c: 85: temp +=2;
  9390  00A30E  0E02               	movlw	2
  9391  00A310  0100               	movlb	0	; () banked
  9392  00A312  2769               	addwf	ReadCodeButtons@temp& (0+255),f,b
  9393  00A314  D000               	goto	l12104
  9394  00A316                     l12104:
  9395                           
  9396                           ;Button.c: 86: }
  9397                           ;Button.c: 87: if((PORTB & 0x08) != 0x08)
  9398  00A316  B681               	btfsc	3969,3,c	;volatile
  9399  00A318  D002               	goto	l1794
  9400                           
  9401                           ;Button.c: 88: {
  9402                           ;Button.c: 89: temp +=1;
  9403  00A31A  0100               	movlb	0	; () banked
  9404  00A31C  2B69               	incf	ReadCodeButtons@temp& (0+255),f,b
  9405  00A31E                     l1794:
  9406                           
  9407                           ;Button.c: 90: }
  9408                           ;Button.c: 91: (LATC |= 0x10);
  9409  00A31E  888B               	bsf	3979,4,c	;volatile
  9410                           
  9411                           ;Button.c: 92: return temp;
  9412  00A320  0100               	movlb	0	; () banked
  9413  00A322  5169               	movf	ReadCodeButtons@temp& (0+255),w,b
  9414  00A324  0012               	return	
  9415                           
  9416                           ; BSR set to: 0
  9417                           
  9418                           ; BSR set to: 0
  9419  00A326  0012               	return		;funcret
  9420  00A328                     __end_of_ReadCodeButtons:
  9421                           	opt stack 0
  9422                           tblptru	equ	0xFF8
  9423                           tblptrh	equ	0xFF7
  9424                           tblptrl	equ	0xFF6
  9425                           tablat	equ	0xFF5
  9426                           prodh	equ	0xFF4
  9427                           prodl	equ	0xFF3
  9428                           intcon	equ	0xFF2
  9429                           postinc0	equ	0xFEE
  9430                           wreg	equ	0xFE8
  9431                           postdec1	equ	0xFE5
  9432                           fsr1l	equ	0xFE1
  9433                           indf2	equ	0xFDF
  9434                           postinc2	equ	0xFDE
  9435                           fsr2h	equ	0xFDA
  9436                           fsr2l	equ	0xFD9
  9437                           status	equ	0xFD8
  9438                           
  9439 ;; *************** function _UseBluetooth *****************
  9440 ;; Defined at:
  9441 ;;		line 443 in file "Bluetooth.c"
  9442 ;; Parameters:    Size  Location     Type
  9443 ;;  String          2  146[BANK0 ] PTR unsigned char 
  9444 ;;		 -> main@BluetoothString(100), 
  9445 ;;  StringPos       1  148[BANK0 ] unsigned char 
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;  buf           100   12[BANK2 ] unsigned char [100]
  9448 ;;  rfchannelSTR   10  112[BANK2 ] unsigned char [10]
  9449 ;;  temp            4  144[BANK2 ] unsigned long 
  9450 ;;  EnteredNEC      4  134[BANK2 ] unsigned long 
  9451 ;;  SerialNumber    4  128[BANK2 ] long 
  9452 ;;  tempNec         4  124[BANK2 ] unsigned long 
  9453 ;;  i               1  148[BANK2 ] unsigned char 
  9454 ;;  NecCommand      1  143[BANK2 ] unsigned char 
  9455 ;;  NecAddress      1  142[BANK2 ] unsigned char 
  9456 ;;  rfconf          1  141[BANK2 ] unsigned char 
  9457 ;;  timeout         1  140[BANK2 ] unsigned char 
  9458 ;;  tempRFArray     1  139[BANK2 ] unsigned char 
  9459 ;;  ok              1  138[BANK2 ] unsigned char 
  9460 ;;  device          1  133[BANK2 ] unsigned char 
  9461 ;;  EmptyPlace      1  132[BANK2 ] unsigned char 
  9462 ;;  ReceivedStri    1  123[BANK2 ] unsigned char 
  9463 ;;  set             1  122[BANK2 ] unsigned char 
  9464 ;; Return value:  Size  Location     Type
  9465 ;;                  1    wreg      unsigned char 
  9466 ;; Registers used:
  9467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9468 ;; Tracked objects:
  9469 ;;		On entry : 0/0
  9470 ;;		On exit  : 0/0
  9471 ;;		Unchanged: 0/0
  9472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9473 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9474 ;;      Locals:         0       0       0     137       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9475 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9476 ;;      Totals:         0       3       0     149       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9477 ;;Total ram usage:      152 bytes
  9478 ;; Hardware stack levels used:    1
  9479 ;; Hardware stack levels required when called:   11
  9480 ;; This function calls:
  9481 ;;		_BluetoothInitialSetup
  9482 ;;		_BufferCopy
  9483 ;;		_ClearUSART
  9484 ;;		_DecodeNEC
  9485 ;;		_EncodeNEC
  9486 ;;		_GetNumber
  9487 ;;		_GetNumberUnsigned
  9488 ;;		_GetStringAfterComma
  9489 ;;		_IsAlphaNumericString
  9490 ;;		_ReadVoltage
  9491 ;;		_SendNEC_wait
  9492 ;;		_SendRF_wait
  9493 ;;		_SetEEPROM2
  9494 ;;		_StringAddEqual
  9495 ;;		_StringContains
  9496 ;;		_StringContainsCaseInsensitive
  9497 ;;		_StringMatch
  9498 ;;		_StringMatchCaseInsensitive
  9499 ;;		_SyncEEPROMToGlobal
  9500 ;;		_SyncGlobalToEEPROM
  9501 ;;		_UARTchar
  9502 ;;		_UARTchar_CONST
  9503 ;;		_UARTcommandMenu
  9504 ;;		_UARTstring
  9505 ;;		_UARTstringCRLN
  9506 ;;		_UARTstringCRLN_CONST
  9507 ;;		_UARTstring_CONST
  9508 ;;		_WaitForIRsignal
  9509 ;;		_cleanBuffer
  9510 ;;		_delayUS
  9511 ;;		_lowercaseString
  9512 ;;		_sprintf
  9513 ;; This function is called by:
  9514 ;;		_main
  9515 ;; This function uses a non-reentrant model
  9516 ;;
  9517                           
  9518                           	psect	text5
  9519  0001CE                     __ptext5:
  9520                           	opt stack 0
  9521  0001CE                     _UseBluetooth:
  9522                           	opt stack 19
  9523                           
  9524                           ;Bluetooth.c: 445: unsigned char ok = 1;
  9525                           
  9526                           ; BSR set to: 0
  9527                           ;incstack = 0
  9528  0001CE  0E01               	movlw	1
  9529  0001D0  0102               	movlb	2	; () banked
  9530  0001D2  6F8A               	movwf	UseBluetooth@ok& (0+255),b
  9531                           
  9532                           ;Bluetooth.c: 447: unsigned long EnteredNEC = 0;
  9533  0001D4  0E00               	movlw	0
  9534  0001D6  0102               	movlb	2	; () banked
  9535  0001D8  6F86               	movwf	UseBluetooth@EnteredNEC& (0+255),b
  9536  0001DA  0E00               	movlw	0
  9537  0001DC  6F87               	movwf	(UseBluetooth@EnteredNEC+1)& (0+255),b
  9538  0001DE  0E00               	movlw	0
  9539  0001E0  6F88               	movwf	(UseBluetooth@EnteredNEC+2)& (0+255),b
  9540  0001E2  0E00               	movlw	0
  9541  0001E4  6F89               	movwf	(UseBluetooth@EnteredNEC+3)& (0+255),b
  9542                           
  9543                           ;Bluetooth.c: 448: unsigned char NecAddress = 0;
  9544  0001E6  0E00               	movlw	0
  9545  0001E8  0102               	movlb	2	; () banked
  9546  0001EA  6F8E               	movwf	UseBluetooth@NecAddress& (0+255),b
  9547                           
  9548                           ;Bluetooth.c: 449: unsigned char NecCommand = 0;
  9549  0001EC  0E00               	movlw	0
  9550  0001EE  0102               	movlb	2	; () banked
  9551  0001F0  6F8F               	movwf	UseBluetooth@NecCommand& (0+255),b
  9552                           
  9553                           ;Bluetooth.c: 450: unsigned long temp = 0;
  9554  0001F2  0E00               	movlw	0
  9555  0001F4  0102               	movlb	2	; () banked
  9556  0001F6  6F90               	movwf	UseBluetooth@temp& (0+255),b
  9557  0001F8  0E00               	movlw	0
  9558  0001FA  6F91               	movwf	(UseBluetooth@temp+1)& (0+255),b
  9559  0001FC  0E00               	movlw	0
  9560  0001FE  6F92               	movwf	(UseBluetooth@temp+2)& (0+255),b
  9561  000200  0E00               	movlw	0
  9562  000202  6F93               	movwf	(UseBluetooth@temp+3)& (0+255),b
  9563                           
  9564                           ;Bluetooth.c: 451: unsigned long tempNec = 0;
  9565  000204  0E00               	movlw	0
  9566  000206  0102               	movlb	2	; () banked
  9567  000208  6F7C               	movwf	UseBluetooth@tempNec& (0+255),b
  9568  00020A  0E00               	movlw	0
  9569  00020C  6F7D               	movwf	(UseBluetooth@tempNec+1)& (0+255),b
  9570  00020E  0E00               	movlw	0
  9571  000210  6F7E               	movwf	(UseBluetooth@tempNec+2)& (0+255),b
  9572  000212  0E00               	movlw	0
  9573  000214  6F7F               	movwf	(UseBluetooth@tempNec+3)& (0+255),b
  9574                           
  9575                           ;Bluetooth.c: 452: unsigned char buf[100];
  9576                           ;Bluetooth.c: 453: unsigned char timeout =0;
  9577  000216  0E00               	movlw	0
  9578  000218  0102               	movlb	2	; () banked
  9579  00021A  6F8C               	movwf	UseBluetooth@timeout& (0+255),b
  9580                           
  9581                           ;Bluetooth.c: 454: unsigned char rfchannelSTR[10];
  9582                           ;Bluetooth.c: 455: unsigned char rfconf, i, tempRFArray;
  9583                           ;Bluetooth.c: 456: unsigned char device = 0;
  9584  00021C  0E00               	movlw	0
  9585  00021E  0102               	movlb	2	; () banked
  9586  000220  6F85               	movwf	UseBluetooth@device& (0+255),b
  9587                           
  9588                           ;Bluetooth.c: 457: unsigned char EmptyPlace = 0;
  9589  000222  0E00               	movlw	0
  9590  000224  0102               	movlb	2	; () banked
  9591  000226  6F84               	movwf	UseBluetooth@EmptyPlace& (0+255),b
  9592                           
  9593                           ;Bluetooth.c: 458: unsigned char set = 0;
  9594  000228  0E00               	movlw	0
  9595  00022A  0102               	movlb	2	; () banked
  9596  00022C  6F7A               	movwf	UseBluetooth@set& (0+255),b
  9597                           
  9598                           ;Bluetooth.c: 459: long SerialNumberTEMP = 0;
  9599  00022E  0E00               	movlw	0
  9600  000230  0102               	movlb	2	; () banked
  9601  000232  6F80               	movwf	UseBluetooth@SerialNumberTEMP& (0+255),b
  9602  000234  0E00               	movlw	0
  9603  000236  6F81               	movwf	(UseBluetooth@SerialNumberTEMP+1)& (0+255),b
  9604  000238  0E00               	movlw	0
  9605  00023A  6F82               	movwf	(UseBluetooth@SerialNumberTEMP+2)& (0+255),b
  9606  00023C  0E00               	movlw	0
  9607  00023E  6F83               	movwf	(UseBluetooth@SerialNumberTEMP+3)& (0+255),b
  9608                           
  9609                           ;Bluetooth.c: 460: unsigned char ReceivedStringPosOLD = 0;
  9610  000240  0E00               	movlw	0
  9611  000242  0102               	movlb	2	; () banked
  9612  000244  6F7B               	movwf	UseBluetooth@ReceivedStringPosOLD& (0+255),b
  9613                           
  9614                           ; BSR set to: 2
  9615                           ;Bluetooth.c: 462: cleanBuffer(buf,100);
  9616  000246  0E0C               	movlw	low UseBluetooth@buf
  9617  000248  0100               	movlb	0	; () banked
  9618  00024A  6F60               	movwf	cleanBuffer@data& (0+255),b
  9619  00024C  0E02               	movlw	high UseBluetooth@buf
  9620  00024E  0100               	movlb	0	; () banked
  9621  000250  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  9622  000252  0E00               	movlw	0
  9623  000254  0100               	movlb	0	; () banked
  9624  000256  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
  9625  000258  0E64               	movlw	100
  9626  00025A  6F62               	movwf	cleanBuffer@count& (0+255),b
  9627  00025C  ECE6  F050         	call	_cleanBuffer	;wreg free
  9628                           
  9629                           ;Bluetooth.c: 463: cleanBuffer(rfchannelSTR,10);
  9630  000260  0E70               	movlw	low UseBluetooth@rfchannelSTR
  9631  000262  0100               	movlb	0	; () banked
  9632  000264  6F60               	movwf	cleanBuffer@data& (0+255),b
  9633  000266  0E02               	movlw	high UseBluetooth@rfchannelSTR
  9634  000268  0100               	movlb	0	; () banked
  9635  00026A  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  9636  00026C  0E00               	movlw	0
  9637  00026E  0100               	movlb	0	; () banked
  9638  000270  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
  9639  000272  0E0A               	movlw	10
  9640  000274  6F62               	movwf	cleanBuffer@count& (0+255),b
  9641  000276  ECE6  F050         	call	_cleanBuffer	;wreg free
  9642                           
  9643                           ;Bluetooth.c: 465: if(StringContainsCaseInsensitive(String,"Conf1"))
  9644  00027A  C0F2  F063         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9645  00027E  C0F3  F064         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9646  000282  0EBA               	movlw	low STR_22
  9647  000284  0100               	movlb	0	; () banked
  9648  000286  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9649  000288  0EFF               	movlw	high STR_22
  9650  00028A  0100               	movlb	0	; () banked
  9651  00028C  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9652  00028E  EC6D  F03B         	call	_StringContainsCaseInsensitive	;wreg free
  9653  000292  0900               	iorlw	0
  9654  000294  B4D8               	btfsc	status,2,c
  9655  000296  D083               	goto	l12504
  9656                           
  9657                           ;Bluetooth.c: 466: {
  9658                           ;Bluetooth.c: 467: if(StringMatchCaseInsensitive(String,Conf1_ChannelD_STR))
  9659  000298  C0F2  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9660  00029C  C0F3  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9661  0002A0  0ED8               	movlw	low _Conf1_ChannelD_STR
  9662  0002A2  0100               	movlb	0	; () banked
  9663  0002A4  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9664  0002A6  0EEF               	movlw	high _Conf1_ChannelD_STR
  9665  0002A8  0100               	movlb	0	; () banked
  9666  0002AA  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9667  0002AC  EC08  F04E         	call	_StringMatchCaseInsensitive	;wreg free
  9668  0002B0  0900               	iorlw	0
  9669  0002B2  B4D8               	btfsc	status,2,c
  9670  0002B4  D012               	goto	l12486
  9671                           
  9672                           ;Bluetooth.c: 468: {
  9673                           ;Bluetooth.c: 470: SendRF_wait(Conf1_ChannelD,1,12,8);
  9674  0002B6  0E13               	movlw	low _Conf1_ChannelD
  9675  0002B8  0100               	movlb	0	; () banked
  9676  0002BA  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9677  0002BC  0EF0               	movlw	high _Conf1_ChannelD
  9678  0002BE  0100               	movlb	0	; () banked
  9679  0002C0  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9680  0002C2  0E01               	movlw	1
  9681  0002C4  0100               	movlb	0	; () banked
  9682  0002C6  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9683  0002C8  0E0C               	movlw	12
  9684  0002CA  0100               	movlb	0	; () banked
  9685  0002CC  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9686  0002CE  0E08               	movlw	8
  9687  0002D0  0100               	movlb	0	; () banked
  9688  0002D2  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9689  0002D4  EC67  F052         	call	_SendRF_wait	;wreg free
  9690                           
  9691                           ;Bluetooth.c: 471: }
  9692  0002D8  D054               	goto	l12498
  9693  0002DA                     l12486:
  9694                           
  9695                           ;Bluetooth.c: 472: else if(StringMatchCaseInsensitive(String,Conf1_ChannelE_STR))
  9696  0002DA  C0F2  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9697  0002DE  C0F3  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9698  0002E2  0EE7               	movlw	low _Conf1_ChannelE_STR
  9699  0002E4  0100               	movlb	0	; () banked
  9700  0002E6  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9701  0002E8  0EEF               	movlw	high _Conf1_ChannelE_STR
  9702  0002EA  0100               	movlb	0	; () banked
  9703  0002EC  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9704  0002EE  EC08  F04E         	call	_StringMatchCaseInsensitive	;wreg free
  9705  0002F2  0900               	iorlw	0
  9706  0002F4  B4D8               	btfsc	status,2,c
  9707  0002F6  D012               	goto	l12490
  9708                           
  9709                           ;Bluetooth.c: 473: {
  9710                           ;Bluetooth.c: 475: SendRF_wait(Conf1_ChannelE,1,12,8);
  9711  0002F8  0E1F               	movlw	low _Conf1_ChannelE
  9712  0002FA  0100               	movlb	0	; () banked
  9713  0002FC  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9714  0002FE  0EF0               	movlw	high _Conf1_ChannelE
  9715  000300  0100               	movlb	0	; () banked
  9716  000302  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9717  000304  0E01               	movlw	1
  9718  000306  0100               	movlb	0	; () banked
  9719  000308  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9720  00030A  0E0C               	movlw	12
  9721  00030C  0100               	movlb	0	; () banked
  9722  00030E  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9723  000310  0E08               	movlw	8
  9724  000312  0100               	movlb	0	; () banked
  9725  000314  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9726  000316  EC67  F052         	call	_SendRF_wait	;wreg free
  9727                           
  9728                           ;Bluetooth.c: 476: }
  9729  00031A  D033               	goto	l12498
  9730  00031C                     l12490:
  9731                           
  9732                           ;Bluetooth.c: 477: else if(StringMatchCaseInsensitive(String,Conf1_ChannelF_STR))
  9733  00031C  C0F2  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9734  000320  C0F3  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9735  000324  0EF6               	movlw	low _Conf1_ChannelF_STR
  9736  000326  0100               	movlb	0	; () banked
  9737  000328  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9738  00032A  0EEF               	movlw	high _Conf1_ChannelF_STR
  9739  00032C  0100               	movlb	0	; () banked
  9740  00032E  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9741  000330  EC08  F04E         	call	_StringMatchCaseInsensitive	;wreg free
  9742  000334  0900               	iorlw	0
  9743  000336  B4D8               	btfsc	status,2,c
  9744  000338  D012               	goto	l12494
  9745                           
  9746                           ;Bluetooth.c: 478: {
  9747                           ;Bluetooth.c: 480: SendRF_wait(Conf1_ChannelF,1,12,8);
  9748  00033A  0E2B               	movlw	low _Conf1_ChannelF
  9749  00033C  0100               	movlb	0	; () banked
  9750  00033E  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9751  000340  0EF0               	movlw	high _Conf1_ChannelF
  9752  000342  0100               	movlb	0	; () banked
  9753  000344  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9754  000346  0E01               	movlw	1
  9755  000348  0100               	movlb	0	; () banked
  9756  00034A  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9757  00034C  0E0C               	movlw	12
  9758  00034E  0100               	movlb	0	; () banked
  9759  000350  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9760  000352  0E08               	movlw	8
  9761  000354  0100               	movlb	0	; () banked
  9762  000356  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9763  000358  EC67  F052         	call	_SendRF_wait	;wreg free
  9764                           
  9765                           ;Bluetooth.c: 481: }
  9766  00035C  D012               	goto	l12498
  9767  00035E                     l12494:
  9768                           
  9769                           ;Bluetooth.c: 482: else
  9770                           ;Bluetooth.c: 483: {
  9771                           ;Bluetooth.c: 485: UARTstring_CONST(SYNTAX_ERR);
  9772  00035E  0E05               	movlw	low _SYNTAX_ERR
  9773  000360  0100               	movlb	0	; () banked
  9774  000362  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  9775  000364  0EF0               	movlw	high _SYNTAX_ERR
  9776  000366  0100               	movlb	0	; () banked
  9777  000368  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  9778  00036A  EC42  F053         	call	_UARTstring_CONST	;wreg free
  9779                           
  9780                           ;Bluetooth.c: 486: UARTstring_CONST(CRLN);
  9781  00036E  0E51               	movlw	low _CRLN
  9782  000370  0100               	movlb	0	; () banked
  9783  000372  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  9784  000374  0EF0               	movlw	high _CRLN
  9785  000376  0100               	movlb	0	; () banked
  9786  000378  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  9787  00037A  EC42  F053         	call	_UARTstring_CONST	;wreg free
  9788                           
  9789                           ;Bluetooth.c: 487: return 0;
  9790                           ;	Return value of _UseBluetooth is never used
  9791  00037E  0012               	return	
  9792  000380  D000               	goto	l12498
  9793  000382                     l12498:
  9794                           
  9795                           ;Bluetooth.c: 488: }
  9796                           ;Bluetooth.c: 489: if(ok)
  9797  000382  0102               	movlb	2	; () banked
  9798  000384  518A               	movf	UseBluetooth@ok& (0+255),w,b
  9799  000386  0102               	movlb	2	; () banked
  9800  000388  B4D8               	btfsc	status,2,c
  9801  00038A  0012               	return	
  9802                           
  9803                           ; BSR set to: 2
  9804                           ;Bluetooth.c: 490: {
  9805                           ;Bluetooth.c: 491: UARTstringCRLN_CONST("Configuration 1 RF code sent");
  9806  00038C  0E24               	movlw	low STR_23
  9807  00038E  0100               	movlb	0	; () banked
  9808  000390  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
  9809  000392  0EFA               	movlw	high STR_23
  9810  000394  0100               	movlb	0	; () banked
  9811  000396  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
  9812  000398  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
  9813                           
  9814                           ;Bluetooth.c: 493: }
  9815                           ;Bluetooth.c: 494: }
  9816                           
  9817                           ;Bluetooth.c: 492: return 1;
  9818                           ;	Return value of _UseBluetooth is never used
  9819  00039C  0012               	return	
  9820  00039E                     l12504:
  9821                           
  9822                           ;Bluetooth.c: 495: else if(StringContainsCaseInsensitive(String,"Conf2"))
  9823  00039E  C0F2  F063         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9824  0003A2  C0F3  F064         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9825  0003A6  0EC0               	movlw	low STR_24
  9826  0003A8  0100               	movlb	0	; () banked
  9827  0003AA  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9828  0003AC  0EFF               	movlw	high STR_24
  9829  0003AE  0100               	movlb	0	; () banked
  9830  0003B0  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9831  0003B2  EC6D  F03B         	call	_StringContainsCaseInsensitive	;wreg free
  9832  0003B6  0900               	iorlw	0
  9833  0003B8  B4D8               	btfsc	status,2,c
  9834  0003BA  D16A               	goto	l12556
  9835                           
  9836                           ;Bluetooth.c: 496: {
  9837                           ;Bluetooth.c: 497: if(StringMatchCaseInsensitive(String,Conf2_ChannelB_ON_STR))
  9838  0003BC  C0F2  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9839  0003C0  C0F3  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9840  0003C4  0E14               	movlw	low _Conf2_ChannelB_ON_STR
  9841  0003C6  0100               	movlb	0	; () banked
  9842  0003C8  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9843  0003CA  0EEF               	movlw	high _Conf2_ChannelB_ON_STR
  9844  0003CC  0100               	movlb	0	; () banked
  9845  0003CE  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9846  0003D0  EC08  F04E         	call	_StringMatchCaseInsensitive	;wreg free
  9847  0003D4  0900               	iorlw	0
  9848  0003D6  B4D8               	btfsc	status,2,c
  9849  0003D8  D012               	goto	l12510
  9850                           
  9851                           ;Bluetooth.c: 498: {
  9852                           ;Bluetooth.c: 500: SendRF_wait(Conf2_ChannelB_ON,2,16,8);
  9853  0003DA  0E48               	movlw	low _Conf2_ChannelB_ON
  9854  0003DC  0100               	movlb	0	; () banked
  9855  0003DE  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9856  0003E0  0EEF               	movlw	high _Conf2_ChannelB_ON
  9857  0003E2  0100               	movlb	0	; () banked
  9858  0003E4  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9859  0003E6  0E02               	movlw	2
  9860  0003E8  0100               	movlb	0	; () banked
  9861  0003EA  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9862  0003EC  0E10               	movlw	16
  9863  0003EE  0100               	movlb	0	; () banked
  9864  0003F0  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9865  0003F2  0E08               	movlw	8
  9866  0003F4  0100               	movlb	0	; () banked
  9867  0003F6  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9868  0003F8  EC67  F052         	call	_SendRF_wait	;wreg free
  9869                           
  9870                           ;Bluetooth.c: 501: }
  9871  0003FC  D13B               	goto	l12550
  9872  0003FE                     l12510:
  9873                           
  9874                           ;Bluetooth.c: 502: else if(StringMatchCaseInsensitive(String,Conf2_ChannelB_OFF_STR))
  9875  0003FE  C0F2  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9876  000402  C0F3  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9877  000406  0EEE               	movlw	low _Conf2_ChannelB_OFF_STR
  9878  000408  0100               	movlb	0	; () banked
  9879  00040A  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9880  00040C  0EEE               	movlw	high _Conf2_ChannelB_OFF_STR
  9881  00040E  0100               	movlb	0	; () banked
  9882  000410  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9883  000412  EC08  F04E         	call	_StringMatchCaseInsensitive	;wreg free
  9884  000416  0900               	iorlw	0
  9885  000418  B4D8               	btfsc	status,2,c
  9886  00041A  D012               	goto	l12514
  9887                           
  9888                           ;Bluetooth.c: 503: {
  9889                           ;Bluetooth.c: 505: SendRF_wait(Conf2_ChannelB_OFF,2,16,8);
  9890  00041C  0E38               	movlw	low _Conf2_ChannelB_OFF
  9891  00041E  0100               	movlb	0	; () banked
  9892  000420  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9893  000422  0EEF               	movlw	high _Conf2_ChannelB_OFF
  9894  000424  0100               	movlb	0	; () banked
  9895  000426  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9896  000428  0E02               	movlw	2
  9897  00042A  0100               	movlb	0	; () banked
  9898  00042C  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9899  00042E  0E10               	movlw	16
  9900  000430  0100               	movlb	0	; () banked
  9901  000432  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9902  000434  0E08               	movlw	8
  9903  000436  0100               	movlb	0	; () banked
  9904  000438  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9905  00043A  EC67  F052         	call	_SendRF_wait	;wreg free
  9906                           
  9907                           ;Bluetooth.c: 506: }
  9908  00043E  D11A               	goto	l12550
  9909  000440                     l12514:
  9910                           
  9911                           ;Bluetooth.c: 507: else if(StringMatchCaseInsensitive(String,Conf2_ChannelD_ON_STR))
  9912  000440  C0F2  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9913  000444  C0F3  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9914  000448  0E26               	movlw	low _Conf2_ChannelD_ON_STR
  9915  00044A  0100               	movlb	0	; () banked
  9916  00044C  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9917  00044E  0EEF               	movlw	high _Conf2_ChannelD_ON_STR
  9918  000450  0100               	movlb	0	; () banked
  9919  000452  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9920  000454  EC08  F04E         	call	_StringMatchCaseInsensitive	;wreg free
  9921  000458  0900               	iorlw	0
  9922  00045A  B4D8               	btfsc	status,2,c
  9923  00045C  D012               	goto	l12518
  9924                           
  9925                           ;Bluetooth.c: 508: {
  9926                           ;Bluetooth.c: 510: SendRF_wait(Conf2_ChannelD_ON,2,16,8);
  9927  00045E  0E68               	movlw	low _Conf2_ChannelD_ON
  9928  000460  0100               	movlb	0	; () banked
  9929  000462  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9930  000464  0EEF               	movlw	high _Conf2_ChannelD_ON
  9931  000466  0100               	movlb	0	; () banked
  9932  000468  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9933  00046A  0E02               	movlw	2
  9934  00046C  0100               	movlb	0	; () banked
  9935  00046E  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9936  000470  0E10               	movlw	16
  9937  000472  0100               	movlb	0	; () banked
  9938  000474  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9939  000476  0E08               	movlw	8
  9940  000478  0100               	movlb	0	; () banked
  9941  00047A  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9942  00047C  EC67  F052         	call	_SendRF_wait	;wreg free
  9943                           
  9944                           ;Bluetooth.c: 511: }
  9945  000480  D0F9               	goto	l12550
  9946  000482                     l12518:
  9947                           
  9948                           ;Bluetooth.c: 512: else if(StringMatchCaseInsensitive(String,Conf2_ChannelD_OFF_STR))
  9949  000482  C0F2  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9950  000486  C0F3  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9951  00048A  0E01               	movlw	low _Conf2_ChannelD_OFF_STR
  9952  00048C  0100               	movlb	0	; () banked
  9953  00048E  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9954  000490  0EEF               	movlw	high _Conf2_ChannelD_OFF_STR
  9955  000492  0100               	movlb	0	; () banked
  9956  000494  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9957  000496  EC08  F04E         	call	_StringMatchCaseInsensitive	;wreg free
  9958  00049A  0900               	iorlw	0
  9959  00049C  B4D8               	btfsc	status,2,c
  9960  00049E  D012               	goto	l12522
  9961                           
  9962                           ;Bluetooth.c: 513: {
  9963                           ;Bluetooth.c: 515: SendRF_wait(Conf2_ChannelD_OFF,2,16,8);
  9964  0004A0  0E58               	movlw	low _Conf2_ChannelD_OFF
  9965  0004A2  0100               	movlb	0	; () banked
  9966  0004A4  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9967  0004A6  0EEF               	movlw	high _Conf2_ChannelD_OFF
  9968  0004A8  0100               	movlb	0	; () banked
  9969  0004AA  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9970  0004AC  0E02               	movlw	2
  9971  0004AE  0100               	movlb	0	; () banked
  9972  0004B0  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9973  0004B2  0E10               	movlw	16
  9974  0004B4  0100               	movlb	0	; () banked
  9975  0004B6  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9976  0004B8  0E08               	movlw	8
  9977  0004BA  0100               	movlb	0	; () banked
  9978  0004BC  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9979  0004BE  EC67  F052         	call	_SendRF_wait	;wreg free
  9980                           
  9981                           ;Bluetooth.c: 516: }
  9982  0004C2  D0D8               	goto	l12550
  9983  0004C4                     l12522:
  9984                           
  9985                           ;Bluetooth.c: 517: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_1_ON_STR))
  9986  0004C4  C0F2  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9987  0004C8  C0F3  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9988  0004CC  0EB2               	movlw	low _Conf2_ChannelH_1_ON_STR
  9989  0004CE  0100               	movlb	0	; () banked
  9990  0004D0  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9991  0004D2  0EEE               	movlw	high _Conf2_ChannelH_1_ON_STR
  9992  0004D4  0100               	movlb	0	; () banked
  9993  0004D6  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9994  0004D8  EC08  F04E         	call	_StringMatchCaseInsensitive	;wreg free
  9995  0004DC  0900               	iorlw	0
  9996  0004DE  B4D8               	btfsc	status,2,c
  9997  0004E0  D012               	goto	l12526
  9998                           
  9999                           ;Bluetooth.c: 518: {
 10000                           ;Bluetooth.c: 520: SendRF_wait(Conf2_ChannelH_1_ON,2,16,8);
 10001  0004E2  0E88               	movlw	low _Conf2_ChannelH_1_ON
 10002  0004E4  0100               	movlb	0	; () banked
 10003  0004E6  6F68               	movwf	SendRF_wait@Code& (0+255),b
 10004  0004E8  0EEF               	movlw	high _Conf2_ChannelH_1_ON
 10005  0004EA  0100               	movlb	0	; () banked
 10006  0004EC  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 10007  0004EE  0E02               	movlw	2
 10008  0004F0  0100               	movlb	0	; () banked
 10009  0004F2  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 10010  0004F4  0E10               	movlw	16
 10011  0004F6  0100               	movlb	0	; () banked
 10012  0004F8  6F6B               	movwf	SendRF_wait@size& (0+255),b
 10013  0004FA  0E08               	movlw	8
 10014  0004FC  0100               	movlb	0	; () banked
 10015  0004FE  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 10016  000500  EC67  F052         	call	_SendRF_wait	;wreg free
 10017                           
 10018                           ;Bluetooth.c: 521: }
 10019  000504  D0B7               	goto	l12550
 10020  000506                     l12526:
 10021                           
 10022                           ;Bluetooth.c: 522: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_1_OFF_STR))
 10023  000506  C0F2  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 10024  00050A  C0F3  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 10025  00050E  0E73               	movlw	low _Conf2_ChannelH_1_OFF_STR
 10026  000510  0100               	movlb	0	; () banked
 10027  000512  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 10028  000514  0EEE               	movlw	high _Conf2_ChannelH_1_OFF_STR
 10029  000516  0100               	movlb	0	; () banked
 10030  000518  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 10031  00051A  EC08  F04E         	call	_StringMatchCaseInsensitive	;wreg free
 10032  00051E  0900               	iorlw	0
 10033  000520  B4D8               	btfsc	status,2,c
 10034  000522  D012               	goto	l12530
 10035                           
 10036                           ;Bluetooth.c: 523: {
 10037                           ;Bluetooth.c: 525: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,8);
 10038  000524  0E78               	movlw	low _Conf2_ChannelH_1_OFF
 10039  000526  0100               	movlb	0	; () banked
 10040  000528  6F68               	movwf	SendRF_wait@Code& (0+255),b
 10041  00052A  0EEF               	movlw	high _Conf2_ChannelH_1_OFF
 10042  00052C  0100               	movlb	0	; () banked
 10043  00052E  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 10044  000530  0E02               	movlw	2
 10045  000532  0100               	movlb	0	; () banked
 10046  000534  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 10047  000536  0E10               	movlw	16
 10048  000538  0100               	movlb	0	; () banked
 10049  00053A  6F6B               	movwf	SendRF_wait@size& (0+255),b
 10050  00053C  0E08               	movlw	8
 10051  00053E  0100               	movlb	0	; () banked
 10052  000540  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 10053  000542  EC67  F052         	call	_SendRF_wait	;wreg free
 10054                           
 10055                           ;Bluetooth.c: 526: }
 10056  000546  D096               	goto	l12550
 10057  000548                     l12530:
 10058                           
 10059                           ;Bluetooth.c: 527: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_2_ON_STR))
 10060  000548  C0F2  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 10061  00054C  C0F3  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 10062  000550  0EC6               	movlw	low _Conf2_ChannelH_2_ON_STR
 10063  000552  0100               	movlb	0	; () banked
 10064  000554  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 10065  000556  0EEE               	movlw	high _Conf2_ChannelH_2_ON_STR
 10066  000558  0100               	movlb	0	; () banked
 10067  00055A  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 10068  00055C  EC08  F04E         	call	_StringMatchCaseInsensitive	;wreg free
 10069  000560  0900               	iorlw	0
 10070  000562  B4D8               	btfsc	status,2,c
 10071  000564  D012               	goto	l12534
 10072                           
 10073                           ;Bluetooth.c: 528: {
 10074                           ;Bluetooth.c: 530: SendRF_wait(Conf2_ChannelH_2_ON,2,16,8);
 10075  000566  0EA8               	movlw	low _Conf2_ChannelH_2_ON
 10076  000568  0100               	movlb	0	; () banked
 10077  00056A  6F68               	movwf	SendRF_wait@Code& (0+255),b
 10078  00056C  0EEF               	movlw	high _Conf2_ChannelH_2_ON
 10079  00056E  0100               	movlb	0	; () banked
 10080  000570  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 10081  000572  0E02               	movlw	2
 10082  000574  0100               	movlb	0	; () banked
 10083  000576  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 10084  000578  0E10               	movlw	16
 10085  00057A  0100               	movlb	0	; () banked
 10086  00057C  6F6B               	movwf	SendRF_wait@size& (0+255),b
 10087  00057E  0E08               	movlw	8
 10088  000580  0100               	movlb	0	; () banked
 10089  000582  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 10090  000584  EC67  F052         	call	_SendRF_wait	;wreg free
 10091                           
 10092                           ;Bluetooth.c: 531: }
 10093  000588  D075               	goto	l12550
 10094  00058A                     l12534:
 10095                           
 10096                           ;Bluetooth.c: 532: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_2_OFF_STR))
 10097  00058A  C0F2  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 10098  00058E  C0F3  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 10099  000592  0E88               	movlw	low _Conf2_ChannelH_2_OFF_STR
 10100  000594  0100               	movlb	0	; () banked
 10101  000596  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 10102  000598  0EEE               	movlw	high _Conf2_ChannelH_2_OFF_STR
 10103  00059A  0100               	movlb	0	; () banked
 10104  00059C  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 10105  00059E  EC08  F04E         	call	_StringMatchCaseInsensitive	;wreg free
 10106  0005A2  0900               	iorlw	0
 10107  0005A4  B4D8               	btfsc	status,2,c
 10108  0005A6  D012               	goto	l12538
 10109                           
 10110                           ;Bluetooth.c: 533: {
 10111                           ;Bluetooth.c: 535: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,8);
 10112  0005A8  0E98               	movlw	low _Conf2_ChannelH_2_OFF
 10113  0005AA  0100               	movlb	0	; () banked
 10114  0005AC  6F68               	movwf	SendRF_wait@Code& (0+255),b
 10115  0005AE  0EEF               	movlw	high _Conf2_ChannelH_2_OFF
 10116  0005B0  0100               	movlb	0	; () banked
 10117  0005B2  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 10118  0005B4  0E02               	movlw	2
 10119  0005B6  0100               	movlb	0	; () banked
 10120  0005B8  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 10121  0005BA  0E10               	movlw	16
 10122  0005BC  0100               	movlb	0	; () banked
 10123  0005BE  6F6B               	movwf	SendRF_wait@size& (0+255),b
 10124  0005C0  0E08               	movlw	8
 10125  0005C2  0100               	movlb	0	; () banked
 10126  0005C4  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 10127  0005C6  EC67  F052         	call	_SendRF_wait	;wreg free
 10128                           
 10129                           ;Bluetooth.c: 536: }
 10130  0005CA  D054               	goto	l12550
 10131  0005CC                     l12538:
 10132                           
 10133                           ;Bluetooth.c: 537: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_3_ON_STR))
 10134  0005CC  C0F2  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 10135  0005D0  C0F3  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 10136  0005D4  0EDA               	movlw	low _Conf2_ChannelH_3_ON_STR
 10137  0005D6  0100               	movlb	0	; () banked
 10138  0005D8  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 10139  0005DA  0EEE               	movlw	high _Conf2_ChannelH_3_ON_STR
 10140  0005DC  0100               	movlb	0	; () banked
 10141  0005DE  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 10142  0005E0  EC08  F04E         	call	_StringMatchCaseInsensitive	;wreg free
 10143  0005E4  0900               	iorlw	0
 10144  0005E6  B4D8               	btfsc	status,2,c
 10145  0005E8  D012               	goto	l12542
 10146                           
 10147                           ;Bluetooth.c: 538: {
 10148                           ;Bluetooth.c: 540: SendRF_wait(Conf2_ChannelH_3_ON,2,16,8);
 10149  0005EA  0EC8               	movlw	low _Conf2_ChannelH_3_ON
 10150  0005EC  0100               	movlb	0	; () banked
 10151  0005EE  6F68               	movwf	SendRF_wait@Code& (0+255),b
 10152  0005F0  0EEF               	movlw	high _Conf2_ChannelH_3_ON
 10153  0005F2  0100               	movlb	0	; () banked
 10154  0005F4  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 10155  0005F6  0E02               	movlw	2
 10156  0005F8  0100               	movlb	0	; () banked
 10157  0005FA  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 10158  0005FC  0E10               	movlw	16
 10159  0005FE  0100               	movlb	0	; () banked
 10160  000600  6F6B               	movwf	SendRF_wait@size& (0+255),b
 10161  000602  0E08               	movlw	8
 10162  000604  0100               	movlb	0	; () banked
 10163  000606  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 10164  000608  EC67  F052         	call	_SendRF_wait	;wreg free
 10165                           
 10166                           ;Bluetooth.c: 541: }
 10167  00060C  D033               	goto	l12550
 10168  00060E                     l12542:
 10169                           
 10170                           ;Bluetooth.c: 542: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_3_OFF_STR))
 10171  00060E  C0F2  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 10172  000612  C0F3  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 10173  000616  0E9D               	movlw	low _Conf2_ChannelH_3_OFF_STR
 10174  000618  0100               	movlb	0	; () banked
 10175  00061A  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 10176  00061C  0EEE               	movlw	high _Conf2_ChannelH_3_OFF_STR
 10177  00061E  0100               	movlb	0	; () banked
 10178  000620  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 10179  000622  EC08  F04E         	call	_StringMatchCaseInsensitive	;wreg free
 10180  000626  0900               	iorlw	0
 10181  000628  B4D8               	btfsc	status,2,c
 10182  00062A  D012               	goto	l12546
 10183                           
 10184                           ;Bluetooth.c: 543: {
 10185                           ;Bluetooth.c: 545: SendRF_wait(Conf2_ChannelH_2_OFF,3,16,8);
 10186  00062C  0E98               	movlw	low _Conf2_ChannelH_2_OFF
 10187  00062E  0100               	movlb	0	; () banked
 10188  000630  6F68               	movwf	SendRF_wait@Code& (0+255),b
 10189  000632  0EEF               	movlw	high _Conf2_ChannelH_2_OFF
 10190  000634  0100               	movlb	0	; () banked
 10191  000636  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 10192  000638  0E03               	movlw	3
 10193  00063A  0100               	movlb	0	; () banked
 10194  00063C  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 10195  00063E  0E10               	movlw	16
 10196  000640  0100               	movlb	0	; () banked
 10197  000642  6F6B               	movwf	SendRF_wait@size& (0+255),b
 10198  000644  0E08               	movlw	8
 10199  000646  0100               	movlb	0	; () banked
 10200  000648  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 10201  00064A  EC67  F052         	call	_SendRF_wait	;wreg free
 10202                           
 10203                           ;Bluetooth.c: 546: }
 10204  00064E  D012               	goto	l12550
 10205  000650                     l12546:
 10206                           
 10207                           ;Bluetooth.c: 547: else
 10208                           ;Bluetooth.c: 548: {
 10209                           ;Bluetooth.c: 550: UARTstring_CONST(SYNTAX_ERR);
 10210  000650  0E05               	movlw	low _SYNTAX_ERR
 10211  000652  0100               	movlb	0	; () banked
 10212  000654  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10213  000656  0EF0               	movlw	high _SYNTAX_ERR
 10214  000658  0100               	movlb	0	; () banked
 10215  00065A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10216  00065C  EC42  F053         	call	_UARTstring_CONST	;wreg free
 10217                           
 10218                           ;Bluetooth.c: 551: UARTstring_CONST(CRLN);
 10219  000660  0E51               	movlw	low _CRLN
 10220  000662  0100               	movlb	0	; () banked
 10221  000664  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10222  000666  0EF0               	movlw	high _CRLN
 10223  000668  0100               	movlb	0	; () banked
 10224  00066A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10225  00066C  EC42  F053         	call	_UARTstring_CONST	;wreg free
 10226                           
 10227                           ;Bluetooth.c: 552: return 0;
 10228                           ;	Return value of _UseBluetooth is never used
 10229  000670  0012               	return	
 10230  000672  D000               	goto	l12550
 10231  000674                     l12550:
 10232                           
 10233                           ;Bluetooth.c: 553: }
 10234                           ;Bluetooth.c: 554: if(ok)
 10235  000674  0102               	movlb	2	; () banked
 10236  000676  518A               	movf	UseBluetooth@ok& (0+255),w,b
 10237  000678  0102               	movlb	2	; () banked
 10238  00067A  B4D8               	btfsc	status,2,c
 10239  00067C  0012               	return	
 10240                           
 10241                           ; BSR set to: 2
 10242                           ;Bluetooth.c: 555: {
 10243                           ;Bluetooth.c: 556: UARTstringCRLN_CONST("Configuration 2 RF code sent");
 10244  00067E  0E41               	movlw	low STR_25
 10245  000680  0100               	movlb	0	; () banked
 10246  000682  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10247  000684  0EFA               	movlw	high STR_25
 10248  000686  0100               	movlb	0	; () banked
 10249  000688  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10250  00068A  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 10251                           
 10252                           ;Bluetooth.c: 558: }
 10253                           ;Bluetooth.c: 559: }
 10254                           
 10255                           ;Bluetooth.c: 557: return 1;
 10256                           ;	Return value of _UseBluetooth is never used
 10257  00068E  0012               	return	
 10258  000690                     l12556:
 10259                           
 10260                           ;Bluetooth.c: 560: else if(StringContainsCaseInsensitive(String,"NEC"))
 10261  000690  C0F2  F063         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 10262  000694  C0F3  F064         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 10263  000698  0EE8               	movlw	low STR_26
 10264  00069A  0100               	movlb	0	; () banked
 10265  00069C  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10266  00069E  0EFF               	movlw	high STR_26
 10267  0006A0  0100               	movlb	0	; () banked
 10268  0006A2  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10269  0006A4  EC6D  F03B         	call	_StringContainsCaseInsensitive	;wreg free
 10270  0006A8  0900               	iorlw	0
 10271  0006AA  B4D8               	btfsc	status,2,c
 10272  0006AC  D1EF               	goto	l12620
 10273                           
 10274                           ;Bluetooth.c: 561: {
 10275                           ;Bluetooth.c: 562: if(!GetNumberUnsigned(String, 2, &temp))
 10276  0006AE  C0F2  F06C         	movff	UseBluetooth@String,GetNumberUnsigned@This
 10277  0006B2  C0F3  F06D         	movff	UseBluetooth@String+1,GetNumberUnsigned@This+1
 10278  0006B6  0E02               	movlw	2
 10279  0006B8  0100               	movlb	0	; () banked
 10280  0006BA  6F6E               	movwf	GetNumberUnsigned@CommaNumber& (0+255),b
 10281  0006BC  0E90               	movlw	low UseBluetooth@temp
 10282  0006BE  0100               	movlb	0	; () banked
 10283  0006C0  6F6F               	movwf	GetNumberUnsigned@result& (0+255),b
 10284  0006C2  0E02               	movlw	high UseBluetooth@temp
 10285  0006C4  0100               	movlb	0	; () banked
 10286  0006C6  6F70               	movwf	(GetNumberUnsigned@result+1)& (0+255),b
 10287  0006C8  ECAC  F030         	call	_GetNumberUnsigned	;wreg free
 10288  0006CC  0900               	iorlw	0
 10289  0006CE  A4D8               	btfss	status,2,c
 10290  0006D0  D0C9               	goto	l12592
 10291                           
 10292                           ;Bluetooth.c: 563: {
 10293                           ;Bluetooth.c: 564: if(temp > 0xFF)
 10294  0006D2  0102               	movlb	2	; () banked
 10295  0006D4  5193               	movf	(UseBluetooth@temp+3)& (0+255),w,b
 10296  0006D6  0102               	movlb	2	; () banked
 10297  0006D8  1192               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
 10298  0006DA  E104               	bnz	u14260
 10299  0006DC  0102               	movlb	2	; () banked
 10300  0006DE  0591               	decf	(UseBluetooth@temp+1)& (0+255),w,b
 10301  0006E0  A0D8               	btfss	status,0,c
 10302  0006E2  D011               	goto	l2079
 10303  0006E4                     u14260:
 10304                           
 10305                           ; BSR set to: 2
 10306                           ;Bluetooth.c: 565: {
 10307                           ;Bluetooth.c: 566: UARTstringCRLN_CONST("Error: Command larger that 255");
 10308  0006E4  0E0F               	movlw	low STR_27
 10309  0006E6  0100               	movlb	0	; () banked
 10310  0006E8  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10311  0006EA  0EF9               	movlw	high STR_27
 10312  0006EC  0100               	movlb	0	; () banked
 10313  0006EE  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10314  0006F0  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 10315                           
 10316                           ;Bluetooth.c: 567: UARTstring_CONST(CRLN);
 10317  0006F4  0E51               	movlw	low _CRLN
 10318  0006F6  0100               	movlb	0	; () banked
 10319  0006F8  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10320  0006FA  0EF0               	movlw	high _CRLN
 10321  0006FC  0100               	movlb	0	; () banked
 10322  0006FE  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10323  000700  EC42  F053         	call	_UARTstring_CONST	;wreg free
 10324                           
 10325                           ;Bluetooth.c: 568: return 0;
 10326                           ;	Return value of _UseBluetooth is never used
 10327  000704  0012               	return	
 10328  000706                     l2079:
 10329                           
 10330                           ; BSR set to: 2
 10331                           ;Bluetooth.c: 569: }
 10332                           ;Bluetooth.c: 570: NecCommand = (unsigned char)temp;
 10333  000706  C290  F28F         	movff	UseBluetooth@temp,UseBluetooth@NecCommand
 10334                           
 10335                           ; BSR set to: 2
 10336                           ;Bluetooth.c: 571: if(!GetNumberUnsigned(String, 1, &temp))
 10337  00070A  C0F2  F06C         	movff	UseBluetooth@String,GetNumberUnsigned@This
 10338  00070E  C0F3  F06D         	movff	UseBluetooth@String+1,GetNumberUnsigned@This+1
 10339  000712  0E01               	movlw	1
 10340  000714  0100               	movlb	0	; () banked
 10341  000716  6F6E               	movwf	GetNumberUnsigned@CommaNumber& (0+255),b
 10342  000718  0E90               	movlw	low UseBluetooth@temp
 10343  00071A  0100               	movlb	0	; () banked
 10344  00071C  6F6F               	movwf	GetNumberUnsigned@result& (0+255),b
 10345  00071E  0E02               	movlw	high UseBluetooth@temp
 10346  000720  0100               	movlb	0	; () banked
 10347  000722  6F70               	movwf	(GetNumberUnsigned@result+1)& (0+255),b
 10348  000724  ECAC  F030         	call	_GetNumberUnsigned	;wreg free
 10349  000728  0900               	iorlw	0
 10350  00072A  A4D8               	btfss	status,2,c
 10351  00072C  D092               	goto	l12590
 10352                           
 10353                           ;Bluetooth.c: 572: {
 10354                           ;Bluetooth.c: 573: if(temp > 0xFF)
 10355  00072E  0102               	movlb	2	; () banked
 10356  000730  5193               	movf	(UseBluetooth@temp+3)& (0+255),w,b
 10357  000732  0102               	movlb	2	; () banked
 10358  000734  1192               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
 10359  000736  E104               	bnz	u14280
 10360  000738  0102               	movlb	2	; () banked
 10361  00073A  0591               	decf	(UseBluetooth@temp+1)& (0+255),w,b
 10362  00073C  A0D8               	btfss	status,0,c
 10363  00073E  D011               	goto	l2081
 10364  000740                     u14280:
 10365                           
 10366                           ; BSR set to: 2
 10367                           ;Bluetooth.c: 574: {
 10368                           ;Bluetooth.c: 575: UARTstringCRLN_CONST("Error: Address larger that 255");
 10369  000740  0E2E               	movlw	low STR_28
 10370  000742  0100               	movlb	0	; () banked
 10371  000744  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10372  000746  0EF9               	movlw	high STR_28
 10373  000748  0100               	movlb	0	; () banked
 10374  00074A  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10375  00074C  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 10376                           
 10377                           ;Bluetooth.c: 576: UARTstring_CONST(CRLN);
 10378  000750  0E51               	movlw	low _CRLN
 10379  000752  0100               	movlb	0	; () banked
 10380  000754  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10381  000756  0EF0               	movlw	high _CRLN
 10382  000758  0100               	movlb	0	; () banked
 10383  00075A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10384  00075C  EC42  F053         	call	_UARTstring_CONST	;wreg free
 10385                           
 10386                           ;Bluetooth.c: 577: return 0;
 10387                           ;	Return value of _UseBluetooth is never used
 10388  000760  0012               	return	
 10389  000762                     l2081:
 10390                           
 10391                           ; BSR set to: 2
 10392                           ;Bluetooth.c: 578: }
 10393                           ;Bluetooth.c: 579: NecAddress = (unsigned char) temp;
 10394  000762  C290  F28E         	movff	UseBluetooth@temp,UseBluetooth@NecAddress
 10395                           
 10396                           ; BSR set to: 2
 10397                           ;Bluetooth.c: 580: sprintf(buf,"NEC address: 0x%02X ", NecAddress);
 10398  000766  0E0C               	movlw	low UseBluetooth@buf
 10399  000768  0100               	movlb	0	; () banked
 10400  00076A  6FAE               	movwf	sprintf@sp& (0+255),b
 10401  00076C  0E02               	movlw	high UseBluetooth@buf
 10402  00076E  0100               	movlb	0	; () banked
 10403  000770  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 10404  000772  0E7A               	movlw	low STR_29
 10405  000774  0100               	movlb	0	; () banked
 10406  000776  6FB0               	movwf	sprintf@f& (0+255),b
 10407  000778  0EFC               	movlw	high STR_29
 10408  00077A  0100               	movlb	0	; () banked
 10409  00077C  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 10410  00077E  C28E  F0B2         	movff	UseBluetooth@NecAddress,?_sprintf+4
 10411  000782  0100               	movlb	0	; () banked
 10412  000784  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 10413  000786  EC27  F014         	call	_sprintf	;wreg free
 10414                           
 10415                           ;Bluetooth.c: 581: UARTstringCRLN(buf);
 10416  00078A  0E0C               	movlw	low UseBluetooth@buf
 10417  00078C  0100               	movlb	0	; () banked
 10418  00078E  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 10419  000790  0E02               	movlw	high UseBluetooth@buf
 10420  000792  0100               	movlb	0	; () banked
 10421  000794  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10422  000796  ECA3  F052         	call	_UARTstringCRLN	;wreg free
 10423                           
 10424                           ;Bluetooth.c: 582: sprintf(buf,"NEC command: 0x%02X ", NecCommand);
 10425  00079A  0E0C               	movlw	low UseBluetooth@buf
 10426  00079C  0100               	movlb	0	; () banked
 10427  00079E  6FAE               	movwf	sprintf@sp& (0+255),b
 10428  0007A0  0E02               	movlw	high UseBluetooth@buf
 10429  0007A2  0100               	movlb	0	; () banked
 10430  0007A4  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 10431  0007A6  0E65               	movlw	low STR_30
 10432  0007A8  0100               	movlb	0	; () banked
 10433  0007AA  6FB0               	movwf	sprintf@f& (0+255),b
 10434  0007AC  0EFC               	movlw	high STR_30
 10435  0007AE  0100               	movlb	0	; () banked
 10436  0007B0  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 10437  0007B2  C28F  F0B2         	movff	UseBluetooth@NecCommand,?_sprintf+4
 10438  0007B6  0100               	movlb	0	; () banked
 10439  0007B8  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 10440  0007BA  EC27  F014         	call	_sprintf	;wreg free
 10441                           
 10442                           ;Bluetooth.c: 583: UARTstringCRLN(buf);
 10443  0007BE  0E0C               	movlw	low UseBluetooth@buf
 10444  0007C0  0100               	movlb	0	; () banked
 10445  0007C2  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 10446  0007C4  0E02               	movlw	high UseBluetooth@buf
 10447  0007C6  0100               	movlb	0	; () banked
 10448  0007C8  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10449  0007CA  ECA3  F052         	call	_UARTstringCRLN	;wreg free
 10450                           
 10451                           ;Bluetooth.c: 584: EnteredNEC = EncodeNEC(NecAddress, NecCommand);
 10452  0007CE  C28F  F064         	movff	UseBluetooth@NecCommand,EncodeNEC@command
 10453  0007D2  0102               	movlb	2	; () banked
 10454  0007D4  518E               	movf	UseBluetooth@NecAddress& (0+255),w,b
 10455  0007D6  EC13  F042         	call	_EncodeNEC
 10456  0007DA  C064  F286         	movff	?_EncodeNEC,UseBluetooth@EnteredNEC
 10457  0007DE  C065  F287         	movff	?_EncodeNEC+1,UseBluetooth@EnteredNEC+1
 10458  0007E2  C066  F288         	movff	?_EncodeNEC+2,UseBluetooth@EnteredNEC+2
 10459  0007E6  C067  F289         	movff	?_EncodeNEC+3,UseBluetooth@EnteredNEC+3
 10460                           
 10461                           ;Bluetooth.c: 585: SendNEC_wait(EnteredNEC,0);
 10462  0007EA  C286  F075         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
 10463  0007EE  C287  F076         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
 10464  0007F2  C288  F077         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
 10465  0007F6  C289  F078         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
 10466  0007FA  0E00               	movlw	0
 10467  0007FC  0100               	movlb	0	; () banked
 10468  0007FE  6F79               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
 10469  000800  ECB9  F04D         	call	_SendNEC_wait	;wreg free
 10470                           
 10471                           ;Bluetooth.c: 586: sprintf(buf,"Sent NEC code = 0x%lX ", EnteredNEC);
 10472  000804  0E0C               	movlw	low UseBluetooth@buf
 10473  000806  0100               	movlb	0	; () banked
 10474  000808  6FAE               	movwf	sprintf@sp& (0+255),b
 10475  00080A  0E02               	movlw	high UseBluetooth@buf
 10476  00080C  0100               	movlb	0	; () banked
 10477  00080E  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 10478  000810  0EB1               	movlw	low STR_31
 10479  000812  0100               	movlb	0	; () banked
 10480  000814  6FB0               	movwf	sprintf@f& (0+255),b
 10481  000816  0EFB               	movlw	high STR_31
 10482  000818  0100               	movlb	0	; () banked
 10483  00081A  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 10484  00081C  C286  F0B2         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
 10485  000820  C287  F0B3         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
 10486  000824  C288  F0B4         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
 10487  000828  C289  F0B5         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
 10488  00082C  EC27  F014         	call	_sprintf	;wreg free
 10489                           
 10490                           ;Bluetooth.c: 587: UARTstringCRLN(buf);
 10491  000830  0E0C               	movlw	low UseBluetooth@buf
 10492  000832  0100               	movlb	0	; () banked
 10493  000834  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 10494  000836  0E02               	movlw	high UseBluetooth@buf
 10495  000838  0100               	movlb	0	; () banked
 10496  00083A  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10497  00083C  ECA3  F052         	call	_UARTstringCRLN	;wreg free
 10498                           
 10499                           ;Bluetooth.c: 588: UARTstring_CONST(CRLN);
 10500  000840  0E51               	movlw	low _CRLN
 10501  000842  0100               	movlb	0	; () banked
 10502  000844  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10503  000846  0EF0               	movlw	high _CRLN
 10504  000848  0100               	movlb	0	; () banked
 10505  00084A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10506  00084C  EC42  F053         	call	_UARTstring_CONST	;wreg free
 10507                           
 10508                           ;Bluetooth.c: 589: }
 10509  000850  0012               	return	
 10510  000852                     l12590:
 10511                           
 10512                           ;Bluetooth.c: 590: else
 10513                           ;Bluetooth.c: 591: {
 10514                           ;Bluetooth.c: 592: UARTstringCRLN_CONST("Error: could not decode Address");
 10515  000852  0EEF               	movlw	low STR_32
 10516  000854  0100               	movlb	0	; () banked
 10517  000856  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10518  000858  0EF8               	movlw	high STR_32
 10519  00085A  0100               	movlb	0	; () banked
 10520  00085C  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10521  00085E  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 10522                           
 10523                           ;Bluetooth.c: 593: }
 10524                           ;Bluetooth.c: 594: }
 10525  000862  0012               	return	
 10526  000864                     l12592:
 10527                           
 10528                           ;Bluetooth.c: 595: else if(!GetNumberUnsigned(String, 1, &EnteredNEC))
 10529  000864  C0F2  F06C         	movff	UseBluetooth@String,GetNumberUnsigned@This
 10530  000868  C0F3  F06D         	movff	UseBluetooth@String+1,GetNumberUnsigned@This+1
 10531  00086C  0E01               	movlw	1
 10532  00086E  0100               	movlb	0	; () banked
 10533  000870  6F6E               	movwf	GetNumberUnsigned@CommaNumber& (0+255),b
 10534  000872  0E86               	movlw	low UseBluetooth@EnteredNEC
 10535  000874  0100               	movlb	0	; () banked
 10536  000876  6F6F               	movwf	GetNumberUnsigned@result& (0+255),b
 10537  000878  0E02               	movlw	high UseBluetooth@EnteredNEC
 10538  00087A  0100               	movlb	0	; () banked
 10539  00087C  6F70               	movwf	(GetNumberUnsigned@result+1)& (0+255),b
 10540  00087E  ECAC  F030         	call	_GetNumberUnsigned	;wreg free
 10541  000882  0900               	iorlw	0
 10542  000884  A4D8               	btfss	status,2,c
 10543  000886  D08A               	goto	l12614
 10544                           
 10545                           ;Bluetooth.c: 596: {
 10546                           ;Bluetooth.c: 597: SendNEC_wait(EnteredNEC,0);
 10547  000888  C286  F075         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
 10548  00088C  C287  F076         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
 10549  000890  C288  F077         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
 10550  000894  C289  F078         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
 10551  000898  0E00               	movlw	0
 10552  00089A  0100               	movlb	0	; () banked
 10553  00089C  6F79               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
 10554  00089E  ECB9  F04D         	call	_SendNEC_wait	;wreg free
 10555                           
 10556                           ;Bluetooth.c: 598: sprintf(buf,"sent NEC code 0x%lX", EnteredNEC);
 10557  0008A2  0E0C               	movlw	low UseBluetooth@buf
 10558  0008A4  0100               	movlb	0	; () banked
 10559  0008A6  6FAE               	movwf	sprintf@sp& (0+255),b
 10560  0008A8  0E02               	movlw	high UseBluetooth@buf
 10561  0008AA  0100               	movlb	0	; () banked
 10562  0008AC  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 10563  0008AE  0E0A               	movlw	low STR_33
 10564  0008B0  0100               	movlb	0	; () banked
 10565  0008B2  6FB0               	movwf	sprintf@f& (0+255),b
 10566  0008B4  0EFD               	movlw	high STR_33
 10567  0008B6  0100               	movlb	0	; () banked
 10568  0008B8  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 10569  0008BA  C286  F0B2         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
 10570  0008BE  C287  F0B3         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
 10571  0008C2  C288  F0B4         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
 10572  0008C6  C289  F0B5         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
 10573  0008CA  EC27  F014         	call	_sprintf	;wreg free
 10574                           
 10575                           ;Bluetooth.c: 599: UARTstringCRLN(buf);
 10576  0008CE  0E0C               	movlw	low UseBluetooth@buf
 10577  0008D0  0100               	movlb	0	; () banked
 10578  0008D2  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 10579  0008D4  0E02               	movlw	high UseBluetooth@buf
 10580  0008D6  0100               	movlb	0	; () banked
 10581  0008D8  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10582  0008DA  ECA3  F052         	call	_UARTstringCRLN	;wreg free
 10583                           
 10584                           ;Bluetooth.c: 600: if(DecodeNEC(EnteredNEC, &NecAddress, &NecCommand))
 10585  0008DE  C286  F064         	movff	UseBluetooth@EnteredNEC,DecodeNEC@Nec
 10586  0008E2  C287  F065         	movff	UseBluetooth@EnteredNEC+1,DecodeNEC@Nec+1
 10587  0008E6  C288  F066         	movff	UseBluetooth@EnteredNEC+2,DecodeNEC@Nec+2
 10588  0008EA  C289  F067         	movff	UseBluetooth@EnteredNEC+3,DecodeNEC@Nec+3
 10589  0008EE  0E8E               	movlw	low UseBluetooth@NecAddress
 10590  0008F0  0100               	movlb	0	; () banked
 10591  0008F2  6F68               	movwf	DecodeNEC@address& (0+255),b
 10592  0008F4  0E02               	movlw	high UseBluetooth@NecAddress
 10593  0008F6  0100               	movlb	0	; () banked
 10594  0008F8  6F69               	movwf	(DecodeNEC@address+1)& (0+255),b
 10595  0008FA  0E8F               	movlw	low UseBluetooth@NecCommand
 10596  0008FC  0100               	movlb	0	; () banked
 10597  0008FE  6F6A               	movwf	DecodeNEC@command& (0+255),b
 10598  000900  0E02               	movlw	high UseBluetooth@NecCommand
 10599  000902  0100               	movlb	0	; () banked
 10600  000904  6F6B               	movwf	(DecodeNEC@command+1)& (0+255),b
 10601  000906  EC1E  F04C         	call	_DecodeNEC	;wreg free
 10602  00090A  0900               	iorlw	0
 10603  00090C  B4D8               	btfsc	status,2,c
 10604  00090E  D035               	goto	l12608
 10605                           
 10606                           ;Bluetooth.c: 601: {
 10607                           ;Bluetooth.c: 602: sprintf(buf,"address: 0x%02X ", NecAddress);
 10608  000910  0E0C               	movlw	low UseBluetooth@buf
 10609  000912  0100               	movlb	0	; () banked
 10610  000914  6FAE               	movwf	sprintf@sp& (0+255),b
 10611  000916  0E02               	movlw	high UseBluetooth@buf
 10612  000918  0100               	movlb	0	; () banked
 10613  00091A  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 10614  00091C  0E7E               	movlw	low (STR_29+4)
 10615  00091E  0100               	movlb	0	; () banked
 10616  000920  6FB0               	movwf	sprintf@f& (0+255),b
 10617  000922  0EFC               	movlw	high (STR_29+4)
 10618  000924  0100               	movlb	0	; () banked
 10619  000926  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 10620  000928  C28E  F0B2         	movff	UseBluetooth@NecAddress,?_sprintf+4
 10621  00092C  0100               	movlb	0	; () banked
 10622  00092E  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 10623  000930  EC27  F014         	call	_sprintf	;wreg free
 10624                           
 10625                           ;Bluetooth.c: 603: UARTstringCRLN(buf);
 10626  000934  0E0C               	movlw	low UseBluetooth@buf
 10627  000936  0100               	movlb	0	; () banked
 10628  000938  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 10629  00093A  0E02               	movlw	high UseBluetooth@buf
 10630  00093C  0100               	movlb	0	; () banked
 10631  00093E  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10632  000940  ECA3  F052         	call	_UARTstringCRLN	;wreg free
 10633                           
 10634                           ;Bluetooth.c: 604: sprintf(buf,"command: 0x%02X ", NecCommand);
 10635  000944  0E0C               	movlw	low UseBluetooth@buf
 10636  000946  0100               	movlb	0	; () banked
 10637  000948  6FAE               	movwf	sprintf@sp& (0+255),b
 10638  00094A  0E02               	movlw	high UseBluetooth@buf
 10639  00094C  0100               	movlb	0	; () banked
 10640  00094E  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 10641  000950  0E8D               	movlw	low (STR_50+27)
 10642  000952  0100               	movlb	0	; () banked
 10643  000954  6FB0               	movwf	sprintf@f& (0+255),b
 10644  000956  0EF5               	movlw	high (STR_50+27)
 10645  000958  0100               	movlb	0	; () banked
 10646  00095A  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 10647  00095C  C28F  F0B2         	movff	UseBluetooth@NecCommand,?_sprintf+4
 10648  000960  0100               	movlb	0	; () banked
 10649  000962  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 10650  000964  EC27  F014         	call	_sprintf	;wreg free
 10651                           
 10652                           ;Bluetooth.c: 605: UARTstringCRLN(buf);
 10653  000968  0E0C               	movlw	low UseBluetooth@buf
 10654  00096A  0100               	movlb	0	; () banked
 10655  00096C  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 10656  00096E  0E02               	movlw	high UseBluetooth@buf
 10657  000970  0100               	movlb	0	; () banked
 10658  000972  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10659  000974  ECA3  F052         	call	_UARTstringCRLN	;wreg free
 10660                           
 10661                           ;Bluetooth.c: 606: }
 10662  000978  D008               	goto	l2086
 10663  00097A                     l12608:
 10664                           
 10665                           ;Bluetooth.c: 607: else
 10666                           ;Bluetooth.c: 608: {
 10667                           ;Bluetooth.c: 609: UARTstringCRLN_CONST("Error: could not decode NEC code");
 10668  00097A  0E0D               	movlw	low STR_36
 10669  00097C  0100               	movlb	0	; () banked
 10670  00097E  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10671  000980  0EF8               	movlw	high STR_36
 10672  000982  0100               	movlb	0	; () banked
 10673  000984  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10674  000986  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 10675  00098A                     l2086:
 10676                           
 10677                           ;Bluetooth.c: 610: }
 10678                           ;Bluetooth.c: 611: UARTstring_CONST(CRLN);
 10679  00098A  0E51               	movlw	low _CRLN
 10680  00098C  0100               	movlb	0	; () banked
 10681  00098E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10682  000990  0EF0               	movlw	high _CRLN
 10683  000992  0100               	movlb	0	; () banked
 10684  000994  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10685  000996  EC42  F053         	call	_UARTstring_CONST	;wreg free
 10686                           
 10687                           ;Bluetooth.c: 613: }
 10688                           
 10689                           ;Bluetooth.c: 612: return 1;
 10690                           ;	Return value of _UseBluetooth is never used
 10691  00099A  0012               	return	
 10692  00099C                     l12614:
 10693                           
 10694                           ;Bluetooth.c: 614: else
 10695                           ;Bluetooth.c: 615: {
 10696                           ;Bluetooth.c: 616: if(!StringContains(String,"?"))
 10697  00099C  C0F2  F060         	movff	UseBluetooth@String,StringContains@This
 10698  0009A0  C0F3  F061         	movff	UseBluetooth@String+1,StringContains@This+1
 10699  0009A4  0EE6               	movlw	low (STR_116+2)
 10700  0009A6  0100               	movlb	0	; () banked
 10701  0009A8  6F62               	movwf	StringContains@That& (0+255),b
 10702  0009AA  0EFF               	movlw	high (STR_116+2)
 10703  0009AC  0100               	movlb	0	; () banked
 10704  0009AE  6F63               	movwf	(StringContains@That+1)& (0+255),b
 10705  0009B0  ECBA  F042         	call	_StringContains	;wreg free
 10706  0009B4  0900               	iorlw	0
 10707  0009B6  A4D8               	btfss	status,2,c
 10708  0009B8  D010               	goto	l2088
 10709                           
 10710                           ;Bluetooth.c: 617: {
 10711                           ;Bluetooth.c: 618: UARTstring_CONST(CRLN);
 10712  0009BA  0E51               	movlw	low _CRLN
 10713  0009BC  0100               	movlb	0	; () banked
 10714  0009BE  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10715  0009C0  0EF0               	movlw	high _CRLN
 10716  0009C2  0100               	movlb	0	; () banked
 10717  0009C4  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10718  0009C6  EC42  F053         	call	_UARTstring_CONST	;wreg free
 10719                           
 10720                           ;Bluetooth.c: 619: UARTstringCRLN_CONST("NEC code not entered correctly");
 10721  0009CA  0EE8               	movlw	low STR_38
 10722  0009CC  0100               	movlb	0	; () banked
 10723  0009CE  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10724  0009D0  0EF9               	movlw	high STR_38
 10725  0009D2  0100               	movlb	0	; () banked
 10726  0009D4  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10727  0009D6  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 10728  0009DA                     l2088:
 10729                           
 10730                           ;Bluetooth.c: 620: }
 10731                           ;Bluetooth.c: 621: UARTstring_CONST(CRLN);
 10732  0009DA  0E51               	movlw	low _CRLN
 10733  0009DC  0100               	movlb	0	; () banked
 10734  0009DE  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10735  0009E0  0EF0               	movlw	high _CRLN
 10736  0009E2  0100               	movlb	0	; () banked
 10737  0009E4  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10738  0009E6  EC42  F053         	call	_UARTstring_CONST	;wreg free
 10739                           
 10740                           ;Bluetooth.c: 622: UARTstringCRLN_CONST("Usage:");
 10741  0009EA  0EA6               	movlw	low STR_39
 10742  0009EC  0100               	movlb	0	; () banked
 10743  0009EE  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10744  0009F0  0EFF               	movlw	high STR_39
 10745  0009F2  0100               	movlb	0	; () banked
 10746  0009F4  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10747  0009F6  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 10748                           
 10749                           ;Bluetooth.c: 623: UARTstringCRLN_CONST("NEC = (32 bit code)");
 10750  0009FA  0EE2               	movlw	low STR_40
 10751  0009FC  0100               	movlb	0	; () banked
 10752  0009FE  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10753  000A00  0EFC               	movlw	high STR_40
 10754  000A02  0100               	movlb	0	; () banked
 10755  000A04  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10756  000A06  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 10757                           
 10758                           ;Bluetooth.c: 624: UARTstringCRLN_CONST("        or");
 10759  000A0A  0E4D               	movlw	low STR_41
 10760  000A0C  0100               	movlb	0	; () banked
 10761  000A0E  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10762  000A10  0EFF               	movlw	high STR_41
 10763  000A12  0100               	movlb	0	; () banked
 10764  000A14  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10765  000A16  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 10766                           
 10767                           ;Bluetooth.c: 625: UARTstringCRLN_CONST("NEC = address,command");
 10768  000A1A  0E23               	movlw	low STR_42
 10769  000A1C  0100               	movlb	0	; () banked
 10770  000A1E  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10771  000A20  0EFC               	movlw	high STR_42
 10772  000A22  0100               	movlb	0	; () banked
 10773  000A24  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10774  000A26  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 10775                           
 10776                           ;Bluetooth.c: 626: UARTstring_CONST(CRLN);
 10777  000A2A  0E51               	movlw	low _CRLN
 10778  000A2C  0100               	movlb	0	; () banked
 10779  000A2E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10780  000A30  0EF0               	movlw	high _CRLN
 10781  000A32  0100               	movlb	0	; () banked
 10782  000A34  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10783  000A36  EC42  F053         	call	_UARTstring_CONST	;wreg free
 10784                           
 10785                           ;Bluetooth.c: 627: UARTstringCRLN_CONST("Example:");
 10786  000A3A  0E7E               	movlw	low STR_43
 10787  000A3C  0100               	movlb	0	; () banked
 10788  000A3E  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10789  000A40  0EFF               	movlw	high STR_43
 10790  000A42  0100               	movlb	0	; () banked
 10791  000A44  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10792  000A46  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 10793                           
 10794                           ;Bluetooth.c: 628: UARTstringCRLN_CONST("NEC = 0x1CE350AF ");
 10795  000A4A  0EB8               	movlw	low STR_44
 10796  000A4C  0100               	movlb	0	; () banked
 10797  000A4E  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10798  000A50  0EFD               	movlw	high STR_44
 10799  000A52  0100               	movlb	0	; () banked
 10800  000A54  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10801  000A56  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 10802                           
 10803                           ;Bluetooth.c: 629: UARTstringCRLN_CONST("      or");
 10804  000A5A  0E4F               	movlw	low (STR_41+2)
 10805  000A5C  0100               	movlb	0	; () banked
 10806  000A5E  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10807  000A60  0EFF               	movlw	high (STR_41+2)
 10808  000A62  0100               	movlb	0	; () banked
 10809  000A64  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10810  000A66  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 10811                           
 10812                           ;Bluetooth.c: 630: UARTstringCRLN_CONST("NEC = 0x38, 0x0A");
 10813  000A6A  0E10               	movlw	low STR_46
 10814  000A6C  0100               	movlb	0	; () banked
 10815  000A6E  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10816  000A70  0EFE               	movlw	high STR_46
 10817  000A72  0100               	movlb	0	; () banked
 10818  000A74  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10819  000A76  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 10820                           
 10821                           ;Bluetooth.c: 631: UARTstring_CONST(CRLN);
 10822  000A7A  0E51               	movlw	low _CRLN
 10823  000A7C  0100               	movlb	0	; () banked
 10824  000A7E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10825  000A80  0EF0               	movlw	high _CRLN
 10826  000A82  0100               	movlb	0	; () banked
 10827  000A84  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10828  000A86  EC42  F053         	call	_UARTstring_CONST	;wreg free
 10829                           
 10830                           ;Bluetooth.c: 633: }
 10831                           ;Bluetooth.c: 634: }
 10832                           
 10833                           ;Bluetooth.c: 632: return 0;
 10834                           ;	Return value of _UseBluetooth is never used
 10835  000A8A  0012               	return	
 10836  000A8C                     l12620:
 10837                           
 10838                           ;Bluetooth.c: 635: else if(StringContainsCaseInsensitive(String,"RemoteButton"))
 10839  000A8C  C0F2  F063         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 10840  000A90  C0F3  F064         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 10841  000A94  0EF3               	movlw	low STR_47
 10842  000A96  0100               	movlb	0	; () banked
 10843  000A98  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10844  000A9A  0EFE               	movlw	high STR_47
 10845  000A9C  0100               	movlb	0	; () banked
 10846  000A9E  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10847  000AA0  EC6D  F03B         	call	_StringContainsCaseInsensitive	;wreg free
 10848  000AA4  0900               	iorlw	0
 10849  000AA6  B4D8               	btfsc	status,2,c
 10850  000AA8  D2C8               	goto	l12708
 10851                           
 10852                           ;Bluetooth.c: 636: {
 10853                           ;Bluetooth.c: 637: if(StringAddEqual(String))
 10854  000AAA  C0F2  F06F         	movff	UseBluetooth@String,StringAddEqual@Input
 10855  000AAE  C0F3  F070         	movff	UseBluetooth@String+1,StringAddEqual@Input+1
 10856  000AB2  EC86  F039         	call	_StringAddEqual	;wreg free
 10857  000AB6  0900               	iorlw	0
 10858  000AB8  B4D8               	btfsc	status,2,c
 10859  000ABA  D266               	goto	l12702
 10860                           
 10861                           ;Bluetooth.c: 638: {
 10862                           ;Bluetooth.c: 639: StringPos++;
 10863  000ABC  0100               	movlb	0	; () banked
 10864  000ABE  2BF4               	incf	UseBluetooth@StringPos& (0+255),f,b
 10865                           
 10866                           ; BSR set to: 0
 10867                           ;Bluetooth.c: 640: if(!GetNumberUnsigned(String, 1, &temp))
 10868  000AC0  C0F2  F06C         	movff	UseBluetooth@String,GetNumberUnsigned@This
 10869  000AC4  C0F3  F06D         	movff	UseBluetooth@String+1,GetNumberUnsigned@This+1
 10870  000AC8  0E01               	movlw	1
 10871  000ACA  0100               	movlb	0	; () banked
 10872  000ACC  6F6E               	movwf	GetNumberUnsigned@CommaNumber& (0+255),b
 10873  000ACE  0E90               	movlw	low UseBluetooth@temp
 10874  000AD0  0100               	movlb	0	; () banked
 10875  000AD2  6F6F               	movwf	GetNumberUnsigned@result& (0+255),b
 10876  000AD4  0E02               	movlw	high UseBluetooth@temp
 10877  000AD6  0100               	movlb	0	; () banked
 10878  000AD8  6F70               	movwf	(GetNumberUnsigned@result+1)& (0+255),b
 10879  000ADA  ECAC  F030         	call	_GetNumberUnsigned	;wreg free
 10880  000ADE  0900               	iorlw	0
 10881  000AE0  A4D8               	btfss	status,2,c
 10882  000AE2  D252               	goto	l12702
 10883                           
 10884                           ;Bluetooth.c: 641: {
 10885                           ;Bluetooth.c: 642: if(temp <= 12 && temp > 0)
 10886  000AE4  0102               	movlb	2	; () banked
 10887  000AE6  5193               	movf	(UseBluetooth@temp+3)& (0+255),w,b
 10888  000AE8  0102               	movlb	2	; () banked
 10889  000AEA  1192               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
 10890  000AEC  0102               	movlb	2	; () banked
 10891  000AEE  1191               	iorwf	(UseBluetooth@temp+1)& (0+255),w,b
 10892  000AF0  E104               	bnz	u14351
 10893  000AF2  0E0D               	movlw	13
 10894  000AF4  0102               	movlb	2	; () banked
 10895  000AF6  5D90               	subwf	UseBluetooth@temp& (0+255),w,b
 10896  000AF8  B0D8               	btfsc	status,0,c
 10897  000AFA                     u14351:
 10898  000AFA  D22C               	goto	l12698
 10899                           
 10900                           ; BSR set to: 2
 10901  000AFC  0102               	movlb	2	; () banked
 10902  000AFE  5190               	movf	UseBluetooth@temp& (0+255),w,b
 10903  000B00  0102               	movlb	2	; () banked
 10904  000B02  1191               	iorwf	(UseBluetooth@temp+1)& (0+255),w,b
 10905  000B04  0102               	movlb	2	; () banked
 10906  000B06  1192               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
 10907  000B08  0102               	movlb	2	; () banked
 10908  000B0A  1193               	iorwf	(UseBluetooth@temp+3)& (0+255),w,b
 10909  000B0C  B4D8               	btfsc	status,2,c
 10910  000B0E  D222               	goto	l12698
 10911                           
 10912                           ; BSR set to: 2
 10913                           ;Bluetooth.c: 643: {
 10914                           ;Bluetooth.c: 644: if(!StringContainsCaseInsensitive(String,"set"))
 10915  000B10  C0F2  F063         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 10916  000B14  C0F3  F064         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 10917  000B18  0E42               	movlw	low (STR_58+16)
 10918  000B1A  0100               	movlb	0	; () banked
 10919  000B1C  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10920  000B1E  0EFD               	movlw	high (STR_58+16)
 10921  000B20  0100               	movlb	0	; () banked
 10922  000B22  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10923  000B24  EC6D  F03B         	call	_StringContainsCaseInsensitive	;wreg free
 10924  000B28  0900               	iorlw	0
 10925  000B2A  A4D8               	btfss	status,2,c
 10926  000B2C  D123               	goto	l12658
 10927                           
 10928                           ;Bluetooth.c: 645: {
 10929                           ;Bluetooth.c: 646: tempNec = EncodeNEC(Global1.RemoteButtonNEC[temp-1][0], Global1.Remot
      +                          eButtonNEC[temp-1][1]);
 10930  000B2E  0EFE               	movlw	254
 10931  000B30  0102               	movlb	2	; () banked
 10932  000B32  6F00               	movwf	??_UseBluetooth& (0+255),b
 10933  000B34  0EFF               	movlw	255
 10934  000B36  0102               	movlb	2	; () banked
 10935  000B38  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 10936  000B3A  C290  F202         	movff	UseBluetooth@temp,??_UseBluetooth+2
 10937  000B3E  C291  F203         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
 10938  000B42  90D8               	bcf	status,0,c
 10939  000B44  0102               	movlb	2	; () banked
 10940  000B46  3702               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
 10941  000B48  3703               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
 10942  000B4A  0102               	movlb	2	; () banked
 10943  000B4C  5100               	movf	??_UseBluetooth& (0+255),w,b
 10944  000B4E  0102               	movlb	2	; () banked
 10945  000B50  2702               	addwf	(??_UseBluetooth+2)& (0+255),f,b
 10946  000B52  0102               	movlb	2	; () banked
 10947  000B54  5101               	movf	(??_UseBluetooth+1)& (0+255),w,b
 10948  000B56  0102               	movlb	2	; () banked
 10949  000B58  2303               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
 10950  000B5A  0ED5               	movlw	low _Global1
 10951  000B5C  0102               	movlb	2	; () banked
 10952  000B5E  6F04               	movwf	(??_UseBluetooth+4)& (0+255),b
 10953  000B60  0E02               	movlw	high _Global1
 10954  000B62  0102               	movlb	2	; () banked
 10955  000B64  6F05               	movwf	(??_UseBluetooth+5)& (0+255),b
 10956  000B66  0E05               	movlw	5
 10957  000B68  0102               	movlb	2	; () banked
 10958  000B6A  2704               	addwf	(??_UseBluetooth+4)& (0+255),f,b
 10959  000B6C  0E00               	movlw	0
 10960  000B6E  2305               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
 10961  000B70  0102               	movlb	2	; () banked
 10962  000B72  5102               	movf	(??_UseBluetooth+2)& (0+255),w,b
 10963  000B74  0102               	movlb	2	; () banked
 10964  000B76  2704               	addwf	(??_UseBluetooth+4)& (0+255),f,b
 10965  000B78  0102               	movlb	2	; () banked
 10966  000B7A  5103               	movf	(??_UseBluetooth+3)& (0+255),w,b
 10967  000B7C  0102               	movlb	2	; () banked
 10968  000B7E  2305               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
 10969  000B80  0E01               	movlw	1
 10970  000B82  0102               	movlb	2	; () banked
 10971  000B84  2504               	addwf	(??_UseBluetooth+4)& (0+255),w,b
 10972  000B86  6ED9               	movwf	fsr2l,c
 10973  000B88  0E00               	movlw	0
 10974  000B8A  0102               	movlb	2	; () banked
 10975  000B8C  2105               	addwfc	(??_UseBluetooth+5)& (0+255),w,b
 10976  000B8E  6EDA               	movwf	fsr2h,c
 10977  000B90  50DF               	movf	indf2,w,c
 10978  000B92  0100               	movlb	0	; () banked
 10979  000B94  6F64               	movwf	EncodeNEC@command& (0+255),b
 10980  000B96  0EFE               	movlw	254
 10981  000B98  0102               	movlb	2	; () banked
 10982  000B9A  6F06               	movwf	(??_UseBluetooth+6)& (0+255),b
 10983  000B9C  0EFF               	movlw	255
 10984  000B9E  0102               	movlb	2	; () banked
 10985  000BA0  6F07               	movwf	(??_UseBluetooth+7)& (0+255),b
 10986  000BA2  C290  F208         	movff	UseBluetooth@temp,??_UseBluetooth+8
 10987  000BA6  C291  F209         	movff	UseBluetooth@temp+1,??_UseBluetooth+9
 10988  000BAA  90D8               	bcf	status,0,c
 10989  000BAC  0102               	movlb	2	; () banked
 10990  000BAE  3708               	rlcf	(??_UseBluetooth+8)& (0+255),f,b
 10991  000BB0  3709               	rlcf	(??_UseBluetooth+9)& (0+255),f,b
 10992  000BB2  0102               	movlb	2	; () banked
 10993  000BB4  5106               	movf	(??_UseBluetooth+6)& (0+255),w,b
 10994  000BB6  0102               	movlb	2	; () banked
 10995  000BB8  2708               	addwf	(??_UseBluetooth+8)& (0+255),f,b
 10996  000BBA  0102               	movlb	2	; () banked
 10997  000BBC  5107               	movf	(??_UseBluetooth+7)& (0+255),w,b
 10998  000BBE  0102               	movlb	2	; () banked
 10999  000BC0  2309               	addwfc	(??_UseBluetooth+9)& (0+255),f,b
 11000  000BC2  0EDA               	movlw	low (_Global1+5)
 11001  000BC4  0102               	movlb	2	; () banked
 11002  000BC6  2508               	addwf	(??_UseBluetooth+8)& (0+255),w,b
 11003  000BC8  6ED9               	movwf	fsr2l,c
 11004  000BCA  0E02               	movlw	high (_Global1+5)
 11005  000BCC  0102               	movlb	2	; () banked
 11006  000BCE  2109               	addwfc	(??_UseBluetooth+9)& (0+255),w,b
 11007  000BD0  6EDA               	movwf	fsr2h,c
 11008  000BD2  50DF               	movf	indf2,w,c
 11009  000BD4  EC13  F042         	call	_EncodeNEC
 11010  000BD8  C064  F27C         	movff	?_EncodeNEC,UseBluetooth@tempNec
 11011  000BDC  C065  F27D         	movff	?_EncodeNEC+1,UseBluetooth@tempNec+1
 11012  000BE0  C066  F27E         	movff	?_EncodeNEC+2,UseBluetooth@tempNec+2
 11013  000BE4  C067  F27F         	movff	?_EncodeNEC+3,UseBluetooth@tempNec+3
 11014                           
 11015                           ;Bluetooth.c: 647: if(tempNec != 0x00FF00FF)
 11016  000BE8  0102               	movlb	2	; () banked
 11017  000BEA  297C               	incf	UseBluetooth@tempNec& (0+255),w,b
 11018  000BEC  E108               	bnz	u14380
 11019  000BEE  0102               	movlb	2	; () banked
 11020  000BF0  297E               	incf	(UseBluetooth@tempNec+2)& (0+255),w,b
 11021  000BF2  0102               	movlb	2	; () banked
 11022  000BF4  117D               	iorwf	(UseBluetooth@tempNec+1)& (0+255),w,b
 11023  000BF6  0102               	movlb	2	; () banked
 11024  000BF8  117F               	iorwf	(UseBluetooth@tempNec+3)& (0+255),w,b
 11025  000BFA  B4D8               	btfsc	status,2,c
 11026  000BFC  D0A9               	goto	l12652
 11027  000BFE                     u14380:
 11028                           
 11029                           ; BSR set to: 2
 11030                           ;Bluetooth.c: 648: {
 11031                           ;Bluetooth.c: 649: SendNEC_wait(tempNec,0);
 11032  000BFE  C27C  F075         	movff	UseBluetooth@tempNec,SendNEC_wait@code
 11033  000C02  C27D  F076         	movff	UseBluetooth@tempNec+1,SendNEC_wait@code+1
 11034  000C06  C27E  F077         	movff	UseBluetooth@tempNec+2,SendNEC_wait@code+2
 11035  000C0A  C27F  F078         	movff	UseBluetooth@tempNec+3,SendNEC_wait@code+3
 11036  000C0E  0E00               	movlw	0
 11037  000C10  0100               	movlb	0	; () banked
 11038  000C12  6F79               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
 11039  000C14  ECB9  F04D         	call	_SendNEC_wait	;wreg free
 11040                           
 11041                           ;Bluetooth.c: 650: sprintf(buf,"Sent NEC code 0x%lX ", tempNec);
 11042  000C18  0E0C               	movlw	low UseBluetooth@buf
 11043  000C1A  0100               	movlb	0	; () banked
 11044  000C1C  6FAE               	movwf	sprintf@sp& (0+255),b
 11045  000C1E  0E02               	movlw	high UseBluetooth@buf
 11046  000C20  0100               	movlb	0	; () banked
 11047  000C22  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 11048  000C24  0E8F               	movlw	low STR_49
 11049  000C26  0100               	movlb	0	; () banked
 11050  000C28  6FB0               	movwf	sprintf@f& (0+255),b
 11051  000C2A  0EFC               	movlw	high STR_49
 11052  000C2C  0100               	movlb	0	; () banked
 11053  000C2E  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 11054  000C30  C27C  F0B2         	movff	UseBluetooth@tempNec,?_sprintf+4
 11055  000C34  C27D  F0B3         	movff	UseBluetooth@tempNec+1,?_sprintf+5
 11056  000C38  C27E  F0B4         	movff	UseBluetooth@tempNec+2,?_sprintf+6
 11057  000C3C  C27F  F0B5         	movff	UseBluetooth@tempNec+3,?_sprintf+7
 11058  000C40  EC27  F014         	call	_sprintf	;wreg free
 11059                           
 11060                           ;Bluetooth.c: 651: UARTstringCRLN(buf);
 11061  000C44  0E0C               	movlw	low UseBluetooth@buf
 11062  000C46  0100               	movlb	0	; () banked
 11063  000C48  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 11064  000C4A  0E02               	movlw	high UseBluetooth@buf
 11065  000C4C  0100               	movlb	0	; () banked
 11066  000C4E  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11067  000C50  ECA3  F052         	call	_UARTstringCRLN	;wreg free
 11068                           
 11069                           ;Bluetooth.c: 652: sprintf(buf,"NEC Code address: 0x%02X , command: 0x%02X ",Global1.Rem
      +                          oteButtonNEC[temp-1][0], Global1.RemoteButtonNEC[temp-1][1]);
 11070  000C54  0E0C               	movlw	low UseBluetooth@buf
 11071  000C56  0100               	movlb	0	; () banked
 11072  000C58  6FAE               	movwf	sprintf@sp& (0+255),b
 11073  000C5A  0E02               	movlw	high UseBluetooth@buf
 11074  000C5C  0100               	movlb	0	; () banked
 11075  000C5E  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 11076  000C60  0E72               	movlw	low STR_50
 11077  000C62  0100               	movlb	0	; () banked
 11078  000C64  6FB0               	movwf	sprintf@f& (0+255),b
 11079  000C66  0EF5               	movlw	high STR_50
 11080  000C68  0100               	movlb	0	; () banked
 11081  000C6A  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 11082  000C6C  0EFE               	movlw	254
 11083  000C6E  0102               	movlb	2	; () banked
 11084  000C70  6F00               	movwf	??_UseBluetooth& (0+255),b
 11085  000C72  0EFF               	movlw	255
 11086  000C74  0102               	movlb	2	; () banked
 11087  000C76  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 11088  000C78  C290  F202         	movff	UseBluetooth@temp,??_UseBluetooth+2
 11089  000C7C  C291  F203         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
 11090  000C80  90D8               	bcf	status,0,c
 11091  000C82  0102               	movlb	2	; () banked
 11092  000C84  3702               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
 11093  000C86  3703               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
 11094  000C88  0102               	movlb	2	; () banked
 11095  000C8A  5100               	movf	??_UseBluetooth& (0+255),w,b
 11096  000C8C  0102               	movlb	2	; () banked
 11097  000C8E  2702               	addwf	(??_UseBluetooth+2)& (0+255),f,b
 11098  000C90  0102               	movlb	2	; () banked
 11099  000C92  5101               	movf	(??_UseBluetooth+1)& (0+255),w,b
 11100  000C94  0102               	movlb	2	; () banked
 11101  000C96  2303               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
 11102  000C98  0EDA               	movlw	low (_Global1+5)
 11103  000C9A  0102               	movlb	2	; () banked
 11104  000C9C  2502               	addwf	(??_UseBluetooth+2)& (0+255),w,b
 11105  000C9E  6ED9               	movwf	fsr2l,c
 11106  000CA0  0E02               	movlw	high (_Global1+5)
 11107  000CA2  0102               	movlb	2	; () banked
 11108  000CA4  2103               	addwfc	(??_UseBluetooth+3)& (0+255),w,b
 11109  000CA6  6EDA               	movwf	fsr2h,c
 11110  000CA8  50DF               	movf	indf2,w,c
 11111  000CAA  0102               	movlb	2	; () banked
 11112  000CAC  6F04               	movwf	(??_UseBluetooth+4)& (0+255),b
 11113  000CAE  0102               	movlb	2	; () banked
 11114  000CB0  5104               	movf	(??_UseBluetooth+4)& (0+255),w,b
 11115  000CB2  0100               	movlb	0	; () banked
 11116  000CB4  6FB2               	movwf	(?_sprintf+4)& (0+255),b
 11117  000CB6  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 11118  000CB8  0EFE               	movlw	254
 11119  000CBA  0102               	movlb	2	; () banked
 11120  000CBC  6F05               	movwf	(??_UseBluetooth+5)& (0+255),b
 11121  000CBE  0EFF               	movlw	255
 11122  000CC0  0102               	movlb	2	; () banked
 11123  000CC2  6F06               	movwf	(??_UseBluetooth+6)& (0+255),b
 11124  000CC4  C290  F207         	movff	UseBluetooth@temp,??_UseBluetooth+7
 11125  000CC8  C291  F208         	movff	UseBluetooth@temp+1,??_UseBluetooth+8
 11126  000CCC  90D8               	bcf	status,0,c
 11127  000CCE  0102               	movlb	2	; () banked
 11128  000CD0  3707               	rlcf	(??_UseBluetooth+7)& (0+255),f,b
 11129  000CD2  3708               	rlcf	(??_UseBluetooth+8)& (0+255),f,b
 11130  000CD4  0102               	movlb	2	; () banked
 11131  000CD6  5105               	movf	(??_UseBluetooth+5)& (0+255),w,b
 11132  000CD8  0102               	movlb	2	; () banked
 11133  000CDA  2707               	addwf	(??_UseBluetooth+7)& (0+255),f,b
 11134  000CDC  0102               	movlb	2	; () banked
 11135  000CDE  5106               	movf	(??_UseBluetooth+6)& (0+255),w,b
 11136  000CE0  0102               	movlb	2	; () banked
 11137  000CE2  2308               	addwfc	(??_UseBluetooth+8)& (0+255),f,b
 11138  000CE4  0ED5               	movlw	low _Global1
 11139  000CE6  0102               	movlb	2	; () banked
 11140  000CE8  6F09               	movwf	(??_UseBluetooth+9)& (0+255),b
 11141  000CEA  0E02               	movlw	high _Global1
 11142  000CEC  0102               	movlb	2	; () banked
 11143  000CEE  6F0A               	movwf	(??_UseBluetooth+10)& (0+255),b
 11144  000CF0  0E05               	movlw	5
 11145  000CF2  0102               	movlb	2	; () banked
 11146  000CF4  2709               	addwf	(??_UseBluetooth+9)& (0+255),f,b
 11147  000CF6  0E00               	movlw	0
 11148  000CF8  230A               	addwfc	(??_UseBluetooth+10)& (0+255),f,b
 11149  000CFA  0102               	movlb	2	; () banked
 11150  000CFC  5107               	movf	(??_UseBluetooth+7)& (0+255),w,b
 11151  000CFE  0102               	movlb	2	; () banked
 11152  000D00  2709               	addwf	(??_UseBluetooth+9)& (0+255),f,b
 11153  000D02  0102               	movlb	2	; () banked
 11154  000D04  5108               	movf	(??_UseBluetooth+8)& (0+255),w,b
 11155  000D06  0102               	movlb	2	; () banked
 11156  000D08  230A               	addwfc	(??_UseBluetooth+10)& (0+255),f,b
 11157  000D0A  0E01               	movlw	1
 11158  000D0C  0102               	movlb	2	; () banked
 11159  000D0E  2509               	addwf	(??_UseBluetooth+9)& (0+255),w,b
 11160  000D10  6ED9               	movwf	fsr2l,c
 11161  000D12  0E00               	movlw	0
 11162  000D14  0102               	movlb	2	; () banked
 11163  000D16  210A               	addwfc	(??_UseBluetooth+10)& (0+255),w,b
 11164  000D18  6EDA               	movwf	fsr2h,c
 11165  000D1A  50DF               	movf	indf2,w,c
 11166  000D1C  0102               	movlb	2	; () banked
 11167  000D1E  6F0B               	movwf	(??_UseBluetooth+11)& (0+255),b
 11168  000D20  0102               	movlb	2	; () banked
 11169  000D22  510B               	movf	(??_UseBluetooth+11)& (0+255),w,b
 11170  000D24  0100               	movlb	0	; () banked
 11171  000D26  6FB4               	movwf	(?_sprintf+6)& (0+255),b
 11172  000D28  6BB5               	clrf	(?_sprintf+7)& (0+255),b
 11173  000D2A  EC27  F014         	call	_sprintf	;wreg free
 11174                           
 11175                           ;Bluetooth.c: 653: UARTstringCRLN(buf);
 11176  000D2E  0E0C               	movlw	low UseBluetooth@buf
 11177  000D30  0100               	movlb	0	; () banked
 11178  000D32  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 11179  000D34  0E02               	movlw	high UseBluetooth@buf
 11180  000D36  0100               	movlb	0	; () banked
 11181  000D38  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11182  000D3A  ECA3  F052         	call	_UARTstringCRLN	;wreg free
 11183                           
 11184                           ;Bluetooth.c: 654: UARTstring_CONST(CRLN);
 11185  000D3E  0E51               	movlw	low _CRLN
 11186  000D40  0100               	movlb	0	; () banked
 11187  000D42  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11188  000D44  0EF0               	movlw	high _CRLN
 11189  000D46  0100               	movlb	0	; () banked
 11190  000D48  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11191  000D4A  EC42  F053         	call	_UARTstring_CONST	;wreg free
 11192                           
 11193                           ;Bluetooth.c: 655: return 1;
 11194                           ;	Return value of _UseBluetooth is never used
 11195  000D4E  0012               	return	
 11196  000D50                     l12652:
 11197                           
 11198                           ;Bluetooth.c: 656: }
 11199                           ;Bluetooth.c: 657: UARTstring_CONST(CRLN);
 11200  000D50  0E51               	movlw	low _CRLN
 11201  000D52  0100               	movlb	0	; () banked
 11202  000D54  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11203  000D56  0EF0               	movlw	high _CRLN
 11204  000D58  0100               	movlb	0	; () banked
 11205  000D5A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11206  000D5C  EC42  F053         	call	_UARTstring_CONST	;wreg free
 11207                           
 11208                           ;Bluetooth.c: 658: UARTstringCRLN_CONST("Error: No NEC code saved for specified command"
      +                          );
 11209  000D60  0EA5               	movlw	low STR_51
 11210  000D62  0100               	movlb	0	; () banked
 11211  000D64  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11212  000D66  0EF3               	movlw	high STR_51
 11213  000D68  0100               	movlb	0	; () banked
 11214  000D6A  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11215  000D6C  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 11216                           
 11217                           ;Bluetooth.c: 659: return 0;
 11218                           ;	Return value of _UseBluetooth is never used
 11219  000D70  0012               	return	
 11220                           
 11221                           ;Bluetooth.c: 660: }
 11222  000D72  D10A               	goto	l12702
 11223  000D74                     l12658:
 11224                           
 11225                           ;Bluetooth.c: 661: else
 11226                           ;Bluetooth.c: 662: {
 11227                           ;Bluetooth.c: 663: if(!WaitForIRsignal())
 11228  000D74  EC52  F04E         	call	_WaitForIRsignal	;wreg free
 11229  000D78  0900               	iorlw	0
 11230  000D7A  B4D8               	btfsc	status,2,c
 11231  000D7C  0012               	return	
 11232  000D7E  D001               	goto	l12662
 11233                           
 11234                           ;Bluetooth.c: 664: {
 11235                           ;Bluetooth.c: 665: return 0;
 11236                           ;	Return value of _UseBluetooth is never used
 11237  000D80  0012               	return	
 11238  000D82                     l12662:
 11239                           
 11240                           ;Bluetooth.c: 666: }
 11241                           ;Bluetooth.c: 669: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
 11242  000D82  C3EC  F064         	movff	_IR_NEC,DecodeNEC@Nec
 11243  000D86  C3ED  F065         	movff	_IR_NEC+1,DecodeNEC@Nec+1
 11244  000D8A  C3EE  F066         	movff	_IR_NEC+2,DecodeNEC@Nec+2
 11245  000D8E  C3EF  F067         	movff	_IR_NEC+3,DecodeNEC@Nec+3
 11246  000D92  0E8E               	movlw	low UseBluetooth@NecAddress
 11247  000D94  0100               	movlb	0	; () banked
 11248  000D96  6F68               	movwf	DecodeNEC@address& (0+255),b
 11249  000D98  0E02               	movlw	high UseBluetooth@NecAddress
 11250  000D9A  0100               	movlb	0	; () banked
 11251  000D9C  6F69               	movwf	(DecodeNEC@address+1)& (0+255),b
 11252  000D9E  0E8F               	movlw	low UseBluetooth@NecCommand
 11253  000DA0  0100               	movlb	0	; () banked
 11254  000DA2  6F6A               	movwf	DecodeNEC@command& (0+255),b
 11255  000DA4  0E02               	movlw	high UseBluetooth@NecCommand
 11256  000DA6  0100               	movlb	0	; () banked
 11257  000DA8  6F6B               	movwf	(DecodeNEC@command+1)& (0+255),b
 11258  000DAA  EC1E  F04C         	call	_DecodeNEC	;wreg free
 11259                           
 11260                           ;Bluetooth.c: 670: Global1.RemoteButtonNEC[temp - 1][0] = NecAddress;
 11261  000DAE  0EFE               	movlw	254
 11262  000DB0  0102               	movlb	2	; () banked
 11263  000DB2  6F00               	movwf	??_UseBluetooth& (0+255),b
 11264  000DB4  0EFF               	movlw	255
 11265  000DB6  0102               	movlb	2	; () banked
 11266  000DB8  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 11267  000DBA  C290  F202         	movff	UseBluetooth@temp,??_UseBluetooth+2
 11268  000DBE  C291  F203         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
 11269  000DC2  90D8               	bcf	status,0,c
 11270  000DC4  0102               	movlb	2	; () banked
 11271  000DC6  3702               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
 11272  000DC8  3703               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
 11273  000DCA  0102               	movlb	2	; () banked
 11274  000DCC  5100               	movf	??_UseBluetooth& (0+255),w,b
 11275  000DCE  0102               	movlb	2	; () banked
 11276  000DD0  2702               	addwf	(??_UseBluetooth+2)& (0+255),f,b
 11277  000DD2  0102               	movlb	2	; () banked
 11278  000DD4  5101               	movf	(??_UseBluetooth+1)& (0+255),w,b
 11279  000DD6  0102               	movlb	2	; () banked
 11280  000DD8  2303               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
 11281  000DDA  0EDA               	movlw	low (_Global1+5)
 11282  000DDC  0102               	movlb	2	; () banked
 11283  000DDE  2502               	addwf	(??_UseBluetooth+2)& (0+255),w,b
 11284  000DE0  6ED9               	movwf	fsr2l,c
 11285  000DE2  0E02               	movlw	high (_Global1+5)
 11286  000DE4  0102               	movlb	2	; () banked
 11287  000DE6  2103               	addwfc	(??_UseBluetooth+3)& (0+255),w,b
 11288  000DE8  6EDA               	movwf	fsr2h,c
 11289  000DEA  C28E  FFDF         	movff	UseBluetooth@NecAddress,indf2
 11290                           
 11291                           ; BSR set to: 2
 11292                           ;Bluetooth.c: 671: Global1.RemoteButtonNEC[temp - 1][1] = NecCommand;
 11293  000DEE  0EFE               	movlw	254
 11294  000DF0  0102               	movlb	2	; () banked
 11295  000DF2  6F00               	movwf	??_UseBluetooth& (0+255),b
 11296  000DF4  0EFF               	movlw	255
 11297  000DF6  0102               	movlb	2	; () banked
 11298  000DF8  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 11299  000DFA  C290  F202         	movff	UseBluetooth@temp,??_UseBluetooth+2
 11300  000DFE  C291  F203         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
 11301  000E02  90D8               	bcf	status,0,c
 11302  000E04  0102               	movlb	2	; () banked
 11303  000E06  3702               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
 11304  000E08  3703               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
 11305  000E0A  0102               	movlb	2	; () banked
 11306  000E0C  5100               	movf	??_UseBluetooth& (0+255),w,b
 11307  000E0E  0102               	movlb	2	; () banked
 11308  000E10  2702               	addwf	(??_UseBluetooth+2)& (0+255),f,b
 11309  000E12  0102               	movlb	2	; () banked
 11310  000E14  5101               	movf	(??_UseBluetooth+1)& (0+255),w,b
 11311  000E16  0102               	movlb	2	; () banked
 11312  000E18  2303               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
 11313  000E1A  0ED5               	movlw	low _Global1
 11314  000E1C  0102               	movlb	2	; () banked
 11315  000E1E  6F04               	movwf	(??_UseBluetooth+4)& (0+255),b
 11316  000E20  0E02               	movlw	high _Global1
 11317  000E22  0102               	movlb	2	; () banked
 11318  000E24  6F05               	movwf	(??_UseBluetooth+5)& (0+255),b
 11319  000E26  0E05               	movlw	5
 11320  000E28  0102               	movlb	2	; () banked
 11321  000E2A  2704               	addwf	(??_UseBluetooth+4)& (0+255),f,b
 11322  000E2C  0E00               	movlw	0
 11323  000E2E  2305               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
 11324  000E30  0102               	movlb	2	; () banked
 11325  000E32  5102               	movf	(??_UseBluetooth+2)& (0+255),w,b
 11326  000E34  0102               	movlb	2	; () banked
 11327  000E36  2704               	addwf	(??_UseBluetooth+4)& (0+255),f,b
 11328  000E38  0102               	movlb	2	; () banked
 11329  000E3A  5103               	movf	(??_UseBluetooth+3)& (0+255),w,b
 11330  000E3C  0102               	movlb	2	; () banked
 11331  000E3E  2305               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
 11332  000E40  0E01               	movlw	1
 11333  000E42  0102               	movlb	2	; () banked
 11334  000E44  2504               	addwf	(??_UseBluetooth+4)& (0+255),w,b
 11335  000E46  6ED9               	movwf	fsr2l,c
 11336  000E48  0E00               	movlw	0
 11337  000E4A  0102               	movlb	2	; () banked
 11338  000E4C  2105               	addwfc	(??_UseBluetooth+5)& (0+255),w,b
 11339  000E4E  6EDA               	movwf	fsr2h,c
 11340  000E50  C28F  FFDF         	movff	UseBluetooth@NecCommand,indf2
 11341                           
 11342                           ; BSR set to: 2
 11343                           ;Bluetooth.c: 672: SyncGlobalToEEPROM();
 11344  000E54  EC69  F04D         	call	_SyncGlobalToEEPROM	;wreg free
 11345                           
 11346                           ;Bluetooth.c: 673: UARTstring_CONST(CRLN);
 11347  000E58  0E51               	movlw	low _CRLN
 11348  000E5A  0100               	movlb	0	; () banked
 11349  000E5C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11350  000E5E  0EF0               	movlw	high _CRLN
 11351  000E60  0100               	movlb	0	; () banked
 11352  000E62  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11353  000E64  EC42  F053         	call	_UARTstring_CONST	;wreg free
 11354                           
 11355                           ;Bluetooth.c: 674: sprintf(buf,"RemoteButton%lu now transmits NEC code 0x%lX ",temp, IR_
      +                          NEC);
 11356  000E68  0E0C               	movlw	low UseBluetooth@buf
 11357  000E6A  0100               	movlb	0	; () banked
 11358  000E6C  6FAE               	movwf	sprintf@sp& (0+255),b
 11359  000E6E  0E02               	movlw	high UseBluetooth@buf
 11360  000E70  0100               	movlb	0	; () banked
 11361  000E72  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 11362  000E74  0ED4               	movlw	low STR_52
 11363  000E76  0100               	movlb	0	; () banked
 11364  000E78  6FB0               	movwf	sprintf@f& (0+255),b
 11365  000E7A  0EF3               	movlw	high STR_52
 11366  000E7C  0100               	movlb	0	; () banked
 11367  000E7E  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 11368  000E80  C290  F0B2         	movff	UseBluetooth@temp,?_sprintf+4
 11369  000E84  C291  F0B3         	movff	UseBluetooth@temp+1,?_sprintf+5
 11370  000E88  C292  F0B4         	movff	UseBluetooth@temp+2,?_sprintf+6
 11371  000E8C  C293  F0B5         	movff	UseBluetooth@temp+3,?_sprintf+7
 11372  000E90  C3EC  F0B6         	movff	_IR_NEC,?_sprintf+8
 11373  000E94  C3ED  F0B7         	movff	_IR_NEC+1,?_sprintf+9
 11374  000E98  C3EE  F0B8         	movff	_IR_NEC+2,?_sprintf+10
 11375  000E9C  C3EF  F0B9         	movff	_IR_NEC+3,?_sprintf+11
 11376  000EA0  EC27  F014         	call	_sprintf	;wreg free
 11377                           
 11378                           ;Bluetooth.c: 675: UARTstringCRLN(buf);
 11379  000EA4  0E0C               	movlw	low UseBluetooth@buf
 11380  000EA6  0100               	movlb	0	; () banked
 11381  000EA8  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 11382  000EAA  0E02               	movlw	high UseBluetooth@buf
 11383  000EAC  0100               	movlb	0	; () banked
 11384  000EAE  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11385  000EB0  ECA3  F052         	call	_UARTstringCRLN	;wreg free
 11386                           
 11387                           ;Bluetooth.c: 676: sprintf(buf,"NEC Code address: 0x%02X , command: 0x%02X ",NecAddress,
      +                           NecCommand);
 11388  000EB4  0E0C               	movlw	low UseBluetooth@buf
 11389  000EB6  0100               	movlb	0	; () banked
 11390  000EB8  6FAE               	movwf	sprintf@sp& (0+255),b
 11391  000EBA  0E02               	movlw	high UseBluetooth@buf
 11392  000EBC  0100               	movlb	0	; () banked
 11393  000EBE  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 11394  000EC0  0E72               	movlw	low STR_50
 11395  000EC2  0100               	movlb	0	; () banked
 11396  000EC4  6FB0               	movwf	sprintf@f& (0+255),b
 11397  000EC6  0EF5               	movlw	high STR_50
 11398  000EC8  0100               	movlb	0	; () banked
 11399  000ECA  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 11400  000ECC  C28E  F0B2         	movff	UseBluetooth@NecAddress,?_sprintf+4
 11401  000ED0  0100               	movlb	0	; () banked
 11402  000ED2  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 11403  000ED4  C28F  F0B4         	movff	UseBluetooth@NecCommand,?_sprintf+6
 11404  000ED8  0100               	movlb	0	; () banked
 11405  000EDA  6BB5               	clrf	(?_sprintf+7)& (0+255),b
 11406  000EDC  EC27  F014         	call	_sprintf	;wreg free
 11407                           
 11408                           ;Bluetooth.c: 677: UARTstringCRLN(buf);
 11409  000EE0  0E0C               	movlw	low UseBluetooth@buf
 11410  000EE2  0100               	movlb	0	; () banked
 11411  000EE4  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 11412  000EE6  0E02               	movlw	high UseBluetooth@buf
 11413  000EE8  0100               	movlb	0	; () banked
 11414  000EEA  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11415  000EEC  ECA3  F052         	call	_UARTstringCRLN	;wreg free
 11416                           
 11417                           ;Bluetooth.c: 678: UARTstring_CONST(CRLN);
 11418  000EF0  0E51               	movlw	low _CRLN
 11419  000EF2  0100               	movlb	0	; () banked
 11420  000EF4  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11421  000EF6  0EF0               	movlw	high _CRLN
 11422  000EF8  0100               	movlb	0	; () banked
 11423  000EFA  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11424  000EFC  EC42  F053         	call	_UARTstring_CONST	;wreg free
 11425                           
 11426                           ;Bluetooth.c: 680: for(i =0;i<10;i++)
 11427  000F00  0E00               	movlw	0
 11428  000F02  0102               	movlb	2	; () banked
 11429  000F04  6F94               	movwf	UseBluetooth@i& (0+255),b
 11430                           
 11431                           ; BSR set to: 2
 11432  000F06  0E09               	movlw	9
 11433  000F08  0102               	movlb	2	; () banked
 11434  000F0A  6594               	cpfsgt	UseBluetooth@i& (0+255),b
 11435  000F0C  D002               	goto	l12688
 11436  000F0E  0012               	return	
 11437                           
 11438                           ; BSR set to: 2
 11439  000F10  0012               	return	
 11440  000F12                     l12688:
 11441                           
 11442                           ; BSR set to: 2
 11443                           ;Bluetooth.c: 681: {
 11444                           ;Bluetooth.c: 682: (LATC |= 0x04);
 11445  000F12  848B               	bsf	3979,2,c	;volatile
 11446                           
 11447                           ; BSR set to: 2
 11448                           ;Bluetooth.c: 683: delayUS(50000);
 11449  000F14  0E50               	movlw	80
 11450  000F16  0100               	movlb	0	; () banked
 11451  000F18  6F60               	movwf	delayUS@US& (0+255),b
 11452  000F1A  0EC3               	movlw	195
 11453  000F1C  6F61               	movwf	(delayUS@US+1)& (0+255),b
 11454  000F1E  0E00               	movlw	0
 11455  000F20  6F62               	movwf	(delayUS@US+2)& (0+255),b
 11456  000F22  0E00               	movlw	0
 11457  000F24  6F63               	movwf	(delayUS@US+3)& (0+255),b
 11458  000F26  EC3F  F051         	call	_delayUS	;wreg free
 11459                           
 11460                           ;Bluetooth.c: 684: (LATC &= ~0x04);
 11461  000F2A  948B               	bcf	3979,2,c	;volatile
 11462                           
 11463                           ;Bluetooth.c: 685: delayUS(50000);
 11464  000F2C  0E50               	movlw	80
 11465  000F2E  0100               	movlb	0	; () banked
 11466  000F30  6F60               	movwf	delayUS@US& (0+255),b
 11467  000F32  0EC3               	movlw	195
 11468  000F34  6F61               	movwf	(delayUS@US+1)& (0+255),b
 11469  000F36  0E00               	movlw	0
 11470  000F38  6F62               	movwf	(delayUS@US+2)& (0+255),b
 11471  000F3A  0E00               	movlw	0
 11472  000F3C  6F63               	movwf	(delayUS@US+3)& (0+255),b
 11473  000F3E  EC3F  F051         	call	_delayUS	;wreg free
 11474  000F42  0102               	movlb	2	; () banked
 11475  000F44  2B94               	incf	UseBluetooth@i& (0+255),f,b
 11476                           
 11477                           ; BSR set to: 2
 11478  000F46  0E09               	movlw	9
 11479  000F48  0102               	movlb	2	; () banked
 11480  000F4A  6594               	cpfsgt	UseBluetooth@i& (0+255),b
 11481  000F4C  D7E2               	goto	l12688
 11482  000F4E  0012               	return	
 11483                           
 11484                           ; BSR set to: 2
 11485                           ;Bluetooth.c: 686: }
 11486                           ;Bluetooth.c: 687: return 1;
 11487                           ;	Return value of _UseBluetooth is never used
 11488  000F50  0012               	return	
 11489                           
 11490                           ; BSR set to: 2
 11491                           ;Bluetooth.c: 688: }
 11492                           ;Bluetooth.c: 689: }
 11493  000F52  D01A               	goto	l12702
 11494  000F54                     l12698:
 11495                           
 11496                           ; BSR set to: 2
 11497                           ;Bluetooth.c: 690: else
 11498                           ;Bluetooth.c: 691: {
 11499                           ;Bluetooth.c: 692: UARTstring_CONST(CRLN);
 11500  000F54  0E51               	movlw	low _CRLN
 11501  000F56  0100               	movlb	0	; () banked
 11502  000F58  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11503  000F5A  0EF0               	movlw	high _CRLN
 11504  000F5C  0100               	movlb	0	; () banked
 11505  000F5E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11506  000F60  EC42  F053         	call	_UARTstring_CONST	;wreg free
 11507                           
 11508                           ;Bluetooth.c: 693: UARTstringCRLN_CONST("Error: Remote button number too high");
 11509  000F64  0E39               	movlw	low STR_54
 11510  000F66  0100               	movlb	0	; () banked
 11511  000F68  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11512  000F6A  0EF7               	movlw	high STR_54
 11513  000F6C  0100               	movlb	0	; () banked
 11514  000F6E  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11515  000F70  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 11516                           
 11517                           ;Bluetooth.c: 694: UARTstring_CONST(CRLN);
 11518  000F74  0E51               	movlw	low _CRLN
 11519  000F76  0100               	movlb	0	; () banked
 11520  000F78  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11521  000F7A  0EF0               	movlw	high _CRLN
 11522  000F7C  0100               	movlb	0	; () banked
 11523  000F7E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11524  000F80  EC42  F053         	call	_UARTstring_CONST	;wreg free
 11525                           
 11526                           ;Bluetooth.c: 695: return 0;
 11527                           ;	Return value of _UseBluetooth is never used
 11528  000F84  0012               	return	
 11529  000F86  D000               	goto	l12702
 11530  000F88                     l12702:
 11531                           
 11532                           ;Bluetooth.c: 696: }
 11533                           ;Bluetooth.c: 697: }
 11534                           ;Bluetooth.c: 698: }
 11535                           ;Bluetooth.c: 699: UARTstring_CONST(CRLN);
 11536  000F88  0E51               	movlw	low _CRLN
 11537  000F8A  0100               	movlb	0	; () banked
 11538  000F8C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11539  000F8E  0EF0               	movlw	high _CRLN
 11540  000F90  0100               	movlb	0	; () banked
 11541  000F92  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11542  000F94  EC42  F053         	call	_UARTstring_CONST	;wreg free
 11543                           
 11544                           ;Bluetooth.c: 700: UARTstringCRLN_CONST("Error: Remote button not specified");
 11545  000F98  0E82               	movlw	low STR_55
 11546  000F9A  0100               	movlb	0	; () banked
 11547  000F9C  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11548  000F9E  0EF7               	movlw	high STR_55
 11549  000FA0  0100               	movlb	0	; () banked
 11550  000FA2  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11551  000FA4  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 11552                           
 11553                           ;Bluetooth.c: 701: UARTstring_CONST(CRLN);
 11554  000FA8  0E51               	movlw	low _CRLN
 11555  000FAA  0100               	movlb	0	; () banked
 11556  000FAC  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11557  000FAE  0EF0               	movlw	high _CRLN
 11558  000FB0  0100               	movlb	0	; () banked
 11559  000FB2  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11560  000FB4  EC42  F053         	call	_UARTstring_CONST	;wreg free
 11561                           
 11562                           ;Bluetooth.c: 702: UARTstringCRLN_CONST("Usage:");
 11563  000FB8  0EA6               	movlw	low STR_39
 11564  000FBA  0100               	movlb	0	; () banked
 11565  000FBC  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11566  000FBE  0EFF               	movlw	high STR_39
 11567  000FC0  0100               	movlb	0	; () banked
 11568  000FC2  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11569  000FC4  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 11570                           
 11571                           ;Bluetooth.c: 703: UARTstringCRLN_CONST("RemoteButton'x'");
 11572  000FC8  0E21               	movlw	low STR_57
 11573  000FCA  0100               	movlb	0	; () banked
 11574  000FCC  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11575  000FCE  0EFE               	movlw	high STR_57
 11576  000FD0  0100               	movlb	0	; () banked
 11577  000FD2  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11578  000FD4  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 11579                           
 11580                           ;Bluetooth.c: 704: UARTstringCRLN_CONST("RemoteButton'x' set");
 11581  000FD8  0E32               	movlw	low STR_58
 11582  000FDA  0100               	movlb	0	; () banked
 11583  000FDC  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11584  000FDE  0EFD               	movlw	high STR_58
 11585  000FE0  0100               	movlb	0	; () banked
 11586  000FE2  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11587  000FE4  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 11588                           
 11589                           ;Bluetooth.c: 705: UARTstring_CONST(CRLN);
 11590  000FE8  0E51               	movlw	low _CRLN
 11591  000FEA  0100               	movlb	0	; () banked
 11592  000FEC  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11593  000FEE  0EF0               	movlw	high _CRLN
 11594  000FF0  0100               	movlb	0	; () banked
 11595  000FF2  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11596  000FF4  EC42  F053         	call	_UARTstring_CONST	;wreg free
 11597                           
 11598                           ;Bluetooth.c: 706: UARTstringCRLN_CONST("Example:");
 11599  000FF8  0E7E               	movlw	low STR_43
 11600  000FFA  0100               	movlb	0	; () banked
 11601  000FFC  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11602  000FFE  0EFF               	movlw	high STR_43
 11603  001000  0100               	movlb	0	; () banked
 11604  001002  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11605  001004  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 11606                           
 11607                           ;Bluetooth.c: 707: UARTstringCRLN_CONST("RemoteButton1");
 11608  001008  0E6F               	movlw	low STR_60
 11609  00100A  0100               	movlb	0	; () banked
 11610  00100C  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11611  00100E  0EFE               	movlw	high STR_60
 11612  001010  0100               	movlb	0	; () banked
 11613  001012  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11614  001014  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 11615                           
 11616                           ;Bluetooth.c: 708: UARTstringCRLN_CONST("RemoteButton1 set");
 11617  001018  0ECA               	movlw	low STR_61
 11618  00101A  0100               	movlb	0	; () banked
 11619  00101C  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11620  00101E  0EFD               	movlw	high STR_61
 11621  001020  0100               	movlb	0	; () banked
 11622  001022  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11623  001024  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 11624                           
 11625                           ;Bluetooth.c: 709: UARTstring_CONST(CRLN);
 11626  001028  0E51               	movlw	low _CRLN
 11627  00102A  0100               	movlb	0	; () banked
 11628  00102C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11629  00102E  0EF0               	movlw	high _CRLN
 11630  001030  0100               	movlb	0	; () banked
 11631  001032  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11632  001034  EC42  F053         	call	_UARTstring_CONST	;wreg free
 11633                           
 11634                           ;Bluetooth.c: 711: }
 11635                           
 11636                           ;Bluetooth.c: 710: return 0;
 11637                           ;	Return value of _UseBluetooth is never used
 11638  001038  0012               	return	
 11639  00103A                     l12708:
 11640                           
 11641                           ;Bluetooth.c: 712: else if(StringContainsCaseInsensitive(String,"RF set") || StringConta
      +                          insCaseInsensitive(String,"RF clear"))
 11642  00103A  C0F2  F063         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 11643  00103E  C0F3  F064         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 11644  001042  0EAD               	movlw	low STR_62
 11645  001044  0100               	movlb	0	; () banked
 11646  001046  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 11647  001048  0EFF               	movlw	high STR_62
 11648  00104A  0100               	movlb	0	; () banked
 11649  00104C  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 11650  00104E  EC6D  F03B         	call	_StringContainsCaseInsensitive	;wreg free
 11651  001052  0900               	iorlw	0
 11652  001054  A4D8               	btfss	status,2,c
 11653  001056  D010               	goto	l12712
 11654  001058  C0F2  F063         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 11655  00105C  C0F3  F064         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 11656  001060  0E87               	movlw	low STR_63
 11657  001062  0100               	movlb	0	; () banked
 11658  001064  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 11659  001066  0EFF               	movlw	high STR_63
 11660  001068  0100               	movlb	0	; () banked
 11661  00106A  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 11662  00106C  EC6D  F03B         	call	_StringContainsCaseInsensitive	;wreg free
 11663  001070  0900               	iorlw	0
 11664  001072  B4D8               	btfsc	status,2,c
 11665  001074  EF7F  F00C         	goto	l12990
 11666  001078                     l12712:
 11667                           
 11668                           ;Bluetooth.c: 713: {
 11669                           ;Bluetooth.c: 714: if(StringContainsCaseInsensitive(String,"RF set"))
 11670  001078  C0F2  F063         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 11671  00107C  C0F3  F064         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 11672  001080  0EAD               	movlw	low STR_62
 11673  001082  0100               	movlb	0	; () banked
 11674  001084  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 11675  001086  0EFF               	movlw	high STR_62
 11676  001088  0100               	movlb	0	; () banked
 11677  00108A  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 11678  00108C  EC6D  F03B         	call	_StringContainsCaseInsensitive	;wreg free
 11679  001090  0900               	iorlw	0
 11680  001092  B4D8               	btfsc	status,2,c
 11681  001094  D002               	goto	l12716
 11682                           
 11683                           ;Bluetooth.c: 715: {
 11684                           ;Bluetooth.c: 716: set = 1;
 11685  001096  0E01               	movlw	1
 11686  001098  D001               	goto	L4
 11687  00109A                     l12716:
 11688                           
 11689                           ;Bluetooth.c: 718: else
 11690                           ;Bluetooth.c: 719: {
 11691                           ;Bluetooth.c: 720: set = 0;
 11692  00109A  0E00               	movlw	0
 11693  00109C                     L4:
 11694  00109C  0102               	movlb	2	; () banked
 11695  00109E  6F7A               	movwf	UseBluetooth@set& (0+255),b
 11696  0010A0  D000               	goto	l12718
 11697  0010A2                     l12718:
 11698                           
 11699                           ; BSR set to: 2
 11700                           ;Bluetooth.c: 721: }
 11701                           ;Bluetooth.c: 722: if(!StringAddEqual(String))
 11702  0010A2  C0F2  F06F         	movff	UseBluetooth@String,StringAddEqual@Input
 11703  0010A6  C0F3  F070         	movff	UseBluetooth@String+1,StringAddEqual@Input+1
 11704  0010AA  EC86  F039         	call	_StringAddEqual	;wreg free
 11705  0010AE  0900               	iorlw	0
 11706  0010B0  A4D8               	btfss	status,2,c
 11707  0010B2  D011               	goto	l12724
 11708                           
 11709                           ;Bluetooth.c: 723: {
 11710                           ;Bluetooth.c: 724: UARTstringCRLN_CONST("Error: No RF configuration specified");
 11711  0010B4  0EEF               	movlw	low STR_65
 11712  0010B6  0100               	movlb	0	; () banked
 11713  0010B8  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11714  0010BA  0EF6               	movlw	high STR_65
 11715  0010BC  0100               	movlb	0	; () banked
 11716  0010BE  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11717  0010C0  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 11718                           
 11719                           ;Bluetooth.c: 725: UARTstring_CONST(CRLN);
 11720  0010C4  0E51               	movlw	low _CRLN
 11721  0010C6  0100               	movlb	0	; () banked
 11722  0010C8  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11723  0010CA  0EF0               	movlw	high _CRLN
 11724  0010CC  0100               	movlb	0	; () banked
 11725  0010CE  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11726  0010D0  EC42  F053         	call	_UARTstring_CONST	;wreg free
 11727                           
 11728                           ;Bluetooth.c: 726: return 0;
 11729                           ;	Return value of _UseBluetooth is never used
 11730  0010D4  0012               	return	
 11731  0010D6                     l12724:
 11732                           
 11733                           ;Bluetooth.c: 727: }
 11734                           ;Bluetooth.c: 728: StringPos++;
 11735  0010D6  0100               	movlb	0	; () banked
 11736  0010D8  2BF4               	incf	UseBluetooth@StringPos& (0+255),f,b
 11737                           
 11738                           ; BSR set to: 0
 11739                           ;Bluetooth.c: 729: UARTstring_CONST(CRLN);
 11740  0010DA  0E51               	movlw	low _CRLN
 11741  0010DC  0100               	movlb	0	; () banked
 11742  0010DE  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11743  0010E0  0EF0               	movlw	high _CRLN
 11744  0010E2  0100               	movlb	0	; () banked
 11745  0010E4  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11746  0010E6  EC42  F053         	call	_UARTstring_CONST	;wreg free
 11747                           
 11748                           ;Bluetooth.c: 730: if(!GetNumberUnsigned(String, 1, &temp))
 11749  0010EA  C0F2  F06C         	movff	UseBluetooth@String,GetNumberUnsigned@This
 11750  0010EE  C0F3  F06D         	movff	UseBluetooth@String+1,GetNumberUnsigned@This+1
 11751  0010F2  0E01               	movlw	1
 11752  0010F4  0100               	movlb	0	; () banked
 11753  0010F6  6F6E               	movwf	GetNumberUnsigned@CommaNumber& (0+255),b
 11754  0010F8  0E90               	movlw	low UseBluetooth@temp
 11755  0010FA  0100               	movlb	0	; () banked
 11756  0010FC  6F6F               	movwf	GetNumberUnsigned@result& (0+255),b
 11757  0010FE  0E02               	movlw	high UseBluetooth@temp
 11758  001100  0100               	movlb	0	; () banked
 11759  001102  6F70               	movwf	(GetNumberUnsigned@result+1)& (0+255),b
 11760  001104  ECAC  F030         	call	_GetNumberUnsigned	;wreg free
 11761  001108  0900               	iorlw	0
 11762  00110A  A4D8               	btfss	status,2,c
 11763  00110C  D003               	goto	l12732
 11764                           
 11765                           ;Bluetooth.c: 731: {
 11766                           ;Bluetooth.c: 732: rfconf = (unsigned char) temp;
 11767  00110E  C290  F28D         	movff	UseBluetooth@temp,UseBluetooth@rfconf
 11768                           
 11769                           ;Bluetooth.c: 733: }
 11770  001112  D011               	goto	l12736
 11771  001114                     l12732:
 11772                           
 11773                           ;Bluetooth.c: 734: else
 11774                           ;Bluetooth.c: 735: {
 11775                           ;Bluetooth.c: 736: UARTstringCRLN_CONST("Error: No RF configuration specified");
 11776  001114  0EEF               	movlw	low STR_65
 11777  001116  0100               	movlb	0	; () banked
 11778  001118  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11779  00111A  0EF6               	movlw	high STR_65
 11780  00111C  0100               	movlb	0	; () banked
 11781  00111E  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11782  001120  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 11783                           
 11784                           ;Bluetooth.c: 737: UARTstring_CONST(CRLN);
 11785  001124  0E51               	movlw	low _CRLN
 11786  001126  0100               	movlb	0	; () banked
 11787  001128  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11788  00112A  0EF0               	movlw	high _CRLN
 11789  00112C  0100               	movlb	0	; () banked
 11790  00112E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11791  001130  EC42  F053         	call	_UARTstring_CONST	;wreg free
 11792                           
 11793                           ;Bluetooth.c: 738: return 0;
 11794                           ;	Return value of _UseBluetooth is never used
 11795  001134  0012               	return	
 11796  001136                     l12736:
 11797                           
 11798                           ;Bluetooth.c: 739: }
 11799                           ;Bluetooth.c: 740: if(rfconf <= 0 || rfconf > 2)
 11800  001136  0102               	movlb	2	; () banked
 11801  001138  518D               	movf	UseBluetooth@rfconf& (0+255),w,b
 11802  00113A  0102               	movlb	2	; () banked
 11803  00113C  B4D8               	btfsc	status,2,c
 11804  00113E  D005               	goto	l12740
 11805                           
 11806                           ; BSR set to: 2
 11807  001140  0E02               	movlw	2
 11808  001142  0102               	movlb	2	; () banked
 11809  001144  658D               	cpfsgt	UseBluetooth@rfconf& (0+255),b
 11810  001146  D012               	goto	l12744
 11811  001148  D000               	goto	l12740
 11812  00114A                     l12740:
 11813                           
 11814                           ; BSR set to: 2
 11815                           ;Bluetooth.c: 741: {
 11816                           ;Bluetooth.c: 742: UARTstringCRLN_CONST("Error: RF configuration out of range");
 11817  00114A  0E14               	movlw	low STR_67
 11818  00114C  0100               	movlb	0	; () banked
 11819  00114E  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11820  001150  0EF7               	movlw	high STR_67
 11821  001152  0100               	movlb	0	; () banked
 11822  001154  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11823  001156  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 11824                           
 11825                           ;Bluetooth.c: 743: UARTstring_CONST(CRLN);
 11826  00115A  0E51               	movlw	low _CRLN
 11827  00115C  0100               	movlb	0	; () banked
 11828  00115E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11829  001160  0EF0               	movlw	high _CRLN
 11830  001162  0100               	movlb	0	; () banked
 11831  001164  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11832  001166  EC42  F053         	call	_UARTstring_CONST	;wreg free
 11833                           
 11834                           ;Bluetooth.c: 744: return 0;
 11835                           ;	Return value of _UseBluetooth is never used
 11836  00116A  0012               	return	
 11837  00116C                     l12744:
 11838                           
 11839                           ;Bluetooth.c: 745: }
 11840                           ;Bluetooth.c: 746: if(GetStringAfterComma(String, 1, rfchannelSTR))
 11841  00116C  C0F2  F060         	movff	UseBluetooth@String,GetStringAfterComma@This
 11842  001170  C0F3  F061         	movff	UseBluetooth@String+1,GetStringAfterComma@This+1
 11843  001174  0E01               	movlw	1
 11844  001176  0100               	movlb	0	; () banked
 11845  001178  6F62               	movwf	GetStringAfterComma@CommaNumber& (0+255),b
 11846  00117A  0E70               	movlw	low UseBluetooth@rfchannelSTR
 11847  00117C  0100               	movlb	0	; () banked
 11848  00117E  6F63               	movwf	GetStringAfterComma@result& (0+255),b
 11849  001180  0E02               	movlw	high UseBluetooth@rfchannelSTR
 11850  001182  0100               	movlb	0	; () banked
 11851  001184  6F64               	movwf	(GetStringAfterComma@result+1)& (0+255),b
 11852  001186  EC0C  F045         	call	_GetStringAfterComma	;wreg free
 11853  00118A  0900               	iorlw	0
 11854  00118C  B4D8               	btfsc	status,2,c
 11855  00118E  D011               	goto	l12752
 11856                           
 11857                           ;Bluetooth.c: 747: {
 11858                           ;Bluetooth.c: 748: UARTstringCRLN_CONST("Error: No RF channel specified");
 11859  001190  0EAA               	movlw	low STR_68
 11860  001192  0100               	movlb	0	; () banked
 11861  001194  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11862  001196  0EF9               	movlw	high STR_68
 11863  001198  0100               	movlb	0	; () banked
 11864  00119A  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11865  00119C  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 11866                           
 11867                           ;Bluetooth.c: 749: UARTstring_CONST(CRLN);
 11868  0011A0  0E51               	movlw	low _CRLN
 11869  0011A2  0100               	movlb	0	; () banked
 11870  0011A4  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11871  0011A6  0EF0               	movlw	high _CRLN
 11872  0011A8  0100               	movlb	0	; () banked
 11873  0011AA  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11874  0011AC  EC42  F053         	call	_UARTstring_CONST	;wreg free
 11875                           
 11876                           ;Bluetooth.c: 751: }
 11877                           
 11878                           ;Bluetooth.c: 750: return 0;
 11879                           ;	Return value of _UseBluetooth is never used
 11880  0011B0  0012               	return	
 11881  0011B2                     l12752:
 11882                           
 11883                           ;Bluetooth.c: 752: else
 11884                           ;Bluetooth.c: 753: {
 11885                           ;Bluetooth.c: 754: lowercaseString(rfchannelSTR);
 11886  0011B2  0E70               	movlw	low UseBluetooth@rfchannelSTR
 11887  0011B4  0100               	movlb	0	; () banked
 11888  0011B6  6F60               	movwf	lowercaseString@Input& (0+255),b
 11889  0011B8  0E02               	movlw	high UseBluetooth@rfchannelSTR
 11890  0011BA  0100               	movlb	0	; () banked
 11891  0011BC  6F61               	movwf	(lowercaseString@Input+1)& (0+255),b
 11892  0011BE  EC03  F052         	call	_lowercaseString	;wreg free
 11893                           
 11894                           ;Bluetooth.c: 755: if(rfchannelSTR[1] == 0 || rfchannelSTR[1] == ' ')
 11895  0011C2  0102               	movlb	2	; () banked
 11896  0011C4  5171               	movf	(UseBluetooth@rfchannelSTR+1)& (0+255),w,b
 11897  0011C6  B4D8               	btfsc	status,2,c
 11898  0011C8  D005               	goto	l12758
 11899                           
 11900                           ; BSR set to: 2
 11901  0011CA  0E20               	movlw	32
 11902  0011CC  0102               	movlb	2	; () banked
 11903  0011CE  1971               	xorwf	(UseBluetooth@rfchannelSTR+1)& (0+255),w,b
 11904  0011D0  A4D8               	btfss	status,2,c
 11905  0011D2  D384               	goto	l12986
 11906  0011D4                     l12758:
 11907                           
 11908                           ; BSR set to: 2
 11909                           ;Bluetooth.c: 756: {
 11910                           ;Bluetooth.c: 757: rfchannelSTR[1] = 0;
 11911  0011D4  0E00               	movlw	0
 11912  0011D6  0102               	movlb	2	; () banked
 11913  0011D8  6F71               	movwf	(UseBluetooth@rfchannelSTR+1)& (0+255),b
 11914                           
 11915                           ; BSR set to: 2
 11916                           ;Bluetooth.c: 758: if(rfconf == 1)
 11917  0011DA  0102               	movlb	2	; () banked
 11918  0011DC  058D               	decf	UseBluetooth@rfconf& (0+255),w,b
 11919  0011DE  A4D8               	btfss	status,2,c
 11920  0011E0  D015               	goto	l12766
 11921                           
 11922                           ; BSR set to: 2
 11923                           ;Bluetooth.c: 759: {
 11924                           ;Bluetooth.c: 760: if(!StringContainsCaseInsensitive(Conf1_Channels, rfchannelSTR))
 11925  0011E2  0E45               	movlw	low _Conf1_Channels
 11926  0011E4  0100               	movlb	0	; () banked
 11927  0011E6  6F63               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 11928  0011E8  0EF0               	movlw	high _Conf1_Channels
 11929  0011EA  0100               	movlb	0	; () banked
 11930  0011EC  6F64               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 11931  0011EE  0E70               	movlw	low UseBluetooth@rfchannelSTR
 11932  0011F0  0100               	movlb	0	; () banked
 11933  0011F2  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 11934  0011F4  0E02               	movlw	high UseBluetooth@rfchannelSTR
 11935  0011F6  0100               	movlb	0	; () banked
 11936  0011F8  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 11937  0011FA  EC6D  F03B         	call	_StringContainsCaseInsensitive	;wreg free
 11938  0011FE  0900               	iorlw	0
 11939  001200  A4D8               	btfss	status,2,c
 11940  001202  D019               	goto	l2120
 11941                           
 11942                           ;Bluetooth.c: 761: {
 11943                           ;Bluetooth.c: 762: ok = 0;
 11944  001204  0E00               	movlw	0
 11945  001206  0102               	movlb	2	; () banked
 11946  001208  6F8A               	movwf	UseBluetooth@ok& (0+255),b
 11947                           
 11948                           ; BSR set to: 2
 11949                           ;Bluetooth.c: 763: }
 11950                           ;Bluetooth.c: 764: }
 11951  00120A  D015               	goto	l2120
 11952  00120C                     l12766:
 11953                           
 11954                           ; BSR set to: 2
 11955                           ;Bluetooth.c: 765: else if(rfconf == 2)
 11956  00120C  0E02               	movlw	2
 11957  00120E  0102               	movlb	2	; () banked
 11958  001210  198D               	xorwf	UseBluetooth@rfconf& (0+255),w,b
 11959  001212  A4D8               	btfss	status,2,c
 11960  001214  D010               	goto	l2120
 11961                           
 11962                           ; BSR set to: 2
 11963                           ;Bluetooth.c: 766: {
 11964                           ;Bluetooth.c: 767: if(!StringContainsCaseInsensitive(Conf2_Channels, rfchannelSTR))
 11965  001216  0E49               	movlw	low _Conf2_Channels
 11966  001218  0100               	movlb	0	; () banked
 11967  00121A  6F63               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 11968  00121C  0EF0               	movlw	high _Conf2_Channels
 11969  00121E  0100               	movlb	0	; () banked
 11970  001220  6F64               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 11971  001222  0E70               	movlw	low UseBluetooth@rfchannelSTR
 11972  001224  0100               	movlb	0	; () banked
 11973  001226  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 11974  001228  0E02               	movlw	high UseBluetooth@rfchannelSTR
 11975  00122A  0100               	movlb	0	; () banked
 11976  00122C  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 11977  00122E  EC6D  F03B         	call	_StringContainsCaseInsensitive	;wreg free
 11978  001232  D7E5               	goto	L9
 11979                           
 11980                           ; BSR set to: 2
 11981                           
 11982                           ;Bluetooth.c: 768: {
 11983                           ;Bluetooth.c: 769: ok = 0;
 11984  001234  D000               	goto	l2120
 11985  001236                     l2120:
 11986                           
 11987                           ;Bluetooth.c: 770: }
 11988                           ;Bluetooth.c: 771: }
 11989                           ;Bluetooth.c: 772: if(!ok)
 11990  001236  0102               	movlb	2	; () banked
 11991  001238  518A               	movf	UseBluetooth@ok& (0+255),w,b
 11992  00123A  0102               	movlb	2	; () banked
 11993  00123C  A4D8               	btfss	status,2,c
 11994  00123E  D011               	goto	l12776
 11995                           
 11996                           ; BSR set to: 2
 11997                           ;Bluetooth.c: 773: {
 11998                           ;Bluetooth.c: 774: UARTstringCRLN_CONST("Error: RF channel out of range");
 11999  001240  0EC9               	movlw	low STR_69
 12000  001242  0100               	movlb	0	; () banked
 12001  001244  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 12002  001246  0EF9               	movlw	high STR_69
 12003  001248  0100               	movlb	0	; () banked
 12004  00124A  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 12005  00124C  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 12006                           
 12007                           ;Bluetooth.c: 775: UARTstring_CONST(CRLN);
 12008  001250  0E51               	movlw	low _CRLN
 12009  001252  0100               	movlb	0	; () banked
 12010  001254  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 12011  001256  0EF0               	movlw	high _CRLN
 12012  001258  0100               	movlb	0	; () banked
 12013  00125A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12014  00125C  EC42  F053         	call	_UARTstring_CONST	;wreg free
 12015                           
 12016                           ;Bluetooth.c: 776: return 0;
 12017                           ;	Return value of _UseBluetooth is never used
 12018  001260  0012               	return	
 12019  001262                     l12776:
 12020                           
 12021                           ;Bluetooth.c: 777: }
 12022                           ;Bluetooth.c: 779: if(rfconf == 1)
 12023  001262  0102               	movlb	2	; () banked
 12024  001264  058D               	decf	UseBluetooth@rfconf& (0+255),w,b
 12025  001266  A4D8               	btfss	status,2,c
 12026  001268  D017               	goto	l12790
 12027                           
 12028                           ; BSR set to: 2
 12029                           ;Bluetooth.c: 780: {
 12030                           ;Bluetooth.c: 781: if(rfchannelSTR[0] == 'd')
 12031  00126A  0E64               	movlw	100
 12032  00126C  0102               	movlb	2	; () banked
 12033  00126E  1970               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 12034  001270  A4D8               	btfss	status,2,c
 12035  001272  D002               	goto	l12782
 12036                           
 12037                           ; BSR set to: 2
 12038                           ;Bluetooth.c: 782: {
 12039                           ;Bluetooth.c: 783: tempRFArray = 0;
 12040  001274  0E00               	movlw	0
 12041  001276  D022               	goto	L8
 12042  001278                     l12782:
 12043                           
 12044                           ; BSR set to: 2
 12045                           ;Bluetooth.c: 785: else if(rfchannelSTR[0] == 'e')
 12046  001278  0E65               	movlw	101
 12047  00127A  0102               	movlb	2	; () banked
 12048  00127C  1970               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 12049  00127E  A4D8               	btfss	status,2,c
 12050  001280  D002               	goto	l12786
 12051                           
 12052                           ; BSR set to: 2
 12053                           ;Bluetooth.c: 786: {
 12054                           ;Bluetooth.c: 787: tempRFArray = 1;
 12055  001282  0E01               	movlw	1
 12056  001284  D01B               	goto	L8
 12057  001286                     l12786:
 12058                           
 12059                           ; BSR set to: 2
 12060                           ;Bluetooth.c: 789: else if(rfchannelSTR[0] == 'f')
 12061  001286  0E66               	movlw	102
 12062  001288  0102               	movlb	2	; () banked
 12063  00128A  1970               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 12064  00128C  A4D8               	btfss	status,2,c
 12065  00128E  0012               	return	
 12066                           
 12067                           ; BSR set to: 2
 12068                           ;Bluetooth.c: 790: {
 12069                           ;Bluetooth.c: 791: tempRFArray = 2;
 12070  001290  0E02               	movlw	2
 12071  001292  D014               	goto	L8
 12072                           
 12073                           ; BSR set to: 2
 12074                           ;Bluetooth.c: 793: else
 12075                           ;Bluetooth.c: 794: {
 12076                           ;Bluetooth.c: 796: return 0;
 12077                           ;	Return value of _UseBluetooth is never used
 12078                           
 12079                           ;Bluetooth.c: 792: }
 12080  001294  0012               	return	
 12081                           
 12082                           ; BSR set to: 2
 12083                           ;Bluetooth.c: 797: }
 12084                           ;Bluetooth.c: 798: }
 12085                           
 12086                           ; BSR set to: 2
 12087                           
 12088                           ; BSR set to: 2
 12089  001296  D0AD               	goto	l12858
 12090  001298                     l12790:
 12091                           
 12092                           ; BSR set to: 2
 12093                           ;Bluetooth.c: 799: else if(rfconf ==2)
 12094  001298  0E02               	movlw	2
 12095  00129A  0102               	movlb	2	; () banked
 12096  00129C  198D               	xorwf	UseBluetooth@rfconf& (0+255),w,b
 12097  00129E  A4D8               	btfss	status,2,c
 12098  0012A0  D0A8               	goto	l12858
 12099                           
 12100                           ; BSR set to: 2
 12101                           ;Bluetooth.c: 800: {
 12102                           ;Bluetooth.c: 801: if(rfchannelSTR[0] == 'b')
 12103  0012A2  0E62               	movlw	98
 12104  0012A4  0102               	movlb	2	; () banked
 12105  0012A6  1970               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 12106  0012A8  A4D8               	btfss	status,2,c
 12107  0012AA  D002               	goto	l12796
 12108                           
 12109                           ; BSR set to: 2
 12110                           ;Bluetooth.c: 802: {
 12111                           ;Bluetooth.c: 803: tempRFArray = 3;
 12112  0012AC  0E03               	movlw	3
 12113  0012AE  D006               	goto	L8
 12114  0012B0                     l12796:
 12115                           
 12116                           ; BSR set to: 2
 12117                           ;Bluetooth.c: 805: else if(rfchannelSTR[0] == 'd')
 12118  0012B0  0E64               	movlw	100
 12119  0012B2  0102               	movlb	2	; () banked
 12120  0012B4  1970               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 12121  0012B6  A4D8               	btfss	status,2,c
 12122  0012B8  D004               	goto	l12800
 12123                           
 12124                           ; BSR set to: 2
 12125                           ;Bluetooth.c: 806: {
 12126                           ;Bluetooth.c: 807: tempRFArray = 4;
 12127  0012BA  0E04               	movlw	4
 12128  0012BC                     L8:
 12129  0012BC  0102               	movlb	2	; () banked
 12130  0012BE  6F8B               	movwf	UseBluetooth@tempRFArray& (0+255),b
 12131                           
 12132                           ;Bluetooth.c: 808: }
 12133  0012C0  D098               	goto	l12858
 12134  0012C2                     l12800:
 12135                           
 12136                           ; BSR set to: 2
 12137                           ;Bluetooth.c: 809: else if(rfchannelSTR[0] == 'h')
 12138  0012C2  0E68               	movlw	104
 12139  0012C4  0102               	movlb	2	; () banked
 12140  0012C6  1970               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 12141  0012C8  A4D8               	btfss	status,2,c
 12142  0012CA  0012               	return	
 12143                           
 12144                           ; BSR set to: 2
 12145                           ;Bluetooth.c: 810: {
 12146                           ;Bluetooth.c: 811: cleanBuffer(ReceivedString, ReceivedStringPos);
 12147  0012CC  0E78               	movlw	low _ReceivedString
 12148  0012CE  0100               	movlb	0	; () banked
 12149  0012D0  6F60               	movwf	cleanBuffer@data& (0+255),b
 12150  0012D2  0E04               	movlw	high _ReceivedString
 12151  0012D4  0100               	movlb	0	; () banked
 12152  0012D6  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 12153  0012D8  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 12154  0012DC  0100               	movlb	0	; () banked
 12155  0012DE  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 12156  0012E0  ECE6  F050         	call	_cleanBuffer	;wreg free
 12157                           
 12158                           ;Bluetooth.c: 812: ReceivedStringPos = 0;
 12159  0012E4  0E00               	movlw	0
 12160  0012E6  0103               	movlb	3	; () banked
 12161  0012E8  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 12162                           
 12163                           ; BSR set to: 3
 12164                           ;Bluetooth.c: 813: NewReceivedString = 0;
 12165  0012EA  0E00               	movlw	0
 12166  0012EC  0103               	movlb	3	; () banked
 12167  0012EE  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
 12168                           
 12169                           ; BSR set to: 3
 12170                           ;Bluetooth.c: 814: UARTstring_CONST("Which device?");
 12171  0012F0  0E7D               	movlw	low STR_70
 12172  0012F2  0100               	movlb	0	; () banked
 12173  0012F4  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 12174  0012F6  0EFE               	movlw	high STR_70
 12175  0012F8  0100               	movlb	0	; () banked
 12176  0012FA  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12177  0012FC  EC42  F053         	call	_UARTstring_CONST	;wreg free
 12178                           
 12179                           ;Bluetooth.c: 815: UARTstring_CONST(CRLN);
 12180  001300  0E51               	movlw	low _CRLN
 12181  001302  0100               	movlb	0	; () banked
 12182  001304  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 12183  001306  0EF0               	movlw	high _CRLN
 12184  001308  0100               	movlb	0	; () banked
 12185  00130A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12186  00130C  EC42  F053         	call	_UARTstring_CONST	;wreg free
 12187                           
 12188                           ;Bluetooth.c: 816: UARTchar('>');
 12189  001310  0E3E               	movlw	62
 12190  001312  EC3D  F054         	call	_UARTchar
 12191                           
 12192                           ;Bluetooth.c: 817: timeout = 0;
 12193  001316  0E00               	movlw	0
 12194  001318  0102               	movlb	2	; () banked
 12195  00131A  6F8C               	movwf	UseBluetooth@timeout& (0+255),b
 12196                           
 12197                           ; BSR set to: 2
 12198                           ;Bluetooth.c: 818: ClearUSART();
 12199  00131C  ECC2  F054         	call	_ClearUSART	;wreg free
 12200                           
 12201                           ;Bluetooth.c: 819: PIR1bits.RCIF = 0;
 12202  001320  9A9E               	bcf	3998,5,c	;volatile
 12203                           
 12204                           ;Bluetooth.c: 820: PIE1bits.RCIE = 1;
 12205  001322  8A9D               	bsf	3997,5,c	;volatile
 12206                           
 12207                           ;Bluetooth.c: 821: while(!NewReceivedString)
 12208  001324  D023               	goto	l12832
 12209  001326                     l12822:
 12210                           
 12211                           ;Bluetooth.c: 822: {
 12212                           ;Bluetooth.c: 823: delayUS(300000);
 12213  001326  0EE0               	movlw	224
 12214  001328  0100               	movlb	0	; () banked
 12215  00132A  6F60               	movwf	delayUS@US& (0+255),b
 12216  00132C  0E93               	movlw	147
 12217  00132E  6F61               	movwf	(delayUS@US+1)& (0+255),b
 12218  001330  0E04               	movlw	4
 12219  001332  6F62               	movwf	(delayUS@US+2)& (0+255),b
 12220  001334  0E00               	movlw	0
 12221  001336  6F63               	movwf	(delayUS@US+3)& (0+255),b
 12222  001338  EC3F  F051         	call	_delayUS	;wreg free
 12223                           
 12224                           ;Bluetooth.c: 824: timeout++;
 12225  00133C  0102               	movlb	2	; () banked
 12226  00133E  2B8C               	incf	UseBluetooth@timeout& (0+255),f,b
 12227                           
 12228                           ; BSR set to: 2
 12229                           ;Bluetooth.c: 825: if(timeout > 25)
 12230  001340  0E19               	movlw	25
 12231  001342  0102               	movlb	2	; () banked
 12232  001344  658C               	cpfsgt	UseBluetooth@timeout& (0+255),b
 12233  001346  D012               	goto	l12832
 12234                           
 12235                           ; BSR set to: 2
 12236                           ;Bluetooth.c: 826: {
 12237                           ;Bluetooth.c: 827: UARTstring_CONST(CRLN);
 12238  001348  0E51               	movlw	low _CRLN
 12239  00134A  0100               	movlb	0	; () banked
 12240  00134C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 12241  00134E  0EF0               	movlw	high _CRLN
 12242  001350  0100               	movlb	0	; () banked
 12243  001352  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12244  001354  EC42  F053         	call	_UARTstring_CONST	;wreg free
 12245                           
 12246                           ;Bluetooth.c: 828: UARTstringCRLN_CONST("Error: No RF config 2, channel H device specifi
      +                          ed");
 12247  001358  0EE9               	movlw	low STR_71
 12248  00135A  0100               	movlb	0	; () banked
 12249  00135C  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 12250  00135E  0EF1               	movlw	high STR_71
 12251  001360  0100               	movlb	0	; () banked
 12252  001362  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 12253  001364  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 12254                           
 12255                           ;Bluetooth.c: 829: return 0;
 12256                           ;	Return value of _UseBluetooth is never used
 12257  001368  0012               	return	
 12258  00136A  D000               	goto	l12832
 12259  00136C                     l12832:
 12260  00136C  0103               	movlb	3	; () banked
 12261  00136E  51EA               	movf	_NewReceivedString& (0+255),w,b	;volatile
 12262  001370  B4D8               	btfsc	status,2,c
 12263  001372  D7D9               	goto	l12822
 12264                           
 12265                           ; BSR set to: 3
 12266                           ;Bluetooth.c: 830: }
 12267                           ;Bluetooth.c: 831: }
 12268                           ;Bluetooth.c: 832: PIE1bits.RCIE = 0;
 12269  001374  9A9D               	bcf	3997,5,c	;volatile
 12270                           
 12271                           ; BSR set to: 3
 12272                           ;Bluetooth.c: 833: ok = 1;
 12273  001376  0E01               	movlw	1
 12274  001378  0102               	movlb	2	; () banked
 12275  00137A  6F8A               	movwf	UseBluetooth@ok& (0+255),b
 12276                           
 12277                           ; BSR set to: 2
 12278                           ;Bluetooth.c: 834: if(ReceivedString[0] < '1' || ReceivedString[0] > '3')
 12279  00137C  0E30               	movlw	48
 12280  00137E  0104               	movlb	4	; () banked
 12281  001380  6578               	cpfsgt	_ReceivedString& (0+255),b	;volatile
 12282  001382  D005               	goto	l12840
 12283                           
 12284                           ; BSR set to: 4
 12285  001384  0E33               	movlw	51
 12286  001386  0104               	movlb	4	; () banked
 12287  001388  6578               	cpfsgt	_ReceivedString& (0+255),b	;volatile
 12288  00138A  D00D               	goto	l12844
 12289  00138C  D000               	goto	l12840
 12290  00138E                     l12840:
 12291                           
 12292                           ; BSR set to: 4
 12293                           ;Bluetooth.c: 835: {
 12294                           ;Bluetooth.c: 836: UARTstringCRLN_CONST("Error: RF config 2, channel H device out of ran
      +                          ge");
 12295  00138E  0E1B               	movlw	low STR_72
 12296  001390  0100               	movlb	0	; () banked
 12297  001392  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 12298  001394  0EF2               	movlw	high STR_72
 12299  001396  0100               	movlb	0	; () banked
 12300  001398  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 12301  00139A  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 12302                           
 12303                           ;Bluetooth.c: 837: ok = 0;
 12304  00139E  0E00               	movlw	0
 12305  0013A0  0102               	movlb	2	; () banked
 12306  0013A2  6F8A               	movwf	UseBluetooth@ok& (0+255),b
 12307  0013A4  D000               	goto	l12844
 12308  0013A6                     l12844:
 12309                           
 12310                           ;Bluetooth.c: 838: }
 12311                           ;Bluetooth.c: 839: device = ReceivedString[0] - '0';
 12312  0013A6  0104               	movlb	4	; () banked
 12313  0013A8  5178               	movf	_ReceivedString& (0+255),w,b
 12314  0013AA  0FD0               	addlw	208
 12315  0013AC  0102               	movlb	2	; () banked
 12316  0013AE  6F85               	movwf	UseBluetooth@device& (0+255),b
 12317                           
 12318                           ; BSR set to: 2
 12319                           ;Bluetooth.c: 840: tempRFArray = device + 4;
 12320  0013B0  0102               	movlb	2	; () banked
 12321  0013B2  5185               	movf	UseBluetooth@device& (0+255),w,b
 12322  0013B4  0F04               	addlw	4
 12323  0013B6  0102               	movlb	2	; () banked
 12324  0013B8  6F8B               	movwf	UseBluetooth@tempRFArray& (0+255),b
 12325                           
 12326                           ; BSR set to: 2
 12327                           ;Bluetooth.c: 841: cleanBuffer(ReceivedString, ReceivedStringPos);
 12328  0013BA  0E78               	movlw	low _ReceivedString
 12329  0013BC  0100               	movlb	0	; () banked
 12330  0013BE  6F60               	movwf	cleanBuffer@data& (0+255),b
 12331  0013C0  0E04               	movlw	high _ReceivedString
 12332  0013C2  0100               	movlb	0	; () banked
 12333  0013C4  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 12334  0013C6  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 12335  0013CA  0100               	movlb	0	; () banked
 12336  0013CC  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 12337  0013CE  ECE6  F050         	call	_cleanBuffer	;wreg free
 12338                           
 12339                           ;Bluetooth.c: 842: ReceivedStringPos = 0;
 12340  0013D2  0E00               	movlw	0
 12341  0013D4  0103               	movlb	3	; () banked
 12342  0013D6  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 12343                           
 12344                           ; BSR set to: 3
 12345                           ;Bluetooth.c: 843: NewReceivedString = 0;
 12346  0013D8  0E00               	movlw	0
 12347  0013DA  0103               	movlb	3	; () banked
 12348  0013DC  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
 12349                           
 12350                           ; BSR set to: 3
 12351                           ;Bluetooth.c: 844: if(!ok)
 12352  0013DE  0102               	movlb	2	; () banked
 12353  0013E0  518A               	movf	UseBluetooth@ok& (0+255),w,b
 12354  0013E2  0102               	movlb	2	; () banked
 12355  0013E4  B4D8               	btfsc	status,2,c
 12356  0013E6  0012               	return	
 12357  0013E8  D004               	goto	l12858
 12358                           
 12359                           ; BSR set to: 2
 12360                           ;Bluetooth.c: 845: {
 12361                           ;Bluetooth.c: 846: return 0;
 12362                           ;	Return value of _UseBluetooth is never used
 12363  0013EA  0012               	return	
 12364                           
 12365                           ; BSR set to: 2
 12366                           ;Bluetooth.c: 847: }
 12367                           ;Bluetooth.c: 848: }
 12368  0013EC  D002               	goto	l12858
 12369                           
 12370                           ; BSR set to: 2
 12371                           ;Bluetooth.c: 849: else
 12372                           ;Bluetooth.c: 850: {
 12373                           ;Bluetooth.c: 852: return 0;
 12374                           ;	Return value of _UseBluetooth is never used
 12375  0013EE  0012               	return	
 12376                           
 12377                           ; BSR set to: 2
 12378                           
 12379                           ; BSR set to: 2
 12380                           
 12381                           ; BSR set to: 2
 12382                           
 12383                           ; BSR set to: 2
 12384  0013F0  D000               	goto	l12858
 12385  0013F2                     l12858:
 12386                           
 12387                           ; BSR set to: 2
 12388                           ;Bluetooth.c: 853: }
 12389                           ;Bluetooth.c: 854: }
 12390                           ;Bluetooth.c: 855: if(set)
 12391  0013F2  0102               	movlb	2	; () banked
 12392  0013F4  517A               	movf	UseBluetooth@set& (0+255),w,b
 12393  0013F6  0102               	movlb	2	; () banked
 12394  0013F8  B4D8               	btfsc	status,2,c
 12395  0013FA  D1B5               	goto	l12946
 12396                           
 12397                           ; BSR set to: 2
 12398                           ;Bluetooth.c: 856: {
 12399                           ;Bluetooth.c: 857: if(!WaitForIRsignal())
 12400  0013FC  EC52  F04E         	call	_WaitForIRsignal	;wreg free
 12401  001400  0900               	iorlw	0
 12402  001402  B4D8               	btfsc	status,2,c
 12403  001404  0012               	return	
 12404  001406  D001               	goto	l12864
 12405                           
 12406                           ;Bluetooth.c: 858: {
 12407                           ;Bluetooth.c: 859: return 0;
 12408                           ;	Return value of _UseBluetooth is never used
 12409  001408  0012               	return	
 12410  00140A                     l12864:
 12411                           
 12412                           ;Bluetooth.c: 860: }
 12413                           ;Bluetooth.c: 861: UARTstring_CONST(CRLN);
 12414  00140A  0E51               	movlw	low _CRLN
 12415  00140C  0100               	movlb	0	; () banked
 12416  00140E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 12417  001410  0EF0               	movlw	high _CRLN
 12418  001412  0100               	movlb	0	; () banked
 12419  001414  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12420  001416  EC42  F053         	call	_UARTstring_CONST	;wreg free
 12421                           
 12422                           ;Bluetooth.c: 862: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
 12423  00141A  C3EC  F064         	movff	_IR_NEC,DecodeNEC@Nec
 12424  00141E  C3ED  F065         	movff	_IR_NEC+1,DecodeNEC@Nec+1
 12425  001422  C3EE  F066         	movff	_IR_NEC+2,DecodeNEC@Nec+2
 12426  001426  C3EF  F067         	movff	_IR_NEC+3,DecodeNEC@Nec+3
 12427  00142A  0E8E               	movlw	low UseBluetooth@NecAddress
 12428  00142C  0100               	movlb	0	; () banked
 12429  00142E  6F68               	movwf	DecodeNEC@address& (0+255),b
 12430  001430  0E02               	movlw	high UseBluetooth@NecAddress
 12431  001432  0100               	movlb	0	; () banked
 12432  001434  6F69               	movwf	(DecodeNEC@address+1)& (0+255),b
 12433  001436  0E8F               	movlw	low UseBluetooth@NecCommand
 12434  001438  0100               	movlb	0	; () banked
 12435  00143A  6F6A               	movwf	DecodeNEC@command& (0+255),b
 12436  00143C  0E02               	movlw	high UseBluetooth@NecCommand
 12437  00143E  0100               	movlb	0	; () banked
 12438  001440  6F6B               	movwf	(DecodeNEC@command+1)& (0+255),b
 12439  001442  EC1E  F04C         	call	_DecodeNEC	;wreg free
 12440                           
 12441                           ;Bluetooth.c: 863: ok = 0;
 12442  001446  0E00               	movlw	0
 12443  001448  0102               	movlb	2	; () banked
 12444  00144A  6F8A               	movwf	UseBluetooth@ok& (0+255),b
 12445                           
 12446                           ; BSR set to: 2
 12447                           ;Bluetooth.c: 864: for(i=0; i < 3; i++)
 12448  00144C  0E00               	movlw	0
 12449  00144E  0102               	movlb	2	; () banked
 12450  001450  6F94               	movwf	UseBluetooth@i& (0+255),b
 12451  001452                     l12872:
 12452                           
 12453                           ; BSR set to: 2
 12454  001452  0E02               	movlw	2
 12455  001454  0102               	movlb	2	; () banked
 12456  001456  6594               	cpfsgt	UseBluetooth@i& (0+255),b
 12457  001458  D001               	goto	l12876
 12458                           
 12459                           ; BSR set to: 2
 12460  00145A  D049               	goto	l12888
 12461  00145C                     l12876:
 12462                           
 12463                           ; BSR set to: 2
 12464                           ;Bluetooth.c: 865: {
 12465                           ;Bluetooth.c: 866: if(Global2.RemoteButtonRF[tempRFArray][i][0] == 0 && Global2.RemoteBu
      +                          ttonRF[tempRFArray][i][1] == 0)
 12466  00145C  0102               	movlb	2	; () banked
 12467  00145E  518B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 12468  001460  0D06               	mullw	6
 12469  001462  0E95               	movlw	low _Global2
 12470  001464  0102               	movlb	2	; () banked
 12471  001466  6F00               	movwf	??_UseBluetooth& (0+255),b
 12472  001468  0E02               	movlw	high _Global2
 12473  00146A  0102               	movlb	2	; () banked
 12474  00146C  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 12475  00146E  50F3               	movf	prodl,w,c
 12476  001470  0102               	movlb	2	; () banked
 12477  001472  2700               	addwf	??_UseBluetooth& (0+255),f,b
 12478  001474  50F4               	movf	prodh,w,c
 12479  001476  0102               	movlb	2	; () banked
 12480  001478  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12481  00147A  0102               	movlb	2	; () banked
 12482  00147C  5194               	movf	UseBluetooth@i& (0+255),w,b
 12483  00147E  0D02               	mullw	2
 12484  001480  50F3               	movf	prodl,w,c
 12485  001482  0102               	movlb	2	; () banked
 12486  001484  2500               	addwf	??_UseBluetooth& (0+255),w,b
 12487  001486  6ED9               	movwf	fsr2l,c
 12488  001488  50F4               	movf	prodh,w,c
 12489  00148A  0102               	movlb	2	; () banked
 12490  00148C  2101               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 12491  00148E  6EDA               	movwf	fsr2h,c
 12492  001490  50DF               	movf	indf2,w,c
 12493  001492  A4D8               	btfss	status,2,c
 12494  001494  D029               	goto	l12884
 12495                           
 12496                           ; BSR set to: 2
 12497  001496  0102               	movlb	2	; () banked
 12498  001498  518B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 12499  00149A  0D06               	mullw	6
 12500  00149C  0E95               	movlw	low _Global2
 12501  00149E  0102               	movlb	2	; () banked
 12502  0014A0  6F00               	movwf	??_UseBluetooth& (0+255),b
 12503  0014A2  0E02               	movlw	high _Global2
 12504  0014A4  0102               	movlb	2	; () banked
 12505  0014A6  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 12506  0014A8  50F3               	movf	prodl,w,c
 12507  0014AA  0102               	movlb	2	; () banked
 12508  0014AC  2700               	addwf	??_UseBluetooth& (0+255),f,b
 12509  0014AE  50F4               	movf	prodh,w,c
 12510  0014B0  0102               	movlb	2	; () banked
 12511  0014B2  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12512  0014B4  0102               	movlb	2	; () banked
 12513  0014B6  5194               	movf	UseBluetooth@i& (0+255),w,b
 12514  0014B8  0D02               	mullw	2
 12515  0014BA  50F3               	movf	prodl,w,c
 12516  0014BC  0102               	movlb	2	; () banked
 12517  0014BE  2700               	addwf	??_UseBluetooth& (0+255),f,b
 12518  0014C0  50F4               	movf	prodh,w,c
 12519  0014C2  0102               	movlb	2	; () banked
 12520  0014C4  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12521  0014C6  0E01               	movlw	1
 12522  0014C8  0102               	movlb	2	; () banked
 12523  0014CA  2500               	addwf	??_UseBluetooth& (0+255),w,b
 12524  0014CC  6ED9               	movwf	fsr2l,c
 12525  0014CE  0E00               	movlw	0
 12526  0014D0  0102               	movlb	2	; () banked
 12527  0014D2  2101               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 12528  0014D4  6EDA               	movwf	fsr2h,c
 12529  0014D6  50DF               	movf	indf2,w,c
 12530  0014D8  A4D8               	btfss	status,2,c
 12531  0014DA  D006               	goto	l12884
 12532                           
 12533                           ; BSR set to: 2
 12534                           ;Bluetooth.c: 867: {
 12535                           ;Bluetooth.c: 868: EmptyPlace = i;
 12536  0014DC  C294  F284         	movff	UseBluetooth@i,UseBluetooth@EmptyPlace
 12537                           
 12538                           ; BSR set to: 2
 12539                           ;Bluetooth.c: 869: ok = 1;
 12540  0014E0  0E01               	movlw	1
 12541  0014E2  0102               	movlb	2	; () banked
 12542  0014E4  6F8A               	movwf	UseBluetooth@ok& (0+255),b
 12543                           
 12544                           ;Bluetooth.c: 870: break;
 12545  0014E6  D003               	goto	l12888
 12546  0014E8                     l12884:
 12547                           
 12548                           ; BSR set to: 2
 12549  0014E8  0102               	movlb	2	; () banked
 12550  0014EA  2B94               	incf	UseBluetooth@i& (0+255),f,b
 12551  0014EC  D7B2               	goto	l12872
 12552  0014EE                     l12888:
 12553                           
 12554                           ; BSR set to: 2
 12555                           ;Bluetooth.c: 871: }
 12556                           ;Bluetooth.c: 872: }
 12557                           ;Bluetooth.c: 873: if(!ok)
 12558  0014EE  0102               	movlb	2	; () banked
 12559  0014F0  518A               	movf	UseBluetooth@ok& (0+255),w,b
 12560  0014F2  0102               	movlb	2	; () banked
 12561  0014F4  A4D8               	btfss	status,2,c
 12562  0014F6  D009               	goto	l12894
 12563                           
 12564                           ; BSR set to: 2
 12565                           ;Bluetooth.c: 874: {
 12566                           ;Bluetooth.c: 875: UARTstringCRLN_CONST("Error: No space available to this RF code");
 12567  0014F8  0E4E               	movlw	low STR_73
 12568  0014FA  0100               	movlb	0	; () banked
 12569  0014FC  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 12570  0014FE  0EF6               	movlw	high STR_73
 12571  001500  0100               	movlb	0	; () banked
 12572  001502  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 12573  001504  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 12574                           
 12575                           ;Bluetooth.c: 876: return 0;
 12576                           ;	Return value of _UseBluetooth is never used
 12577  001508  0012               	return	
 12578  00150A                     l12894:
 12579                           
 12580                           ;Bluetooth.c: 877: }
 12581                           ;Bluetooth.c: 878: ok = 1;
 12582  00150A  0E01               	movlw	1
 12583  00150C  0102               	movlb	2	; () banked
 12584  00150E  6F8A               	movwf	UseBluetooth@ok& (0+255),b
 12585                           
 12586                           ;Bluetooth.c: 879: if(EmptyPlace)
 12587  001510  0102               	movlb	2	; () banked
 12588  001512  5184               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 12589  001514  0102               	movlb	2	; () banked
 12590  001516  B4D8               	btfsc	status,2,c
 12591  001518  D058               	goto	l12908
 12592                           
 12593                           ; BSR set to: 2
 12594                           ;Bluetooth.c: 880: {
 12595                           ;Bluetooth.c: 882: for(i=0; i < EmptyPlace; i++)
 12596  00151A  0E00               	movlw	0
 12597  00151C  0102               	movlb	2	; () banked
 12598  00151E  6F94               	movwf	UseBluetooth@i& (0+255),b
 12599  001520  D04C               	goto	l12906
 12600  001522                     l12898:
 12601                           
 12602                           ; BSR set to: 2
 12603                           ;Bluetooth.c: 883: {
 12604                           ;Bluetooth.c: 884: if(NecAddress == Global2.RemoteButtonRF[tempRFArray][i][0])
 12605  001522  0102               	movlb	2	; () banked
 12606  001524  518B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 12607  001526  0D06               	mullw	6
 12608  001528  0E95               	movlw	low _Global2
 12609  00152A  0102               	movlb	2	; () banked
 12610  00152C  6F00               	movwf	??_UseBluetooth& (0+255),b
 12611  00152E  0E02               	movlw	high _Global2
 12612  001530  0102               	movlb	2	; () banked
 12613  001532  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 12614  001534  50F3               	movf	prodl,w,c
 12615  001536  0102               	movlb	2	; () banked
 12616  001538  2700               	addwf	??_UseBluetooth& (0+255),f,b
 12617  00153A  50F4               	movf	prodh,w,c
 12618  00153C  0102               	movlb	2	; () banked
 12619  00153E  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12620  001540  0102               	movlb	2	; () banked
 12621  001542  5194               	movf	UseBluetooth@i& (0+255),w,b
 12622  001544  0D02               	mullw	2
 12623  001546  50F3               	movf	prodl,w,c
 12624  001548  0102               	movlb	2	; () banked
 12625  00154A  2500               	addwf	??_UseBluetooth& (0+255),w,b
 12626  00154C  6ED9               	movwf	fsr2l,c
 12627  00154E  50F4               	movf	prodh,w,c
 12628  001550  0102               	movlb	2	; () banked
 12629  001552  2101               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 12630  001554  6EDA               	movwf	fsr2h,c
 12631  001556  0102               	movlb	2	; () banked
 12632  001558  518E               	movf	UseBluetooth@NecAddress& (0+255),w,b
 12633  00155A  18DE               	xorwf	postinc2,w,c
 12634  00155C  A4D8               	btfss	status,2,c
 12635  00155E  D02A               	goto	l12904
 12636                           
 12637                           ; BSR set to: 2
 12638                           ;Bluetooth.c: 885: {
 12639                           ;Bluetooth.c: 886: if(NecCommand == Global2.RemoteButtonRF[tempRFArray][i][1])
 12640  001560  0102               	movlb	2	; () banked
 12641  001562  518B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 12642  001564  0D06               	mullw	6
 12643  001566  0E95               	movlw	low _Global2
 12644  001568  0102               	movlb	2	; () banked
 12645  00156A  6F00               	movwf	??_UseBluetooth& (0+255),b
 12646  00156C  0E02               	movlw	high _Global2
 12647  00156E  0102               	movlb	2	; () banked
 12648  001570  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 12649  001572  50F3               	movf	prodl,w,c
 12650  001574  0102               	movlb	2	; () banked
 12651  001576  2700               	addwf	??_UseBluetooth& (0+255),f,b
 12652  001578  50F4               	movf	prodh,w,c
 12653  00157A  0102               	movlb	2	; () banked
 12654  00157C  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12655  00157E  0102               	movlb	2	; () banked
 12656  001580  5194               	movf	UseBluetooth@i& (0+255),w,b
 12657  001582  0D02               	mullw	2
 12658  001584  50F3               	movf	prodl,w,c
 12659  001586  0102               	movlb	2	; () banked
 12660  001588  2700               	addwf	??_UseBluetooth& (0+255),f,b
 12661  00158A  50F4               	movf	prodh,w,c
 12662  00158C  0102               	movlb	2	; () banked
 12663  00158E  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12664  001590  0E01               	movlw	1
 12665  001592  0102               	movlb	2	; () banked
 12666  001594  2500               	addwf	??_UseBluetooth& (0+255),w,b
 12667  001596  6ED9               	movwf	fsr2l,c
 12668  001598  0E00               	movlw	0
 12669  00159A  0102               	movlb	2	; () banked
 12670  00159C  2101               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 12671  00159E  6EDA               	movwf	fsr2h,c
 12672  0015A0  0102               	movlb	2	; () banked
 12673  0015A2  518F               	movf	UseBluetooth@NecCommand& (0+255),w,b
 12674  0015A4  18DE               	xorwf	postinc2,w,c
 12675  0015A6  A4D8               	btfss	status,2,c
 12676  0015A8  D005               	goto	l12904
 12677                           
 12678                           ; BSR set to: 2
 12679                           ;Bluetooth.c: 887: {
 12680                           ;Bluetooth.c: 888: ok = 0;
 12681  0015AA  0E00               	movlw	0
 12682  0015AC  0102               	movlb	2	; () banked
 12683  0015AE  6F8A               	movwf	UseBluetooth@ok& (0+255),b
 12684                           
 12685                           ;Bluetooth.c: 889: break;
 12686  0015B0  D00C               	goto	l12908
 12687                           
 12688                           ; BSR set to: 2
 12689  0015B2  D000               	goto	l12904
 12690  0015B4                     l12904:
 12691                           
 12692                           ; BSR set to: 2
 12693  0015B4  0102               	movlb	2	; () banked
 12694  0015B6  2B94               	incf	UseBluetooth@i& (0+255),f,b
 12695  0015B8  D000               	goto	l12906
 12696  0015BA                     l12906:
 12697                           
 12698                           ; BSR set to: 2
 12699  0015BA  0102               	movlb	2	; () banked
 12700  0015BC  5184               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 12701  0015BE  0102               	movlb	2	; () banked
 12702  0015C0  5D94               	subwf	UseBluetooth@i& (0+255),w,b
 12703  0015C2  B0D8               	btfsc	status,0,c
 12704  0015C4  D002               	goto	l12908
 12705  0015C6  D7AD               	goto	l12898
 12706                           
 12707                           ; BSR set to: 2
 12708  0015C8  D000               	goto	l12908
 12709  0015CA                     l12908:
 12710                           
 12711                           ; BSR set to: 2
 12712                           ;Bluetooth.c: 890: }
 12713                           ;Bluetooth.c: 891: }
 12714                           ;Bluetooth.c: 892: }
 12715                           ;Bluetooth.c: 893: }
 12716                           ;Bluetooth.c: 894: if(!ok)
 12717  0015CA  0102               	movlb	2	; () banked
 12718  0015CC  518A               	movf	UseBluetooth@ok& (0+255),w,b
 12719  0015CE  0102               	movlb	2	; () banked
 12720  0015D0  A4D8               	btfss	status,2,c
 12721  0015D2  D009               	goto	l12914
 12722                           
 12723                           ; BSR set to: 2
 12724                           ;Bluetooth.c: 895: {
 12725                           ;Bluetooth.c: 896: UARTstringCRLN_CONST("Error: NEC code already saved to this RF code")
      +                          ;
 12726  0015D4  0E16               	movlw	low STR_74
 12727  0015D6  0100               	movlb	0	; () banked
 12728  0015D8  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 12729  0015DA  0EF5               	movlw	high STR_74
 12730  0015DC  0100               	movlb	0	; () banked
 12731  0015DE  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 12732  0015E0  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 12733                           
 12734                           ;Bluetooth.c: 897: return 0;
 12735                           ;	Return value of _UseBluetooth is never used
 12736  0015E4  0012               	return	
 12737  0015E6                     l12914:
 12738                           
 12739                           ;Bluetooth.c: 898: }
 12740                           ;Bluetooth.c: 901: Global2.RemoteButtonRF[tempRFArray][EmptyPlace][0] = NecAddress;
 12741  0015E6  0102               	movlb	2	; () banked
 12742  0015E8  518B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 12743  0015EA  0D06               	mullw	6
 12744  0015EC  0E95               	movlw	low _Global2
 12745  0015EE  0102               	movlb	2	; () banked
 12746  0015F0  6F00               	movwf	??_UseBluetooth& (0+255),b
 12747  0015F2  0E02               	movlw	high _Global2
 12748  0015F4  0102               	movlb	2	; () banked
 12749  0015F6  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 12750  0015F8  50F3               	movf	prodl,w,c
 12751  0015FA  0102               	movlb	2	; () banked
 12752  0015FC  2700               	addwf	??_UseBluetooth& (0+255),f,b
 12753  0015FE  50F4               	movf	prodh,w,c
 12754  001600  0102               	movlb	2	; () banked
 12755  001602  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12756  001604  0102               	movlb	2	; () banked
 12757  001606  5184               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 12758  001608  0D02               	mullw	2
 12759  00160A  50F3               	movf	prodl,w,c
 12760  00160C  0102               	movlb	2	; () banked
 12761  00160E  2500               	addwf	??_UseBluetooth& (0+255),w,b
 12762  001610  6ED9               	movwf	fsr2l,c
 12763  001612  50F4               	movf	prodh,w,c
 12764  001614  0102               	movlb	2	; () banked
 12765  001616  2101               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 12766  001618  6EDA               	movwf	fsr2h,c
 12767  00161A  C28E  FFDF         	movff	UseBluetooth@NecAddress,indf2
 12768                           
 12769                           ;Bluetooth.c: 902: Global2.RemoteButtonRF[tempRFArray][EmptyPlace][1] = NecCommand;
 12770  00161E  0102               	movlb	2	; () banked
 12771  001620  518B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 12772  001622  0D06               	mullw	6
 12773  001624  0E95               	movlw	low _Global2
 12774  001626  0102               	movlb	2	; () banked
 12775  001628  6F00               	movwf	??_UseBluetooth& (0+255),b
 12776  00162A  0E02               	movlw	high _Global2
 12777  00162C  0102               	movlb	2	; () banked
 12778  00162E  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 12779  001630  50F3               	movf	prodl,w,c
 12780  001632  0102               	movlb	2	; () banked
 12781  001634  2700               	addwf	??_UseBluetooth& (0+255),f,b
 12782  001636  50F4               	movf	prodh,w,c
 12783  001638  0102               	movlb	2	; () banked
 12784  00163A  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12785  00163C  0102               	movlb	2	; () banked
 12786  00163E  5184               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 12787  001640  0D02               	mullw	2
 12788  001642  50F3               	movf	prodl,w,c
 12789  001644  0102               	movlb	2	; () banked
 12790  001646  2700               	addwf	??_UseBluetooth& (0+255),f,b
 12791  001648  50F4               	movf	prodh,w,c
 12792  00164A  0102               	movlb	2	; () banked
 12793  00164C  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12794  00164E  0E01               	movlw	1
 12795  001650  0102               	movlb	2	; () banked
 12796  001652  2500               	addwf	??_UseBluetooth& (0+255),w,b
 12797  001654  6ED9               	movwf	fsr2l,c
 12798  001656  0E00               	movlw	0
 12799  001658  0102               	movlb	2	; () banked
 12800  00165A  2101               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 12801  00165C  6EDA               	movwf	fsr2h,c
 12802  00165E  C28F  FFDF         	movff	UseBluetooth@NecCommand,indf2
 12803                           
 12804                           ; BSR set to: 2
 12805                           ;Bluetooth.c: 903: SyncGlobalToEEPROM();
 12806  001662  EC69  F04D         	call	_SyncGlobalToEEPROM	;wreg free
 12807                           
 12808                           ;Bluetooth.c: 905: if(device)
 12809  001666  0102               	movlb	2	; () banked
 12810  001668  5185               	movf	UseBluetooth@device& (0+255),w,b
 12811  00166A  0102               	movlb	2	; () banked
 12812  00166C  B4D8               	btfsc	status,2,c
 12813  00166E  D023               	goto	l12922
 12814                           
 12815                           ; BSR set to: 2
 12816                           ;Bluetooth.c: 906: {
 12817                           ;Bluetooth.c: 907: sprintf(buf,"NEC code 0x%lX now transmits RF config %d channel %c dev
      +                          ice %d",IR_NEC, rfconf, rfchannelSTR[0], device);
 12818  001670  0E0C               	movlw	low UseBluetooth@buf
 12819  001672  0100               	movlb	0	; () banked
 12820  001674  6FAE               	movwf	sprintf@sp& (0+255),b
 12821  001676  0E02               	movlw	high UseBluetooth@buf
 12822  001678  0100               	movlb	0	; () banked
 12823  00167A  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 12824  00167C  0E94               	movlw	low STR_75
 12825  00167E  0100               	movlb	0	; () banked
 12826  001680  6FB0               	movwf	sprintf@f& (0+255),b
 12827  001682  0EF0               	movlw	high STR_75
 12828  001684  0100               	movlb	0	; () banked
 12829  001686  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 12830  001688  C3EC  F0B2         	movff	_IR_NEC,?_sprintf+4
 12831  00168C  C3ED  F0B3         	movff	_IR_NEC+1,?_sprintf+5
 12832  001690  C3EE  F0B4         	movff	_IR_NEC+2,?_sprintf+6
 12833  001694  C3EF  F0B5         	movff	_IR_NEC+3,?_sprintf+7
 12834  001698  C28D  F0B6         	movff	UseBluetooth@rfconf,?_sprintf+8
 12835  00169C  0100               	movlb	0	; () banked
 12836  00169E  6BB7               	clrf	(?_sprintf+9)& (0+255),b
 12837  0016A0  C270  F0B8         	movff	UseBluetooth@rfchannelSTR,?_sprintf+10
 12838  0016A4  0100               	movlb	0	; () banked
 12839  0016A6  6BB9               	clrf	(?_sprintf+11)& (0+255),b
 12840  0016A8  C285  F0BA         	movff	UseBluetooth@device,?_sprintf+12
 12841  0016AC  0100               	movlb	0	; () banked
 12842  0016AE  6BBB               	clrf	(?_sprintf+13)& (0+255),b
 12843  0016B0  EC27  F014         	call	_sprintf	;wreg free
 12844                           
 12845                           ;Bluetooth.c: 908: }
 12846  0016B4  D01F               	goto	l12924
 12847  0016B6                     l12922:
 12848                           
 12849                           ;Bluetooth.c: 909: else
 12850                           ;Bluetooth.c: 910: {
 12851                           ;Bluetooth.c: 911: sprintf(buf,"NEC code 0x%lX now transmits RF config %d channel %c ",I
      +                          R_NEC, rfconf, rfchannelSTR[0]);
 12852  0016B6  0E0C               	movlw	low UseBluetooth@buf
 12853  0016B8  0100               	movlb	0	; () banked
 12854  0016BA  6FAE               	movwf	sprintf@sp& (0+255),b
 12855  0016BC  0E02               	movlw	high UseBluetooth@buf
 12856  0016BE  0100               	movlb	0	; () banked
 12857  0016C0  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 12858  0016C2  0E48               	movlw	low STR_76
 12859  0016C4  0100               	movlb	0	; () banked
 12860  0016C6  6FB0               	movwf	sprintf@f& (0+255),b
 12861  0016C8  0EF1               	movlw	high STR_76
 12862  0016CA  0100               	movlb	0	; () banked
 12863  0016CC  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 12864  0016CE  C3EC  F0B2         	movff	_IR_NEC,?_sprintf+4
 12865  0016D2  C3ED  F0B3         	movff	_IR_NEC+1,?_sprintf+5
 12866  0016D6  C3EE  F0B4         	movff	_IR_NEC+2,?_sprintf+6
 12867  0016DA  C3EF  F0B5         	movff	_IR_NEC+3,?_sprintf+7
 12868  0016DE  C28D  F0B6         	movff	UseBluetooth@rfconf,?_sprintf+8
 12869  0016E2  0100               	movlb	0	; () banked
 12870  0016E4  6BB7               	clrf	(?_sprintf+9)& (0+255),b
 12871  0016E6  C270  F0B8         	movff	UseBluetooth@rfchannelSTR,?_sprintf+10
 12872  0016EA  0100               	movlb	0	; () banked
 12873  0016EC  6BB9               	clrf	(?_sprintf+11)& (0+255),b
 12874  0016EE  EC27  F014         	call	_sprintf	;wreg free
 12875  0016F2  D000               	goto	l12924
 12876  0016F4                     l12924:
 12877                           
 12878                           ;Bluetooth.c: 912: }
 12879                           ;Bluetooth.c: 913: UARTstringCRLN(buf);
 12880  0016F4  0E0C               	movlw	low UseBluetooth@buf
 12881  0016F6  0100               	movlb	0	; () banked
 12882  0016F8  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 12883  0016FA  0E02               	movlw	high UseBluetooth@buf
 12884  0016FC  0100               	movlb	0	; () banked
 12885  0016FE  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12886  001700  ECA3  F052         	call	_UARTstringCRLN	;wreg free
 12887                           
 12888                           ;Bluetooth.c: 914: UARTstring_CONST(CRLN);
 12889  001704  0E51               	movlw	low _CRLN
 12890  001706  0100               	movlb	0	; () banked
 12891  001708  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 12892  00170A  0EF0               	movlw	high _CRLN
 12893  00170C  0100               	movlb	0	; () banked
 12894  00170E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12895  001710  EC42  F053         	call	_UARTstring_CONST	;wreg free
 12896                           
 12897                           ;Bluetooth.c: 916: for(i =0;i<10;i++)
 12898  001714  0E00               	movlw	0
 12899  001716  0102               	movlb	2	; () banked
 12900  001718  6F94               	movwf	UseBluetooth@i& (0+255),b
 12901                           
 12902                           ; BSR set to: 2
 12903  00171A  0E09               	movlw	9
 12904  00171C  0102               	movlb	2	; () banked
 12905  00171E  6594               	cpfsgt	UseBluetooth@i& (0+255),b
 12906  001720  D002               	goto	l12934
 12907  001722  0012               	return	
 12908                           
 12909                           ; BSR set to: 2
 12910  001724  0012               	return	
 12911  001726                     l12934:
 12912                           
 12913                           ; BSR set to: 2
 12914                           ;Bluetooth.c: 917: {
 12915                           ;Bluetooth.c: 918: (LATC |= 0x04);
 12916  001726  848B               	bsf	3979,2,c	;volatile
 12917                           
 12918                           ; BSR set to: 2
 12919                           ;Bluetooth.c: 919: delayUS(50000);
 12920  001728  0E50               	movlw	80
 12921  00172A  0100               	movlb	0	; () banked
 12922  00172C  6F60               	movwf	delayUS@US& (0+255),b
 12923  00172E  0EC3               	movlw	195
 12924  001730  6F61               	movwf	(delayUS@US+1)& (0+255),b
 12925  001732  0E00               	movlw	0
 12926  001734  6F62               	movwf	(delayUS@US+2)& (0+255),b
 12927  001736  0E00               	movlw	0
 12928  001738  6F63               	movwf	(delayUS@US+3)& (0+255),b
 12929  00173A  EC3F  F051         	call	_delayUS	;wreg free
 12930                           
 12931                           ;Bluetooth.c: 920: (LATC &= ~0x04);
 12932  00173E  948B               	bcf	3979,2,c	;volatile
 12933                           
 12934                           ;Bluetooth.c: 921: delayUS(50000);
 12935  001740  0E50               	movlw	80
 12936  001742  0100               	movlb	0	; () banked
 12937  001744  6F60               	movwf	delayUS@US& (0+255),b
 12938  001746  0EC3               	movlw	195
 12939  001748  6F61               	movwf	(delayUS@US+1)& (0+255),b
 12940  00174A  0E00               	movlw	0
 12941  00174C  6F62               	movwf	(delayUS@US+2)& (0+255),b
 12942  00174E  0E00               	movlw	0
 12943  001750  6F63               	movwf	(delayUS@US+3)& (0+255),b
 12944  001752  EC3F  F051         	call	_delayUS	;wreg free
 12945  001756  0102               	movlb	2	; () banked
 12946  001758  2B94               	incf	UseBluetooth@i& (0+255),f,b
 12947                           
 12948                           ; BSR set to: 2
 12949  00175A  0E09               	movlw	9
 12950  00175C  0102               	movlb	2	; () banked
 12951  00175E  6594               	cpfsgt	UseBluetooth@i& (0+255),b
 12952  001760  D7E2               	goto	l12934
 12953  001762  0012               	return	
 12954                           
 12955                           ; BSR set to: 2
 12956                           ;Bluetooth.c: 924: }
 12957                           
 12958                           ; BSR set to: 2
 12959                           ;Bluetooth.c: 922: }
 12960                           ;Bluetooth.c: 923: return 1;
 12961                           ;	Return value of _UseBluetooth is never used
 12962  001764  0012               	return	
 12963  001766                     l12946:
 12964                           
 12965                           ; BSR set to: 2
 12966                           ;Bluetooth.c: 925: else
 12967                           ;Bluetooth.c: 926: {
 12968                           ;Bluetooth.c: 928: for(i=0; i < 3; i++)
 12969  001766  0E00               	movlw	0
 12970  001768  0102               	movlb	2	; () banked
 12971  00176A  6F94               	movwf	UseBluetooth@i& (0+255),b
 12972  00176C                     l12948:
 12973                           
 12974                           ; BSR set to: 2
 12975  00176C  0E02               	movlw	2
 12976  00176E  0102               	movlb	2	; () banked
 12977  001770  6594               	cpfsgt	UseBluetooth@i& (0+255),b
 12978  001772  D001               	goto	l12952
 12979                           
 12980                           ; BSR set to: 2
 12981  001774  D041               	goto	l12958
 12982  001776                     l12952:
 12983                           
 12984                           ; BSR set to: 2
 12985                           ;Bluetooth.c: 929: {
 12986                           ;Bluetooth.c: 931: Global2.RemoteButtonRF[tempRFArray][i][0] = 0;
 12987  001776  0102               	movlb	2	; () banked
 12988  001778  518B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 12989  00177A  0D06               	mullw	6
 12990  00177C  0E95               	movlw	low _Global2
 12991  00177E  0102               	movlb	2	; () banked
 12992  001780  6F00               	movwf	??_UseBluetooth& (0+255),b
 12993  001782  0E02               	movlw	high _Global2
 12994  001784  0102               	movlb	2	; () banked
 12995  001786  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 12996  001788  50F3               	movf	prodl,w,c
 12997  00178A  0102               	movlb	2	; () banked
 12998  00178C  2700               	addwf	??_UseBluetooth& (0+255),f,b
 12999  00178E  50F4               	movf	prodh,w,c
 13000  001790  0102               	movlb	2	; () banked
 13001  001792  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 13002  001794  0102               	movlb	2	; () banked
 13003  001796  5194               	movf	UseBluetooth@i& (0+255),w,b
 13004  001798  0D02               	mullw	2
 13005  00179A  50F3               	movf	prodl,w,c
 13006  00179C  0102               	movlb	2	; () banked
 13007  00179E  2500               	addwf	??_UseBluetooth& (0+255),w,b
 13008  0017A0  6ED9               	movwf	fsr2l,c
 13009  0017A2  50F4               	movf	prodh,w,c
 13010  0017A4  0102               	movlb	2	; () banked
 13011  0017A6  2101               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 13012  0017A8  6EDA               	movwf	fsr2h,c
 13013  0017AA  0E00               	movlw	0
 13014  0017AC  6EDF               	movwf	indf2,c
 13015                           
 13016                           ;Bluetooth.c: 932: Global2.RemoteButtonRF[tempRFArray][i][1] = 0;
 13017  0017AE  0102               	movlb	2	; () banked
 13018  0017B0  518B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 13019  0017B2  0D06               	mullw	6
 13020  0017B4  0E95               	movlw	low _Global2
 13021  0017B6  0102               	movlb	2	; () banked
 13022  0017B8  6F00               	movwf	??_UseBluetooth& (0+255),b
 13023  0017BA  0E02               	movlw	high _Global2
 13024  0017BC  0102               	movlb	2	; () banked
 13025  0017BE  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 13026  0017C0  50F3               	movf	prodl,w,c
 13027  0017C2  0102               	movlb	2	; () banked
 13028  0017C4  2700               	addwf	??_UseBluetooth& (0+255),f,b
 13029  0017C6  50F4               	movf	prodh,w,c
 13030  0017C8  0102               	movlb	2	; () banked
 13031  0017CA  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 13032  0017CC  0102               	movlb	2	; () banked
 13033  0017CE  5194               	movf	UseBluetooth@i& (0+255),w,b
 13034  0017D0  0D02               	mullw	2
 13035  0017D2  50F3               	movf	prodl,w,c
 13036  0017D4  0102               	movlb	2	; () banked
 13037  0017D6  2700               	addwf	??_UseBluetooth& (0+255),f,b
 13038  0017D8  50F4               	movf	prodh,w,c
 13039  0017DA  0102               	movlb	2	; () banked
 13040  0017DC  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 13041  0017DE  0E01               	movlw	1
 13042  0017E0  0102               	movlb	2	; () banked
 13043  0017E2  2500               	addwf	??_UseBluetooth& (0+255),w,b
 13044  0017E4  6ED9               	movwf	fsr2l,c
 13045  0017E6  0E00               	movlw	0
 13046  0017E8  0102               	movlb	2	; () banked
 13047  0017EA  2101               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 13048  0017EC  6EDA               	movwf	fsr2h,c
 13049  0017EE  0E00               	movlw	0
 13050  0017F0  6EDF               	movwf	indf2,c
 13051                           
 13052                           ; BSR set to: 2
 13053  0017F2  0102               	movlb	2	; () banked
 13054  0017F4  2B94               	incf	UseBluetooth@i& (0+255),f,b
 13055  0017F6  D7BA               	goto	l12948
 13056  0017F8                     l12958:
 13057                           
 13058                           ; BSR set to: 2
 13059                           ;Bluetooth.c: 933: }
 13060                           ;Bluetooth.c: 934: SyncGlobalToEEPROM();
 13061  0017F8  EC69  F04D         	call	_SyncGlobalToEEPROM	;wreg free
 13062                           
 13063                           ;Bluetooth.c: 935: if(device)
 13064  0017FC  0102               	movlb	2	; () banked
 13065  0017FE  5185               	movf	UseBluetooth@device& (0+255),w,b
 13066  001800  0102               	movlb	2	; () banked
 13067  001802  B4D8               	btfsc	status,2,c
 13068  001804  D01B               	goto	l12964
 13069                           
 13070                           ; BSR set to: 2
 13071                           ;Bluetooth.c: 936: {
 13072                           ;Bluetooth.c: 937: sprintf(buf,"RF config %d channel %c device %d successfully erased",r
      +                          fconf, rfchannelSTR[0], device);
 13073  001806  0E0C               	movlw	low UseBluetooth@buf
 13074  001808  0100               	movlb	0	; () banked
 13075  00180A  6FAE               	movwf	sprintf@sp& (0+255),b
 13076  00180C  0E02               	movlw	high UseBluetooth@buf
 13077  00180E  0100               	movlb	0	; () banked
 13078  001810  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 13079  001812  0E7E               	movlw	low STR_77
 13080  001814  0100               	movlb	0	; () banked
 13081  001816  6FB0               	movwf	sprintf@f& (0+255),b
 13082  001818  0EF1               	movlw	high STR_77
 13083  00181A  0100               	movlb	0	; () banked
 13084  00181C  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 13085  00181E  C28D  F0B2         	movff	UseBluetooth@rfconf,?_sprintf+4
 13086  001822  0100               	movlb	0	; () banked
 13087  001824  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 13088  001826  C270  F0B4         	movff	UseBluetooth@rfchannelSTR,?_sprintf+6
 13089  00182A  0100               	movlb	0	; () banked
 13090  00182C  6BB5               	clrf	(?_sprintf+7)& (0+255),b
 13091  00182E  C285  F0B6         	movff	UseBluetooth@device,?_sprintf+8
 13092  001832  0100               	movlb	0	; () banked
 13093  001834  6BB7               	clrf	(?_sprintf+9)& (0+255),b
 13094  001836  EC27  F014         	call	_sprintf	;wreg free
 13095                           
 13096                           ;Bluetooth.c: 938: }
 13097  00183A  D017               	goto	l12966
 13098  00183C                     l12964:
 13099                           
 13100                           ;Bluetooth.c: 939: else
 13101                           ;Bluetooth.c: 940: {
 13102                           ;Bluetooth.c: 941: sprintf(buf,"RF config %d channel %c successfully erased",rfconf, rfc
      +                          hannelSTR[0]);
 13103  00183C  0E0C               	movlw	low UseBluetooth@buf
 13104  00183E  0100               	movlb	0	; () banked
 13105  001840  6FAE               	movwf	sprintf@sp& (0+255),b
 13106  001842  0E02               	movlw	high UseBluetooth@buf
 13107  001844  0100               	movlb	0	; () banked
 13108  001846  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 13109  001848  0EF6               	movlw	low STR_78
 13110  00184A  0100               	movlb	0	; () banked
 13111  00184C  6FB0               	movwf	sprintf@f& (0+255),b
 13112  00184E  0EF5               	movlw	high STR_78
 13113  001850  0100               	movlb	0	; () banked
 13114  001852  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 13115  001854  C28D  F0B2         	movff	UseBluetooth@rfconf,?_sprintf+4
 13116  001858  0100               	movlb	0	; () banked
 13117  00185A  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 13118  00185C  C270  F0B4         	movff	UseBluetooth@rfchannelSTR,?_sprintf+6
 13119  001860  0100               	movlb	0	; () banked
 13120  001862  6BB5               	clrf	(?_sprintf+7)& (0+255),b
 13121  001864  EC27  F014         	call	_sprintf	;wreg free
 13122  001868  D000               	goto	l12966
 13123  00186A                     l12966:
 13124                           
 13125                           ;Bluetooth.c: 942: }
 13126                           ;Bluetooth.c: 943: UARTstringCRLN(buf);
 13127  00186A  0E0C               	movlw	low UseBluetooth@buf
 13128  00186C  0100               	movlb	0	; () banked
 13129  00186E  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 13130  001870  0E02               	movlw	high UseBluetooth@buf
 13131  001872  0100               	movlb	0	; () banked
 13132  001874  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 13133  001876  ECA3  F052         	call	_UARTstringCRLN	;wreg free
 13134                           
 13135                           ;Bluetooth.c: 944: UARTstring_CONST(CRLN);
 13136  00187A  0E51               	movlw	low _CRLN
 13137  00187C  0100               	movlb	0	; () banked
 13138  00187E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13139  001880  0EF0               	movlw	high _CRLN
 13140  001882  0100               	movlb	0	; () banked
 13141  001884  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13142  001886  EC42  F053         	call	_UARTstring_CONST	;wreg free
 13143                           
 13144                           ;Bluetooth.c: 946: for(i =0;i<10;i++)
 13145  00188A  0E00               	movlw	0
 13146  00188C  0102               	movlb	2	; () banked
 13147  00188E  6F94               	movwf	UseBluetooth@i& (0+255),b
 13148                           
 13149                           ; BSR set to: 2
 13150  001890  0E09               	movlw	9
 13151  001892  0102               	movlb	2	; () banked
 13152  001894  6594               	cpfsgt	UseBluetooth@i& (0+255),b
 13153  001896  D002               	goto	l12976
 13154  001898  0012               	return	
 13155                           
 13156                           ; BSR set to: 2
 13157  00189A  0012               	return	
 13158  00189C                     l12976:
 13159                           
 13160                           ; BSR set to: 2
 13161                           ;Bluetooth.c: 947: {
 13162                           ;Bluetooth.c: 948: (LATC |= 0x04);
 13163  00189C  848B               	bsf	3979,2,c	;volatile
 13164                           
 13165                           ; BSR set to: 2
 13166                           ;Bluetooth.c: 949: delayUS(50000);
 13167  00189E  0E50               	movlw	80
 13168  0018A0  0100               	movlb	0	; () banked
 13169  0018A2  6F60               	movwf	delayUS@US& (0+255),b
 13170  0018A4  0EC3               	movlw	195
 13171  0018A6  6F61               	movwf	(delayUS@US+1)& (0+255),b
 13172  0018A8  0E00               	movlw	0
 13173  0018AA  6F62               	movwf	(delayUS@US+2)& (0+255),b
 13174  0018AC  0E00               	movlw	0
 13175  0018AE  6F63               	movwf	(delayUS@US+3)& (0+255),b
 13176  0018B0  EC3F  F051         	call	_delayUS	;wreg free
 13177                           
 13178                           ;Bluetooth.c: 950: (LATC &= ~0x04);
 13179  0018B4  948B               	bcf	3979,2,c	;volatile
 13180                           
 13181                           ;Bluetooth.c: 951: delayUS(50000);
 13182  0018B6  0E50               	movlw	80
 13183  0018B8  0100               	movlb	0	; () banked
 13184  0018BA  6F60               	movwf	delayUS@US& (0+255),b
 13185  0018BC  0EC3               	movlw	195
 13186  0018BE  6F61               	movwf	(delayUS@US+1)& (0+255),b
 13187  0018C0  0E00               	movlw	0
 13188  0018C2  6F62               	movwf	(delayUS@US+2)& (0+255),b
 13189  0018C4  0E00               	movlw	0
 13190  0018C6  6F63               	movwf	(delayUS@US+3)& (0+255),b
 13191  0018C8  EC3F  F051         	call	_delayUS	;wreg free
 13192  0018CC  0102               	movlb	2	; () banked
 13193  0018CE  2B94               	incf	UseBluetooth@i& (0+255),f,b
 13194                           
 13195                           ; BSR set to: 2
 13196  0018D0  0E09               	movlw	9
 13197  0018D2  0102               	movlb	2	; () banked
 13198  0018D4  6594               	cpfsgt	UseBluetooth@i& (0+255),b
 13199  0018D6  D7E2               	goto	l12976
 13200  0018D8  0012               	return	
 13201                           
 13202                           ; BSR set to: 2
 13203                           ;Bluetooth.c: 954: }
 13204                           ;Bluetooth.c: 955: }
 13205                           
 13206                           ; BSR set to: 2
 13207                           ;Bluetooth.c: 952: }
 13208                           ;Bluetooth.c: 953: return 1;
 13209                           ;	Return value of _UseBluetooth is never used
 13210  0018DA  0012               	return	
 13211  0018DC                     l12986:
 13212                           
 13213                           ; BSR set to: 2
 13214                           ;Bluetooth.c: 956: else
 13215                           ;Bluetooth.c: 957: {
 13216                           ;Bluetooth.c: 958: UARTstringCRLN_CONST("Error: RF channel needs to be one character");
 13217  0018DC  0E22               	movlw	low STR_79
 13218  0018DE  0100               	movlb	0	; () banked
 13219  0018E0  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13220  0018E2  0EF6               	movlw	high STR_79
 13221  0018E4  0100               	movlb	0	; () banked
 13222  0018E6  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13223  0018E8  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 13224                           
 13225                           ;Bluetooth.c: 959: UARTstring_CONST(CRLN);
 13226  0018EC  0E51               	movlw	low _CRLN
 13227  0018EE  0100               	movlb	0	; () banked
 13228  0018F0  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13229  0018F2  0EF0               	movlw	high _CRLN
 13230  0018F4  0100               	movlb	0	; () banked
 13231  0018F6  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13232  0018F8  EC42  F053         	call	_UARTstring_CONST	;wreg free
 13233                           
 13234                           ;Bluetooth.c: 961: }
 13235                           ;Bluetooth.c: 962: }
 13236                           ;Bluetooth.c: 963: }
 13237                           
 13238                           ;Bluetooth.c: 960: return 0;
 13239                           ;	Return value of _UseBluetooth is never used
 13240  0018FC  0012               	return	
 13241  0018FE                     l12990:
 13242                           
 13243                           ;Bluetooth.c: 964: else if(StringMatchCaseInsensitive(String,"Reset"))
 13244  0018FE  C0F2  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 13245  001902  C0F3  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 13246  001906  0EC6               	movlw	low STR_80
 13247  001908  0100               	movlb	0	; () banked
 13248  00190A  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 13249  00190C  0EFF               	movlw	high STR_80
 13250  00190E  0100               	movlb	0	; () banked
 13251  001910  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 13252  001912  EC08  F04E         	call	_StringMatchCaseInsensitive	;wreg free
 13253  001916  0900               	iorlw	0
 13254  001918  B4D8               	btfsc	status,2,c
 13255  00191A  D097               	goto	l13052
 13256                           
 13257                           ;Bluetooth.c: 965: {
 13258                           ;Bluetooth.c: 966: cleanBuffer(ReceivedString, ReceivedStringPos);
 13259  00191C  0E78               	movlw	low _ReceivedString
 13260  00191E  0100               	movlb	0	; () banked
 13261  001920  6F60               	movwf	cleanBuffer@data& (0+255),b
 13262  001922  0E04               	movlw	high _ReceivedString
 13263  001924  0100               	movlb	0	; () banked
 13264  001926  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 13265  001928  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 13266  00192C  0100               	movlb	0	; () banked
 13267  00192E  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 13268  001930  ECE6  F050         	call	_cleanBuffer	;wreg free
 13269                           
 13270                           ;Bluetooth.c: 967: ReceivedStringPos = 0;
 13271  001934  0E00               	movlw	0
 13272  001936  0103               	movlb	3	; () banked
 13273  001938  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 13274                           
 13275                           ; BSR set to: 3
 13276                           ;Bluetooth.c: 968: NewReceivedString = 0;
 13277  00193A  0E00               	movlw	0
 13278  00193C  0103               	movlb	3	; () banked
 13279  00193E  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
 13280                           
 13281                           ; BSR set to: 3
 13282                           ;Bluetooth.c: 969: UARTstring_CONST("Enter Y to reset or N to cancel");
 13283  001940  0ECF               	movlw	low STR_81
 13284  001942  0100               	movlb	0	; () banked
 13285  001944  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13286  001946  0EF8               	movlw	high STR_81
 13287  001948  0100               	movlb	0	; () banked
 13288  00194A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13289  00194C  EC42  F053         	call	_UARTstring_CONST	;wreg free
 13290                           
 13291                           ;Bluetooth.c: 970: UARTstring_CONST(CRLN);
 13292  001950  0E51               	movlw	low _CRLN
 13293  001952  0100               	movlb	0	; () banked
 13294  001954  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13295  001956  0EF0               	movlw	high _CRLN
 13296  001958  0100               	movlb	0	; () banked
 13297  00195A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13298  00195C  EC42  F053         	call	_UARTstring_CONST	;wreg free
 13299                           
 13300                           ;Bluetooth.c: 971: UARTchar_CONST('>');
 13301  001960  0E3E               	movlw	62
 13302  001962  EC1E  F054         	call	_UARTchar_CONST
 13303                           
 13304                           ;Bluetooth.c: 972: timeout = 0;
 13305  001966  0E00               	movlw	0
 13306  001968  0102               	movlb	2	; () banked
 13307  00196A  6F8C               	movwf	UseBluetooth@timeout& (0+255),b
 13308                           
 13309                           ; BSR set to: 2
 13310                           ;Bluetooth.c: 973: ClearUSART();
 13311  00196C  ECC2  F054         	call	_ClearUSART	;wreg free
 13312                           
 13313                           ;Bluetooth.c: 974: PIR1bits.RCIF = 0;
 13314  001970  9A9E               	bcf	3998,5,c	;volatile
 13315                           
 13316                           ;Bluetooth.c: 975: PIE1bits.RCIE = 1;
 13317  001972  8A9D               	bsf	3997,5,c	;volatile
 13318                           
 13319                           ;Bluetooth.c: 976: while(!NewReceivedString)
 13320  001974  D023               	goto	l13022
 13321  001976                     l13012:
 13322                           
 13323                           ;Bluetooth.c: 977: {
 13324                           ;Bluetooth.c: 978: delayUS(300000);
 13325  001976  0EE0               	movlw	224
 13326  001978  0100               	movlb	0	; () banked
 13327  00197A  6F60               	movwf	delayUS@US& (0+255),b
 13328  00197C  0E93               	movlw	147
 13329  00197E  6F61               	movwf	(delayUS@US+1)& (0+255),b
 13330  001980  0E04               	movlw	4
 13331  001982  6F62               	movwf	(delayUS@US+2)& (0+255),b
 13332  001984  0E00               	movlw	0
 13333  001986  6F63               	movwf	(delayUS@US+3)& (0+255),b
 13334  001988  EC3F  F051         	call	_delayUS	;wreg free
 13335                           
 13336                           ;Bluetooth.c: 979: timeout++;
 13337  00198C  0102               	movlb	2	; () banked
 13338  00198E  2B8C               	incf	UseBluetooth@timeout& (0+255),f,b
 13339                           
 13340                           ; BSR set to: 2
 13341                           ;Bluetooth.c: 980: if(timeout > 25)
 13342  001990  0E19               	movlw	25
 13343  001992  0102               	movlb	2	; () banked
 13344  001994  658C               	cpfsgt	UseBluetooth@timeout& (0+255),b
 13345  001996  D012               	goto	l13022
 13346                           
 13347                           ; BSR set to: 2
 13348                           ;Bluetooth.c: 981: {
 13349                           ;Bluetooth.c: 982: UARTstring_CONST(CRLN);
 13350  001998  0E51               	movlw	low _CRLN
 13351  00199A  0100               	movlb	0	; () banked
 13352  00199C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13353  00199E  0EF0               	movlw	high _CRLN
 13354  0019A0  0100               	movlb	0	; () banked
 13355  0019A2  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13356  0019A4  EC42  F053         	call	_UARTstring_CONST	;wreg free
 13357                           
 13358                           ;Bluetooth.c: 983: UARTstringCRLN_CONST("Device resumes without reset");
 13359  0019A8  0E07               	movlw	low STR_82
 13360  0019AA  0100               	movlb	0	; () banked
 13361  0019AC  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13362  0019AE  0EFA               	movlw	high STR_82
 13363  0019B0  0100               	movlb	0	; () banked
 13364  0019B2  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13365  0019B4  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 13366                           
 13367                           ;Bluetooth.c: 984: return 0;
 13368                           ;	Return value of _UseBluetooth is never used
 13369  0019B8  0012               	return	
 13370  0019BA  D000               	goto	l13022
 13371  0019BC                     l13022:
 13372  0019BC  0103               	movlb	3	; () banked
 13373  0019BE  51EA               	movf	_NewReceivedString& (0+255),w,b	;volatile
 13374  0019C0  B4D8               	btfsc	status,2,c
 13375  0019C2  D7D9               	goto	l13012
 13376                           
 13377                           ; BSR set to: 3
 13378                           ;Bluetooth.c: 985: }
 13379                           ;Bluetooth.c: 986: }
 13380                           ;Bluetooth.c: 987: PIE1bits.RCIE = 0;
 13381  0019C4  9A9D               	bcf	3997,5,c	;volatile
 13382                           
 13383                           ; BSR set to: 3
 13384                           ;Bluetooth.c: 988: if(ReceivedString[0] == 'Y' || ReceivedString[0] == 'y' && ReceivedSt
      +                          ring[1] == 0)
 13385  0019C6  0E59               	movlw	89
 13386  0019C8  0104               	movlb	4	; () banked
 13387  0019CA  1978               	xorwf	_ReceivedString& (0+255),w,b	;volatile
 13388  0019CC  B4D8               	btfsc	status,2,c
 13389  0019CE  D009               	goto	l13030
 13390                           
 13391                           ; BSR set to: 4
 13392  0019D0  0E79               	movlw	121
 13393  0019D2  0104               	movlb	4	; () banked
 13394  0019D4  1978               	xorwf	_ReceivedString& (0+255),w,b	;volatile
 13395  0019D6  A4D8               	btfss	status,2,c
 13396  0019D8  D014               	goto	l13040
 13397                           
 13398                           ; BSR set to: 4
 13399  0019DA  0104               	movlb	4	; () banked
 13400  0019DC  5179               	movf	(_ReceivedString+1)& (0+255),w,b	;volatile
 13401  0019DE  A4D8               	btfss	status,2,c
 13402  0019E0  D010               	goto	l13040
 13403  0019E2                     l13030:
 13404                           
 13405                           ; BSR set to: 4
 13406                           ;Bluetooth.c: 989: {
 13407                           ;Bluetooth.c: 991: UARTstringCRLN_CONST("System will reset");
 13408  0019E2  0EDC               	movlw	low STR_83
 13409  0019E4  0100               	movlb	0	; () banked
 13410  0019E6  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13411  0019E8  0EFD               	movlw	high STR_83
 13412  0019EA  0100               	movlb	0	; () banked
 13413  0019EC  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13414  0019EE  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 13415                           
 13416                           ;Bluetooth.c: 992: Global1.EEPROMinitFlag = 0;
 13417  0019F2  0E00               	movlw	0
 13418  0019F4  0102               	movlb	2	; () banked
 13419  0019F6  6FF2               	movwf	(_Global1+29)& (0+255),b
 13420                           
 13421                           ; BSR set to: 2
 13422                           ;Bluetooth.c: 993: SyncGlobalToEEPROM();
 13423  0019F8  EC69  F04D         	call	_SyncGlobalToEEPROM	;wreg free
 13424  0019FC  00FF               	reset		;# 
 13425                           
 13426                           ;Bluetooth.c: 995: return 1;
 13427                           ;	Return value of _UseBluetooth is never used
 13428  0019FE  0012               	return	
 13429                           
 13430                           ;Bluetooth.c: 996: }
 13431  001A00  D011               	goto	l13042
 13432  001A02                     l13040:
 13433                           
 13434                           ;Bluetooth.c: 997: else
 13435                           ;Bluetooth.c: 998: {
 13436                           ;Bluetooth.c: 999: UARTstring_CONST(CRLN);
 13437  001A02  0E51               	movlw	low _CRLN
 13438  001A04  0100               	movlb	0	; () banked
 13439  001A06  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13440  001A08  0EF0               	movlw	high _CRLN
 13441  001A0A  0100               	movlb	0	; () banked
 13442  001A0C  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13443  001A0E  EC42  F053         	call	_UARTstring_CONST	;wreg free
 13444                           
 13445                           ;Bluetooth.c: 1000: UARTstringCRLN_CONST("Device resumes without reset");
 13446  001A12  0E07               	movlw	low STR_82
 13447  001A14  0100               	movlb	0	; () banked
 13448  001A16  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13449  001A18  0EFA               	movlw	high STR_82
 13450  001A1A  0100               	movlb	0	; () banked
 13451  001A1C  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13452  001A1E  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 13453  001A22  D000               	goto	l13042
 13454  001A24                     l13042:
 13455                           
 13456                           ;Bluetooth.c: 1001: }
 13457                           ;Bluetooth.c: 1002: cleanBuffer(ReceivedString, ReceivedStringPos);
 13458  001A24  0E78               	movlw	low _ReceivedString
 13459  001A26  0100               	movlb	0	; () banked
 13460  001A28  6F60               	movwf	cleanBuffer@data& (0+255),b
 13461  001A2A  0E04               	movlw	high _ReceivedString
 13462  001A2C  0100               	movlb	0	; () banked
 13463  001A2E  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 13464  001A30  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 13465  001A34  0100               	movlb	0	; () banked
 13466  001A36  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 13467  001A38  ECE6  F050         	call	_cleanBuffer	;wreg free
 13468                           
 13469                           ;Bluetooth.c: 1003: ReceivedStringPos = 0;
 13470  001A3C  0E00               	movlw	0
 13471  001A3E  0103               	movlb	3	; () banked
 13472  001A40  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 13473                           
 13474                           ; BSR set to: 3
 13475                           ;Bluetooth.c: 1004: NewReceivedString = 0;
 13476  001A42  0E00               	movlw	0
 13477  001A44  0103               	movlb	3	; () banked
 13478  001A46  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
 13479                           
 13480                           ; BSR set to: 3
 13481                           ;Bluetooth.c: 1006: }
 13482                           
 13483                           ; BSR set to: 3
 13484                           ;Bluetooth.c: 1005: return 0;
 13485                           ;	Return value of _UseBluetooth is never used
 13486  001A48  0012               	return	
 13487  001A4A                     l13052:
 13488                           
 13489                           ;Bluetooth.c: 1007: else if(StringMatchCaseInsensitive(String,"Change SN"))
 13490  001A4A  C0F2  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 13491  001A4E  C0F3  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 13492  001A52  0E58               	movlw	low STR_85
 13493  001A54  0100               	movlb	0	; () banked
 13494  001A56  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 13495  001A58  0EFF               	movlw	high STR_85
 13496  001A5A  0100               	movlb	0	; () banked
 13497  001A5C  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 13498  001A5E  EC08  F04E         	call	_StringMatchCaseInsensitive	;wreg free
 13499  001A62  0900               	iorlw	0
 13500  001A64  B4D8               	btfsc	status,2,c
 13501  001A66  D197               	goto	l13174
 13502                           
 13503                           ;Bluetooth.c: 1008: {
 13504                           ;Bluetooth.c: 1009: cleanBuffer(ReceivedString, ReceivedStringPos);
 13505  001A68  0E78               	movlw	low _ReceivedString
 13506  001A6A  0100               	movlb	0	; () banked
 13507  001A6C  6F60               	movwf	cleanBuffer@data& (0+255),b
 13508  001A6E  0E04               	movlw	high _ReceivedString
 13509  001A70  0100               	movlb	0	; () banked
 13510  001A72  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 13511  001A74  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 13512  001A78  0100               	movlb	0	; () banked
 13513  001A7A  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 13514  001A7C  ECE6  F050         	call	_cleanBuffer	;wreg free
 13515                           
 13516                           ;Bluetooth.c: 1010: ReceivedStringPos = 0;
 13517  001A80  0E00               	movlw	0
 13518  001A82  0103               	movlb	3	; () banked
 13519  001A84  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 13520                           
 13521                           ; BSR set to: 3
 13522                           ;Bluetooth.c: 1011: NewReceivedString = 0;
 13523  001A86  0E00               	movlw	0
 13524  001A88  0103               	movlb	3	; () banked
 13525  001A8A  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
 13526                           
 13527                           ; BSR set to: 3
 13528                           ;Bluetooth.c: 1012: UARTstring_CONST("Enter special 'Code' to change serial number or N 
      +                          to cancel");
 13529  001A8C  0ED3               	movlw	low STR_86
 13530  001A8E  0100               	movlb	0	; () banked
 13531  001A90  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13532  001A92  0EF0               	movlw	high STR_86
 13533  001A94  0100               	movlb	0	; () banked
 13534  001A96  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13535  001A98  EC42  F053         	call	_UARTstring_CONST	;wreg free
 13536                           
 13537                           ;Bluetooth.c: 1013: UARTstring_CONST(CRLN);
 13538  001A9C  0E51               	movlw	low _CRLN
 13539  001A9E  0100               	movlb	0	; () banked
 13540  001AA0  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13541  001AA2  0EF0               	movlw	high _CRLN
 13542  001AA4  0100               	movlb	0	; () banked
 13543  001AA6  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13544  001AA8  EC42  F053         	call	_UARTstring_CONST	;wreg free
 13545                           
 13546                           ;Bluetooth.c: 1014: UARTchar('>');
 13547  001AAC  0E3E               	movlw	62
 13548  001AAE  EC3D  F054         	call	_UARTchar
 13549                           
 13550                           ;Bluetooth.c: 1015: timeout = 0;
 13551  001AB2  0E00               	movlw	0
 13552  001AB4  0102               	movlb	2	; () banked
 13553  001AB6  6F8C               	movwf	UseBluetooth@timeout& (0+255),b
 13554                           
 13555                           ; BSR set to: 2
 13556                           ;Bluetooth.c: 1016: ClearUSART();
 13557  001AB8  ECC2  F054         	call	_ClearUSART	;wreg free
 13558                           
 13559                           ;Bluetooth.c: 1017: PIR1bits.RCIF = 0;
 13560  001ABC  9A9E               	bcf	3998,5,c	;volatile
 13561                           
 13562                           ;Bluetooth.c: 1018: PIE1bits.RCIE = 1;
 13563  001ABE  8A9D               	bsf	3997,5,c	;volatile
 13564                           
 13565                           ;Bluetooth.c: 1019: while(!NewReceivedString)
 13566  001AC0  D023               	goto	l13084
 13567  001AC2                     l13074:
 13568                           
 13569                           ;Bluetooth.c: 1020: {
 13570                           ;Bluetooth.c: 1021: delayUS(300000);
 13571  001AC2  0EE0               	movlw	224
 13572  001AC4  0100               	movlb	0	; () banked
 13573  001AC6  6F60               	movwf	delayUS@US& (0+255),b
 13574  001AC8  0E93               	movlw	147
 13575  001ACA  6F61               	movwf	(delayUS@US+1)& (0+255),b
 13576  001ACC  0E04               	movlw	4
 13577  001ACE  6F62               	movwf	(delayUS@US+2)& (0+255),b
 13578  001AD0  0E00               	movlw	0
 13579  001AD2  6F63               	movwf	(delayUS@US+3)& (0+255),b
 13580  001AD4  EC3F  F051         	call	_delayUS	;wreg free
 13581                           
 13582                           ;Bluetooth.c: 1022: timeout++;
 13583  001AD8  0102               	movlb	2	; () banked
 13584  001ADA  2B8C               	incf	UseBluetooth@timeout& (0+255),f,b
 13585                           
 13586                           ; BSR set to: 2
 13587                           ;Bluetooth.c: 1023: if(timeout > 25)
 13588  001ADC  0E19               	movlw	25
 13589  001ADE  0102               	movlb	2	; () banked
 13590  001AE0  658C               	cpfsgt	UseBluetooth@timeout& (0+255),b
 13591  001AE2  D012               	goto	l13084
 13592                           
 13593                           ; BSR set to: 2
 13594                           ;Bluetooth.c: 1024: {
 13595                           ;Bluetooth.c: 1025: UARTstring_CONST(CRLN);
 13596  001AE4  0E51               	movlw	low _CRLN
 13597  001AE6  0100               	movlb	0	; () banked
 13598  001AE8  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13599  001AEA  0EF0               	movlw	high _CRLN
 13600  001AEC  0100               	movlb	0	; () banked
 13601  001AEE  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13602  001AF0  EC42  F053         	call	_UARTstring_CONST	;wreg free
 13603                           
 13604                           ;Bluetooth.c: 1026: UARTstringCRLN_CONST("Device resumes without changing serial number"
      +                          );
 13605  001AF4  0E44               	movlw	low STR_87
 13606  001AF6  0100               	movlb	0	; () banked
 13607  001AF8  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13608  001AFA  0EF5               	movlw	high STR_87
 13609  001AFC  0100               	movlb	0	; () banked
 13610  001AFE  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13611  001B00  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 13612                           
 13613                           ;Bluetooth.c: 1027: return 0;
 13614                           ;	Return value of _UseBluetooth is never used
 13615  001B04  0012               	return	
 13616  001B06  D000               	goto	l13084
 13617  001B08                     l13084:
 13618  001B08  0103               	movlb	3	; () banked
 13619  001B0A  51EA               	movf	_NewReceivedString& (0+255),w,b	;volatile
 13620  001B0C  B4D8               	btfsc	status,2,c
 13621  001B0E  D7D9               	goto	l13074
 13622                           
 13623                           ; BSR set to: 3
 13624                           ;Bluetooth.c: 1028: }
 13625                           ;Bluetooth.c: 1029: }
 13626                           ;Bluetooth.c: 1030: PIE1bits.RCIE = 0;
 13627  001B10  9A9D               	bcf	3997,5,c	;volatile
 13628                           
 13629                           ; BSR set to: 3
 13630                           ;Bluetooth.c: 1031: if(StringMatch(ReceivedString,"Code"))
 13631  001B12  0E78               	movlw	low _ReceivedString
 13632  001B14  0100               	movlb	0	; () banked
 13633  001B16  6F60               	movwf	StringMatch@This& (0+255),b
 13634  001B18  0E04               	movlw	high _ReceivedString
 13635  001B1A  0100               	movlb	0	; () banked
 13636  001B1C  6F61               	movwf	(StringMatch@This+1)& (0+255),b
 13637  001B1E  0ED6               	movlw	low STR_88
 13638  001B20  0100               	movlb	0	; () banked
 13639  001B22  6F62               	movwf	StringMatch@That& (0+255),b
 13640  001B24  0EFF               	movlw	high STR_88
 13641  001B26  0100               	movlb	0	; () banked
 13642  001B28  6F63               	movwf	(StringMatch@That+1)& (0+255),b
 13643  001B2A  ECDF  F04F         	call	_StringMatch	;wreg free
 13644  001B2E  0900               	iorlw	0
 13645  001B30  B4D8               	btfsc	status,2,c
 13646  001B32  D120               	goto	l13168
 13647                           
 13648                           ;Bluetooth.c: 1032: {
 13649                           ;Bluetooth.c: 1033: cleanBuffer(ReceivedString, ReceivedStringPos);
 13650  001B34  0E78               	movlw	low _ReceivedString
 13651  001B36  0100               	movlb	0	; () banked
 13652  001B38  6F60               	movwf	cleanBuffer@data& (0+255),b
 13653  001B3A  0E04               	movlw	high _ReceivedString
 13654  001B3C  0100               	movlb	0	; () banked
 13655  001B3E  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 13656  001B40  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 13657  001B44  0100               	movlb	0	; () banked
 13658  001B46  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 13659  001B48  ECE6  F050         	call	_cleanBuffer	;wreg free
 13660                           
 13661                           ;Bluetooth.c: 1034: ReceivedStringPos = 0;
 13662  001B4C  0E00               	movlw	0
 13663  001B4E  0103               	movlb	3	; () banked
 13664  001B50  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 13665                           
 13666                           ; BSR set to: 3
 13667                           ;Bluetooth.c: 1035: NewReceivedString = 0;
 13668  001B52  0E00               	movlw	0
 13669  001B54  0103               	movlb	3	; () banked
 13670  001B56  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
 13671                           
 13672                           ; BSR set to: 3
 13673                           ;Bluetooth.c: 1036: UARTstring_CONST("Enter new Serial Number");
 13674  001B58  0E69               	movlw	low STR_89
 13675  001B5A  0100               	movlb	0	; () banked
 13676  001B5C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13677  001B5E  0EFB               	movlw	high STR_89
 13678  001B60  0100               	movlb	0	; () banked
 13679  001B62  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13680  001B64  EC42  F053         	call	_UARTstring_CONST	;wreg free
 13681                           
 13682                           ;Bluetooth.c: 1037: UARTstring_CONST(CRLN);
 13683  001B68  0E51               	movlw	low _CRLN
 13684  001B6A  0100               	movlb	0	; () banked
 13685  001B6C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13686  001B6E  0EF0               	movlw	high _CRLN
 13687  001B70  0100               	movlb	0	; () banked
 13688  001B72  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13689  001B74  EC42  F053         	call	_UARTstring_CONST	;wreg free
 13690                           
 13691                           ;Bluetooth.c: 1038: UARTchar_CONST('>');
 13692  001B78  0E3E               	movlw	62
 13693  001B7A  EC1E  F054         	call	_UARTchar_CONST
 13694                           
 13695                           ;Bluetooth.c: 1039: timeout = 0;
 13696  001B7E  0E00               	movlw	0
 13697  001B80  0102               	movlb	2	; () banked
 13698  001B82  6F8C               	movwf	UseBluetooth@timeout& (0+255),b
 13699                           
 13700                           ; BSR set to: 2
 13701                           ;Bluetooth.c: 1040: ClearUSART();
 13702  001B84  ECC2  F054         	call	_ClearUSART	;wreg free
 13703                           
 13704                           ;Bluetooth.c: 1041: PIR1bits.RCIF = 0;
 13705  001B88  9A9E               	bcf	3998,5,c	;volatile
 13706                           
 13707                           ;Bluetooth.c: 1042: PIE1bits.RCIE = 1;
 13708  001B8A  8A9D               	bsf	3997,5,c	;volatile
 13709                           
 13710                           ;Bluetooth.c: 1043: while(!NewReceivedString)
 13711  001B8C  D02F               	goto	l13122
 13712  001B8E                     l13108:
 13713                           
 13714                           ;Bluetooth.c: 1044: {
 13715                           ;Bluetooth.c: 1045: delayUS(300000);
 13716  001B8E  0EE0               	movlw	224
 13717  001B90  0100               	movlb	0	; () banked
 13718  001B92  6F60               	movwf	delayUS@US& (0+255),b
 13719  001B94  0E93               	movlw	147
 13720  001B96  6F61               	movwf	(delayUS@US+1)& (0+255),b
 13721  001B98  0E04               	movlw	4
 13722  001B9A  6F62               	movwf	(delayUS@US+2)& (0+255),b
 13723  001B9C  0E00               	movlw	0
 13724  001B9E  6F63               	movwf	(delayUS@US+3)& (0+255),b
 13725  001BA0  EC3F  F051         	call	_delayUS	;wreg free
 13726                           
 13727                           ;Bluetooth.c: 1046: timeout++;
 13728  001BA4  0102               	movlb	2	; () banked
 13729  001BA6  2B8C               	incf	UseBluetooth@timeout& (0+255),f,b
 13730                           
 13731                           ; BSR set to: 2
 13732                           ;Bluetooth.c: 1047: if(ReceivedStringPos != ReceivedStringPosOLD)
 13733  001BA8  0102               	movlb	2	; () banked
 13734  001BAA  517B               	movf	UseBluetooth@ReceivedStringPosOLD& (0+255),w,b
 13735  001BAC  0103               	movlb	3	; () banked
 13736  001BAE  19EB               	xorwf	_ReceivedStringPos& (0+255),w,b	;volatile
 13737  001BB0  B4D8               	btfsc	status,2,c
 13738  001BB2  D004               	goto	l13116
 13739                           
 13740                           ; BSR set to: 3
 13741                           ;Bluetooth.c: 1048: {
 13742                           ;Bluetooth.c: 1049: timeout = 0;
 13743  001BB4  0E00               	movlw	0
 13744  001BB6  0102               	movlb	2	; () banked
 13745  001BB8  6F8C               	movwf	UseBluetooth@timeout& (0+255),b
 13746  001BBA  D000               	goto	l13116
 13747  001BBC                     l13116:
 13748                           
 13749                           ;Bluetooth.c: 1050: }
 13750                           ;Bluetooth.c: 1051: if(timeout > 25)
 13751  001BBC  0E19               	movlw	25
 13752  001BBE  0102               	movlb	2	; () banked
 13753  001BC0  658C               	cpfsgt	UseBluetooth@timeout& (0+255),b
 13754  001BC2  D011               	goto	l2192
 13755                           
 13756                           ; BSR set to: 2
 13757                           ;Bluetooth.c: 1052: {
 13758                           ;Bluetooth.c: 1053: UARTstring_CONST(CRLN);
 13759  001BC4  0E51               	movlw	low _CRLN
 13760  001BC6  0100               	movlb	0	; () banked
 13761  001BC8  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13762  001BCA  0EF0               	movlw	high _CRLN
 13763  001BCC  0100               	movlb	0	; () banked
 13764  001BCE  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13765  001BD0  EC42  F053         	call	_UARTstring_CONST	;wreg free
 13766                           
 13767                           ;Bluetooth.c: 1054: UARTstringCRLN_CONST("Device resumes without changing serial number"
      +                          );
 13768  001BD4  0E44               	movlw	low STR_87
 13769  001BD6  0100               	movlb	0	; () banked
 13770  001BD8  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13771  001BDA  0EF5               	movlw	high STR_87
 13772  001BDC  0100               	movlb	0	; () banked
 13773  001BDE  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13774  001BE0  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 13775                           
 13776                           ;Bluetooth.c: 1055: return 0;
 13777                           ;	Return value of _UseBluetooth is never used
 13778  001BE4  0012               	return	
 13779  001BE6                     l2192:
 13780                           
 13781                           ; BSR set to: 2
 13782                           ;Bluetooth.c: 1056: }
 13783                           ;Bluetooth.c: 1057: ReceivedStringPosOLD = ReceivedStringPos;
 13784  001BE6  C3EB  F27B         	movff	_ReceivedStringPos,UseBluetooth@ReceivedStringPosOLD	;volatile
 13785  001BEA  D000               	goto	l13122
 13786  001BEC                     l13122:
 13787  001BEC  0103               	movlb	3	; () banked
 13788  001BEE  51EA               	movf	_NewReceivedString& (0+255),w,b	;volatile
 13789  001BF0  B4D8               	btfsc	status,2,c
 13790  001BF2  D7CD               	goto	l13108
 13791                           
 13792                           ; BSR set to: 3
 13793                           ;Bluetooth.c: 1058: }
 13794                           ;Bluetooth.c: 1059: if(StringAddEqual(ReceivedString))
 13795                           
 13796                           ; BSR set to: 3
 13797  001BF4  0E78               	movlw	low _ReceivedString
 13798  001BF6  0100               	movlb	0	; () banked
 13799  001BF8  6F6F               	movwf	StringAddEqual@Input& (0+255),b
 13800  001BFA  0E04               	movlw	high _ReceivedString
 13801  001BFC  0100               	movlb	0	; () banked
 13802  001BFE  6F70               	movwf	(StringAddEqual@Input+1)& (0+255),b
 13803  001C00  EC86  F039         	call	_StringAddEqual	;wreg free
 13804  001C04  0900               	iorlw	0
 13805  001C06  B4D8               	btfsc	status,2,c
 13806  001C08  D0A4               	goto	l13162
 13807                           
 13808                           ;Bluetooth.c: 1060: {
 13809                           ;Bluetooth.c: 1061: ReceivedStringPos++;
 13810  001C0A  0103               	movlb	3	; () banked
 13811  001C0C  2BEB               	incf	_ReceivedStringPos& (0+255),f,b	;volatile
 13812                           
 13813                           ; BSR set to: 3
 13814                           ;Bluetooth.c: 1062: if(!GetNumber(ReceivedString, 1, &SerialNumberTEMP))
 13815  001C0E  0E78               	movlw	low _ReceivedString
 13816  001C10  0100               	movlb	0	; () banked
 13817  001C12  6F6C               	movwf	GetNumber@This& (0+255),b
 13818  001C14  0E04               	movlw	high _ReceivedString
 13819  001C16  0100               	movlb	0	; () banked
 13820  001C18  6F6D               	movwf	(GetNumber@This+1)& (0+255),b
 13821  001C1A  0E01               	movlw	1
 13822  001C1C  0100               	movlb	0	; () banked
 13823  001C1E  6F6E               	movwf	GetNumber@CommaNumber& (0+255),b
 13824  001C20  0E80               	movlw	low UseBluetooth@SerialNumberTEMP
 13825  001C22  0100               	movlb	0	; () banked
 13826  001C24  6F6F               	movwf	GetNumber@result& (0+255),b
 13827  001C26  0E02               	movlw	high UseBluetooth@SerialNumberTEMP
 13828  001C28  0100               	movlb	0	; () banked
 13829  001C2A  6F70               	movwf	(GetNumber@result+1)& (0+255),b
 13830  001C2C  EC69  F02E         	call	_GetNumber	;wreg free
 13831  001C30  0900               	iorlw	0
 13832  001C32  A4D8               	btfss	status,2,c
 13833  001C34  D08E               	goto	l13162
 13834                           
 13835                           ;Bluetooth.c: 1063: {
 13836                           ;Bluetooth.c: 1064: if(SerialNumberTEMP > 0)
 13837  001C36  0102               	movlb	2	; () banked
 13838  001C38  BF83               	btfsc	(UseBluetooth@SerialNumberTEMP+3)& (0+255),7,b
 13839  001C3A  D08B               	goto	l13162
 13840  001C3C  0102               	movlb	2	; () banked
 13841  001C3E  5183               	movf	(UseBluetooth@SerialNumberTEMP+3)& (0+255),w,b
 13842  001C40  0102               	movlb	2	; () banked
 13843  001C42  1182               	iorwf	(UseBluetooth@SerialNumberTEMP+2)& (0+255),w,b
 13844  001C44  0102               	movlb	2	; () banked
 13845  001C46  1181               	iorwf	(UseBluetooth@SerialNumberTEMP+1)& (0+255),w,b
 13846  001C48  E104               	bnz	u15050
 13847  001C4A  0102               	movlb	2	; () banked
 13848  001C4C  0580               	decf	UseBluetooth@SerialNumberTEMP& (0+255),w,b
 13849  001C4E  A0D8               	btfss	status,0,c
 13850  001C50  D080               	goto	l13162
 13851  001C52                     u15050:
 13852                           
 13853                           ; BSR set to: 2
 13854                           ;Bluetooth.c: 1065: {
 13855                           ;Bluetooth.c: 1066: Global2.SerialNumber = (unsigned long) SerialNumberTEMP;
 13856  001C52  C280  F2D1         	movff	UseBluetooth@SerialNumberTEMP,_Global2+60
 13857  001C56  C281  F2D2         	movff	UseBluetooth@SerialNumberTEMP+1,_Global2+61
 13858  001C5A  C282  F2D3         	movff	UseBluetooth@SerialNumberTEMP+2,_Global2+62
 13859  001C5E  C283  F2D4         	movff	UseBluetooth@SerialNumberTEMP+3,_Global2+63
 13860                           
 13861                           ; BSR set to: 2
 13862                           ;Bluetooth.c: 1067: if(!SetEEPROM2(Global2,0x00000002))
 13863  001C62  EE22  F095         	lfsr	2,_Global2
 13864  001C66  EE00  F096         	lfsr	0,SetEEPROM2@Temp
 13865  001C6A  0E3F               	movlw	63
 13866  001C6C                     u15061:
 13867  001C6C  CFDB FFEB          	movff	plusw2,plusw0
 13868  001C70  06E8               	decf	wreg,f,c
 13869  001C72  E2FC               	bc	u15061
 13870  001C74  0E02               	movlw	2
 13871  001C76  0100               	movlb	0	; () banked
 13872  001C78  6FD6               	movwf	SetEEPROM2@burn& (0+255),b
 13873  001C7A  0E00               	movlw	0
 13874  001C7C  6FD7               	movwf	(SetEEPROM2@burn+1)& (0+255),b
 13875  001C7E  0E00               	movlw	0
 13876  001C80  6FD8               	movwf	(SetEEPROM2@burn+2)& (0+255),b
 13877  001C82  0E00               	movlw	0
 13878  001C84  6FD9               	movwf	(SetEEPROM2@burn+3)& (0+255),b
 13879  001C86  ECB5  F046         	call	_SetEEPROM2	;wreg free
 13880  001C8A  0100               	movlb	0	; () banked
 13881  001C8C  5196               	movf	?_SetEEPROM2& (0+255),w,b
 13882  001C8E  0100               	movlb	0	; () banked
 13883  001C90  1197               	iorwf	(?_SetEEPROM2+1)& (0+255),w,b
 13884  001C92  0100               	movlb	0	; () banked
 13885  001C94  1198               	iorwf	(?_SetEEPROM2+2)& (0+255),w,b
 13886  001C96  0100               	movlb	0	; () banked
 13887  001C98  1199               	iorwf	(?_SetEEPROM2+3)& (0+255),w,b
 13888  001C9A  A4D8               	btfss	status,2,c
 13889  001C9C  D048               	goto	l13158
 13890                           
 13891                           ; BSR set to: 0
 13892                           ;Bluetooth.c: 1068: {
 13893                           ;Bluetooth.c: 1069: SyncEEPROMToGlobal();
 13894  001C9E  EC86  F03A         	call	_SyncEEPROMToGlobal	;wreg free
 13895                           
 13896                           ;Bluetooth.c: 1070: UARTstringCRLN_CONST("Serial Number successfully burned to EEPROM");
 13897  001CA2  0ECA               	movlw	low STR_91
 13898  001CA4  0100               	movlb	0	; () banked
 13899  001CA6  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13900  001CA8  0EF5               	movlw	high STR_91
 13901  001CAA  0100               	movlb	0	; () banked
 13902  001CAC  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13903  001CAE  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 13904                           
 13905                           ;Bluetooth.c: 1071: sprintf(buf,"Serial Number is now: %lu ",Global2.SerialNumber);
 13906  001CB2  0E0C               	movlw	low UseBluetooth@buf
 13907  001CB4  0100               	movlb	0	; () banked
 13908  001CB6  6FAE               	movwf	sprintf@sp& (0+255),b
 13909  001CB8  0E02               	movlw	high UseBluetooth@buf
 13910  001CBA  0100               	movlb	0	; () banked
 13911  001CBC  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 13912  001CBE  0ECF               	movlw	low STR_92
 13913  001CC0  0100               	movlb	0	; () banked
 13914  001CC2  6FB0               	movwf	sprintf@f& (0+255),b
 13915  001CC4  0EFA               	movlw	high STR_92
 13916  001CC6  0100               	movlb	0	; () banked
 13917  001CC8  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 13918  001CCA  C2D1  F0B2         	movff	_Global2+60,?_sprintf+4
 13919  001CCE  C2D2  F0B3         	movff	_Global2+61,?_sprintf+5
 13920  001CD2  C2D3  F0B4         	movff	_Global2+62,?_sprintf+6
 13921  001CD6  C2D4  F0B5         	movff	_Global2+63,?_sprintf+7
 13922  001CDA  EC27  F014         	call	_sprintf	;wreg free
 13923                           
 13924                           ;Bluetooth.c: 1072: UARTstringCRLN(buf);
 13925  001CDE  0E0C               	movlw	low UseBluetooth@buf
 13926  001CE0  0100               	movlb	0	; () banked
 13927  001CE2  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 13928  001CE4  0E02               	movlw	high UseBluetooth@buf
 13929  001CE6  0100               	movlb	0	; () banked
 13930  001CE8  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 13931  001CEA  ECA3  F052         	call	_UARTstringCRLN	;wreg free
 13932                           
 13933                           ;Bluetooth.c: 1073: UARTstring_CONST(CRLN);
 13934  001CEE  0E51               	movlw	low _CRLN
 13935  001CF0  0100               	movlb	0	; () banked
 13936  001CF2  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13937  001CF4  0EF0               	movlw	high _CRLN
 13938  001CF6  0100               	movlb	0	; () banked
 13939  001CF8  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13940  001CFA  EC42  F053         	call	_UARTstring_CONST	;wreg free
 13941                           
 13942                           ;Bluetooth.c: 1075: UARTstringCRLN_CONST("System will reset");
 13943  001CFE  0EDC               	movlw	low STR_83
 13944  001D00  0100               	movlb	0	; () banked
 13945  001D02  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13946  001D04  0EFD               	movlw	high STR_83
 13947  001D06  0100               	movlb	0	; () banked
 13948  001D08  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13949  001D0A  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 13950                           
 13951                           ;Bluetooth.c: 1076: Global1.EEPROMinitFlag = 0;
 13952  001D0E  0E00               	movlw	0
 13953  001D10  0102               	movlb	2	; () banked
 13954  001D12  6FF2               	movwf	(_Global1+29)& (0+255),b
 13955                           
 13956                           ; BSR set to: 2
 13957                           ;Bluetooth.c: 1077: SyncGlobalToEEPROM();
 13958  001D14  EC69  F04D         	call	_SyncGlobalToEEPROM	;wreg free
 13959                           
 13960                           ;Bluetooth.c: 1078: UARTstring_CONST(CRLN);
 13961  001D18  0E51               	movlw	low _CRLN
 13962  001D1A  0100               	movlb	0	; () banked
 13963  001D1C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13964  001D1E  0EF0               	movlw	high _CRLN
 13965  001D20  0100               	movlb	0	; () banked
 13966  001D22  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13967  001D24  EC42  F053         	call	_UARTstring_CONST	;wreg free
 13968  001D28  00FF               	reset		;# 
 13969                           
 13970                           ;Bluetooth.c: 1080: return 1;
 13971                           ;	Return value of _UseBluetooth is never used
 13972  001D2A  0012               	return	
 13973                           
 13974                           ;Bluetooth.c: 1081: }
 13975  001D2C  D012               	goto	l13162
 13976  001D2E                     l13158:
 13977                           
 13978                           ;Bluetooth.c: 1082: else
 13979                           ;Bluetooth.c: 1083: {
 13980                           ;Bluetooth.c: 1084: UARTstringCRLN_CONST("Serial Number could not be burned to EEPROM");
 13981  001D2E  0E9E               	movlw	low STR_94
 13982  001D30  0100               	movlb	0	; () banked
 13983  001D32  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13984  001D34  0EF5               	movlw	high STR_94
 13985  001D36  0100               	movlb	0	; () banked
 13986  001D38  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13987  001D3A  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 13988                           
 13989                           ;Bluetooth.c: 1085: UARTstring_CONST(CRLN);
 13990  001D3E  0E51               	movlw	low _CRLN
 13991  001D40  0100               	movlb	0	; () banked
 13992  001D42  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13993  001D44  0EF0               	movlw	high _CRLN
 13994  001D46  0100               	movlb	0	; () banked
 13995  001D48  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13996  001D4A  EC42  F053         	call	_UARTstring_CONST	;wreg free
 13997                           
 13998                           ;Bluetooth.c: 1086: return 0;
 13999                           ;	Return value of _UseBluetooth is never used
 14000  001D4E  0012               	return	
 14001  001D50  D000               	goto	l13162
 14002  001D52                     l13162:
 14003                           
 14004                           ;Bluetooth.c: 1087: }
 14005                           ;Bluetooth.c: 1089: }
 14006                           ;Bluetooth.c: 1090: }
 14007                           ;Bluetooth.c: 1091: }
 14008                           ;Bluetooth.c: 1092: UARTstringCRLN_CONST("Serial Number entered incorrectly");
 14009  001D52  0EEB               	movlw	low STR_95
 14010  001D54  0100               	movlb	0	; () banked
 14011  001D56  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14012  001D58  0EF7               	movlw	high STR_95
 14013  001D5A  0100               	movlb	0	; () banked
 14014  001D5C  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14015  001D5E  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 14016                           
 14017                           ;Bluetooth.c: 1093: UARTstring_CONST(CRLN);
 14018  001D62  0E51               	movlw	low _CRLN
 14019  001D64  0100               	movlb	0	; () banked
 14020  001D66  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14021  001D68  0EF0               	movlw	high _CRLN
 14022  001D6A  0100               	movlb	0	; () banked
 14023  001D6C  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14024  001D6E  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14025                           
 14026                           ;Bluetooth.c: 1095: }
 14027                           
 14028                           ;Bluetooth.c: 1094: return 0;
 14029                           ;	Return value of _UseBluetooth is never used
 14030  001D72  0012               	return	
 14031  001D74                     l13168:
 14032                           
 14033                           ;Bluetooth.c: 1096: else
 14034                           ;Bluetooth.c: 1097: {
 14035                           ;Bluetooth.c: 1098: UARTstringCRLN_CONST("The 'Code' was wrong!!!");
 14036  001D74  0E51               	movlw	low STR_96
 14037  001D76  0100               	movlb	0	; () banked
 14038  001D78  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14039  001D7A  0EFB               	movlw	high STR_96
 14040  001D7C  0100               	movlb	0	; () banked
 14041  001D7E  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14042  001D80  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 14043                           
 14044                           ;Bluetooth.c: 1099: UARTstring_CONST(CRLN);
 14045  001D84  0E51               	movlw	low _CRLN
 14046  001D86  0100               	movlb	0	; () banked
 14047  001D88  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14048  001D8A  0EF0               	movlw	high _CRLN
 14049  001D8C  0100               	movlb	0	; () banked
 14050  001D8E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14051  001D90  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14052                           
 14053                           ;Bluetooth.c: 1102: }
 14054                           
 14055                           ;Bluetooth.c: 1100: }
 14056                           ;Bluetooth.c: 1101: return 0;
 14057                           ;	Return value of _UseBluetooth is never used
 14058  001D94  0012               	return	
 14059  001D96                     l13174:
 14060                           
 14061                           ;Bluetooth.c: 1103: else if(StringMatchCaseInsensitive(String,"Change Bluetooth Name"))
 14062  001D96  C0F2  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 14063  001D9A  C0F3  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 14064  001D9E  0E39               	movlw	low STR_97
 14065  001DA0  0100               	movlb	0	; () banked
 14066  001DA2  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 14067  001DA4  0EFC               	movlw	high STR_97
 14068  001DA6  0100               	movlb	0	; () banked
 14069  001DA8  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 14070  001DAA  EC08  F04E         	call	_StringMatchCaseInsensitive	;wreg free
 14071  001DAE  0900               	iorlw	0
 14072  001DB0  B4D8               	btfsc	status,2,c
 14073  001DB2  D15F               	goto	l13290
 14074                           
 14075                           ;Bluetooth.c: 1104: {
 14076                           ;Bluetooth.c: 1105: cleanBuffer(ReceivedString, ReceivedStringPos);
 14077  001DB4  0E78               	movlw	low _ReceivedString
 14078  001DB6  0100               	movlb	0	; () banked
 14079  001DB8  6F60               	movwf	cleanBuffer@data& (0+255),b
 14080  001DBA  0E04               	movlw	high _ReceivedString
 14081  001DBC  0100               	movlb	0	; () banked
 14082  001DBE  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 14083  001DC0  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 14084  001DC4  0100               	movlb	0	; () banked
 14085  001DC6  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 14086  001DC8  ECE6  F050         	call	_cleanBuffer	;wreg free
 14087                           
 14088                           ;Bluetooth.c: 1106: ReceivedStringPos = 0;
 14089  001DCC  0E00               	movlw	0
 14090  001DCE  0103               	movlb	3	; () banked
 14091  001DD0  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 14092                           
 14093                           ; BSR set to: 3
 14094                           ;Bluetooth.c: 1107: NewReceivedString = 0;
 14095  001DD2  0E00               	movlw	0
 14096  001DD4  0103               	movlb	3	; () banked
 14097  001DD6  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
 14098                           
 14099                           ; BSR set to: 3
 14100                           ;Bluetooth.c: 1108: UARTstring_CONST(CRLN);
 14101  001DD8  0E51               	movlw	low _CRLN
 14102  001DDA  0100               	movlb	0	; () banked
 14103  001DDC  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14104  001DDE  0EF0               	movlw	high _CRLN
 14105  001DE0  0100               	movlb	0	; () banked
 14106  001DE2  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14107  001DE4  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14108                           
 14109                           ;Bluetooth.c: 1109: UARTstring_CONST("Enter Y to change Name or N to cancel");
 14110  001DE8  0EC9               	movlw	low STR_98
 14111  001DEA  0100               	movlb	0	; () banked
 14112  001DEC  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14113  001DEE  0EF6               	movlw	high STR_98
 14114  001DF0  0100               	movlb	0	; () banked
 14115  001DF2  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14116  001DF4  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14117                           
 14118                           ;Bluetooth.c: 1110: UARTstring_CONST(CRLN);
 14119  001DF8  0E51               	movlw	low _CRLN
 14120  001DFA  0100               	movlb	0	; () banked
 14121  001DFC  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14122  001DFE  0EF0               	movlw	high _CRLN
 14123  001E00  0100               	movlb	0	; () banked
 14124  001E02  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14125  001E04  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14126                           
 14127                           ;Bluetooth.c: 1111: UARTchar('>');
 14128  001E08  0E3E               	movlw	62
 14129  001E0A  EC3D  F054         	call	_UARTchar
 14130                           
 14131                           ;Bluetooth.c: 1112: timeout = 0;
 14132  001E0E  0E00               	movlw	0
 14133  001E10  0102               	movlb	2	; () banked
 14134  001E12  6F8C               	movwf	UseBluetooth@timeout& (0+255),b
 14135                           
 14136                           ; BSR set to: 2
 14137                           ;Bluetooth.c: 1113: ClearUSART();
 14138  001E14  ECC2  F054         	call	_ClearUSART	;wreg free
 14139                           
 14140                           ;Bluetooth.c: 1114: PIR1bits.RCIF = 0;
 14141  001E18  9A9E               	bcf	3998,5,c	;volatile
 14142                           
 14143                           ;Bluetooth.c: 1115: PIE1bits.RCIE = 1;
 14144  001E1A  8A9D               	bsf	3997,5,c	;volatile
 14145                           
 14146                           ;Bluetooth.c: 1116: while(!NewReceivedString)
 14147  001E1C  D023               	goto	l13208
 14148  001E1E                     l13198:
 14149                           
 14150                           ;Bluetooth.c: 1117: {
 14151                           ;Bluetooth.c: 1118: delayUS(300000);
 14152  001E1E  0EE0               	movlw	224
 14153  001E20  0100               	movlb	0	; () banked
 14154  001E22  6F60               	movwf	delayUS@US& (0+255),b
 14155  001E24  0E93               	movlw	147
 14156  001E26  6F61               	movwf	(delayUS@US+1)& (0+255),b
 14157  001E28  0E04               	movlw	4
 14158  001E2A  6F62               	movwf	(delayUS@US+2)& (0+255),b
 14159  001E2C  0E00               	movlw	0
 14160  001E2E  6F63               	movwf	(delayUS@US+3)& (0+255),b
 14161  001E30  EC3F  F051         	call	_delayUS	;wreg free
 14162                           
 14163                           ;Bluetooth.c: 1119: timeout++;
 14164  001E34  0102               	movlb	2	; () banked
 14165  001E36  2B8C               	incf	UseBluetooth@timeout& (0+255),f,b
 14166                           
 14167                           ; BSR set to: 2
 14168                           ;Bluetooth.c: 1120: if(timeout > 25)
 14169  001E38  0E19               	movlw	25
 14170  001E3A  0102               	movlb	2	; () banked
 14171  001E3C  658C               	cpfsgt	UseBluetooth@timeout& (0+255),b
 14172  001E3E  D012               	goto	l13208
 14173                           
 14174                           ; BSR set to: 2
 14175                           ;Bluetooth.c: 1121: {
 14176                           ;Bluetooth.c: 1122: UARTstring_CONST(CRLN);
 14177  001E40  0E51               	movlw	low _CRLN
 14178  001E42  0100               	movlb	0	; () banked
 14179  001E44  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14180  001E46  0EF0               	movlw	high _CRLN
 14181  001E48  0100               	movlb	0	; () banked
 14182  001E4A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14183  001E4C  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14184                           
 14185                           ;Bluetooth.c: 1123: UARTstringCRLN_CONST("Device resumes without changing Bluetooth Broa
      +                          dcast Name");
 14186  001E50  0E0F               	movlw	low STR_99
 14187  001E52  0100               	movlb	0	; () banked
 14188  001E54  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14189  001E56  0EF1               	movlw	high STR_99
 14190  001E58  0100               	movlb	0	; () banked
 14191  001E5A  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14192  001E5C  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 14193                           
 14194                           ;Bluetooth.c: 1124: return 0;
 14195                           ;	Return value of _UseBluetooth is never used
 14196  001E60  0012               	return	
 14197  001E62  D000               	goto	l13208
 14198  001E64                     l13208:
 14199  001E64  0103               	movlb	3	; () banked
 14200  001E66  51EA               	movf	_NewReceivedString& (0+255),w,b	;volatile
 14201  001E68  B4D8               	btfsc	status,2,c
 14202  001E6A  D7D9               	goto	l13198
 14203                           
 14204                           ; BSR set to: 3
 14205                           ;Bluetooth.c: 1125: }
 14206                           ;Bluetooth.c: 1126: }
 14207                           ;Bluetooth.c: 1127: PIE1bits.RCIE = 0;
 14208  001E6C  9A9D               	bcf	3997,5,c	;volatile
 14209                           
 14210                           ; BSR set to: 3
 14211                           ;Bluetooth.c: 1128: if(ReceivedString[0] == 'Y' || ReceivedString[0] == 'y' && ReceivedS
      +                          tring[1] == 0)
 14212  001E6E  0E59               	movlw	89
 14213  001E70  0104               	movlb	4	; () banked
 14214  001E72  1978               	xorwf	_ReceivedString& (0+255),w,b	;volatile
 14215  001E74  B4D8               	btfsc	status,2,c
 14216  001E76  D009               	goto	l13216
 14217                           
 14218                           ; BSR set to: 4
 14219  001E78  0E79               	movlw	121
 14220  001E7A  0104               	movlb	4	; () banked
 14221  001E7C  1978               	xorwf	_ReceivedString& (0+255),w,b	;volatile
 14222  001E7E  A4D8               	btfss	status,2,c
 14223  001E80  D0E7               	goto	l13284
 14224                           
 14225                           ; BSR set to: 4
 14226  001E82  0104               	movlb	4	; () banked
 14227  001E84  5179               	movf	(_ReceivedString+1)& (0+255),w,b	;volatile
 14228  001E86  A4D8               	btfss	status,2,c
 14229  001E88  D0E3               	goto	l13284
 14230  001E8A                     l13216:
 14231                           
 14232                           ; BSR set to: 4
 14233                           ;Bluetooth.c: 1129: {
 14234                           ;Bluetooth.c: 1130: cleanBuffer(ReceivedString, ReceivedStringPos);
 14235  001E8A  0E78               	movlw	low _ReceivedString
 14236  001E8C  0100               	movlb	0	; () banked
 14237  001E8E  6F60               	movwf	cleanBuffer@data& (0+255),b
 14238  001E90  0E04               	movlw	high _ReceivedString
 14239  001E92  0100               	movlb	0	; () banked
 14240  001E94  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 14241  001E96  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 14242  001E9A  0100               	movlb	0	; () banked
 14243  001E9C  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 14244  001E9E  ECE6  F050         	call	_cleanBuffer	;wreg free
 14245                           
 14246                           ;Bluetooth.c: 1131: ReceivedStringPos = 0;
 14247  001EA2  0E00               	movlw	0
 14248  001EA4  0103               	movlb	3	; () banked
 14249  001EA6  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 14250                           
 14251                           ; BSR set to: 3
 14252                           ;Bluetooth.c: 1132: NewReceivedString = 0;
 14253  001EA8  0E00               	movlw	0
 14254  001EAA  0103               	movlb	3	; () banked
 14255  001EAC  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
 14256                           
 14257                           ; BSR set to: 3
 14258                           ;Bluetooth.c: 1133: UARTstring_CONST(CRLN);
 14259  001EAE  0E51               	movlw	low _CRLN
 14260  001EB0  0100               	movlb	0	; () banked
 14261  001EB2  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14262  001EB4  0EF0               	movlw	high _CRLN
 14263  001EB6  0100               	movlb	0	; () banked
 14264  001EB8  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14265  001EBA  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14266                           
 14267                           ;Bluetooth.c: 1134: UARTstring_CONST("Enter new Bluetooth Broadcast Name");
 14268  001EBE  0EA5               	movlw	low STR_100
 14269  001EC0  0100               	movlb	0	; () banked
 14270  001EC2  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14271  001EC4  0EF7               	movlw	high STR_100
 14272  001EC6  0100               	movlb	0	; () banked
 14273  001EC8  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14274  001ECA  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14275                           
 14276                           ;Bluetooth.c: 1135: UARTstring_CONST(CRLN);
 14277  001ECE  0E51               	movlw	low _CRLN
 14278  001ED0  0100               	movlb	0	; () banked
 14279  001ED2  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14280  001ED4  0EF0               	movlw	high _CRLN
 14281  001ED6  0100               	movlb	0	; () banked
 14282  001ED8  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14283  001EDA  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14284                           
 14285                           ;Bluetooth.c: 1136: UARTchar_CONST('>');
 14286  001EDE  0E3E               	movlw	62
 14287  001EE0  EC1E  F054         	call	_UARTchar_CONST
 14288                           
 14289                           ;Bluetooth.c: 1137: timeout = 0;
 14290  001EE4  0E00               	movlw	0
 14291  001EE6  0102               	movlb	2	; () banked
 14292  001EE8  6F8C               	movwf	UseBluetooth@timeout& (0+255),b
 14293                           
 14294                           ; BSR set to: 2
 14295                           ;Bluetooth.c: 1138: ClearUSART();
 14296  001EEA  ECC2  F054         	call	_ClearUSART	;wreg free
 14297                           
 14298                           ;Bluetooth.c: 1139: PIR1bits.RCIF = 0;
 14299  001EEE  9A9E               	bcf	3998,5,c	;volatile
 14300                           
 14301                           ;Bluetooth.c: 1140: PIE1bits.RCIE = 1;
 14302  001EF0  8A9D               	bsf	3997,5,c	;volatile
 14303                           
 14304                           ;Bluetooth.c: 1141: while(!NewReceivedString)
 14305  001EF2  D027               	goto	l13252
 14306  001EF4                     l13238:
 14307                           
 14308                           ;Bluetooth.c: 1142: {
 14309                           ;Bluetooth.c: 1143: delayUS(300000);
 14310  001EF4  0EE0               	movlw	224
 14311  001EF6  0100               	movlb	0	; () banked
 14312  001EF8  6F60               	movwf	delayUS@US& (0+255),b
 14313  001EFA  0E93               	movlw	147
 14314  001EFC  6F61               	movwf	(delayUS@US+1)& (0+255),b
 14315  001EFE  0E04               	movlw	4
 14316  001F00  6F62               	movwf	(delayUS@US+2)& (0+255),b
 14317  001F02  0E00               	movlw	0
 14318  001F04  6F63               	movwf	(delayUS@US+3)& (0+255),b
 14319  001F06  EC3F  F051         	call	_delayUS	;wreg free
 14320                           
 14321                           ;Bluetooth.c: 1144: timeout++;
 14322  001F0A  0102               	movlb	2	; () banked
 14323  001F0C  2B8C               	incf	UseBluetooth@timeout& (0+255),f,b
 14324                           
 14325                           ; BSR set to: 2
 14326                           ;Bluetooth.c: 1145: if(ReceivedStringPos != ReceivedStringPosOLD)
 14327  001F0E  0102               	movlb	2	; () banked
 14328  001F10  517B               	movf	UseBluetooth@ReceivedStringPosOLD& (0+255),w,b
 14329  001F12  0103               	movlb	3	; () banked
 14330  001F14  19EB               	xorwf	_ReceivedStringPos& (0+255),w,b	;volatile
 14331  001F16  B4D8               	btfsc	status,2,c
 14332  001F18  D004               	goto	l13246
 14333                           
 14334                           ; BSR set to: 3
 14335                           ;Bluetooth.c: 1146: {
 14336                           ;Bluetooth.c: 1147: timeout = 0;
 14337  001F1A  0E00               	movlw	0
 14338  001F1C  0102               	movlb	2	; () banked
 14339  001F1E  6F8C               	movwf	UseBluetooth@timeout& (0+255),b
 14340  001F20  D000               	goto	l13246
 14341  001F22                     l13246:
 14342                           
 14343                           ;Bluetooth.c: 1148: }
 14344                           ;Bluetooth.c: 1149: if(timeout > 25)
 14345  001F22  0E19               	movlw	25
 14346  001F24  0102               	movlb	2	; () banked
 14347  001F26  658C               	cpfsgt	UseBluetooth@timeout& (0+255),b
 14348  001F28  D009               	goto	l2212
 14349                           
 14350                           ; BSR set to: 2
 14351                           ;Bluetooth.c: 1150: {
 14352                           ;Bluetooth.c: 1151: UARTstringCRLN_CONST("Device resumes without changing Bluetooth Broa
      +                          dcast Name");
 14353  001F2A  0E0F               	movlw	low STR_99
 14354  001F2C  0100               	movlb	0	; () banked
 14355  001F2E  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14356  001F30  0EF1               	movlw	high STR_99
 14357  001F32  0100               	movlb	0	; () banked
 14358  001F34  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14359  001F36  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 14360                           
 14361                           ;Bluetooth.c: 1152: return 0;
 14362                           ;	Return value of _UseBluetooth is never used
 14363  001F3A  0012               	return	
 14364  001F3C                     l2212:
 14365                           
 14366                           ; BSR set to: 2
 14367                           ;Bluetooth.c: 1153: }
 14368                           ;Bluetooth.c: 1154: ReceivedStringPosOLD = ReceivedStringPos;
 14369  001F3C  C3EB  F27B         	movff	_ReceivedStringPos,UseBluetooth@ReceivedStringPosOLD	;volatile
 14370  001F40  D000               	goto	l13252
 14371  001F42                     l13252:
 14372  001F42  0103               	movlb	3	; () banked
 14373  001F44  51EA               	movf	_NewReceivedString& (0+255),w,b	;volatile
 14374  001F46  B4D8               	btfsc	status,2,c
 14375  001F48  D7D5               	goto	l13238
 14376                           
 14377                           ; BSR set to: 3
 14378                           ;Bluetooth.c: 1155: }
 14379                           ;Bluetooth.c: 1156: PIE1bits.RCIE = 0;
 14380  001F4A  9A9D               	bcf	3997,5,c	;volatile
 14381                           
 14382                           ; BSR set to: 3
 14383                           ;Bluetooth.c: 1157: UARTstring_CONST(CRLN);
 14384  001F4C  0E51               	movlw	low _CRLN
 14385  001F4E  0100               	movlb	0	; () banked
 14386  001F50  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14387  001F52  0EF0               	movlw	high _CRLN
 14388  001F54  0100               	movlb	0	; () banked
 14389  001F56  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14390  001F58  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14391                           
 14392                           ;Bluetooth.c: 1158: UARTstring_CONST(CRLN);
 14393  001F5C  0E51               	movlw	low _CRLN
 14394  001F5E  0100               	movlb	0	; () banked
 14395  001F60  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14396  001F62  0EF0               	movlw	high _CRLN
 14397  001F64  0100               	movlb	0	; () banked
 14398  001F66  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14399  001F68  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14400                           
 14401                           ;Bluetooth.c: 1159: if(ReceivedString[0] != 0 && ReceivedString[21-1] == 0)
 14402  001F6C  0104               	movlb	4	; () banked
 14403  001F6E  5178               	movf	_ReceivedString& (0+255),w,b	;volatile
 14404  001F70  B4D8               	btfsc	status,2,c
 14405  001F72  D05D               	goto	l13282
 14406                           
 14407                           ; BSR set to: 4
 14408  001F74  0104               	movlb	4	; () banked
 14409  001F76  518C               	movf	(_ReceivedString+20)& (0+255),w,b	;volatile
 14410  001F78  A4D8               	btfss	status,2,c
 14411  001F7A  D059               	goto	l13282
 14412                           
 14413                           ; BSR set to: 4
 14414                           ;Bluetooth.c: 1160: {
 14415                           ;Bluetooth.c: 1161: if(IsAlphaNumericString(ReceivedString))
 14416  001F7C  0E78               	movlw	low _ReceivedString
 14417  001F7E  0100               	movlb	0	; () banked
 14418  001F80  6F62               	movwf	IsAlphaNumericString@data& (0+255),b
 14419  001F82  0E04               	movlw	high _ReceivedString
 14420  001F84  0100               	movlb	0	; () banked
 14421  001F86  6F63               	movwf	(IsAlphaNumericString@data+1)& (0+255),b
 14422  001F88  ECDB  F052         	call	_IsAlphaNumericString	;wreg free
 14423  001F8C  0900               	iorlw	0
 14424  001F8E  B4D8               	btfsc	status,2,c
 14425  001F90  D03D               	goto	l13280
 14426                           
 14427                           ;Bluetooth.c: 1162: {
 14428                           ;Bluetooth.c: 1163: UARTstringCRLN_CONST("Bluetooth Module will Reset. Please reconnect 
      +                          device");
 14429  001F92  0EB4               	movlw	low STR_102
 14430  001F94  0100               	movlb	0	; () banked
 14431  001F96  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14432  001F98  0EF1               	movlw	high STR_102
 14433  001F9A  0100               	movlb	0	; () banked
 14434  001F9C  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14435  001F9E  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 14436                           
 14437                           ;Bluetooth.c: 1164: UARTstring_CONST(CRLN);
 14438  001FA2  0E51               	movlw	low _CRLN
 14439  001FA4  0100               	movlb	0	; () banked
 14440  001FA6  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14441  001FA8  0EF0               	movlw	high _CRLN
 14442  001FAA  0100               	movlb	0	; () banked
 14443  001FAC  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14444  001FAE  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14445                           
 14446                           ;Bluetooth.c: 1165: BufferCopy(ReceivedString,BluetoothBroadcast, 21, 0);
 14447  001FB2  0E78               	movlw	low _ReceivedString
 14448  001FB4  0100               	movlb	0	; () banked
 14449  001FB6  6F68               	movwf	BufferCopy@from& (0+255),b
 14450  001FB8  0E04               	movlw	high _ReceivedString
 14451  001FBA  0100               	movlb	0	; () banked
 14452  001FBC  6F69               	movwf	(BufferCopy@from+1)& (0+255),b
 14453  001FBE  0EDC               	movlw	low _BluetoothBroadcast
 14454  001FC0  0100               	movlb	0	; () banked
 14455  001FC2  6F6A               	movwf	BufferCopy@to& (0+255),b
 14456  001FC4  0E04               	movlw	high _BluetoothBroadcast
 14457  001FC6  0100               	movlb	0	; () banked
 14458  001FC8  6F6B               	movwf	(BufferCopy@to+1)& (0+255),b
 14459  001FCA  0E15               	movlw	21
 14460  001FCC  0100               	movlb	0	; () banked
 14461  001FCE  6F6C               	movwf	BufferCopy@count& (0+255),b
 14462  001FD0  0E00               	movlw	0
 14463  001FD2  0100               	movlb	0	; () banked
 14464  001FD4  6F6D               	movwf	BufferCopy@shift& (0+255),b
 14465  001FD6  ECDF  F04E         	call	_BufferCopy	;wreg free
 14466                           
 14467                           ;Bluetooth.c: 1166: delayUS(50000);
 14468  001FDA  0E50               	movlw	80
 14469  001FDC  0100               	movlb	0	; () banked
 14470  001FDE  6F60               	movwf	delayUS@US& (0+255),b
 14471  001FE0  0EC3               	movlw	195
 14472  001FE2  6F61               	movwf	(delayUS@US+1)& (0+255),b
 14473  001FE4  0E00               	movlw	0
 14474  001FE6  6F62               	movwf	(delayUS@US+2)& (0+255),b
 14475  001FE8  0E00               	movlw	0
 14476  001FEA  6F63               	movwf	(delayUS@US+3)& (0+255),b
 14477  001FEC  EC3F  F051         	call	_delayUS	;wreg free
 14478                           
 14479                           ;Bluetooth.c: 1167: if(BluetoothInitialSetup(0))
 14480  001FF0  0E00               	movlw	0
 14481  001FF2  EC23  F022         	call	_BluetoothInitialSetup
 14482  001FF6  0900               	iorlw	0
 14483  001FF8  B4D8               	btfsc	status,2,c
 14484  001FFA  D004               	goto	l13276
 14485                           
 14486                           ;Bluetooth.c: 1168: {
 14487                           ;Bluetooth.c: 1169: BluetoothChangeStatus = 1;
 14488  001FFC  0E01               	movlw	1
 14489  001FFE  0103               	movlb	3	; () banked
 14490  002000  6FE8               	movwf	_BluetoothChangeStatus& (0+255),b
 14491                           
 14492                           ; BSR set to: 3
 14493                           ;Bluetooth.c: 1171: }
 14494                           
 14495                           ; BSR set to: 3
 14496                           ;Bluetooth.c: 1170: return 1;
 14497                           ;	Return value of _UseBluetooth is never used
 14498  002002  0012               	return	
 14499  002004                     l13276:
 14500                           
 14501                           ;Bluetooth.c: 1172: else
 14502                           ;Bluetooth.c: 1173: {
 14503                           ;Bluetooth.c: 1174: BluetoothChangeStatus = 0;
 14504  002004  0E00               	movlw	0
 14505  002006  0103               	movlb	3	; () banked
 14506  002008  6FE8               	movwf	_BluetoothChangeStatus& (0+255),b
 14507                           
 14508                           ; BSR set to: 3
 14509                           ;Bluetooth.c: 1176: }
 14510                           ;Bluetooth.c: 1177: }
 14511                           
 14512                           ; BSR set to: 3
 14513                           ;Bluetooth.c: 1175: return 0;
 14514                           ;	Return value of _UseBluetooth is never used
 14515  00200A  0012               	return	
 14516  00200C                     l13280:
 14517                           
 14518                           ;Bluetooth.c: 1178: else
 14519                           ;Bluetooth.c: 1179: {
 14520                           ;Bluetooth.c: 1180: UARTstringCRLN_CONST("Name has to be Alphanumeric. No symbols!");
 14521  00200C  0E78               	movlw	low STR_103
 14522  00200E  0100               	movlb	0	; () banked
 14523  002010  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14524  002012  0EF6               	movlw	high STR_103
 14525  002014  0100               	movlb	0	; () banked
 14526  002016  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14527  002018  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 14528                           
 14529                           ;Bluetooth.c: 1181: UARTstring_CONST(CRLN);
 14530  00201C  0E51               	movlw	low _CRLN
 14531  00201E  0100               	movlb	0	; () banked
 14532  002020  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14533  002022  0EF0               	movlw	high _CRLN
 14534  002024  0100               	movlb	0	; () banked
 14535  002026  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14536  002028  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14537                           
 14538                           ;Bluetooth.c: 1182: }
 14539                           ;Bluetooth.c: 1183: }
 14540  00202C  0012               	return	
 14541  00202E                     l13282:
 14542                           
 14543                           ;Bluetooth.c: 1184: else
 14544                           ;Bluetooth.c: 1185: {
 14545                           ;Bluetooth.c: 1186: UARTstringCRLN_CONST("Entered Name is too long. Name must be less th
      +                          an 21 characters!");
 14546  00202E  0E54               	movlw	low STR_104
 14547  002030  0100               	movlb	0	; () banked
 14548  002032  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14549  002034  0EF0               	movlw	high STR_104
 14550  002036  0100               	movlb	0	; () banked
 14551  002038  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14552  00203A  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 14553                           
 14554                           ;Bluetooth.c: 1187: UARTstring_CONST(CRLN);
 14555  00203E  0E51               	movlw	low _CRLN
 14556  002040  0100               	movlb	0	; () banked
 14557  002042  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14558  002044  0EF0               	movlw	high _CRLN
 14559  002046  0100               	movlb	0	; () banked
 14560  002048  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14561  00204A  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14562                           
 14563                           ;Bluetooth.c: 1188: }
 14564                           ;Bluetooth.c: 1189: }
 14565  00204E  0012               	return	
 14566  002050                     l13284:
 14567                           
 14568                           ;Bluetooth.c: 1190: else
 14569                           ;Bluetooth.c: 1191: {
 14570                           ;Bluetooth.c: 1192: UARTstringCRLN_CONST("Device resumes without changing Bluetooth Broa
      +                          dcast Name");
 14571  002050  0E0F               	movlw	low STR_99
 14572  002052  0100               	movlb	0	; () banked
 14573  002054  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14574  002056  0EF1               	movlw	high STR_99
 14575  002058  0100               	movlb	0	; () banked
 14576  00205A  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14577  00205C  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 14578                           
 14579                           ;Bluetooth.c: 1193: UARTstring_CONST(CRLN);
 14580  002060  0E51               	movlw	low _CRLN
 14581  002062  0100               	movlb	0	; () banked
 14582  002064  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14583  002066  0EF0               	movlw	high _CRLN
 14584  002068  0100               	movlb	0	; () banked
 14585  00206A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14586  00206C  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14587                           
 14588                           ;Bluetooth.c: 1196: }
 14589                           
 14590                           ;Bluetooth.c: 1194: }
 14591                           ;Bluetooth.c: 1195: return 0;
 14592                           ;	Return value of _UseBluetooth is never used
 14593  002070  0012               	return	
 14594  002072                     l13290:
 14595                           
 14596                           ;Bluetooth.c: 1197: else if(StringMatchCaseInsensitive(String,"Voltage"))
 14597  002072  C0F2  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 14598  002076  C0F3  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 14599  00207A  0E90               	movlw	low STR_106
 14600  00207C  0100               	movlb	0	; () banked
 14601  00207E  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 14602  002080  0EFF               	movlw	high STR_106
 14603  002082  0100               	movlb	0	; () banked
 14604  002084  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 14605  002086  EC08  F04E         	call	_StringMatchCaseInsensitive	;wreg free
 14606  00208A  0900               	iorlw	0
 14607  00208C  B4D8               	btfsc	status,2,c
 14608  00208E  D02F               	goto	l13300
 14609                           
 14610                           ;Bluetooth.c: 1198: {
 14611                           ;Bluetooth.c: 1199: UARTstring_CONST(CRLN);
 14612  002090  0E51               	movlw	low _CRLN
 14613  002092  0100               	movlb	0	; () banked
 14614  002094  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14615  002096  0EF0               	movlw	high _CRLN
 14616  002098  0100               	movlb	0	; () banked
 14617  00209A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14618  00209C  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14619                           
 14620                           ;Bluetooth.c: 1200: sprintf(buf,"Supply Voltage = %f", (double) ReadVoltage());
 14621  0020A0  0E0C               	movlw	low UseBluetooth@buf
 14622  0020A2  0100               	movlb	0	; () banked
 14623  0020A4  6FAE               	movwf	sprintf@sp& (0+255),b
 14624  0020A6  0E02               	movlw	high UseBluetooth@buf
 14625  0020A8  0100               	movlb	0	; () banked
 14626  0020AA  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 14627  0020AC  0E1E               	movlw	low STR_107
 14628  0020AE  0100               	movlb	0	; () banked
 14629  0020B0  6FB0               	movwf	sprintf@f& (0+255),b
 14630  0020B2  0EFD               	movlw	high STR_107
 14631  0020B4  0100               	movlb	0	; () banked
 14632  0020B6  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 14633  0020B8  EC0D  F04B         	call	_ReadVoltage	;wreg free
 14634  0020BC  C089  F0B2         	movff	?_ReadVoltage,?_sprintf+4
 14635  0020C0  C08A  F0B3         	movff	?_ReadVoltage+1,?_sprintf+5
 14636  0020C4  C08B  F0B4         	movff	?_ReadVoltage+2,?_sprintf+6
 14637  0020C8  EC27  F014         	call	_sprintf	;wreg free
 14638                           
 14639                           ;Bluetooth.c: 1201: UARTstringCRLN(buf);
 14640  0020CC  0E0C               	movlw	low UseBluetooth@buf
 14641  0020CE  0100               	movlb	0	; () banked
 14642  0020D0  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 14643  0020D2  0E02               	movlw	high UseBluetooth@buf
 14644  0020D4  0100               	movlb	0	; () banked
 14645  0020D6  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 14646  0020D8  ECA3  F052         	call	_UARTstringCRLN	;wreg free
 14647                           
 14648                           ;Bluetooth.c: 1202: UARTstring_CONST(CRLN);
 14649  0020DC  0E51               	movlw	low _CRLN
 14650  0020DE  0100               	movlb	0	; () banked
 14651  0020E0  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14652  0020E2  0EF0               	movlw	high _CRLN
 14653  0020E4  0100               	movlb	0	; () banked
 14654  0020E6  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14655  0020E8  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14656                           
 14657                           ;Bluetooth.c: 1203: }
 14658  0020EC  0012               	return	
 14659  0020EE                     l13300:
 14660                           
 14661                           ;Bluetooth.c: 1204: else if(StringMatchCaseInsensitive(String,"Version"))
 14662  0020EE  C0F2  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 14663  0020F2  C0F3  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 14664  0020F6  0EE3               	movlw	low (STR_124+27)
 14665  0020F8  0100               	movlb	0	; () banked
 14666  0020FA  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 14667  0020FC  0EF7               	movlw	high (STR_124+27)
 14668  0020FE  0100               	movlb	0	; () banked
 14669  002100  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 14670  002102  EC08  F04E         	call	_StringMatchCaseInsensitive	;wreg free
 14671  002106  0900               	iorlw	0
 14672  002108  B4D8               	btfsc	status,2,c
 14673  00210A  D0CB               	goto	l13338
 14674                           
 14675                           ;Bluetooth.c: 1205: {
 14676                           ;Bluetooth.c: 1206: UARTstring_CONST(CRLN);
 14677  00210C  0E51               	movlw	low _CRLN
 14678  00210E  0100               	movlb	0	; () banked
 14679  002110  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14680  002112  0EF0               	movlw	high _CRLN
 14681  002114  0100               	movlb	0	; () banked
 14682  002116  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14683  002118  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14684                           
 14685                           ;Bluetooth.c: 1207: sprintf(buf,"Firmware Version: %s", FirmVersion);
 14686  00211C  0E0C               	movlw	low UseBluetooth@buf
 14687  00211E  0100               	movlb	0	; () banked
 14688  002120  6FAE               	movwf	sprintf@sp& (0+255),b
 14689  002122  0E02               	movlw	high UseBluetooth@buf
 14690  002124  0100               	movlb	0	; () banked
 14691  002126  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 14692  002128  0EB9               	movlw	low STR_109
 14693  00212A  0100               	movlb	0	; () banked
 14694  00212C  6FB0               	movwf	sprintf@f& (0+255),b
 14695  00212E  0EFC               	movlw	high STR_109
 14696  002130  0100               	movlb	0	; () banked
 14697  002132  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 14698  002134  0E37               	movlw	low _FirmVersion
 14699  002136  0100               	movlb	0	; () banked
 14700  002138  6FB2               	movwf	(?_sprintf+4)& (0+255),b
 14701  00213A  0EF0               	movlw	high _FirmVersion
 14702  00213C  0100               	movlb	0	; () banked
 14703  00213E  6FB3               	movwf	(?_sprintf+5)& (0+255),b
 14704  002140  EC27  F014         	call	_sprintf	;wreg free
 14705                           
 14706                           ;Bluetooth.c: 1208: UARTstringCRLN(buf);
 14707  002144  0E0C               	movlw	low UseBluetooth@buf
 14708  002146  0100               	movlb	0	; () banked
 14709  002148  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 14710  00214A  0E02               	movlw	high UseBluetooth@buf
 14711  00214C  0100               	movlb	0	; () banked
 14712  00214E  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 14713  002150  ECA3  F052         	call	_UARTstringCRLN	;wreg free
 14714                           
 14715                           ;Bluetooth.c: 1209: UARTstring_CONST(CRLN);
 14716  002154  0E51               	movlw	low _CRLN
 14717  002156  0100               	movlb	0	; () banked
 14718  002158  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14719  00215A  0EF0               	movlw	high _CRLN
 14720  00215C  0100               	movlb	0	; () banked
 14721  00215E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14722  002160  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14723                           
 14724                           ;Bluetooth.c: 1211: UARTstringCRLN_CONST("PCB has Bluetooth capability");
 14725  002164  0E5E               	movlw	low STR_110
 14726  002166  0100               	movlb	0	; () banked
 14727  002168  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14728  00216A  0EFA               	movlw	high STR_110
 14729  00216C  0100               	movlb	0	; () banked
 14730  00216E  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14731  002170  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 14732                           
 14733                           ;Bluetooth.c: 1212: UARTstring_CONST(CRLN);
 14734  002174  0E51               	movlw	low _CRLN
 14735  002176  0100               	movlb	0	; () banked
 14736  002178  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14737  00217A  0EF0               	movlw	high _CRLN
 14738  00217C  0100               	movlb	0	; () banked
 14739  00217E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14740  002180  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14741                           
 14742                           ;Bluetooth.c: 1213: UARTstringCRLN_CONST("Bluetooth firmware is:");
 14743  002184  0EC8               	movlw	low STR_111
 14744  002186  0100               	movlb	0	; () banked
 14745  002188  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14746  00218A  0EFB               	movlw	high STR_111
 14747  00218C  0100               	movlb	0	; () banked
 14748  00218E  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14749  002190  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 14750                           
 14751                           ;Bluetooth.c: 1214: UARTstringCRLN(BluetoothFirmware1);
 14752  002194  0E00               	movlw	low _BluetoothFirmware1
 14753  002196  0100               	movlb	0	; () banked
 14754  002198  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 14755  00219A  0E05               	movlw	high _BluetoothFirmware1
 14756  00219C  0100               	movlb	0	; () banked
 14757  00219E  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 14758  0021A0  ECA3  F052         	call	_UARTstringCRLN	;wreg free
 14759                           
 14760                           ;Bluetooth.c: 1215: UARTstringCRLN(BluetoothFirmware2);
 14761  0021A4  0E1E               	movlw	low _BluetoothFirmware2
 14762  0021A6  0100               	movlb	0	; () banked
 14763  0021A8  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 14764  0021AA  0E05               	movlw	high _BluetoothFirmware2
 14765  0021AC  0100               	movlb	0	; () banked
 14766  0021AE  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 14767  0021B0  ECA3  F052         	call	_UARTstringCRLN	;wreg free
 14768                           
 14769                           ;Bluetooth.c: 1216: UARTstring_CONST(CRLN);
 14770  0021B4  0E51               	movlw	low _CRLN
 14771  0021B6  0100               	movlb	0	; () banked
 14772  0021B8  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14773  0021BA  0EF0               	movlw	high _CRLN
 14774  0021BC  0100               	movlb	0	; () banked
 14775  0021BE  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14776  0021C0  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14777                           
 14778                           ;Bluetooth.c: 1221: sprintf(buf,"PCB Version: %s", PCBVersion);
 14779  0021C4  0E0C               	movlw	low UseBluetooth@buf
 14780  0021C6  0100               	movlb	0	; () banked
 14781  0021C8  6FAE               	movwf	sprintf@sp& (0+255),b
 14782  0021CA  0E02               	movlw	high UseBluetooth@buf
 14783  0021CC  0100               	movlb	0	; () banked
 14784  0021CE  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 14785  0021D0  0E31               	movlw	low STR_112
 14786  0021D2  0100               	movlb	0	; () banked
 14787  0021D4  6FB0               	movwf	sprintf@f& (0+255),b
 14788  0021D6  0EFE               	movlw	high STR_112
 14789  0021D8  0100               	movlb	0	; () banked
 14790  0021DA  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 14791  0021DC  0E40               	movlw	low _PCBVersion
 14792  0021DE  0100               	movlb	0	; () banked
 14793  0021E0  6FB2               	movwf	(?_sprintf+4)& (0+255),b
 14794  0021E2  0EF0               	movlw	high _PCBVersion
 14795  0021E4  0100               	movlb	0	; () banked
 14796  0021E6  6FB3               	movwf	(?_sprintf+5)& (0+255),b
 14797  0021E8  EC27  F014         	call	_sprintf	;wreg free
 14798                           
 14799                           ;Bluetooth.c: 1222: UARTstringCRLN(buf);
 14800  0021EC  0E0C               	movlw	low UseBluetooth@buf
 14801  0021EE  0100               	movlb	0	; () banked
 14802  0021F0  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 14803  0021F2  0E02               	movlw	high UseBluetooth@buf
 14804  0021F4  0100               	movlb	0	; () banked
 14805  0021F6  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 14806  0021F8  ECA3  F052         	call	_UARTstringCRLN	;wreg free
 14807                           
 14808                           ;Bluetooth.c: 1223: sprintf(buf,"Transmitting Frequency: %s", Frequency);
 14809  0021FC  0E0C               	movlw	low UseBluetooth@buf
 14810  0021FE  0100               	movlb	0	; () banked
 14811  002200  6FAE               	movwf	sprintf@sp& (0+255),b
 14812  002202  0E02               	movlw	high UseBluetooth@buf
 14813  002204  0100               	movlb	0	; () banked
 14814  002206  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 14815  002208  0EEA               	movlw	low STR_113
 14816  00220A  0100               	movlb	0	; () banked
 14817  00220C  6FB0               	movwf	sprintf@f& (0+255),b
 14818  00220E  0EFA               	movlw	high STR_113
 14819  002210  0100               	movlb	0	; () banked
 14820  002212  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 14821  002214  0E4D               	movlw	low _Frequency
 14822  002216  0100               	movlb	0	; () banked
 14823  002218  6FB2               	movwf	(?_sprintf+4)& (0+255),b
 14824  00221A  0EF0               	movlw	high _Frequency
 14825  00221C  0100               	movlb	0	; () banked
 14826  00221E  6FB3               	movwf	(?_sprintf+5)& (0+255),b
 14827  002220  EC27  F014         	call	_sprintf	;wreg free
 14828                           
 14829                           ;Bluetooth.c: 1224: UARTstring(buf);
 14830  002224  0E0C               	movlw	low UseBluetooth@buf
 14831  002226  0100               	movlb	0	; () banked
 14832  002228  6F61               	movwf	UARTstring@data& (0+255),b
 14833  00222A  0E02               	movlw	high UseBluetooth@buf
 14834  00222C  0100               	movlb	0	; () banked
 14835  00222E  6F62               	movwf	(UARTstring@data+1)& (0+255),b
 14836  002230  ECE3  F053         	call	_UARTstring	;wreg free
 14837                           
 14838                           ;Bluetooth.c: 1225: UARTstringCRLN_CONST(" MHz");
 14839  002234  0EDB               	movlw	low STR_114
 14840  002236  0100               	movlb	0	; () banked
 14841  002238  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14842  00223A  0EFF               	movlw	high STR_114
 14843  00223C  0100               	movlb	0	; () banked
 14844  00223E  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14845  002240  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 14846                           
 14847                           ;Bluetooth.c: 1226: UARTstring_CONST(CRLN);
 14848  002244  0E51               	movlw	low _CRLN
 14849  002246  0100               	movlb	0	; () banked
 14850  002248  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14851  00224A  0EF0               	movlw	high _CRLN
 14852  00224C  0100               	movlb	0	; () banked
 14853  00224E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14854  002250  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14855                           
 14856                           ;Bluetooth.c: 1227: sprintf(buf,"Serial Number: %lu", Global2.SerialNumber);
 14857  002254  0E0C               	movlw	low UseBluetooth@buf
 14858  002256  0100               	movlb	0	; () banked
 14859  002258  6FAE               	movwf	sprintf@sp& (0+255),b
 14860  00225A  0E02               	movlw	high UseBluetooth@buf
 14861  00225C  0100               	movlb	0	; () banked
 14862  00225E  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 14863  002260  0EA5               	movlw	low STR_115
 14864  002262  0100               	movlb	0	; () banked
 14865  002264  6FB0               	movwf	sprintf@f& (0+255),b
 14866  002266  0EFD               	movlw	high STR_115
 14867  002268  0100               	movlb	0	; () banked
 14868  00226A  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 14869  00226C  C2D1  F0B2         	movff	_Global2+60,?_sprintf+4
 14870  002270  C2D2  F0B3         	movff	_Global2+61,?_sprintf+5
 14871  002274  C2D3  F0B4         	movff	_Global2+62,?_sprintf+6
 14872  002278  C2D4  F0B5         	movff	_Global2+63,?_sprintf+7
 14873  00227C  EC27  F014         	call	_sprintf	;wreg free
 14874                           
 14875                           ;Bluetooth.c: 1228: UARTstring(buf);
 14876  002280  0E0C               	movlw	low UseBluetooth@buf
 14877  002282  0100               	movlb	0	; () banked
 14878  002284  6F61               	movwf	UARTstring@data& (0+255),b
 14879  002286  0E02               	movlw	high UseBluetooth@buf
 14880  002288  0100               	movlb	0	; () banked
 14881  00228A  6F62               	movwf	(UARTstring@data+1)& (0+255),b
 14882  00228C  ECE3  F053         	call	_UARTstring	;wreg free
 14883                           
 14884                           ;Bluetooth.c: 1229: UARTstring_CONST(CRLN);
 14885  002290  0E51               	movlw	low _CRLN
 14886  002292  0100               	movlb	0	; () banked
 14887  002294  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14888  002296  0EF0               	movlw	high _CRLN
 14889  002298  0100               	movlb	0	; () banked
 14890  00229A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14891  00229C  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14892                           
 14893                           ;Bluetooth.c: 1231: }
 14894  0022A0  0012               	return	
 14895  0022A2                     l13338:
 14896                           
 14897                           ;Bluetooth.c: 1232: else if(StringMatch(String,"???"))
 14898  0022A2  C0F2  F060         	movff	UseBluetooth@String,StringMatch@This
 14899  0022A6  C0F3  F061         	movff	UseBluetooth@String+1,StringMatch@This+1
 14900  0022AA  0EE4               	movlw	low STR_116
 14901  0022AC  0100               	movlb	0	; () banked
 14902  0022AE  6F62               	movwf	StringMatch@That& (0+255),b
 14903  0022B0  0EFF               	movlw	high STR_116
 14904  0022B2  0100               	movlb	0	; () banked
 14905  0022B4  6F63               	movwf	(StringMatch@That+1)& (0+255),b
 14906  0022B6  ECDF  F04F         	call	_StringMatch	;wreg free
 14907  0022BA  0900               	iorlw	0
 14908  0022BC  B4D8               	btfsc	status,2,c
 14909  0022BE  D2AD               	goto	l13426
 14910                           
 14911                           ;Bluetooth.c: 1233: {
 14912                           ;Bluetooth.c: 1234: UARTstring_CONST(CRLN);
 14913  0022C0  0E51               	movlw	low _CRLN
 14914  0022C2  0100               	movlb	0	; () banked
 14915  0022C4  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14916  0022C6  0EF0               	movlw	high _CRLN
 14917  0022C8  0100               	movlb	0	; () banked
 14918  0022CA  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14919  0022CC  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14920                           
 14921                           ;Bluetooth.c: 1235: for(i=0; i< 34; i++ )
 14922  0022D0  0E00               	movlw	0
 14923  0022D2  0102               	movlb	2	; () banked
 14924  0022D4  6F94               	movwf	UseBluetooth@i& (0+255),b
 14925  0022D6                     l13344:
 14926                           
 14927                           ; BSR set to: 2
 14928  0022D6  0E21               	movlw	33
 14929  0022D8  0102               	movlb	2	; () banked
 14930  0022DA  6594               	cpfsgt	UseBluetooth@i& (0+255),b
 14931  0022DC  D001               	goto	l13348
 14932                           
 14933                           ; BSR set to: 2
 14934  0022DE  D006               	goto	l13354
 14935  0022E0                     l13348:
 14936                           
 14937                           ; BSR set to: 2
 14938                           ;Bluetooth.c: 1236: {
 14939                           ;Bluetooth.c: 1237: UARTchar_CONST('~');
 14940  0022E0  0E7E               	movlw	126
 14941  0022E2  EC1E  F054         	call	_UARTchar_CONST
 14942  0022E6  0102               	movlb	2	; () banked
 14943  0022E8  2B94               	incf	UseBluetooth@i& (0+255),f,b
 14944  0022EA  D7F5               	goto	l13344
 14945  0022EC                     l13354:
 14946                           
 14947                           ; BSR set to: 2
 14948                           ;Bluetooth.c: 1238: }
 14949                           ;Bluetooth.c: 1239: UARTstring_CONST("Command Menu");
 14950  0022EC  0E13               	movlw	low (STR_177+14)
 14951  0022EE  0100               	movlb	0	; () banked
 14952  0022F0  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14953  0022F2  0EFB               	movlw	high (STR_177+14)
 14954  0022F4  0100               	movlb	0	; () banked
 14955  0022F6  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14956  0022F8  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14957                           
 14958                           ;Bluetooth.c: 1240: for(i=0; i< 34; i++ )
 14959  0022FC  0E00               	movlw	0
 14960  0022FE  0102               	movlb	2	; () banked
 14961  002300  6F94               	movwf	UseBluetooth@i& (0+255),b
 14962  002302                     l13358:
 14963                           
 14964                           ; BSR set to: 2
 14965  002302  0E21               	movlw	33
 14966  002304  0102               	movlb	2	; () banked
 14967  002306  6594               	cpfsgt	UseBluetooth@i& (0+255),b
 14968  002308  D001               	goto	l13362
 14969                           
 14970                           ; BSR set to: 2
 14971  00230A  D006               	goto	l13368
 14972  00230C                     l13362:
 14973                           
 14974                           ; BSR set to: 2
 14975                           ;Bluetooth.c: 1241: {
 14976                           ;Bluetooth.c: 1242: UARTchar_CONST('~');
 14977  00230C  0E7E               	movlw	126
 14978  00230E  EC1E  F054         	call	_UARTchar_CONST
 14979  002312  0102               	movlb	2	; () banked
 14980  002314  2B94               	incf	UseBluetooth@i& (0+255),f,b
 14981  002316  D7F5               	goto	l13358
 14982  002318                     l13368:
 14983                           
 14984                           ; BSR set to: 2
 14985                           ;Bluetooth.c: 1243: }
 14986                           ;Bluetooth.c: 1244: UARTstring_CONST(CRLN);
 14987  002318  0E51               	movlw	low _CRLN
 14988  00231A  0100               	movlb	0	; () banked
 14989  00231C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14990  00231E  0EF0               	movlw	high _CRLN
 14991  002320  0100               	movlb	0	; () banked
 14992  002322  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14993  002324  EC42  F053         	call	_UARTstring_CONST	;wreg free
 14994                           
 14995                           ;Bluetooth.c: 1245: UARTstring_CONST(CRLN);
 14996  002328  0E51               	movlw	low _CRLN
 14997  00232A  0100               	movlb	0	; () banked
 14998  00232C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14999  00232E  0EF0               	movlw	high _CRLN
 15000  002330  0100               	movlb	0	; () banked
 15001  002332  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15002  002334  EC42  F053         	call	_UARTstring_CONST	;wreg free
 15003                           
 15004                           ;Bluetooth.c: 1246: UARTstringCRLN_CONST("System commands:");
 15005  002338  0EFF               	movlw	low STR_118
 15006  00233A  0100               	movlb	0	; () banked
 15007  00233C  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 15008  00233E  0EFD               	movlw	high STR_118
 15009  002340  0100               	movlb	0	; () banked
 15010  002342  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 15011  002344  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 15012                           
 15013                           ;Bluetooth.c: 1247: UARTcommandMenu("???", "Help Menu");
 15014  002348  0EE4               	movlw	low STR_116
 15015  00234A  0100               	movlb	0	; () banked
 15016  00234C  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15017  00234E  0EFF               	movlw	high STR_116
 15018  002350  0100               	movlb	0	; () banked
 15019  002352  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15020  002354  0E62               	movlw	low STR_120
 15021  002356  0100               	movlb	0	; () banked
 15022  002358  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15023  00235A  0EFF               	movlw	high STR_120
 15024  00235C  0100               	movlb	0	; () banked
 15025  00235E  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15026  002360  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15027                           
 15028                           ;Bluetooth.c: 1248: UARTcommandMenu("Reset", "Clears memory and resets device");
 15029  002364  0EC6               	movlw	low STR_80
 15030  002366  0100               	movlb	0	; () banked
 15031  002368  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15032  00236A  0EFF               	movlw	high STR_80
 15033  00236C  0100               	movlb	0	; () banked
 15034  00236E  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15035  002370  0EAF               	movlw	low STR_122
 15036  002372  0100               	movlb	0	; () banked
 15037  002374  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15038  002376  0EF8               	movlw	high STR_122
 15039  002378  0100               	movlb	0	; () banked
 15040  00237A  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15041  00237C  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15042                           
 15043                           ;Bluetooth.c: 1249: UARTcommandMenu("Version", "Displays Firmware/Hardware Version");
 15044  002380  0EE3               	movlw	low (STR_124+27)
 15045  002382  0100               	movlb	0	; () banked
 15046  002384  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15047  002386  0EF7               	movlw	high (STR_124+27)
 15048  002388  0100               	movlb	0	; () banked
 15049  00238A  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15050  00238C  0EC8               	movlw	low STR_124
 15051  00238E  0100               	movlb	0	; () banked
 15052  002390  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15053  002392  0EF7               	movlw	high STR_124
 15054  002394  0100               	movlb	0	; () banked
 15055  002396  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15056  002398  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15057                           
 15058                           ;Bluetooth.c: 1250: UARTcommandMenu("Change SN", "Changes Serial Number");
 15059  00239C  0E58               	movlw	low STR_85
 15060  00239E  0100               	movlb	0	; () banked
 15061  0023A0  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15062  0023A2  0EFF               	movlw	high STR_85
 15063  0023A4  0100               	movlb	0	; () banked
 15064  0023A6  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15065  0023A8  0E4F               	movlw	low STR_126
 15066  0023AA  0100               	movlb	0	; () banked
 15067  0023AC  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15068  0023AE  0EFC               	movlw	high STR_126
 15069  0023B0  0100               	movlb	0	; () banked
 15070  0023B2  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15071  0023B4  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15072                           
 15073                           ;Bluetooth.c: 1251: UARTcommandMenu("Change Bluetooth Name", "Changes Bluetooth Broadcas
      +                          t Name");
 15074  0023B8  0E39               	movlw	low STR_97
 15075  0023BA  0100               	movlb	0	; () banked
 15076  0023BC  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15077  0023BE  0EFC               	movlw	high STR_97
 15078  0023C0  0100               	movlb	0	; () banked
 15079  0023C2  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15080  0023C4  0E2E               	movlw	low STR_128
 15081  0023C6  0100               	movlb	0	; () banked
 15082  0023C8  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15083  0023CA  0EF8               	movlw	high STR_128
 15084  0023CC  0100               	movlb	0	; () banked
 15085  0023CE  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15086  0023D0  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15087                           
 15088                           ;Bluetooth.c: 1252: UARTstring_CONST(CRLN);
 15089  0023D4  0E51               	movlw	low _CRLN
 15090  0023D6  0100               	movlb	0	; () banked
 15091  0023D8  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15092  0023DA  0EF0               	movlw	high _CRLN
 15093  0023DC  0100               	movlb	0	; () banked
 15094  0023DE  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15095  0023E0  EC42  F053         	call	_UARTstring_CONST	;wreg free
 15096                           
 15097                           ;Bluetooth.c: 1253: UARTstringCRLN_CONST("Diagnostic Commands:");
 15098  0023E4  0EA4               	movlw	low STR_129
 15099  0023E6  0100               	movlb	0	; () banked
 15100  0023E8  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 15101  0023EA  0EFC               	movlw	high STR_129
 15102  0023EC  0100               	movlb	0	; () banked
 15103  0023EE  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 15104  0023F0  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 15105                           
 15106                           ;Bluetooth.c: 1254: UARTcommandMenu("Voltage", "Displays the supply voltage");
 15107  0023F4  0E90               	movlw	low STR_106
 15108  0023F6  0100               	movlb	0	; () banked
 15109  0023F8  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15110  0023FA  0EFF               	movlw	high STR_106
 15111  0023FC  0100               	movlb	0	; () banked
 15112  0023FE  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15113  002400  0E97               	movlw	low STR_131
 15114  002402  0100               	movlb	0	; () banked
 15115  002404  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15116  002406  0EFA               	movlw	high STR_131
 15117  002408  0100               	movlb	0	; () banked
 15118  00240A  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15119  00240C  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15120                           
 15121                           ;Bluetooth.c: 1255: UARTstring_CONST(CRLN);
 15122  002410  0E51               	movlw	low _CRLN
 15123  002412  0100               	movlb	0	; () banked
 15124  002414  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15125  002416  0EF0               	movlw	high _CRLN
 15126  002418  0100               	movlb	0	; () banked
 15127  00241A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15128  00241C  EC42  F053         	call	_UARTstring_CONST	;wreg free
 15129                           
 15130                           ;Bluetooth.c: 1256: UARTstringCRLN_CONST("IR commands:");
 15131  002420  0E98               	movlw	low STR_132
 15132  002422  0100               	movlb	0	; () banked
 15133  002424  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 15134  002426  0EFE               	movlw	high STR_132
 15135  002428  0100               	movlb	0	; () banked
 15136  00242A  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 15137  00242C  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 15138                           
 15139                           ;Bluetooth.c: 1257: for(i=1; i <= 12; i++)
 15140  002430  0E01               	movlw	1
 15141  002432  0102               	movlb	2	; () banked
 15142  002434  6F94               	movwf	UseBluetooth@i& (0+255),b
 15143  002436                     l13388:
 15144                           
 15145                           ; BSR set to: 2
 15146  002436  0E0C               	movlw	12
 15147  002438  0102               	movlb	2	; () banked
 15148  00243A  6594               	cpfsgt	UseBluetooth@i& (0+255),b
 15149  00243C  D001               	goto	l13392
 15150                           
 15151                           ; BSR set to: 2
 15152  00243E  D030               	goto	l13402
 15153  002440                     l13392:
 15154                           
 15155                           ; BSR set to: 2
 15156                           ;Bluetooth.c: 1258: {
 15157                           ;Bluetooth.c: 1259: cleanBuffer(buf,50);
 15158  002440  0E0C               	movlw	low UseBluetooth@buf
 15159  002442  0100               	movlb	0	; () banked
 15160  002444  6F60               	movwf	cleanBuffer@data& (0+255),b
 15161  002446  0E02               	movlw	high UseBluetooth@buf
 15162  002448  0100               	movlb	0	; () banked
 15163  00244A  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 15164  00244C  0E00               	movlw	0
 15165  00244E  0100               	movlb	0	; () banked
 15166  002450  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 15167  002452  0E32               	movlw	50
 15168  002454  6F62               	movwf	cleanBuffer@count& (0+255),b
 15169  002456  ECE6  F050         	call	_cleanBuffer	;wreg free
 15170                           
 15171                           ;Bluetooth.c: 1260: sprintf(buf,"RemoteButton%d",i);
 15172  00245A  0E0C               	movlw	low UseBluetooth@buf
 15173  00245C  0100               	movlb	0	; () banked
 15174  00245E  6FAE               	movwf	sprintf@sp& (0+255),b
 15175  002460  0E02               	movlw	high UseBluetooth@buf
 15176  002462  0100               	movlb	0	; () banked
 15177  002464  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 15178  002466  0E51               	movlw	low STR_133
 15179  002468  0100               	movlb	0	; () banked
 15180  00246A  6FB0               	movwf	sprintf@f& (0+255),b
 15181  00246C  0EFE               	movlw	high STR_133
 15182  00246E  0100               	movlb	0	; () banked
 15183  002470  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 15184  002472  C294  F0B2         	movff	UseBluetooth@i,?_sprintf+4
 15185  002476  0100               	movlb	0	; () banked
 15186  002478  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 15187  00247A  EC27  F014         	call	_sprintf	;wreg free
 15188                           
 15189                           ;Bluetooth.c: 1261: UARTcommandMenu(buf, "Transmits saved NEC code");
 15190  00247E  0E0C               	movlw	low UseBluetooth@buf
 15191  002480  0100               	movlb	0	; () banked
 15192  002482  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15193  002484  0E02               	movlw	high UseBluetooth@buf
 15194  002486  0100               	movlb	0	; () banked
 15195  002488  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15196  00248A  0E20               	movlw	low STR_134
 15197  00248C  0100               	movlb	0	; () banked
 15198  00248E  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15199  002490  0EFB               	movlw	high STR_134
 15200  002492  0100               	movlb	0	; () banked
 15201  002494  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15202  002496  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15203  00249A  0102               	movlb	2	; () banked
 15204  00249C  2B94               	incf	UseBluetooth@i& (0+255),f,b
 15205  00249E  D7CB               	goto	l13388
 15206  0024A0                     l13402:
 15207                           
 15208                           ; BSR set to: 2
 15209                           ;Bluetooth.c: 1262: }
 15210                           ;Bluetooth.c: 1263: for(i=1; i <= 12; i++)
 15211  0024A0  0E01               	movlw	1
 15212  0024A2  0102               	movlb	2	; () banked
 15213  0024A4  6F94               	movwf	UseBluetooth@i& (0+255),b
 15214  0024A6                     l13404:
 15215                           
 15216                           ; BSR set to: 2
 15217  0024A6  0E0C               	movlw	12
 15218  0024A8  0102               	movlb	2	; () banked
 15219  0024AA  6594               	cpfsgt	UseBluetooth@i& (0+255),b
 15220  0024AC  D001               	goto	l13408
 15221                           
 15222                           ; BSR set to: 2
 15223  0024AE  D030               	goto	l13418
 15224  0024B0                     l13408:
 15225                           
 15226                           ; BSR set to: 2
 15227                           ;Bluetooth.c: 1264: {
 15228                           ;Bluetooth.c: 1265: cleanBuffer(buf,50);
 15229  0024B0  0E0C               	movlw	low UseBluetooth@buf
 15230  0024B2  0100               	movlb	0	; () banked
 15231  0024B4  6F60               	movwf	cleanBuffer@data& (0+255),b
 15232  0024B6  0E02               	movlw	high UseBluetooth@buf
 15233  0024B8  0100               	movlb	0	; () banked
 15234  0024BA  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 15235  0024BC  0E00               	movlw	0
 15236  0024BE  0100               	movlb	0	; () banked
 15237  0024C0  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 15238  0024C2  0E32               	movlw	50
 15239  0024C4  6F62               	movwf	cleanBuffer@count& (0+255),b
 15240  0024C6  ECE6  F050         	call	_cleanBuffer	;wreg free
 15241                           
 15242                           ;Bluetooth.c: 1266: sprintf(buf,"RemoteButton%d set",i);
 15243  0024CA  0E0C               	movlw	low UseBluetooth@buf
 15244  0024CC  0100               	movlb	0	; () banked
 15245  0024CE  6FAE               	movwf	sprintf@sp& (0+255),b
 15246  0024D0  0E02               	movlw	high UseBluetooth@buf
 15247  0024D2  0100               	movlb	0	; () banked
 15248  0024D4  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 15249  0024D6  0E92               	movlw	low STR_135
 15250  0024D8  0100               	movlb	0	; () banked
 15251  0024DA  6FB0               	movwf	sprintf@f& (0+255),b
 15252  0024DC  0EFD               	movlw	high STR_135
 15253  0024DE  0100               	movlb	0	; () banked
 15254  0024E0  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 15255  0024E2  C294  F0B2         	movff	UseBluetooth@i,?_sprintf+4
 15256  0024E6  0100               	movlb	0	; () banked
 15257  0024E8  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 15258  0024EA  EC27  F014         	call	_sprintf	;wreg free
 15259                           
 15260                           ;Bluetooth.c: 1267: UARTcommandMenu(buf,"Allows saving NEC codes");
 15261  0024EE  0E0C               	movlw	low UseBluetooth@buf
 15262  0024F0  0100               	movlb	0	; () banked
 15263  0024F2  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15264  0024F4  0E02               	movlw	high UseBluetooth@buf
 15265  0024F6  0100               	movlb	0	; () banked
 15266  0024F8  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15267  0024FA  0E81               	movlw	low STR_136
 15268  0024FC  0100               	movlb	0	; () banked
 15269  0024FE  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15270  002500  0EFB               	movlw	high STR_136
 15271  002502  0100               	movlb	0	; () banked
 15272  002504  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15273  002506  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15274  00250A  0102               	movlb	2	; () banked
 15275  00250C  2B94               	incf	UseBluetooth@i& (0+255),f,b
 15276  00250E  D7CB               	goto	l13404
 15277  002510                     l13418:
 15278                           
 15279                           ; BSR set to: 2
 15280                           ;Bluetooth.c: 1268: }
 15281                           ;Bluetooth.c: 1269: UARTcommandMenu("RF set 1,D", "Sets Remote button to send RF Config 
      +                          1 channel D");
 15282  002510  0E16               	movlw	low STR_137
 15283  002512  0100               	movlb	0	; () banked
 15284  002514  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15285  002516  0EFF               	movlw	high STR_137
 15286  002518  0100               	movlb	0	; () banked
 15287  00251A  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15288  00251C  0EB0               	movlw	low STR_138
 15289  00251E  0100               	movlb	0	; () banked
 15290  002520  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15291  002522  0EF2               	movlw	high STR_138
 15292  002524  0100               	movlb	0	; () banked
 15293  002526  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15294  002528  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15295                           
 15296                           ;Bluetooth.c: 1270: UARTcommandMenu("RF set 1,E", "Sets Remote button to send RF Config 
      +                          1 channel E");
 15297  00252C  0E2C               	movlw	low STR_139
 15298  00252E  0100               	movlb	0	; () banked
 15299  002530  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15300  002532  0EFF               	movlw	high STR_139
 15301  002534  0100               	movlb	0	; () banked
 15302  002536  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15303  002538  0E12               	movlw	low STR_140
 15304  00253A  0100               	movlb	0	; () banked
 15305  00253C  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15306  00253E  0EF3               	movlw	high STR_140
 15307  002540  0100               	movlb	0	; () banked
 15308  002542  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15309  002544  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15310                           
 15311                           ;Bluetooth.c: 1271: UARTcommandMenu("RF set 1,F", "Sets Remote button to send RF Config 
      +                          1 channel F");
 15312  002548  0E37               	movlw	low STR_141
 15313  00254A  0100               	movlb	0	; () banked
 15314  00254C  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15315  00254E  0EFF               	movlw	high STR_141
 15316  002550  0100               	movlb	0	; () banked
 15317  002552  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15318  002554  0E43               	movlw	low STR_142
 15319  002556  0100               	movlb	0	; () banked
 15320  002558  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15321  00255A  0EF3               	movlw	high STR_142
 15322  00255C  0100               	movlb	0	; () banked
 15323  00255E  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15324  002560  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15325                           
 15326                           ;Bluetooth.c: 1272: UARTcommandMenu("RF set 2,B", "Sets Remote button to send RF Config 
      +                          2 channel B");
 15327  002564  0E0B               	movlw	low STR_143
 15328  002566  0100               	movlb	0	; () banked
 15329  002568  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15330  00256A  0EFF               	movlw	high STR_143
 15331  00256C  0100               	movlb	0	; () banked
 15332  00256E  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15333  002570  0E7F               	movlw	low STR_144
 15334  002572  0100               	movlb	0	; () banked
 15335  002574  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15336  002576  0EF2               	movlw	high STR_144
 15337  002578  0100               	movlb	0	; () banked
 15338  00257A  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15339  00257C  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15340                           
 15341                           ;Bluetooth.c: 1273: UARTcommandMenu("RF set 2,D", "Sets Remote button to send RF Config 
      +                          2 channel D");
 15342  002580  0E21               	movlw	low STR_145
 15343  002582  0100               	movlb	0	; () banked
 15344  002584  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15345  002586  0EFF               	movlw	high STR_145
 15346  002588  0100               	movlb	0	; () banked
 15347  00258A  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15348  00258C  0EE1               	movlw	low STR_146
 15349  00258E  0100               	movlb	0	; () banked
 15350  002590  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15351  002592  0EF2               	movlw	high STR_146
 15352  002594  0100               	movlb	0	; () banked
 15353  002596  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15354  002598  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15355                           
 15356                           ;Bluetooth.c: 1274: UARTcommandMenu("RF set 2,H", "Sets Remote button to send RF Config 
      +                          2 channel H");
 15357  00259C  0E42               	movlw	low STR_147
 15358  00259E  0100               	movlb	0	; () banked
 15359  0025A0  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15360  0025A2  0EFF               	movlw	high STR_147
 15361  0025A4  0100               	movlb	0	; () banked
 15362  0025A6  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15363  0025A8  0E74               	movlw	low STR_148
 15364  0025AA  0100               	movlb	0	; () banked
 15365  0025AC  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15366  0025AE  0EF3               	movlw	high STR_148
 15367  0025B0  0100               	movlb	0	; () banked
 15368  0025B2  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15369  0025B4  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15370                           
 15371                           ;Bluetooth.c: 1275: UARTcommandMenu("RF clear 1,D", "Clears saved Button for RF Config 1
      +                           channel D");
 15372  0025B8  0EB2               	movlw	low STR_149
 15373  0025BA  0100               	movlb	0	; () banked
 15374  0025BC  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15375  0025BE  0EFE               	movlw	high STR_149
 15376  0025C0  0100               	movlb	0	; () banked
 15377  0025C2  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15378  0025C4  0E30               	movlw	low STR_150
 15379  0025C6  0100               	movlb	0	; () banked
 15380  0025C8  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15381  0025CA  0EF4               	movlw	high STR_150
 15382  0025CC  0100               	movlb	0	; () banked
 15383  0025CE  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15384  0025D0  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15385                           
 15386                           ;Bluetooth.c: 1276: UARTcommandMenu("RF clear 1,E", "Clears saved Button for RF Config 1
      +                           channel E");
 15387  0025D4  0ECC               	movlw	low STR_151
 15388  0025D6  0100               	movlb	0	; () banked
 15389  0025D8  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15390  0025DA  0EFE               	movlw	high STR_151
 15391  0025DC  0100               	movlb	0	; () banked
 15392  0025DE  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15393  0025E0  0E8C               	movlw	low STR_152
 15394  0025E2  0100               	movlb	0	; () banked
 15395  0025E4  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15396  0025E6  0EF4               	movlw	high STR_152
 15397  0025E8  0100               	movlb	0	; () banked
 15398  0025EA  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15399  0025EC  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15400                           
 15401                           ;Bluetooth.c: 1277: UARTcommandMenu("RF clear 1,F", "Clears saved Button for RF Config 1
      +                           channel F");
 15402  0025F0  0ED9               	movlw	low STR_153
 15403  0025F2  0100               	movlb	0	; () banked
 15404  0025F4  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15405  0025F6  0EFE               	movlw	high STR_153
 15406  0025F8  0100               	movlb	0	; () banked
 15407  0025FA  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15408  0025FC  0EBA               	movlw	low STR_154
 15409  0025FE  0100               	movlb	0	; () banked
 15410  002600  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15411  002602  0EF4               	movlw	high STR_154
 15412  002604  0100               	movlb	0	; () banked
 15413  002606  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15414  002608  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15415                           
 15416                           ;Bluetooth.c: 1278: UARTcommandMenu("RF clear 2,B", "Clears saved Button for RF Config 2
      +                           channel B");
 15417  00260C  0EA5               	movlw	low STR_155
 15418  00260E  0100               	movlb	0	; () banked
 15419  002610  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15420  002612  0EFE               	movlw	high STR_155
 15421  002614  0100               	movlb	0	; () banked
 15422  002616  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15423  002618  0E02               	movlw	low STR_156
 15424  00261A  0100               	movlb	0	; () banked
 15425  00261C  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15426  00261E  0EF4               	movlw	high STR_156
 15427  002620  0100               	movlb	0	; () banked
 15428  002622  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15429  002624  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15430                           
 15431                           ;Bluetooth.c: 1279: UARTcommandMenu("RF clear 2,D", "Clears saved Button for RF Config 2
      +                           channel D");
 15432  002628  0EBF               	movlw	low STR_157
 15433  00262A  0100               	movlb	0	; () banked
 15434  00262C  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15435  00262E  0EFE               	movlw	high STR_157
 15436  002630  0100               	movlb	0	; () banked
 15437  002632  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15438  002634  0E5E               	movlw	low STR_158
 15439  002636  0100               	movlb	0	; () banked
 15440  002638  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15441  00263A  0EF4               	movlw	high STR_158
 15442  00263C  0100               	movlb	0	; () banked
 15443  00263E  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15444  002640  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15445                           
 15446                           ;Bluetooth.c: 1280: UARTcommandMenu("RF clear 2,H", "Clears saved Button for RF Config 2
      +                           channel H");
 15447  002644  0EE6               	movlw	low STR_159
 15448  002646  0100               	movlb	0	; () banked
 15449  002648  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15450  00264A  0EFE               	movlw	high STR_159
 15451  00264C  0100               	movlb	0	; () banked
 15452  00264E  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15453  002650  0EE8               	movlw	low STR_160
 15454  002652  0100               	movlb	0	; () banked
 15455  002654  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15456  002656  0EF4               	movlw	high STR_160
 15457  002658  0100               	movlb	0	; () banked
 15458  00265A  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15459  00265C  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15460                           
 15461                           ;Bluetooth.c: 1281: UARTcommandMenu("NEC?", "NEC description for Arbitrary code send");
 15462  002660  0ED1               	movlw	low STR_161
 15463  002662  0100               	movlb	0	; () banked
 15464  002664  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15465  002666  0EFF               	movlw	high STR_161
 15466  002668  0100               	movlb	0	; () banked
 15467  00266A  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15468  00266C  0EA1               	movlw	low STR_162
 15469  00266E  0100               	movlb	0	; () banked
 15470  002670  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15471  002672  0EF6               	movlw	high STR_162
 15472  002674  0100               	movlb	0	; () banked
 15473  002676  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15474  002678  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15475                           
 15476                           ;Bluetooth.c: 1282: UARTstring_CONST(CRLN);
 15477  00267C  0E51               	movlw	low _CRLN
 15478  00267E  0100               	movlb	0	; () banked
 15479  002680  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15480  002682  0EF0               	movlw	high _CRLN
 15481  002684  0100               	movlb	0	; () banked
 15482  002686  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15483  002688  EC42  F053         	call	_UARTstring_CONST	;wreg free
 15484                           
 15485                           ;Bluetooth.c: 1283: UARTstringCRLN_CONST("RF commands:");
 15486  00268C  0E8B               	movlw	low STR_163
 15487  00268E  0100               	movlb	0	; () banked
 15488  002690  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 15489  002692  0EFE               	movlw	high STR_163
 15490  002694  0100               	movlb	0	; () banked
 15491  002696  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 15492  002698  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 15493                           
 15494                           ;Bluetooth.c: 1284: UARTcommandMenu(Conf1_ChannelD_STR, "RFK100LC Channel D");
 15495  00269C  0ED8               	movlw	low _Conf1_ChannelD_STR
 15496  00269E  0100               	movlb	0	; () banked
 15497  0026A0  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15498  0026A2  0EEF               	movlw	high _Conf1_ChannelD_STR
 15499  0026A4  0100               	movlb	0	; () banked
 15500  0026A6  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15501  0026A8  0E46               	movlw	low STR_164
 15502  0026AA  0100               	movlb	0	; () banked
 15503  0026AC  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15504  0026AE  0EFD               	movlw	high STR_164
 15505  0026B0  0100               	movlb	0	; () banked
 15506  0026B2  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15507  0026B4  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15508                           
 15509                           ;Bluetooth.c: 1285: UARTcommandMenu(Conf1_ChannelE_STR, "RFK100LC Channel E");
 15510  0026B8  0EE7               	movlw	low _Conf1_ChannelE_STR
 15511  0026BA  0100               	movlb	0	; () banked
 15512  0026BC  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15513  0026BE  0EEF               	movlw	high _Conf1_ChannelE_STR
 15514  0026C0  0100               	movlb	0	; () banked
 15515  0026C2  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15516  0026C4  0E59               	movlw	low STR_165
 15517  0026C6  0100               	movlb	0	; () banked
 15518  0026C8  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15519  0026CA  0EFD               	movlw	high STR_165
 15520  0026CC  0100               	movlb	0	; () banked
 15521  0026CE  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15522  0026D0  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15523                           
 15524                           ;Bluetooth.c: 1286: UARTcommandMenu(Conf1_ChannelF_STR, "RFK100LC Channel F");
 15525  0026D4  0EF6               	movlw	low _Conf1_ChannelF_STR
 15526  0026D6  0100               	movlb	0	; () banked
 15527  0026D8  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15528  0026DA  0EEF               	movlw	high _Conf1_ChannelF_STR
 15529  0026DC  0100               	movlb	0	; () banked
 15530  0026DE  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15531  0026E0  0E6C               	movlw	low STR_166
 15532  0026E2  0100               	movlb	0	; () banked
 15533  0026E4  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15534  0026E6  0EFD               	movlw	high STR_166
 15535  0026E8  0100               	movlb	0	; () banked
 15536  0026EA  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15537  0026EC  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15538                           
 15539                           ;Bluetooth.c: 1287: UARTcommandMenu(Conf2_ChannelB_ON_STR, "RFK306LC Channel B ON");
 15540  0026F0  0E14               	movlw	low _Conf2_ChannelB_ON_STR
 15541  0026F2  0100               	movlb	0	; () banked
 15542  0026F4  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15543  0026F6  0EEF               	movlw	high _Conf2_ChannelB_ON_STR
 15544  0026F8  0100               	movlb	0	; () banked
 15545  0026FA  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15546  0026FC  0E0D               	movlw	low STR_167
 15547  0026FE  0100               	movlb	0	; () banked
 15548  002700  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15549  002702  0EFC               	movlw	high STR_167
 15550  002704  0100               	movlb	0	; () banked
 15551  002706  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15552  002708  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15553                           
 15554                           ;Bluetooth.c: 1288: UARTcommandMenu(Conf2_ChannelB_OFF_STR, "RFK306LC Channel B OFF");
 15555  00270C  0EEE               	movlw	low _Conf2_ChannelB_OFF_STR
 15556  00270E  0100               	movlb	0	; () banked
 15557  002710  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15558  002712  0EEE               	movlw	high _Conf2_ChannelB_OFF_STR
 15559  002714  0100               	movlb	0	; () banked
 15560  002716  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15561  002718  0EDF               	movlw	low STR_168
 15562  00271A  0100               	movlb	0	; () banked
 15563  00271C  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15564  00271E  0EFB               	movlw	high STR_168
 15565  002720  0100               	movlb	0	; () banked
 15566  002722  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15567  002724  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15568                           
 15569                           ;Bluetooth.c: 1289: UARTcommandMenu(Conf2_ChannelD_ON_STR, "TR009 Channel D ON");
 15570  002728  0E26               	movlw	low _Conf2_ChannelD_ON_STR
 15571  00272A  0100               	movlb	0	; () banked
 15572  00272C  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15573  00272E  0EEF               	movlw	high _Conf2_ChannelD_ON_STR
 15574  002730  0100               	movlb	0	; () banked
 15575  002732  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15576  002734  0E7F               	movlw	low STR_169
 15577  002736  0100               	movlb	0	; () banked
 15578  002738  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15579  00273A  0EFD               	movlw	high STR_169
 15580  00273C  0100               	movlb	0	; () banked
 15581  00273E  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15582  002740  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15583                           
 15584                           ;Bluetooth.c: 1290: UARTcommandMenu(Conf2_ChannelD_OFF_STR, "TR009 Channel D OFF");
 15585  002744  0E01               	movlw	low _Conf2_ChannelD_OFF_STR
 15586  002746  0100               	movlb	0	; () banked
 15587  002748  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15588  00274A  0EEF               	movlw	high _Conf2_ChannelD_OFF_STR
 15589  00274C  0100               	movlb	0	; () banked
 15590  00274E  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15591  002750  0EF6               	movlw	low STR_170
 15592  002752  0100               	movlb	0	; () banked
 15593  002754  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15594  002756  0EFC               	movlw	high STR_170
 15595  002758  0100               	movlb	0	; () banked
 15596  00275A  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15597  00275C  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15598                           
 15599                           ;Bluetooth.c: 1291: UARTcommandMenu(Conf2_ChannelH_1_ON_STR, "RC-015*3 Channel H device 
      +                          1 ON");
 15600  002760  0EB2               	movlw	low _Conf2_ChannelH_1_ON_STR
 15601  002762  0100               	movlb	0	; () banked
 15602  002764  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15603  002766  0EEE               	movlw	high _Conf2_ChannelH_1_ON_STR
 15604  002768  0100               	movlb	0	; () banked
 15605  00276A  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15606  00276C  0E4D               	movlw	low STR_171
 15607  00276E  0100               	movlb	0	; () banked
 15608  002770  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15609  002772  0EF9               	movlw	high STR_171
 15610  002774  0100               	movlb	0	; () banked
 15611  002776  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15612  002778  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15613                           
 15614                           ;Bluetooth.c: 1292: UARTcommandMenu(Conf2_ChannelH_1_OFF_STR, "RC-015*3 Channel H device
      +                           1 OFF");
 15615  00277C  0E73               	movlw	low _Conf2_ChannelH_1_OFF_STR
 15616  00277E  0100               	movlb	0	; () banked
 15617  002780  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15618  002782  0EEE               	movlw	high _Conf2_ChannelH_1_OFF_STR
 15619  002784  0100               	movlb	0	; () banked
 15620  002786  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15621  002788  0E4F               	movlw	low STR_172
 15622  00278A  0100               	movlb	0	; () banked
 15623  00278C  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15624  00278E  0EF8               	movlw	high STR_172
 15625  002790  0100               	movlb	0	; () banked
 15626  002792  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15627  002794  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15628                           
 15629                           ;Bluetooth.c: 1293: UARTcommandMenu(Conf2_ChannelH_2_ON_STR, "RC-015*3 Channel H device 
      +                          2 ON");
 15630  002798  0EC6               	movlw	low _Conf2_ChannelH_2_ON_STR
 15631  00279A  0100               	movlb	0	; () banked
 15632  00279C  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15633  00279E  0EEE               	movlw	high _Conf2_ChannelH_2_ON_STR
 15634  0027A0  0100               	movlb	0	; () banked
 15635  0027A2  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15636  0027A4  0E6C               	movlw	low STR_173
 15637  0027A6  0100               	movlb	0	; () banked
 15638  0027A8  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15639  0027AA  0EF9               	movlw	high STR_173
 15640  0027AC  0100               	movlb	0	; () banked
 15641  0027AE  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15642  0027B0  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15643                           
 15644                           ;Bluetooth.c: 1294: UARTcommandMenu(Conf2_ChannelH_2_OFF_STR, "RC-015*3 Channel H device
      +                           2 OFF");
 15645  0027B4  0E88               	movlw	low _Conf2_ChannelH_2_OFF_STR
 15646  0027B6  0100               	movlb	0	; () banked
 15647  0027B8  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15648  0027BA  0EEE               	movlw	high _Conf2_ChannelH_2_OFF_STR
 15649  0027BC  0100               	movlb	0	; () banked
 15650  0027BE  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15651  0027C0  0E6F               	movlw	low STR_174
 15652  0027C2  0100               	movlb	0	; () banked
 15653  0027C4  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15654  0027C6  0EF8               	movlw	high STR_174
 15655  0027C8  0100               	movlb	0	; () banked
 15656  0027CA  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15657  0027CC  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15658                           
 15659                           ;Bluetooth.c: 1295: UARTcommandMenu(Conf2_ChannelH_3_ON_STR, "RC-015*3 Channel H device 
      +                          3 ON");
 15660  0027D0  0EDA               	movlw	low _Conf2_ChannelH_3_ON_STR
 15661  0027D2  0100               	movlb	0	; () banked
 15662  0027D4  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15663  0027D6  0EEE               	movlw	high _Conf2_ChannelH_3_ON_STR
 15664  0027D8  0100               	movlb	0	; () banked
 15665  0027DA  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15666  0027DC  0E8B               	movlw	low STR_175
 15667  0027DE  0100               	movlb	0	; () banked
 15668  0027E0  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15669  0027E2  0EF9               	movlw	high STR_175
 15670  0027E4  0100               	movlb	0	; () banked
 15671  0027E6  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15672  0027E8  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15673                           
 15674                           ;Bluetooth.c: 1296: UARTcommandMenu(Conf2_ChannelH_3_OFF_STR, "RC-015*3 Channel H device
      +                           3 OFF");
 15675  0027EC  0E9D               	movlw	low _Conf2_ChannelH_3_OFF_STR
 15676  0027EE  0100               	movlb	0	; () banked
 15677  0027F0  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15678  0027F2  0EEE               	movlw	high _Conf2_ChannelH_3_OFF_STR
 15679  0027F4  0100               	movlb	0	; () banked
 15680  0027F6  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15681  0027F8  0E8F               	movlw	low STR_176
 15682  0027FA  0100               	movlb	0	; () banked
 15683  0027FC  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15684  0027FE  0EF8               	movlw	high STR_176
 15685  002800  0100               	movlb	0	; () banked
 15686  002802  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15687  002804  EC7D  F044         	call	_UARTcommandMenu	;wreg free
 15688                           
 15689                           ;Bluetooth.c: 1297: UARTstring_CONST(CRLN);
 15690  002808  0E51               	movlw	low _CRLN
 15691  00280A  0100               	movlb	0	; () banked
 15692  00280C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15693  00280E  0EF0               	movlw	high _CRLN
 15694  002810  0100               	movlb	0	; () banked
 15695  002812  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15696  002814  EC42  F053         	call	_UARTstring_CONST	;wreg free
 15697                           
 15698                           ;Bluetooth.c: 1298: }
 15699  002818  0012               	return	
 15700  00281A                     l13426:
 15701                           
 15702                           ;Bluetooth.c: 1299: else
 15703                           ;Bluetooth.c: 1300: {
 15704                           ;Bluetooth.c: 1301: UARTstringCRLN_CONST(SYNTAX_ERR);
 15705  00281A  0E05               	movlw	low _SYNTAX_ERR
 15706  00281C  0100               	movlb	0	; () banked
 15707  00281E  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 15708  002820  0EF0               	movlw	high _SYNTAX_ERR
 15709  002822  0100               	movlb	0	; () banked
 15710  002824  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 15711  002826  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 15712                           
 15713                           ;Bluetooth.c: 1302: UARTstringCRLN_CONST("Enter ??? for Command Menu");
 15714  00282A  0E05               	movlw	low STR_177
 15715  00282C  0100               	movlb	0	; () banked
 15716  00282E  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 15717  002830  0EFB               	movlw	high STR_177
 15718  002832  0100               	movlb	0	; () banked
 15719  002834  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 15720  002836  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 15721                           
 15722                           ;Bluetooth.c: 1303: UARTstring_CONST(CRLN);
 15723  00283A  0E51               	movlw	low _CRLN
 15724  00283C  0100               	movlb	0	; () banked
 15725  00283E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15726  002840  0EF0               	movlw	high _CRLN
 15727  002842  0100               	movlb	0	; () banked
 15728  002844  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15729  002846  EC42  F053         	call	_UARTstring_CONST	;wreg free
 15730                           
 15731                           ;Bluetooth.c: 1304: return 0;
 15732                           ;	Return value of _UseBluetooth is never used
 15733  00284A  0012               	return	
 15734                           
 15735                           ;Bluetooth.c: 1305: }
 15736                           ;Bluetooth.c: 1307: return 0;
 15737                           ;	Return value of _UseBluetooth is never used
 15738  00284C  0012               	return		;funcret
 15739  00284E                     __end_of_UseBluetooth:
 15740                           	opt stack 0
 15741                           tblptru	equ	0xFF8
 15742                           tblptrh	equ	0xFF7
 15743                           tblptrl	equ	0xFF6
 15744                           tablat	equ	0xFF5
 15745                           prodh	equ	0xFF4
 15746                           prodl	equ	0xFF3
 15747                           intcon	equ	0xFF2
 15748                           postinc0	equ	0xFEE
 15749                           plusw0	equ	0xFEB
 15750                           wreg	equ	0xFE8
 15751                           postdec1	equ	0xFE5
 15752                           fsr1l	equ	0xFE1
 15753                           indf2	equ	0xFDF
 15754                           postinc2	equ	0xFDE
 15755                           plusw2	equ	0xFDB
 15756                           fsr2h	equ	0xFDA
 15757                           fsr2l	equ	0xFD9
 15758                           status	equ	0xFD8
 15759                           
 15760 ;; *************** function _lowercaseString *****************
 15761 ;; Defined at:
 15762 ;;		line 406 in file "MISC.c"
 15763 ;; Parameters:    Size  Location     Type
 15764 ;;  Input           2    0[BANK0 ] PTR unsigned char 
 15765 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 15766 ;; Auto vars:     Size  Location     Type
 15767 ;;		None
 15768 ;; Return value:  Size  Location     Type
 15769 ;;		None               void
 15770 ;; Registers used:
 15771 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15772 ;; Tracked objects:
 15773 ;;		On entry : 0/0
 15774 ;;		On exit  : 0/0
 15775 ;;		Unchanged: 0/0
 15776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15777 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15779 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15780 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15781 ;;Total ram usage:        3 bytes
 15782 ;; Hardware stack levels used:    1
 15783 ;; Hardware stack levels required when called:    5
 15784 ;; This function calls:
 15785 ;;		Nothing
 15786 ;; This function is called by:
 15787 ;;		_UseBluetooth
 15788 ;; This function uses a non-reentrant model
 15789 ;;
 15790                           
 15791                           	psect	text6
 15792  00A406                     __ptext6:
 15793                           	opt stack 0
 15794  00A406                     _lowercaseString:
 15795                           	opt stack 24
 15796                           
 15797                           ;MISC.c: 408: while((*Input != 0))
 15798                           
 15799                           ;incstack = 0
 15800  00A406  D019               	goto	l11552
 15801  00A408                     l11544:
 15802                           
 15803                           ;MISC.c: 409: {
 15804                           ;MISC.c: 410: if((*Input >= 65) && (*Input <= 90 ))
 15805  00A408  C060  FFD9         	movff	lowercaseString@Input,fsr2l
 15806  00A40C  C061  FFDA         	movff	lowercaseString@Input+1,fsr2h
 15807  00A410  0E40               	movlw	64
 15808  00A412  64DF               	cpfsgt	indf2,c
 15809  00A414  D00E               	goto	l11550
 15810  00A416  C060  FFD9         	movff	lowercaseString@Input,fsr2l
 15811  00A41A  C061  FFDA         	movff	lowercaseString@Input+1,fsr2h
 15812  00A41E  0E5B               	movlw	91
 15813  00A420  60DF               	cpfslt	indf2,c
 15814  00A422  D007               	goto	l11550
 15815                           
 15816                           ;MISC.c: 411: {
 15817                           ;MISC.c: 412: *Input += 32;
 15818  00A424  C060  FFD9         	movff	lowercaseString@Input,fsr2l
 15819  00A428  C061  FFDA         	movff	lowercaseString@Input+1,fsr2h
 15820  00A42C  0E20               	movlw	32
 15821  00A42E  26DF               	addwf	indf2,f,c
 15822  00A430  D000               	goto	l11550
 15823  00A432                     l11550:
 15824                           
 15825                           ;MISC.c: 413: }
 15826                           ;MISC.c: 414: Input++;
 15827  00A432  0100               	movlb	0	; () banked
 15828  00A434  4B60               	infsnz	lowercaseString@Input& (0+255),f,b
 15829  00A436  2B61               	incf	(lowercaseString@Input+1)& (0+255),f,b
 15830  00A438  D000               	goto	l11552
 15831  00A43A                     l11552:
 15832  00A43A  C060  FFD9         	movff	lowercaseString@Input,fsr2l
 15833  00A43E  C061  FFDA         	movff	lowercaseString@Input+1,fsr2h
 15834  00A442  50DF               	movf	indf2,w,c
 15835  00A444  A4D8               	btfss	status,2,c
 15836  00A446  D7E0               	goto	l11544
 15837  00A448  0012               	return		;funcret
 15838  00A44A                     __end_of_lowercaseString:
 15839                           	opt stack 0
 15840                           tblptru	equ	0xFF8
 15841                           tblptrh	equ	0xFF7
 15842                           tblptrl	equ	0xFF6
 15843                           tablat	equ	0xFF5
 15844                           prodh	equ	0xFF4
 15845                           prodl	equ	0xFF3
 15846                           intcon	equ	0xFF2
 15847                           postinc0	equ	0xFEE
 15848                           plusw0	equ	0xFEB
 15849                           wreg	equ	0xFE8
 15850                           postdec1	equ	0xFE5
 15851                           fsr1l	equ	0xFE1
 15852                           indf2	equ	0xFDF
 15853                           postinc2	equ	0xFDE
 15854                           plusw2	equ	0xFDB
 15855                           fsr2h	equ	0xFDA
 15856                           fsr2l	equ	0xFD9
 15857                           status	equ	0xFD8
 15858                           
 15859 ;; *************** function _WaitForIRsignal *****************
 15860 ;; Defined at:
 15861 ;;		line 1315 in file "Bluetooth.c"
 15862 ;; Parameters:    Size  Location     Type
 15863 ;;		None
 15864 ;; Auto vars:     Size  Location     Type
 15865 ;;  timeout         1    9[BANK0 ] unsigned char 
 15866 ;; Return value:  Size  Location     Type
 15867 ;;                  1    wreg      unsigned char 
 15868 ;; Registers used:
 15869 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15870 ;; Tracked objects:
 15871 ;;		On entry : 0/0
 15872 ;;		On exit  : 0/0
 15873 ;;		Unchanged: 0/0
 15874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15876 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15878 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15879 ;;Total ram usage:        1 bytes
 15880 ;; Hardware stack levels used:    1
 15881 ;; Hardware stack levels required when called:    8
 15882 ;; This function calls:
 15883 ;;		_LEDTimerON
 15884 ;;		_UARTchar_CONST
 15885 ;;		_UARTstringCRLN_CONST
 15886 ;;		_UARTstring_CONST
 15887 ;;		_delayUS
 15888 ;; This function is called by:
 15889 ;;		_UseBluetooth
 15890 ;; This function uses a non-reentrant model
 15891 ;;
 15892                           
 15893                           	psect	text7
 15894  009CA4                     __ptext7:
 15895                           	opt stack 0
 15896  009CA4                     _WaitForIRsignal:
 15897                           	opt stack 21
 15898                           
 15899                           ;Bluetooth.c: 1317: unsigned char timeout = 0;
 15900                           
 15901                           ;incstack = 0
 15902  009CA4  0E00               	movlw	0
 15903  009CA6  0100               	movlb	0	; () banked
 15904  009CA8  6F69               	movwf	WaitForIRsignal@timeout& (0+255),b
 15905                           
 15906                           ; BSR set to: 0
 15907                           ;Bluetooth.c: 1319: UARTstring_CONST(CRLN);
 15908  009CAA  0E51               	movlw	low _CRLN
 15909  009CAC  0100               	movlb	0	; () banked
 15910  009CAE  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15911  009CB0  0EF0               	movlw	high _CRLN
 15912  009CB2  0100               	movlb	0	; () banked
 15913  009CB4  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15914  009CB6  EC42  F053         	call	_UARTstring_CONST	;wreg free
 15915                           
 15916                           ;Bluetooth.c: 1320: UARTstring_CONST("Press Remote Control button");
 15917  009CBA  0EB3               	movlw	low STR_178
 15918  009CBC  0100               	movlb	0	; () banked
 15919  009CBE  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15920  009CC0  0EFA               	movlw	high STR_178
 15921  009CC2  0100               	movlb	0	; () banked
 15922  009CC4  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15923  009CC6  EC42  F053         	call	_UARTstring_CONST	;wreg free
 15924                           
 15925                           ;Bluetooth.c: 1321: timeout = 0;
 15926  009CCA  0E00               	movlw	0
 15927  009CCC  0100               	movlb	0	; () banked
 15928  009CCE  6F69               	movwf	WaitForIRsignal@timeout& (0+255),b
 15929                           
 15930                           ;Bluetooth.c: 1322: while(IR_New_Code != 1)
 15931  009CD0  D027               	goto	l12240
 15932  009CD2                     l12226:
 15933                           
 15934                           ;Bluetooth.c: 1323: {
 15935                           ;Bluetooth.c: 1324: UARTchar_CONST('.');
 15936  009CD2  0E2E               	movlw	46
 15937  009CD4  EC1E  F054         	call	_UARTchar_CONST
 15938                           
 15939                           ;Bluetooth.c: 1325: delayUS(300000);
 15940  009CD8  0EE0               	movlw	224
 15941  009CDA  0100               	movlb	0	; () banked
 15942  009CDC  6F60               	movwf	delayUS@US& (0+255),b
 15943  009CDE  0E93               	movlw	147
 15944  009CE0  6F61               	movwf	(delayUS@US+1)& (0+255),b
 15945  009CE2  0E04               	movlw	4
 15946  009CE4  6F62               	movwf	(delayUS@US+2)& (0+255),b
 15947  009CE6  0E00               	movlw	0
 15948  009CE8  6F63               	movwf	(delayUS@US+3)& (0+255),b
 15949  009CEA  EC3F  F051         	call	_delayUS	;wreg free
 15950                           
 15951                           ;Bluetooth.c: 1326: timeout++;
 15952  009CEE  0100               	movlb	0	; () banked
 15953  009CF0  2B69               	incf	WaitForIRsignal@timeout& (0+255),f,b
 15954                           
 15955                           ; BSR set to: 0
 15956                           ;Bluetooth.c: 1327: if(timeout > 25)
 15957  009CF2  0E19               	movlw	25
 15958  009CF4  0100               	movlb	0	; () banked
 15959  009CF6  6569               	cpfsgt	WaitForIRsignal@timeout& (0+255),b
 15960  009CF8  D013               	goto	l12240
 15961                           
 15962                           ; BSR set to: 0
 15963                           ;Bluetooth.c: 1328: {
 15964                           ;Bluetooth.c: 1329: UARTstring_CONST(CRLN);
 15965  009CFA  0E51               	movlw	low _CRLN
 15966  009CFC  0100               	movlb	0	; () banked
 15967  009CFE  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15968  009D00  0EF0               	movlw	high _CRLN
 15969  009D02  0100               	movlb	0	; () banked
 15970  009D04  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15971  009D06  EC42  F053         	call	_UARTstring_CONST	;wreg free
 15972                           
 15973                           ;Bluetooth.c: 1330: UARTstringCRLN_CONST("Error: No remote button was pressed");
 15974  009D0A  0E5E               	movlw	low STR_179
 15975  009D0C  0100               	movlb	0	; () banked
 15976  009D0E  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 15977  009D10  0EF7               	movlw	high STR_179
 15978  009D12  0100               	movlb	0	; () banked
 15979  009D14  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 15980  009D16  EC25  F052         	call	_UARTstringCRLN_CONST	;wreg free
 15981                           
 15982                           ;Bluetooth.c: 1331: return 0;
 15983  009D1A  0E00               	movlw	0
 15984  009D1C  0012               	return	
 15985  009D1E  D000               	goto	l12240
 15986  009D20                     l12240:
 15987  009D20  0103               	movlb	3	; () banked
 15988  009D22  05F0               	decf	_IR_New_Code& (0+255),w,b
 15989  009D24  A4D8               	btfss	status,2,c
 15990  009D26  D7D5               	goto	l12226
 15991                           
 15992                           ; BSR set to: 3
 15993                           ;Bluetooth.c: 1332: }
 15994                           ;Bluetooth.c: 1333: }
 15995                           ;Bluetooth.c: 1334: (LATC |= 0x04);
 15996                           
 15997                           ; BSR set to: 3
 15998  009D28  848B               	bsf	3979,2,c	;volatile
 15999                           
 16000                           ; BSR set to: 3
 16001                           ;Bluetooth.c: 1335: LEDTimerON();
 16002  009D2A  ECB0  F054         	call	_LEDTimerON	;wreg free
 16003                           
 16004                           ;Bluetooth.c: 1336: return 1;
 16005  009D2E  0E01               	movlw	1
 16006  009D30  0012               	return	
 16007  009D32  0012               	return		;funcret
 16008  009D34                     __end_of_WaitForIRsignal:
 16009                           	opt stack 0
 16010                           tblptru	equ	0xFF8
 16011                           tblptrh	equ	0xFF7
 16012                           tblptrl	equ	0xFF6
 16013                           tablat	equ	0xFF5
 16014                           prodh	equ	0xFF4
 16015                           prodl	equ	0xFF3
 16016                           intcon	equ	0xFF2
 16017                           postinc0	equ	0xFEE
 16018                           plusw0	equ	0xFEB
 16019                           wreg	equ	0xFE8
 16020                           postdec1	equ	0xFE5
 16021                           fsr1l	equ	0xFE1
 16022                           indf2	equ	0xFDF
 16023                           postinc2	equ	0xFDE
 16024                           plusw2	equ	0xFDB
 16025                           fsr2h	equ	0xFDA
 16026                           fsr2l	equ	0xFD9
 16027                           status	equ	0xFD8
 16028                           
 16029 ;; *************** function _UARTstringCRLN_CONST *****************
 16030 ;; Defined at:
 16031 ;;		line 314 in file "UART.c"
 16032 ;; Parameters:    Size  Location     Type
 16033 ;;  data            2    4[BANK0 ] PTR const unsigned char 
 16034 ;;		 -> STR_179(36), STR_177(27), STR_163(13), STR_132(13), 
 16035 ;;		 -> STR_129(21), STR_118(17), STR_114(5), STR_111(23), 
 16036 ;;		 -> STR_110(29), STR_105(57), STR_104(64), STR_103(41), 
 16037 ;;		 -> STR_102(53), STR_101(57), STR_99(57), STR_96(24), 
 16038 ;;		 -> STR_95(34), STR_94(44), STR_93(18), STR_91(44), 
 16039 ;;		 -> STR_90(46), STR_87(46), STR_84(29), STR_83(18), 
 16040 ;;		 -> STR_82(29), STR_79(44), STR_74(46), STR_73(42), 
 16041 ;;		 -> STR_72(50), STR_71(50), STR_69(31), STR_68(31), 
 16042 ;;		 -> STR_67(37), STR_66(37), STR_65(37), STR_61(18), 
 16043 ;;		 -> STR_60(14), STR_59(9), STR_58(20), STR_57(16), 
 16044 ;;		 -> STR_56(7), STR_55(35), STR_54(37), STR_51(47), 
 16045 ;;		 -> STR_46(17), STR_45(9), STR_44(18), STR_43(9), 
 16046 ;;		 -> STR_42(22), STR_41(11), STR_40(20), STR_39(7), 
 16047 ;;		 -> STR_38(31), STR_36(33), STR_32(32), STR_28(31), 
 16048 ;;		 -> STR_27(31), STR_25(29), STR_23(29), SYNTAX_ERR(14), 
 16049 ;;		 -> STR_3(16), STR_2(24), ProjectName(26), 
 16050 ;; Auto vars:     Size  Location     Type
 16051 ;;		None
 16052 ;; Return value:  Size  Location     Type
 16053 ;;		None               void
 16054 ;; Registers used:
 16055 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16056 ;; Tracked objects:
 16057 ;;		On entry : 0/0
 16058 ;;		On exit  : 0/0
 16059 ;;		Unchanged: 0/0
 16060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16061 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16064 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16065 ;;Total ram usage:        2 bytes
 16066 ;; Hardware stack levels used:    1
 16067 ;; Hardware stack levels required when called:    7
 16068 ;; This function calls:
 16069 ;;		_UARTchar_CONST
 16070 ;;		_UARTstring_CONST
 16071 ;; This function is called by:
 16072 ;;		_main
 16073 ;;		_UseBluetooth
 16074 ;;		_WaitForIRsignal
 16075 ;; This function uses a non-reentrant model
 16076 ;;
 16077                           
 16078                           	psect	text8
 16079  00A44A                     __ptext8:
 16080                           	opt stack 0
 16081  00A44A                     _UARTstringCRLN_CONST:
 16082                           	opt stack 21
 16083                           
 16084                           ;UART.c: 316: while(*data != 0)
 16085                           
 16086                           ;incstack = 0
 16087  00A44A  D00D               	goto	l10570
 16088  00A44C                     l10566:
 16089                           
 16090                           ;UART.c: 317: {
 16091                           ;UART.c: 318: UARTchar_CONST(*data);
 16092  00A44C  C064  FFF6         	movff	UARTstringCRLN_CONST@data,tblptrl
 16093  00A450  C065  FFF7         	movff	UARTstringCRLN_CONST@data+1,tblptrh
 16094  00A454                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16095  00A454  6AF8               	clrf	tblptru,c
 16096  00A456                     	endif
 16097  00A456                     	if	0	;tblptru may be non-zero
 16098  00A456                     	endif
 16099  00A456  0008               	tblrd		*
 16100  00A458  50F5               	movf	tablat,w,c
 16101  00A45A  EC1E  F054         	call	_UARTchar_CONST
 16102                           
 16103                           ;UART.c: 319: *data++;
 16104  00A45E  0100               	movlb	0	; () banked
 16105  00A460  4B64               	infsnz	UARTstringCRLN_CONST@data& (0+255),f,b
 16106  00A462  2B65               	incf	(UARTstringCRLN_CONST@data+1)& (0+255),f,b
 16107  00A464  D000               	goto	l10570
 16108  00A466                     l10570:
 16109  00A466  C064  FFF6         	movff	UARTstringCRLN_CONST@data,tblptrl
 16110  00A46A  C065  FFF7         	movff	UARTstringCRLN_CONST@data+1,tblptrh
 16111  00A46E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16112  00A46E  6AF8               	clrf	tblptru,c
 16113  00A470                     	endif
 16114  00A470                     	if	0	;tblptru may be non-zero
 16115  00A470                     	endif
 16116  00A470  0008               	tblrd		*
 16117  00A472  50F5               	movf	tablat,w,c
 16118  00A474  0900               	iorlw	0
 16119  00A476  A4D8               	btfss	status,2,c
 16120  00A478  D7E9               	goto	l10566
 16121                           
 16122                           ;UART.c: 320: }
 16123                           ;UART.c: 321: UARTstring_CONST(CRLN);
 16124  00A47A  0E51               	movlw	low _CRLN
 16125  00A47C  0100               	movlb	0	; () banked
 16126  00A47E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 16127  00A480  0EF0               	movlw	high _CRLN
 16128  00A482  0100               	movlb	0	; () banked
 16129  00A484  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 16130  00A486  EC42  F053         	call	_UARTstring_CONST	;wreg free
 16131  00A48A  0012               	return		;funcret
 16132  00A48C                     __end_of_UARTstringCRLN_CONST:
 16133                           	opt stack 0
 16134                           tblptru	equ	0xFF8
 16135                           tblptrh	equ	0xFF7
 16136                           tblptrl	equ	0xFF6
 16137                           tablat	equ	0xFF5
 16138                           prodh	equ	0xFF4
 16139                           prodl	equ	0xFF3
 16140                           intcon	equ	0xFF2
 16141                           postinc0	equ	0xFEE
 16142                           plusw0	equ	0xFEB
 16143                           wreg	equ	0xFE8
 16144                           postdec1	equ	0xFE5
 16145                           fsr1l	equ	0xFE1
 16146                           indf2	equ	0xFDF
 16147                           postinc2	equ	0xFDE
 16148                           plusw2	equ	0xFDB
 16149                           fsr2h	equ	0xFDA
 16150                           fsr2l	equ	0xFD9
 16151                           status	equ	0xFD8
 16152                           
 16153 ;; *************** function _UARTstringCRLN *****************
 16154 ;; Defined at:
 16155 ;;		line 298 in file "UART.c"
 16156 ;; Parameters:    Size  Location     Type
 16157 ;;  data            2    4[BANK0 ] PTR unsigned char 
 16158 ;;		 -> UseBluetooth@buf(100), BluetoothFirmware2(30), BluetoothFirmware1(30), main@buf(100), 
 16159 ;; Auto vars:     Size  Location     Type
 16160 ;;		None
 16161 ;; Return value:  Size  Location     Type
 16162 ;;		None               void
 16163 ;; Registers used:
 16164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16165 ;; Tracked objects:
 16166 ;;		On entry : 0/0
 16167 ;;		On exit  : 0/0
 16168 ;;		Unchanged: 0/0
 16169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16170 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16173 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16174 ;;Total ram usage:        2 bytes
 16175 ;; Hardware stack levels used:    1
 16176 ;; Hardware stack levels required when called:    7
 16177 ;; This function calls:
 16178 ;;		_UARTchar
 16179 ;;		_UARTstring_CONST
 16180 ;; This function is called by:
 16181 ;;		_main
 16182 ;;		_UseBluetooth
 16183 ;; This function uses a non-reentrant model
 16184 ;;
 16185                           
 16186                           	psect	text9
 16187  00A546                     __ptext9:
 16188                           	opt stack 0
 16189  00A546                     _UARTstringCRLN:
 16190                           	opt stack 22
 16191                           
 16192                           ;UART.c: 300: while(*data != 0)
 16193                           
 16194                           ;incstack = 0
 16195  00A546  D00B               	goto	l11240
 16196  00A548                     l11236:
 16197                           
 16198                           ;UART.c: 301: {
 16199                           ;UART.c: 302: UARTchar(*data);
 16200  00A548  C064  FFD9         	movff	UARTstringCRLN@data,fsr2l
 16201  00A54C  C065  FFDA         	movff	UARTstringCRLN@data+1,fsr2h
 16202  00A550  50DF               	movf	indf2,w,c
 16203  00A552  EC3D  F054         	call	_UARTchar
 16204                           
 16205                           ;UART.c: 303: *data++;
 16206  00A556  0100               	movlb	0	; () banked
 16207  00A558  4B64               	infsnz	UARTstringCRLN@data& (0+255),f,b
 16208  00A55A  2B65               	incf	(UARTstringCRLN@data+1)& (0+255),f,b
 16209  00A55C  D000               	goto	l11240
 16210  00A55E                     l11240:
 16211  00A55E  C064  FFD9         	movff	UARTstringCRLN@data,fsr2l
 16212  00A562  C065  FFDA         	movff	UARTstringCRLN@data+1,fsr2h
 16213  00A566  50DF               	movf	indf2,w,c
 16214  00A568  A4D8               	btfss	status,2,c
 16215  00A56A  D7EE               	goto	l11236
 16216                           
 16217                           ;UART.c: 304: }
 16218                           ;UART.c: 305: UARTstring_CONST(CRLN);
 16219  00A56C  0E51               	movlw	low _CRLN
 16220  00A56E  0100               	movlb	0	; () banked
 16221  00A570  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 16222  00A572  0EF0               	movlw	high _CRLN
 16223  00A574  0100               	movlb	0	; () banked
 16224  00A576  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 16225  00A578  EC42  F053         	call	_UARTstring_CONST	;wreg free
 16226  00A57C  0012               	return		;funcret
 16227  00A57E                     __end_of_UARTstringCRLN:
 16228                           	opt stack 0
 16229                           tblptru	equ	0xFF8
 16230                           tblptrh	equ	0xFF7
 16231                           tblptrl	equ	0xFF6
 16232                           tablat	equ	0xFF5
 16233                           prodh	equ	0xFF4
 16234                           prodl	equ	0xFF3
 16235                           intcon	equ	0xFF2
 16236                           postinc0	equ	0xFEE
 16237                           plusw0	equ	0xFEB
 16238                           wreg	equ	0xFE8
 16239                           postdec1	equ	0xFE5
 16240                           fsr1l	equ	0xFE1
 16241                           indf2	equ	0xFDF
 16242                           postinc2	equ	0xFDE
 16243                           plusw2	equ	0xFDB
 16244                           fsr2h	equ	0xFDA
 16245                           fsr2l	equ	0xFD9
 16246                           status	equ	0xFD8
 16247                           
 16248 ;; *************** function _UARTcommandMenu *****************
 16249 ;; Defined at:
 16250 ;;		line 330 in file "UART.c"
 16251 ;; Parameters:    Size  Location     Type
 16252 ;;  Command         2    4[BANK0 ] PTR const unsigned char 
 16253 ;;		 -> STR_161(5), STR_159(13), STR_157(13), STR_155(13), 
 16254 ;;		 -> STR_153(13), STR_151(13), STR_149(13), STR_147(11), 
 16255 ;;		 -> STR_145(11), STR_143(11), STR_141(11), STR_139(11), 
 16256 ;;		 -> STR_137(11), STR_130(8), STR_127(22), STR_125(10), 
 16257 ;;		 -> STR_123(8), STR_121(6), STR_119(4), Conf2_ChannelH_3_OFF_STR(21), 
 16258 ;;		 -> Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), Conf2_ChannelH_2_ON_STR(20), Conf2_ChannelH_1_OFF_STR
      +(21), 
 16259 ;;		 -> Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(19), Conf2_ChannelD_ON_STR(18), Conf2_ChannelB_OFF_STR(19), 
 16260 ;;		 -> Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), Conf1_ChannelE_STR(15), Conf1_ChannelD_STR(15), 
 16261 ;;		 -> UseBluetooth@buf(100), 
 16262 ;;  Desc            2    6[BANK0 ] PTR const unsigned char 
 16263 ;;		 -> STR_176(32), STR_175(31), STR_174(32), STR_173(31), 
 16264 ;;		 -> STR_172(32), STR_171(31), STR_170(20), STR_169(19), 
 16265 ;;		 -> STR_168(23), STR_167(22), STR_166(19), STR_165(19), 
 16266 ;;		 -> STR_164(19), STR_162(40), STR_160(46), STR_158(46), 
 16267 ;;		 -> STR_156(46), STR_154(46), STR_152(46), STR_150(46), 
 16268 ;;		 -> STR_148(49), STR_146(49), STR_144(49), STR_142(49), 
 16269 ;;		 -> STR_140(49), STR_138(49), STR_136(24), STR_134(25), 
 16270 ;;		 -> STR_131(28), STR_128(33), STR_126(22), STR_124(35), 
 16271 ;;		 -> STR_122(32), STR_120(10), 
 16272 ;; Auto vars:     Size  Location     Type
 16273 ;;  place           1   14[BANK0 ] unsigned char 
 16274 ;;  i               1   13[BANK0 ] unsigned char 
 16275 ;; Return value:  Size  Location     Type
 16276 ;;		None               void
 16277 ;; Registers used:
 16278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16279 ;; Tracked objects:
 16280 ;;		On entry : 0/0
 16281 ;;		On exit  : 0/0
 16282 ;;		Unchanged: 0/0
 16283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16284 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16285 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16286 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16287 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16288 ;;Total ram usage:       11 bytes
 16289 ;; Hardware stack levels used:    1
 16290 ;; Hardware stack levels required when called:    7
 16291 ;; This function calls:
 16292 ;;		_UARTchar
 16293 ;;		_UARTstring_CONST
 16294 ;; This function is called by:
 16295 ;;		_UseBluetooth
 16296 ;; This function uses a non-reentrant model
 16297 ;;
 16298                           
 16299                           	psect	text10
 16300  0088FA                     __ptext10:
 16301                           	opt stack 0
 16302  0088FA                     _UARTcommandMenu:
 16303                           	opt stack 22
 16304                           
 16305                           ;UART.c: 332: unsigned char place = 0;
 16306                           
 16307                           ;incstack = 0
 16308  0088FA  0E00               	movlw	0
 16309  0088FC  0100               	movlb	0	; () banked
 16310  0088FE  6F6E               	movwf	UARTcommandMenu@place& (0+255),b
 16311                           
 16312                           ;UART.c: 333: unsigned char i;
 16313                           ;UART.c: 335: while((*Command != 0) && (place < 30))
 16314  008900  D019               	goto	l12028
 16315  008902                     l12022:
 16316                           
 16317                           ; BSR set to: 0
 16318                           ;UART.c: 336: {
 16319                           ;UART.c: 337: UARTchar(*Command);
 16320  008902  C064  FFF6         	movff	UARTcommandMenu@Command,tblptrl
 16321  008906  C065  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
 16322  00890A  0E00               	movlw	low (__mediumconst shr (0+16))
 16323  00890C  6EF8               	movwf	tblptru,c
 16324  00890E  0E0F               	movlw	(high __ramtop+-1)
 16325  008910  64F7               	cpfsgt	tblptrh,c
 16326  008912  D003               	bra	u13547
 16327  008914  0008               	tblrd		*
 16328  008916  50F5               	movf	tablat,w,c
 16329  008918  D005               	bra	u13540
 16330  00891A                     u13547:
 16331  00891A  CFF6 FFE9          	movff	tblptrl,fsr0l
 16332  00891E  CFF7 FFEA          	movff	tblptrh,fsr0h
 16333  008922  50EF               	movf	indf0,w,c
 16334  008924                     u13540:
 16335  008924  EC3D  F054         	call	_UARTchar
 16336                           
 16337                           ;UART.c: 338: *Command++;
 16338  008928  0100               	movlb	0	; () banked
 16339  00892A  4B64               	infsnz	UARTcommandMenu@Command& (0+255),f,b
 16340  00892C  2B65               	incf	(UARTcommandMenu@Command+1)& (0+255),f,b
 16341                           
 16342                           ; BSR set to: 0
 16343                           ;UART.c: 339: place++;
 16344  00892E  0100               	movlb	0	; () banked
 16345  008930  2B6E               	incf	UARTcommandMenu@place& (0+255),f,b
 16346  008932  D000               	goto	l12028
 16347  008934                     l12028:
 16348                           
 16349                           ; BSR set to: 0
 16350  008934  C064  FFF6         	movff	UARTcommandMenu@Command,tblptrl
 16351  008938  C065  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
 16352  00893C  0E00               	movlw	low (__mediumconst shr (0+16))
 16353  00893E  6EF8               	movwf	tblptru,c
 16354  008940  0E0F               	movlw	(high __ramtop+-1)
 16355  008942  64F7               	cpfsgt	tblptrh,c
 16356  008944  D003               	bra	u13557
 16357  008946  0008               	tblrd		*
 16358  008948  50F5               	movf	tablat,w,c
 16359  00894A  D005               	bra	u13550
 16360  00894C                     u13557:
 16361  00894C  CFF6 FFE9          	movff	tblptrl,fsr0l
 16362  008950  CFF7 FFEA          	movff	tblptrh,fsr0h
 16363  008954  50EF               	movf	indf0,w,c
 16364  008956                     u13550:
 16365  008956  0900               	iorlw	0
 16366  008958  B4D8               	btfsc	status,2,c
 16367  00895A  D005               	goto	l12032
 16368  00895C  0E1D               	movlw	29
 16369  00895E  0100               	movlb	0	; () banked
 16370  008960  656E               	cpfsgt	UARTcommandMenu@place& (0+255),b
 16371  008962  D7CF               	goto	l12022
 16372                           
 16373                           ; BSR set to: 0
 16374  008964  D000               	goto	l12032
 16375  008966                     l12032:
 16376                           
 16377                           ;UART.c: 340: }
 16378                           ;UART.c: 341: for(i =0; i < ((30 - place) + 1); i++)
 16379  008966  0E00               	movlw	0
 16380  008968  0100               	movlb	0	; () banked
 16381  00896A  6F6D               	movwf	UARTcommandMenu@i& (0+255),b
 16382  00896C  D006               	goto	l12038
 16383  00896E                     l12034:
 16384                           
 16385                           ; BSR set to: 0
 16386                           ;UART.c: 342: {
 16387                           ;UART.c: 343: UARTchar('-');
 16388  00896E  0E2D               	movlw	45
 16389  008970  EC3D  F054         	call	_UARTchar
 16390  008974  0100               	movlb	0	; () banked
 16391  008976  2B6D               	incf	UARTcommandMenu@i& (0+255),f,b
 16392  008978  D000               	goto	l12038
 16393  00897A                     l12038:
 16394                           
 16395                           ; BSR set to: 0
 16396  00897A  0100               	movlb	0	; () banked
 16397  00897C  516E               	movf	UARTcommandMenu@place& (0+255),w,b
 16398  00897E  0100               	movlb	0	; () banked
 16399  008980  6F68               	movwf	??_UARTcommandMenu& (0+255),b
 16400  008982  6B69               	clrf	(??_UARTcommandMenu+1)& (0+255),b
 16401  008984  0100               	movlb	0	; () banked
 16402  008986  1F68               	comf	??_UARTcommandMenu& (0+255),f,b
 16403  008988  1F69               	comf	(??_UARTcommandMenu+1)& (0+255),f,b
 16404  00898A  4B68               	infsnz	??_UARTcommandMenu& (0+255),f,b
 16405  00898C  2B69               	incf	(??_UARTcommandMenu+1)& (0+255),f,b
 16406  00898E  0E1F               	movlw	31
 16407  008990  0100               	movlb	0	; () banked
 16408  008992  2768               	addwf	??_UARTcommandMenu& (0+255),f,b
 16409  008994  0E00               	movlw	0
 16410  008996  2369               	addwfc	(??_UARTcommandMenu+1)& (0+255),f,b
 16411  008998  0100               	movlb	0	; () banked
 16412  00899A  516D               	movf	UARTcommandMenu@i& (0+255),w,b
 16413  00899C  0100               	movlb	0	; () banked
 16414  00899E  6F6A               	movwf	(??_UARTcommandMenu+2)& (0+255),b
 16415  0089A0  6B6B               	clrf	(??_UARTcommandMenu+3)& (0+255),b
 16416  0089A2  0100               	movlb	0	; () banked
 16417  0089A4  5168               	movf	??_UARTcommandMenu& (0+255),w,b
 16418  0089A6  0100               	movlb	0	; () banked
 16419  0089A8  5D6A               	subwf	(??_UARTcommandMenu+2)& (0+255),w,b
 16420  0089AA  0100               	movlb	0	; () banked
 16421  0089AC  516B               	movf	(??_UARTcommandMenu+3)& (0+255),w,b
 16422  0089AE  0A80               	xorlw	128
 16423  0089B0  0100               	movlb	0	; () banked
 16424  0089B2  6F6C               	movwf	(??_UARTcommandMenu+4)& (0+255),b
 16425  0089B4  0100               	movlb	0	; () banked
 16426  0089B6  5169               	movf	(??_UARTcommandMenu+1)& (0+255),w,b
 16427  0089B8  0A80               	xorlw	128
 16428  0089BA  0100               	movlb	0	; () banked
 16429  0089BC  596C               	subwfb	(??_UARTcommandMenu+4)& (0+255),w,b
 16430  0089BE  A0D8               	btfss	status,0,c
 16431  0089C0  D7D6               	goto	l12034
 16432                           
 16433                           ; BSR set to: 0
 16434                           ;UART.c: 344: }
 16435                           ;UART.c: 345: place = 0;
 16436                           
 16437                           ; BSR set to: 0
 16438  0089C2  0E00               	movlw	0
 16439  0089C4  0100               	movlb	0	; () banked
 16440  0089C6  6F6E               	movwf	UARTcommandMenu@place& (0+255),b
 16441                           
 16442                           ;UART.c: 346: while((*Desc != 0) && (place < (50 - 1)))
 16443  0089C8  D00F               	goto	l12048
 16444  0089CA                     l12042:
 16445                           
 16446                           ; BSR set to: 0
 16447                           ;UART.c: 347: {
 16448                           ;UART.c: 348: UARTchar(*Desc);
 16449  0089CA  C066  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
 16450  0089CE  C067  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
 16451  0089D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16452  0089D2  6AF8               	clrf	tblptru,c
 16453  0089D4                     	endif
 16454  0089D4                     	if	0	;tblptru may be non-zero
 16455  0089D4                     	endif
 16456  0089D4  0008               	tblrd		*
 16457  0089D6  50F5               	movf	tablat,w,c
 16458  0089D8  EC3D  F054         	call	_UARTchar
 16459                           
 16460                           ;UART.c: 349: *Desc++;
 16461  0089DC  0100               	movlb	0	; () banked
 16462  0089DE  4B66               	infsnz	UARTcommandMenu@Desc& (0+255),f,b
 16463  0089E0  2B67               	incf	(UARTcommandMenu@Desc+1)& (0+255),f,b
 16464                           
 16465                           ; BSR set to: 0
 16466                           ;UART.c: 350: place++;
 16467  0089E2  0100               	movlb	0	; () banked
 16468  0089E4  2B6E               	incf	UARTcommandMenu@place& (0+255),f,b
 16469  0089E6  D000               	goto	l12048
 16470  0089E8                     l12048:
 16471                           
 16472                           ; BSR set to: 0
 16473  0089E8  C066  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
 16474  0089EC  C067  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
 16475  0089F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16476  0089F0  6AF8               	clrf	tblptru,c
 16477  0089F2                     	endif
 16478  0089F2                     	if	0	;tblptru may be non-zero
 16479  0089F2                     	endif
 16480  0089F2  0008               	tblrd		*
 16481  0089F4  50F5               	movf	tablat,w,c
 16482  0089F6  0900               	iorlw	0
 16483  0089F8  B4D8               	btfsc	status,2,c
 16484  0089FA  D005               	goto	l12052
 16485                           
 16486                           ; BSR set to: 0
 16487  0089FC  0E30               	movlw	48
 16488  0089FE  0100               	movlb	0	; () banked
 16489  008A00  656E               	cpfsgt	UARTcommandMenu@place& (0+255),b
 16490  008A02  D7E3               	goto	l12042
 16491                           
 16492                           ; BSR set to: 0
 16493  008A04  D000               	goto	l12052
 16494  008A06                     l12052:
 16495                           
 16496                           ; BSR set to: 0
 16497                           ;UART.c: 351: }
 16498                           ;UART.c: 352: UARTstring_CONST(CRLN);
 16499  008A06  0E51               	movlw	low _CRLN
 16500  008A08  0100               	movlb	0	; () banked
 16501  008A0A  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 16502  008A0C  0EF0               	movlw	high _CRLN
 16503  008A0E  0100               	movlb	0	; () banked
 16504  008A10  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 16505  008A12  EC42  F053         	call	_UARTstring_CONST	;wreg free
 16506  008A16  0012               	return		;funcret
 16507  008A18                     __end_of_UARTcommandMenu:
 16508                           	opt stack 0
 16509                           tblptru	equ	0xFF8
 16510                           tblptrh	equ	0xFF7
 16511                           tblptrl	equ	0xFF6
 16512                           tablat	equ	0xFF5
 16513                           prodh	equ	0xFF4
 16514                           prodl	equ	0xFF3
 16515                           intcon	equ	0xFF2
 16516                           indf0	equ	0xFEF
 16517                           postinc0	equ	0xFEE
 16518                           plusw0	equ	0xFEB
 16519                           fsr0h	equ	0xFEA
 16520                           fsr0l	equ	0xFE9
 16521                           wreg	equ	0xFE8
 16522                           postdec1	equ	0xFE5
 16523                           fsr1l	equ	0xFE1
 16524                           indf2	equ	0xFDF
 16525                           postinc2	equ	0xFDE
 16526                           plusw2	equ	0xFDB
 16527                           fsr2h	equ	0xFDA
 16528                           fsr2l	equ	0xFD9
 16529                           status	equ	0xFD8
 16530                           
 16531 ;; *************** function _StringMatchCaseInsensitive *****************
 16532 ;; Defined at:
 16533 ;;		line 267 in file "MISC.c"
 16534 ;; Parameters:    Size  Location     Type
 16535 ;;  This            2    3[BANK0 ] PTR const unsigned char 
 16536 ;;		 -> main@BluetoothString(100), 
 16537 ;;  That            2    5[BANK0 ] PTR const unsigned char 
 16538 ;;		 -> STR_108(8), STR_106(8), STR_97(22), STR_85(10), 
 16539 ;;		 -> STR_80(6), Conf2_ChannelH_3_OFF_STR(21), Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), 
 16540 ;;		 -> Conf2_ChannelH_2_ON_STR(20), Conf2_ChannelH_1_OFF_STR(21), Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(1
      +9), 
 16541 ;;		 -> Conf2_ChannelD_ON_STR(18), Conf2_ChannelB_OFF_STR(19), Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), 
 16542 ;;		 -> Conf1_ChannelE_STR(15), Conf1_ChannelD_STR(15), 
 16543 ;; Auto vars:     Size  Location     Type
 16544 ;;  tempThat        1    8[BANK0 ] unsigned char 
 16545 ;;  tempThis        1    7[BANK0 ] unsigned char 
 16546 ;; Return value:  Size  Location     Type
 16547 ;;                  1    wreg      unsigned char 
 16548 ;; Registers used:
 16549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16550 ;; Tracked objects:
 16551 ;;		On entry : 0/0
 16552 ;;		On exit  : 0/0
 16553 ;;		Unchanged: 0/0
 16554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16555 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16556 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16558 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16559 ;;Total ram usage:        6 bytes
 16560 ;; Hardware stack levels used:    1
 16561 ;; Hardware stack levels required when called:    6
 16562 ;; This function calls:
 16563 ;;		_lowercaseChar
 16564 ;; This function is called by:
 16565 ;;		_UseBluetooth
 16566 ;; This function uses a non-reentrant model
 16567 ;;
 16568                           
 16569                           	psect	text11
 16570  009C10                     __ptext11:
 16571                           	opt stack 0
 16572  009C10                     _StringMatchCaseInsensitive:
 16573                           	opt stack 23
 16574                           
 16575                           ;MISC.c: 269: unsigned char tempThis,
 16576                           ;MISC.c: 270: tempThat;
 16577                           ;MISC.c: 272: while(*This != 0)
 16578                           
 16579                           ;incstack = 0
 16580  009C10  D033               	goto	l11528
 16581  009C12                     l11510:
 16582                           
 16583                           ;MISC.c: 273: {
 16584                           ;MISC.c: 274: tempThis = *This;
 16585  009C12  C063  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
 16586  009C16  C064  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
 16587  009C1A  50DF               	movf	indf2,w,c
 16588  009C1C  0100               	movlb	0	; () banked
 16589  009C1E  6F67               	movwf	StringMatchCaseInsensitive@tempThis& (0+255),b
 16590                           
 16591                           ; BSR set to: 0
 16592                           ;MISC.c: 275: tempThat = *That;
 16593  009C20  C065  FFF6         	movff	StringMatchCaseInsensitive@That,tblptrl
 16594  009C24  C066  FFF7         	movff	StringMatchCaseInsensitive@That+1,tblptrh
 16595  009C28                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16596  009C28  6AF8               	clrf	tblptru,c
 16597  009C2A                     	endif
 16598  009C2A                     	if	0	;tblptru may be non-zero
 16599  009C2A                     	endif
 16600  009C2A  0008               	tblrd		*
 16601  009C2C  CFF5 F068          	movff	tablat,StringMatchCaseInsensitive@tempThat
 16602                           
 16603                           ; BSR set to: 0
 16604                           ;MISC.c: 276: lowercaseChar(&tempThis);
 16605  009C30  0E67               	movlw	low StringMatchCaseInsensitive@tempThis
 16606  009C32  0100               	movlb	0	; () banked
 16607  009C34  6F60               	movwf	lowercaseChar@Input& (0+255),b
 16608  009C36  0E00               	movlw	high StringMatchCaseInsensitive@tempThis
 16609  009C38  0100               	movlb	0	; () banked
 16610  009C3A  6F61               	movwf	(lowercaseChar@Input+1)& (0+255),b
 16611  009C3C  ECB8  F053         	call	_lowercaseChar	;wreg free
 16612                           
 16613                           ;MISC.c: 277: lowercaseChar(&tempThat);
 16614  009C40  0E68               	movlw	low StringMatchCaseInsensitive@tempThat
 16615  009C42  0100               	movlb	0	; () banked
 16616  009C44  6F60               	movwf	lowercaseChar@Input& (0+255),b
 16617  009C46  0E00               	movlw	high StringMatchCaseInsensitive@tempThat
 16618  009C48  0100               	movlb	0	; () banked
 16619  009C4A  6F61               	movwf	(lowercaseChar@Input+1)& (0+255),b
 16620  009C4C  ECB8  F053         	call	_lowercaseChar	;wreg free
 16621                           
 16622                           ;MISC.c: 279: if((tempThis != tempThat) || (tempThat == 0))
 16623  009C50  0100               	movlb	0	; () banked
 16624  009C52  5168               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
 16625  009C54  0100               	movlb	0	; () banked
 16626  009C56  1967               	xorwf	StringMatchCaseInsensitive@tempThis& (0+255),w,b
 16627  009C58  A4D8               	btfss	status,2,c
 16628  009C5A  D005               	goto	l11522
 16629                           
 16630                           ; BSR set to: 0
 16631  009C5C  0100               	movlb	0	; () banked
 16632  009C5E  5168               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
 16633  009C60  0100               	movlb	0	; () banked
 16634  009C62  A4D8               	btfss	status,2,c
 16635  009C64  D002               	goto	l11526
 16636  009C66                     l11522:
 16637                           
 16638                           ; BSR set to: 0
 16639                           ;MISC.c: 280: {
 16640                           ;MISC.c: 281: return 0;
 16641  009C66  0E00               	movlw	0
 16642                           
 16643                           ; BSR set to: 0
 16644  009C68  0012               	return	
 16645  009C6A                     l11526:
 16646                           
 16647                           ; BSR set to: 0
 16648                           ;MISC.c: 282: }
 16649                           ;MISC.c: 283: This++;
 16650  009C6A  0100               	movlb	0	; () banked
 16651  009C6C  4B63               	infsnz	StringMatchCaseInsensitive@This& (0+255),f,b
 16652  009C6E  2B64               	incf	(StringMatchCaseInsensitive@This+1)& (0+255),f,b
 16653                           
 16654                           ;MISC.c: 284: That++;
 16655  009C70  0100               	movlb	0	; () banked
 16656  009C72  4B65               	infsnz	StringMatchCaseInsensitive@That& (0+255),f,b
 16657  009C74  2B66               	incf	(StringMatchCaseInsensitive@That+1)& (0+255),f,b
 16658  009C76  D000               	goto	l11528
 16659  009C78                     l11528:
 16660  009C78  C063  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
 16661  009C7C  C064  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
 16662  009C80  50DF               	movf	indf2,w,c
 16663  009C82  A4D8               	btfss	status,2,c
 16664  009C84  D7C6               	goto	l11510
 16665                           
 16666                           ;MISC.c: 285: }
 16667                           ;MISC.c: 286: if(*That == 0)
 16668  009C86  C065  FFF6         	movff	StringMatchCaseInsensitive@That,tblptrl
 16669  009C8A  C066  FFF7         	movff	StringMatchCaseInsensitive@That+1,tblptrh
 16670  009C8E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16671  009C8E  6AF8               	clrf	tblptru,c
 16672  009C90                     	endif
 16673  009C90                     	if	0	;tblptru may be non-zero
 16674  009C90                     	endif
 16675  009C90  0008               	tblrd		*
 16676  009C92  50F5               	movf	tablat,w,c
 16677  009C94  0900               	iorlw	0
 16678  009C96  A4D8               	btfss	status,2,c
 16679  009C98  D002               	goto	l11538
 16680                           
 16681                           ;MISC.c: 287: {
 16682                           ;MISC.c: 288: return 1;
 16683  009C9A  0E01               	movlw	1
 16684                           
 16685                           ;MISC.c: 289: }
 16686  009C9C  0012               	return	
 16687  009C9E                     l11538:
 16688                           
 16689                           ;MISC.c: 290: else
 16690                           ;MISC.c: 291: {
 16691                           ;MISC.c: 292: return 0;
 16692  009C9E  0E00               	movlw	0
 16693  009CA0  0012               	return	
 16694  009CA2  0012               	return		;funcret
 16695  009CA4                     __end_of_StringMatchCaseInsensitive:
 16696                           	opt stack 0
 16697                           tblptru	equ	0xFF8
 16698                           tblptrh	equ	0xFF7
 16699                           tblptrl	equ	0xFF6
 16700                           tablat	equ	0xFF5
 16701                           prodh	equ	0xFF4
 16702                           prodl	equ	0xFF3
 16703                           intcon	equ	0xFF2
 16704                           indf0	equ	0xFEF
 16705                           postinc0	equ	0xFEE
 16706                           plusw0	equ	0xFEB
 16707                           fsr0h	equ	0xFEA
 16708                           fsr0l	equ	0xFE9
 16709                           wreg	equ	0xFE8
 16710                           postdec1	equ	0xFE5
 16711                           fsr1l	equ	0xFE1
 16712                           indf2	equ	0xFDF
 16713                           postinc2	equ	0xFDE
 16714                           plusw2	equ	0xFDB
 16715                           fsr2h	equ	0xFDA
 16716                           fsr2l	equ	0xFD9
 16717                           status	equ	0xFD8
 16718                           
 16719 ;; *************** function _StringMatch *****************
 16720 ;; Defined at:
 16721 ;;		line 240 in file "MISC.c"
 16722 ;; Parameters:    Size  Location     Type
 16723 ;;  This            2    0[BANK0 ] PTR const unsigned char 
 16724 ;;		 -> ReceivedString(100), main@BluetoothString(100), 
 16725 ;;  That            2    2[BANK0 ] PTR const unsigned char 
 16726 ;;		 -> STR_116(4), STR_88(5), 
 16727 ;; Auto vars:     Size  Location     Type
 16728 ;;		None
 16729 ;; Return value:  Size  Location     Type
 16730 ;;                  1    wreg      unsigned char 
 16731 ;; Registers used:
 16732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16733 ;; Tracked objects:
 16734 ;;		On entry : 0/0
 16735 ;;		On exit  : 0/0
 16736 ;;		Unchanged: 0/0
 16737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16738 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16740 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16741 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16742 ;;Total ram usage:        5 bytes
 16743 ;; Hardware stack levels used:    1
 16744 ;; Hardware stack levels required when called:    5
 16745 ;; This function calls:
 16746 ;;		Nothing
 16747 ;; This function is called by:
 16748 ;;		_UseBluetooth
 16749 ;; This function uses a non-reentrant model
 16750 ;;
 16751                           
 16752                           	psect	text12
 16753  009FBE                     __ptext12:
 16754                           	opt stack 0
 16755  009FBE                     _StringMatch:
 16756                           	opt stack 24
 16757                           
 16758                           ;MISC.c: 242: while(*This != 0)
 16759                           
 16760                           ;incstack = 0
 16761  009FBE  D025               	goto	l11494
 16762  009FC0                     l11484:
 16763                           
 16764                           ;MISC.c: 243: {
 16765                           ;MISC.c: 244: if(*This != *That || *That == 0)
 16766  009FC0  C060  FFD9         	movff	StringMatch@This,fsr2l
 16767  009FC4  C061  FFDA         	movff	StringMatch@This+1,fsr2h
 16768  009FC8  50DF               	movf	indf2,w,c
 16769  009FCA  0100               	movlb	0	; () banked
 16770  009FCC  6F64               	movwf	??_StringMatch& (0+255),b
 16771  009FCE  C062  FFF6         	movff	StringMatch@That,tblptrl
 16772  009FD2  C063  FFF7         	movff	StringMatch@That+1,tblptrh
 16773  009FD6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16774  009FD6  6AF8               	clrf	tblptru,c
 16775  009FD8                     	endif
 16776  009FD8                     	if	0	;tblptru may be non-zero
 16777  009FD8                     	endif
 16778  009FD8  0008               	tblrd		*
 16779  009FDA  50F5               	movf	tablat,w,c
 16780  009FDC  0100               	movlb	0	; () banked
 16781  009FDE  1964               	xorwf	??_StringMatch& (0+255),w,b
 16782  009FE0  A4D8               	btfss	status,2,c
 16783  009FE2  D00A               	goto	l11488
 16784                           
 16785                           ; BSR set to: 0
 16786  009FE4  C062  FFF6         	movff	StringMatch@That,tblptrl
 16787  009FE8  C063  FFF7         	movff	StringMatch@That+1,tblptrh
 16788  009FEC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16789  009FEC  6AF8               	clrf	tblptru,c
 16790  009FEE                     	endif
 16791  009FEE                     	if	0	;tblptru may be non-zero
 16792  009FEE                     	endif
 16793  009FEE  0008               	tblrd		*
 16794  009FF0  50F5               	movf	tablat,w,c
 16795  009FF2  0900               	iorlw	0
 16796  009FF4  A4D8               	btfss	status,2,c
 16797  009FF6  D002               	goto	l11492
 16798  009FF8                     l11488:
 16799                           
 16800                           ; BSR set to: 0
 16801                           ;MISC.c: 245: {
 16802                           ;MISC.c: 246: return 0;
 16803  009FF8  0E00               	movlw	0
 16804                           
 16805                           ; BSR set to: 0
 16806  009FFA  0012               	return	
 16807  009FFC                     l11492:
 16808                           
 16809                           ; BSR set to: 0
 16810                           ;MISC.c: 247: }
 16811                           ;MISC.c: 248: This++;
 16812  009FFC  0100               	movlb	0	; () banked
 16813  009FFE  4B60               	infsnz	StringMatch@This& (0+255),f,b
 16814  00A000  2B61               	incf	(StringMatch@This+1)& (0+255),f,b
 16815                           
 16816                           ;MISC.c: 249: That++;
 16817  00A002  0100               	movlb	0	; () banked
 16818  00A004  4B62               	infsnz	StringMatch@That& (0+255),f,b
 16819  00A006  2B63               	incf	(StringMatch@That+1)& (0+255),f,b
 16820  00A008  D000               	goto	l11494
 16821  00A00A                     l11494:
 16822  00A00A  C060  FFD9         	movff	StringMatch@This,fsr2l
 16823  00A00E  C061  FFDA         	movff	StringMatch@This+1,fsr2h
 16824  00A012  50DF               	movf	indf2,w,c
 16825  00A014  A4D8               	btfss	status,2,c
 16826  00A016  D7D4               	goto	l11484
 16827                           
 16828                           ;MISC.c: 250: }
 16829                           ;MISC.c: 251: if(*That == 0)
 16830  00A018  C062  FFF6         	movff	StringMatch@That,tblptrl
 16831  00A01C  C063  FFF7         	movff	StringMatch@That+1,tblptrh
 16832  00A020                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16833  00A020  6AF8               	clrf	tblptru,c
 16834  00A022                     	endif
 16835  00A022                     	if	0	;tblptru may be non-zero
 16836  00A022                     	endif
 16837  00A022  0008               	tblrd		*
 16838  00A024  50F5               	movf	tablat,w,c
 16839  00A026  0900               	iorlw	0
 16840  00A028  A4D8               	btfss	status,2,c
 16841  00A02A  D002               	goto	l11504
 16842                           
 16843                           ;MISC.c: 252: {
 16844                           ;MISC.c: 253: return 1;
 16845  00A02C  0E01               	movlw	1
 16846                           
 16847                           ;MISC.c: 254: }
 16848  00A02E  0012               	return	
 16849  00A030                     l11504:
 16850                           
 16851                           ;MISC.c: 255: else
 16852                           ;MISC.c: 256: {
 16853                           ;MISC.c: 257: return 0;
 16854  00A030  0E00               	movlw	0
 16855  00A032  0012               	return	
 16856  00A034  0012               	return		;funcret
 16857  00A036                     __end_of_StringMatch:
 16858                           	opt stack 0
 16859                           tblptru	equ	0xFF8
 16860                           tblptrh	equ	0xFF7
 16861                           tblptrl	equ	0xFF6
 16862                           tablat	equ	0xFF5
 16863                           prodh	equ	0xFF4
 16864                           prodl	equ	0xFF3
 16865                           intcon	equ	0xFF2
 16866                           indf0	equ	0xFEF
 16867                           postinc0	equ	0xFEE
 16868                           plusw0	equ	0xFEB
 16869                           fsr0h	equ	0xFEA
 16870                           fsr0l	equ	0xFE9
 16871                           wreg	equ	0xFE8
 16872                           postdec1	equ	0xFE5
 16873                           fsr1l	equ	0xFE1
 16874                           indf2	equ	0xFDF
 16875                           postinc2	equ	0xFDE
 16876                           plusw2	equ	0xFDB
 16877                           fsr2h	equ	0xFDA
 16878                           fsr2l	equ	0xFD9
 16879                           status	equ	0xFD8
 16880                           
 16881 ;; *************** function _StringAddEqual *****************
 16882 ;; Defined at:
 16883 ;;		line 792 in file "MISC.c"
 16884 ;; Parameters:    Size  Location     Type
 16885 ;;  Input           2   15[BANK0 ] PTR unsigned char 
 16886 ;;		 -> ReceivedString(100), main@BluetoothString(100), 
 16887 ;; Auto vars:     Size  Location     Type
 16888 ;;  temp          255    0[BANK1 ] unsigned char [255]
 16889 ;;  j               1   22[BANK0 ] unsigned char 
 16890 ;;  i               1   21[BANK0 ] unsigned char 
 16891 ;;  firstnumber     1   20[BANK0 ] unsigned char 
 16892 ;;  NullPosition    1   19[BANK0 ] unsigned char 
 16893 ;; Return value:  Size  Location     Type
 16894 ;;                  1    wreg      unsigned char 
 16895 ;; Registers used:
 16896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16897 ;; Tracked objects:
 16898 ;;		On entry : 0/0
 16899 ;;		On exit  : 0/0
 16900 ;;		Unchanged: 0/0
 16901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16902 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16903 ;;      Locals:         0       4     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16904 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16905 ;;      Totals:         0       8     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16906 ;;Total ram usage:      263 bytes
 16907 ;; Hardware stack levels used:    1
 16908 ;; Hardware stack levels required when called:    7
 16909 ;; This function calls:
 16910 ;;		_BufferCopy
 16911 ;;		_cleanBuffer
 16912 ;; This function is called by:
 16913 ;;		_UseBluetooth
 16914 ;; This function uses a non-reentrant model
 16915 ;;
 16916                           
 16917                           	psect	text13
 16918  00730C                     __ptext13:
 16919                           	opt stack 0
 16920  00730C                     _StringAddEqual:
 16921                           	opt stack 22
 16922                           
 16923                           ;MISC.c: 794: unsigned char i;
 16924                           ;MISC.c: 795: unsigned char j =0;
 16925                           
 16926                           ;incstack = 0
 16927  00730C  0E00               	movlw	0
 16928  00730E  0100               	movlb	0	; () banked
 16929  007310  6F76               	movwf	StringAddEqual@j& (0+255),b
 16930                           
 16931                           ; BSR set to: 0
 16932                           ;MISC.c: 796: unsigned char firstnumber = 255;
 16933  007312  0100               	movlb	0	; () banked
 16934  007314  6974               	setf	StringAddEqual@firstnumber& (0+255),b
 16935                           
 16936                           ;MISC.c: 797: unsigned char temp[255];
 16937                           ;MISC.c: 798: unsigned char NullPosition;
 16938                           ;MISC.c: 799: for(i = 0; i<255; i++)
 16939  007316  0E00               	movlw	0
 16940  007318  0100               	movlb	0	; () banked
 16941  00731A  6F75               	movwf	StringAddEqual@i& (0+255),b
 16942  00731C                     l11888:
 16943                           
 16944                           ; BSR set to: 0
 16945  00731C  0100               	movlb	0	; () banked
 16946  00731E  2975               	incf	StringAddEqual@i& (0+255),w,b
 16947  007320  B4D8               	btfsc	status,2,c
 16948  007322  D012               	goto	l11900
 16949  007324  D001               	goto	l11892
 16950                           
 16951                           ; BSR set to: 0
 16952  007326  D010               	goto	l11900
 16953  007328                     l11892:
 16954                           
 16955                           ; BSR set to: 0
 16956                           ;MISC.c: 800: {
 16957                           ;MISC.c: 801: if(*Input == 0)
 16958  007328  C06F  FFD9         	movff	StringAddEqual@Input,fsr2l
 16959  00732C  C070  FFDA         	movff	StringAddEqual@Input+1,fsr2h
 16960  007330  50DF               	movf	indf2,w,c
 16961  007332  A4D8               	btfss	status,2,c
 16962  007334  D003               	goto	l11896
 16963                           
 16964                           ; BSR set to: 0
 16965                           ;MISC.c: 802: {
 16966                           ;MISC.c: 803: NullPosition = i;
 16967  007336  C075  F073         	movff	StringAddEqual@i,StringAddEqual@NullPosition
 16968                           
 16969                           ;MISC.c: 804: break;
 16970  00733A  D006               	goto	l11900
 16971  00733C                     l11896:
 16972                           
 16973                           ; BSR set to: 0
 16974                           ;MISC.c: 805: }
 16975                           ;MISC.c: 806: Input++;
 16976  00733C  0100               	movlb	0	; () banked
 16977  00733E  4B6F               	infsnz	StringAddEqual@Input& (0+255),f,b
 16978  007340  2B70               	incf	(StringAddEqual@Input+1)& (0+255),f,b
 16979  007342  0100               	movlb	0	; () banked
 16980  007344  2B75               	incf	StringAddEqual@i& (0+255),f,b
 16981  007346  D7EA               	goto	l11888
 16982  007348                     l11900:
 16983                           
 16984                           ; BSR set to: 0
 16985                           ;MISC.c: 807: }
 16986                           ;MISC.c: 808: Input-=NullPosition;
 16987  007348  0100               	movlb	0	; () banked
 16988  00734A  5173               	movf	StringAddEqual@NullPosition& (0+255),w,b
 16989  00734C  0D01               	mullw	1
 16990  00734E  50F3               	movf	prodl,w,c
 16991  007350  0100               	movlb	0	; () banked
 16992  007352  5F6F               	subwf	StringAddEqual@Input& (0+255),f,b
 16993  007354  50F4               	movf	prodh,w,c
 16994  007356  0100               	movlb	0	; () banked
 16995  007358  5B70               	subwfb	(StringAddEqual@Input+1)& (0+255),f,b
 16996                           
 16997                           ; BSR set to: 0
 16998                           ;MISC.c: 809: cleanBuffer(temp,NullPosition +1);
 16999  00735A  0E00               	movlw	low StringAddEqual@temp
 17000  00735C  0100               	movlb	0	; () banked
 17001  00735E  6F60               	movwf	cleanBuffer@data& (0+255),b
 17002  007360  0E01               	movlw	high StringAddEqual@temp
 17003  007362  0100               	movlb	0	; () banked
 17004  007364  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 17005  007366  0E01               	movlw	1
 17006  007368  0100               	movlb	0	; () banked
 17007  00736A  2573               	addwf	StringAddEqual@NullPosition& (0+255),w,b
 17008  00736C  0100               	movlb	0	; () banked
 17009  00736E  6F62               	movwf	cleanBuffer@count& (0+255),b
 17010  007370  0100               	movlb	0	; () banked
 17011  007372  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 17012  007374  0E00               	movlw	0
 17013  007376  2363               	addwfc	(cleanBuffer@count+1)& (0+255),f,b
 17014  007378  ECE6  F050         	call	_cleanBuffer	;wreg free
 17015                           
 17016                           ;MISC.c: 810: i = 0;
 17017  00737C  0E00               	movlw	0
 17018  00737E  0100               	movlb	0	; () banked
 17019  007380  6F75               	movwf	StringAddEqual@i& (0+255),b
 17020                           
 17021                           ;MISC.c: 811: while(Input[i] != 0)
 17022  007382  D032               	goto	l11914
 17023  007384                     l11906:
 17024                           
 17025                           ; BSR set to: 0
 17026                           ;MISC.c: 812: {
 17027                           ;MISC.c: 813: if(((Input[i] >= 48) && (Input[i] <= 57)) || (Input[i] == '-'))
 17028  007384  0100               	movlb	0	; () banked
 17029  007386  5175               	movf	StringAddEqual@i& (0+255),w,b
 17030  007388  0D01               	mullw	1
 17031  00738A  50F3               	movf	prodl,w,c
 17032  00738C  0100               	movlb	0	; () banked
 17033  00738E  256F               	addwf	StringAddEqual@Input& (0+255),w,b
 17034  007390  6ED9               	movwf	fsr2l,c
 17035  007392  50F4               	movf	prodh,w,c
 17036  007394  0100               	movlb	0	; () banked
 17037  007396  2170               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17038  007398  6EDA               	movwf	fsr2h,c
 17039  00739A  0E2F               	movlw	47
 17040  00739C  64DF               	cpfsgt	indf2,c
 17041  00739E  D00F               	goto	l11910
 17042                           
 17043                           ; BSR set to: 0
 17044  0073A0  0100               	movlb	0	; () banked
 17045  0073A2  5175               	movf	StringAddEqual@i& (0+255),w,b
 17046  0073A4  0D01               	mullw	1
 17047  0073A6  50F3               	movf	prodl,w,c
 17048  0073A8  0100               	movlb	0	; () banked
 17049  0073AA  256F               	addwf	StringAddEqual@Input& (0+255),w,b
 17050  0073AC  6ED9               	movwf	fsr2l,c
 17051  0073AE  50F4               	movf	prodh,w,c
 17052  0073B0  0100               	movlb	0	; () banked
 17053  0073B2  2170               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17054  0073B4  6EDA               	movwf	fsr2h,c
 17055  0073B6  0E39               	movlw	57
 17056  0073B8  64DF               	cpfsgt	indf2,c
 17057  0073BA  D010               	goto	l603
 17058  0073BC  D000               	goto	l11910
 17059  0073BE                     l11910:
 17060                           
 17061                           ; BSR set to: 0
 17062  0073BE  0100               	movlb	0	; () banked
 17063  0073C0  5175               	movf	StringAddEqual@i& (0+255),w,b
 17064  0073C2  0D01               	mullw	1
 17065  0073C4  50F3               	movf	prodl,w,c
 17066  0073C6  0100               	movlb	0	; () banked
 17067  0073C8  256F               	addwf	StringAddEqual@Input& (0+255),w,b
 17068  0073CA  6ED9               	movwf	fsr2l,c
 17069  0073CC  50F4               	movf	prodh,w,c
 17070  0073CE  0100               	movlb	0	; () banked
 17071  0073D0  2170               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17072  0073D2  6EDA               	movwf	fsr2h,c
 17073  0073D4  0E2D               	movlw	45
 17074  0073D6  18DE               	xorwf	postinc2,w,c
 17075  0073D8  A4D8               	btfss	status,2,c
 17076  0073DA  D003               	goto	l11912
 17077  0073DC                     l603:
 17078                           
 17079                           ; BSR set to: 0
 17080                           ;MISC.c: 814: {
 17081                           ;MISC.c: 815: firstnumber = i;
 17082  0073DC  C075  F074         	movff	StringAddEqual@i,StringAddEqual@firstnumber
 17083                           
 17084                           ;MISC.c: 816: break;
 17085  0073E0  D011               	goto	l11916
 17086  0073E2                     l11912:
 17087                           
 17088                           ; BSR set to: 0
 17089                           ;MISC.c: 817: }
 17090                           ;MISC.c: 818: i++;
 17091  0073E2  0100               	movlb	0	; () banked
 17092  0073E4  2B75               	incf	StringAddEqual@i& (0+255),f,b
 17093  0073E6  D000               	goto	l11914
 17094  0073E8                     l11914:
 17095                           
 17096                           ; BSR set to: 0
 17097  0073E8  0100               	movlb	0	; () banked
 17098  0073EA  5175               	movf	StringAddEqual@i& (0+255),w,b
 17099  0073EC  0D01               	mullw	1
 17100  0073EE  50F3               	movf	prodl,w,c
 17101  0073F0  0100               	movlb	0	; () banked
 17102  0073F2  256F               	addwf	StringAddEqual@Input& (0+255),w,b
 17103  0073F4  6ED9               	movwf	fsr2l,c
 17104  0073F6  50F4               	movf	prodh,w,c
 17105  0073F8  0100               	movlb	0	; () banked
 17106  0073FA  2170               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17107  0073FC  6EDA               	movwf	fsr2h,c
 17108  0073FE  50DF               	movf	indf2,w,c
 17109  007400  A4D8               	btfss	status,2,c
 17110  007402  D7C0               	goto	l11906
 17111  007404                     l11916:
 17112                           
 17113                           ; BSR set to: 0
 17114                           ;MISC.c: 819: }
 17115                           ;MISC.c: 820: if(firstnumber == 255)
 17116  007404  0100               	movlb	0	; () banked
 17117  007406  2974               	incf	StringAddEqual@firstnumber& (0+255),w,b
 17118  007408  A4D8               	btfss	status,2,c
 17119  00740A  D002               	goto	l11922
 17120                           
 17121                           ; BSR set to: 0
 17122                           ;MISC.c: 821: {
 17123                           ;MISC.c: 823: return 0;
 17124  00740C  0E00               	movlw	0
 17125                           
 17126                           ; BSR set to: 0
 17127  00740E  0012               	return	
 17128  007410                     l11922:
 17129                           
 17130                           ; BSR set to: 0
 17131                           ;MISC.c: 824: }
 17132                           ;MISC.c: 825: for(j=0;j<firstnumber;j++)
 17133  007410  0E00               	movlw	0
 17134  007412  0100               	movlb	0	; () banked
 17135  007414  6F76               	movwf	StringAddEqual@j& (0+255),b
 17136  007416  D019               	goto	l11928
 17137  007418                     l11924:
 17138                           
 17139                           ; BSR set to: 0
 17140                           ;MISC.c: 826: {
 17141                           ;MISC.c: 827: temp[j] = Input[j];
 17142  007418  0100               	movlb	0	; () banked
 17143  00741A  5176               	movf	StringAddEqual@j& (0+255),w,b
 17144  00741C  0D01               	mullw	1
 17145  00741E  50F3               	movf	prodl,w,c
 17146  007420  0100               	movlb	0	; () banked
 17147  007422  256F               	addwf	StringAddEqual@Input& (0+255),w,b
 17148  007424  6ED9               	movwf	fsr2l,c
 17149  007426  50F4               	movf	prodh,w,c
 17150  007428  0100               	movlb	0	; () banked
 17151  00742A  2170               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17152  00742C  6EDA               	movwf	fsr2h,c
 17153  00742E  0100               	movlb	0	; () banked
 17154  007430  5176               	movf	StringAddEqual@j& (0+255),w,b
 17155  007432  0D01               	mullw	1
 17156  007434  0E00               	movlw	low StringAddEqual@temp
 17157  007436  24F3               	addwf	prodl,w,c
 17158  007438  6EE1               	movwf	fsr1l,c
 17159  00743A  0E01               	movlw	high StringAddEqual@temp
 17160  00743C  20F4               	addwfc	prodh,w,c
 17161  00743E  6EE2               	movwf	fsr1h,c
 17162  007440  CFDF FFE7          	movff	indf2,indf1
 17163                           
 17164                           ; BSR set to: 0
 17165  007444  0100               	movlb	0	; () banked
 17166  007446  2B76               	incf	StringAddEqual@j& (0+255),f,b
 17167  007448  D000               	goto	l11928
 17168  00744A                     l11928:
 17169                           
 17170                           ; BSR set to: 0
 17171  00744A  0100               	movlb	0	; () banked
 17172  00744C  5174               	movf	StringAddEqual@firstnumber& (0+255),w,b
 17173  00744E  0100               	movlb	0	; () banked
 17174  007450  5D76               	subwf	StringAddEqual@j& (0+255),w,b
 17175  007452  A0D8               	btfss	status,0,c
 17176  007454  D7E1               	goto	l11924
 17177                           
 17178                           ; BSR set to: 0
 17179                           ;MISC.c: 828: }
 17180                           ;MISC.c: 829: temp[firstnumber] = '=';
 17181                           
 17182                           ; BSR set to: 0
 17183  007456  0100               	movlb	0	; () banked
 17184  007458  5174               	movf	StringAddEqual@firstnumber& (0+255),w,b
 17185  00745A  0D01               	mullw	1
 17186  00745C  0E00               	movlw	low StringAddEqual@temp
 17187  00745E  24F3               	addwf	prodl,w,c
 17188  007460  6ED9               	movwf	fsr2l,c
 17189  007462  0E01               	movlw	high StringAddEqual@temp
 17190  007464  20F4               	addwfc	prodh,w,c
 17191  007466  6EDA               	movwf	fsr2h,c
 17192  007468  0E3D               	movlw	61
 17193  00746A  6EDF               	movwf	indf2,c
 17194                           
 17195                           ; BSR set to: 0
 17196                           ;MISC.c: 830: for(j = (firstnumber);j<255;j++)
 17197  00746C  C074  F076         	movff	StringAddEqual@firstnumber,StringAddEqual@j
 17198  007470                     l11934:
 17199                           
 17200                           ; BSR set to: 0
 17201  007470  0100               	movlb	0	; () banked
 17202  007472  2976               	incf	StringAddEqual@j& (0+255),w,b
 17203  007474  B4D8               	btfsc	status,2,c
 17204  007476  D034               	goto	l11948
 17205  007478  D001               	goto	l11938
 17206                           
 17207                           ; BSR set to: 0
 17208  00747A  D032               	goto	l11948
 17209  00747C                     l11938:
 17210                           
 17211                           ; BSR set to: 0
 17212                           ;MISC.c: 831: {
 17213                           ;MISC.c: 832: temp[j+1] = Input[j];
 17214  00747C  0100               	movlb	0	; () banked
 17215  00747E  5176               	movf	StringAddEqual@j& (0+255),w,b
 17216  007480  0D01               	mullw	1
 17217  007482  50F3               	movf	prodl,w,c
 17218  007484  0100               	movlb	0	; () banked
 17219  007486  256F               	addwf	StringAddEqual@Input& (0+255),w,b
 17220  007488  6ED9               	movwf	fsr2l,c
 17221  00748A  50F4               	movf	prodh,w,c
 17222  00748C  0100               	movlb	0	; () banked
 17223  00748E  2170               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17224  007490  6EDA               	movwf	fsr2h,c
 17225  007492  0100               	movlb	0	; () banked
 17226  007494  5176               	movf	StringAddEqual@j& (0+255),w,b
 17227  007496  0100               	movlb	0	; () banked
 17228  007498  6F71               	movwf	??_StringAddEqual& (0+255),b
 17229  00749A  6B72               	clrf	(??_StringAddEqual+1)& (0+255),b
 17230  00749C  0E01               	movlw	1
 17231  00749E  0100               	movlb	0	; () banked
 17232  0074A0  2771               	addwf	??_StringAddEqual& (0+255),f,b
 17233  0074A2  0E00               	movlw	0
 17234  0074A4  2372               	addwfc	(??_StringAddEqual+1)& (0+255),f,b
 17235  0074A6  0E00               	movlw	low StringAddEqual@temp
 17236  0074A8  0100               	movlb	0	; () banked
 17237  0074AA  2571               	addwf	??_StringAddEqual& (0+255),w,b
 17238  0074AC  6EE1               	movwf	fsr1l,c
 17239  0074AE  0E01               	movlw	high StringAddEqual@temp
 17240  0074B0  0100               	movlb	0	; () banked
 17241  0074B2  2172               	addwfc	(??_StringAddEqual+1)& (0+255),w,b
 17242  0074B4  6EE2               	movwf	fsr1h,c
 17243  0074B6  CFDF FFE7          	movff	indf2,indf1
 17244                           
 17245                           ; BSR set to: 0
 17246                           ;MISC.c: 833: if(Input[j] == 0)
 17247  0074BA  0100               	movlb	0	; () banked
 17248  0074BC  5176               	movf	StringAddEqual@j& (0+255),w,b
 17249  0074BE  0D01               	mullw	1
 17250  0074C0  50F3               	movf	prodl,w,c
 17251  0074C2  0100               	movlb	0	; () banked
 17252  0074C4  256F               	addwf	StringAddEqual@Input& (0+255),w,b
 17253  0074C6  6ED9               	movwf	fsr2l,c
 17254  0074C8  50F4               	movf	prodh,w,c
 17255  0074CA  0100               	movlb	0	; () banked
 17256  0074CC  2170               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17257  0074CE  6EDA               	movwf	fsr2h,c
 17258  0074D0  50DF               	movf	indf2,w,c
 17259  0074D2  B4D8               	btfsc	status,2,c
 17260  0074D4  D005               	goto	l11948
 17261  0074D6  D001               	goto	l11944
 17262                           
 17263                           ; BSR set to: 0
 17264                           ;MISC.c: 834: {
 17265                           ;MISC.c: 835: break;
 17266  0074D8  D003               	goto	l11948
 17267  0074DA                     l11944:
 17268                           
 17269                           ; BSR set to: 0
 17270  0074DA  0100               	movlb	0	; () banked
 17271  0074DC  2B76               	incf	StringAddEqual@j& (0+255),f,b
 17272  0074DE  D7C8               	goto	l11934
 17273  0074E0                     l11948:
 17274                           
 17275                           ; BSR set to: 0
 17276                           ;MISC.c: 836: }
 17277                           ;MISC.c: 837: }
 17278                           ;MISC.c: 838: BufferCopy(temp,Input,NullPosition +1,0);
 17279  0074E0  0E00               	movlw	low StringAddEqual@temp
 17280  0074E2  0100               	movlb	0	; () banked
 17281  0074E4  6F68               	movwf	BufferCopy@from& (0+255),b
 17282  0074E6  0E01               	movlw	high StringAddEqual@temp
 17283  0074E8  0100               	movlb	0	; () banked
 17284  0074EA  6F69               	movwf	(BufferCopy@from+1)& (0+255),b
 17285  0074EC  C06F  F06A         	movff	StringAddEqual@Input,BufferCopy@to
 17286  0074F0  C070  F06B         	movff	StringAddEqual@Input+1,BufferCopy@to+1
 17287  0074F4  0100               	movlb	0	; () banked
 17288  0074F6  2973               	incf	StringAddEqual@NullPosition& (0+255),w,b
 17289  0074F8  0100               	movlb	0	; () banked
 17290  0074FA  6F6C               	movwf	BufferCopy@count& (0+255),b
 17291  0074FC  0E00               	movlw	0
 17292  0074FE  0100               	movlb	0	; () banked
 17293  007500  6F6D               	movwf	BufferCopy@shift& (0+255),b
 17294  007502  ECDF  F04E         	call	_BufferCopy	;wreg free
 17295                           
 17296                           ;MISC.c: 839: return 1;
 17297  007506  0E01               	movlw	1
 17298  007508  0012               	return	
 17299  00750A  0012               	return		;funcret
 17300  00750C                     __end_of_StringAddEqual:
 17301                           	opt stack 0
 17302                           tblptru	equ	0xFF8
 17303                           tblptrh	equ	0xFF7
 17304                           tblptrl	equ	0xFF6
 17305                           tablat	equ	0xFF5
 17306                           prodh	equ	0xFF4
 17307                           prodl	equ	0xFF3
 17308                           intcon	equ	0xFF2
 17309                           indf0	equ	0xFEF
 17310                           postinc0	equ	0xFEE
 17311                           plusw0	equ	0xFEB
 17312                           fsr0h	equ	0xFEA
 17313                           fsr0l	equ	0xFE9
 17314                           wreg	equ	0xFE8
 17315                           indf1	equ	0xFE7
 17316                           postdec1	equ	0xFE5
 17317                           fsr1h	equ	0xFE2
 17318                           fsr1l	equ	0xFE1
 17319                           indf2	equ	0xFDF
 17320                           postinc2	equ	0xFDE
 17321                           plusw2	equ	0xFDB
 17322                           fsr2h	equ	0xFDA
 17323                           fsr2l	equ	0xFD9
 17324                           status	equ	0xFD8
 17325                           
 17326 ;; *************** function _SendRF_wait *****************
 17327 ;; Defined at:
 17328 ;;		line 145 in file "RF.c"
 17329 ;; Parameters:    Size  Location     Type
 17330 ;;  Code            2    8[BANK0 ] PTR const unsigned char 
 17331 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
 17332 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
 17333 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
 17334 ;;		 -> Conf1_ChannelD(12), 
 17335 ;;  Config          1   10[BANK0 ] unsigned char 
 17336 ;;  size            1   11[BANK0 ] unsigned char 
 17337 ;;  amount          1   12[BANK0 ] unsigned char 
 17338 ;; Auto vars:     Size  Location     Type
 17339 ;;		None
 17340 ;; Return value:  Size  Location     Type
 17341 ;;		None               void
 17342 ;; Registers used:
 17343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17344 ;; Tracked objects:
 17345 ;;		On entry : 0/0
 17346 ;;		On exit  : 0/0
 17347 ;;		Unchanged: 0/0
 17348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17349 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17352 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17353 ;;Total ram usage:        5 bytes
 17354 ;; Hardware stack levels used:    1
 17355 ;; Hardware stack levels required when called:    7
 17356 ;; This function calls:
 17357 ;;		_LEDTimerON
 17358 ;;		_ReadIRpin
 17359 ;;		_SendRF
 17360 ;; This function is called by:
 17361 ;;		_UseBluetooth
 17362 ;;		_SendRF_Channel
 17363 ;; This function uses a non-reentrant model
 17364 ;;
 17365                           
 17366                           	psect	text14
 17367  00A4CE                     __ptext14:
 17368                           	opt stack 0
 17369  00A4CE                     _SendRF_wait:
 17370                           	opt stack 21
 17371                           
 17372                           ;RF.c: 147: (IOCBbits.IOCB4 = 0);
 17373                           
 17374                           ;incstack = 0
 17375  00A4CE  987D               	bcf	3965,4,c	;volatile
 17376                           
 17377                           ;RF.c: 148: INTCONbits.RBIE = 0;
 17378  00A4D0  96F2               	bcf	intcon,3,c	;volatile
 17379                           
 17380                           ;RF.c: 149: INTCONbits.PEIE = 0;
 17381  00A4D2  9CF2               	bcf	intcon,6,c	;volatile
 17382                           
 17383                           ;RF.c: 150: LEDTimerON();
 17384  00A4D4  ECB0  F054         	call	_LEDTimerON	;wreg free
 17385                           
 17386                           ;RF.c: 151: (LATC |= 0x04);
 17387  00A4D8  848B               	bsf	3979,2,c	;volatile
 17388                           
 17389                           ;RF.c: 152: SendRF(Code, Config, size, amount);
 17390  00A4DA  C068  F060         	movff	SendRF_wait@Code,SendRF@Code
 17391  00A4DE  C069  F061         	movff	SendRF_wait@Code+1,SendRF@Code+1
 17392  00A4E2  C06A  F062         	movff	SendRF_wait@Config,SendRF@Config
 17393  00A4E6  C06B  F063         	movff	SendRF_wait@size,SendRF@size
 17394  00A4EA  C06C  F064         	movff	SendRF_wait@amount,SendRF@RepeatAmount
 17395  00A4EE  ECB9  F047         	call	_SendRF	;wreg free
 17396                           
 17397                           ;RF.c: 153: while(!Sent);
 17398  00A4F2  D000               	goto	l11148
 17399  00A4F4                     l11148:
 17400  00A4F4  0100               	movlb	0	; () banked
 17401  00A4F6  51FF               	movf	_Sent& (0+255),w,b	;volatile
 17402  00A4F8  B4D8               	btfsc	status,2,c
 17403  00A4FA  D7FC               	goto	l11148
 17404                           
 17405                           ; BSR set to: 0
 17406                           ;RF.c: 154: INTCONbits.PEIE = 1;
 17407  00A4FC  8CF2               	bsf	intcon,6,c	;volatile
 17408                           
 17409                           ; BSR set to: 0
 17410                           ;RF.c: 155: IRpinOLD = ReadIRpin();
 17411  00A4FE  ECF8  F054         	call	_ReadIRpin	;wreg free
 17412  00A502  6E40               	movwf	_IRpinOLD,c
 17413                           
 17414                           ;RF.c: 156: INTCONbits.RBIF = 0;
 17415  00A504  90F2               	bcf	intcon,0,c	;volatile
 17416                           
 17417                           ;RF.c: 157: (IOCBbits.IOCB4 = 1);
 17418  00A506  887D               	bsf	3965,4,c	;volatile
 17419                           
 17420                           ;RF.c: 158: INTCONbits.RBIE = 1;
 17421  00A508  86F2               	bsf	intcon,3,c	;volatile
 17422  00A50A  0012               	return		;funcret
 17423  00A50C                     __end_of_SendRF_wait:
 17424                           	opt stack 0
 17425                           tblptru	equ	0xFF8
 17426                           tblptrh	equ	0xFF7
 17427                           tblptrl	equ	0xFF6
 17428                           tablat	equ	0xFF5
 17429                           prodh	equ	0xFF4
 17430                           prodl	equ	0xFF3
 17431                           intcon	equ	0xFF2
 17432                           indf0	equ	0xFEF
 17433                           postinc0	equ	0xFEE
 17434                           plusw0	equ	0xFEB
 17435                           fsr0h	equ	0xFEA
 17436                           fsr0l	equ	0xFE9
 17437                           wreg	equ	0xFE8
 17438                           indf1	equ	0xFE7
 17439                           postdec1	equ	0xFE5
 17440                           fsr1h	equ	0xFE2
 17441                           fsr1l	equ	0xFE1
 17442                           indf2	equ	0xFDF
 17443                           postinc2	equ	0xFDE
 17444                           plusw2	equ	0xFDB
 17445                           fsr2h	equ	0xFDA
 17446                           fsr2l	equ	0xFD9
 17447                           status	equ	0xFD8
 17448                           
 17449 ;; *************** function _SendRF *****************
 17450 ;; Defined at:
 17451 ;;		line 68 in file "RF.c"
 17452 ;; Parameters:    Size  Location     Type
 17453 ;;  Code            2    0[BANK0 ] PTR const unsigned char 
 17454 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
 17455 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
 17456 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
 17457 ;;		 -> Conf1_ChannelD(12), 
 17458 ;;  Config          1    2[BANK0 ] unsigned char 
 17459 ;;  size            1    3[BANK0 ] unsigned char 
 17460 ;;  RepeatAmount    1    4[BANK0 ] unsigned char 
 17461 ;; Auto vars:     Size  Location     Type
 17462 ;;  i               1    7[BANK0 ] unsigned char 
 17463 ;; Return value:  Size  Location     Type
 17464 ;;                  1    wreg      unsigned char 
 17465 ;; Registers used:
 17466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17467 ;; Tracked objects:
 17468 ;;		On entry : 0/0
 17469 ;;		On exit  : 0/0
 17470 ;;		Unchanged: 0/0
 17471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17472 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17473 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17474 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17475 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17476 ;;Total ram usage:        8 bytes
 17477 ;; Hardware stack levels used:    1
 17478 ;; Hardware stack levels required when called:    5
 17479 ;; This function calls:
 17480 ;;		Nothing
 17481 ;; This function is called by:
 17482 ;;		_SendRF_wait
 17483 ;; This function uses a non-reentrant model
 17484 ;;
 17485                           
 17486                           	psect	text15
 17487  008F72                     __ptext15:
 17488                           	opt stack 0
 17489  008F72                     _SendRF:
 17490                           	opt stack 22
 17491                           
 17492                           ;RF.c: 70: unsigned char i;
 17493                           ;RF.c: 71: if(Sent)
 17494                           
 17495                           ;incstack = 0
 17496  008F72  0100               	movlb	0	; () banked
 17497  008F74  51FF               	movf	_Sent& (0+255),w,b	;volatile
 17498  008F76  B4D8               	btfsc	status,2,c
 17499  008F78  0012               	return	
 17500                           
 17501                           ; BSR set to: 0
 17502                           ;RF.c: 72: {
 17503                           ;RF.c: 74: RF_IR = 55;
 17504  008F7A  0E37               	movlw	55
 17505  008F7C  6E4E               	movwf	_RF_IR,c
 17506                           
 17507                           ;RF.c: 75: if((Config <= 0) || (Config > 2))
 17508  008F7E  0100               	movlb	0	; () banked
 17509  008F80  5162               	movf	SendRF@Config& (0+255),w,b
 17510  008F82  0100               	movlb	0	; () banked
 17511  008F84  B4D8               	btfsc	status,2,c
 17512  008F86  0012               	return	
 17513                           
 17514                           ; BSR set to: 0
 17515  008F88  0E02               	movlw	2
 17516  008F8A  0100               	movlb	0	; () banked
 17517  008F8C  6562               	cpfsgt	SendRF@Config& (0+255),b
 17518  008F8E  D002               	goto	l2356
 17519  008F90  0012               	return	
 17520                           
 17521                           ; BSR set to: 0
 17522                           ;RF.c: 76: {
 17523                           ;RF.c: 77: return 0;
 17524                           ;	Return value of _SendRF is never used
 17525  008F92  0012               	return	
 17526  008F94                     l2356:
 17527                           
 17528                           ; BSR set to: 0
 17529                           ;RF.c: 78: }
 17530                           ;RF.c: 79: RFConfig = Config;
 17531  008F94  C062  F044         	movff	SendRF@Config,_RFConfig
 17532                           
 17533                           ; BSR set to: 0
 17534                           ;RF.c: 80: if(Config == 1)
 17535  008F98  0100               	movlb	0	; () banked
 17536  008F9A  0562               	decf	SendRF@Config& (0+255),w,b
 17537  008F9C  A4D8               	btfss	status,2,c
 17538  008F9E  D002               	goto	l10514
 17539                           
 17540                           ; BSR set to: 0
 17541                           ;RF.c: 81: {
 17542                           ;RF.c: 82: RF_IR_Postscaler = 2;
 17543  008FA0  0E02               	movlw	2
 17544  008FA2  D006               	goto	L10
 17545  008FA4                     l10514:
 17546                           
 17547                           ; BSR set to: 0
 17548                           ;RF.c: 84: else if(Config == 2)
 17549  008FA4  0E02               	movlw	2
 17550  008FA6  0100               	movlb	0	; () banked
 17551  008FA8  1962               	xorwf	SendRF@Config& (0+255),w,b
 17552  008FAA  A4D8               	btfss	status,2,c
 17553  008FAC  0012               	return	
 17554                           
 17555                           ; BSR set to: 0
 17556                           ;RF.c: 85: {
 17557                           ;RF.c: 86: RF_IR_Postscaler = 4;
 17558  008FAE  0E04               	movlw	4
 17559  008FB0                     L10:
 17560  008FB0  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 17561                           
 17562                           ;RF.c: 87: }
 17563  008FB2  D002               	goto	l10518
 17564                           
 17565                           ; BSR set to: 0
 17566                           ;RF.c: 88: else
 17567                           ;RF.c: 89: {
 17568                           ;RF.c: 90: return 0;
 17569                           ;	Return value of _SendRF is never used
 17570  008FB4  0012               	return	
 17571                           
 17572                           ; BSR set to: 0
 17573  008FB6  D000               	goto	l10518
 17574  008FB8                     l10518:
 17575                           
 17576                           ; BSR set to: 0
 17577                           ;RF.c: 91: }
 17578                           ;RF.c: 93: Sent = 0;
 17579  008FB8  0E00               	movlw	0
 17580  008FBA  0100               	movlb	0	; () banked
 17581  008FBC  6FFF               	movwf	_Sent& (0+255),b	;volatile
 17582                           
 17583                           ; BSR set to: 0
 17584                           ;RF.c: 94: Sendcount = RepeatAmount;
 17585  008FBE  C064  F048         	movff	SendRF@RepeatAmount,_Sendcount	;volatile
 17586                           
 17587                           ;RF.c: 95: RFsendFlag = 1;
 17588  008FC2  0E01               	movlw	1
 17589  008FC4  6E47               	movwf	_RFsendFlag,c	;volatile
 17590                           
 17591                           ;RF.c: 96: RFcodeBit = 0;
 17592  008FC6  0E00               	movlw	0
 17593  008FC8  6E45               	movwf	_RFcodeBit,c
 17594                           
 17595                           ;RF.c: 97: RFcodePlace = 1;
 17596  008FCA  0E01               	movlw	1
 17597  008FCC  6E46               	movwf	_RFcodePlace,c
 17598                           
 17599                           ; BSR set to: 0
 17600                           ;RF.c: 100: if(size >= 20)
 17601  008FCE  0E13               	movlw	19
 17602  008FD0  0100               	movlb	0	; () banked
 17603  008FD2  6563               	cpfsgt	SendRF@size& (0+255),b
 17604  008FD4  D002               	goto	l10526
 17605  008FD6  0012               	return	
 17606                           
 17607                           ; BSR set to: 0
 17608                           ;RF.c: 101: {
 17609                           ;RF.c: 102: return 0;
 17610                           ;	Return value of _SendRF is never used
 17611  008FD8  0012               	return	
 17612  008FDA                     l10526:
 17613                           
 17614                           ; BSR set to: 0
 17615                           ;RF.c: 103: }
 17616                           ;RF.c: 104: for(i=0;i<size;i++)
 17617  008FDA  0E00               	movlw	0
 17618  008FDC  0100               	movlb	0	; () banked
 17619  008FDE  6F67               	movwf	SendRF@i& (0+255),b
 17620  008FE0  D021               	goto	l10532
 17621  008FE2                     l10528:
 17622                           
 17623                           ; BSR set to: 0
 17624                           ;RF.c: 105: {
 17625                           ;RF.c: 106: RFsendCode[i] = Code[i];
 17626  008FE2  0100               	movlb	0	; () banked
 17627  008FE4  5167               	movf	SendRF@i& (0+255),w,b
 17628  008FE6  0D01               	mullw	1
 17629  008FE8  C060  F065         	movff	SendRF@Code,??_SendRF
 17630  008FEC  C061  F066         	movff	SendRF@Code+1,??_SendRF+1
 17631  008FF0  50F3               	movf	prodl,w,c
 17632  008FF2  0100               	movlb	0	; () banked
 17633  008FF4  2765               	addwf	??_SendRF& (0+255),f,b
 17634  008FF6  50F4               	movf	prodh,w,c
 17635  008FF8  0100               	movlb	0	; () banked
 17636  008FFA  2366               	addwfc	(??_SendRF+1)& (0+255),f,b
 17637  008FFC  C065  FFF6         	movff	??_SendRF,tblptrl
 17638  009000  C066  FFF7         	movff	??_SendRF+1,tblptrh
 17639  009004                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17640  009004  6AF8               	clrf	tblptru,c
 17641  009006                     	endif
 17642  009006                     	if	0	;tblptru may be non-zero
 17643  009006                     	endif
 17644  009006  0100               	movlb	0	; () banked
 17645  009008  5167               	movf	SendRF@i& (0+255),w,b
 17646  00900A  0D01               	mullw	1
 17647  00900C  0E00               	movlw	low _RFsendCode
 17648  00900E  24F3               	addwf	prodl,w,c
 17649  009010  6ED9               	movwf	fsr2l,c
 17650  009012  0E04               	movlw	high _RFsendCode
 17651  009014  20F4               	addwfc	prodh,w,c
 17652  009016  6EDA               	movwf	fsr2h,c
 17653  009018  0008               	tblrd		*
 17654  00901A  CFF5 FFDF          	movff	tablat,indf2
 17655                           
 17656                           ; BSR set to: 0
 17657  00901E  0100               	movlb	0	; () banked
 17658  009020  2B67               	incf	SendRF@i& (0+255),f,b
 17659  009022  D000               	goto	l10532
 17660  009024                     l10532:
 17661                           
 17662                           ; BSR set to: 0
 17663  009024  0100               	movlb	0	; () banked
 17664  009026  5163               	movf	SendRF@size& (0+255),w,b
 17665  009028  0100               	movlb	0	; () banked
 17666  00902A  5D67               	subwf	SendRF@i& (0+255),w,b
 17667  00902C  A0D8               	btfss	status,0,c
 17668  00902E  D7D9               	goto	l10528
 17669                           
 17670                           ; BSR set to: 0
 17671                           ;RF.c: 107: }
 17672                           ;RF.c: 108: RFsendCode[i] = 99;
 17673                           
 17674                           ; BSR set to: 0
 17675  009030  0100               	movlb	0	; () banked
 17676  009032  5167               	movf	SendRF@i& (0+255),w,b
 17677  009034  0D01               	mullw	1
 17678  009036  0E00               	movlw	low _RFsendCode
 17679  009038  24F3               	addwf	prodl,w,c
 17680  00903A  6ED9               	movwf	fsr2l,c
 17681  00903C  0E04               	movlw	high _RFsendCode
 17682  00903E  20F4               	addwfc	prodh,w,c
 17683  009040  6EDA               	movwf	fsr2h,c
 17684  009042  0E63               	movlw	99
 17685  009044  6EDF               	movwf	indf2,c
 17686                           
 17687                           ; BSR set to: 0
 17688                           ;RF.c: 110: (TMR2 = 0);
 17689  009046  0E00               	movlw	0
 17690  009048  6ECC               	movwf	4044,c	;volatile
 17691                           
 17692                           ; BSR set to: 0
 17693                           ;RF.c: 111: if(Config == 1)
 17694  00904A  0100               	movlb	0	; () banked
 17695  00904C  0562               	decf	SendRF@Config& (0+255),w,b
 17696  00904E  A4D8               	btfss	status,2,c
 17697  009050  D002               	goto	l10542
 17698                           
 17699                           ; BSR set to: 0
 17700                           ;RF.c: 112: {
 17701                           ;RF.c: 113: (PR2 = 250);
 17702  009052  0EFA               	movlw	250
 17703  009054  D001               	goto	L11
 17704  009056                     l10542:
 17705                           
 17706                           ; BSR set to: 0
 17707                           ;RF.c: 115: else
 17708                           ;RF.c: 116: {
 17709                           ;RF.c: 117: (PR2 = 149);
 17710  009056  0E95               	movlw	149
 17711  009058                     L11:
 17712  009058  6ECB               	movwf	4043,c	;volatile
 17713  00905A  D000               	goto	l10544
 17714  00905C                     l10544:
 17715                           
 17716                           ; BSR set to: 0
 17717                           ;RF.c: 118: }
 17718                           ;RF.c: 119: (T2CONbits.TMR2ON = 1);
 17719  00905C  84CA               	bsf	4042,2,c	;volatile
 17720                           
 17721                           ; BSR set to: 0
 17722                           ;RF.c: 120: return 1;
 17723                           ;	Return value of _SendRF is never used
 17724  00905E  0012               	return	
 17725                           
 17726                           ; BSR set to: 0
 17727                           
 17728                           ; BSR set to: 0
 17729                           ;RF.c: 121: }
 17730                           ;RF.c: 122: return 2;
 17731                           ;	Return value of _SendRF is never used
 17732  009060  0012               	return		;funcret
 17733  009062                     __end_of_SendRF:
 17734                           	opt stack 0
 17735                           tblptru	equ	0xFF8
 17736                           tblptrh	equ	0xFF7
 17737                           tblptrl	equ	0xFF6
 17738                           tablat	equ	0xFF5
 17739                           prodh	equ	0xFF4
 17740                           prodl	equ	0xFF3
 17741                           intcon	equ	0xFF2
 17742                           indf0	equ	0xFEF
 17743                           postinc0	equ	0xFEE
 17744                           plusw0	equ	0xFEB
 17745                           fsr0h	equ	0xFEA
 17746                           fsr0l	equ	0xFE9
 17747                           wreg	equ	0xFE8
 17748                           indf1	equ	0xFE7
 17749                           postdec1	equ	0xFE5
 17750                           fsr1h	equ	0xFE2
 17751                           fsr1l	equ	0xFE1
 17752                           indf2	equ	0xFDF
 17753                           postinc2	equ	0xFDE
 17754                           plusw2	equ	0xFDB
 17755                           fsr2h	equ	0xFDA
 17756                           fsr2l	equ	0xFD9
 17757                           status	equ	0xFD8
 17758                           
 17759 ;; *************** function _LEDTimerON *****************
 17760 ;; Defined at:
 17761 ;;		line 149 in file "Timer.c"
 17762 ;; Parameters:    Size  Location     Type
 17763 ;;		None
 17764 ;; Auto vars:     Size  Location     Type
 17765 ;;		None
 17766 ;; Return value:  Size  Location     Type
 17767 ;;                  2   22[None  ] int 
 17768 ;; Registers used:
 17769 ;;		wreg, status,2, cstack
 17770 ;; Tracked objects:
 17771 ;;		On entry : 0/0
 17772 ;;		On exit  : 0/0
 17773 ;;		Unchanged: 0/0
 17774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17779 ;;Total ram usage:        0 bytes
 17780 ;; Hardware stack levels used:    1
 17781 ;; Hardware stack levels required when called:    6
 17782 ;; This function calls:
 17783 ;;		_ResetTimer1
 17784 ;; This function is called by:
 17785 ;;		_main
 17786 ;;		_UseIRCode
 17787 ;;		_WaitForIRsignal
 17788 ;;		_SendRF_wait
 17789 ;; This function uses a non-reentrant model
 17790 ;;
 17791                           
 17792                           	psect	text16
 17793  00A960                     __ptext16:
 17794                           	opt stack 0
 17795  00A960                     _LEDTimerON:
 17796                           	opt stack 21
 17797                           
 17798                           ;Timer.c: 151: (T1CONbits.TMR1ON = FALSE);
 17799                           
 17800                           ; BSR set to: 0
 17801                           ;incstack = 0
 17802  00A960  90CD               	bcf	4045,0,c	;volatile
 17803                           
 17804                           ;Timer.c: 152: ResetTimer1();
 17805  00A962  EC1B  F055         	call	_ResetTimer1	;wreg free
 17806                           
 17807                           ;Timer.c: 153: Timer1_Postscaler = 0;
 17808  00A966  0E00               	movlw	0
 17809  00A968  6E49               	movwf	_Timer1_Postscaler,c
 17810                           
 17811                           ;Timer.c: 154: ResetTimer1();
 17812  00A96A  EC1B  F055         	call	_ResetTimer1	;wreg free
 17813                           
 17814                           ;Timer.c: 155: (T1CONbits.TMR1ON = TRUE);
 17815  00A96E  80CD               	bsf	4045,0,c	;volatile
 17816  00A970  0012               	return		;funcret
 17817  00A972                     __end_of_LEDTimerON:
 17818                           	opt stack 0
 17819                           tblptru	equ	0xFF8
 17820                           tblptrh	equ	0xFF7
 17821                           tblptrl	equ	0xFF6
 17822                           tablat	equ	0xFF5
 17823                           prodh	equ	0xFF4
 17824                           prodl	equ	0xFF3
 17825                           intcon	equ	0xFF2
 17826                           indf0	equ	0xFEF
 17827                           postinc0	equ	0xFEE
 17828                           plusw0	equ	0xFEB
 17829                           fsr0h	equ	0xFEA
 17830                           fsr0l	equ	0xFE9
 17831                           wreg	equ	0xFE8
 17832                           indf1	equ	0xFE7
 17833                           postdec1	equ	0xFE5
 17834                           fsr1h	equ	0xFE2
 17835                           fsr1l	equ	0xFE1
 17836                           indf2	equ	0xFDF
 17837                           postinc2	equ	0xFDE
 17838                           plusw2	equ	0xFDB
 17839                           fsr2h	equ	0xFDA
 17840                           fsr2l	equ	0xFD9
 17841                           status	equ	0xFD8
 17842                           
 17843 ;; *************** function _ResetTimer1 *****************
 17844 ;; Defined at:
 17845 ;;		line 123 in file "Timer.c"
 17846 ;; Parameters:    Size  Location     Type
 17847 ;;		None
 17848 ;; Auto vars:     Size  Location     Type
 17849 ;;		None
 17850 ;; Return value:  Size  Location     Type
 17851 ;;		None               void
 17852 ;; Registers used:
 17853 ;;		wreg, status,2
 17854 ;; Tracked objects:
 17855 ;;		On entry : 0/0
 17856 ;;		On exit  : 0/0
 17857 ;;		Unchanged: 0/0
 17858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17863 ;;Total ram usage:        0 bytes
 17864 ;; Hardware stack levels used:    1
 17865 ;; Hardware stack levels required when called:    5
 17866 ;; This function calls:
 17867 ;;		Nothing
 17868 ;; This function is called by:
 17869 ;;		_LEDTimerON
 17870 ;; This function uses a non-reentrant model
 17871 ;;
 17872                           
 17873                           	psect	text17
 17874  00AA36                     __ptext17:
 17875                           	opt stack 0
 17876  00AA36                     _ResetTimer1:
 17877                           	opt stack 21
 17878                           
 17879                           ;Timer.c: 129: TMR1H = 0;
 17880                           
 17881                           ;incstack = 0
 17882  00AA36  0E00               	movlw	0
 17883  00AA38  6ECF               	movwf	4047,c	;volatile
 17884                           
 17885                           ;Timer.c: 130: TMR1L = 2;
 17886  00AA3A  0E02               	movlw	2
 17887  00AA3C  6ECE               	movwf	4046,c	;volatile
 17888  00AA3E  0012               	return		;funcret
 17889  00AA40                     __end_of_ResetTimer1:
 17890                           	opt stack 0
 17891                           tblptru	equ	0xFF8
 17892                           tblptrh	equ	0xFF7
 17893                           tblptrl	equ	0xFF6
 17894                           tablat	equ	0xFF5
 17895                           prodh	equ	0xFF4
 17896                           prodl	equ	0xFF3
 17897                           intcon	equ	0xFF2
 17898                           indf0	equ	0xFEF
 17899                           postinc0	equ	0xFEE
 17900                           plusw0	equ	0xFEB
 17901                           fsr0h	equ	0xFEA
 17902                           fsr0l	equ	0xFE9
 17903                           wreg	equ	0xFE8
 17904                           indf1	equ	0xFE7
 17905                           postdec1	equ	0xFE5
 17906                           fsr1h	equ	0xFE2
 17907                           fsr1l	equ	0xFE1
 17908                           indf2	equ	0xFDF
 17909                           postinc2	equ	0xFDE
 17910                           plusw2	equ	0xFDB
 17911                           fsr2h	equ	0xFDA
 17912                           fsr2l	equ	0xFD9
 17913                           status	equ	0xFD8
 17914                           
 17915 ;; *************** function _SendNEC_wait *****************
 17916 ;; Defined at:
 17917 ;;		line 419 in file "IR.c"
 17918 ;; Parameters:    Size  Location     Type
 17919 ;;  code            4   21[BANK0 ] unsigned long 
 17920 ;;  RepeatAmount    1   25[BANK0 ] unsigned char 
 17921 ;; Auto vars:     Size  Location     Type
 17922 ;;  toggle          1   26[BANK0 ] unsigned char 
 17923 ;; Return value:  Size  Location     Type
 17924 ;;		None               void
 17925 ;; Registers used:
 17926 ;;		wreg, status,2, status,0, cstack
 17927 ;; Tracked objects:
 17928 ;;		On entry : 0/0
 17929 ;;		On exit  : 0/0
 17930 ;;		Unchanged: 0/0
 17931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17932 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17935 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17936 ;;Total ram usage:        6 bytes
 17937 ;; Hardware stack levels used:    1
 17938 ;; Hardware stack levels required when called:    7
 17939 ;; This function calls:
 17940 ;;		_CheckReceivingIR
 17941 ;;		_ReadIRpin
 17942 ;;		_SendNEC_bytes
 17943 ;;		_delayUS
 17944 ;; This function is called by:
 17945 ;;		_UseBluetooth
 17946 ;; This function uses a non-reentrant model
 17947 ;;
 17948                           
 17949                           	psect	text18
 17950  009B72                     __ptext18:
 17951                           	opt stack 0
 17952  009B72                     _SendNEC_wait:
 17953                           	opt stack 22
 17954                           
 17955                           ;IR.c: 421: unsigned char toggle = 0;
 17956                           
 17957                           ;incstack = 0
 17958  009B72  0E00               	movlw	0
 17959  009B74  0100               	movlb	0	; () banked
 17960  009B76  6F7A               	movwf	SendNEC_wait@toggle& (0+255),b
 17961                           
 17962                           ; BSR set to: 0
 17963                           
 17964                           ;IR.c: 422: while(CheckReceivingIR());
 17965  009B78  D000               	goto	l12176
 17966  009B7A                     l12176:
 17967  009B7A  ECB9  F054         	call	_CheckReceivingIR	;wreg free
 17968  009B7E  0900               	iorlw	0
 17969  009B80  A4D8               	btfss	status,2,c
 17970  009B82  D7FB               	goto	l12176
 17971                           
 17972                           ;IR.c: 424: (IOCBbits.IOCB4 = 0);
 17973  009B84  987D               	bcf	3965,4,c	;volatile
 17974                           
 17975                           ;IR.c: 425: INTCONbits.RBIE = 0;
 17976  009B86  96F2               	bcf	intcon,3,c	;volatile
 17977                           
 17978                           ;IR.c: 426: INTCONbits.PEIE = 0;
 17979  009B88  9CF2               	bcf	intcon,6,c	;volatile
 17980                           
 17981                           ;IR.c: 428: SendNEC_bytes(code, RepeatAmount);
 17982  009B8A  C075  F070         	movff	SendNEC_wait@code,SendNEC_bytes@code
 17983  009B8E  C076  F071         	movff	SendNEC_wait@code+1,SendNEC_bytes@code+1
 17984  009B92  C077  F072         	movff	SendNEC_wait@code+2,SendNEC_bytes@code+2
 17985  009B96  C078  F073         	movff	SendNEC_wait@code+3,SendNEC_bytes@code+3
 17986  009B9A  C079  F074         	movff	SendNEC_wait@RepeatAmount,SendNEC_bytes@RepeatAmount
 17987  009B9E  EC9A  F04E         	call	_SendNEC_bytes	;wreg free
 17988                           
 17989                           ;IR.c: 429: while(!Sent)
 17990  009BA2  D01C               	goto	l12198
 17991  009BA4                     l12180:
 17992                           
 17993                           ;IR.c: 430: {
 17994                           ;IR.c: 431: if(IRmod)
 17995  009BA4  0100               	movlb	0	; () banked
 17996  009BA6  51FB               	movf	_IRmod& (0+255),w,b	;volatile
 17997  009BA8  B4D8               	btfsc	status,2,c
 17998  009BAA  D013               	goto	l12194
 17999                           
 18000                           ; BSR set to: 0
 18001                           ;IR.c: 432: {
 18002                           ;IR.c: 434: if(toggle < 9)
 18003  009BAC  0E09               	movlw	9
 18004  009BAE  0100               	movlb	0	; () banked
 18005  009BB0  617A               	cpfslt	SendNEC_wait@toggle& (0+255),b
 18006  009BB2  D002               	goto	l12186
 18007                           
 18008                           ; BSR set to: 0
 18009                           ;IR.c: 435: {
 18010                           ;IR.c: 436: (LATC |= 0x08);
 18011  009BB4  868B               	bsf	3979,3,c	;volatile
 18012                           
 18013                           ;IR.c: 437: }
 18014  009BB6  D00A               	goto	l12192
 18015  009BB8                     l12186:
 18016                           
 18017                           ; BSR set to: 0
 18018                           ;IR.c: 438: else if(toggle < 17)
 18019  009BB8  0E11               	movlw	17
 18020  009BBA  0100               	movlb	0	; () banked
 18021  009BBC  617A               	cpfslt	SendNEC_wait@toggle& (0+255),b
 18022  009BBE  D002               	goto	l12190
 18023                           
 18024                           ; BSR set to: 0
 18025                           ;IR.c: 439: {
 18026                           ;IR.c: 440: (LATC &= ~0x08);
 18027  009BC0  968B               	bcf	3979,3,c	;volatile
 18028                           
 18029                           ;IR.c: 441: }
 18030  009BC2  D004               	goto	l12192
 18031  009BC4                     l12190:
 18032                           
 18033                           ; BSR set to: 0
 18034                           ;IR.c: 442: else
 18035                           ;IR.c: 443: {
 18036                           ;IR.c: 444: toggle = 0;
 18037  009BC4  0E00               	movlw	0
 18038  009BC6  0100               	movlb	0	; () banked
 18039  009BC8  6F7A               	movwf	SendNEC_wait@toggle& (0+255),b
 18040                           
 18041                           ; BSR set to: 0
 18042  009BCA  D000               	goto	l12192
 18043  009BCC                     l12192:
 18044                           
 18045                           ; BSR set to: 0
 18046                           ;IR.c: 445: }
 18047                           ;IR.c: 446: toggle++;
 18048  009BCC  0100               	movlb	0	; () banked
 18049  009BCE  2B7A               	incf	SendNEC_wait@toggle& (0+255),f,b
 18050                           
 18051                           ;IR.c: 447: }
 18052  009BD0  D005               	goto	l12198
 18053  009BD2                     l12194:
 18054                           
 18055                           ; BSR set to: 0
 18056                           ;IR.c: 448: else
 18057                           ;IR.c: 449: {
 18058                           ;IR.c: 450: (LATC &= ~0x08);
 18059  009BD2  968B               	bcf	3979,3,c	;volatile
 18060                           
 18061                           ; BSR set to: 0
 18062                           ;IR.c: 451: toggle = 0;
 18063  009BD4  0E00               	movlw	0
 18064  009BD6  0100               	movlb	0	; () banked
 18065  009BD8  6F7A               	movwf	SendNEC_wait@toggle& (0+255),b
 18066                           
 18067                           ; BSR set to: 0
 18068  009BDA  D000               	goto	l12198
 18069  009BDC                     l12198:
 18070  009BDC  0100               	movlb	0	; () banked
 18071  009BDE  51FF               	movf	_Sent& (0+255),w,b	;volatile
 18072  009BE0  B4D8               	btfsc	status,2,c
 18073  009BE2  D7E0               	goto	l12180
 18074                           
 18075                           ; BSR set to: 0
 18076                           ;IR.c: 452: }
 18077                           ;IR.c: 453: }
 18078                           ;IR.c: 455: if(IRbitPosition)
 18079                           
 18080                           ; BSR set to: 0
 18081  009BE4  504C               	movf	_IRbitPosition,w,c	;volatile
 18082  009BE6  A4D8               	btfss	status,2,c
 18083                           
 18084                           ; BSR set to: 0
 18085                           ;IR.c: 456: {
 18086                           ;IR.c: 458: __nop();
 18087  009BE8  F000               	nop	
 18088                           
 18089                           ;IR.c: 459: }
 18090                           ;IR.c: 461: INTCONbits.PEIE = 1;
 18091  009BEA  8CF2               	bsf	intcon,6,c	;volatile
 18092                           
 18093                           ;IR.c: 462: delayUS(8000);
 18094  009BEC  0E40               	movlw	64
 18095  009BEE  0100               	movlb	0	; () banked
 18096  009BF0  6F60               	movwf	delayUS@US& (0+255),b
 18097  009BF2  0E1F               	movlw	31
 18098  009BF4  6F61               	movwf	(delayUS@US+1)& (0+255),b
 18099  009BF6  0E00               	movlw	0
 18100  009BF8  6F62               	movwf	(delayUS@US+2)& (0+255),b
 18101  009BFA  0E00               	movlw	0
 18102  009BFC  6F63               	movwf	(delayUS@US+3)& (0+255),b
 18103  009BFE  EC3F  F051         	call	_delayUS	;wreg free
 18104                           
 18105                           ;IR.c: 463: IRpinOLD = ReadIRpin();
 18106  009C02  ECF8  F054         	call	_ReadIRpin	;wreg free
 18107  009C06  6E40               	movwf	_IRpinOLD,c
 18108                           
 18109                           ;IR.c: 464: INTCONbits.RBIF = 0;
 18110  009C08  90F2               	bcf	intcon,0,c	;volatile
 18111                           
 18112                           ;IR.c: 465: (IOCBbits.IOCB4 = 1);
 18113  009C0A  887D               	bsf	3965,4,c	;volatile
 18114                           
 18115                           ;IR.c: 466: INTCONbits.RBIE = 1;
 18116  009C0C  86F2               	bsf	intcon,3,c	;volatile
 18117  009C0E  0012               	return		;funcret
 18118  009C10                     __end_of_SendNEC_wait:
 18119                           	opt stack 0
 18120                           tblptru	equ	0xFF8
 18121                           tblptrh	equ	0xFF7
 18122                           tblptrl	equ	0xFF6
 18123                           tablat	equ	0xFF5
 18124                           prodh	equ	0xFF4
 18125                           prodl	equ	0xFF3
 18126                           intcon	equ	0xFF2
 18127                           indf0	equ	0xFEF
 18128                           postinc0	equ	0xFEE
 18129                           plusw0	equ	0xFEB
 18130                           fsr0h	equ	0xFEA
 18131                           fsr0l	equ	0xFE9
 18132                           wreg	equ	0xFE8
 18133                           indf1	equ	0xFE7
 18134                           postdec1	equ	0xFE5
 18135                           fsr1h	equ	0xFE2
 18136                           fsr1l	equ	0xFE1
 18137                           indf2	equ	0xFDF
 18138                           postinc2	equ	0xFDE
 18139                           plusw2	equ	0xFDB
 18140                           fsr2h	equ	0xFDA
 18141                           fsr2l	equ	0xFD9
 18142                           status	equ	0xFD8
 18143                           
 18144 ;; *************** function _SendNEC_bytes *****************
 18145 ;; Defined at:
 18146 ;;		line 356 in file "IR.c"
 18147 ;; Parameters:    Size  Location     Type
 18148 ;;  code            4   16[BANK0 ] unsigned long 
 18149 ;;  RepeatAmount    1   20[BANK0 ] unsigned char 
 18150 ;; Auto vars:     Size  Location     Type
 18151 ;;		None
 18152 ;; Return value:  Size  Location     Type
 18153 ;;                  1    wreg      unsigned char 
 18154 ;; Registers used:
 18155 ;;		wreg, status,2, status,0, cstack
 18156 ;; Tracked objects:
 18157 ;;		On entry : 0/0
 18158 ;;		On exit  : 0/0
 18159 ;;		Unchanged: 0/0
 18160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18161 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18164 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18165 ;;Total ram usage:        5 bytes
 18166 ;; Hardware stack levels used:    1
 18167 ;; Hardware stack levels required when called:    6
 18168 ;; This function calls:
 18169 ;;		_Reverse_4Byte
 18170 ;; This function is called by:
 18171 ;;		_SendNEC_wait
 18172 ;; This function uses a non-reentrant model
 18173 ;;
 18174                           
 18175                           	psect	text19
 18176  009D34                     __ptext19:
 18177                           	opt stack 0
 18178  009D34                     _SendNEC_bytes:
 18179                           	opt stack 22
 18180                           
 18181                           ;IR.c: 385: if(Sent)
 18182                           
 18183                           ;incstack = 0
 18184  009D34  0100               	movlb	0	; () banked
 18185  009D36  51FF               	movf	_Sent& (0+255),w,b	;volatile
 18186  009D38  B4D8               	btfsc	status,2,c
 18187  009D3A  0012               	return	
 18188                           
 18189                           ; BSR set to: 0
 18190                           ;IR.c: 386: {
 18191                           ;IR.c: 388: if(!code)
 18192  009D3C  0100               	movlb	0	; () banked
 18193  009D3E  5170               	movf	SendNEC_bytes@code& (0+255),w,b
 18194  009D40  0100               	movlb	0	; () banked
 18195  009D42  1171               	iorwf	(SendNEC_bytes@code+1)& (0+255),w,b
 18196  009D44  0100               	movlb	0	; () banked
 18197  009D46  1172               	iorwf	(SendNEC_bytes@code+2)& (0+255),w,b
 18198  009D48  0100               	movlb	0	; () banked
 18199  009D4A  1173               	iorwf	(SendNEC_bytes@code+3)& (0+255),w,b
 18200  009D4C  B4D8               	btfsc	status,2,c
 18201  009D4E  0012               	return	
 18202  009D50  D001               	goto	l10820
 18203                           
 18204                           ; BSR set to: 0
 18205                           ;IR.c: 389: {
 18206                           ;IR.c: 390: return 0;
 18207                           ;	Return value of _SendNEC_bytes is never used
 18208  009D52  0012               	return	
 18209  009D54                     l10820:
 18210                           
 18211                           ; BSR set to: 0
 18212                           ;IR.c: 391: }
 18213                           ;IR.c: 392: RF_IR = 66;
 18214  009D54  0E42               	movlw	66
 18215  009D56  6E4E               	movwf	_RF_IR,c
 18216                           
 18217                           ;IR.c: 393: Sent = 0;
 18218  009D58  0E00               	movlw	0
 18219  009D5A  0100               	movlb	0	; () banked
 18220  009D5C  6FFF               	movwf	_Sent& (0+255),b	;volatile
 18221                           
 18222                           ;IR.c: 394: IRsendFlag = 1;
 18223  009D5E  0E01               	movlw	1
 18224  009D60  0100               	movlb	0	; () banked
 18225  009D62  6FFC               	movwf	_IRsendFlag& (0+255),b
 18226                           
 18227                           ;IR.c: 395: IRcodeBit = 0;
 18228  009D64  0E00               	movlw	0
 18229  009D66  0100               	movlb	0	; () banked
 18230  009D68  6FFA               	movwf	_IRcodeBit& (0+255),b
 18231                           
 18232                           ;IR.c: 396: IRcodePlace = 7;
 18233  009D6A  0E07               	movlw	7
 18234  009D6C  6E4D               	movwf	_IRcodePlace,c
 18235                           
 18236                           ; BSR set to: 0
 18237                           ;IR.c: 397: IRsendCode = Reverse_4Byte(code);
 18238  009D6E  C070  F060         	movff	SendNEC_bytes@code,Reverse_4Byte@This
 18239  009D72  C071  F061         	movff	SendNEC_bytes@code+1,Reverse_4Byte@This+1
 18240  009D76  C072  F062         	movff	SendNEC_bytes@code+2,Reverse_4Byte@This+2
 18241  009D7A  C073  F063         	movff	SendNEC_bytes@code+3,Reverse_4Byte@This+3
 18242  009D7E  ECE4  F01B         	call	_Reverse_4Byte	;wreg free
 18243  009D82  C060  F03A         	movff	?_Reverse_4Byte,_IRsendCode
 18244  009D86  C061  F03B         	movff	?_Reverse_4Byte+1,_IRsendCode+1
 18245  009D8A  C062  F03C         	movff	?_Reverse_4Byte+2,_IRsendCode+2
 18246  009D8E  C063  F03D         	movff	?_Reverse_4Byte+3,_IRsendCode+3
 18247                           
 18248                           ;IR.c: 398: if(RepeatAmount)
 18249  009D92  0100               	movlb	0	; () banked
 18250  009D94  5174               	movf	SendNEC_bytes@RepeatAmount& (0+255),w,b
 18251  009D96  0100               	movlb	0	; () banked
 18252  009D98  B4D8               	btfsc	status,2,c
 18253  009D9A  D003               	goto	l10828
 18254                           
 18255                           ; BSR set to: 0
 18256                           ;IR.c: 399: {
 18257                           ;IR.c: 400: IRrepeatflag = 1;
 18258  009D9C  0E01               	movlw	1
 18259  009D9E  6E43               	movwf	_IRrepeatflag,c
 18260  009DA0  D000               	goto	l10828
 18261  009DA2                     l10828:
 18262                           
 18263                           ; BSR set to: 0
 18264                           ;IR.c: 401: }
 18265                           ;IR.c: 402: IRrepeatAmount = RepeatAmount;
 18266  009DA2  C074  F042         	movff	SendNEC_bytes@RepeatAmount,_IRrepeatAmount
 18267                           
 18268                           ;IR.c: 403: (TMR2 = 0);
 18269  009DA6  0E00               	movlw	0
 18270  009DA8  6ECC               	movwf	4044,c	;volatile
 18271                           
 18272                           ;IR.c: 404: (PR2 = 150);
 18273  009DAA  0E96               	movlw	150
 18274  009DAC  6ECB               	movwf	4043,c	;volatile
 18275                           
 18276                           ;IR.c: 405: RF_IR_Postscaler = 4;
 18277  009DAE  0E04               	movlw	4
 18278  009DB0  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 18279                           
 18280                           ;IR.c: 406: (IRmod = 1);
 18281  009DB2  0E01               	movlw	1
 18282  009DB4  0100               	movlb	0	; () banked
 18283  009DB6  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 18284                           
 18285                           ; BSR set to: 0
 18286                           ;IR.c: 407: (T2CONbits.TMR2ON = 1);
 18287  009DB8  84CA               	bsf	4042,2,c	;volatile
 18288                           
 18289                           ; BSR set to: 0
 18290                           ;IR.c: 408: return 1;
 18291                           ;	Return value of _SendNEC_bytes is never used
 18292  009DBA  0012               	return	
 18293                           
 18294                           ; BSR set to: 0
 18295                           
 18296                           ; BSR set to: 0
 18297                           ;IR.c: 409: }
 18298                           ;IR.c: 410: return 2;
 18299                           ;	Return value of _SendNEC_bytes is never used
 18300  009DBC  0012               	return		;funcret
 18301  009DBE                     __end_of_SendNEC_bytes:
 18302                           	opt stack 0
 18303                           tblptru	equ	0xFF8
 18304                           tblptrh	equ	0xFF7
 18305                           tblptrl	equ	0xFF6
 18306                           tablat	equ	0xFF5
 18307                           prodh	equ	0xFF4
 18308                           prodl	equ	0xFF3
 18309                           intcon	equ	0xFF2
 18310                           indf0	equ	0xFEF
 18311                           postinc0	equ	0xFEE
 18312                           plusw0	equ	0xFEB
 18313                           fsr0h	equ	0xFEA
 18314                           fsr0l	equ	0xFE9
 18315                           wreg	equ	0xFE8
 18316                           indf1	equ	0xFE7
 18317                           postdec1	equ	0xFE5
 18318                           fsr1h	equ	0xFE2
 18319                           fsr1l	equ	0xFE1
 18320                           indf2	equ	0xFDF
 18321                           postinc2	equ	0xFDE
 18322                           plusw2	equ	0xFDB
 18323                           fsr2h	equ	0xFDA
 18324                           fsr2l	equ	0xFD9
 18325                           status	equ	0xFD8
 18326                           
 18327 ;; *************** function _Reverse_4Byte *****************
 18328 ;; Defined at:
 18329 ;;		line 486 in file "MISC.c"
 18330 ;; Parameters:    Size  Location     Type
 18331 ;;  This            4    0[BANK0 ] unsigned long 
 18332 ;; Auto vars:     Size  Location     Type
 18333 ;;  temp            4   12[BANK0 ] unsigned long 
 18334 ;; Return value:  Size  Location     Type
 18335 ;;                  4    0[BANK0 ] unsigned long 
 18336 ;; Registers used:
 18337 ;;		wreg, status,2, status,0
 18338 ;; Tracked objects:
 18339 ;;		On entry : 0/0
 18340 ;;		On exit  : 0/0
 18341 ;;		Unchanged: 0/0
 18342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18343 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18344 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18345 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18346 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18347 ;;Total ram usage:       16 bytes
 18348 ;; Hardware stack levels used:    1
 18349 ;; Hardware stack levels required when called:    5
 18350 ;; This function calls:
 18351 ;;		Nothing
 18352 ;; This function is called by:
 18353 ;;		_SendNEC_bytes
 18354 ;; This function uses a non-reentrant model
 18355 ;;
 18356                           
 18357                           	psect	text20
 18358  0037C8                     __ptext20:
 18359                           	opt stack 0
 18360  0037C8                     _Reverse_4Byte:
 18361                           	opt stack 22
 18362                           
 18363                           ;MISC.c: 488: unsigned long temp=0;
 18364                           
 18365                           ; BSR set to: 0
 18366                           ;incstack = 0
 18367  0037C8  0E00               	movlw	0
 18368  0037CA  0100               	movlb	0	; () banked
 18369  0037CC  6F6C               	movwf	Reverse_4Byte@temp& (0+255),b
 18370  0037CE  0E00               	movlw	0
 18371  0037D0  6F6D               	movwf	(Reverse_4Byte@temp+1)& (0+255),b
 18372  0037D2  0E00               	movlw	0
 18373  0037D4  6F6E               	movwf	(Reverse_4Byte@temp+2)& (0+255),b
 18374  0037D6  0E00               	movlw	0
 18375  0037D8  6F6F               	movwf	(Reverse_4Byte@temp+3)& (0+255),b
 18376                           
 18377                           ; BSR set to: 0
 18378                           ;MISC.c: 490: temp += (This & 0x00000001) << 31;
 18379  0037DA  0E01               	movlw	1
 18380  0037DC  0100               	movlb	0	; () banked
 18381  0037DE  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 18382  0037E0  0100               	movlb	0	; () banked
 18383  0037E2  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 18384  0037E4  0E00               	movlw	0
 18385  0037E6  0100               	movlb	0	; () banked
 18386  0037E8  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 18387  0037EA  0100               	movlb	0	; () banked
 18388  0037EC  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 18389  0037EE  0E00               	movlw	0
 18390  0037F0  0100               	movlb	0	; () banked
 18391  0037F2  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 18392  0037F4  0100               	movlb	0	; () banked
 18393  0037F6  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 18394  0037F8  0E00               	movlw	0
 18395  0037FA  0100               	movlb	0	; () banked
 18396  0037FC  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 18397  0037FE  0100               	movlb	0	; () banked
 18398  003800  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 18399  003802  0E1F               	movlw	31
 18400  003804                     u10775:
 18401  003804  90D8               	bcf	status,0,c
 18402  003806  0100               	movlb	0	; () banked
 18403  003808  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 18404  00380A  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18405  00380C  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18406  00380E  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18407  003810  2EE8               	decfsz	wreg,f,c
 18408  003812  D7F8               	goto	u10775
 18409  003814  0100               	movlb	0	; () banked
 18410  003816  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 18411  003818  0100               	movlb	0	; () banked
 18412  00381A  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18413  00381C  0100               	movlb	0	; () banked
 18414  00381E  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 18415  003820  0100               	movlb	0	; () banked
 18416  003822  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18417  003824  0100               	movlb	0	; () banked
 18418  003826  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 18419  003828  0100               	movlb	0	; () banked
 18420  00382A  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18421  00382C  0100               	movlb	0	; () banked
 18422  00382E  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 18423  003830  0100               	movlb	0	; () banked
 18424  003832  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18425                           
 18426                           ; BSR set to: 0
 18427                           ;MISC.c: 491: temp += (This & 0x00000002) << 29;
 18428  003834  0E02               	movlw	2
 18429  003836  0100               	movlb	0	; () banked
 18430  003838  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 18431  00383A  0100               	movlb	0	; () banked
 18432  00383C  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 18433  00383E  0E00               	movlw	0
 18434  003840  0100               	movlb	0	; () banked
 18435  003842  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 18436  003844  0100               	movlb	0	; () banked
 18437  003846  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 18438  003848  0E00               	movlw	0
 18439  00384A  0100               	movlb	0	; () banked
 18440  00384C  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 18441  00384E  0100               	movlb	0	; () banked
 18442  003850  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 18443  003852  0E00               	movlw	0
 18444  003854  0100               	movlb	0	; () banked
 18445  003856  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 18446  003858  0100               	movlb	0	; () banked
 18447  00385A  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 18448  00385C  0E1D               	movlw	29
 18449  00385E                     u10785:
 18450  00385E  90D8               	bcf	status,0,c
 18451  003860  0100               	movlb	0	; () banked
 18452  003862  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 18453  003864  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18454  003866  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18455  003868  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18456  00386A  2EE8               	decfsz	wreg,f,c
 18457  00386C  D7F8               	goto	u10785
 18458  00386E  0100               	movlb	0	; () banked
 18459  003870  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 18460  003872  0100               	movlb	0	; () banked
 18461  003874  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18462  003876  0100               	movlb	0	; () banked
 18463  003878  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 18464  00387A  0100               	movlb	0	; () banked
 18465  00387C  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18466  00387E  0100               	movlb	0	; () banked
 18467  003880  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 18468  003882  0100               	movlb	0	; () banked
 18469  003884  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18470  003886  0100               	movlb	0	; () banked
 18471  003888  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 18472  00388A  0100               	movlb	0	; () banked
 18473  00388C  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18474                           
 18475                           ; BSR set to: 0
 18476                           ;MISC.c: 492: temp += (This & 0x00000004) << 27;
 18477  00388E  0E04               	movlw	4
 18478  003890  0100               	movlb	0	; () banked
 18479  003892  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 18480  003894  0100               	movlb	0	; () banked
 18481  003896  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 18482  003898  0E00               	movlw	0
 18483  00389A  0100               	movlb	0	; () banked
 18484  00389C  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 18485  00389E  0100               	movlb	0	; () banked
 18486  0038A0  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 18487  0038A2  0E00               	movlw	0
 18488  0038A4  0100               	movlb	0	; () banked
 18489  0038A6  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 18490  0038A8  0100               	movlb	0	; () banked
 18491  0038AA  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 18492  0038AC  0E00               	movlw	0
 18493  0038AE  0100               	movlb	0	; () banked
 18494  0038B0  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 18495  0038B2  0100               	movlb	0	; () banked
 18496  0038B4  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 18497  0038B6  0E1B               	movlw	27
 18498  0038B8                     u10795:
 18499  0038B8  90D8               	bcf	status,0,c
 18500  0038BA  0100               	movlb	0	; () banked
 18501  0038BC  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 18502  0038BE  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18503  0038C0  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18504  0038C2  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18505  0038C4  2EE8               	decfsz	wreg,f,c
 18506  0038C6  D7F8               	goto	u10795
 18507  0038C8  0100               	movlb	0	; () banked
 18508  0038CA  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 18509  0038CC  0100               	movlb	0	; () banked
 18510  0038CE  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18511  0038D0  0100               	movlb	0	; () banked
 18512  0038D2  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 18513  0038D4  0100               	movlb	0	; () banked
 18514  0038D6  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18515  0038D8  0100               	movlb	0	; () banked
 18516  0038DA  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 18517  0038DC  0100               	movlb	0	; () banked
 18518  0038DE  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18519  0038E0  0100               	movlb	0	; () banked
 18520  0038E2  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 18521  0038E4  0100               	movlb	0	; () banked
 18522  0038E6  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18523                           
 18524                           ; BSR set to: 0
 18525                           ;MISC.c: 493: temp += (This & 0x00000008) << 25;
 18526  0038E8  0E08               	movlw	8
 18527  0038EA  0100               	movlb	0	; () banked
 18528  0038EC  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 18529  0038EE  0100               	movlb	0	; () banked
 18530  0038F0  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 18531  0038F2  0E00               	movlw	0
 18532  0038F4  0100               	movlb	0	; () banked
 18533  0038F6  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 18534  0038F8  0100               	movlb	0	; () banked
 18535  0038FA  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 18536  0038FC  0E00               	movlw	0
 18537  0038FE  0100               	movlb	0	; () banked
 18538  003900  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 18539  003902  0100               	movlb	0	; () banked
 18540  003904  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 18541  003906  0E00               	movlw	0
 18542  003908  0100               	movlb	0	; () banked
 18543  00390A  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 18544  00390C  0100               	movlb	0	; () banked
 18545  00390E  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 18546  003910  0E19               	movlw	25
 18547  003912                     u10805:
 18548  003912  90D8               	bcf	status,0,c
 18549  003914  0100               	movlb	0	; () banked
 18550  003916  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 18551  003918  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18552  00391A  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18553  00391C  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18554  00391E  2EE8               	decfsz	wreg,f,c
 18555  003920  D7F8               	goto	u10805
 18556  003922  0100               	movlb	0	; () banked
 18557  003924  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 18558  003926  0100               	movlb	0	; () banked
 18559  003928  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18560  00392A  0100               	movlb	0	; () banked
 18561  00392C  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 18562  00392E  0100               	movlb	0	; () banked
 18563  003930  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18564  003932  0100               	movlb	0	; () banked
 18565  003934  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 18566  003936  0100               	movlb	0	; () banked
 18567  003938  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18568  00393A  0100               	movlb	0	; () banked
 18569  00393C  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 18570  00393E  0100               	movlb	0	; () banked
 18571  003940  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18572                           
 18573                           ; BSR set to: 0
 18574                           ;MISC.c: 494: temp += (This & 0x00000010) << 23;
 18575  003942  0E10               	movlw	16
 18576  003944  0100               	movlb	0	; () banked
 18577  003946  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 18578  003948  0100               	movlb	0	; () banked
 18579  00394A  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 18580  00394C  0E00               	movlw	0
 18581  00394E  0100               	movlb	0	; () banked
 18582  003950  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 18583  003952  0100               	movlb	0	; () banked
 18584  003954  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 18585  003956  0E00               	movlw	0
 18586  003958  0100               	movlb	0	; () banked
 18587  00395A  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 18588  00395C  0100               	movlb	0	; () banked
 18589  00395E  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 18590  003960  0E00               	movlw	0
 18591  003962  0100               	movlb	0	; () banked
 18592  003964  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 18593  003966  0100               	movlb	0	; () banked
 18594  003968  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 18595  00396A  0E17               	movlw	23
 18596  00396C                     u10815:
 18597  00396C  90D8               	bcf	status,0,c
 18598  00396E  0100               	movlb	0	; () banked
 18599  003970  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 18600  003972  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18601  003974  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18602  003976  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18603  003978  2EE8               	decfsz	wreg,f,c
 18604  00397A  D7F8               	goto	u10815
 18605  00397C  0100               	movlb	0	; () banked
 18606  00397E  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 18607  003980  0100               	movlb	0	; () banked
 18608  003982  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18609  003984  0100               	movlb	0	; () banked
 18610  003986  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 18611  003988  0100               	movlb	0	; () banked
 18612  00398A  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18613  00398C  0100               	movlb	0	; () banked
 18614  00398E  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 18615  003990  0100               	movlb	0	; () banked
 18616  003992  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18617  003994  0100               	movlb	0	; () banked
 18618  003996  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 18619  003998  0100               	movlb	0	; () banked
 18620  00399A  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18621                           
 18622                           ; BSR set to: 0
 18623                           ;MISC.c: 495: temp += (This & 0x00000020) << 21;
 18624  00399C  0E20               	movlw	32
 18625  00399E  0100               	movlb	0	; () banked
 18626  0039A0  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 18627  0039A2  0100               	movlb	0	; () banked
 18628  0039A4  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 18629  0039A6  0E00               	movlw	0
 18630  0039A8  0100               	movlb	0	; () banked
 18631  0039AA  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 18632  0039AC  0100               	movlb	0	; () banked
 18633  0039AE  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 18634  0039B0  0E00               	movlw	0
 18635  0039B2  0100               	movlb	0	; () banked
 18636  0039B4  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 18637  0039B6  0100               	movlb	0	; () banked
 18638  0039B8  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 18639  0039BA  0E00               	movlw	0
 18640  0039BC  0100               	movlb	0	; () banked
 18641  0039BE  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 18642  0039C0  0100               	movlb	0	; () banked
 18643  0039C2  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 18644  0039C4  0E15               	movlw	21
 18645  0039C6                     u10825:
 18646  0039C6  90D8               	bcf	status,0,c
 18647  0039C8  0100               	movlb	0	; () banked
 18648  0039CA  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 18649  0039CC  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18650  0039CE  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18651  0039D0  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18652  0039D2  2EE8               	decfsz	wreg,f,c
 18653  0039D4  D7F8               	goto	u10825
 18654  0039D6  0100               	movlb	0	; () banked
 18655  0039D8  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 18656  0039DA  0100               	movlb	0	; () banked
 18657  0039DC  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18658  0039DE  0100               	movlb	0	; () banked
 18659  0039E0  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 18660  0039E2  0100               	movlb	0	; () banked
 18661  0039E4  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18662  0039E6  0100               	movlb	0	; () banked
 18663  0039E8  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 18664  0039EA  0100               	movlb	0	; () banked
 18665  0039EC  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18666  0039EE  0100               	movlb	0	; () banked
 18667  0039F0  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 18668  0039F2  0100               	movlb	0	; () banked
 18669  0039F4  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18670                           
 18671                           ; BSR set to: 0
 18672                           ;MISC.c: 496: temp += (This & 0x00000040) << 19;
 18673  0039F6  0E40               	movlw	64
 18674  0039F8  0100               	movlb	0	; () banked
 18675  0039FA  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 18676  0039FC  0100               	movlb	0	; () banked
 18677  0039FE  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 18678  003A00  0E00               	movlw	0
 18679  003A02  0100               	movlb	0	; () banked
 18680  003A04  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 18681  003A06  0100               	movlb	0	; () banked
 18682  003A08  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 18683  003A0A  0E00               	movlw	0
 18684  003A0C  0100               	movlb	0	; () banked
 18685  003A0E  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 18686  003A10  0100               	movlb	0	; () banked
 18687  003A12  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 18688  003A14  0E00               	movlw	0
 18689  003A16  0100               	movlb	0	; () banked
 18690  003A18  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 18691  003A1A  0100               	movlb	0	; () banked
 18692  003A1C  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 18693  003A1E  0E13               	movlw	19
 18694  003A20                     u10835:
 18695  003A20  90D8               	bcf	status,0,c
 18696  003A22  0100               	movlb	0	; () banked
 18697  003A24  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 18698  003A26  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18699  003A28  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18700  003A2A  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18701  003A2C  2EE8               	decfsz	wreg,f,c
 18702  003A2E  D7F8               	goto	u10835
 18703  003A30  0100               	movlb	0	; () banked
 18704  003A32  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 18705  003A34  0100               	movlb	0	; () banked
 18706  003A36  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18707  003A38  0100               	movlb	0	; () banked
 18708  003A3A  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 18709  003A3C  0100               	movlb	0	; () banked
 18710  003A3E  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18711  003A40  0100               	movlb	0	; () banked
 18712  003A42  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 18713  003A44  0100               	movlb	0	; () banked
 18714  003A46  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18715  003A48  0100               	movlb	0	; () banked
 18716  003A4A  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 18717  003A4C  0100               	movlb	0	; () banked
 18718  003A4E  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18719                           
 18720                           ; BSR set to: 0
 18721                           ;MISC.c: 497: temp += (This & 0x00000080) << 17;
 18722  003A50  0E80               	movlw	128
 18723  003A52  0100               	movlb	0	; () banked
 18724  003A54  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 18725  003A56  0100               	movlb	0	; () banked
 18726  003A58  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 18727  003A5A  0E00               	movlw	0
 18728  003A5C  0100               	movlb	0	; () banked
 18729  003A5E  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 18730  003A60  0100               	movlb	0	; () banked
 18731  003A62  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 18732  003A64  0E00               	movlw	0
 18733  003A66  0100               	movlb	0	; () banked
 18734  003A68  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 18735  003A6A  0100               	movlb	0	; () banked
 18736  003A6C  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 18737  003A6E  0E00               	movlw	0
 18738  003A70  0100               	movlb	0	; () banked
 18739  003A72  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 18740  003A74  0100               	movlb	0	; () banked
 18741  003A76  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 18742  003A78  0E11               	movlw	17
 18743  003A7A                     u10845:
 18744  003A7A  90D8               	bcf	status,0,c
 18745  003A7C  0100               	movlb	0	; () banked
 18746  003A7E  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 18747  003A80  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18748  003A82  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18749  003A84  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18750  003A86  2EE8               	decfsz	wreg,f,c
 18751  003A88  D7F8               	goto	u10845
 18752  003A8A  0100               	movlb	0	; () banked
 18753  003A8C  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 18754  003A8E  0100               	movlb	0	; () banked
 18755  003A90  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18756  003A92  0100               	movlb	0	; () banked
 18757  003A94  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 18758  003A96  0100               	movlb	0	; () banked
 18759  003A98  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18760  003A9A  0100               	movlb	0	; () banked
 18761  003A9C  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 18762  003A9E  0100               	movlb	0	; () banked
 18763  003AA0  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18764  003AA2  0100               	movlb	0	; () banked
 18765  003AA4  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 18766  003AA6  0100               	movlb	0	; () banked
 18767  003AA8  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18768                           
 18769                           ; BSR set to: 0
 18770                           ;MISC.c: 498: temp += (This & 0x00000100) << 15;
 18771  003AAA  0E00               	movlw	0
 18772  003AAC  0100               	movlb	0	; () banked
 18773  003AAE  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 18774  003AB0  0100               	movlb	0	; () banked
 18775  003AB2  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 18776  003AB4  0E01               	movlw	1
 18777  003AB6  0100               	movlb	0	; () banked
 18778  003AB8  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 18779  003ABA  0100               	movlb	0	; () banked
 18780  003ABC  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 18781  003ABE  0E00               	movlw	0
 18782  003AC0  0100               	movlb	0	; () banked
 18783  003AC2  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 18784  003AC4  0100               	movlb	0	; () banked
 18785  003AC6  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 18786  003AC8  0E00               	movlw	0
 18787  003ACA  0100               	movlb	0	; () banked
 18788  003ACC  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 18789  003ACE  0100               	movlb	0	; () banked
 18790  003AD0  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 18791  003AD2  0E0F               	movlw	15
 18792  003AD4                     u10855:
 18793  003AD4  90D8               	bcf	status,0,c
 18794  003AD6  0100               	movlb	0	; () banked
 18795  003AD8  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 18796  003ADA  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18797  003ADC  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18798  003ADE  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18799  003AE0  2EE8               	decfsz	wreg,f,c
 18800  003AE2  D7F8               	goto	u10855
 18801  003AE4  0100               	movlb	0	; () banked
 18802  003AE6  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 18803  003AE8  0100               	movlb	0	; () banked
 18804  003AEA  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18805  003AEC  0100               	movlb	0	; () banked
 18806  003AEE  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 18807  003AF0  0100               	movlb	0	; () banked
 18808  003AF2  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18809  003AF4  0100               	movlb	0	; () banked
 18810  003AF6  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 18811  003AF8  0100               	movlb	0	; () banked
 18812  003AFA  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18813  003AFC  0100               	movlb	0	; () banked
 18814  003AFE  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 18815  003B00  0100               	movlb	0	; () banked
 18816  003B02  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18817                           
 18818                           ; BSR set to: 0
 18819                           ;MISC.c: 499: temp += (This & 0x00000200) << 13;
 18820  003B04  0E00               	movlw	0
 18821  003B06  0100               	movlb	0	; () banked
 18822  003B08  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 18823  003B0A  0100               	movlb	0	; () banked
 18824  003B0C  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 18825  003B0E  0E02               	movlw	2
 18826  003B10  0100               	movlb	0	; () banked
 18827  003B12  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 18828  003B14  0100               	movlb	0	; () banked
 18829  003B16  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 18830  003B18  0E00               	movlw	0
 18831  003B1A  0100               	movlb	0	; () banked
 18832  003B1C  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 18833  003B1E  0100               	movlb	0	; () banked
 18834  003B20  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 18835  003B22  0E00               	movlw	0
 18836  003B24  0100               	movlb	0	; () banked
 18837  003B26  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 18838  003B28  0100               	movlb	0	; () banked
 18839  003B2A  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 18840  003B2C  0E0D               	movlw	13
 18841  003B2E                     u10865:
 18842  003B2E  90D8               	bcf	status,0,c
 18843  003B30  0100               	movlb	0	; () banked
 18844  003B32  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 18845  003B34  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18846  003B36  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18847  003B38  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18848  003B3A  2EE8               	decfsz	wreg,f,c
 18849  003B3C  D7F8               	goto	u10865
 18850  003B3E  0100               	movlb	0	; () banked
 18851  003B40  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 18852  003B42  0100               	movlb	0	; () banked
 18853  003B44  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18854  003B46  0100               	movlb	0	; () banked
 18855  003B48  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 18856  003B4A  0100               	movlb	0	; () banked
 18857  003B4C  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18858  003B4E  0100               	movlb	0	; () banked
 18859  003B50  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 18860  003B52  0100               	movlb	0	; () banked
 18861  003B54  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18862  003B56  0100               	movlb	0	; () banked
 18863  003B58  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 18864  003B5A  0100               	movlb	0	; () banked
 18865  003B5C  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18866                           
 18867                           ; BSR set to: 0
 18868                           ;MISC.c: 500: temp += (This & 0x00000400) << 11;
 18869  003B5E  0E00               	movlw	0
 18870  003B60  0100               	movlb	0	; () banked
 18871  003B62  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 18872  003B64  0100               	movlb	0	; () banked
 18873  003B66  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 18874  003B68  0E04               	movlw	4
 18875  003B6A  0100               	movlb	0	; () banked
 18876  003B6C  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 18877  003B6E  0100               	movlb	0	; () banked
 18878  003B70  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 18879  003B72  0E00               	movlw	0
 18880  003B74  0100               	movlb	0	; () banked
 18881  003B76  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 18882  003B78  0100               	movlb	0	; () banked
 18883  003B7A  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 18884  003B7C  0E00               	movlw	0
 18885  003B7E  0100               	movlb	0	; () banked
 18886  003B80  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 18887  003B82  0100               	movlb	0	; () banked
 18888  003B84  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 18889  003B86  0E0B               	movlw	11
 18890  003B88                     u10875:
 18891  003B88  90D8               	bcf	status,0,c
 18892  003B8A  0100               	movlb	0	; () banked
 18893  003B8C  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 18894  003B8E  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18895  003B90  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18896  003B92  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18897  003B94  2EE8               	decfsz	wreg,f,c
 18898  003B96  D7F8               	goto	u10875
 18899  003B98  0100               	movlb	0	; () banked
 18900  003B9A  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 18901  003B9C  0100               	movlb	0	; () banked
 18902  003B9E  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18903  003BA0  0100               	movlb	0	; () banked
 18904  003BA2  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 18905  003BA4  0100               	movlb	0	; () banked
 18906  003BA6  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18907  003BA8  0100               	movlb	0	; () banked
 18908  003BAA  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 18909  003BAC  0100               	movlb	0	; () banked
 18910  003BAE  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18911  003BB0  0100               	movlb	0	; () banked
 18912  003BB2  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 18913  003BB4  0100               	movlb	0	; () banked
 18914  003BB6  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18915                           
 18916                           ; BSR set to: 0
 18917                           ;MISC.c: 501: temp += (This & 0x00000800) << 9;
 18918  003BB8  0E00               	movlw	0
 18919  003BBA  0100               	movlb	0	; () banked
 18920  003BBC  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 18921  003BBE  0100               	movlb	0	; () banked
 18922  003BC0  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 18923  003BC2  0E08               	movlw	8
 18924  003BC4  0100               	movlb	0	; () banked
 18925  003BC6  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 18926  003BC8  0100               	movlb	0	; () banked
 18927  003BCA  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 18928  003BCC  0E00               	movlw	0
 18929  003BCE  0100               	movlb	0	; () banked
 18930  003BD0  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 18931  003BD2  0100               	movlb	0	; () banked
 18932  003BD4  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 18933  003BD6  0E00               	movlw	0
 18934  003BD8  0100               	movlb	0	; () banked
 18935  003BDA  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 18936  003BDC  0100               	movlb	0	; () banked
 18937  003BDE  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 18938  003BE0  0E09               	movlw	9
 18939  003BE2                     u10885:
 18940  003BE2  90D8               	bcf	status,0,c
 18941  003BE4  0100               	movlb	0	; () banked
 18942  003BE6  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 18943  003BE8  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18944  003BEA  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18945  003BEC  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18946  003BEE  2EE8               	decfsz	wreg,f,c
 18947  003BF0  D7F8               	goto	u10885
 18948  003BF2  0100               	movlb	0	; () banked
 18949  003BF4  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 18950  003BF6  0100               	movlb	0	; () banked
 18951  003BF8  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18952  003BFA  0100               	movlb	0	; () banked
 18953  003BFC  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 18954  003BFE  0100               	movlb	0	; () banked
 18955  003C00  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18956  003C02  0100               	movlb	0	; () banked
 18957  003C04  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 18958  003C06  0100               	movlb	0	; () banked
 18959  003C08  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18960  003C0A  0100               	movlb	0	; () banked
 18961  003C0C  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 18962  003C0E  0100               	movlb	0	; () banked
 18963  003C10  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18964                           
 18965                           ; BSR set to: 0
 18966                           ;MISC.c: 502: temp += (This & 0x00001000) << 7;
 18967  003C12  0E00               	movlw	0
 18968  003C14  0100               	movlb	0	; () banked
 18969  003C16  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 18970  003C18  0100               	movlb	0	; () banked
 18971  003C1A  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 18972  003C1C  0E10               	movlw	16
 18973  003C1E  0100               	movlb	0	; () banked
 18974  003C20  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 18975  003C22  0100               	movlb	0	; () banked
 18976  003C24  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 18977  003C26  0E00               	movlw	0
 18978  003C28  0100               	movlb	0	; () banked
 18979  003C2A  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 18980  003C2C  0100               	movlb	0	; () banked
 18981  003C2E  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 18982  003C30  0E00               	movlw	0
 18983  003C32  0100               	movlb	0	; () banked
 18984  003C34  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 18985  003C36  0100               	movlb	0	; () banked
 18986  003C38  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 18987  003C3A  0E07               	movlw	7
 18988  003C3C                     u10895:
 18989  003C3C  90D8               	bcf	status,0,c
 18990  003C3E  0100               	movlb	0	; () banked
 18991  003C40  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 18992  003C42  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18993  003C44  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18994  003C46  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18995  003C48  2EE8               	decfsz	wreg,f,c
 18996  003C4A  D7F8               	goto	u10895
 18997  003C4C  0100               	movlb	0	; () banked
 18998  003C4E  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 18999  003C50  0100               	movlb	0	; () banked
 19000  003C52  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19001  003C54  0100               	movlb	0	; () banked
 19002  003C56  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 19003  003C58  0100               	movlb	0	; () banked
 19004  003C5A  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19005  003C5C  0100               	movlb	0	; () banked
 19006  003C5E  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 19007  003C60  0100               	movlb	0	; () banked
 19008  003C62  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19009  003C64  0100               	movlb	0	; () banked
 19010  003C66  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 19011  003C68  0100               	movlb	0	; () banked
 19012  003C6A  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19013                           
 19014                           ; BSR set to: 0
 19015                           ;MISC.c: 503: temp += (This & 0x00002000) << 5;
 19016  003C6C  0E00               	movlw	0
 19017  003C6E  0100               	movlb	0	; () banked
 19018  003C70  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 19019  003C72  0100               	movlb	0	; () banked
 19020  003C74  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 19021  003C76  0E20               	movlw	32
 19022  003C78  0100               	movlb	0	; () banked
 19023  003C7A  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 19024  003C7C  0100               	movlb	0	; () banked
 19025  003C7E  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 19026  003C80  0E00               	movlw	0
 19027  003C82  0100               	movlb	0	; () banked
 19028  003C84  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 19029  003C86  0100               	movlb	0	; () banked
 19030  003C88  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 19031  003C8A  0E00               	movlw	0
 19032  003C8C  0100               	movlb	0	; () banked
 19033  003C8E  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 19034  003C90  0100               	movlb	0	; () banked
 19035  003C92  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 19036  003C94  0E05               	movlw	5
 19037  003C96                     u10905:
 19038  003C96  90D8               	bcf	status,0,c
 19039  003C98  0100               	movlb	0	; () banked
 19040  003C9A  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 19041  003C9C  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19042  003C9E  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19043  003CA0  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19044  003CA2  2EE8               	decfsz	wreg,f,c
 19045  003CA4  D7F8               	goto	u10905
 19046  003CA6  0100               	movlb	0	; () banked
 19047  003CA8  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 19048  003CAA  0100               	movlb	0	; () banked
 19049  003CAC  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19050  003CAE  0100               	movlb	0	; () banked
 19051  003CB0  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 19052  003CB2  0100               	movlb	0	; () banked
 19053  003CB4  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19054  003CB6  0100               	movlb	0	; () banked
 19055  003CB8  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 19056  003CBA  0100               	movlb	0	; () banked
 19057  003CBC  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19058  003CBE  0100               	movlb	0	; () banked
 19059  003CC0  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 19060  003CC2  0100               	movlb	0	; () banked
 19061  003CC4  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19062                           
 19063                           ; BSR set to: 0
 19064                           ;MISC.c: 504: temp += (This & 0x00004000) << 3;
 19065  003CC6  0E00               	movlw	0
 19066  003CC8  0100               	movlb	0	; () banked
 19067  003CCA  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 19068  003CCC  0100               	movlb	0	; () banked
 19069  003CCE  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 19070  003CD0  0E40               	movlw	64
 19071  003CD2  0100               	movlb	0	; () banked
 19072  003CD4  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 19073  003CD6  0100               	movlb	0	; () banked
 19074  003CD8  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 19075  003CDA  0E00               	movlw	0
 19076  003CDC  0100               	movlb	0	; () banked
 19077  003CDE  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 19078  003CE0  0100               	movlb	0	; () banked
 19079  003CE2  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 19080  003CE4  0E00               	movlw	0
 19081  003CE6  0100               	movlb	0	; () banked
 19082  003CE8  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 19083  003CEA  0100               	movlb	0	; () banked
 19084  003CEC  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 19085  003CEE  0E03               	movlw	3
 19086  003CF0                     u10915:
 19087  003CF0  90D8               	bcf	status,0,c
 19088  003CF2  0100               	movlb	0	; () banked
 19089  003CF4  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 19090  003CF6  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19091  003CF8  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19092  003CFA  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19093  003CFC  2EE8               	decfsz	wreg,f,c
 19094  003CFE  D7F8               	goto	u10915
 19095  003D00  0100               	movlb	0	; () banked
 19096  003D02  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 19097  003D04  0100               	movlb	0	; () banked
 19098  003D06  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19099  003D08  0100               	movlb	0	; () banked
 19100  003D0A  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 19101  003D0C  0100               	movlb	0	; () banked
 19102  003D0E  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19103  003D10  0100               	movlb	0	; () banked
 19104  003D12  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 19105  003D14  0100               	movlb	0	; () banked
 19106  003D16  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19107  003D18  0100               	movlb	0	; () banked
 19108  003D1A  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 19109  003D1C  0100               	movlb	0	; () banked
 19110  003D1E  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19111                           
 19112                           ; BSR set to: 0
 19113                           ;MISC.c: 505: temp += (This & 0x00008000) << 1;
 19114  003D20  0E00               	movlw	0
 19115  003D22  0100               	movlb	0	; () banked
 19116  003D24  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 19117  003D26  0100               	movlb	0	; () banked
 19118  003D28  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 19119  003D2A  0E80               	movlw	128
 19120  003D2C  0100               	movlb	0	; () banked
 19121  003D2E  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 19122  003D30  0100               	movlb	0	; () banked
 19123  003D32  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 19124  003D34  0E00               	movlw	0
 19125  003D36  0100               	movlb	0	; () banked
 19126  003D38  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 19127  003D3A  0100               	movlb	0	; () banked
 19128  003D3C  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 19129  003D3E  0E00               	movlw	0
 19130  003D40  0100               	movlb	0	; () banked
 19131  003D42  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 19132  003D44  0100               	movlb	0	; () banked
 19133  003D46  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 19134  003D48  90D8               	bcf	status,0,c
 19135  003D4A  0100               	movlb	0	; () banked
 19136  003D4C  3564               	rlcf	??_Reverse_4Byte& (0+255),w,b
 19137  003D4E  0100               	movlb	0	; () banked
 19138  003D50  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 19139  003D52  0100               	movlb	0	; () banked
 19140  003D54  3565               	rlcf	(??_Reverse_4Byte+1)& (0+255),w,b
 19141  003D56  0100               	movlb	0	; () banked
 19142  003D58  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 19143  003D5A  0100               	movlb	0	; () banked
 19144  003D5C  3566               	rlcf	(??_Reverse_4Byte+2)& (0+255),w,b
 19145  003D5E  0100               	movlb	0	; () banked
 19146  003D60  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 19147  003D62  0100               	movlb	0	; () banked
 19148  003D64  3567               	rlcf	(??_Reverse_4Byte+3)& (0+255),w,b
 19149  003D66  0100               	movlb	0	; () banked
 19150  003D68  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 19151  003D6A  0100               	movlb	0	; () banked
 19152  003D6C  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 19153  003D6E  0100               	movlb	0	; () banked
 19154  003D70  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19155  003D72  0100               	movlb	0	; () banked
 19156  003D74  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 19157  003D76  0100               	movlb	0	; () banked
 19158  003D78  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19159  003D7A  0100               	movlb	0	; () banked
 19160  003D7C  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 19161  003D7E  0100               	movlb	0	; () banked
 19162  003D80  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19163  003D82  0100               	movlb	0	; () banked
 19164  003D84  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 19165  003D86  0100               	movlb	0	; () banked
 19166  003D88  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19167                           
 19168                           ; BSR set to: 0
 19169                           ;MISC.c: 506: temp += (This & 0x00010000) >> 1;
 19170  003D8A  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 19171  003D8E  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 19172  003D92  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 19173  003D96  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 19174  003D9A  0100               	movlb	0	; () banked
 19175  003D9C  90D8               	bcf	status,0,c
 19176  003D9E  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19177  003DA0  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19178  003DA2  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19179  003DA4  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 19180  003DA6  0E00               	movlw	0
 19181  003DA8  0100               	movlb	0	; () banked
 19182  003DAA  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 19183  003DAC  0100               	movlb	0	; () banked
 19184  003DAE  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 19185  003DB0  0E80               	movlw	128
 19186  003DB2  0100               	movlb	0	; () banked
 19187  003DB4  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 19188  003DB6  0100               	movlb	0	; () banked
 19189  003DB8  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 19190  003DBA  0E00               	movlw	0
 19191  003DBC  0100               	movlb	0	; () banked
 19192  003DBE  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 19193  003DC0  0100               	movlb	0	; () banked
 19194  003DC2  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 19195  003DC4  0E00               	movlw	0
 19196  003DC6  0100               	movlb	0	; () banked
 19197  003DC8  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 19198  003DCA  0100               	movlb	0	; () banked
 19199  003DCC  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 19200  003DCE  0100               	movlb	0	; () banked
 19201  003DD0  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 19202  003DD2  0100               	movlb	0	; () banked
 19203  003DD4  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19204  003DD6  0100               	movlb	0	; () banked
 19205  003DD8  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 19206  003DDA  0100               	movlb	0	; () banked
 19207  003DDC  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19208  003DDE  0100               	movlb	0	; () banked
 19209  003DE0  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 19210  003DE2  0100               	movlb	0	; () banked
 19211  003DE4  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19212  003DE6  0100               	movlb	0	; () banked
 19213  003DE8  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 19214  003DEA  0100               	movlb	0	; () banked
 19215  003DEC  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19216                           
 19217                           ; BSR set to: 0
 19218                           ;MISC.c: 507: temp += (This & 0x00020000) >> 3;
 19219  003DEE  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 19220  003DF2  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 19221  003DF6  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 19222  003DFA  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 19223  003DFE  0E04               	movlw	4
 19224  003E00  D006               	goto	u10920
 19225  003E02                     u10925:
 19226  003E02  0100               	movlb	0	; () banked
 19227  003E04  90D8               	bcf	status,0,c
 19228  003E06  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19229  003E08  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19230  003E0A  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19231  003E0C  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 19232  003E0E                     u10920:
 19233  003E0E  2EE8               	decfsz	wreg,f,c
 19234  003E10  D7F8               	goto	u10925
 19235  003E12  0E00               	movlw	0
 19236  003E14  0100               	movlb	0	; () banked
 19237  003E16  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 19238  003E18  0100               	movlb	0	; () banked
 19239  003E1A  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 19240  003E1C  0E40               	movlw	64
 19241  003E1E  0100               	movlb	0	; () banked
 19242  003E20  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 19243  003E22  0100               	movlb	0	; () banked
 19244  003E24  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 19245  003E26  0E00               	movlw	0
 19246  003E28  0100               	movlb	0	; () banked
 19247  003E2A  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 19248  003E2C  0100               	movlb	0	; () banked
 19249  003E2E  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 19250  003E30  0E00               	movlw	0
 19251  003E32  0100               	movlb	0	; () banked
 19252  003E34  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 19253  003E36  0100               	movlb	0	; () banked
 19254  003E38  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 19255  003E3A  0100               	movlb	0	; () banked
 19256  003E3C  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 19257  003E3E  0100               	movlb	0	; () banked
 19258  003E40  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19259  003E42  0100               	movlb	0	; () banked
 19260  003E44  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 19261  003E46  0100               	movlb	0	; () banked
 19262  003E48  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19263  003E4A  0100               	movlb	0	; () banked
 19264  003E4C  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 19265  003E4E  0100               	movlb	0	; () banked
 19266  003E50  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19267  003E52  0100               	movlb	0	; () banked
 19268  003E54  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 19269  003E56  0100               	movlb	0	; () banked
 19270  003E58  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19271                           
 19272                           ; BSR set to: 0
 19273                           ;MISC.c: 508: temp += (This & 0x00040000) >> 5;
 19274  003E5A  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 19275  003E5E  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 19276  003E62  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 19277  003E66  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 19278  003E6A  0E06               	movlw	6
 19279  003E6C  D006               	goto	u10930
 19280  003E6E                     u10935:
 19281  003E6E  0100               	movlb	0	; () banked
 19282  003E70  90D8               	bcf	status,0,c
 19283  003E72  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19284  003E74  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19285  003E76  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19286  003E78  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 19287  003E7A                     u10930:
 19288  003E7A  2EE8               	decfsz	wreg,f,c
 19289  003E7C  D7F8               	goto	u10935
 19290  003E7E  0E00               	movlw	0
 19291  003E80  0100               	movlb	0	; () banked
 19292  003E82  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 19293  003E84  0100               	movlb	0	; () banked
 19294  003E86  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 19295  003E88  0E20               	movlw	32
 19296  003E8A  0100               	movlb	0	; () banked
 19297  003E8C  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 19298  003E8E  0100               	movlb	0	; () banked
 19299  003E90  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 19300  003E92  0E00               	movlw	0
 19301  003E94  0100               	movlb	0	; () banked
 19302  003E96  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 19303  003E98  0100               	movlb	0	; () banked
 19304  003E9A  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 19305  003E9C  0E00               	movlw	0
 19306  003E9E  0100               	movlb	0	; () banked
 19307  003EA0  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 19308  003EA2  0100               	movlb	0	; () banked
 19309  003EA4  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 19310  003EA6  0100               	movlb	0	; () banked
 19311  003EA8  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 19312  003EAA  0100               	movlb	0	; () banked
 19313  003EAC  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19314  003EAE  0100               	movlb	0	; () banked
 19315  003EB0  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 19316  003EB2  0100               	movlb	0	; () banked
 19317  003EB4  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19318  003EB6  0100               	movlb	0	; () banked
 19319  003EB8  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 19320  003EBA  0100               	movlb	0	; () banked
 19321  003EBC  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19322  003EBE  0100               	movlb	0	; () banked
 19323  003EC0  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 19324  003EC2  0100               	movlb	0	; () banked
 19325  003EC4  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19326                           
 19327                           ; BSR set to: 0
 19328                           ;MISC.c: 509: temp += (This & 0x00080000) >> 7;
 19329  003EC6  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 19330  003ECA  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 19331  003ECE  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 19332  003ED2  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 19333  003ED6  0E08               	movlw	8
 19334  003ED8  D006               	goto	u10940
 19335  003EDA                     u10945:
 19336  003EDA  0100               	movlb	0	; () banked
 19337  003EDC  90D8               	bcf	status,0,c
 19338  003EDE  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19339  003EE0  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19340  003EE2  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19341  003EE4  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 19342  003EE6                     u10940:
 19343  003EE6  2EE8               	decfsz	wreg,f,c
 19344  003EE8  D7F8               	goto	u10945
 19345  003EEA  0E00               	movlw	0
 19346  003EEC  0100               	movlb	0	; () banked
 19347  003EEE  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 19348  003EF0  0100               	movlb	0	; () banked
 19349  003EF2  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 19350  003EF4  0E10               	movlw	16
 19351  003EF6  0100               	movlb	0	; () banked
 19352  003EF8  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 19353  003EFA  0100               	movlb	0	; () banked
 19354  003EFC  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 19355  003EFE  0E00               	movlw	0
 19356  003F00  0100               	movlb	0	; () banked
 19357  003F02  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 19358  003F04  0100               	movlb	0	; () banked
 19359  003F06  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 19360  003F08  0E00               	movlw	0
 19361  003F0A  0100               	movlb	0	; () banked
 19362  003F0C  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 19363  003F0E  0100               	movlb	0	; () banked
 19364  003F10  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 19365  003F12  0100               	movlb	0	; () banked
 19366  003F14  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 19367  003F16  0100               	movlb	0	; () banked
 19368  003F18  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19369  003F1A  0100               	movlb	0	; () banked
 19370  003F1C  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 19371  003F1E  0100               	movlb	0	; () banked
 19372  003F20  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19373  003F22  0100               	movlb	0	; () banked
 19374  003F24  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 19375  003F26  0100               	movlb	0	; () banked
 19376  003F28  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19377  003F2A  0100               	movlb	0	; () banked
 19378  003F2C  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 19379  003F2E  0100               	movlb	0	; () banked
 19380  003F30  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19381                           
 19382                           ; BSR set to: 0
 19383                           ;MISC.c: 510: temp += (This & 0x00100000) >> 9;
 19384  003F32  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 19385  003F36  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 19386  003F3A  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 19387  003F3E  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 19388  003F42  0E0A               	movlw	10
 19389  003F44  D006               	goto	u10950
 19390  003F46                     u10955:
 19391  003F46  0100               	movlb	0	; () banked
 19392  003F48  90D8               	bcf	status,0,c
 19393  003F4A  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19394  003F4C  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19395  003F4E  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19396  003F50  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 19397  003F52                     u10950:
 19398  003F52  2EE8               	decfsz	wreg,f,c
 19399  003F54  D7F8               	goto	u10955
 19400  003F56  0E00               	movlw	0
 19401  003F58  0100               	movlb	0	; () banked
 19402  003F5A  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 19403  003F5C  0100               	movlb	0	; () banked
 19404  003F5E  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 19405  003F60  0E08               	movlw	8
 19406  003F62  0100               	movlb	0	; () banked
 19407  003F64  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 19408  003F66  0100               	movlb	0	; () banked
 19409  003F68  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 19410  003F6A  0E00               	movlw	0
 19411  003F6C  0100               	movlb	0	; () banked
 19412  003F6E  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 19413  003F70  0100               	movlb	0	; () banked
 19414  003F72  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 19415  003F74  0E00               	movlw	0
 19416  003F76  0100               	movlb	0	; () banked
 19417  003F78  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 19418  003F7A  0100               	movlb	0	; () banked
 19419  003F7C  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 19420  003F7E  0100               	movlb	0	; () banked
 19421  003F80  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 19422  003F82  0100               	movlb	0	; () banked
 19423  003F84  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19424  003F86  0100               	movlb	0	; () banked
 19425  003F88  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 19426  003F8A  0100               	movlb	0	; () banked
 19427  003F8C  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19428  003F8E  0100               	movlb	0	; () banked
 19429  003F90  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 19430  003F92  0100               	movlb	0	; () banked
 19431  003F94  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19432  003F96  0100               	movlb	0	; () banked
 19433  003F98  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 19434  003F9A  0100               	movlb	0	; () banked
 19435  003F9C  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19436                           
 19437                           ; BSR set to: 0
 19438                           ;MISC.c: 511: temp += (This & 0x00200000) >> 11;
 19439  003F9E  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 19440  003FA2  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 19441  003FA6  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 19442  003FAA  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 19443  003FAE  0E0C               	movlw	12
 19444  003FB0  D006               	goto	u10960
 19445  003FB2                     u10965:
 19446  003FB2  0100               	movlb	0	; () banked
 19447  003FB4  90D8               	bcf	status,0,c
 19448  003FB6  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19449  003FB8  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19450  003FBA  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19451  003FBC  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 19452  003FBE                     u10960:
 19453  003FBE  2EE8               	decfsz	wreg,f,c
 19454  003FC0  D7F8               	goto	u10965
 19455  003FC2  0E00               	movlw	0
 19456  003FC4  0100               	movlb	0	; () banked
 19457  003FC6  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 19458  003FC8  0100               	movlb	0	; () banked
 19459  003FCA  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 19460  003FCC  0E04               	movlw	4
 19461  003FCE  0100               	movlb	0	; () banked
 19462  003FD0  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 19463  003FD2  0100               	movlb	0	; () banked
 19464  003FD4  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 19465  003FD6  0E00               	movlw	0
 19466  003FD8  0100               	movlb	0	; () banked
 19467  003FDA  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 19468  003FDC  0100               	movlb	0	; () banked
 19469  003FDE  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 19470  003FE0  0E00               	movlw	0
 19471  003FE2  0100               	movlb	0	; () banked
 19472  003FE4  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 19473  003FE6  0100               	movlb	0	; () banked
 19474  003FE8  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 19475  003FEA  0100               	movlb	0	; () banked
 19476  003FEC  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 19477  003FEE  0100               	movlb	0	; () banked
 19478  003FF0  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19479  003FF2  0100               	movlb	0	; () banked
 19480  003FF4  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 19481  003FF6  0100               	movlb	0	; () banked
 19482  003FF8  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19483  003FFA  0100               	movlb	0	; () banked
 19484  003FFC  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 19485  003FFE  0100               	movlb	0	; () banked
 19486  004000  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19487  004002  0100               	movlb	0	; () banked
 19488  004004  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 19489  004006  0100               	movlb	0	; () banked
 19490  004008  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19491                           
 19492                           ; BSR set to: 0
 19493                           ;MISC.c: 512: temp += (This & 0x00400000) >> 13;
 19494  00400A  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 19495  00400E  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 19496  004012  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 19497  004016  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 19498  00401A  0E0E               	movlw	14
 19499  00401C  D006               	goto	u10970
 19500  00401E                     u10975:
 19501  00401E  0100               	movlb	0	; () banked
 19502  004020  90D8               	bcf	status,0,c
 19503  004022  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19504  004024  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19505  004026  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19506  004028  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 19507  00402A                     u10970:
 19508  00402A  2EE8               	decfsz	wreg,f,c
 19509  00402C  D7F8               	goto	u10975
 19510  00402E  0E00               	movlw	0
 19511  004030  0100               	movlb	0	; () banked
 19512  004032  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 19513  004034  0100               	movlb	0	; () banked
 19514  004036  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 19515  004038  0E02               	movlw	2
 19516  00403A  0100               	movlb	0	; () banked
 19517  00403C  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 19518  00403E  0100               	movlb	0	; () banked
 19519  004040  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 19520  004042  0E00               	movlw	0
 19521  004044  0100               	movlb	0	; () banked
 19522  004046  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 19523  004048  0100               	movlb	0	; () banked
 19524  00404A  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 19525  00404C  0E00               	movlw	0
 19526  00404E  0100               	movlb	0	; () banked
 19527  004050  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 19528  004052  0100               	movlb	0	; () banked
 19529  004054  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 19530  004056  0100               	movlb	0	; () banked
 19531  004058  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 19532  00405A  0100               	movlb	0	; () banked
 19533  00405C  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19534  00405E  0100               	movlb	0	; () banked
 19535  004060  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 19536  004062  0100               	movlb	0	; () banked
 19537  004064  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19538  004066  0100               	movlb	0	; () banked
 19539  004068  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 19540  00406A  0100               	movlb	0	; () banked
 19541  00406C  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19542  00406E  0100               	movlb	0	; () banked
 19543  004070  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 19544  004072  0100               	movlb	0	; () banked
 19545  004074  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19546                           
 19547                           ; BSR set to: 0
 19548                           ;MISC.c: 513: temp += (This & 0x00800000) >> 15;
 19549  004076  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 19550  00407A  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 19551  00407E  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 19552  004082  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 19553  004086  0E10               	movlw	16
 19554  004088  D006               	goto	u10980
 19555  00408A                     u10985:
 19556  00408A  0100               	movlb	0	; () banked
 19557  00408C  90D8               	bcf	status,0,c
 19558  00408E  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19559  004090  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19560  004092  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19561  004094  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 19562  004096                     u10980:
 19563  004096  2EE8               	decfsz	wreg,f,c
 19564  004098  D7F8               	goto	u10985
 19565  00409A  0E00               	movlw	0
 19566  00409C  0100               	movlb	0	; () banked
 19567  00409E  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 19568  0040A0  0100               	movlb	0	; () banked
 19569  0040A2  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 19570  0040A4  0E01               	movlw	1
 19571  0040A6  0100               	movlb	0	; () banked
 19572  0040A8  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 19573  0040AA  0100               	movlb	0	; () banked
 19574  0040AC  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 19575  0040AE  0E00               	movlw	0
 19576  0040B0  0100               	movlb	0	; () banked
 19577  0040B2  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 19578  0040B4  0100               	movlb	0	; () banked
 19579  0040B6  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 19580  0040B8  0E00               	movlw	0
 19581  0040BA  0100               	movlb	0	; () banked
 19582  0040BC  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 19583  0040BE  0100               	movlb	0	; () banked
 19584  0040C0  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 19585  0040C2  0100               	movlb	0	; () banked
 19586  0040C4  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 19587  0040C6  0100               	movlb	0	; () banked
 19588  0040C8  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19589  0040CA  0100               	movlb	0	; () banked
 19590  0040CC  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 19591  0040CE  0100               	movlb	0	; () banked
 19592  0040D0  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19593  0040D2  0100               	movlb	0	; () banked
 19594  0040D4  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 19595  0040D6  0100               	movlb	0	; () banked
 19596  0040D8  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19597  0040DA  0100               	movlb	0	; () banked
 19598  0040DC  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 19599  0040DE  0100               	movlb	0	; () banked
 19600  0040E0  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19601                           
 19602                           ; BSR set to: 0
 19603                           ;MISC.c: 514: temp += (This & 0x01000000) >> 17;
 19604  0040E2  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 19605  0040E6  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 19606  0040EA  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 19607  0040EE  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 19608  0040F2  0E12               	movlw	18
 19609  0040F4  D006               	goto	u10990
 19610  0040F6                     u10995:
 19611  0040F6  0100               	movlb	0	; () banked
 19612  0040F8  90D8               	bcf	status,0,c
 19613  0040FA  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19614  0040FC  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19615  0040FE  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19616  004100  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 19617  004102                     u10990:
 19618  004102  2EE8               	decfsz	wreg,f,c
 19619  004104  D7F8               	goto	u10995
 19620  004106  0E80               	movlw	128
 19621  004108  0100               	movlb	0	; () banked
 19622  00410A  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 19623  00410C  0100               	movlb	0	; () banked
 19624  00410E  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 19625  004110  0E00               	movlw	0
 19626  004112  0100               	movlb	0	; () banked
 19627  004114  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 19628  004116  0100               	movlb	0	; () banked
 19629  004118  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 19630  00411A  0E00               	movlw	0
 19631  00411C  0100               	movlb	0	; () banked
 19632  00411E  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 19633  004120  0100               	movlb	0	; () banked
 19634  004122  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 19635  004124  0E00               	movlw	0
 19636  004126  0100               	movlb	0	; () banked
 19637  004128  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 19638  00412A  0100               	movlb	0	; () banked
 19639  00412C  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 19640  00412E  0100               	movlb	0	; () banked
 19641  004130  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 19642  004132  0100               	movlb	0	; () banked
 19643  004134  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19644  004136  0100               	movlb	0	; () banked
 19645  004138  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 19646  00413A  0100               	movlb	0	; () banked
 19647  00413C  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19648  00413E  0100               	movlb	0	; () banked
 19649  004140  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 19650  004142  0100               	movlb	0	; () banked
 19651  004144  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19652  004146  0100               	movlb	0	; () banked
 19653  004148  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 19654  00414A  0100               	movlb	0	; () banked
 19655  00414C  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19656                           
 19657                           ; BSR set to: 0
 19658                           ;MISC.c: 515: temp += (This & 0x02000000) >> 19;
 19659  00414E  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 19660  004152  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 19661  004156  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 19662  00415A  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 19663  00415E  0E14               	movlw	20
 19664  004160  D006               	goto	u11000
 19665  004162                     u11005:
 19666  004162  0100               	movlb	0	; () banked
 19667  004164  90D8               	bcf	status,0,c
 19668  004166  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19669  004168  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19670  00416A  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19671  00416C  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 19672  00416E                     u11000:
 19673  00416E  2EE8               	decfsz	wreg,f,c
 19674  004170  D7F8               	goto	u11005
 19675  004172  0E40               	movlw	64
 19676  004174  0100               	movlb	0	; () banked
 19677  004176  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 19678  004178  0100               	movlb	0	; () banked
 19679  00417A  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 19680  00417C  0E00               	movlw	0
 19681  00417E  0100               	movlb	0	; () banked
 19682  004180  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 19683  004182  0100               	movlb	0	; () banked
 19684  004184  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 19685  004186  0E00               	movlw	0
 19686  004188  0100               	movlb	0	; () banked
 19687  00418A  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 19688  00418C  0100               	movlb	0	; () banked
 19689  00418E  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 19690  004190  0E00               	movlw	0
 19691  004192  0100               	movlb	0	; () banked
 19692  004194  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 19693  004196  0100               	movlb	0	; () banked
 19694  004198  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 19695  00419A  0100               	movlb	0	; () banked
 19696  00419C  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 19697  00419E  0100               	movlb	0	; () banked
 19698  0041A0  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19699  0041A2  0100               	movlb	0	; () banked
 19700  0041A4  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 19701  0041A6  0100               	movlb	0	; () banked
 19702  0041A8  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19703  0041AA  0100               	movlb	0	; () banked
 19704  0041AC  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 19705  0041AE  0100               	movlb	0	; () banked
 19706  0041B0  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19707  0041B2  0100               	movlb	0	; () banked
 19708  0041B4  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 19709  0041B6  0100               	movlb	0	; () banked
 19710  0041B8  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19711                           
 19712                           ; BSR set to: 0
 19713                           ;MISC.c: 516: temp += (This & 0x04000000) >> 21;
 19714  0041BA  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 19715  0041BE  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 19716  0041C2  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 19717  0041C6  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 19718  0041CA  0E16               	movlw	22
 19719  0041CC  D006               	goto	u11010
 19720  0041CE                     u11015:
 19721  0041CE  0100               	movlb	0	; () banked
 19722  0041D0  90D8               	bcf	status,0,c
 19723  0041D2  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19724  0041D4  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19725  0041D6  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19726  0041D8  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 19727  0041DA                     u11010:
 19728  0041DA  2EE8               	decfsz	wreg,f,c
 19729  0041DC  D7F8               	goto	u11015
 19730  0041DE  0E20               	movlw	32
 19731  0041E0  0100               	movlb	0	; () banked
 19732  0041E2  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 19733  0041E4  0100               	movlb	0	; () banked
 19734  0041E6  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 19735  0041E8  0E00               	movlw	0
 19736  0041EA  0100               	movlb	0	; () banked
 19737  0041EC  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 19738  0041EE  0100               	movlb	0	; () banked
 19739  0041F0  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 19740  0041F2  0E00               	movlw	0
 19741  0041F4  0100               	movlb	0	; () banked
 19742  0041F6  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 19743  0041F8  0100               	movlb	0	; () banked
 19744  0041FA  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 19745  0041FC  0E00               	movlw	0
 19746  0041FE  0100               	movlb	0	; () banked
 19747  004200  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 19748  004202  0100               	movlb	0	; () banked
 19749  004204  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 19750  004206  0100               	movlb	0	; () banked
 19751  004208  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 19752  00420A  0100               	movlb	0	; () banked
 19753  00420C  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19754  00420E  0100               	movlb	0	; () banked
 19755  004210  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 19756  004212  0100               	movlb	0	; () banked
 19757  004214  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19758  004216  0100               	movlb	0	; () banked
 19759  004218  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 19760  00421A  0100               	movlb	0	; () banked
 19761  00421C  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19762  00421E  0100               	movlb	0	; () banked
 19763  004220  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 19764  004222  0100               	movlb	0	; () banked
 19765  004224  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19766                           
 19767                           ; BSR set to: 0
 19768                           ;MISC.c: 517: temp += (This & 0x08000000) >> 23;
 19769  004226  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 19770  00422A  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 19771  00422E  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 19772  004232  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 19773  004236  0E18               	movlw	24
 19774  004238  D006               	goto	u11020
 19775  00423A                     u11025:
 19776  00423A  0100               	movlb	0	; () banked
 19777  00423C  90D8               	bcf	status,0,c
 19778  00423E  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19779  004240  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19780  004242  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19781  004244  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 19782  004246                     u11020:
 19783  004246  2EE8               	decfsz	wreg,f,c
 19784  004248  D7F8               	goto	u11025
 19785  00424A  0E10               	movlw	16
 19786  00424C  0100               	movlb	0	; () banked
 19787  00424E  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 19788  004250  0100               	movlb	0	; () banked
 19789  004252  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 19790  004254  0E00               	movlw	0
 19791  004256  0100               	movlb	0	; () banked
 19792  004258  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 19793  00425A  0100               	movlb	0	; () banked
 19794  00425C  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 19795  00425E  0E00               	movlw	0
 19796  004260  0100               	movlb	0	; () banked
 19797  004262  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 19798  004264  0100               	movlb	0	; () banked
 19799  004266  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 19800  004268  0E00               	movlw	0
 19801  00426A  0100               	movlb	0	; () banked
 19802  00426C  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 19803  00426E  0100               	movlb	0	; () banked
 19804  004270  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 19805  004272  0100               	movlb	0	; () banked
 19806  004274  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 19807  004276  0100               	movlb	0	; () banked
 19808  004278  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19809  00427A  0100               	movlb	0	; () banked
 19810  00427C  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 19811  00427E  0100               	movlb	0	; () banked
 19812  004280  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19813  004282  0100               	movlb	0	; () banked
 19814  004284  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 19815  004286  0100               	movlb	0	; () banked
 19816  004288  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19817  00428A  0100               	movlb	0	; () banked
 19818  00428C  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 19819  00428E  0100               	movlb	0	; () banked
 19820  004290  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19821                           
 19822                           ; BSR set to: 0
 19823                           ;MISC.c: 518: temp += (This & 0x10000000) >> 25;
 19824  004292  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 19825  004296  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 19826  00429A  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 19827  00429E  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 19828  0042A2  0E1A               	movlw	26
 19829  0042A4  D006               	goto	u11030
 19830  0042A6                     u11035:
 19831  0042A6  0100               	movlb	0	; () banked
 19832  0042A8  90D8               	bcf	status,0,c
 19833  0042AA  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19834  0042AC  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19835  0042AE  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19836  0042B0  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 19837  0042B2                     u11030:
 19838  0042B2  2EE8               	decfsz	wreg,f,c
 19839  0042B4  D7F8               	goto	u11035
 19840  0042B6  0E08               	movlw	8
 19841  0042B8  0100               	movlb	0	; () banked
 19842  0042BA  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 19843  0042BC  0100               	movlb	0	; () banked
 19844  0042BE  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 19845  0042C0  0E00               	movlw	0
 19846  0042C2  0100               	movlb	0	; () banked
 19847  0042C4  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 19848  0042C6  0100               	movlb	0	; () banked
 19849  0042C8  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 19850  0042CA  0E00               	movlw	0
 19851  0042CC  0100               	movlb	0	; () banked
 19852  0042CE  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 19853  0042D0  0100               	movlb	0	; () banked
 19854  0042D2  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 19855  0042D4  0E00               	movlw	0
 19856  0042D6  0100               	movlb	0	; () banked
 19857  0042D8  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 19858  0042DA  0100               	movlb	0	; () banked
 19859  0042DC  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 19860  0042DE  0100               	movlb	0	; () banked
 19861  0042E0  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 19862  0042E2  0100               	movlb	0	; () banked
 19863  0042E4  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19864  0042E6  0100               	movlb	0	; () banked
 19865  0042E8  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 19866  0042EA  0100               	movlb	0	; () banked
 19867  0042EC  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19868  0042EE  0100               	movlb	0	; () banked
 19869  0042F0  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 19870  0042F2  0100               	movlb	0	; () banked
 19871  0042F4  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19872  0042F6  0100               	movlb	0	; () banked
 19873  0042F8  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 19874  0042FA  0100               	movlb	0	; () banked
 19875  0042FC  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19876                           
 19877                           ; BSR set to: 0
 19878                           ;MISC.c: 519: temp += (This & 0x20000000) >> 27;
 19879  0042FE  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 19880  004302  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 19881  004306  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 19882  00430A  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 19883  00430E  0E1C               	movlw	28
 19884  004310  D006               	goto	u11040
 19885  004312                     u11045:
 19886  004312  0100               	movlb	0	; () banked
 19887  004314  90D8               	bcf	status,0,c
 19888  004316  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19889  004318  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19890  00431A  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19891  00431C  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 19892  00431E                     u11040:
 19893  00431E  2EE8               	decfsz	wreg,f,c
 19894  004320  D7F8               	goto	u11045
 19895  004322  0E04               	movlw	4
 19896  004324  0100               	movlb	0	; () banked
 19897  004326  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 19898  004328  0100               	movlb	0	; () banked
 19899  00432A  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 19900  00432C  0E00               	movlw	0
 19901  00432E  0100               	movlb	0	; () banked
 19902  004330  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 19903  004332  0100               	movlb	0	; () banked
 19904  004334  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 19905  004336  0E00               	movlw	0
 19906  004338  0100               	movlb	0	; () banked
 19907  00433A  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 19908  00433C  0100               	movlb	0	; () banked
 19909  00433E  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 19910  004340  0E00               	movlw	0
 19911  004342  0100               	movlb	0	; () banked
 19912  004344  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 19913  004346  0100               	movlb	0	; () banked
 19914  004348  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 19915  00434A  0100               	movlb	0	; () banked
 19916  00434C  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 19917  00434E  0100               	movlb	0	; () banked
 19918  004350  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19919  004352  0100               	movlb	0	; () banked
 19920  004354  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 19921  004356  0100               	movlb	0	; () banked
 19922  004358  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19923  00435A  0100               	movlb	0	; () banked
 19924  00435C  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 19925  00435E  0100               	movlb	0	; () banked
 19926  004360  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19927  004362  0100               	movlb	0	; () banked
 19928  004364  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 19929  004366  0100               	movlb	0	; () banked
 19930  004368  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19931                           
 19932                           ; BSR set to: 0
 19933                           ;MISC.c: 520: temp += (This & 0x40000000) >> 29;
 19934  00436A  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 19935  00436E  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 19936  004372  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 19937  004376  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 19938  00437A  0E1E               	movlw	30
 19939  00437C  D006               	goto	u11050
 19940  00437E                     u11055:
 19941  00437E  0100               	movlb	0	; () banked
 19942  004380  90D8               	bcf	status,0,c
 19943  004382  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19944  004384  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19945  004386  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19946  004388  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 19947  00438A                     u11050:
 19948  00438A  2EE8               	decfsz	wreg,f,c
 19949  00438C  D7F8               	goto	u11055
 19950  00438E  0E02               	movlw	2
 19951  004390  0100               	movlb	0	; () banked
 19952  004392  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 19953  004394  0100               	movlb	0	; () banked
 19954  004396  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 19955  004398  0E00               	movlw	0
 19956  00439A  0100               	movlb	0	; () banked
 19957  00439C  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 19958  00439E  0100               	movlb	0	; () banked
 19959  0043A0  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 19960  0043A2  0E00               	movlw	0
 19961  0043A4  0100               	movlb	0	; () banked
 19962  0043A6  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 19963  0043A8  0100               	movlb	0	; () banked
 19964  0043AA  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 19965  0043AC  0E00               	movlw	0
 19966  0043AE  0100               	movlb	0	; () banked
 19967  0043B0  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 19968  0043B2  0100               	movlb	0	; () banked
 19969  0043B4  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 19970  0043B6  0100               	movlb	0	; () banked
 19971  0043B8  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 19972  0043BA  0100               	movlb	0	; () banked
 19973  0043BC  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19974  0043BE  0100               	movlb	0	; () banked
 19975  0043C0  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 19976  0043C2  0100               	movlb	0	; () banked
 19977  0043C4  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19978  0043C6  0100               	movlb	0	; () banked
 19979  0043C8  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 19980  0043CA  0100               	movlb	0	; () banked
 19981  0043CC  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19982  0043CE  0100               	movlb	0	; () banked
 19983  0043D0  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 19984  0043D2  0100               	movlb	0	; () banked
 19985  0043D4  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19986                           
 19987                           ; BSR set to: 0
 19988                           ;MISC.c: 521: temp += (This & 0x80000000) >> 31;
 19989  0043D6  0E00               	movlw	0
 19990  0043D8  0100               	movlb	0	; () banked
 19991  0043DA  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 19992  0043DC  0100               	movlb	0	; () banked
 19993  0043DE  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 19994  0043E0  0E00               	movlw	0
 19995  0043E2  0100               	movlb	0	; () banked
 19996  0043E4  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 19997  0043E6  0100               	movlb	0	; () banked
 19998  0043E8  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 19999  0043EA  0E00               	movlw	0
 20000  0043EC  0100               	movlb	0	; () banked
 20001  0043EE  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 20002  0043F0  0100               	movlb	0	; () banked
 20003  0043F2  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 20004  0043F4  0E80               	movlw	128
 20005  0043F6  0100               	movlb	0	; () banked
 20006  0043F8  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 20007  0043FA  0100               	movlb	0	; () banked
 20008  0043FC  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 20009  0043FE  0E20               	movlw	32
 20010  004400  D006               	goto	u11060
 20011  004402                     u11065:
 20012  004402  0100               	movlb	0	; () banked
 20013  004404  90D8               	bcf	status,0,c
 20014  004406  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20015  004408  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20016  00440A  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20017  00440C  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 20018  00440E                     u11060:
 20019  00440E  2EE8               	decfsz	wreg,f,c
 20020  004410  D7F8               	goto	u11065
 20021  004412  0100               	movlb	0	; () banked
 20022  004414  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 20023  004416  0100               	movlb	0	; () banked
 20024  004418  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20025  00441A  0100               	movlb	0	; () banked
 20026  00441C  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 20027  00441E  0100               	movlb	0	; () banked
 20028  004420  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20029  004422  0100               	movlb	0	; () banked
 20030  004424  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 20031  004426  0100               	movlb	0	; () banked
 20032  004428  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20033  00442A  0100               	movlb	0	; () banked
 20034  00442C  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 20035  00442E  0100               	movlb	0	; () banked
 20036  004430  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20037                           
 20038                           ; BSR set to: 0
 20039                           ;MISC.c: 523: return temp;
 20040  004432  C06C  F060         	movff	Reverse_4Byte@temp,?_Reverse_4Byte
 20041  004436  C06D  F061         	movff	Reverse_4Byte@temp+1,?_Reverse_4Byte+1
 20042  00443A  C06E  F062         	movff	Reverse_4Byte@temp+2,?_Reverse_4Byte+2
 20043  00443E  C06F  F063         	movff	Reverse_4Byte@temp+3,?_Reverse_4Byte+3
 20044  004442  0012               	return	
 20045                           
 20046                           ; BSR set to: 0
 20047                           
 20048                           ; BSR set to: 0
 20049  004444  0012               	return		;funcret
 20050  004446                     __end_of_Reverse_4Byte:
 20051                           	opt stack 0
 20052                           tblptru	equ	0xFF8
 20053                           tblptrh	equ	0xFF7
 20054                           tblptrl	equ	0xFF6
 20055                           tablat	equ	0xFF5
 20056                           prodh	equ	0xFF4
 20057                           prodl	equ	0xFF3
 20058                           intcon	equ	0xFF2
 20059                           indf0	equ	0xFEF
 20060                           postinc0	equ	0xFEE
 20061                           plusw0	equ	0xFEB
 20062                           fsr0h	equ	0xFEA
 20063                           fsr0l	equ	0xFE9
 20064                           wreg	equ	0xFE8
 20065                           indf1	equ	0xFE7
 20066                           postdec1	equ	0xFE5
 20067                           fsr1h	equ	0xFE2
 20068                           fsr1l	equ	0xFE1
 20069                           indf2	equ	0xFDF
 20070                           postinc2	equ	0xFDE
 20071                           plusw2	equ	0xFDB
 20072                           fsr2h	equ	0xFDA
 20073                           fsr2l	equ	0xFD9
 20074                           status	equ	0xFD8
 20075                           
 20076 ;; *************** function _CheckReceivingIR *****************
 20077 ;; Defined at:
 20078 ;;		line 508 in file "IR.c"
 20079 ;; Parameters:    Size  Location     Type
 20080 ;;		None
 20081 ;; Auto vars:     Size  Location     Type
 20082 ;;		None
 20083 ;; Return value:  Size  Location     Type
 20084 ;;                  1    wreg      unsigned char 
 20085 ;; Registers used:
 20086 ;;		wreg, status,2, status,0
 20087 ;; Tracked objects:
 20088 ;;		On entry : 0/0
 20089 ;;		On exit  : 0/0
 20090 ;;		Unchanged: 0/0
 20091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20096 ;;Total ram usage:        0 bytes
 20097 ;; Hardware stack levels used:    1
 20098 ;; Hardware stack levels required when called:    5
 20099 ;; This function calls:
 20100 ;;		Nothing
 20101 ;; This function is called by:
 20102 ;;		_SendNEC_wait
 20103 ;; This function uses a non-reentrant model
 20104 ;;
 20105                           
 20106                           	psect	text21
 20107  00A972                     __ptext21:
 20108                           	opt stack 0
 20109  00A972                     _CheckReceivingIR:
 20110                           	opt stack 23
 20111                           
 20112                           ;IR.c: 510: if(ReceivingIR == 13)
 20113                           
 20114                           ; BSR set to: 0
 20115                           ;incstack = 0
 20116  00A972  0E0D               	movlw	13
 20117  00A974  1850               	xorwf	_ReceivingIR,w,c	;volatile
 20118  00A976  A4D8               	btfss	status,2,c
 20119  00A978  D002               	goto	l10840
 20120                           
 20121                           ;IR.c: 511: {
 20122                           ;IR.c: 512: return 0;
 20123  00A97A  0E00               	movlw	0
 20124  00A97C  0012               	return	
 20125  00A97E                     l10840:
 20126                           
 20127                           ;IR.c: 513: }
 20128                           ;IR.c: 514: return 1;
 20129  00A97E  0E01               	movlw	1
 20130  00A980  0012               	return	
 20131  00A982  0012               	return		;funcret
 20132  00A984                     __end_of_CheckReceivingIR:
 20133                           	opt stack 0
 20134                           tblptru	equ	0xFF8
 20135                           tblptrh	equ	0xFF7
 20136                           tblptrl	equ	0xFF6
 20137                           tablat	equ	0xFF5
 20138                           prodh	equ	0xFF4
 20139                           prodl	equ	0xFF3
 20140                           intcon	equ	0xFF2
 20141                           indf0	equ	0xFEF
 20142                           postinc0	equ	0xFEE
 20143                           plusw0	equ	0xFEB
 20144                           fsr0h	equ	0xFEA
 20145                           fsr0l	equ	0xFE9
 20146                           wreg	equ	0xFE8
 20147                           indf1	equ	0xFE7
 20148                           postdec1	equ	0xFE5
 20149                           fsr1h	equ	0xFE2
 20150                           fsr1l	equ	0xFE1
 20151                           indf2	equ	0xFDF
 20152                           postinc2	equ	0xFDE
 20153                           plusw2	equ	0xFDB
 20154                           fsr2h	equ	0xFDA
 20155                           fsr2l	equ	0xFD9
 20156                           status	equ	0xFD8
 20157                           
 20158 ;; *************** function _ReadVoltage *****************
 20159 ;; Defined at:
 20160 ;;		line 60 in file "ADC.c"
 20161 ;; Parameters:    Size  Location     Type
 20162 ;;		None
 20163 ;; Auto vars:     Size  Location     Type
 20164 ;;  voltage         3   44[BANK0 ] unsigned char 
 20165 ;;  temp            2   47[BANK0 ] unsigned int 
 20166 ;; Return value:  Size  Location     Type
 20167 ;;                  3   41[BANK0 ] unsigned int 
 20168 ;; Registers used:
 20169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20170 ;; Tracked objects:
 20171 ;;		On entry : 0/0
 20172 ;;		On exit  : 0/0
 20173 ;;		Unchanged: 0/0
 20174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20175 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20176 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20178 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20179 ;;Total ram usage:        8 bytes
 20180 ;; Hardware stack levels used:    1
 20181 ;; Hardware stack levels required when called:    7
 20182 ;; This function calls:
 20183 ;;		_InternalADC_Read
 20184 ;;		_VoltageDividerOFF
 20185 ;;		_VoltageDividerON
 20186 ;;		___ftdiv
 20187 ;;		___ftmul
 20188 ;;		___lwtoft
 20189 ;;		_delayUS
 20190 ;; This function is called by:
 20191 ;;		_main
 20192 ;;		_UseBluetooth
 20193 ;; This function uses a non-reentrant model
 20194 ;;
 20195                           
 20196                           	psect	text22
 20197  00961A                     __ptext22:
 20198                           	opt stack 0
 20199  00961A                     _ReadVoltage:
 20200                           	opt stack 22
 20201                           
 20202                           ;ADC.c: 62: unsigned int temp;
 20203                           ;ADC.c: 63: double voltage;
 20204                           ;ADC.c: 65: VoltageDividerON();
 20205                           
 20206                           ;incstack = 0
 20207  00961A  EC39  F055         	call	_VoltageDividerON	;wreg free
 20208                           
 20209                           ;ADC.c: 66: delayUS(5);
 20210  00961E  0E05               	movlw	5
 20211  009620  0100               	movlb	0	; () banked
 20212  009622  6F60               	movwf	delayUS@US& (0+255),b
 20213  009624  0E00               	movlw	0
 20214  009626  6F61               	movwf	(delayUS@US+1)& (0+255),b
 20215  009628  0E00               	movlw	0
 20216  00962A  6F62               	movwf	(delayUS@US+2)& (0+255),b
 20217  00962C  0E00               	movlw	0
 20218  00962E  6F63               	movwf	(delayUS@US+3)& (0+255),b
 20219  009630  EC3F  F051         	call	_delayUS	;wreg free
 20220                           
 20221                           ;ADC.c: 67: if(InternalADC_Read(0, &temp))
 20222  009634  0E8F               	movlw	low ReadVoltage@temp
 20223  009636  0100               	movlb	0	; () banked
 20224  009638  6F69               	movwf	InternalADC_Read@ADCcounts& (0+255),b
 20225  00963A  0E00               	movlw	high ReadVoltage@temp
 20226  00963C  0100               	movlb	0	; () banked
 20227  00963E  6F6A               	movwf	(InternalADC_Read@ADCcounts+1)& (0+255),b
 20228  009640  0E00               	movlw	0
 20229  009642  ECC7  F04C         	call	_InternalADC_Read
 20230  009646  0900               	iorlw	0
 20231  009648  B4D8               	btfsc	status,2,c
 20232  00964A  D02F               	goto	l11226
 20233                           
 20234                           ;ADC.c: 68: {
 20235                           ;ADC.c: 69: voltage = ((double)temp / 1024.0) * 11 * 3.3;
 20236  00964C  0E00               	movlw	0
 20237  00964E  0100               	movlb	0	; () banked
 20238  009650  6F6E               	movwf	___ftdiv@f2& (0+255),b
 20239  009652  0E80               	movlw	128
 20240  009654  0100               	movlb	0	; () banked
 20241  009656  6F6F               	movwf	(___ftdiv@f2+1)& (0+255),b
 20242  009658  0E44               	movlw	68
 20243  00965A  0100               	movlb	0	; () banked
 20244  00965C  6F70               	movwf	(___ftdiv@f2+2)& (0+255),b
 20245  00965E  C08F  F068         	movff	ReadVoltage@temp,___lwtoft@c
 20246  009662  C090  F069         	movff	ReadVoltage@temp+1,___lwtoft@c+1
 20247  009666  ECA2  F053         	call	___lwtoft	;wreg free
 20248  00966A  C068  F06B         	movff	?___lwtoft,___ftdiv@f1
 20249  00966E  C069  F06C         	movff	?___lwtoft+1,___ftdiv@f1+1
 20250  009672  C06A  F06D         	movff	?___lwtoft+2,___ftdiv@f1+2
 20251  009676  ECC1  F040         	call	___ftdiv	;wreg free
 20252  00967A  C06B  F07A         	movff	?___ftdiv,___ftmul@f1
 20253  00967E  C06C  F07B         	movff	?___ftdiv+1,___ftmul@f1+1
 20254  009682  C06D  F07C         	movff	?___ftdiv+2,___ftmul@f1+2
 20255  009686  0E33               	movlw	51
 20256  009688  0100               	movlb	0	; () banked
 20257  00968A  6F7D               	movwf	___ftmul@f2& (0+255),b
 20258  00968C  0E11               	movlw	17
 20259  00968E  0100               	movlb	0	; () banked
 20260  009690  6F7E               	movwf	(___ftmul@f2+1)& (0+255),b
 20261  009692  0E42               	movlw	66
 20262  009694  0100               	movlb	0	; () banked
 20263  009696  6F7F               	movwf	(___ftmul@f2+2)& (0+255),b
 20264  009698  EC5D  F03F         	call	___ftmul	;wreg free
 20265  00969C  C07A  F08C         	movff	?___ftmul,ReadVoltage@voltage
 20266  0096A0  C07B  F08D         	movff	?___ftmul+1,ReadVoltage@voltage+1
 20267  0096A4  C07C  F08E         	movff	?___ftmul+2,ReadVoltage@voltage+2
 20268                           
 20269                           ;ADC.c: 70: }
 20270  0096A8  D00A               	goto	l11228
 20271  0096AA                     l11226:
 20272                           
 20273                           ;ADC.c: 71: else
 20274                           ;ADC.c: 72: {
 20275                           ;ADC.c: 73: voltage = 0.0;
 20276  0096AA  0E00               	movlw	0
 20277  0096AC  0100               	movlb	0	; () banked
 20278  0096AE  6F8C               	movwf	ReadVoltage@voltage& (0+255),b
 20279  0096B0  0E00               	movlw	0
 20280  0096B2  0100               	movlb	0	; () banked
 20281  0096B4  6F8D               	movwf	(ReadVoltage@voltage+1)& (0+255),b
 20282  0096B6  0E00               	movlw	0
 20283  0096B8  0100               	movlb	0	; () banked
 20284  0096BA  6F8E               	movwf	(ReadVoltage@voltage+2)& (0+255),b
 20285  0096BC  D000               	goto	l11228
 20286  0096BE                     l11228:
 20287                           
 20288                           ;ADC.c: 74: }
 20289                           ;ADC.c: 75: VoltageDividerOFF();
 20290  0096BE  EC41  F055         	call	_VoltageDividerOFF	;wreg free
 20291                           
 20292                           ;ADC.c: 76: return voltage;
 20293  0096C2  C08C  F089         	movff	ReadVoltage@voltage,?_ReadVoltage
 20294  0096C6  C08D  F08A         	movff	ReadVoltage@voltage+1,?_ReadVoltage+1
 20295  0096CA  C08E  F08B         	movff	ReadVoltage@voltage+2,?_ReadVoltage+2
 20296  0096CE  0012               	return	
 20297  0096D0  0012               	return		;funcret
 20298  0096D2                     __end_of_ReadVoltage:
 20299                           	opt stack 0
 20300                           tblptru	equ	0xFF8
 20301                           tblptrh	equ	0xFF7
 20302                           tblptrl	equ	0xFF6
 20303                           tablat	equ	0xFF5
 20304                           prodh	equ	0xFF4
 20305                           prodl	equ	0xFF3
 20306                           intcon	equ	0xFF2
 20307                           indf0	equ	0xFEF
 20308                           postinc0	equ	0xFEE
 20309                           plusw0	equ	0xFEB
 20310                           fsr0h	equ	0xFEA
 20311                           fsr0l	equ	0xFE9
 20312                           wreg	equ	0xFE8
 20313                           indf1	equ	0xFE7
 20314                           postdec1	equ	0xFE5
 20315                           fsr1h	equ	0xFE2
 20316                           fsr1l	equ	0xFE1
 20317                           indf2	equ	0xFDF
 20318                           postinc2	equ	0xFDE
 20319                           plusw2	equ	0xFDB
 20320                           fsr2h	equ	0xFDA
 20321                           fsr2l	equ	0xFD9
 20322                           status	equ	0xFD8
 20323                           
 20324 ;; *************** function ___lwtoft *****************
 20325 ;; Defined at:
 20326 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
 20327 ;; Parameters:    Size  Location     Type
 20328 ;;  c               2    8[BANK0 ] unsigned int 
 20329 ;; Auto vars:     Size  Location     Type
 20330 ;;		None
 20331 ;; Return value:  Size  Location     Type
 20332 ;;                  3    8[BANK0 ] float 
 20333 ;; Registers used:
 20334 ;;		wreg, status,2, status,0, cstack
 20335 ;; Tracked objects:
 20336 ;;		On entry : 0/0
 20337 ;;		On exit  : 0/0
 20338 ;;		Unchanged: 0/0
 20339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20340 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20343 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20344 ;;Total ram usage:        3 bytes
 20345 ;; Hardware stack levels used:    1
 20346 ;; Hardware stack levels required when called:    6
 20347 ;; This function calls:
 20348 ;;		___ftpack
 20349 ;; This function is called by:
 20350 ;;		_ReadVoltage
 20351 ;; This function uses a non-reentrant model
 20352 ;;
 20353                           
 20354                           	psect	text23
 20355  00A744                     __ptext23:
 20356                           	opt stack 0
 20357  00A744                     ___lwtoft:
 20358                           	opt stack 22
 20359                           
 20360                           ;incstack = 0
 20361  00A744  C068  F060         	movff	___lwtoft@c,___ftpack@arg
 20362  00A748  C069  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
 20363  00A74C  0100               	movlb	0	; () banked
 20364  00A74E  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
 20365  00A750  0E8E               	movlw	142
 20366  00A752  0100               	movlb	0	; () banked
 20367  00A754  6F63               	movwf	___ftpack@exp& (0+255),b
 20368  00A756  0E00               	movlw	0
 20369  00A758  0100               	movlb	0	; () banked
 20370  00A75A  6F64               	movwf	___ftpack@sign& (0+255),b
 20371  00A75C  ECED  F043         	call	___ftpack	;wreg free
 20372  00A760  C060  F068         	movff	?___ftpack,?___lwtoft
 20373  00A764  C061  F069         	movff	?___ftpack+1,?___lwtoft+1
 20374  00A768  C062  F06A         	movff	?___ftpack+2,?___lwtoft+2
 20375  00A76C  0012               	return	
 20376  00A76E  0012               	return		;funcret
 20377  00A770                     __end_of___lwtoft:
 20378                           	opt stack 0
 20379                           tblptru	equ	0xFF8
 20380                           tblptrh	equ	0xFF7
 20381                           tblptrl	equ	0xFF6
 20382                           tablat	equ	0xFF5
 20383                           prodh	equ	0xFF4
 20384                           prodl	equ	0xFF3
 20385                           intcon	equ	0xFF2
 20386                           indf0	equ	0xFEF
 20387                           postinc0	equ	0xFEE
 20388                           plusw0	equ	0xFEB
 20389                           fsr0h	equ	0xFEA
 20390                           fsr0l	equ	0xFE9
 20391                           wreg	equ	0xFE8
 20392                           indf1	equ	0xFE7
 20393                           postdec1	equ	0xFE5
 20394                           fsr1h	equ	0xFE2
 20395                           fsr1l	equ	0xFE1
 20396                           indf2	equ	0xFDF
 20397                           postinc2	equ	0xFDE
 20398                           plusw2	equ	0xFDB
 20399                           fsr2h	equ	0xFDA
 20400                           fsr2l	equ	0xFD9
 20401                           status	equ	0xFD8
 20402                           
 20403 ;; *************** function ___ftdiv *****************
 20404 ;; Defined at:
 20405 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 20406 ;; Parameters:    Size  Location     Type
 20407 ;;  f1              3   11[BANK0 ] float 
 20408 ;;  f2              3   14[BANK0 ] float 
 20409 ;; Auto vars:     Size  Location     Type
 20410 ;;  f3              3   21[BANK0 ] float 
 20411 ;;  sign            1   25[BANK0 ] unsigned char 
 20412 ;;  exp             1   24[BANK0 ] unsigned char 
 20413 ;;  cntr            1   20[BANK0 ] unsigned char 
 20414 ;; Return value:  Size  Location     Type
 20415 ;;                  3   11[BANK0 ] float 
 20416 ;; Registers used:
 20417 ;;		wreg, status,2, status,0, cstack
 20418 ;; Tracked objects:
 20419 ;;		On entry : 0/0
 20420 ;;		On exit  : 0/0
 20421 ;;		Unchanged: 0/0
 20422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20423 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20424 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20425 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20426 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20427 ;;Total ram usage:       15 bytes
 20428 ;; Hardware stack levels used:    1
 20429 ;; Hardware stack levels required when called:    6
 20430 ;; This function calls:
 20431 ;;		___ftpack
 20432 ;; This function is called by:
 20433 ;;		_ReadVoltage
 20434 ;; This function uses a non-reentrant model
 20435 ;;
 20436                           
 20437                           	psect	text24
 20438  008182                     __ptext24:
 20439                           	opt stack 0
 20440  008182                     ___ftdiv:
 20441                           	opt stack 22
 20442                           
 20443                           ;incstack = 0
 20444  008182  C06D  F071         	movff	___ftdiv@f1+2,??___ftdiv
 20445  008186  0100               	movlb	0	; () banked
 20446  008188  6B72               	clrf	(??___ftdiv+1)& (0+255),b
 20447  00818A  6B73               	clrf	(??___ftdiv+2)& (0+255),b
 20448  00818C  0100               	movlb	0	; () banked
 20449  00818E  356C               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 20450  008190  0100               	movlb	0	; () banked
 20451  008192  3771               	rlcf	??___ftdiv& (0+255),f,b
 20452  008194  E301               	bnc	u12071
 20453  008196  8172               	bsf	(??___ftdiv+1)& (0+255),0,b
 20454  008198                     u12071:
 20455  008198  0100               	movlb	0	; () banked
 20456  00819A  5171               	movf	??___ftdiv& (0+255),w,b
 20457  00819C  0100               	movlb	0	; () banked
 20458  00819E  6F78               	movwf	___ftdiv@exp& (0+255),b
 20459  0081A0  0100               	movlb	0	; () banked
 20460  0081A2  5178               	movf	___ftdiv@exp& (0+255),w,b
 20461  0081A4  A4D8               	btfss	status,2,c
 20462  0081A6  D00A               	goto	l11174
 20463                           
 20464                           ; BSR set to: 0
 20465  0081A8  0E00               	movlw	0
 20466  0081AA  0100               	movlb	0	; () banked
 20467  0081AC  6F6B               	movwf	?___ftdiv& (0+255),b
 20468  0081AE  0E00               	movlw	0
 20469  0081B0  0100               	movlb	0	; () banked
 20470  0081B2  6F6C               	movwf	(?___ftdiv+1)& (0+255),b
 20471  0081B4  0E00               	movlw	0
 20472  0081B6  0100               	movlb	0	; () banked
 20473  0081B8  6F6D               	movwf	(?___ftdiv+2)& (0+255),b
 20474                           
 20475                           ; BSR set to: 0
 20476  0081BA  0012               	return	
 20477  0081BC                     l11174:
 20478                           
 20479                           ; BSR set to: 0
 20480  0081BC  C070  F071         	movff	___ftdiv@f2+2,??___ftdiv
 20481  0081C0  0100               	movlb	0	; () banked
 20482  0081C2  6B72               	clrf	(??___ftdiv+1)& (0+255),b
 20483  0081C4  6B73               	clrf	(??___ftdiv+2)& (0+255),b
 20484  0081C6  0100               	movlb	0	; () banked
 20485  0081C8  356F               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 20486  0081CA  0100               	movlb	0	; () banked
 20487  0081CC  3771               	rlcf	??___ftdiv& (0+255),f,b
 20488  0081CE  E301               	bnc	u12091
 20489  0081D0  8172               	bsf	(??___ftdiv+1)& (0+255),0,b
 20490  0081D2                     u12091:
 20491  0081D2  0100               	movlb	0	; () banked
 20492  0081D4  5171               	movf	??___ftdiv& (0+255),w,b
 20493  0081D6  0100               	movlb	0	; () banked
 20494  0081D8  6F79               	movwf	___ftdiv@sign& (0+255),b
 20495  0081DA  0100               	movlb	0	; () banked
 20496  0081DC  5179               	movf	___ftdiv@sign& (0+255),w,b
 20497  0081DE  A4D8               	btfss	status,2,c
 20498  0081E0  D00A               	goto	l11180
 20499                           
 20500                           ; BSR set to: 0
 20501  0081E2  0E00               	movlw	0
 20502  0081E4  0100               	movlb	0	; () banked
 20503  0081E6  6F6B               	movwf	?___ftdiv& (0+255),b
 20504  0081E8  0E00               	movlw	0
 20505  0081EA  0100               	movlb	0	; () banked
 20506  0081EC  6F6C               	movwf	(?___ftdiv+1)& (0+255),b
 20507  0081EE  0E00               	movlw	0
 20508  0081F0  0100               	movlb	0	; () banked
 20509  0081F2  6F6D               	movwf	(?___ftdiv+2)& (0+255),b
 20510                           
 20511                           ; BSR set to: 0
 20512  0081F4  0012               	return	
 20513  0081F6                     l11180:
 20514                           
 20515                           ; BSR set to: 0
 20516  0081F6  0E00               	movlw	0
 20517  0081F8  0100               	movlb	0	; () banked
 20518  0081FA  6F75               	movwf	___ftdiv@f3& (0+255),b
 20519  0081FC  0E00               	movlw	0
 20520  0081FE  0100               	movlb	0	; () banked
 20521  008200  6F76               	movwf	(___ftdiv@f3+1)& (0+255),b
 20522  008202  0E00               	movlw	0
 20523  008204  0100               	movlb	0	; () banked
 20524  008206  6F77               	movwf	(___ftdiv@f3+2)& (0+255),b
 20525                           
 20526                           ; BSR set to: 0
 20527  008208  0100               	movlb	0	; () banked
 20528  00820A  5179               	movf	___ftdiv@sign& (0+255),w,b
 20529  00820C  0F89               	addlw	137
 20530  00820E  0100               	movlb	0	; () banked
 20531  008210  5F78               	subwf	___ftdiv@exp& (0+255),f,b
 20532                           
 20533                           ; BSR set to: 0
 20534  008212  C06D  F079         	movff	___ftdiv@f1+2,___ftdiv@sign
 20535                           
 20536                           ; BSR set to: 0
 20537  008216  0100               	movlb	0	; () banked
 20538  008218  5170               	movf	(___ftdiv@f2+2)& (0+255),w,b
 20539  00821A  0100               	movlb	0	; () banked
 20540  00821C  1B79               	xorwf	___ftdiv@sign& (0+255),f,b
 20541                           
 20542                           ; BSR set to: 0
 20543  00821E  0E80               	movlw	128
 20544  008220  0100               	movlb	0	; () banked
 20545  008222  1779               	andwf	___ftdiv@sign& (0+255),f,b
 20546                           
 20547                           ; BSR set to: 0
 20548  008224  0100               	movlb	0	; () banked
 20549  008226  8F6C               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 20550                           
 20551                           ; BSR set to: 0
 20552  008228  0EFF               	movlw	255
 20553  00822A  0100               	movlb	0	; () banked
 20554  00822C  176B               	andwf	___ftdiv@f1& (0+255),f,b
 20555  00822E  0EFF               	movlw	255
 20556  008230  0100               	movlb	0	; () banked
 20557  008232  176C               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 20558  008234  0E00               	movlw	0
 20559  008236  0100               	movlb	0	; () banked
 20560  008238  176D               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 20561                           
 20562                           ; BSR set to: 0
 20563  00823A  0100               	movlb	0	; () banked
 20564  00823C  8F6F               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 20565                           
 20566                           ; BSR set to: 0
 20567  00823E  0EFF               	movlw	255
 20568  008240  0100               	movlb	0	; () banked
 20569  008242  176E               	andwf	___ftdiv@f2& (0+255),f,b
 20570  008244  0EFF               	movlw	255
 20571  008246  0100               	movlb	0	; () banked
 20572  008248  176F               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 20573  00824A  0E00               	movlw	0
 20574  00824C  0100               	movlb	0	; () banked
 20575  00824E  1770               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 20576                           
 20577                           ; BSR set to: 0
 20578  008250  0E18               	movlw	24
 20579  008252  0100               	movlb	0	; () banked
 20580  008254  6F74               	movwf	___ftdiv@cntr& (0+255),b
 20581  008256  D000               	goto	l11200
 20582  008258                     l11200:
 20583                           
 20584                           ; BSR set to: 0
 20585  008258  0100               	movlb	0	; () banked
 20586  00825A  90D8               	bcf	status,0,c
 20587  00825C  3775               	rlcf	___ftdiv@f3& (0+255),f,b
 20588  00825E  3776               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 20589  008260  3777               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 20590                           
 20591                           ; BSR set to: 0
 20592  008262  0100               	movlb	0	; () banked
 20593  008264  516E               	movf	___ftdiv@f2& (0+255),w,b
 20594  008266  0100               	movlb	0	; () banked
 20595  008268  5D6B               	subwf	___ftdiv@f1& (0+255),w,b
 20596  00826A  0100               	movlb	0	; () banked
 20597  00826C  516F               	movf	(___ftdiv@f2+1)& (0+255),w,b
 20598  00826E  0100               	movlb	0	; () banked
 20599  008270  596C               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 20600  008272  0100               	movlb	0	; () banked
 20601  008274  5170               	movf	(___ftdiv@f2+2)& (0+255),w,b
 20602  008276  0100               	movlb	0	; () banked
 20603  008278  596D               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 20604  00827A  A0D8               	btfss	status,0,c
 20605  00827C  D00E               	goto	l3028
 20606                           
 20607                           ; BSR set to: 0
 20608  00827E  0100               	movlb	0	; () banked
 20609  008280  516E               	movf	___ftdiv@f2& (0+255),w,b
 20610  008282  0100               	movlb	0	; () banked
 20611  008284  5F6B               	subwf	___ftdiv@f1& (0+255),f,b
 20612  008286  0100               	movlb	0	; () banked
 20613  008288  516F               	movf	(___ftdiv@f2+1)& (0+255),w,b
 20614  00828A  0100               	movlb	0	; () banked
 20615  00828C  5B6C               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 20616  00828E  0100               	movlb	0	; () banked
 20617  008290  5170               	movf	(___ftdiv@f2+2)& (0+255),w,b
 20618  008292  0100               	movlb	0	; () banked
 20619  008294  5B6D               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 20620                           
 20621                           ; BSR set to: 0
 20622  008296  0100               	movlb	0	; () banked
 20623  008298  8175               	bsf	___ftdiv@f3& (0+255),0,b
 20624  00829A                     l3028:
 20625                           
 20626                           ; BSR set to: 0
 20627  00829A  0100               	movlb	0	; () banked
 20628  00829C  90D8               	bcf	status,0,c
 20629  00829E  376B               	rlcf	___ftdiv@f1& (0+255),f,b
 20630  0082A0  376C               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 20631  0082A2  376D               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 20632                           
 20633                           ; BSR set to: 0
 20634  0082A4  0100               	movlb	0	; () banked
 20635  0082A6  2F74               	decfsz	___ftdiv@cntr& (0+255),f,b
 20636  0082A8  D7D7               	goto	l11200
 20637  0082AA  D000               	goto	l11210
 20638  0082AC                     l11210:
 20639                           
 20640                           ; BSR set to: 0
 20641  0082AC  C075  F060         	movff	___ftdiv@f3,___ftpack@arg
 20642  0082B0  C076  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
 20643  0082B4  C077  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
 20644  0082B8  C078  F063         	movff	___ftdiv@exp,___ftpack@exp
 20645  0082BC  C079  F064         	movff	___ftdiv@sign,___ftpack@sign
 20646  0082C0  ECED  F043         	call	___ftpack	;wreg free
 20647  0082C4  C060  F06B         	movff	?___ftpack,?___ftdiv
 20648  0082C8  C061  F06C         	movff	?___ftpack+1,?___ftdiv+1
 20649  0082CC  C062  F06D         	movff	?___ftpack+2,?___ftdiv+2
 20650  0082D0  0012               	return	
 20651  0082D2  0012               	return		;funcret
 20652  0082D4                     __end_of___ftdiv:
 20653                           	opt stack 0
 20654                           tblptru	equ	0xFF8
 20655                           tblptrh	equ	0xFF7
 20656                           tblptrl	equ	0xFF6
 20657                           tablat	equ	0xFF5
 20658                           prodh	equ	0xFF4
 20659                           prodl	equ	0xFF3
 20660                           intcon	equ	0xFF2
 20661                           indf0	equ	0xFEF
 20662                           postinc0	equ	0xFEE
 20663                           plusw0	equ	0xFEB
 20664                           fsr0h	equ	0xFEA
 20665                           fsr0l	equ	0xFE9
 20666                           wreg	equ	0xFE8
 20667                           indf1	equ	0xFE7
 20668                           postdec1	equ	0xFE5
 20669                           fsr1h	equ	0xFE2
 20670                           fsr1l	equ	0xFE1
 20671                           indf2	equ	0xFDF
 20672                           postinc2	equ	0xFDE
 20673                           plusw2	equ	0xFDB
 20674                           fsr2h	equ	0xFDA
 20675                           fsr2l	equ	0xFD9
 20676                           status	equ	0xFD8
 20677                           
 20678 ;; *************** function _VoltageDividerON *****************
 20679 ;; Defined at:
 20680 ;;		line 148 in file "ADC.c"
 20681 ;; Parameters:    Size  Location     Type
 20682 ;;		None
 20683 ;; Auto vars:     Size  Location     Type
 20684 ;;		None
 20685 ;; Return value:  Size  Location     Type
 20686 ;;		None               void
 20687 ;; Registers used:
 20688 ;;		status,2, status,0
 20689 ;; Tracked objects:
 20690 ;;		On entry : 0/0
 20691 ;;		On exit  : 0/0
 20692 ;;		Unchanged: 0/0
 20693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20698 ;;Total ram usage:        0 bytes
 20699 ;; Hardware stack levels used:    1
 20700 ;; Hardware stack levels required when called:    5
 20701 ;; This function calls:
 20702 ;;		Nothing
 20703 ;; This function is called by:
 20704 ;;		_ReadVoltage
 20705 ;; This function uses a non-reentrant model
 20706 ;;
 20707                           
 20708                           	psect	text25
 20709  00AA72                     __ptext25:
 20710                           	opt stack 0
 20711  00AA72                     _VoltageDividerON:
 20712                           	opt stack 23
 20713                           
 20714                           ;ADC.c: 150: TRISBbits.TRISB5 = 0;
 20715                           
 20716                           ;incstack = 0
 20717  00AA72  9A93               	bcf	3987,5,c	;volatile
 20718                           
 20719                           ;ADC.c: 151: LATB &= ~0x20;
 20720  00AA74  9A8A               	bcf	3978,5,c	;volatile
 20721  00AA76  0012               	return		;funcret
 20722  00AA78                     __end_of_VoltageDividerON:
 20723                           	opt stack 0
 20724                           tblptru	equ	0xFF8
 20725                           tblptrh	equ	0xFF7
 20726                           tblptrl	equ	0xFF6
 20727                           tablat	equ	0xFF5
 20728                           prodh	equ	0xFF4
 20729                           prodl	equ	0xFF3
 20730                           intcon	equ	0xFF2
 20731                           indf0	equ	0xFEF
 20732                           postinc0	equ	0xFEE
 20733                           plusw0	equ	0xFEB
 20734                           fsr0h	equ	0xFEA
 20735                           fsr0l	equ	0xFE9
 20736                           wreg	equ	0xFE8
 20737                           indf1	equ	0xFE7
 20738                           postdec1	equ	0xFE5
 20739                           fsr1h	equ	0xFE2
 20740                           fsr1l	equ	0xFE1
 20741                           indf2	equ	0xFDF
 20742                           postinc2	equ	0xFDE
 20743                           plusw2	equ	0xFDB
 20744                           fsr2h	equ	0xFDA
 20745                           fsr2l	equ	0xFD9
 20746                           status	equ	0xFD8
 20747                           
 20748 ;; *************** function _VoltageDividerOFF *****************
 20749 ;; Defined at:
 20750 ;;		line 159 in file "ADC.c"
 20751 ;; Parameters:    Size  Location     Type
 20752 ;;		None
 20753 ;; Auto vars:     Size  Location     Type
 20754 ;;		None
 20755 ;; Return value:  Size  Location     Type
 20756 ;;		None               void
 20757 ;; Registers used:
 20758 ;;		None
 20759 ;; Tracked objects:
 20760 ;;		On entry : 0/0
 20761 ;;		On exit  : 0/0
 20762 ;;		Unchanged: 0/0
 20763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20768 ;;Total ram usage:        0 bytes
 20769 ;; Hardware stack levels used:    1
 20770 ;; Hardware stack levels required when called:    5
 20771 ;; This function calls:
 20772 ;;		Nothing
 20773 ;; This function is called by:
 20774 ;;		_ReadVoltage
 20775 ;; This function uses a non-reentrant model
 20776 ;;
 20777                           
 20778                           	psect	text26
 20779  00AA82                     __ptext26:
 20780                           	opt stack 0
 20781  00AA82                     _VoltageDividerOFF:
 20782                           	opt stack 23
 20783                           
 20784                           ;ADC.c: 161: TRISBbits.TRISB5 = 1;
 20785                           
 20786                           ;incstack = 0
 20787  00AA82  8A93               	bsf	3987,5,c	;volatile
 20788  00AA84  0012               	return		;funcret
 20789  00AA86                     __end_of_VoltageDividerOFF:
 20790                           	opt stack 0
 20791                           tblptru	equ	0xFF8
 20792                           tblptrh	equ	0xFF7
 20793                           tblptrl	equ	0xFF6
 20794                           tablat	equ	0xFF5
 20795                           prodh	equ	0xFF4
 20796                           prodl	equ	0xFF3
 20797                           intcon	equ	0xFF2
 20798                           indf0	equ	0xFEF
 20799                           postinc0	equ	0xFEE
 20800                           plusw0	equ	0xFEB
 20801                           fsr0h	equ	0xFEA
 20802                           fsr0l	equ	0xFE9
 20803                           wreg	equ	0xFE8
 20804                           indf1	equ	0xFE7
 20805                           postdec1	equ	0xFE5
 20806                           fsr1h	equ	0xFE2
 20807                           fsr1l	equ	0xFE1
 20808                           indf2	equ	0xFDF
 20809                           postinc2	equ	0xFDE
 20810                           plusw2	equ	0xFDB
 20811                           fsr2h	equ	0xFDA
 20812                           fsr2l	equ	0xFD9
 20813                           status	equ	0xFD8
 20814                           
 20815 ;; *************** function _InternalADC_Read *****************
 20816 ;; Defined at:
 20817 ;;		line 84 in file "ADC.c"
 20818 ;; Parameters:    Size  Location     Type
 20819 ;;  channel         1    wreg     unsigned char 
 20820 ;;  ADCcounts       2    9[BANK0 ] PTR unsigned int 
 20821 ;;		 -> ReadVoltage@temp(2), 
 20822 ;; Auto vars:     Size  Location     Type
 20823 ;;  channel         1   14[BANK0 ] unsigned char 
 20824 ;;  AnaChanSel      1   13[BANK0 ] unsigned char 
 20825 ;; Return value:  Size  Location     Type
 20826 ;;                  1    wreg      unsigned char 
 20827 ;; Registers used:
 20828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20829 ;; Tracked objects:
 20830 ;;		On entry : 0/0
 20831 ;;		On exit  : 0/0
 20832 ;;		Unchanged: 0/0
 20833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20834 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20835 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20836 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20837 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20838 ;;Total ram usage:        6 bytes
 20839 ;; Hardware stack levels used:    1
 20840 ;; Hardware stack levels required when called:    6
 20841 ;; This function calls:
 20842 ;;		_delayUS
 20843 ;; This function is called by:
 20844 ;;		_ReadVoltage
 20845 ;; This function uses a non-reentrant model
 20846 ;;
 20847                           
 20848                           	psect	text27
 20849  00998E                     __ptext27:
 20850                           	opt stack 0
 20851  00998E                     _InternalADC_Read:
 20852                           	opt stack 22
 20853                           
 20854                           ;incstack = 0
 20855                           ;InternalADC_Read@channel stored from wreg
 20856  00998E  0100               	movlb	0	; () banked
 20857  009990  6F6E               	movwf	InternalADC_Read@channel& (0+255),b
 20858                           
 20859                           ; BSR set to: 0
 20860                           ;ADC.c: 86: unsigned char AnaChanSel = 1;
 20861  009992  0E01               	movlw	1
 20862  009994  0100               	movlb	0	; () banked
 20863  009996  6F6D               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 20864                           
 20865                           ; BSR set to: 0
 20866                           ;ADC.c: 87: if(channel > 0b1100)
 20867  009998  0E0C               	movlw	12
 20868  00999A  0100               	movlb	0	; () banked
 20869  00999C  656E               	cpfsgt	InternalADC_Read@channel& (0+255),b
 20870  00999E  D00A               	goto	l10696
 20871                           
 20872                           ; BSR set to: 0
 20873                           ;ADC.c: 88: {
 20874                           ;ADC.c: 89: *ADCcounts = 0;
 20875  0099A0  C069  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 20876  0099A4  C06A  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 20877  0099A8  0E00               	movlw	0
 20878  0099AA  6EDE               	movwf	postinc2,c
 20879  0099AC  0E00               	movlw	0
 20880  0099AE  6EDD               	movwf	postdec2,c
 20881                           
 20882                           ; BSR set to: 0
 20883                           ;ADC.c: 90: return 0;
 20884  0099B0  0E00               	movlw	0
 20885                           
 20886                           ; BSR set to: 0
 20887  0099B2  0012               	return	
 20888  0099B4                     l10696:
 20889                           
 20890                           ; BSR set to: 0
 20891                           ;ADC.c: 91: }
 20892                           ;ADC.c: 92: if(channel > 1)
 20893  0099B4  0E01               	movlw	1
 20894  0099B6  0100               	movlb	0	; () banked
 20895  0099B8  656E               	cpfsgt	InternalADC_Read@channel& (0+255),b
 20896  0099BA  D001               	goto	l10700
 20897                           
 20898                           ; BSR set to: 0
 20899                           ;ADC.c: 95: }
 20900  0099BC  D009               	goto	l10704
 20901  0099BE                     l10700:
 20902                           
 20903                           ; BSR set to: 0
 20904                           ;ADC.c: 96: else if (channel == 0)
 20905  0099BE  0100               	movlb	0	; () banked
 20906  0099C0  516E               	movf	InternalADC_Read@channel& (0+255),w,b
 20907  0099C2  0100               	movlb	0	; () banked
 20908  0099C4  A4D8               	btfss	status,2,c
 20909  0099C6  D004               	goto	l10704
 20910                           
 20911                           ; BSR set to: 0
 20912                           ;ADC.c: 97: {
 20913                           ;ADC.c: 98: AnaChanSel = 0;
 20914  0099C8  0E00               	movlw	0
 20915  0099CA  0100               	movlb	0	; () banked
 20916  0099CC  6F6D               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 20917                           
 20918                           ; BSR set to: 0
 20919  0099CE  D000               	goto	l10704
 20920  0099D0                     l10704:
 20921                           
 20922                           ; BSR set to: 0
 20923                           ;ADC.c: 99: }
 20924                           ;ADC.c: 101: ADCON0 |= (AnaChanSel << 2);
 20925  0099D0  0100               	movlb	0	; () banked
 20926  0099D2  456D               	rlncf	InternalADC_Read@AnaChanSel& (0+255),w,b
 20927  0099D4  46E8               	rlncf	wreg,f,c
 20928  0099D6  0BFC               	andlw	252
 20929  0099D8  12C2               	iorwf	4034,f,c	;volatile
 20930                           
 20931                           ; BSR set to: 0
 20932                           ;ADC.c: 103: ADCON1bits.VCFG0 = 0;
 20933  0099DA  98C1               	bcf	4033,4,c	;volatile
 20934                           
 20935                           ; BSR set to: 0
 20936                           ;ADC.c: 104: ADCON1bits.VCFG1 = 0;
 20937  0099DC  9AC1               	bcf	4033,5,c	;volatile
 20938                           
 20939                           ; BSR set to: 0
 20940                           ;ADC.c: 106: (ADCON0bits.ADON = 1);
 20941  0099DE  80C2               	bsf	4034,0,c	;volatile
 20942                           
 20943                           ; BSR set to: 0
 20944                           ;ADC.c: 107: delayUS(50);
 20945  0099E0  0E32               	movlw	50
 20946  0099E2  0100               	movlb	0	; () banked
 20947  0099E4  6F60               	movwf	delayUS@US& (0+255),b
 20948  0099E6  0E00               	movlw	0
 20949  0099E8  6F61               	movwf	(delayUS@US+1)& (0+255),b
 20950  0099EA  0E00               	movlw	0
 20951  0099EC  6F62               	movwf	(delayUS@US+2)& (0+255),b
 20952  0099EE  0E00               	movlw	0
 20953  0099F0  6F63               	movwf	(delayUS@US+3)& (0+255),b
 20954  0099F2  EC3F  F051         	call	_delayUS	;wreg free
 20955                           
 20956                           ;ADC.c: 109: ADCON0bits.GO = 1;
 20957  0099F6  82C2               	bsf	4034,1,c	;volatile
 20958                           
 20959                           ;ADC.c: 110: while(ADCON0bits.GO);
 20960  0099F8  D000               	goto	l882
 20961  0099FA                     l882:
 20962  0099FA  B2C2               	btfsc	4034,1,c	;volatile
 20963  0099FC  D7FE               	goto	l882
 20964                           
 20965                           ;ADC.c: 111: (ADCON0bits.ADON = 0);
 20966  0099FE  90C2               	bcf	4034,0,c	;volatile
 20967                           
 20968                           ;ADC.c: 113: *ADCcounts = ((ADRESH << 8) + ADRESL);
 20969  009A00  50C3               	movf	4035,w,c	;volatile
 20970  009A02  CFC4 F06B          	movff	4036,??_InternalADC_Read	;volatile
 20971  009A06  0100               	movlb	0	; () banked
 20972  009A08  6B6C               	clrf	(??_InternalADC_Read+1)& (0+255),b
 20973  009A0A  C06B  F06C         	movff	??_InternalADC_Read,??_InternalADC_Read+1
 20974  009A0E  0100               	movlb	0	; () banked
 20975  009A10  6B6B               	clrf	??_InternalADC_Read& (0+255),b
 20976  009A12  0100               	movlb	0	; () banked
 20977  009A14  276B               	addwf	??_InternalADC_Read& (0+255),f,b
 20978  009A16  0E00               	movlw	0
 20979  009A18  236C               	addwfc	(??_InternalADC_Read+1)& (0+255),f,b
 20980  009A1A  C069  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 20981  009A1E  C06A  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 20982  009A22  C06B  FFDE         	movff	??_InternalADC_Read,postinc2
 20983  009A26  C06C  FFDD         	movff	??_InternalADC_Read+1,postdec2
 20984                           
 20985                           ; BSR set to: 0
 20986                           ;ADC.c: 114: return 1;
 20987  009A2A  0E01               	movlw	1
 20988  009A2C  0012               	return	
 20989                           
 20990                           ; BSR set to: 0
 20991                           
 20992                           ; BSR set to: 0
 20993  009A2E  0012               	return		;funcret
 20994  009A30                     __end_of_InternalADC_Read:
 20995                           	opt stack 0
 20996                           tblptru	equ	0xFF8
 20997                           tblptrh	equ	0xFF7
 20998                           tblptrl	equ	0xFF6
 20999                           tablat	equ	0xFF5
 21000                           prodh	equ	0xFF4
 21001                           prodl	equ	0xFF3
 21002                           intcon	equ	0xFF2
 21003                           indf0	equ	0xFEF
 21004                           postinc0	equ	0xFEE
 21005                           plusw0	equ	0xFEB
 21006                           fsr0h	equ	0xFEA
 21007                           fsr0l	equ	0xFE9
 21008                           wreg	equ	0xFE8
 21009                           indf1	equ	0xFE7
 21010                           postdec1	equ	0xFE5
 21011                           fsr1h	equ	0xFE2
 21012                           fsr1l	equ	0xFE1
 21013                           indf2	equ	0xFDF
 21014                           postinc2	equ	0xFDE
 21015                           postdec2	equ	0xFDD
 21016                           plusw2	equ	0xFDB
 21017                           fsr2h	equ	0xFDA
 21018                           fsr2l	equ	0xFD9
 21019                           status	equ	0xFD8
 21020                           
 21021 ;; *************** function _IsAlphaNumericString *****************
 21022 ;; Defined at:
 21023 ;;		line 159 in file "MISC.c"
 21024 ;; Parameters:    Size  Location     Type
 21025 ;;  data            2    2[BANK0 ] PTR unsigned char 
 21026 ;;		 -> ReceivedString(100), 
 21027 ;; Auto vars:     Size  Location     Type
 21028 ;;		None
 21029 ;; Return value:  Size  Location     Type
 21030 ;;                  1    wreg      unsigned char 
 21031 ;; Registers used:
 21032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21033 ;; Tracked objects:
 21034 ;;		On entry : 0/0
 21035 ;;		On exit  : 0/0
 21036 ;;		Unchanged: 0/0
 21037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21038 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21041 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21042 ;;Total ram usage:        2 bytes
 21043 ;; Hardware stack levels used:    1
 21044 ;; Hardware stack levels required when called:    7
 21045 ;; This function calls:
 21046 ;;		_IsAlphaNumeric
 21047 ;; This function is called by:
 21048 ;;		_UseBluetooth
 21049 ;; This function uses a non-reentrant model
 21050 ;;
 21051                           
 21052                           	psect	text28
 21053  00A5B6                     __ptext28:
 21054                           	opt stack 0
 21055  00A5B6                     _IsAlphaNumericString:
 21056                           	opt stack 22
 21057                           
 21058                           ;MISC.c: 161: while(*data != 0)
 21059                           
 21060                           ; BSR set to: 0
 21061                           ;incstack = 0
 21062  00A5B6  D010               	goto	l11476
 21063  00A5B8                     l11468:
 21064                           
 21065                           ;MISC.c: 162: {
 21066                           ;MISC.c: 163: if(!IsAlphaNumeric(*data))
 21067  00A5B8  C062  FFD9         	movff	IsAlphaNumericString@data,fsr2l
 21068  00A5BC  C063  FFDA         	movff	IsAlphaNumericString@data+1,fsr2h
 21069  00A5C0  50DF               	movf	indf2,w,c
 21070  00A5C2  ECF6  F052         	call	_IsAlphaNumeric
 21071  00A5C6  0900               	iorlw	0
 21072  00A5C8  A4D8               	btfss	status,2,c
 21073  00A5CA  D002               	goto	l11474
 21074                           
 21075                           ;MISC.c: 164: {
 21076                           ;MISC.c: 165: return 0;
 21077  00A5CC  0E00               	movlw	0
 21078  00A5CE  0012               	return	
 21079  00A5D0                     l11474:
 21080                           
 21081                           ;MISC.c: 166: }
 21082                           ;MISC.c: 167: data++;
 21083  00A5D0  0100               	movlb	0	; () banked
 21084  00A5D2  4B62               	infsnz	IsAlphaNumericString@data& (0+255),f,b
 21085  00A5D4  2B63               	incf	(IsAlphaNumericString@data+1)& (0+255),f,b
 21086  00A5D6  D000               	goto	l11476
 21087  00A5D8                     l11476:
 21088  00A5D8  C062  FFD9         	movff	IsAlphaNumericString@data,fsr2l
 21089  00A5DC  C063  FFDA         	movff	IsAlphaNumericString@data+1,fsr2h
 21090  00A5E0  50DF               	movf	indf2,w,c
 21091  00A5E2  A4D8               	btfss	status,2,c
 21092  00A5E4  D7E9               	goto	l11468
 21093                           
 21094                           ;MISC.c: 168: }
 21095                           ;MISC.c: 169: return 1;
 21096  00A5E6  0E01               	movlw	1
 21097  00A5E8  0012               	return	
 21098  00A5EA  0012               	return		;funcret
 21099  00A5EC                     __end_of_IsAlphaNumericString:
 21100                           	opt stack 0
 21101                           tblptru	equ	0xFF8
 21102                           tblptrh	equ	0xFF7
 21103                           tblptrl	equ	0xFF6
 21104                           tablat	equ	0xFF5
 21105                           prodh	equ	0xFF4
 21106                           prodl	equ	0xFF3
 21107                           intcon	equ	0xFF2
 21108                           indf0	equ	0xFEF
 21109                           postinc0	equ	0xFEE
 21110                           plusw0	equ	0xFEB
 21111                           fsr0h	equ	0xFEA
 21112                           fsr0l	equ	0xFE9
 21113                           wreg	equ	0xFE8
 21114                           indf1	equ	0xFE7
 21115                           postdec1	equ	0xFE5
 21116                           fsr1h	equ	0xFE2
 21117                           fsr1l	equ	0xFE1
 21118                           indf2	equ	0xFDF
 21119                           postinc2	equ	0xFDE
 21120                           postdec2	equ	0xFDD
 21121                           plusw2	equ	0xFDB
 21122                           fsr2h	equ	0xFDA
 21123                           fsr2l	equ	0xFD9
 21124                           status	equ	0xFD8
 21125                           
 21126 ;; *************** function _IsAlphaNumeric *****************
 21127 ;; Defined at:
 21128 ;;		line 144 in file "MISC.c"
 21129 ;; Parameters:    Size  Location     Type
 21130 ;;  data            1    wreg     unsigned char 
 21131 ;; Auto vars:     Size  Location     Type
 21132 ;;  data            1    1[BANK0 ] unsigned char 
 21133 ;; Return value:  Size  Location     Type
 21134 ;;                  1    wreg      unsigned char 
 21135 ;; Registers used:
 21136 ;;		wreg, status,2, status,0, cstack
 21137 ;; Tracked objects:
 21138 ;;		On entry : 0/0
 21139 ;;		On exit  : 0/0
 21140 ;;		Unchanged: 0/0
 21141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21143 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21145 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21146 ;;Total ram usage:        1 bytes
 21147 ;; Hardware stack levels used:    1
 21148 ;; Hardware stack levels required when called:    6
 21149 ;; This function calls:
 21150 ;;		_IsLetter
 21151 ;;		_IsNumber
 21152 ;; This function is called by:
 21153 ;;		_IsAlphaNumericString
 21154 ;; This function uses a non-reentrant model
 21155 ;;
 21156                           
 21157                           	psect	text29
 21158  00A5EC                     __ptext29:
 21159                           	opt stack 0
 21160  00A5EC                     _IsAlphaNumeric:
 21161                           	opt stack 22
 21162                           
 21163                           ;incstack = 0
 21164                           ;IsAlphaNumeric@data stored from wreg
 21165  00A5EC  0100               	movlb	0	; () banked
 21166  00A5EE  6F61               	movwf	IsAlphaNumeric@data& (0+255),b
 21167                           
 21168                           ; BSR set to: 0
 21169                           ;MISC.c: 146: if(IsLetter(data) || IsNumber(data) || data == ' ')
 21170  00A5F0  0100               	movlb	0	; () banked
 21171  00A5F2  5161               	movf	IsAlphaNumeric@data& (0+255),w,b
 21172  00A5F4  EC29  F053         	call	_IsLetter
 21173  00A5F8  0900               	iorlw	0
 21174  00A5FA  A4D8               	btfss	status,2,c
 21175  00A5FC  D00C               	goto	l10598
 21176  00A5FE  0100               	movlb	0	; () banked
 21177  00A600  5161               	movf	IsAlphaNumeric@data& (0+255),w,b
 21178  00A602  EC2E  F054         	call	_IsNumber
 21179  00A606  0900               	iorlw	0
 21180  00A608  A4D8               	btfss	status,2,c
 21181  00A60A  D005               	goto	l10598
 21182  00A60C  0E20               	movlw	32
 21183  00A60E  0100               	movlb	0	; () banked
 21184  00A610  1961               	xorwf	IsAlphaNumeric@data& (0+255),w,b
 21185  00A612  A4D8               	btfss	status,2,c
 21186  00A614  D002               	goto	l10602
 21187  00A616                     l10598:
 21188                           
 21189                           ;MISC.c: 147: {
 21190                           ;MISC.c: 148: return 1;
 21191  00A616  0E01               	movlw	1
 21192  00A618  0012               	return	
 21193  00A61A                     l10602:
 21194                           
 21195                           ;MISC.c: 149: }
 21196                           ;MISC.c: 150: return 0;
 21197  00A61A  0E00               	movlw	0
 21198  00A61C  0012               	return	
 21199  00A61E  0012               	return		;funcret
 21200  00A620                     __end_of_IsAlphaNumeric:
 21201                           	opt stack 0
 21202                           tblptru	equ	0xFF8
 21203                           tblptrh	equ	0xFF7
 21204                           tblptrl	equ	0xFF6
 21205                           tablat	equ	0xFF5
 21206                           prodh	equ	0xFF4
 21207                           prodl	equ	0xFF3
 21208                           intcon	equ	0xFF2
 21209                           indf0	equ	0xFEF
 21210                           postinc0	equ	0xFEE
 21211                           plusw0	equ	0xFEB
 21212                           fsr0h	equ	0xFEA
 21213                           fsr0l	equ	0xFE9
 21214                           wreg	equ	0xFE8
 21215                           indf1	equ	0xFE7
 21216                           postdec1	equ	0xFE5
 21217                           fsr1h	equ	0xFE2
 21218                           fsr1l	equ	0xFE1
 21219                           indf2	equ	0xFDF
 21220                           postinc2	equ	0xFDE
 21221                           postdec2	equ	0xFDD
 21222                           plusw2	equ	0xFDB
 21223                           fsr2h	equ	0xFDA
 21224                           fsr2l	equ	0xFD9
 21225                           status	equ	0xFD8
 21226                           
 21227 ;; *************** function _IsNumber *****************
 21228 ;; Defined at:
 21229 ;;		line 115 in file "MISC.c"
 21230 ;; Parameters:    Size  Location     Type
 21231 ;;  data            1    wreg     unsigned char 
 21232 ;; Auto vars:     Size  Location     Type
 21233 ;;  data            1    0[BANK0 ] unsigned char 
 21234 ;; Return value:  Size  Location     Type
 21235 ;;                  1    wreg      unsigned char 
 21236 ;; Registers used:
 21237 ;;		wreg, status,2, status,0
 21238 ;; Tracked objects:
 21239 ;;		On entry : 0/0
 21240 ;;		On exit  : 0/0
 21241 ;;		Unchanged: 0/0
 21242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21244 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21246 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21247 ;;Total ram usage:        1 bytes
 21248 ;; Hardware stack levels used:    1
 21249 ;; Hardware stack levels required when called:    5
 21250 ;; This function calls:
 21251 ;;		Nothing
 21252 ;; This function is called by:
 21253 ;;		_IsAlphaNumeric
 21254 ;; This function uses a non-reentrant model
 21255 ;;
 21256                           
 21257                           	psect	text30
 21258  00A85C                     __ptext30:
 21259                           	opt stack 0
 21260  00A85C                     _IsNumber:
 21261                           	opt stack 22
 21262                           
 21263                           ;incstack = 0
 21264                           ;IsNumber@data stored from wreg
 21265  00A85C  0100               	movlb	0	; () banked
 21266  00A85E  6F60               	movwf	IsNumber@data& (0+255),b
 21267                           
 21268                           ; BSR set to: 0
 21269                           ;MISC.c: 117: if(data >= '0' && data <= '9')
 21270  00A860  0E2F               	movlw	47
 21271  00A862  0100               	movlb	0	; () banked
 21272  00A864  6560               	cpfsgt	IsNumber@data& (0+255),b
 21273  00A866  D006               	goto	l10272
 21274                           
 21275                           ; BSR set to: 0
 21276  00A868  0E3A               	movlw	58
 21277  00A86A  0100               	movlb	0	; () banked
 21278  00A86C  6160               	cpfslt	IsNumber@data& (0+255),b
 21279  00A86E  D002               	goto	l10272
 21280                           
 21281                           ; BSR set to: 0
 21282                           ;MISC.c: 118: {
 21283                           ;MISC.c: 119: return 1;
 21284  00A870  0E01               	movlw	1
 21285                           
 21286                           ; BSR set to: 0
 21287  00A872  0012               	return	
 21288  00A874                     l10272:
 21289                           
 21290                           ; BSR set to: 0
 21291                           ;MISC.c: 120: }
 21292                           ;MISC.c: 121: return 0;
 21293  00A874  0E00               	movlw	0
 21294  00A876  0012               	return	
 21295                           
 21296                           ; BSR set to: 0
 21297                           
 21298                           ; BSR set to: 0
 21299  00A878  0012               	return		;funcret
 21300  00A87A                     __end_of_IsNumber:
 21301                           	opt stack 0
 21302                           tblptru	equ	0xFF8
 21303                           tblptrh	equ	0xFF7
 21304                           tblptrl	equ	0xFF6
 21305                           tablat	equ	0xFF5
 21306                           prodh	equ	0xFF4
 21307                           prodl	equ	0xFF3
 21308                           intcon	equ	0xFF2
 21309                           indf0	equ	0xFEF
 21310                           postinc0	equ	0xFEE
 21311                           plusw0	equ	0xFEB
 21312                           fsr0h	equ	0xFEA
 21313                           fsr0l	equ	0xFE9
 21314                           wreg	equ	0xFE8
 21315                           indf1	equ	0xFE7
 21316                           postdec1	equ	0xFE5
 21317                           fsr1h	equ	0xFE2
 21318                           fsr1l	equ	0xFE1
 21319                           indf2	equ	0xFDF
 21320                           postinc2	equ	0xFDE
 21321                           postdec2	equ	0xFDD
 21322                           plusw2	equ	0xFDB
 21323                           fsr2h	equ	0xFDA
 21324                           fsr2l	equ	0xFD9
 21325                           status	equ	0xFD8
 21326                           
 21327 ;; *************** function _GetStringAfterComma *****************
 21328 ;; Defined at:
 21329 ;;		line 847 in file "MISC.c"
 21330 ;; Parameters:    Size  Location     Type
 21331 ;;  This            2    0[BANK0 ] PTR unsigned char 
 21332 ;;		 -> main@BluetoothString(100), 
 21333 ;;  CommaNumber     1    2[BANK0 ] unsigned char 
 21334 ;;  result          2    3[BANK0 ] PTR unsigned char 
 21335 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 21336 ;; Auto vars:     Size  Location     Type
 21337 ;;  count           1    7[BANK0 ] unsigned char 
 21338 ;;  tempCommaNum    1    6[BANK0 ] unsigned char 
 21339 ;; Return value:  Size  Location     Type
 21340 ;;                  1    wreg      unsigned char 
 21341 ;; Registers used:
 21342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 21343 ;; Tracked objects:
 21344 ;;		On entry : 0/0
 21345 ;;		On exit  : 0/0
 21346 ;;		Unchanged: 0/0
 21347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21348 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21349 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21350 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21351 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21352 ;;Total ram usage:        8 bytes
 21353 ;; Hardware stack levels used:    1
 21354 ;; Hardware stack levels required when called:    5
 21355 ;; This function calls:
 21356 ;;		Nothing
 21357 ;; This function is called by:
 21358 ;;		_UseBluetooth
 21359 ;; This function uses a non-reentrant model
 21360 ;;
 21361                           
 21362                           	psect	text31
 21363  008A18                     __ptext31:
 21364                           	opt stack 0
 21365  008A18                     _GetStringAfterComma:
 21366                           	opt stack 24
 21367                           
 21368                           ;MISC.c: 849: unsigned char tempCommaNumber = 1;
 21369                           
 21370                           ; BSR set to: 0
 21371                           ;incstack = 0
 21372  008A18  0E01               	movlw	1
 21373  008A1A  0100               	movlb	0	; () banked
 21374  008A1C  6F66               	movwf	GetStringAfterComma@tempCommaNumber& (0+255),b
 21375                           
 21376                           ;MISC.c: 850: unsigned char count = 0;
 21377  008A1E  0E00               	movlw	0
 21378  008A20  0100               	movlb	0	; () banked
 21379  008A22  6F67               	movwf	GetStringAfterComma@count& (0+255),b
 21380                           
 21381                           ; BSR set to: 0
 21382                           
 21383                           ;MISC.c: 852: SCAN:while(*This != ',' && *This != 0)
 21384  008A24  D001               	goto	l11958
 21385                           
 21386                           ; BSR set to: 0
 21387  008A26  D02B               	goto	L12
 21388  008A28                     l11958:
 21389                           
 21390                           ; BSR set to: 0
 21391  008A28  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 21392  008A2C  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 21393  008A30  0E2C               	movlw	44
 21394  008A32  18DE               	xorwf	postinc2,w,c
 21395  008A34  B4D8               	btfsc	status,2,c
 21396  008A36  D009               	goto	l11962
 21397                           
 21398                           ; BSR set to: 0
 21399  008A38  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 21400  008A3C  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 21401  008A40  50DF               	movf	indf2,w,c
 21402  008A42  B4D8               	btfsc	status,2,c
 21403  008A44  D002               	goto	l11962
 21404  008A46  D01B               	goto	L12
 21405                           
 21406                           ; BSR set to: 0
 21407  008A48  D000               	goto	l11962
 21408  008A4A                     l11962:
 21409                           
 21410                           ; BSR set to: 0
 21411                           ;MISC.c: 856: }
 21412                           ;MISC.c: 857: if(*This == 0)
 21413  008A4A  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 21414  008A4E  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 21415  008A52  50DF               	movf	indf2,w,c
 21416  008A54  A4D8               	btfss	status,2,c
 21417  008A56  D003               	goto	l11970
 21418                           
 21419                           ; BSR set to: 0
 21420                           ;MISC.c: 858: {
 21421                           ;MISC.c: 859: return 1;
 21422  008A58  0E01               	movlw	1
 21423                           
 21424                           ; BSR set to: 0
 21425  008A5A  0012               	return	
 21426                           
 21427                           ; BSR set to: 0
 21428                           ;MISC.c: 860: }
 21429  008A5C  D015               	goto	l11976
 21430  008A5E                     l11970:
 21431                           
 21432                           ; BSR set to: 0
 21433                           ;MISC.c: 861: else if(*This != ',')
 21434  008A5E  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 21435  008A62  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 21436  008A66  0E2C               	movlw	44
 21437  008A68  18DE               	xorwf	postinc2,w,c
 21438  008A6A  B4D8               	btfsc	status,2,c
 21439  008A6C  D00D               	goto	l11976
 21440                           
 21441                           ; BSR set to: 0
 21442                           ;MISC.c: 862: {
 21443                           ;MISC.c: 863: if(tempCommaNumber < CommaNumber)
 21444  008A6E  0100               	movlb	0	; () banked
 21445  008A70  5162               	movf	GetStringAfterComma@CommaNumber& (0+255),w,b
 21446  008A72  0100               	movlb	0	; () banked
 21447  008A74  5D66               	subwf	GetStringAfterComma@tempCommaNumber& (0+255),w,b
 21448  008A76  B0D8               	btfsc	status,0,c
 21449  008A78  D007               	goto	l11976
 21450                           
 21451                           ; BSR set to: 0
 21452                           ;MISC.c: 864: {
 21453                           ;MISC.c: 865: tempCommaNumber++;
 21454  008A7A  0100               	movlb	0	; () banked
 21455  008A7C  2B66               	incf	GetStringAfterComma@tempCommaNumber& (0+255),f,b
 21456  008A7E                     L12:
 21457                           
 21458                           ;MISC.c: 866: This++;
 21459  008A7E  0100               	movlb	0	; () banked
 21460  008A80  4B60               	infsnz	GetStringAfterComma@This& (0+255),f,b
 21461  008A82  2B61               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 21462                           
 21463                           ;MISC.c: 867: goto SCAN;
 21464  008A84  D7D1               	goto	l11958
 21465                           
 21466                           ; BSR set to: 0
 21467                           
 21468                           ; BSR set to: 0
 21469  008A86  D000               	goto	l11976
 21470  008A88                     l11976:
 21471                           
 21472                           ; BSR set to: 0
 21473                           ;MISC.c: 868: }
 21474                           ;MISC.c: 869: }
 21475                           ;MISC.c: 870: if(*This == 0)
 21476  008A88  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 21477  008A8C  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 21478  008A90  50DF               	movf	indf2,w,c
 21479  008A92  A4D8               	btfss	status,2,c
 21480  008A94  D002               	goto	l11982
 21481                           
 21482                           ; BSR set to: 0
 21483                           ;MISC.c: 871: {
 21484                           ;MISC.c: 872: return 1;
 21485  008A96  0E01               	movlw	1
 21486                           
 21487                           ; BSR set to: 0
 21488  008A98  0012               	return	
 21489  008A9A                     l11982:
 21490                           
 21491                           ; BSR set to: 0
 21492                           ;MISC.c: 873: }
 21493                           ;MISC.c: 874: This++;
 21494  008A9A  0100               	movlb	0	; () banked
 21495  008A9C  4B60               	infsnz	GetStringAfterComma@This& (0+255),f,b
 21496  008A9E  2B61               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 21497                           
 21498                           ; BSR set to: 0
 21499                           ;MISC.c: 875: if(*This == ' ')
 21500  008AA0  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 21501  008AA4  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 21502  008AA8  0E20               	movlw	32
 21503  008AAA  18DE               	xorwf	postinc2,w,c
 21504  008AAC  A4D8               	btfss	status,2,c
 21505  008AAE  D004               	goto	l11988
 21506                           
 21507                           ; BSR set to: 0
 21508                           ;MISC.c: 876: {
 21509                           ;MISC.c: 877: This++;
 21510  008AB0  0100               	movlb	0	; () banked
 21511  008AB2  4B60               	infsnz	GetStringAfterComma@This& (0+255),f,b
 21512  008AB4  2B61               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 21513                           
 21514                           ;MISC.c: 879: }
 21515  008AB6  D028               	goto	l12010
 21516  008AB8                     l11988:
 21517                           
 21518                           ; BSR set to: 0
 21519                           ;MISC.c: 880: else if (*This == ',')
 21520  008AB8  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 21521  008ABC  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 21522  008AC0  0E2C               	movlw	44
 21523  008AC2  18DE               	xorwf	postinc2,w,c
 21524  008AC4  A4D8               	btfss	status,2,c
 21525  008AC6  D003               	goto	l11996
 21526                           
 21527                           ; BSR set to: 0
 21528                           ;MISC.c: 881: {
 21529                           ;MISC.c: 882: return 2;
 21530  008AC8  0E02               	movlw	2
 21531                           
 21532                           ; BSR set to: 0
 21533  008ACA  0012               	return	
 21534                           
 21535                           ; BSR set to: 0
 21536                           ;MISC.c: 883: }
 21537  008ACC  D01D               	goto	l12010
 21538  008ACE                     l11996:
 21539                           
 21540                           ; BSR set to: 0
 21541                           ;MISC.c: 884: else if(*This == 0)
 21542  008ACE  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 21543  008AD2  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 21544  008AD6  50DF               	movf	indf2,w,c
 21545  008AD8  A4D8               	btfss	status,2,c
 21546  008ADA  D016               	goto	l12010
 21547                           
 21548                           ; BSR set to: 0
 21549                           ;MISC.c: 885: {
 21550                           ;MISC.c: 886: return 3;
 21551  008ADC  0E03               	movlw	3
 21552                           
 21553                           ; BSR set to: 0
 21554  008ADE  0012               	return	
 21555                           
 21556                           ; BSR set to: 0
 21557                           ;MISC.c: 887: }
 21558                           ;MISC.c: 888: while(*This != 0 && *This != ' ' && count < 10)
 21559                           
 21560                           ; BSR set to: 0
 21561                           
 21562                           ; BSR set to: 0
 21563  008AE0  D013               	goto	l12010
 21564  008AE2                     l12002:
 21565                           
 21566                           ; BSR set to: 0
 21567                           ;MISC.c: 889: {
 21568                           ;MISC.c: 890: *result = *This;
 21569  008AE2  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 21570  008AE6  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 21571  008AEA  C063  FFE1         	movff	GetStringAfterComma@result,fsr1l
 21572  008AEE  C064  FFE2         	movff	GetStringAfterComma@result+1,fsr1h
 21573  008AF2  CFDF FFE7          	movff	indf2,indf1
 21574                           
 21575                           ; BSR set to: 0
 21576                           ;MISC.c: 891: result++;
 21577  008AF6  0100               	movlb	0	; () banked
 21578  008AF8  4B63               	infsnz	GetStringAfterComma@result& (0+255),f,b
 21579  008AFA  2B64               	incf	(GetStringAfterComma@result+1)& (0+255),f,b
 21580                           
 21581                           ; BSR set to: 0
 21582                           ;MISC.c: 892: This++;
 21583  008AFC  0100               	movlb	0	; () banked
 21584  008AFE  4B60               	infsnz	GetStringAfterComma@This& (0+255),f,b
 21585  008B00  2B61               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 21586                           
 21587                           ; BSR set to: 0
 21588                           ;MISC.c: 893: count++;
 21589  008B02  0100               	movlb	0	; () banked
 21590  008B04  2B67               	incf	GetStringAfterComma@count& (0+255),f,b
 21591  008B06  D000               	goto	l12010
 21592  008B08                     l12010:
 21593                           
 21594                           ; BSR set to: 0
 21595  008B08  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 21596  008B0C  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 21597  008B10  50DF               	movf	indf2,w,c
 21598  008B12  B4D8               	btfsc	status,2,c
 21599  008B14  D00D               	goto	l12016
 21600                           
 21601                           ; BSR set to: 0
 21602  008B16  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 21603  008B1A  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 21604  008B1E  0E20               	movlw	32
 21605  008B20  18DE               	xorwf	postinc2,w,c
 21606  008B22  B4D8               	btfsc	status,2,c
 21607  008B24  D005               	goto	l12016
 21608                           
 21609                           ; BSR set to: 0
 21610  008B26  0E09               	movlw	9
 21611  008B28  0100               	movlb	0	; () banked
 21612  008B2A  6567               	cpfsgt	GetStringAfterComma@count& (0+255),b
 21613  008B2C  D7DA               	goto	l12002
 21614                           
 21615                           ; BSR set to: 0
 21616  008B2E  D000               	goto	l12016
 21617  008B30                     l12016:
 21618                           
 21619                           ; BSR set to: 0
 21620                           ;MISC.c: 894: }
 21621                           ;MISC.c: 895: return 0;
 21622  008B30  0E00               	movlw	0
 21623  008B32  0012               	return	
 21624                           
 21625                           ; BSR set to: 0
 21626                           
 21627                           ; BSR set to: 0
 21628  008B34  0012               	return		;funcret
 21629  008B36                     __end_of_GetStringAfterComma:
 21630                           	opt stack 0
 21631                           tblptru	equ	0xFF8
 21632                           tblptrh	equ	0xFF7
 21633                           tblptrl	equ	0xFF6
 21634                           tablat	equ	0xFF5
 21635                           prodh	equ	0xFF4
 21636                           prodl	equ	0xFF3
 21637                           intcon	equ	0xFF2
 21638                           indf0	equ	0xFEF
 21639                           postinc0	equ	0xFEE
 21640                           plusw0	equ	0xFEB
 21641                           fsr0h	equ	0xFEA
 21642                           fsr0l	equ	0xFE9
 21643                           wreg	equ	0xFE8
 21644                           indf1	equ	0xFE7
 21645                           postdec1	equ	0xFE5
 21646                           fsr1h	equ	0xFE2
 21647                           fsr1l	equ	0xFE1
 21648                           indf2	equ	0xFDF
 21649                           postinc2	equ	0xFDE
 21650                           postdec2	equ	0xFDD
 21651                           plusw2	equ	0xFDB
 21652                           fsr2h	equ	0xFDA
 21653                           fsr2l	equ	0xFD9
 21654                           status	equ	0xFD8
 21655                           
 21656 ;; *************** function _GetNumberUnsigned *****************
 21657 ;; Defined at:
 21658 ;;		line 665 in file "MISC.c"
 21659 ;; Parameters:    Size  Location     Type
 21660 ;;  This            2   12[BANK0 ] PTR unsigned char 
 21661 ;;		 -> main@BluetoothString(100), 
 21662 ;;  CommaNumber     1   14[BANK0 ] unsigned char 
 21663 ;;  result          2   15[BANK0 ] PTR unsigned long 
 21664 ;;		 -> UseBluetooth@temp(4), UseBluetooth@EnteredNEC(4), 
 21665 ;; Auto vars:     Size  Location     Type
 21666 ;;  temp            4   26[BANK0 ] long 
 21667 ;;  tempThis        1   30[BANK0 ] unsigned char 
 21668 ;;  i               1   25[BANK0 ] unsigned char 
 21669 ;;  Hex             1   24[BANK0 ] unsigned char 
 21670 ;;  count           1   23[BANK0 ] unsigned char 
 21671 ;;  tempCommaNum    1   22[BANK0 ] unsigned char 
 21672 ;; Return value:  Size  Location     Type
 21673 ;;                  1    wreg      unsigned char 
 21674 ;; Registers used:
 21675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21676 ;; Tracked objects:
 21677 ;;		On entry : 0/0
 21678 ;;		On exit  : 0/0
 21679 ;;		Unchanged: 0/0
 21680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21681 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21682 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21683 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21684 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21685 ;;Total ram usage:       19 bytes
 21686 ;; Hardware stack levels used:    1
 21687 ;; Hardware stack levels required when called:    6
 21688 ;; This function calls:
 21689 ;;		_IsLetter
 21690 ;;		___lmul
 21691 ;;		_lowercaseChar
 21692 ;; This function is called by:
 21693 ;;		_UseBluetooth
 21694 ;; This function uses a non-reentrant model
 21695 ;;
 21696                           
 21697                           	psect	text32
 21698  006158                     __ptext32:
 21699                           	opt stack 0
 21700  006158                     _GetNumberUnsigned:
 21701                           	opt stack 23
 21702                           
 21703                           ;MISC.c: 667: unsigned char i =0;
 21704                           
 21705                           ; BSR set to: 0
 21706                           ;incstack = 0
 21707  006158  0E00               	movlw	0
 21708  00615A  0100               	movlb	0	; () banked
 21709  00615C  6F79               	movwf	GetNumberUnsigned@i& (0+255),b
 21710                           
 21711                           ;MISC.c: 668: long temp =0;
 21712  00615E  0E00               	movlw	0
 21713  006160  0100               	movlb	0	; () banked
 21714  006162  6F7A               	movwf	GetNumberUnsigned@temp& (0+255),b
 21715  006164  0E00               	movlw	0
 21716  006166  6F7B               	movwf	(GetNumberUnsigned@temp+1)& (0+255),b
 21717  006168  0E00               	movlw	0
 21718  00616A  6F7C               	movwf	(GetNumberUnsigned@temp+2)& (0+255),b
 21719  00616C  0E00               	movlw	0
 21720  00616E  6F7D               	movwf	(GetNumberUnsigned@temp+3)& (0+255),b
 21721                           
 21722                           ;MISC.c: 669: unsigned char tempCommaNumber = 1;
 21723  006170  0E01               	movlw	1
 21724  006172  0100               	movlb	0	; () banked
 21725  006174  6F76               	movwf	GetNumberUnsigned@tempCommaNumber& (0+255),b
 21726                           
 21727                           ;MISC.c: 670: unsigned char count =0;
 21728  006176  0E00               	movlw	0
 21729  006178  0100               	movlb	0	; () banked
 21730  00617A  6F77               	movwf	GetNumberUnsigned@count& (0+255),b
 21731                           
 21732                           ;MISC.c: 671: unsigned char Hex = 0;
 21733  00617C  0E00               	movlw	0
 21734  00617E  0100               	movlb	0	; () banked
 21735  006180  6F78               	movwf	GetNumberUnsigned@Hex& (0+255),b
 21736                           
 21737                           ;MISC.c: 672: unsigned char tempThis;
 21738                           ;MISC.c: 674: while(*This != 0)
 21739  006182  D038               	goto	l11742
 21740  006184                     l11722:
 21741                           
 21742                           ; BSR set to: 0
 21743                           ;MISC.c: 675: {
 21744                           ;MISC.c: 676: if(*This == '0')
 21745  006184  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 21746  006188  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 21747  00618C  0E30               	movlw	48
 21748  00618E  18DE               	xorwf	postinc2,w,c
 21749  006190  A4D8               	btfss	status,2,c
 21750  006192  D02A               	goto	l11738
 21751                           
 21752                           ; BSR set to: 0
 21753                           ;MISC.c: 677: {
 21754                           ;MISC.c: 678: count++;
 21755  006194  0100               	movlb	0	; () banked
 21756  006196  2B77               	incf	GetNumberUnsigned@count& (0+255),f,b
 21757                           
 21758                           ;MISC.c: 679: This++;
 21759  006198  0100               	movlb	0	; () banked
 21760  00619A  4B6C               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 21761  00619C  2B6D               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 21762                           
 21763                           ; BSR set to: 0
 21764                           ;MISC.c: 680: if(*This == 'x' || *This == 'X')
 21765  00619E  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 21766  0061A2  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 21767  0061A6  0E78               	movlw	120
 21768  0061A8  18DE               	xorwf	postinc2,w,c
 21769  0061AA  B4D8               	btfsc	status,2,c
 21770  0061AC  D008               	goto	l11730
 21771                           
 21772                           ; BSR set to: 0
 21773  0061AE  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 21774  0061B2  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 21775  0061B6  0E58               	movlw	88
 21776  0061B8  18DE               	xorwf	postinc2,w,c
 21777  0061BA  A4D8               	btfss	status,2,c
 21778  0061BC  D015               	goto	l11738
 21779  0061BE                     l11730:
 21780                           
 21781                           ; BSR set to: 0
 21782                           ;MISC.c: 681: {
 21783                           ;MISC.c: 682: This++;
 21784  0061BE  0100               	movlb	0	; () banked
 21785  0061C0  4B6C               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 21786  0061C2  2B6D               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 21787                           
 21788                           ; BSR set to: 0
 21789                           ;MISC.c: 683: if(*This >='0' && *This <='9')
 21790  0061C4  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 21791  0061C8  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 21792  0061CC  0E2F               	movlw	47
 21793  0061CE  64DF               	cpfsgt	indf2,c
 21794  0061D0  D00B               	goto	l11738
 21795                           
 21796                           ; BSR set to: 0
 21797  0061D2  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 21798  0061D6  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 21799  0061DA  0E3A               	movlw	58
 21800  0061DC  60DF               	cpfslt	indf2,c
 21801  0061DE  D004               	goto	l11738
 21802                           
 21803                           ; BSR set to: 0
 21804                           ;MISC.c: 684: {
 21805                           ;MISC.c: 685: Hex = 1;
 21806  0061E0  0E01               	movlw	1
 21807  0061E2  0100               	movlb	0	; () banked
 21808  0061E4  6F78               	movwf	GetNumberUnsigned@Hex& (0+255),b
 21809                           
 21810                           ; BSR set to: 0
 21811                           
 21812                           ; BSR set to: 0
 21813  0061E6  D000               	goto	l11738
 21814  0061E8                     l11738:
 21815                           
 21816                           ; BSR set to: 0
 21817                           ;MISC.c: 686: }
 21818                           ;MISC.c: 687: }
 21819                           ;MISC.c: 688: }
 21820                           ;MISC.c: 689: count++;
 21821  0061E8  0100               	movlb	0	; () banked
 21822  0061EA  2B77               	incf	GetNumberUnsigned@count& (0+255),f,b
 21823                           
 21824                           ; BSR set to: 0
 21825                           ;MISC.c: 690: This++;
 21826  0061EC  0100               	movlb	0	; () banked
 21827  0061EE  4B6C               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 21828  0061F0  2B6D               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 21829  0061F2  D000               	goto	l11742
 21830  0061F4                     l11742:
 21831                           
 21832                           ; BSR set to: 0
 21833  0061F4  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 21834  0061F8  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 21835  0061FC  50DF               	movf	indf2,w,c
 21836  0061FE  A4D8               	btfss	status,2,c
 21837  006200  D7C1               	goto	l11722
 21838                           
 21839                           ; BSR set to: 0
 21840                           ;MISC.c: 691: }
 21841                           ;MISC.c: 692: This-=count;
 21842                           
 21843                           ; BSR set to: 0
 21844  006202  0100               	movlb	0	; () banked
 21845  006204  5177               	movf	GetNumberUnsigned@count& (0+255),w,b
 21846  006206  0D01               	mullw	1
 21847  006208  50F3               	movf	prodl,w,c
 21848  00620A  0100               	movlb	0	; () banked
 21849  00620C  5F6C               	subwf	GetNumberUnsigned@This& (0+255),f,b
 21850  00620E  50F4               	movf	prodh,w,c
 21851  006210  0100               	movlb	0	; () banked
 21852  006212  5B6D               	subwfb	(GetNumberUnsigned@This+1)& (0+255),f,b
 21853                           
 21854                           ; BSR set to: 0
 21855                           
 21856                           ;MISC.c: 694: SCAN:while(*This != '=' && *This != ',' && *This != 0)
 21857  006214  D001               	goto	l11748
 21858                           
 21859                           ; BSR set to: 0
 21860  006216  D03B               	goto	L13
 21861  006218                     l11748:
 21862                           
 21863                           ; BSR set to: 0
 21864  006218  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 21865  00621C  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 21866  006220  0E3D               	movlw	61
 21867  006222  18DE               	xorwf	postinc2,w,c
 21868  006224  B4D8               	btfsc	status,2,c
 21869  006226  D011               	goto	l11754
 21870                           
 21871                           ; BSR set to: 0
 21872  006228  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 21873  00622C  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 21874  006230  0E2C               	movlw	44
 21875  006232  18DE               	xorwf	postinc2,w,c
 21876  006234  B4D8               	btfsc	status,2,c
 21877  006236  D009               	goto	l11754
 21878                           
 21879                           ; BSR set to: 0
 21880  006238  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 21881  00623C  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 21882  006240  50DF               	movf	indf2,w,c
 21883  006242  B4D8               	btfsc	status,2,c
 21884  006244  D002               	goto	l11754
 21885  006246  D023               	goto	L13
 21886                           
 21887                           ; BSR set to: 0
 21888  006248  D000               	goto	l11754
 21889  00624A                     l11754:
 21890                           
 21891                           ; BSR set to: 0
 21892                           ;MISC.c: 698: }
 21893                           ;MISC.c: 699: if(*This == 0)
 21894  00624A  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 21895  00624E  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 21896  006252  50DF               	movf	indf2,w,c
 21897  006254  A4D8               	btfss	status,2,c
 21898  006256  D003               	goto	l11762
 21899                           
 21900                           ; BSR set to: 0
 21901                           ;MISC.c: 700: {
 21902                           ;MISC.c: 701: return 1;
 21903  006258  0E01               	movlw	1
 21904                           
 21905                           ; BSR set to: 0
 21906  00625A  0012               	return	
 21907                           
 21908                           ; BSR set to: 0
 21909                           ;MISC.c: 702: }
 21910  00625C  D01D               	goto	l11770
 21911  00625E                     l11762:
 21912                           
 21913                           ; BSR set to: 0
 21914                           ;MISC.c: 703: else if(*This != '=' || *This != ',')
 21915  00625E  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 21916  006262  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 21917  006266  0E3D               	movlw	61
 21918  006268  18DE               	xorwf	postinc2,w,c
 21919  00626A  A4D8               	btfss	status,2,c
 21920  00626C  D008               	goto	l11766
 21921                           
 21922                           ; BSR set to: 0
 21923  00626E  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 21924  006272  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 21925  006276  0E2C               	movlw	44
 21926  006278  18DE               	xorwf	postinc2,w,c
 21927  00627A  B4D8               	btfsc	status,2,c
 21928  00627C  D00D               	goto	l11770
 21929  00627E                     l11766:
 21930                           
 21931                           ; BSR set to: 0
 21932                           ;MISC.c: 704: {
 21933                           ;MISC.c: 705: if(tempCommaNumber < CommaNumber)
 21934  00627E  0100               	movlb	0	; () banked
 21935  006280  516E               	movf	GetNumberUnsigned@CommaNumber& (0+255),w,b
 21936  006282  0100               	movlb	0	; () banked
 21937  006284  5D76               	subwf	GetNumberUnsigned@tempCommaNumber& (0+255),w,b
 21938  006286  B0D8               	btfsc	status,0,c
 21939  006288  D007               	goto	l11770
 21940                           
 21941                           ; BSR set to: 0
 21942                           ;MISC.c: 706: {
 21943                           ;MISC.c: 707: tempCommaNumber++;
 21944  00628A  0100               	movlb	0	; () banked
 21945  00628C  2B76               	incf	GetNumberUnsigned@tempCommaNumber& (0+255),f,b
 21946  00628E                     L13:
 21947                           
 21948                           ;MISC.c: 708: This++;
 21949  00628E  0100               	movlb	0	; () banked
 21950  006290  4B6C               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 21951  006292  2B6D               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 21952                           
 21953                           ;MISC.c: 709: goto SCAN;
 21954  006294  D7C1               	goto	l11748
 21955                           
 21956                           ; BSR set to: 0
 21957                           
 21958                           ; BSR set to: 0
 21959  006296  D000               	goto	l11770
 21960  006298                     l11770:
 21961                           
 21962                           ; BSR set to: 0
 21963                           ;MISC.c: 710: }
 21964                           ;MISC.c: 711: }
 21965                           ;MISC.c: 712: if(*This == 0)
 21966  006298  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 21967  00629C  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 21968  0062A0  50DF               	movf	indf2,w,c
 21969  0062A2  A4D8               	btfss	status,2,c
 21970  0062A4  D002               	goto	l11776
 21971                           
 21972                           ; BSR set to: 0
 21973                           ;MISC.c: 713: {
 21974                           ;MISC.c: 714: return 1;
 21975  0062A6  0E01               	movlw	1
 21976                           
 21977                           ; BSR set to: 0
 21978  0062A8  0012               	return	
 21979  0062AA                     l11776:
 21980                           
 21981                           ; BSR set to: 0
 21982                           ;MISC.c: 715: }
 21983                           ;MISC.c: 716: This++;
 21984  0062AA  0100               	movlb	0	; () banked
 21985  0062AC  4B6C               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 21986  0062AE  2B6D               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 21987                           
 21988                           ; BSR set to: 0
 21989                           ;MISC.c: 717: if(*This == ' ')
 21990  0062B0  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 21991  0062B4  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 21992  0062B8  0E20               	movlw	32
 21993  0062BA  18DE               	xorwf	postinc2,w,c
 21994  0062BC  A4D8               	btfss	status,2,c
 21995  0062BE  D004               	goto	l11782
 21996                           
 21997                           ; BSR set to: 0
 21998                           ;MISC.c: 718: {
 21999                           ;MISC.c: 719: This++;
 22000  0062C0  0100               	movlb	0	; () banked
 22001  0062C2  4B6C               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 22002  0062C4  2B6D               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 22003                           
 22004                           ;MISC.c: 721: }
 22005  0062C6  D028               	goto	l11806
 22006  0062C8                     l11782:
 22007                           
 22008                           ; BSR set to: 0
 22009                           ;MISC.c: 722: else if (*This == '=' || *This == ',')
 22010  0062C8  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22011  0062CC  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22012  0062D0  0E3D               	movlw	61
 22013  0062D2  18DE               	xorwf	postinc2,w,c
 22014  0062D4  B4D8               	btfsc	status,2,c
 22015  0062D6  D008               	goto	l11786
 22016                           
 22017                           ; BSR set to: 0
 22018  0062D8  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22019  0062DC  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22020  0062E0  0E2C               	movlw	44
 22021  0062E2  18DE               	xorwf	postinc2,w,c
 22022  0062E4  A4D8               	btfss	status,2,c
 22023  0062E6  D003               	goto	l11792
 22024  0062E8                     l11786:
 22025                           
 22026                           ; BSR set to: 0
 22027                           ;MISC.c: 723: {
 22028                           ;MISC.c: 724: return 2;
 22029  0062E8  0E02               	movlw	2
 22030                           
 22031                           ; BSR set to: 0
 22032  0062EA  0012               	return	
 22033                           
 22034                           ; BSR set to: 0
 22035                           ;MISC.c: 725: }
 22036  0062EC  D015               	goto	l11806
 22037  0062EE                     l11792:
 22038                           
 22039                           ; BSR set to: 0
 22040                           ;MISC.c: 726: else if(*This == '-')
 22041  0062EE  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22042  0062F2  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22043  0062F6  0E2D               	movlw	45
 22044  0062F8  18DE               	xorwf	postinc2,w,c
 22045  0062FA  A4D8               	btfss	status,2,c
 22046  0062FC  D003               	goto	l11800
 22047                           
 22048                           ; BSR set to: 0
 22049                           ;MISC.c: 727: {
 22050                           ;MISC.c: 728: return 5;
 22051  0062FE  0E05               	movlw	5
 22052                           
 22053                           ; BSR set to: 0
 22054  006300  0012               	return	
 22055                           
 22056                           ; BSR set to: 0
 22057                           ;MISC.c: 730: }
 22058  006302  D00A               	goto	l11806
 22059  006304                     l11800:
 22060                           
 22061                           ; BSR set to: 0
 22062                           ;MISC.c: 731: else if(*This == 0)
 22063  006304  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22064  006308  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22065  00630C  50DF               	movf	indf2,w,c
 22066  00630E  A4D8               	btfss	status,2,c
 22067  006310  D003               	goto	l11806
 22068                           
 22069                           ; BSR set to: 0
 22070                           ;MISC.c: 732: {
 22071                           ;MISC.c: 733: return 3;
 22072  006312  0E03               	movlw	3
 22073                           
 22074                           ; BSR set to: 0
 22075  006314  0012               	return	
 22076                           
 22077                           ; BSR set to: 0
 22078                           
 22079                           ; BSR set to: 0
 22080                           
 22081                           ; BSR set to: 0
 22082  006316  D000               	goto	l11806
 22083  006318                     l11806:
 22084                           
 22085                           ; BSR set to: 0
 22086                           ;MISC.c: 734: }
 22087                           ;MISC.c: 735: if(Hex)
 22088  006318  0100               	movlb	0	; () banked
 22089  00631A  5178               	movf	GetNumberUnsigned@Hex& (0+255),w,b
 22090  00631C  0100               	movlb	0	; () banked
 22091  00631E  A4D8               	btfss	status,2,c
 22092  006320  D006               	goto	l11812
 22093  006322  D119               	goto	l11870
 22094                           
 22095                           ; BSR set to: 0
 22096                           ;MISC.c: 736: {
 22097                           ;MISC.c: 737: while(*This != 'x' && *This != 'X')
 22098  006324  D004               	goto	l11812
 22099  006326                     l11810:
 22100                           
 22101                           ; BSR set to: 0
 22102                           ;MISC.c: 738: {
 22103                           ;MISC.c: 740: This++;
 22104  006326  0100               	movlb	0	; () banked
 22105  006328  4B6C               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 22106  00632A  2B6D               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 22107  00632C  D000               	goto	l11812
 22108  00632E                     l11812:
 22109                           
 22110                           ; BSR set to: 0
 22111  00632E  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22112  006332  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22113  006336  0E78               	movlw	120
 22114  006338  18DE               	xorwf	postinc2,w,c
 22115  00633A  B4D8               	btfsc	status,2,c
 22116  00633C  D108               	goto	l11868
 22117                           
 22118                           ; BSR set to: 0
 22119  00633E  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22120  006342  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22121  006346  0E58               	movlw	88
 22122  006348  18DE               	xorwf	postinc2,w,c
 22123  00634A  B4D8               	btfsc	status,2,c
 22124  00634C  D100               	goto	l11868
 22125  00634E  D7EB               	goto	l11810
 22126                           
 22127                           ; BSR set to: 0
 22128  006350  D0FE               	goto	l11868
 22129                           
 22130                           ; BSR set to: 0
 22131  006352  D0FD               	goto	l11868
 22132                           
 22133                           ; BSR set to: 0
 22134                           ;MISC.c: 743: }
 22135                           ;MISC.c: 744: while(*This != 0 && *This != ' ' && *This != ',' && *This != '=')
 22136                           
 22137                           ; BSR set to: 0
 22138                           ;MISC.c: 741: }
 22139                           ;MISC.c: 742: This++;
 22140  006354  D100               	goto	l11870
 22141  006356                     l11818:
 22142                           
 22143                           ; BSR set to: 0
 22144                           ;MISC.c: 745: {
 22145                           ;MISC.c: 746: if(!Hex)
 22146  006356  0100               	movlb	0	; () banked
 22147  006358  5178               	movf	GetNumberUnsigned@Hex& (0+255),w,b
 22148  00635A  0100               	movlb	0	; () banked
 22149  00635C  A4D8               	btfss	status,2,c
 22150  00635E  D05B               	goto	l11836
 22151                           
 22152                           ; BSR set to: 0
 22153                           ;MISC.c: 747: {
 22154                           ;MISC.c: 748: if(*This >=48 && *This <= 57)
 22155  006360  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22156  006364  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22157  006368  0E2F               	movlw	47
 22158  00636A  64DF               	cpfsgt	indf2,c
 22159  00636C  D0F0               	goto	l11868
 22160                           
 22161                           ; BSR set to: 0
 22162  00636E  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22163  006372  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22164  006376  0E3A               	movlw	58
 22165  006378  60DF               	cpfslt	indf2,c
 22166  00637A  D0E9               	goto	l11868
 22167                           
 22168                           ; BSR set to: 0
 22169                           ;MISC.c: 749: {
 22170                           ;MISC.c: 750: temp = temp * 10;
 22171  00637C  C07A  F060         	movff	GetNumberUnsigned@temp,___lmul@multiplier
 22172  006380  C07B  F061         	movff	GetNumberUnsigned@temp+1,___lmul@multiplier+1
 22173  006384  C07C  F062         	movff	GetNumberUnsigned@temp+2,___lmul@multiplier+2
 22174  006388  C07D  F063         	movff	GetNumberUnsigned@temp+3,___lmul@multiplier+3
 22175  00638C  0E0A               	movlw	10
 22176  00638E  0100               	movlb	0	; () banked
 22177  006390  6F64               	movwf	___lmul@multiplicand& (0+255),b
 22178  006392  0E00               	movlw	0
 22179  006394  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22180  006396  0E00               	movlw	0
 22181  006398  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22182  00639A  0E00               	movlw	0
 22183  00639C  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22184  00639E  ECA2  F04F         	call	___lmul	;wreg free
 22185  0063A2  C060  F07A         	movff	?___lmul,GetNumberUnsigned@temp
 22186  0063A6  C061  F07B         	movff	?___lmul+1,GetNumberUnsigned@temp+1
 22187  0063AA  C062  F07C         	movff	?___lmul+2,GetNumberUnsigned@temp+2
 22188  0063AE  C063  F07D         	movff	?___lmul+3,GetNumberUnsigned@temp+3
 22189                           
 22190                           ;MISC.c: 751: temp += *This - 48;
 22191  0063B2  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22192  0063B6  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22193  0063BA  50DF               	movf	indf2,w,c
 22194  0063BC  0100               	movlb	0	; () banked
 22195  0063BE  6F71               	movwf	??_GetNumberUnsigned& (0+255),b
 22196  0063C0  0ED0               	movlw	208
 22197  0063C2  0100               	movlb	0	; () banked
 22198  0063C4  2571               	addwf	??_GetNumberUnsigned& (0+255),w,b
 22199  0063C6  0100               	movlb	0	; () banked
 22200  0063C8  6F72               	movwf	(??_GetNumberUnsigned+1)& (0+255),b
 22201  0063CA  0100               	movlb	0	; () banked
 22202  0063CC  6B73               	clrf	(??_GetNumberUnsigned+2)& (0+255),b
 22203  0063CE  0EFF               	movlw	255
 22204  0063D0  2373               	addwfc	(??_GetNumberUnsigned+2)& (0+255),f,b
 22205  0063D2  0100               	movlb	0	; () banked
 22206  0063D4  6B74               	clrf	(??_GetNumberUnsigned+3)& (0+255),b
 22207  0063D6  0100               	movlb	0	; () banked
 22208  0063D8  BF73               	btfsc	(??_GetNumberUnsigned+2)& (0+255),7,b
 22209  0063DA  0774               	decf	(??_GetNumberUnsigned+3)& (0+255),f,b
 22210  0063DC  0100               	movlb	0	; () banked
 22211  0063DE  5174               	movf	(??_GetNumberUnsigned+3)& (0+255),w,b
 22212  0063E0  0100               	movlb	0	; () banked
 22213  0063E2  6F75               	movwf	(??_GetNumberUnsigned+4)& (0+255),b
 22214  0063E4  0100               	movlb	0	; () banked
 22215  0063E6  5172               	movf	(??_GetNumberUnsigned+1)& (0+255),w,b
 22216  0063E8  0100               	movlb	0	; () banked
 22217  0063EA  277A               	addwf	GetNumberUnsigned@temp& (0+255),f,b
 22218  0063EC  0100               	movlb	0	; () banked
 22219  0063EE  5173               	movf	(??_GetNumberUnsigned+2)& (0+255),w,b
 22220  0063F0  0100               	movlb	0	; () banked
 22221  0063F2  237B               	addwfc	(GetNumberUnsigned@temp+1)& (0+255),f,b
 22222  0063F4  0100               	movlb	0	; () banked
 22223  0063F6  5174               	movf	(??_GetNumberUnsigned+3)& (0+255),w,b
 22224  0063F8  0100               	movlb	0	; () banked
 22225  0063FA  237C               	addwfc	(GetNumberUnsigned@temp+2)& (0+255),f,b
 22226  0063FC  0100               	movlb	0	; () banked
 22227  0063FE  5175               	movf	(??_GetNumberUnsigned+4)& (0+255),w,b
 22228  006400  0100               	movlb	0	; () banked
 22229  006402  237D               	addwfc	(GetNumberUnsigned@temp+3)& (0+255),f,b
 22230                           
 22231                           ; BSR set to: 0
 22232                           ;MISC.c: 752: i++;
 22233  006404  0100               	movlb	0	; () banked
 22234  006406  2B79               	incf	GetNumberUnsigned@i& (0+255),f,b
 22235  006408                     l11830:
 22236                           
 22237                           ; BSR set to: 0
 22238                           ;MISC.c: 753: if(i>32)
 22239  006408  0E20               	movlw	32
 22240  00640A  0100               	movlb	0	; () banked
 22241  00640C  6579               	cpfsgt	GetNumberUnsigned@i& (0+255),b
 22242  00640E  D09F               	goto	l11868
 22243                           
 22244                           ; BSR set to: 0
 22245                           ;MISC.c: 754: {
 22246                           ;MISC.c: 755: return 4;
 22247  006410  0E04               	movlw	4
 22248                           
 22249                           ; BSR set to: 0
 22250  006412  0012               	return	
 22251                           
 22252                           ; BSR set to: 0
 22253                           ;MISC.c: 756: }
 22254                           ;MISC.c: 757: }
 22255                           ;MISC.c: 758: }
 22256                           
 22257                           ; BSR set to: 0
 22258  006414  D09C               	goto	l11868
 22259  006416                     l11836:
 22260                           
 22261                           ; BSR set to: 0
 22262                           ;MISC.c: 759: else
 22263                           ;MISC.c: 760: {
 22264                           ;MISC.c: 761: if((*This >=48 && *This <= 57) || (*This >=65 && *This <= 70) || (*This >=
      +                           97 && *This <= 102))
 22265  006416  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22266  00641A  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22267  00641E  0E2F               	movlw	47
 22268  006420  64DF               	cpfsgt	indf2,c
 22269  006422  D008               	goto	l11840
 22270                           
 22271                           ; BSR set to: 0
 22272  006424  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22273  006428  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22274  00642C  0E39               	movlw	57
 22275  00642E  64DF               	cpfsgt	indf2,c
 22276  006430  D01F               	goto	l11848
 22277  006432  D000               	goto	l11840
 22278  006434                     l11840:
 22279                           
 22280                           ; BSR set to: 0
 22281  006434  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22282  006438  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22283  00643C  0E40               	movlw	64
 22284  00643E  64DF               	cpfsgt	indf2,c
 22285  006440  D008               	goto	l11844
 22286                           
 22287                           ; BSR set to: 0
 22288  006442  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22289  006446  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22290  00644A  0E46               	movlw	70
 22291  00644C  64DF               	cpfsgt	indf2,c
 22292  00644E  D010               	goto	l11848
 22293  006450  D000               	goto	l11844
 22294  006452                     l11844:
 22295                           
 22296                           ; BSR set to: 0
 22297  006452  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22298  006456  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22299  00645A  0E60               	movlw	96
 22300  00645C  64DF               	cpfsgt	indf2,c
 22301  00645E  D077               	goto	l11868
 22302                           
 22303                           ; BSR set to: 0
 22304  006460  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22305  006464  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22306  006468  0E67               	movlw	103
 22307  00646A  60DF               	cpfslt	indf2,c
 22308  00646C  D070               	goto	l11868
 22309  00646E  D000               	goto	l11848
 22310  006470                     l11848:
 22311                           
 22312                           ; BSR set to: 0
 22313                           ;MISC.c: 762: {
 22314                           ;MISC.c: 763: temp <<= 4;
 22315  006470  0100               	movlb	0	; () banked
 22316  006472  0E04               	movlw	4
 22317  006474                     u13235:
 22318  006474  90D8               	bcf	status,0,c
 22319  006476  377A               	rlcf	GetNumberUnsigned@temp& (0+255),f,b
 22320  006478  377B               	rlcf	(GetNumberUnsigned@temp+1)& (0+255),f,b
 22321  00647A  377C               	rlcf	(GetNumberUnsigned@temp+2)& (0+255),f,b
 22322  00647C  377D               	rlcf	(GetNumberUnsigned@temp+3)& (0+255),f,b
 22323  00647E  2EE8               	decfsz	wreg,f,c
 22324  006480  D7F9               	goto	u13235
 22325                           
 22326                           ; BSR set to: 0
 22327                           ;MISC.c: 764: tempThis = *This;
 22328  006482  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22329  006486  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22330  00648A  50DF               	movf	indf2,w,c
 22331  00648C  0100               	movlb	0	; () banked
 22332  00648E  6F7E               	movwf	GetNumberUnsigned@tempThis& (0+255),b
 22333                           
 22334                           ; BSR set to: 0
 22335                           ;MISC.c: 765: if(IsLetter(tempThis))
 22336  006490  0100               	movlb	0	; () banked
 22337  006492  517E               	movf	GetNumberUnsigned@tempThis& (0+255),w,b
 22338  006494  EC29  F053         	call	_IsLetter
 22339  006498  0900               	iorlw	0
 22340  00649A  B4D8               	btfsc	status,2,c
 22341  00649C  D029               	goto	l11858
 22342                           
 22343                           ;MISC.c: 766: {
 22344                           ;MISC.c: 767: lowercaseChar(&tempThis);
 22345  00649E  0E7E               	movlw	low GetNumberUnsigned@tempThis
 22346  0064A0  0100               	movlb	0	; () banked
 22347  0064A2  6F60               	movwf	lowercaseChar@Input& (0+255),b
 22348  0064A4  0E00               	movlw	high GetNumberUnsigned@tempThis
 22349  0064A6  0100               	movlb	0	; () banked
 22350  0064A8  6F61               	movwf	(lowercaseChar@Input+1)& (0+255),b
 22351  0064AA  ECB8  F053         	call	_lowercaseChar	;wreg free
 22352                           
 22353                           ;MISC.c: 768: temp += (tempThis - 87);
 22354  0064AE  0EA9               	movlw	169
 22355  0064B0  0100               	movlb	0	; () banked
 22356  0064B2  257E               	addwf	GetNumberUnsigned@tempThis& (0+255),w,b
 22357  0064B4  0100               	movlb	0	; () banked
 22358  0064B6  6F71               	movwf	??_GetNumberUnsigned& (0+255),b
 22359  0064B8  0100               	movlb	0	; () banked
 22360  0064BA  6B72               	clrf	(??_GetNumberUnsigned+1)& (0+255),b
 22361  0064BC  0EFF               	movlw	255
 22362  0064BE  2372               	addwfc	(??_GetNumberUnsigned+1)& (0+255),f,b
 22363  0064C0  0100               	movlb	0	; () banked
 22364  0064C2  6B73               	clrf	(??_GetNumberUnsigned+2)& (0+255),b
 22365  0064C4  0100               	movlb	0	; () banked
 22366  0064C6  BF72               	btfsc	(??_GetNumberUnsigned+1)& (0+255),7,b
 22367  0064C8  0773               	decf	(??_GetNumberUnsigned+2)& (0+255),f,b
 22368  0064CA  0100               	movlb	0	; () banked
 22369  0064CC  5173               	movf	(??_GetNumberUnsigned+2)& (0+255),w,b
 22370  0064CE  0100               	movlb	0	; () banked
 22371  0064D0  6F74               	movwf	(??_GetNumberUnsigned+3)& (0+255),b
 22372  0064D2  0100               	movlb	0	; () banked
 22373  0064D4  5171               	movf	??_GetNumberUnsigned& (0+255),w,b
 22374  0064D6  0100               	movlb	0	; () banked
 22375  0064D8  277A               	addwf	GetNumberUnsigned@temp& (0+255),f,b
 22376  0064DA  0100               	movlb	0	; () banked
 22377  0064DC  5172               	movf	(??_GetNumberUnsigned+1)& (0+255),w,b
 22378  0064DE  0100               	movlb	0	; () banked
 22379  0064E0  237B               	addwfc	(GetNumberUnsigned@temp+1)& (0+255),f,b
 22380  0064E2  0100               	movlb	0	; () banked
 22381  0064E4  5173               	movf	(??_GetNumberUnsigned+2)& (0+255),w,b
 22382  0064E6  0100               	movlb	0	; () banked
 22383  0064E8  237C               	addwfc	(GetNumberUnsigned@temp+2)& (0+255),f,b
 22384  0064EA  0100               	movlb	0	; () banked
 22385  0064EC  5174               	movf	(??_GetNumberUnsigned+3)& (0+255),w,b
 22386  0064EE  D027               	goto	L14
 22387  0064F0                     l11858:
 22388                           
 22389                           ;MISC.c: 770: else
 22390                           ;MISC.c: 771: {
 22391                           ;MISC.c: 772: temp += (*This - 48);
 22392  0064F0  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22393  0064F4  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22394  0064F8  50DF               	movf	indf2,w,c
 22395  0064FA  0100               	movlb	0	; () banked
 22396  0064FC  6F71               	movwf	??_GetNumberUnsigned& (0+255),b
 22397  0064FE  0ED0               	movlw	208
 22398  006500  0100               	movlb	0	; () banked
 22399  006502  2571               	addwf	??_GetNumberUnsigned& (0+255),w,b
 22400  006504  0100               	movlb	0	; () banked
 22401  006506  6F72               	movwf	(??_GetNumberUnsigned+1)& (0+255),b
 22402  006508  0100               	movlb	0	; () banked
 22403  00650A  6B73               	clrf	(??_GetNumberUnsigned+2)& (0+255),b
 22404  00650C  0EFF               	movlw	255
 22405  00650E  2373               	addwfc	(??_GetNumberUnsigned+2)& (0+255),f,b
 22406  006510  0100               	movlb	0	; () banked
 22407  006512  6B74               	clrf	(??_GetNumberUnsigned+3)& (0+255),b
 22408  006514  0100               	movlb	0	; () banked
 22409  006516  BF73               	btfsc	(??_GetNumberUnsigned+2)& (0+255),7,b
 22410  006518  0774               	decf	(??_GetNumberUnsigned+3)& (0+255),f,b
 22411  00651A  0100               	movlb	0	; () banked
 22412  00651C  5174               	movf	(??_GetNumberUnsigned+3)& (0+255),w,b
 22413  00651E  0100               	movlb	0	; () banked
 22414  006520  6F75               	movwf	(??_GetNumberUnsigned+4)& (0+255),b
 22415  006522  0100               	movlb	0	; () banked
 22416  006524  5172               	movf	(??_GetNumberUnsigned+1)& (0+255),w,b
 22417  006526  0100               	movlb	0	; () banked
 22418  006528  277A               	addwf	GetNumberUnsigned@temp& (0+255),f,b
 22419  00652A  0100               	movlb	0	; () banked
 22420  00652C  5173               	movf	(??_GetNumberUnsigned+2)& (0+255),w,b
 22421  00652E  0100               	movlb	0	; () banked
 22422  006530  237B               	addwfc	(GetNumberUnsigned@temp+1)& (0+255),f,b
 22423  006532  0100               	movlb	0	; () banked
 22424  006534  5174               	movf	(??_GetNumberUnsigned+3)& (0+255),w,b
 22425  006536  0100               	movlb	0	; () banked
 22426  006538  237C               	addwfc	(GetNumberUnsigned@temp+2)& (0+255),f,b
 22427  00653A  0100               	movlb	0	; () banked
 22428  00653C  5175               	movf	(??_GetNumberUnsigned+4)& (0+255),w,b
 22429  00653E                     L14:
 22430  00653E  0100               	movlb	0	; () banked
 22431  006540  237D               	addwfc	(GetNumberUnsigned@temp+3)& (0+255),f,b
 22432  006542  D000               	goto	l11860
 22433  006544                     l11860:
 22434                           
 22435                           ; BSR set to: 0
 22436                           ;MISC.c: 773: }
 22437                           ;MISC.c: 774: i++;
 22438  006544  0100               	movlb	0	; () banked
 22439  006546  2B79               	incf	GetNumberUnsigned@i& (0+255),f,b
 22440  006548  D75F               	goto	l11830
 22441                           
 22442                           ; BSR set to: 0
 22443                           
 22444                           ; BSR set to: 0
 22445                           ;MISC.c: 776: {
 22446                           ;MISC.c: 777: return 4;
 22447                           
 22448                           ; BSR set to: 0
 22449                           ;MISC.c: 775: if(i>32)
 22450  00654A  0012               	return	
 22451                           
 22452                           ; BSR set to: 0
 22453                           
 22454                           ; BSR set to: 0
 22455  00654C  D000               	goto	l11868
 22456  00654E                     l11868:
 22457                           
 22458                           ; BSR set to: 0
 22459                           ;MISC.c: 778: }
 22460                           ;MISC.c: 779: }
 22461                           ;MISC.c: 780: }
 22462                           ;MISC.c: 781: This++;
 22463  00654E  0100               	movlb	0	; () banked
 22464  006550  4B6C               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 22465  006552  2B6D               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 22466  006554  D000               	goto	l11870
 22467  006556                     l11870:
 22468                           
 22469                           ; BSR set to: 0
 22470  006556  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22471  00655A  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22472  00655E  50DF               	movf	indf2,w,c
 22473  006560  B4D8               	btfsc	status,2,c
 22474  006562  D01A               	goto	l11878
 22475                           
 22476                           ; BSR set to: 0
 22477  006564  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22478  006568  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22479  00656C  0E20               	movlw	32
 22480  00656E  18DE               	xorwf	postinc2,w,c
 22481  006570  B4D8               	btfsc	status,2,c
 22482  006572  D012               	goto	l11878
 22483                           
 22484                           ; BSR set to: 0
 22485  006574  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22486  006578  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22487  00657C  0E2C               	movlw	44
 22488  00657E  18DE               	xorwf	postinc2,w,c
 22489  006580  B4D8               	btfsc	status,2,c
 22490  006582  D00A               	goto	l11878
 22491                           
 22492                           ; BSR set to: 0
 22493  006584  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22494  006588  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22495  00658C  0E3D               	movlw	61
 22496  00658E  18DE               	xorwf	postinc2,w,c
 22497  006590  B4D8               	btfsc	status,2,c
 22498  006592  D002               	goto	l11878
 22499  006594  D6E0               	goto	l11818
 22500                           
 22501                           ; BSR set to: 0
 22502  006596  D000               	goto	l11878
 22503  006598                     l11878:
 22504                           
 22505                           ; BSR set to: 0
 22506                           ;MISC.c: 782: }
 22507                           ;MISC.c: 783: *result = temp;
 22508  006598  C06F  FFD9         	movff	GetNumberUnsigned@result,fsr2l
 22509  00659C  C070  FFDA         	movff	GetNumberUnsigned@result+1,fsr2h
 22510  0065A0  C07A  FFDE         	movff	GetNumberUnsigned@temp,postinc2
 22511  0065A4  C07B  FFDE         	movff	GetNumberUnsigned@temp+1,postinc2
 22512  0065A8  C07C  FFDE         	movff	GetNumberUnsigned@temp+2,postinc2
 22513  0065AC  C07D  FFDE         	movff	GetNumberUnsigned@temp+3,postinc2
 22514                           
 22515                           ; BSR set to: 0
 22516                           ;MISC.c: 784: return 0;
 22517  0065B0  0E00               	movlw	0
 22518  0065B2  0012               	return	
 22519                           
 22520                           ; BSR set to: 0
 22521                           
 22522                           ; BSR set to: 0
 22523  0065B4  0012               	return		;funcret
 22524  0065B6                     __end_of_GetNumberUnsigned:
 22525                           	opt stack 0
 22526                           tblptru	equ	0xFF8
 22527                           tblptrh	equ	0xFF7
 22528                           tblptrl	equ	0xFF6
 22529                           tablat	equ	0xFF5
 22530                           prodh	equ	0xFF4
 22531                           prodl	equ	0xFF3
 22532                           intcon	equ	0xFF2
 22533                           indf0	equ	0xFEF
 22534                           postinc0	equ	0xFEE
 22535                           plusw0	equ	0xFEB
 22536                           fsr0h	equ	0xFEA
 22537                           fsr0l	equ	0xFE9
 22538                           wreg	equ	0xFE8
 22539                           indf1	equ	0xFE7
 22540                           postdec1	equ	0xFE5
 22541                           fsr1h	equ	0xFE2
 22542                           fsr1l	equ	0xFE1
 22543                           indf2	equ	0xFDF
 22544                           postinc2	equ	0xFDE
 22545                           postdec2	equ	0xFDD
 22546                           plusw2	equ	0xFDB
 22547                           fsr2h	equ	0xFDA
 22548                           fsr2l	equ	0xFD9
 22549                           status	equ	0xFD8
 22550                           
 22551 ;; *************** function _GetNumber *****************
 22552 ;; Defined at:
 22553 ;;		line 531 in file "MISC.c"
 22554 ;; Parameters:    Size  Location     Type
 22555 ;;  This            2   12[BANK0 ] PTR unsigned char 
 22556 ;;		 -> ReceivedString(100), 
 22557 ;;  CommaNumber     1   14[BANK0 ] unsigned char 
 22558 ;;  result          2   15[BANK0 ] PTR long 
 22559 ;;		 -> UseBluetooth@SerialNumberTEMP(4), 
 22560 ;; Auto vars:     Size  Location     Type
 22561 ;;  temp            4   28[BANK0 ] long 
 22562 ;;  tempThis        1   27[BANK0 ] unsigned char 
 22563 ;;  i               1   26[BANK0 ] unsigned char 
 22564 ;;  Hex             1   25[BANK0 ] unsigned char 
 22565 ;;  count           1   24[BANK0 ] unsigned char 
 22566 ;;  negative        1   23[BANK0 ] unsigned char 
 22567 ;;  tempCommaNum    1   22[BANK0 ] unsigned char 
 22568 ;; Return value:  Size  Location     Type
 22569 ;;                  1    wreg      unsigned char 
 22570 ;; Registers used:
 22571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22572 ;; Tracked objects:
 22573 ;;		On entry : 0/0
 22574 ;;		On exit  : 0/0
 22575 ;;		Unchanged: 0/0
 22576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22577 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22578 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22579 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22580 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22581 ;;Total ram usage:       20 bytes
 22582 ;; Hardware stack levels used:    1
 22583 ;; Hardware stack levels required when called:    6
 22584 ;; This function calls:
 22585 ;;		_IsLetter
 22586 ;;		___lmul
 22587 ;;		_lowercaseChar
 22588 ;; This function is called by:
 22589 ;;		_UseBluetooth
 22590 ;; This function uses a non-reentrant model
 22591 ;;
 22592                           
 22593                           	psect	text33
 22594  005CD2                     __ptext33:
 22595                           	opt stack 0
 22596  005CD2                     _GetNumber:
 22597                           	opt stack 23
 22598                           
 22599                           ;MISC.c: 533: unsigned char i =0;
 22600                           
 22601                           ; BSR set to: 0
 22602                           ;incstack = 0
 22603  005CD2  0E00               	movlw	0
 22604  005CD4  0100               	movlb	0	; () banked
 22605  005CD6  6F7A               	movwf	GetNumber@i& (0+255),b
 22606                           
 22607                           ;MISC.c: 534: long temp =0;
 22608  005CD8  0E00               	movlw	0
 22609  005CDA  0100               	movlb	0	; () banked
 22610  005CDC  6F7C               	movwf	GetNumber@temp& (0+255),b
 22611  005CDE  0E00               	movlw	0
 22612  005CE0  6F7D               	movwf	(GetNumber@temp+1)& (0+255),b
 22613  005CE2  0E00               	movlw	0
 22614  005CE4  6F7E               	movwf	(GetNumber@temp+2)& (0+255),b
 22615  005CE6  0E00               	movlw	0
 22616  005CE8  6F7F               	movwf	(GetNumber@temp+3)& (0+255),b
 22617                           
 22618                           ;MISC.c: 535: unsigned char negative =0;
 22619  005CEA  0E00               	movlw	0
 22620  005CEC  0100               	movlb	0	; () banked
 22621  005CEE  6F77               	movwf	GetNumber@negative& (0+255),b
 22622                           
 22623                           ;MISC.c: 536: unsigned char tempCommaNumber = 1;
 22624  005CF0  0E01               	movlw	1
 22625  005CF2  0100               	movlb	0	; () banked
 22626  005CF4  6F76               	movwf	GetNumber@tempCommaNumber& (0+255),b
 22627                           
 22628                           ;MISC.c: 537: unsigned char count =0;
 22629  005CF6  0E00               	movlw	0
 22630  005CF8  0100               	movlb	0	; () banked
 22631  005CFA  6F78               	movwf	GetNumber@count& (0+255),b
 22632                           
 22633                           ;MISC.c: 538: unsigned char Hex = 0;
 22634  005CFC  0E00               	movlw	0
 22635  005CFE  0100               	movlb	0	; () banked
 22636  005D00  6F79               	movwf	GetNumber@Hex& (0+255),b
 22637                           
 22638                           ;MISC.c: 539: unsigned char tempThis;
 22639                           ;MISC.c: 541: while(*This != 0)
 22640  005D02  D038               	goto	l11576
 22641  005D04                     l11556:
 22642                           
 22643                           ; BSR set to: 0
 22644                           ;MISC.c: 542: {
 22645                           ;MISC.c: 543: if(*This == '0')
 22646  005D04  C06C  FFD9         	movff	GetNumber@This,fsr2l
 22647  005D08  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 22648  005D0C  0E30               	movlw	48
 22649  005D0E  18DE               	xorwf	postinc2,w,c
 22650  005D10  A4D8               	btfss	status,2,c
 22651  005D12  D02A               	goto	l11572
 22652                           
 22653                           ; BSR set to: 0
 22654                           ;MISC.c: 544: {
 22655                           ;MISC.c: 545: count++;
 22656  005D14  0100               	movlb	0	; () banked
 22657  005D16  2B78               	incf	GetNumber@count& (0+255),f,b
 22658                           
 22659                           ;MISC.c: 546: This++;
 22660  005D18  0100               	movlb	0	; () banked
 22661  005D1A  4B6C               	infsnz	GetNumber@This& (0+255),f,b
 22662  005D1C  2B6D               	incf	(GetNumber@This+1)& (0+255),f,b
 22663                           
 22664                           ; BSR set to: 0
 22665                           ;MISC.c: 547: if(*This == 'x' || *This == 'X')
 22666  005D1E  C06C  FFD9         	movff	GetNumber@This,fsr2l
 22667  005D22  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 22668  005D26  0E78               	movlw	120
 22669  005D28  18DE               	xorwf	postinc2,w,c
 22670  005D2A  B4D8               	btfsc	status,2,c
 22671  005D2C  D008               	goto	l11564
 22672                           
 22673                           ; BSR set to: 0
 22674  005D2E  C06C  FFD9         	movff	GetNumber@This,fsr2l
 22675  005D32  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 22676  005D36  0E58               	movlw	88
 22677  005D38  18DE               	xorwf	postinc2,w,c
 22678  005D3A  A4D8               	btfss	status,2,c
 22679  005D3C  D015               	goto	l11572
 22680  005D3E                     l11564:
 22681                           
 22682                           ; BSR set to: 0
 22683                           ;MISC.c: 548: {
 22684                           ;MISC.c: 549: This++;
 22685  005D3E  0100               	movlb	0	; () banked
 22686  005D40  4B6C               	infsnz	GetNumber@This& (0+255),f,b
 22687  005D42  2B6D               	incf	(GetNumber@This+1)& (0+255),f,b
 22688                           
 22689                           ; BSR set to: 0
 22690                           ;MISC.c: 550: if(*This >='0' && *This <='9')
 22691  005D44  C06C  FFD9         	movff	GetNumber@This,fsr2l
 22692  005D48  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 22693  005D4C  0E2F               	movlw	47
 22694  005D4E  64DF               	cpfsgt	indf2,c
 22695  005D50  D00B               	goto	l11572
 22696                           
 22697                           ; BSR set to: 0
 22698  005D52  C06C  FFD9         	movff	GetNumber@This,fsr2l
 22699  005D56  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 22700  005D5A  0E3A               	movlw	58
 22701  005D5C  60DF               	cpfslt	indf2,c
 22702  005D5E  D004               	goto	l11572
 22703                           
 22704                           ; BSR set to: 0
 22705                           ;MISC.c: 551: {
 22706                           ;MISC.c: 552: Hex = 1;
 22707  005D60  0E01               	movlw	1
 22708  005D62  0100               	movlb	0	; () banked
 22709  005D64  6F79               	movwf	GetNumber@Hex& (0+255),b
 22710                           
 22711                           ; BSR set to: 0
 22712                           
 22713                           ; BSR set to: 0
 22714  005D66  D000               	goto	l11572
 22715  005D68                     l11572:
 22716                           
 22717                           ; BSR set to: 0
 22718                           ;MISC.c: 553: }
 22719                           ;MISC.c: 554: }
 22720                           ;MISC.c: 555: }
 22721                           ;MISC.c: 556: count++;
 22722  005D68  0100               	movlb	0	; () banked
 22723  005D6A  2B78               	incf	GetNumber@count& (0+255),f,b
 22724                           
 22725                           ; BSR set to: 0
 22726                           ;MISC.c: 557: This++;
 22727  005D6C  0100               	movlb	0	; () banked
 22728  005D6E  4B6C               	infsnz	GetNumber@This& (0+255),f,b
 22729  005D70  2B6D               	incf	(GetNumber@This+1)& (0+255),f,b
 22730  005D72  D000               	goto	l11576
 22731  005D74                     l11576:
 22732                           
 22733                           ; BSR set to: 0
 22734  005D74  C06C  FFD9         	movff	GetNumber@This,fsr2l
 22735  005D78  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 22736  005D7C  50DF               	movf	indf2,w,c
 22737  005D7E  A4D8               	btfss	status,2,c
 22738  005D80  D7C1               	goto	l11556
 22739                           
 22740                           ; BSR set to: 0
 22741                           ;MISC.c: 558: }
 22742                           ;MISC.c: 559: This-=count;
 22743                           
 22744                           ; BSR set to: 0
 22745  005D82  0100               	movlb	0	; () banked
 22746  005D84  5178               	movf	GetNumber@count& (0+255),w,b
 22747  005D86  0D01               	mullw	1
 22748  005D88  50F3               	movf	prodl,w,c
 22749  005D8A  0100               	movlb	0	; () banked
 22750  005D8C  5F6C               	subwf	GetNumber@This& (0+255),f,b
 22751  005D8E  50F4               	movf	prodh,w,c
 22752  005D90  0100               	movlb	0	; () banked
 22753  005D92  5B6D               	subwfb	(GetNumber@This+1)& (0+255),f,b
 22754                           
 22755                           ; BSR set to: 0
 22756                           
 22757                           ;MISC.c: 561: SCAN:while(*This != '=' && *This != ',' && *This != 0)
 22758  005D94  D001               	goto	l11582
 22759                           
 22760                           ; BSR set to: 0
 22761  005D96  D03B               	goto	L15
 22762  005D98                     l11582:
 22763                           
 22764                           ; BSR set to: 0
 22765  005D98  C06C  FFD9         	movff	GetNumber@This,fsr2l
 22766  005D9C  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 22767  005DA0  0E3D               	movlw	61
 22768  005DA2  18DE               	xorwf	postinc2,w,c
 22769  005DA4  B4D8               	btfsc	status,2,c
 22770  005DA6  D011               	goto	l11588
 22771                           
 22772                           ; BSR set to: 0
 22773  005DA8  C06C  FFD9         	movff	GetNumber@This,fsr2l
 22774  005DAC  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 22775  005DB0  0E2C               	movlw	44
 22776  005DB2  18DE               	xorwf	postinc2,w,c
 22777  005DB4  B4D8               	btfsc	status,2,c
 22778  005DB6  D009               	goto	l11588
 22779                           
 22780                           ; BSR set to: 0
 22781  005DB8  C06C  FFD9         	movff	GetNumber@This,fsr2l
 22782  005DBC  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 22783  005DC0  50DF               	movf	indf2,w,c
 22784  005DC2  B4D8               	btfsc	status,2,c
 22785  005DC4  D002               	goto	l11588
 22786  005DC6  D023               	goto	L15
 22787                           
 22788                           ; BSR set to: 0
 22789  005DC8  D000               	goto	l11588
 22790  005DCA                     l11588:
 22791                           
 22792                           ; BSR set to: 0
 22793                           ;MISC.c: 565: }
 22794                           ;MISC.c: 566: if(*This == 0)
 22795  005DCA  C06C  FFD9         	movff	GetNumber@This,fsr2l
 22796  005DCE  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 22797  005DD2  50DF               	movf	indf2,w,c
 22798  005DD4  A4D8               	btfss	status,2,c
 22799  005DD6  D003               	goto	l11596
 22800                           
 22801                           ; BSR set to: 0
 22802                           ;MISC.c: 567: {
 22803                           ;MISC.c: 568: return 1;
 22804  005DD8  0E01               	movlw	1
 22805                           
 22806                           ; BSR set to: 0
 22807  005DDA  0012               	return	
 22808                           
 22809                           ; BSR set to: 0
 22810                           ;MISC.c: 569: }
 22811  005DDC  D01D               	goto	l11604
 22812  005DDE                     l11596:
 22813                           
 22814                           ; BSR set to: 0
 22815                           ;MISC.c: 570: else if(*This != '=' || *This != ',')
 22816  005DDE  C06C  FFD9         	movff	GetNumber@This,fsr2l
 22817  005DE2  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 22818  005DE6  0E3D               	movlw	61
 22819  005DE8  18DE               	xorwf	postinc2,w,c
 22820  005DEA  A4D8               	btfss	status,2,c
 22821  005DEC  D008               	goto	l11600
 22822                           
 22823                           ; BSR set to: 0
 22824  005DEE  C06C  FFD9         	movff	GetNumber@This,fsr2l
 22825  005DF2  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 22826  005DF6  0E2C               	movlw	44
 22827  005DF8  18DE               	xorwf	postinc2,w,c
 22828  005DFA  B4D8               	btfsc	status,2,c
 22829  005DFC  D00D               	goto	l11604
 22830  005DFE                     l11600:
 22831                           
 22832                           ; BSR set to: 0
 22833                           ;MISC.c: 571: {
 22834                           ;MISC.c: 572: if(tempCommaNumber < CommaNumber)
 22835  005DFE  0100               	movlb	0	; () banked
 22836  005E00  516E               	movf	GetNumber@CommaNumber& (0+255),w,b
 22837  005E02  0100               	movlb	0	; () banked
 22838  005E04  5D76               	subwf	GetNumber@tempCommaNumber& (0+255),w,b
 22839  005E06  B0D8               	btfsc	status,0,c
 22840  005E08  D007               	goto	l11604
 22841                           
 22842                           ; BSR set to: 0
 22843                           ;MISC.c: 573: {
 22844                           ;MISC.c: 574: tempCommaNumber++;
 22845  005E0A  0100               	movlb	0	; () banked
 22846  005E0C  2B76               	incf	GetNumber@tempCommaNumber& (0+255),f,b
 22847  005E0E                     L15:
 22848                           
 22849                           ;MISC.c: 575: This++;
 22850  005E0E  0100               	movlb	0	; () banked
 22851  005E10  4B6C               	infsnz	GetNumber@This& (0+255),f,b
 22852  005E12  2B6D               	incf	(GetNumber@This+1)& (0+255),f,b
 22853                           
 22854                           ;MISC.c: 576: goto SCAN;
 22855  005E14  D7C1               	goto	l11582
 22856                           
 22857                           ; BSR set to: 0
 22858                           
 22859                           ; BSR set to: 0
 22860  005E16  D000               	goto	l11604
 22861  005E18                     l11604:
 22862                           
 22863                           ; BSR set to: 0
 22864                           ;MISC.c: 577: }
 22865                           ;MISC.c: 578: }
 22866                           ;MISC.c: 579: if(*This == 0)
 22867  005E18  C06C  FFD9         	movff	GetNumber@This,fsr2l
 22868  005E1C  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 22869  005E20  50DF               	movf	indf2,w,c
 22870  005E22  A4D8               	btfss	status,2,c
 22871  005E24  D002               	goto	l11610
 22872                           
 22873                           ; BSR set to: 0
 22874                           ;MISC.c: 580: {
 22875                           ;MISC.c: 581: return 1;
 22876  005E26  0E01               	movlw	1
 22877                           
 22878                           ; BSR set to: 0
 22879  005E28  0012               	return	
 22880  005E2A                     l11610:
 22881                           
 22882                           ; BSR set to: 0
 22883                           ;MISC.c: 582: }
 22884                           ;MISC.c: 583: This++;
 22885  005E2A  0100               	movlb	0	; () banked
 22886  005E2C  4B6C               	infsnz	GetNumber@This& (0+255),f,b
 22887  005E2E  2B6D               	incf	(GetNumber@This+1)& (0+255),f,b
 22888                           
 22889                           ; BSR set to: 0
 22890                           ;MISC.c: 584: if(*This == ' ')
 22891  005E30  C06C  FFD9         	movff	GetNumber@This,fsr2l
 22892  005E34  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 22893  005E38  0E20               	movlw	32
 22894  005E3A  18DE               	xorwf	postinc2,w,c
 22895  005E3C  B4D8               	btfsc	status,2,c
 22896  005E3E  D01E               	goto	l11630
 22897                           
 22898                           ; BSR set to: 0
 22899                           ;MISC.c: 589: else if (*This == '=' || *This == ',')
 22900                           
 22901                           ; BSR set to: 0
 22902                           
 22903                           ;MISC.c: 588: }
 22904                           
 22905                           ; BSR set to: 0
 22906                           ;MISC.c: 585: {
 22907                           ;MISC.c: 586: This++;
 22908  005E40  C06C  FFD9         	movff	GetNumber@This,fsr2l
 22909  005E44  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 22910  005E48  0E3D               	movlw	61
 22911  005E4A  18DE               	xorwf	postinc2,w,c
 22912  005E4C  B4D8               	btfsc	status,2,c
 22913  005E4E  D008               	goto	l11620
 22914                           
 22915                           ; BSR set to: 0
 22916  005E50  C06C  FFD9         	movff	GetNumber@This,fsr2l
 22917  005E54  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 22918  005E58  0E2C               	movlw	44
 22919  005E5A  18DE               	xorwf	postinc2,w,c
 22920  005E5C  A4D8               	btfss	status,2,c
 22921  005E5E  D003               	goto	l11626
 22922  005E60                     l11620:
 22923                           
 22924                           ; BSR set to: 0
 22925                           ;MISC.c: 590: {
 22926                           ;MISC.c: 591: return 2;
 22927  005E60  0E02               	movlw	2
 22928                           
 22929                           ; BSR set to: 0
 22930  005E62  0012               	return	
 22931                           
 22932                           ; BSR set to: 0
 22933                           ;MISC.c: 592: }
 22934  005E64  D019               	goto	l11638
 22935  005E66                     l11626:
 22936                           
 22937                           ; BSR set to: 0
 22938                           ;MISC.c: 593: else if(*This == '-')
 22939  005E66  C06C  FFD9         	movff	GetNumber@This,fsr2l
 22940  005E6A  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 22941  005E6E  0E2D               	movlw	45
 22942  005E70  18DE               	xorwf	postinc2,w,c
 22943  005E72  A4D8               	btfss	status,2,c
 22944  005E74  D007               	goto	l11632
 22945                           
 22946                           ; BSR set to: 0
 22947                           ;MISC.c: 594: {
 22948                           ;MISC.c: 595: negative = 1;
 22949  005E76  0E01               	movlw	1
 22950  005E78  0100               	movlb	0	; () banked
 22951  005E7A  6F77               	movwf	GetNumber@negative& (0+255),b
 22952  005E7C                     l11630:
 22953                           
 22954                           ; BSR set to: 0
 22955                           ;MISC.c: 596: This++;
 22956  005E7C  0100               	movlb	0	; () banked
 22957  005E7E  4B6C               	infsnz	GetNumber@This& (0+255),f,b
 22958  005E80  2B6D               	incf	(GetNumber@This+1)& (0+255),f,b
 22959                           
 22960                           ;MISC.c: 598: }
 22961  005E82  D00A               	goto	l11638
 22962  005E84                     l11632:
 22963                           
 22964                           ; BSR set to: 0
 22965                           ;MISC.c: 599: else if(*This == 0)
 22966  005E84  C06C  FFD9         	movff	GetNumber@This,fsr2l
 22967  005E88  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 22968  005E8C  50DF               	movf	indf2,w,c
 22969  005E8E  A4D8               	btfss	status,2,c
 22970  005E90  D003               	goto	l11638
 22971                           
 22972                           ; BSR set to: 0
 22973                           ;MISC.c: 600: {
 22974                           ;MISC.c: 601: return 3;
 22975  005E92  0E03               	movlw	3
 22976                           
 22977                           ; BSR set to: 0
 22978  005E94  0012               	return	
 22979                           
 22980                           ; BSR set to: 0
 22981                           
 22982                           ; BSR set to: 0
 22983                           
 22984                           ; BSR set to: 0
 22985  005E96  D000               	goto	l11638
 22986  005E98                     l11638:
 22987                           
 22988                           ; BSR set to: 0
 22989                           ;MISC.c: 602: }
 22990                           ;MISC.c: 603: if(Hex)
 22991  005E98  0100               	movlb	0	; () banked
 22992  005E9A  5179               	movf	GetNumber@Hex& (0+255),w,b
 22993  005E9C  0100               	movlb	0	; () banked
 22994  005E9E  B4D8               	btfsc	status,2,c
 22995  005EA0  D11C               	goto	l11702
 22996                           
 22997                           ; BSR set to: 0
 22998                           ;MISC.c: 604: {
 22999                           ;MISC.c: 605: negative = 0;
 23000  005EA2  0E00               	movlw	0
 23001  005EA4  0100               	movlb	0	; () banked
 23002  005EA6  6F77               	movwf	GetNumber@negative& (0+255),b
 23003                           
 23004                           ;MISC.c: 606: while(*This != 'x' && *This != 'X')
 23005  005EA8  D004               	goto	l11644
 23006  005EAA                     l11642:
 23007                           
 23008                           ; BSR set to: 0
 23009                           ;MISC.c: 607: {
 23010                           ;MISC.c: 609: This++;
 23011  005EAA  0100               	movlb	0	; () banked
 23012  005EAC  4B6C               	infsnz	GetNumber@This& (0+255),f,b
 23013  005EAE  2B6D               	incf	(GetNumber@This+1)& (0+255),f,b
 23014  005EB0  D000               	goto	l11644
 23015  005EB2                     l11644:
 23016                           
 23017                           ; BSR set to: 0
 23018  005EB2  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23019  005EB6  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23020  005EBA  0E78               	movlw	120
 23021  005EBC  18DE               	xorwf	postinc2,w,c
 23022  005EBE  B4D8               	btfsc	status,2,c
 23023  005EC0  D108               	goto	l11700
 23024                           
 23025                           ; BSR set to: 0
 23026  005EC2  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23027  005EC6  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23028  005ECA  0E58               	movlw	88
 23029  005ECC  18DE               	xorwf	postinc2,w,c
 23030  005ECE  B4D8               	btfsc	status,2,c
 23031  005ED0  D100               	goto	l11700
 23032  005ED2  D7EB               	goto	l11642
 23033                           
 23034                           ; BSR set to: 0
 23035  005ED4  D0FE               	goto	l11700
 23036                           
 23037                           ; BSR set to: 0
 23038  005ED6  D0FD               	goto	l11700
 23039                           
 23040                           ; BSR set to: 0
 23041                           ;MISC.c: 612: }
 23042                           ;MISC.c: 613: while(*This != 0 && *This != ' ' && *This != ',' && *This != '=')
 23043                           
 23044                           ; BSR set to: 0
 23045                           ;MISC.c: 610: }
 23046                           ;MISC.c: 611: This++;
 23047  005ED8  D100               	goto	l11702
 23048  005EDA                     l11650:
 23049                           
 23050                           ; BSR set to: 0
 23051                           ;MISC.c: 614: {
 23052                           ;MISC.c: 615: if(!Hex)
 23053  005EDA  0100               	movlb	0	; () banked
 23054  005EDC  5179               	movf	GetNumber@Hex& (0+255),w,b
 23055  005EDE  0100               	movlb	0	; () banked
 23056  005EE0  A4D8               	btfss	status,2,c
 23057  005EE2  D05B               	goto	l11668
 23058                           
 23059                           ; BSR set to: 0
 23060                           ;MISC.c: 616: {
 23061                           ;MISC.c: 617: if(*This >=48 && *This <= 57)
 23062  005EE4  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23063  005EE8  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23064  005EEC  0E2F               	movlw	47
 23065  005EEE  64DF               	cpfsgt	indf2,c
 23066  005EF0  D0F0               	goto	l11700
 23067                           
 23068                           ; BSR set to: 0
 23069  005EF2  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23070  005EF6  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23071  005EFA  0E3A               	movlw	58
 23072  005EFC  60DF               	cpfslt	indf2,c
 23073  005EFE  D0E9               	goto	l11700
 23074                           
 23075                           ; BSR set to: 0
 23076                           ;MISC.c: 618: {
 23077                           ;MISC.c: 619: temp = temp * 10;
 23078  005F00  C07C  F060         	movff	GetNumber@temp,___lmul@multiplier
 23079  005F04  C07D  F061         	movff	GetNumber@temp+1,___lmul@multiplier+1
 23080  005F08  C07E  F062         	movff	GetNumber@temp+2,___lmul@multiplier+2
 23081  005F0C  C07F  F063         	movff	GetNumber@temp+3,___lmul@multiplier+3
 23082  005F10  0E0A               	movlw	10
 23083  005F12  0100               	movlb	0	; () banked
 23084  005F14  6F64               	movwf	___lmul@multiplicand& (0+255),b
 23085  005F16  0E00               	movlw	0
 23086  005F18  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23087  005F1A  0E00               	movlw	0
 23088  005F1C  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23089  005F1E  0E00               	movlw	0
 23090  005F20  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23091  005F22  ECA2  F04F         	call	___lmul	;wreg free
 23092  005F26  C060  F07C         	movff	?___lmul,GetNumber@temp
 23093  005F2A  C061  F07D         	movff	?___lmul+1,GetNumber@temp+1
 23094  005F2E  C062  F07E         	movff	?___lmul+2,GetNumber@temp+2
 23095  005F32  C063  F07F         	movff	?___lmul+3,GetNumber@temp+3
 23096                           
 23097                           ;MISC.c: 620: temp += *This - 48;
 23098  005F36  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23099  005F3A  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23100  005F3E  50DF               	movf	indf2,w,c
 23101  005F40  0100               	movlb	0	; () banked
 23102  005F42  6F71               	movwf	??_GetNumber& (0+255),b
 23103  005F44  0ED0               	movlw	208
 23104  005F46  0100               	movlb	0	; () banked
 23105  005F48  2571               	addwf	??_GetNumber& (0+255),w,b
 23106  005F4A  0100               	movlb	0	; () banked
 23107  005F4C  6F72               	movwf	(??_GetNumber+1)& (0+255),b
 23108  005F4E  0100               	movlb	0	; () banked
 23109  005F50  6B73               	clrf	(??_GetNumber+2)& (0+255),b
 23110  005F52  0EFF               	movlw	255
 23111  005F54  2373               	addwfc	(??_GetNumber+2)& (0+255),f,b
 23112  005F56  0100               	movlb	0	; () banked
 23113  005F58  6B74               	clrf	(??_GetNumber+3)& (0+255),b
 23114  005F5A  0100               	movlb	0	; () banked
 23115  005F5C  BF73               	btfsc	(??_GetNumber+2)& (0+255),7,b
 23116  005F5E  0774               	decf	(??_GetNumber+3)& (0+255),f,b
 23117  005F60  0100               	movlb	0	; () banked
 23118  005F62  5174               	movf	(??_GetNumber+3)& (0+255),w,b
 23119  005F64  0100               	movlb	0	; () banked
 23120  005F66  6F75               	movwf	(??_GetNumber+4)& (0+255),b
 23121  005F68  0100               	movlb	0	; () banked
 23122  005F6A  5172               	movf	(??_GetNumber+1)& (0+255),w,b
 23123  005F6C  0100               	movlb	0	; () banked
 23124  005F6E  277C               	addwf	GetNumber@temp& (0+255),f,b
 23125  005F70  0100               	movlb	0	; () banked
 23126  005F72  5173               	movf	(??_GetNumber+2)& (0+255),w,b
 23127  005F74  0100               	movlb	0	; () banked
 23128  005F76  237D               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 23129  005F78  0100               	movlb	0	; () banked
 23130  005F7A  5174               	movf	(??_GetNumber+3)& (0+255),w,b
 23131  005F7C  0100               	movlb	0	; () banked
 23132  005F7E  237E               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 23133  005F80  0100               	movlb	0	; () banked
 23134  005F82  5175               	movf	(??_GetNumber+4)& (0+255),w,b
 23135  005F84  0100               	movlb	0	; () banked
 23136  005F86  237F               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 23137                           
 23138                           ; BSR set to: 0
 23139                           ;MISC.c: 621: i++;
 23140  005F88  0100               	movlb	0	; () banked
 23141  005F8A  2B7A               	incf	GetNumber@i& (0+255),f,b
 23142  005F8C                     l11662:
 23143                           
 23144                           ; BSR set to: 0
 23145                           ;MISC.c: 622: if(i>32)
 23146  005F8C  0E20               	movlw	32
 23147  005F8E  0100               	movlb	0	; () banked
 23148  005F90  657A               	cpfsgt	GetNumber@i& (0+255),b
 23149  005F92  D09F               	goto	l11700
 23150                           
 23151                           ; BSR set to: 0
 23152                           ;MISC.c: 623: {
 23153                           ;MISC.c: 624: return 4;
 23154  005F94  0E04               	movlw	4
 23155                           
 23156                           ; BSR set to: 0
 23157  005F96  0012               	return	
 23158                           
 23159                           ; BSR set to: 0
 23160                           ;MISC.c: 625: }
 23161                           ;MISC.c: 626: }
 23162                           ;MISC.c: 627: }
 23163                           
 23164                           ; BSR set to: 0
 23165  005F98  D09C               	goto	l11700
 23166  005F9A                     l11668:
 23167                           
 23168                           ; BSR set to: 0
 23169                           ;MISC.c: 628: else
 23170                           ;MISC.c: 629: {
 23171                           ;MISC.c: 630: if((*This >=48 && *This <= 57) || (*This >=65 && *This <= 70) || (*This >=
      +                           97 && *This <= 102))
 23172  005F9A  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23173  005F9E  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23174  005FA2  0E2F               	movlw	47
 23175  005FA4  64DF               	cpfsgt	indf2,c
 23176  005FA6  D008               	goto	l11672
 23177                           
 23178                           ; BSR set to: 0
 23179  005FA8  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23180  005FAC  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23181  005FB0  0E39               	movlw	57
 23182  005FB2  64DF               	cpfsgt	indf2,c
 23183  005FB4  D01F               	goto	l11680
 23184  005FB6  D000               	goto	l11672
 23185  005FB8                     l11672:
 23186                           
 23187                           ; BSR set to: 0
 23188  005FB8  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23189  005FBC  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23190  005FC0  0E40               	movlw	64
 23191  005FC2  64DF               	cpfsgt	indf2,c
 23192  005FC4  D008               	goto	l11676
 23193                           
 23194                           ; BSR set to: 0
 23195  005FC6  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23196  005FCA  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23197  005FCE  0E46               	movlw	70
 23198  005FD0  64DF               	cpfsgt	indf2,c
 23199  005FD2  D010               	goto	l11680
 23200  005FD4  D000               	goto	l11676
 23201  005FD6                     l11676:
 23202                           
 23203                           ; BSR set to: 0
 23204  005FD6  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23205  005FDA  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23206  005FDE  0E60               	movlw	96
 23207  005FE0  64DF               	cpfsgt	indf2,c
 23208  005FE2  D077               	goto	l11700
 23209                           
 23210                           ; BSR set to: 0
 23211  005FE4  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23212  005FE8  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23213  005FEC  0E67               	movlw	103
 23214  005FEE  60DF               	cpfslt	indf2,c
 23215  005FF0  D070               	goto	l11700
 23216  005FF2  D000               	goto	l11680
 23217  005FF4                     l11680:
 23218                           
 23219                           ; BSR set to: 0
 23220                           ;MISC.c: 631: {
 23221                           ;MISC.c: 632: temp <<= 4;
 23222  005FF4  0100               	movlb	0	; () banked
 23223  005FF6  0E04               	movlw	4
 23224  005FF8                     u12835:
 23225  005FF8  90D8               	bcf	status,0,c
 23226  005FFA  377C               	rlcf	GetNumber@temp& (0+255),f,b
 23227  005FFC  377D               	rlcf	(GetNumber@temp+1)& (0+255),f,b
 23228  005FFE  377E               	rlcf	(GetNumber@temp+2)& (0+255),f,b
 23229  006000  377F               	rlcf	(GetNumber@temp+3)& (0+255),f,b
 23230  006002  2EE8               	decfsz	wreg,f,c
 23231  006004  D7F9               	goto	u12835
 23232                           
 23233                           ; BSR set to: 0
 23234                           ;MISC.c: 633: tempThis = *This;
 23235  006006  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23236  00600A  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23237  00600E  50DF               	movf	indf2,w,c
 23238  006010  0100               	movlb	0	; () banked
 23239  006012  6F7B               	movwf	GetNumber@tempThis& (0+255),b
 23240                           
 23241                           ; BSR set to: 0
 23242                           ;MISC.c: 634: if(IsLetter(tempThis))
 23243  006014  0100               	movlb	0	; () banked
 23244  006016  517B               	movf	GetNumber@tempThis& (0+255),w,b
 23245  006018  EC29  F053         	call	_IsLetter
 23246  00601C  0900               	iorlw	0
 23247  00601E  B4D8               	btfsc	status,2,c
 23248  006020  D029               	goto	l11690
 23249                           
 23250                           ;MISC.c: 635: {
 23251                           ;MISC.c: 636: lowercaseChar(&tempThis);
 23252  006022  0E7B               	movlw	low GetNumber@tempThis
 23253  006024  0100               	movlb	0	; () banked
 23254  006026  6F60               	movwf	lowercaseChar@Input& (0+255),b
 23255  006028  0E00               	movlw	high GetNumber@tempThis
 23256  00602A  0100               	movlb	0	; () banked
 23257  00602C  6F61               	movwf	(lowercaseChar@Input+1)& (0+255),b
 23258  00602E  ECB8  F053         	call	_lowercaseChar	;wreg free
 23259                           
 23260                           ;MISC.c: 637: temp += (tempThis - 87);
 23261  006032  0EA9               	movlw	169
 23262  006034  0100               	movlb	0	; () banked
 23263  006036  257B               	addwf	GetNumber@tempThis& (0+255),w,b
 23264  006038  0100               	movlb	0	; () banked
 23265  00603A  6F71               	movwf	??_GetNumber& (0+255),b
 23266  00603C  0100               	movlb	0	; () banked
 23267  00603E  6B72               	clrf	(??_GetNumber+1)& (0+255),b
 23268  006040  0EFF               	movlw	255
 23269  006042  2372               	addwfc	(??_GetNumber+1)& (0+255),f,b
 23270  006044  0100               	movlb	0	; () banked
 23271  006046  6B73               	clrf	(??_GetNumber+2)& (0+255),b
 23272  006048  0100               	movlb	0	; () banked
 23273  00604A  BF72               	btfsc	(??_GetNumber+1)& (0+255),7,b
 23274  00604C  0773               	decf	(??_GetNumber+2)& (0+255),f,b
 23275  00604E  0100               	movlb	0	; () banked
 23276  006050  5173               	movf	(??_GetNumber+2)& (0+255),w,b
 23277  006052  0100               	movlb	0	; () banked
 23278  006054  6F74               	movwf	(??_GetNumber+3)& (0+255),b
 23279  006056  0100               	movlb	0	; () banked
 23280  006058  5171               	movf	??_GetNumber& (0+255),w,b
 23281  00605A  0100               	movlb	0	; () banked
 23282  00605C  277C               	addwf	GetNumber@temp& (0+255),f,b
 23283  00605E  0100               	movlb	0	; () banked
 23284  006060  5172               	movf	(??_GetNumber+1)& (0+255),w,b
 23285  006062  0100               	movlb	0	; () banked
 23286  006064  237D               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 23287  006066  0100               	movlb	0	; () banked
 23288  006068  5173               	movf	(??_GetNumber+2)& (0+255),w,b
 23289  00606A  0100               	movlb	0	; () banked
 23290  00606C  237E               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 23291  00606E  0100               	movlb	0	; () banked
 23292  006070  5174               	movf	(??_GetNumber+3)& (0+255),w,b
 23293  006072  D027               	goto	L16
 23294  006074                     l11690:
 23295                           
 23296                           ;MISC.c: 639: else
 23297                           ;MISC.c: 640: {
 23298                           ;MISC.c: 641: temp += (*This - 48);
 23299  006074  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23300  006078  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23301  00607C  50DF               	movf	indf2,w,c
 23302  00607E  0100               	movlb	0	; () banked
 23303  006080  6F71               	movwf	??_GetNumber& (0+255),b
 23304  006082  0ED0               	movlw	208
 23305  006084  0100               	movlb	0	; () banked
 23306  006086  2571               	addwf	??_GetNumber& (0+255),w,b
 23307  006088  0100               	movlb	0	; () banked
 23308  00608A  6F72               	movwf	(??_GetNumber+1)& (0+255),b
 23309  00608C  0100               	movlb	0	; () banked
 23310  00608E  6B73               	clrf	(??_GetNumber+2)& (0+255),b
 23311  006090  0EFF               	movlw	255
 23312  006092  2373               	addwfc	(??_GetNumber+2)& (0+255),f,b
 23313  006094  0100               	movlb	0	; () banked
 23314  006096  6B74               	clrf	(??_GetNumber+3)& (0+255),b
 23315  006098  0100               	movlb	0	; () banked
 23316  00609A  BF73               	btfsc	(??_GetNumber+2)& (0+255),7,b
 23317  00609C  0774               	decf	(??_GetNumber+3)& (0+255),f,b
 23318  00609E  0100               	movlb	0	; () banked
 23319  0060A0  5174               	movf	(??_GetNumber+3)& (0+255),w,b
 23320  0060A2  0100               	movlb	0	; () banked
 23321  0060A4  6F75               	movwf	(??_GetNumber+4)& (0+255),b
 23322  0060A6  0100               	movlb	0	; () banked
 23323  0060A8  5172               	movf	(??_GetNumber+1)& (0+255),w,b
 23324  0060AA  0100               	movlb	0	; () banked
 23325  0060AC  277C               	addwf	GetNumber@temp& (0+255),f,b
 23326  0060AE  0100               	movlb	0	; () banked
 23327  0060B0  5173               	movf	(??_GetNumber+2)& (0+255),w,b
 23328  0060B2  0100               	movlb	0	; () banked
 23329  0060B4  237D               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 23330  0060B6  0100               	movlb	0	; () banked
 23331  0060B8  5174               	movf	(??_GetNumber+3)& (0+255),w,b
 23332  0060BA  0100               	movlb	0	; () banked
 23333  0060BC  237E               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 23334  0060BE  0100               	movlb	0	; () banked
 23335  0060C0  5175               	movf	(??_GetNumber+4)& (0+255),w,b
 23336  0060C2                     L16:
 23337  0060C2  0100               	movlb	0	; () banked
 23338  0060C4  237F               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 23339  0060C6  D000               	goto	l11692
 23340  0060C8                     l11692:
 23341                           
 23342                           ; BSR set to: 0
 23343                           ;MISC.c: 642: }
 23344                           ;MISC.c: 643: i++;
 23345  0060C8  0100               	movlb	0	; () banked
 23346  0060CA  2B7A               	incf	GetNumber@i& (0+255),f,b
 23347  0060CC  D75F               	goto	l11662
 23348                           
 23349                           ; BSR set to: 0
 23350                           
 23351                           ; BSR set to: 0
 23352                           ;MISC.c: 645: {
 23353                           ;MISC.c: 646: return 4;
 23354                           
 23355                           ; BSR set to: 0
 23356                           ;MISC.c: 644: if(i>32)
 23357  0060CE  0012               	return	
 23358                           
 23359                           ; BSR set to: 0
 23360                           
 23361                           ; BSR set to: 0
 23362  0060D0  D000               	goto	l11700
 23363  0060D2                     l11700:
 23364                           
 23365                           ; BSR set to: 0
 23366                           ;MISC.c: 647: }
 23367                           ;MISC.c: 648: }
 23368                           ;MISC.c: 649: }
 23369                           ;MISC.c: 650: This++;
 23370  0060D2  0100               	movlb	0	; () banked
 23371  0060D4  4B6C               	infsnz	GetNumber@This& (0+255),f,b
 23372  0060D6  2B6D               	incf	(GetNumber@This+1)& (0+255),f,b
 23373  0060D8  D000               	goto	l11702
 23374  0060DA                     l11702:
 23375                           
 23376                           ; BSR set to: 0
 23377  0060DA  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23378  0060DE  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23379  0060E2  50DF               	movf	indf2,w,c
 23380  0060E4  B4D8               	btfsc	status,2,c
 23381  0060E6  D01A               	goto	l11710
 23382                           
 23383                           ; BSR set to: 0
 23384  0060E8  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23385  0060EC  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23386  0060F0  0E20               	movlw	32
 23387  0060F2  18DE               	xorwf	postinc2,w,c
 23388  0060F4  B4D8               	btfsc	status,2,c
 23389  0060F6  D012               	goto	l11710
 23390                           
 23391                           ; BSR set to: 0
 23392  0060F8  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23393  0060FC  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23394  006100  0E2C               	movlw	44
 23395  006102  18DE               	xorwf	postinc2,w,c
 23396  006104  B4D8               	btfsc	status,2,c
 23397  006106  D00A               	goto	l11710
 23398                           
 23399                           ; BSR set to: 0
 23400  006108  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23401  00610C  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23402  006110  0E3D               	movlw	61
 23403  006112  18DE               	xorwf	postinc2,w,c
 23404  006114  B4D8               	btfsc	status,2,c
 23405  006116  D002               	goto	l11710
 23406  006118  D6E0               	goto	l11650
 23407                           
 23408                           ; BSR set to: 0
 23409  00611A  D000               	goto	l11710
 23410  00611C                     l11710:
 23411                           
 23412                           ; BSR set to: 0
 23413                           ;MISC.c: 651: }
 23414                           ;MISC.c: 652: if(negative)
 23415  00611C  0100               	movlb	0	; () banked
 23416  00611E  5177               	movf	GetNumber@negative& (0+255),w,b
 23417  006120  0100               	movlb	0	; () banked
 23418  006122  B4D8               	btfsc	status,2,c
 23419  006124  D00A               	goto	l11714
 23420                           
 23421                           ; BSR set to: 0
 23422                           ;MISC.c: 653: {
 23423                           ;MISC.c: 654: temp = (temp * -1);
 23424  006126  0100               	movlb	0	; () banked
 23425  006128  1F7F               	comf	(GetNumber@temp+3)& (0+255),f,b
 23426  00612A  1F7E               	comf	(GetNumber@temp+2)& (0+255),f,b
 23427  00612C  1F7D               	comf	(GetNumber@temp+1)& (0+255),f,b
 23428  00612E  6D7C               	negf	GetNumber@temp& (0+255),b
 23429  006130  0E00               	movlw	0
 23430  006132  237D               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 23431  006134  237E               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 23432  006136  237F               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 23433  006138  D000               	goto	l11714
 23434  00613A                     l11714:
 23435                           
 23436                           ; BSR set to: 0
 23437                           ;MISC.c: 655: }
 23438                           ;MISC.c: 656: *result = temp;
 23439  00613A  C06F  FFD9         	movff	GetNumber@result,fsr2l
 23440  00613E  C070  FFDA         	movff	GetNumber@result+1,fsr2h
 23441  006142  C07C  FFDE         	movff	GetNumber@temp,postinc2
 23442  006146  C07D  FFDE         	movff	GetNumber@temp+1,postinc2
 23443  00614A  C07E  FFDE         	movff	GetNumber@temp+2,postinc2
 23444  00614E  C07F  FFDE         	movff	GetNumber@temp+3,postinc2
 23445                           
 23446                           ; BSR set to: 0
 23447                           ;MISC.c: 657: return 0;
 23448  006152  0E00               	movlw	0
 23449  006154  0012               	return	
 23450                           
 23451                           ; BSR set to: 0
 23452                           
 23453                           ; BSR set to: 0
 23454  006156  0012               	return		;funcret
 23455  006158                     __end_of_GetNumber:
 23456                           	opt stack 0
 23457                           tblptru	equ	0xFF8
 23458                           tblptrh	equ	0xFF7
 23459                           tblptrl	equ	0xFF6
 23460                           tablat	equ	0xFF5
 23461                           prodh	equ	0xFF4
 23462                           prodl	equ	0xFF3
 23463                           intcon	equ	0xFF2
 23464                           indf0	equ	0xFEF
 23465                           postinc0	equ	0xFEE
 23466                           plusw0	equ	0xFEB
 23467                           fsr0h	equ	0xFEA
 23468                           fsr0l	equ	0xFE9
 23469                           wreg	equ	0xFE8
 23470                           indf1	equ	0xFE7
 23471                           postdec1	equ	0xFE5
 23472                           fsr1h	equ	0xFE2
 23473                           fsr1l	equ	0xFE1
 23474                           indf2	equ	0xFDF
 23475                           postinc2	equ	0xFDE
 23476                           postdec2	equ	0xFDD
 23477                           plusw2	equ	0xFDB
 23478                           fsr2h	equ	0xFDA
 23479                           fsr2l	equ	0xFD9
 23480                           status	equ	0xFD8
 23481                           
 23482 ;; *************** function ___lmul *****************
 23483 ;; Defined at:
 23484 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
 23485 ;; Parameters:    Size  Location     Type
 23486 ;;  multiplier      4    0[BANK0 ] unsigned long 
 23487 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 23488 ;; Auto vars:     Size  Location     Type
 23489 ;;  product         4    8[BANK0 ] unsigned long 
 23490 ;; Return value:  Size  Location     Type
 23491 ;;                  4    0[BANK0 ] unsigned long 
 23492 ;; Registers used:
 23493 ;;		wreg, status,2, status,0
 23494 ;; Tracked objects:
 23495 ;;		On entry : 0/0
 23496 ;;		On exit  : 0/0
 23497 ;;		Unchanged: 0/0
 23498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23499 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23500 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23502 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23503 ;;Total ram usage:       12 bytes
 23504 ;; Hardware stack levels used:    1
 23505 ;; Hardware stack levels required when called:    5
 23506 ;; This function calls:
 23507 ;;		Nothing
 23508 ;; This function is called by:
 23509 ;;		_GetNumber
 23510 ;;		_GetNumberUnsigned
 23511 ;; This function uses a non-reentrant model
 23512 ;;
 23513                           
 23514                           	psect	text34
 23515  009F44                     __ptext34:
 23516                           	opt stack 0
 23517  009F44                     ___lmul:
 23518                           	opt stack 23
 23519                           
 23520                           ; BSR set to: 0
 23521                           ;incstack = 0
 23522  009F44  0E00               	movlw	0
 23523  009F46  0100               	movlb	0	; () banked
 23524  009F48  6F68               	movwf	___lmul@product& (0+255),b
 23525  009F4A  0E00               	movlw	0
 23526  009F4C  6F69               	movwf	(___lmul@product+1)& (0+255),b
 23527  009F4E  0E00               	movlw	0
 23528  009F50  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 23529  009F52  0E00               	movlw	0
 23530  009F54  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 23531  009F56  D000               	goto	l11160
 23532  009F58                     l11160:
 23533                           
 23534                           ; BSR set to: 0
 23535  009F58  0100               	movlb	0	; () banked
 23536  009F5A  A160               	btfss	___lmul@multiplier& (0+255),0,b
 23537  009F5C  D011               	goto	l11164
 23538                           
 23539                           ; BSR set to: 0
 23540  009F5E  0100               	movlb	0	; () banked
 23541  009F60  5164               	movf	___lmul@multiplicand& (0+255),w,b
 23542  009F62  0100               	movlb	0	; () banked
 23543  009F64  2768               	addwf	___lmul@product& (0+255),f,b
 23544  009F66  0100               	movlb	0	; () banked
 23545  009F68  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 23546  009F6A  0100               	movlb	0	; () banked
 23547  009F6C  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 23548  009F6E  0100               	movlb	0	; () banked
 23549  009F70  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 23550  009F72  0100               	movlb	0	; () banked
 23551  009F74  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 23552  009F76  0100               	movlb	0	; () banked
 23553  009F78  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 23554  009F7A  0100               	movlb	0	; () banked
 23555  009F7C  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 23556  009F7E  D000               	goto	l11164
 23557  009F80                     l11164:
 23558                           
 23559                           ; BSR set to: 0
 23560  009F80  0100               	movlb	0	; () banked
 23561  009F82  90D8               	bcf	status,0,c
 23562  009F84  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 23563  009F86  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 23564  009F88  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 23565  009F8A  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 23566                           
 23567                           ; BSR set to: 0
 23568  009F8C  0100               	movlb	0	; () banked
 23569  009F8E  90D8               	bcf	status,0,c
 23570  009F90  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 23571  009F92  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 23572  009F94  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 23573  009F96  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 23574  009F98  0100               	movlb	0	; () banked
 23575  009F9A  5160               	movf	___lmul@multiplier& (0+255),w,b
 23576  009F9C  0100               	movlb	0	; () banked
 23577  009F9E  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 23578  009FA0  0100               	movlb	0	; () banked
 23579  009FA2  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 23580  009FA4  0100               	movlb	0	; () banked
 23581  009FA6  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 23582  009FA8  A4D8               	btfss	status,2,c
 23583  009FAA  D7D6               	goto	l11160
 23584                           
 23585                           ; BSR set to: 0
 23586  009FAC  C068  F060         	movff	___lmul@product,?___lmul
 23587  009FB0  C069  F061         	movff	___lmul@product+1,?___lmul+1
 23588  009FB4  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 23589  009FB8  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 23590                           
 23591                           ; BSR set to: 0
 23592  009FBC  0012               	return		;funcret
 23593  009FBE                     __end_of___lmul:
 23594                           	opt stack 0
 23595                           tblptru	equ	0xFF8
 23596                           tblptrh	equ	0xFF7
 23597                           tblptrl	equ	0xFF6
 23598                           tablat	equ	0xFF5
 23599                           prodh	equ	0xFF4
 23600                           prodl	equ	0xFF3
 23601                           intcon	equ	0xFF2
 23602                           indf0	equ	0xFEF
 23603                           postinc0	equ	0xFEE
 23604                           plusw0	equ	0xFEB
 23605                           fsr0h	equ	0xFEA
 23606                           fsr0l	equ	0xFE9
 23607                           wreg	equ	0xFE8
 23608                           indf1	equ	0xFE7
 23609                           postdec1	equ	0xFE5
 23610                           fsr1h	equ	0xFE2
 23611                           fsr1l	equ	0xFE1
 23612                           indf2	equ	0xFDF
 23613                           postinc2	equ	0xFDE
 23614                           postdec2	equ	0xFDD
 23615                           plusw2	equ	0xFDB
 23616                           fsr2h	equ	0xFDA
 23617                           fsr2l	equ	0xFD9
 23618                           status	equ	0xFD8
 23619                           
 23620 ;; *************** function _IsLetter *****************
 23621 ;; Defined at:
 23622 ;;		line 101 in file "MISC.c"
 23623 ;; Parameters:    Size  Location     Type
 23624 ;;  data            1    wreg     unsigned char 
 23625 ;; Auto vars:     Size  Location     Type
 23626 ;;  data            1    0[BANK0 ] unsigned char 
 23627 ;; Return value:  Size  Location     Type
 23628 ;;                  1    wreg      unsigned char 
 23629 ;; Registers used:
 23630 ;;		wreg, status,2, status,0
 23631 ;; Tracked objects:
 23632 ;;		On entry : 0/0
 23633 ;;		On exit  : 0/0
 23634 ;;		Unchanged: 0/0
 23635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23637 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23639 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23640 ;;Total ram usage:        1 bytes
 23641 ;; Hardware stack levels used:    1
 23642 ;; Hardware stack levels required when called:    5
 23643 ;; This function calls:
 23644 ;;		Nothing
 23645 ;; This function is called by:
 23646 ;;		_IsAlphaNumeric
 23647 ;;		_GetNumber
 23648 ;;		_GetNumberUnsigned
 23649 ;; This function uses a non-reentrant model
 23650 ;;
 23651                           
 23652                           	psect	text35
 23653  00A652                     __ptext35:
 23654                           	opt stack 0
 23655  00A652                     _IsLetter:
 23656                           	opt stack 22
 23657                           
 23658                           ; BSR set to: 0
 23659                           ;incstack = 0
 23660                           ;IsLetter@data stored from wreg
 23661  00A652  0100               	movlb	0	; () banked
 23662  00A654  6F60               	movwf	IsLetter@data& (0+255),b
 23663                           
 23664                           ; BSR set to: 0
 23665                           ;MISC.c: 103: if((data >= 65 && data <= 90) || (data >= 97 && data <= 122))
 23666  00A656  0E40               	movlw	64
 23667  00A658  0100               	movlb	0	; () banked
 23668  00A65A  6560               	cpfsgt	IsLetter@data& (0+255),b
 23669  00A65C  D005               	goto	l10252
 23670                           
 23671                           ; BSR set to: 0
 23672  00A65E  0E5A               	movlw	90
 23673  00A660  0100               	movlb	0	; () banked
 23674  00A662  6560               	cpfsgt	IsLetter@data& (0+255),b
 23675  00A664  D00A               	goto	l10256
 23676  00A666  D000               	goto	l10252
 23677  00A668                     l10252:
 23678                           
 23679                           ; BSR set to: 0
 23680  00A668  0E60               	movlw	96
 23681  00A66A  0100               	movlb	0	; () banked
 23682  00A66C  6560               	cpfsgt	IsLetter@data& (0+255),b
 23683  00A66E  D007               	goto	l10260
 23684                           
 23685                           ; BSR set to: 0
 23686  00A670  0E7B               	movlw	123
 23687  00A672  0100               	movlb	0	; () banked
 23688  00A674  6160               	cpfslt	IsLetter@data& (0+255),b
 23689  00A676  D003               	goto	l10260
 23690  00A678  D000               	goto	l10256
 23691  00A67A                     l10256:
 23692                           
 23693                           ; BSR set to: 0
 23694                           ;MISC.c: 104: {
 23695                           ;MISC.c: 105: return 1;
 23696  00A67A  0E01               	movlw	1
 23697                           
 23698                           ; BSR set to: 0
 23699  00A67C  0012               	return	
 23700  00A67E                     l10260:
 23701                           
 23702                           ; BSR set to: 0
 23703                           ;MISC.c: 106: }
 23704                           ;MISC.c: 107: return 0;
 23705  00A67E  0E00               	movlw	0
 23706  00A680  0012               	return	
 23707                           
 23708                           ; BSR set to: 0
 23709                           
 23710                           ; BSR set to: 0
 23711  00A682  0012               	return		;funcret
 23712  00A684                     __end_of_IsLetter:
 23713                           	opt stack 0
 23714                           tblptru	equ	0xFF8
 23715                           tblptrh	equ	0xFF7
 23716                           tblptrl	equ	0xFF6
 23717                           tablat	equ	0xFF5
 23718                           prodh	equ	0xFF4
 23719                           prodl	equ	0xFF3
 23720                           intcon	equ	0xFF2
 23721                           indf0	equ	0xFEF
 23722                           postinc0	equ	0xFEE
 23723                           plusw0	equ	0xFEB
 23724                           fsr0h	equ	0xFEA
 23725                           fsr0l	equ	0xFE9
 23726                           wreg	equ	0xFE8
 23727                           indf1	equ	0xFE7
 23728                           postdec1	equ	0xFE5
 23729                           fsr1h	equ	0xFE2
 23730                           fsr1l	equ	0xFE1
 23731                           indf2	equ	0xFDF
 23732                           postinc2	equ	0xFDE
 23733                           postdec2	equ	0xFDD
 23734                           plusw2	equ	0xFDB
 23735                           fsr2h	equ	0xFDA
 23736                           fsr2l	equ	0xFD9
 23737                           status	equ	0xFD8
 23738                           
 23739 ;; *************** function _EncodeNEC *****************
 23740 ;; Defined at:
 23741 ;;		line 522 in file "IR.c"
 23742 ;; Parameters:    Size  Location     Type
 23743 ;;  address         1    wreg     unsigned char 
 23744 ;;  command         1    4[BANK0 ] unsigned char 
 23745 ;; Auto vars:     Size  Location     Type
 23746 ;;  address         1   44[BANK0 ] unsigned char 
 23747 ;;  temp4           4   40[BANK0 ] unsigned long 
 23748 ;;  temp3           4   36[BANK0 ] unsigned long 
 23749 ;;  temp2           4   32[BANK0 ] unsigned long 
 23750 ;;  temp1           4   28[BANK0 ] unsigned long 
 23751 ;; Return value:  Size  Location     Type
 23752 ;;                  4    4[BANK0 ] unsigned long 
 23753 ;; Registers used:
 23754 ;;		wreg, status,2, status,0, cstack
 23755 ;; Tracked objects:
 23756 ;;		On entry : 0/0
 23757 ;;		On exit  : 0/0
 23758 ;;		Unchanged: 0/0
 23759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23760 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23761 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23762 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23763 ;;      Totals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23764 ;;Total ram usage:       41 bytes
 23765 ;; Hardware stack levels used:    1
 23766 ;; Hardware stack levels required when called:    6
 23767 ;; This function calls:
 23768 ;;		_Reverse_Byte
 23769 ;; This function is called by:
 23770 ;;		_UseBluetooth
 23771 ;; This function uses a non-reentrant model
 23772 ;;
 23773                           
 23774                           	psect	text36
 23775  008426                     __ptext36:
 23776                           	opt stack 0
 23777  008426                     _EncodeNEC:
 23778                           	opt stack 23
 23779                           
 23780                           ; BSR set to: 0
 23781                           ;incstack = 0
 23782                           ;EncodeNEC@address stored from wreg
 23783  008426  0100               	movlb	0	; () banked
 23784  008428  6F8C               	movwf	EncodeNEC@address& (0+255),b
 23785                           
 23786                           ; BSR set to: 0
 23787                           ;IR.c: 524: unsigned long temp1,
 23788                           ;IR.c: 525: temp2,
 23789                           ;IR.c: 526: temp3,
 23790                           ;IR.c: 527: temp4;
 23791                           ;IR.c: 535: temp1 = (unsigned long) Reverse_Byte(address);
 23792  00842A  0100               	movlb	0	; () banked
 23793  00842C  518C               	movf	EncodeNEC@address& (0+255),w,b
 23794  00842E  EC69  F04B         	call	_Reverse_Byte
 23795  008432  0100               	movlb	0	; () banked
 23796  008434  6F68               	movwf	??_EncodeNEC& (0+255),b
 23797  008436  0100               	movlb	0	; () banked
 23798  008438  5168               	movf	??_EncodeNEC& (0+255),w,b
 23799  00843A  0100               	movlb	0	; () banked
 23800  00843C  6F7C               	movwf	EncodeNEC@temp1& (0+255),b
 23801  00843E  6B7D               	clrf	(EncodeNEC@temp1+1)& (0+255),b
 23802  008440  6B7E               	clrf	(EncodeNEC@temp1+2)& (0+255),b
 23803  008442  6B7F               	clrf	(EncodeNEC@temp1+3)& (0+255),b
 23804                           
 23805                           ;IR.c: 536: temp2 = (unsigned long) Reverse_Byte(~address);
 23806  008444  0100               	movlb	0	; () banked
 23807  008446  518C               	movf	EncodeNEC@address& (0+255),w,b
 23808  008448  0AFF               	xorlw	255
 23809  00844A  EC69  F04B         	call	_Reverse_Byte
 23810  00844E  0100               	movlb	0	; () banked
 23811  008450  6F68               	movwf	??_EncodeNEC& (0+255),b
 23812  008452  0100               	movlb	0	; () banked
 23813  008454  5168               	movf	??_EncodeNEC& (0+255),w,b
 23814  008456  0100               	movlb	0	; () banked
 23815  008458  6F80               	movwf	EncodeNEC@temp2& (0+255),b
 23816  00845A  6B81               	clrf	(EncodeNEC@temp2+1)& (0+255),b
 23817  00845C  6B82               	clrf	(EncodeNEC@temp2+2)& (0+255),b
 23818  00845E  6B83               	clrf	(EncodeNEC@temp2+3)& (0+255),b
 23819                           
 23820                           ;IR.c: 537: temp3 = (unsigned long) Reverse_Byte(command);
 23821  008460  0100               	movlb	0	; () banked
 23822  008462  5164               	movf	EncodeNEC@command& (0+255),w,b
 23823  008464  EC69  F04B         	call	_Reverse_Byte
 23824  008468  0100               	movlb	0	; () banked
 23825  00846A  6F68               	movwf	??_EncodeNEC& (0+255),b
 23826  00846C  0100               	movlb	0	; () banked
 23827  00846E  5168               	movf	??_EncodeNEC& (0+255),w,b
 23828  008470  0100               	movlb	0	; () banked
 23829  008472  6F84               	movwf	EncodeNEC@temp3& (0+255),b
 23830  008474  6B85               	clrf	(EncodeNEC@temp3+1)& (0+255),b
 23831  008476  6B86               	clrf	(EncodeNEC@temp3+2)& (0+255),b
 23832  008478  6B87               	clrf	(EncodeNEC@temp3+3)& (0+255),b
 23833                           
 23834                           ;IR.c: 538: temp4 = (unsigned long) Reverse_Byte(~command);
 23835  00847A  0100               	movlb	0	; () banked
 23836  00847C  5164               	movf	EncodeNEC@command& (0+255),w,b
 23837  00847E  0AFF               	xorlw	255
 23838  008480  EC69  F04B         	call	_Reverse_Byte
 23839  008484  0100               	movlb	0	; () banked
 23840  008486  6F68               	movwf	??_EncodeNEC& (0+255),b
 23841  008488  0100               	movlb	0	; () banked
 23842  00848A  5168               	movf	??_EncodeNEC& (0+255),w,b
 23843  00848C  0100               	movlb	0	; () banked
 23844  00848E  6F88               	movwf	EncodeNEC@temp4& (0+255),b
 23845  008490  6B89               	clrf	(EncodeNEC@temp4+1)& (0+255),b
 23846  008492  6B8A               	clrf	(EncodeNEC@temp4+2)& (0+255),b
 23847  008494  6B8B               	clrf	(EncodeNEC@temp4+3)& (0+255),b
 23848                           
 23849                           ; BSR set to: 0
 23850                           ;IR.c: 540: return ((temp1 << 24) + (temp2 << 16) + (temp3 << 8) + temp4);
 23851  008496  C084  F069         	movff	EncodeNEC@temp3,??_EncodeNEC+1
 23852  00849A  C085  F06A         	movff	EncodeNEC@temp3+1,??_EncodeNEC+2
 23853  00849E  C086  F06B         	movff	EncodeNEC@temp3+2,??_EncodeNEC+3
 23854  0084A2  0100               	movlb	0	; () banked
 23855  0084A4  6B68               	clrf	??_EncodeNEC& (0+255),b
 23856  0084A6  C080  F06C         	movff	EncodeNEC@temp2,??_EncodeNEC+4
 23857  0084AA  C081  F06D         	movff	EncodeNEC@temp2+1,??_EncodeNEC+5
 23858  0084AE  C082  F06E         	movff	EncodeNEC@temp2+2,??_EncodeNEC+6
 23859  0084B2  C083  F06F         	movff	EncodeNEC@temp2+3,??_EncodeNEC+7
 23860  0084B6  C06D  F06F         	movff	??_EncodeNEC+5,??_EncodeNEC+7
 23861  0084BA  C06C  F06E         	movff	??_EncodeNEC+4,??_EncodeNEC+6
 23862  0084BE  0100               	movlb	0	; () banked
 23863  0084C0  6B6D               	clrf	(??_EncodeNEC+5)& (0+255),b
 23864  0084C2  6B6C               	clrf	(??_EncodeNEC+4)& (0+255),b
 23865  0084C4  C07C  F070         	movff	EncodeNEC@temp1,??_EncodeNEC+8
 23866  0084C8  C07D  F071         	movff	EncodeNEC@temp1+1,??_EncodeNEC+9
 23867  0084CC  C07E  F072         	movff	EncodeNEC@temp1+2,??_EncodeNEC+10
 23868  0084D0  C07F  F073         	movff	EncodeNEC@temp1+3,??_EncodeNEC+11
 23869  0084D4  C070  F073         	movff	??_EncodeNEC+8,??_EncodeNEC+11
 23870  0084D8  0100               	movlb	0	; () banked
 23871  0084DA  6B72               	clrf	(??_EncodeNEC+10)& (0+255),b
 23872  0084DC  6B71               	clrf	(??_EncodeNEC+9)& (0+255),b
 23873  0084DE  6B70               	clrf	(??_EncodeNEC+8)& (0+255),b
 23874  0084E0  0100               	movlb	0	; () banked
 23875  0084E2  516C               	movf	(??_EncodeNEC+4)& (0+255),w,b
 23876  0084E4  0100               	movlb	0	; () banked
 23877  0084E6  2570               	addwf	(??_EncodeNEC+8)& (0+255),w,b
 23878  0084E8  0100               	movlb	0	; () banked
 23879  0084EA  6F74               	movwf	(??_EncodeNEC+12)& (0+255),b
 23880  0084EC  0100               	movlb	0	; () banked
 23881  0084EE  516D               	movf	(??_EncodeNEC+5)& (0+255),w,b
 23882  0084F0  0100               	movlb	0	; () banked
 23883  0084F2  2171               	addwfc	(??_EncodeNEC+9)& (0+255),w,b
 23884  0084F4  0100               	movlb	0	; () banked
 23885  0084F6  6F75               	movwf	(??_EncodeNEC+13)& (0+255),b
 23886  0084F8  0100               	movlb	0	; () banked
 23887  0084FA  516E               	movf	(??_EncodeNEC+6)& (0+255),w,b
 23888  0084FC  0100               	movlb	0	; () banked
 23889  0084FE  2172               	addwfc	(??_EncodeNEC+10)& (0+255),w,b
 23890  008500  0100               	movlb	0	; () banked
 23891  008502  6F76               	movwf	(??_EncodeNEC+14)& (0+255),b
 23892  008504  0100               	movlb	0	; () banked
 23893  008506  516F               	movf	(??_EncodeNEC+7)& (0+255),w,b
 23894  008508  0100               	movlb	0	; () banked
 23895  00850A  2173               	addwfc	(??_EncodeNEC+11)& (0+255),w,b
 23896  00850C  0100               	movlb	0	; () banked
 23897  00850E  6F77               	movwf	(??_EncodeNEC+15)& (0+255),b
 23898  008510  0100               	movlb	0	; () banked
 23899  008512  5168               	movf	??_EncodeNEC& (0+255),w,b
 23900  008514  0100               	movlb	0	; () banked
 23901  008516  2574               	addwf	(??_EncodeNEC+12)& (0+255),w,b
 23902  008518  0100               	movlb	0	; () banked
 23903  00851A  6F78               	movwf	(??_EncodeNEC+16)& (0+255),b
 23904  00851C  0100               	movlb	0	; () banked
 23905  00851E  5169               	movf	(??_EncodeNEC+1)& (0+255),w,b
 23906  008520  0100               	movlb	0	; () banked
 23907  008522  2175               	addwfc	(??_EncodeNEC+13)& (0+255),w,b
 23908  008524  0100               	movlb	0	; () banked
 23909  008526  6F79               	movwf	(??_EncodeNEC+17)& (0+255),b
 23910  008528  0100               	movlb	0	; () banked
 23911  00852A  516A               	movf	(??_EncodeNEC+2)& (0+255),w,b
 23912  00852C  0100               	movlb	0	; () banked
 23913  00852E  2176               	addwfc	(??_EncodeNEC+14)& (0+255),w,b
 23914  008530  0100               	movlb	0	; () banked
 23915  008532  6F7A               	movwf	(??_EncodeNEC+18)& (0+255),b
 23916  008534  0100               	movlb	0	; () banked
 23917  008536  516B               	movf	(??_EncodeNEC+3)& (0+255),w,b
 23918  008538  0100               	movlb	0	; () banked
 23919  00853A  2177               	addwfc	(??_EncodeNEC+15)& (0+255),w,b
 23920  00853C  0100               	movlb	0	; () banked
 23921  00853E  6F7B               	movwf	(??_EncodeNEC+19)& (0+255),b
 23922  008540  0100               	movlb	0	; () banked
 23923  008542  5188               	movf	EncodeNEC@temp4& (0+255),w,b
 23924  008544  0100               	movlb	0	; () banked
 23925  008546  2578               	addwf	(??_EncodeNEC+16)& (0+255),w,b
 23926  008548  0100               	movlb	0	; () banked
 23927  00854A  6F64               	movwf	?_EncodeNEC& (0+255),b
 23928  00854C  0100               	movlb	0	; () banked
 23929  00854E  5189               	movf	(EncodeNEC@temp4+1)& (0+255),w,b
 23930  008550  0100               	movlb	0	; () banked
 23931  008552  2179               	addwfc	(??_EncodeNEC+17)& (0+255),w,b
 23932  008554  0100               	movlb	0	; () banked
 23933  008556  6F65               	movwf	(?_EncodeNEC+1)& (0+255),b
 23934  008558  0100               	movlb	0	; () banked
 23935  00855A  518A               	movf	(EncodeNEC@temp4+2)& (0+255),w,b
 23936  00855C  0100               	movlb	0	; () banked
 23937  00855E  217A               	addwfc	(??_EncodeNEC+18)& (0+255),w,b
 23938  008560  0100               	movlb	0	; () banked
 23939  008562  6F66               	movwf	(?_EncodeNEC+2)& (0+255),b
 23940  008564  0100               	movlb	0	; () banked
 23941  008566  518B               	movf	(EncodeNEC@temp4+3)& (0+255),w,b
 23942  008568  0100               	movlb	0	; () banked
 23943  00856A  217B               	addwfc	(??_EncodeNEC+19)& (0+255),w,b
 23944  00856C  0100               	movlb	0	; () banked
 23945  00856E  6F67               	movwf	(?_EncodeNEC+3)& (0+255),b
 23946  008570  0012               	return	
 23947                           
 23948                           ; BSR set to: 0
 23949                           
 23950                           ; BSR set to: 0
 23951  008572  0012               	return		;funcret
 23952  008574                     __end_of_EncodeNEC:
 23953                           	opt stack 0
 23954                           tblptru	equ	0xFF8
 23955                           tblptrh	equ	0xFF7
 23956                           tblptrl	equ	0xFF6
 23957                           tablat	equ	0xFF5
 23958                           prodh	equ	0xFF4
 23959                           prodl	equ	0xFF3
 23960                           intcon	equ	0xFF2
 23961                           indf0	equ	0xFEF
 23962                           postinc0	equ	0xFEE
 23963                           plusw0	equ	0xFEB
 23964                           fsr0h	equ	0xFEA
 23965                           fsr0l	equ	0xFE9
 23966                           wreg	equ	0xFE8
 23967                           indf1	equ	0xFE7
 23968                           postdec1	equ	0xFE5
 23969                           fsr1h	equ	0xFE2
 23970                           fsr1l	equ	0xFE1
 23971                           indf2	equ	0xFDF
 23972                           postinc2	equ	0xFDE
 23973                           postdec2	equ	0xFDD
 23974                           plusw2	equ	0xFDB
 23975                           fsr2h	equ	0xFDA
 23976                           fsr2l	equ	0xFD9
 23977                           status	equ	0xFD8
 23978                           
 23979 ;; *************** function _DecodeNEC *****************
 23980 ;; Defined at:
 23981 ;;		line 548 in file "IR.c"
 23982 ;; Parameters:    Size  Location     Type
 23983 ;;  Nec             4    4[BANK0 ] unsigned long 
 23984 ;;  address         2    8[BANK0 ] PTR unsigned char 
 23985 ;;		 -> UseBluetooth@NecAddress(1), IRaddress(1), 
 23986 ;;  command         2   10[BANK0 ] PTR unsigned char 
 23987 ;;		 -> UseBluetooth@NecCommand(1), IRcommand(1), 
 23988 ;; Auto vars:     Size  Location     Type
 23989 ;;  temp1           1   18[BANK0 ] unsigned char 
 23990 ;;  temp3           1   17[BANK0 ] unsigned char 
 23991 ;;  temp2           1   16[BANK0 ] unsigned char 
 23992 ;; Return value:  Size  Location     Type
 23993 ;;                  1    wreg      unsigned char 
 23994 ;; Registers used:
 23995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23996 ;; Tracked objects:
 23997 ;;		On entry : 0/0
 23998 ;;		On exit  : 0/0
 23999 ;;		Unchanged: 0/0
 24000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24001 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24002 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24003 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24004 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24005 ;;Total ram usage:       15 bytes
 24006 ;; Hardware stack levels used:    1
 24007 ;; Hardware stack levels required when called:    6
 24008 ;; This function calls:
 24009 ;;		_Reverse_Byte
 24010 ;; This function is called by:
 24011 ;;		_UseIRCode
 24012 ;;		_UseBluetooth
 24013 ;; This function uses a non-reentrant model
 24014 ;;
 24015                           
 24016                           	psect	text37
 24017  00983C                     __ptext37:
 24018                           	opt stack 0
 24019  00983C                     _DecodeNEC:
 24020                           	opt stack 23
 24021                           
 24022                           ;IR.c: 550: unsigned char temp1,
 24023                           ;IR.c: 551: temp2,
 24024                           ;IR.c: 552: temp3;
 24025                           ;IR.c: 554: temp1 = ~Reverse_Byte((unsigned char) (Nec & 0x00FF));
 24026                           
 24027                           ; BSR set to: 0
 24028                           ;incstack = 0
 24029  00983C  0100               	movlb	0	; () banked
 24030  00983E  5164               	movf	DecodeNEC@Nec& (0+255),w,b
 24031  009840  EC69  F04B         	call	_Reverse_Byte
 24032  009844  0AFF               	xorlw	255
 24033  009846  0100               	movlb	0	; () banked
 24034  009848  6F72               	movwf	DecodeNEC@temp1& (0+255),b
 24035                           
 24036                           ;IR.c: 555: temp2 = Reverse_Byte((unsigned char) ((Nec & 0xFF00)>> 8));
 24037  00984A  0100               	movlb	0	; () banked
 24038  00984C  5165               	movf	(DecodeNEC@Nec+1)& (0+255),w,b
 24039  00984E  EC69  F04B         	call	_Reverse_Byte
 24040  009852  0100               	movlb	0	; () banked
 24041  009854  6F70               	movwf	DecodeNEC@temp2& (0+255),b
 24042                           
 24043                           ; BSR set to: 0
 24044                           ;IR.c: 556: if(temp1 != temp2)
 24045  009856  0100               	movlb	0	; () banked
 24046  009858  5170               	movf	DecodeNEC@temp2& (0+255),w,b
 24047  00985A  0100               	movlb	0	; () banked
 24048  00985C  1972               	xorwf	DecodeNEC@temp1& (0+255),w,b
 24049  00985E  B4D8               	btfsc	status,2,c
 24050  009860  D002               	goto	l12062
 24051                           
 24052                           ; BSR set to: 0
 24053                           ;IR.c: 557: {
 24054                           ;IR.c: 559: return 0;
 24055  009862  0E00               	movlw	0
 24056                           
 24057                           ; BSR set to: 0
 24058  009864  0012               	return	
 24059  009866                     l12062:
 24060                           
 24061                           ; BSR set to: 0
 24062                           ;IR.c: 560: }
 24063                           ;IR.c: 561: temp1 = ~Reverse_Byte((unsigned char) ((Nec & 0x00FF0000) >> 16));
 24064  009866  0100               	movlb	0	; () banked
 24065  009868  5166               	movf	(DecodeNEC@Nec+2)& (0+255),w,b
 24066  00986A  EC69  F04B         	call	_Reverse_Byte
 24067  00986E  0AFF               	xorlw	255
 24068  009870  0100               	movlb	0	; () banked
 24069  009872  6F72               	movwf	DecodeNEC@temp1& (0+255),b
 24070                           
 24071                           ;IR.c: 562: temp3 = Reverse_Byte((unsigned char) ((Nec & 0xFF000000) >> 24));
 24072  009874  0E00               	movlw	0
 24073  009876  0100               	movlb	0	; () banked
 24074  009878  1564               	andwf	DecodeNEC@Nec& (0+255),w,b
 24075  00987A  0100               	movlb	0	; () banked
 24076  00987C  6F6C               	movwf	??_DecodeNEC& (0+255),b
 24077  00987E  0E00               	movlw	0
 24078  009880  0100               	movlb	0	; () banked
 24079  009882  1565               	andwf	(DecodeNEC@Nec+1)& (0+255),w,b
 24080  009884  0100               	movlb	0	; () banked
 24081  009886  6F6D               	movwf	(??_DecodeNEC+1)& (0+255),b
 24082  009888  0E00               	movlw	0
 24083  00988A  0100               	movlb	0	; () banked
 24084  00988C  1566               	andwf	(DecodeNEC@Nec+2)& (0+255),w,b
 24085  00988E  0100               	movlb	0	; () banked
 24086  009890  6F6E               	movwf	(??_DecodeNEC+2)& (0+255),b
 24087  009892  0EFF               	movlw	255
 24088  009894  0100               	movlb	0	; () banked
 24089  009896  1567               	andwf	(DecodeNEC@Nec+3)& (0+255),w,b
 24090  009898  0100               	movlb	0	; () banked
 24091  00989A  6F6F               	movwf	(??_DecodeNEC+3)& (0+255),b
 24092  00989C  0E19               	movlw	25
 24093  00989E  D006               	goto	u13620
 24094  0098A0                     u13625:
 24095  0098A0  0100               	movlb	0	; () banked
 24096  0098A2  90D8               	bcf	status,0,c
 24097  0098A4  336F               	rrcf	(??_DecodeNEC+3)& (0+255),f,b
 24098  0098A6  336E               	rrcf	(??_DecodeNEC+2)& (0+255),f,b
 24099  0098A8  336D               	rrcf	(??_DecodeNEC+1)& (0+255),f,b
 24100  0098AA  336C               	rrcf	??_DecodeNEC& (0+255),f,b
 24101  0098AC                     u13620:
 24102  0098AC  2EE8               	decfsz	wreg,f,c
 24103  0098AE  D7F8               	goto	u13625
 24104  0098B0  0100               	movlb	0	; () banked
 24105  0098B2  516C               	movf	??_DecodeNEC& (0+255),w,b
 24106  0098B4  EC69  F04B         	call	_Reverse_Byte
 24107  0098B8  0100               	movlb	0	; () banked
 24108  0098BA  6F71               	movwf	DecodeNEC@temp3& (0+255),b
 24109                           
 24110                           ; BSR set to: 0
 24111                           ;IR.c: 563: if(temp1 != temp3)
 24112  0098BC  0100               	movlb	0	; () banked
 24113  0098BE  5171               	movf	DecodeNEC@temp3& (0+255),w,b
 24114  0098C0  0100               	movlb	0	; () banked
 24115  0098C2  1972               	xorwf	DecodeNEC@temp1& (0+255),w,b
 24116  0098C4  B4D8               	btfsc	status,2,c
 24117  0098C6  D002               	goto	l12070
 24118                           
 24119                           ; BSR set to: 0
 24120                           ;IR.c: 564: {
 24121                           ;IR.c: 566: return 0;
 24122  0098C8  0E00               	movlw	0
 24123                           
 24124                           ; BSR set to: 0
 24125  0098CA  0012               	return	
 24126  0098CC                     l12070:
 24127                           
 24128                           ; BSR set to: 0
 24129                           ;IR.c: 567: }
 24130                           ;IR.c: 568: *command = temp2;
 24131  0098CC  C06A  FFD9         	movff	DecodeNEC@command,fsr2l
 24132  0098D0  C06B  FFDA         	movff	DecodeNEC@command+1,fsr2h
 24133  0098D4  C070  FFDF         	movff	DecodeNEC@temp2,indf2
 24134                           
 24135                           ;IR.c: 569: *address = temp3;
 24136  0098D8  C068  FFD9         	movff	DecodeNEC@address,fsr2l
 24137  0098DC  C069  FFDA         	movff	DecodeNEC@address+1,fsr2h
 24138  0098E0  C071  FFDF         	movff	DecodeNEC@temp3,indf2
 24139                           
 24140                           ; BSR set to: 0
 24141                           ;IR.c: 570: return 1;
 24142  0098E4  0E01               	movlw	1
 24143  0098E6  0012               	return	
 24144                           
 24145                           ; BSR set to: 0
 24146                           
 24147                           ; BSR set to: 0
 24148  0098E8  0012               	return		;funcret
 24149  0098EA                     __end_of_DecodeNEC:
 24150                           	opt stack 0
 24151                           tblptru	equ	0xFF8
 24152                           tblptrh	equ	0xFF7
 24153                           tblptrl	equ	0xFF6
 24154                           tablat	equ	0xFF5
 24155                           prodh	equ	0xFF4
 24156                           prodl	equ	0xFF3
 24157                           intcon	equ	0xFF2
 24158                           indf0	equ	0xFEF
 24159                           postinc0	equ	0xFEE
 24160                           plusw0	equ	0xFEB
 24161                           fsr0h	equ	0xFEA
 24162                           fsr0l	equ	0xFE9
 24163                           wreg	equ	0xFE8
 24164                           indf1	equ	0xFE7
 24165                           postdec1	equ	0xFE5
 24166                           fsr1h	equ	0xFE2
 24167                           fsr1l	equ	0xFE1
 24168                           indf2	equ	0xFDF
 24169                           postinc2	equ	0xFDE
 24170                           postdec2	equ	0xFDD
 24171                           plusw2	equ	0xFDB
 24172                           fsr2h	equ	0xFDA
 24173                           fsr2l	equ	0xFD9
 24174                           status	equ	0xFD8
 24175                           
 24176 ;; *************** function _Reverse_Byte *****************
 24177 ;; Defined at:
 24178 ;;		line 436 in file "MISC.c"
 24179 ;; Parameters:    Size  Location     Type
 24180 ;;  This            1    wreg     unsigned char 
 24181 ;; Auto vars:     Size  Location     Type
 24182 ;;  This            1    3[BANK0 ] unsigned char 
 24183 ;;  temp            1    2[BANK0 ] unsigned char 
 24184 ;; Return value:  Size  Location     Type
 24185 ;;                  1    wreg      unsigned char 
 24186 ;; Registers used:
 24187 ;;		wreg, status,2, status,0
 24188 ;; Tracked objects:
 24189 ;;		On entry : 0/0
 24190 ;;		On exit  : 0/0
 24191 ;;		Unchanged: 0/0
 24192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24194 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24195 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24196 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24197 ;;Total ram usage:        4 bytes
 24198 ;; Hardware stack levels used:    1
 24199 ;; Hardware stack levels required when called:    5
 24200 ;; This function calls:
 24201 ;;		Nothing
 24202 ;; This function is called by:
 24203 ;;		_EncodeNEC
 24204 ;;		_DecodeNEC
 24205 ;; This function uses a non-reentrant model
 24206 ;;
 24207                           
 24208                           	psect	text38
 24209  0096D2                     __ptext38:
 24210                           	opt stack 0
 24211  0096D2                     _Reverse_Byte:
 24212                           	opt stack 23
 24213                           
 24214                           ; BSR set to: 0
 24215                           ;incstack = 0
 24216                           ;Reverse_Byte@This stored from wreg
 24217  0096D2  0100               	movlb	0	; () banked
 24218  0096D4  6F63               	movwf	Reverse_Byte@This& (0+255),b
 24219                           
 24220                           ; BSR set to: 0
 24221                           ;MISC.c: 438: unsigned char temp=0;
 24222  0096D6  0E00               	movlw	0
 24223  0096D8  0100               	movlb	0	; () banked
 24224  0096DA  6F62               	movwf	Reverse_Byte@temp& (0+255),b
 24225                           
 24226                           ; BSR set to: 0
 24227                           ;MISC.c: 440: temp += (This & 0x01) << 7;
 24228  0096DC  C063  F060         	movff	Reverse_Byte@This,??_Reverse_Byte
 24229  0096E0  0E01               	movlw	1
 24230  0096E2  0100               	movlb	0	; () banked
 24231  0096E4  1760               	andwf	??_Reverse_Byte& (0+255),f,b
 24232  0096E6  0E00               	movlw	0
 24233  0096E8  B160               	btfsc	??_Reverse_Byte& (0+255),0,b
 24234  0096EA  0E80               	movlw	128
 24235  0096EC  6F60               	movwf	??_Reverse_Byte& (0+255),b
 24236  0096EE  0100               	movlb	0	; () banked
 24237  0096F0  5160               	movf	??_Reverse_Byte& (0+255),w,b
 24238  0096F2  0100               	movlb	0	; () banked
 24239  0096F4  2762               	addwf	Reverse_Byte@temp& (0+255),f,b
 24240                           
 24241                           ; BSR set to: 0
 24242                           ;MISC.c: 441: temp += (This & 0x02) << 5;
 24243  0096F6  C063  F060         	movff	Reverse_Byte@This,??_Reverse_Byte
 24244  0096FA  0E02               	movlw	2
 24245  0096FC  0100               	movlb	0	; () banked
 24246  0096FE  1760               	andwf	??_Reverse_Byte& (0+255),f,b
 24247  009700  0E05               	movlw	5
 24248  009702  0100               	movlb	0	; () banked
 24249  009704  6F61               	movwf	(??_Reverse_Byte+1)& (0+255),b
 24250  009706                     u11435:
 24251  009706  0100               	movlb	0	; () banked
 24252  009708  90D8               	bcf	status,0,c
 24253  00970A  3760               	rlcf	??_Reverse_Byte& (0+255),f,b
 24254  00970C  0100               	movlb	0	; () banked
 24255  00970E  2F61               	decfsz	(??_Reverse_Byte+1)& (0+255),f,b
 24256  009710  D7FA               	goto	u11435
 24257  009712  0100               	movlb	0	; () banked
 24258  009714  5160               	movf	??_Reverse_Byte& (0+255),w,b
 24259  009716  0100               	movlb	0	; () banked
 24260  009718  2762               	addwf	Reverse_Byte@temp& (0+255),f,b
 24261                           
 24262                           ; BSR set to: 0
 24263                           ;MISC.c: 442: temp += (This & 0x04) << 3;
 24264  00971A  C063  F060         	movff	Reverse_Byte@This,??_Reverse_Byte
 24265  00971E  0E04               	movlw	4
 24266  009720  0100               	movlb	0	; () banked
 24267  009722  1760               	andwf	??_Reverse_Byte& (0+255),f,b
 24268  009724  0100               	movlb	0	; () banked
 24269  009726  90D8               	bcf	status,0,c
 24270  009728  3760               	rlcf	??_Reverse_Byte& (0+255),f,b
 24271  00972A  0100               	movlb	0	; () banked
 24272  00972C  90D8               	bcf	status,0,c
 24273  00972E  3760               	rlcf	??_Reverse_Byte& (0+255),f,b
 24274  009730  0100               	movlb	0	; () banked
 24275  009732  90D8               	bcf	status,0,c
 24276  009734  3560               	rlcf	??_Reverse_Byte& (0+255),w,b
 24277  009736  0100               	movlb	0	; () banked
 24278  009738  2762               	addwf	Reverse_Byte@temp& (0+255),f,b
 24279                           
 24280                           ; BSR set to: 0
 24281                           ;MISC.c: 443: temp += (This & 0x08) << 1;
 24282  00973A  C063  F060         	movff	Reverse_Byte@This,??_Reverse_Byte
 24283  00973E  0E08               	movlw	8
 24284  009740  0100               	movlb	0	; () banked
 24285  009742  1760               	andwf	??_Reverse_Byte& (0+255),f,b
 24286  009744  0100               	movlb	0	; () banked
 24287  009746  90D8               	bcf	status,0,c
 24288  009748  3560               	rlcf	??_Reverse_Byte& (0+255),w,b
 24289  00974A  0100               	movlb	0	; () banked
 24290  00974C  2762               	addwf	Reverse_Byte@temp& (0+255),f,b
 24291                           
 24292                           ; BSR set to: 0
 24293                           ;MISC.c: 444: temp += (This & 0x10) >> 1;
 24294  00974E  0100               	movlb	0	; () banked
 24295  009750  90D8               	bcf	status,0,c
 24296  009752  3163               	rrcf	Reverse_Byte@This& (0+255),w,b
 24297  009754  0B08               	andlw	8
 24298  009756  0100               	movlb	0	; () banked
 24299  009758  2762               	addwf	Reverse_Byte@temp& (0+255),f,b
 24300                           
 24301                           ; BSR set to: 0
 24302                           ;MISC.c: 445: temp += (This & 0x20) >> 3;
 24303  00975A  0100               	movlb	0	; () banked
 24304  00975C  3963               	swapf	Reverse_Byte@This& (0+255),w,b
 24305  00975E  46E8               	rlncf	wreg,f,c
 24306  009760  0B1F               	andlw	31
 24307  009762  0B04               	andlw	4
 24308  009764  0100               	movlb	0	; () banked
 24309  009766  2762               	addwf	Reverse_Byte@temp& (0+255),f,b
 24310                           
 24311                           ; BSR set to: 0
 24312                           ;MISC.c: 446: temp += (This & 0x40) >> 5;
 24313  009768  0100               	movlb	0	; () banked
 24314  00976A  3963               	swapf	Reverse_Byte@This& (0+255),w,b
 24315  00976C  42E8               	rrncf	wreg,f,c
 24316  00976E  0B07               	andlw	7
 24317  009770  0B02               	andlw	2
 24318  009772  0100               	movlb	0	; () banked
 24319  009774  2762               	addwf	Reverse_Byte@temp& (0+255),f,b
 24320                           
 24321                           ; BSR set to: 0
 24322                           ;MISC.c: 447: temp += (This & 0x80) >> 7;
 24323  009776  0100               	movlb	0	; () banked
 24324  009778  4563               	rlncf	Reverse_Byte@This& (0+255),w,b
 24325  00977A  0B01               	andlw	1
 24326  00977C  0100               	movlb	0	; () banked
 24327  00977E  2762               	addwf	Reverse_Byte@temp& (0+255),f,b
 24328                           
 24329                           ; BSR set to: 0
 24330                           ;MISC.c: 449: return temp;
 24331  009780  0100               	movlb	0	; () banked
 24332  009782  5162               	movf	Reverse_Byte@temp& (0+255),w,b
 24333  009784  0012               	return	
 24334                           
 24335                           ; BSR set to: 0
 24336                           
 24337                           ; BSR set to: 0
 24338  009786  0012               	return		;funcret
 24339  009788                     __end_of_Reverse_Byte:
 24340                           	opt stack 0
 24341                           tblptru	equ	0xFF8
 24342                           tblptrh	equ	0xFF7
 24343                           tblptrl	equ	0xFF6
 24344                           tablat	equ	0xFF5
 24345                           prodh	equ	0xFF4
 24346                           prodl	equ	0xFF3
 24347                           intcon	equ	0xFF2
 24348                           indf0	equ	0xFEF
 24349                           postinc0	equ	0xFEE
 24350                           plusw0	equ	0xFEB
 24351                           fsr0h	equ	0xFEA
 24352                           fsr0l	equ	0xFE9
 24353                           wreg	equ	0xFE8
 24354                           indf1	equ	0xFE7
 24355                           postdec1	equ	0xFE5
 24356                           fsr1h	equ	0xFE2
 24357                           fsr1l	equ	0xFE1
 24358                           indf2	equ	0xFDF
 24359                           postinc2	equ	0xFDE
 24360                           postdec2	equ	0xFDD
 24361                           plusw2	equ	0xFDB
 24362                           fsr2h	equ	0xFDA
 24363                           fsr2l	equ	0xFD9
 24364                           status	equ	0xFD8
 24365                           
 24366 ;; *************** function _Init_System *****************
 24367 ;; Defined at:
 24368 ;;		line 107 in file "user.c"
 24369 ;; Parameters:    Size  Location     Type
 24370 ;;		None
 24371 ;; Auto vars:     Size  Location     Type
 24372 ;;  buf            50  187[BANK1 ] unsigned char [50]
 24373 ;; Return value:  Size  Location     Type
 24374 ;;		None               void
 24375 ;; Registers used:
 24376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24377 ;; Tracked objects:
 24378 ;;		On entry : 0/0
 24379 ;;		On exit  : 0/0
 24380 ;;		Unchanged: 0/0
 24381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24383 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24385 ;;      Totals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24386 ;;Total ram usage:       50 bytes
 24387 ;; Hardware stack levels used:    1
 24388 ;; Hardware stack levels required when called:   12
 24389 ;; This function calls:
 24390 ;;		_BufferCopy
 24391 ;;		_EEPROMinitialized
 24392 ;;		_InitADC
 24393 ;;		_InitBluetooth
 24394 ;;		_InitIR
 24395 ;;		_InitTimers
 24396 ;;		_InitUART
 24397 ;;		_SetEEPROM2
 24398 ;;		_SetEEPROMdefault
 24399 ;;		_SyncEEPROMToGlobal
 24400 ;;		_SyncGlobalToEEPROM
 24401 ;;		_cleanBuffer
 24402 ;;		_sprintf
 24403 ;; This function is called by:
 24404 ;;		_main
 24405 ;; This function uses a non-reentrant model
 24406 ;;
 24407                           
 24408                           	psect	text39
 24409  007BC2                     __ptext39:
 24410                           	opt stack 0
 24411  007BC2                     _Init_System:
 24412                           	opt stack 18
 24413                           
 24414                           ;user.c: 109: unsigned char buf[50];
 24415                           ;user.c: 111: cleanBuffer(ReceivedString, 100);
 24416                           
 24417                           ; BSR set to: 0
 24418                           ;incstack = 0
 24419  007BC2  0E78               	movlw	low _ReceivedString
 24420  007BC4  0100               	movlb	0	; () banked
 24421  007BC6  6F60               	movwf	cleanBuffer@data& (0+255),b
 24422  007BC8  0E04               	movlw	high _ReceivedString
 24423  007BCA  0100               	movlb	0	; () banked
 24424  007BCC  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 24425  007BCE  0E00               	movlw	0
 24426  007BD0  0100               	movlb	0	; () banked
 24427  007BD2  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 24428  007BD4  0E64               	movlw	100
 24429  007BD6  6F62               	movwf	cleanBuffer@count& (0+255),b
 24430  007BD8  ECE6  F050         	call	_cleanBuffer	;wreg free
 24431                           
 24432                           ;user.c: 114: IPR1bits.RCIP = 0;
 24433  007BDC  9A9F               	bcf	3999,5,c	;volatile
 24434                           
 24435                           ;user.c: 115: INTCON2bits.RBIP = 1;
 24436  007BDE  80F1               	bsf	intcon2,0,c	;volatile
 24437                           
 24438                           ;user.c: 116: INTCON2bits.TMR0IP = 1;
 24439  007BE0  84F1               	bsf	intcon2,2,c	;volatile
 24440                           
 24441                           ;user.c: 117: IPR1bits.TMR2IP = 1;
 24442  007BE2  829F               	bsf	3999,1,c	;volatile
 24443                           
 24444                           ;user.c: 118: IPR1bits.TMR1IP = 0;
 24445  007BE4  909F               	bcf	3999,0,c	;volatile
 24446                           
 24447                           ;user.c: 119: IPR2bits.TMR3IP = 1;
 24448  007BE6  82A2               	bsf	4002,1,c	;volatile
 24449                           
 24450                           ;user.c: 121: cleanBuffer(BluetoothFirmware1,30);
 24451  007BE8  0E00               	movlw	low _BluetoothFirmware1
 24452  007BEA  0100               	movlb	0	; () banked
 24453  007BEC  6F60               	movwf	cleanBuffer@data& (0+255),b
 24454  007BEE  0E05               	movlw	high _BluetoothFirmware1
 24455  007BF0  0100               	movlb	0	; () banked
 24456  007BF2  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 24457  007BF4  0E00               	movlw	0
 24458  007BF6  0100               	movlb	0	; () banked
 24459  007BF8  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 24460  007BFA  0E1E               	movlw	30
 24461  007BFC  6F62               	movwf	cleanBuffer@count& (0+255),b
 24462  007BFE  ECE6  F050         	call	_cleanBuffer	;wreg free
 24463                           
 24464                           ;user.c: 122: cleanBuffer(BluetoothFirmware2,30);
 24465  007C02  0E1E               	movlw	low _BluetoothFirmware2
 24466  007C04  0100               	movlb	0	; () banked
 24467  007C06  6F60               	movwf	cleanBuffer@data& (0+255),b
 24468  007C08  0E05               	movlw	high _BluetoothFirmware2
 24469  007C0A  0100               	movlb	0	; () banked
 24470  007C0C  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 24471  007C0E  0E00               	movlw	0
 24472  007C10  0100               	movlb	0	; () banked
 24473  007C12  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 24474  007C14  0E1E               	movlw	30
 24475  007C16  6F62               	movwf	cleanBuffer@count& (0+255),b
 24476  007C18  ECE6  F050         	call	_cleanBuffer	;wreg free
 24477                           
 24478                           ;user.c: 124: sprintf(buf,"System must be");
 24479  007C1C  0EBB               	movlw	low Init_System@buf
 24480  007C1E  0100               	movlb	0	; () banked
 24481  007C20  6FAE               	movwf	sprintf@sp& (0+255),b
 24482  007C22  0E01               	movlw	high Init_System@buf
 24483  007C24  0100               	movlb	0	; () banked
 24484  007C26  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 24485  007C28  0E60               	movlw	low STR_4
 24486  007C2A  0100               	movlb	0	; () banked
 24487  007C2C  6FB0               	movwf	sprintf@f& (0+255),b
 24488  007C2E  0EFE               	movlw	high STR_4
 24489  007C30  0100               	movlb	0	; () banked
 24490  007C32  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 24491  007C34  EC27  F014         	call	_sprintf	;wreg free
 24492                           
 24493                           ;user.c: 125: BufferCopy(buf, BluetoothFirmware1, 30, 0);
 24494  007C38  0EBB               	movlw	low Init_System@buf
 24495  007C3A  0100               	movlb	0	; () banked
 24496  007C3C  6F68               	movwf	BufferCopy@from& (0+255),b
 24497  007C3E  0E01               	movlw	high Init_System@buf
 24498  007C40  0100               	movlb	0	; () banked
 24499  007C42  6F69               	movwf	(BufferCopy@from+1)& (0+255),b
 24500  007C44  0E00               	movlw	low _BluetoothFirmware1
 24501  007C46  0100               	movlb	0	; () banked
 24502  007C48  6F6A               	movwf	BufferCopy@to& (0+255),b
 24503  007C4A  0E05               	movlw	high _BluetoothFirmware1
 24504  007C4C  0100               	movlb	0	; () banked
 24505  007C4E  6F6B               	movwf	(BufferCopy@to+1)& (0+255),b
 24506  007C50  0E1E               	movlw	30
 24507  007C52  0100               	movlb	0	; () banked
 24508  007C54  6F6C               	movwf	BufferCopy@count& (0+255),b
 24509  007C56  0E00               	movlw	0
 24510  007C58  0100               	movlb	0	; () banked
 24511  007C5A  6F6D               	movwf	BufferCopy@shift& (0+255),b
 24512  007C5C  ECDF  F04E         	call	_BufferCopy	;wreg free
 24513                           
 24514                           ;user.c: 126: sprintf(buf,"RESET to read version!");
 24515  007C60  0EBB               	movlw	low Init_System@buf
 24516  007C62  0100               	movlb	0	; () banked
 24517  007C64  6FAE               	movwf	sprintf@sp& (0+255),b
 24518  007C66  0E01               	movlw	high Init_System@buf
 24519  007C68  0100               	movlb	0	; () banked
 24520  007C6A  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 24521  007C6C  0EF6               	movlw	low STR_5
 24522  007C6E  0100               	movlb	0	; () banked
 24523  007C70  6FB0               	movwf	sprintf@f& (0+255),b
 24524  007C72  0EFB               	movlw	high STR_5
 24525  007C74  0100               	movlb	0	; () banked
 24526  007C76  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 24527  007C78  EC27  F014         	call	_sprintf	;wreg free
 24528                           
 24529                           ;user.c: 127: BufferCopy(buf, BluetoothFirmware2, 30, 0);
 24530  007C7C  0EBB               	movlw	low Init_System@buf
 24531  007C7E  0100               	movlb	0	; () banked
 24532  007C80  6F68               	movwf	BufferCopy@from& (0+255),b
 24533  007C82  0E01               	movlw	high Init_System@buf
 24534  007C84  0100               	movlb	0	; () banked
 24535  007C86  6F69               	movwf	(BufferCopy@from+1)& (0+255),b
 24536  007C88  0E1E               	movlw	low _BluetoothFirmware2
 24537  007C8A  0100               	movlb	0	; () banked
 24538  007C8C  6F6A               	movwf	BufferCopy@to& (0+255),b
 24539  007C8E  0E05               	movlw	high _BluetoothFirmware2
 24540  007C90  0100               	movlb	0	; () banked
 24541  007C92  6F6B               	movwf	(BufferCopy@to+1)& (0+255),b
 24542  007C94  0E1E               	movlw	30
 24543  007C96  0100               	movlb	0	; () banked
 24544  007C98  6F6C               	movwf	BufferCopy@count& (0+255),b
 24545  007C9A  0E00               	movlw	0
 24546  007C9C  0100               	movlb	0	; () banked
 24547  007C9E  6F6D               	movwf	BufferCopy@shift& (0+255),b
 24548  007CA0  ECDF  F04E         	call	_BufferCopy	;wreg free
 24549                           
 24550                           ;user.c: 130: RCONbits.IPEN = 1;
 24551  007CA4  8ED0               	bsf	4048,7,c	;volatile
 24552                           
 24553                           ;user.c: 131: INTCONbits.PEIE = 1;
 24554  007CA6  8CF2               	bsf	intcon,6,c	;volatile
 24555                           
 24556                           ;user.c: 132: INTCONbits.GIE = 1;
 24557  007CA8  8EF2               	bsf	intcon,7,c	;volatile
 24558                           
 24559                           ;user.c: 134: SyncEEPROMToGlobal();
 24560  007CAA  EC86  F03A         	call	_SyncEEPROMToGlobal	;wreg free
 24561                           
 24562                           ;user.c: 135: if(!EEPROMinitialized())
 24563  007CAE  ECA6  F054         	call	_EEPROMinitialized	;wreg free
 24564  007CB2  0900               	iorlw	0
 24565  007CB4  A4D8               	btfss	status,2,c
 24566  007CB6  D008               	goto	l12352
 24567                           
 24568                           ;user.c: 136: {
 24569                           ;user.c: 137: SetEEPROMdefault();
 24570  007CB8  EC9B  F045         	call	_SetEEPROMdefault	;wreg free
 24571                           
 24572                           ;user.c: 138: Global1.EEPROMinitFlag = 59;
 24573  007CBC  0E3B               	movlw	59
 24574  007CBE  0102               	movlb	2	; () banked
 24575  007CC0  6FF2               	movwf	(_Global1+29)& (0+255),b
 24576                           
 24577                           ; BSR set to: 2
 24578                           ;user.c: 139: SyncGlobalToEEPROM();
 24579  007CC2  EC69  F04D         	call	_SyncGlobalToEEPROM	;wreg free
 24580  007CC6  D000               	goto	l12352
 24581  007CC8                     l12352:
 24582                           
 24583                           ;user.c: 140: }
 24584                           ;user.c: 142: if(Global2.SerialNumber == 0xFFFFFFFF)
 24585  007CC8  0102               	movlb	2	; () banked
 24586  007CCA  29D1               	incf	(_Global2+60)& (0+255),w,b
 24587  007CCC  E12A               	bnz	l12360
 24588  007CCE  0102               	movlb	2	; () banked
 24589  007CD0  29D2               	incf	(_Global2+61)& (0+255),w,b
 24590  007CD2  E127               	bnz	l12360
 24591  007CD4  0102               	movlb	2	; () banked
 24592  007CD6  29D3               	incf	(_Global2+62)& (0+255),w,b
 24593  007CD8  E124               	bnz	l12360
 24594  007CDA  0102               	movlb	2	; () banked
 24595  007CDC  29D4               	incf	(_Global2+63)& (0+255),w,b
 24596  007CDE  A4D8               	btfss	status,2,c
 24597  007CE0  D020               	goto	l12360
 24598                           
 24599                           ; BSR set to: 2
 24600                           ;user.c: 143: {
 24601                           ;user.c: 145: Global2.SerialNumber = 0;
 24602  007CE2  0E00               	movlw	0
 24603  007CE4  0102               	movlb	2	; () banked
 24604  007CE6  6FD1               	movwf	(_Global2+60)& (0+255),b
 24605  007CE8  0E00               	movlw	0
 24606  007CEA  6FD2               	movwf	(_Global2+61)& (0+255),b
 24607  007CEC  0E00               	movlw	0
 24608  007CEE  6FD3               	movwf	(_Global2+62)& (0+255),b
 24609  007CF0  0E00               	movlw	0
 24610  007CF2  6FD4               	movwf	(_Global2+63)& (0+255),b
 24611                           
 24612                           ; BSR set to: 2
 24613                           ;user.c: 146: SetEEPROM2(Global2,0x00000002);
 24614  007CF4  EE22  F095         	lfsr	2,_Global2
 24615  007CF8  EE00  F096         	lfsr	0,SetEEPROM2@Temp
 24616  007CFC  0E3F               	movlw	63
 24617  007CFE                     u13881:
 24618  007CFE  CFDB FFEB          	movff	plusw2,plusw0
 24619  007D02  06E8               	decf	wreg,f,c
 24620  007D04  E2FC               	bc	u13881
 24621  007D06  0E02               	movlw	2
 24622  007D08  0100               	movlb	0	; () banked
 24623  007D0A  6FD6               	movwf	SetEEPROM2@burn& (0+255),b
 24624  007D0C  0E00               	movlw	0
 24625  007D0E  6FD7               	movwf	(SetEEPROM2@burn+1)& (0+255),b
 24626  007D10  0E00               	movlw	0
 24627  007D12  6FD8               	movwf	(SetEEPROM2@burn+2)& (0+255),b
 24628  007D14  0E00               	movlw	0
 24629  007D16  6FD9               	movwf	(SetEEPROM2@burn+3)& (0+255),b
 24630  007D18  ECB5  F046         	call	_SetEEPROM2	;wreg free
 24631                           
 24632                           ;user.c: 147: SyncEEPROMToGlobal();
 24633  007D1C  EC86  F03A         	call	_SyncEEPROMToGlobal	;wreg free
 24634  007D20  D000               	goto	l12360
 24635  007D22                     l12360:
 24636                           
 24637                           ;user.c: 148: }
 24638                           ;user.c: 150: InitADC();
 24639  007D22  EC7B  F054         	call	_InitADC	;wreg free
 24640                           
 24641                           ;user.c: 151: InitIR();
 24642  007D26  ECBC  F051         	call	_InitIR	;wreg free
 24643                           
 24644                           ;user.c: 153: InitUART(115200);
 24645  007D2A  0E00               	movlw	0
 24646  007D2C  0100               	movlb	0	; () banked
 24647  007D2E  6FB5               	movwf	InitUART@Baud& (0+255),b
 24648  007D30  0EC2               	movlw	194
 24649  007D32  6FB6               	movwf	(InitUART@Baud+1)& (0+255),b
 24650  007D34  0E01               	movlw	1
 24651  007D36  6FB7               	movwf	(InitUART@Baud+2)& (0+255),b
 24652  007D38  0E00               	movlw	0
 24653  007D3A  6FB8               	movwf	(InitUART@Baud+3)& (0+255),b
 24654  007D3C  EC2A  F046         	call	_InitUART	;wreg free
 24655                           
 24656                           ;user.c: 154: InitBluetooth();
 24657  007D40  EC1B  F050         	call	_InitBluetooth	;wreg free
 24658                           
 24659                           ;user.c: 156: InitTimers();
 24660  007D44  EC9C  F054         	call	_InitTimers	;wreg free
 24661  007D48  0012               	return		;funcret
 24662  007D4A                     __end_of_Init_System:
 24663                           	opt stack 0
 24664                           tblptru	equ	0xFF8
 24665                           tblptrh	equ	0xFF7
 24666                           tblptrl	equ	0xFF6
 24667                           tablat	equ	0xFF5
 24668                           prodh	equ	0xFF4
 24669                           prodl	equ	0xFF3
 24670                           intcon	equ	0xFF2
 24671                           intcon2	equ	0xFF1
 24672                           indf0	equ	0xFEF
 24673                           postinc0	equ	0xFEE
 24674                           plusw0	equ	0xFEB
 24675                           fsr0h	equ	0xFEA
 24676                           fsr0l	equ	0xFE9
 24677                           wreg	equ	0xFE8
 24678                           indf1	equ	0xFE7
 24679                           postdec1	equ	0xFE5
 24680                           fsr1h	equ	0xFE2
 24681                           fsr1l	equ	0xFE1
 24682                           indf2	equ	0xFDF
 24683                           postinc2	equ	0xFDE
 24684                           postdec2	equ	0xFDD
 24685                           plusw2	equ	0xFDB
 24686                           fsr2h	equ	0xFDA
 24687                           fsr2l	equ	0xFD9
 24688                           status	equ	0xFD8
 24689                           
 24690 ;; *************** function _SyncEEPROMToGlobal *****************
 24691 ;; Defined at:
 24692 ;;		line 346 in file "EEPROM.c"
 24693 ;; Parameters:    Size  Location     Type
 24694 ;;		None
 24695 ;; Auto vars:     Size  Location     Type
 24696 ;;  Temp2          64   49[BANK0 ] struct EEdata2
 24697 ;;  Temp1          30  114[BANK0 ] struct EEdata
 24698 ;;  j               1  145[BANK0 ] unsigned char 
 24699 ;;  i               1  144[BANK0 ] unsigned char 
 24700 ;;  k               1  113[BANK0 ] unsigned char 
 24701 ;; Return value:  Size  Location     Type
 24702 ;;		None               void
 24703 ;; Registers used:
 24704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24705 ;; Tracked objects:
 24706 ;;		On entry : 0/0
 24707 ;;		On exit  : 0/0
 24708 ;;		Unchanged: 0/0
 24709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24711 ;;      Locals:         0      97       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24712 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24713 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24714 ;;Total ram usage:      101 bytes
 24715 ;; Hardware stack levels used:    1
 24716 ;; Hardware stack levels required when called:    8
 24717 ;; This function calls:
 24718 ;;		_GetEEPROM1
 24719 ;;		_GetEEPROM2
 24720 ;; This function is called by:
 24721 ;;		_Init_System
 24722 ;;		_UseBluetooth
 24723 ;; This function uses a non-reentrant model
 24724 ;;
 24725                           
 24726                           	psect	text40
 24727  00750C                     __ptext40:
 24728                           	opt stack 0
 24729  00750C                     _SyncEEPROMToGlobal:
 24730                           	opt stack 21
 24731                           
 24732                           ;EEPROM.c: 348: unsigned char i,j,k;
 24733                           ;EEPROM.c: 349: GBLdata1 Temp1;
 24734                           ;EEPROM.c: 350: GBLdata2 Temp2;
 24735                           ;EEPROM.c: 352: GetEEPROM1(&Temp1);
 24736                           
 24737                           ;incstack = 0
 24738  00750C  0ED2               	movlw	low SyncEEPROMToGlobal@Temp1
 24739  00750E  0100               	movlb	0	; () banked
 24740  007510  6F85               	movwf	GetEEPROM1@Temp& (0+255),b
 24741  007512  0E00               	movlw	high SyncEEPROMToGlobal@Temp1
 24742  007514  0100               	movlb	0	; () banked
 24743  007516  6F86               	movwf	(GetEEPROM1@Temp+1)& (0+255),b
 24744  007518  ECA2  F048         	call	_GetEEPROM1	;wreg free
 24745                           
 24746                           ;EEPROM.c: 353: GetEEPROM2(&Temp2);
 24747  00751C  0E91               	movlw	low SyncEEPROMToGlobal@Temp2
 24748  00751E  0100               	movlb	0	; () banked
 24749  007520  6F85               	movwf	GetEEPROM2@Temp& (0+255),b
 24750  007522  0E00               	movlw	high SyncEEPROMToGlobal@Temp2
 24751  007524  0100               	movlb	0	; () banked
 24752  007526  6F86               	movwf	(GetEEPROM2@Temp+1)& (0+255),b
 24753  007528  EC45  F04A         	call	_GetEEPROM2	;wreg free
 24754                           
 24755                           ;EEPROM.c: 355: Global1.BlueToothFlag = Temp1.BlueToothFlag;
 24756  00752C  C0D2  F2D5         	movff	SyncEEPROMToGlobal@Temp1,_Global1
 24757                           
 24758                           ;EEPROM.c: 356: Global1.SWNECcode = Temp1.SWNECcode;
 24759  007530  C0D3  F2D6         	movff	SyncEEPROMToGlobal@Temp1+1,_Global1+1
 24760  007534  C0D4  F2D7         	movff	SyncEEPROMToGlobal@Temp1+2,_Global1+2
 24761  007538  C0D5  F2D8         	movff	SyncEEPROMToGlobal@Temp1+3,_Global1+3
 24762  00753C  C0D6  F2D9         	movff	SyncEEPROMToGlobal@Temp1+4,_Global1+4
 24763                           
 24764                           ;EEPROM.c: 357: Global1.EEPROMinitFlag = Temp1.EEPROMinitFlag;
 24765  007540  C0EF  F2F2         	movff	SyncEEPROMToGlobal@Temp1+29,_Global1+29
 24766                           
 24767                           ;EEPROM.c: 358: for(i=0; i< 12; i++)
 24768  007544  0E00               	movlw	0
 24769  007546  0100               	movlb	0	; () banked
 24770  007548  6FF0               	movwf	SyncEEPROMToGlobal@i& (0+255),b
 24771  00754A  D04F               	goto	l11272
 24772                           
 24773                           ; BSR set to: 0
 24774                           
 24775                           ; BSR set to: 0
 24776  00754C  D052               	goto	l1147
 24777  00754E                     l11258:
 24778                           
 24779                           ; BSR set to: 0
 24780                           ;EEPROM.c: 359: {
 24781                           ;EEPROM.c: 360: for(j=0; j < 2; j++)
 24782  00754E  0E00               	movlw	0
 24783  007550  0100               	movlb	0	; () banked
 24784  007552  6FF1               	movwf	SyncEEPROMToGlobal@j& (0+255),b
 24785  007554                     l11260:
 24786                           
 24787                           ; BSR set to: 0
 24788  007554  0E01               	movlw	1
 24789  007556  0100               	movlb	0	; () banked
 24790  007558  65F1               	cpfsgt	SyncEEPROMToGlobal@j& (0+255),b
 24791  00755A  D001               	goto	l11264
 24792                           
 24793                           ; BSR set to: 0
 24794  00755C  D044               	goto	l11270
 24795  00755E                     l11264:
 24796                           
 24797                           ; BSR set to: 0
 24798                           ;EEPROM.c: 361: {
 24799                           ;EEPROM.c: 362: Global1.RemoteButtonNEC[i][j] = Temp1.RemoteButtonNEC[i][j];
 24800  00755E  0100               	movlb	0	; () banked
 24801  007560  51F0               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 24802  007562  0D02               	mullw	2
 24803  007564  0ED2               	movlw	low SyncEEPROMToGlobal@Temp1
 24804  007566  0100               	movlb	0	; () banked
 24805  007568  6F8D               	movwf	??_SyncEEPROMToGlobal& (0+255),b
 24806  00756A  0E00               	movlw	high SyncEEPROMToGlobal@Temp1
 24807  00756C  0100               	movlb	0	; () banked
 24808  00756E  6F8E               	movwf	(??_SyncEEPROMToGlobal+1)& (0+255),b
 24809  007570  50F3               	movf	prodl,w,c
 24810  007572  0100               	movlb	0	; () banked
 24811  007574  278D               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 24812  007576  50F4               	movf	prodh,w,c
 24813  007578  0100               	movlb	0	; () banked
 24814  00757A  238E               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 24815  00757C  0100               	movlb	0	; () banked
 24816  00757E  51F1               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 24817  007580  0D01               	mullw	1
 24818  007582  50F3               	movf	prodl,w,c
 24819  007584  0100               	movlb	0	; () banked
 24820  007586  278D               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 24821  007588  50F4               	movf	prodh,w,c
 24822  00758A  0100               	movlb	0	; () banked
 24823  00758C  238E               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 24824  00758E  0E05               	movlw	5
 24825  007590  0100               	movlb	0	; () banked
 24826  007592  258D               	addwf	??_SyncEEPROMToGlobal& (0+255),w,b
 24827  007594  6ED9               	movwf	fsr2l,c
 24828  007596  0E00               	movlw	0
 24829  007598  0100               	movlb	0	; () banked
 24830  00759A  218E               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),w,b
 24831  00759C  6EDA               	movwf	fsr2h,c
 24832  00759E  0100               	movlb	0	; () banked
 24833  0075A0  51F0               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 24834  0075A2  0D02               	mullw	2
 24835  0075A4  0ED5               	movlw	low _Global1
 24836  0075A6  0100               	movlb	0	; () banked
 24837  0075A8  6F8F               	movwf	(??_SyncEEPROMToGlobal+2)& (0+255),b
 24838  0075AA  0E02               	movlw	high _Global1
 24839  0075AC  0100               	movlb	0	; () banked
 24840  0075AE  6F90               	movwf	(??_SyncEEPROMToGlobal+3)& (0+255),b
 24841  0075B0  0E05               	movlw	5
 24842  0075B2  0100               	movlb	0	; () banked
 24843  0075B4  278F               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 24844  0075B6  0E00               	movlw	0
 24845  0075B8  2390               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 24846  0075BA  50F3               	movf	prodl,w,c
 24847  0075BC  0100               	movlb	0	; () banked
 24848  0075BE  278F               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 24849  0075C0  50F4               	movf	prodh,w,c
 24850  0075C2  0100               	movlb	0	; () banked
 24851  0075C4  2390               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 24852  0075C6  0100               	movlb	0	; () banked
 24853  0075C8  51F1               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 24854  0075CA  0D01               	mullw	1
 24855  0075CC  50F3               	movf	prodl,w,c
 24856  0075CE  0100               	movlb	0	; () banked
 24857  0075D0  258F               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),w,b
 24858  0075D2  6EE1               	movwf	fsr1l,c
 24859  0075D4  50F4               	movf	prodh,w,c
 24860  0075D6  0100               	movlb	0	; () banked
 24861  0075D8  2190               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),w,b
 24862  0075DA  6EE2               	movwf	fsr1h,c
 24863  0075DC  CFDF FFE7          	movff	indf2,indf1
 24864                           
 24865                           ; BSR set to: 0
 24866  0075E0  0100               	movlb	0	; () banked
 24867  0075E2  2BF1               	incf	SyncEEPROMToGlobal@j& (0+255),f,b
 24868  0075E4  D7B7               	goto	l11260
 24869  0075E6                     l11270:
 24870                           
 24871                           ; BSR set to: 0
 24872  0075E6  0100               	movlb	0	; () banked
 24873  0075E8  2BF0               	incf	SyncEEPROMToGlobal@i& (0+255),f,b
 24874  0075EA                     l11272:
 24875                           
 24876                           ; BSR set to: 0
 24877  0075EA  0E0B               	movlw	11
 24878  0075EC  0100               	movlb	0	; () banked
 24879  0075EE  65F0               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 24880  0075F0  D7AE               	goto	l11258
 24881  0075F2                     l1147:
 24882                           
 24883                           ; BSR set to: 0
 24884                           ;EEPROM.c: 363: }
 24885                           ;EEPROM.c: 364: }
 24886                           ;EEPROM.c: 365: Global1.EEPROMinitFlag = Temp1.EEPROMinitFlag;
 24887  0075F2  C0EF  F2F2         	movff	SyncEEPROMToGlobal@Temp1+29,_Global1+29
 24888                           
 24889                           ; BSR set to: 0
 24890                           ;EEPROM.c: 366: for(i=0; i< 10; i++)
 24891  0075F6  0E00               	movlw	0
 24892  0075F8  0100               	movlb	0	; () banked
 24893  0075FA  6FF0               	movwf	SyncEEPROMToGlobal@i& (0+255),b
 24894  0075FC  D061               	goto	l11304
 24895                           
 24896                           ; BSR set to: 0
 24897                           
 24898                           ; BSR set to: 0
 24899  0075FE  D064               	goto	l1151
 24900  007600                     l11280:
 24901                           
 24902                           ; BSR set to: 0
 24903                           ;EEPROM.c: 367: {
 24904                           ;EEPROM.c: 368: for(j=0; j < 3; j++)
 24905  007600  0E00               	movlw	0
 24906  007602  0100               	movlb	0	; () banked
 24907  007604  6FF1               	movwf	SyncEEPROMToGlobal@j& (0+255),b
 24908  007606                     l11282:
 24909                           
 24910                           ; BSR set to: 0
 24911  007606  0E02               	movlw	2
 24912  007608  0100               	movlb	0	; () banked
 24913  00760A  65F1               	cpfsgt	SyncEEPROMToGlobal@j& (0+255),b
 24914  00760C  D001               	goto	l11286
 24915                           
 24916                           ; BSR set to: 0
 24917  00760E  D056               	goto	l11302
 24918  007610                     l11286:
 24919                           
 24920                           ; BSR set to: 0
 24921                           ;EEPROM.c: 369: {
 24922                           ;EEPROM.c: 370: for(k=0; k < 2; k++)
 24923  007610  0E00               	movlw	0
 24924  007612  0100               	movlb	0	; () banked
 24925  007614  6FD1               	movwf	SyncEEPROMToGlobal@k& (0+255),b
 24926  007616                     l11288:
 24927                           
 24928                           ; BSR set to: 0
 24929  007616  0E01               	movlw	1
 24930  007618  0100               	movlb	0	; () banked
 24931  00761A  65D1               	cpfsgt	SyncEEPROMToGlobal@k& (0+255),b
 24932  00761C  D001               	goto	l11292
 24933                           
 24934                           ; BSR set to: 0
 24935  00761E  D04B               	goto	l11298
 24936  007620                     l11292:
 24937                           
 24938                           ; BSR set to: 0
 24939                           ;EEPROM.c: 371: {
 24940                           ;EEPROM.c: 372: Global2.RemoteButtonRF[i][j][k] = Temp2.RemoteButtonRF[i][j][k];
 24941  007620  0100               	movlb	0	; () banked
 24942  007622  51F0               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 24943  007624  0D06               	mullw	6
 24944  007626  0E91               	movlw	low SyncEEPROMToGlobal@Temp2
 24945  007628  0100               	movlb	0	; () banked
 24946  00762A  6F8D               	movwf	??_SyncEEPROMToGlobal& (0+255),b
 24947  00762C  0E00               	movlw	high SyncEEPROMToGlobal@Temp2
 24948  00762E  0100               	movlb	0	; () banked
 24949  007630  6F8E               	movwf	(??_SyncEEPROMToGlobal+1)& (0+255),b
 24950  007632  50F3               	movf	prodl,w,c
 24951  007634  0100               	movlb	0	; () banked
 24952  007636  278D               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 24953  007638  50F4               	movf	prodh,w,c
 24954  00763A  0100               	movlb	0	; () banked
 24955  00763C  238E               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 24956  00763E  0100               	movlb	0	; () banked
 24957  007640  51F1               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 24958  007642  0D02               	mullw	2
 24959  007644  50F3               	movf	prodl,w,c
 24960  007646  0100               	movlb	0	; () banked
 24961  007648  278D               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 24962  00764A  50F4               	movf	prodh,w,c
 24963  00764C  0100               	movlb	0	; () banked
 24964  00764E  238E               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 24965  007650  0100               	movlb	0	; () banked
 24966  007652  51D1               	movf	SyncEEPROMToGlobal@k& (0+255),w,b
 24967  007654  0D01               	mullw	1
 24968  007656  50F3               	movf	prodl,w,c
 24969  007658  0100               	movlb	0	; () banked
 24970  00765A  258D               	addwf	??_SyncEEPROMToGlobal& (0+255),w,b
 24971  00765C  6ED9               	movwf	fsr2l,c
 24972  00765E  50F4               	movf	prodh,w,c
 24973  007660  0100               	movlb	0	; () banked
 24974  007662  218E               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),w,b
 24975  007664  6EDA               	movwf	fsr2h,c
 24976  007666  0100               	movlb	0	; () banked
 24977  007668  51F0               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 24978  00766A  0D06               	mullw	6
 24979  00766C  0E95               	movlw	low _Global2
 24980  00766E  0100               	movlb	0	; () banked
 24981  007670  6F8F               	movwf	(??_SyncEEPROMToGlobal+2)& (0+255),b
 24982  007672  0E02               	movlw	high _Global2
 24983  007674  0100               	movlb	0	; () banked
 24984  007676  6F90               	movwf	(??_SyncEEPROMToGlobal+3)& (0+255),b
 24985  007678  50F3               	movf	prodl,w,c
 24986  00767A  0100               	movlb	0	; () banked
 24987  00767C  278F               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 24988  00767E  50F4               	movf	prodh,w,c
 24989  007680  0100               	movlb	0	; () banked
 24990  007682  2390               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 24991  007684  0100               	movlb	0	; () banked
 24992  007686  51F1               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 24993  007688  0D02               	mullw	2
 24994  00768A  50F3               	movf	prodl,w,c
 24995  00768C  0100               	movlb	0	; () banked
 24996  00768E  278F               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 24997  007690  50F4               	movf	prodh,w,c
 24998  007692  0100               	movlb	0	; () banked
 24999  007694  2390               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 25000  007696  0100               	movlb	0	; () banked
 25001  007698  51D1               	movf	SyncEEPROMToGlobal@k& (0+255),w,b
 25002  00769A  0D01               	mullw	1
 25003  00769C  50F3               	movf	prodl,w,c
 25004  00769E  0100               	movlb	0	; () banked
 25005  0076A0  258F               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),w,b
 25006  0076A2  6EE1               	movwf	fsr1l,c
 25007  0076A4  50F4               	movf	prodh,w,c
 25008  0076A6  0100               	movlb	0	; () banked
 25009  0076A8  2190               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),w,b
 25010  0076AA  6EE2               	movwf	fsr1h,c
 25011  0076AC  CFDF FFE7          	movff	indf2,indf1
 25012                           
 25013                           ; BSR set to: 0
 25014  0076B0  0100               	movlb	0	; () banked
 25015  0076B2  2BD1               	incf	SyncEEPROMToGlobal@k& (0+255),f,b
 25016  0076B4  D7B0               	goto	l11288
 25017  0076B6                     l11298:
 25018                           
 25019                           ; BSR set to: 0
 25020  0076B6  0100               	movlb	0	; () banked
 25021  0076B8  2BF1               	incf	SyncEEPROMToGlobal@j& (0+255),f,b
 25022  0076BA  D7A5               	goto	l11282
 25023  0076BC                     l11302:
 25024                           
 25025                           ; BSR set to: 0
 25026  0076BC  0100               	movlb	0	; () banked
 25027  0076BE  2BF0               	incf	SyncEEPROMToGlobal@i& (0+255),f,b
 25028  0076C0                     l11304:
 25029                           
 25030                           ; BSR set to: 0
 25031  0076C0  0E09               	movlw	9
 25032  0076C2  0100               	movlb	0	; () banked
 25033  0076C4  65F0               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 25034  0076C6  D79C               	goto	l11280
 25035  0076C8                     l1151:
 25036                           
 25037                           ; BSR set to: 0
 25038                           ;EEPROM.c: 373: }
 25039                           ;EEPROM.c: 374: }
 25040                           ;EEPROM.c: 375: }
 25041                           ;EEPROM.c: 376: Global2.SerialNumber = Temp2.SerialNumber;
 25042  0076C8  C0CD  F2D1         	movff	SyncEEPROMToGlobal@Temp2+60,_Global2+60
 25043  0076CC  C0CE  F2D2         	movff	SyncEEPROMToGlobal@Temp2+61,_Global2+61
 25044  0076D0  C0CF  F2D3         	movff	SyncEEPROMToGlobal@Temp2+62,_Global2+62
 25045  0076D4  C0D0  F2D4         	movff	SyncEEPROMToGlobal@Temp2+63,_Global2+63
 25046                           
 25047                           ; BSR set to: 0
 25048  0076D8  0012               	return		;funcret
 25049  0076DA                     __end_of_SyncEEPROMToGlobal:
 25050                           	opt stack 0
 25051                           tblptru	equ	0xFF8
 25052                           tblptrh	equ	0xFF7
 25053                           tblptrl	equ	0xFF6
 25054                           tablat	equ	0xFF5
 25055                           prodh	equ	0xFF4
 25056                           prodl	equ	0xFF3
 25057                           intcon	equ	0xFF2
 25058                           intcon2	equ	0xFF1
 25059                           indf0	equ	0xFEF
 25060                           postinc0	equ	0xFEE
 25061                           plusw0	equ	0xFEB
 25062                           fsr0h	equ	0xFEA
 25063                           fsr0l	equ	0xFE9
 25064                           wreg	equ	0xFE8
 25065                           indf1	equ	0xFE7
 25066                           postdec1	equ	0xFE5
 25067                           fsr1h	equ	0xFE2
 25068                           fsr1l	equ	0xFE1
 25069                           indf2	equ	0xFDF
 25070                           postinc2	equ	0xFDE
 25071                           postdec2	equ	0xFDD
 25072                           plusw2	equ	0xFDB
 25073                           fsr2h	equ	0xFDA
 25074                           fsr2l	equ	0xFD9
 25075                           status	equ	0xFD8
 25076                           
 25077 ;; *************** function _GetEEPROM2 *****************
 25078 ;; Defined at:
 25079 ;;		line 156 in file "EEPROM.c"
 25080 ;; Parameters:    Size  Location     Type
 25081 ;;  Temp            2   37[BANK0 ] PTR struct EEdata2
 25082 ;;		 -> SyncEEPROMToGlobal@Temp2(64), 
 25083 ;; Auto vars:     Size  Location     Type
 25084 ;;  k               1   44[BANK0 ] unsigned char 
 25085 ;;  j               1   43[BANK0 ] unsigned char 
 25086 ;;  i               1   42[BANK0 ] unsigned char 
 25087 ;;  Arrayspot       1   41[BANK0 ] unsigned char 
 25088 ;; Return value:  Size  Location     Type
 25089 ;;		None               void
 25090 ;; Registers used:
 25091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25092 ;; Tracked objects:
 25093 ;;		On entry : 0/0
 25094 ;;		On exit  : 0/0
 25095 ;;		Unchanged: 0/0
 25096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25097 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25098 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25099 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25100 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25101 ;;Total ram usage:        8 bytes
 25102 ;; Hardware stack levels used:    1
 25103 ;; Hardware stack levels required when called:    7
 25104 ;; This function calls:
 25105 ;;		_GetMemoryChar
 25106 ;;		_GetMemoryLong
 25107 ;; This function is called by:
 25108 ;;		_SyncEEPROMToGlobal
 25109 ;; This function uses a non-reentrant model
 25110 ;;
 25111                           
 25112                           	psect	text41
 25113  00948A                     __ptext41:
 25114                           	opt stack 0
 25115  00948A                     _GetEEPROM2:
 25116                           	opt stack 21
 25117                           
 25118                           ;EEPROM.c: 158: unsigned char i,j,k;
 25119                           ;EEPROM.c: 159: unsigned char Arrayspot=(2*12 + 6);
 25120                           
 25121                           ; BSR set to: 0
 25122                           ;incstack = 0
 25123  00948A  0E1E               	movlw	30
 25124  00948C  0100               	movlb	0	; () banked
 25125  00948E  6F89               	movwf	GetEEPROM2@Arrayspot& (0+255),b
 25126                           
 25127                           ;EEPROM.c: 161: for(i=0; i< 10; i++)
 25128  009490  0E00               	movlw	0
 25129  009492  0100               	movlb	0	; () banked
 25130  009494  6F8A               	movwf	GetEEPROM2@i& (0+255),b
 25131  009496                     l10780:
 25132                           
 25133                           ; BSR set to: 0
 25134  009496  0E09               	movlw	9
 25135  009498  0100               	movlb	0	; () banked
 25136  00949A  658A               	cpfsgt	GetEEPROM2@i& (0+255),b
 25137  00949C  D001               	goto	l10784
 25138                           
 25139                           ; BSR set to: 0
 25140  00949E  D043               	goto	l10812
 25141  0094A0                     l10784:
 25142                           
 25143                           ; BSR set to: 0
 25144                           ;EEPROM.c: 162: {
 25145                           ;EEPROM.c: 163: for(j=0; j < 3; j++)
 25146  0094A0  0E00               	movlw	0
 25147  0094A2  0100               	movlb	0	; () banked
 25148  0094A4  6F8B               	movwf	GetEEPROM2@j& (0+255),b
 25149  0094A6                     l10786:
 25150                           
 25151                           ; BSR set to: 0
 25152  0094A6  0E02               	movlw	2
 25153  0094A8  0100               	movlb	0	; () banked
 25154  0094AA  658B               	cpfsgt	GetEEPROM2@j& (0+255),b
 25155  0094AC  D001               	goto	l10790
 25156                           
 25157                           ; BSR set to: 0
 25158  0094AE  D038               	goto	l10808
 25159  0094B0                     l10790:
 25160                           
 25161                           ; BSR set to: 0
 25162                           ;EEPROM.c: 164: {
 25163                           ;EEPROM.c: 165: for(k=0; k < 2; k++)
 25164  0094B0  0E00               	movlw	0
 25165  0094B2  0100               	movlb	0	; () banked
 25166  0094B4  6F8C               	movwf	GetEEPROM2@k& (0+255),b
 25167  0094B6                     l10792:
 25168                           
 25169                           ; BSR set to: 0
 25170  0094B6  0E01               	movlw	1
 25171  0094B8  0100               	movlb	0	; () banked
 25172  0094BA  658C               	cpfsgt	GetEEPROM2@k& (0+255),b
 25173  0094BC  D001               	goto	l10796
 25174                           
 25175                           ; BSR set to: 0
 25176  0094BE  D02D               	goto	l10804
 25177  0094C0                     l10796:
 25178                           
 25179                           ; BSR set to: 0
 25180                           ;EEPROM.c: 166: {
 25181                           ;EEPROM.c: 167: Temp->RemoteButtonRF[i][j][k] = GetMemoryChar(Arrayspot++);
 25182  0094C0  0100               	movlb	0	; () banked
 25183  0094C2  518A               	movf	GetEEPROM2@i& (0+255),w,b
 25184  0094C4  0D06               	mullw	6
 25185  0094C6  C085  F087         	movff	GetEEPROM2@Temp,??_GetEEPROM2
 25186  0094CA  C086  F088         	movff	GetEEPROM2@Temp+1,??_GetEEPROM2+1
 25187  0094CE  50F3               	movf	prodl,w,c
 25188  0094D0  0100               	movlb	0	; () banked
 25189  0094D2  2787               	addwf	??_GetEEPROM2& (0+255),f,b
 25190  0094D4  50F4               	movf	prodh,w,c
 25191  0094D6  0100               	movlb	0	; () banked
 25192  0094D8  2388               	addwfc	(??_GetEEPROM2+1)& (0+255),f,b
 25193  0094DA  0100               	movlb	0	; () banked
 25194  0094DC  518B               	movf	GetEEPROM2@j& (0+255),w,b
 25195  0094DE  0D02               	mullw	2
 25196  0094E0  50F3               	movf	prodl,w,c
 25197  0094E2  0100               	movlb	0	; () banked
 25198  0094E4  2787               	addwf	??_GetEEPROM2& (0+255),f,b
 25199  0094E6  50F4               	movf	prodh,w,c
 25200  0094E8  0100               	movlb	0	; () banked
 25201  0094EA  2388               	addwfc	(??_GetEEPROM2+1)& (0+255),f,b
 25202  0094EC  0100               	movlb	0	; () banked
 25203  0094EE  518C               	movf	GetEEPROM2@k& (0+255),w,b
 25204  0094F0  0D01               	mullw	1
 25205  0094F2  50F3               	movf	prodl,w,c
 25206  0094F4  0100               	movlb	0	; () banked
 25207  0094F6  2587               	addwf	??_GetEEPROM2& (0+255),w,b
 25208  0094F8  6ED9               	movwf	fsr2l,c
 25209  0094FA  50F4               	movf	prodh,w,c
 25210  0094FC  0100               	movlb	0	; () banked
 25211  0094FE  2188               	addwfc	(??_GetEEPROM2+1)& (0+255),w,b
 25212  009500  6EDA               	movwf	fsr2h,c
 25213  009502  0100               	movlb	0	; () banked
 25214  009504  5189               	movf	GetEEPROM2@Arrayspot& (0+255),w,b
 25215  009506  ECCE  F053         	call	_GetMemoryChar
 25216  00950A  0100               	movlb	0	; () banked
 25217  00950C  5164               	movf	?_GetMemoryChar& (0+255),w,b
 25218  00950E  6EDF               	movwf	indf2,c
 25219                           
 25220                           ; BSR set to: 0
 25221  009510  0100               	movlb	0	; () banked
 25222  009512  2B89               	incf	GetEEPROM2@Arrayspot& (0+255),f,b
 25223                           
 25224                           ; BSR set to: 0
 25225  009514  0100               	movlb	0	; () banked
 25226  009516  2B8C               	incf	GetEEPROM2@k& (0+255),f,b
 25227  009518  D7CE               	goto	l10792
 25228  00951A                     l10804:
 25229                           
 25230                           ; BSR set to: 0
 25231  00951A  0100               	movlb	0	; () banked
 25232  00951C  2B8B               	incf	GetEEPROM2@j& (0+255),f,b
 25233  00951E  D7C3               	goto	l10786
 25234  009520                     l10808:
 25235                           
 25236                           ; BSR set to: 0
 25237  009520  0100               	movlb	0	; () banked
 25238  009522  2B8A               	incf	GetEEPROM2@i& (0+255),f,b
 25239  009524  D7B8               	goto	l10780
 25240  009526                     l10812:
 25241                           
 25242                           ; BSR set to: 0
 25243                           ;EEPROM.c: 168: }
 25244                           ;EEPROM.c: 169: }
 25245                           ;EEPROM.c: 170: }
 25246                           ;EEPROM.c: 171: Temp->SerialNumber = GetMemoryLong((2*12 + 2*3*10 + 6));
 25247  009526  0E5A               	movlw	90
 25248  009528  ECA5  F03E         	call	_GetMemoryLong
 25249  00952C  0100               	movlb	0	; () banked
 25250  00952E  EE20 F03C          	lfsr	2,60
 25251  009532  5185               	movf	GetEEPROM2@Temp& (0+255),w,b
 25252  009534  26D9               	addwf	fsr2l,f,c
 25253  009536  5186               	movf	(GetEEPROM2@Temp+1)& (0+255),w,b
 25254  009538  22DA               	addwfc	fsr2h,f,c
 25255  00953A  0100               	movlb	0	; () banked
 25256  00953C  C064  FFDE         	movff	?_GetMemoryLong,postinc2
 25257  009540  0100               	movlb	0	; () banked
 25258  009542  C065  FFDE         	movff	?_GetMemoryLong+1,postinc2
 25259  009546  0100               	movlb	0	; () banked
 25260  009548  C066  FFDE         	movff	?_GetMemoryLong+2,postinc2
 25261  00954C  0100               	movlb	0	; () banked
 25262  00954E  C067  FFDE         	movff	?_GetMemoryLong+3,postinc2
 25263                           
 25264                           ; BSR set to: 0
 25265  009552  0012               	return		;funcret
 25266  009554                     __end_of_GetEEPROM2:
 25267                           	opt stack 0
 25268                           tblptru	equ	0xFF8
 25269                           tblptrh	equ	0xFF7
 25270                           tblptrl	equ	0xFF6
 25271                           tablat	equ	0xFF5
 25272                           prodh	equ	0xFF4
 25273                           prodl	equ	0xFF3
 25274                           intcon	equ	0xFF2
 25275                           intcon2	equ	0xFF1
 25276                           indf0	equ	0xFEF
 25277                           postinc0	equ	0xFEE
 25278                           plusw0	equ	0xFEB
 25279                           fsr0h	equ	0xFEA
 25280                           fsr0l	equ	0xFE9
 25281                           wreg	equ	0xFE8
 25282                           indf1	equ	0xFE7
 25283                           postdec1	equ	0xFE5
 25284                           fsr1h	equ	0xFE2
 25285                           fsr1l	equ	0xFE1
 25286                           indf2	equ	0xFDF
 25287                           postinc2	equ	0xFDE
 25288                           postdec2	equ	0xFDD
 25289                           plusw2	equ	0xFDB
 25290                           fsr2h	equ	0xFDA
 25291                           fsr2l	equ	0xFD9
 25292                           status	equ	0xFD8
 25293                           
 25294 ;; *************** function _GetEEPROM1 *****************
 25295 ;; Defined at:
 25296 ;;		line 134 in file "EEPROM.c"
 25297 ;; Parameters:    Size  Location     Type
 25298 ;;  Temp            2   37[BANK0 ] PTR struct EEdata
 25299 ;;		 -> SyncEEPROMToGlobal@Temp1(30), 
 25300 ;; Auto vars:     Size  Location     Type
 25301 ;;  j               1   43[BANK0 ] unsigned char 
 25302 ;;  i               1   42[BANK0 ] unsigned char 
 25303 ;;  Arrayspot       1   41[BANK0 ] unsigned char 
 25304 ;;  k               1    0        unsigned char 
 25305 ;; Return value:  Size  Location     Type
 25306 ;;		None               void
 25307 ;; Registers used:
 25308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25309 ;; Tracked objects:
 25310 ;;		On entry : 0/0
 25311 ;;		On exit  : 0/0
 25312 ;;		Unchanged: 0/0
 25313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25314 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25315 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25316 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25317 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25318 ;;Total ram usage:        7 bytes
 25319 ;; Hardware stack levels used:    1
 25320 ;; Hardware stack levels required when called:    7
 25321 ;; This function calls:
 25322 ;;		_GetMemoryChar
 25323 ;;		_GetMemoryLong
 25324 ;; This function is called by:
 25325 ;;		_SyncEEPROMToGlobal
 25326 ;; This function uses a non-reentrant model
 25327 ;;
 25328                           
 25329                           	psect	text42
 25330  009144                     __ptext42:
 25331                           	opt stack 0
 25332  009144                     _GetEEPROM1:
 25333                           	opt stack 21
 25334                           
 25335                           ;EEPROM.c: 136: unsigned char i,j,k;
 25336                           ;EEPROM.c: 137: unsigned char Arrayspot=5;
 25337                           
 25338                           ; BSR set to: 0
 25339                           ;incstack = 0
 25340  009144  0E05               	movlw	5
 25341  009146  0100               	movlb	0	; () banked
 25342  009148  6F89               	movwf	GetEEPROM1@Arrayspot& (0+255),b
 25343                           
 25344                           ; BSR set to: 0
 25345                           ;EEPROM.c: 139: Temp->BlueToothFlag = GetMemoryChar(0);
 25346  00914A  0E00               	movlw	0
 25347  00914C  ECCE  F053         	call	_GetMemoryChar
 25348  009150  0100               	movlb	0	; () banked
 25349  009152  5164               	movf	?_GetMemoryChar& (0+255),w,b
 25350  009154  C085  FFD9         	movff	GetEEPROM1@Temp,fsr2l
 25351  009158  C086  FFDA         	movff	GetEEPROM1@Temp+1,fsr2h
 25352  00915C  6EDF               	movwf	indf2,c
 25353                           
 25354                           ; BSR set to: 0
 25355                           ;EEPROM.c: 140: Temp->SWNECcode = GetMemoryLong(1);
 25356  00915E  0E01               	movlw	1
 25357  009160  ECA5  F03E         	call	_GetMemoryLong
 25358  009164  0100               	movlb	0	; () banked
 25359  009166  EE20 F001          	lfsr	2,1
 25360  00916A  5185               	movf	GetEEPROM1@Temp& (0+255),w,b
 25361  00916C  26D9               	addwf	fsr2l,f,c
 25362  00916E  5186               	movf	(GetEEPROM1@Temp+1)& (0+255),w,b
 25363  009170  22DA               	addwfc	fsr2h,f,c
 25364  009172  0100               	movlb	0	; () banked
 25365  009174  C064  FFDE         	movff	?_GetMemoryLong,postinc2
 25366  009178  0100               	movlb	0	; () banked
 25367  00917A  C065  FFDE         	movff	?_GetMemoryLong+1,postinc2
 25368  00917E  0100               	movlb	0	; () banked
 25369  009180  C066  FFDE         	movff	?_GetMemoryLong+2,postinc2
 25370  009184  0100               	movlb	0	; () banked
 25371  009186  C067  FFDE         	movff	?_GetMemoryLong+3,postinc2
 25372                           
 25373                           ;EEPROM.c: 141: for(i=0; i< 12; i++)
 25374  00918A  0E00               	movlw	0
 25375  00918C  0100               	movlb	0	; () banked
 25376  00918E  6F8A               	movwf	GetEEPROM1@i& (0+255),b
 25377  009190                     l10754:
 25378                           
 25379                           ; BSR set to: 0
 25380  009190  0E0B               	movlw	11
 25381  009192  0100               	movlb	0	; () banked
 25382  009194  658A               	cpfsgt	GetEEPROM1@i& (0+255),b
 25383  009196  D001               	goto	l10758
 25384                           
 25385                           ; BSR set to: 0
 25386  009198  D035               	goto	l10776
 25387  00919A                     l10758:
 25388                           
 25389                           ; BSR set to: 0
 25390                           ;EEPROM.c: 142: {
 25391                           ;EEPROM.c: 143: for(j=0; j < 2; j++)
 25392  00919A  0E00               	movlw	0
 25393  00919C  0100               	movlb	0	; () banked
 25394  00919E  6F8B               	movwf	GetEEPROM1@j& (0+255),b
 25395  0091A0                     l10760:
 25396                           
 25397                           ; BSR set to: 0
 25398  0091A0  0E01               	movlw	1
 25399  0091A2  0100               	movlb	0	; () banked
 25400  0091A4  658B               	cpfsgt	GetEEPROM1@j& (0+255),b
 25401  0091A6  D001               	goto	l10764
 25402                           
 25403                           ; BSR set to: 0
 25404  0091A8  D02A               	goto	l10772
 25405  0091AA                     l10764:
 25406                           
 25407                           ; BSR set to: 0
 25408                           ;EEPROM.c: 144: {
 25409                           ;EEPROM.c: 145: Temp->RemoteButtonNEC[i][j] = GetMemoryChar(Arrayspot++);
 25410  0091AA  0100               	movlb	0	; () banked
 25411  0091AC  518A               	movf	GetEEPROM1@i& (0+255),w,b
 25412  0091AE  0D02               	mullw	2
 25413  0091B0  C085  F087         	movff	GetEEPROM1@Temp,??_GetEEPROM1
 25414  0091B4  C086  F088         	movff	GetEEPROM1@Temp+1,??_GetEEPROM1+1
 25415  0091B8  50F3               	movf	prodl,w,c
 25416  0091BA  0100               	movlb	0	; () banked
 25417  0091BC  2787               	addwf	??_GetEEPROM1& (0+255),f,b
 25418  0091BE  50F4               	movf	prodh,w,c
 25419  0091C0  0100               	movlb	0	; () banked
 25420  0091C2  2388               	addwfc	(??_GetEEPROM1+1)& (0+255),f,b
 25421  0091C4  0100               	movlb	0	; () banked
 25422  0091C6  518B               	movf	GetEEPROM1@j& (0+255),w,b
 25423  0091C8  0D01               	mullw	1
 25424  0091CA  50F3               	movf	prodl,w,c
 25425  0091CC  0100               	movlb	0	; () banked
 25426  0091CE  2787               	addwf	??_GetEEPROM1& (0+255),f,b
 25427  0091D0  50F4               	movf	prodh,w,c
 25428  0091D2  0100               	movlb	0	; () banked
 25429  0091D4  2388               	addwfc	(??_GetEEPROM1+1)& (0+255),f,b
 25430  0091D6  0E05               	movlw	5
 25431  0091D8  0100               	movlb	0	; () banked
 25432  0091DA  2587               	addwf	??_GetEEPROM1& (0+255),w,b
 25433  0091DC  6ED9               	movwf	fsr2l,c
 25434  0091DE  0E00               	movlw	0
 25435  0091E0  0100               	movlb	0	; () banked
 25436  0091E2  2188               	addwfc	(??_GetEEPROM1+1)& (0+255),w,b
 25437  0091E4  6EDA               	movwf	fsr2h,c
 25438  0091E6  0100               	movlb	0	; () banked
 25439  0091E8  5189               	movf	GetEEPROM1@Arrayspot& (0+255),w,b
 25440  0091EA  ECCE  F053         	call	_GetMemoryChar
 25441  0091EE  0100               	movlb	0	; () banked
 25442  0091F0  5164               	movf	?_GetMemoryChar& (0+255),w,b
 25443  0091F2  6EDF               	movwf	indf2,c
 25444                           
 25445                           ; BSR set to: 0
 25446  0091F4  0100               	movlb	0	; () banked
 25447  0091F6  2B89               	incf	GetEEPROM1@Arrayspot& (0+255),f,b
 25448                           
 25449                           ; BSR set to: 0
 25450  0091F8  0100               	movlb	0	; () banked
 25451  0091FA  2B8B               	incf	GetEEPROM1@j& (0+255),f,b
 25452  0091FC  D7D1               	goto	l10760
 25453  0091FE                     l10772:
 25454                           
 25455                           ; BSR set to: 0
 25456  0091FE  0100               	movlb	0	; () banked
 25457  009200  2B8A               	incf	GetEEPROM1@i& (0+255),f,b
 25458  009202  D7C6               	goto	l10754
 25459  009204                     l10776:
 25460                           
 25461                           ; BSR set to: 0
 25462                           ;EEPROM.c: 146: }
 25463                           ;EEPROM.c: 147: }
 25464                           ;EEPROM.c: 148: Temp->EEPROMinitFlag = GetMemoryChar((2*12 + 5));
 25465  009204  0100               	movlb	0	; () banked
 25466  009206  EE20 F01D          	lfsr	2,29
 25467  00920A  5185               	movf	GetEEPROM1@Temp& (0+255),w,b
 25468  00920C  26D9               	addwf	fsr2l,f,c
 25469  00920E  5186               	movf	(GetEEPROM1@Temp+1)& (0+255),w,b
 25470  009210  22DA               	addwfc	fsr2h,f,c
 25471  009212  0E1D               	movlw	29
 25472  009214  ECCE  F053         	call	_GetMemoryChar
 25473  009218  0100               	movlb	0	; () banked
 25474  00921A  5164               	movf	?_GetMemoryChar& (0+255),w,b
 25475  00921C  6EDF               	movwf	indf2,c
 25476                           
 25477                           ; BSR set to: 0
 25478  00921E  0012               	return		;funcret
 25479  009220                     __end_of_GetEEPROM1:
 25480                           	opt stack 0
 25481                           tblptru	equ	0xFF8
 25482                           tblptrh	equ	0xFF7
 25483                           tblptrl	equ	0xFF6
 25484                           tablat	equ	0xFF5
 25485                           prodh	equ	0xFF4
 25486                           prodl	equ	0xFF3
 25487                           intcon	equ	0xFF2
 25488                           intcon2	equ	0xFF1
 25489                           indf0	equ	0xFEF
 25490                           postinc0	equ	0xFEE
 25491                           plusw0	equ	0xFEB
 25492                           fsr0h	equ	0xFEA
 25493                           fsr0l	equ	0xFE9
 25494                           wreg	equ	0xFE8
 25495                           indf1	equ	0xFE7
 25496                           postdec1	equ	0xFE5
 25497                           fsr1h	equ	0xFE2
 25498                           fsr1l	equ	0xFE1
 25499                           indf2	equ	0xFDF
 25500                           postinc2	equ	0xFDE
 25501                           postdec2	equ	0xFDD
 25502                           plusw2	equ	0xFDB
 25503                           fsr2h	equ	0xFDA
 25504                           fsr2l	equ	0xFD9
 25505                           status	equ	0xFD8
 25506                           
 25507 ;; *************** function _SetEEPROMdefault *****************
 25508 ;; Defined at:
 25509 ;;		line 299 in file "EEPROM.c"
 25510 ;; Parameters:    Size  Location     Type
 25511 ;;		None
 25512 ;; Auto vars:     Size  Location     Type
 25513 ;;  j               1  138[BANK0 ] unsigned char 
 25514 ;;  i               1  137[BANK0 ] unsigned char 
 25515 ;;  k               1  136[BANK0 ] unsigned char 
 25516 ;; Return value:  Size  Location     Type
 25517 ;;		None               void
 25518 ;; Registers used:
 25519 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25520 ;; Tracked objects:
 25521 ;;		On entry : 0/0
 25522 ;;		On exit  : 0/0
 25523 ;;		Unchanged: 0/0
 25524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25526 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25527 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25528 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25529 ;;Total ram usage:        5 bytes
 25530 ;; Hardware stack levels used:    1
 25531 ;; Hardware stack levels required when called:   10
 25532 ;; This function calls:
 25533 ;;		_SyncGlobalToEEPROM
 25534 ;; This function is called by:
 25535 ;;		_Init_System
 25536 ;; This function uses a non-reentrant model
 25537 ;;
 25538                           
 25539                           	psect	text43
 25540  008B36                     __ptext43:
 25541                           	opt stack 0
 25542  008B36                     _SetEEPROMdefault:
 25543                           	opt stack 19
 25544                           
 25545                           ;EEPROM.c: 301: unsigned char i,j,k;
 25546                           ;EEPROM.c: 303: Global1.BlueToothFlag = 0;
 25547                           
 25548                           ; BSR set to: 0
 25549                           ;incstack = 0
 25550  008B36  0E00               	movlw	0
 25551  008B38  0102               	movlb	2	; () banked
 25552  008B3A  6FD5               	movwf	_Global1& (0+255),b
 25553                           
 25554                           ;EEPROM.c: 304: Global1.SWNECcode = 0x00FF00FF;
 25555  008B3C  0EFF               	movlw	255
 25556  008B3E  0102               	movlb	2	; () banked
 25557  008B40  6FD6               	movwf	(_Global1+1)& (0+255),b
 25558  008B42  0E00               	movlw	0
 25559  008B44  6FD7               	movwf	(_Global1+2)& (0+255),b
 25560  008B46  0EFF               	movlw	255
 25561  008B48  6FD8               	movwf	(_Global1+3)& (0+255),b
 25562  008B4A  0E00               	movlw	0
 25563  008B4C  6FD9               	movwf	(_Global1+4)& (0+255),b
 25564                           
 25565                           ;EEPROM.c: 305: Global1.EEPROMinitFlag = 0;
 25566  008B4E  0E00               	movlw	0
 25567  008B50  0102               	movlb	2	; () banked
 25568  008B52  6FF2               	movwf	(_Global1+29)& (0+255),b
 25569                           
 25570                           ;EEPROM.c: 306: for(i=0; i< 12; i++)
 25571  008B54  0E00               	movlw	0
 25572  008B56  0100               	movlb	0	; () banked
 25573  008B58  6FE9               	movwf	SetEEPROMdefault@i& (0+255),b
 25574  008B5A                     l11318:
 25575                           
 25576                           ; BSR set to: 0
 25577  008B5A  0E0B               	movlw	11
 25578  008B5C  0100               	movlb	0	; () banked
 25579  008B5E  65E9               	cpfsgt	SetEEPROMdefault@i& (0+255),b
 25580  008B60  D001               	goto	l11322
 25581                           
 25582                           ; BSR set to: 0
 25583  008B62  D02F               	goto	l11338
 25584  008B64                     l11322:
 25585                           
 25586                           ; BSR set to: 0
 25587                           ;EEPROM.c: 307: {
 25588                           ;EEPROM.c: 308: for(j=0; j < 2; j++)
 25589  008B64  0E00               	movlw	0
 25590  008B66  0100               	movlb	0	; () banked
 25591  008B68  6FEA               	movwf	SetEEPROMdefault@j& (0+255),b
 25592  008B6A                     l11324:
 25593                           
 25594                           ; BSR set to: 0
 25595  008B6A  0E01               	movlw	1
 25596  008B6C  0100               	movlb	0	; () banked
 25597  008B6E  65EA               	cpfsgt	SetEEPROMdefault@j& (0+255),b
 25598  008B70  D001               	goto	l11328
 25599                           
 25600                           ; BSR set to: 0
 25601  008B72  D024               	goto	l11334
 25602  008B74                     l11328:
 25603                           
 25604                           ; BSR set to: 0
 25605                           ;EEPROM.c: 309: {
 25606                           ;EEPROM.c: 310: Global1.RemoteButtonNEC[i][j] = 0x00;
 25607  008B74  0100               	movlb	0	; () banked
 25608  008B76  51E9               	movf	SetEEPROMdefault@i& (0+255),w,b
 25609  008B78  0D02               	mullw	2
 25610  008B7A  0ED5               	movlw	low _Global1
 25611  008B7C  0100               	movlb	0	; () banked
 25612  008B7E  6FE6               	movwf	??_SetEEPROMdefault& (0+255),b
 25613  008B80  0E02               	movlw	high _Global1
 25614  008B82  0100               	movlb	0	; () banked
 25615  008B84  6FE7               	movwf	(??_SetEEPROMdefault+1)& (0+255),b
 25616  008B86  0E05               	movlw	5
 25617  008B88  0100               	movlb	0	; () banked
 25618  008B8A  27E6               	addwf	??_SetEEPROMdefault& (0+255),f,b
 25619  008B8C  0E00               	movlw	0
 25620  008B8E  23E7               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 25621  008B90  50F3               	movf	prodl,w,c
 25622  008B92  0100               	movlb	0	; () banked
 25623  008B94  27E6               	addwf	??_SetEEPROMdefault& (0+255),f,b
 25624  008B96  50F4               	movf	prodh,w,c
 25625  008B98  0100               	movlb	0	; () banked
 25626  008B9A  23E7               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 25627  008B9C  0100               	movlb	0	; () banked
 25628  008B9E  51EA               	movf	SetEEPROMdefault@j& (0+255),w,b
 25629  008BA0  0D01               	mullw	1
 25630  008BA2  50F3               	movf	prodl,w,c
 25631  008BA4  0100               	movlb	0	; () banked
 25632  008BA6  25E6               	addwf	??_SetEEPROMdefault& (0+255),w,b
 25633  008BA8  6ED9               	movwf	fsr2l,c
 25634  008BAA  50F4               	movf	prodh,w,c
 25635  008BAC  0100               	movlb	0	; () banked
 25636  008BAE  21E7               	addwfc	(??_SetEEPROMdefault+1)& (0+255),w,b
 25637  008BB0  6EDA               	movwf	fsr2h,c
 25638  008BB2  0E00               	movlw	0
 25639  008BB4  6EDF               	movwf	indf2,c
 25640                           
 25641                           ; BSR set to: 0
 25642  008BB6  0100               	movlb	0	; () banked
 25643  008BB8  2BEA               	incf	SetEEPROMdefault@j& (0+255),f,b
 25644  008BBA  D7D7               	goto	l11324
 25645  008BBC                     l11334:
 25646                           
 25647                           ; BSR set to: 0
 25648  008BBC  0100               	movlb	0	; () banked
 25649  008BBE  2BE9               	incf	SetEEPROMdefault@i& (0+255),f,b
 25650  008BC0  D7CC               	goto	l11318
 25651  008BC2                     l11338:
 25652                           
 25653                           ; BSR set to: 0
 25654                           ;EEPROM.c: 311: }
 25655                           ;EEPROM.c: 312: }
 25656                           ;EEPROM.c: 313: for(i=0; i< 10; i++)
 25657  008BC2  0E00               	movlw	0
 25658  008BC4  0100               	movlb	0	; () banked
 25659  008BC6  6FE9               	movwf	SetEEPROMdefault@i& (0+255),b
 25660  008BC8                     l11340:
 25661                           
 25662                           ; BSR set to: 0
 25663  008BC8  0E09               	movlw	9
 25664  008BCA  0100               	movlb	0	; () banked
 25665  008BCC  65E9               	cpfsgt	SetEEPROMdefault@i& (0+255),b
 25666  008BCE  D001               	goto	l11344
 25667                           
 25668                           ; BSR set to: 0
 25669  008BD0  D03E               	goto	l11370
 25670  008BD2                     l11344:
 25671                           
 25672                           ; BSR set to: 0
 25673                           ;EEPROM.c: 314: {
 25674                           ;EEPROM.c: 315: for(j=0; j < 3; j++)
 25675  008BD2  0E00               	movlw	0
 25676  008BD4  0100               	movlb	0	; () banked
 25677  008BD6  6FEA               	movwf	SetEEPROMdefault@j& (0+255),b
 25678  008BD8                     l11346:
 25679                           
 25680                           ; BSR set to: 0
 25681  008BD8  0E02               	movlw	2
 25682  008BDA  0100               	movlb	0	; () banked
 25683  008BDC  65EA               	cpfsgt	SetEEPROMdefault@j& (0+255),b
 25684  008BDE  D001               	goto	l11350
 25685                           
 25686                           ; BSR set to: 0
 25687  008BE0  D033               	goto	l11366
 25688  008BE2                     l11350:
 25689                           
 25690                           ; BSR set to: 0
 25691                           ;EEPROM.c: 316: {
 25692                           ;EEPROM.c: 317: for(k=0; k < 2; k++)
 25693  008BE2  0E00               	movlw	0
 25694  008BE4  0100               	movlb	0	; () banked
 25695  008BE6  6FE8               	movwf	SetEEPROMdefault@k& (0+255),b
 25696  008BE8                     l11352:
 25697                           
 25698                           ; BSR set to: 0
 25699  008BE8  0E01               	movlw	1
 25700  008BEA  0100               	movlb	0	; () banked
 25701  008BEC  65E8               	cpfsgt	SetEEPROMdefault@k& (0+255),b
 25702  008BEE  D001               	goto	l11356
 25703                           
 25704                           ; BSR set to: 0
 25705  008BF0  D028               	goto	l11362
 25706  008BF2                     l11356:
 25707                           
 25708                           ; BSR set to: 0
 25709                           ;EEPROM.c: 318: {
 25710                           ;EEPROM.c: 319: Global2.RemoteButtonRF[i][j][k] = 0x00;
 25711  008BF2  0100               	movlb	0	; () banked
 25712  008BF4  51E9               	movf	SetEEPROMdefault@i& (0+255),w,b
 25713  008BF6  0D06               	mullw	6
 25714  008BF8  0E95               	movlw	low _Global2
 25715  008BFA  0100               	movlb	0	; () banked
 25716  008BFC  6FE6               	movwf	??_SetEEPROMdefault& (0+255),b
 25717  008BFE  0E02               	movlw	high _Global2
 25718  008C00  0100               	movlb	0	; () banked
 25719  008C02  6FE7               	movwf	(??_SetEEPROMdefault+1)& (0+255),b
 25720  008C04  50F3               	movf	prodl,w,c
 25721  008C06  0100               	movlb	0	; () banked
 25722  008C08  27E6               	addwf	??_SetEEPROMdefault& (0+255),f,b
 25723  008C0A  50F4               	movf	prodh,w,c
 25724  008C0C  0100               	movlb	0	; () banked
 25725  008C0E  23E7               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 25726  008C10  0100               	movlb	0	; () banked
 25727  008C12  51EA               	movf	SetEEPROMdefault@j& (0+255),w,b
 25728  008C14  0D02               	mullw	2
 25729  008C16  50F3               	movf	prodl,w,c
 25730  008C18  0100               	movlb	0	; () banked
 25731  008C1A  27E6               	addwf	??_SetEEPROMdefault& (0+255),f,b
 25732  008C1C  50F4               	movf	prodh,w,c
 25733  008C1E  0100               	movlb	0	; () banked
 25734  008C20  23E7               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 25735  008C22  0100               	movlb	0	; () banked
 25736  008C24  51E8               	movf	SetEEPROMdefault@k& (0+255),w,b
 25737  008C26  0D01               	mullw	1
 25738  008C28  50F3               	movf	prodl,w,c
 25739  008C2A  0100               	movlb	0	; () banked
 25740  008C2C  25E6               	addwf	??_SetEEPROMdefault& (0+255),w,b
 25741  008C2E  6ED9               	movwf	fsr2l,c
 25742  008C30  50F4               	movf	prodh,w,c
 25743  008C32  0100               	movlb	0	; () banked
 25744  008C34  21E7               	addwfc	(??_SetEEPROMdefault+1)& (0+255),w,b
 25745  008C36  6EDA               	movwf	fsr2h,c
 25746  008C38  0E00               	movlw	0
 25747  008C3A  6EDF               	movwf	indf2,c
 25748                           
 25749                           ; BSR set to: 0
 25750  008C3C  0100               	movlb	0	; () banked
 25751  008C3E  2BE8               	incf	SetEEPROMdefault@k& (0+255),f,b
 25752  008C40  D7D3               	goto	l11352
 25753  008C42                     l11362:
 25754                           
 25755                           ; BSR set to: 0
 25756  008C42  0100               	movlb	0	; () banked
 25757  008C44  2BEA               	incf	SetEEPROMdefault@j& (0+255),f,b
 25758  008C46  D7C8               	goto	l11346
 25759  008C48                     l11366:
 25760                           
 25761                           ; BSR set to: 0
 25762  008C48  0100               	movlb	0	; () banked
 25763  008C4A  2BE9               	incf	SetEEPROMdefault@i& (0+255),f,b
 25764  008C4C  D7BD               	goto	l11340
 25765  008C4E                     l11370:
 25766                           
 25767                           ; BSR set to: 0
 25768                           ;EEPROM.c: 320: }
 25769                           ;EEPROM.c: 321: }
 25770                           ;EEPROM.c: 322: }
 25771                           ;EEPROM.c: 323: SyncGlobalToEEPROM();
 25772  008C4E  EC69  F04D         	call	_SyncGlobalToEEPROM	;wreg free
 25773  008C52  0012               	return		;funcret
 25774  008C54                     __end_of_SetEEPROMdefault:
 25775                           	opt stack 0
 25776                           tblptru	equ	0xFF8
 25777                           tblptrh	equ	0xFF7
 25778                           tblptrl	equ	0xFF6
 25779                           tablat	equ	0xFF5
 25780                           prodh	equ	0xFF4
 25781                           prodl	equ	0xFF3
 25782                           intcon	equ	0xFF2
 25783                           intcon2	equ	0xFF1
 25784                           indf0	equ	0xFEF
 25785                           postinc0	equ	0xFEE
 25786                           plusw0	equ	0xFEB
 25787                           fsr0h	equ	0xFEA
 25788                           fsr0l	equ	0xFE9
 25789                           wreg	equ	0xFE8
 25790                           indf1	equ	0xFE7
 25791                           postdec1	equ	0xFE5
 25792                           fsr1h	equ	0xFE2
 25793                           fsr1l	equ	0xFE1
 25794                           indf2	equ	0xFDF
 25795                           postinc2	equ	0xFDE
 25796                           postdec2	equ	0xFDD
 25797                           plusw2	equ	0xFDB
 25798                           fsr2h	equ	0xFDA
 25799                           fsr2l	equ	0xFD9
 25800                           status	equ	0xFD8
 25801                           
 25802 ;; *************** function _InitUART *****************
 25803 ;; Defined at:
 25804 ;;		line 85 in file "UART.c"
 25805 ;; Parameters:    Size  Location     Type
 25806 ;;  Baud            4   85[BANK0 ] unsigned long 
 25807 ;; Auto vars:     Size  Location     Type
 25808 ;;  temp            4   99[BANK0 ] unsigned long 
 25809 ;;  spbrg           2   96[BANK0 ] unsigned int 
 25810 ;;  config          1   98[BANK0 ] unsigned char 
 25811 ;; Return value:  Size  Location     Type
 25812 ;;		None               void
 25813 ;; Registers used:
 25814 ;;		wreg, status,2, status,0, cstack
 25815 ;; Tracked objects:
 25816 ;;		On entry : 0/0
 25817 ;;		On exit  : 0/0
 25818 ;;		Unchanged: 0/0
 25819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25820 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25821 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25822 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25823 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25824 ;;Total ram usage:       18 bytes
 25825 ;; Hardware stack levels used:    1
 25826 ;; Hardware stack levels required when called:    8
 25827 ;; This function calls:
 25828 ;;		_ClearUSART
 25829 ;;		_Local_CloseUSART
 25830 ;;		_OpenUSART
 25831 ;;		_Round
 25832 ;;		___fttol
 25833 ;;		___lldiv
 25834 ;;		___lltoft
 25835 ;; This function is called by:
 25836 ;;		_Init_System
 25837 ;; This function uses a non-reentrant model
 25838 ;;
 25839                           
 25840                           	psect	text44
 25841  008C54                     __ptext44:
 25842                           	opt stack 0
 25843  008C54                     _InitUART:
 25844                           	opt stack 21
 25845                           
 25846                           ;UART.c: 87: unsigned long temp;
 25847                           ;UART.c: 88: unsigned char config = 0;
 25848                           
 25849                           ;incstack = 0
 25850  008C54  0E00               	movlw	0
 25851  008C56  0100               	movlb	0	; () banked
 25852  008C58  6FC2               	movwf	InitUART@config& (0+255),b
 25853                           
 25854                           ; BSR set to: 0
 25855                           ;UART.c: 89: unsigned int spbrg;
 25856                           ;UART.c: 91: Local_CloseUSART();
 25857  008C5A  ECE3  F054         	call	_Local_CloseUSART	;wreg free
 25858                           
 25859                           ;UART.c: 96: config |= 0b00001000;
 25860  008C5E  0100               	movlb	0	; () banked
 25861  008C60  87C2               	bsf	InitUART@config& (0+255),3,b
 25862                           
 25863                           ; BSR set to: 0
 25864                           ;UART.c: 97: config |= 0b00010000;
 25865  008C62  0100               	movlb	0	; () banked
 25866  008C64  89C2               	bsf	InitUART@config& (0+255),4,b
 25867                           
 25868                           ; BSR set to: 0
 25869                           ;UART.c: 98: config &= ~0b00000010;
 25870  008C66  0100               	movlb	0	; () banked
 25871  008C68  93C2               	bcf	InitUART@config& (0+255),1,b
 25872                           
 25873                           ; BSR set to: 0
 25874                           ;UART.c: 101: temp = (64000000L / Baud) - 1;
 25875  008C6A  0E00               	movlw	0
 25876  008C6C  0100               	movlb	0	; () banked
 25877  008C6E  6F60               	movwf	___lldiv@dividend& (0+255),b
 25878  008C70  0E90               	movlw	144
 25879  008C72  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 25880  008C74  0ED0               	movlw	208
 25881  008C76  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 25882  008C78  0E03               	movlw	3
 25883  008C7A  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 25884  008C7C  C0B5  F064         	movff	InitUART@Baud,___lldiv@divisor
 25885  008C80  C0B6  F065         	movff	InitUART@Baud+1,___lldiv@divisor+1
 25886  008C84  C0B7  F066         	movff	InitUART@Baud+2,___lldiv@divisor+2
 25887  008C88  C0B8  F067         	movff	InitUART@Baud+3,___lldiv@divisor+3
 25888  008C8C  ECAA  F04A         	call	___lldiv	;wreg free
 25889  008C90  0EFF               	movlw	255
 25890  008C92  0100               	movlb	0	; () banked
 25891  008C94  2560               	addwf	?___lldiv& (0+255),w,b
 25892  008C96  0100               	movlb	0	; () banked
 25893  008C98  6FC3               	movwf	InitUART@temp& (0+255),b
 25894  008C9A  0EFF               	movlw	255
 25895  008C9C  0100               	movlb	0	; () banked
 25896  008C9E  2161               	addwfc	(?___lldiv+1)& (0+255),w,b
 25897  008CA0  0100               	movlb	0	; () banked
 25898  008CA2  6FC4               	movwf	(InitUART@temp+1)& (0+255),b
 25899  008CA4  0EFF               	movlw	255
 25900  008CA6  0100               	movlb	0	; () banked
 25901  008CA8  2162               	addwfc	(?___lldiv+2)& (0+255),w,b
 25902  008CAA  0100               	movlb	0	; () banked
 25903  008CAC  6FC5               	movwf	(InitUART@temp+2)& (0+255),b
 25904  008CAE  0EFF               	movlw	255
 25905  008CB0  0100               	movlb	0	; () banked
 25906  008CB2  2163               	addwfc	(?___lldiv+3)& (0+255),w,b
 25907  008CB4  0100               	movlb	0	; () banked
 25908  008CB6  6FC6               	movwf	(InitUART@temp+3)& (0+255),b
 25909                           
 25910                           ; BSR set to: 0
 25911                           ;UART.c: 102: temp = (temp >> 2) - 1;
 25912  008CB8  C0C3  F0B9         	movff	InitUART@temp,??_InitUART
 25913  008CBC  C0C4  F0BA         	movff	InitUART@temp+1,??_InitUART+1
 25914  008CC0  C0C5  F0BB         	movff	InitUART@temp+2,??_InitUART+2
 25915  008CC4  C0C6  F0BC         	movff	InitUART@temp+3,??_InitUART+3
 25916  008CC8  0E03               	movlw	3
 25917  008CCA  D006               	goto	u12350
 25918  008CCC                     u12355:
 25919  008CCC  0100               	movlb	0	; () banked
 25920  008CCE  90D8               	bcf	status,0,c
 25921  008CD0  33BC               	rrcf	(??_InitUART+3)& (0+255),f,b
 25922  008CD2  33BB               	rrcf	(??_InitUART+2)& (0+255),f,b
 25923  008CD4  33BA               	rrcf	(??_InitUART+1)& (0+255),f,b
 25924  008CD6  33B9               	rrcf	??_InitUART& (0+255),f,b
 25925  008CD8                     u12350:
 25926  008CD8  2EE8               	decfsz	wreg,f,c
 25927  008CDA  D7F8               	goto	u12355
 25928  008CDC  0EFF               	movlw	255
 25929  008CDE  0100               	movlb	0	; () banked
 25930  008CE0  25B9               	addwf	??_InitUART& (0+255),w,b
 25931  008CE2  0100               	movlb	0	; () banked
 25932  008CE4  6FC3               	movwf	InitUART@temp& (0+255),b
 25933  008CE6  0EFF               	movlw	255
 25934  008CE8  0100               	movlb	0	; () banked
 25935  008CEA  21BA               	addwfc	(??_InitUART+1)& (0+255),w,b
 25936  008CEC  0100               	movlb	0	; () banked
 25937  008CEE  6FC4               	movwf	(InitUART@temp+1)& (0+255),b
 25938  008CF0  0EFF               	movlw	255
 25939  008CF2  0100               	movlb	0	; () banked
 25940  008CF4  21BB               	addwfc	(??_InitUART+2)& (0+255),w,b
 25941  008CF6  0100               	movlb	0	; () banked
 25942  008CF8  6FC5               	movwf	(InitUART@temp+2)& (0+255),b
 25943  008CFA  0EFF               	movlw	255
 25944  008CFC  0100               	movlb	0	; () banked
 25945  008CFE  21BC               	addwfc	(??_InitUART+3)& (0+255),w,b
 25946  008D00  0100               	movlb	0	; () banked
 25947  008D02  6FC6               	movwf	(InitUART@temp+3)& (0+255),b
 25948                           
 25949                           ; BSR set to: 0
 25950                           ;UART.c: 103: spbrg = (unsigned int) Round(temp);
 25951  008D04  C0C3  F068         	movff	InitUART@temp,___lltoft@c
 25952  008D08  C0C4  F069         	movff	InitUART@temp+1,___lltoft@c+1
 25953  008D0C  C0C5  F06A         	movff	InitUART@temp+2,___lltoft@c+2
 25954  008D10  C0C6  F06B         	movff	InitUART@temp+3,___lltoft@c+3
 25955  008D14  EC24  F04F         	call	___lltoft	;wreg free
 25956  008D18  C068  F0AE         	movff	?___lltoft,Round@input
 25957  008D1C  C069  F0AF         	movff	?___lltoft+1,Round@input+1
 25958  008D20  C06A  F0B0         	movff	?___lltoft+2,Round@input+2
 25959  008D24  EC56  F050         	call	_Round	;wreg free
 25960  008D28  C0AE  F0BD         	movff	?_Round,_InitUART$4077
 25961  008D2C  C0AF  F0BE         	movff	?_Round+1,_InitUART$4077+1
 25962  008D30  C0B0  F0BF         	movff	?_Round+2,_InitUART$4077+2
 25963                           
 25964                           ;UART.c: 103: spbrg = (unsigned int) Round(temp);
 25965  008D34  C0BD  F09F         	movff	_InitUART$4077,___fttol@f1
 25966  008D38  C0BE  F0A0         	movff	_InitUART$4077+1,___fttol@f1+1
 25967  008D3C  C0BF  F0A1         	movff	_InitUART$4077+2,___fttol@f1+2
 25968  008D40  EC6A  F041         	call	___fttol	;wreg free
 25969  008D44  C09F  F0C0         	movff	?___fttol,InitUART@spbrg
 25970  008D48  C0A0  F0C1         	movff	?___fttol+1,InitUART@spbrg+1
 25971                           
 25972                           ;UART.c: 105: BAUDCONbits.BRG16 = 1;
 25973  008D4C  86B8               	bsf	4024,3,c	;volatile
 25974                           
 25975                           ;UART.c: 107: ClearUSART();
 25976  008D4E  ECC2  F054         	call	_ClearUSART	;wreg free
 25977                           
 25978                           ;UART.c: 108: OpenUSART(config, spbrg);
 25979  008D52  C0C0  F060         	movff	InitUART@spbrg,OpenUSART@spbrg
 25980  008D56  C0C1  F061         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
 25981  008D5A  0100               	movlb	0	; () banked
 25982  008D5C  51C2               	movf	InitUART@config& (0+255),w,b
 25983  008D5E  EC64  F04F         	call	_OpenUSART
 25984                           
 25985                           ;UART.c: 110: PIR1bits.RCIF = 0;
 25986  008D62  9A9E               	bcf	3998,5,c	;volatile
 25987                           
 25988                           ;UART.c: 111: PIE1bits.RCIE = 0;
 25989  008D64  9A9D               	bcf	3997,5,c	;volatile
 25990                           
 25991                           ;UART.c: 112: INTCONbits.PEIE = 1;
 25992  008D66  8CF2               	bsf	intcon,6,c	;volatile
 25993  008D68  0012               	return		;funcret
 25994  008D6A                     __end_of_InitUART:
 25995                           	opt stack 0
 25996                           tblptru	equ	0xFF8
 25997                           tblptrh	equ	0xFF7
 25998                           tblptrl	equ	0xFF6
 25999                           tablat	equ	0xFF5
 26000                           prodh	equ	0xFF4
 26001                           prodl	equ	0xFF3
 26002                           intcon	equ	0xFF2
 26003                           intcon2	equ	0xFF1
 26004                           indf0	equ	0xFEF
 26005                           postinc0	equ	0xFEE
 26006                           plusw0	equ	0xFEB
 26007                           fsr0h	equ	0xFEA
 26008                           fsr0l	equ	0xFE9
 26009                           wreg	equ	0xFE8
 26010                           indf1	equ	0xFE7
 26011                           postdec1	equ	0xFE5
 26012                           fsr1h	equ	0xFE2
 26013                           fsr1l	equ	0xFE1
 26014                           indf2	equ	0xFDF
 26015                           postinc2	equ	0xFDE
 26016                           postdec2	equ	0xFDD
 26017                           plusw2	equ	0xFDB
 26018                           fsr2h	equ	0xFDA
 26019                           fsr2l	equ	0xFD9
 26020                           status	equ	0xFD8
 26021                           
 26022 ;; *************** function _Round *****************
 26023 ;; Defined at:
 26024 ;;		line 205 in file "MISC.c"
 26025 ;; Parameters:    Size  Location     Type
 26026 ;;  input           3   78[BANK0 ] unsigned char 
 26027 ;; Auto vars:     Size  Location     Type
 26028 ;;  temp            4   81[BANK0 ] long 
 26029 ;; Return value:  Size  Location     Type
 26030 ;;                  3   78[BANK0 ] long 
 26031 ;; Registers used:
 26032 ;;		wreg, status,2, status,0, cstack
 26033 ;; Tracked objects:
 26034 ;;		On entry : 0/0
 26035 ;;		On exit  : 0/0
 26036 ;;		Unchanged: 0/0
 26037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26038 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26039 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26041 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26042 ;;Total ram usage:        7 bytes
 26043 ;; Hardware stack levels used:    1
 26044 ;; Hardware stack levels required when called:    7
 26045 ;; This function calls:
 26046 ;;		___altoft
 26047 ;;		___ftadd
 26048 ;;		___fttol
 26049 ;; This function is called by:
 26050 ;;		_InitUART
 26051 ;; This function uses a non-reentrant model
 26052 ;;
 26053                           
 26054                           	psect	text45
 26055  00A0AC                     __ptext45:
 26056                           	opt stack 0
 26057  00A0AC                     _Round:
 26058                           	opt stack 21
 26059                           
 26060                           ;MISC.c: 207: long temp = (long)(input + 0.5);
 26061                           
 26062                           ;incstack = 0
 26063  00A0AC  0E00               	movlw	0
 26064  00A0AE  0100               	movlb	0	; () banked
 26065  00A0B0  6F96               	movwf	___ftadd@f2& (0+255),b
 26066  00A0B2  0E00               	movlw	0
 26067  00A0B4  0100               	movlb	0	; () banked
 26068  00A0B6  6F97               	movwf	(___ftadd@f2+1)& (0+255),b
 26069  00A0B8  0E3F               	movlw	63
 26070  00A0BA  0100               	movlb	0	; () banked
 26071  00A0BC  6F98               	movwf	(___ftadd@f2+2)& (0+255),b
 26072  00A0BE  C0AE  F093         	movff	Round@input,___ftadd@f1
 26073  00A0C2  C0AF  F094         	movff	Round@input+1,___ftadd@f1+1
 26074  00A0C6  C0B0  F095         	movff	Round@input+2,___ftadd@f1+2
 26075  00A0CA  EC1D  F037         	call	___ftadd	;wreg free
 26076  00A0CE  C093  F09F         	movff	?___ftadd,___fttol@f1
 26077  00A0D2  C094  F0A0         	movff	?___ftadd+1,___fttol@f1+1
 26078  00A0D6  C095  F0A1         	movff	?___ftadd+2,___fttol@f1+2
 26079  00A0DA  EC6A  F041         	call	___fttol	;wreg free
 26080  00A0DE  C09F  F0B1         	movff	?___fttol,Round@temp
 26081  00A0E2  C0A0  F0B2         	movff	?___fttol+1,Round@temp+1
 26082  00A0E6  C0A1  F0B3         	movff	?___fttol+2,Round@temp+2
 26083  00A0EA  C0A2  F0B4         	movff	?___fttol+3,Round@temp+3
 26084                           
 26085                           ;MISC.c: 209: return temp;
 26086  00A0EE  C0B1  F068         	movff	Round@temp,___altoft@c
 26087  00A0F2  C0B2  F069         	movff	Round@temp+1,___altoft@c+1
 26088  00A0F6  C0B3  F06A         	movff	Round@temp+2,___altoft@c+2
 26089  00A0FA  C0B4  F06B         	movff	Round@temp+3,___altoft@c+3
 26090  00A0FE  EC18  F04D         	call	___altoft	;wreg free
 26091  00A102  C068  F0AE         	movff	?___altoft,?_Round
 26092  00A106  C069  F0AF         	movff	?___altoft+1,?_Round+1
 26093  00A10A  C06A  F0B0         	movff	?___altoft+2,?_Round+2
 26094  00A10E  0012               	return	
 26095  00A110  0012               	return		;funcret
 26096  00A112                     __end_of_Round:
 26097                           	opt stack 0
 26098                           tblptru	equ	0xFF8
 26099                           tblptrh	equ	0xFF7
 26100                           tblptrl	equ	0xFF6
 26101                           tablat	equ	0xFF5
 26102                           prodh	equ	0xFF4
 26103                           prodl	equ	0xFF3
 26104                           intcon	equ	0xFF2
 26105                           intcon2	equ	0xFF1
 26106                           indf0	equ	0xFEF
 26107                           postinc0	equ	0xFEE
 26108                           plusw0	equ	0xFEB
 26109                           fsr0h	equ	0xFEA
 26110                           fsr0l	equ	0xFE9
 26111                           wreg	equ	0xFE8
 26112                           indf1	equ	0xFE7
 26113                           postdec1	equ	0xFE5
 26114                           fsr1h	equ	0xFE2
 26115                           fsr1l	equ	0xFE1
 26116                           indf2	equ	0xFDF
 26117                           postinc2	equ	0xFDE
 26118                           postdec2	equ	0xFDD
 26119                           plusw2	equ	0xFDB
 26120                           fsr2h	equ	0xFDA
 26121                           fsr2l	equ	0xFD9
 26122                           status	equ	0xFD8
 26123                           
 26124 ;; *************** function ___altoft *****************
 26125 ;; Defined at:
 26126 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
 26127 ;; Parameters:    Size  Location     Type
 26128 ;;  c               4    8[BANK0 ] long 
 26129 ;; Auto vars:     Size  Location     Type
 26130 ;;  sign            1   17[BANK0 ] unsigned char 
 26131 ;;  exp             1   16[BANK0 ] unsigned char 
 26132 ;; Return value:  Size  Location     Type
 26133 ;;                  3    8[BANK0 ] float 
 26134 ;; Registers used:
 26135 ;;		wreg, status,2, status,0, cstack
 26136 ;; Tracked objects:
 26137 ;;		On entry : 0/0
 26138 ;;		On exit  : 0/0
 26139 ;;		Unchanged: 0/0
 26140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26141 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26142 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26143 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26144 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26145 ;;Total ram usage:       10 bytes
 26146 ;; Hardware stack levels used:    1
 26147 ;; Hardware stack levels required when called:    6
 26148 ;; This function calls:
 26149 ;;		___ftpack
 26150 ;; This function is called by:
 26151 ;;		_Round
 26152 ;; This function uses a non-reentrant model
 26153 ;;
 26154                           
 26155                           	psect	text46
 26156  009A30                     __ptext46:
 26157                           	opt stack 0
 26158  009A30                     ___altoft:
 26159                           	opt stack 21
 26160                           
 26161                           ;incstack = 0
 26162  009A30  0E00               	movlw	0
 26163  009A32  0100               	movlb	0	; () banked
 26164  009A34  6F71               	movwf	___altoft@sign& (0+255),b
 26165  009A36  0E8E               	movlw	142
 26166  009A38  0100               	movlb	0	; () banked
 26167  009A3A  6F70               	movwf	___altoft@exp& (0+255),b
 26168                           
 26169                           ; BSR set to: 0
 26170  009A3C  0100               	movlb	0	; () banked
 26171  009A3E  AF6B               	btfss	(___altoft@c+3)& (0+255),7,b
 26172  009A40  D016               	goto	l10558
 26173                           
 26174                           ; BSR set to: 0
 26175  009A42  0100               	movlb	0	; () banked
 26176  009A44  1F6B               	comf	(___altoft@c+3)& (0+255),f,b
 26177  009A46  1F6A               	comf	(___altoft@c+2)& (0+255),f,b
 26178  009A48  1F69               	comf	(___altoft@c+1)& (0+255),f,b
 26179  009A4A  6D68               	negf	___altoft@c& (0+255),b
 26180  009A4C  0E00               	movlw	0
 26181  009A4E  2369               	addwfc	(___altoft@c+1)& (0+255),f,b
 26182  009A50  236A               	addwfc	(___altoft@c+2)& (0+255),f,b
 26183  009A52  236B               	addwfc	(___altoft@c+3)& (0+255),f,b
 26184                           
 26185                           ; BSR set to: 0
 26186  009A54  0E01               	movlw	1
 26187  009A56  0100               	movlb	0	; () banked
 26188  009A58  6F71               	movwf	___altoft@sign& (0+255),b
 26189                           
 26190                           ; BSR set to: 0
 26191  009A5A  D009               	goto	l10558
 26192  009A5C                     l10556:
 26193                           
 26194                           ; BSR set to: 0
 26195  009A5C  0100               	movlb	0	; () banked
 26196  009A5E  90D8               	bcf	status,0,c
 26197  009A60  336B               	rrcf	(___altoft@c+3)& (0+255),f,b
 26198  009A62  336A               	rrcf	(___altoft@c+2)& (0+255),f,b
 26199  009A64  3369               	rrcf	(___altoft@c+1)& (0+255),f,b
 26200  009A66  3368               	rrcf	___altoft@c& (0+255),f,b
 26201  009A68  0100               	movlb	0	; () banked
 26202  009A6A  2B70               	incf	___altoft@exp& (0+255),f,b
 26203  009A6C  D000               	goto	l10558
 26204  009A6E                     l10558:
 26205                           
 26206                           ; BSR set to: 0
 26207  009A6E  0E00               	movlw	0
 26208  009A70  0100               	movlb	0	; () banked
 26209  009A72  1568               	andwf	___altoft@c& (0+255),w,b
 26210  009A74  0100               	movlb	0	; () banked
 26211  009A76  6F6C               	movwf	??___altoft& (0+255),b
 26212  009A78  0E00               	movlw	0
 26213  009A7A  0100               	movlb	0	; () banked
 26214  009A7C  1569               	andwf	(___altoft@c+1)& (0+255),w,b
 26215  009A7E  0100               	movlb	0	; () banked
 26216  009A80  6F6D               	movwf	(??___altoft+1)& (0+255),b
 26217  009A82  0E00               	movlw	0
 26218  009A84  0100               	movlb	0	; () banked
 26219  009A86  156A               	andwf	(___altoft@c+2)& (0+255),w,b
 26220  009A88  0100               	movlb	0	; () banked
 26221  009A8A  6F6E               	movwf	(??___altoft+2)& (0+255),b
 26222  009A8C  0EFF               	movlw	255
 26223  009A8E  0100               	movlb	0	; () banked
 26224  009A90  156B               	andwf	(___altoft@c+3)& (0+255),w,b
 26225  009A92  0100               	movlb	0	; () banked
 26226  009A94  6F6F               	movwf	(??___altoft+3)& (0+255),b
 26227  009A96  0100               	movlb	0	; () banked
 26228  009A98  516C               	movf	??___altoft& (0+255),w,b
 26229  009A9A  0100               	movlb	0	; () banked
 26230  009A9C  116D               	iorwf	(??___altoft+1)& (0+255),w,b
 26231  009A9E  0100               	movlb	0	; () banked
 26232  009AA0  116E               	iorwf	(??___altoft+2)& (0+255),w,b
 26233  009AA2  0100               	movlb	0	; () banked
 26234  009AA4  116F               	iorwf	(??___altoft+3)& (0+255),w,b
 26235  009AA6  A4D8               	btfss	status,2,c
 26236  009AA8  D7D9               	goto	l10556
 26237                           
 26238                           ; BSR set to: 0
 26239                           
 26240                           ; BSR set to: 0
 26241  009AAA  C068  F060         	movff	___altoft@c,___ftpack@arg
 26242  009AAE  C069  F061         	movff	___altoft@c+1,___ftpack@arg+1
 26243  009AB2  C06A  F062         	movff	___altoft@c+2,___ftpack@arg+2
 26244  009AB6  C070  F063         	movff	___altoft@exp,___ftpack@exp
 26245  009ABA  C071  F064         	movff	___altoft@sign,___ftpack@sign
 26246  009ABE  ECED  F043         	call	___ftpack	;wreg free
 26247  009AC2  C060  F068         	movff	?___ftpack,?___altoft
 26248  009AC6  C061  F069         	movff	?___ftpack+1,?___altoft+1
 26249  009ACA  C062  F06A         	movff	?___ftpack+2,?___altoft+2
 26250  009ACE  0012               	return	
 26251  009AD0  0012               	return		;funcret
 26252  009AD2                     __end_of___altoft:
 26253                           	opt stack 0
 26254                           tblptru	equ	0xFF8
 26255                           tblptrh	equ	0xFF7
 26256                           tblptrl	equ	0xFF6
 26257                           tablat	equ	0xFF5
 26258                           prodh	equ	0xFF4
 26259                           prodl	equ	0xFF3
 26260                           intcon	equ	0xFF2
 26261                           intcon2	equ	0xFF1
 26262                           indf0	equ	0xFEF
 26263                           postinc0	equ	0xFEE
 26264                           plusw0	equ	0xFEB
 26265                           fsr0h	equ	0xFEA
 26266                           fsr0l	equ	0xFE9
 26267                           wreg	equ	0xFE8
 26268                           indf1	equ	0xFE7
 26269                           postdec1	equ	0xFE5
 26270                           fsr1h	equ	0xFE2
 26271                           fsr1l	equ	0xFE1
 26272                           indf2	equ	0xFDF
 26273                           postinc2	equ	0xFDE
 26274                           postdec2	equ	0xFDD
 26275                           plusw2	equ	0xFDB
 26276                           fsr2h	equ	0xFDA
 26277                           fsr2l	equ	0xFD9
 26278                           status	equ	0xFD8
 26279                           
 26280 ;; *************** function _OpenUSART *****************
 26281 ;; Defined at:
 26282 ;;		line 120 in file "UART.c"
 26283 ;; Parameters:    Size  Location     Type
 26284 ;;  config          1    wreg     unsigned char 
 26285 ;;  spbrg           2    0[BANK0 ] unsigned int 
 26286 ;; Auto vars:     Size  Location     Type
 26287 ;;  config          1    2[BANK0 ] unsigned char 
 26288 ;; Return value:  Size  Location     Type
 26289 ;;		None               void
 26290 ;; Registers used:
 26291 ;;		wreg, status,2
 26292 ;; Tracked objects:
 26293 ;;		On entry : 0/0
 26294 ;;		On exit  : 0/0
 26295 ;;		Unchanged: 0/0
 26296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26297 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26298 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26300 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26301 ;;Total ram usage:        3 bytes
 26302 ;; Hardware stack levels used:    1
 26303 ;; Hardware stack levels required when called:    5
 26304 ;; This function calls:
 26305 ;;		Nothing
 26306 ;; This function is called by:
 26307 ;;		_InitUART
 26308 ;; This function uses a non-reentrant model
 26309 ;;
 26310                           
 26311                           	psect	text47
 26312  009EC8                     __ptext47:
 26313                           	opt stack 0
 26314  009EC8                     _OpenUSART:
 26315                           	opt stack 23
 26316                           
 26317                           ;incstack = 0
 26318                           ;OpenUSART@config stored from wreg
 26319  009EC8  0100               	movlb	0	; () banked
 26320  009ECA  6F62               	movwf	OpenUSART@config& (0+255),b
 26321                           
 26322                           ; BSR set to: 0
 26323                           ;UART.c: 122: TXSTA = 0;
 26324  009ECC  0E00               	movlw	0
 26325  009ECE  6EAC               	movwf	4012,c	;volatile
 26326                           
 26327                           ;UART.c: 123: RCSTA = 0;
 26328  009ED0  0E00               	movlw	0
 26329  009ED2  6EAB               	movwf	4011,c	;volatile
 26330                           
 26331                           ; BSR set to: 0
 26332                           ;UART.c: 125: if(config&0x01)
 26333  009ED4  0100               	movlb	0	; () banked
 26334  009ED6  A162               	btfss	OpenUSART@config& (0+255),0,b
 26335  009ED8  D002               	goto	l10648
 26336                           
 26337                           ; BSR set to: 0
 26338                           ;UART.c: 126: {
 26339                           ;UART.c: 127: TXSTAbits.SYNC = 1;
 26340  009EDA  88AC               	bsf	4012,4,c	;volatile
 26341  009EDC  D000               	goto	l10648
 26342  009EDE                     l10648:
 26343                           
 26344                           ; BSR set to: 0
 26345                           ;UART.c: 128: }
 26346                           ;UART.c: 130: if(config&0x02)
 26347  009EDE  0100               	movlb	0	; () banked
 26348  009EE0  A362               	btfss	OpenUSART@config& (0+255),1,b
 26349  009EE2  D003               	goto	l10652
 26350                           
 26351                           ; BSR set to: 0
 26352                           ;UART.c: 131: {
 26353                           ;UART.c: 132: TXSTAbits.TX9 = 1;
 26354  009EE4  8CAC               	bsf	4012,6,c	;volatile
 26355                           
 26356                           ;UART.c: 133: RCSTAbits.RX9 = 1;
 26357  009EE6  8CAB               	bsf	4011,6,c	;volatile
 26358  009EE8  D000               	goto	l10652
 26359  009EEA                     l10652:
 26360                           
 26361                           ; BSR set to: 0
 26362                           ;UART.c: 134: }
 26363                           ;UART.c: 136: if(config&0x04)
 26364  009EEA  0100               	movlb	0	; () banked
 26365  009EEC  A562               	btfss	OpenUSART@config& (0+255),2,b
 26366  009EEE  D002               	goto	l10656
 26367                           
 26368                           ; BSR set to: 0
 26369                           ;UART.c: 137: {
 26370                           ;UART.c: 138: TXSTAbits.CSRC = 1;
 26371  009EF0  8EAC               	bsf	4012,7,c	;volatile
 26372  009EF2  D000               	goto	l10656
 26373  009EF4                     l10656:
 26374                           
 26375                           ; BSR set to: 0
 26376                           ;UART.c: 139: }
 26377                           ;UART.c: 141: if(config&0x08)
 26378  009EF4  0100               	movlb	0	; () banked
 26379  009EF6  A762               	btfss	OpenUSART@config& (0+255),3,b
 26380  009EF8  D002               	goto	l758
 26381                           
 26382                           ; BSR set to: 0
 26383                           ;UART.c: 142: {
 26384                           ;UART.c: 143: RCSTAbits.CREN = 1;
 26385  009EFA  88AB               	bsf	4011,4,c	;volatile
 26386                           
 26387                           ;UART.c: 144: }
 26388  009EFC  D002               	goto	l10660
 26389  009EFE                     l758:
 26390                           
 26391                           ; BSR set to: 0
 26392                           ;UART.c: 145: else
 26393                           ;UART.c: 146: {
 26394                           ;UART.c: 147: RCSTAbits.SREN = 1;
 26395  009EFE  8AAB               	bsf	4011,5,c	;volatile
 26396  009F00  D000               	goto	l10660
 26397  009F02                     l10660:
 26398                           
 26399                           ; BSR set to: 0
 26400                           ;UART.c: 148: }
 26401                           ;UART.c: 150: if(config&0x10)
 26402  009F02  0100               	movlb	0	; () banked
 26403  009F04  A962               	btfss	OpenUSART@config& (0+255),4,b
 26404  009F06  D002               	goto	l10664
 26405                           
 26406                           ; BSR set to: 0
 26407                           ;UART.c: 151: {
 26408                           ;UART.c: 152: TXSTAbits.BRGH = 1;
 26409  009F08  84AC               	bsf	4012,2,c	;volatile
 26410  009F0A  D000               	goto	l10664
 26411  009F0C                     l10664:
 26412                           
 26413                           ; BSR set to: 0
 26414                           ;UART.c: 153: }
 26415                           ;UART.c: 155: if(config&0x20)
 26416  009F0C  0100               	movlb	0	; () banked
 26417  009F0E  AB62               	btfss	OpenUSART@config& (0+255),5,b
 26418  009F10  D002               	goto	l10668
 26419                           
 26420                           ; BSR set to: 0
 26421                           ;UART.c: 156: {
 26422                           ;UART.c: 157: RCSTAbits.ADEN = 1;
 26423  009F12  86AB               	bsf	4011,3,c	;volatile
 26424  009F14  D000               	goto	l10668
 26425  009F16                     l10668:
 26426                           
 26427                           ; BSR set to: 0
 26428                           ;UART.c: 158: }
 26429                           ;UART.c: 160: if(config&0x40)
 26430  009F16  0100               	movlb	0	; () banked
 26431  009F18  AD62               	btfss	OpenUSART@config& (0+255),6,b
 26432  009F1A  D003               	goto	l762
 26433                           
 26434                           ; BSR set to: 0
 26435                           ;UART.c: 161: {
 26436                           ;UART.c: 162: PIR1bits.RCIF = 0;
 26437  009F1C  9A9E               	bcf	3998,5,c	;volatile
 26438                           
 26439                           ;UART.c: 163: PIE1bits.RCIE = 1;
 26440  009F1E  8A9D               	bsf	3997,5,c	;volatile
 26441                           
 26442                           ;UART.c: 165: }
 26443  009F20  D002               	goto	l10672
 26444  009F22                     l762:
 26445                           
 26446                           ; BSR set to: 0
 26447                           ;UART.c: 166: else
 26448                           ;UART.c: 167: {
 26449                           ;UART.c: 168: PIE1bits.RCIE = 0;
 26450  009F22  9A9D               	bcf	3997,5,c	;volatile
 26451  009F24  D000               	goto	l10672
 26452  009F26                     l10672:
 26453                           
 26454                           ; BSR set to: 0
 26455                           ;UART.c: 169: }
 26456                           ;UART.c: 171: if(config&0x80)
 26457  009F26  0100               	movlb	0	; () banked
 26458  009F28  AF62               	btfss	OpenUSART@config& (0+255),7,b
 26459  009F2A  D003               	goto	l764
 26460                           
 26461                           ; BSR set to: 0
 26462                           ;UART.c: 172: {
 26463                           ;UART.c: 173: PIR1bits.TXIF = 0;
 26464  009F2C  989E               	bcf	3998,4,c	;volatile
 26465                           
 26466                           ;UART.c: 174: PIE1bits.TXIE = 1;
 26467  009F2E  889D               	bsf	3997,4,c	;volatile
 26468                           
 26469                           ;UART.c: 175: }
 26470  009F30  D001               	goto	l765
 26471  009F32                     l764:
 26472                           
 26473                           ; BSR set to: 0
 26474                           ;UART.c: 176: else
 26475                           ;UART.c: 177: {
 26476                           ;UART.c: 178: PIE1bits.TXIE = 0;
 26477  009F32  989D               	bcf	3997,4,c	;volatile
 26478  009F34                     l765:
 26479                           
 26480                           ; BSR set to: 0
 26481                           ;UART.c: 179: }
 26482                           ;UART.c: 181: SPBRG = spbrg;
 26483  009F34  C060  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 26484                           
 26485                           ; BSR set to: 0
 26486                           ;UART.c: 182: SPBRGH = spbrg >> 8;
 26487  009F38  0100               	movlb	0	; () banked
 26488  009F3A  5161               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
 26489  009F3C  6EB0               	movwf	4016,c	;volatile
 26490                           
 26491                           ; BSR set to: 0
 26492                           ;UART.c: 184: TXSTAbits.TXEN = 1;
 26493  009F3E  8AAC               	bsf	4012,5,c	;volatile
 26494                           
 26495                           ; BSR set to: 0
 26496                           ;UART.c: 185: RCSTAbits.SPEN = 1;
 26497  009F40  8EAB               	bsf	4011,7,c	;volatile
 26498                           
 26499                           ; BSR set to: 0
 26500  009F42  0012               	return		;funcret
 26501  009F44                     __end_of_OpenUSART:
 26502                           	opt stack 0
 26503                           tblptru	equ	0xFF8
 26504                           tblptrh	equ	0xFF7
 26505                           tblptrl	equ	0xFF6
 26506                           tablat	equ	0xFF5
 26507                           prodh	equ	0xFF4
 26508                           prodl	equ	0xFF3
 26509                           intcon	equ	0xFF2
 26510                           intcon2	equ	0xFF1
 26511                           indf0	equ	0xFEF
 26512                           postinc0	equ	0xFEE
 26513                           plusw0	equ	0xFEB
 26514                           fsr0h	equ	0xFEA
 26515                           fsr0l	equ	0xFE9
 26516                           wreg	equ	0xFE8
 26517                           indf1	equ	0xFE7
 26518                           postdec1	equ	0xFE5
 26519                           fsr1h	equ	0xFE2
 26520                           fsr1l	equ	0xFE1
 26521                           indf2	equ	0xFDF
 26522                           postinc2	equ	0xFDE
 26523                           postdec2	equ	0xFDD
 26524                           plusw2	equ	0xFDB
 26525                           fsr2h	equ	0xFDA
 26526                           fsr2l	equ	0xFD9
 26527                           status	equ	0xFD8
 26528                           
 26529 ;; *************** function _Local_CloseUSART *****************
 26530 ;; Defined at:
 26531 ;;		line 69 in file "UART.c"
 26532 ;; Parameters:    Size  Location     Type
 26533 ;;		None
 26534 ;; Auto vars:     Size  Location     Type
 26535 ;;		None
 26536 ;; Return value:  Size  Location     Type
 26537 ;;		None               void
 26538 ;; Registers used:
 26539 ;;		None
 26540 ;; Tracked objects:
 26541 ;;		On entry : 0/0
 26542 ;;		On exit  : 0/0
 26543 ;;		Unchanged: 0/0
 26544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26549 ;;Total ram usage:        0 bytes
 26550 ;; Hardware stack levels used:    1
 26551 ;; Hardware stack levels required when called:    5
 26552 ;; This function calls:
 26553 ;;		Nothing
 26554 ;; This function is called by:
 26555 ;;		_InitUART
 26556 ;; This function uses a non-reentrant model
 26557 ;;
 26558                           
 26559                           	psect	text48
 26560  00A9C6                     __ptext48:
 26561                           	opt stack 0
 26562  00A9C6                     _Local_CloseUSART:
 26563                           	opt stack 23
 26564                           
 26565                           ;UART.c: 71: PIE1bits.RCIE = 0;
 26566                           
 26567                           ; BSR set to: 0
 26568                           ;incstack = 0
 26569  00A9C6  9A9D               	bcf	3997,5,c	;volatile
 26570                           
 26571                           ;UART.c: 72: PIE1bits.TXIE = 0;
 26572  00A9C8  989D               	bcf	3997,4,c	;volatile
 26573                           
 26574                           ;UART.c: 73: RCSTAbits.SPEN = 0;
 26575  00A9CA  9EAB               	bcf	4011,7,c	;volatile
 26576                           
 26577                           ;UART.c: 74: RCSTAbits.CREN = 0;
 26578  00A9CC  98AB               	bcf	4011,4,c	;volatile
 26579                           
 26580                           ;UART.c: 75: RCSTAbits.FERR = 0;
 26581  00A9CE  94AB               	bcf	4011,2,c	;volatile
 26582                           
 26583                           ;UART.c: 76: TXSTAbits.TXEN = 0;
 26584  00A9D0  9AAC               	bcf	4012,5,c	;volatile
 26585  00A9D2  0012               	return		;funcret
 26586  00A9D4                     __end_of_Local_CloseUSART:
 26587                           	opt stack 0
 26588                           tblptru	equ	0xFF8
 26589                           tblptrh	equ	0xFF7
 26590                           tblptrl	equ	0xFF6
 26591                           tablat	equ	0xFF5
 26592                           prodh	equ	0xFF4
 26593                           prodl	equ	0xFF3
 26594                           intcon	equ	0xFF2
 26595                           intcon2	equ	0xFF1
 26596                           indf0	equ	0xFEF
 26597                           postinc0	equ	0xFEE
 26598                           plusw0	equ	0xFEB
 26599                           fsr0h	equ	0xFEA
 26600                           fsr0l	equ	0xFE9
 26601                           wreg	equ	0xFE8
 26602                           indf1	equ	0xFE7
 26603                           postdec1	equ	0xFE5
 26604                           fsr1h	equ	0xFE2
 26605                           fsr1l	equ	0xFE1
 26606                           indf2	equ	0xFDF
 26607                           postinc2	equ	0xFDE
 26608                           postdec2	equ	0xFDD
 26609                           plusw2	equ	0xFDB
 26610                           fsr2h	equ	0xFDA
 26611                           fsr2l	equ	0xFD9
 26612                           status	equ	0xFD8
 26613                           
 26614 ;; *************** function _InitTimers *****************
 26615 ;; Defined at:
 26616 ;;		line 51 in file "Timer.c"
 26617 ;; Parameters:    Size  Location     Type
 26618 ;;		None
 26619 ;; Auto vars:     Size  Location     Type
 26620 ;;		None
 26621 ;; Return value:  Size  Location     Type
 26622 ;;		None               void
 26623 ;; Registers used:
 26624 ;;		wreg, status,2, cstack
 26625 ;; Tracked objects:
 26626 ;;		On entry : 0/0
 26627 ;;		On exit  : 0/0
 26628 ;;		Unchanged: 0/0
 26629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26634 ;;Total ram usage:        0 bytes
 26635 ;; Hardware stack levels used:    1
 26636 ;; Hardware stack levels required when called:    6
 26637 ;; This function calls:
 26638 ;;		_InitTimer1
 26639 ;;		_InitTimer2
 26640 ;;		_InitTimer3
 26641 ;; This function is called by:
 26642 ;;		_Init_System
 26643 ;; This function uses a non-reentrant model
 26644 ;;
 26645                           
 26646                           	psect	text49
 26647  00A938                     __ptext49:
 26648                           	opt stack 0
 26649  00A938                     _InitTimers:
 26650                           	opt stack 23
 26651                           
 26652                           ;Timer.c: 53: InitTimer1();
 26653                           
 26654                           ;incstack = 0
 26655  00A938  ECF1  F054         	call	_InitTimer1	;wreg free
 26656                           
 26657                           ;Timer.c: 54: (PIE1bits.TMR1IE = TRUE);
 26658  00A93C  809D               	bsf	3997,0,c	;volatile
 26659                           
 26660                           ;Timer.c: 55: InitTimer2();
 26661  00A93E  ECEA  F054         	call	_InitTimer2	;wreg free
 26662                           
 26663                           ;Timer.c: 56: (PIE1bits.TMR2IE = TRUE);
 26664  00A942  829D               	bsf	3997,1,c	;volatile
 26665                           
 26666                           ;Timer.c: 57: InitTimer3();
 26667  00A944  EC20  F055         	call	_InitTimer3	;wreg free
 26668                           
 26669                           ;Timer.c: 58: (PIE2bits.TMR3IE = TRUE);
 26670  00A948  82A0               	bsf	4000,1,c	;volatile
 26671  00A94A  0012               	return		;funcret
 26672  00A94C                     __end_of_InitTimers:
 26673                           	opt stack 0
 26674                           tblptru	equ	0xFF8
 26675                           tblptrh	equ	0xFF7
 26676                           tblptrl	equ	0xFF6
 26677                           tablat	equ	0xFF5
 26678                           prodh	equ	0xFF4
 26679                           prodl	equ	0xFF3
 26680                           intcon	equ	0xFF2
 26681                           intcon2	equ	0xFF1
 26682                           indf0	equ	0xFEF
 26683                           postinc0	equ	0xFEE
 26684                           plusw0	equ	0xFEB
 26685                           fsr0h	equ	0xFEA
 26686                           fsr0l	equ	0xFE9
 26687                           wreg	equ	0xFE8
 26688                           indf1	equ	0xFE7
 26689                           postdec1	equ	0xFE5
 26690                           fsr1h	equ	0xFE2
 26691                           fsr1l	equ	0xFE1
 26692                           indf2	equ	0xFDF
 26693                           postinc2	equ	0xFDE
 26694                           postdec2	equ	0xFDD
 26695                           plusw2	equ	0xFDB
 26696                           fsr2h	equ	0xFDA
 26697                           fsr2l	equ	0xFD9
 26698                           status	equ	0xFD8
 26699                           
 26700 ;; *************** function _InitTimer3 *****************
 26701 ;; Defined at:
 26702 ;;		line 163 in file "Timer.c"
 26703 ;; Parameters:    Size  Location     Type
 26704 ;;		None
 26705 ;; Auto vars:     Size  Location     Type
 26706 ;;		None
 26707 ;; Return value:  Size  Location     Type
 26708 ;;		None               void
 26709 ;; Registers used:
 26710 ;;		wreg, status,2
 26711 ;; Tracked objects:
 26712 ;;		On entry : 0/0
 26713 ;;		On exit  : 0/0
 26714 ;;		Unchanged: 0/0
 26715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26720 ;;Total ram usage:        0 bytes
 26721 ;; Hardware stack levels used:    1
 26722 ;; Hardware stack levels required when called:    5
 26723 ;; This function calls:
 26724 ;;		Nothing
 26725 ;; This function is called by:
 26726 ;;		_InitTimers
 26727 ;; This function uses a non-reentrant model
 26728 ;;
 26729                           
 26730                           	psect	text50
 26731  00AA40                     __ptext50:
 26732                           	opt stack 0
 26733  00AA40                     _InitTimer3:
 26734                           	opt stack 23
 26735                           
 26736                           ;Timer.c: 165: T3CONbits.RD16 = TRUE;
 26737                           
 26738                           ;incstack = 0
 26739  00AA40  8EB1               	bsf	4017,7,c	;volatile
 26740                           
 26741                           ;Timer.c: 166: T3CONbits.T3CKPS = 0x3;
 26742  00AA42  0E30               	movlw	48
 26743  00AA44  12B1               	iorwf	4017,f,c	;volatile
 26744                           
 26745                           ;Timer.c: 167: T3CONbits.TMR3CS = FALSE;
 26746  00AA46  92B1               	bcf	4017,1,c	;volatile
 26747  00AA48  0012               	return		;funcret
 26748  00AA4A                     __end_of_InitTimer3:
 26749                           	opt stack 0
 26750                           tblptru	equ	0xFF8
 26751                           tblptrh	equ	0xFF7
 26752                           tblptrl	equ	0xFF6
 26753                           tablat	equ	0xFF5
 26754                           prodh	equ	0xFF4
 26755                           prodl	equ	0xFF3
 26756                           intcon	equ	0xFF2
 26757                           intcon2	equ	0xFF1
 26758                           indf0	equ	0xFEF
 26759                           postinc0	equ	0xFEE
 26760                           plusw0	equ	0xFEB
 26761                           fsr0h	equ	0xFEA
 26762                           fsr0l	equ	0xFE9
 26763                           wreg	equ	0xFE8
 26764                           indf1	equ	0xFE7
 26765                           postdec1	equ	0xFE5
 26766                           fsr1h	equ	0xFE2
 26767                           fsr1l	equ	0xFE1
 26768                           indf2	equ	0xFDF
 26769                           postinc2	equ	0xFDE
 26770                           postdec2	equ	0xFDD
 26771                           plusw2	equ	0xFDB
 26772                           fsr2h	equ	0xFDA
 26773                           fsr2l	equ	0xFD9
 26774                           status	equ	0xFD8
 26775                           
 26776 ;; *************** function _InitTimer2 *****************
 26777 ;; Defined at:
 26778 ;;		line 138 in file "Timer.c"
 26779 ;; Parameters:    Size  Location     Type
 26780 ;;		None
 26781 ;; Auto vars:     Size  Location     Type
 26782 ;;		None
 26783 ;; Return value:  Size  Location     Type
 26784 ;;		None               void
 26785 ;; Registers used:
 26786 ;;		wreg, status,2
 26787 ;; Tracked objects:
 26788 ;;		On entry : 0/0
 26789 ;;		On exit  : 0/0
 26790 ;;		Unchanged: 0/0
 26791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26796 ;;Total ram usage:        0 bytes
 26797 ;; Hardware stack levels used:    1
 26798 ;; Hardware stack levels required when called:    5
 26799 ;; This function calls:
 26800 ;;		Nothing
 26801 ;; This function is called by:
 26802 ;;		_InitTimers
 26803 ;; This function uses a non-reentrant model
 26804 ;;
 26805                           
 26806                           	psect	text51
 26807  00A9D4                     __ptext51:
 26808                           	opt stack 0
 26809  00A9D4                     _InitTimer2:
 26810                           	opt stack 23
 26811                           
 26812                           ;Timer.c: 140: T2CONbits.T2OUTPS = 0xE;
 26813                           
 26814                           ;incstack = 0
 26815  00A9D4  50CA               	movf	4042,w,c	;volatile
 26816  00A9D6  0B87               	andlw	-121
 26817  00A9D8  0970               	iorlw	112
 26818  00A9DA  6ECA               	movwf	4042,c	;volatile
 26819                           
 26820                           ;Timer.c: 141: T2CONbits.T2CKPS = 0x3;
 26821  00A9DC  0E03               	movlw	3
 26822  00A9DE  12CA               	iorwf	4042,f,c	;volatile
 26823  00A9E0  0012               	return		;funcret
 26824  00A9E2                     __end_of_InitTimer2:
 26825                           	opt stack 0
 26826                           tblptru	equ	0xFF8
 26827                           tblptrh	equ	0xFF7
 26828                           tblptrl	equ	0xFF6
 26829                           tablat	equ	0xFF5
 26830                           prodh	equ	0xFF4
 26831                           prodl	equ	0xFF3
 26832                           intcon	equ	0xFF2
 26833                           intcon2	equ	0xFF1
 26834                           indf0	equ	0xFEF
 26835                           postinc0	equ	0xFEE
 26836                           plusw0	equ	0xFEB
 26837                           fsr0h	equ	0xFEA
 26838                           fsr0l	equ	0xFE9
 26839                           wreg	equ	0xFE8
 26840                           indf1	equ	0xFE7
 26841                           postdec1	equ	0xFE5
 26842                           fsr1h	equ	0xFE2
 26843                           fsr1l	equ	0xFE1
 26844                           indf2	equ	0xFDF
 26845                           postinc2	equ	0xFDE
 26846                           postdec2	equ	0xFDD
 26847                           plusw2	equ	0xFDB
 26848                           fsr2h	equ	0xFDA
 26849                           fsr2l	equ	0xFD9
 26850                           status	equ	0xFD8
 26851                           
 26852 ;; *************** function _InitTimer1 *****************
 26853 ;; Defined at:
 26854 ;;		line 109 in file "Timer.c"
 26855 ;; Parameters:    Size  Location     Type
 26856 ;;		None
 26857 ;; Auto vars:     Size  Location     Type
 26858 ;;		None
 26859 ;; Return value:  Size  Location     Type
 26860 ;;		None               void
 26861 ;; Registers used:
 26862 ;;		wreg, status,2
 26863 ;; Tracked objects:
 26864 ;;		On entry : 0/0
 26865 ;;		On exit  : 0/0
 26866 ;;		Unchanged: 0/0
 26867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26872 ;;Total ram usage:        0 bytes
 26873 ;; Hardware stack levels used:    1
 26874 ;; Hardware stack levels required when called:    5
 26875 ;; This function calls:
 26876 ;;		Nothing
 26877 ;; This function is called by:
 26878 ;;		_InitTimers
 26879 ;; This function uses a non-reentrant model
 26880 ;;
 26881                           
 26882                           	psect	text52
 26883  00A9E2                     __ptext52:
 26884                           	opt stack 0
 26885  00A9E2                     _InitTimer1:
 26886                           	opt stack 23
 26887                           
 26888                           ;Timer.c: 111: T1CONbits.RD16 = TRUE;
 26889                           
 26890                           ;incstack = 0
 26891  00A9E2  8ECD               	bsf	4045,7,c	;volatile
 26892                           
 26893                           ;Timer.c: 112: T1CONbits.T1RUN = FALSE;
 26894  00A9E4  9CCD               	bcf	4045,6,c	;volatile
 26895                           
 26896                           ;Timer.c: 113: T1CONbits.T1CKPS = 0x3;
 26897  00A9E6  0E30               	movlw	48
 26898  00A9E8  12CD               	iorwf	4045,f,c	;volatile
 26899                           
 26900                           ;Timer.c: 114: T1CONbits.T1OSCEN = FALSE;
 26901  00A9EA  96CD               	bcf	4045,3,c	;volatile
 26902                           
 26903                           ;Timer.c: 115: T1CONbits.TMR1CS = FALSE;
 26904  00A9EC  92CD               	bcf	4045,1,c	;volatile
 26905  00A9EE  0012               	return		;funcret
 26906  00A9F0                     __end_of_InitTimer1:
 26907                           	opt stack 0
 26908                           tblptru	equ	0xFF8
 26909                           tblptrh	equ	0xFF7
 26910                           tblptrl	equ	0xFF6
 26911                           tablat	equ	0xFF5
 26912                           prodh	equ	0xFF4
 26913                           prodl	equ	0xFF3
 26914                           intcon	equ	0xFF2
 26915                           intcon2	equ	0xFF1
 26916                           indf0	equ	0xFEF
 26917                           postinc0	equ	0xFEE
 26918                           plusw0	equ	0xFEB
 26919                           fsr0h	equ	0xFEA
 26920                           fsr0l	equ	0xFE9
 26921                           wreg	equ	0xFE8
 26922                           indf1	equ	0xFE7
 26923                           postdec1	equ	0xFE5
 26924                           fsr1h	equ	0xFE2
 26925                           fsr1l	equ	0xFE1
 26926                           indf2	equ	0xFDF
 26927                           postinc2	equ	0xFDE
 26928                           postdec2	equ	0xFDD
 26929                           plusw2	equ	0xFDB
 26930                           fsr2h	equ	0xFDA
 26931                           fsr2l	equ	0xFD9
 26932                           status	equ	0xFD8
 26933                           
 26934 ;; *************** function _InitIR *****************
 26935 ;; Defined at:
 26936 ;;		line 80 in file "IR.c"
 26937 ;; Parameters:    Size  Location     Type
 26938 ;;		None
 26939 ;; Auto vars:     Size  Location     Type
 26940 ;;		None
 26941 ;; Return value:  Size  Location     Type
 26942 ;;		None               void
 26943 ;; Registers used:
 26944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26945 ;; Tracked objects:
 26946 ;;		On entry : 0/0
 26947 ;;		On exit  : 0/0
 26948 ;;		Unchanged: 0/0
 26949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26954 ;;Total ram usage:        0 bytes
 26955 ;; Hardware stack levels used:    1
 26956 ;; Hardware stack levels required when called:    6
 26957 ;; This function calls:
 26958 ;;		_InitTimer0
 26959 ;;		_ReadIRpin
 26960 ;;		_ResetTimer0
 26961 ;;		_cleanBuffer16bit
 26962 ;; This function is called by:
 26963 ;;		_Init_System
 26964 ;; This function uses a non-reentrant model
 26965 ;;
 26966                           
 26967                           	psect	text53
 26968  00A378                     __ptext53:
 26969                           	opt stack 0
 26970  00A378                     _InitIR:
 26971                           	opt stack 23
 26972                           
 26973                           ;IR.c: 83: (IOCBbits.IOCB4 = 1);
 26974                           
 26975                           ;incstack = 0
 26976  00A378  887D               	bsf	3965,4,c	;volatile
 26977                           
 26978                           ;IR.c: 85: IRpinOLD = ReadIRpin();
 26979  00A37A  ECF8  F054         	call	_ReadIRpin	;wreg free
 26980  00A37E  6E40               	movwf	_IRpinOLD,c
 26981                           
 26982                           ;IR.c: 87: InitTimer0();
 26983  00A380  ECD4  F054         	call	_InitTimer0	;wreg free
 26984                           
 26985                           ;IR.c: 89: cleanBuffer16bit(IRRawCode, 100);
 26986  00A384  0E00               	movlw	low _IRRawCode
 26987  00A386  0100               	movlb	0	; () banked
 26988  00A388  6F60               	movwf	cleanBuffer16bit@data& (0+255),b
 26989  00A38A  0E06               	movlw	high _IRRawCode
 26990  00A38C  0100               	movlb	0	; () banked
 26991  00A38E  6F61               	movwf	(cleanBuffer16bit@data+1)& (0+255),b
 26992  00A390  0E00               	movlw	0
 26993  00A392  0100               	movlb	0	; () banked
 26994  00A394  6F63               	movwf	(cleanBuffer16bit@count+1)& (0+255),b
 26995  00A396  0E64               	movlw	100
 26996  00A398  6F62               	movwf	cleanBuffer16bit@count& (0+255),b
 26997  00A39A  EC89  F050         	call	_cleanBuffer16bit	;wreg free
 26998                           
 26999                           ;IR.c: 90: IR_NEC = 0;
 27000  00A39E  0E00               	movlw	0
 27001  00A3A0  0103               	movlb	3	; () banked
 27002  00A3A2  6FEC               	movwf	_IR_NEC& (0+255),b
 27003  00A3A4  0E00               	movlw	0
 27004  00A3A6  6FED               	movwf	(_IR_NEC+1)& (0+255),b
 27005  00A3A8  0E00               	movlw	0
 27006  00A3AA  6FEE               	movwf	(_IR_NEC+2)& (0+255),b
 27007  00A3AC  0E00               	movlw	0
 27008  00A3AE  6FEF               	movwf	(_IR_NEC+3)& (0+255),b
 27009                           
 27010                           ; BSR set to: 3
 27011                           ;IR.c: 91: (T0CONbits.TMR0ON = 0);
 27012  00A3B0  9ED5               	bcf	4053,7,c	;volatile
 27013                           
 27014                           ; BSR set to: 3
 27015                           ;IR.c: 93: ResetTimer0();
 27016  00A3B2  EC25  F055         	call	_ResetTimer0	;wreg free
 27017                           
 27018                           ;IR.c: 95: (INTCONbits.TMR0IE = 0);
 27019  00A3B6  9AF2               	bcf	intcon,5,c	;volatile
 27020                           
 27021                           ;IR.c: 96: INTCONbits.TMR0IF = 0;
 27022  00A3B8  94F2               	bcf	intcon,2,c	;volatile
 27023                           
 27024                           ;IR.c: 98: INTCONbits.RBIF = 0;
 27025  00A3BA  90F2               	bcf	intcon,0,c	;volatile
 27026                           
 27027                           ;IR.c: 99: INTCONbits.RBIE = 1;
 27028  00A3BC  86F2               	bsf	intcon,3,c	;volatile
 27029  00A3BE  0012               	return		;funcret
 27030  00A3C0                     __end_of_InitIR:
 27031                           	opt stack 0
 27032                           tblptru	equ	0xFF8
 27033                           tblptrh	equ	0xFF7
 27034                           tblptrl	equ	0xFF6
 27035                           tablat	equ	0xFF5
 27036                           prodh	equ	0xFF4
 27037                           prodl	equ	0xFF3
 27038                           intcon	equ	0xFF2
 27039                           intcon2	equ	0xFF1
 27040                           indf0	equ	0xFEF
 27041                           postinc0	equ	0xFEE
 27042                           plusw0	equ	0xFEB
 27043                           fsr0h	equ	0xFEA
 27044                           fsr0l	equ	0xFE9
 27045                           wreg	equ	0xFE8
 27046                           indf1	equ	0xFE7
 27047                           postdec1	equ	0xFE5
 27048                           fsr1h	equ	0xFE2
 27049                           fsr1l	equ	0xFE1
 27050                           indf2	equ	0xFDF
 27051                           postinc2	equ	0xFDE
 27052                           postdec2	equ	0xFDD
 27053                           plusw2	equ	0xFDB
 27054                           fsr2h	equ	0xFDA
 27055                           fsr2l	equ	0xFD9
 27056                           status	equ	0xFD8
 27057                           
 27058 ;; *************** function _cleanBuffer16bit *****************
 27059 ;; Defined at:
 27060 ;;		line 191 in file "MISC.c"
 27061 ;; Parameters:    Size  Location     Type
 27062 ;;  data            2    0[BANK0 ] PTR unsigned int 
 27063 ;;		 -> IRRawCode(200), 
 27064 ;;  count           2    2[BANK0 ] int 
 27065 ;; Auto vars:     Size  Location     Type
 27066 ;;  i               1    7[BANK0 ] unsigned char 
 27067 ;; Return value:  Size  Location     Type
 27068 ;;		None               void
 27069 ;; Registers used:
 27070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27071 ;; Tracked objects:
 27072 ;;		On entry : 0/0
 27073 ;;		On exit  : 0/0
 27074 ;;		Unchanged: 0/0
 27075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27076 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27077 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27078 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27079 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27080 ;;Total ram usage:        8 bytes
 27081 ;; Hardware stack levels used:    1
 27082 ;; Hardware stack levels required when called:    5
 27083 ;; This function calls:
 27084 ;;		Nothing
 27085 ;; This function is called by:
 27086 ;;		_InitIR
 27087 ;; This function uses a non-reentrant model
 27088 ;;
 27089                           
 27090                           	psect	text54
 27091  00A112                     __ptext54:
 27092                           	opt stack 0
 27093  00A112                     _cleanBuffer16bit:
 27094                           	opt stack 23
 27095                           
 27096                           ;MISC.c: 193: unsigned char i=0;
 27097                           
 27098                           ;incstack = 0
 27099  00A112  0E00               	movlw	0
 27100  00A114  0100               	movlb	0	; () banked
 27101  00A116  6F67               	movwf	cleanBuffer16bit@i& (0+255),b
 27102                           
 27103                           ;MISC.c: 194: for(i=0; i<count;i++)
 27104  00A118  0E00               	movlw	0
 27105  00A11A  0100               	movlb	0	; () banked
 27106  00A11C  6F67               	movwf	cleanBuffer16bit@i& (0+255),b
 27107  00A11E  D012               	goto	l10612
 27108  00A120                     l10608:
 27109                           
 27110                           ; BSR set to: 0
 27111                           ;MISC.c: 195: {
 27112                           ;MISC.c: 196: data[i]= 0;
 27113  00A120  0100               	movlb	0	; () banked
 27114  00A122  5167               	movf	cleanBuffer16bit@i& (0+255),w,b
 27115  00A124  0D02               	mullw	2
 27116  00A126  50F3               	movf	prodl,w,c
 27117  00A128  0100               	movlb	0	; () banked
 27118  00A12A  2560               	addwf	cleanBuffer16bit@data& (0+255),w,b
 27119  00A12C  6ED9               	movwf	fsr2l,c
 27120  00A12E  50F4               	movf	prodh,w,c
 27121  00A130  0100               	movlb	0	; () banked
 27122  00A132  2161               	addwfc	(cleanBuffer16bit@data+1)& (0+255),w,b
 27123  00A134  6EDA               	movwf	fsr2h,c
 27124  00A136  0E00               	movlw	0
 27125  00A138  6EDE               	movwf	postinc2,c
 27126  00A13A  0E00               	movlw	0
 27127  00A13C  6EDD               	movwf	postdec2,c
 27128                           
 27129                           ; BSR set to: 0
 27130  00A13E  0100               	movlb	0	; () banked
 27131  00A140  2B67               	incf	cleanBuffer16bit@i& (0+255),f,b
 27132  00A142  D000               	goto	l10612
 27133  00A144                     l10612:
 27134                           
 27135                           ; BSR set to: 0
 27136  00A144  0100               	movlb	0	; () banked
 27137  00A146  5167               	movf	cleanBuffer16bit@i& (0+255),w,b
 27138  00A148  0100               	movlb	0	; () banked
 27139  00A14A  6F64               	movwf	??_cleanBuffer16bit& (0+255),b
 27140  00A14C  6B65               	clrf	(??_cleanBuffer16bit+1)& (0+255),b
 27141  00A14E  0100               	movlb	0	; () banked
 27142  00A150  5162               	movf	cleanBuffer16bit@count& (0+255),w,b
 27143  00A152  0100               	movlb	0	; () banked
 27144  00A154  5D64               	subwf	??_cleanBuffer16bit& (0+255),w,b
 27145  00A156  0100               	movlb	0	; () banked
 27146  00A158  5165               	movf	(??_cleanBuffer16bit+1)& (0+255),w,b
 27147  00A15A  0A80               	xorlw	128
 27148  00A15C  0100               	movlb	0	; () banked
 27149  00A15E  6F66               	movwf	(??_cleanBuffer16bit+2)& (0+255),b
 27150  00A160  0100               	movlb	0	; () banked
 27151  00A162  5163               	movf	(cleanBuffer16bit@count+1)& (0+255),w,b
 27152  00A164  0A80               	xorlw	128
 27153  00A166  0100               	movlb	0	; () banked
 27154  00A168  5966               	subwfb	(??_cleanBuffer16bit+2)& (0+255),w,b
 27155  00A16A  A0D8               	btfss	status,0,c
 27156  00A16C  D7D9               	goto	l10608
 27157                           
 27158                           ; BSR set to: 0
 27159                           
 27160                           ; BSR set to: 0
 27161  00A16E  0012               	return		;funcret
 27162  00A170                     __end_of_cleanBuffer16bit:
 27163                           	opt stack 0
 27164                           tblptru	equ	0xFF8
 27165                           tblptrh	equ	0xFF7
 27166                           tblptrl	equ	0xFF6
 27167                           tablat	equ	0xFF5
 27168                           prodh	equ	0xFF4
 27169                           prodl	equ	0xFF3
 27170                           intcon	equ	0xFF2
 27171                           intcon2	equ	0xFF1
 27172                           indf0	equ	0xFEF
 27173                           postinc0	equ	0xFEE
 27174                           plusw0	equ	0xFEB
 27175                           fsr0h	equ	0xFEA
 27176                           fsr0l	equ	0xFE9
 27177                           wreg	equ	0xFE8
 27178                           indf1	equ	0xFE7
 27179                           postdec1	equ	0xFE5
 27180                           fsr1h	equ	0xFE2
 27181                           fsr1l	equ	0xFE1
 27182                           indf2	equ	0xFDF
 27183                           postinc2	equ	0xFDE
 27184                           postdec2	equ	0xFDD
 27185                           plusw2	equ	0xFDB
 27186                           fsr2h	equ	0xFDA
 27187                           fsr2l	equ	0xFD9
 27188                           status	equ	0xFD8
 27189                           
 27190 ;; *************** function _ResetTimer0 *****************
 27191 ;; Defined at:
 27192 ;;		line 79 in file "Timer.c"
 27193 ;; Parameters:    Size  Location     Type
 27194 ;;		None
 27195 ;; Auto vars:     Size  Location     Type
 27196 ;;		None
 27197 ;; Return value:  Size  Location     Type
 27198 ;;		None               void
 27199 ;; Registers used:
 27200 ;;		wreg, status,2
 27201 ;; Tracked objects:
 27202 ;;		On entry : 0/0
 27203 ;;		On exit  : 0/0
 27204 ;;		Unchanged: 0/0
 27205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27210 ;;Total ram usage:        0 bytes
 27211 ;; Hardware stack levels used:    1
 27212 ;; Hardware stack levels required when called:    5
 27213 ;; This function calls:
 27214 ;;		Nothing
 27215 ;; This function is called by:
 27216 ;;		_InitIR
 27217 ;; This function uses a non-reentrant model
 27218 ;;
 27219                           
 27220                           	psect	text55
 27221  00AA4A                     __ptext55:
 27222                           	opt stack 0
 27223  00AA4A                     _ResetTimer0:
 27224                           	opt stack 23
 27225                           
 27226                           ;Timer.c: 85: TMR0H = 0;
 27227                           
 27228                           ; BSR set to: 0
 27229                           ;incstack = 0
 27230  00AA4A  0E00               	movlw	0
 27231  00AA4C  6ED7               	movwf	4055,c	;volatile
 27232                           
 27233                           ;Timer.c: 86: TMR0L = 2;
 27234  00AA4E  0E02               	movlw	2
 27235  00AA50  6ED6               	movwf	4054,c	;volatile
 27236  00AA52  0012               	return		;funcret
 27237  00AA54                     __end_of_ResetTimer0:
 27238                           	opt stack 0
 27239                           tblptru	equ	0xFF8
 27240                           tblptrh	equ	0xFF7
 27241                           tblptrl	equ	0xFF6
 27242                           tablat	equ	0xFF5
 27243                           prodh	equ	0xFF4
 27244                           prodl	equ	0xFF3
 27245                           intcon	equ	0xFF2
 27246                           intcon2	equ	0xFF1
 27247                           indf0	equ	0xFEF
 27248                           postinc0	equ	0xFEE
 27249                           plusw0	equ	0xFEB
 27250                           fsr0h	equ	0xFEA
 27251                           fsr0l	equ	0xFE9
 27252                           wreg	equ	0xFE8
 27253                           indf1	equ	0xFE7
 27254                           postdec1	equ	0xFE5
 27255                           fsr1h	equ	0xFE2
 27256                           fsr1l	equ	0xFE1
 27257                           indf2	equ	0xFDF
 27258                           postinc2	equ	0xFDE
 27259                           postdec2	equ	0xFDD
 27260                           plusw2	equ	0xFDB
 27261                           fsr2h	equ	0xFDA
 27262                           fsr2l	equ	0xFD9
 27263                           status	equ	0xFD8
 27264                           
 27265 ;; *************** function _ReadIRpin *****************
 27266 ;; Defined at:
 27267 ;;		line 107 in file "IR.c"
 27268 ;; Parameters:    Size  Location     Type
 27269 ;;		None
 27270 ;; Auto vars:     Size  Location     Type
 27271 ;;		None
 27272 ;; Return value:  Size  Location     Type
 27273 ;;                  1    wreg      unsigned char 
 27274 ;; Registers used:
 27275 ;;		wreg
 27276 ;; Tracked objects:
 27277 ;;		On entry : 0/0
 27278 ;;		On exit  : 0/0
 27279 ;;		Unchanged: 0/0
 27280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27285 ;;Total ram usage:        0 bytes
 27286 ;; Hardware stack levels used:    1
 27287 ;; Hardware stack levels required when called:    5
 27288 ;; This function calls:
 27289 ;;		Nothing
 27290 ;; This function is called by:
 27291 ;;		_main
 27292 ;;		_InitIR
 27293 ;;		_UseIRCode
 27294 ;;		_SendNEC_wait
 27295 ;;		_SendRF_wait
 27296 ;; This function uses a non-reentrant model
 27297 ;;
 27298                           
 27299                           	psect	text56
 27300  00A9F0                     __ptext56:
 27301                           	opt stack 0
 27302  00A9F0                     _ReadIRpin:
 27303                           	opt stack 22
 27304                           
 27305                           ;IR.c: 110: if((PORTB & 0x10) == 0x10)
 27306                           
 27307                           ;incstack = 0
 27308  00A9F0  A881               	btfss	3969,4,c	;volatile
 27309  00A9F2  D002               	goto	l10198
 27310                           
 27311                           ;IR.c: 111: {
 27312                           ;IR.c: 112: return (1);
 27313  00A9F4  0E01               	movlw	1
 27314                           
 27315                           ;IR.c: 113: }
 27316  00A9F6  0012               	return	
 27317  00A9F8                     l10198:
 27318                           
 27319                           ;IR.c: 114: else
 27320                           ;IR.c: 115: {
 27321                           ;IR.c: 116: return 0;
 27322  00A9F8  0E00               	movlw	0
 27323  00A9FA  0012               	return	
 27324  00A9FC  0012               	return		;funcret
 27325  00A9FE                     __end_of_ReadIRpin:
 27326                           	opt stack 0
 27327                           tblptru	equ	0xFF8
 27328                           tblptrh	equ	0xFF7
 27329                           tblptrl	equ	0xFF6
 27330                           tablat	equ	0xFF5
 27331                           prodh	equ	0xFF4
 27332                           prodl	equ	0xFF3
 27333                           intcon	equ	0xFF2
 27334                           intcon2	equ	0xFF1
 27335                           indf0	equ	0xFEF
 27336                           postinc0	equ	0xFEE
 27337                           plusw0	equ	0xFEB
 27338                           fsr0h	equ	0xFEA
 27339                           fsr0l	equ	0xFE9
 27340                           wreg	equ	0xFE8
 27341                           indf1	equ	0xFE7
 27342                           postdec1	equ	0xFE5
 27343                           fsr1h	equ	0xFE2
 27344                           fsr1l	equ	0xFE1
 27345                           indf2	equ	0xFDF
 27346                           postinc2	equ	0xFDE
 27347                           postdec2	equ	0xFDD
 27348                           plusw2	equ	0xFDB
 27349                           fsr2h	equ	0xFDA
 27350                           fsr2l	equ	0xFD9
 27351                           status	equ	0xFD8
 27352                           
 27353 ;; *************** function _InitTimer0 *****************
 27354 ;; Defined at:
 27355 ;;		line 66 in file "Timer.c"
 27356 ;; Parameters:    Size  Location     Type
 27357 ;;		None
 27358 ;; Auto vars:     Size  Location     Type
 27359 ;;		None
 27360 ;; Return value:  Size  Location     Type
 27361 ;;		None               void
 27362 ;; Registers used:
 27363 ;;		wreg, status,2
 27364 ;; Tracked objects:
 27365 ;;		On entry : 0/0
 27366 ;;		On exit  : 0/0
 27367 ;;		Unchanged: 0/0
 27368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27373 ;;Total ram usage:        0 bytes
 27374 ;; Hardware stack levels used:    1
 27375 ;; Hardware stack levels required when called:    5
 27376 ;; This function calls:
 27377 ;;		Nothing
 27378 ;; This function is called by:
 27379 ;;		_InitIR
 27380 ;; This function uses a non-reentrant model
 27381 ;;
 27382                           
 27383                           	psect	text57
 27384  00A9A8                     __ptext57:
 27385                           	opt stack 0
 27386  00A9A8                     _InitTimer0:
 27387                           	opt stack 23
 27388                           
 27389                           ;Timer.c: 68: T0CONbits.T08BIT = FALSE;
 27390                           
 27391                           ;incstack = 0
 27392  00A9A8  9CD5               	bcf	4053,6,c	;volatile
 27393                           
 27394                           ;Timer.c: 69: T0CONbits.T0CS = FALSE;
 27395  00A9AA  9AD5               	bcf	4053,5,c	;volatile
 27396                           
 27397                           ;Timer.c: 70: T0CONbits.PSA = FALSE;
 27398  00A9AC  96D5               	bcf	4053,3,c	;volatile
 27399                           
 27400                           ;Timer.c: 71: T0CONbits.T0PS = 0x4;
 27401  00A9AE  50D5               	movf	4053,w,c	;volatile
 27402  00A9B0  0BF8               	andlw	-8
 27403  00A9B2  0904               	iorlw	4
 27404  00A9B4  6ED5               	movwf	4053,c	;volatile
 27405  00A9B6  0012               	return		;funcret
 27406  00A9B8                     __end_of_InitTimer0:
 27407                           	opt stack 0
 27408                           tblptru	equ	0xFF8
 27409                           tblptrh	equ	0xFF7
 27410                           tblptrl	equ	0xFF6
 27411                           tablat	equ	0xFF5
 27412                           prodh	equ	0xFF4
 27413                           prodl	equ	0xFF3
 27414                           intcon	equ	0xFF2
 27415                           intcon2	equ	0xFF1
 27416                           indf0	equ	0xFEF
 27417                           postinc0	equ	0xFEE
 27418                           plusw0	equ	0xFEB
 27419                           fsr0h	equ	0xFEA
 27420                           fsr0l	equ	0xFE9
 27421                           wreg	equ	0xFE8
 27422                           indf1	equ	0xFE7
 27423                           postdec1	equ	0xFE5
 27424                           fsr1h	equ	0xFE2
 27425                           fsr1l	equ	0xFE1
 27426                           indf2	equ	0xFDF
 27427                           postinc2	equ	0xFDE
 27428                           postdec2	equ	0xFDD
 27429                           plusw2	equ	0xFDB
 27430                           fsr2h	equ	0xFDA
 27431                           fsr2l	equ	0xFD9
 27432                           status	equ	0xFD8
 27433                           
 27434 ;; *************** function _InitBluetooth *****************
 27435 ;; Defined at:
 27436 ;;		line 76 in file "Bluetooth.c"
 27437 ;; Parameters:    Size  Location     Type
 27438 ;;		None
 27439 ;; Auto vars:     Size  Location     Type
 27440 ;;		None
 27441 ;; Return value:  Size  Location     Type
 27442 ;;		None               void
 27443 ;; Registers used:
 27444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27445 ;; Tracked objects:
 27446 ;;		On entry : 0/0
 27447 ;;		On exit  : 0/0
 27448 ;;		Unchanged: 0/0
 27449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27454 ;;Total ram usage:        0 bytes
 27455 ;; Hardware stack levels used:    1
 27456 ;; Hardware stack levels required when called:   11
 27457 ;; This function calls:
 27458 ;;		_BluetoothConfigured
 27459 ;;		_BluetoothInitialSetup
 27460 ;;		_ClearUSART
 27461 ;;		_ResetBlue
 27462 ;;		_SyncGlobalToEEPROM
 27463 ;;		_cleanBuffer
 27464 ;; This function is called by:
 27465 ;;		_Init_System
 27466 ;; This function uses a non-reentrant model
 27467 ;;
 27468                           
 27469                           	psect	text58
 27470  00A036                     __ptext58:
 27471                           	opt stack 0
 27472  00A036                     _InitBluetooth:
 27473                           	opt stack 18
 27474                           
 27475                           ;Bluetooth.c: 78: cleanBuffer(ReceivedString,100);
 27476                           
 27477                           ;incstack = 0
 27478  00A036  0E78               	movlw	low _ReceivedString
 27479  00A038  0100               	movlb	0	; () banked
 27480  00A03A  6F60               	movwf	cleanBuffer@data& (0+255),b
 27481  00A03C  0E04               	movlw	high _ReceivedString
 27482  00A03E  0100               	movlb	0	; () banked
 27483  00A040  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 27484  00A042  0E00               	movlw	0
 27485  00A044  0100               	movlb	0	; () banked
 27486  00A046  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 27487  00A048  0E64               	movlw	100
 27488  00A04A  6F62               	movwf	cleanBuffer@count& (0+255),b
 27489  00A04C  ECE6  F050         	call	_cleanBuffer	;wreg free
 27490                           
 27491                           ;Bluetooth.c: 79: ReceivedStringPos = 0;
 27492  00A050  0E00               	movlw	0
 27493  00A052  0103               	movlb	3	; () banked
 27494  00A054  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 27495                           
 27496                           ; BSR set to: 3
 27497                           ;Bluetooth.c: 80: cleanBuffer(CommandString,100);
 27498  00A056  0E14               	movlw	low _CommandString
 27499  00A058  0100               	movlb	0	; () banked
 27500  00A05A  6F60               	movwf	cleanBuffer@data& (0+255),b
 27501  00A05C  0E04               	movlw	high _CommandString
 27502  00A05E  0100               	movlb	0	; () banked
 27503  00A060  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 27504  00A062  0E00               	movlw	0
 27505  00A064  0100               	movlb	0	; () banked
 27506  00A066  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 27507  00A068  0E64               	movlw	100
 27508  00A06A  6F62               	movwf	cleanBuffer@count& (0+255),b
 27509  00A06C  ECE6  F050         	call	_cleanBuffer	;wreg free
 27510                           
 27511                           ;Bluetooth.c: 81: CommandStringPos = 0;
 27512  00A070  0E00               	movlw	0
 27513  00A072  6E3E               	movwf	_CommandStringPos,c	;volatile
 27514                           
 27515                           ;Bluetooth.c: 83: LATA &= ~0x10;
 27516  00A074  9889               	bcf	3977,4,c	;volatile
 27517                           
 27518                           ;Bluetooth.c: 84: LATA |= 0x08;
 27519  00A076  8689               	bsf	3977,3,c	;volatile
 27520                           
 27521                           ;Bluetooth.c: 85: LATA &= ~0x10;
 27522  00A078  9889               	bcf	3977,4,c	;volatile
 27523                           
 27524                           ;Bluetooth.c: 86: if(!BluetoothConfigured())
 27525  00A07A  ECCB  F054         	call	_BluetoothConfigured	;wreg free
 27526  00A07E  0900               	iorlw	0
 27527  00A080  A4D8               	btfss	status,2,c
 27528  00A082  0012               	return	
 27529                           
 27530                           ;Bluetooth.c: 87: {
 27531                           ;Bluetooth.c: 88: if(BluetoothInitialSetup(1))
 27532  00A084  0E01               	movlw	1
 27533  00A086  EC23  F022         	call	_BluetoothInitialSetup
 27534  00A08A  0900               	iorlw	0
 27535  00A08C  B4D8               	btfsc	status,2,c
 27536  00A08E  D006               	goto	l11450
 27537                           
 27538                           ;Bluetooth.c: 89: {
 27539                           ;Bluetooth.c: 90: Global1.BlueToothFlag = 1;
 27540  00A090  0E01               	movlw	1
 27541  00A092  0102               	movlb	2	; () banked
 27542  00A094  6FD5               	movwf	_Global1& (0+255),b
 27543                           
 27544                           ; BSR set to: 2
 27545                           ;Bluetooth.c: 91: SyncGlobalToEEPROM();
 27546  00A096  EC69  F04D         	call	_SyncGlobalToEEPROM	;wreg free
 27547  00A09A  D000               	goto	l11450
 27548  00A09C                     l11450:
 27549                           
 27550                           ;Bluetooth.c: 92: }
 27551                           ;Bluetooth.c: 93: ResetBlue();
 27552  00A09C  EC31  F048         	call	_ResetBlue	;wreg free
 27553                           
 27554                           ;Bluetooth.c: 94: ClearUSART();
 27555  00A0A0  ECC2  F054         	call	_ClearUSART	;wreg free
 27556                           
 27557                           ;Bluetooth.c: 95: PIR1bits.RCIF = 0;
 27558  00A0A4  9A9E               	bcf	3998,5,c	;volatile
 27559                           
 27560                           ;Bluetooth.c: 96: PIE1bits.RCIE = 1;
 27561  00A0A6  8A9D               	bsf	3997,5,c	;volatile
 27562  00A0A8  0012               	return	
 27563  00A0AA  0012               	return		;funcret
 27564  00A0AC                     __end_of_InitBluetooth:
 27565                           	opt stack 0
 27566                           tblptru	equ	0xFF8
 27567                           tblptrh	equ	0xFF7
 27568                           tblptrl	equ	0xFF6
 27569                           tablat	equ	0xFF5
 27570                           prodh	equ	0xFF4
 27571                           prodl	equ	0xFF3
 27572                           intcon	equ	0xFF2
 27573                           intcon2	equ	0xFF1
 27574                           indf0	equ	0xFEF
 27575                           postinc0	equ	0xFEE
 27576                           plusw0	equ	0xFEB
 27577                           fsr0h	equ	0xFEA
 27578                           fsr0l	equ	0xFE9
 27579                           wreg	equ	0xFE8
 27580                           indf1	equ	0xFE7
 27581                           postdec1	equ	0xFE5
 27582                           fsr1h	equ	0xFE2
 27583                           fsr1l	equ	0xFE1
 27584                           indf2	equ	0xFDF
 27585                           postinc2	equ	0xFDE
 27586                           postdec2	equ	0xFDD
 27587                           plusw2	equ	0xFDB
 27588                           fsr2h	equ	0xFDA
 27589                           fsr2l	equ	0xFD9
 27590                           status	equ	0xFD8
 27591                           
 27592 ;; *************** function _SyncGlobalToEEPROM *****************
 27593 ;; Defined at:
 27594 ;;		line 273 in file "EEPROM.c"
 27595 ;; Parameters:    Size  Location     Type
 27596 ;;		None
 27597 ;; Auto vars:     Size  Location     Type
 27598 ;;  ok              1  133[BANK0 ] unsigned char 
 27599 ;; Return value:  Size  Location     Type
 27600 ;;                  1    wreg      unsigned char 
 27601 ;; Registers used:
 27602 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27603 ;; Tracked objects:
 27604 ;;		On entry : 0/0
 27605 ;;		On exit  : 0/0
 27606 ;;		Unchanged: 0/0
 27607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27609 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27611 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27612 ;;Total ram usage:        1 bytes
 27613 ;; Hardware stack levels used:    1
 27614 ;; Hardware stack levels required when called:    9
 27615 ;; This function calls:
 27616 ;;		_SetEEPROM1
 27617 ;;		_SetEEPROM2
 27618 ;; This function is called by:
 27619 ;;		_Init_System
 27620 ;;		_SetEEPROMdefault
 27621 ;;		_UseIRCode
 27622 ;;		_InitBluetooth
 27623 ;;		_UseBluetooth
 27624 ;; This function uses a non-reentrant model
 27625 ;;
 27626                           
 27627                           	psect	text59
 27628  009AD2                     __ptext59:
 27629                           	opt stack 0
 27630  009AD2                     _SyncGlobalToEEPROM:
 27631                           	opt stack 20
 27632                           
 27633                           ;EEPROM.c: 275: unsigned char ok = 1;
 27634                           
 27635                           ;incstack = 0
 27636  009AD2  0E01               	movlw	1
 27637  009AD4  0100               	movlb	0	; () banked
 27638  009AD6  6FE5               	movwf	SyncGlobalToEEPROM@ok& (0+255),b
 27639                           
 27640                           ; BSR set to: 0
 27641                           ;EEPROM.c: 278: if(SetEEPROM1(Global1,0xFFFFFFFF))
 27642  009AD8  EE22  F0D5         	lfsr	2,_Global1
 27643  009ADC  EE00  F096         	lfsr	0,SetEEPROM1@Temp
 27644  009AE0  0E1D               	movlw	29
 27645  009AE2                     u11341:
 27646  009AE2  CFDB FFEB          	movff	plusw2,plusw0
 27647  009AE6  06E8               	decf	wreg,f,c
 27648  009AE8  E2FC               	bc	u11341
 27649  009AEA  0EFF               	movlw	255
 27650  009AEC  0100               	movlb	0	; () banked
 27651  009AEE  6FB4               	movwf	SetEEPROM1@burn& (0+255),b
 27652  009AF0  0EFF               	movlw	255
 27653  009AF2  6FB5               	movwf	(SetEEPROM1@burn+1)& (0+255),b
 27654  009AF4  0EFF               	movlw	255
 27655  009AF6  6FB6               	movwf	(SetEEPROM1@burn+2)& (0+255),b
 27656  009AF8  0EFF               	movlw	255
 27657  009AFA  6FB7               	movwf	(SetEEPROM1@burn+3)& (0+255),b
 27658  009AFC  EC57  F043         	call	_SetEEPROM1	;wreg free
 27659  009B00  0100               	movlb	0	; () banked
 27660  009B02  5196               	movf	?_SetEEPROM1& (0+255),w,b
 27661  009B04  0100               	movlb	0	; () banked
 27662  009B06  1197               	iorwf	(?_SetEEPROM1+1)& (0+255),w,b
 27663  009B08  0100               	movlb	0	; () banked
 27664  009B0A  1198               	iorwf	(?_SetEEPROM1+2)& (0+255),w,b
 27665  009B0C  0100               	movlb	0	; () banked
 27666  009B0E  1199               	iorwf	(?_SetEEPROM1+3)& (0+255),w,b
 27667  009B10  B4D8               	btfsc	status,2,c
 27668  009B12  D004               	goto	l10580
 27669                           
 27670                           ; BSR set to: 0
 27671                           ;EEPROM.c: 279: {
 27672                           ;EEPROM.c: 280: ok = 0;
 27673  009B14  0E00               	movlw	0
 27674  009B16  0100               	movlb	0	; () banked
 27675  009B18  6FE5               	movwf	SyncGlobalToEEPROM@ok& (0+255),b
 27676  009B1A  D000               	goto	l10580
 27677  009B1C                     l10580:
 27678                           
 27679                           ; BSR set to: 0
 27680                           ;EEPROM.c: 281: }
 27681                           ;EEPROM.c: 282: if(SetEEPROM2(Global2,0xFFFFFFFD))
 27682  009B1C  EE22  F095         	lfsr	2,_Global2
 27683  009B20  EE00  F096         	lfsr	0,SetEEPROM2@Temp
 27684  009B24  0E3F               	movlw	63
 27685  009B26                     u11361:
 27686  009B26  CFDB FFEB          	movff	plusw2,plusw0
 27687  009B2A  06E8               	decf	wreg,f,c
 27688  009B2C  E2FC               	bc	u11361
 27689  009B2E  0EFD               	movlw	253
 27690  009B30  0100               	movlb	0	; () banked
 27691  009B32  6FD6               	movwf	SetEEPROM2@burn& (0+255),b
 27692  009B34  0EFF               	movlw	255
 27693  009B36  6FD7               	movwf	(SetEEPROM2@burn+1)& (0+255),b
 27694  009B38  0EFF               	movlw	255
 27695  009B3A  6FD8               	movwf	(SetEEPROM2@burn+2)& (0+255),b
 27696  009B3C  0EFF               	movlw	255
 27697  009B3E  6FD9               	movwf	(SetEEPROM2@burn+3)& (0+255),b
 27698  009B40  ECB5  F046         	call	_SetEEPROM2	;wreg free
 27699  009B44  0100               	movlb	0	; () banked
 27700  009B46  5196               	movf	?_SetEEPROM2& (0+255),w,b
 27701  009B48  0100               	movlb	0	; () banked
 27702  009B4A  1197               	iorwf	(?_SetEEPROM2+1)& (0+255),w,b
 27703  009B4C  0100               	movlb	0	; () banked
 27704  009B4E  1198               	iorwf	(?_SetEEPROM2+2)& (0+255),w,b
 27705  009B50  0100               	movlb	0	; () banked
 27706  009B52  1199               	iorwf	(?_SetEEPROM2+3)& (0+255),w,b
 27707  009B54  B4D8               	btfsc	status,2,c
 27708  009B56  D003               	goto	l1124
 27709                           
 27710                           ; BSR set to: 0
 27711                           ;EEPROM.c: 283: {
 27712                           ;EEPROM.c: 284: ok = 0;
 27713  009B58  0E00               	movlw	0
 27714  009B5A  0100               	movlb	0	; () banked
 27715  009B5C  6FE5               	movwf	SyncGlobalToEEPROM@ok& (0+255),b
 27716  009B5E                     l1124:
 27717                           
 27718                           ; BSR set to: 0
 27719                           ;EEPROM.c: 285: }
 27720                           ;EEPROM.c: 286: if(ok)
 27721  009B5E  0100               	movlb	0	; () banked
 27722  009B60  51E5               	movf	SyncGlobalToEEPROM@ok& (0+255),w,b
 27723  009B62  0100               	movlb	0	; () banked
 27724  009B64  B4D8               	btfsc	status,2,c
 27725  009B66  D002               	goto	l10588
 27726                           
 27727                           ; BSR set to: 0
 27728                           ;EEPROM.c: 287: {
 27729                           ;EEPROM.c: 288: return 1;
 27730  009B68  0E01               	movlw	1
 27731                           
 27732                           ; BSR set to: 0
 27733  009B6A  0012               	return	
 27734  009B6C                     l10588:
 27735                           
 27736                           ; BSR set to: 0
 27737                           ;EEPROM.c: 289: }
 27738                           ;EEPROM.c: 290: return 0;
 27739  009B6C  0E00               	movlw	0
 27740  009B6E  0012               	return	
 27741                           
 27742                           ; BSR set to: 0
 27743                           
 27744                           ; BSR set to: 0
 27745  009B70  0012               	return		;funcret
 27746  009B72                     __end_of_SyncGlobalToEEPROM:
 27747                           	opt stack 0
 27748                           tblptru	equ	0xFF8
 27749                           tblptrh	equ	0xFF7
 27750                           tblptrl	equ	0xFF6
 27751                           tablat	equ	0xFF5
 27752                           prodh	equ	0xFF4
 27753                           prodl	equ	0xFF3
 27754                           intcon	equ	0xFF2
 27755                           intcon2	equ	0xFF1
 27756                           indf0	equ	0xFEF
 27757                           postinc0	equ	0xFEE
 27758                           plusw0	equ	0xFEB
 27759                           fsr0h	equ	0xFEA
 27760                           fsr0l	equ	0xFE9
 27761                           wreg	equ	0xFE8
 27762                           indf1	equ	0xFE7
 27763                           postdec1	equ	0xFE5
 27764                           fsr1h	equ	0xFE2
 27765                           fsr1l	equ	0xFE1
 27766                           indf2	equ	0xFDF
 27767                           postinc2	equ	0xFDE
 27768                           postdec2	equ	0xFDD
 27769                           plusw2	equ	0xFDB
 27770                           fsr2h	equ	0xFDA
 27771                           fsr2l	equ	0xFD9
 27772                           status	equ	0xFD8
 27773                           
 27774 ;; *************** function _SetEEPROM2 *****************
 27775 ;; Defined at:
 27776 ;;		line 232 in file "EEPROM.c"
 27777 ;; Parameters:    Size  Location     Type
 27778 ;;  Temp           64   54[BANK0 ] struct EEdata2
 27779 ;;  burn            4  118[BANK0 ] unsigned long 
 27780 ;; Auto vars:     Size  Location     Type
 27781 ;;  fail            4  125[BANK0 ] unsigned long 
 27782 ;;  k               1  132[BANK0 ] unsigned char 
 27783 ;;  j               1  131[BANK0 ] unsigned char 
 27784 ;;  i               1  130[BANK0 ] unsigned char 
 27785 ;;  Arrayspot       1  129[BANK0 ] unsigned char 
 27786 ;;  temp            1  124[BANK0 ] unsigned char 
 27787 ;; Return value:  Size  Location     Type
 27788 ;;                  4   54[BANK0 ] unsigned long 
 27789 ;; Registers used:
 27790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27791 ;; Tracked objects:
 27792 ;;		On entry : 0/0
 27793 ;;		On exit  : 0/0
 27794 ;;		Unchanged: 0/0
 27795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27796 ;;      Params:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27797 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27798 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27799 ;;      Totals:         0      79       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27800 ;;Total ram usage:       79 bytes
 27801 ;; Hardware stack levels used:    1
 27802 ;; Hardware stack levels required when called:    8
 27803 ;; This function calls:
 27804 ;;		_SetMemoryChar
 27805 ;;		_SetMemoryLong
 27806 ;; This function is called by:
 27807 ;;		_Init_System
 27808 ;;		_SyncGlobalToEEPROM
 27809 ;;		_UseBluetooth
 27810 ;; This function uses a non-reentrant model
 27811 ;;
 27812                           
 27813                           	psect	text60
 27814  008D6A                     __ptext60:
 27815                           	opt stack 0
 27816  008D6A                     _SetEEPROM2:
 27817                           	opt stack 20
 27818                           
 27819                           ;EEPROM.c: 234: unsigned long fail = 0;
 27820                           
 27821                           ; BSR set to: 0
 27822                           ;incstack = 0
 27823  008D6A  0E00               	movlw	0
 27824  008D6C  0100               	movlb	0	; () banked
 27825  008D6E  6FDD               	movwf	SetEEPROM2@fail& (0+255),b
 27826  008D70  0E00               	movlw	0
 27827  008D72  6FDE               	movwf	(SetEEPROM2@fail+1)& (0+255),b
 27828  008D74  0E00               	movlw	0
 27829  008D76  6FDF               	movwf	(SetEEPROM2@fail+2)& (0+255),b
 27830  008D78  0E00               	movlw	0
 27831  008D7A  6FE0               	movwf	(SetEEPROM2@fail+3)& (0+255),b
 27832                           
 27833                           ;EEPROM.c: 235: unsigned char i,j,k,temp;
 27834                           ;EEPROM.c: 236: unsigned char Arrayspot=5;
 27835  008D7C  0E05               	movlw	5
 27836  008D7E  0100               	movlb	0	; () banked
 27837  008D80  6FE1               	movwf	SetEEPROM2@Arrayspot& (0+255),b
 27838                           
 27839                           ; BSR set to: 0
 27840                           ;EEPROM.c: 238: if(burn & 0x00000001)
 27841  008D82  0100               	movlb	0	; () banked
 27842  008D84  A1D6               	btfss	SetEEPROM2@burn& (0+255),0,b
 27843  008D86  D058               	goto	l1110
 27844                           
 27845                           ; BSR set to: 0
 27846                           ;EEPROM.c: 239: {
 27847                           ;EEPROM.c: 240: Arrayspot=(2*12 + 6);
 27848  008D88  0E1E               	movlw	30
 27849  008D8A  0100               	movlb	0	; () banked
 27850  008D8C  6FE1               	movwf	SetEEPROM2@Arrayspot& (0+255),b
 27851                           
 27852                           ;EEPROM.c: 241: for(i=0; i< 10; i++)
 27853  008D8E  0E00               	movlw	0
 27854  008D90  0100               	movlb	0	; () banked
 27855  008D92  6FE2               	movwf	SetEEPROM2@i& (0+255),b
 27856  008D94                     l10208:
 27857                           
 27858                           ; BSR set to: 0
 27859  008D94  0E09               	movlw	9
 27860  008D96  0100               	movlb	0	; () banked
 27861  008D98  65E2               	cpfsgt	SetEEPROM2@i& (0+255),b
 27862  008D9A  D001               	goto	l10212
 27863                           
 27864                           ; BSR set to: 0
 27865  008D9C  D04D               	goto	l1110
 27866  008D9E                     l10212:
 27867                           
 27868                           ; BSR set to: 0
 27869                           ;EEPROM.c: 242: {
 27870                           ;EEPROM.c: 243: for(j=0; j < 3; j++)
 27871  008D9E  0E00               	movlw	0
 27872  008DA0  0100               	movlb	0	; () banked
 27873  008DA2  6FE3               	movwf	SetEEPROM2@j& (0+255),b
 27874  008DA4                     l10214:
 27875                           
 27876                           ; BSR set to: 0
 27877  008DA4  0E02               	movlw	2
 27878  008DA6  0100               	movlb	0	; () banked
 27879  008DA8  65E3               	cpfsgt	SetEEPROM2@j& (0+255),b
 27880  008DAA  D001               	goto	l10218
 27881                           
 27882                           ; BSR set to: 0
 27883  008DAC  D042               	goto	l10236
 27884  008DAE                     l10218:
 27885                           
 27886                           ; BSR set to: 0
 27887                           ;EEPROM.c: 244: {
 27888                           ;EEPROM.c: 245: for(k=0; k < 2; k++)
 27889  008DAE  0E00               	movlw	0
 27890  008DB0  0100               	movlb	0	; () banked
 27891  008DB2  6FE4               	movwf	SetEEPROM2@k& (0+255),b
 27892  008DB4                     l10220:
 27893                           
 27894                           ; BSR set to: 0
 27895  008DB4  0E01               	movlw	1
 27896  008DB6  0100               	movlb	0	; () banked
 27897  008DB8  65E4               	cpfsgt	SetEEPROM2@k& (0+255),b
 27898  008DBA  D001               	goto	l10224
 27899                           
 27900                           ; BSR set to: 0
 27901  008DBC  D037               	goto	l10232
 27902  008DBE                     l10224:
 27903                           
 27904                           ; BSR set to: 0
 27905                           ;EEPROM.c: 246: {
 27906                           ;EEPROM.c: 247: temp = Temp.RemoteButtonRF[i][j][k];
 27907  008DBE  0100               	movlb	0	; () banked
 27908  008DC0  51E2               	movf	SetEEPROM2@i& (0+255),w,b
 27909  008DC2  0D06               	mullw	6
 27910  008DC4  0E96               	movlw	low SetEEPROM2@Temp
 27911  008DC6  0100               	movlb	0	; () banked
 27912  008DC8  6FDA               	movwf	??_SetEEPROM2& (0+255),b
 27913  008DCA  0E00               	movlw	high SetEEPROM2@Temp
 27914  008DCC  0100               	movlb	0	; () banked
 27915  008DCE  6FDB               	movwf	(??_SetEEPROM2+1)& (0+255),b
 27916  008DD0  50F3               	movf	prodl,w,c
 27917  008DD2  0100               	movlb	0	; () banked
 27918  008DD4  27DA               	addwf	??_SetEEPROM2& (0+255),f,b
 27919  008DD6  50F4               	movf	prodh,w,c
 27920  008DD8  0100               	movlb	0	; () banked
 27921  008DDA  23DB               	addwfc	(??_SetEEPROM2+1)& (0+255),f,b
 27922  008DDC  0100               	movlb	0	; () banked
 27923  008DDE  51E3               	movf	SetEEPROM2@j& (0+255),w,b
 27924  008DE0  0D02               	mullw	2
 27925  008DE2  50F3               	movf	prodl,w,c
 27926  008DE4  0100               	movlb	0	; () banked
 27927  008DE6  27DA               	addwf	??_SetEEPROM2& (0+255),f,b
 27928  008DE8  50F4               	movf	prodh,w,c
 27929  008DEA  0100               	movlb	0	; () banked
 27930  008DEC  23DB               	addwfc	(??_SetEEPROM2+1)& (0+255),f,b
 27931  008DEE  0100               	movlb	0	; () banked
 27932  008DF0  51E4               	movf	SetEEPROM2@k& (0+255),w,b
 27933  008DF2  0D01               	mullw	1
 27934  008DF4  50F3               	movf	prodl,w,c
 27935  008DF6  0100               	movlb	0	; () banked
 27936  008DF8  25DA               	addwf	??_SetEEPROM2& (0+255),w,b
 27937  008DFA  6ED9               	movwf	fsr2l,c
 27938  008DFC  50F4               	movf	prodh,w,c
 27939  008DFE  0100               	movlb	0	; () banked
 27940  008E00  21DB               	addwfc	(??_SetEEPROM2+1)& (0+255),w,b
 27941  008E02  6EDA               	movwf	fsr2h,c
 27942  008E04  50DF               	movf	indf2,w,c
 27943  008E06  0100               	movlb	0	; () banked
 27944  008E08  6FDC               	movwf	SetEEPROM2@temp& (0+255),b
 27945                           
 27946                           ; BSR set to: 0
 27947                           ;EEPROM.c: 248: if(!SetMemoryChar(temp,Arrayspot++))
 27948  008E0A  0100               	movlb	0	; () banked
 27949  008E0C  2BE1               	incf	SetEEPROM2@Arrayspot& (0+255),f,b
 27950  008E0E  05E1               	decf	SetEEPROM2@Arrayspot& (0+255),w,b
 27951  008E10  0100               	movlb	0	; () banked
 27952  008E12  6F6A               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 27953  008E14  0100               	movlb	0	; () banked
 27954  008E16  51DC               	movf	SetEEPROM2@temp& (0+255),w,b
 27955  008E18  EC86  F052         	call	_SetMemoryChar
 27956  008E1C  0900               	iorlw	0
 27957  008E1E  A4D8               	btfss	status,2,c
 27958  008E20  D002               	goto	l1117
 27959                           
 27960                           ;EEPROM.c: 249: {
 27961                           ;EEPROM.c: 251: fail |= 0x00000001;
 27962  008E22  0100               	movlb	0	; () banked
 27963  008E24  81DD               	bsf	SetEEPROM2@fail& (0+255),0,b
 27964  008E26                     l1117:
 27965  008E26  0100               	movlb	0	; () banked
 27966  008E28  2BE4               	incf	SetEEPROM2@k& (0+255),f,b
 27967  008E2A  D7C4               	goto	l10220
 27968  008E2C                     l10232:
 27969                           
 27970                           ; BSR set to: 0
 27971  008E2C  0100               	movlb	0	; () banked
 27972  008E2E  2BE3               	incf	SetEEPROM2@j& (0+255),f,b
 27973  008E30  D7B9               	goto	l10214
 27974  008E32                     l10236:
 27975                           
 27976                           ; BSR set to: 0
 27977  008E32  0100               	movlb	0	; () banked
 27978  008E34  2BE2               	incf	SetEEPROM2@i& (0+255),f,b
 27979  008E36  D7AE               	goto	l10208
 27980  008E38                     l1110:
 27981                           
 27982                           ; BSR set to: 0
 27983                           ;EEPROM.c: 252: }
 27984                           ;EEPROM.c: 253: }
 27985                           ;EEPROM.c: 254: }
 27986                           ;EEPROM.c: 255: }
 27987                           ;EEPROM.c: 256: }
 27988                           ;EEPROM.c: 257: if(burn & 0x00000002)
 27989  008E38  0100               	movlb	0	; () banked
 27990  008E3A  A3D6               	btfss	SetEEPROM2@burn& (0+255),1,b
 27991  008E3C  D013               	goto	l10244
 27992                           
 27993                           ; BSR set to: 0
 27994                           ;EEPROM.c: 258: {
 27995                           ;EEPROM.c: 259: if(!SetMemoryLong(Temp.SerialNumber,(2*12 + 2*3*10 + 6)))
 27996  008E3E  C0D2  F085         	movff	SetEEPROM2@Temp+60,SetMemoryLong@Data
 27997  008E42  C0D3  F086         	movff	SetEEPROM2@Temp+61,SetMemoryLong@Data+1
 27998  008E46  C0D4  F087         	movff	SetEEPROM2@Temp+62,SetMemoryLong@Data+2
 27999  008E4A  C0D5  F088         	movff	SetEEPROM2@Temp+63,SetMemoryLong@Data+3
 28000  008E4E  0E5A               	movlw	90
 28001  008E50  0100               	movlb	0	; () banked
 28002  008E52  6F89               	movwf	SetMemoryLong@AddressFirst& (0+255),b
 28003  008E54  EC3C  F047         	call	_SetMemoryLong	;wreg free
 28004  008E58  0900               	iorlw	0
 28005  008E5A  A4D8               	btfss	status,2,c
 28006  008E5C  D003               	goto	l10244
 28007                           
 28008                           ;EEPROM.c: 260: {
 28009                           ;EEPROM.c: 262: fail |= 0x00000002;
 28010  008E5E  0100               	movlb	0	; () banked
 28011  008E60  83DD               	bsf	SetEEPROM2@fail& (0+255),1,b
 28012                           
 28013                           ; BSR set to: 0
 28014  008E62  D000               	goto	l10244
 28015  008E64                     l10244:
 28016                           
 28017                           ;EEPROM.c: 263: }
 28018                           ;EEPROM.c: 264: }
 28019                           ;EEPROM.c: 265: return fail;
 28020  008E64  C0DD  F096         	movff	SetEEPROM2@fail,?_SetEEPROM2
 28021  008E68  C0DE  F097         	movff	SetEEPROM2@fail+1,?_SetEEPROM2+1
 28022  008E6C  C0DF  F098         	movff	SetEEPROM2@fail+2,?_SetEEPROM2+2
 28023  008E70  C0E0  F099         	movff	SetEEPROM2@fail+3,?_SetEEPROM2+3
 28024  008E74  0012               	return	
 28025  008E76  0012               	return		;funcret
 28026  008E78                     __end_of_SetEEPROM2:
 28027                           	opt stack 0
 28028                           tblptru	equ	0xFF8
 28029                           tblptrh	equ	0xFF7
 28030                           tblptrl	equ	0xFF6
 28031                           tablat	equ	0xFF5
 28032                           prodh	equ	0xFF4
 28033                           prodl	equ	0xFF3
 28034                           intcon	equ	0xFF2
 28035                           intcon2	equ	0xFF1
 28036                           indf0	equ	0xFEF
 28037                           postinc0	equ	0xFEE
 28038                           plusw0	equ	0xFEB
 28039                           fsr0h	equ	0xFEA
 28040                           fsr0l	equ	0xFE9
 28041                           wreg	equ	0xFE8
 28042                           indf1	equ	0xFE7
 28043                           postdec1	equ	0xFE5
 28044                           fsr1h	equ	0xFE2
 28045                           fsr1l	equ	0xFE1
 28046                           indf2	equ	0xFDF
 28047                           postinc2	equ	0xFDE
 28048                           postdec2	equ	0xFDD
 28049                           plusw2	equ	0xFDB
 28050                           fsr2h	equ	0xFDA
 28051                           fsr2l	equ	0xFD9
 28052                           status	equ	0xFD8
 28053                           
 28054 ;; *************** function _SetEEPROM1 *****************
 28055 ;; Defined at:
 28056 ;;		line 179 in file "EEPROM.c"
 28057 ;; Parameters:    Size  Location     Type
 28058 ;;  Temp           30   54[BANK0 ] struct EEdata
 28059 ;;  burn            4   84[BANK0 ] unsigned long 
 28060 ;; Auto vars:     Size  Location     Type
 28061 ;;  fail            4   92[BANK0 ] unsigned long 
 28062 ;;  j               1   97[BANK0 ] unsigned char 
 28063 ;;  i               1   96[BANK0 ] unsigned char 
 28064 ;;  Arrayspot       1   91[BANK0 ] unsigned char 
 28065 ;;  temp            1   90[BANK0 ] unsigned char 
 28066 ;;  k               1    0        unsigned char 
 28067 ;; Return value:  Size  Location     Type
 28068 ;;                  4   54[BANK0 ] unsigned long 
 28069 ;; Registers used:
 28070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28071 ;; Tracked objects:
 28072 ;;		On entry : 0/0
 28073 ;;		On exit  : 0/0
 28074 ;;		Unchanged: 0/0
 28075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28076 ;;      Params:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28077 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28078 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28079 ;;      Totals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28080 ;;Total ram usage:       44 bytes
 28081 ;; Hardware stack levels used:    1
 28082 ;; Hardware stack levels required when called:    8
 28083 ;; This function calls:
 28084 ;;		_SetMemoryChar
 28085 ;;		_SetMemoryLong
 28086 ;; This function is called by:
 28087 ;;		_SyncGlobalToEEPROM
 28088 ;; This function uses a non-reentrant model
 28089 ;;
 28090                           
 28091                           	psect	text61
 28092  0086AE                     __ptext61:
 28093                           	opt stack 0
 28094  0086AE                     _SetEEPROM1:
 28095                           	opt stack 20
 28096                           
 28097                           ;EEPROM.c: 181: unsigned long fail = 0;
 28098                           
 28099                           ;incstack = 0
 28100  0086AE  0E00               	movlw	0
 28101  0086B0  0100               	movlb	0	; () banked
 28102  0086B2  6FBC               	movwf	SetEEPROM1@fail& (0+255),b
 28103  0086B4  0E00               	movlw	0
 28104  0086B6  6FBD               	movwf	(SetEEPROM1@fail+1)& (0+255),b
 28105  0086B8  0E00               	movlw	0
 28106  0086BA  6FBE               	movwf	(SetEEPROM1@fail+2)& (0+255),b
 28107  0086BC  0E00               	movlw	0
 28108  0086BE  6FBF               	movwf	(SetEEPROM1@fail+3)& (0+255),b
 28109                           
 28110                           ;EEPROM.c: 182: unsigned char i,j,k,temp;
 28111                           ;EEPROM.c: 183: unsigned char Arrayspot=5;
 28112  0086C0  0E05               	movlw	5
 28113  0086C2  0100               	movlb	0	; () banked
 28114  0086C4  6FBB               	movwf	SetEEPROM1@Arrayspot& (0+255),b
 28115                           
 28116                           ; BSR set to: 0
 28117                           ;EEPROM.c: 185: if(burn & 0x00000001)
 28118  0086C6  0100               	movlb	0	; () banked
 28119  0086C8  A1B4               	btfss	SetEEPROM1@burn& (0+255),0,b
 28120  0086CA  D00D               	goto	l10416
 28121                           
 28122                           ; BSR set to: 0
 28123                           ;EEPROM.c: 186: {
 28124                           ;EEPROM.c: 187: if(!SetMemoryChar(Temp.BlueToothFlag,0))
 28125  0086CC  0E00               	movlw	0
 28126  0086CE  0100               	movlb	0	; () banked
 28127  0086D0  6F6A               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 28128  0086D2  0100               	movlb	0	; () banked
 28129  0086D4  5196               	movf	SetEEPROM1@Temp& (0+255),w,b
 28130  0086D6  EC86  F052         	call	_SetMemoryChar
 28131  0086DA  0900               	iorlw	0
 28132  0086DC  A4D8               	btfss	status,2,c
 28133  0086DE  D003               	goto	l10416
 28134                           
 28135                           ;EEPROM.c: 188: {
 28136                           ;EEPROM.c: 190: fail |= 0x00000001;
 28137  0086E0  0100               	movlb	0	; () banked
 28138  0086E2  81BC               	bsf	SetEEPROM1@fail& (0+255),0,b
 28139                           
 28140                           ; BSR set to: 0
 28141  0086E4  D000               	goto	l10416
 28142  0086E6                     l10416:
 28143                           
 28144                           ;EEPROM.c: 191: }
 28145                           ;EEPROM.c: 192: }
 28146                           ;EEPROM.c: 193: if(burn & 0x00000002)
 28147  0086E6  0100               	movlb	0	; () banked
 28148  0086E8  A3B4               	btfss	SetEEPROM1@burn& (0+255),1,b
 28149  0086EA  D013               	goto	l10422
 28150                           
 28151                           ; BSR set to: 0
 28152                           ;EEPROM.c: 194: {
 28153                           ;EEPROM.c: 195: if(!SetMemoryLong(Temp.SWNECcode,1))
 28154  0086EC  C097  F085         	movff	SetEEPROM1@Temp+1,SetMemoryLong@Data
 28155  0086F0  C098  F086         	movff	SetEEPROM1@Temp+2,SetMemoryLong@Data+1
 28156  0086F4  C099  F087         	movff	SetEEPROM1@Temp+3,SetMemoryLong@Data+2
 28157  0086F8  C09A  F088         	movff	SetEEPROM1@Temp+4,SetMemoryLong@Data+3
 28158  0086FC  0E01               	movlw	1
 28159  0086FE  0100               	movlb	0	; () banked
 28160  008700  6F89               	movwf	SetMemoryLong@AddressFirst& (0+255),b
 28161  008702  EC3C  F047         	call	_SetMemoryLong	;wreg free
 28162  008706  0900               	iorlw	0
 28163  008708  A4D8               	btfss	status,2,c
 28164  00870A  D003               	goto	l10422
 28165                           
 28166                           ;EEPROM.c: 196: {
 28167                           ;EEPROM.c: 198: fail |= 0x00000002;
 28168  00870C  0100               	movlb	0	; () banked
 28169  00870E  83BC               	bsf	SetEEPROM1@fail& (0+255),1,b
 28170                           
 28171                           ; BSR set to: 0
 28172  008710  D000               	goto	l10422
 28173  008712                     l10422:
 28174                           
 28175                           ;EEPROM.c: 199: }
 28176                           ;EEPROM.c: 200: }
 28177                           ;EEPROM.c: 201: if(burn & 0x00000004)
 28178  008712  0100               	movlb	0	; () banked
 28179  008714  A5B4               	btfss	SetEEPROM1@burn& (0+255),2,b
 28180  008716  D047               	goto	l1099
 28181                           
 28182                           ; BSR set to: 0
 28183                           ;EEPROM.c: 202: {
 28184                           ;EEPROM.c: 203: for(i=0; i< 12; i++)
 28185  008718  0E00               	movlw	0
 28186  00871A  0100               	movlb	0	; () banked
 28187  00871C  6FC0               	movwf	SetEEPROM1@i& (0+255),b
 28188  00871E                     l10426:
 28189                           
 28190                           ; BSR set to: 0
 28191  00871E  0E0B               	movlw	11
 28192  008720  0100               	movlb	0	; () banked
 28193  008722  65C0               	cpfsgt	SetEEPROM1@i& (0+255),b
 28194  008724  D001               	goto	l10430
 28195                           
 28196                           ; BSR set to: 0
 28197  008726  D03F               	goto	l1099
 28198  008728                     l10430:
 28199                           
 28200                           ; BSR set to: 0
 28201                           ;EEPROM.c: 204: {
 28202                           ;EEPROM.c: 205: for(j=0; j < 2; j++)
 28203  008728  0E00               	movlw	0
 28204  00872A  0100               	movlb	0	; () banked
 28205  00872C  6FC1               	movwf	SetEEPROM1@j& (0+255),b
 28206  00872E                     l10432:
 28207                           
 28208                           ; BSR set to: 0
 28209  00872E  0E01               	movlw	1
 28210  008730  0100               	movlb	0	; () banked
 28211  008732  65C1               	cpfsgt	SetEEPROM1@j& (0+255),b
 28212  008734  D001               	goto	l10436
 28213                           
 28214                           ; BSR set to: 0
 28215  008736  D034               	goto	l10444
 28216  008738                     l10436:
 28217                           
 28218                           ; BSR set to: 0
 28219                           ;EEPROM.c: 206: {
 28220                           ;EEPROM.c: 207: temp = Temp.RemoteButtonNEC[i][j];
 28221  008738  0100               	movlb	0	; () banked
 28222  00873A  51C0               	movf	SetEEPROM1@i& (0+255),w,b
 28223  00873C  0D02               	mullw	2
 28224  00873E  0E96               	movlw	low SetEEPROM1@Temp
 28225  008740  0100               	movlb	0	; () banked
 28226  008742  6FB8               	movwf	??_SetEEPROM1& (0+255),b
 28227  008744  0E00               	movlw	high SetEEPROM1@Temp
 28228  008746  0100               	movlb	0	; () banked
 28229  008748  6FB9               	movwf	(??_SetEEPROM1+1)& (0+255),b
 28230  00874A  50F3               	movf	prodl,w,c
 28231  00874C  0100               	movlb	0	; () banked
 28232  00874E  27B8               	addwf	??_SetEEPROM1& (0+255),f,b
 28233  008750  50F4               	movf	prodh,w,c
 28234  008752  0100               	movlb	0	; () banked
 28235  008754  23B9               	addwfc	(??_SetEEPROM1+1)& (0+255),f,b
 28236  008756  0100               	movlb	0	; () banked
 28237  008758  51C1               	movf	SetEEPROM1@j& (0+255),w,b
 28238  00875A  0D01               	mullw	1
 28239  00875C  50F3               	movf	prodl,w,c
 28240  00875E  0100               	movlb	0	; () banked
 28241  008760  27B8               	addwf	??_SetEEPROM1& (0+255),f,b
 28242  008762  50F4               	movf	prodh,w,c
 28243  008764  0100               	movlb	0	; () banked
 28244  008766  23B9               	addwfc	(??_SetEEPROM1+1)& (0+255),f,b
 28245  008768  0E05               	movlw	5
 28246  00876A  0100               	movlb	0	; () banked
 28247  00876C  25B8               	addwf	??_SetEEPROM1& (0+255),w,b
 28248  00876E  6ED9               	movwf	fsr2l,c
 28249  008770  0E00               	movlw	0
 28250  008772  0100               	movlb	0	; () banked
 28251  008774  21B9               	addwfc	(??_SetEEPROM1+1)& (0+255),w,b
 28252  008776  6EDA               	movwf	fsr2h,c
 28253  008778  50DF               	movf	indf2,w,c
 28254  00877A  0100               	movlb	0	; () banked
 28255  00877C  6FBA               	movwf	SetEEPROM1@temp& (0+255),b
 28256                           
 28257                           ; BSR set to: 0
 28258                           ;EEPROM.c: 208: if(!SetMemoryChar(temp,Arrayspot++))
 28259  00877E  0100               	movlb	0	; () banked
 28260  008780  2BBB               	incf	SetEEPROM1@Arrayspot& (0+255),f,b
 28261  008782  05BB               	decf	SetEEPROM1@Arrayspot& (0+255),w,b
 28262  008784  0100               	movlb	0	; () banked
 28263  008786  6F6A               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 28264  008788  0100               	movlb	0	; () banked
 28265  00878A  51BA               	movf	SetEEPROM1@temp& (0+255),w,b
 28266  00878C  EC86  F052         	call	_SetMemoryChar
 28267  008790  0900               	iorlw	0
 28268  008792  A4D8               	btfss	status,2,c
 28269  008794  D002               	goto	l1104
 28270                           
 28271                           ;EEPROM.c: 209: {
 28272                           ;EEPROM.c: 211: fail |= 0x00000004;
 28273  008796  0100               	movlb	0	; () banked
 28274  008798  85BC               	bsf	SetEEPROM1@fail& (0+255),2,b
 28275  00879A                     l1104:
 28276  00879A  0100               	movlb	0	; () banked
 28277  00879C  2BC1               	incf	SetEEPROM1@j& (0+255),f,b
 28278  00879E  D7C7               	goto	l10432
 28279  0087A0                     l10444:
 28280                           
 28281                           ; BSR set to: 0
 28282  0087A0  0100               	movlb	0	; () banked
 28283  0087A2  2BC0               	incf	SetEEPROM1@i& (0+255),f,b
 28284  0087A4  D7BC               	goto	l10426
 28285  0087A6                     l1099:
 28286                           
 28287                           ; BSR set to: 0
 28288                           ;EEPROM.c: 212: }
 28289                           ;EEPROM.c: 213: }
 28290                           ;EEPROM.c: 214: }
 28291                           ;EEPROM.c: 215: }
 28292                           ;EEPROM.c: 216: if(burn & 0x00000008)
 28293  0087A6  0100               	movlb	0	; () banked
 28294  0087A8  A7B4               	btfss	SetEEPROM1@burn& (0+255),3,b
 28295  0087AA  D00D               	goto	l10452
 28296                           
 28297                           ; BSR set to: 0
 28298                           ;EEPROM.c: 217: {
 28299                           ;EEPROM.c: 218: if(!SetMemoryChar(Temp.EEPROMinitFlag,(2*12 + 5)))
 28300  0087AC  0E1D               	movlw	29
 28301  0087AE  0100               	movlb	0	; () banked
 28302  0087B0  6F6A               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 28303  0087B2  0100               	movlb	0	; () banked
 28304  0087B4  51B3               	movf	(SetEEPROM1@Temp+29)& (0+255),w,b
 28305  0087B6  EC86  F052         	call	_SetMemoryChar
 28306  0087BA  0900               	iorlw	0
 28307  0087BC  A4D8               	btfss	status,2,c
 28308  0087BE  D003               	goto	l10452
 28309                           
 28310                           ;EEPROM.c: 219: {
 28311                           ;EEPROM.c: 221: fail |= 0x00000008;
 28312  0087C0  0100               	movlb	0	; () banked
 28313  0087C2  87BC               	bsf	SetEEPROM1@fail& (0+255),3,b
 28314                           
 28315                           ; BSR set to: 0
 28316  0087C4  D000               	goto	l10452
 28317  0087C6                     l10452:
 28318                           
 28319                           ;EEPROM.c: 222: }
 28320                           ;EEPROM.c: 223: }
 28321                           ;EEPROM.c: 224: return fail;
 28322  0087C6  C0BC  F096         	movff	SetEEPROM1@fail,?_SetEEPROM1
 28323  0087CA  C0BD  F097         	movff	SetEEPROM1@fail+1,?_SetEEPROM1+1
 28324  0087CE  C0BE  F098         	movff	SetEEPROM1@fail+2,?_SetEEPROM1+2
 28325  0087D2  C0BF  F099         	movff	SetEEPROM1@fail+3,?_SetEEPROM1+3
 28326  0087D6  0012               	return	
 28327  0087D8  0012               	return		;funcret
 28328  0087DA                     __end_of_SetEEPROM1:
 28329                           	opt stack 0
 28330                           tblptru	equ	0xFF8
 28331                           tblptrh	equ	0xFF7
 28332                           tblptrl	equ	0xFF6
 28333                           tablat	equ	0xFF5
 28334                           prodh	equ	0xFF4
 28335                           prodl	equ	0xFF3
 28336                           intcon	equ	0xFF2
 28337                           intcon2	equ	0xFF1
 28338                           indf0	equ	0xFEF
 28339                           postinc0	equ	0xFEE
 28340                           plusw0	equ	0xFEB
 28341                           fsr0h	equ	0xFEA
 28342                           fsr0l	equ	0xFE9
 28343                           wreg	equ	0xFE8
 28344                           indf1	equ	0xFE7
 28345                           postdec1	equ	0xFE5
 28346                           fsr1h	equ	0xFE2
 28347                           fsr1l	equ	0xFE1
 28348                           indf2	equ	0xFDF
 28349                           postinc2	equ	0xFDE
 28350                           postdec2	equ	0xFDD
 28351                           plusw2	equ	0xFDB
 28352                           fsr2h	equ	0xFDA
 28353                           fsr2l	equ	0xFD9
 28354                           status	equ	0xFD8
 28355                           
 28356 ;; *************** function _SetMemoryLong *****************
 28357 ;; Defined at:
 28358 ;;		line 407 in file "EEPROM.c"
 28359 ;; Parameters:    Size  Location     Type
 28360 ;;  Data            4   37[BANK0 ] unsigned long 
 28361 ;;  AddressFirst    1   41[BANK0 ] unsigned char 
 28362 ;; Auto vars:     Size  Location     Type
 28363 ;;  Test            4   46[BANK0 ] unsigned long 
 28364 ;;  L               1   53[BANK0 ] unsigned char 
 28365 ;;  ML              1   52[BANK0 ] unsigned char 
 28366 ;;  MH              1   51[BANK0 ] unsigned char 
 28367 ;;  H               1   50[BANK0 ] unsigned char 
 28368 ;; Return value:  Size  Location     Type
 28369 ;;                  1    wreg      unsigned char 
 28370 ;; Registers used:
 28371 ;;		wreg, status,2, status,0, cstack
 28372 ;; Tracked objects:
 28373 ;;		On entry : 0/0
 28374 ;;		On exit  : 0/0
 28375 ;;		Unchanged: 0/0
 28376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28377 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28378 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28379 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28380 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28381 ;;Total ram usage:       17 bytes
 28382 ;; Hardware stack levels used:    1
 28383 ;; Hardware stack levels required when called:    7
 28384 ;; This function calls:
 28385 ;;		_GetMemoryLong
 28386 ;;		_WriteEEPROM_1Byte
 28387 ;; This function is called by:
 28388 ;;		_SetEEPROM1
 28389 ;;		_SetEEPROM2
 28390 ;; This function uses a non-reentrant model
 28391 ;;
 28392                           
 28393                           	psect	text62
 28394  008E78                     __ptext62:
 28395                           	opt stack 0
 28396  008E78                     _SetMemoryLong:
 28397                           	opt stack 20
 28398                           
 28399                           ;EEPROM.c: 409: unsigned char H;
 28400                           ;EEPROM.c: 410: unsigned char MH;
 28401                           ;EEPROM.c: 411: unsigned char ML;
 28402                           ;EEPROM.c: 412: unsigned char L;
 28403                           ;EEPROM.c: 413: unsigned long Test;
 28404                           ;EEPROM.c: 415: H = (unsigned char) ((Data & 0XFF000000) >> 24);
 28405                           
 28406                           ;incstack = 0
 28407  008E78  0E00               	movlw	0
 28408  008E7A  0100               	movlb	0	; () banked
 28409  008E7C  1585               	andwf	SetMemoryLong@Data& (0+255),w,b
 28410  008E7E  0100               	movlb	0	; () banked
 28411  008E80  6F8A               	movwf	??_SetMemoryLong& (0+255),b
 28412  008E82  0E00               	movlw	0
 28413  008E84  0100               	movlb	0	; () banked
 28414  008E86  1586               	andwf	(SetMemoryLong@Data+1)& (0+255),w,b
 28415  008E88  0100               	movlb	0	; () banked
 28416  008E8A  6F8B               	movwf	(??_SetMemoryLong+1)& (0+255),b
 28417  008E8C  0E00               	movlw	0
 28418  008E8E  0100               	movlb	0	; () banked
 28419  008E90  1587               	andwf	(SetMemoryLong@Data+2)& (0+255),w,b
 28420  008E92  0100               	movlb	0	; () banked
 28421  008E94  6F8C               	movwf	(??_SetMemoryLong+2)& (0+255),b
 28422  008E96  0EFF               	movlw	255
 28423  008E98  0100               	movlb	0	; () banked
 28424  008E9A  1588               	andwf	(SetMemoryLong@Data+3)& (0+255),w,b
 28425  008E9C  0100               	movlb	0	; () banked
 28426  008E9E  6F8D               	movwf	(??_SetMemoryLong+3)& (0+255),b
 28427  008EA0  0E19               	movlw	25
 28428  008EA2  D006               	goto	u10400
 28429  008EA4                     u10405:
 28430  008EA4  0100               	movlb	0	; () banked
 28431  008EA6  90D8               	bcf	status,0,c
 28432  008EA8  338D               	rrcf	(??_SetMemoryLong+3)& (0+255),f,b
 28433  008EAA  338C               	rrcf	(??_SetMemoryLong+2)& (0+255),f,b
 28434  008EAC  338B               	rrcf	(??_SetMemoryLong+1)& (0+255),f,b
 28435  008EAE  338A               	rrcf	??_SetMemoryLong& (0+255),f,b
 28436  008EB0                     u10400:
 28437  008EB0  2EE8               	decfsz	wreg,f,c
 28438  008EB2  D7F8               	goto	u10405
 28439  008EB4  0100               	movlb	0	; () banked
 28440  008EB6  518A               	movf	??_SetMemoryLong& (0+255),w,b
 28441  008EB8  0100               	movlb	0	; () banked
 28442  008EBA  6F92               	movwf	SetMemoryLong@H& (0+255),b
 28443                           
 28444                           ; BSR set to: 0
 28445                           ;EEPROM.c: 416: MH = (unsigned char) ((Data & 0X00FF0000) >> 16);
 28446  008EBC  C087  F093         	movff	SetMemoryLong@Data+2,SetMemoryLong@MH
 28447                           
 28448                           ; BSR set to: 0
 28449                           ;EEPROM.c: 417: ML = (unsigned char) ((Data & 0X0000FF00) >> 8);
 28450  008EC0  C086  F094         	movff	SetMemoryLong@Data+1,SetMemoryLong@ML
 28451                           
 28452                           ; BSR set to: 0
 28453                           ;EEPROM.c: 418: L = (unsigned char) (Data & 0X000000FF);
 28454  008EC4  C085  F095         	movff	SetMemoryLong@Data,SetMemoryLong@L
 28455                           
 28456                           ; BSR set to: 0
 28457                           ;EEPROM.c: 421: WriteEEPROM_1Byte(AddressFirst, H);
 28458  008EC8  C089  F060         	movff	SetMemoryLong@AddressFirst,WriteEEPROM_1Byte@address
 28459  008ECC  0100               	movlb	0	; () banked
 28460  008ECE  6B61               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 28461  008ED0  C092  F062         	movff	SetMemoryLong@H,WriteEEPROM_1Byte@data
 28462  008ED4  ECB8  F050         	call	_WriteEEPROM_1Byte	;wreg free
 28463                           
 28464                           ;EEPROM.c: 422: WriteEEPROM_1Byte((AddressFirst + 1), MH);
 28465  008ED8  0E01               	movlw	1
 28466  008EDA  0100               	movlb	0	; () banked
 28467  008EDC  2589               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 28468  008EDE  0100               	movlb	0	; () banked
 28469  008EE0  6F60               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 28470  008EE2  0100               	movlb	0	; () banked
 28471  008EE4  6B61               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 28472  008EE6  0E00               	movlw	0
 28473  008EE8  2361               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 28474  008EEA  C093  F062         	movff	SetMemoryLong@MH,WriteEEPROM_1Byte@data
 28475  008EEE  ECB8  F050         	call	_WriteEEPROM_1Byte	;wreg free
 28476                           
 28477                           ;EEPROM.c: 423: WriteEEPROM_1Byte((AddressFirst + 2), ML);
 28478  008EF2  0E02               	movlw	2
 28479  008EF4  0100               	movlb	0	; () banked
 28480  008EF6  2589               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 28481  008EF8  0100               	movlb	0	; () banked
 28482  008EFA  6F60               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 28483  008EFC  0100               	movlb	0	; () banked
 28484  008EFE  6B61               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 28485  008F00  0E00               	movlw	0
 28486  008F02  2361               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 28487  008F04  C094  F062         	movff	SetMemoryLong@ML,WriteEEPROM_1Byte@data
 28488  008F08  ECB8  F050         	call	_WriteEEPROM_1Byte	;wreg free
 28489                           
 28490                           ;EEPROM.c: 424: WriteEEPROM_1Byte((AddressFirst + 3), L);
 28491  008F0C  0E03               	movlw	3
 28492  008F0E  0100               	movlb	0	; () banked
 28493  008F10  2589               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 28494  008F12  0100               	movlb	0	; () banked
 28495  008F14  6F60               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 28496  008F16  0100               	movlb	0	; () banked
 28497  008F18  6B61               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 28498  008F1A  0E00               	movlw	0
 28499  008F1C  2361               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 28500  008F1E  C095  F062         	movff	SetMemoryLong@L,WriteEEPROM_1Byte@data
 28501  008F22  ECB8  F050         	call	_WriteEEPROM_1Byte	;wreg free
 28502                           
 28503                           ;EEPROM.c: 427: Test = GetMemoryLong(AddressFirst);
 28504  008F26  0100               	movlb	0	; () banked
 28505  008F28  5189               	movf	SetMemoryLong@AddressFirst& (0+255),w,b
 28506  008F2A  ECA5  F03E         	call	_GetMemoryLong
 28507  008F2E  C064  F08E         	movff	?_GetMemoryLong,SetMemoryLong@Test
 28508  008F32  C065  F08F         	movff	?_GetMemoryLong+1,SetMemoryLong@Test+1
 28509  008F36  C066  F090         	movff	?_GetMemoryLong+2,SetMemoryLong@Test+2
 28510  008F3A  C067  F091         	movff	?_GetMemoryLong+3,SetMemoryLong@Test+3
 28511                           
 28512                           ;EEPROM.c: 429: if(Test == Data)
 28513  008F3E  0100               	movlb	0	; () banked
 28514  008F40  5185               	movf	SetMemoryLong@Data& (0+255),w,b
 28515  008F42  0100               	movlb	0	; () banked
 28516  008F44  198E               	xorwf	SetMemoryLong@Test& (0+255),w,b
 28517  008F46  E112               	bnz	l10132
 28518  008F48  0100               	movlb	0	; () banked
 28519  008F4A  5186               	movf	(SetMemoryLong@Data+1)& (0+255),w,b
 28520  008F4C  0100               	movlb	0	; () banked
 28521  008F4E  198F               	xorwf	(SetMemoryLong@Test+1)& (0+255),w,b
 28522  008F50  E10D               	bnz	l10132
 28523  008F52  0100               	movlb	0	; () banked
 28524  008F54  5187               	movf	(SetMemoryLong@Data+2)& (0+255),w,b
 28525  008F56  0100               	movlb	0	; () banked
 28526  008F58  1990               	xorwf	(SetMemoryLong@Test+2)& (0+255),w,b
 28527  008F5A  E108               	bnz	l10132
 28528  008F5C  0100               	movlb	0	; () banked
 28529  008F5E  5188               	movf	(SetMemoryLong@Data+3)& (0+255),w,b
 28530  008F60  0100               	movlb	0	; () banked
 28531  008F62  1991               	xorwf	(SetMemoryLong@Test+3)& (0+255),w,b
 28532  008F64  A4D8               	btfss	status,2,c
 28533  008F66  D002               	goto	l10132
 28534                           
 28535                           ; BSR set to: 0
 28536                           ;EEPROM.c: 430: {
 28537                           ;EEPROM.c: 431: return 1;
 28538  008F68  0E01               	movlw	1
 28539                           
 28540                           ; BSR set to: 0
 28541  008F6A  0012               	return	
 28542  008F6C                     l10132:
 28543                           
 28544                           ; BSR set to: 0
 28545                           ;EEPROM.c: 432: }
 28546                           ;EEPROM.c: 433: return 0;
 28547  008F6C  0E00               	movlw	0
 28548  008F6E  0012               	return	
 28549                           
 28550                           ; BSR set to: 0
 28551                           
 28552                           ; BSR set to: 0
 28553  008F70  0012               	return		;funcret
 28554  008F72                     __end_of_SetMemoryLong:
 28555                           	opt stack 0
 28556                           tblptru	equ	0xFF8
 28557                           tblptrh	equ	0xFF7
 28558                           tblptrl	equ	0xFF6
 28559                           tablat	equ	0xFF5
 28560                           prodh	equ	0xFF4
 28561                           prodl	equ	0xFF3
 28562                           intcon	equ	0xFF2
 28563                           intcon2	equ	0xFF1
 28564                           indf0	equ	0xFEF
 28565                           postinc0	equ	0xFEE
 28566                           plusw0	equ	0xFEB
 28567                           fsr0h	equ	0xFEA
 28568                           fsr0l	equ	0xFE9
 28569                           wreg	equ	0xFE8
 28570                           indf1	equ	0xFE7
 28571                           postdec1	equ	0xFE5
 28572                           fsr1h	equ	0xFE2
 28573                           fsr1l	equ	0xFE1
 28574                           indf2	equ	0xFDF
 28575                           postinc2	equ	0xFDE
 28576                           postdec2	equ	0xFDD
 28577                           plusw2	equ	0xFDB
 28578                           fsr2h	equ	0xFDA
 28579                           fsr2l	equ	0xFD9
 28580                           status	equ	0xFD8
 28581                           
 28582 ;; *************** function _GetMemoryLong *****************
 28583 ;; Defined at:
 28584 ;;		line 384 in file "EEPROM.c"
 28585 ;; Parameters:    Size  Location     Type
 28586 ;;  AddressFirst    1    wreg     unsigned char 
 28587 ;; Auto vars:     Size  Location     Type
 28588 ;;  AddressFirst    1   36[BANK0 ] unsigned char 
 28589 ;;  temp            4   28[BANK0 ] unsigned long 
 28590 ;;  L               1   35[BANK0 ] unsigned char 
 28591 ;;  ML              1   34[BANK0 ] unsigned char 
 28592 ;;  MH              1   33[BANK0 ] unsigned char 
 28593 ;;  H               1   32[BANK0 ] unsigned char 
 28594 ;; Return value:  Size  Location     Type
 28595 ;;                  4    4[BANK0 ] unsigned long 
 28596 ;; Registers used:
 28597 ;;		wreg, status,2, status,0, cstack
 28598 ;; Tracked objects:
 28599 ;;		On entry : 0/0
 28600 ;;		On exit  : 0/0
 28601 ;;		Unchanged: 0/0
 28602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28603 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28604 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28605 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28606 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28607 ;;Total ram usage:       33 bytes
 28608 ;; Hardware stack levels used:    1
 28609 ;; Hardware stack levels required when called:    6
 28610 ;; This function calls:
 28611 ;;		_ReadEEPROM_1Byte
 28612 ;; This function is called by:
 28613 ;;		_GetEEPROM1
 28614 ;;		_GetEEPROM2
 28615 ;;		_SetMemoryLong
 28616 ;; This function uses a non-reentrant model
 28617 ;;
 28618                           
 28619                           	psect	text63
 28620  007D4A                     __ptext63:
 28621                           	opt stack 0
 28622  007D4A                     _GetMemoryLong:
 28623                           	opt stack 20
 28624                           
 28625                           ; BSR set to: 0
 28626                           ;incstack = 0
 28627                           ;GetMemoryLong@AddressFirst stored from wreg
 28628  007D4A  0100               	movlb	0	; () banked
 28629  007D4C  6F84               	movwf	GetMemoryLong@AddressFirst& (0+255),b
 28630                           
 28631                           ; BSR set to: 0
 28632                           ;EEPROM.c: 386: unsigned char H;
 28633                           ;EEPROM.c: 387: unsigned char MH;
 28634                           ;EEPROM.c: 388: unsigned char ML;
 28635                           ;EEPROM.c: 389: unsigned char L;
 28636                           ;EEPROM.c: 390: unsigned long temp =0;
 28637  007D4E  0E00               	movlw	0
 28638  007D50  0100               	movlb	0	; () banked
 28639  007D52  6F7C               	movwf	GetMemoryLong@temp& (0+255),b
 28640  007D54  0E00               	movlw	0
 28641  007D56  6F7D               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 28642  007D58  0E00               	movlw	0
 28643  007D5A  6F7E               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 28644  007D5C  0E00               	movlw	0
 28645  007D5E  6F7F               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 28646                           
 28647                           ; BSR set to: 0
 28648                           ;EEPROM.c: 392: H = ReadEEPROM_1Byte(AddressFirst);
 28649  007D60  C084  F060         	movff	GetMemoryLong@AddressFirst,ReadEEPROM_1Byte@address
 28650  007D64  0100               	movlb	0	; () banked
 28651  007D66  6B61               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 28652  007D68  EC13  F051         	call	_ReadEEPROM_1Byte	;wreg free
 28653  007D6C  0100               	movlb	0	; () banked
 28654  007D6E  5160               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 28655  007D70  0100               	movlb	0	; () banked
 28656  007D72  6F80               	movwf	GetMemoryLong@H& (0+255),b
 28657                           
 28658                           ; BSR set to: 0
 28659                           ;EEPROM.c: 393: MH = ReadEEPROM_1Byte(AddressFirst + 1);
 28660  007D74  0E01               	movlw	1
 28661  007D76  0100               	movlb	0	; () banked
 28662  007D78  2584               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 28663  007D7A  0100               	movlb	0	; () banked
 28664  007D7C  6F60               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 28665  007D7E  0100               	movlb	0	; () banked
 28666  007D80  6B61               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 28667  007D82  0E00               	movlw	0
 28668  007D84  2361               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 28669  007D86  EC13  F051         	call	_ReadEEPROM_1Byte	;wreg free
 28670  007D8A  0100               	movlb	0	; () banked
 28671  007D8C  5160               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 28672  007D8E  0100               	movlb	0	; () banked
 28673  007D90  6F81               	movwf	GetMemoryLong@MH& (0+255),b
 28674                           
 28675                           ; BSR set to: 0
 28676                           ;EEPROM.c: 394: ML = ReadEEPROM_1Byte(AddressFirst + 2);
 28677  007D92  0E02               	movlw	2
 28678  007D94  0100               	movlb	0	; () banked
 28679  007D96  2584               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 28680  007D98  0100               	movlb	0	; () banked
 28681  007D9A  6F60               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 28682  007D9C  0100               	movlb	0	; () banked
 28683  007D9E  6B61               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 28684  007DA0  0E00               	movlw	0
 28685  007DA2  2361               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 28686  007DA4  EC13  F051         	call	_ReadEEPROM_1Byte	;wreg free
 28687  007DA8  0100               	movlb	0	; () banked
 28688  007DAA  5160               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 28689  007DAC  0100               	movlb	0	; () banked
 28690  007DAE  6F82               	movwf	GetMemoryLong@ML& (0+255),b
 28691                           
 28692                           ; BSR set to: 0
 28693                           ;EEPROM.c: 395: L = ReadEEPROM_1Byte(AddressFirst + 3);
 28694  007DB0  0E03               	movlw	3
 28695  007DB2  0100               	movlb	0	; () banked
 28696  007DB4  2584               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 28697  007DB6  0100               	movlb	0	; () banked
 28698  007DB8  6F60               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 28699  007DBA  0100               	movlb	0	; () banked
 28700  007DBC  6B61               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 28701  007DBE  0E00               	movlw	0
 28702  007DC0  2361               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 28703  007DC2  EC13  F051         	call	_ReadEEPROM_1Byte	;wreg free
 28704  007DC6  0100               	movlb	0	; () banked
 28705  007DC8  5160               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 28706  007DCA  0100               	movlb	0	; () banked
 28707  007DCC  6F83               	movwf	GetMemoryLong@L& (0+255),b
 28708                           
 28709                           ; BSR set to: 0
 28710                           ;EEPROM.c: 397: temp = (((unsigned long) H << 24) + ((unsigned long)MH << 16)
 28711                           ;EEPROM.c: 398: + ((unsigned long)ML << 8) + (unsigned long)L);
 28712  007DCE  C082  F068         	movff	GetMemoryLong@ML,??_GetMemoryLong
 28713  007DD2  0100               	movlb	0	; () banked
 28714  007DD4  6B69               	clrf	(??_GetMemoryLong+1)& (0+255),b
 28715  007DD6  6B6A               	clrf	(??_GetMemoryLong+2)& (0+255),b
 28716  007DD8  6B6B               	clrf	(??_GetMemoryLong+3)& (0+255),b
 28717  007DDA  C06A  F06B         	movff	??_GetMemoryLong+2,??_GetMemoryLong+3
 28718  007DDE  C069  F06A         	movff	??_GetMemoryLong+1,??_GetMemoryLong+2
 28719  007DE2  C068  F069         	movff	??_GetMemoryLong,??_GetMemoryLong+1
 28720  007DE6  0100               	movlb	0	; () banked
 28721  007DE8  6B68               	clrf	??_GetMemoryLong& (0+255),b
 28722  007DEA  C081  F06C         	movff	GetMemoryLong@MH,??_GetMemoryLong+4
 28723  007DEE  0100               	movlb	0	; () banked
 28724  007DF0  6B6D               	clrf	(??_GetMemoryLong+5)& (0+255),b
 28725  007DF2  6B6E               	clrf	(??_GetMemoryLong+6)& (0+255),b
 28726  007DF4  6B6F               	clrf	(??_GetMemoryLong+7)& (0+255),b
 28727  007DF6  C06D  F06F         	movff	??_GetMemoryLong+5,??_GetMemoryLong+7
 28728  007DFA  C06C  F06E         	movff	??_GetMemoryLong+4,??_GetMemoryLong+6
 28729  007DFE  0100               	movlb	0	; () banked
 28730  007E00  6B6D               	clrf	(??_GetMemoryLong+5)& (0+255),b
 28731  007E02  6B6C               	clrf	(??_GetMemoryLong+4)& (0+255),b
 28732  007E04  C080  F070         	movff	GetMemoryLong@H,??_GetMemoryLong+8
 28733  007E08  0100               	movlb	0	; () banked
 28734  007E0A  6B71               	clrf	(??_GetMemoryLong+9)& (0+255),b
 28735  007E0C  6B72               	clrf	(??_GetMemoryLong+10)& (0+255),b
 28736  007E0E  6B73               	clrf	(??_GetMemoryLong+11)& (0+255),b
 28737  007E10  C070  F073         	movff	??_GetMemoryLong+8,??_GetMemoryLong+11
 28738  007E14  0100               	movlb	0	; () banked
 28739  007E16  6B72               	clrf	(??_GetMemoryLong+10)& (0+255),b
 28740  007E18  6B71               	clrf	(??_GetMemoryLong+9)& (0+255),b
 28741  007E1A  6B70               	clrf	(??_GetMemoryLong+8)& (0+255),b
 28742  007E1C  0100               	movlb	0	; () banked
 28743  007E1E  516C               	movf	(??_GetMemoryLong+4)& (0+255),w,b
 28744  007E20  0100               	movlb	0	; () banked
 28745  007E22  2570               	addwf	(??_GetMemoryLong+8)& (0+255),w,b
 28746  007E24  0100               	movlb	0	; () banked
 28747  007E26  6F74               	movwf	(??_GetMemoryLong+12)& (0+255),b
 28748  007E28  0100               	movlb	0	; () banked
 28749  007E2A  516D               	movf	(??_GetMemoryLong+5)& (0+255),w,b
 28750  007E2C  0100               	movlb	0	; () banked
 28751  007E2E  2171               	addwfc	(??_GetMemoryLong+9)& (0+255),w,b
 28752  007E30  0100               	movlb	0	; () banked
 28753  007E32  6F75               	movwf	(??_GetMemoryLong+13)& (0+255),b
 28754  007E34  0100               	movlb	0	; () banked
 28755  007E36  516E               	movf	(??_GetMemoryLong+6)& (0+255),w,b
 28756  007E38  0100               	movlb	0	; () banked
 28757  007E3A  2172               	addwfc	(??_GetMemoryLong+10)& (0+255),w,b
 28758  007E3C  0100               	movlb	0	; () banked
 28759  007E3E  6F76               	movwf	(??_GetMemoryLong+14)& (0+255),b
 28760  007E40  0100               	movlb	0	; () banked
 28761  007E42  516F               	movf	(??_GetMemoryLong+7)& (0+255),w,b
 28762  007E44  0100               	movlb	0	; () banked
 28763  007E46  2173               	addwfc	(??_GetMemoryLong+11)& (0+255),w,b
 28764  007E48  0100               	movlb	0	; () banked
 28765  007E4A  6F77               	movwf	(??_GetMemoryLong+15)& (0+255),b
 28766  007E4C  0100               	movlb	0	; () banked
 28767  007E4E  5168               	movf	??_GetMemoryLong& (0+255),w,b
 28768  007E50  0100               	movlb	0	; () banked
 28769  007E52  2574               	addwf	(??_GetMemoryLong+12)& (0+255),w,b
 28770  007E54  0100               	movlb	0	; () banked
 28771  007E56  6F78               	movwf	(??_GetMemoryLong+16)& (0+255),b
 28772  007E58  0100               	movlb	0	; () banked
 28773  007E5A  5169               	movf	(??_GetMemoryLong+1)& (0+255),w,b
 28774  007E5C  0100               	movlb	0	; () banked
 28775  007E5E  2175               	addwfc	(??_GetMemoryLong+13)& (0+255),w,b
 28776  007E60  0100               	movlb	0	; () banked
 28777  007E62  6F79               	movwf	(??_GetMemoryLong+17)& (0+255),b
 28778  007E64  0100               	movlb	0	; () banked
 28779  007E66  516A               	movf	(??_GetMemoryLong+2)& (0+255),w,b
 28780  007E68  0100               	movlb	0	; () banked
 28781  007E6A  2176               	addwfc	(??_GetMemoryLong+14)& (0+255),w,b
 28782  007E6C  0100               	movlb	0	; () banked
 28783  007E6E  6F7A               	movwf	(??_GetMemoryLong+18)& (0+255),b
 28784  007E70  0100               	movlb	0	; () banked
 28785  007E72  516B               	movf	(??_GetMemoryLong+3)& (0+255),w,b
 28786  007E74  0100               	movlb	0	; () banked
 28787  007E76  2177               	addwfc	(??_GetMemoryLong+15)& (0+255),w,b
 28788  007E78  0100               	movlb	0	; () banked
 28789  007E7A  6F7B               	movwf	(??_GetMemoryLong+19)& (0+255),b
 28790  007E7C  0100               	movlb	0	; () banked
 28791  007E7E  5183               	movf	GetMemoryLong@L& (0+255),w,b
 28792  007E80  0100               	movlb	0	; () banked
 28793  007E82  2578               	addwf	(??_GetMemoryLong+16)& (0+255),w,b
 28794  007E84  0100               	movlb	0	; () banked
 28795  007E86  6F7C               	movwf	GetMemoryLong@temp& (0+255),b
 28796  007E88  0E00               	movlw	0
 28797  007E8A  0100               	movlb	0	; () banked
 28798  007E8C  2179               	addwfc	(??_GetMemoryLong+17)& (0+255),w,b
 28799  007E8E  0100               	movlb	0	; () banked
 28800  007E90  6F7D               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 28801  007E92  0E00               	movlw	0
 28802  007E94  0100               	movlb	0	; () banked
 28803  007E96  217A               	addwfc	(??_GetMemoryLong+18)& (0+255),w,b
 28804  007E98  0100               	movlb	0	; () banked
 28805  007E9A  6F7E               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 28806  007E9C  0E00               	movlw	0
 28807  007E9E  0100               	movlb	0	; () banked
 28808  007EA0  217B               	addwfc	(??_GetMemoryLong+19)& (0+255),w,b
 28809  007EA2  0100               	movlb	0	; () banked
 28810  007EA4  6F7F               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 28811                           
 28812                           ; BSR set to: 0
 28813                           ;EEPROM.c: 399: return temp;
 28814  007EA6  C07C  F064         	movff	GetMemoryLong@temp,?_GetMemoryLong
 28815  007EAA  C07D  F065         	movff	GetMemoryLong@temp+1,?_GetMemoryLong+1
 28816  007EAE  C07E  F066         	movff	GetMemoryLong@temp+2,?_GetMemoryLong+2
 28817  007EB2  C07F  F067         	movff	GetMemoryLong@temp+3,?_GetMemoryLong+3
 28818  007EB6  0012               	return	
 28819                           
 28820                           ; BSR set to: 0
 28821                           
 28822                           ; BSR set to: 0
 28823  007EB8  0012               	return		;funcret
 28824  007EBA                     __end_of_GetMemoryLong:
 28825                           	opt stack 0
 28826                           tblptru	equ	0xFF8
 28827                           tblptrh	equ	0xFF7
 28828                           tblptrl	equ	0xFF6
 28829                           tablat	equ	0xFF5
 28830                           prodh	equ	0xFF4
 28831                           prodl	equ	0xFF3
 28832                           intcon	equ	0xFF2
 28833                           intcon2	equ	0xFF1
 28834                           indf0	equ	0xFEF
 28835                           postinc0	equ	0xFEE
 28836                           plusw0	equ	0xFEB
 28837                           fsr0h	equ	0xFEA
 28838                           fsr0l	equ	0xFE9
 28839                           wreg	equ	0xFE8
 28840                           indf1	equ	0xFE7
 28841                           postdec1	equ	0xFE5
 28842                           fsr1h	equ	0xFE2
 28843                           fsr1l	equ	0xFE1
 28844                           indf2	equ	0xFDF
 28845                           postinc2	equ	0xFDE
 28846                           postdec2	equ	0xFDD
 28847                           plusw2	equ	0xFDB
 28848                           fsr2h	equ	0xFDA
 28849                           fsr2l	equ	0xFD9
 28850                           status	equ	0xFD8
 28851                           
 28852 ;; *************** function _SetMemoryChar *****************
 28853 ;; Defined at:
 28854 ;;		line 501 in file "EEPROM.c"
 28855 ;; Parameters:    Size  Location     Type
 28856 ;;  Data            1    wreg     unsigned char 
 28857 ;;  AddressFirst    1   10[BANK0 ] unsigned char 
 28858 ;; Auto vars:     Size  Location     Type
 28859 ;;  Data            1   12[BANK0 ] unsigned char 
 28860 ;;  Test            1   11[BANK0 ] unsigned char 
 28861 ;; Return value:  Size  Location     Type
 28862 ;;                  1    wreg      unsigned char 
 28863 ;; Registers used:
 28864 ;;		wreg, status,2, status,0, cstack
 28865 ;; Tracked objects:
 28866 ;;		On entry : 0/0
 28867 ;;		On exit  : 0/0
 28868 ;;		Unchanged: 0/0
 28869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28870 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28871 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28873 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28874 ;;Total ram usage:        3 bytes
 28875 ;; Hardware stack levels used:    1
 28876 ;; Hardware stack levels required when called:    7
 28877 ;; This function calls:
 28878 ;;		_GetMemoryChar
 28879 ;;		_WriteEEPROM_1Byte
 28880 ;; This function is called by:
 28881 ;;		_SetEEPROM1
 28882 ;;		_SetEEPROM2
 28883 ;; This function uses a non-reentrant model
 28884 ;;
 28885                           
 28886                           	psect	text64
 28887  00A50C                     __ptext64:
 28888                           	opt stack 0
 28889  00A50C                     _SetMemoryChar:
 28890                           	opt stack 20
 28891                           
 28892                           ; BSR set to: 0
 28893                           ;incstack = 0
 28894                           ;SetMemoryChar@Data stored from wreg
 28895  00A50C  0100               	movlb	0	; () banked
 28896  00A50E  6F6C               	movwf	SetMemoryChar@Data& (0+255),b
 28897                           
 28898                           ; BSR set to: 0
 28899                           ;EEPROM.c: 503: unsigned char Test;
 28900                           ;EEPROM.c: 505: WriteEEPROM_1Byte(AddressFirst, Data);
 28901  00A510  C06A  F060         	movff	SetMemoryChar@AddressFirst,WriteEEPROM_1Byte@address
 28902  00A514  0100               	movlb	0	; () banked
 28903  00A516  6B61               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 28904  00A518  C06C  F062         	movff	SetMemoryChar@Data,WriteEEPROM_1Byte@data
 28905  00A51C  ECB8  F050         	call	_WriteEEPROM_1Byte	;wreg free
 28906                           
 28907                           ;EEPROM.c: 508: Test = GetMemoryChar(AddressFirst);
 28908  00A520  0100               	movlb	0	; () banked
 28909  00A522  516A               	movf	SetMemoryChar@AddressFirst& (0+255),w,b
 28910  00A524  ECCE  F053         	call	_GetMemoryChar
 28911  00A528  0100               	movlb	0	; () banked
 28912  00A52A  5164               	movf	?_GetMemoryChar& (0+255),w,b
 28913  00A52C  0100               	movlb	0	; () banked
 28914  00A52E  6F6B               	movwf	SetMemoryChar@Test& (0+255),b
 28915                           
 28916                           ; BSR set to: 0
 28917                           ;EEPROM.c: 510: if(Test == Data)
 28918  00A530  0100               	movlb	0	; () banked
 28919  00A532  516C               	movf	SetMemoryChar@Data& (0+255),w,b
 28920  00A534  0100               	movlb	0	; () banked
 28921  00A536  196B               	xorwf	SetMemoryChar@Test& (0+255),w,b
 28922  00A538  A4D8               	btfss	status,2,c
 28923  00A53A  D002               	goto	l10104
 28924                           
 28925                           ; BSR set to: 0
 28926                           ;EEPROM.c: 511: {
 28927                           ;EEPROM.c: 512: return 1;
 28928  00A53C  0E01               	movlw	1
 28929                           
 28930                           ; BSR set to: 0
 28931  00A53E  0012               	return	
 28932  00A540                     l10104:
 28933                           
 28934                           ; BSR set to: 0
 28935                           ;EEPROM.c: 513: }
 28936                           ;EEPROM.c: 514: return 0;
 28937  00A540  0E00               	movlw	0
 28938  00A542  0012               	return	
 28939                           
 28940                           ; BSR set to: 0
 28941                           
 28942                           ; BSR set to: 0
 28943  00A544  0012               	return		;funcret
 28944  00A546                     __end_of_SetMemoryChar:
 28945                           	opt stack 0
 28946                           tblptru	equ	0xFF8
 28947                           tblptrh	equ	0xFF7
 28948                           tblptrl	equ	0xFF6
 28949                           tablat	equ	0xFF5
 28950                           prodh	equ	0xFF4
 28951                           prodl	equ	0xFF3
 28952                           intcon	equ	0xFF2
 28953                           intcon2	equ	0xFF1
 28954                           indf0	equ	0xFEF
 28955                           postinc0	equ	0xFEE
 28956                           plusw0	equ	0xFEB
 28957                           fsr0h	equ	0xFEA
 28958                           fsr0l	equ	0xFE9
 28959                           wreg	equ	0xFE8
 28960                           indf1	equ	0xFE7
 28961                           postdec1	equ	0xFE5
 28962                           fsr1h	equ	0xFE2
 28963                           fsr1l	equ	0xFE1
 28964                           indf2	equ	0xFDF
 28965                           postinc2	equ	0xFDE
 28966                           postdec2	equ	0xFDD
 28967                           plusw2	equ	0xFDB
 28968                           fsr2h	equ	0xFDA
 28969                           fsr2l	equ	0xFD9
 28970                           status	equ	0xFD8
 28971                           
 28972 ;; *************** function _WriteEEPROM_1Byte *****************
 28973 ;; Defined at:
 28974 ;;		line 102 in file "EEPROM.c"
 28975 ;; Parameters:    Size  Location     Type
 28976 ;;  address         2    0[BANK0 ] unsigned int 
 28977 ;;  data            1    2[BANK0 ] unsigned char 
 28978 ;; Auto vars:     Size  Location     Type
 28979 ;;  PEIEstatus      1    4[BANK0 ] unsigned char 
 28980 ;;  GIEstatus       1    3[BANK0 ] unsigned char 
 28981 ;; Return value:  Size  Location     Type
 28982 ;;		None               void
 28983 ;; Registers used:
 28984 ;;		wreg, status,2, status,0, cstack
 28985 ;; Tracked objects:
 28986 ;;		On entry : 0/0
 28987 ;;		On exit  : 0/0
 28988 ;;		Unchanged: 0/0
 28989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28990 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28991 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28993 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28994 ;;Total ram usage:        5 bytes
 28995 ;; Hardware stack levels used:    1
 28996 ;; Hardware stack levels required when called:    6
 28997 ;; This function calls:
 28998 ;;		_EEPROM_UNLOCK
 28999 ;; This function is called by:
 29000 ;;		_SetMemoryLong
 29001 ;;		_SetMemoryChar
 29002 ;;		_SetMemoryInt
 29003 ;; This function uses a non-reentrant model
 29004 ;;
 29005                           
 29006                           	psect	text65
 29007  00A170                     __ptext65:
 29008                           	opt stack 0
 29009  00A170                     _WriteEEPROM_1Byte:
 29010                           	opt stack 20
 29011                           
 29012                           ;EEPROM.c: 104: unsigned char GIEstatus = INTCONbits.GIE;
 29013                           
 29014                           ; BSR set to: 0
 29015                           ;incstack = 0
 29016  00A170  0E00               	movlw	0
 29017  00A172  BEF2               	btfsc	intcon,7,c	;volatile
 29018  00A174  0E01               	movlw	1
 29019  00A176  0100               	movlb	0	; () banked
 29020  00A178  6F63               	movwf	WriteEEPROM_1Byte@GIEstatus& (0+255),b
 29021                           
 29022                           ;EEPROM.c: 105: unsigned char PEIEstatus = INTCONbits.PEIE;
 29023  00A17A  0E00               	movlw	0
 29024  00A17C  BCF2               	btfsc	intcon,6,c	;volatile
 29025  00A17E  0E01               	movlw	1
 29026  00A180  0100               	movlb	0	; () banked
 29027  00A182  6F64               	movwf	WriteEEPROM_1Byte@PEIEstatus& (0+255),b
 29028                           
 29029                           ; BSR set to: 0
 29030                           ;EEPROM.c: 106: INTCONbits.GIE = 0;
 29031  00A184  9EF2               	bcf	intcon,7,c	;volatile
 29032                           
 29033                           ; BSR set to: 0
 29034                           ;EEPROM.c: 107: INTCONbits.PEIE = 0;
 29035  00A186  9CF2               	bcf	intcon,6,c	;volatile
 29036                           
 29037                           ; BSR set to: 0
 29038                           ;EEPROM.c: 108: EEADRH = (unsigned char)((address & 0x300) >> 8);
 29039  00A188  0100               	movlb	0	; () banked
 29040  00A18A  5161               	movf	(WriteEEPROM_1Byte@address+1)& (0+255),w,b
 29041  00A18C  0B03               	andlw	3
 29042  00A18E  6EAA               	movwf	4010,c	;volatile
 29043                           
 29044                           ; BSR set to: 0
 29045                           ;EEPROM.c: 109: EEADR = (unsigned char)(address & 0xFF);
 29046  00A190  C060  FFA9         	movff	WriteEEPROM_1Byte@address,4009	;volatile
 29047                           
 29048                           ; BSR set to: 0
 29049                           ;EEPROM.c: 110: EEDATA = data;
 29050  00A194  C062  FFA8         	movff	WriteEEPROM_1Byte@data,4008	;volatile
 29051                           
 29052                           ; BSR set to: 0
 29053                           ;EEPROM.c: 111: EECON1bits.EEPGD = 0;
 29054  00A198  9EA6               	bcf	4006,7,c	;volatile
 29055                           
 29056                           ; BSR set to: 0
 29057                           ;EEPROM.c: 112: EECON1bits.CFGS = 0;
 29058  00A19A  9CA6               	bcf	4006,6,c	;volatile
 29059                           
 29060                           ; BSR set to: 0
 29061                           ;EEPROM.c: 113: EECON1bits.WREN =1;
 29062  00A19C  84A6               	bsf	4006,2,c	;volatile
 29063                           
 29064                           ; BSR set to: 0
 29065                           ;EEPROM.c: 114: INTCONbits.GIE =0;
 29066  00A19E  9EF2               	bcf	intcon,7,c	;volatile
 29067                           
 29068                           ; BSR set to: 0
 29069                           ;EEPROM.c: 115: EEPROM_UNLOCK();
 29070  00A1A0  EC70  F054         	call	_EEPROM_UNLOCK	;wreg free
 29071                           
 29072                           ;EEPROM.c: 116: EECON1bits.WR =1;
 29073  00A1A4  82A6               	bsf	4006,1,c	;volatile
 29074                           
 29075                           ;EEPROM.c: 117: while(EECON1bits.WR);
 29076  00A1A6  D000               	goto	l1071
 29077  00A1A8                     l1071:
 29078  00A1A8  B2A6               	btfsc	4006,1,c	;volatile
 29079  00A1AA  D7FE               	goto	l1071
 29080                           
 29081                           ;EEPROM.c: 118: EECON1bits.WREN =0;
 29082  00A1AC  94A6               	bcf	4006,2,c	;volatile
 29083                           
 29084                           ;EEPROM.c: 119: if(GIEstatus)
 29085  00A1AE  0100               	movlb	0	; () banked
 29086  00A1B0  5163               	movf	WriteEEPROM_1Byte@GIEstatus& (0+255),w,b
 29087  00A1B2  0100               	movlb	0	; () banked
 29088  00A1B4  B4D8               	btfsc	status,2,c
 29089  00A1B6  D002               	goto	l9282
 29090                           
 29091                           ; BSR set to: 0
 29092                           ;EEPROM.c: 120: {
 29093                           ;EEPROM.c: 121: INTCONbits.GIE = 1;
 29094  00A1B8  8EF2               	bsf	intcon,7,c	;volatile
 29095  00A1BA  D000               	goto	l9282
 29096  00A1BC                     l9282:
 29097                           
 29098                           ; BSR set to: 0
 29099                           ;EEPROM.c: 122: }
 29100                           ;EEPROM.c: 123: if(PEIEstatus)
 29101  00A1BC  0100               	movlb	0	; () banked
 29102  00A1BE  5164               	movf	WriteEEPROM_1Byte@PEIEstatus& (0+255),w,b
 29103  00A1C0  0100               	movlb	0	; () banked
 29104  00A1C2  B4D8               	btfsc	status,2,c
 29105  00A1C4  0012               	return	
 29106                           
 29107                           ; BSR set to: 0
 29108                           ;EEPROM.c: 124: {
 29109                           ;EEPROM.c: 125: INTCONbits.PEIE = 1;
 29110  00A1C6  8CF2               	bsf	intcon,6,c	;volatile
 29111  00A1C8  0012               	return	
 29112                           
 29113                           ; BSR set to: 0
 29114                           
 29115                           ; BSR set to: 0
 29116  00A1CA  0012               	return		;funcret
 29117  00A1CC                     __end_of_WriteEEPROM_1Byte:
 29118                           	opt stack 0
 29119                           tblptru	equ	0xFF8
 29120                           tblptrh	equ	0xFF7
 29121                           tblptrl	equ	0xFF6
 29122                           tablat	equ	0xFF5
 29123                           prodh	equ	0xFF4
 29124                           prodl	equ	0xFF3
 29125                           intcon	equ	0xFF2
 29126                           intcon2	equ	0xFF1
 29127                           indf0	equ	0xFEF
 29128                           postinc0	equ	0xFEE
 29129                           plusw0	equ	0xFEB
 29130                           fsr0h	equ	0xFEA
 29131                           fsr0l	equ	0xFE9
 29132                           wreg	equ	0xFE8
 29133                           indf1	equ	0xFE7
 29134                           postdec1	equ	0xFE5
 29135                           fsr1h	equ	0xFE2
 29136                           fsr1l	equ	0xFE1
 29137                           indf2	equ	0xFDF
 29138                           postinc2	equ	0xFDE
 29139                           postdec2	equ	0xFDD
 29140                           plusw2	equ	0xFDB
 29141                           fsr2h	equ	0xFDA
 29142                           fsr2l	equ	0xFD9
 29143                           status	equ	0xFD8
 29144                           
 29145 ;; *************** function _EEPROM_UNLOCK *****************
 29146 ;; Defined at:
 29147 ;;		line 87 in file "EEPROM.c"
 29148 ;; Parameters:    Size  Location     Type
 29149 ;;		None
 29150 ;; Auto vars:     Size  Location     Type
 29151 ;;		None
 29152 ;; Return value:  Size  Location     Type
 29153 ;;		None               void
 29154 ;; Registers used:
 29155 ;;		wreg, status,2
 29156 ;; Tracked objects:
 29157 ;;		On entry : 0/0
 29158 ;;		On exit  : 0/0
 29159 ;;		Unchanged: 0/0
 29160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29165 ;;Total ram usage:        0 bytes
 29166 ;; Hardware stack levels used:    1
 29167 ;; Hardware stack levels required when called:    5
 29168 ;; This function calls:
 29169 ;;		Nothing
 29170 ;; This function is called by:
 29171 ;;		_WriteEEPROM_1Byte
 29172 ;; This function uses a non-reentrant model
 29173 ;;
 29174                           
 29175                           	psect	text66
 29176  00A8E0                     __ptext66:
 29177                           	opt stack 0
 29178  00A8E0                     _EEPROM_UNLOCK:
 29179                           	opt stack 20
 29180                           
 29181                           ;EEPROM.c: 89: EECON2 = 0x55;
 29182                           
 29183                           ; BSR set to: 0
 29184                           ;incstack = 0
 29185  00A8E0  0E55               	movlw	85
 29186  00A8E2  6EA7               	movwf	4007,c	;volatile
 29187                           
 29188                           ;EEPROM.c: 90: EECON2 = 0xAA;
 29189  00A8E4  0EAA               	movlw	170
 29190  00A8E6  6EA7               	movwf	4007,c	;volatile
 29191                           
 29192                           ;EEPROM.c: 91: EECON1bits.WR =1;
 29193  00A8E8  82A6               	bsf	4006,1,c	;volatile
 29194                           
 29195                           ;EEPROM.c: 92: while(EECON1bits.WR);
 29196  00A8EA  D000               	goto	l1065
 29197  00A8EC                     l1065:
 29198  00A8EC  B2A6               	btfsc	4006,1,c	;volatile
 29199  00A8EE  D7FE               	goto	l1065
 29200                           
 29201                           ;EEPROM.c: 93: __nop();
 29202  00A8F0  F000               	nop	
 29203                           
 29204                           ;EEPROM.c: 94: __nop();
 29205  00A8F2  F000               	nop	
 29206  00A8F4  0012               	return		;funcret
 29207  00A8F6                     __end_of_EEPROM_UNLOCK:
 29208                           	opt stack 0
 29209                           tblptru	equ	0xFF8
 29210                           tblptrh	equ	0xFF7
 29211                           tblptrl	equ	0xFF6
 29212                           tablat	equ	0xFF5
 29213                           prodh	equ	0xFF4
 29214                           prodl	equ	0xFF3
 29215                           intcon	equ	0xFF2
 29216                           intcon2	equ	0xFF1
 29217                           indf0	equ	0xFEF
 29218                           postinc0	equ	0xFEE
 29219                           plusw0	equ	0xFEB
 29220                           fsr0h	equ	0xFEA
 29221                           fsr0l	equ	0xFE9
 29222                           wreg	equ	0xFE8
 29223                           indf1	equ	0xFE7
 29224                           postdec1	equ	0xFE5
 29225                           fsr1h	equ	0xFE2
 29226                           fsr1l	equ	0xFE1
 29227                           indf2	equ	0xFDF
 29228                           postinc2	equ	0xFDE
 29229                           postdec2	equ	0xFDD
 29230                           plusw2	equ	0xFDB
 29231                           fsr2h	equ	0xFDA
 29232                           fsr2l	equ	0xFD9
 29233                           status	equ	0xFD8
 29234                           
 29235 ;; *************** function _GetMemoryChar *****************
 29236 ;; Defined at:
 29237 ;;		line 487 in file "EEPROM.c"
 29238 ;; Parameters:    Size  Location     Type
 29239 ;;  AddressFirst    1    wreg     unsigned char 
 29240 ;; Auto vars:     Size  Location     Type
 29241 ;;  AddressFirst    1    8[BANK0 ] unsigned char 
 29242 ;;  H               1    9[BANK0 ] unsigned char 
 29243 ;; Return value:  Size  Location     Type
 29244 ;;                  4    4[BANK0 ] unsigned long 
 29245 ;; Registers used:
 29246 ;;		wreg, status,2, status,0, cstack
 29247 ;; Tracked objects:
 29248 ;;		On entry : 0/0
 29249 ;;		On exit  : 0/0
 29250 ;;		Unchanged: 0/0
 29251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29252 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29253 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29255 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29256 ;;Total ram usage:        6 bytes
 29257 ;; Hardware stack levels used:    1
 29258 ;; Hardware stack levels required when called:    6
 29259 ;; This function calls:
 29260 ;;		_ReadEEPROM_1Byte
 29261 ;; This function is called by:
 29262 ;;		_GetEEPROM1
 29263 ;;		_GetEEPROM2
 29264 ;;		_SetMemoryChar
 29265 ;; This function uses a non-reentrant model
 29266 ;;
 29267                           
 29268                           	psect	text67
 29269  00A79C                     __ptext67:
 29270                           	opt stack 0
 29271  00A79C                     _GetMemoryChar:
 29272                           	opt stack 20
 29273                           
 29274                           ;incstack = 0
 29275                           ;GetMemoryChar@AddressFirst stored from wreg
 29276  00A79C  0100               	movlb	0	; () banked
 29277  00A79E  6F68               	movwf	GetMemoryChar@AddressFirst& (0+255),b
 29278                           
 29279                           ; BSR set to: 0
 29280                           ;EEPROM.c: 489: unsigned char H;
 29281                           ;EEPROM.c: 491: H = ReadEEPROM_1Byte(AddressFirst);
 29282  00A7A0  C068  F060         	movff	GetMemoryChar@AddressFirst,ReadEEPROM_1Byte@address
 29283  00A7A4  0100               	movlb	0	; () banked
 29284  00A7A6  6B61               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 29285  00A7A8  EC13  F051         	call	_ReadEEPROM_1Byte	;wreg free
 29286  00A7AC  0100               	movlb	0	; () banked
 29287  00A7AE  5160               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 29288  00A7B0  0100               	movlb	0	; () banked
 29289  00A7B2  6F69               	movwf	GetMemoryChar@H& (0+255),b
 29290                           
 29291                           ; BSR set to: 0
 29292                           ;EEPROM.c: 493: return H;
 29293  00A7B4  0100               	movlb	0	; () banked
 29294  00A7B6  5169               	movf	GetMemoryChar@H& (0+255),w,b
 29295  00A7B8  0100               	movlb	0	; () banked
 29296  00A7BA  6F64               	movwf	?_GetMemoryChar& (0+255),b
 29297  00A7BC  6B65               	clrf	(?_GetMemoryChar+1)& (0+255),b
 29298  00A7BE  6B66               	clrf	(?_GetMemoryChar+2)& (0+255),b
 29299  00A7C0  6B67               	clrf	(?_GetMemoryChar+3)& (0+255),b
 29300  00A7C2  0012               	return	
 29301                           
 29302                           ; BSR set to: 0
 29303                           
 29304                           ; BSR set to: 0
 29305  00A7C4  0012               	return		;funcret
 29306  00A7C6                     __end_of_GetMemoryChar:
 29307                           	opt stack 0
 29308                           tblptru	equ	0xFF8
 29309                           tblptrh	equ	0xFF7
 29310                           tblptrl	equ	0xFF6
 29311                           tablat	equ	0xFF5
 29312                           prodh	equ	0xFF4
 29313                           prodl	equ	0xFF3
 29314                           intcon	equ	0xFF2
 29315                           intcon2	equ	0xFF1
 29316                           indf0	equ	0xFEF
 29317                           postinc0	equ	0xFEE
 29318                           plusw0	equ	0xFEB
 29319                           fsr0h	equ	0xFEA
 29320                           fsr0l	equ	0xFE9
 29321                           wreg	equ	0xFE8
 29322                           indf1	equ	0xFE7
 29323                           postdec1	equ	0xFE5
 29324                           fsr1h	equ	0xFE2
 29325                           fsr1l	equ	0xFE1
 29326                           indf2	equ	0xFDF
 29327                           postinc2	equ	0xFDE
 29328                           postdec2	equ	0xFDD
 29329                           plusw2	equ	0xFDB
 29330                           fsr2h	equ	0xFDA
 29331                           fsr2l	equ	0xFD9
 29332                           status	equ	0xFD8
 29333                           
 29334 ;; *************** function _ReadEEPROM_1Byte *****************
 29335 ;; Defined at:
 29336 ;;		line 55 in file "EEPROM.c"
 29337 ;; Parameters:    Size  Location     Type
 29338 ;;  address         2    0[BANK0 ] unsigned int 
 29339 ;; Auto vars:     Size  Location     Type
 29340 ;;  PEIEstatus      1    3[BANK0 ] unsigned char 
 29341 ;;  GIEstatus       1    2[BANK0 ] unsigned char 
 29342 ;; Return value:  Size  Location     Type
 29343 ;;                  2    0[BANK0 ] unsigned int 
 29344 ;; Registers used:
 29345 ;;		wreg, status,2, status,0
 29346 ;; Tracked objects:
 29347 ;;		On entry : 0/0
 29348 ;;		On exit  : 0/0
 29349 ;;		Unchanged: 0/0
 29350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29351 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29352 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29354 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29355 ;;Total ram usage:        4 bytes
 29356 ;; Hardware stack levels used:    1
 29357 ;; Hardware stack levels required when called:    5
 29358 ;; This function calls:
 29359 ;;		Nothing
 29360 ;; This function is called by:
 29361 ;;		_GetMemoryLong
 29362 ;;		_GetMemoryChar
 29363 ;;		_GetMemoryInt
 29364 ;; This function uses a non-reentrant model
 29365 ;;
 29366                           
 29367                           	psect	text68
 29368  00A226                     __ptext68:
 29369                           	opt stack 0
 29370  00A226                     _ReadEEPROM_1Byte:
 29371                           	opt stack 20
 29372                           
 29373                           ;EEPROM.c: 57: unsigned char GIEstatus = INTCONbits.GIE;
 29374                           
 29375                           ; BSR set to: 0
 29376                           ;incstack = 0
 29377  00A226  0E00               	movlw	0
 29378  00A228  BEF2               	btfsc	intcon,7,c	;volatile
 29379  00A22A  0E01               	movlw	1
 29380  00A22C  0100               	movlb	0	; () banked
 29381  00A22E  6F62               	movwf	ReadEEPROM_1Byte@GIEstatus& (0+255),b
 29382                           
 29383                           ;EEPROM.c: 58: unsigned char PEIEstatus = INTCONbits.PEIE;
 29384  00A230  0E00               	movlw	0
 29385  00A232  BCF2               	btfsc	intcon,6,c	;volatile
 29386  00A234  0E01               	movlw	1
 29387  00A236  0100               	movlb	0	; () banked
 29388  00A238  6F63               	movwf	ReadEEPROM_1Byte@PEIEstatus& (0+255),b
 29389                           
 29390                           ; BSR set to: 0
 29391                           ;EEPROM.c: 59: INTCONbits.GIE = 0;
 29392  00A23A  9EF2               	bcf	intcon,7,c	;volatile
 29393                           
 29394                           ; BSR set to: 0
 29395                           ;EEPROM.c: 60: INTCONbits.PEIE = 0;
 29396  00A23C  9CF2               	bcf	intcon,6,c	;volatile
 29397                           
 29398                           ; BSR set to: 0
 29399                           ;EEPROM.c: 61: EECON1bits.EEPGD = 0;
 29400  00A23E  9EA6               	bcf	4006,7,c	;volatile
 29401                           
 29402                           ; BSR set to: 0
 29403                           ;EEPROM.c: 62: EECON1bits.CFGS = 0;
 29404  00A240  9CA6               	bcf	4006,6,c	;volatile
 29405                           
 29406                           ; BSR set to: 0
 29407                           ;EEPROM.c: 63: EEADRH = (unsigned char)((address & 0x300) >> 8);
 29408  00A242  0100               	movlb	0	; () banked
 29409  00A244  5161               	movf	(ReadEEPROM_1Byte@address+1)& (0+255),w,b
 29410  00A246  0B03               	andlw	3
 29411  00A248  6EAA               	movwf	4010,c	;volatile
 29412                           
 29413                           ; BSR set to: 0
 29414                           ;EEPROM.c: 64: EEADR = (unsigned char)(address & 0xFF);
 29415  00A24A  C060  FFA9         	movff	ReadEEPROM_1Byte@address,4009	;volatile
 29416                           
 29417                           ; BSR set to: 0
 29418                           ;EEPROM.c: 65: INTCONbits.GIE =0;
 29419  00A24E  9EF2               	bcf	intcon,7,c	;volatile
 29420                           
 29421                           ; BSR set to: 0
 29422                           ;EEPROM.c: 66: EECON1bits.RD = 1;
 29423  00A250  80A6               	bsf	4006,0,c	;volatile
 29424                           
 29425                           ;EEPROM.c: 67: while(EECON1bits.RD);
 29426  00A252  D000               	goto	l1057
 29427  00A254                     l1057:
 29428  00A254  B0A6               	btfsc	4006,0,c	;volatile
 29429  00A256  D7FE               	goto	l1057
 29430                           
 29431                           ;EEPROM.c: 68: __nop();
 29432  00A258  F000               	nop	
 29433                           
 29434                           ;EEPROM.c: 69: __nop();
 29435  00A25A  F000               	nop	
 29436                           
 29437                           ;EEPROM.c: 70: if(GIEstatus)
 29438  00A25C  0100               	movlb	0	; () banked
 29439  00A25E  5162               	movf	ReadEEPROM_1Byte@GIEstatus& (0+255),w,b
 29440  00A260  0100               	movlb	0	; () banked
 29441  00A262  B4D8               	btfsc	status,2,c
 29442  00A264  D002               	goto	l9020
 29443                           
 29444                           ; BSR set to: 0
 29445                           ;EEPROM.c: 71: {
 29446                           ;EEPROM.c: 72: INTCONbits.GIE = 1;
 29447  00A266  8EF2               	bsf	intcon,7,c	;volatile
 29448  00A268  D000               	goto	l9020
 29449  00A26A                     l9020:
 29450                           
 29451                           ; BSR set to: 0
 29452                           ;EEPROM.c: 73: }
 29453                           ;EEPROM.c: 74: if(PEIEstatus)
 29454  00A26A  0100               	movlb	0	; () banked
 29455  00A26C  5163               	movf	ReadEEPROM_1Byte@PEIEstatus& (0+255),w,b
 29456  00A26E  0100               	movlb	0	; () banked
 29457  00A270  A4D8               	btfss	status,2,c
 29458                           
 29459                           ; BSR set to: 0
 29460                           ;EEPROM.c: 75: {
 29461                           ;EEPROM.c: 76: INTCONbits.PEIE = 1;
 29462  00A272  8CF2               	bsf	intcon,6,c	;volatile
 29463                           
 29464                           ; BSR set to: 0
 29465                           ;EEPROM.c: 77: }
 29466                           ;EEPROM.c: 78: return (EEDATA);
 29467  00A274  CFA8 F060          	movff	4008,?_ReadEEPROM_1Byte	;volatile
 29468  00A278  0100               	movlb	0	; () banked
 29469  00A27A  6B61               	clrf	(?_ReadEEPROM_1Byte+1)& (0+255),b
 29470                           
 29471                           ; BSR set to: 0
 29472  00A27C  0012               	return		;funcret
 29473  00A27E                     __end_of_ReadEEPROM_1Byte:
 29474                           	opt stack 0
 29475                           tblptru	equ	0xFF8
 29476                           tblptrh	equ	0xFF7
 29477                           tblptrl	equ	0xFF6
 29478                           tablat	equ	0xFF5
 29479                           prodh	equ	0xFF4
 29480                           prodl	equ	0xFF3
 29481                           intcon	equ	0xFF2
 29482                           intcon2	equ	0xFF1
 29483                           indf0	equ	0xFEF
 29484                           postinc0	equ	0xFEE
 29485                           plusw0	equ	0xFEB
 29486                           fsr0h	equ	0xFEA
 29487                           fsr0l	equ	0xFE9
 29488                           wreg	equ	0xFE8
 29489                           indf1	equ	0xFE7
 29490                           postdec1	equ	0xFE5
 29491                           fsr1h	equ	0xFE2
 29492                           fsr1l	equ	0xFE1
 29493                           indf2	equ	0xFDF
 29494                           postinc2	equ	0xFDE
 29495                           postdec2	equ	0xFDD
 29496                           plusw2	equ	0xFDB
 29497                           fsr2h	equ	0xFDA
 29498                           fsr2l	equ	0xFD9
 29499                           status	equ	0xFD8
 29500                           
 29501 ;; *************** function _BluetoothInitialSetup *****************
 29502 ;; Defined at:
 29503 ;;		line 185 in file "Bluetooth.c"
 29504 ;; Parameters:    Size  Location     Type
 29505 ;;  Default         1    wreg     unsigned char 
 29506 ;; Auto vars:     Size  Location     Type
 29507 ;;  Default         1  183[BANK1 ] unsigned char 
 29508 ;;  buf            50  132[BANK1 ] unsigned char [50]
 29509 ;;  BluetoothVer   30   81[BANK1 ] unsigned char [30]
 29510 ;;  BluetoothVer   30   51[BANK1 ] unsigned char [30]
 29511 ;;  BroadcastTEM   21  111[BANK1 ] unsigned char [21]
 29512 ;;  i               1  186[BANK1 ] unsigned char 
 29513 ;;  ok              1  185[BANK1 ] unsigned char 
 29514 ;;  j               1  184[BANK1 ] unsigned char 
 29515 ;;  first           1  182[BANK1 ] unsigned char 
 29516 ;; Return value:  Size  Location     Type
 29517 ;;                  1    wreg      unsigned char 
 29518 ;; Registers used:
 29519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29520 ;; Tracked objects:
 29521 ;;		On entry : 0/0
 29522 ;;		On exit  : 0/0
 29523 ;;		Unchanged: 0/0
 29524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29526 ;;      Locals:         0       0     136       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29527 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29528 ;;      Totals:         0       1     136       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29529 ;;Total ram usage:      137 bytes
 29530 ;; Hardware stack levels used:    1
 29531 ;; Hardware stack levels required when called:   10
 29532 ;; This function calls:
 29533 ;;		_BufferCopy
 29534 ;;		_ClearUSART
 29535 ;;		_EnterCommandMode
 29536 ;;		_StringContains
 29537 ;;		_StringContainsCaseInsensitive
 29538 ;;		_UARTstring
 29539 ;;		_UARTstring_CONST
 29540 ;;		_cleanBuffer
 29541 ;;		_delayUS
 29542 ;;		_sprintf
 29543 ;; This function is called by:
 29544 ;;		_InitBluetooth
 29545 ;;		_UseBluetooth
 29546 ;; This function uses a non-reentrant model
 29547 ;;
 29548                           
 29549                           	psect	text69
 29550  004446                     __ptext69:
 29551                           	opt stack 0
 29552  004446                     _BluetoothInitialSetup:
 29553                           	opt stack 19
 29554                           
 29555                           ; BSR set to: 0
 29556                           ;incstack = 0
 29557                           ;BluetoothInitialSetup@Default stored from wreg
 29558  004446  0101               	movlb	1	; () banked
 29559  004448  6FB7               	movwf	BluetoothInitialSetup@Default& (0+255),b
 29560                           
 29561                           ; BSR set to: 1
 29562                           ;Bluetooth.c: 187: unsigned char buf[50];
 29563                           ;Bluetooth.c: 188: unsigned char ok = 1;
 29564  00444A  0E01               	movlw	1
 29565  00444C  0101               	movlb	1	; () banked
 29566  00444E  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 29567                           
 29568                           ;Bluetooth.c: 189: unsigned char BluetoothVersionLine1[30];
 29569                           ;Bluetooth.c: 190: unsigned char BluetoothVersionLine2[30];
 29570                           ;Bluetooth.c: 191: unsigned char i = 0;
 29571  004450  0E00               	movlw	0
 29572  004452  0101               	movlb	1	; () banked
 29573  004454  6FBA               	movwf	BluetoothInitialSetup@i& (0+255),b
 29574                           
 29575                           ;Bluetooth.c: 192: unsigned char j = 0;
 29576  004456  0E00               	movlw	0
 29577  004458  0101               	movlb	1	; () banked
 29578  00445A  6FB8               	movwf	BluetoothInitialSetup@j& (0+255),b
 29579                           
 29580                           ;Bluetooth.c: 193: unsigned char first = 1;
 29581  00445C  0E01               	movlw	1
 29582  00445E  0101               	movlb	1	; () banked
 29583  004460  6FB6               	movwf	BluetoothInitialSetup@first& (0+255),b
 29584                           
 29585                           ; BSR set to: 1
 29586                           ;Bluetooth.c: 194: unsigned char BroadcastTEMP[21];
 29587                           ;Bluetooth.c: 196: cleanBuffer(buf,50);
 29588  004462  0E84               	movlw	low BluetoothInitialSetup@buf
 29589  004464  0100               	movlb	0	; () banked
 29590  004466  6F60               	movwf	cleanBuffer@data& (0+255),b
 29591  004468  0E01               	movlw	high BluetoothInitialSetup@buf
 29592  00446A  0100               	movlb	0	; () banked
 29593  00446C  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 29594  00446E  0E00               	movlw	0
 29595  004470  0100               	movlb	0	; () banked
 29596  004472  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 29597  004474  0E32               	movlw	50
 29598  004476  6F62               	movwf	cleanBuffer@count& (0+255),b
 29599  004478  ECE6  F050         	call	_cleanBuffer	;wreg free
 29600                           
 29601                           ;Bluetooth.c: 197: cleanBuffer(BroadcastTEMP,21);
 29602  00447C  0E6F               	movlw	low BluetoothInitialSetup@BroadcastTEMP
 29603  00447E  0100               	movlb	0	; () banked
 29604  004480  6F60               	movwf	cleanBuffer@data& (0+255),b
 29605  004482  0E01               	movlw	high BluetoothInitialSetup@BroadcastTEMP
 29606  004484  0100               	movlb	0	; () banked
 29607  004486  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 29608  004488  0E00               	movlw	0
 29609  00448A  0100               	movlb	0	; () banked
 29610  00448C  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 29611  00448E  0E15               	movlw	21
 29612  004490  6F62               	movwf	cleanBuffer@count& (0+255),b
 29613  004492  ECE6  F050         	call	_cleanBuffer	;wreg free
 29614                           
 29615                           ;Bluetooth.c: 198: cleanBuffer(BluetoothVersionLine1,30);
 29616  004496  0E33               	movlw	low BluetoothInitialSetup@BluetoothVersionLine1
 29617  004498  0100               	movlb	0	; () banked
 29618  00449A  6F60               	movwf	cleanBuffer@data& (0+255),b
 29619  00449C  0E01               	movlw	high BluetoothInitialSetup@BluetoothVersionLine1
 29620  00449E  0100               	movlb	0	; () banked
 29621  0044A0  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 29622  0044A2  0E00               	movlw	0
 29623  0044A4  0100               	movlb	0	; () banked
 29624  0044A6  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 29625  0044A8  0E1E               	movlw	30
 29626  0044AA  6F62               	movwf	cleanBuffer@count& (0+255),b
 29627  0044AC  ECE6  F050         	call	_cleanBuffer	;wreg free
 29628                           
 29629                           ;Bluetooth.c: 199: cleanBuffer(BluetoothVersionLine2,30);
 29630  0044B0  0E51               	movlw	low BluetoothInitialSetup@BluetoothVersionLine2
 29631  0044B2  0100               	movlb	0	; () banked
 29632  0044B4  6F60               	movwf	cleanBuffer@data& (0+255),b
 29633  0044B6  0E01               	movlw	high BluetoothInitialSetup@BluetoothVersionLine2
 29634  0044B8  0100               	movlb	0	; () banked
 29635  0044BA  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 29636  0044BC  0E00               	movlw	0
 29637  0044BE  0100               	movlb	0	; () banked
 29638  0044C0  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 29639  0044C2  0E1E               	movlw	30
 29640  0044C4  6F62               	movwf	cleanBuffer@count& (0+255),b
 29641  0044C6  ECE6  F050         	call	_cleanBuffer	;wreg free
 29642                           
 29643                           ;Bluetooth.c: 201: if(!EnterCommandMode())
 29644  0044CA  EC13  F040         	call	_EnterCommandMode	;wreg free
 29645  0044CE  0900               	iorlw	0
 29646  0044D0  A4D8               	btfss	status,2,c
 29647  0044D2  D002               	goto	l10870
 29648                           
 29649                           ;Bluetooth.c: 202: {
 29650                           ;Bluetooth.c: 203: return 0;
 29651  0044D4  0E00               	movlw	0
 29652  0044D6  0012               	return	
 29653  0044D8                     l10870:
 29654                           
 29655                           ;Bluetooth.c: 204: }
 29656                           ;Bluetooth.c: 206: cleanBuffer(CommandString,CommandStringPos);
 29657  0044D8  0E14               	movlw	low _CommandString
 29658  0044DA  0100               	movlb	0	; () banked
 29659  0044DC  6F60               	movwf	cleanBuffer@data& (0+255),b
 29660  0044DE  0E04               	movlw	high _CommandString
 29661  0044E0  0100               	movlb	0	; () banked
 29662  0044E2  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 29663  0044E4  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 29664  0044E8  0100               	movlb	0	; () banked
 29665  0044EA  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 29666  0044EC  ECE6  F050         	call	_cleanBuffer	;wreg free
 29667                           
 29668                           ;Bluetooth.c: 207: CommandStringPos = 0;
 29669  0044F0  0E00               	movlw	0
 29670  0044F2  6E3E               	movwf	_CommandStringPos,c	;volatile
 29671                           
 29672                           ;Bluetooth.c: 208: ClearUSART();
 29673  0044F4  ECC2  F054         	call	_ClearUSART	;wreg free
 29674                           
 29675                           ;Bluetooth.c: 209: PIR1bits.RCIF = 0;
 29676  0044F8  9A9E               	bcf	3998,5,c	;volatile
 29677                           
 29678                           ;Bluetooth.c: 210: PIE1bits.RCIE = 1;
 29679  0044FA  8A9D               	bsf	3997,5,c	;volatile
 29680                           
 29681                           ;Bluetooth.c: 211: UARTstring_CONST("V\r");
 29682  0044FC  0EFB               	movlw	low STR_8
 29683  0044FE  0100               	movlb	0	; () banked
 29684  004500  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 29685  004502  0EFF               	movlw	high STR_8
 29686  004504  0100               	movlb	0	; () banked
 29687  004506  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 29688  004508  EC42  F053         	call	_UARTstring_CONST	;wreg free
 29689                           
 29690                           ;Bluetooth.c: 212: delayUS(50000);
 29691  00450C  0E50               	movlw	80
 29692  00450E  0100               	movlb	0	; () banked
 29693  004510  6F60               	movwf	delayUS@US& (0+255),b
 29694  004512  0EC3               	movlw	195
 29695  004514  6F61               	movwf	(delayUS@US+1)& (0+255),b
 29696  004516  0E00               	movlw	0
 29697  004518  6F62               	movwf	(delayUS@US+2)& (0+255),b
 29698  00451A  0E00               	movlw	0
 29699  00451C  6F63               	movwf	(delayUS@US+3)& (0+255),b
 29700  00451E  EC3F  F051         	call	_delayUS	;wreg free
 29701                           
 29702                           ;Bluetooth.c: 213: PIE1bits.RCIE = 0;
 29703  004522  9A9D               	bcf	3997,5,c	;volatile
 29704                           
 29705                           ;Bluetooth.c: 214: for(i=0; i < (30 * 2); i++)
 29706  004524  0E00               	movlw	0
 29707  004526  0101               	movlb	1	; () banked
 29708  004528  6FBA               	movwf	BluetoothInitialSetup@i& (0+255),b
 29709  00452A                     l10888:
 29710                           
 29711                           ; BSR set to: 1
 29712  00452A  0E3B               	movlw	59
 29713  00452C  0101               	movlb	1	; () banked
 29714  00452E  65BA               	cpfsgt	BluetoothInitialSetup@i& (0+255),b
 29715  004530  D001               	goto	l10892
 29716                           
 29717                           ; BSR set to: 1
 29718  004532  D07A               	goto	l10922
 29719  004534                     l10892:
 29720                           
 29721                           ; BSR set to: 1
 29722                           ;Bluetooth.c: 215: {
 29723                           ;Bluetooth.c: 216: if(first == 1)
 29724  004534  0101               	movlb	1	; () banked
 29725  004536  05B6               	decf	BluetoothInitialSetup@first& (0+255),w,b
 29726  004538  A4D8               	btfss	status,2,c
 29727  00453A  D037               	goto	l10904
 29728                           
 29729                           ; BSR set to: 1
 29730                           ;Bluetooth.c: 217: {
 29731                           ;Bluetooth.c: 218: if(CommandString[i] == '\n' || CommandString[i] == '\r')
 29732  00453C  0101               	movlb	1	; () banked
 29733  00453E  51BA               	movf	BluetoothInitialSetup@i& (0+255),w,b
 29734  004540  0D01               	mullw	1
 29735  004542  0E14               	movlw	low _CommandString
 29736  004544  24F3               	addwf	prodl,w,c
 29737  004546  6ED9               	movwf	fsr2l,c
 29738  004548  0E04               	movlw	high _CommandString
 29739  00454A  20F4               	addwfc	prodh,w,c
 29740  00454C  6EDA               	movwf	fsr2h,c
 29741  00454E  0E0A               	movlw	10
 29742  004550  18DE               	xorwf	postinc2,w,c
 29743  004552  B4D8               	btfsc	status,2,c
 29744  004554  D00D               	goto	l10898
 29745                           
 29746                           ; BSR set to: 1
 29747  004556  0101               	movlb	1	; () banked
 29748  004558  51BA               	movf	BluetoothInitialSetup@i& (0+255),w,b
 29749  00455A  0D01               	mullw	1
 29750  00455C  0E14               	movlw	low _CommandString
 29751  00455E  24F3               	addwf	prodl,w,c
 29752  004560  6ED9               	movwf	fsr2l,c
 29753  004562  0E04               	movlw	high _CommandString
 29754  004564  20F4               	addwfc	prodh,w,c
 29755  004566  6EDA               	movwf	fsr2h,c
 29756  004568  0E0D               	movlw	13
 29757  00456A  18DE               	xorwf	postinc2,w,c
 29758  00456C  A4D8               	btfss	status,2,c
 29759  00456E  D004               	goto	l10900
 29760  004570                     l10898:
 29761                           
 29762                           ; BSR set to: 1
 29763                           ;Bluetooth.c: 219: {
 29764                           ;Bluetooth.c: 220: first = 0;
 29765  004570  0E00               	movlw	0
 29766  004572  0101               	movlb	1	; () banked
 29767  004574  6FB6               	movwf	BluetoothInitialSetup@first& (0+255),b
 29768                           
 29769                           ;Bluetooth.c: 221: }
 29770  004576  D055               	goto	l10918
 29771  004578                     l10900:
 29772                           
 29773                           ; BSR set to: 1
 29774                           ;Bluetooth.c: 222: else
 29775                           ;Bluetooth.c: 223: {
 29776                           ;Bluetooth.c: 224: if( i < (30 - 1))
 29777  004578  0E1D               	movlw	29
 29778  00457A  0101               	movlb	1	; () banked
 29779  00457C  61BA               	cpfslt	BluetoothInitialSetup@i& (0+255),b
 29780  00457E  D051               	goto	l10918
 29781                           
 29782                           ; BSR set to: 1
 29783                           ;Bluetooth.c: 225: {
 29784                           ;Bluetooth.c: 226: BluetoothVersionLine1[i] = CommandString[i];
 29785  004580  0101               	movlb	1	; () banked
 29786  004582  51BA               	movf	BluetoothInitialSetup@i& (0+255),w,b
 29787  004584  0D01               	mullw	1
 29788  004586  0E14               	movlw	low _CommandString
 29789  004588  24F3               	addwf	prodl,w,c
 29790  00458A  6ED9               	movwf	fsr2l,c
 29791  00458C  0E04               	movlw	high _CommandString
 29792  00458E  20F4               	addwfc	prodh,w,c
 29793  004590  6EDA               	movwf	fsr2h,c
 29794  004592  0101               	movlb	1	; () banked
 29795  004594  51BA               	movf	BluetoothInitialSetup@i& (0+255),w,b
 29796  004596  0D01               	mullw	1
 29797  004598  0E33               	movlw	low BluetoothInitialSetup@BluetoothVersionLine1
 29798  00459A  24F3               	addwf	prodl,w,c
 29799  00459C  6EE1               	movwf	fsr1l,c
 29800  00459E  0E01               	movlw	high BluetoothInitialSetup@BluetoothVersionLine1
 29801  0045A0  20F4               	addwfc	prodh,w,c
 29802  0045A2  6EE2               	movwf	fsr1h,c
 29803  0045A4  CFDF FFE7          	movff	indf2,indf1
 29804                           
 29805                           ; BSR set to: 1
 29806                           ;Bluetooth.c: 227: }
 29807                           ;Bluetooth.c: 228: }
 29808                           ;Bluetooth.c: 229: }
 29809                           
 29810                           ; BSR set to: 1
 29811  0045A8  D03C               	goto	l10918
 29812  0045AA                     l10904:
 29813                           
 29814                           ; BSR set to: 1
 29815                           ;Bluetooth.c: 230: else
 29816                           ;Bluetooth.c: 231: {
 29817                           ;Bluetooth.c: 232: if(CommandString[i] != '\n' && CommandString[i] != '\r')
 29818  0045AA  0101               	movlb	1	; () banked
 29819  0045AC  51BA               	movf	BluetoothInitialSetup@i& (0+255),w,b
 29820  0045AE  0D01               	mullw	1
 29821  0045B0  0E14               	movlw	low _CommandString
 29822  0045B2  24F3               	addwf	prodl,w,c
 29823  0045B4  6ED9               	movwf	fsr2l,c
 29824  0045B6  0E04               	movlw	high _CommandString
 29825  0045B8  20F4               	addwfc	prodh,w,c
 29826  0045BA  6EDA               	movwf	fsr2h,c
 29827  0045BC  0E0A               	movlw	10
 29828  0045BE  18DE               	xorwf	postinc2,w,c
 29829  0045C0  B4D8               	btfsc	status,2,c
 29830  0045C2  D029               	goto	l10914
 29831                           
 29832                           ; BSR set to: 1
 29833  0045C4  0101               	movlb	1	; () banked
 29834  0045C6  51BA               	movf	BluetoothInitialSetup@i& (0+255),w,b
 29835  0045C8  0D01               	mullw	1
 29836  0045CA  0E14               	movlw	low _CommandString
 29837  0045CC  24F3               	addwf	prodl,w,c
 29838  0045CE  6ED9               	movwf	fsr2l,c
 29839  0045D0  0E04               	movlw	high _CommandString
 29840  0045D2  20F4               	addwfc	prodh,w,c
 29841  0045D4  6EDA               	movwf	fsr2h,c
 29842  0045D6  0E0D               	movlw	13
 29843  0045D8  18DE               	xorwf	postinc2,w,c
 29844  0045DA  B4D8               	btfsc	status,2,c
 29845  0045DC  D01C               	goto	l10914
 29846                           
 29847                           ; BSR set to: 1
 29848                           ;Bluetooth.c: 233: {
 29849                           ;Bluetooth.c: 234: if( j < (30 - 1))
 29850  0045DE  0E1D               	movlw	29
 29851  0045E0  0101               	movlb	1	; () banked
 29852  0045E2  61B8               	cpfslt	BluetoothInitialSetup@j& (0+255),b
 29853  0045E4  D015               	goto	l10912
 29854                           
 29855                           ; BSR set to: 1
 29856                           ;Bluetooth.c: 235: {
 29857                           ;Bluetooth.c: 236: BluetoothVersionLine2[j] = CommandString[i];
 29858  0045E6  0101               	movlb	1	; () banked
 29859  0045E8  51BA               	movf	BluetoothInitialSetup@i& (0+255),w,b
 29860  0045EA  0D01               	mullw	1
 29861  0045EC  0E14               	movlw	low _CommandString
 29862  0045EE  24F3               	addwf	prodl,w,c
 29863  0045F0  6ED9               	movwf	fsr2l,c
 29864  0045F2  0E04               	movlw	high _CommandString
 29865  0045F4  20F4               	addwfc	prodh,w,c
 29866  0045F6  6EDA               	movwf	fsr2h,c
 29867  0045F8  0101               	movlb	1	; () banked
 29868  0045FA  51B8               	movf	BluetoothInitialSetup@j& (0+255),w,b
 29869  0045FC  0D01               	mullw	1
 29870  0045FE  0E51               	movlw	low BluetoothInitialSetup@BluetoothVersionLine2
 29871  004600  24F3               	addwf	prodl,w,c
 29872  004602  6EE1               	movwf	fsr1l,c
 29873  004604  0E01               	movlw	high BluetoothInitialSetup@BluetoothVersionLine2
 29874  004606  20F4               	addwfc	prodh,w,c
 29875  004608  6EE2               	movwf	fsr1h,c
 29876  00460A  CFDF FFE7          	movff	indf2,indf1
 29877  00460E  D000               	goto	l10912
 29878  004610                     l10912:
 29879                           
 29880                           ; BSR set to: 1
 29881                           ;Bluetooth.c: 237: }
 29882                           ;Bluetooth.c: 238: j++;
 29883  004610  0101               	movlb	1	; () banked
 29884  004612  2BB8               	incf	BluetoothInitialSetup@j& (0+255),f,b
 29885                           
 29886                           ;Bluetooth.c: 239: }
 29887  004614  D006               	goto	l10918
 29888  004616                     l10914:
 29889                           
 29890                           ; BSR set to: 1
 29891                           ;Bluetooth.c: 240: else
 29892                           ;Bluetooth.c: 241: {
 29893                           ;Bluetooth.c: 242: if(j > 2)
 29894  004616  0E02               	movlw	2
 29895  004618  0101               	movlb	1	; () banked
 29896  00461A  65B8               	cpfsgt	BluetoothInitialSetup@j& (0+255),b
 29897  00461C  D002               	goto	l10918
 29898                           
 29899                           ; BSR set to: 1
 29900                           ;Bluetooth.c: 243: {
 29901                           ;Bluetooth.c: 245: break;
 29902  00461E  D004               	goto	l10922
 29903                           
 29904                           ; BSR set to: 1
 29905                           
 29906                           ; BSR set to: 1
 29907  004620  D000               	goto	l10918
 29908  004622                     l10918:
 29909                           
 29910                           ; BSR set to: 1
 29911  004622  0101               	movlb	1	; () banked
 29912  004624  2BBA               	incf	BluetoothInitialSetup@i& (0+255),f,b
 29913  004626  D781               	goto	l10888
 29914  004628                     l10922:
 29915                           
 29916                           ; BSR set to: 1
 29917                           ;Bluetooth.c: 246: }
 29918                           ;Bluetooth.c: 247: }
 29919                           ;Bluetooth.c: 248: }
 29920                           ;Bluetooth.c: 249: }
 29921                           ;Bluetooth.c: 251: if(BluetoothVersionLine1[0] == 0 || BluetoothVersionLine2[0] == 0)
 29922  004628  0101               	movlb	1	; () banked
 29923  00462A  5133               	movf	BluetoothInitialSetup@BluetoothVersionLine1& (0+255),w,b
 29924  00462C  0101               	movlb	1	; () banked
 29925  00462E  B4D8               	btfsc	status,2,c
 29926  004630  D005               	goto	l10926
 29927                           
 29928                           ; BSR set to: 1
 29929  004632  0101               	movlb	1	; () banked
 29930  004634  5151               	movf	BluetoothInitialSetup@BluetoothVersionLine2& (0+255),w,b
 29931  004636  0101               	movlb	1	; () banked
 29932  004638  A4D8               	btfss	status,2,c
 29933  00463A  D004               	goto	l10928
 29934  00463C                     l10926:
 29935                           
 29936                           ; BSR set to: 1
 29937                           ;Bluetooth.c: 252: {
 29938                           ;Bluetooth.c: 253: ok = 0;
 29939  00463C  0E00               	movlw	0
 29940  00463E  0101               	movlb	1	; () banked
 29941  004640  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 29942                           
 29943                           ;Bluetooth.c: 254: }
 29944  004642  D042               	goto	l2014
 29945  004644                     l10928:
 29946                           
 29947                           ; BSR set to: 1
 29948                           ;Bluetooth.c: 255: else
 29949                           ;Bluetooth.c: 256: {
 29950                           ;Bluetooth.c: 257: cleanBuffer(BluetoothFirmware1,30);
 29951  004644  0E00               	movlw	low _BluetoothFirmware1
 29952  004646  0100               	movlb	0	; () banked
 29953  004648  6F60               	movwf	cleanBuffer@data& (0+255),b
 29954  00464A  0E05               	movlw	high _BluetoothFirmware1
 29955  00464C  0100               	movlb	0	; () banked
 29956  00464E  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 29957  004650  0E00               	movlw	0
 29958  004652  0100               	movlb	0	; () banked
 29959  004654  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 29960  004656  0E1E               	movlw	30
 29961  004658  6F62               	movwf	cleanBuffer@count& (0+255),b
 29962  00465A  ECE6  F050         	call	_cleanBuffer	;wreg free
 29963                           
 29964                           ;Bluetooth.c: 258: cleanBuffer(BluetoothFirmware2,30);
 29965  00465E  0E1E               	movlw	low _BluetoothFirmware2
 29966  004660  0100               	movlb	0	; () banked
 29967  004662  6F60               	movwf	cleanBuffer@data& (0+255),b
 29968  004664  0E05               	movlw	high _BluetoothFirmware2
 29969  004666  0100               	movlb	0	; () banked
 29970  004668  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 29971  00466A  0E00               	movlw	0
 29972  00466C  0100               	movlb	0	; () banked
 29973  00466E  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 29974  004670  0E1E               	movlw	30
 29975  004672  6F62               	movwf	cleanBuffer@count& (0+255),b
 29976  004674  ECE6  F050         	call	_cleanBuffer	;wreg free
 29977                           
 29978                           ;Bluetooth.c: 259: BufferCopy(BluetoothVersionLine1, BluetoothFirmware1, 30, 0);
 29979  004678  0E33               	movlw	low BluetoothInitialSetup@BluetoothVersionLine1
 29980  00467A  0100               	movlb	0	; () banked
 29981  00467C  6F68               	movwf	BufferCopy@from& (0+255),b
 29982  00467E  0E01               	movlw	high BluetoothInitialSetup@BluetoothVersionLine1
 29983  004680  0100               	movlb	0	; () banked
 29984  004682  6F69               	movwf	(BufferCopy@from+1)& (0+255),b
 29985  004684  0E00               	movlw	low _BluetoothFirmware1
 29986  004686  0100               	movlb	0	; () banked
 29987  004688  6F6A               	movwf	BufferCopy@to& (0+255),b
 29988  00468A  0E05               	movlw	high _BluetoothFirmware1
 29989  00468C  0100               	movlb	0	; () banked
 29990  00468E  6F6B               	movwf	(BufferCopy@to+1)& (0+255),b
 29991  004690  0E1E               	movlw	30
 29992  004692  0100               	movlb	0	; () banked
 29993  004694  6F6C               	movwf	BufferCopy@count& (0+255),b
 29994  004696  0E00               	movlw	0
 29995  004698  0100               	movlb	0	; () banked
 29996  00469A  6F6D               	movwf	BufferCopy@shift& (0+255),b
 29997  00469C  ECDF  F04E         	call	_BufferCopy	;wreg free
 29998                           
 29999                           ;Bluetooth.c: 260: BufferCopy(BluetoothVersionLine2, BluetoothFirmware2, 30, 0);
 30000  0046A0  0E51               	movlw	low BluetoothInitialSetup@BluetoothVersionLine2
 30001  0046A2  0100               	movlb	0	; () banked
 30002  0046A4  6F68               	movwf	BufferCopy@from& (0+255),b
 30003  0046A6  0E01               	movlw	high BluetoothInitialSetup@BluetoothVersionLine2
 30004  0046A8  0100               	movlb	0	; () banked
 30005  0046AA  6F69               	movwf	(BufferCopy@from+1)& (0+255),b
 30006  0046AC  0E1E               	movlw	low _BluetoothFirmware2
 30007  0046AE  0100               	movlb	0	; () banked
 30008  0046B0  6F6A               	movwf	BufferCopy@to& (0+255),b
 30009  0046B2  0E05               	movlw	high _BluetoothFirmware2
 30010  0046B4  0100               	movlb	0	; () banked
 30011  0046B6  6F6B               	movwf	(BufferCopy@to+1)& (0+255),b
 30012  0046B8  0E1E               	movlw	30
 30013  0046BA  0100               	movlb	0	; () banked
 30014  0046BC  6F6C               	movwf	BufferCopy@count& (0+255),b
 30015  0046BE  0E00               	movlw	0
 30016  0046C0  0100               	movlb	0	; () banked
 30017  0046C2  6F6D               	movwf	BufferCopy@shift& (0+255),b
 30018  0046C4  ECDF  F04E         	call	_BufferCopy	;wreg free
 30019  0046C8                     l2014:
 30020                           
 30021                           ;Bluetooth.c: 261: }
 30022                           ;Bluetooth.c: 262: cleanBuffer(CommandString,CommandStringPos);
 30023  0046C8  0E14               	movlw	low _CommandString
 30024  0046CA  0100               	movlb	0	; () banked
 30025  0046CC  6F60               	movwf	cleanBuffer@data& (0+255),b
 30026  0046CE  0E04               	movlw	high _CommandString
 30027  0046D0  0100               	movlb	0	; () banked
 30028  0046D2  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 30029  0046D4  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 30030  0046D8  0100               	movlb	0	; () banked
 30031  0046DA  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 30032  0046DC  ECE6  F050         	call	_cleanBuffer	;wreg free
 30033                           
 30034                           ;Bluetooth.c: 263: CommandStringPos = 0;
 30035  0046E0  0E00               	movlw	0
 30036  0046E2  6E3E               	movwf	_CommandStringPos,c	;volatile
 30037                           
 30038                           ;Bluetooth.c: 265: if(Default)
 30039  0046E4  0101               	movlb	1	; () banked
 30040  0046E6  51B7               	movf	BluetoothInitialSetup@Default& (0+255),w,b
 30041  0046E8  0101               	movlb	1	; () banked
 30042  0046EA  B4D8               	btfsc	status,2,c
 30043  0046EC  D056               	goto	l10960
 30044                           
 30045                           ; BSR set to: 1
 30046                           ;Bluetooth.c: 266: {
 30047                           ;Bluetooth.c: 267: if(ok)
 30048  0046EE  0101               	movlb	1	; () banked
 30049  0046F0  51B9               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 30050  0046F2  0101               	movlb	1	; () banked
 30051  0046F4  B4D8               	btfsc	status,2,c
 30052  0046F6  D0BC               	goto	l10988
 30053                           
 30054                           ; BSR set to: 1
 30055                           ;Bluetooth.c: 268: {
 30056                           ;Bluetooth.c: 269: sprintf(buf,"SN,Home Automation %lu\r",Global2.SerialNumber);
 30057  0046F8  0E84               	movlw	low BluetoothInitialSetup@buf
 30058  0046FA  0100               	movlb	0	; () banked
 30059  0046FC  6FAE               	movwf	sprintf@sp& (0+255),b
 30060  0046FE  0E01               	movlw	high BluetoothInitialSetup@buf
 30061  004700  0100               	movlb	0	; () banked
 30062  004702  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 30063  004704  0E39               	movlw	low STR_9
 30064  004706  0100               	movlb	0	; () banked
 30065  004708  6FB0               	movwf	sprintf@f& (0+255),b
 30066  00470A  0EFB               	movlw	high STR_9
 30067  00470C  0100               	movlb	0	; () banked
 30068  00470E  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 30069  004710  C2D1  F0B2         	movff	_Global2+60,?_sprintf+4
 30070  004714  C2D2  F0B3         	movff	_Global2+61,?_sprintf+5
 30071  004718  C2D3  F0B4         	movff	_Global2+62,?_sprintf+6
 30072  00471C  C2D4  F0B5         	movff	_Global2+63,?_sprintf+7
 30073  004720  EC27  F014         	call	_sprintf	;wreg free
 30074                           
 30075                           ;Bluetooth.c: 270: ClearUSART();
 30076  004724  ECC2  F054         	call	_ClearUSART	;wreg free
 30077                           
 30078                           ;Bluetooth.c: 271: PIR1bits.RCIF = 0;
 30079  004728  9A9E               	bcf	3998,5,c	;volatile
 30080                           
 30081                           ;Bluetooth.c: 272: PIE1bits.RCIE = 1;
 30082  00472A  8A9D               	bsf	3997,5,c	;volatile
 30083                           
 30084                           ;Bluetooth.c: 273: UARTstring(buf);
 30085  00472C  0E84               	movlw	low BluetoothInitialSetup@buf
 30086  00472E  0100               	movlb	0	; () banked
 30087  004730  6F61               	movwf	UARTstring@data& (0+255),b
 30088  004732  0E01               	movlw	high BluetoothInitialSetup@buf
 30089  004734  0100               	movlb	0	; () banked
 30090  004736  6F62               	movwf	(UARTstring@data+1)& (0+255),b
 30091  004738  ECE3  F053         	call	_UARTstring	;wreg free
 30092                           
 30093                           ;Bluetooth.c: 274: delayUS(50000);
 30094  00473C  0E50               	movlw	80
 30095  00473E  0100               	movlb	0	; () banked
 30096  004740  6F60               	movwf	delayUS@US& (0+255),b
 30097  004742  0EC3               	movlw	195
 30098  004744  6F61               	movwf	(delayUS@US+1)& (0+255),b
 30099  004746  0E00               	movlw	0
 30100  004748  6F62               	movwf	(delayUS@US+2)& (0+255),b
 30101  00474A  0E00               	movlw	0
 30102  00474C  6F63               	movwf	(delayUS@US+3)& (0+255),b
 30103  00474E  EC3F  F051         	call	_delayUS	;wreg free
 30104                           
 30105                           ;Bluetooth.c: 275: PIE1bits.RCIE = 0;
 30106  004752  9A9D               	bcf	3997,5,c	;volatile
 30107                           
 30108                           ;Bluetooth.c: 276: sprintf(buf,"AOK");
 30109  004754  0E84               	movlw	low BluetoothInitialSetup@buf
 30110  004756  0100               	movlb	0	; () banked
 30111  004758  6FAE               	movwf	sprintf@sp& (0+255),b
 30112  00475A  0E01               	movlw	high BluetoothInitialSetup@buf
 30113  00475C  0100               	movlb	0	; () banked
 30114  00475E  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 30115  004760  0EF4               	movlw	low STR_10
 30116  004762  0100               	movlb	0	; () banked
 30117  004764  6FB0               	movwf	sprintf@f& (0+255),b
 30118  004766  0EFF               	movlw	high STR_10
 30119  004768  0100               	movlb	0	; () banked
 30120  00476A  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 30121  00476C  EC27  F014         	call	_sprintf	;wreg free
 30122                           
 30123                           ;Bluetooth.c: 277: if(!StringContains(CommandString,buf))
 30124  004770  0E14               	movlw	low _CommandString
 30125  004772  0100               	movlb	0	; () banked
 30126  004774  6F60               	movwf	StringContains@This& (0+255),b
 30127  004776  0E04               	movlw	high _CommandString
 30128  004778  0100               	movlb	0	; () banked
 30129  00477A  6F61               	movwf	(StringContains@This+1)& (0+255),b
 30130  00477C  0E84               	movlw	low BluetoothInitialSetup@buf
 30131  00477E  0100               	movlb	0	; () banked
 30132  004780  6F62               	movwf	StringContains@That& (0+255),b
 30133  004782  0E01               	movlw	high BluetoothInitialSetup@buf
 30134  004784  0100               	movlb	0	; () banked
 30135  004786  6F63               	movwf	(StringContains@That+1)& (0+255),b
 30136  004788  ECBA  F042         	call	_StringContains	;wreg free
 30137  00478C  0900               	iorlw	0
 30138  00478E  A4D8               	btfss	status,2,c
 30139  004790  D06F               	goto	l10988
 30140                           
 30141                           ;Bluetooth.c: 278: {
 30142                           ;Bluetooth.c: 279: ok = 0;
 30143  004792  0E00               	movlw	0
 30144  004794  0101               	movlb	1	; () banked
 30145  004796  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 30146                           
 30147                           ; BSR set to: 1
 30148                           ;Bluetooth.c: 280: }
 30149                           ;Bluetooth.c: 281: }
 30150                           ;Bluetooth.c: 282: }
 30151                           
 30152                           ; BSR set to: 1
 30153  004798  D06B               	goto	l10988
 30154  00479A                     l10960:
 30155                           
 30156                           ; BSR set to: 1
 30157                           ;Bluetooth.c: 283: else
 30158                           ;Bluetooth.c: 284: {
 30159                           ;Bluetooth.c: 285: if(ok)
 30160  00479A  0101               	movlb	1	; () banked
 30161  00479C  51B9               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 30162  00479E  0101               	movlb	1	; () banked
 30163  0047A0  B4D8               	btfsc	status,2,c
 30164  0047A2  D066               	goto	l10988
 30165                           
 30166                           ; BSR set to: 1
 30167                           ;Bluetooth.c: 286: {
 30168                           ;Bluetooth.c: 287: if(BluetoothBroadcast[21-1] == 0 )
 30169  0047A4  0104               	movlb	4	; () banked
 30170  0047A6  51F0               	movf	(_BluetoothBroadcast+20)& (0+255),w,b
 30171  0047A8  A4D8               	btfss	status,2,c
 30172  0047AA  D05E               	goto	l10986
 30173                           
 30174                           ; BSR set to: 4
 30175                           ;Bluetooth.c: 288: {
 30176                           ;Bluetooth.c: 289: BufferCopy(BluetoothBroadcast,BroadcastTEMP, 21, 0);
 30177  0047AC  0EDC               	movlw	low _BluetoothBroadcast
 30178  0047AE  0100               	movlb	0	; () banked
 30179  0047B0  6F68               	movwf	BufferCopy@from& (0+255),b
 30180  0047B2  0E04               	movlw	high _BluetoothBroadcast
 30181  0047B4  0100               	movlb	0	; () banked
 30182  0047B6  6F69               	movwf	(BufferCopy@from+1)& (0+255),b
 30183  0047B8  0E6F               	movlw	low BluetoothInitialSetup@BroadcastTEMP
 30184  0047BA  0100               	movlb	0	; () banked
 30185  0047BC  6F6A               	movwf	BufferCopy@to& (0+255),b
 30186  0047BE  0E01               	movlw	high BluetoothInitialSetup@BroadcastTEMP
 30187  0047C0  0100               	movlb	0	; () banked
 30188  0047C2  6F6B               	movwf	(BufferCopy@to+1)& (0+255),b
 30189  0047C4  0E15               	movlw	21
 30190  0047C6  0100               	movlb	0	; () banked
 30191  0047C8  6F6C               	movwf	BufferCopy@count& (0+255),b
 30192  0047CA  0E00               	movlw	0
 30193  0047CC  0100               	movlb	0	; () banked
 30194  0047CE  6F6D               	movwf	BufferCopy@shift& (0+255),b
 30195  0047D0  ECDF  F04E         	call	_BufferCopy	;wreg free
 30196                           
 30197                           ;Bluetooth.c: 290: sprintf(buf,"SN,%s\r",BroadcastTEMP);
 30198  0047D4  0E84               	movlw	low BluetoothInitialSetup@buf
 30199  0047D6  0100               	movlb	0	; () banked
 30200  0047D8  6FAE               	movwf	sprintf@sp& (0+255),b
 30201  0047DA  0E01               	movlw	high BluetoothInitialSetup@buf
 30202  0047DC  0100               	movlb	0	; () banked
 30203  0047DE  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 30204  0047E0  0E9F               	movlw	low STR_11
 30205  0047E2  0100               	movlb	0	; () banked
 30206  0047E4  6FB0               	movwf	sprintf@f& (0+255),b
 30207  0047E6  0EFF               	movlw	high STR_11
 30208  0047E8  0100               	movlb	0	; () banked
 30209  0047EA  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 30210  0047EC  0E6F               	movlw	low BluetoothInitialSetup@BroadcastTEMP
 30211  0047EE  0100               	movlb	0	; () banked
 30212  0047F0  6FB2               	movwf	(?_sprintf+4)& (0+255),b
 30213  0047F2  0E01               	movlw	high BluetoothInitialSetup@BroadcastTEMP
 30214  0047F4  0100               	movlb	0	; () banked
 30215  0047F6  6FB3               	movwf	(?_sprintf+5)& (0+255),b
 30216  0047F8  EC27  F014         	call	_sprintf	;wreg free
 30217                           
 30218                           ;Bluetooth.c: 291: ClearUSART();
 30219  0047FC  ECC2  F054         	call	_ClearUSART	;wreg free
 30220                           
 30221                           ;Bluetooth.c: 292: PIR1bits.RCIF = 0;
 30222  004800  9A9E               	bcf	3998,5,c	;volatile
 30223                           
 30224                           ;Bluetooth.c: 293: PIE1bits.RCIE = 1;
 30225  004802  8A9D               	bsf	3997,5,c	;volatile
 30226                           
 30227                           ;Bluetooth.c: 294: UARTstring(buf);
 30228  004804  0E84               	movlw	low BluetoothInitialSetup@buf
 30229  004806  0100               	movlb	0	; () banked
 30230  004808  6F61               	movwf	UARTstring@data& (0+255),b
 30231  00480A  0E01               	movlw	high BluetoothInitialSetup@buf
 30232  00480C  0100               	movlb	0	; () banked
 30233  00480E  6F62               	movwf	(UARTstring@data+1)& (0+255),b
 30234  004810  ECE3  F053         	call	_UARTstring	;wreg free
 30235                           
 30236                           ;Bluetooth.c: 295: delayUS(50000);
 30237  004814  0E50               	movlw	80
 30238  004816  0100               	movlb	0	; () banked
 30239  004818  6F60               	movwf	delayUS@US& (0+255),b
 30240  00481A  0EC3               	movlw	195
 30241  00481C  6F61               	movwf	(delayUS@US+1)& (0+255),b
 30242  00481E  0E00               	movlw	0
 30243  004820  6F62               	movwf	(delayUS@US+2)& (0+255),b
 30244  004822  0E00               	movlw	0
 30245  004824  6F63               	movwf	(delayUS@US+3)& (0+255),b
 30246  004826  EC3F  F051         	call	_delayUS	;wreg free
 30247                           
 30248                           ;Bluetooth.c: 296: PIE1bits.RCIE = 0;
 30249  00482A  9A9D               	bcf	3997,5,c	;volatile
 30250                           
 30251                           ;Bluetooth.c: 297: sprintf(buf,"AOK");
 30252  00482C  0E84               	movlw	low BluetoothInitialSetup@buf
 30253  00482E  0100               	movlb	0	; () banked
 30254  004830  6FAE               	movwf	sprintf@sp& (0+255),b
 30255  004832  0E01               	movlw	high BluetoothInitialSetup@buf
 30256  004834  0100               	movlb	0	; () banked
 30257  004836  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 30258  004838  0EF4               	movlw	low STR_10
 30259  00483A  0100               	movlb	0	; () banked
 30260  00483C  6FB0               	movwf	sprintf@f& (0+255),b
 30261  00483E  0EFF               	movlw	high STR_10
 30262  004840  0100               	movlb	0	; () banked
 30263  004842  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 30264  004844  EC27  F014         	call	_sprintf	;wreg free
 30265                           
 30266                           ;Bluetooth.c: 298: if(!StringContains(CommandString,buf))
 30267  004848  0E14               	movlw	low _CommandString
 30268  00484A  0100               	movlb	0	; () banked
 30269  00484C  6F60               	movwf	StringContains@This& (0+255),b
 30270  00484E  0E04               	movlw	high _CommandString
 30271  004850  0100               	movlb	0	; () banked
 30272  004852  6F61               	movwf	(StringContains@This+1)& (0+255),b
 30273  004854  0E84               	movlw	low BluetoothInitialSetup@buf
 30274  004856  0100               	movlb	0	; () banked
 30275  004858  6F62               	movwf	StringContains@That& (0+255),b
 30276  00485A  0E01               	movlw	high BluetoothInitialSetup@buf
 30277  00485C  0100               	movlb	0	; () banked
 30278  00485E  6F63               	movwf	(StringContains@That+1)& (0+255),b
 30279  004860  ECBA  F042         	call	_StringContains	;wreg free
 30280  004864  D793               	goto	L17
 30281                           
 30282                           ; BSR set to: 1
 30283                           ;Bluetooth.c: 301: }
 30284                           ;Bluetooth.c: 302: }
 30285                           
 30286                           ;Bluetooth.c: 299: {
 30287                           ;Bluetooth.c: 300: ok = 0;
 30288  004866  D004               	goto	l10988
 30289  004868                     l10986:
 30290                           
 30291                           ;Bluetooth.c: 303: else
 30292                           ;Bluetooth.c: 304: {
 30293                           ;Bluetooth.c: 305: ok = 0;
 30294  004868  0E00               	movlw	0
 30295  00486A  0101               	movlb	1	; () banked
 30296  00486C  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 30297                           
 30298                           ; BSR set to: 1
 30299                           
 30300                           ; BSR set to: 1
 30301  00486E  D000               	goto	l10988
 30302  004870                     l10988:
 30303                           
 30304                           ;Bluetooth.c: 306: }
 30305                           ;Bluetooth.c: 307: }
 30306                           ;Bluetooth.c: 308: }
 30307                           ;Bluetooth.c: 309: cleanBuffer(CommandString,CommandStringPos);
 30308  004870  0E14               	movlw	low _CommandString
 30309  004872  0100               	movlb	0	; () banked
 30310  004874  6F60               	movwf	cleanBuffer@data& (0+255),b
 30311  004876  0E04               	movlw	high _CommandString
 30312  004878  0100               	movlb	0	; () banked
 30313  00487A  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 30314  00487C  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 30315  004880  0100               	movlb	0	; () banked
 30316  004882  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 30317  004884  ECE6  F050         	call	_cleanBuffer	;wreg free
 30318                           
 30319                           ;Bluetooth.c: 310: CommandStringPos = 0;
 30320  004888  0E00               	movlw	0
 30321  00488A  6E3E               	movwf	_CommandStringPos,c	;volatile
 30322                           
 30323                           ;Bluetooth.c: 312: if(ok)
 30324  00488C  0101               	movlb	1	; () banked
 30325  00488E  51B9               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 30326  004890  0101               	movlb	1	; () banked
 30327  004892  B4D8               	btfsc	status,2,c
 30328  004894  D02D               	goto	l11010
 30329                           
 30330                           ; BSR set to: 1
 30331                           ;Bluetooth.c: 313: {
 30332                           ;Bluetooth.c: 314: ClearUSART();
 30333  004896  ECC2  F054         	call	_ClearUSART	;wreg free
 30334                           
 30335                           ;Bluetooth.c: 315: PIR1bits.RCIF = 0;
 30336  00489A  9A9E               	bcf	3998,5,c	;volatile
 30337                           
 30338                           ;Bluetooth.c: 316: PIE1bits.RCIE = 1;
 30339  00489C  8A9D               	bsf	3997,5,c	;volatile
 30340                           
 30341                           ;Bluetooth.c: 317: UARTstring_CONST("SU,115K\r");
 30342  00489E  0E75               	movlw	low STR_13
 30343  0048A0  0100               	movlb	0	; () banked
 30344  0048A2  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 30345  0048A4  0EFF               	movlw	high STR_13
 30346  0048A6  0100               	movlb	0	; () banked
 30347  0048A8  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 30348  0048AA  EC42  F053         	call	_UARTstring_CONST	;wreg free
 30349                           
 30350                           ;Bluetooth.c: 318: delayUS(50000);
 30351  0048AE  0E50               	movlw	80
 30352  0048B0  0100               	movlb	0	; () banked
 30353  0048B2  6F60               	movwf	delayUS@US& (0+255),b
 30354  0048B4  0EC3               	movlw	195
 30355  0048B6  6F61               	movwf	(delayUS@US+1)& (0+255),b
 30356  0048B8  0E00               	movlw	0
 30357  0048BA  6F62               	movwf	(delayUS@US+2)& (0+255),b
 30358  0048BC  0E00               	movlw	0
 30359  0048BE  6F63               	movwf	(delayUS@US+3)& (0+255),b
 30360  0048C0  EC3F  F051         	call	_delayUS	;wreg free
 30361                           
 30362                           ;Bluetooth.c: 319: PIE1bits.RCIE = 0;
 30363  0048C4  9A9D               	bcf	3997,5,c	;volatile
 30364                           
 30365                           ;Bluetooth.c: 320: if(!StringContains(CommandString,buf))
 30366  0048C6  0E14               	movlw	low _CommandString
 30367  0048C8  0100               	movlb	0	; () banked
 30368  0048CA  6F60               	movwf	StringContains@This& (0+255),b
 30369  0048CC  0E04               	movlw	high _CommandString
 30370  0048CE  0100               	movlb	0	; () banked
 30371  0048D0  6F61               	movwf	(StringContains@This+1)& (0+255),b
 30372  0048D2  0E84               	movlw	low BluetoothInitialSetup@buf
 30373  0048D4  0100               	movlb	0	; () banked
 30374  0048D6  6F62               	movwf	StringContains@That& (0+255),b
 30375  0048D8  0E01               	movlw	high BluetoothInitialSetup@buf
 30376  0048DA  0100               	movlb	0	; () banked
 30377  0048DC  6F63               	movwf	(StringContains@That+1)& (0+255),b
 30378  0048DE  ECBA  F042         	call	_StringContains	;wreg free
 30379  0048E2  0900               	iorlw	0
 30380  0048E4  A4D8               	btfss	status,2,c
 30381  0048E6  D004               	goto	l11010
 30382                           
 30383                           ;Bluetooth.c: 321: {
 30384                           ;Bluetooth.c: 322: ok = 0;
 30385  0048E8  0E00               	movlw	0
 30386  0048EA  0101               	movlb	1	; () banked
 30387  0048EC  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 30388                           
 30389                           ; BSR set to: 1
 30390  0048EE  D000               	goto	l11010
 30391  0048F0                     l11010:
 30392                           
 30393                           ;Bluetooth.c: 323: }
 30394                           ;Bluetooth.c: 324: }
 30395                           ;Bluetooth.c: 325: cleanBuffer(CommandString,CommandStringPos);
 30396  0048F0  0E14               	movlw	low _CommandString
 30397  0048F2  0100               	movlb	0	; () banked
 30398  0048F4  6F60               	movwf	cleanBuffer@data& (0+255),b
 30399  0048F6  0E04               	movlw	high _CommandString
 30400  0048F8  0100               	movlb	0	; () banked
 30401  0048FA  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 30402  0048FC  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 30403  004900  0100               	movlb	0	; () banked
 30404  004902  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 30405  004904  ECE6  F050         	call	_cleanBuffer	;wreg free
 30406                           
 30407                           ;Bluetooth.c: 326: CommandStringPos = 0;
 30408  004908  0E00               	movlw	0
 30409  00490A  6E3E               	movwf	_CommandStringPos,c	;volatile
 30410                           
 30411                           ;Bluetooth.c: 328: if(ok)
 30412  00490C  0101               	movlb	1	; () banked
 30413  00490E  51B9               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 30414  004910  0101               	movlb	1	; () banked
 30415  004912  B4D8               	btfsc	status,2,c
 30416  004914  D02D               	goto	l11032
 30417                           
 30418                           ; BSR set to: 1
 30419                           ;Bluetooth.c: 329: {
 30420                           ;Bluetooth.c: 330: ClearUSART();
 30421  004916  ECC2  F054         	call	_ClearUSART	;wreg free
 30422                           
 30423                           ;Bluetooth.c: 331: PIR1bits.RCIF = 0;
 30424  00491A  9A9E               	bcf	3998,5,c	;volatile
 30425                           
 30426                           ;Bluetooth.c: 332: PIE1bits.RCIE = 1;
 30427  00491C  8A9D               	bsf	3997,5,c	;volatile
 30428                           
 30429                           ;Bluetooth.c: 333: UARTstring_CONST("SS,Home Automation\r");
 30430  00491E  0ECE               	movlw	low STR_14
 30431  004920  0100               	movlb	0	; () banked
 30432  004922  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 30433  004924  0EFC               	movlw	high STR_14
 30434  004926  0100               	movlb	0	; () banked
 30435  004928  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 30436  00492A  EC42  F053         	call	_UARTstring_CONST	;wreg free
 30437                           
 30438                           ;Bluetooth.c: 334: delayUS(50000);
 30439  00492E  0E50               	movlw	80
 30440  004930  0100               	movlb	0	; () banked
 30441  004932  6F60               	movwf	delayUS@US& (0+255),b
 30442  004934  0EC3               	movlw	195
 30443  004936  6F61               	movwf	(delayUS@US+1)& (0+255),b
 30444  004938  0E00               	movlw	0
 30445  00493A  6F62               	movwf	(delayUS@US+2)& (0+255),b
 30446  00493C  0E00               	movlw	0
 30447  00493E  6F63               	movwf	(delayUS@US+3)& (0+255),b
 30448  004940  EC3F  F051         	call	_delayUS	;wreg free
 30449                           
 30450                           ;Bluetooth.c: 335: PIE1bits.RCIE = 0;
 30451  004944  9A9D               	bcf	3997,5,c	;volatile
 30452                           
 30453                           ;Bluetooth.c: 336: if(!StringContains(CommandString,buf))
 30454  004946  0E14               	movlw	low _CommandString
 30455  004948  0100               	movlb	0	; () banked
 30456  00494A  6F60               	movwf	StringContains@This& (0+255),b
 30457  00494C  0E04               	movlw	high _CommandString
 30458  00494E  0100               	movlb	0	; () banked
 30459  004950  6F61               	movwf	(StringContains@This+1)& (0+255),b
 30460  004952  0E84               	movlw	low BluetoothInitialSetup@buf
 30461  004954  0100               	movlb	0	; () banked
 30462  004956  6F62               	movwf	StringContains@That& (0+255),b
 30463  004958  0E01               	movlw	high BluetoothInitialSetup@buf
 30464  00495A  0100               	movlb	0	; () banked
 30465  00495C  6F63               	movwf	(StringContains@That+1)& (0+255),b
 30466  00495E  ECBA  F042         	call	_StringContains	;wreg free
 30467  004962  0900               	iorlw	0
 30468  004964  A4D8               	btfss	status,2,c
 30469  004966  D004               	goto	l11032
 30470                           
 30471                           ;Bluetooth.c: 337: {
 30472                           ;Bluetooth.c: 338: ok = 0;
 30473  004968  0E00               	movlw	0
 30474  00496A  0101               	movlb	1	; () banked
 30475  00496C  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 30476                           
 30477                           ; BSR set to: 1
 30478  00496E  D000               	goto	l11032
 30479  004970                     l11032:
 30480                           
 30481                           ;Bluetooth.c: 339: }
 30482                           ;Bluetooth.c: 340: }
 30483                           ;Bluetooth.c: 341: cleanBuffer(CommandString,CommandStringPos);
 30484  004970  0E14               	movlw	low _CommandString
 30485  004972  0100               	movlb	0	; () banked
 30486  004974  6F60               	movwf	cleanBuffer@data& (0+255),b
 30487  004976  0E04               	movlw	high _CommandString
 30488  004978  0100               	movlb	0	; () banked
 30489  00497A  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 30490  00497C  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 30491  004980  0100               	movlb	0	; () banked
 30492  004982  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 30493  004984  ECE6  F050         	call	_cleanBuffer	;wreg free
 30494                           
 30495                           ;Bluetooth.c: 342: CommandStringPos = 0;
 30496  004988  0E00               	movlw	0
 30497  00498A  6E3E               	movwf	_CommandStringPos,c	;volatile
 30498                           
 30499                           ;Bluetooth.c: 344: if(ok)
 30500  00498C  0101               	movlb	1	; () banked
 30501  00498E  51B9               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 30502  004990  0101               	movlb	1	; () banked
 30503  004992  B4D8               	btfsc	status,2,c
 30504  004994  D02D               	goto	l11054
 30505                           
 30506                           ; BSR set to: 1
 30507                           ;Bluetooth.c: 345: {
 30508                           ;Bluetooth.c: 346: ClearUSART();
 30509  004996  ECC2  F054         	call	_ClearUSART	;wreg free
 30510                           
 30511                           ;Bluetooth.c: 347: PIR1bits.RCIF = 0;
 30512  00499A  9A9E               	bcf	3998,5,c	;volatile
 30513                           
 30514                           ;Bluetooth.c: 348: PIE1bits.RCIE = 1;
 30515  00499C  8A9D               	bsf	3997,5,c	;volatile
 30516                           
 30517                           ;Bluetooth.c: 349: UARTstring_CONST("SY,0010\r");
 30518  00499E  0E6C               	movlw	low STR_15
 30519  0049A0  0100               	movlb	0	; () banked
 30520  0049A2  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 30521  0049A4  0EFF               	movlw	high STR_15
 30522  0049A6  0100               	movlb	0	; () banked
 30523  0049A8  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 30524  0049AA  EC42  F053         	call	_UARTstring_CONST	;wreg free
 30525                           
 30526                           ;Bluetooth.c: 350: delayUS(50000);
 30527  0049AE  0E50               	movlw	80
 30528  0049B0  0100               	movlb	0	; () banked
 30529  0049B2  6F60               	movwf	delayUS@US& (0+255),b
 30530  0049B4  0EC3               	movlw	195
 30531  0049B6  6F61               	movwf	(delayUS@US+1)& (0+255),b
 30532  0049B8  0E00               	movlw	0
 30533  0049BA  6F62               	movwf	(delayUS@US+2)& (0+255),b
 30534  0049BC  0E00               	movlw	0
 30535  0049BE  6F63               	movwf	(delayUS@US+3)& (0+255),b
 30536  0049C0  EC3F  F051         	call	_delayUS	;wreg free
 30537                           
 30538                           ;Bluetooth.c: 351: PIE1bits.RCIE = 0;
 30539  0049C4  9A9D               	bcf	3997,5,c	;volatile
 30540                           
 30541                           ;Bluetooth.c: 352: if(!StringContains(CommandString,buf))
 30542  0049C6  0E14               	movlw	low _CommandString
 30543  0049C8  0100               	movlb	0	; () banked
 30544  0049CA  6F60               	movwf	StringContains@This& (0+255),b
 30545  0049CC  0E04               	movlw	high _CommandString
 30546  0049CE  0100               	movlb	0	; () banked
 30547  0049D0  6F61               	movwf	(StringContains@This+1)& (0+255),b
 30548  0049D2  0E84               	movlw	low BluetoothInitialSetup@buf
 30549  0049D4  0100               	movlb	0	; () banked
 30550  0049D6  6F62               	movwf	StringContains@That& (0+255),b
 30551  0049D8  0E01               	movlw	high BluetoothInitialSetup@buf
 30552  0049DA  0100               	movlb	0	; () banked
 30553  0049DC  6F63               	movwf	(StringContains@That+1)& (0+255),b
 30554  0049DE  ECBA  F042         	call	_StringContains	;wreg free
 30555  0049E2  0900               	iorlw	0
 30556  0049E4  A4D8               	btfss	status,2,c
 30557  0049E6  D004               	goto	l11054
 30558                           
 30559                           ;Bluetooth.c: 353: {
 30560                           ;Bluetooth.c: 354: ok = 0;
 30561  0049E8  0E00               	movlw	0
 30562  0049EA  0101               	movlb	1	; () banked
 30563  0049EC  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 30564                           
 30565                           ; BSR set to: 1
 30566  0049EE  D000               	goto	l11054
 30567  0049F0                     l11054:
 30568                           
 30569                           ;Bluetooth.c: 355: }
 30570                           ;Bluetooth.c: 356: }
 30571                           ;Bluetooth.c: 357: cleanBuffer(CommandString,CommandStringPos);
 30572  0049F0  0E14               	movlw	low _CommandString
 30573  0049F2  0100               	movlb	0	; () banked
 30574  0049F4  6F60               	movwf	cleanBuffer@data& (0+255),b
 30575  0049F6  0E04               	movlw	high _CommandString
 30576  0049F8  0100               	movlb	0	; () banked
 30577  0049FA  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 30578  0049FC  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 30579  004A00  0100               	movlb	0	; () banked
 30580  004A02  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 30581  004A04  ECE6  F050         	call	_cleanBuffer	;wreg free
 30582                           
 30583                           ;Bluetooth.c: 358: CommandStringPos = 0;
 30584  004A08  0E00               	movlw	0
 30585  004A0A  6E3E               	movwf	_CommandStringPos,c	;volatile
 30586                           
 30587                           ;Bluetooth.c: 360: if(ok)
 30588  004A0C  0101               	movlb	1	; () banked
 30589  004A0E  51B9               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 30590  004A10  0101               	movlb	1	; () banked
 30591  004A12  B4D8               	btfsc	status,2,c
 30592  004A14  D02D               	goto	l11076
 30593                           
 30594                           ; BSR set to: 1
 30595                           ;Bluetooth.c: 361: {
 30596                           ;Bluetooth.c: 362: ClearUSART();
 30597  004A16  ECC2  F054         	call	_ClearUSART	;wreg free
 30598                           
 30599                           ;Bluetooth.c: 363: PIR1bits.RCIF = 0;
 30600  004A1A  9A9E               	bcf	3998,5,c	;volatile
 30601                           
 30602                           ;Bluetooth.c: 364: PIE1bits.RCIE = 1;
 30603  004A1C  8A9D               	bsf	3997,5,c	;volatile
 30604                           
 30605                           ;Bluetooth.c: 365: UARTstring_CONST("S~,0\r");
 30606  004A1E  0EB4               	movlw	low STR_16
 30607  004A20  0100               	movlb	0	; () banked
 30608  004A22  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 30609  004A24  0EFF               	movlw	high STR_16
 30610  004A26  0100               	movlb	0	; () banked
 30611  004A28  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 30612  004A2A  EC42  F053         	call	_UARTstring_CONST	;wreg free
 30613                           
 30614                           ;Bluetooth.c: 366: delayUS(50000);
 30615  004A2E  0E50               	movlw	80
 30616  004A30  0100               	movlb	0	; () banked
 30617  004A32  6F60               	movwf	delayUS@US& (0+255),b
 30618  004A34  0EC3               	movlw	195
 30619  004A36  6F61               	movwf	(delayUS@US+1)& (0+255),b
 30620  004A38  0E00               	movlw	0
 30621  004A3A  6F62               	movwf	(delayUS@US+2)& (0+255),b
 30622  004A3C  0E00               	movlw	0
 30623  004A3E  6F63               	movwf	(delayUS@US+3)& (0+255),b
 30624  004A40  EC3F  F051         	call	_delayUS	;wreg free
 30625                           
 30626                           ;Bluetooth.c: 367: PIE1bits.RCIE = 0;
 30627  004A44  9A9D               	bcf	3997,5,c	;volatile
 30628                           
 30629                           ;Bluetooth.c: 368: if(!StringContains(CommandString,buf))
 30630  004A46  0E14               	movlw	low _CommandString
 30631  004A48  0100               	movlb	0	; () banked
 30632  004A4A  6F60               	movwf	StringContains@This& (0+255),b
 30633  004A4C  0E04               	movlw	high _CommandString
 30634  004A4E  0100               	movlb	0	; () banked
 30635  004A50  6F61               	movwf	(StringContains@This+1)& (0+255),b
 30636  004A52  0E84               	movlw	low BluetoothInitialSetup@buf
 30637  004A54  0100               	movlb	0	; () banked
 30638  004A56  6F62               	movwf	StringContains@That& (0+255),b
 30639  004A58  0E01               	movlw	high BluetoothInitialSetup@buf
 30640  004A5A  0100               	movlb	0	; () banked
 30641  004A5C  6F63               	movwf	(StringContains@That+1)& (0+255),b
 30642  004A5E  ECBA  F042         	call	_StringContains	;wreg free
 30643  004A62  0900               	iorlw	0
 30644  004A64  A4D8               	btfss	status,2,c
 30645  004A66  D004               	goto	l11076
 30646                           
 30647                           ;Bluetooth.c: 369: {
 30648                           ;Bluetooth.c: 370: ok = 0;
 30649  004A68  0E00               	movlw	0
 30650  004A6A  0101               	movlb	1	; () banked
 30651  004A6C  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 30652                           
 30653                           ; BSR set to: 1
 30654  004A6E  D000               	goto	l11076
 30655  004A70                     l11076:
 30656                           
 30657                           ;Bluetooth.c: 371: }
 30658                           ;Bluetooth.c: 372: }
 30659                           ;Bluetooth.c: 373: cleanBuffer(CommandString,CommandStringPos);
 30660  004A70  0E14               	movlw	low _CommandString
 30661  004A72  0100               	movlb	0	; () banked
 30662  004A74  6F60               	movwf	cleanBuffer@data& (0+255),b
 30663  004A76  0E04               	movlw	high _CommandString
 30664  004A78  0100               	movlb	0	; () banked
 30665  004A7A  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 30666  004A7C  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 30667  004A80  0100               	movlb	0	; () banked
 30668  004A82  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 30669  004A84  ECE6  F050         	call	_cleanBuffer	;wreg free
 30670                           
 30671                           ;Bluetooth.c: 374: CommandStringPos = 0;
 30672  004A88  0E00               	movlw	0
 30673  004A8A  6E3E               	movwf	_CommandStringPos,c	;volatile
 30674                           
 30675                           ;Bluetooth.c: 376: if(ok)
 30676  004A8C  0101               	movlb	1	; () banked
 30677  004A8E  51B9               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 30678  004A90  0101               	movlb	1	; () banked
 30679  004A92  B4D8               	btfsc	status,2,c
 30680  004A94  D06A               	goto	l11104
 30681                           
 30682                           ; BSR set to: 1
 30683                           ;Bluetooth.c: 377: {
 30684                           ;Bluetooth.c: 378: ClearUSART();
 30685  004A96  ECC2  F054         	call	_ClearUSART	;wreg free
 30686                           
 30687                           ;Bluetooth.c: 379: PIR1bits.RCIF = 0;
 30688  004A9A  9A9E               	bcf	3998,5,c	;volatile
 30689                           
 30690                           ;Bluetooth.c: 380: PIE1bits.RCIE = 1;
 30691  004A9C  8A9D               	bsf	3997,5,c	;volatile
 30692                           
 30693                           ;Bluetooth.c: 381: UARTstring_CONST("D\r");
 30694  004A9E  0EF8               	movlw	low STR_17
 30695  004AA0  0100               	movlb	0	; () banked
 30696  004AA2  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 30697  004AA4  0EFF               	movlw	high STR_17
 30698  004AA6  0100               	movlb	0	; () banked
 30699  004AA8  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 30700  004AAA  EC42  F053         	call	_UARTstring_CONST	;wreg free
 30701                           
 30702                           ;Bluetooth.c: 382: delayUS(50000);
 30703  004AAE  0E50               	movlw	80
 30704  004AB0  0100               	movlb	0	; () banked
 30705  004AB2  6F60               	movwf	delayUS@US& (0+255),b
 30706  004AB4  0EC3               	movlw	195
 30707  004AB6  6F61               	movwf	(delayUS@US+1)& (0+255),b
 30708  004AB8  0E00               	movlw	0
 30709  004ABA  6F62               	movwf	(delayUS@US+2)& (0+255),b
 30710  004ABC  0E00               	movlw	0
 30711  004ABE  6F63               	movwf	(delayUS@US+3)& (0+255),b
 30712  004AC0  EC3F  F051         	call	_delayUS	;wreg free
 30713                           
 30714                           ;Bluetooth.c: 383: PIE1bits.RCIE = 0;
 30715  004AC4  9A9D               	bcf	3997,5,c	;volatile
 30716                           
 30717                           ;Bluetooth.c: 384: if(Default)
 30718  004AC6  0101               	movlb	1	; () banked
 30719  004AC8  51B7               	movf	BluetoothInitialSetup@Default& (0+255),w,b
 30720  004ACA  0101               	movlb	1	; () banked
 30721  004ACC  B4D8               	btfsc	status,2,c
 30722  004ACE  D017               	goto	l11098
 30723                           
 30724                           ; BSR set to: 1
 30725                           ;Bluetooth.c: 385: {
 30726                           ;Bluetooth.c: 386: sprintf(buf,"BTName=Home Automation %lu\r",Global2.SerialNumber);
 30727  004AD0  0E84               	movlw	low BluetoothInitialSetup@buf
 30728  004AD2  0100               	movlb	0	; () banked
 30729  004AD4  6FAE               	movwf	sprintf@sp& (0+255),b
 30730  004AD6  0E01               	movlw	high BluetoothInitialSetup@buf
 30731  004AD8  0100               	movlb	0	; () banked
 30732  004ADA  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 30733  004ADC  0E7B               	movlw	low STR_18
 30734  004ADE  0100               	movlb	0	; () banked
 30735  004AE0  6FB0               	movwf	sprintf@f& (0+255),b
 30736  004AE2  0EFA               	movlw	high STR_18
 30737  004AE4  0100               	movlb	0	; () banked
 30738  004AE6  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 30739  004AE8  C2D1  F0B2         	movff	_Global2+60,?_sprintf+4
 30740  004AEC  C2D2  F0B3         	movff	_Global2+61,?_sprintf+5
 30741  004AF0  C2D3  F0B4         	movff	_Global2+62,?_sprintf+6
 30742  004AF4  C2D4  F0B5         	movff	_Global2+63,?_sprintf+7
 30743  004AF8  EC27  F014         	call	_sprintf	;wreg free
 30744                           
 30745                           ;Bluetooth.c: 387: }
 30746  004AFC  D014               	goto	l2033
 30747  004AFE                     l11098:
 30748                           
 30749                           ;Bluetooth.c: 388: else
 30750                           ;Bluetooth.c: 389: {
 30751                           ;Bluetooth.c: 390: sprintf(buf,"BTName=%s\r",BroadcastTEMP);
 30752  004AFE  0E84               	movlw	low BluetoothInitialSetup@buf
 30753  004B00  0100               	movlb	0	; () banked
 30754  004B02  6FAE               	movwf	sprintf@sp& (0+255),b
 30755  004B04  0E01               	movlw	high BluetoothInitialSetup@buf
 30756  004B06  0100               	movlb	0	; () banked
 30757  004B08  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 30758  004B0A  0E00               	movlw	low STR_19
 30759  004B0C  0100               	movlb	0	; () banked
 30760  004B0E  6FB0               	movwf	sprintf@f& (0+255),b
 30761  004B10  0EFF               	movlw	high STR_19
 30762  004B12  0100               	movlb	0	; () banked
 30763  004B14  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 30764  004B16  0E6F               	movlw	low BluetoothInitialSetup@BroadcastTEMP
 30765  004B18  0100               	movlb	0	; () banked
 30766  004B1A  6FB2               	movwf	(?_sprintf+4)& (0+255),b
 30767  004B1C  0E01               	movlw	high BluetoothInitialSetup@BroadcastTEMP
 30768  004B1E  0100               	movlb	0	; () banked
 30769  004B20  6FB3               	movwf	(?_sprintf+5)& (0+255),b
 30770  004B22  EC27  F014         	call	_sprintf	;wreg free
 30771  004B26                     l2033:
 30772                           
 30773                           ;Bluetooth.c: 391: }
 30774                           ;Bluetooth.c: 392: if(!StringContainsCaseInsensitive(CommandString, buf))
 30775  004B26  0E14               	movlw	low _CommandString
 30776  004B28  0100               	movlb	0	; () banked
 30777  004B2A  6F63               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 30778  004B2C  0E04               	movlw	high _CommandString
 30779  004B2E  0100               	movlb	0	; () banked
 30780  004B30  6F64               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 30781  004B32  0E84               	movlw	low BluetoothInitialSetup@buf
 30782  004B34  0100               	movlb	0	; () banked
 30783  004B36  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 30784  004B38  0E01               	movlw	high BluetoothInitialSetup@buf
 30785  004B3A  0100               	movlb	0	; () banked
 30786  004B3C  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 30787  004B3E  EC6D  F03B         	call	_StringContainsCaseInsensitive	;wreg free
 30788  004B42  0900               	iorlw	0
 30789  004B44  A4D8               	btfss	status,2,c
 30790  004B46  D011               	goto	l11104
 30791                           
 30792                           ;Bluetooth.c: 393: {
 30793                           ;Bluetooth.c: 394: if(Global2.SerialNumber != 0xFFFFFFFF)
 30794  004B48  0102               	movlb	2	; () banked
 30795  004B4A  29D1               	incf	(_Global2+60)& (0+255),w,b
 30796  004B4C  E10A               	bnz	u12010
 30797  004B4E  0102               	movlb	2	; () banked
 30798  004B50  29D2               	incf	(_Global2+61)& (0+255),w,b
 30799  004B52  E107               	bnz	u12010
 30800  004B54  0102               	movlb	2	; () banked
 30801  004B56  29D3               	incf	(_Global2+62)& (0+255),w,b
 30802  004B58  E104               	bnz	u12010
 30803  004B5A  0102               	movlb	2	; () banked
 30804  004B5C  29D4               	incf	(_Global2+63)& (0+255),w,b
 30805  004B5E  B4D8               	btfsc	status,2,c
 30806  004B60  D004               	goto	l11104
 30807  004B62                     u12010:
 30808                           
 30809                           ; BSR set to: 2
 30810                           ;Bluetooth.c: 395: {
 30811                           ;Bluetooth.c: 396: ok = 0;
 30812  004B62  0E00               	movlw	0
 30813  004B64  0101               	movlb	1	; () banked
 30814  004B66  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 30815                           
 30816                           ; BSR set to: 1
 30817                           
 30818                           ; BSR set to: 1
 30819  004B68  D000               	goto	l11104
 30820  004B6A                     l11104:
 30821                           
 30822                           ;Bluetooth.c: 397: }
 30823                           ;Bluetooth.c: 398: }
 30824                           ;Bluetooth.c: 399: }
 30825                           ;Bluetooth.c: 400: cleanBuffer(CommandString,CommandStringPos);
 30826  004B6A  0E14               	movlw	low _CommandString
 30827  004B6C  0100               	movlb	0	; () banked
 30828  004B6E  6F60               	movwf	cleanBuffer@data& (0+255),b
 30829  004B70  0E04               	movlw	high _CommandString
 30830  004B72  0100               	movlb	0	; () banked
 30831  004B74  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 30832  004B76  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 30833  004B7A  0100               	movlb	0	; () banked
 30834  004B7C  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 30835  004B7E  ECE6  F050         	call	_cleanBuffer	;wreg free
 30836                           
 30837                           ;Bluetooth.c: 401: CommandStringPos = 0;
 30838  004B82  0E00               	movlw	0
 30839  004B84  6E3E               	movwf	_CommandStringPos,c	;volatile
 30840                           
 30841                           ;Bluetooth.c: 403: ClearUSART();
 30842  004B86  ECC2  F054         	call	_ClearUSART	;wreg free
 30843                           
 30844                           ;Bluetooth.c: 404: PIR1bits.RCIF = 0;
 30845  004B8A  9A9E               	bcf	3998,5,c	;volatile
 30846                           
 30847                           ;Bluetooth.c: 405: PIE1bits.RCIE = 1;
 30848  004B8C  8A9D               	bsf	3997,5,c	;volatile
 30849                           
 30850                           ;Bluetooth.c: 406: UARTstring_CONST("---\r");
 30851  004B8E  0ECC               	movlw	low STR_20
 30852  004B90  0100               	movlb	0	; () banked
 30853  004B92  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 30854  004B94  0EFF               	movlw	high STR_20
 30855  004B96  0100               	movlb	0	; () banked
 30856  004B98  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 30857  004B9A  EC42  F053         	call	_UARTstring_CONST	;wreg free
 30858                           
 30859                           ;Bluetooth.c: 407: delayUS(50000);
 30860  004B9E  0E50               	movlw	80
 30861  004BA0  0100               	movlb	0	; () banked
 30862  004BA2  6F60               	movwf	delayUS@US& (0+255),b
 30863  004BA4  0EC3               	movlw	195
 30864  004BA6  6F61               	movwf	(delayUS@US+1)& (0+255),b
 30865  004BA8  0E00               	movlw	0
 30866  004BAA  6F62               	movwf	(delayUS@US+2)& (0+255),b
 30867  004BAC  0E00               	movlw	0
 30868  004BAE  6F63               	movwf	(delayUS@US+3)& (0+255),b
 30869  004BB0  EC3F  F051         	call	_delayUS	;wreg free
 30870                           
 30871                           ;Bluetooth.c: 408: sprintf(buf,"END");
 30872  004BB4  0E84               	movlw	low BluetoothInitialSetup@buf
 30873  004BB6  0100               	movlb	0	; () banked
 30874  004BB8  6FAE               	movwf	sprintf@sp& (0+255),b
 30875  004BBA  0E01               	movlw	high BluetoothInitialSetup@buf
 30876  004BBC  0100               	movlb	0	; () banked
 30877  004BBE  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 30878  004BC0  0EF0               	movlw	low STR_21
 30879  004BC2  0100               	movlb	0	; () banked
 30880  004BC4  6FB0               	movwf	sprintf@f& (0+255),b
 30881  004BC6  0EFF               	movlw	high STR_21
 30882  004BC8  0100               	movlb	0	; () banked
 30883  004BCA  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 30884  004BCC  EC27  F014         	call	_sprintf	;wreg free
 30885                           
 30886                           ;Bluetooth.c: 409: PIE1bits.RCIE = 0;
 30887  004BD0  9A9D               	bcf	3997,5,c	;volatile
 30888                           
 30889                           ;Bluetooth.c: 410: if(!StringContains(CommandString,buf))
 30890  004BD2  0E14               	movlw	low _CommandString
 30891  004BD4  0100               	movlb	0	; () banked
 30892  004BD6  6F60               	movwf	StringContains@This& (0+255),b
 30893  004BD8  0E04               	movlw	high _CommandString
 30894  004BDA  0100               	movlb	0	; () banked
 30895  004BDC  6F61               	movwf	(StringContains@This+1)& (0+255),b
 30896  004BDE  0E84               	movlw	low BluetoothInitialSetup@buf
 30897  004BE0  0100               	movlb	0	; () banked
 30898  004BE2  6F62               	movwf	StringContains@That& (0+255),b
 30899  004BE4  0E01               	movlw	high BluetoothInitialSetup@buf
 30900  004BE6  0100               	movlb	0	; () banked
 30901  004BE8  6F63               	movwf	(StringContains@That+1)& (0+255),b
 30902  004BEA  ECBA  F042         	call	_StringContains	;wreg free
 30903  004BEE  0900               	iorlw	0
 30904  004BF0  A4D8               	btfss	status,2,c
 30905  004BF2  D004               	goto	l11126
 30906                           
 30907                           ;Bluetooth.c: 411: {
 30908                           ;Bluetooth.c: 412: ok = 0;
 30909  004BF4  0E00               	movlw	0
 30910  004BF6  0101               	movlb	1	; () banked
 30911  004BF8  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 30912  004BFA  D000               	goto	l11126
 30913  004BFC                     l11126:
 30914                           
 30915                           ;Bluetooth.c: 413: }
 30916                           ;Bluetooth.c: 414: cleanBuffer(CommandString,CommandStringPos);
 30917  004BFC  0E14               	movlw	low _CommandString
 30918  004BFE  0100               	movlb	0	; () banked
 30919  004C00  6F60               	movwf	cleanBuffer@data& (0+255),b
 30920  004C02  0E04               	movlw	high _CommandString
 30921  004C04  0100               	movlb	0	; () banked
 30922  004C06  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 30923  004C08  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 30924  004C0C  0100               	movlb	0	; () banked
 30925  004C0E  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 30926  004C10  ECE6  F050         	call	_cleanBuffer	;wreg free
 30927                           
 30928                           ;Bluetooth.c: 415: CommandStringPos = 0;
 30929  004C14  0E00               	movlw	0
 30930  004C16  6E3E               	movwf	_CommandStringPos,c	;volatile
 30931                           
 30932                           ;Bluetooth.c: 417: if(ok)
 30933  004C18  0101               	movlb	1	; () banked
 30934  004C1A  51B9               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 30935  004C1C  0101               	movlb	1	; () banked
 30936  004C1E  B4D8               	btfsc	status,2,c
 30937  004C20  D002               	goto	l11136
 30938                           
 30939                           ; BSR set to: 1
 30940                           ;Bluetooth.c: 418: {
 30941                           ;Bluetooth.c: 419: return 1;
 30942  004C22  0E01               	movlw	1
 30943                           
 30944                           ; BSR set to: 1
 30945  004C24  0012               	return	
 30946  004C26                     l11136:
 30947                           
 30948                           ; BSR set to: 1
 30949                           ;Bluetooth.c: 420: }
 30950                           ;Bluetooth.c: 421: return 0;
 30951  004C26  0E00               	movlw	0
 30952  004C28  0012               	return	
 30953                           
 30954                           ; BSR set to: 1
 30955  004C2A  0012               	return		;funcret
 30956  004C2C                     __end_of_BluetoothInitialSetup:
 30957                           	opt stack 0
 30958                           tblptru	equ	0xFF8
 30959                           tblptrh	equ	0xFF7
 30960                           tblptrl	equ	0xFF6
 30961                           tablat	equ	0xFF5
 30962                           prodh	equ	0xFF4
 30963                           prodl	equ	0xFF3
 30964                           intcon	equ	0xFF2
 30965                           intcon2	equ	0xFF1
 30966                           indf0	equ	0xFEF
 30967                           postinc0	equ	0xFEE
 30968                           plusw0	equ	0xFEB
 30969                           fsr0h	equ	0xFEA
 30970                           fsr0l	equ	0xFE9
 30971                           wreg	equ	0xFE8
 30972                           indf1	equ	0xFE7
 30973                           postdec1	equ	0xFE5
 30974                           fsr1h	equ	0xFE2
 30975                           fsr1l	equ	0xFE1
 30976                           indf2	equ	0xFDF
 30977                           postinc2	equ	0xFDE
 30978                           postdec2	equ	0xFDD
 30979                           plusw2	equ	0xFDB
 30980                           fsr2h	equ	0xFDA
 30981                           fsr2l	equ	0xFD9
 30982                           status	equ	0xFD8
 30983                           
 30984 ;; *************** function _UARTstring *****************
 30985 ;; Defined at:
 30986 ;;		line 222 in file "UART.c"
 30987 ;; Parameters:    Size  Location     Type
 30988 ;;  data            2    1[BANK0 ] PTR unsigned char 
 30989 ;;		 -> UseBluetooth@buf(100), BluetoothInitialSetup@buf(50), ReceivedString(100), 
 30990 ;; Auto vars:     Size  Location     Type
 30991 ;;		None
 30992 ;; Return value:  Size  Location     Type
 30993 ;;		None               void
 30994 ;; Registers used:
 30995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30996 ;; Tracked objects:
 30997 ;;		On entry : 0/0
 30998 ;;		On exit  : 0/0
 30999 ;;		Unchanged: 0/0
 31000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31001 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31004 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31005 ;;Total ram usage:        2 bytes
 31006 ;; Hardware stack levels used:    1
 31007 ;; Hardware stack levels required when called:    6
 31008 ;; This function calls:
 31009 ;;		_UARTchar
 31010 ;; This function is called by:
 31011 ;;		_BluetoothInitialSetup
 31012 ;;		_UseBluetooth
 31013 ;; This function uses a non-reentrant model
 31014 ;;
 31015                           
 31016                           	psect	text70
 31017  00A7C6                     __ptext70:
 31018                           	opt stack 0
 31019  00A7C6                     _UARTstring:
 31020                           	opt stack 23
 31021                           
 31022                           ;UART.c: 224: while(*data != 0)
 31023                           
 31024                           ;incstack = 0
 31025  00A7C6  D00B               	goto	l10406
 31026  00A7C8                     l10402:
 31027                           
 31028                           ;UART.c: 225: {
 31029                           ;UART.c: 226: UARTchar(*data);
 31030  00A7C8  C061  FFD9         	movff	UARTstring@data,fsr2l
 31031  00A7CC  C062  FFDA         	movff	UARTstring@data+1,fsr2h
 31032  00A7D0  50DF               	movf	indf2,w,c
 31033  00A7D2  EC3D  F054         	call	_UARTchar
 31034                           
 31035                           ;UART.c: 227: *data++;
 31036  00A7D6  0100               	movlb	0	; () banked
 31037  00A7D8  4B61               	infsnz	UARTstring@data& (0+255),f,b
 31038  00A7DA  2B62               	incf	(UARTstring@data+1)& (0+255),f,b
 31039  00A7DC  D000               	goto	l10406
 31040  00A7DE                     l10406:
 31041  00A7DE  C061  FFD9         	movff	UARTstring@data,fsr2l
 31042  00A7E2  C062  FFDA         	movff	UARTstring@data+1,fsr2h
 31043  00A7E6  50DF               	movf	indf2,w,c
 31044  00A7E8  A4D8               	btfss	status,2,c
 31045  00A7EA  D7EE               	goto	l10402
 31046  00A7EC  0012               	return		;funcret
 31047  00A7EE                     __end_of_UARTstring:
 31048                           	opt stack 0
 31049                           tblptru	equ	0xFF8
 31050                           tblptrh	equ	0xFF7
 31051                           tblptrl	equ	0xFF6
 31052                           tablat	equ	0xFF5
 31053                           prodh	equ	0xFF4
 31054                           prodl	equ	0xFF3
 31055                           intcon	equ	0xFF2
 31056                           intcon2	equ	0xFF1
 31057                           indf0	equ	0xFEF
 31058                           postinc0	equ	0xFEE
 31059                           plusw0	equ	0xFEB
 31060                           fsr0h	equ	0xFEA
 31061                           fsr0l	equ	0xFE9
 31062                           wreg	equ	0xFE8
 31063                           indf1	equ	0xFE7
 31064                           postdec1	equ	0xFE5
 31065                           fsr1h	equ	0xFE2
 31066                           fsr1l	equ	0xFE1
 31067                           indf2	equ	0xFDF
 31068                           postinc2	equ	0xFDE
 31069                           postdec2	equ	0xFDD
 31070                           plusw2	equ	0xFDB
 31071                           fsr2h	equ	0xFDA
 31072                           fsr2l	equ	0xFD9
 31073                           status	equ	0xFD8
 31074                           
 31075 ;; *************** function _UARTchar *****************
 31076 ;; Defined at:
 31077 ;;		line 193 in file "UART.c"
 31078 ;; Parameters:    Size  Location     Type
 31079 ;;  data            1    wreg     unsigned char 
 31080 ;; Auto vars:     Size  Location     Type
 31081 ;;  data            1    0[BANK0 ] unsigned char 
 31082 ;; Return value:  Size  Location     Type
 31083 ;;		None               void
 31084 ;; Registers used:
 31085 ;;		wreg, status,2
 31086 ;; Tracked objects:
 31087 ;;		On entry : 0/0
 31088 ;;		On exit  : 0/0
 31089 ;;		Unchanged: 0/0
 31090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31094 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31095 ;;Total ram usage:        1 bytes
 31096 ;; Hardware stack levels used:    1
 31097 ;; Hardware stack levels required when called:    5
 31098 ;; This function calls:
 31099 ;;		Nothing
 31100 ;; This function is called by:
 31101 ;;		_main
 31102 ;;		_UARTstring
 31103 ;;		_UARTstringCRLN
 31104 ;;		_UARTcommandMenu
 31105 ;;		_UseBluetooth
 31106 ;; This function uses a non-reentrant model
 31107 ;;
 31108                           
 31109                           	psect	text71
 31110  00A87A                     __ptext71:
 31111                           	opt stack 0
 31112  00A87A                     _UARTchar:
 31113                           	opt stack 23
 31114                           
 31115                           ;incstack = 0
 31116                           ;UARTchar@data stored from wreg
 31117  00A87A  0100               	movlb	0	; () banked
 31118  00A87C  6F60               	movwf	UARTchar@data& (0+255),b
 31119                           
 31120                           ; BSR set to: 0
 31121                           ;UART.c: 195: if(data != 0)
 31122  00A87E  0100               	movlb	0	; () banked
 31123  00A880  5160               	movf	UARTchar@data& (0+255),w,b
 31124  00A882  0100               	movlb	0	; () banked
 31125  00A884  B4D8               	btfsc	status,2,c
 31126  00A886  0012               	return	
 31127                           
 31128                           ; BSR set to: 0
 31129                           ;UART.c: 196: {
 31130                           ;UART.c: 197: while(!TXSTAbits.TRMT);
 31131  00A888  D000               	goto	l770
 31132  00A88A                     l770:
 31133                           
 31134                           ; BSR set to: 0
 31135  00A88A  A2AC               	btfss	4012,1,c	;volatile
 31136  00A88C  D7FE               	goto	l770
 31137                           
 31138                           ; BSR set to: 0
 31139                           ;UART.c: 198: TXREG = data;
 31140                           
 31141                           ; BSR set to: 0
 31142  00A88E  C060  FFAD         	movff	UARTchar@data,4013	;volatile
 31143  00A892  0012               	return	
 31144                           
 31145                           ; BSR set to: 0
 31146                           
 31147                           ; BSR set to: 0
 31148  00A894  0012               	return		;funcret
 31149  00A896                     __end_of_UARTchar:
 31150                           	opt stack 0
 31151                           tblptru	equ	0xFF8
 31152                           tblptrh	equ	0xFF7
 31153                           tblptrl	equ	0xFF6
 31154                           tablat	equ	0xFF5
 31155                           prodh	equ	0xFF4
 31156                           prodl	equ	0xFF3
 31157                           intcon	equ	0xFF2
 31158                           intcon2	equ	0xFF1
 31159                           indf0	equ	0xFEF
 31160                           postinc0	equ	0xFEE
 31161                           plusw0	equ	0xFEB
 31162                           fsr0h	equ	0xFEA
 31163                           fsr0l	equ	0xFE9
 31164                           wreg	equ	0xFE8
 31165                           indf1	equ	0xFE7
 31166                           postdec1	equ	0xFE5
 31167                           fsr1h	equ	0xFE2
 31168                           fsr1l	equ	0xFE1
 31169                           indf2	equ	0xFDF
 31170                           postinc2	equ	0xFDE
 31171                           postdec2	equ	0xFDD
 31172                           plusw2	equ	0xFDB
 31173                           fsr2h	equ	0xFDA
 31174                           fsr2l	equ	0xFD9
 31175                           status	equ	0xFD8
 31176                           
 31177 ;; *************** function _StringContainsCaseInsensitive *****************
 31178 ;; Defined at:
 31179 ;;		line 351 in file "MISC.c"
 31180 ;; Parameters:    Size  Location     Type
 31181 ;;  This            2    3[BANK0 ] PTR const unsigned char 
 31182 ;;		 -> Conf2_Channels(4), Conf1_Channels(4), CommandString(100), main@BluetoothString(100), 
 31183 ;;  That            2    5[BANK0 ] PTR const unsigned char 
 31184 ;;		 -> STR_64(7), STR_63(9), STR_62(7), STR_48(4), 
 31185 ;;		 -> STR_47(13), STR_26(4), STR_24(6), STR_22(6), 
 31186 ;;		 -> UseBluetooth@rfchannelSTR(10), BluetoothInitialSetup@buf(50), 
 31187 ;; Auto vars:     Size  Location     Type
 31188 ;;  i               1   13[BANK0 ] unsigned char 
 31189 ;;  tempThat        1   12[BANK0 ] unsigned char 
 31190 ;;  tempThis        1   11[BANK0 ] unsigned char 
 31191 ;;  MatchCount      1   10[BANK0 ] unsigned char 
 31192 ;;  MatchAmount     1    9[BANK0 ] unsigned char 
 31193 ;; Return value:  Size  Location     Type
 31194 ;;                  1    wreg      unsigned char 
 31195 ;; Registers used:
 31196 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31197 ;; Tracked objects:
 31198 ;;		On entry : 0/0
 31199 ;;		On exit  : 0/0
 31200 ;;		Unchanged: 0/0
 31201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31202 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31203 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31204 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31205 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31206 ;;Total ram usage:       11 bytes
 31207 ;; Hardware stack levels used:    1
 31208 ;; Hardware stack levels required when called:    6
 31209 ;; This function calls:
 31210 ;;		_lowercaseChar
 31211 ;; This function is called by:
 31212 ;;		_BluetoothInitialSetup
 31213 ;;		_UseBluetooth
 31214 ;; This function uses a non-reentrant model
 31215 ;;
 31216                           
 31217                           	psect	text72
 31218  0076DA                     __ptext72:
 31219                           	opt stack 0
 31220  0076DA                     _StringContainsCaseInsensitive:
 31221                           	opt stack 23
 31222                           
 31223                           ;MISC.c: 353: unsigned char tempThis,
 31224                           ;MISC.c: 354: tempThat;
 31225                           ;MISC.c: 355: unsigned char MatchCount = 0;
 31226                           
 31227                           ; BSR set to: 0
 31228                           ;incstack = 0
 31229  0076DA  0E00               	movlw	0
 31230  0076DC  0100               	movlb	0	; () banked
 31231  0076DE  6F6A               	movwf	StringContainsCaseInsensitive@MatchCount& (0+255),b
 31232                           
 31233                           ;MISC.c: 356: unsigned char MatchAmount = 0;
 31234  0076E0  0E00               	movlw	0
 31235  0076E2  0100               	movlb	0	; () banked
 31236  0076E4  6F69               	movwf	StringContainsCaseInsensitive@MatchAmount& (0+255),b
 31237                           
 31238                           ;MISC.c: 357: unsigned char i = 0;
 31239  0076E6  0E00               	movlw	0
 31240  0076E8  0100               	movlb	0	; () banked
 31241  0076EA  6F6D               	movwf	StringContainsCaseInsensitive@i& (0+255),b
 31242                           
 31243                           ;MISC.c: 359: for(i=0;i<254;i++)
 31244  0076EC  0E00               	movlw	0
 31245  0076EE  0100               	movlb	0	; () banked
 31246  0076F0  6F6D               	movwf	StringContainsCaseInsensitive@i& (0+255),b
 31247  0076F2                     l10278:
 31248                           
 31249                           ; BSR set to: 0
 31250  0076F2  0EFD               	movlw	253
 31251  0076F4  0100               	movlb	0	; () banked
 31252  0076F6  656D               	cpfsgt	StringContainsCaseInsensitive@i& (0+255),b
 31253  0076F8  D001               	goto	l10282
 31254                           
 31255                           ; BSR set to: 0
 31256  0076FA  D0AF               	goto	l10324
 31257  0076FC                     l10282:
 31258                           
 31259                           ; BSR set to: 0
 31260                           ;MISC.c: 360: {
 31261                           ;MISC.c: 361: if(That[i] == 0)
 31262  0076FC  0100               	movlb	0	; () banked
 31263  0076FE  516D               	movf	StringContainsCaseInsensitive@i& (0+255),w,b
 31264  007700  0D01               	mullw	1
 31265  007702  C065  F067         	movff	StringContainsCaseInsensitive@That,??_StringContainsCaseInsensitive
 31266  007706  C066  F068         	movff	StringContainsCaseInsensitive@That+1,??_StringContainsCaseInsensitive+1
 31267  00770A  50F3               	movf	prodl,w,c
 31268  00770C  0100               	movlb	0	; () banked
 31269  00770E  2767               	addwf	??_StringContainsCaseInsensitive& (0+255),f,b
 31270  007710  50F4               	movf	prodh,w,c
 31271  007712  0100               	movlb	0	; () banked
 31272  007714  2368               	addwfc	(??_StringContainsCaseInsensitive+1)& (0+255),f,b
 31273  007716  C067  FFF6         	movff	??_StringContainsCaseInsensitive,tblptrl
 31274  00771A  C068  FFF7         	movff	??_StringContainsCaseInsensitive+1,tblptrh
 31275  00771E  0E00               	movlw	low (__mediumconst shr (0+16))
 31276  007720  6EF8               	movwf	tblptru,c
 31277  007722  0E0F               	movlw	(high __ramtop+-1)
 31278  007724  64F7               	cpfsgt	tblptrh,c
 31279  007726  D003               	bra	u10647
 31280  007728  0008               	tblrd		*
 31281  00772A  50F5               	movf	tablat,w,c
 31282  00772C  D005               	bra	u10640
 31283  00772E                     u10647:
 31284  00772E  CFF6 FFE9          	movff	tblptrl,fsr0l
 31285  007732  CFF7 FFEA          	movff	tblptrh,fsr0h
 31286  007736  50EF               	movf	indf0,w,c
 31287  007738                     u10640:
 31288  007738  0900               	iorlw	0
 31289  00773A  A4D8               	btfss	status,2,c
 31290  00773C  D003               	goto	l10286
 31291                           
 31292                           ;MISC.c: 362: {
 31293                           ;MISC.c: 363: MatchAmount = i;
 31294  00773E  C06D  F069         	movff	StringContainsCaseInsensitive@i,StringContainsCaseInsensitive@MatchAmount
 31295                           
 31296                           ;MISC.c: 364: break;
 31297  007742  D08B               	goto	l10324
 31298  007744                     l10286:
 31299  007744  0100               	movlb	0	; () banked
 31300  007746  2B6D               	incf	StringContainsCaseInsensitive@i& (0+255),f,b
 31301  007748  D7D4               	goto	l10278
 31302                           
 31303                           ; BSR set to: 0
 31304                           ;MISC.c: 365: }
 31305                           ;MISC.c: 366: }
 31306                           ;MISC.c: 367: while(*This != 0)
 31307                           
 31308                           ; BSR set to: 0
 31309  00774A  D087               	goto	l10324
 31310  00774C                     l10290:
 31311                           
 31312                           ;MISC.c: 368: {
 31313                           ;MISC.c: 369: tempThis = *This;
 31314  00774C  C063  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 31315  007750  C064  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 31316  007754  0E00               	movlw	low (__mediumconst shr (0+16))
 31317  007756  6EF8               	movwf	tblptru,c
 31318  007758  0E0F               	movlw	(high __ramtop+-1)
 31319  00775A  64F7               	cpfsgt	tblptrh,c
 31320  00775C  D003               	bra	u10677
 31321  00775E  0008               	tblrd		*
 31322  007760  50F5               	movf	tablat,w,c
 31323  007762  D005               	bra	u10670
 31324  007764                     u10677:
 31325  007764  CFF6 FFE9          	movff	tblptrl,fsr0l
 31326  007768  CFF7 FFEA          	movff	tblptrh,fsr0h
 31327  00776C  50EF               	movf	indf0,w,c
 31328  00776E                     u10670:
 31329  00776E  0100               	movlb	0	; () banked
 31330  007770  6F6B               	movwf	StringContainsCaseInsensitive@tempThis& (0+255),b
 31331                           
 31332                           ;MISC.c: 370: tempThat = *That;
 31333  007772  C065  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
 31334  007776  C066  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
 31335  00777A  0E00               	movlw	low (__mediumconst shr (0+16))
 31336  00777C  6EF8               	movwf	tblptru,c
 31337  00777E  0E0F               	movlw	(high __ramtop+-1)
 31338  007780  64F7               	cpfsgt	tblptrh,c
 31339  007782  D003               	bra	u10687
 31340  007784  0008               	tblrd		*
 31341  007786  50F5               	movf	tablat,w,c
 31342  007788  D005               	bra	u10680
 31343  00778A                     u10687:
 31344  00778A  CFF6 FFE9          	movff	tblptrl,fsr0l
 31345  00778E  CFF7 FFEA          	movff	tblptrh,fsr0h
 31346  007792  50EF               	movf	indf0,w,c
 31347  007794                     u10680:
 31348  007794  0100               	movlb	0	; () banked
 31349  007796  6F6C               	movwf	StringContainsCaseInsensitive@tempThat& (0+255),b
 31350                           
 31351                           ; BSR set to: 0
 31352                           ;MISC.c: 371: lowercaseChar(&tempThis);
 31353  007798  0E6B               	movlw	low StringContainsCaseInsensitive@tempThis
 31354  00779A  0100               	movlb	0	; () banked
 31355  00779C  6F60               	movwf	lowercaseChar@Input& (0+255),b
 31356  00779E  0E00               	movlw	high StringContainsCaseInsensitive@tempThis
 31357  0077A0  0100               	movlb	0	; () banked
 31358  0077A2  6F61               	movwf	(lowercaseChar@Input+1)& (0+255),b
 31359  0077A4  ECB8  F053         	call	_lowercaseChar	;wreg free
 31360                           
 31361                           ;MISC.c: 372: lowercaseChar(&tempThat);
 31362  0077A8  0E6C               	movlw	low StringContainsCaseInsensitive@tempThat
 31363  0077AA  0100               	movlb	0	; () banked
 31364  0077AC  6F60               	movwf	lowercaseChar@Input& (0+255),b
 31365  0077AE  0E00               	movlw	high StringContainsCaseInsensitive@tempThat
 31366  0077B0  0100               	movlb	0	; () banked
 31367  0077B2  6F61               	movwf	(lowercaseChar@Input+1)& (0+255),b
 31368  0077B4  ECB8  F053         	call	_lowercaseChar	;wreg free
 31369                           
 31370                           ;MISC.c: 374: if(tempThis == tempThat)
 31371  0077B8  0100               	movlb	0	; () banked
 31372  0077BA  516C               	movf	StringContainsCaseInsensitive@tempThat& (0+255),w,b
 31373  0077BC  0100               	movlb	0	; () banked
 31374  0077BE  196B               	xorwf	StringContainsCaseInsensitive@tempThis& (0+255),w,b
 31375  0077C0  A4D8               	btfss	status,2,c
 31376  0077C2  D03A               	goto	l10318
 31377                           
 31378                           ; BSR set to: 0
 31379                           ;MISC.c: 375: {
 31380                           ;MISC.c: 376: MatchCount++;
 31381  0077C4  0100               	movlb	0	; () banked
 31382  0077C6  2B6A               	incf	StringContainsCaseInsensitive@MatchCount& (0+255),f,b
 31383                           
 31384                           ;MISC.c: 377: That++;
 31385  0077C8  0100               	movlb	0	; () banked
 31386  0077CA  4B65               	infsnz	StringContainsCaseInsensitive@That& (0+255),f,b
 31387  0077CC  2B66               	incf	(StringContainsCaseInsensitive@That+1)& (0+255),f,b
 31388                           
 31389                           ; BSR set to: 0
 31390                           ;MISC.c: 378: if(*That == 0)
 31391  0077CE  C065  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
 31392  0077D2  C066  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
 31393  0077D6  0E00               	movlw	low (__mediumconst shr (0+16))
 31394  0077D8  6EF8               	movwf	tblptru,c
 31395  0077DA  0E0F               	movlw	(high __ramtop+-1)
 31396  0077DC  64F7               	cpfsgt	tblptrh,c
 31397  0077DE  D003               	bra	u10707
 31398  0077E0  0008               	tblrd		*
 31399  0077E2  50F5               	movf	tablat,w,c
 31400  0077E4  D005               	bra	u10700
 31401  0077E6                     u10707:
 31402  0077E6  CFF6 FFE9          	movff	tblptrl,fsr0l
 31403  0077EA  CFF7 FFEA          	movff	tblptrh,fsr0h
 31404  0077EE  50EF               	movf	indf0,w,c
 31405  0077F0                     u10700:
 31406  0077F0  0900               	iorlw	0
 31407  0077F2  A4D8               	btfss	status,2,c
 31408  0077F4  D00A               	goto	l10312
 31409                           
 31410                           ;MISC.c: 379: {
 31411                           ;MISC.c: 380: if(MatchAmount == MatchCount)
 31412  0077F6  0100               	movlb	0	; () banked
 31413  0077F8  516A               	movf	StringContainsCaseInsensitive@MatchCount& (0+255),w,b
 31414  0077FA  0100               	movlb	0	; () banked
 31415  0077FC  1969               	xorwf	StringContainsCaseInsensitive@MatchAmount& (0+255),w,b
 31416  0077FE  A4D8               	btfss	status,2,c
 31417  007800  D002               	goto	l10308
 31418                           
 31419                           ; BSR set to: 0
 31420                           ;MISC.c: 381: {
 31421                           ;MISC.c: 382: return 1;
 31422  007802  0E01               	movlw	1
 31423                           
 31424                           ; BSR set to: 0
 31425  007804  0012               	return	
 31426  007806                     l10308:
 31427                           
 31428                           ; BSR set to: 0
 31429                           ;MISC.c: 383: }
 31430                           ;MISC.c: 384: return 0;
 31431  007806  0E00               	movlw	0
 31432                           
 31433                           ; BSR set to: 0
 31434  007808  0012               	return	
 31435  00780A                     l10312:
 31436                           
 31437                           ;MISC.c: 385: }
 31438                           ;MISC.c: 386: if(*This == 0)
 31439  00780A  C063  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 31440  00780E  C064  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 31441  007812  0E00               	movlw	low (__mediumconst shr (0+16))
 31442  007814  6EF8               	movwf	tblptru,c
 31443  007816  0E0F               	movlw	(high __ramtop+-1)
 31444  007818  64F7               	cpfsgt	tblptrh,c
 31445  00781A  D003               	bra	u10737
 31446  00781C  0008               	tblrd		*
 31447  00781E  50F5               	movf	tablat,w,c
 31448  007820  D005               	bra	u10730
 31449  007822                     u10737:
 31450  007822  CFF6 FFE9          	movff	tblptrl,fsr0l
 31451  007826  CFF7 FFEA          	movff	tblptrh,fsr0h
 31452  00782A  50EF               	movf	indf0,w,c
 31453  00782C                     u10730:
 31454  00782C  0900               	iorlw	0
 31455  00782E  A4D8               	btfss	status,2,c
 31456  007830  D010               	goto	l10322
 31457                           
 31458                           ;MISC.c: 387: {
 31459                           ;MISC.c: 388: return 0;
 31460  007832  0E00               	movlw	0
 31461  007834  0012               	return	
 31462                           
 31463                           ;MISC.c: 389: }
 31464                           ;MISC.c: 390: }
 31465  007836  D00D               	goto	l10322
 31466  007838                     l10318:
 31467                           
 31468                           ;MISC.c: 391: else
 31469                           ;MISC.c: 392: {
 31470                           ;MISC.c: 393: That -= MatchCount;
 31471  007838  0100               	movlb	0	; () banked
 31472  00783A  516A               	movf	StringContainsCaseInsensitive@MatchCount& (0+255),w,b
 31473  00783C  0D01               	mullw	1
 31474  00783E  50F3               	movf	prodl,w,c
 31475  007840  0100               	movlb	0	; () banked
 31476  007842  5F65               	subwf	StringContainsCaseInsensitive@That& (0+255),f,b
 31477  007844  50F4               	movf	prodh,w,c
 31478  007846  0100               	movlb	0	; () banked
 31479  007848  5B66               	subwfb	(StringContainsCaseInsensitive@That+1)& (0+255),f,b
 31480                           
 31481                           ; BSR set to: 0
 31482                           ;MISC.c: 394: MatchCount = 0;
 31483  00784A  0E00               	movlw	0
 31484  00784C  0100               	movlb	0	; () banked
 31485  00784E  6F6A               	movwf	StringContainsCaseInsensitive@MatchCount& (0+255),b
 31486  007850  D000               	goto	l10322
 31487  007852                     l10322:
 31488                           
 31489                           ;MISC.c: 395: }
 31490                           ;MISC.c: 396: This++;
 31491  007852  0100               	movlb	0	; () banked
 31492  007854  4B63               	infsnz	StringContainsCaseInsensitive@This& (0+255),f,b
 31493  007856  2B64               	incf	(StringContainsCaseInsensitive@This+1)& (0+255),f,b
 31494  007858  D000               	goto	l10324
 31495  00785A                     l10324:
 31496  00785A  C063  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 31497  00785E  C064  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 31498  007862  0E00               	movlw	low (__mediumconst shr (0+16))
 31499  007864  6EF8               	movwf	tblptru,c
 31500  007866  0E0F               	movlw	(high __ramtop+-1)
 31501  007868  64F7               	cpfsgt	tblptrh,c
 31502  00786A  D003               	bra	u10757
 31503  00786C  0008               	tblrd		*
 31504  00786E  50F5               	movf	tablat,w,c
 31505  007870  D005               	bra	u10750
 31506  007872                     u10757:
 31507  007872  CFF6 FFE9          	movff	tblptrl,fsr0l
 31508  007876  CFF7 FFEA          	movff	tblptrh,fsr0h
 31509  00787A  50EF               	movf	indf0,w,c
 31510  00787C                     u10750:
 31511  00787C  0900               	iorlw	0
 31512  00787E  A4D8               	btfss	status,2,c
 31513  007880  D765               	goto	l10290
 31514                           
 31515                           ;MISC.c: 397: }
 31516                           ;MISC.c: 398: return 0;
 31517  007882  0E00               	movlw	0
 31518  007884  0012               	return	
 31519  007886  0012               	return		;funcret
 31520  007888                     __end_of_StringContainsCaseInsensitive:
 31521                           	opt stack 0
 31522                           tblptru	equ	0xFF8
 31523                           tblptrh	equ	0xFF7
 31524                           tblptrl	equ	0xFF6
 31525                           tablat	equ	0xFF5
 31526                           prodh	equ	0xFF4
 31527                           prodl	equ	0xFF3
 31528                           intcon	equ	0xFF2
 31529                           intcon2	equ	0xFF1
 31530                           indf0	equ	0xFEF
 31531                           postinc0	equ	0xFEE
 31532                           plusw0	equ	0xFEB
 31533                           fsr0h	equ	0xFEA
 31534                           fsr0l	equ	0xFE9
 31535                           wreg	equ	0xFE8
 31536                           indf1	equ	0xFE7
 31537                           postdec1	equ	0xFE5
 31538                           fsr1h	equ	0xFE2
 31539                           fsr1l	equ	0xFE1
 31540                           indf2	equ	0xFDF
 31541                           postinc2	equ	0xFDE
 31542                           postdec2	equ	0xFDD
 31543                           plusw2	equ	0xFDB
 31544                           fsr2h	equ	0xFDA
 31545                           fsr2l	equ	0xFD9
 31546                           status	equ	0xFD8
 31547                           
 31548 ;; *************** function _lowercaseChar *****************
 31549 ;; Defined at:
 31550 ;;		line 423 in file "MISC.c"
 31551 ;; Parameters:    Size  Location     Type
 31552 ;;  Input           2    0[BANK0 ] PTR unsigned char 
 31553 ;;		 -> GetNumberUnsigned@tempThis(1), GetNumber@tempThis(1), StringContainsCaseInsensitive@tempThat(1), StringContainsC
      +aseInsensitive@tempThis(1), 
 31554 ;;		 -> StringMatchCaseInsensitive@tempThat(1), StringMatchCaseInsensitive@tempThis(1), 
 31555 ;; Auto vars:     Size  Location     Type
 31556 ;;		None
 31557 ;; Return value:  Size  Location     Type
 31558 ;;		None               void
 31559 ;; Registers used:
 31560 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31561 ;; Tracked objects:
 31562 ;;		On entry : 0/0
 31563 ;;		On exit  : 0/0
 31564 ;;		Unchanged: 0/0
 31565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31566 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31568 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31569 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31570 ;;Total ram usage:        3 bytes
 31571 ;; Hardware stack levels used:    1
 31572 ;; Hardware stack levels required when called:    5
 31573 ;; This function calls:
 31574 ;;		Nothing
 31575 ;; This function is called by:
 31576 ;;		_StringMatchCaseInsensitive
 31577 ;;		_StringContainsCaseInsensitive
 31578 ;;		_GetNumber
 31579 ;;		_GetNumberUnsigned
 31580 ;; This function uses a non-reentrant model
 31581 ;;
 31582                           
 31583                           	psect	text73
 31584  00A770                     __ptext73:
 31585                           	opt stack 0
 31586  00A770                     _lowercaseChar:
 31587                           	opt stack 23
 31588                           
 31589                           ;MISC.c: 425: if((*Input >= 65) && (*Input <= 90 ))
 31590                           
 31591                           ;incstack = 0
 31592  00A770  C060  FFD9         	movff	lowercaseChar@Input,fsr2l
 31593  00A774  C061  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 31594  00A778  0E40               	movlw	64
 31595  00A77A  64DF               	cpfsgt	indf2,c
 31596  00A77C  0012               	return	
 31597  00A77E  C060  FFD9         	movff	lowercaseChar@Input,fsr2l
 31598  00A782  C061  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 31599  00A786  0E5B               	movlw	91
 31600  00A788  60DF               	cpfslt	indf2,c
 31601  00A78A  0012               	return	
 31602                           
 31603                           ;MISC.c: 426: {
 31604                           ;MISC.c: 427: *Input += 32;
 31605  00A78C  C060  FFD9         	movff	lowercaseChar@Input,fsr2l
 31606  00A790  C061  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 31607  00A794  0E20               	movlw	32
 31608  00A796  26DF               	addwf	indf2,f,c
 31609  00A798  0012               	return	
 31610  00A79A  0012               	return		;funcret
 31611  00A79C                     __end_of_lowercaseChar:
 31612                           	opt stack 0
 31613                           tblptru	equ	0xFF8
 31614                           tblptrh	equ	0xFF7
 31615                           tblptrl	equ	0xFF6
 31616                           tablat	equ	0xFF5
 31617                           prodh	equ	0xFF4
 31618                           prodl	equ	0xFF3
 31619                           intcon	equ	0xFF2
 31620                           intcon2	equ	0xFF1
 31621                           indf0	equ	0xFEF
 31622                           postinc0	equ	0xFEE
 31623                           plusw0	equ	0xFEB
 31624                           fsr0h	equ	0xFEA
 31625                           fsr0l	equ	0xFE9
 31626                           wreg	equ	0xFE8
 31627                           indf1	equ	0xFE7
 31628                           postdec1	equ	0xFE5
 31629                           fsr1h	equ	0xFE2
 31630                           fsr1l	equ	0xFE1
 31631                           indf2	equ	0xFDF
 31632                           postinc2	equ	0xFDE
 31633                           postdec2	equ	0xFDD
 31634                           plusw2	equ	0xFDB
 31635                           fsr2h	equ	0xFDA
 31636                           fsr2l	equ	0xFD9
 31637                           status	equ	0xFD8
 31638                           
 31639 ;; *************** function _EnterCommandMode *****************
 31640 ;; Defined at:
 31641 ;;		line 141 in file "Bluetooth.c"
 31642 ;; Parameters:    Size  Location     Type
 31643 ;;		None
 31644 ;; Auto vars:     Size  Location     Type
 31645 ;;  buf            50    0[BANK1 ] unsigned char [50]
 31646 ;;  count           1   50[BANK1 ] unsigned char 
 31647 ;; Return value:  Size  Location     Type
 31648 ;;                  1    wreg      unsigned char 
 31649 ;; Registers used:
 31650 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31651 ;; Tracked objects:
 31652 ;;		On entry : 0/0
 31653 ;;		On exit  : 0/0
 31654 ;;		Unchanged: 0/0
 31655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31657 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31659 ;;      Totals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31660 ;;Total ram usage:       51 bytes
 31661 ;; Hardware stack levels used:    1
 31662 ;; Hardware stack levels required when called:    9
 31663 ;; This function calls:
 31664 ;;		_BlueConnected
 31665 ;;		_ClearUSART
 31666 ;;		_ResetBlue
 31667 ;;		_StringContains
 31668 ;;		_UARTstring_CONST
 31669 ;;		_cleanBuffer
 31670 ;;		_delayUS
 31671 ;;		_sprintf
 31672 ;; This function is called by:
 31673 ;;		_BluetoothInitialSetup
 31674 ;; This function uses a non-reentrant model
 31675 ;;
 31676                           
 31677                           	psect	text74
 31678  008026                     __ptext74:
 31679                           	opt stack 0
 31680  008026                     _EnterCommandMode:
 31681                           	opt stack 19
 31682                           
 31683                           ;Bluetooth.c: 143: unsigned char count = 0;
 31684                           
 31685                           ;incstack = 0
 31686  008026  0E00               	movlw	0
 31687  008028  0101               	movlb	1	; () banked
 31688  00802A  6F32               	movwf	EnterCommandMode@count& (0+255),b
 31689                           
 31690                           ;Bluetooth.c: 144: unsigned char buf[50];
 31691                           ;Bluetooth.c: 145: while(BlueConnected())
 31692  00802C  D04D               	goto	l10470
 31693  00802E                     l10458:
 31694                           
 31695                           ;Bluetooth.c: 146: {
 31696                           ;Bluetooth.c: 147: ResetBlue();
 31697  00802E  EC31  F048         	call	_ResetBlue	;wreg free
 31698                           
 31699                           ;Bluetooth.c: 148: count++;
 31700  008032  0101               	movlb	1	; () banked
 31701  008034  2B32               	incf	EnterCommandMode@count& (0+255),f,b
 31702                           
 31703                           ; BSR set to: 1
 31704                           ;Bluetooth.c: 149: if(count > 4)
 31705  008036  0E04               	movlw	4
 31706  008038  0101               	movlb	1	; () banked
 31707  00803A  6532               	cpfsgt	EnterCommandMode@count& (0+255),b
 31708  00803C  D002               	goto	l10468
 31709                           
 31710                           ; BSR set to: 1
 31711                           ;Bluetooth.c: 150: {
 31712                           ;Bluetooth.c: 152: return 0;
 31713  00803E  0E00               	movlw	0
 31714                           
 31715                           ; BSR set to: 1
 31716  008040  0012               	return	
 31717  008042                     l10468:
 31718                           
 31719                           ; BSR set to: 1
 31720                           ;Bluetooth.c: 153: }
 31721                           ;Bluetooth.c: 154: delayUS(50000);
 31722  008042  0E50               	movlw	80
 31723  008044  0100               	movlb	0	; () banked
 31724  008046  6F60               	movwf	delayUS@US& (0+255),b
 31725  008048  0EC3               	movlw	195
 31726  00804A  6F61               	movwf	(delayUS@US+1)& (0+255),b
 31727  00804C  0E00               	movlw	0
 31728  00804E  6F62               	movwf	(delayUS@US+2)& (0+255),b
 31729  008050  0E00               	movlw	0
 31730  008052  6F63               	movwf	(delayUS@US+3)& (0+255),b
 31731  008054  EC3F  F051         	call	_delayUS	;wreg free
 31732                           
 31733                           ;Bluetooth.c: 155: delayUS(50000);
 31734  008058  0E50               	movlw	80
 31735  00805A  0100               	movlb	0	; () banked
 31736  00805C  6F60               	movwf	delayUS@US& (0+255),b
 31737  00805E  0EC3               	movlw	195
 31738  008060  6F61               	movwf	(delayUS@US+1)& (0+255),b
 31739  008062  0E00               	movlw	0
 31740  008064  6F62               	movwf	(delayUS@US+2)& (0+255),b
 31741  008066  0E00               	movlw	0
 31742  008068  6F63               	movwf	(delayUS@US+3)& (0+255),b
 31743  00806A  EC3F  F051         	call	_delayUS	;wreg free
 31744                           
 31745                           ;Bluetooth.c: 156: delayUS(50000);
 31746  00806E  0E50               	movlw	80
 31747  008070  0100               	movlb	0	; () banked
 31748  008072  6F60               	movwf	delayUS@US& (0+255),b
 31749  008074  0EC3               	movlw	195
 31750  008076  6F61               	movwf	(delayUS@US+1)& (0+255),b
 31751  008078  0E00               	movlw	0
 31752  00807A  6F62               	movwf	(delayUS@US+2)& (0+255),b
 31753  00807C  0E00               	movlw	0
 31754  00807E  6F63               	movwf	(delayUS@US+3)& (0+255),b
 31755  008080  EC3F  F051         	call	_delayUS	;wreg free
 31756                           
 31757                           ;Bluetooth.c: 157: delayUS(50000);
 31758  008084  0E50               	movlw	80
 31759  008086  0100               	movlb	0	; () banked
 31760  008088  6F60               	movwf	delayUS@US& (0+255),b
 31761  00808A  0EC3               	movlw	195
 31762  00808C  6F61               	movwf	(delayUS@US+1)& (0+255),b
 31763  00808E  0E00               	movlw	0
 31764  008090  6F62               	movwf	(delayUS@US+2)& (0+255),b
 31765  008092  0E00               	movlw	0
 31766  008094  6F63               	movwf	(delayUS@US+3)& (0+255),b
 31767  008096  EC3F  F051         	call	_delayUS	;wreg free
 31768                           
 31769                           ;Bluetooth.c: 158: delayUS(50000);
 31770  00809A  0E50               	movlw	80
 31771  00809C  0100               	movlb	0	; () banked
 31772  00809E  6F60               	movwf	delayUS@US& (0+255),b
 31773  0080A0  0EC3               	movlw	195
 31774  0080A2  6F61               	movwf	(delayUS@US+1)& (0+255),b
 31775  0080A4  0E00               	movlw	0
 31776  0080A6  6F62               	movwf	(delayUS@US+2)& (0+255),b
 31777  0080A8  0E00               	movlw	0
 31778  0080AA  6F63               	movwf	(delayUS@US+3)& (0+255),b
 31779  0080AC  EC3F  F051         	call	_delayUS	;wreg free
 31780                           
 31781                           ;Bluetooth.c: 159: delayUS(50000);
 31782  0080B0  0E50               	movlw	80
 31783  0080B2  0100               	movlb	0	; () banked
 31784  0080B4  6F60               	movwf	delayUS@US& (0+255),b
 31785  0080B6  0EC3               	movlw	195
 31786  0080B8  6F61               	movwf	(delayUS@US+1)& (0+255),b
 31787  0080BA  0E00               	movlw	0
 31788  0080BC  6F62               	movwf	(delayUS@US+2)& (0+255),b
 31789  0080BE  0E00               	movlw	0
 31790  0080C0  6F63               	movwf	(delayUS@US+3)& (0+255),b
 31791  0080C2  EC3F  F051         	call	_delayUS	;wreg free
 31792  0080C6  D000               	goto	l10470
 31793  0080C8                     l10470:
 31794  0080C8  ECFF  F054         	call	_BlueConnected	;wreg free
 31795  0080CC  0900               	iorlw	0
 31796  0080CE  A4D8               	btfss	status,2,c
 31797  0080D0  D7AE               	goto	l10458
 31798                           
 31799                           ;Bluetooth.c: 160: }
 31800                           ;Bluetooth.c: 162: ClearUSART();
 31801  0080D2  ECC2  F054         	call	_ClearUSART	;wreg free
 31802                           
 31803                           ;Bluetooth.c: 163: PIR1bits.RCIF = 0;
 31804  0080D6  9A9E               	bcf	3998,5,c	;volatile
 31805                           
 31806                           ;Bluetooth.c: 164: PIE1bits.RCIE = 1;
 31807  0080D8  8A9D               	bsf	3997,5,c	;volatile
 31808                           
 31809                           ;Bluetooth.c: 165: UARTstring_CONST("$$$");
 31810  0080DA  0EE0               	movlw	low STR_6
 31811  0080DC  0100               	movlb	0	; () banked
 31812  0080DE  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 31813  0080E0  0EFF               	movlw	high STR_6
 31814  0080E2  0100               	movlb	0	; () banked
 31815  0080E4  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 31816  0080E6  EC42  F053         	call	_UARTstring_CONST	;wreg free
 31817                           
 31818                           ;Bluetooth.c: 166: delayUS(50000);
 31819  0080EA  0E50               	movlw	80
 31820  0080EC  0100               	movlb	0	; () banked
 31821  0080EE  6F60               	movwf	delayUS@US& (0+255),b
 31822  0080F0  0EC3               	movlw	195
 31823  0080F2  6F61               	movwf	(delayUS@US+1)& (0+255),b
 31824  0080F4  0E00               	movlw	0
 31825  0080F6  6F62               	movwf	(delayUS@US+2)& (0+255),b
 31826  0080F8  0E00               	movlw	0
 31827  0080FA  6F63               	movwf	(delayUS@US+3)& (0+255),b
 31828  0080FC  EC3F  F051         	call	_delayUS	;wreg free
 31829                           
 31830                           ;Bluetooth.c: 167: PIE1bits.RCIE = 0;
 31831  008100  9A9D               	bcf	3997,5,c	;volatile
 31832                           
 31833                           ;Bluetooth.c: 168: sprintf(buf,"CMD");
 31834  008102  0E00               	movlw	low EnterCommandMode@buf
 31835  008104  0100               	movlb	0	; () banked
 31836  008106  6FAE               	movwf	sprintf@sp& (0+255),b
 31837  008108  0E01               	movlw	high EnterCommandMode@buf
 31838  00810A  0100               	movlb	0	; () banked
 31839  00810C  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 31840  00810E  0EEC               	movlw	low STR_7
 31841  008110  0100               	movlb	0	; () banked
 31842  008112  6FB0               	movwf	sprintf@f& (0+255),b
 31843  008114  0EFF               	movlw	high STR_7
 31844  008116  0100               	movlb	0	; () banked
 31845  008118  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 31846  00811A  EC27  F014         	call	_sprintf	;wreg free
 31847                           
 31848                           ;Bluetooth.c: 169: if(StringContains(CommandString,buf))
 31849  00811E  0E14               	movlw	low _CommandString
 31850  008120  0100               	movlb	0	; () banked
 31851  008122  6F60               	movwf	StringContains@This& (0+255),b
 31852  008124  0E04               	movlw	high _CommandString
 31853  008126  0100               	movlb	0	; () banked
 31854  008128  6F61               	movwf	(StringContains@This+1)& (0+255),b
 31855  00812A  0E00               	movlw	low EnterCommandMode@buf
 31856  00812C  0100               	movlb	0	; () banked
 31857  00812E  6F62               	movwf	StringContains@That& (0+255),b
 31858  008130  0E01               	movlw	high EnterCommandMode@buf
 31859  008132  0100               	movlb	0	; () banked
 31860  008134  6F63               	movwf	(StringContains@That+1)& (0+255),b
 31861  008136  ECBA  F042         	call	_StringContains	;wreg free
 31862  00813A  0900               	iorlw	0
 31863  00813C  B4D8               	btfsc	status,2,c
 31864  00813E  D010               	goto	l10496
 31865                           
 31866                           ;Bluetooth.c: 170: {
 31867                           ;Bluetooth.c: 171: cleanBuffer(CommandString,CommandStringPos);
 31868  008140  0E14               	movlw	low _CommandString
 31869  008142  0100               	movlb	0	; () banked
 31870  008144  6F60               	movwf	cleanBuffer@data& (0+255),b
 31871  008146  0E04               	movlw	high _CommandString
 31872  008148  0100               	movlb	0	; () banked
 31873  00814A  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 31874  00814C  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 31875  008150  0100               	movlb	0	; () banked
 31876  008152  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 31877  008154  ECE6  F050         	call	_cleanBuffer	;wreg free
 31878                           
 31879                           ;Bluetooth.c: 172: CommandStringPos = 0;
 31880  008158  0E00               	movlw	0
 31881  00815A  6E3E               	movwf	_CommandStringPos,c	;volatile
 31882                           
 31883                           ;Bluetooth.c: 173: return 1;
 31884  00815C  0E01               	movlw	1
 31885  00815E  0012               	return	
 31886  008160                     l10496:
 31887                           
 31888                           ;Bluetooth.c: 174: }
 31889                           ;Bluetooth.c: 175: cleanBuffer(CommandString,CommandStringPos);
 31890  008160  0E14               	movlw	low _CommandString
 31891  008162  0100               	movlb	0	; () banked
 31892  008164  6F60               	movwf	cleanBuffer@data& (0+255),b
 31893  008166  0E04               	movlw	high _CommandString
 31894  008168  0100               	movlb	0	; () banked
 31895  00816A  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 31896  00816C  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 31897  008170  0100               	movlb	0	; () banked
 31898  008172  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 31899  008174  ECE6  F050         	call	_cleanBuffer	;wreg free
 31900                           
 31901                           ;Bluetooth.c: 176: CommandStringPos = 0;
 31902  008178  0E00               	movlw	0
 31903  00817A  6E3E               	movwf	_CommandStringPos,c	;volatile
 31904                           
 31905                           ;Bluetooth.c: 177: return 0;
 31906  00817C  0E00               	movlw	0
 31907  00817E  0012               	return	
 31908  008180  0012               	return		;funcret
 31909  008182                     __end_of_EnterCommandMode:
 31910                           	opt stack 0
 31911                           tblptru	equ	0xFF8
 31912                           tblptrh	equ	0xFF7
 31913                           tblptrl	equ	0xFF6
 31914                           tablat	equ	0xFF5
 31915                           prodh	equ	0xFF4
 31916                           prodl	equ	0xFF3
 31917                           intcon	equ	0xFF2
 31918                           intcon2	equ	0xFF1
 31919                           indf0	equ	0xFEF
 31920                           postinc0	equ	0xFEE
 31921                           plusw0	equ	0xFEB
 31922                           fsr0h	equ	0xFEA
 31923                           fsr0l	equ	0xFE9
 31924                           wreg	equ	0xFE8
 31925                           indf1	equ	0xFE7
 31926                           postdec1	equ	0xFE5
 31927                           fsr1h	equ	0xFE2
 31928                           fsr1l	equ	0xFE1
 31929                           indf2	equ	0xFDF
 31930                           postinc2	equ	0xFDE
 31931                           postdec2	equ	0xFDD
 31932                           plusw2	equ	0xFDB
 31933                           fsr2h	equ	0xFDA
 31934                           fsr2l	equ	0xFD9
 31935                           status	equ	0xFD8
 31936                           
 31937 ;; *************** function _sprintf *****************
 31938 ;; Defined at:
 31939 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 31940 ;; Parameters:    Size  Location     Type
 31941 ;;  sp              2   78[BANK0 ] PTR unsigned char 
 31942 ;;		 -> UseBluetooth@buf(100), BluetoothInitialSetup@buf(50), EnterCommandMode@buf(50), Init_System@buf(50), 
 31943 ;;		 -> main@buf(100), 
 31944 ;;  f               2   80[BANK0 ] PTR const unsigned char 
 31945 ;;		 -> STR_135(19), STR_133(15), STR_115(19), STR_113(27), 
 31946 ;;		 -> STR_112(16), STR_109(21), STR_107(20), STR_92(27), 
 31947 ;;		 -> STR_78(44), STR_77(54), STR_76(54), STR_75(63), 
 31948 ;;		 -> STR_53(44), STR_52(46), STR_50(44), STR_49(21), 
 31949 ;;		 -> STR_35(17), STR_34(17), STR_33(20), STR_31(23), 
 31950 ;;		 -> STR_30(21), STR_29(21), STR_21(4), STR_19(11), 
 31951 ;;		 -> STR_18(28), STR_12(4), STR_11(7), STR_10(4), 
 31952 ;;		 -> STR_9(24), STR_7(4), STR_5(23), STR_4(15), 
 31953 ;;		 -> STR_1(50), 
 31954 ;; Auto vars:     Size  Location     Type
 31955 ;;  idx             1  101[BANK0 ] unsigned char 
 31956 ;;  val             4  116[BANK0 ] unsigned long 
 31957 ;;  tmpval          4  110[BANK0 ] struct .
 31958 ;;  fval            3  120[BANK0 ] struct .
 31959 ;;  flag            2  125[BANK0 ] unsigned short 
 31960 ;;  width           2  123[BANK0 ] int 
 31961 ;;  exp             2  114[BANK0 ] int 
 31962 ;;  prec            2  108[BANK0 ] int 
 31963 ;;  ap              2  106[BANK0 ] PTR void [1]
 31964 ;;		 -> ?_sprintf(2), 
 31965 ;;  len             2  104[BANK0 ] unsigned int 
 31966 ;;  cp              2  102[BANK0 ] PTR const unsigned char 
 31967 ;;		 -> STR_180(7), sprintf@c(1), Frequency(4), PCBVersion(5), 
 31968 ;;		 -> FirmVersion(9), BluetoothInitialSetup@BroadcastTEMP(21), GetNumber@temp(4), main@BroadcastTEMP(21), 
 31969 ;;  c               1  127[BANK0 ] char 
 31970 ;;  d               1    0        unsigned char 
 31971 ;; Return value:  Size  Location     Type
 31972 ;;                  2   78[BANK0 ] int 
 31973 ;; Registers used:
 31974 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31975 ;; Tracked objects:
 31976 ;;		On entry : 0/0
 31977 ;;		On exit  : 0/0
 31978 ;;		Unchanged: 0/0
 31979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31980 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31981 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31982 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31983 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31984 ;;Total ram usage:       50 bytes
 31985 ;; Hardware stack levels used:    1
 31986 ;; Hardware stack levels required when called:    8
 31987 ;; This function calls:
 31988 ;;		___awdiv
 31989 ;;		___ftadd
 31990 ;;		___ftge
 31991 ;;		___ftmul
 31992 ;;		___ftneg
 31993 ;;		___ftsub
 31994 ;;		___fttol
 31995 ;;		___lldiv
 31996 ;;		___llmod
 31997 ;;		___lltoft
 31998 ;;		___wmul
 31999 ;;		__div_to_l_
 32000 ;;		__tdiv_to_l_
 32001 ;;		_fround
 32002 ;;		_isdigit
 32003 ;;		_scale
 32004 ;; This function is called by:
 32005 ;;		_main
 32006 ;;		_Init_System
 32007 ;;		_EnterCommandMode
 32008 ;;		_BluetoothInitialSetup
 32009 ;;		_UseBluetooth
 32010 ;; This function uses a non-reentrant model
 32011 ;;
 32012                           
 32013                           	psect	text75
 32014  00284E                     __ptext75:
 32015                           	opt stack 0
 32016  00284E                     _sprintf:
 32017                           	opt stack 22
 32018                           
 32019                           ;doprnt.c: 494: va_list ap;
 32020                           ;doprnt.c: 499: signed char c;
 32021                           ;doprnt.c: 501: int width;
 32022                           ;doprnt.c: 504: int prec;
 32023                           ;doprnt.c: 508: unsigned short flag;
 32024                           ;doprnt.c: 515: char d;
 32025                           ;doprnt.c: 516: double fval;
 32026                           ;doprnt.c: 517: int exp;
 32027                           ;doprnt.c: 523: union {
 32028                           ;doprnt.c: 524: unsigned long vd;
 32029                           ;doprnt.c: 525: double integ;
 32030                           ;doprnt.c: 526: } tmpval;
 32031                           ;doprnt.c: 528: unsigned long val;
 32032                           ;doprnt.c: 529: unsigned len;
 32033                           ;doprnt.c: 530: const char * cp;
 32034                           ;doprnt.c: 533: *ap = __va_start();
 32035                           
 32036                           ;incstack = 0
 32037  00284E  0EB2               	movlw	low (?_sprintf+4)
 32038  002850  0100               	movlb	0	; () banked
 32039  002852  6FCA               	movwf	sprintf@ap& (0+255),b
 32040  002854  0E00               	movlw	high (?_sprintf+4)
 32041  002856  0100               	movlb	0	; () banked
 32042  002858  6FCB               	movwf	(sprintf@ap+1)& (0+255),b
 32043                           
 32044                           ;doprnt.c: 536: while(c = *f++) {
 32045  00285A  EFCA  F01B         	goto	l10024
 32046  00285E                     l9648:
 32047                           
 32048                           ; BSR set to: 0
 32049                           ;doprnt.c: 538: if(c != '%')
 32050  00285E  0E25               	movlw	37
 32051  002860  0100               	movlb	0	; () banked
 32052  002862  19DF               	xorwf	sprintf@c& (0+255),w,b
 32053  002864  B4D8               	btfsc	status,2,c
 32054  002866  D00B               	goto	l9654
 32055                           
 32056                           ; BSR set to: 0
 32057                           ;doprnt.c: 540: {
 32058                           ;doprnt.c: 541: ((*sp++ = (c)));
 32059  002868  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 32060  00286C  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 32061  002870  C0DF  FFDF         	movff	sprintf@c,indf2
 32062                           
 32063                           ; BSR set to: 0
 32064  002874  0100               	movlb	0	; () banked
 32065  002876  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 32066  002878  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 32067                           
 32068                           ;doprnt.c: 542: continue;
 32069  00287A  EFCA  F01B         	goto	l10024
 32070  00287E                     l9654:
 32071                           
 32072                           ; BSR set to: 0
 32073                           ;doprnt.c: 543: }
 32074                           ;doprnt.c: 546: width = 0;
 32075  00287E  0E00               	movlw	0
 32076  002880  0100               	movlb	0	; () banked
 32077  002882  6FDC               	movwf	(sprintf@width+1)& (0+255),b
 32078  002884  0E00               	movlw	0
 32079  002886  6FDB               	movwf	sprintf@width& (0+255),b
 32080                           
 32081                           ;doprnt.c: 548: flag = 0;
 32082  002888  0E00               	movlw	0
 32083  00288A  0100               	movlb	0	; () banked
 32084  00288C  6FDE               	movwf	(sprintf@flag+1)& (0+255),b
 32085  00288E  0E00               	movlw	0
 32086  002890  6FDD               	movwf	sprintf@flag& (0+255),b
 32087                           
 32088                           ; BSR set to: 0
 32089                           ;doprnt.c: 551: switch(*f) {
 32090                           
 32091                           ;doprnt.c: 550: for(;;) {
 32092  002892  D007               	goto	l9660
 32093  002894                     l9656:
 32094                           
 32095                           ;doprnt.c: 580: flag |= 0x04;
 32096  002894  0100               	movlb	0	; () banked
 32097  002896  85DD               	bsf	sprintf@flag& (0+255),2,b
 32098                           
 32099                           ;doprnt.c: 581: f++;
 32100  002898  0100               	movlb	0	; () banked
 32101  00289A  4BB0               	infsnz	sprintf@f& (0+255),f,b
 32102  00289C  2BB1               	incf	(sprintf@f+1)& (0+255),f,b
 32103                           
 32104                           ;doprnt.c: 582: continue;
 32105  00289E  D001               	goto	l9660
 32106                           
 32107                           ; BSR set to: 0
 32108                           ;doprnt.c: 584: }
 32109  0028A0  D00C               	goto	l9662
 32110  0028A2                     l9660:
 32111  0028A2  C0B0  FFF6         	movff	sprintf@f,tblptrl
 32112  0028A6  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
 32113  0028AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32114  0028AA  6AF8               	clrf	tblptru,c
 32115  0028AC                     	endif
 32116  0028AC                     	if	0	;tblptru may be non-zero
 32117  0028AC                     	endif
 32118  0028AC  0008               	tblrd		*
 32119  0028AE  50F5               	movf	tablat,w,c
 32120                           
 32121                           ; Switch size 1, requested type "space"
 32122                           ; Number of cases is 1, Range of values is 48 to 48
 32123                           ; switch strategies available:
 32124                           ; Name         Instructions Cycles
 32125                           ; simple_byte            4     3 (average)
 32126                           ;	Chosen strategy is simple_byte
 32127  0028B0  0A30               	xorlw	48	; case 48
 32128  0028B2  B4D8               	btfsc	status,2,c
 32129  0028B4  D7EF               	goto	l9656
 32130                           
 32131                           ;doprnt.c: 585: break;
 32132  0028B6  D001               	goto	l9662
 32133                           
 32134                           ;doprnt.c: 586: }
 32135  0028B8  D7F4               	goto	l9660
 32136  0028BA                     l9662:
 32137                           
 32138                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 32139  0028BA  C0B0  FFF6         	movff	sprintf@f,tblptrl
 32140  0028BE  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
 32141  0028C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32142  0028C2  6AF8               	clrf	tblptru,c
 32143  0028C4                     	endif
 32144  0028C4                     	if	0	;tblptru may be non-zero
 32145  0028C4                     	endif
 32146  0028C4  0008               	tblrd		*
 32147  0028C6  50F5               	movf	tablat,w,c
 32148  0028C8  EC8B  F053         	call	_isdigit
 32149  0028CC  A0D8               	btfss	status,0,c
 32150  0028CE  D110               	goto	l9726
 32151                           
 32152                           ;doprnt.c: 598: width = 0;
 32153  0028D0  0E00               	movlw	0
 32154  0028D2  0100               	movlb	0	; () banked
 32155  0028D4  6FDC               	movwf	(sprintf@width+1)& (0+255),b
 32156  0028D6  0E00               	movlw	0
 32157  0028D8  6FDB               	movwf	sprintf@width& (0+255),b
 32158  0028DA  D000               	goto	l9666
 32159  0028DC                     l9666:
 32160                           
 32161                           ;doprnt.c: 600: width *= 10;
 32162  0028DC  C0DB  F06E         	movff	sprintf@width,___wmul@multiplier
 32163  0028E0  C0DC  F06F         	movff	sprintf@width+1,___wmul@multiplier+1
 32164  0028E4  0E00               	movlw	0
 32165  0028E6  0100               	movlb	0	; () banked
 32166  0028E8  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32167  0028EA  0E0A               	movlw	10
 32168  0028EC  6F70               	movwf	___wmul@multiplicand& (0+255),b
 32169  0028EE  ECBF  F052         	call	___wmul	;wreg free
 32170  0028F2  C06E  F0DB         	movff	?___wmul,sprintf@width
 32171  0028F6  C06F  F0DC         	movff	?___wmul+1,sprintf@width+1
 32172                           
 32173                           ;doprnt.c: 601: width += *f++ - '0';
 32174  0028FA  0ED0               	movlw	208
 32175  0028FC  0100               	movlb	0	; () banked
 32176  0028FE  6FBC               	movwf	??_sprintf& (0+255),b
 32177  002900  0EFF               	movlw	255
 32178  002902  0100               	movlb	0	; () banked
 32179  002904  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 32180  002906  C0B0  FFF6         	movff	sprintf@f,tblptrl
 32181  00290A  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
 32182  00290E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32183  00290E  6AF8               	clrf	tblptru,c
 32184  002910                     	endif
 32185  002910                     	if	0	;tblptru may be non-zero
 32186  002910                     	endif
 32187  002910  0008               	tblrd		*
 32188  002912  50F5               	movf	tablat,w,c
 32189  002914  0100               	movlb	0	; () banked
 32190  002916  6FBE               	movwf	(??_sprintf+2)& (0+255),b
 32191  002918  6BBF               	clrf	(??_sprintf+3)& (0+255),b
 32192  00291A  0100               	movlb	0	; () banked
 32193  00291C  51BC               	movf	??_sprintf& (0+255),w,b
 32194  00291E  0100               	movlb	0	; () banked
 32195  002920  27BE               	addwf	(??_sprintf+2)& (0+255),f,b
 32196  002922  0100               	movlb	0	; () banked
 32197  002924  51BD               	movf	(??_sprintf+1)& (0+255),w,b
 32198  002926  0100               	movlb	0	; () banked
 32199  002928  23BF               	addwfc	(??_sprintf+3)& (0+255),f,b
 32200  00292A  0100               	movlb	0	; () banked
 32201  00292C  51BE               	movf	(??_sprintf+2)& (0+255),w,b
 32202  00292E  0100               	movlb	0	; () banked
 32203  002930  27DB               	addwf	sprintf@width& (0+255),f,b
 32204  002932  0100               	movlb	0	; () banked
 32205  002934  51BF               	movf	(??_sprintf+3)& (0+255),w,b
 32206  002936  0100               	movlb	0	; () banked
 32207  002938  23DC               	addwfc	(sprintf@width+1)& (0+255),f,b
 32208                           
 32209                           ; BSR set to: 0
 32210  00293A  0100               	movlb	0	; () banked
 32211  00293C  4BB0               	infsnz	sprintf@f& (0+255),f,b
 32212  00293E  2BB1               	incf	(sprintf@f+1)& (0+255),f,b
 32213                           
 32214                           ; BSR set to: 0
 32215                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 32216  002940  C0B0  FFF6         	movff	sprintf@f,tblptrl
 32217  002944  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
 32218  002948                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32219  002948  6AF8               	clrf	tblptru,c
 32220  00294A                     	endif
 32221  00294A                     	if	0	;tblptru may be non-zero
 32222  00294A                     	endif
 32223  00294A  0008               	tblrd		*
 32224  00294C  50F5               	movf	tablat,w,c
 32225  00294E  EC8B  F053         	call	_isdigit
 32226  002952  A0D8               	btfss	status,0,c
 32227  002954  D0CD               	goto	l9726
 32228  002956  D7C2               	goto	l9666
 32229                           
 32230                           ;doprnt.c: 635: switch(c = *f++) {
 32231                           
 32232                           ;doprnt.c: 608: }
 32233                           ;doprnt.c: 633: loop:
 32234  002958  D0CB               	goto	l9726
 32235                           
 32236                           ;doprnt.c: 638: goto alldone;
 32237                           
 32238                           ;doprnt.c: 637: case 0:
 32239  00295A  EFDC  F01B         	goto	l10026
 32240  00295E                     l9674:
 32241                           
 32242                           ;doprnt.c: 643: flag |= 0x10;
 32243  00295E  0100               	movlb	0	; () banked
 32244  002960  89DD               	bsf	sprintf@flag& (0+255),4,b
 32245                           
 32246                           ;doprnt.c: 644: goto loop;
 32247  002962  D0C6               	goto	l9726
 32248  002964                     l9676:
 32249                           
 32250                           ; BSR set to: 0
 32251                           ;doprnt.c: 663: flag |= 0x400;
 32252  002964  0100               	movlb	0	; () banked
 32253  002966  85DE               	bsf	(sprintf@flag+1)& (0+255),2,b
 32254                           
 32255                           ; BSR set to: 0
 32256                           ;doprnt.c: 698: case 'i':
 32257                           ;doprnt.c: 699: break;
 32258                           
 32259                           ; BSR set to: 0
 32260                           
 32261                           ;doprnt.c: 697: case 'd':
 32262                           
 32263                           ;doprnt.c: 664: break;
 32264  002968  D0F0               	goto	l9728
 32265                           
 32266                           ; BSR set to: 0
 32267                           
 32268                           ;doprnt.c: 712: case 'X':
 32269  00296A  D000               	goto	l9678
 32270  00296C                     l9678:
 32271                           
 32272                           ; BSR set to: 0
 32273                           ;doprnt.c: 718: case 'x':
 32274                           ;doprnt.c: 721: flag |= 0x80;
 32275  00296C  0100               	movlb	0	; () banked
 32276  00296E  8FDD               	bsf	sprintf@flag& (0+255),7,b
 32277                           
 32278                           ;doprnt.c: 723: break;
 32279  002970  D0EC               	goto	l9728
 32280  002972                     l9680:
 32281                           
 32282                           ; BSR set to: 0
 32283                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 32284  002972  C0CA  FFD9         	movff	sprintf@ap,fsr2l
 32285  002976  C0CB  FFDA         	movff	sprintf@ap+1,fsr2h
 32286  00297A  CFDE F0C6          	movff	postinc2,sprintf@cp
 32287  00297E  CFDD F0C7          	movff	postdec2,sprintf@cp+1
 32288                           
 32289                           ; BSR set to: 0
 32290  002982  0E02               	movlw	2
 32291  002984  0100               	movlb	0	; () banked
 32292  002986  27CA               	addwf	sprintf@ap& (0+255),f,b
 32293  002988  0E00               	movlw	0
 32294  00298A  23CB               	addwfc	(sprintf@ap+1)& (0+255),f,b
 32295                           
 32296                           ; BSR set to: 0
 32297                           ;doprnt.c: 740: if(!cp)
 32298  00298C  0100               	movlb	0	; () banked
 32299  00298E  51C6               	movf	sprintf@cp& (0+255),w,b
 32300  002990  0100               	movlb	0	; () banked
 32301  002992  11C7               	iorwf	(sprintf@cp+1)& (0+255),w,b
 32302  002994  A4D8               	btfss	status,2,c
 32303  002996  D007               	goto	l9688
 32304                           
 32305                           ; BSR set to: 0
 32306                           ;doprnt.c: 741: cp = "(null)";
 32307  002998  0E98               	movlw	low STR_180
 32308  00299A  0100               	movlb	0	; () banked
 32309  00299C  6FC6               	movwf	sprintf@cp& (0+255),b
 32310  00299E  0EFF               	movlw	high STR_180
 32311  0029A0  0100               	movlb	0	; () banked
 32312  0029A2  6FC7               	movwf	(sprintf@cp+1)& (0+255),b
 32313  0029A4  D000               	goto	l9688
 32314  0029A6                     l9688:
 32315                           
 32316                           ; BSR set to: 0
 32317                           ;doprnt.c: 745: len = 0;
 32318  0029A6  0E00               	movlw	0
 32319  0029A8  0100               	movlb	0	; () banked
 32320  0029AA  6FC9               	movwf	(sprintf@len+1)& (0+255),b
 32321  0029AC  0E00               	movlw	0
 32322  0029AE  6FC8               	movwf	sprintf@len& (0+255),b
 32323                           
 32324                           ;doprnt.c: 746: while(cp[len])
 32325  0029B0  D004               	goto	l9692
 32326  0029B2                     l9690:
 32327                           
 32328                           ;doprnt.c: 747: len++;
 32329  0029B2  0100               	movlb	0	; () banked
 32330  0029B4  4BC8               	infsnz	sprintf@len& (0+255),f,b
 32331  0029B6  2BC9               	incf	(sprintf@len+1)& (0+255),f,b
 32332  0029B8  D000               	goto	l9692
 32333  0029BA                     l9692:
 32334                           
 32335                           ; BSR set to: 0
 32336  0029BA  0100               	movlb	0	; () banked
 32337  0029BC  51C8               	movf	sprintf@len& (0+255),w,b
 32338  0029BE  0100               	movlb	0	; () banked
 32339  0029C0  25C6               	addwf	sprintf@cp& (0+255),w,b
 32340  0029C2  0100               	movlb	0	; () banked
 32341  0029C4  6FBC               	movwf	??_sprintf& (0+255),b
 32342  0029C6  0100               	movlb	0	; () banked
 32343  0029C8  51C9               	movf	(sprintf@len+1)& (0+255),w,b
 32344  0029CA  0100               	movlb	0	; () banked
 32345  0029CC  21C7               	addwfc	(sprintf@cp+1)& (0+255),w,b
 32346  0029CE  0100               	movlb	0	; () banked
 32347  0029D0  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 32348  0029D2  C0BC  FFF6         	movff	??_sprintf,tblptrl
 32349  0029D6  C0BD  FFF7         	movff	??_sprintf+1,tblptrh
 32350  0029DA  0E00               	movlw	low (__mediumconst shr (0+16))
 32351  0029DC  6EF8               	movwf	tblptru,c
 32352  0029DE  0E0F               	movlw	(high __ramtop+-1)
 32353  0029E0  64F7               	cpfsgt	tblptrh,c
 32354  0029E2  D003               	bra	u9677
 32355  0029E4  0008               	tblrd		*
 32356  0029E6  50F5               	movf	tablat,w,c
 32357  0029E8  D005               	bra	u9670
 32358  0029EA                     u9677:
 32359  0029EA  CFF6 FFE9          	movff	tblptrl,fsr0l
 32360  0029EE  CFF7 FFEA          	movff	tblptrh,fsr0h
 32361  0029F2  50EF               	movf	indf0,w,c
 32362  0029F4                     u9670:
 32363  0029F4  0900               	iorlw	0
 32364  0029F6  B4D8               	btfsc	status,2,c
 32365  0029F8  D002               	goto	l9694
 32366  0029FA  D7DB               	goto	l9690
 32367  0029FC  D000               	goto	l9694
 32368  0029FE                     l9694:
 32369                           
 32370                           ;doprnt.c: 757: if(width > len)
 32371  0029FE  0100               	movlb	0	; () banked
 32372  002A00  51DB               	movf	sprintf@width& (0+255),w,b
 32373  002A02  0100               	movlb	0	; () banked
 32374  002A04  5DC8               	subwf	sprintf@len& (0+255),w,b
 32375  002A06  0100               	movlb	0	; () banked
 32376  002A08  51DC               	movf	(sprintf@width+1)& (0+255),w,b
 32377  002A0A  0100               	movlb	0	; () banked
 32378  002A0C  59C9               	subwfb	(sprintf@len+1)& (0+255),w,b
 32379  002A0E  B0D8               	btfsc	status,0,c
 32380  002A10  D009               	goto	l9698
 32381                           
 32382                           ; BSR set to: 0
 32383                           ;doprnt.c: 758: width -= len;
 32384  002A12  0100               	movlb	0	; () banked
 32385  002A14  51C8               	movf	sprintf@len& (0+255),w,b
 32386  002A16  0100               	movlb	0	; () banked
 32387  002A18  5FDB               	subwf	sprintf@width& (0+255),f,b
 32388  002A1A  0100               	movlb	0	; () banked
 32389  002A1C  51C9               	movf	(sprintf@len+1)& (0+255),w,b
 32390  002A1E  0100               	movlb	0	; () banked
 32391  002A20  5BDC               	subwfb	(sprintf@width+1)& (0+255),f,b
 32392  002A22  D010               	goto	l9704
 32393  002A24                     l9698:
 32394                           
 32395                           ; BSR set to: 0
 32396                           ;doprnt.c: 759: else
 32397                           ;doprnt.c: 760: width = 0;
 32398  002A24  0E00               	movlw	0
 32399  002A26  0100               	movlb	0	; () banked
 32400  002A28  6FDC               	movwf	(sprintf@width+1)& (0+255),b
 32401  002A2A  0E00               	movlw	0
 32402  002A2C  6FDB               	movwf	sprintf@width& (0+255),b
 32403                           
 32404                           ; BSR set to: 0
 32405                           ;doprnt.c: 764: while(width--)
 32406  002A2E  D00A               	goto	l9704
 32407  002A30                     l9700:
 32408                           
 32409                           ; BSR set to: 0
 32410                           ;doprnt.c: 765: ((*sp++ = (' ')));
 32411  002A30  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 32412  002A34  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 32413  002A38  0E20               	movlw	32
 32414  002A3A  6EDF               	movwf	indf2,c
 32415                           
 32416                           ; BSR set to: 0
 32417  002A3C  0100               	movlb	0	; () banked
 32418  002A3E  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 32419  002A40  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 32420  002A42  D000               	goto	l9704
 32421  002A44                     l9704:
 32422                           
 32423                           ; BSR set to: 0
 32424  002A44  0100               	movlb	0	; () banked
 32425  002A46  07DB               	decf	sprintf@width& (0+255),f,b
 32426  002A48  A0D8               	btfss	status,0,c
 32427  002A4A  07DC               	decf	(sprintf@width+1)& (0+255),f,b
 32428  002A4C  0100               	movlb	0	; () banked
 32429  002A4E  29DB               	incf	sprintf@width& (0+255),w,b
 32430  002A50  E1EF               	bnz	l9700
 32431  002A52  0100               	movlb	0	; () banked
 32432  002A54  29DC               	incf	(sprintf@width+1)& (0+255),w,b
 32433  002A56  B4D8               	btfsc	status,2,c
 32434  002A58  D01F               	goto	l9712
 32435  002A5A  D7EA               	goto	l9700
 32436                           
 32437                           ; BSR set to: 0
 32438                           ;doprnt.c: 767: while(len--)
 32439  002A5C  D01D               	goto	l9712
 32440  002A5E                     l9706:
 32441                           
 32442                           ; BSR set to: 0
 32443                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 32444  002A5E  C0C6  FFF6         	movff	sprintf@cp,tblptrl
 32445  002A62  C0C7  FFF7         	movff	sprintf@cp+1,tblptrh
 32446  002A66  0E00               	movlw	low (__mediumconst shr (0+16))
 32447  002A68  6EF8               	movwf	tblptru,c
 32448  002A6A  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 32449  002A6E  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 32450  002A72  0E0F               	movlw	(high __ramtop+-1)
 32451  002A74  64F7               	cpfsgt	tblptrh,c
 32452  002A76  D003               	bra	u9717
 32453  002A78  0008               	tblrd		*
 32454  002A7A  50F5               	movf	tablat,w,c
 32455  002A7C  D005               	bra	u9710
 32456  002A7E                     u9717:
 32457  002A7E  CFF6 FFE9          	movff	tblptrl,fsr0l
 32458  002A82  CFF7 FFEA          	movff	tblptrh,fsr0h
 32459  002A86  50EF               	movf	indf0,w,c
 32460  002A88                     u9710:
 32461  002A88  6EDF               	movwf	indf2,c
 32462  002A8A  0100               	movlb	0	; () banked
 32463  002A8C  4BC6               	infsnz	sprintf@cp& (0+255),f,b
 32464  002A8E  2BC7               	incf	(sprintf@cp+1)& (0+255),f,b
 32465                           
 32466                           ; BSR set to: 0
 32467  002A90  0100               	movlb	0	; () banked
 32468  002A92  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 32469  002A94  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 32470  002A96  D000               	goto	l9712
 32471  002A98                     l9712:
 32472                           
 32473                           ; BSR set to: 0
 32474  002A98  0100               	movlb	0	; () banked
 32475  002A9A  07C8               	decf	sprintf@len& (0+255),f,b
 32476  002A9C  A0D8               	btfss	status,0,c
 32477  002A9E  07C9               	decf	(sprintf@len+1)& (0+255),f,b
 32478  002AA0  0100               	movlb	0	; () banked
 32479  002AA2  29C8               	incf	sprintf@len& (0+255),w,b
 32480  002AA4  E1DC               	bnz	l9706
 32481  002AA6  0100               	movlb	0	; () banked
 32482  002AA8  29C9               	incf	(sprintf@len+1)& (0+255),w,b
 32483  002AAA  B4D8               	btfsc	status,2,c
 32484  002AAC  EFCA  F01B         	goto	l10024
 32485  002AB0  D7D6               	goto	l9706
 32486                           
 32487                           ; BSR set to: 0
 32488                           ;doprnt.c: 774: continue;
 32489  002AB2  EFCA  F01B         	goto	l10024
 32490  002AB6                     l9714:
 32491                           
 32492                           ; BSR set to: 0
 32493                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 32494  002AB6  C0CA  FFD9         	movff	sprintf@ap,fsr2l
 32495  002ABA  C0CB  FFDA         	movff	sprintf@ap+1,fsr2h
 32496  002ABE  50DF               	movf	indf2,w,c
 32497  002AC0  0100               	movlb	0	; () banked
 32498  002AC2  6FDF               	movwf	sprintf@c& (0+255),b
 32499                           
 32500                           ; BSR set to: 0
 32501  002AC4  0E02               	movlw	2
 32502  002AC6  0100               	movlb	0	; () banked
 32503  002AC8  27CA               	addwf	sprintf@ap& (0+255),f,b
 32504  002ACA  0E00               	movlw	0
 32505  002ACC  23CB               	addwfc	(sprintf@ap+1)& (0+255),f,b
 32506  002ACE  D000               	goto	l9718
 32507  002AD0                     l9718:
 32508                           
 32509                           ; BSR set to: 0
 32510                           ;doprnt.c: 805: cp = (char *)&c;
 32511  002AD0  0EDF               	movlw	low sprintf@c
 32512  002AD2  0100               	movlb	0	; () banked
 32513  002AD4  6FC6               	movwf	sprintf@cp& (0+255),b
 32514  002AD6  0E00               	movlw	high sprintf@c
 32515  002AD8  0100               	movlb	0	; () banked
 32516  002ADA  6FC7               	movwf	(sprintf@cp+1)& (0+255),b
 32517                           
 32518                           ; BSR set to: 0
 32519                           ;doprnt.c: 806: len = 1;
 32520  002ADC  0E00               	movlw	0
 32521  002ADE  0100               	movlb	0	; () banked
 32522  002AE0  6FC9               	movwf	(sprintf@len+1)& (0+255),b
 32523  002AE2  0E01               	movlw	1
 32524  002AE4  6FC8               	movwf	sprintf@len& (0+255),b
 32525                           
 32526                           ;doprnt.c: 807: goto dostring;
 32527  002AE6  D78B               	goto	l9694
 32528  002AE8                     l9722:
 32529                           
 32530                           ; BSR set to: 0
 32531                           ;doprnt.c: 818: flag |= 0xC0;
 32532  002AE8  0EC0               	movlw	192
 32533  002AEA  0100               	movlb	0	; () banked
 32534  002AEC  13DD               	iorwf	sprintf@flag& (0+255),f,b
 32535                           
 32536                           ; BSR set to: 0
 32537                           ;doprnt.c: 822: }
 32538                           
 32539                           ;doprnt.c: 819: break;
 32540  002AEE  D02D               	goto	l9728
 32541  002AF0                     l9726:
 32542  002AF0  C0B0  FFF6         	movff	sprintf@f,tblptrl
 32543  002AF4  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
 32544  002AF8  0100               	movlb	0	; () banked
 32545  002AFA  4BB0               	infsnz	sprintf@f& (0+255),f,b
 32546  002AFC  2BB1               	incf	(sprintf@f+1)& (0+255),f,b
 32547  002AFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32548  002AFE  6AF8               	clrf	tblptru,c
 32549  002B00                     	endif
 32550  002B00                     	if	0	;tblptru may be non-zero
 32551  002B00                     	endif
 32552  002B00  0008               	tblrd		*
 32553  002B02  CFF5 F0DF          	movff	tablat,sprintf@c
 32554  002B06  0100               	movlb	0	; () banked
 32555  002B08  51DF               	movf	sprintf@c& (0+255),w,b
 32556                           
 32557                           ; Switch size 1, requested type "space"
 32558                           ; Number of cases is 10, Range of values is 0 to 120
 32559                           ; switch strategies available:
 32560                           ; Name         Instructions Cycles
 32561                           ; simple_byte           31    16 (average)
 32562                           ;	Chosen strategy is simple_byte
 32563  002B0A  0A00               	xorlw	0	; case 0
 32564  002B0C  B4D8               	btfsc	status,2,c
 32565  002B0E  EFDC  F01B         	goto	l10026
 32566  002B12  0A58               	xorlw	88	; case 88
 32567  002B14  B4D8               	btfsc	status,2,c
 32568  002B16  D72A               	goto	l9678
 32569  002B18  0A3B               	xorlw	59	; case 99
 32570  002B1A  B4D8               	btfsc	status,2,c
 32571  002B1C  D7CC               	goto	l9714
 32572  002B1E  0A07               	xorlw	7	; case 100
 32573  002B20  B4D8               	btfsc	status,2,c
 32574  002B22  D013               	goto	l9728
 32575  002B24  0A02               	xorlw	2	; case 102
 32576  002B26  B4D8               	btfsc	status,2,c
 32577  002B28  D71D               	goto	l9676
 32578  002B2A  0A0F               	xorlw	15	; case 105
 32579  002B2C  B4D8               	btfsc	status,2,c
 32580  002B2E  D00D               	goto	l9728
 32581  002B30  0A05               	xorlw	5	; case 108
 32582  002B32  B4D8               	btfsc	status,2,c
 32583  002B34  D714               	goto	l9674
 32584  002B36  0A1F               	xorlw	31	; case 115
 32585  002B38  B4D8               	btfsc	status,2,c
 32586  002B3A  D71B               	goto	l9680
 32587  002B3C  0A06               	xorlw	6	; case 117
 32588  002B3E  B4D8               	btfsc	status,2,c
 32589  002B40  D7D3               	goto	l9722
 32590  002B42  0A0D               	xorlw	13	; case 120
 32591  002B44  B4D8               	btfsc	status,2,c
 32592  002B46  D712               	goto	l9678
 32593  002B48  D7C3               	goto	l9718
 32594  002B4A                     l9728:
 32595                           
 32596                           ; BSR set to: 0
 32597                           ;doprnt.c: 825: if(flag & (0x700)) {
 32598  002B4A  0E07               	movlw	7
 32599  002B4C  0100               	movlb	0	; () banked
 32600  002B4E  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
 32601  002B50  B4D8               	btfsc	status,2,c
 32602  002B52  D3ED               	goto	l9906
 32603                           
 32604                           ; BSR set to: 0
 32605                           ;doprnt.c: 829: prec = 6;
 32606  002B54  0E00               	movlw	0
 32607  002B56  0100               	movlb	0	; () banked
 32608  002B58  6FCD               	movwf	(sprintf@prec+1)& (0+255),b
 32609  002B5A  0E06               	movlw	6
 32610  002B5C  6FCC               	movwf	sprintf@prec& (0+255),b
 32611                           
 32612                           ; BSR set to: 0
 32613                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 32614  002B5E  C0CA  FFD9         	movff	sprintf@ap,fsr2l
 32615  002B62  C0CB  FFDA         	movff	sprintf@ap+1,fsr2h
 32616  002B66  CFDE F0D8          	movff	postinc2,sprintf@fval
 32617  002B6A  CFDE F0D9          	movff	postinc2,sprintf@fval+1
 32618  002B6E  CFDD F0DA          	movff	postdec2,sprintf@fval+2
 32619                           
 32620                           ; BSR set to: 0
 32621  002B72  0E03               	movlw	3
 32622  002B74  0100               	movlb	0	; () banked
 32623  002B76  27CA               	addwf	sprintf@ap& (0+255),f,b
 32624  002B78  0E00               	movlw	0
 32625  002B7A  23CB               	addwfc	(sprintf@ap+1)& (0+255),f,b
 32626                           
 32627                           ; BSR set to: 0
 32628                           ;doprnt.c: 831: if(fval < 0.0) {
 32629  002B7C  0100               	movlb	0	; () banked
 32630  002B7E  AFDA               	btfss	(sprintf@fval+2)& (0+255),7,b
 32631  002B80  D012               	goto	l9742
 32632                           
 32633                           ; BSR set to: 0
 32634                           ;doprnt.c: 832: fval = -fval;
 32635  002B82  C0D8  F060         	movff	sprintf@fval,___ftneg@f1
 32636  002B86  C0D9  F061         	movff	sprintf@fval+1,___ftneg@f1+1
 32637  002B8A  C0DA  F062         	movff	sprintf@fval+2,___ftneg@f1+2
 32638  002B8E  EC5B  F053         	call	___ftneg	;wreg free
 32639  002B92  C060  F0D8         	movff	?___ftneg,sprintf@fval
 32640  002B96  C061  F0D9         	movff	?___ftneg+1,sprintf@fval+1
 32641  002B9A  C062  F0DA         	movff	?___ftneg+2,sprintf@fval+2
 32642                           
 32643                           ;doprnt.c: 833: flag |= 0x03;
 32644  002B9E  0E03               	movlw	3
 32645  002BA0  0100               	movlb	0	; () banked
 32646  002BA2  13DD               	iorwf	sprintf@flag& (0+255),f,b
 32647  002BA4  D000               	goto	l9742
 32648  002BA6                     l9742:
 32649                           
 32650                           ; BSR set to: 0
 32651                           ;doprnt.c: 834: }
 32652                           ;doprnt.c: 835: exp = 0;
 32653  002BA6  0E00               	movlw	0
 32654  002BA8  0100               	movlb	0	; () banked
 32655  002BAA  6FD3               	movwf	(sprintf@exp+1)& (0+255),b
 32656  002BAC  0E00               	movlw	0
 32657  002BAE  6FD2               	movwf	sprintf@exp& (0+255),b
 32658                           
 32659                           ; BSR set to: 0
 32660                           ;doprnt.c: 836: if( fval!=0) {
 32661  002BB0  0100               	movlb	0	; () banked
 32662  002BB2  51D8               	movf	sprintf@fval& (0+255),w,b
 32663  002BB4  0100               	movlb	0	; () banked
 32664  002BB6  11D9               	iorwf	(sprintf@fval+1)& (0+255),w,b
 32665  002BB8  0100               	movlb	0	; () banked
 32666  002BBA  11DA               	iorwf	(sprintf@fval+2)& (0+255),w,b
 32667  002BBC  B4D8               	btfsc	status,2,c
 32668  002BBE  D09D               	goto	l9770
 32669                           
 32670                           ; BSR set to: 0
 32671                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 32672  002BC0  0E82               	movlw	130
 32673  002BC2  0100               	movlb	0	; () banked
 32674  002BC4  6FBC               	movwf	??_sprintf& (0+255),b
 32675  002BC6  0EFF               	movlw	255
 32676  002BC8  0100               	movlb	0	; () banked
 32677  002BCA  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 32678  002BCC  C0D8  F0BE         	movff	sprintf@fval,??_sprintf+2
 32679  002BD0  C0D9  F0BF         	movff	sprintf@fval+1,??_sprintf+3
 32680  002BD4  C0DA  F0C0         	movff	sprintf@fval+2,??_sprintf+4
 32681  002BD8  C0DB  F0C1         	movff	sprintf@fval+3,??_sprintf+5
 32682  002BDC  0E10               	movlw	16
 32683  002BDE  D006               	goto	u9760
 32684  002BE0                     u9765:
 32685  002BE0  0100               	movlb	0	; () banked
 32686  002BE2  90D8               	bcf	status,0,c
 32687  002BE4  33C1               	rrcf	(??_sprintf+5)& (0+255),f,b
 32688  002BE6  33C0               	rrcf	(??_sprintf+4)& (0+255),f,b
 32689  002BE8  33BF               	rrcf	(??_sprintf+3)& (0+255),f,b
 32690  002BEA  33BE               	rrcf	(??_sprintf+2)& (0+255),f,b
 32691  002BEC                     u9760:
 32692  002BEC  2EE8               	decfsz	wreg,f,c
 32693  002BEE  D7F8               	goto	u9765
 32694  002BF0  0100               	movlb	0	; () banked
 32695  002BF2  51BE               	movf	(??_sprintf+2)& (0+255),w,b
 32696  002BF4  0100               	movlb	0	; () banked
 32697  002BF6  25BC               	addwf	??_sprintf& (0+255),w,b
 32698  002BF8  0100               	movlb	0	; () banked
 32699  002BFA  6FD2               	movwf	sprintf@exp& (0+255),b
 32700  002BFC  0E00               	movlw	0
 32701  002BFE  0100               	movlb	0	; () banked
 32702  002C00  21BD               	addwfc	(??_sprintf+1)& (0+255),w,b
 32703  002C02  0100               	movlb	0	; () banked
 32704  002C04  6FD3               	movwf	(sprintf@exp+1)& (0+255),b
 32705                           
 32706                           ; BSR set to: 0
 32707                           ;doprnt.c: 838: exp--;
 32708  002C06  0100               	movlb	0	; () banked
 32709  002C08  07D2               	decf	sprintf@exp& (0+255),f,b
 32710  002C0A  A0D8               	btfss	status,0,c
 32711  002C0C  07D3               	decf	(sprintf@exp+1)& (0+255),f,b
 32712                           
 32713                           ; BSR set to: 0
 32714                           ;doprnt.c: 839: exp *= 3;
 32715  002C0E  C0D2  F06E         	movff	sprintf@exp,___wmul@multiplier
 32716  002C12  C0D3  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
 32717  002C16  0E00               	movlw	0
 32718  002C18  0100               	movlb	0	; () banked
 32719  002C1A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32720  002C1C  0E03               	movlw	3
 32721  002C1E  6F70               	movwf	___wmul@multiplicand& (0+255),b
 32722  002C20  ECBF  F052         	call	___wmul	;wreg free
 32723  002C24  C06E  F0D2         	movff	?___wmul,sprintf@exp
 32724  002C28  C06F  F0D3         	movff	?___wmul+1,sprintf@exp+1
 32725                           
 32726                           ;doprnt.c: 840: exp /= 10;
 32727  002C2C  C0D2  F066         	movff	sprintf@exp,___awdiv@dividend
 32728  002C30  C0D3  F067         	movff	sprintf@exp+1,___awdiv@dividend+1
 32729  002C34  0E00               	movlw	0
 32730  002C36  0100               	movlb	0	; () banked
 32731  002C38  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 32732  002C3A  0E0A               	movlw	10
 32733  002C3C  6F68               	movwf	___awdiv@divisor& (0+255),b
 32734  002C3E  EC10  F049         	call	___awdiv	;wreg free
 32735  002C42  C066  F0D2         	movff	?___awdiv,sprintf@exp
 32736  002C46  C067  F0D3         	movff	?___awdiv+1,sprintf@exp+1
 32737                           
 32738                           ;doprnt.c: 841: if(exp < 0)
 32739  002C4A  0100               	movlb	0	; () banked
 32740  002C4C  AFD3               	btfss	(sprintf@exp+1)& (0+255),7,b
 32741  002C4E  D005               	goto	l9758
 32742                           
 32743                           ; BSR set to: 0
 32744                           ;doprnt.c: 842: exp--;
 32745  002C50  0100               	movlb	0	; () banked
 32746  002C52  07D2               	decf	sprintf@exp& (0+255),f,b
 32747  002C54  A0D8               	btfss	status,0,c
 32748  002C56  07D3               	decf	(sprintf@exp+1)& (0+255),f,b
 32749  002C58  D000               	goto	l9758
 32750  002C5A                     l9758:
 32751                           
 32752                           ; BSR set to: 0
 32753                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 32754  002C5A  0100               	movlb	0	; () banked
 32755  002C5C  51D2               	movf	sprintf@exp& (0+255),w,b
 32756  002C5E  0800               	sublw	0
 32757  002C60  ECE7  F02B         	call	_scale
 32758  002C64  C089  F0CE         	movff	?_scale,sprintf@tmpval
 32759  002C68  C08A  F0CF         	movff	?_scale+1,sprintf@tmpval+1
 32760  002C6C  C08B  F0D0         	movff	?_scale+2,sprintf@tmpval+2
 32761                           
 32762                           ;doprnt.c: 847: tmpval.integ *= fval;
 32763  002C70  C0CE  F07A         	movff	sprintf@tmpval,___ftmul@f1
 32764  002C74  C0CF  F07B         	movff	sprintf@tmpval+1,___ftmul@f1+1
 32765  002C78  C0D0  F07C         	movff	sprintf@tmpval+2,___ftmul@f1+2
 32766  002C7C  C0D8  F07D         	movff	sprintf@fval,___ftmul@f2
 32767  002C80  C0D9  F07E         	movff	sprintf@fval+1,___ftmul@f2+1
 32768  002C84  C0DA  F07F         	movff	sprintf@fval+2,___ftmul@f2+2
 32769  002C88  EC5D  F03F         	call	___ftmul	;wreg free
 32770  002C8C  C07A  F0CE         	movff	?___ftmul,sprintf@tmpval
 32771  002C90  C07B  F0CF         	movff	?___ftmul+1,sprintf@tmpval+1
 32772  002C94  C07C  F0D0         	movff	?___ftmul+2,sprintf@tmpval+2
 32773                           
 32774                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 32775  002C98  C0CE  F060         	movff	sprintf@tmpval,___ftge@ff1
 32776  002C9C  C0CF  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 32777  002CA0  C0D0  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 32778  002CA4  0E00               	movlw	0
 32779  002CA6  0100               	movlb	0	; () banked
 32780  002CA8  6F63               	movwf	___ftge@ff2& (0+255),b
 32781  002CAA  0E80               	movlw	128
 32782  002CAC  0100               	movlb	0	; () banked
 32783  002CAE  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 32784  002CB0  0E3F               	movlw	63
 32785  002CB2  0100               	movlb	0	; () banked
 32786  002CB4  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 32787  002CB6  EC78  F049         	call	___ftge	;wreg free
 32788  002CBA  0100               	movlb	0	; () banked
 32789  002CBC  B0D8               	btfsc	status,0,c
 32790  002CBE  D005               	goto	l9766
 32791                           
 32792                           ; BSR set to: 0
 32793                           ;doprnt.c: 849: exp--;
 32794  002CC0  0100               	movlb	0	; () banked
 32795  002CC2  07D2               	decf	sprintf@exp& (0+255),f,b
 32796  002CC4  A0D8               	btfss	status,0,c
 32797  002CC6  07D3               	decf	(sprintf@exp+1)& (0+255),f,b
 32798  002CC8  D018               	goto	l9770
 32799  002CCA                     l9766:
 32800                           
 32801                           ; BSR set to: 0
 32802                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 32803  002CCA  C0CE  F060         	movff	sprintf@tmpval,___ftge@ff1
 32804  002CCE  C0CF  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 32805  002CD2  C0D0  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 32806  002CD6  0E00               	movlw	0
 32807  002CD8  0100               	movlb	0	; () banked
 32808  002CDA  6F63               	movwf	___ftge@ff2& (0+255),b
 32809  002CDC  0E20               	movlw	32
 32810  002CDE  0100               	movlb	0	; () banked
 32811  002CE0  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 32812  002CE2  0E41               	movlw	65
 32813  002CE4  0100               	movlb	0	; () banked
 32814  002CE6  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 32815  002CE8  EC78  F049         	call	___ftge	;wreg free
 32816  002CEC  0100               	movlb	0	; () banked
 32817  002CEE  A0D8               	btfss	status,0,c
 32818  002CF0  D004               	goto	l9770
 32819                           
 32820                           ; BSR set to: 0
 32821                           ;doprnt.c: 851: exp++;
 32822  002CF2  0100               	movlb	0	; () banked
 32823  002CF4  4BD2               	infsnz	sprintf@exp& (0+255),f,b
 32824  002CF6  2BD3               	incf	(sprintf@exp+1)& (0+255),f,b
 32825                           
 32826                           ; BSR set to: 0
 32827                           
 32828                           ; BSR set to: 0
 32829  002CF8  D000               	goto	l9770
 32830  002CFA                     l9770:
 32831                           
 32832                           ; BSR set to: 0
 32833                           ;doprnt.c: 852: }
 32834                           ;doprnt.c: 1112: if(prec <= 12)
 32835  002CFA  0100               	movlb	0	; () banked
 32836  002CFC  BFCD               	btfsc	(sprintf@prec+1)& (0+255),7,b
 32837  002CFE  D008               	goto	l9772
 32838  002D00  0100               	movlb	0	; () banked
 32839  002D02  51CD               	movf	(sprintf@prec+1)& (0+255),w,b
 32840  002D04  E11E               	bnz	l9774
 32841  002D06  0E0D               	movlw	13
 32842  002D08  0100               	movlb	0	; () banked
 32843  002D0A  5DCC               	subwf	sprintf@prec& (0+255),w,b
 32844  002D0C  B0D8               	btfsc	status,0,c
 32845  002D0E  D019               	goto	l9774
 32846  002D10                     l9772:
 32847                           
 32848                           ; BSR set to: 0
 32849                           ;doprnt.c: 1113: fval += fround(prec);
 32850  002D10  C0D8  F093         	movff	sprintf@fval,___ftadd@f1
 32851  002D14  C0D9  F094         	movff	sprintf@fval+1,___ftadd@f1+1
 32852  002D18  C0DA  F095         	movff	sprintf@fval+2,___ftadd@f1+2
 32853  002D1C  0100               	movlb	0	; () banked
 32854  002D1E  51CC               	movf	sprintf@prec& (0+255),w,b
 32855  002D20  EC71  F034         	call	_fround
 32856  002D24  C089  F096         	movff	?_fround,___ftadd@f2
 32857  002D28  C08A  F097         	movff	?_fround+1,___ftadd@f2+1
 32858  002D2C  C08B  F098         	movff	?_fround+2,___ftadd@f2+2
 32859  002D30  EC1D  F037         	call	___ftadd	;wreg free
 32860  002D34  C093  F0D8         	movff	?___ftadd,sprintf@fval
 32861  002D38  C094  F0D9         	movff	?___ftadd+1,sprintf@fval+1
 32862  002D3C  C095  F0DA         	movff	?___ftadd+2,sprintf@fval+2
 32863  002D40  D000               	goto	l9774
 32864  002D42                     l9774:
 32865                           
 32866                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 32867  002D42  0100               	movlb	0	; () banked
 32868  002D44  BFD3               	btfsc	(sprintf@exp+1)& (0+255),7,b
 32869  002D46  D008               	goto	l9776
 32870  002D48  0100               	movlb	0	; () banked
 32871  002D4A  51D3               	movf	(sprintf@exp+1)& (0+255),w,b
 32872  002D4C  E12C               	bnz	l9782
 32873  002D4E  0E0A               	movlw	10
 32874  002D50  0100               	movlb	0	; () banked
 32875  002D52  5DD2               	subwf	sprintf@exp& (0+255),w,b
 32876  002D54  B0D8               	btfsc	status,0,c
 32877  002D56  D027               	goto	l9782
 32878  002D58                     l9776:
 32879                           
 32880                           ; BSR set to: 0
 32881  002D58  0100               	movlb	0	; () banked
 32882  002D5A  51D8               	movf	sprintf@fval& (0+255),w,b
 32883  002D5C  0100               	movlb	0	; () banked
 32884  002D5E  11D9               	iorwf	(sprintf@fval+1)& (0+255),w,b
 32885  002D60  0100               	movlb	0	; () banked
 32886  002D62  11DA               	iorwf	(sprintf@fval+2)& (0+255),w,b
 32887  002D64  B4D8               	btfsc	status,2,c
 32888  002D66  D07F               	goto	l9796
 32889                           
 32890                           ; BSR set to: 0
 32891  002D68  C0D8  F09F         	movff	sprintf@fval,___fttol@f1
 32892  002D6C  C0D9  F0A0         	movff	sprintf@fval+1,___fttol@f1+1
 32893  002D70  C0DA  F0A1         	movff	sprintf@fval+2,___fttol@f1+2
 32894  002D74  EC6A  F041         	call	___fttol	;wreg free
 32895  002D78  0100               	movlb	0	; () banked
 32896  002D7A  519F               	movf	?___fttol& (0+255),w,b
 32897  002D7C  0100               	movlb	0	; () banked
 32898  002D7E  11A0               	iorwf	(?___fttol+1)& (0+255),w,b
 32899  002D80  0100               	movlb	0	; () banked
 32900  002D82  11A1               	iorwf	(?___fttol+2)& (0+255),w,b
 32901  002D84  0100               	movlb	0	; () banked
 32902  002D86  11A2               	iorwf	(?___fttol+3)& (0+255),w,b
 32903  002D88  A4D8               	btfss	status,2,c
 32904  002D8A  D06D               	goto	l9796
 32905                           
 32906                           ; BSR set to: 0
 32907  002D8C  0100               	movlb	0	; () banked
 32908  002D8E  BFD3               	btfsc	(sprintf@exp+1)& (0+255),7,b
 32909  002D90  D06A               	goto	l9796
 32910  002D92  0100               	movlb	0	; () banked
 32911  002D94  51D3               	movf	(sprintf@exp+1)& (0+255),w,b
 32912  002D96  E107               	bnz	l9782
 32913  002D98  0E02               	movlw	2
 32914  002D9A  0100               	movlb	0	; () banked
 32915  002D9C  5DD2               	subwf	sprintf@exp& (0+255),w,b
 32916  002D9E  B0D8               	btfsc	status,0,c
 32917  002DA0  D002               	goto	l9782
 32918  002DA2  D061               	goto	l9796
 32919  002DA4  D000               	goto	l9782
 32920  002DA6                     l9782:
 32921                           
 32922                           ; BSR set to: 0
 32923                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 32924  002DA6  C0CE  F060         	movff	sprintf@tmpval,___ftge@ff1
 32925  002DAA  C0CF  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 32926  002DAE  C0D0  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 32927  002DB2  0E70               	movlw	112
 32928  002DB4  0100               	movlb	0	; () banked
 32929  002DB6  6F63               	movwf	___ftge@ff2& (0+255),b
 32930  002DB8  0E89               	movlw	137
 32931  002DBA  0100               	movlb	0	; () banked
 32932  002DBC  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 32933  002DBE  0E40               	movlw	64
 32934  002DC0  0100               	movlb	0	; () banked
 32935  002DC2  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 32936  002DC4  EC78  F049         	call	___ftge	;wreg free
 32937  002DC8  0100               	movlb	0	; () banked
 32938  002DCA  B0D8               	btfsc	status,0,c
 32939  002DCC  D003               	goto	l9786
 32940                           
 32941                           ; BSR set to: 0
 32942                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 32943  002DCE  0100               	movlb	0	; () banked
 32944  002DD0  0EF7               	movlw	247
 32945  002DD2  D002               	goto	L18
 32946  002DD4                     l9786:
 32947                           
 32948                           ; BSR set to: 0
 32949                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 32950  002DD4  0100               	movlb	0	; () banked
 32951  002DD6  0EF8               	movlw	248
 32952  002DD8                     L18:
 32953  002DD8  27D2               	addwf	sprintf@exp& (0+255),f,b
 32954  002DDA  0EFF               	movlw	255
 32955  002DDC  23D3               	addwfc	(sprintf@exp+1)& (0+255),f,b
 32956  002DDE  D000               	goto	l9788
 32957  002DE0                     l9788:
 32958                           
 32959                           ; BSR set to: 0
 32960                           ;doprnt.c: 1124: }
 32961                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 32962  002DE0  0100               	movlb	0	; () banked
 32963  002DE2  51D2               	movf	sprintf@exp& (0+255),w,b
 32964  002DE4  ECE7  F02B         	call	_scale
 32965  002DE8  C089  F0CE         	movff	?_scale,sprintf@tmpval
 32966  002DEC  C08A  F0CF         	movff	?_scale+1,sprintf@tmpval+1
 32967  002DF0  C08B  F0D0         	movff	?_scale+2,sprintf@tmpval+2
 32968                           
 32969                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 32970  002DF4  D017               	goto	l9792
 32971  002DF6  C0D8  F060         	movff	sprintf@fval,__div_to_l_@f1
 32972  002DFA  C0D9  F061         	movff	sprintf@fval+1,__div_to_l_@f1+1
 32973  002DFE  C0DA  F062         	movff	sprintf@fval+2,__div_to_l_@f1+2
 32974  002E02  C0CE  F063         	movff	sprintf@tmpval,__div_to_l_@f2
 32975  002E06  C0CF  F064         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
 32976  002E0A  C0D0  F065         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
 32977  002E0E  EC17  F03D         	call	__div_to_l_	;wreg free
 32978  002E12  C060  F0D4         	movff	?__div_to_l_,sprintf@val
 32979  002E16  C061  F0D5         	movff	?__div_to_l_+1,sprintf@val+1
 32980  002E1A  C062  F0D6         	movff	?__div_to_l_+2,sprintf@val+2
 32981  002E1E  C063  F0D7         	movff	?__div_to_l_+3,sprintf@val+3
 32982  002E22  D017               	goto	l9794
 32983  002E24                     l9792:
 32984  002E24  C0D8  F060         	movff	sprintf@fval,__tdiv_to_l_@f1
 32985  002E28  C0D9  F061         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
 32986  002E2C  C0DA  F062         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
 32987  002E30  C0CE  F063         	movff	sprintf@tmpval,__tdiv_to_l_@f2
 32988  002E34  C0CF  F064         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
 32989  002E38  C0D0  F065         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
 32990  002E3C  EC44  F03C         	call	__tdiv_to_l_	;wreg free
 32991  002E40  C060  F0D4         	movff	?__tdiv_to_l_,sprintf@val
 32992  002E44  C061  F0D5         	movff	?__tdiv_to_l_+1,sprintf@val+1
 32993  002E48  C062  F0D6         	movff	?__tdiv_to_l_+2,sprintf@val+2
 32994  002E4C  C063  F0D7         	movff	?__tdiv_to_l_+3,sprintf@val+3
 32995  002E50  D000               	goto	l9794
 32996  002E52                     l9794:
 32997                           
 32998                           ;doprnt.c: 1129: fval = 0.0;
 32999  002E52  0E00               	movlw	0
 33000  002E54  0100               	movlb	0	; () banked
 33001  002E56  6FD8               	movwf	sprintf@fval& (0+255),b
 33002  002E58  0E00               	movlw	0
 33003  002E5A  0100               	movlb	0	; () banked
 33004  002E5C  6FD9               	movwf	(sprintf@fval+1)& (0+255),b
 33005  002E5E  0E00               	movlw	0
 33006  002E60  0100               	movlb	0	; () banked
 33007  002E62  6FDA               	movwf	(sprintf@fval+2)& (0+255),b
 33008                           
 33009                           ;doprnt.c: 1130: } else {
 33010  002E64  D034               	goto	l9800
 33011  002E66                     l9796:
 33012                           
 33013                           ; BSR set to: 0
 33014                           ;doprnt.c: 1131: val = (unsigned long)fval;
 33015  002E66  C0D8  F09F         	movff	sprintf@fval,___fttol@f1
 33016  002E6A  C0D9  F0A0         	movff	sprintf@fval+1,___fttol@f1+1
 33017  002E6E  C0DA  F0A1         	movff	sprintf@fval+2,___fttol@f1+2
 33018  002E72  EC6A  F041         	call	___fttol	;wreg free
 33019  002E76  C09F  F0D4         	movff	?___fttol,sprintf@val
 33020  002E7A  C0A0  F0D5         	movff	?___fttol+1,sprintf@val+1
 33021  002E7E  C0A1  F0D6         	movff	?___fttol+2,sprintf@val+2
 33022  002E82  C0A2  F0D7         	movff	?___fttol+3,sprintf@val+3
 33023                           
 33024                           ;doprnt.c: 1132: fval -= (double)val;
 33025  002E86  C0D8  F09F         	movff	sprintf@fval,___ftsub@f1
 33026  002E8A  C0D9  F0A0         	movff	sprintf@fval+1,___ftsub@f1+1
 33027  002E8E  C0DA  F0A1         	movff	sprintf@fval+2,___ftsub@f1+2
 33028  002E92  C0D4  F068         	movff	sprintf@val,___lltoft@c
 33029  002E96  C0D5  F069         	movff	sprintf@val+1,___lltoft@c+1
 33030  002E9A  C0D6  F06A         	movff	sprintf@val+2,___lltoft@c+2
 33031  002E9E  C0D7  F06B         	movff	sprintf@val+3,___lltoft@c+3
 33032  002EA2  EC24  F04F         	call	___lltoft	;wreg free
 33033  002EA6  C068  F0A2         	movff	?___lltoft,___ftsub@f2
 33034  002EAA  C069  F0A3         	movff	?___lltoft+1,___ftsub@f2+1
 33035  002EAE  C06A  F0A4         	movff	?___lltoft+2,___ftsub@f2+2
 33036  002EB2  EC94  F051         	call	___ftsub	;wreg free
 33037  002EB6  C09F  F0D8         	movff	?___ftsub,sprintf@fval
 33038  002EBA  C0A0  F0D9         	movff	?___ftsub+1,sprintf@fval+1
 33039  002EBE  C0A1  F0DA         	movff	?___ftsub+2,sprintf@fval+2
 33040                           
 33041                           ;doprnt.c: 1133: exp = 0;
 33042  002EC2  0E00               	movlw	0
 33043  002EC4  0100               	movlb	0	; () banked
 33044  002EC6  6FD3               	movwf	(sprintf@exp+1)& (0+255),b
 33045  002EC8  0E00               	movlw	0
 33046  002ECA  6FD2               	movwf	sprintf@exp& (0+255),b
 33047  002ECC  D000               	goto	l9800
 33048  002ECE                     l9800:
 33049                           
 33050                           ; BSR set to: 0
 33051                           ;doprnt.c: 1134: }
 33052                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 33053  002ECE  0E01               	movlw	1
 33054  002ED0  0100               	movlb	0	; () banked
 33055  002ED2  6FDF               	movwf	sprintf@c& (0+255),b
 33056  002ED4                     l9802:
 33057                           
 33058                           ; BSR set to: 0
 33059  002ED4  0E0A               	movlw	10
 33060  002ED6  0100               	movlb	0	; () banked
 33061  002ED8  19DF               	xorwf	sprintf@c& (0+255),w,b
 33062  002EDA  B4D8               	btfsc	status,2,c
 33063  002EDC  D025               	goto	l9814
 33064  002EDE  D001               	goto	l9806
 33065                           
 33066                           ; BSR set to: 0
 33067  002EE0  D023               	goto	l9814
 33068  002EE2                     l9806:
 33069                           
 33070                           ; BSR set to: 0
 33071                           ;doprnt.c: 1137: if(val < dpowers[c])
 33072  002EE2  0100               	movlb	0	; () banked
 33073  002EE4  51DF               	movf	sprintf@c& (0+255),w,b
 33074  002EE6  0D04               	mullw	4
 33075  002EE8  0EC3               	movlw	low _dpowers
 33076  002EEA  24F3               	addwf	prodl,w,c
 33077  002EEC  6EF6               	movwf	tblptrl,c
 33078  002EEE  0EED               	movlw	high _dpowers
 33079  002EF0  20F4               	addwfc	prodh,w,c
 33080  002EF2  6EF7               	movwf	tblptrh,c
 33081  002EF4                     	if	1	;There are 3 active tblptr bytes
 33082  002EF4  6AF8               	clrf	tblptru,c
 33083  002EF6  0E00               	movlw	low (__mediumconst shr (0+16))
 33084  002EF8  22F8               	addwfc	tblptru,f,c
 33085  002EFA                     	endif
 33086  002EFA  0009               	tblrd		*+
 33087  002EFC  50F5               	movf	tablat,w,c
 33088  002EFE  0100               	movlb	0	; () banked
 33089  002F00  5DD4               	subwf	sprintf@val& (0+255),w,b
 33090  002F02  0009               	tblrd		*+
 33091  002F04  50F5               	movf	tablat,w,c
 33092  002F06  0100               	movlb	0	; () banked
 33093  002F08  59D5               	subwfb	(sprintf@val+1)& (0+255),w,b
 33094  002F0A  0009               	tblrd		*+
 33095  002F0C  50F5               	movf	tablat,w,c
 33096  002F0E  0100               	movlb	0	; () banked
 33097  002F10  59D6               	subwfb	(sprintf@val+2)& (0+255),w,b
 33098  002F12  0009               	tblrd		*+
 33099  002F14  50F5               	movf	tablat,w,c
 33100  002F16  0100               	movlb	0	; () banked
 33101  002F18  59D7               	subwfb	(sprintf@val+3)& (0+255),w,b
 33102  002F1A  A0D8               	btfss	status,0,c
 33103  002F1C  D005               	goto	l9814
 33104  002F1E  D001               	goto	l9810
 33105                           
 33106                           ; BSR set to: 0
 33107                           ;doprnt.c: 1138: break;
 33108  002F20  D003               	goto	l9814
 33109  002F22                     l9810:
 33110                           
 33111                           ; BSR set to: 0
 33112  002F22  0100               	movlb	0	; () banked
 33113  002F24  2BDF               	incf	sprintf@c& (0+255),f,b
 33114  002F26  D7D6               	goto	l9802
 33115  002F28                     l9814:
 33116                           
 33117                           ; BSR set to: 0
 33118                           ;doprnt.c: 1142: width -= prec + c + exp;
 33119  002F28  C0DF  F0BC         	movff	sprintf@c,??_sprintf
 33120  002F2C  0100               	movlb	0	; () banked
 33121  002F2E  6BBD               	clrf	(??_sprintf+1)& (0+255),b
 33122  002F30  BFBC               	btfsc	??_sprintf& (0+255),7,b
 33123  002F32  07BD               	decf	(??_sprintf+1)& (0+255),f,b
 33124  002F34  0100               	movlb	0	; () banked
 33125  002F36  51CC               	movf	sprintf@prec& (0+255),w,b
 33126  002F38  0100               	movlb	0	; () banked
 33127  002F3A  27BC               	addwf	??_sprintf& (0+255),f,b
 33128  002F3C  0100               	movlb	0	; () banked
 33129  002F3E  51CD               	movf	(sprintf@prec+1)& (0+255),w,b
 33130  002F40  0100               	movlb	0	; () banked
 33131  002F42  23BD               	addwfc	(??_sprintf+1)& (0+255),f,b
 33132  002F44  0100               	movlb	0	; () banked
 33133  002F46  51D2               	movf	sprintf@exp& (0+255),w,b
 33134  002F48  0100               	movlb	0	; () banked
 33135  002F4A  27BC               	addwf	??_sprintf& (0+255),f,b
 33136  002F4C  0100               	movlb	0	; () banked
 33137  002F4E  51D3               	movf	(sprintf@exp+1)& (0+255),w,b
 33138  002F50  0100               	movlb	0	; () banked
 33139  002F52  23BD               	addwfc	(??_sprintf+1)& (0+255),f,b
 33140  002F54  0100               	movlb	0	; () banked
 33141  002F56  51BC               	movf	??_sprintf& (0+255),w,b
 33142  002F58  0100               	movlb	0	; () banked
 33143  002F5A  5FDB               	subwf	sprintf@width& (0+255),f,b
 33144  002F5C  0100               	movlb	0	; () banked
 33145  002F5E  51BD               	movf	(??_sprintf+1)& (0+255),w,b
 33146  002F60  0100               	movlb	0	; () banked
 33147  002F62  5BDC               	subwfb	(sprintf@width+1)& (0+255),f,b
 33148                           
 33149                           ;doprnt.c: 1143: if(
 33150                           ;doprnt.c: 1147: prec)
 33151  002F64  0100               	movlb	0	; () banked
 33152  002F66  51CC               	movf	sprintf@prec& (0+255),w,b
 33153  002F68  0100               	movlb	0	; () banked
 33154  002F6A  11CD               	iorwf	(sprintf@prec+1)& (0+255),w,b
 33155  002F6C  B4D8               	btfsc	status,2,c
 33156  002F6E  D005               	goto	l9818
 33157                           
 33158                           ; BSR set to: 0
 33159                           ;doprnt.c: 1148: width--;
 33160  002F70  0100               	movlb	0	; () banked
 33161  002F72  07DB               	decf	sprintf@width& (0+255),f,b
 33162  002F74  A0D8               	btfss	status,0,c
 33163  002F76  07DC               	decf	(sprintf@width+1)& (0+255),f,b
 33164  002F78  D000               	goto	l9818
 33165  002F7A                     l9818:
 33166                           
 33167                           ; BSR set to: 0
 33168                           ;doprnt.c: 1149: if(flag & 0x03)
 33169  002F7A  0E03               	movlw	3
 33170  002F7C  0100               	movlb	0	; () banked
 33171  002F7E  15DD               	andwf	sprintf@flag& (0+255),w,b
 33172  002F80  0100               	movlb	0	; () banked
 33173  002F82  6FBC               	movwf	??_sprintf& (0+255),b
 33174  002F84  0E00               	movlw	0
 33175  002F86  0100               	movlb	0	; () banked
 33176  002F88  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
 33177  002F8A  0100               	movlb	0	; () banked
 33178  002F8C  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 33179  002F8E  0100               	movlb	0	; () banked
 33180  002F90  51BC               	movf	??_sprintf& (0+255),w,b
 33181  002F92  0100               	movlb	0	; () banked
 33182  002F94  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
 33183  002F96  B4D8               	btfsc	status,2,c
 33184  002F98  D005               	goto	l9822
 33185                           
 33186                           ; BSR set to: 0
 33187                           ;doprnt.c: 1150: width--;
 33188  002F9A  0100               	movlb	0	; () banked
 33189  002F9C  07DB               	decf	sprintf@width& (0+255),f,b
 33190  002F9E  A0D8               	btfss	status,0,c
 33191  002FA0  07DC               	decf	(sprintf@width+1)& (0+255),f,b
 33192  002FA2  D000               	goto	l9822
 33193  002FA4                     l9822:
 33194                           
 33195                           ; BSR set to: 0
 33196                           ;doprnt.c: 1153: if(flag & 0x04) {
 33197  002FA4  0100               	movlb	0	; () banked
 33198  002FA6  A5DD               	btfss	sprintf@flag& (0+255),2,b
 33199  002FA8  D043               	goto	l9844
 33200                           
 33201                           ; BSR set to: 0
 33202                           ;doprnt.c: 1157: if(flag & 0x03)
 33203  002FAA  0E03               	movlw	3
 33204  002FAC  0100               	movlb	0	; () banked
 33205  002FAE  15DD               	andwf	sprintf@flag& (0+255),w,b
 33206  002FB0  0100               	movlb	0	; () banked
 33207  002FB2  6FBC               	movwf	??_sprintf& (0+255),b
 33208  002FB4  0E00               	movlw	0
 33209  002FB6  0100               	movlb	0	; () banked
 33210  002FB8  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
 33211  002FBA  0100               	movlb	0	; () banked
 33212  002FBC  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 33213  002FBE  0100               	movlb	0	; () banked
 33214  002FC0  51BC               	movf	??_sprintf& (0+255),w,b
 33215  002FC2  0100               	movlb	0	; () banked
 33216  002FC4  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
 33217  002FC6  B4D8               	btfsc	status,2,c
 33218  002FC8  D018               	goto	l9836
 33219                           
 33220                           ; BSR set to: 0
 33221                           ;doprnt.c: 1159: ((*sp++ = ('-')));
 33222  002FCA  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 33223  002FCE  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 33224  002FD2  0E2D               	movlw	45
 33225  002FD4  6EDF               	movwf	indf2,c
 33226                           
 33227                           ; BSR set to: 0
 33228  002FD6  0100               	movlb	0	; () banked
 33229  002FD8  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 33230  002FDA  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 33231                           
 33232                           ; BSR set to: 0
 33233                           ;doprnt.c: 1168: while(width > 0) {
 33234  002FDC  D00E               	goto	l9836
 33235  002FDE                     l9830:
 33236                           
 33237                           ; BSR set to: 0
 33238                           ;doprnt.c: 1169: ((*sp++ = ('0')));
 33239  002FDE  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 33240  002FE2  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 33241  002FE6  0E30               	movlw	48
 33242  002FE8  6EDF               	movwf	indf2,c
 33243                           
 33244                           ; BSR set to: 0
 33245  002FEA  0100               	movlb	0	; () banked
 33246  002FEC  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 33247  002FEE  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 33248                           
 33249                           ; BSR set to: 0
 33250                           ;doprnt.c: 1170: width--;
 33251  002FF0  0100               	movlb	0	; () banked
 33252  002FF2  07DB               	decf	sprintf@width& (0+255),f,b
 33253  002FF4  A0D8               	btfss	status,0,c
 33254  002FF6  07DC               	decf	(sprintf@width+1)& (0+255),f,b
 33255  002FF8  D000               	goto	l9836
 33256  002FFA                     l9836:
 33257                           
 33258                           ; BSR set to: 0
 33259  002FFA  0100               	movlb	0	; () banked
 33260  002FFC  BFDC               	btfsc	(sprintf@width+1)& (0+255),7,b
 33261  002FFE  D08A               	goto	l9860
 33262  003000  0100               	movlb	0	; () banked
 33263  003002  51DC               	movf	(sprintf@width+1)& (0+255),w,b
 33264  003004  E1EC               	bnz	l9830
 33265  003006  0100               	movlb	0	; () banked
 33266  003008  05DB               	decf	sprintf@width& (0+255),w,b
 33267  00300A  A0D8               	btfss	status,0,c
 33268  00300C  D083               	goto	l9860
 33269  00300E  D7E7               	goto	l9830
 33270                           
 33271                           ; BSR set to: 0
 33272                           ;doprnt.c: 1171: }
 33273                           ;doprnt.c: 1173: } else
 33274  003010  D081               	goto	l9860
 33275                           
 33276                           ; BSR set to: 0
 33277                           ;doprnt.c: 1175: {
 33278                           ;doprnt.c: 1180: while(width > 0) {
 33279  003012  D00E               	goto	l9844
 33280  003014                     l9838:
 33281                           
 33282                           ; BSR set to: 0
 33283                           ;doprnt.c: 1181: ((*sp++ = (' ')));
 33284  003014  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 33285  003018  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 33286  00301C  0E20               	movlw	32
 33287  00301E  6EDF               	movwf	indf2,c
 33288                           
 33289                           ; BSR set to: 0
 33290  003020  0100               	movlb	0	; () banked
 33291  003022  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 33292  003024  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 33293                           
 33294                           ; BSR set to: 0
 33295                           ;doprnt.c: 1182: width--;
 33296  003026  0100               	movlb	0	; () banked
 33297  003028  07DB               	decf	sprintf@width& (0+255),f,b
 33298  00302A  A0D8               	btfss	status,0,c
 33299  00302C  07DC               	decf	(sprintf@width+1)& (0+255),f,b
 33300  00302E  D000               	goto	l9844
 33301  003030                     l9844:
 33302                           
 33303                           ; BSR set to: 0
 33304  003030  0100               	movlb	0	; () banked
 33305  003032  BFDC               	btfsc	(sprintf@width+1)& (0+255),7,b
 33306  003034  D007               	goto	l9846
 33307  003036  0100               	movlb	0	; () banked
 33308  003038  51DC               	movf	(sprintf@width+1)& (0+255),w,b
 33309  00303A  E1EC               	bnz	l9838
 33310  00303C  0100               	movlb	0	; () banked
 33311  00303E  05DB               	decf	sprintf@width& (0+255),w,b
 33312  003040  B0D8               	btfsc	status,0,c
 33313  003042  D7E8               	goto	l9838
 33314  003044                     l9846:
 33315                           
 33316                           ; BSR set to: 0
 33317                           ;doprnt.c: 1183: }
 33318                           ;doprnt.c: 1188: if(flag & 0x03)
 33319  003044  0E03               	movlw	3
 33320  003046  0100               	movlb	0	; () banked
 33321  003048  15DD               	andwf	sprintf@flag& (0+255),w,b
 33322  00304A  0100               	movlb	0	; () banked
 33323  00304C  6FBC               	movwf	??_sprintf& (0+255),b
 33324  00304E  0E00               	movlw	0
 33325  003050  0100               	movlb	0	; () banked
 33326  003052  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
 33327  003054  0100               	movlb	0	; () banked
 33328  003056  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 33329  003058  0100               	movlb	0	; () banked
 33330  00305A  51BC               	movf	??_sprintf& (0+255),w,b
 33331  00305C  0100               	movlb	0	; () banked
 33332  00305E  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
 33333  003060  B4D8               	btfsc	status,2,c
 33334  003062  D058               	goto	l9860
 33335                           
 33336                           ; BSR set to: 0
 33337                           ;doprnt.c: 1190: ((*sp++ = ('-')));
 33338  003064  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 33339  003068  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 33340  00306C  0E2D               	movlw	45
 33341  00306E  D050               	goto	L19
 33342  003070                     l9850:
 33343                           
 33344                           ; BSR set to: 0
 33345  003070  0100               	movlb	0	; () banked
 33346  003072  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 33347  003074  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 33348                           
 33349                           ; BSR set to: 0
 33350                           ;doprnt.c: 1195: }
 33351                           ;doprnt.c: 1196: while(c--) {
 33352                           
 33353                           ; BSR set to: 0
 33354  003076  D04E               	goto	l9860
 33355  003078                     l9852:
 33356                           
 33357                           ; BSR set to: 0
 33358                           ;doprnt.c: 1200: {
 33359                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 33360  003078  C0D4  F060         	movff	sprintf@val,___lldiv@dividend
 33361  00307C  C0D5  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 33362  003080  C0D6  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 33363  003084  C0D7  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 33364  003088  0100               	movlb	0	; () banked
 33365  00308A  51DF               	movf	sprintf@c& (0+255),w,b
 33366  00308C  0D04               	mullw	4
 33367  00308E  0EC3               	movlw	low _dpowers
 33368  003090  24F3               	addwf	prodl,w,c
 33369  003092  6EF6               	movwf	tblptrl,c
 33370  003094  0EED               	movlw	high _dpowers
 33371  003096  20F4               	addwfc	prodh,w,c
 33372  003098  6EF7               	movwf	tblptrh,c
 33373  00309A                     	if	1	;There are 3 active tblptr bytes
 33374  00309A  6AF8               	clrf	tblptru,c
 33375  00309C  0E00               	movlw	low (__mediumconst shr (0+16))
 33376  00309E  22F8               	addwfc	tblptru,f,c
 33377  0030A0                     	endif
 33378  0030A0  0009               	tblrd		*+
 33379  0030A2  CFF5 F064          	movff	tablat,___lldiv@divisor
 33380  0030A6  0009               	tblrd		*+
 33381  0030A8  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 33382  0030AC  0009               	tblrd		*+
 33383  0030AE  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 33384  0030B2  000A               	tblrd		*-
 33385  0030B4  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 33386  0030B8  ECAA  F04A         	call	___lldiv	;wreg free
 33387  0030BC  C060  F0CE         	movff	?___lldiv,sprintf@tmpval
 33388  0030C0  C061  F0CF         	movff	?___lldiv+1,sprintf@tmpval+1
 33389  0030C4  C062  F0D0         	movff	?___lldiv+2,sprintf@tmpval+2
 33390  0030C8  C063  F0D1         	movff	?___lldiv+3,sprintf@tmpval+3
 33391                           
 33392                           ;doprnt.c: 1202: tmpval.vd %= 10;
 33393  0030CC  C0CE  F06D         	movff	sprintf@tmpval,___llmod@dividend
 33394  0030D0  C0CF  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
 33395  0030D4  C0D0  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
 33396  0030D8  C0D1  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
 33397  0030DC  0E0A               	movlw	10
 33398  0030DE  0100               	movlb	0	; () banked
 33399  0030E0  6F71               	movwf	___llmod@divisor& (0+255),b
 33400  0030E2  0E00               	movlw	0
 33401  0030E4  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 33402  0030E6  0E00               	movlw	0
 33403  0030E8  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 33404  0030EA  0E00               	movlw	0
 33405  0030EC  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 33406  0030EE  EC75  F04C         	call	___llmod	;wreg free
 33407  0030F2  C06D  F0CE         	movff	?___llmod,sprintf@tmpval
 33408  0030F6  C06E  F0CF         	movff	?___llmod+1,sprintf@tmpval+1
 33409  0030FA  C06F  F0D0         	movff	?___llmod+2,sprintf@tmpval+2
 33410  0030FE  C070  F0D1         	movff	?___llmod+3,sprintf@tmpval+3
 33411                           
 33412                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 33413  003102  0100               	movlb	0	; () banked
 33414  003104  51CE               	movf	sprintf@tmpval& (0+255),w,b
 33415  003106  0F30               	addlw	48
 33416  003108  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 33417  00310C  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 33418  003110                     L19:
 33419  003110  6EDF               	movwf	indf2,c
 33420  003112  D7AE               	goto	l9850
 33421  003114                     l9860:
 33422                           
 33423                           ; BSR set to: 0
 33424  003114  0100               	movlb	0	; () banked
 33425  003116  07DF               	decf	sprintf@c& (0+255),f,b
 33426  003118  0100               	movlb	0	; () banked
 33427  00311A  29DF               	incf	sprintf@c& (0+255),w,b
 33428  00311C  B4D8               	btfsc	status,2,c
 33429  00311E  D010               	goto	l9868
 33430  003120  D7AB               	goto	l9852
 33431                           
 33432                           ; BSR set to: 0
 33433                           ;doprnt.c: 1204: }
 33434                           ;doprnt.c: 1206: }
 33435                           ;doprnt.c: 1207: while(exp > 0) {
 33436  003122  D00E               	goto	l9868
 33437  003124                     l9862:
 33438                           
 33439                           ; BSR set to: 0
 33440                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 33441  003124  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 33442  003128  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 33443  00312C  0E30               	movlw	48
 33444  00312E  6EDF               	movwf	indf2,c
 33445                           
 33446                           ; BSR set to: 0
 33447  003130  0100               	movlb	0	; () banked
 33448  003132  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 33449  003134  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 33450                           
 33451                           ; BSR set to: 0
 33452                           ;doprnt.c: 1209: exp--;
 33453  003136  0100               	movlb	0	; () banked
 33454  003138  07D2               	decf	sprintf@exp& (0+255),f,b
 33455  00313A  A0D8               	btfss	status,0,c
 33456  00313C  07D3               	decf	(sprintf@exp+1)& (0+255),f,b
 33457  00313E  D000               	goto	l9868
 33458  003140                     l9868:
 33459                           
 33460                           ; BSR set to: 0
 33461  003140  0100               	movlb	0	; () banked
 33462  003142  BFD3               	btfsc	(sprintf@exp+1)& (0+255),7,b
 33463  003144  D007               	goto	l9870
 33464  003146  0100               	movlb	0	; () banked
 33465  003148  51D3               	movf	(sprintf@exp+1)& (0+255),w,b
 33466  00314A  E1EC               	bnz	l9862
 33467  00314C  0100               	movlb	0	; () banked
 33468  00314E  05D2               	decf	sprintf@exp& (0+255),w,b
 33469  003150  B0D8               	btfsc	status,0,c
 33470  003152  D7E8               	goto	l9862
 33471  003154                     l9870:
 33472                           
 33473                           ; BSR set to: 0
 33474                           ;doprnt.c: 1210: }
 33475                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 33476  003154  0100               	movlb	0	; () banked
 33477  003156  BFCD               	btfsc	(sprintf@prec+1)& (0+255),7,b
 33478  003158  D00C               	goto	l2576
 33479  00315A  0100               	movlb	0	; () banked
 33480  00315C  51CD               	movf	(sprintf@prec+1)& (0+255),w,b
 33481  00315E  E105               	bnz	u9980
 33482  003160  0E09               	movlw	9
 33483  003162  0100               	movlb	0	; () banked
 33484  003164  5DCC               	subwf	sprintf@prec& (0+255),w,b
 33485  003166  A0D8               	btfss	status,0,c
 33486  003168  D004               	goto	l2576
 33487  00316A                     u9980:
 33488                           
 33489                           ; BSR set to: 0
 33490                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 33491  00316A  0E08               	movlw	8
 33492  00316C  0100               	movlb	0	; () banked
 33493  00316E  6FDF               	movwf	sprintf@c& (0+255),b
 33494  003170  D003               	goto	l9874
 33495  003172                     l2576:
 33496                           
 33497                           ; BSR set to: 0
 33498                           ;doprnt.c: 1213: else
 33499                           ;doprnt.c: 1214: c = prec;
 33500  003172  C0CC  F0DF         	movff	sprintf@prec,sprintf@c
 33501  003176  D000               	goto	l9874
 33502  003178                     l9874:
 33503                           
 33504                           ; BSR set to: 0
 33505                           ;doprnt.c: 1215: prec -= c;
 33506  003178  0100               	movlb	0	; () banked
 33507  00317A  51DF               	movf	sprintf@c& (0+255),w,b
 33508  00317C  0100               	movlb	0	; () banked
 33509  00317E  5FCC               	subwf	sprintf@prec& (0+255),f,b
 33510  003180  0E00               	movlw	0
 33511  003182  0100               	movlb	0	; () banked
 33512  003184  BFDF               	btfsc	sprintf@c& (0+255),7,b
 33513  003186  0EFF               	movlw	255
 33514  003188  0100               	movlb	0	; () banked
 33515  00318A  5BCD               	subwfb	(sprintf@prec+1)& (0+255),f,b
 33516                           
 33517                           ; BSR set to: 0
 33518                           ;doprnt.c: 1219: if(c)
 33519  00318C  0100               	movlb	0	; () banked
 33520  00318E  51DF               	movf	sprintf@c& (0+255),w,b
 33521  003190  0100               	movlb	0	; () banked
 33522  003192  B4D8               	btfsc	status,2,c
 33523  003194  D00A               	goto	l9882
 33524                           
 33525                           ; BSR set to: 0
 33526                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 33527  003196  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 33528  00319A  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 33529  00319E  0E2E               	movlw	46
 33530  0031A0  6EDF               	movwf	indf2,c
 33531                           
 33532                           ; BSR set to: 0
 33533  0031A2  0100               	movlb	0	; () banked
 33534  0031A4  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 33535  0031A6  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 33536  0031A8  D000               	goto	l9882
 33537  0031AA                     l9882:
 33538                           
 33539                           ; BSR set to: 0
 33540                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 33541  0031AA  0100               	movlb	0	; () banked
 33542  0031AC  51DF               	movf	sprintf@c& (0+255),w,b
 33543  0031AE  ECE7  F02B         	call	_scale
 33544  0031B2  C089  F0C2         	movff	?_scale,_sprintf$4081
 33545  0031B6  C08A  F0C3         	movff	?_scale+1,_sprintf$4081+1
 33546  0031BA  C08B  F0C4         	movff	?_scale+2,_sprintf$4081+2
 33547                           
 33548                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 33549  0031BE  C0D8  F07D         	movff	sprintf@fval,___ftmul@f2
 33550  0031C2  C0D9  F07E         	movff	sprintf@fval+1,___ftmul@f2+1
 33551  0031C6  C0DA  F07F         	movff	sprintf@fval+2,___ftmul@f2+2
 33552  0031CA  C0C2  F07A         	movff	_sprintf$4081,___ftmul@f1
 33553  0031CE  C0C3  F07B         	movff	_sprintf$4081+1,___ftmul@f1+1
 33554  0031D2  C0C4  F07C         	movff	_sprintf$4081+2,___ftmul@f1+2
 33555  0031D6  EC5D  F03F         	call	___ftmul	;wreg free
 33556  0031DA  C07A  F09F         	movff	?___ftmul,___fttol@f1
 33557  0031DE  C07B  F0A0         	movff	?___ftmul+1,___fttol@f1+1
 33558  0031E2  C07C  F0A1         	movff	?___ftmul+2,___fttol@f1+2
 33559  0031E6  EC6A  F041         	call	___fttol	;wreg free
 33560  0031EA  C09F  F0D4         	movff	?___fttol,sprintf@val
 33561  0031EE  C0A0  F0D5         	movff	?___fttol+1,sprintf@val+1
 33562  0031F2  C0A1  F0D6         	movff	?___fttol+2,sprintf@val+2
 33563  0031F6  C0A2  F0D7         	movff	?___fttol+3,sprintf@val+3
 33564                           
 33565                           ;doprnt.c: 1228: while(c--) {
 33566  0031FA  D07B               	goto	l9896
 33567  0031FC                     l9886:
 33568                           
 33569                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 33570  0031FC  C0D4  F060         	movff	sprintf@val,___lldiv@dividend
 33571  003200  C0D5  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 33572  003204  C0D6  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 33573  003208  C0D7  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 33574  00320C  0100               	movlb	0	; () banked
 33575  00320E  51DF               	movf	sprintf@c& (0+255),w,b
 33576  003210  0D04               	mullw	4
 33577  003212  0EC3               	movlw	low _dpowers
 33578  003214  24F3               	addwf	prodl,w,c
 33579  003216  6EF6               	movwf	tblptrl,c
 33580  003218  0EED               	movlw	high _dpowers
 33581  00321A  20F4               	addwfc	prodh,w,c
 33582  00321C  6EF7               	movwf	tblptrh,c
 33583  00321E                     	if	1	;There are 3 active tblptr bytes
 33584  00321E  6AF8               	clrf	tblptru,c
 33585  003220  0E00               	movlw	low (__mediumconst shr (0+16))
 33586  003222  22F8               	addwfc	tblptru,f,c
 33587  003224                     	endif
 33588  003224  0009               	tblrd		*+
 33589  003226  CFF5 F064          	movff	tablat,___lldiv@divisor
 33590  00322A  0009               	tblrd		*+
 33591  00322C  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 33592  003230  0009               	tblrd		*+
 33593  003232  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 33594  003236  000A               	tblrd		*-
 33595  003238  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 33596  00323C  ECAA  F04A         	call	___lldiv	;wreg free
 33597  003240  C060  F0CE         	movff	?___lldiv,sprintf@tmpval
 33598  003244  C061  F0CF         	movff	?___lldiv+1,sprintf@tmpval+1
 33599  003248  C062  F0D0         	movff	?___lldiv+2,sprintf@tmpval+2
 33600  00324C  C063  F0D1         	movff	?___lldiv+3,sprintf@tmpval+3
 33601                           
 33602                           ;doprnt.c: 1230: tmpval.vd %= 10;
 33603  003250  C0CE  F06D         	movff	sprintf@tmpval,___llmod@dividend
 33604  003254  C0CF  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
 33605  003258  C0D0  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
 33606  00325C  C0D1  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
 33607  003260  0E0A               	movlw	10
 33608  003262  0100               	movlb	0	; () banked
 33609  003264  6F71               	movwf	___llmod@divisor& (0+255),b
 33610  003266  0E00               	movlw	0
 33611  003268  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 33612  00326A  0E00               	movlw	0
 33613  00326C  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 33614  00326E  0E00               	movlw	0
 33615  003270  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 33616  003272  EC75  F04C         	call	___llmod	;wreg free
 33617  003276  C06D  F0CE         	movff	?___llmod,sprintf@tmpval
 33618  00327A  C06E  F0CF         	movff	?___llmod+1,sprintf@tmpval+1
 33619  00327E  C06F  F0D0         	movff	?___llmod+2,sprintf@tmpval+2
 33620  003282  C070  F0D1         	movff	?___llmod+3,sprintf@tmpval+3
 33621                           
 33622                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 33623  003286  0100               	movlb	0	; () banked
 33624  003288  51CE               	movf	sprintf@tmpval& (0+255),w,b
 33625  00328A  0F30               	addlw	48
 33626  00328C  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 33627  003290  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 33628  003294  6EDF               	movwf	indf2,c
 33629                           
 33630                           ; BSR set to: 0
 33631  003296  0100               	movlb	0	; () banked
 33632  003298  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 33633  00329A  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 33634                           
 33635                           ; BSR set to: 0
 33636                           ;doprnt.c: 1232: val %= dpowers[c];
 33637  00329C  C0D4  F06D         	movff	sprintf@val,___llmod@dividend
 33638  0032A0  C0D5  F06E         	movff	sprintf@val+1,___llmod@dividend+1
 33639  0032A4  C0D6  F06F         	movff	sprintf@val+2,___llmod@dividend+2
 33640  0032A8  C0D7  F070         	movff	sprintf@val+3,___llmod@dividend+3
 33641  0032AC  0100               	movlb	0	; () banked
 33642  0032AE  51DF               	movf	sprintf@c& (0+255),w,b
 33643  0032B0  0D04               	mullw	4
 33644  0032B2  0EC3               	movlw	low _dpowers
 33645  0032B4  24F3               	addwf	prodl,w,c
 33646  0032B6  6EF6               	movwf	tblptrl,c
 33647  0032B8  0EED               	movlw	high _dpowers
 33648  0032BA  20F4               	addwfc	prodh,w,c
 33649  0032BC  6EF7               	movwf	tblptrh,c
 33650  0032BE                     	if	1	;There are 3 active tblptr bytes
 33651  0032BE  6AF8               	clrf	tblptru,c
 33652  0032C0  0E00               	movlw	low (__mediumconst shr (0+16))
 33653  0032C2  22F8               	addwfc	tblptru,f,c
 33654  0032C4                     	endif
 33655  0032C4  0009               	tblrd		*+
 33656  0032C6  CFF5 F071          	movff	tablat,___llmod@divisor
 33657  0032CA  0009               	tblrd		*+
 33658  0032CC  CFF5 F072          	movff	tablat,___llmod@divisor+1
 33659  0032D0  0009               	tblrd		*+
 33660  0032D2  CFF5 F073          	movff	tablat,___llmod@divisor+2
 33661  0032D6  000A               	tblrd		*-
 33662  0032D8  CFF5 F074          	movff	tablat,___llmod@divisor+3
 33663  0032DC  EC75  F04C         	call	___llmod	;wreg free
 33664  0032E0  C06D  F0D4         	movff	?___llmod,sprintf@val
 33665  0032E4  C06E  F0D5         	movff	?___llmod+1,sprintf@val+1
 33666  0032E8  C06F  F0D6         	movff	?___llmod+2,sprintf@val+2
 33667  0032EC  C070  F0D7         	movff	?___llmod+3,sprintf@val+3
 33668  0032F0  D000               	goto	l9896
 33669  0032F2                     l9896:
 33670  0032F2  0100               	movlb	0	; () banked
 33671  0032F4  07DF               	decf	sprintf@c& (0+255),f,b
 33672  0032F6  0100               	movlb	0	; () banked
 33673  0032F8  29DF               	incf	sprintf@c& (0+255),w,b
 33674  0032FA  B4D8               	btfsc	status,2,c
 33675  0032FC  D010               	goto	l9904
 33676  0032FE  D77E               	goto	l9886
 33677                           
 33678                           ; BSR set to: 0
 33679                           ;doprnt.c: 1233: }
 33680                           ;doprnt.c: 1235: while(prec) {
 33681  003300  D00E               	goto	l9904
 33682  003302                     l9898:
 33683                           
 33684                           ; BSR set to: 0
 33685                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 33686  003302  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 33687  003306  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 33688  00330A  0E30               	movlw	48
 33689  00330C  6EDF               	movwf	indf2,c
 33690                           
 33691                           ; BSR set to: 0
 33692  00330E  0100               	movlb	0	; () banked
 33693  003310  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 33694  003312  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 33695                           
 33696                           ; BSR set to: 0
 33697                           ;doprnt.c: 1237: prec--;
 33698  003314  0100               	movlb	0	; () banked
 33699  003316  07CC               	decf	sprintf@prec& (0+255),f,b
 33700  003318  A0D8               	btfss	status,0,c
 33701  00331A  07CD               	decf	(sprintf@prec+1)& (0+255),f,b
 33702  00331C  D000               	goto	l9904
 33703  00331E                     l9904:
 33704                           
 33705                           ; BSR set to: 0
 33706  00331E  0100               	movlb	0	; () banked
 33707  003320  51CC               	movf	sprintf@prec& (0+255),w,b
 33708  003322  0100               	movlb	0	; () banked
 33709  003324  11CD               	iorwf	(sprintf@prec+1)& (0+255),w,b
 33710  003326  B4D8               	btfsc	status,2,c
 33711  003328  D235               	goto	l10024
 33712  00332A  D7EB               	goto	l9898
 33713                           
 33714                           ; BSR set to: 0
 33715                           ;doprnt.c: 1238: }
 33716                           ;doprnt.c: 1245: continue;
 33717  00332C  D233               	goto	l10024
 33718  00332E                     l9906:
 33719                           
 33720                           ; BSR set to: 0
 33721                           ;doprnt.c: 1246: }
 33722                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 33723  00332E  0EC0               	movlw	192
 33724  003330  0100               	movlb	0	; () banked
 33725  003332  15DD               	andwf	sprintf@flag& (0+255),w,b
 33726  003334  0100               	movlb	0	; () banked
 33727  003336  6FBC               	movwf	??_sprintf& (0+255),b
 33728  003338  0E00               	movlw	0
 33729  00333A  0100               	movlb	0	; () banked
 33730  00333C  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
 33731  00333E  0100               	movlb	0	; () banked
 33732  003340  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 33733  003342  0100               	movlb	0	; () banked
 33734  003344  51BC               	movf	??_sprintf& (0+255),w,b
 33735  003346  0100               	movlb	0	; () banked
 33736  003348  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
 33737  00334A  A4D8               	btfss	status,2,c
 33738  00334C  D035               	goto	l2585
 33739                           
 33740                           ; BSR set to: 0
 33741                           ;doprnt.c: 1253: {
 33742                           ;doprnt.c: 1255: if(flag & 0x10)
 33743  00334E  0100               	movlb	0	; () banked
 33744  003350  A9DD               	btfss	sprintf@flag& (0+255),4,b
 33745  003352  D00E               	goto	l9914
 33746                           
 33747                           ; BSR set to: 0
 33748                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 33749  003354  C0CA  FFD9         	movff	sprintf@ap,fsr2l
 33750  003358  C0CB  FFDA         	movff	sprintf@ap+1,fsr2h
 33751  00335C  CFDE F0D4          	movff	postinc2,sprintf@val
 33752  003360  CFDE F0D5          	movff	postinc2,sprintf@val+1
 33753  003364  CFDE F0D6          	movff	postinc2,sprintf@val+2
 33754  003368  CFDE F0D7          	movff	postinc2,sprintf@val+3
 33755                           
 33756                           ; BSR set to: 0
 33757  00336C  0E04               	movlw	4
 33758  00336E  D00F               	goto	L20
 33759  003370                     l9914:
 33760                           
 33761                           ; BSR set to: 0
 33762                           ;doprnt.c: 1257: else
 33763                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 33764  003370  C0CA  FFD9         	movff	sprintf@ap,fsr2l
 33765  003374  C0CB  FFDA         	movff	sprintf@ap+1,fsr2h
 33766  003378  CFDE F0D4          	movff	postinc2,sprintf@val
 33767  00337C  CFDD F0D5          	movff	postdec2,sprintf@val+1
 33768  003380  0100               	movlb	0	; () banked
 33769  003382  0E00               	movlw	0
 33770  003384  BFD5               	btfsc	(sprintf@val+1)& (0+255),7,b
 33771  003386  0EFF               	movlw	-1
 33772  003388  6FD6               	movwf	(sprintf@val+2)& (0+255),b
 33773  00338A  6FD7               	movwf	(sprintf@val+3)& (0+255),b
 33774                           
 33775                           ; BSR set to: 0
 33776  00338C  0E02               	movlw	2
 33777  00338E                     L20:
 33778  00338E  0100               	movlb	0	; () banked
 33779  003390  27CA               	addwf	sprintf@ap& (0+255),f,b
 33780  003392  0E00               	movlw	0
 33781  003394  23CB               	addwfc	(sprintf@ap+1)& (0+255),f,b
 33782  003396  D000               	goto	l9918
 33783  003398                     l9918:
 33784                           
 33785                           ; BSR set to: 0
 33786                           ;doprnt.c: 1261: if((long)val < 0) {
 33787  003398  0100               	movlb	0	; () banked
 33788  00339A  AFD7               	btfss	(sprintf@val+3)& (0+255),7,b
 33789  00339C  D090               	goto	l9962
 33790                           
 33791                           ; BSR set to: 0
 33792                           ;doprnt.c: 1262: flag |= 0x03;
 33793  00339E  0E03               	movlw	3
 33794  0033A0  0100               	movlb	0	; () banked
 33795  0033A2  13DD               	iorwf	sprintf@flag& (0+255),f,b
 33796                           
 33797                           ; BSR set to: 0
 33798                           ;doprnt.c: 1263: val = -val;
 33799  0033A4  0100               	movlb	0	; () banked
 33800  0033A6  1FD7               	comf	(sprintf@val+3)& (0+255),f,b
 33801  0033A8  1FD6               	comf	(sprintf@val+2)& (0+255),f,b
 33802  0033AA  1FD5               	comf	(sprintf@val+1)& (0+255),f,b
 33803  0033AC  6DD4               	negf	sprintf@val& (0+255),b
 33804  0033AE  0E00               	movlw	0
 33805  0033B0  23D5               	addwfc	(sprintf@val+1)& (0+255),f,b
 33806  0033B2  23D6               	addwfc	(sprintf@val+2)& (0+255),f,b
 33807  0033B4  23D7               	addwfc	(sprintf@val+3)& (0+255),f,b
 33808                           
 33809                           ; BSR set to: 0
 33810                           ;doprnt.c: 1264: }
 33811                           ;doprnt.c: 1266: }
 33812  0033B6  D083               	goto	l9962
 33813  0033B8                     l2585:
 33814                           
 33815                           ; BSR set to: 0
 33816                           ;doprnt.c: 1268: else
 33817                           ;doprnt.c: 1273: {
 33818                           ;doprnt.c: 1281: if(flag & 0x10)
 33819  0033B8  0100               	movlb	0	; () banked
 33820  0033BA  A9DD               	btfss	sprintf@flag& (0+255),4,b
 33821  0033BC  D00E               	goto	l9928
 33822                           
 33823                           ; BSR set to: 0
 33824                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 33825  0033BE  C0CA  FFD9         	movff	sprintf@ap,fsr2l
 33826  0033C2  C0CB  FFDA         	movff	sprintf@ap+1,fsr2h
 33827  0033C6  CFDE F0D4          	movff	postinc2,sprintf@val
 33828  0033CA  CFDE F0D5          	movff	postinc2,sprintf@val+1
 33829  0033CE  CFDE F0D6          	movff	postinc2,sprintf@val+2
 33830  0033D2  CFDE F0D7          	movff	postinc2,sprintf@val+3
 33831                           
 33832                           ; BSR set to: 0
 33833  0033D6  0E04               	movlw	4
 33834  0033D8  D010               	goto	L21
 33835  0033DA                     l9928:
 33836                           
 33837                           ; BSR set to: 0
 33838                           ;doprnt.c: 1283: else
 33839                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 33840  0033DA  C0CA  FFD9         	movff	sprintf@ap,fsr2l
 33841  0033DE  C0CB  FFDA         	movff	sprintf@ap+1,fsr2h
 33842  0033E2  CFDE F0BC          	movff	postinc2,??_sprintf
 33843  0033E6  CFDD F0BD          	movff	postdec2,??_sprintf+1
 33844  0033EA  C0BC  F0D4         	movff	??_sprintf,sprintf@val
 33845  0033EE  C0BD  F0D5         	movff	??_sprintf+1,sprintf@val+1
 33846  0033F2  0100               	movlb	0	; () banked
 33847  0033F4  6BD6               	clrf	(sprintf@val+2)& (0+255),b
 33848  0033F6  6BD7               	clrf	(sprintf@val+3)& (0+255),b
 33849                           
 33850                           ; BSR set to: 0
 33851  0033F8  0E02               	movlw	2
 33852  0033FA                     L21:
 33853  0033FA  0100               	movlb	0	; () banked
 33854  0033FC  27CA               	addwf	sprintf@ap& (0+255),f,b
 33855  0033FE  0E00               	movlw	0
 33856  003400  23CB               	addwfc	(sprintf@ap+1)& (0+255),f,b
 33857                           
 33858                           ; BSR set to: 0
 33859                           ;doprnt.c: 1287: }
 33860                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 33861                           
 33862                           ; BSR set to: 0
 33863  003402  D05D               	goto	l9962
 33864                           
 33865                           ; BSR set to: 0
 33866                           
 33867                           ;doprnt.c: 1299: case 0x00:
 33868  003404  D000               	goto	l9932
 33869  003406                     l9932:
 33870                           
 33871                           ; BSR set to: 0
 33872                           ;doprnt.c: 1302: case 0xC0:
 33873                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 33874  003406  0E01               	movlw	1
 33875  003408  0100               	movlb	0	; () banked
 33876  00340A  6FDF               	movwf	sprintf@c& (0+255),b
 33877  00340C                     l9934:
 33878                           
 33879                           ; BSR set to: 0
 33880  00340C  0E0A               	movlw	10
 33881  00340E  0100               	movlb	0	; () banked
 33882  003410  19DF               	xorwf	sprintf@c& (0+255),w,b
 33883  003412  B4D8               	btfsc	status,2,c
 33884  003414  D061               	goto	l9964
 33885  003416  D001               	goto	l9938
 33886                           
 33887                           ; BSR set to: 0
 33888  003418  D05F               	goto	l9964
 33889  00341A                     l9938:
 33890                           
 33891                           ; BSR set to: 0
 33892                           ;doprnt.c: 1306: if(val < dpowers[c])
 33893  00341A  0100               	movlb	0	; () banked
 33894  00341C  51DF               	movf	sprintf@c& (0+255),w,b
 33895  00341E  0D04               	mullw	4
 33896  003420  0EC3               	movlw	low _dpowers
 33897  003422  24F3               	addwf	prodl,w,c
 33898  003424  6EF6               	movwf	tblptrl,c
 33899  003426  0EED               	movlw	high _dpowers
 33900  003428  20F4               	addwfc	prodh,w,c
 33901  00342A  6EF7               	movwf	tblptrh,c
 33902  00342C                     	if	1	;There are 3 active tblptr bytes
 33903  00342C  6AF8               	clrf	tblptru,c
 33904  00342E  0E00               	movlw	low (__mediumconst shr (0+16))
 33905  003430  22F8               	addwfc	tblptru,f,c
 33906  003432                     	endif
 33907  003432  0009               	tblrd		*+
 33908  003434  50F5               	movf	tablat,w,c
 33909  003436  0100               	movlb	0	; () banked
 33910  003438  5DD4               	subwf	sprintf@val& (0+255),w,b
 33911  00343A  0009               	tblrd		*+
 33912  00343C  50F5               	movf	tablat,w,c
 33913  00343E  0100               	movlb	0	; () banked
 33914  003440  59D5               	subwfb	(sprintf@val+1)& (0+255),w,b
 33915  003442  0009               	tblrd		*+
 33916  003444  50F5               	movf	tablat,w,c
 33917  003446  0100               	movlb	0	; () banked
 33918  003448  59D6               	subwfb	(sprintf@val+2)& (0+255),w,b
 33919  00344A  0009               	tblrd		*+
 33920  00344C  50F5               	movf	tablat,w,c
 33921  00344E  0100               	movlb	0	; () banked
 33922  003450  59D7               	subwfb	(sprintf@val+3)& (0+255),w,b
 33923  003452  A0D8               	btfss	status,0,c
 33924  003454  D041               	goto	l9964
 33925  003456  D001               	goto	l9942
 33926                           
 33927                           ; BSR set to: 0
 33928                           ;doprnt.c: 1307: break;
 33929  003458  D03F               	goto	l9964
 33930  00345A                     l9942:
 33931                           
 33932                           ; BSR set to: 0
 33933  00345A  0100               	movlb	0	; () banked
 33934  00345C  2BDF               	incf	sprintf@c& (0+255),f,b
 33935  00345E  D7D6               	goto	l9934
 33936                           
 33937                           ; BSR set to: 0
 33938                           ;doprnt.c: 1309: break;
 33939                           
 33940                           ; BSR set to: 0
 33941  003460  D03B               	goto	l9964
 33942  003462                     l9946:
 33943                           
 33944                           ; BSR set to: 0
 33945                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 33946  003462  0E01               	movlw	1
 33947  003464  0100               	movlb	0	; () banked
 33948  003466  6FDF               	movwf	sprintf@c& (0+255),b
 33949  003468                     l9948:
 33950                           
 33951                           ; BSR set to: 0
 33952  003468  0E08               	movlw	8
 33953  00346A  0100               	movlb	0	; () banked
 33954  00346C  19DF               	xorwf	sprintf@c& (0+255),w,b
 33955  00346E  B4D8               	btfsc	status,2,c
 33956  003470  D033               	goto	l9964
 33957  003472  D001               	goto	l9952
 33958                           
 33959                           ; BSR set to: 0
 33960  003474  D031               	goto	l9964
 33961  003476                     l9952:
 33962                           
 33963                           ; BSR set to: 0
 33964                           ;doprnt.c: 1317: if(val < hexpowers[c])
 33965  003476  0100               	movlb	0	; () banked
 33966  003478  51DF               	movf	sprintf@c& (0+255),w,b
 33967  00347A  0D04               	mullw	4
 33968  00347C  0E39               	movlw	low _hexpowers
 33969  00347E  24F3               	addwf	prodl,w,c
 33970  003480  6EF6               	movwf	tblptrl,c
 33971  003482  0EEE               	movlw	high _hexpowers
 33972  003484  20F4               	addwfc	prodh,w,c
 33973  003486  6EF7               	movwf	tblptrh,c
 33974  003488                     	if	1	;There are 3 active tblptr bytes
 33975  003488  6AF8               	clrf	tblptru,c
 33976  00348A  0E00               	movlw	low (__mediumconst shr (0+16))
 33977  00348C  22F8               	addwfc	tblptru,f,c
 33978  00348E                     	endif
 33979  00348E  0009               	tblrd		*+
 33980  003490  50F5               	movf	tablat,w,c
 33981  003492  0100               	movlb	0	; () banked
 33982  003494  5DD4               	subwf	sprintf@val& (0+255),w,b
 33983  003496  0009               	tblrd		*+
 33984  003498  50F5               	movf	tablat,w,c
 33985  00349A  0100               	movlb	0	; () banked
 33986  00349C  59D5               	subwfb	(sprintf@val+1)& (0+255),w,b
 33987  00349E  0009               	tblrd		*+
 33988  0034A0  50F5               	movf	tablat,w,c
 33989  0034A2  0100               	movlb	0	; () banked
 33990  0034A4  59D6               	subwfb	(sprintf@val+2)& (0+255),w,b
 33991  0034A6  0009               	tblrd		*+
 33992  0034A8  50F5               	movf	tablat,w,c
 33993  0034AA  0100               	movlb	0	; () banked
 33994  0034AC  59D7               	subwfb	(sprintf@val+3)& (0+255),w,b
 33995  0034AE  A0D8               	btfss	status,0,c
 33996  0034B0  D013               	goto	l9964
 33997  0034B2  D001               	goto	l9956
 33998                           
 33999                           ; BSR set to: 0
 34000                           ;doprnt.c: 1318: break;
 34001  0034B4  D011               	goto	l9964
 34002  0034B6                     l9956:
 34003                           
 34004                           ; BSR set to: 0
 34005  0034B6  0100               	movlb	0	; () banked
 34006  0034B8  2BDF               	incf	sprintf@c& (0+255),f,b
 34007  0034BA  D7D6               	goto	l9948
 34008                           
 34009                           ; BSR set to: 0
 34010                           ;doprnt.c: 1336: }
 34011                           
 34012                           ; BSR set to: 0
 34013                           ;doprnt.c: 1320: break;
 34014                           
 34015                           ; BSR set to: 0
 34016  0034BC  D00D               	goto	l9964
 34017  0034BE                     l9962:
 34018                           
 34019                           ; BSR set to: 0
 34020  0034BE  0100               	movlb	0	; () banked
 34021  0034C0  51DD               	movf	sprintf@flag& (0+255),w,b
 34022  0034C2  0BC0               	andlw	192
 34023                           
 34024                           ; Switch size 1, requested type "space"
 34025                           ; Number of cases is 3, Range of values is 0 to 192
 34026                           ; switch strategies available:
 34027                           ; Name         Instructions Cycles
 34028                           ; simple_byte           10     6 (average)
 34029                           ;	Chosen strategy is simple_byte
 34030  0034C4  0A00               	xorlw	0	; case 0
 34031  0034C6  B4D8               	btfsc	status,2,c
 34032  0034C8  D79E               	goto	l9932
 34033  0034CA  0A80               	xorlw	128	; case 128
 34034  0034CC  B4D8               	btfsc	status,2,c
 34035  0034CE  D7C9               	goto	l9946
 34036  0034D0  0A40               	xorlw	64	; case 192
 34037  0034D2  B4D8               	btfsc	status,2,c
 34038  0034D4  D798               	goto	l9932
 34039  0034D6  D000               	goto	l9964
 34040  0034D8                     l9964:
 34041                           
 34042                           ; BSR set to: 0
 34043                           ;doprnt.c: 1345: if(width && flag & 0x03)
 34044  0034D8  0100               	movlb	0	; () banked
 34045  0034DA  51DB               	movf	sprintf@width& (0+255),w,b
 34046  0034DC  0100               	movlb	0	; () banked
 34047  0034DE  11DC               	iorwf	(sprintf@width+1)& (0+255),w,b
 34048  0034E0  B4D8               	btfsc	status,2,c
 34049  0034E2  D015               	goto	l9970
 34050                           
 34051                           ; BSR set to: 0
 34052  0034E4  0E03               	movlw	3
 34053  0034E6  0100               	movlb	0	; () banked
 34054  0034E8  15DD               	andwf	sprintf@flag& (0+255),w,b
 34055  0034EA  0100               	movlb	0	; () banked
 34056  0034EC  6FBC               	movwf	??_sprintf& (0+255),b
 34057  0034EE  0E00               	movlw	0
 34058  0034F0  0100               	movlb	0	; () banked
 34059  0034F2  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
 34060  0034F4  0100               	movlb	0	; () banked
 34061  0034F6  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 34062  0034F8  0100               	movlb	0	; () banked
 34063  0034FA  51BC               	movf	??_sprintf& (0+255),w,b
 34064  0034FC  0100               	movlb	0	; () banked
 34065  0034FE  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
 34066  003500  B4D8               	btfsc	status,2,c
 34067  003502  D005               	goto	l9970
 34068                           
 34069                           ; BSR set to: 0
 34070                           ;doprnt.c: 1346: width--;
 34071  003504  0100               	movlb	0	; () banked
 34072  003506  07DB               	decf	sprintf@width& (0+255),f,b
 34073  003508  A0D8               	btfss	status,0,c
 34074  00350A  07DC               	decf	(sprintf@width+1)& (0+255),f,b
 34075  00350C  D000               	goto	l9970
 34076  00350E                     l9970:
 34077                           
 34078                           ; BSR set to: 0
 34079                           ;doprnt.c: 1381: if(width > c)
 34080  00350E  0E80               	movlw	128
 34081  003510  0100               	movlb	0	; () banked
 34082  003512  BFDF               	btfsc	sprintf@c& (0+255),7,b
 34083  003514  0E7F               	movlw	127
 34084  003516  0100               	movlb	0	; () banked
 34085  003518  6FBC               	movwf	??_sprintf& (0+255),b
 34086  00351A  0100               	movlb	0	; () banked
 34087  00351C  51DB               	movf	sprintf@width& (0+255),w,b
 34088  00351E  0100               	movlb	0	; () banked
 34089  003520  5DDF               	subwf	sprintf@c& (0+255),w,b
 34090  003522  0100               	movlb	0	; () banked
 34091  003524  51DC               	movf	(sprintf@width+1)& (0+255),w,b
 34092  003526  0A80               	xorlw	128
 34093  003528  0100               	movlb	0	; () banked
 34094  00352A  59BC               	subwfb	??_sprintf& (0+255),w,b
 34095  00352C  B0D8               	btfsc	status,0,c
 34096  00352E  D00B               	goto	l9974
 34097                           
 34098                           ; BSR set to: 0
 34099                           ;doprnt.c: 1382: width -= c;
 34100  003530  0100               	movlb	0	; () banked
 34101  003532  51DF               	movf	sprintf@c& (0+255),w,b
 34102  003534  0100               	movlb	0	; () banked
 34103  003536  5FDB               	subwf	sprintf@width& (0+255),f,b
 34104  003538  0E00               	movlw	0
 34105  00353A  0100               	movlb	0	; () banked
 34106  00353C  BFDF               	btfsc	sprintf@c& (0+255),7,b
 34107  00353E  0EFF               	movlw	255
 34108  003540  0100               	movlb	0	; () banked
 34109  003542  5BDC               	subwfb	(sprintf@width+1)& (0+255),f,b
 34110  003544  D006               	goto	l9976
 34111  003546                     l9974:
 34112                           
 34113                           ; BSR set to: 0
 34114                           ;doprnt.c: 1383: else
 34115                           ;doprnt.c: 1384: width = 0;
 34116  003546  0E00               	movlw	0
 34117  003548  0100               	movlb	0	; () banked
 34118  00354A  6FDC               	movwf	(sprintf@width+1)& (0+255),b
 34119  00354C  0E00               	movlw	0
 34120  00354E  6FDB               	movwf	sprintf@width& (0+255),b
 34121  003550  D000               	goto	l9976
 34122  003552                     l9976:
 34123                           
 34124                           ; BSR set to: 0
 34125                           ;doprnt.c: 1387: if(flag & 0x04) {
 34126  003552  0100               	movlb	0	; () banked
 34127  003554  A5DD               	btfss	sprintf@flag& (0+255),2,b
 34128  003556  D035               	goto	l9992
 34129                           
 34130                           ; BSR set to: 0
 34131                           ;doprnt.c: 1392: if(flag & 0x03)
 34132  003558  0E03               	movlw	3
 34133  00355A  0100               	movlb	0	; () banked
 34134  00355C  15DD               	andwf	sprintf@flag& (0+255),w,b
 34135  00355E  0100               	movlb	0	; () banked
 34136  003560  6FBC               	movwf	??_sprintf& (0+255),b
 34137  003562  0E00               	movlw	0
 34138  003564  0100               	movlb	0	; () banked
 34139  003566  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
 34140  003568  0100               	movlb	0	; () banked
 34141  00356A  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 34142  00356C  0100               	movlb	0	; () banked
 34143  00356E  51BC               	movf	??_sprintf& (0+255),w,b
 34144  003570  0100               	movlb	0	; () banked
 34145  003572  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
 34146  003574  B4D8               	btfsc	status,2,c
 34147  003576  D00A               	goto	l9984
 34148                           
 34149                           ; BSR set to: 0
 34150                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 34151  003578  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 34152  00357C  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 34153  003580  0E2D               	movlw	45
 34154  003582  6EDF               	movwf	indf2,c
 34155                           
 34156                           ; BSR set to: 0
 34157  003584  0100               	movlb	0	; () banked
 34158  003586  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 34159  003588  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 34160  00358A  D000               	goto	l9984
 34161  00358C                     l9984:
 34162                           
 34163                           ; BSR set to: 0
 34164                           ;doprnt.c: 1415: if(width)
 34165  00358C  0100               	movlb	0	; () banked
 34166  00358E  51DB               	movf	sprintf@width& (0+255),w,b
 34167  003590  0100               	movlb	0	; () banked
 34168  003592  11DC               	iorwf	(sprintf@width+1)& (0+255),w,b
 34169  003594  B4D8               	btfsc	status,2,c
 34170  003596  D04A               	goto	l10006
 34171  003598                     l9986:
 34172                           
 34173                           ; BSR set to: 0
 34174                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 34175  003598  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 34176  00359C  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 34177  0035A0  0E30               	movlw	48
 34178  0035A2  6EDF               	movwf	indf2,c
 34179                           
 34180                           ; BSR set to: 0
 34181  0035A4  0100               	movlb	0	; () banked
 34182  0035A6  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 34183  0035A8  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 34184                           
 34185                           ; BSR set to: 0
 34186                           ;doprnt.c: 1418: while(--width);
 34187  0035AA  0100               	movlb	0	; () banked
 34188  0035AC  07DB               	decf	sprintf@width& (0+255),f,b
 34189  0035AE  A0D8               	btfss	status,0,c
 34190  0035B0  07DC               	decf	(sprintf@width+1)& (0+255),f,b
 34191  0035B2  0100               	movlb	0	; () banked
 34192  0035B4  51DB               	movf	sprintf@width& (0+255),w,b
 34193  0035B6  0100               	movlb	0	; () banked
 34194  0035B8  11DC               	iorwf	(sprintf@width+1)& (0+255),w,b
 34195  0035BA  B4D8               	btfsc	status,2,c
 34196  0035BC  D037               	goto	l10006
 34197  0035BE  D7EC               	goto	l9986
 34198                           
 34199                           ; BSR set to: 0
 34200                           ;doprnt.c: 1420: } else
 34201                           
 34202                           ; BSR set to: 0
 34203  0035C0  D035               	goto	l10006
 34204  0035C2                     l9992:
 34205                           
 34206                           ; BSR set to: 0
 34207                           ;doprnt.c: 1422: {
 34208                           ;doprnt.c: 1424: if(width
 34209                           ;doprnt.c: 1428: )
 34210  0035C2  0100               	movlb	0	; () banked
 34211  0035C4  51DB               	movf	sprintf@width& (0+255),w,b
 34212  0035C6  0100               	movlb	0	; () banked
 34213  0035C8  11DC               	iorwf	(sprintf@width+1)& (0+255),w,b
 34214  0035CA  B4D8               	btfsc	status,2,c
 34215  0035CC  D015               	goto	l10000
 34216  0035CE                     l9994:
 34217                           
 34218                           ; BSR set to: 0
 34219                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 34220  0035CE  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 34221  0035D2  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 34222  0035D6  0E20               	movlw	32
 34223  0035D8  6EDF               	movwf	indf2,c
 34224                           
 34225                           ; BSR set to: 0
 34226  0035DA  0100               	movlb	0	; () banked
 34227  0035DC  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 34228  0035DE  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 34229                           
 34230                           ; BSR set to: 0
 34231                           ;doprnt.c: 1431: while(--width);
 34232  0035E0  0100               	movlb	0	; () banked
 34233  0035E2  07DB               	decf	sprintf@width& (0+255),f,b
 34234  0035E4  A0D8               	btfss	status,0,c
 34235  0035E6  07DC               	decf	(sprintf@width+1)& (0+255),f,b
 34236  0035E8  0100               	movlb	0	; () banked
 34237  0035EA  51DB               	movf	sprintf@width& (0+255),w,b
 34238  0035EC  0100               	movlb	0	; () banked
 34239  0035EE  11DC               	iorwf	(sprintf@width+1)& (0+255),w,b
 34240  0035F0  B4D8               	btfsc	status,2,c
 34241  0035F2  D002               	goto	l10000
 34242  0035F4  D7EC               	goto	l9994
 34243                           
 34244                           ; BSR set to: 0
 34245  0035F6  D000               	goto	l10000
 34246  0035F8                     l10000:
 34247                           
 34248                           ; BSR set to: 0
 34249                           ;doprnt.c: 1438: if(flag & 0x03)
 34250  0035F8  0E03               	movlw	3
 34251  0035FA  0100               	movlb	0	; () banked
 34252  0035FC  15DD               	andwf	sprintf@flag& (0+255),w,b
 34253  0035FE  0100               	movlb	0	; () banked
 34254  003600  6FBC               	movwf	??_sprintf& (0+255),b
 34255  003602  0E00               	movlw	0
 34256  003604  0100               	movlb	0	; () banked
 34257  003606  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
 34258  003608  0100               	movlb	0	; () banked
 34259  00360A  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 34260  00360C  0100               	movlb	0	; () banked
 34261  00360E  51BC               	movf	??_sprintf& (0+255),w,b
 34262  003610  0100               	movlb	0	; () banked
 34263  003612  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
 34264  003614  B4D8               	btfsc	status,2,c
 34265  003616  D00A               	goto	l10006
 34266                           
 34267                           ; BSR set to: 0
 34268                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 34269  003618  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 34270  00361C  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 34271  003620  0E2D               	movlw	45
 34272  003622  6EDF               	movwf	indf2,c
 34273                           
 34274                           ; BSR set to: 0
 34275  003624  0100               	movlb	0	; () banked
 34276  003626  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 34277  003628  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 34278                           
 34279                           ; BSR set to: 0
 34280  00362A  D000               	goto	l10006
 34281  00362C                     l10006:
 34282                           
 34283                           ; BSR set to: 0
 34284                           ;doprnt.c: 1469: }
 34285                           ;doprnt.c: 1472: prec = c;
 34286  00362C  0100               	movlb	0	; () banked
 34287  00362E  51DF               	movf	sprintf@c& (0+255),w,b
 34288  003630  0100               	movlb	0	; () banked
 34289  003632  6FCC               	movwf	sprintf@prec& (0+255),b
 34290  003634  6BCD               	clrf	(sprintf@prec+1)& (0+255),b
 34291  003636  BFCC               	btfsc	sprintf@prec& (0+255),7,b
 34292  003638  07CD               	decf	(sprintf@prec+1)& (0+255),f,b
 34293                           
 34294                           ;doprnt.c: 1474: while(prec--) {
 34295  00363A  D09F               	goto	l10022
 34296                           
 34297                           ; BSR set to: 0
 34298                           ;doprnt.c: 1476: switch((unsigned char)(flag & (0xC0)))
 34299  00363C  D087               	goto	l10016
 34300                           
 34301                           ; BSR set to: 0
 34302                           
 34303                           ;doprnt.c: 1478: {
 34304                           ;doprnt.c: 1483: case 0x00:
 34305  00363E  D000               	goto	l10008
 34306  003640                     l10008:
 34307                           
 34308                           ; BSR set to: 0
 34309                           ;doprnt.c: 1486: case 0xC0:
 34310                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 34311  003640  C0CC  F0BC         	movff	sprintf@prec,??_sprintf
 34312  003644  C0CD  F0BD         	movff	sprintf@prec+1,??_sprintf+1
 34313  003648  0100               	movlb	0	; () banked
 34314  00364A  90D8               	bcf	status,0,c
 34315  00364C  37BC               	rlcf	??_sprintf& (0+255),f,b
 34316  00364E  37BD               	rlcf	(??_sprintf+1)& (0+255),f,b
 34317  003650  0100               	movlb	0	; () banked
 34318  003652  90D8               	bcf	status,0,c
 34319  003654  37BC               	rlcf	??_sprintf& (0+255),f,b
 34320  003656  37BD               	rlcf	(??_sprintf+1)& (0+255),f,b
 34321  003658  0EC3               	movlw	low _dpowers
 34322  00365A  0100               	movlb	0	; () banked
 34323  00365C  25BC               	addwf	??_sprintf& (0+255),w,b
 34324  00365E  6EF6               	movwf	tblptrl,c
 34325  003660  0EED               	movlw	high _dpowers
 34326  003662  21BD               	addwfc	(??_sprintf+1)& (0+255),w,b
 34327  003664  6EF7               	movwf	tblptrh,c
 34328  003666                     	if	1	;There are 3 active tblptr bytes
 34329  003666  6AF8               	clrf	tblptru,c
 34330  003668  0E00               	movlw	low (__mediumconst shr (0+16))
 34331  00366A  22F8               	addwfc	tblptru,f,c
 34332  00366C                     	endif
 34333  00366C  0009               	tblrd		*+
 34334  00366E  CFF5 F064          	movff	tablat,___lldiv@divisor
 34335  003672  0009               	tblrd		*+
 34336  003674  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 34337  003678  0009               	tblrd		*+
 34338  00367A  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 34339  00367E  000A               	tblrd		*-
 34340  003680  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 34341  003684  C0D4  F060         	movff	sprintf@val,___lldiv@dividend
 34342  003688  C0D5  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 34343  00368C  C0D6  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 34344  003690  C0D7  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 34345  003694  ECAA  F04A         	call	___lldiv	;wreg free
 34346  003698  C060  F06D         	movff	?___lldiv,___llmod@dividend
 34347  00369C  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 34348  0036A0  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 34349  0036A4  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 34350  0036A8  0E0A               	movlw	10
 34351  0036AA  0100               	movlb	0	; () banked
 34352  0036AC  6F71               	movwf	___llmod@divisor& (0+255),b
 34353  0036AE  0E00               	movlw	0
 34354  0036B0  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 34355  0036B2  0E00               	movlw	0
 34356  0036B4  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 34357  0036B6  0E00               	movlw	0
 34358  0036B8  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 34359  0036BA  EC75  F04C         	call	___llmod	;wreg free
 34360  0036BE  0100               	movlb	0	; () banked
 34361  0036C0  516D               	movf	?___llmod& (0+255),w,b
 34362  0036C2  0F30               	addlw	48
 34363  0036C4  0100               	movlb	0	; () banked
 34364  0036C6  6FDF               	movwf	sprintf@c& (0+255),b
 34365                           
 34366                           ;doprnt.c: 1491: break;
 34367  0036C8  D04E               	goto	l10018
 34368  0036CA                     l10010:
 34369                           
 34370                           ; BSR set to: 0
 34371                           ;doprnt.c: 1499: {
 34372                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 34373  0036CA  C0D4  F060         	movff	sprintf@val,___lldiv@dividend
 34374  0036CE  C0D5  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 34375  0036D2  C0D6  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 34376  0036D6  C0D7  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 34377  0036DA  C0CC  F0BC         	movff	sprintf@prec,??_sprintf
 34378  0036DE  C0CD  F0BD         	movff	sprintf@prec+1,??_sprintf+1
 34379  0036E2  0100               	movlb	0	; () banked
 34380  0036E4  90D8               	bcf	status,0,c
 34381  0036E6  37BC               	rlcf	??_sprintf& (0+255),f,b
 34382  0036E8  37BD               	rlcf	(??_sprintf+1)& (0+255),f,b
 34383  0036EA  0100               	movlb	0	; () banked
 34384  0036EC  90D8               	bcf	status,0,c
 34385  0036EE  37BC               	rlcf	??_sprintf& (0+255),f,b
 34386  0036F0  37BD               	rlcf	(??_sprintf+1)& (0+255),f,b
 34387  0036F2  0E39               	movlw	low _hexpowers
 34388  0036F4  0100               	movlb	0	; () banked
 34389  0036F6  25BC               	addwf	??_sprintf& (0+255),w,b
 34390  0036F8  6EF6               	movwf	tblptrl,c
 34391  0036FA  0EEE               	movlw	high _hexpowers
 34392  0036FC  21BD               	addwfc	(??_sprintf+1)& (0+255),w,b
 34393  0036FE  6EF7               	movwf	tblptrh,c
 34394  003700                     	if	1	;There are 3 active tblptr bytes
 34395  003700  6AF8               	clrf	tblptru,c
 34396  003702  0E00               	movlw	low (__mediumconst shr (0+16))
 34397  003704  22F8               	addwfc	tblptru,f,c
 34398  003706                     	endif
 34399  003706  0009               	tblrd		*+
 34400  003708  CFF5 F064          	movff	tablat,___lldiv@divisor
 34401  00370C  0009               	tblrd		*+
 34402  00370E  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 34403  003712  0009               	tblrd		*+
 34404  003714  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 34405  003718  000A               	tblrd		*-
 34406  00371A  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 34407  00371E  ECAA  F04A         	call	___lldiv	;wreg free
 34408  003722  0100               	movlb	0	; () banked
 34409  003724  5160               	movf	?___lldiv& (0+255),w,b
 34410  003726  0B0F               	andlw	15
 34411  003728  0100               	movlb	0	; () banked
 34412  00372A  6FC5               	movwf	sprintf@idx& (0+255),b
 34413                           
 34414                           ; BSR set to: 0
 34415                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 34416  00372C  0100               	movlb	0	; () banked
 34417  00372E  51C5               	movf	sprintf@idx& (0+255),w,b
 34418  003730  0D01               	mullw	1
 34419  003732  0EEE               	movlw	low STR_181
 34420  003734  24F3               	addwf	prodl,w,c
 34421  003736  6EF6               	movwf	tblptrl,c
 34422  003738  0EFD               	movlw	high STR_181
 34423  00373A  20F4               	addwfc	prodh,w,c
 34424  00373C  6EF7               	movwf	tblptrh,c
 34425  00373E                     	if	1	;There are 3 active tblptr bytes
 34426  00373E  6AF8               	clrf	tblptru,c
 34427  003740  0E00               	movlw	low (__mediumconst shr (0+16))
 34428  003742  22F8               	addwfc	tblptru,f,c
 34429  003744                     	endif
 34430  003744  0008               	tblrd		*
 34431  003746  CFF5 F0DF          	movff	tablat,sprintf@c
 34432                           
 34433                           ; BSR set to: 0
 34434                           ;doprnt.c: 1523: }
 34435                           
 34436                           ;doprnt.c: 1508: }
 34437                           ;doprnt.c: 1510: break;
 34438  00374A  D00D               	goto	l10018
 34439  00374C                     l10016:
 34440                           
 34441                           ; BSR set to: 0
 34442  00374C  0100               	movlb	0	; () banked
 34443  00374E  51DD               	movf	sprintf@flag& (0+255),w,b
 34444  003750  0BC0               	andlw	192
 34445                           
 34446                           ; Switch size 1, requested type "space"
 34447                           ; Number of cases is 3, Range of values is 0 to 192
 34448                           ; switch strategies available:
 34449                           ; Name         Instructions Cycles
 34450                           ; simple_byte           10     6 (average)
 34451                           ;	Chosen strategy is simple_byte
 34452  003752  0A00               	xorlw	0	; case 0
 34453  003754  B4D8               	btfsc	status,2,c
 34454  003756  D774               	goto	l10008
 34455  003758  0A80               	xorlw	128	; case 128
 34456  00375A  B4D8               	btfsc	status,2,c
 34457  00375C  D7B6               	goto	l10010
 34458  00375E  0A40               	xorlw	64	; case 192
 34459  003760  B4D8               	btfsc	status,2,c
 34460  003762  D76E               	goto	l10008
 34461  003764  D000               	goto	l10018
 34462  003766                     l10018:
 34463                           
 34464                           ; BSR set to: 0
 34465                           ;doprnt.c: 1524: ((*sp++ = (c)));
 34466  003766  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 34467  00376A  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 34468  00376E  C0DF  FFDF         	movff	sprintf@c,indf2
 34469                           
 34470                           ; BSR set to: 0
 34471  003772  0100               	movlb	0	; () banked
 34472  003774  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 34473  003776  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 34474  003778  D000               	goto	l10022
 34475  00377A                     l10022:
 34476                           
 34477                           ; BSR set to: 0
 34478  00377A  0100               	movlb	0	; () banked
 34479  00377C  07CC               	decf	sprintf@prec& (0+255),f,b
 34480  00377E  A0D8               	btfss	status,0,c
 34481  003780  07CD               	decf	(sprintf@prec+1)& (0+255),f,b
 34482  003782  0100               	movlb	0	; () banked
 34483  003784  29CC               	incf	sprintf@prec& (0+255),w,b
 34484  003786  E1E2               	bnz	l10016
 34485  003788  0100               	movlb	0	; () banked
 34486  00378A  29CD               	incf	(sprintf@prec+1)& (0+255),w,b
 34487  00378C  B4D8               	btfsc	status,2,c
 34488  00378E  D002               	goto	l10024
 34489  003790  D7DD               	goto	l10016
 34490                           
 34491                           ; BSR set to: 0
 34492  003792  D000               	goto	l10024
 34493  003794                     l10024:
 34494                           
 34495                           ; BSR set to: 0
 34496  003794  C0B0  FFF6         	movff	sprintf@f,tblptrl
 34497  003798  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
 34498  00379C  0100               	movlb	0	; () banked
 34499  00379E  4BB0               	infsnz	sprintf@f& (0+255),f,b
 34500  0037A0  2BB1               	incf	(sprintf@f+1)& (0+255),f,b
 34501  0037A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34502  0037A2  6AF8               	clrf	tblptru,c
 34503  0037A4                     	endif
 34504  0037A4                     	if	0	;tblptru may be non-zero
 34505  0037A4                     	endif
 34506  0037A4  0008               	tblrd		*
 34507  0037A6  CFF5 F0DF          	movff	tablat,sprintf@c
 34508  0037AA  0100               	movlb	0	; () banked
 34509  0037AC  51DF               	movf	sprintf@c& (0+255),w,b
 34510  0037AE  B4D8               	btfsc	status,2,c
 34511  0037B0  D003               	goto	l10026
 34512  0037B2  EF2F  F014         	goto	l9648
 34513                           
 34514                           ; BSR set to: 0
 34515  0037B6  D000               	goto	l10026
 34516  0037B8                     l10026:
 34517                           
 34518                           ;doprnt.c: 1538: *sp = 0;
 34519  0037B8  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 34520  0037BC  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 34521  0037C0  0E00               	movlw	0
 34522  0037C2  6EDF               	movwf	indf2,c
 34523  0037C4  0012               	return	
 34524                           
 34525                           ;doprnt.c: 1540: return 0;
 34526                           ;	Return value of _sprintf is never used
 34527  0037C6  0012               	return		;funcret
 34528  0037C8                     __end_of_sprintf:
 34529                           	opt stack 0
 34530                           tblptru	equ	0xFF8
 34531                           tblptrh	equ	0xFF7
 34532                           tblptrl	equ	0xFF6
 34533                           tablat	equ	0xFF5
 34534                           prodh	equ	0xFF4
 34535                           prodl	equ	0xFF3
 34536                           intcon	equ	0xFF2
 34537                           intcon2	equ	0xFF1
 34538                           indf0	equ	0xFEF
 34539                           postinc0	equ	0xFEE
 34540                           plusw0	equ	0xFEB
 34541                           fsr0h	equ	0xFEA
 34542                           fsr0l	equ	0xFE9
 34543                           wreg	equ	0xFE8
 34544                           indf1	equ	0xFE7
 34545                           postdec1	equ	0xFE5
 34546                           fsr1h	equ	0xFE2
 34547                           fsr1l	equ	0xFE1
 34548                           indf2	equ	0xFDF
 34549                           postinc2	equ	0xFDE
 34550                           postdec2	equ	0xFDD
 34551                           plusw2	equ	0xFDB
 34552                           fsr2h	equ	0xFDA
 34553                           fsr2l	equ	0xFD9
 34554                           status	equ	0xFD8
 34555                           
 34556 ;; *************** function _scale *****************
 34557 ;; Defined at:
 34558 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 34559 ;; Parameters:    Size  Location     Type
 34560 ;;  scl             1    wreg     char 
 34561 ;; Auto vars:     Size  Location     Type
 34562 ;;  scl             1   47[BANK0 ] char 
 34563 ;; Return value:  Size  Location     Type
 34564 ;;                  3   41[BANK0 ] char 
 34565 ;; Registers used:
 34566 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34567 ;; Tracked objects:
 34568 ;;		On entry : 0/0
 34569 ;;		On exit  : 0/0
 34570 ;;		Unchanged: 0/0
 34571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34572 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34573 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34575 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34576 ;;Total ram usage:        7 bytes
 34577 ;; Hardware stack levels used:    1
 34578 ;; Hardware stack levels required when called:    7
 34579 ;; This function calls:
 34580 ;;		___awdiv
 34581 ;;		___awmod
 34582 ;;		___ftmul
 34583 ;;		___wmul
 34584 ;; This function is called by:
 34585 ;;		_sprintf
 34586 ;; This function uses a non-reentrant model
 34587 ;;
 34588                           
 34589                           	psect	text76
 34590  0057CE                     __ptext76:
 34591                           	opt stack 0
 34592  0057CE                     _scale:
 34593                           	opt stack 22
 34594                           
 34595                           ;incstack = 0
 34596                           ;scale@scl stored from wreg
 34597  0057CE  0100               	movlb	0	; () banked
 34598  0057D0  6F8F               	movwf	scale@scl& (0+255),b
 34599                           
 34600                           ; BSR set to: 0
 34601                           ;doprnt.c: 428: if(scl < 0) {
 34602  0057D2  0100               	movlb	0	; () banked
 34603  0057D4  AF8F               	btfss	scale@scl& (0+255),7,b
 34604  0057D6  D13F               	goto	l9350
 34605                           
 34606                           ; BSR set to: 0
 34607                           ;doprnt.c: 429: scl = -scl;
 34608  0057D8  0100               	movlb	0	; () banked
 34609  0057DA  6D8F               	negf	scale@scl& (0+255),b
 34610                           
 34611                           ;doprnt.c: 430: if(scl>=110)
 34612  0057DC  0100               	movlb	0	; () banked
 34613  0057DE  518F               	movf	scale@scl& (0+255),w,b
 34614  0057E0  0A80               	xorlw	128
 34615  0057E2  0F12               	addlw	-238
 34616  0057E4  A0D8               	btfss	status,0,c
 34617  0057E6  D0B6               	goto	l9340
 34618                           
 34619                           ; BSR set to: 0
 34620                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 34621  0057E8  0E00               	movlw	0
 34622  0057EA  0100               	movlb	0	; () banked
 34623  0057EC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34624  0057EE  0E03               	movlw	3
 34625  0057F0  6F70               	movwf	___wmul@multiplicand& (0+255),b
 34626  0057F2  0E00               	movlw	0
 34627  0057F4  0100               	movlb	0	; () banked
 34628  0057F6  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 34629  0057F8  0E0A               	movlw	10
 34630  0057FA  6F68               	movwf	___awdiv@divisor& (0+255),b
 34631  0057FC  0E00               	movlw	0
 34632  0057FE  0100               	movlb	0	; () banked
 34633  005800  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 34634  005802  0E64               	movlw	100
 34635  005804  6F62               	movwf	___awmod@divisor& (0+255),b
 34636  005806  0100               	movlb	0	; () banked
 34637  005808  518F               	movf	scale@scl& (0+255),w,b
 34638  00580A  0100               	movlb	0	; () banked
 34639  00580C  6F60               	movwf	___awmod@dividend& (0+255),b
 34640  00580E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 34641  005810  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 34642  005812  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 34643  005814  ECC4  F04B         	call	___awmod	;wreg free
 34644  005818  C060  F066         	movff	?___awmod,___awdiv@dividend
 34645  00581C  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 34646  005820  EC10  F049         	call	___awdiv	;wreg free
 34647  005824  0E09               	movlw	9
 34648  005826  0100               	movlb	0	; () banked
 34649  005828  2566               	addwf	?___awdiv& (0+255),w,b
 34650  00582A  0100               	movlb	0	; () banked
 34651  00582C  6F6E               	movwf	___wmul@multiplier& (0+255),b
 34652  00582E  0E00               	movlw	0
 34653  005830  0100               	movlb	0	; () banked
 34654  005832  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 34655  005834  0100               	movlb	0	; () banked
 34656  005836  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 34657  005838  ECBF  F052         	call	___wmul	;wreg free
 34658  00583C  0EEB               	movlw	low __npowers_
 34659  00583E  0100               	movlb	0	; () banked
 34660  005840  256E               	addwf	?___wmul& (0+255),w,b
 34661  005842  6EF6               	movwf	tblptrl,c
 34662  005844  0EED               	movlw	high __npowers_
 34663  005846  0100               	movlb	0	; () banked
 34664  005848  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 34665  00584A  6EF7               	movwf	tblptrh,c
 34666  00584C                     	if	1	;There are 3 active tblptr bytes
 34667  00584C  6AF8               	clrf	tblptru,c
 34668  00584E  0E00               	movlw	low (__mediumconst shr (0+16))
 34669  005850  22F8               	addwfc	tblptru,f,c
 34670  005852                     	endif
 34671  005852  0009               	tblrd		*+
 34672  005854  CFF5 F07D          	movff	tablat,___ftmul@f2
 34673  005858  0009               	tblrd		*+
 34674  00585A  CFF5 F07E          	movff	tablat,___ftmul@f2+1
 34675  00585E  000A               	tblrd		*-
 34676  005860  CFF5 F07F          	movff	tablat,___ftmul@f2+2
 34677  005864  0E00               	movlw	0
 34678  005866  0100               	movlb	0	; () banked
 34679  005868  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 34680  00586A  0E64               	movlw	100
 34681  00586C  6F68               	movwf	___awdiv@divisor& (0+255),b
 34682  00586E  0100               	movlb	0	; () banked
 34683  005870  518F               	movf	scale@scl& (0+255),w,b
 34684  005872  0100               	movlb	0	; () banked
 34685  005874  6F66               	movwf	___awdiv@dividend& (0+255),b
 34686  005876  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 34687  005878  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 34688  00587A  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 34689  00587C  EC10  F049         	call	___awdiv	;wreg free
 34690  005880  0E12               	movlw	18
 34691  005882  0100               	movlb	0	; () banked
 34692  005884  2566               	addwf	?___awdiv& (0+255),w,b
 34693  005886  0100               	movlb	0	; () banked
 34694  005888  6F6E               	movwf	___wmul@multiplier& (0+255),b
 34695  00588A  0E00               	movlw	0
 34696  00588C  0100               	movlb	0	; () banked
 34697  00588E  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 34698  005890  0100               	movlb	0	; () banked
 34699  005892  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 34700  005894  0E00               	movlw	0
 34701  005896  0100               	movlb	0	; () banked
 34702  005898  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34703  00589A  0E03               	movlw	3
 34704  00589C  6F70               	movwf	___wmul@multiplicand& (0+255),b
 34705  00589E  ECBF  F052         	call	___wmul	;wreg free
 34706  0058A2  0EEB               	movlw	low __npowers_
 34707  0058A4  0100               	movlb	0	; () banked
 34708  0058A6  256E               	addwf	?___wmul& (0+255),w,b
 34709  0058A8  6EF6               	movwf	tblptrl,c
 34710  0058AA  0EED               	movlw	high __npowers_
 34711  0058AC  0100               	movlb	0	; () banked
 34712  0058AE  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 34713  0058B0  6EF7               	movwf	tblptrh,c
 34714  0058B2                     	if	1	;There are 3 active tblptr bytes
 34715  0058B2  6AF8               	clrf	tblptru,c
 34716  0058B4  0E00               	movlw	low (__mediumconst shr (0+16))
 34717  0058B6  22F8               	addwfc	tblptru,f,c
 34718  0058B8                     	endif
 34719  0058B8  0009               	tblrd		*+
 34720  0058BA  CFF5 F07A          	movff	tablat,___ftmul@f1
 34721  0058BE  0009               	tblrd		*+
 34722  0058C0  CFF5 F07B          	movff	tablat,___ftmul@f1+1
 34723  0058C4  000A               	tblrd		*-
 34724  0058C6  CFF5 F07C          	movff	tablat,___ftmul@f1+2
 34725  0058CA  EC5D  F03F         	call	___ftmul	;wreg free
 34726  0058CE  C07A  F08C         	movff	?___ftmul,_scale$4080
 34727  0058D2  C07B  F08D         	movff	?___ftmul+1,_scale$4080+1
 34728  0058D6  C07C  F08E         	movff	?___ftmul+2,_scale$4080+2
 34729                           
 34730                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 34731  0058DA  C08C  F07A         	movff	_scale$4080,___ftmul@f1
 34732  0058DE  C08D  F07B         	movff	_scale$4080+1,___ftmul@f1+1
 34733  0058E2  C08E  F07C         	movff	_scale$4080+2,___ftmul@f1+2
 34734  0058E6  0E00               	movlw	0
 34735  0058E8  0100               	movlb	0	; () banked
 34736  0058EA  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34737  0058EC  0E03               	movlw	3
 34738  0058EE  6F70               	movwf	___wmul@multiplicand& (0+255),b
 34739  0058F0  0E00               	movlw	0
 34740  0058F2  0100               	movlb	0	; () banked
 34741  0058F4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 34742  0058F6  0E0A               	movlw	10
 34743  0058F8  6F62               	movwf	___awmod@divisor& (0+255),b
 34744  0058FA  0100               	movlb	0	; () banked
 34745  0058FC  518F               	movf	scale@scl& (0+255),w,b
 34746  0058FE  0100               	movlb	0	; () banked
 34747  005900  6F60               	movwf	___awmod@dividend& (0+255),b
 34748  005902  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 34749  005904  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 34750  005906  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 34751  005908  ECC4  F04B         	call	___awmod	;wreg free
 34752  00590C  C060  F06E         	movff	?___awmod,___wmul@multiplier
 34753  005910  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 34754  005914  ECBF  F052         	call	___wmul	;wreg free
 34755  005918  0EEB               	movlw	low __npowers_
 34756  00591A  0100               	movlb	0	; () banked
 34757  00591C  256E               	addwf	?___wmul& (0+255),w,b
 34758  00591E  6EF6               	movwf	tblptrl,c
 34759  005920  0EED               	movlw	high __npowers_
 34760  005922  0100               	movlb	0	; () banked
 34761  005924  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 34762  005926  6EF7               	movwf	tblptrh,c
 34763  005928                     	if	1	;There are 3 active tblptr bytes
 34764  005928  6AF8               	clrf	tblptru,c
 34765  00592A  0E00               	movlw	low (__mediumconst shr (0+16))
 34766  00592C  22F8               	addwfc	tblptru,f,c
 34767  00592E                     	endif
 34768  00592E  0009               	tblrd		*+
 34769  005930  CFF5 F07D          	movff	tablat,___ftmul@f2
 34770  005934  0009               	tblrd		*+
 34771  005936  CFF5 F07E          	movff	tablat,___ftmul@f2+1
 34772  00593A  000A               	tblrd		*-
 34773  00593C  CFF5 F07F          	movff	tablat,___ftmul@f2+2
 34774  005940  EC5D  F03F         	call	___ftmul	;wreg free
 34775  005944  C07A  F089         	movff	?___ftmul,?_scale
 34776  005948  C07B  F08A         	movff	?___ftmul+1,?_scale+1
 34777  00594C  C07C  F08B         	movff	?___ftmul+2,?_scale+2
 34778  005950  0012               	return	
 34779  005952  D06B               	goto	l9346
 34780  005954                     l9340:
 34781                           
 34782                           ;doprnt.c: 432: else if(scl > 10)
 34783  005954  0100               	movlb	0	; () banked
 34784  005956  518F               	movf	scale@scl& (0+255),w,b
 34785  005958  0A80               	xorlw	128
 34786  00595A  0F75               	addlw	-139
 34787  00595C  A0D8               	btfss	status,0,c
 34788  00595E  D065               	goto	l9346
 34789                           
 34790                           ; BSR set to: 0
 34791                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 34792  005960  0E00               	movlw	0
 34793  005962  0100               	movlb	0	; () banked
 34794  005964  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 34795  005966  0E0A               	movlw	10
 34796  005968  6F68               	movwf	___awdiv@divisor& (0+255),b
 34797  00596A  0100               	movlb	0	; () banked
 34798  00596C  518F               	movf	scale@scl& (0+255),w,b
 34799  00596E  0100               	movlb	0	; () banked
 34800  005970  6F66               	movwf	___awdiv@dividend& (0+255),b
 34801  005972  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 34802  005974  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 34803  005976  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 34804  005978  EC10  F049         	call	___awdiv	;wreg free
 34805  00597C  0E09               	movlw	9
 34806  00597E  0100               	movlb	0	; () banked
 34807  005980  2566               	addwf	?___awdiv& (0+255),w,b
 34808  005982  0100               	movlb	0	; () banked
 34809  005984  6F6E               	movwf	___wmul@multiplier& (0+255),b
 34810  005986  0E00               	movlw	0
 34811  005988  0100               	movlb	0	; () banked
 34812  00598A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 34813  00598C  0100               	movlb	0	; () banked
 34814  00598E  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 34815  005990  0E00               	movlw	0
 34816  005992  0100               	movlb	0	; () banked
 34817  005994  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34818  005996  0E03               	movlw	3
 34819  005998  6F70               	movwf	___wmul@multiplicand& (0+255),b
 34820  00599A  ECBF  F052         	call	___wmul	;wreg free
 34821  00599E  0EEB               	movlw	low __npowers_
 34822  0059A0  0100               	movlb	0	; () banked
 34823  0059A2  256E               	addwf	?___wmul& (0+255),w,b
 34824  0059A4  6EF6               	movwf	tblptrl,c
 34825  0059A6  0EED               	movlw	high __npowers_
 34826  0059A8  0100               	movlb	0	; () banked
 34827  0059AA  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 34828  0059AC  6EF7               	movwf	tblptrh,c
 34829  0059AE                     	if	1	;There are 3 active tblptr bytes
 34830  0059AE  6AF8               	clrf	tblptru,c
 34831  0059B0  0E00               	movlw	low (__mediumconst shr (0+16))
 34832  0059B2  22F8               	addwfc	tblptru,f,c
 34833  0059B4                     	endif
 34834  0059B4  0009               	tblrd		*+
 34835  0059B6  CFF5 F07A          	movff	tablat,___ftmul@f1
 34836  0059BA  0009               	tblrd		*+
 34837  0059BC  CFF5 F07B          	movff	tablat,___ftmul@f1+1
 34838  0059C0  000A               	tblrd		*-
 34839  0059C2  CFF5 F07C          	movff	tablat,___ftmul@f1+2
 34840  0059C6  0E00               	movlw	0
 34841  0059C8  0100               	movlb	0	; () banked
 34842  0059CA  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34843  0059CC  0E03               	movlw	3
 34844  0059CE  6F70               	movwf	___wmul@multiplicand& (0+255),b
 34845  0059D0  0E00               	movlw	0
 34846  0059D2  0100               	movlb	0	; () banked
 34847  0059D4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 34848  0059D6  0E0A               	movlw	10
 34849  0059D8  6F62               	movwf	___awmod@divisor& (0+255),b
 34850  0059DA  0100               	movlb	0	; () banked
 34851  0059DC  518F               	movf	scale@scl& (0+255),w,b
 34852  0059DE  0100               	movlb	0	; () banked
 34853  0059E0  6F60               	movwf	___awmod@dividend& (0+255),b
 34854  0059E2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 34855  0059E4  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 34856  0059E6  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 34857  0059E8  ECC4  F04B         	call	___awmod	;wreg free
 34858  0059EC  C060  F06E         	movff	?___awmod,___wmul@multiplier
 34859  0059F0  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 34860  0059F4  ECBF  F052         	call	___wmul	;wreg free
 34861  0059F8  0EEB               	movlw	low __npowers_
 34862  0059FA  0100               	movlb	0	; () banked
 34863  0059FC  256E               	addwf	?___wmul& (0+255),w,b
 34864  0059FE  6EF6               	movwf	tblptrl,c
 34865  005A00  0EED               	movlw	high __npowers_
 34866  005A02  0100               	movlb	0	; () banked
 34867  005A04  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 34868  005A06  6EF7               	movwf	tblptrh,c
 34869  005A08                     	if	1	;There are 3 active tblptr bytes
 34870  005A08  6AF8               	clrf	tblptru,c
 34871  005A0A  0E00               	movlw	low (__mediumconst shr (0+16))
 34872  005A0C  22F8               	addwfc	tblptru,f,c
 34873  005A0E                     	endif
 34874  005A0E  0009               	tblrd		*+
 34875  005A10  CFF5 F07D          	movff	tablat,___ftmul@f2
 34876  005A14  0009               	tblrd		*+
 34877  005A16  CFF5 F07E          	movff	tablat,___ftmul@f2+1
 34878  005A1A  000A               	tblrd		*-
 34879  005A1C  CFF5 F07F          	movff	tablat,___ftmul@f2+2
 34880  005A20  EC5D  F03F         	call	___ftmul	;wreg free
 34881  005A24  D78F               	goto	L22
 34882  005A26  0012               	return	
 34883  005A28  D000               	goto	l9346
 34884  005A2A                     l9346:
 34885                           
 34886                           ;doprnt.c: 434: return _npowers_[scl];
 34887  005A2A  0100               	movlb	0	; () banked
 34888  005A2C  518F               	movf	scale@scl& (0+255),w,b
 34889  005A2E  0D03               	mullw	3
 34890  005A30  0EEB               	movlw	low __npowers_
 34891  005A32  24F3               	addwf	prodl,w,c
 34892  005A34  6EF6               	movwf	tblptrl,c
 34893  005A36  0EED               	movlw	high __npowers_
 34894  005A38  20F4               	addwfc	prodh,w,c
 34895  005A3A  6EF7               	movwf	tblptrh,c
 34896  005A3C                     	if	1	;There are 3 active tblptr bytes
 34897  005A3C  6AF8               	clrf	tblptru,c
 34898  005A3E  0E00               	movlw	low (__mediumconst shr (0+16))
 34899  005A40  22F8               	addwfc	tblptru,f,c
 34900  005A42                     	endif
 34901  005A42  0009               	tblrd		*+
 34902  005A44  CFF5 F089          	movff	tablat,?_scale
 34903  005A48  0009               	tblrd		*+
 34904  005A4A  CFF5 F08A          	movff	tablat,?_scale+1
 34905  005A4E  000A               	tblrd		*-
 34906  005A50  CFF5 F08B          	movff	tablat,?_scale+2
 34907                           
 34908                           ; BSR set to: 0
 34909  005A54  0012               	return	
 34910  005A56                     l9350:
 34911                           
 34912                           ; BSR set to: 0
 34913                           ;doprnt.c: 435: }
 34914                           ;doprnt.c: 436: if(scl>=110)
 34915  005A56  0100               	movlb	0	; () banked
 34916  005A58  518F               	movf	scale@scl& (0+255),w,b
 34917  005A5A  0A80               	xorlw	128
 34918  005A5C  0F12               	addlw	-238
 34919  005A5E  A0D8               	btfss	status,0,c
 34920  005A60  D0B6               	goto	l9358
 34921                           
 34922                           ; BSR set to: 0
 34923                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 34924  005A62  0E00               	movlw	0
 34925  005A64  0100               	movlb	0	; () banked
 34926  005A66  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34927  005A68  0E03               	movlw	3
 34928  005A6A  6F70               	movwf	___wmul@multiplicand& (0+255),b
 34929  005A6C  0E00               	movlw	0
 34930  005A6E  0100               	movlb	0	; () banked
 34931  005A70  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 34932  005A72  0E0A               	movlw	10
 34933  005A74  6F68               	movwf	___awdiv@divisor& (0+255),b
 34934  005A76  0E00               	movlw	0
 34935  005A78  0100               	movlb	0	; () banked
 34936  005A7A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 34937  005A7C  0E64               	movlw	100
 34938  005A7E  6F62               	movwf	___awmod@divisor& (0+255),b
 34939  005A80  0100               	movlb	0	; () banked
 34940  005A82  518F               	movf	scale@scl& (0+255),w,b
 34941  005A84  0100               	movlb	0	; () banked
 34942  005A86  6F60               	movwf	___awmod@dividend& (0+255),b
 34943  005A88  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 34944  005A8A  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 34945  005A8C  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 34946  005A8E  ECC4  F04B         	call	___awmod	;wreg free
 34947  005A92  C060  F066         	movff	?___awmod,___awdiv@dividend
 34948  005A96  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 34949  005A9A  EC10  F049         	call	___awdiv	;wreg free
 34950  005A9E  0E09               	movlw	9
 34951  005AA0  0100               	movlb	0	; () banked
 34952  005AA2  2566               	addwf	?___awdiv& (0+255),w,b
 34953  005AA4  0100               	movlb	0	; () banked
 34954  005AA6  6F6E               	movwf	___wmul@multiplier& (0+255),b
 34955  005AA8  0E00               	movlw	0
 34956  005AAA  0100               	movlb	0	; () banked
 34957  005AAC  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 34958  005AAE  0100               	movlb	0	; () banked
 34959  005AB0  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 34960  005AB2  ECBF  F052         	call	___wmul	;wreg free
 34961  005AB6  0E12               	movlw	low __powers_
 34962  005AB8  0100               	movlb	0	; () banked
 34963  005ABA  256E               	addwf	?___wmul& (0+255),w,b
 34964  005ABC  6EF6               	movwf	tblptrl,c
 34965  005ABE  0EEE               	movlw	high __powers_
 34966  005AC0  0100               	movlb	0	; () banked
 34967  005AC2  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 34968  005AC4  6EF7               	movwf	tblptrh,c
 34969  005AC6                     	if	1	;There are 3 active tblptr bytes
 34970  005AC6  6AF8               	clrf	tblptru,c
 34971  005AC8  0E00               	movlw	low (__mediumconst shr (0+16))
 34972  005ACA  22F8               	addwfc	tblptru,f,c
 34973  005ACC                     	endif
 34974  005ACC  0009               	tblrd		*+
 34975  005ACE  CFF5 F07D          	movff	tablat,___ftmul@f2
 34976  005AD2  0009               	tblrd		*+
 34977  005AD4  CFF5 F07E          	movff	tablat,___ftmul@f2+1
 34978  005AD8  000A               	tblrd		*-
 34979  005ADA  CFF5 F07F          	movff	tablat,___ftmul@f2+2
 34980  005ADE  0E00               	movlw	0
 34981  005AE0  0100               	movlb	0	; () banked
 34982  005AE2  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 34983  005AE4  0E64               	movlw	100
 34984  005AE6  6F68               	movwf	___awdiv@divisor& (0+255),b
 34985  005AE8  0100               	movlb	0	; () banked
 34986  005AEA  518F               	movf	scale@scl& (0+255),w,b
 34987  005AEC  0100               	movlb	0	; () banked
 34988  005AEE  6F66               	movwf	___awdiv@dividend& (0+255),b
 34989  005AF0  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 34990  005AF2  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 34991  005AF4  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 34992  005AF6  EC10  F049         	call	___awdiv	;wreg free
 34993  005AFA  0E12               	movlw	18
 34994  005AFC  0100               	movlb	0	; () banked
 34995  005AFE  2566               	addwf	?___awdiv& (0+255),w,b
 34996  005B00  0100               	movlb	0	; () banked
 34997  005B02  6F6E               	movwf	___wmul@multiplier& (0+255),b
 34998  005B04  0E00               	movlw	0
 34999  005B06  0100               	movlb	0	; () banked
 35000  005B08  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 35001  005B0A  0100               	movlb	0	; () banked
 35002  005B0C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 35003  005B0E  0E00               	movlw	0
 35004  005B10  0100               	movlb	0	; () banked
 35005  005B12  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35006  005B14  0E03               	movlw	3
 35007  005B16  6F70               	movwf	___wmul@multiplicand& (0+255),b
 35008  005B18  ECBF  F052         	call	___wmul	;wreg free
 35009  005B1C  0E12               	movlw	low __powers_
 35010  005B1E  0100               	movlb	0	; () banked
 35011  005B20  256E               	addwf	?___wmul& (0+255),w,b
 35012  005B22  6EF6               	movwf	tblptrl,c
 35013  005B24  0EEE               	movlw	high __powers_
 35014  005B26  0100               	movlb	0	; () banked
 35015  005B28  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 35016  005B2A  6EF7               	movwf	tblptrh,c
 35017  005B2C                     	if	1	;There are 3 active tblptr bytes
 35018  005B2C  6AF8               	clrf	tblptru,c
 35019  005B2E  0E00               	movlw	low (__mediumconst shr (0+16))
 35020  005B30  22F8               	addwfc	tblptru,f,c
 35021  005B32                     	endif
 35022  005B32  0009               	tblrd		*+
 35023  005B34  CFF5 F07A          	movff	tablat,___ftmul@f1
 35024  005B38  0009               	tblrd		*+
 35025  005B3A  CFF5 F07B          	movff	tablat,___ftmul@f1+1
 35026  005B3E  000A               	tblrd		*-
 35027  005B40  CFF5 F07C          	movff	tablat,___ftmul@f1+2
 35028  005B44  EC5D  F03F         	call	___ftmul	;wreg free
 35029  005B48  C07A  F08C         	movff	?___ftmul,_scale$4080
 35030  005B4C  C07B  F08D         	movff	?___ftmul+1,_scale$4080+1
 35031  005B50  C07C  F08E         	movff	?___ftmul+2,_scale$4080+2
 35032                           
 35033                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 35034  005B54  C08C  F07A         	movff	_scale$4080,___ftmul@f1
 35035  005B58  C08D  F07B         	movff	_scale$4080+1,___ftmul@f1+1
 35036  005B5C  C08E  F07C         	movff	_scale$4080+2,___ftmul@f1+2
 35037  005B60  0E00               	movlw	0
 35038  005B62  0100               	movlb	0	; () banked
 35039  005B64  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35040  005B66  0E03               	movlw	3
 35041  005B68  6F70               	movwf	___wmul@multiplicand& (0+255),b
 35042  005B6A  0E00               	movlw	0
 35043  005B6C  0100               	movlb	0	; () banked
 35044  005B6E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 35045  005B70  0E0A               	movlw	10
 35046  005B72  6F62               	movwf	___awmod@divisor& (0+255),b
 35047  005B74  0100               	movlb	0	; () banked
 35048  005B76  518F               	movf	scale@scl& (0+255),w,b
 35049  005B78  0100               	movlb	0	; () banked
 35050  005B7A  6F60               	movwf	___awmod@dividend& (0+255),b
 35051  005B7C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 35052  005B7E  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 35053  005B80  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 35054  005B82  ECC4  F04B         	call	___awmod	;wreg free
 35055  005B86  C060  F06E         	movff	?___awmod,___wmul@multiplier
 35056  005B8A  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 35057  005B8E  ECBF  F052         	call	___wmul	;wreg free
 35058  005B92  0E12               	movlw	low __powers_
 35059  005B94  0100               	movlb	0	; () banked
 35060  005B96  256E               	addwf	?___wmul& (0+255),w,b
 35061  005B98  6EF6               	movwf	tblptrl,c
 35062  005B9A  0EEE               	movlw	high __powers_
 35063  005B9C  0100               	movlb	0	; () banked
 35064  005B9E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 35065  005BA0  6EF7               	movwf	tblptrh,c
 35066  005BA2                     	if	1	;There are 3 active tblptr bytes
 35067  005BA2  6AF8               	clrf	tblptru,c
 35068  005BA4  0E00               	movlw	low (__mediumconst shr (0+16))
 35069  005BA6  22F8               	addwfc	tblptru,f,c
 35070  005BA8                     	endif
 35071  005BA8  0009               	tblrd		*+
 35072  005BAA  CFF5 F07D          	movff	tablat,___ftmul@f2
 35073  005BAE  0009               	tblrd		*+
 35074  005BB0  CFF5 F07E          	movff	tablat,___ftmul@f2+1
 35075  005BB4  000A               	tblrd		*-
 35076  005BB6  CFF5 F07F          	movff	tablat,___ftmul@f2+2
 35077  005BBA  EC5D  F03F         	call	___ftmul	;wreg free
 35078  005BBE  C07A  F089         	movff	?___ftmul,?_scale
 35079  005BC2  C07B  F08A         	movff	?___ftmul+1,?_scale+1
 35080  005BC6  C07C  F08B         	movff	?___ftmul+2,?_scale+2
 35081  005BCA  0012               	return	
 35082  005BCC  D06B               	goto	l9364
 35083  005BCE                     l9358:
 35084                           
 35085                           ;doprnt.c: 438: else if(scl > 10)
 35086  005BCE  0100               	movlb	0	; () banked
 35087  005BD0  518F               	movf	scale@scl& (0+255),w,b
 35088  005BD2  0A80               	xorlw	128
 35089  005BD4  0F75               	addlw	-139
 35090  005BD6  A0D8               	btfss	status,0,c
 35091  005BD8  D065               	goto	l9364
 35092                           
 35093                           ; BSR set to: 0
 35094                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 35095  005BDA  0E00               	movlw	0
 35096  005BDC  0100               	movlb	0	; () banked
 35097  005BDE  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 35098  005BE0  0E0A               	movlw	10
 35099  005BE2  6F68               	movwf	___awdiv@divisor& (0+255),b
 35100  005BE4  0100               	movlb	0	; () banked
 35101  005BE6  518F               	movf	scale@scl& (0+255),w,b
 35102  005BE8  0100               	movlb	0	; () banked
 35103  005BEA  6F66               	movwf	___awdiv@dividend& (0+255),b
 35104  005BEC  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 35105  005BEE  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 35106  005BF0  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 35107  005BF2  EC10  F049         	call	___awdiv	;wreg free
 35108  005BF6  0E09               	movlw	9
 35109  005BF8  0100               	movlb	0	; () banked
 35110  005BFA  2566               	addwf	?___awdiv& (0+255),w,b
 35111  005BFC  0100               	movlb	0	; () banked
 35112  005BFE  6F6E               	movwf	___wmul@multiplier& (0+255),b
 35113  005C00  0E00               	movlw	0
 35114  005C02  0100               	movlb	0	; () banked
 35115  005C04  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 35116  005C06  0100               	movlb	0	; () banked
 35117  005C08  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 35118  005C0A  0E00               	movlw	0
 35119  005C0C  0100               	movlb	0	; () banked
 35120  005C0E  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35121  005C10  0E03               	movlw	3
 35122  005C12  6F70               	movwf	___wmul@multiplicand& (0+255),b
 35123  005C14  ECBF  F052         	call	___wmul	;wreg free
 35124  005C18  0E12               	movlw	low __powers_
 35125  005C1A  0100               	movlb	0	; () banked
 35126  005C1C  256E               	addwf	?___wmul& (0+255),w,b
 35127  005C1E  6EF6               	movwf	tblptrl,c
 35128  005C20  0EEE               	movlw	high __powers_
 35129  005C22  0100               	movlb	0	; () banked
 35130  005C24  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 35131  005C26  6EF7               	movwf	tblptrh,c
 35132  005C28                     	if	1	;There are 3 active tblptr bytes
 35133  005C28  6AF8               	clrf	tblptru,c
 35134  005C2A  0E00               	movlw	low (__mediumconst shr (0+16))
 35135  005C2C  22F8               	addwfc	tblptru,f,c
 35136  005C2E                     	endif
 35137  005C2E  0009               	tblrd		*+
 35138  005C30  CFF5 F07A          	movff	tablat,___ftmul@f1
 35139  005C34  0009               	tblrd		*+
 35140  005C36  CFF5 F07B          	movff	tablat,___ftmul@f1+1
 35141  005C3A  000A               	tblrd		*-
 35142  005C3C  CFF5 F07C          	movff	tablat,___ftmul@f1+2
 35143  005C40  0E00               	movlw	0
 35144  005C42  0100               	movlb	0	; () banked
 35145  005C44  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35146  005C46  0E03               	movlw	3
 35147  005C48  6F70               	movwf	___wmul@multiplicand& (0+255),b
 35148  005C4A  0E00               	movlw	0
 35149  005C4C  0100               	movlb	0	; () banked
 35150  005C4E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 35151  005C50  0E0A               	movlw	10
 35152  005C52  6F62               	movwf	___awmod@divisor& (0+255),b
 35153  005C54  0100               	movlb	0	; () banked
 35154  005C56  518F               	movf	scale@scl& (0+255),w,b
 35155  005C58  0100               	movlb	0	; () banked
 35156  005C5A  6F60               	movwf	___awmod@dividend& (0+255),b
 35157  005C5C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 35158  005C5E  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 35159  005C60  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 35160  005C62  ECC4  F04B         	call	___awmod	;wreg free
 35161  005C66  C060  F06E         	movff	?___awmod,___wmul@multiplier
 35162  005C6A  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 35163  005C6E  ECBF  F052         	call	___wmul	;wreg free
 35164  005C72  0E12               	movlw	low __powers_
 35165  005C74  0100               	movlb	0	; () banked
 35166  005C76  256E               	addwf	?___wmul& (0+255),w,b
 35167  005C78  6EF6               	movwf	tblptrl,c
 35168  005C7A  0EEE               	movlw	high __powers_
 35169  005C7C  0100               	movlb	0	; () banked
 35170  005C7E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 35171  005C80  6EF7               	movwf	tblptrh,c
 35172  005C82                     	if	1	;There are 3 active tblptr bytes
 35173  005C82  6AF8               	clrf	tblptru,c
 35174  005C84  0E00               	movlw	low (__mediumconst shr (0+16))
 35175  005C86  22F8               	addwfc	tblptru,f,c
 35176  005C88                     	endif
 35177  005C88  0009               	tblrd		*+
 35178  005C8A  CFF5 F07D          	movff	tablat,___ftmul@f2
 35179  005C8E  0009               	tblrd		*+
 35180  005C90  CFF5 F07E          	movff	tablat,___ftmul@f2+1
 35181  005C94  000A               	tblrd		*-
 35182  005C96  CFF5 F07F          	movff	tablat,___ftmul@f2+2
 35183  005C9A  EC5D  F03F         	call	___ftmul	;wreg free
 35184  005C9E  D78F               	goto	L23
 35185  005CA0  0012               	return	
 35186  005CA2  D000               	goto	l9364
 35187  005CA4                     l9364:
 35188                           
 35189                           ;doprnt.c: 440: return _powers_[scl];
 35190  005CA4  0100               	movlb	0	; () banked
 35191  005CA6  518F               	movf	scale@scl& (0+255),w,b
 35192  005CA8  0D03               	mullw	3
 35193  005CAA  0E12               	movlw	low __powers_
 35194  005CAC  24F3               	addwf	prodl,w,c
 35195  005CAE  6EF6               	movwf	tblptrl,c
 35196  005CB0  0EEE               	movlw	high __powers_
 35197  005CB2  20F4               	addwfc	prodh,w,c
 35198  005CB4  6EF7               	movwf	tblptrh,c
 35199  005CB6                     	if	1	;There are 3 active tblptr bytes
 35200  005CB6  6AF8               	clrf	tblptru,c
 35201  005CB8  0E00               	movlw	low (__mediumconst shr (0+16))
 35202  005CBA  22F8               	addwfc	tblptru,f,c
 35203  005CBC                     	endif
 35204  005CBC  0009               	tblrd		*+
 35205  005CBE  CFF5 F089          	movff	tablat,?_scale
 35206  005CC2  0009               	tblrd		*+
 35207  005CC4  CFF5 F08A          	movff	tablat,?_scale+1
 35208  005CC8  000A               	tblrd		*-
 35209  005CCA  CFF5 F08B          	movff	tablat,?_scale+2
 35210  005CCE  0012               	return	
 35211                           
 35212                           ; BSR set to: 0
 35213  005CD0  0012               	return		;funcret
 35214  005CD2                     __end_of_scale:
 35215                           	opt stack 0
 35216                           tblptru	equ	0xFF8
 35217                           tblptrh	equ	0xFF7
 35218                           tblptrl	equ	0xFF6
 35219                           tablat	equ	0xFF5
 35220                           prodh	equ	0xFF4
 35221                           prodl	equ	0xFF3
 35222                           intcon	equ	0xFF2
 35223                           intcon2	equ	0xFF1
 35224                           indf0	equ	0xFEF
 35225                           postinc0	equ	0xFEE
 35226                           plusw0	equ	0xFEB
 35227                           fsr0h	equ	0xFEA
 35228                           fsr0l	equ	0xFE9
 35229                           wreg	equ	0xFE8
 35230                           indf1	equ	0xFE7
 35231                           postdec1	equ	0xFE5
 35232                           fsr1h	equ	0xFE2
 35233                           fsr1l	equ	0xFE1
 35234                           indf2	equ	0xFDF
 35235                           postinc2	equ	0xFDE
 35236                           postdec2	equ	0xFDD
 35237                           plusw2	equ	0xFDB
 35238                           fsr2h	equ	0xFDA
 35239                           fsr2l	equ	0xFD9
 35240                           status	equ	0xFD8
 35241                           
 35242 ;; *************** function _isdigit *****************
 35243 ;; Defined at:
 35244 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
 35245 ;; Parameters:    Size  Location     Type
 35246 ;;  c               1    wreg     unsigned char 
 35247 ;; Auto vars:     Size  Location     Type
 35248 ;;  c               1    2[BANK0 ] unsigned char 
 35249 ;; Return value:  Size  Location     Type
 35250 ;;		None               void
 35251 ;; Registers used:
 35252 ;;		wreg, status,2, status,0
 35253 ;; Tracked objects:
 35254 ;;		On entry : 0/0
 35255 ;;		On exit  : 0/0
 35256 ;;		Unchanged: 0/0
 35257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35259 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35260 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35261 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35262 ;;Total ram usage:        3 bytes
 35263 ;; Hardware stack levels used:    1
 35264 ;; Hardware stack levels required when called:    5
 35265 ;; This function calls:
 35266 ;;		Nothing
 35267 ;; This function is called by:
 35268 ;;		_sprintf
 35269 ;; This function uses a non-reentrant model
 35270 ;;
 35271                           
 35272                           	psect	text77
 35273  00A716                     __ptext77:
 35274                           	opt stack 0
 35275  00A716                     _isdigit:
 35276                           	opt stack 24
 35277                           
 35278                           ;incstack = 0
 35279                           ;isdigit@c stored from wreg
 35280  00A716  0100               	movlb	0	; () banked
 35281  00A718  6F62               	movwf	isdigit@c& (0+255),b
 35282                           
 35283                           ; BSR set to: 0
 35284  00A71A  0E00               	movlw	0
 35285  00A71C  0100               	movlb	0	; () banked
 35286  00A71E  6F61               	movwf	_isdigit$3735& (0+255),b
 35287                           
 35288                           ; BSR set to: 0
 35289  00A720  0E3A               	movlw	58
 35290  00A722  0100               	movlb	0	; () banked
 35291  00A724  6162               	cpfslt	isdigit@c& (0+255),b
 35292  00A726  D008               	goto	l9376
 35293                           
 35294                           ; BSR set to: 0
 35295  00A728  0E2F               	movlw	47
 35296  00A72A  0100               	movlb	0	; () banked
 35297  00A72C  6562               	cpfsgt	isdigit@c& (0+255),b
 35298  00A72E  D004               	goto	l9376
 35299                           
 35300                           ; BSR set to: 0
 35301  00A730  0E01               	movlw	1
 35302  00A732  0100               	movlb	0	; () banked
 35303  00A734  6F61               	movwf	_isdigit$3735& (0+255),b
 35304  00A736  D000               	goto	l9376
 35305  00A738                     l9376:
 35306                           
 35307                           ; BSR set to: 0
 35308  00A738  C061  F060         	movff	_isdigit$3735,??_isdigit
 35309  00A73C  0100               	movlb	0	; () banked
 35310  00A73E  3160               	rrcf	??_isdigit& (0+255),w,b
 35311  00A740  0012               	return	
 35312                           
 35313                           ; BSR set to: 0
 35314                           
 35315                           ; BSR set to: 0
 35316  00A742  0012               	return		;funcret
 35317  00A744                     __end_of_isdigit:
 35318                           	opt stack 0
 35319                           tblptru	equ	0xFF8
 35320                           tblptrh	equ	0xFF7
 35321                           tblptrl	equ	0xFF6
 35322                           tablat	equ	0xFF5
 35323                           prodh	equ	0xFF4
 35324                           prodl	equ	0xFF3
 35325                           intcon	equ	0xFF2
 35326                           intcon2	equ	0xFF1
 35327                           indf0	equ	0xFEF
 35328                           postinc0	equ	0xFEE
 35329                           plusw0	equ	0xFEB
 35330                           fsr0h	equ	0xFEA
 35331                           fsr0l	equ	0xFE9
 35332                           wreg	equ	0xFE8
 35333                           indf1	equ	0xFE7
 35334                           postdec1	equ	0xFE5
 35335                           fsr1h	equ	0xFE2
 35336                           fsr1l	equ	0xFE1
 35337                           indf2	equ	0xFDF
 35338                           postinc2	equ	0xFDE
 35339                           postdec2	equ	0xFDD
 35340                           plusw2	equ	0xFDB
 35341                           fsr2h	equ	0xFDA
 35342                           fsr2l	equ	0xFD9
 35343                           status	equ	0xFD8
 35344                           
 35345 ;; *************** function _fround *****************
 35346 ;; Defined at:
 35347 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 35348 ;; Parameters:    Size  Location     Type
 35349 ;;  prec            1    wreg     unsigned char 
 35350 ;; Auto vars:     Size  Location     Type
 35351 ;;  prec            1   50[BANK0 ] unsigned char 
 35352 ;; Return value:  Size  Location     Type
 35353 ;;                  3   41[BANK0 ] unsigned char 
 35354 ;; Registers used:
 35355 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35356 ;; Tracked objects:
 35357 ;;		On entry : 0/0
 35358 ;;		On exit  : 0/0
 35359 ;;		Unchanged: 0/0
 35360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35361 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35362 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35364 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35365 ;;Total ram usage:       10 bytes
 35366 ;; Hardware stack levels used:    1
 35367 ;; Hardware stack levels required when called:    7
 35368 ;; This function calls:
 35369 ;;		___awdiv
 35370 ;;		___awmod
 35371 ;;		___ftmul
 35372 ;;		___wmul
 35373 ;; This function is called by:
 35374 ;;		_sprintf
 35375 ;; This function uses a non-reentrant model
 35376 ;;
 35377                           
 35378                           	psect	text78
 35379  0068E2                     __ptext78:
 35380                           	opt stack 0
 35381  0068E2                     _fround:
 35382                           	opt stack 22
 35383                           
 35384                           ; BSR set to: 0
 35385                           ;incstack = 0
 35386                           ;fround@prec stored from wreg
 35387  0068E2  0100               	movlb	0	; () banked
 35388  0068E4  6F92               	movwf	fround@prec& (0+255),b
 35389                           
 35390                           ; BSR set to: 0
 35391                           ;doprnt.c: 413: if(prec>=110)
 35392  0068E6  0E6D               	movlw	109
 35393  0068E8  0100               	movlb	0	; () banked
 35394  0068EA  6592               	cpfsgt	fround@prec& (0+255),b
 35395  0068EC  D0C4               	goto	l9318
 35396                           
 35397                           ; BSR set to: 0
 35398                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 35399  0068EE  0E00               	movlw	0
 35400  0068F0  0100               	movlb	0	; () banked
 35401  0068F2  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35402  0068F4  0E03               	movlw	3
 35403  0068F6  6F70               	movwf	___wmul@multiplicand& (0+255),b
 35404  0068F8  0E00               	movlw	0
 35405  0068FA  0100               	movlb	0	; () banked
 35406  0068FC  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 35407  0068FE  0E0A               	movlw	10
 35408  006900  6F68               	movwf	___awdiv@divisor& (0+255),b
 35409  006902  0E00               	movlw	0
 35410  006904  0100               	movlb	0	; () banked
 35411  006906  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 35412  006908  0E64               	movlw	100
 35413  00690A  6F62               	movwf	___awmod@divisor& (0+255),b
 35414  00690C  C092  F060         	movff	fround@prec,___awmod@dividend
 35415  006910  0100               	movlb	0	; () banked
 35416  006912  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 35417  006914  ECC4  F04B         	call	___awmod	;wreg free
 35418  006918  C060  F066         	movff	?___awmod,___awdiv@dividend
 35419  00691C  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 35420  006920  EC10  F049         	call	___awdiv	;wreg free
 35421  006924  0E09               	movlw	9
 35422  006926  0100               	movlb	0	; () banked
 35423  006928  2566               	addwf	?___awdiv& (0+255),w,b
 35424  00692A  0100               	movlb	0	; () banked
 35425  00692C  6F6E               	movwf	___wmul@multiplier& (0+255),b
 35426  00692E  0E00               	movlw	0
 35427  006930  0100               	movlb	0	; () banked
 35428  006932  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 35429  006934  0100               	movlb	0	; () banked
 35430  006936  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 35431  006938  ECBF  F052         	call	___wmul	;wreg free
 35432  00693C  0EEB               	movlw	low __npowers_
 35433  00693E  0100               	movlb	0	; () banked
 35434  006940  256E               	addwf	?___wmul& (0+255),w,b
 35435  006942  6EF6               	movwf	tblptrl,c
 35436  006944  0EED               	movlw	high __npowers_
 35437  006946  0100               	movlb	0	; () banked
 35438  006948  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 35439  00694A  6EF7               	movwf	tblptrh,c
 35440  00694C                     	if	1	;There are 3 active tblptr bytes
 35441  00694C  6AF8               	clrf	tblptru,c
 35442  00694E  0E00               	movlw	low (__mediumconst shr (0+16))
 35443  006950  22F8               	addwfc	tblptru,f,c
 35444  006952                     	endif
 35445  006952  0009               	tblrd		*+
 35446  006954  CFF5 F07D          	movff	tablat,___ftmul@f2
 35447  006958  0009               	tblrd		*+
 35448  00695A  CFF5 F07E          	movff	tablat,___ftmul@f2+1
 35449  00695E  000A               	tblrd		*-
 35450  006960  CFF5 F07F          	movff	tablat,___ftmul@f2+2
 35451  006964  0E00               	movlw	0
 35452  006966  0100               	movlb	0	; () banked
 35453  006968  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 35454  00696A  0E64               	movlw	100
 35455  00696C  6F68               	movwf	___awdiv@divisor& (0+255),b
 35456  00696E  C092  F066         	movff	fround@prec,___awdiv@dividend
 35457  006972  0100               	movlb	0	; () banked
 35458  006974  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 35459  006976  EC10  F049         	call	___awdiv	;wreg free
 35460  00697A  0E12               	movlw	18
 35461  00697C  0100               	movlb	0	; () banked
 35462  00697E  2566               	addwf	?___awdiv& (0+255),w,b
 35463  006980  0100               	movlb	0	; () banked
 35464  006982  6F6E               	movwf	___wmul@multiplier& (0+255),b
 35465  006984  0E00               	movlw	0
 35466  006986  0100               	movlb	0	; () banked
 35467  006988  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 35468  00698A  0100               	movlb	0	; () banked
 35469  00698C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 35470  00698E  0E00               	movlw	0
 35471  006990  0100               	movlb	0	; () banked
 35472  006992  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35473  006994  0E03               	movlw	3
 35474  006996  6F70               	movwf	___wmul@multiplicand& (0+255),b
 35475  006998  ECBF  F052         	call	___wmul	;wreg free
 35476  00699C  0EEB               	movlw	low __npowers_
 35477  00699E  0100               	movlb	0	; () banked
 35478  0069A0  256E               	addwf	?___wmul& (0+255),w,b
 35479  0069A2  6EF6               	movwf	tblptrl,c
 35480  0069A4  0EED               	movlw	high __npowers_
 35481  0069A6  0100               	movlb	0	; () banked
 35482  0069A8  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 35483  0069AA  6EF7               	movwf	tblptrh,c
 35484  0069AC                     	if	1	;There are 3 active tblptr bytes
 35485  0069AC  6AF8               	clrf	tblptru,c
 35486  0069AE  0E00               	movlw	low (__mediumconst shr (0+16))
 35487  0069B0  22F8               	addwfc	tblptru,f,c
 35488  0069B2                     	endif
 35489  0069B2  0009               	tblrd		*+
 35490  0069B4  CFF5 F07A          	movff	tablat,___ftmul@f1
 35491  0069B8  0009               	tblrd		*+
 35492  0069BA  CFF5 F07B          	movff	tablat,___ftmul@f1+1
 35493  0069BE  000A               	tblrd		*-
 35494  0069C0  CFF5 F07C          	movff	tablat,___ftmul@f1+2
 35495  0069C4  EC5D  F03F         	call	___ftmul	;wreg free
 35496  0069C8  C07A  F08F         	movff	?___ftmul,_fround$4078
 35497  0069CC  C07B  F090         	movff	?___ftmul+1,_fround$4078+1
 35498  0069D0  C07C  F091         	movff	?___ftmul+2,_fround$4078+2
 35499                           
 35500                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 35501  0069D4  0E00               	movlw	0
 35502  0069D6  0100               	movlb	0	; () banked
 35503  0069D8  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35504  0069DA  0E03               	movlw	3
 35505  0069DC  6F70               	movwf	___wmul@multiplicand& (0+255),b
 35506  0069DE  0E00               	movlw	0
 35507  0069E0  0100               	movlb	0	; () banked
 35508  0069E2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 35509  0069E4  0E0A               	movlw	10
 35510  0069E6  6F62               	movwf	___awmod@divisor& (0+255),b
 35511  0069E8  C092  F060         	movff	fround@prec,___awmod@dividend
 35512  0069EC  0100               	movlb	0	; () banked
 35513  0069EE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 35514  0069F0  ECC4  F04B         	call	___awmod	;wreg free
 35515  0069F4  C060  F06E         	movff	?___awmod,___wmul@multiplier
 35516  0069F8  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 35517  0069FC  ECBF  F052         	call	___wmul	;wreg free
 35518  006A00  0EEB               	movlw	low __npowers_
 35519  006A02  0100               	movlb	0	; () banked
 35520  006A04  256E               	addwf	?___wmul& (0+255),w,b
 35521  006A06  6EF6               	movwf	tblptrl,c
 35522  006A08  0EED               	movlw	high __npowers_
 35523  006A0A  0100               	movlb	0	; () banked
 35524  006A0C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 35525  006A0E  6EF7               	movwf	tblptrh,c
 35526  006A10                     	if	1	;There are 3 active tblptr bytes
 35527  006A10  6AF8               	clrf	tblptru,c
 35528  006A12  0E00               	movlw	low (__mediumconst shr (0+16))
 35529  006A14  22F8               	addwfc	tblptru,f,c
 35530  006A16                     	endif
 35531  006A16  0009               	tblrd		*+
 35532  006A18  CFF5 F07D          	movff	tablat,___ftmul@f2
 35533  006A1C  0009               	tblrd		*+
 35534  006A1E  CFF5 F07E          	movff	tablat,___ftmul@f2+1
 35535  006A22  000A               	tblrd		*-
 35536  006A24  CFF5 F07F          	movff	tablat,___ftmul@f2+2
 35537  006A28  C08F  F07A         	movff	_fround$4078,___ftmul@f1
 35538  006A2C  C090  F07B         	movff	_fround$4078+1,___ftmul@f1+1
 35539  006A30  C091  F07C         	movff	_fround$4078+2,___ftmul@f1+2
 35540  006A34  EC5D  F03F         	call	___ftmul	;wreg free
 35541  006A38  C07A  F08C         	movff	?___ftmul,_fround$4079
 35542  006A3C  C07B  F08D         	movff	?___ftmul+1,_fround$4079+1
 35543  006A40  C07C  F08E         	movff	?___ftmul+2,_fround$4079+2
 35544                           
 35545                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 35546  006A44  C08C  F07A         	movff	_fround$4079,___ftmul@f1
 35547  006A48  C08D  F07B         	movff	_fround$4079+1,___ftmul@f1+1
 35548  006A4C  C08E  F07C         	movff	_fround$4079+2,___ftmul@f1+2
 35549  006A50  0E00               	movlw	0
 35550  006A52  0100               	movlb	0	; () banked
 35551  006A54  6F7D               	movwf	___ftmul@f2& (0+255),b
 35552  006A56  0E00               	movlw	0
 35553  006A58  0100               	movlb	0	; () banked
 35554  006A5A  6F7E               	movwf	(___ftmul@f2+1)& (0+255),b
 35555  006A5C  0E3F               	movlw	63
 35556  006A5E  0100               	movlb	0	; () banked
 35557  006A60  6F7F               	movwf	(___ftmul@f2+2)& (0+255),b
 35558  006A62  EC5D  F03F         	call	___ftmul	;wreg free
 35559  006A66  C07A  F089         	movff	?___ftmul,?_fround
 35560  006A6A  C07B  F08A         	movff	?___ftmul+1,?_fround+1
 35561  006A6E  C07C  F08B         	movff	?___ftmul+2,?_fround+2
 35562  006A72  0012               	return	
 35563  006A74  D07A               	goto	l9326
 35564  006A76                     l9318:
 35565                           
 35566                           ;doprnt.c: 415: else if(prec > 10)
 35567  006A76  0E0A               	movlw	10
 35568  006A78  0100               	movlb	0	; () banked
 35569  006A7A  6592               	cpfsgt	fround@prec& (0+255),b
 35570  006A7C  D076               	goto	l9326
 35571                           
 35572                           ; BSR set to: 0
 35573                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 35574  006A7E  0E00               	movlw	0
 35575  006A80  0100               	movlb	0	; () banked
 35576  006A82  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35577  006A84  0E03               	movlw	3
 35578  006A86  6F70               	movwf	___wmul@multiplicand& (0+255),b
 35579  006A88  0E00               	movlw	0
 35580  006A8A  0100               	movlb	0	; () banked
 35581  006A8C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 35582  006A8E  0E0A               	movlw	10
 35583  006A90  6F62               	movwf	___awmod@divisor& (0+255),b
 35584  006A92  C092  F060         	movff	fround@prec,___awmod@dividend
 35585  006A96  0100               	movlb	0	; () banked
 35586  006A98  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 35587  006A9A  ECC4  F04B         	call	___awmod	;wreg free
 35588  006A9E  C060  F06E         	movff	?___awmod,___wmul@multiplier
 35589  006AA2  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 35590  006AA6  ECBF  F052         	call	___wmul	;wreg free
 35591  006AAA  0EEB               	movlw	low __npowers_
 35592  006AAC  0100               	movlb	0	; () banked
 35593  006AAE  256E               	addwf	?___wmul& (0+255),w,b
 35594  006AB0  6EF6               	movwf	tblptrl,c
 35595  006AB2  0EED               	movlw	high __npowers_
 35596  006AB4  0100               	movlb	0	; () banked
 35597  006AB6  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 35598  006AB8  6EF7               	movwf	tblptrh,c
 35599  006ABA                     	if	1	;There are 3 active tblptr bytes
 35600  006ABA  6AF8               	clrf	tblptru,c
 35601  006ABC  0E00               	movlw	low (__mediumconst shr (0+16))
 35602  006ABE  22F8               	addwfc	tblptru,f,c
 35603  006AC0                     	endif
 35604  006AC0  0009               	tblrd		*+
 35605  006AC2  CFF5 F07D          	movff	tablat,___ftmul@f2
 35606  006AC6  0009               	tblrd		*+
 35607  006AC8  CFF5 F07E          	movff	tablat,___ftmul@f2+1
 35608  006ACC  000A               	tblrd		*-
 35609  006ACE  CFF5 F07F          	movff	tablat,___ftmul@f2+2
 35610  006AD2  0E00               	movlw	0
 35611  006AD4  0100               	movlb	0	; () banked
 35612  006AD6  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 35613  006AD8  0E0A               	movlw	10
 35614  006ADA  6F68               	movwf	___awdiv@divisor& (0+255),b
 35615  006ADC  C092  F066         	movff	fround@prec,___awdiv@dividend
 35616  006AE0  0100               	movlb	0	; () banked
 35617  006AE2  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 35618  006AE4  EC10  F049         	call	___awdiv	;wreg free
 35619  006AE8  0E09               	movlw	9
 35620  006AEA  0100               	movlb	0	; () banked
 35621  006AEC  2566               	addwf	?___awdiv& (0+255),w,b
 35622  006AEE  0100               	movlb	0	; () banked
 35623  006AF0  6F6E               	movwf	___wmul@multiplier& (0+255),b
 35624  006AF2  0E00               	movlw	0
 35625  006AF4  0100               	movlb	0	; () banked
 35626  006AF6  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 35627  006AF8  0100               	movlb	0	; () banked
 35628  006AFA  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 35629  006AFC  0E00               	movlw	0
 35630  006AFE  0100               	movlb	0	; () banked
 35631  006B00  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35632  006B02  0E03               	movlw	3
 35633  006B04  6F70               	movwf	___wmul@multiplicand& (0+255),b
 35634  006B06  ECBF  F052         	call	___wmul	;wreg free
 35635  006B0A  0EEB               	movlw	low __npowers_
 35636  006B0C  0100               	movlb	0	; () banked
 35637  006B0E  256E               	addwf	?___wmul& (0+255),w,b
 35638  006B10  6EF6               	movwf	tblptrl,c
 35639  006B12  0EED               	movlw	high __npowers_
 35640  006B14  0100               	movlb	0	; () banked
 35641  006B16  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 35642  006B18  6EF7               	movwf	tblptrh,c
 35643  006B1A                     	if	1	;There are 3 active tblptr bytes
 35644  006B1A  6AF8               	clrf	tblptru,c
 35645  006B1C  0E00               	movlw	low (__mediumconst shr (0+16))
 35646  006B1E  22F8               	addwfc	tblptru,f,c
 35647  006B20                     	endif
 35648  006B20  0009               	tblrd		*+
 35649  006B22  CFF5 F07A          	movff	tablat,___ftmul@f1
 35650  006B26  0009               	tblrd		*+
 35651  006B28  CFF5 F07B          	movff	tablat,___ftmul@f1+1
 35652  006B2C  000A               	tblrd		*-
 35653  006B2E  CFF5 F07C          	movff	tablat,___ftmul@f1+2
 35654  006B32  EC5D  F03F         	call	___ftmul	;wreg free
 35655  006B36  C07A  F08F         	movff	?___ftmul,_fround$4078
 35656  006B3A  C07B  F090         	movff	?___ftmul+1,_fround$4078+1
 35657  006B3E  C07C  F091         	movff	?___ftmul+2,_fround$4078+2
 35658                           
 35659                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 35660  006B42  C08F  F07A         	movff	_fround$4078,___ftmul@f1
 35661  006B46  C090  F07B         	movff	_fround$4078+1,___ftmul@f1+1
 35662  006B4A  C091  F07C         	movff	_fround$4078+2,___ftmul@f1+2
 35663  006B4E  0E00               	movlw	0
 35664  006B50  0100               	movlb	0	; () banked
 35665  006B52  6F7D               	movwf	___ftmul@f2& (0+255),b
 35666  006B54  0E00               	movlw	0
 35667  006B56  0100               	movlb	0	; () banked
 35668  006B58  6F7E               	movwf	(___ftmul@f2+1)& (0+255),b
 35669  006B5A  0E3F               	movlw	63
 35670  006B5C  0100               	movlb	0	; () banked
 35671  006B5E  6F7F               	movwf	(___ftmul@f2+2)& (0+255),b
 35672  006B60  EC5D  F03F         	call	___ftmul	;wreg free
 35673  006B64  D780               	goto	L24
 35674  006B66  0012               	return	
 35675  006B68  D000               	goto	l9326
 35676  006B6A                     l9326:
 35677                           
 35678                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 35679  006B6A  0100               	movlb	0	; () banked
 35680  006B6C  5192               	movf	fround@prec& (0+255),w,b
 35681  006B6E  0D03               	mullw	3
 35682  006B70  0EEB               	movlw	low __npowers_
 35683  006B72  24F3               	addwf	prodl,w,c
 35684  006B74  6EF6               	movwf	tblptrl,c
 35685  006B76  0EED               	movlw	high __npowers_
 35686  006B78  20F4               	addwfc	prodh,w,c
 35687  006B7A  6EF7               	movwf	tblptrh,c
 35688  006B7C                     	if	1	;There are 3 active tblptr bytes
 35689  006B7C  6AF8               	clrf	tblptru,c
 35690  006B7E  0E00               	movlw	low (__mediumconst shr (0+16))
 35691  006B80  22F8               	addwfc	tblptru,f,c
 35692  006B82                     	endif
 35693  006B82  0009               	tblrd		*+
 35694  006B84  CFF5 F07A          	movff	tablat,___ftmul@f1
 35695  006B88  0009               	tblrd		*+
 35696  006B8A  CFF5 F07B          	movff	tablat,___ftmul@f1+1
 35697  006B8E  000A               	tblrd		*-
 35698  006B90  CFF5 F07C          	movff	tablat,___ftmul@f1+2
 35699  006B94  0E00               	movlw	0
 35700  006B96  0100               	movlb	0	; () banked
 35701  006B98  6F7D               	movwf	___ftmul@f2& (0+255),b
 35702  006B9A  0E00               	movlw	0
 35703  006B9C  0100               	movlb	0	; () banked
 35704  006B9E  6F7E               	movwf	(___ftmul@f2+1)& (0+255),b
 35705  006BA0  0E3F               	movlw	63
 35706  006BA2  0100               	movlb	0	; () banked
 35707  006BA4  6F7F               	movwf	(___ftmul@f2+2)& (0+255),b
 35708  006BA6  EC5D  F03F         	call	___ftmul	;wreg free
 35709  006BAA  C07A  F089         	movff	?___ftmul,?_fround
 35710  006BAE  C07B  F08A         	movff	?___ftmul+1,?_fround+1
 35711  006BB2  C07C  F08B         	movff	?___ftmul+2,?_fround+2
 35712  006BB6  0012               	return	
 35713  006BB8  0012               	return		;funcret
 35714  006BBA                     __end_of_fround:
 35715                           	opt stack 0
 35716                           tblptru	equ	0xFF8
 35717                           tblptrh	equ	0xFF7
 35718                           tblptrl	equ	0xFF6
 35719                           tablat	equ	0xFF5
 35720                           prodh	equ	0xFF4
 35721                           prodl	equ	0xFF3
 35722                           intcon	equ	0xFF2
 35723                           intcon2	equ	0xFF1
 35724                           indf0	equ	0xFEF
 35725                           postinc0	equ	0xFEE
 35726                           plusw0	equ	0xFEB
 35727                           fsr0h	equ	0xFEA
 35728                           fsr0l	equ	0xFE9
 35729                           wreg	equ	0xFE8
 35730                           indf1	equ	0xFE7
 35731                           postdec1	equ	0xFE5
 35732                           fsr1h	equ	0xFE2
 35733                           fsr1l	equ	0xFE1
 35734                           indf2	equ	0xFDF
 35735                           postinc2	equ	0xFDE
 35736                           postdec2	equ	0xFDD
 35737                           plusw2	equ	0xFDB
 35738                           fsr2h	equ	0xFDA
 35739                           fsr2l	equ	0xFD9
 35740                           status	equ	0xFD8
 35741                           
 35742 ;; *************** function ___wmul *****************
 35743 ;; Defined at:
 35744 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 35745 ;; Parameters:    Size  Location     Type
 35746 ;;  multiplier      2   14[BANK0 ] unsigned int 
 35747 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 35748 ;; Auto vars:     Size  Location     Type
 35749 ;;  product         2   18[BANK0 ] unsigned int 
 35750 ;; Return value:  Size  Location     Type
 35751 ;;                  2   14[BANK0 ] unsigned int 
 35752 ;; Registers used:
 35753 ;;		wreg, status,2, status,0, prodl, prodh
 35754 ;; Tracked objects:
 35755 ;;		On entry : 0/0
 35756 ;;		On exit  : 0/0
 35757 ;;		Unchanged: 0/0
 35758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35759 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35760 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35762 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35763 ;;Total ram usage:        6 bytes
 35764 ;; Hardware stack levels used:    1
 35765 ;; Hardware stack levels required when called:    5
 35766 ;; This function calls:
 35767 ;;		Nothing
 35768 ;; This function is called by:
 35769 ;;		_fround
 35770 ;;		_scale
 35771 ;;		_sprintf
 35772 ;; This function uses a non-reentrant model
 35773 ;;
 35774                           
 35775                           	psect	text79
 35776  00A57E                     __ptext79:
 35777                           	opt stack 0
 35778  00A57E                     ___wmul:
 35779                           	opt stack 23
 35780                           
 35781                           ;incstack = 0
 35782  00A57E  0100               	movlb	0	; () banked
 35783  00A580  516E               	movf	___wmul@multiplier& (0+255),w,b
 35784  00A582  0100               	movlb	0	; () banked
 35785  00A584  0370               	mulwf	___wmul@multiplicand& (0+255),b
 35786  00A586  CFF3 F072          	movff	prodl,___wmul@product
 35787  00A58A  CFF4 F073          	movff	prodh,___wmul@product+1
 35788  00A58E  0100               	movlb	0	; () banked
 35789  00A590  516E               	movf	___wmul@multiplier& (0+255),w,b
 35790  00A592  0100               	movlb	0	; () banked
 35791  00A594  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 35792  00A596  50F3               	movf	prodl,w,c
 35793  00A598  0100               	movlb	0	; () banked
 35794  00A59A  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 35795  00A59C  0100               	movlb	0	; () banked
 35796  00A59E  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 35797  00A5A0  0100               	movlb	0	; () banked
 35798  00A5A2  0370               	mulwf	___wmul@multiplicand& (0+255),b
 35799  00A5A4  50F3               	movf	prodl,w,c
 35800  00A5A6  0100               	movlb	0	; () banked
 35801  00A5A8  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 35802                           
 35803                           ; BSR set to: 0
 35804  00A5AA  C072  F06E         	movff	___wmul@product,?___wmul
 35805  00A5AE  C073  F06F         	movff	___wmul@product+1,?___wmul+1
 35806  00A5B2  0012               	return	
 35807                           
 35808                           ; BSR set to: 0
 35809                           
 35810                           ; BSR set to: 0
 35811  00A5B4  0012               	return		;funcret
 35812  00A5B6                     __end_of___wmul:
 35813                           	opt stack 0
 35814                           tblptru	equ	0xFF8
 35815                           tblptrh	equ	0xFF7
 35816                           tblptrl	equ	0xFF6
 35817                           tablat	equ	0xFF5
 35818                           prodh	equ	0xFF4
 35819                           prodl	equ	0xFF3
 35820                           intcon	equ	0xFF2
 35821                           intcon2	equ	0xFF1
 35822                           indf0	equ	0xFEF
 35823                           postinc0	equ	0xFEE
 35824                           plusw0	equ	0xFEB
 35825                           fsr0h	equ	0xFEA
 35826                           fsr0l	equ	0xFE9
 35827                           wreg	equ	0xFE8
 35828                           indf1	equ	0xFE7
 35829                           postdec1	equ	0xFE5
 35830                           fsr1h	equ	0xFE2
 35831                           fsr1l	equ	0xFE1
 35832                           indf2	equ	0xFDF
 35833                           postinc2	equ	0xFDE
 35834                           postdec2	equ	0xFDD
 35835                           plusw2	equ	0xFDB
 35836                           fsr2h	equ	0xFDA
 35837                           fsr2l	equ	0xFD9
 35838                           status	equ	0xFD8
 35839                           
 35840 ;; *************** function ___ftmul *****************
 35841 ;; Defined at:
 35842 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 35843 ;; Parameters:    Size  Location     Type
 35844 ;;  f1              3   26[BANK0 ] float 
 35845 ;;  f2              3   29[BANK0 ] float 
 35846 ;; Auto vars:     Size  Location     Type
 35847 ;;  f3_as_produc    3   36[BANK0 ] unsigned um
 35848 ;;  sign            1   40[BANK0 ] unsigned char 
 35849 ;;  cntr            1   39[BANK0 ] unsigned char 
 35850 ;;  exp             1   35[BANK0 ] unsigned char 
 35851 ;; Return value:  Size  Location     Type
 35852 ;;                  3   26[BANK0 ] float 
 35853 ;; Registers used:
 35854 ;;		wreg, status,2, status,0, cstack
 35855 ;; Tracked objects:
 35856 ;;		On entry : 0/0
 35857 ;;		On exit  : 0/0
 35858 ;;		Unchanged: 0/0
 35859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35860 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35861 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35862 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35863 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35864 ;;Total ram usage:       15 bytes
 35865 ;; Hardware stack levels used:    1
 35866 ;; Hardware stack levels required when called:    6
 35867 ;; This function calls:
 35868 ;;		___ftpack
 35869 ;; This function is called by:
 35870 ;;		_ReadVoltage
 35871 ;;		_fround
 35872 ;;		_scale
 35873 ;;		_sprintf
 35874 ;; This function uses a non-reentrant model
 35875 ;;
 35876                           
 35877                           	psect	text80
 35878  007EBA                     __ptext80:
 35879                           	opt stack 0
 35880  007EBA                     ___ftmul:
 35881                           	opt stack 22
 35882                           
 35883                           ; BSR set to: 0
 35884                           ;incstack = 0
 35885  007EBA  C07C  F080         	movff	___ftmul@f1+2,??___ftmul
 35886  007EBE  0100               	movlb	0	; () banked
 35887  007EC0  6B81               	clrf	(??___ftmul+1)& (0+255),b
 35888  007EC2  6B82               	clrf	(??___ftmul+2)& (0+255),b
 35889  007EC4  0100               	movlb	0	; () banked
 35890  007EC6  357B               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 35891  007EC8  0100               	movlb	0	; () banked
 35892  007ECA  3780               	rlcf	??___ftmul& (0+255),f,b
 35893  007ECC  E301               	bnc	u8901
 35894  007ECE  8181               	bsf	(??___ftmul+1)& (0+255),0,b
 35895  007ED0                     u8901:
 35896  007ED0  0100               	movlb	0	; () banked
 35897  007ED2  5180               	movf	??___ftmul& (0+255),w,b
 35898  007ED4  0100               	movlb	0	; () banked
 35899  007ED6  6F83               	movwf	___ftmul@exp& (0+255),b
 35900  007ED8  0100               	movlb	0	; () banked
 35901  007EDA  5183               	movf	___ftmul@exp& (0+255),w,b
 35902  007EDC  A4D8               	btfss	status,2,c
 35903  007EDE  D00A               	goto	l9110
 35904                           
 35905                           ; BSR set to: 0
 35906  007EE0  0E00               	movlw	0
 35907  007EE2  0100               	movlb	0	; () banked
 35908  007EE4  6F7A               	movwf	?___ftmul& (0+255),b
 35909  007EE6  0E00               	movlw	0
 35910  007EE8  0100               	movlb	0	; () banked
 35911  007EEA  6F7B               	movwf	(?___ftmul+1)& (0+255),b
 35912  007EEC  0E00               	movlw	0
 35913  007EEE  0100               	movlb	0	; () banked
 35914  007EF0  6F7C               	movwf	(?___ftmul+2)& (0+255),b
 35915                           
 35916                           ; BSR set to: 0
 35917  007EF2  0012               	return	
 35918  007EF4                     l9110:
 35919                           
 35920                           ; BSR set to: 0
 35921  007EF4  C07F  F080         	movff	___ftmul@f2+2,??___ftmul
 35922  007EF8  0100               	movlb	0	; () banked
 35923  007EFA  6B81               	clrf	(??___ftmul+1)& (0+255),b
 35924  007EFC  6B82               	clrf	(??___ftmul+2)& (0+255),b
 35925  007EFE  0100               	movlb	0	; () banked
 35926  007F00  357E               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 35927  007F02  0100               	movlb	0	; () banked
 35928  007F04  3780               	rlcf	??___ftmul& (0+255),f,b
 35929  007F06  E301               	bnc	u8921
 35930  007F08  8181               	bsf	(??___ftmul+1)& (0+255),0,b
 35931  007F0A                     u8921:
 35932  007F0A  0100               	movlb	0	; () banked
 35933  007F0C  5180               	movf	??___ftmul& (0+255),w,b
 35934  007F0E  0100               	movlb	0	; () banked
 35935  007F10  6F88               	movwf	___ftmul@sign& (0+255),b
 35936  007F12  0100               	movlb	0	; () banked
 35937  007F14  5188               	movf	___ftmul@sign& (0+255),w,b
 35938  007F16  A4D8               	btfss	status,2,c
 35939  007F18  D00A               	goto	l9116
 35940                           
 35941                           ; BSR set to: 0
 35942  007F1A  0E00               	movlw	0
 35943  007F1C  0100               	movlb	0	; () banked
 35944  007F1E  6F7A               	movwf	?___ftmul& (0+255),b
 35945  007F20  0E00               	movlw	0
 35946  007F22  0100               	movlb	0	; () banked
 35947  007F24  6F7B               	movwf	(?___ftmul+1)& (0+255),b
 35948  007F26  0E00               	movlw	0
 35949  007F28  0100               	movlb	0	; () banked
 35950  007F2A  6F7C               	movwf	(?___ftmul+2)& (0+255),b
 35951                           
 35952                           ; BSR set to: 0
 35953  007F2C  0012               	return	
 35954  007F2E                     l9116:
 35955                           
 35956                           ; BSR set to: 0
 35957  007F2E  0100               	movlb	0	; () banked
 35958  007F30  5188               	movf	___ftmul@sign& (0+255),w,b
 35959  007F32  0F7B               	addlw	123
 35960  007F34  0100               	movlb	0	; () banked
 35961  007F36  2783               	addwf	___ftmul@exp& (0+255),f,b
 35962                           
 35963                           ; BSR set to: 0
 35964  007F38  C07C  F088         	movff	___ftmul@f1+2,___ftmul@sign
 35965  007F3C  0100               	movlb	0	; () banked
 35966  007F3E  517F               	movf	(___ftmul@f2+2)& (0+255),w,b
 35967  007F40  0100               	movlb	0	; () banked
 35968  007F42  1B88               	xorwf	___ftmul@sign& (0+255),f,b
 35969  007F44  0E80               	movlw	128
 35970  007F46  0100               	movlb	0	; () banked
 35971  007F48  1788               	andwf	___ftmul@sign& (0+255),f,b
 35972                           
 35973                           ; BSR set to: 0
 35974  007F4A  0100               	movlb	0	; () banked
 35975  007F4C  8F7B               	bsf	(___ftmul@f1+1)& (0+255),7,b
 35976                           
 35977                           ; BSR set to: 0
 35978  007F4E  0100               	movlb	0	; () banked
 35979  007F50  8F7E               	bsf	(___ftmul@f2+1)& (0+255),7,b
 35980                           
 35981                           ; BSR set to: 0
 35982  007F52  0EFF               	movlw	255
 35983  007F54  0100               	movlb	0	; () banked
 35984  007F56  177D               	andwf	___ftmul@f2& (0+255),f,b
 35985  007F58  0EFF               	movlw	255
 35986  007F5A  0100               	movlb	0	; () banked
 35987  007F5C  177E               	andwf	(___ftmul@f2+1)& (0+255),f,b
 35988  007F5E  0E00               	movlw	0
 35989  007F60  0100               	movlb	0	; () banked
 35990  007F62  177F               	andwf	(___ftmul@f2+2)& (0+255),f,b
 35991                           
 35992                           ; BSR set to: 0
 35993  007F64  0E00               	movlw	0
 35994  007F66  0100               	movlb	0	; () banked
 35995  007F68  6F84               	movwf	___ftmul@f3_as_product& (0+255),b
 35996  007F6A  0E00               	movlw	0
 35997  007F6C  0100               	movlb	0	; () banked
 35998  007F6E  6F85               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 35999  007F70  0E00               	movlw	0
 36000  007F72  0100               	movlb	0	; () banked
 36001  007F74  6F86               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 36002                           
 36003                           ; BSR set to: 0
 36004  007F76  0E07               	movlw	7
 36005  007F78  0100               	movlb	0	; () banked
 36006  007F7A  6F87               	movwf	___ftmul@cntr& (0+255),b
 36007  007F7C  D000               	goto	l9130
 36008  007F7E                     l9130:
 36009                           
 36010                           ; BSR set to: 0
 36011  007F7E  0100               	movlb	0	; () banked
 36012  007F80  A17A               	btfss	___ftmul@f1& (0+255),0,b
 36013  007F82  D00D               	goto	l9134
 36014                           
 36015                           ; BSR set to: 0
 36016  007F84  0100               	movlb	0	; () banked
 36017  007F86  517D               	movf	___ftmul@f2& (0+255),w,b
 36018  007F88  0100               	movlb	0	; () banked
 36019  007F8A  2784               	addwf	___ftmul@f3_as_product& (0+255),f,b
 36020  007F8C  0100               	movlb	0	; () banked
 36021  007F8E  517E               	movf	(___ftmul@f2+1)& (0+255),w,b
 36022  007F90  0100               	movlb	0	; () banked
 36023  007F92  2385               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 36024  007F94  0100               	movlb	0	; () banked
 36025  007F96  517F               	movf	(___ftmul@f2+2)& (0+255),w,b
 36026  007F98  0100               	movlb	0	; () banked
 36027  007F9A  2386               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 36028  007F9C  D000               	goto	l9134
 36029  007F9E                     l9134:
 36030                           
 36031                           ; BSR set to: 0
 36032  007F9E  0100               	movlb	0	; () banked
 36033  007FA0  90D8               	bcf	status,0,c
 36034  007FA2  337C               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 36035  007FA4  337B               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 36036  007FA6  337A               	rrcf	___ftmul@f1& (0+255),f,b
 36037  007FA8  0100               	movlb	0	; () banked
 36038  007FAA  90D8               	bcf	status,0,c
 36039  007FAC  377D               	rlcf	___ftmul@f2& (0+255),f,b
 36040  007FAE  377E               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 36041  007FB0  377F               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 36042                           
 36043                           ; BSR set to: 0
 36044  007FB2  0100               	movlb	0	; () banked
 36045  007FB4  2F87               	decfsz	___ftmul@cntr& (0+255),f,b
 36046  007FB6  D7E3               	goto	l9130
 36047  007FB8  D000               	goto	l9138
 36048  007FBA                     l9138:
 36049                           
 36050                           ; BSR set to: 0
 36051  007FBA  0E09               	movlw	9
 36052  007FBC  0100               	movlb	0	; () banked
 36053  007FBE  6F87               	movwf	___ftmul@cntr& (0+255),b
 36054  007FC0  D000               	goto	l9140
 36055  007FC2                     l9140:
 36056                           
 36057                           ; BSR set to: 0
 36058  007FC2  0100               	movlb	0	; () banked
 36059  007FC4  A17A               	btfss	___ftmul@f1& (0+255),0,b
 36060  007FC6  D00D               	goto	l9144
 36061                           
 36062                           ; BSR set to: 0
 36063  007FC8  0100               	movlb	0	; () banked
 36064  007FCA  517D               	movf	___ftmul@f2& (0+255),w,b
 36065  007FCC  0100               	movlb	0	; () banked
 36066  007FCE  2784               	addwf	___ftmul@f3_as_product& (0+255),f,b
 36067  007FD0  0100               	movlb	0	; () banked
 36068  007FD2  517E               	movf	(___ftmul@f2+1)& (0+255),w,b
 36069  007FD4  0100               	movlb	0	; () banked
 36070  007FD6  2385               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 36071  007FD8  0100               	movlb	0	; () banked
 36072  007FDA  517F               	movf	(___ftmul@f2+2)& (0+255),w,b
 36073  007FDC  0100               	movlb	0	; () banked
 36074  007FDE  2386               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 36075  007FE0  D000               	goto	l9144
 36076  007FE2                     l9144:
 36077                           
 36078                           ; BSR set to: 0
 36079  007FE2  0100               	movlb	0	; () banked
 36080  007FE4  90D8               	bcf	status,0,c
 36081  007FE6  337C               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 36082  007FE8  337B               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 36083  007FEA  337A               	rrcf	___ftmul@f1& (0+255),f,b
 36084  007FEC  0100               	movlb	0	; () banked
 36085  007FEE  90D8               	bcf	status,0,c
 36086  007FF0  3386               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 36087  007FF2  3385               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 36088  007FF4  3384               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 36089                           
 36090                           ; BSR set to: 0
 36091  007FF6  0100               	movlb	0	; () banked
 36092  007FF8  2F87               	decfsz	___ftmul@cntr& (0+255),f,b
 36093  007FFA  D7E3               	goto	l9140
 36094  007FFC  D000               	goto	l9148
 36095  007FFE                     l9148:
 36096                           
 36097                           ; BSR set to: 0
 36098  007FFE  C084  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
 36099  008002  C085  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 36100  008006  C086  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 36101  00800A  C083  F063         	movff	___ftmul@exp,___ftpack@exp
 36102  00800E  C088  F064         	movff	___ftmul@sign,___ftpack@sign
 36103  008012  ECED  F043         	call	___ftpack	;wreg free
 36104  008016  C060  F07A         	movff	?___ftpack,?___ftmul
 36105  00801A  C061  F07B         	movff	?___ftpack+1,?___ftmul+1
 36106  00801E  C062  F07C         	movff	?___ftpack+2,?___ftmul+2
 36107  008022  0012               	return	
 36108  008024  0012               	return		;funcret
 36109  008026                     __end_of___ftmul:
 36110                           	opt stack 0
 36111                           tblptru	equ	0xFF8
 36112                           tblptrh	equ	0xFF7
 36113                           tblptrl	equ	0xFF6
 36114                           tablat	equ	0xFF5
 36115                           prodh	equ	0xFF4
 36116                           prodl	equ	0xFF3
 36117                           intcon	equ	0xFF2
 36118                           intcon2	equ	0xFF1
 36119                           indf0	equ	0xFEF
 36120                           postinc0	equ	0xFEE
 36121                           plusw0	equ	0xFEB
 36122                           fsr0h	equ	0xFEA
 36123                           fsr0l	equ	0xFE9
 36124                           wreg	equ	0xFE8
 36125                           indf1	equ	0xFE7
 36126                           postdec1	equ	0xFE5
 36127                           fsr1h	equ	0xFE2
 36128                           fsr1l	equ	0xFE1
 36129                           indf2	equ	0xFDF
 36130                           postinc2	equ	0xFDE
 36131                           postdec2	equ	0xFDD
 36132                           plusw2	equ	0xFDB
 36133                           fsr2h	equ	0xFDA
 36134                           fsr2l	equ	0xFD9
 36135                           status	equ	0xFD8
 36136                           
 36137 ;; *************** function ___awmod *****************
 36138 ;; Defined at:
 36139 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 36140 ;; Parameters:    Size  Location     Type
 36141 ;;  dividend        2    0[BANK0 ] int 
 36142 ;;  divisor         2    2[BANK0 ] int 
 36143 ;; Auto vars:     Size  Location     Type
 36144 ;;  sign            1    5[BANK0 ] unsigned char 
 36145 ;;  counter         1    4[BANK0 ] unsigned char 
 36146 ;; Return value:  Size  Location     Type
 36147 ;;                  2    0[BANK0 ] int 
 36148 ;; Registers used:
 36149 ;;		wreg, status,2, status,0
 36150 ;; Tracked objects:
 36151 ;;		On entry : 0/0
 36152 ;;		On exit  : 0/0
 36153 ;;		Unchanged: 0/0
 36154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36155 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36156 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36158 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36159 ;;Total ram usage:        6 bytes
 36160 ;; Hardware stack levels used:    1
 36161 ;; Hardware stack levels required when called:    5
 36162 ;; This function calls:
 36163 ;;		Nothing
 36164 ;; This function is called by:
 36165 ;;		_fround
 36166 ;;		_scale
 36167 ;; This function uses a non-reentrant model
 36168 ;;
 36169                           
 36170                           	psect	text81
 36171  009788                     __ptext81:
 36172                           	opt stack 0
 36173  009788                     ___awmod:
 36174                           	opt stack 23
 36175                           
 36176                           ;incstack = 0
 36177  009788  0E00               	movlw	0
 36178  00978A  0100               	movlb	0	; () banked
 36179  00978C  6F65               	movwf	___awmod@sign& (0+255),b
 36180                           
 36181                           ; BSR set to: 0
 36182  00978E  0100               	movlb	0	; () banked
 36183  009790  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 36184  009792  D009               	goto	l9204
 36185                           
 36186                           ; BSR set to: 0
 36187  009794  0100               	movlb	0	; () banked
 36188  009796  6D60               	negf	___awmod@dividend& (0+255),b
 36189  009798  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 36190  00979A  B0D8               	btfsc	status,0,c
 36191  00979C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 36192                           
 36193                           ; BSR set to: 0
 36194  00979E  0E01               	movlw	1
 36195  0097A0  0100               	movlb	0	; () banked
 36196  0097A2  6F65               	movwf	___awmod@sign& (0+255),b
 36197  0097A4  D000               	goto	l9204
 36198  0097A6                     l9204:
 36199                           
 36200                           ; BSR set to: 0
 36201  0097A6  0100               	movlb	0	; () banked
 36202  0097A8  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 36203  0097AA  D006               	goto	l9208
 36204                           
 36205                           ; BSR set to: 0
 36206  0097AC  0100               	movlb	0	; () banked
 36207  0097AE  6D62               	negf	___awmod@divisor& (0+255),b
 36208  0097B0  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 36209  0097B2  B0D8               	btfsc	status,0,c
 36210  0097B4  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 36211  0097B6  D000               	goto	l9208
 36212  0097B8                     l9208:
 36213                           
 36214                           ; BSR set to: 0
 36215  0097B8  0100               	movlb	0	; () banked
 36216  0097BA  5162               	movf	___awmod@divisor& (0+255),w,b
 36217  0097BC  0100               	movlb	0	; () banked
 36218  0097BE  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 36219  0097C0  B4D8               	btfsc	status,2,c
 36220  0097C2  D02B               	goto	l9224
 36221                           
 36222                           ; BSR set to: 0
 36223  0097C4  0E01               	movlw	1
 36224  0097C6  0100               	movlb	0	; () banked
 36225  0097C8  6F64               	movwf	___awmod@counter& (0+255),b
 36226  0097CA  D007               	goto	l9214
 36227  0097CC                     l9212:
 36228                           
 36229                           ; BSR set to: 0
 36230  0097CC  0100               	movlb	0	; () banked
 36231  0097CE  90D8               	bcf	status,0,c
 36232  0097D0  3762               	rlcf	___awmod@divisor& (0+255),f,b
 36233  0097D2  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 36234  0097D4  0100               	movlb	0	; () banked
 36235  0097D6  2B64               	incf	___awmod@counter& (0+255),f,b
 36236  0097D8  D000               	goto	l9214
 36237  0097DA                     l9214:
 36238                           
 36239                           ; BSR set to: 0
 36240  0097DA  0100               	movlb	0	; () banked
 36241  0097DC  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 36242  0097DE  D002               	goto	l9216
 36243  0097E0  D7F5               	goto	l9212
 36244                           
 36245                           ; BSR set to: 0
 36246  0097E2  D000               	goto	l9216
 36247  0097E4                     l9216:
 36248                           
 36249                           ; BSR set to: 0
 36250  0097E4  0100               	movlb	0	; () banked
 36251  0097E6  5162               	movf	___awmod@divisor& (0+255),w,b
 36252  0097E8  0100               	movlb	0	; () banked
 36253  0097EA  5D60               	subwf	___awmod@dividend& (0+255),w,b
 36254  0097EC  0100               	movlb	0	; () banked
 36255  0097EE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 36256  0097F0  0100               	movlb	0	; () banked
 36257  0097F2  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 36258  0097F4  A0D8               	btfss	status,0,c
 36259  0097F6  D009               	goto	l9220
 36260                           
 36261                           ; BSR set to: 0
 36262  0097F8  0100               	movlb	0	; () banked
 36263  0097FA  5162               	movf	___awmod@divisor& (0+255),w,b
 36264  0097FC  0100               	movlb	0	; () banked
 36265  0097FE  5F60               	subwf	___awmod@dividend& (0+255),f,b
 36266  009800  0100               	movlb	0	; () banked
 36267  009802  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 36268  009804  0100               	movlb	0	; () banked
 36269  009806  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 36270  009808  D000               	goto	l9220
 36271  00980A                     l9220:
 36272                           
 36273                           ; BSR set to: 0
 36274  00980A  0100               	movlb	0	; () banked
 36275  00980C  90D8               	bcf	status,0,c
 36276  00980E  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 36277  009810  3362               	rrcf	___awmod@divisor& (0+255),f,b
 36278                           
 36279                           ; BSR set to: 0
 36280  009812  0100               	movlb	0	; () banked
 36281  009814  2F64               	decfsz	___awmod@counter& (0+255),f,b
 36282  009816  D7E6               	goto	l9216
 36283                           
 36284                           ; BSR set to: 0
 36285  009818  D000               	goto	l9224
 36286  00981A                     l9224:
 36287                           
 36288                           ; BSR set to: 0
 36289  00981A  0100               	movlb	0	; () banked
 36290  00981C  5165               	movf	___awmod@sign& (0+255),w,b
 36291  00981E  0100               	movlb	0	; () banked
 36292  009820  B4D8               	btfsc	status,2,c
 36293  009822  D006               	goto	l9228
 36294                           
 36295                           ; BSR set to: 0
 36296  009824  0100               	movlb	0	; () banked
 36297  009826  6D60               	negf	___awmod@dividend& (0+255),b
 36298  009828  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 36299  00982A  B0D8               	btfsc	status,0,c
 36300  00982C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 36301  00982E  D000               	goto	l9228
 36302  009830                     l9228:
 36303                           
 36304                           ; BSR set to: 0
 36305  009830  C060  F060         	movff	___awmod@dividend,?___awmod
 36306  009834  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 36307  009838  0012               	return	
 36308                           
 36309                           ; BSR set to: 0
 36310                           
 36311                           ; BSR set to: 0
 36312  00983A  0012               	return		;funcret
 36313  00983C                     __end_of___awmod:
 36314                           	opt stack 0
 36315                           tblptru	equ	0xFF8
 36316                           tblptrh	equ	0xFF7
 36317                           tblptrl	equ	0xFF6
 36318                           tablat	equ	0xFF5
 36319                           prodh	equ	0xFF4
 36320                           prodl	equ	0xFF3
 36321                           intcon	equ	0xFF2
 36322                           intcon2	equ	0xFF1
 36323                           indf0	equ	0xFEF
 36324                           postinc0	equ	0xFEE
 36325                           plusw0	equ	0xFEB
 36326                           fsr0h	equ	0xFEA
 36327                           fsr0l	equ	0xFE9
 36328                           wreg	equ	0xFE8
 36329                           indf1	equ	0xFE7
 36330                           postdec1	equ	0xFE5
 36331                           fsr1h	equ	0xFE2
 36332                           fsr1l	equ	0xFE1
 36333                           indf2	equ	0xFDF
 36334                           postinc2	equ	0xFDE
 36335                           postdec2	equ	0xFDD
 36336                           plusw2	equ	0xFDB
 36337                           fsr2h	equ	0xFDA
 36338                           fsr2l	equ	0xFD9
 36339                           status	equ	0xFD8
 36340                           
 36341 ;; *************** function ___awdiv *****************
 36342 ;; Defined at:
 36343 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 36344 ;; Parameters:    Size  Location     Type
 36345 ;;  dividend        2    6[BANK0 ] int 
 36346 ;;  divisor         2    8[BANK0 ] int 
 36347 ;; Auto vars:     Size  Location     Type
 36348 ;;  quotient        2   12[BANK0 ] int 
 36349 ;;  sign            1   11[BANK0 ] unsigned char 
 36350 ;;  counter         1   10[BANK0 ] unsigned char 
 36351 ;; Return value:  Size  Location     Type
 36352 ;;                  2    6[BANK0 ] int 
 36353 ;; Registers used:
 36354 ;;		wreg, status,2, status,0
 36355 ;; Tracked objects:
 36356 ;;		On entry : 0/0
 36357 ;;		On exit  : 0/0
 36358 ;;		Unchanged: 0/0
 36359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36360 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36361 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36363 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36364 ;;Total ram usage:        8 bytes
 36365 ;; Hardware stack levels used:    1
 36366 ;; Hardware stack levels required when called:    5
 36367 ;; This function calls:
 36368 ;;		Nothing
 36369 ;; This function is called by:
 36370 ;;		_fround
 36371 ;;		_scale
 36372 ;;		_sprintf
 36373 ;; This function uses a non-reentrant model
 36374 ;;
 36375                           
 36376                           	psect	text82
 36377  009220                     __ptext82:
 36378                           	opt stack 0
 36379  009220                     ___awdiv:
 36380                           	opt stack 23
 36381                           
 36382                           ; BSR set to: 0
 36383                           ;incstack = 0
 36384  009220  0E00               	movlw	0
 36385  009222  0100               	movlb	0	; () banked
 36386  009224  6F6B               	movwf	___awdiv@sign& (0+255),b
 36387                           
 36388                           ; BSR set to: 0
 36389  009226  0100               	movlb	0	; () banked
 36390  009228  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 36391  00922A  D009               	goto	l9160
 36392                           
 36393                           ; BSR set to: 0
 36394  00922C  0100               	movlb	0	; () banked
 36395  00922E  6D68               	negf	___awdiv@divisor& (0+255),b
 36396  009230  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 36397  009232  B0D8               	btfsc	status,0,c
 36398  009234  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 36399                           
 36400                           ; BSR set to: 0
 36401  009236  0E01               	movlw	1
 36402  009238  0100               	movlb	0	; () banked
 36403  00923A  6F6B               	movwf	___awdiv@sign& (0+255),b
 36404  00923C  D000               	goto	l9160
 36405  00923E                     l9160:
 36406                           
 36407                           ; BSR set to: 0
 36408  00923E  0100               	movlb	0	; () banked
 36409  009240  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 36410  009242  D009               	goto	l9166
 36411                           
 36412                           ; BSR set to: 0
 36413  009244  0100               	movlb	0	; () banked
 36414  009246  6D66               	negf	___awdiv@dividend& (0+255),b
 36415  009248  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 36416  00924A  B0D8               	btfsc	status,0,c
 36417  00924C  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 36418                           
 36419                           ; BSR set to: 0
 36420  00924E  0E01               	movlw	1
 36421  009250  0100               	movlb	0	; () banked
 36422  009252  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 36423  009254  D000               	goto	l9166
 36424  009256                     l9166:
 36425                           
 36426                           ; BSR set to: 0
 36427  009256  0E00               	movlw	0
 36428  009258  0100               	movlb	0	; () banked
 36429  00925A  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 36430  00925C  0E00               	movlw	0
 36431  00925E  6F6C               	movwf	___awdiv@quotient& (0+255),b
 36432                           
 36433                           ; BSR set to: 0
 36434  009260  0100               	movlb	0	; () banked
 36435  009262  5168               	movf	___awdiv@divisor& (0+255),w,b
 36436  009264  0100               	movlb	0	; () banked
 36437  009266  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 36438  009268  B4D8               	btfsc	status,2,c
 36439  00926A  D031               	goto	l9188
 36440                           
 36441                           ; BSR set to: 0
 36442  00926C  0E01               	movlw	1
 36443  00926E  0100               	movlb	0	; () banked
 36444  009270  6F6A               	movwf	___awdiv@counter& (0+255),b
 36445  009272  D007               	goto	l9174
 36446  009274                     l9172:
 36447                           
 36448                           ; BSR set to: 0
 36449  009274  0100               	movlb	0	; () banked
 36450  009276  90D8               	bcf	status,0,c
 36451  009278  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 36452  00927A  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 36453  00927C  0100               	movlb	0	; () banked
 36454  00927E  2B6A               	incf	___awdiv@counter& (0+255),f,b
 36455  009280  D000               	goto	l9174
 36456  009282                     l9174:
 36457                           
 36458                           ; BSR set to: 0
 36459  009282  0100               	movlb	0	; () banked
 36460  009284  BF69               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 36461  009286  D002               	goto	l9176
 36462  009288  D7F5               	goto	l9172
 36463                           
 36464                           ; BSR set to: 0
 36465  00928A  D000               	goto	l9176
 36466  00928C                     l9176:
 36467                           
 36468                           ; BSR set to: 0
 36469  00928C  0100               	movlb	0	; () banked
 36470  00928E  90D8               	bcf	status,0,c
 36471  009290  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 36472  009292  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 36473                           
 36474                           ; BSR set to: 0
 36475  009294  0100               	movlb	0	; () banked
 36476  009296  5168               	movf	___awdiv@divisor& (0+255),w,b
 36477  009298  0100               	movlb	0	; () banked
 36478  00929A  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 36479  00929C  0100               	movlb	0	; () banked
 36480  00929E  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 36481  0092A0  0100               	movlb	0	; () banked
 36482  0092A2  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 36483  0092A4  A0D8               	btfss	status,0,c
 36484  0092A6  D00B               	goto	l9184
 36485                           
 36486                           ; BSR set to: 0
 36487  0092A8  0100               	movlb	0	; () banked
 36488  0092AA  5168               	movf	___awdiv@divisor& (0+255),w,b
 36489  0092AC  0100               	movlb	0	; () banked
 36490  0092AE  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 36491  0092B0  0100               	movlb	0	; () banked
 36492  0092B2  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 36493  0092B4  0100               	movlb	0	; () banked
 36494  0092B6  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 36495                           
 36496                           ; BSR set to: 0
 36497  0092B8  0100               	movlb	0	; () banked
 36498  0092BA  816C               	bsf	___awdiv@quotient& (0+255),0,b
 36499  0092BC  D000               	goto	l9184
 36500  0092BE                     l9184:
 36501                           
 36502                           ; BSR set to: 0
 36503  0092BE  0100               	movlb	0	; () banked
 36504  0092C0  90D8               	bcf	status,0,c
 36505  0092C2  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 36506  0092C4  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 36507                           
 36508                           ; BSR set to: 0
 36509  0092C6  0100               	movlb	0	; () banked
 36510  0092C8  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 36511  0092CA  D7E0               	goto	l9176
 36512                           
 36513                           ; BSR set to: 0
 36514  0092CC  D000               	goto	l9188
 36515  0092CE                     l9188:
 36516                           
 36517                           ; BSR set to: 0
 36518  0092CE  0100               	movlb	0	; () banked
 36519  0092D0  516B               	movf	___awdiv@sign& (0+255),w,b
 36520  0092D2  0100               	movlb	0	; () banked
 36521  0092D4  B4D8               	btfsc	status,2,c
 36522  0092D6  D006               	goto	l9192
 36523                           
 36524                           ; BSR set to: 0
 36525  0092D8  0100               	movlb	0	; () banked
 36526  0092DA  6D6C               	negf	___awdiv@quotient& (0+255),b
 36527  0092DC  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 36528  0092DE  B0D8               	btfsc	status,0,c
 36529  0092E0  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 36530  0092E2  D000               	goto	l9192
 36531  0092E4                     l9192:
 36532                           
 36533                           ; BSR set to: 0
 36534  0092E4  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 36535  0092E8  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 36536  0092EC  0012               	return	
 36537                           
 36538                           ; BSR set to: 0
 36539                           
 36540                           ; BSR set to: 0
 36541  0092EE  0012               	return		;funcret
 36542  0092F0                     __end_of___awdiv:
 36543                           	opt stack 0
 36544                           tblptru	equ	0xFF8
 36545                           tblptrh	equ	0xFF7
 36546                           tblptrl	equ	0xFF6
 36547                           tablat	equ	0xFF5
 36548                           prodh	equ	0xFF4
 36549                           prodl	equ	0xFF3
 36550                           intcon	equ	0xFF2
 36551                           intcon2	equ	0xFF1
 36552                           indf0	equ	0xFEF
 36553                           postinc0	equ	0xFEE
 36554                           plusw0	equ	0xFEB
 36555                           fsr0h	equ	0xFEA
 36556                           fsr0l	equ	0xFE9
 36557                           wreg	equ	0xFE8
 36558                           indf1	equ	0xFE7
 36559                           postdec1	equ	0xFE5
 36560                           fsr1h	equ	0xFE2
 36561                           fsr1l	equ	0xFE1
 36562                           indf2	equ	0xFDF
 36563                           postinc2	equ	0xFDE
 36564                           postdec2	equ	0xFDD
 36565                           plusw2	equ	0xFDB
 36566                           fsr2h	equ	0xFDA
 36567                           fsr2l	equ	0xFD9
 36568                           status	equ	0xFD8
 36569                           
 36570 ;; *************** function __tdiv_to_l_ *****************
 36571 ;; Defined at:
 36572 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
 36573 ;; Parameters:    Size  Location     Type
 36574 ;;  f1              3    0[BANK0 ] float 
 36575 ;;  f2              3    3[BANK0 ] float 
 36576 ;; Auto vars:     Size  Location     Type
 36577 ;;  quot            4    9[BANK0 ] unsigned long 
 36578 ;;  exp1            1   14[BANK0 ] unsigned char 
 36579 ;;  cntr            1   13[BANK0 ] unsigned char 
 36580 ;; Return value:  Size  Location     Type
 36581 ;;                  4    0[BANK0 ] unsigned long 
 36582 ;; Registers used:
 36583 ;;		wreg, status,2, status,0
 36584 ;; Tracked objects:
 36585 ;;		On entry : 0/0
 36586 ;;		On exit  : 0/0
 36587 ;;		Unchanged: 0/0
 36588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36589 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36590 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36591 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36592 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36593 ;;Total ram usage:       15 bytes
 36594 ;; Hardware stack levels used:    1
 36595 ;; Hardware stack levels required when called:    5
 36596 ;; This function calls:
 36597 ;;		Nothing
 36598 ;; This function is called by:
 36599 ;;		_sprintf
 36600 ;; This function uses a non-reentrant model
 36601 ;;
 36602                           
 36603                           	psect	text83
 36604  007888                     __ptext83:
 36605                           	opt stack 0
 36606  007888                     __tdiv_to_l_:
 36607                           	opt stack 24
 36608                           
 36609                           ; BSR set to: 0
 36610                           ;incstack = 0
 36611  007888  C062  F066         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 36612  00788C  0100               	movlb	0	; () banked
 36613  00788E  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 36614  007890  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 36615  007892  0100               	movlb	0	; () banked
 36616  007894  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 36617  007896  0100               	movlb	0	; () banked
 36618  007898  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 36619  00789A  E301               	bnc	u9241
 36620  00789C  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 36621  00789E                     u9241:
 36622  00789E  0100               	movlb	0	; () banked
 36623  0078A0  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 36624  0078A2  0100               	movlb	0	; () banked
 36625  0078A4  6F6E               	movwf	__tdiv_to_l_@exp1& (0+255),b
 36626  0078A6  0100               	movlb	0	; () banked
 36627  0078A8  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 36628  0078AA  A4D8               	btfss	status,2,c
 36629  0078AC  D00A               	goto	l9386
 36630                           
 36631                           ; BSR set to: 0
 36632  0078AE  0E00               	movlw	0
 36633  0078B0  0100               	movlb	0	; () banked
 36634  0078B2  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 36635  0078B4  0E00               	movlw	0
 36636  0078B6  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 36637  0078B8  0E00               	movlw	0
 36638  0078BA  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 36639  0078BC  0E00               	movlw	0
 36640  0078BE  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 36641                           
 36642                           ; BSR set to: 0
 36643  0078C0  0012               	return	
 36644  0078C2                     l9386:
 36645                           
 36646                           ; BSR set to: 0
 36647  0078C2  C065  F066         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 36648  0078C6  0100               	movlb	0	; () banked
 36649  0078C8  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 36650  0078CA  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 36651  0078CC  0100               	movlb	0	; () banked
 36652  0078CE  3564               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 36653  0078D0  0100               	movlb	0	; () banked
 36654  0078D2  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 36655  0078D4  E301               	bnc	u9261
 36656  0078D6  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 36657  0078D8                     u9261:
 36658  0078D8  0100               	movlb	0	; () banked
 36659  0078DA  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 36660  0078DC  0100               	movlb	0	; () banked
 36661  0078DE  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 36662  0078E0  0100               	movlb	0	; () banked
 36663  0078E2  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 36664  0078E4  A4D8               	btfss	status,2,c
 36665  0078E6  D00A               	goto	l9392
 36666                           
 36667                           ; BSR set to: 0
 36668  0078E8  0E00               	movlw	0
 36669  0078EA  0100               	movlb	0	; () banked
 36670  0078EC  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 36671  0078EE  0E00               	movlw	0
 36672  0078F0  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 36673  0078F2  0E00               	movlw	0
 36674  0078F4  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 36675  0078F6  0E00               	movlw	0
 36676  0078F8  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 36677                           
 36678                           ; BSR set to: 0
 36679  0078FA  0012               	return	
 36680  0078FC                     l9392:
 36681                           
 36682                           ; BSR set to: 0
 36683  0078FC  0100               	movlb	0	; () banked
 36684  0078FE  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 36685                           
 36686                           ; BSR set to: 0
 36687  007900  0EFF               	movlw	255
 36688  007902  0100               	movlb	0	; () banked
 36689  007904  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 36690  007906  0EFF               	movlw	255
 36691  007908  0100               	movlb	0	; () banked
 36692  00790A  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 36693  00790C  0E00               	movlw	0
 36694  00790E  0100               	movlb	0	; () banked
 36695  007910  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 36696  007912  0100               	movlb	0	; () banked
 36697  007914  8F64               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 36698                           
 36699                           ; BSR set to: 0
 36700  007916  0EFF               	movlw	255
 36701  007918  0100               	movlb	0	; () banked
 36702  00791A  1763               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 36703  00791C  0EFF               	movlw	255
 36704  00791E  0100               	movlb	0	; () banked
 36705  007920  1764               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 36706  007922  0E00               	movlw	0
 36707  007924  0100               	movlb	0	; () banked
 36708  007926  1765               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 36709                           
 36710                           ; BSR set to: 0
 36711  007928  0E00               	movlw	0
 36712  00792A  0100               	movlb	0	; () banked
 36713  00792C  6F69               	movwf	__tdiv_to_l_@quot& (0+255),b
 36714  00792E  0E00               	movlw	0
 36715  007930  6F6A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 36716  007932  0E00               	movlw	0
 36717  007934  6F6B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 36718  007936  0E00               	movlw	0
 36719  007938  6F6C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 36720                           
 36721                           ; BSR set to: 0
 36722  00793A  0E7F               	movlw	127
 36723  00793C  0100               	movlb	0	; () banked
 36724  00793E  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 36725                           
 36726                           ; BSR set to: 0
 36727  007940  0100               	movlb	0	; () banked
 36728  007942  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 36729  007944  0F98               	addlw	152
 36730  007946  0100               	movlb	0	; () banked
 36731  007948  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 36732                           
 36733                           ; BSR set to: 0
 36734  00794A  0E18               	movlw	24
 36735  00794C  0100               	movlb	0	; () banked
 36736  00794E  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 36737  007950                     l3035:
 36738                           
 36739                           ; BSR set to: 0
 36740  007950  0100               	movlb	0	; () banked
 36741  007952  90D8               	bcf	status,0,c
 36742  007954  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 36743  007956  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 36744  007958  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 36745  00795A  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 36746                           
 36747                           ; BSR set to: 0
 36748  00795C  0100               	movlb	0	; () banked
 36749  00795E  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 36750  007960  0100               	movlb	0	; () banked
 36751  007962  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 36752  007964  0100               	movlb	0	; () banked
 36753  007966  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 36754  007968  0100               	movlb	0	; () banked
 36755  00796A  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 36756  00796C  0100               	movlb	0	; () banked
 36757  00796E  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 36758  007970  0100               	movlb	0	; () banked
 36759  007972  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 36760  007974  A0D8               	btfss	status,0,c
 36761  007976  D00E               	goto	l3036
 36762                           
 36763                           ; BSR set to: 0
 36764  007978  0100               	movlb	0	; () banked
 36765  00797A  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 36766  00797C  0100               	movlb	0	; () banked
 36767  00797E  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 36768  007980  0100               	movlb	0	; () banked
 36769  007982  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 36770  007984  0100               	movlb	0	; () banked
 36771  007986  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 36772  007988  0100               	movlb	0	; () banked
 36773  00798A  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 36774  00798C  0100               	movlb	0	; () banked
 36775  00798E  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 36776                           
 36777                           ; BSR set to: 0
 36778  007990  0100               	movlb	0	; () banked
 36779  007992  8169               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 36780  007994                     l3036:
 36781                           
 36782                           ; BSR set to: 0
 36783  007994  0100               	movlb	0	; () banked
 36784  007996  90D8               	bcf	status,0,c
 36785  007998  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 36786  00799A  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 36787  00799C  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 36788                           
 36789                           ; BSR set to: 0
 36790  00799E  0100               	movlb	0	; () banked
 36791  0079A0  2F6D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 36792  0079A2  D7D6               	goto	l3035
 36793  0079A4  D000               	goto	l9414
 36794  0079A6                     l9414:
 36795                           
 36796                           ; BSR set to: 0
 36797  0079A6  0100               	movlb	0	; () banked
 36798  0079A8  AF6E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 36799  0079AA  D01B               	goto	l9426
 36800                           
 36801                           ; BSR set to: 0
 36802  0079AC  0100               	movlb	0	; () banked
 36803  0079AE  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 36804  0079B0  0A80               	xorlw	128
 36805  0079B2  0F97               	addlw	151
 36806  0079B4  B0D8               	btfsc	status,0,c
 36807  0079B6  D00B               	goto	l9422
 36808                           
 36809                           ; BSR set to: 0
 36810  0079B8  0E00               	movlw	0
 36811  0079BA  0100               	movlb	0	; () banked
 36812  0079BC  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 36813  0079BE  0E00               	movlw	0
 36814  0079C0  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 36815  0079C2  0E00               	movlw	0
 36816  0079C4  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 36817  0079C6  0E00               	movlw	0
 36818  0079C8  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 36819                           
 36820                           ; BSR set to: 0
 36821  0079CA  0012               	return	
 36822                           
 36823                           ; BSR set to: 0
 36824  0079CC  D000               	goto	l9422
 36825  0079CE                     l9422:
 36826                           
 36827                           ; BSR set to: 0
 36828  0079CE  0100               	movlb	0	; () banked
 36829  0079D0  90D8               	bcf	status,0,c
 36830  0079D2  336C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 36831  0079D4  336B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 36832  0079D6  336A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 36833  0079D8  3369               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 36834                           
 36835                           ; BSR set to: 0
 36836  0079DA  0100               	movlb	0	; () banked
 36837  0079DC  3F6E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 36838  0079DE  D7F7               	goto	l9422
 36839                           
 36840                           ; BSR set to: 0
 36841  0079E0  D01D               	goto	l3042
 36842  0079E2                     l9426:
 36843                           
 36844                           ; BSR set to: 0
 36845  0079E2  0E17               	movlw	23
 36846  0079E4  0100               	movlb	0	; () banked
 36847  0079E6  656E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 36848  0079E8  D014               	goto	l9434
 36849                           
 36850                           ; BSR set to: 0
 36851  0079EA  0E00               	movlw	0
 36852  0079EC  0100               	movlb	0	; () banked
 36853  0079EE  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 36854  0079F0  0E00               	movlw	0
 36855  0079F2  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 36856  0079F4  0E00               	movlw	0
 36857  0079F6  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 36858  0079F8  0E00               	movlw	0
 36859  0079FA  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 36860                           
 36861                           ; BSR set to: 0
 36862  0079FC  0012               	return	
 36863                           
 36864                           ; BSR set to: 0
 36865  0079FE  D009               	goto	l9434
 36866  007A00                     l9432:
 36867                           
 36868                           ; BSR set to: 0
 36869  007A00  0100               	movlb	0	; () banked
 36870  007A02  90D8               	bcf	status,0,c
 36871  007A04  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 36872  007A06  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 36873  007A08  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 36874  007A0A  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 36875  007A0C  0100               	movlb	0	; () banked
 36876  007A0E  076E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 36877  007A10  D000               	goto	l9434
 36878  007A12                     l9434:
 36879                           
 36880                           ; BSR set to: 0
 36881  007A12  0100               	movlb	0	; () banked
 36882  007A14  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 36883  007A16  0100               	movlb	0	; () banked
 36884  007A18  A4D8               	btfss	status,2,c
 36885  007A1A  D7F2               	goto	l9432
 36886  007A1C                     l3042:
 36887                           
 36888                           ; BSR set to: 0
 36889  007A1C  C069  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 36890  007A20  C06A  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 36891  007A24  C06B  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 36892  007A28  C06C  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 36893                           
 36894                           ; BSR set to: 0
 36895  007A2C  0012               	return		;funcret
 36896  007A2E                     __end_of__tdiv_to_l_:
 36897                           	opt stack 0
 36898                           tblptru	equ	0xFF8
 36899                           tblptrh	equ	0xFF7
 36900                           tblptrl	equ	0xFF6
 36901                           tablat	equ	0xFF5
 36902                           prodh	equ	0xFF4
 36903                           prodl	equ	0xFF3
 36904                           intcon	equ	0xFF2
 36905                           intcon2	equ	0xFF1
 36906                           indf0	equ	0xFEF
 36907                           postinc0	equ	0xFEE
 36908                           plusw0	equ	0xFEB
 36909                           fsr0h	equ	0xFEA
 36910                           fsr0l	equ	0xFE9
 36911                           wreg	equ	0xFE8
 36912                           indf1	equ	0xFE7
 36913                           postdec1	equ	0xFE5
 36914                           fsr1h	equ	0xFE2
 36915                           fsr1l	equ	0xFE1
 36916                           indf2	equ	0xFDF
 36917                           postinc2	equ	0xFDE
 36918                           postdec2	equ	0xFDD
 36919                           plusw2	equ	0xFDB
 36920                           fsr2h	equ	0xFDA
 36921                           fsr2l	equ	0xFD9
 36922                           status	equ	0xFD8
 36923                           
 36924 ;; *************** function __div_to_l_ *****************
 36925 ;; Defined at:
 36926 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
 36927 ;; Parameters:    Size  Location     Type
 36928 ;;  f1              3    0[BANK0 ] unsigned long 
 36929 ;;  f2              3    3[BANK0 ] unsigned long 
 36930 ;; Auto vars:     Size  Location     Type
 36931 ;;  quot            4    6[BANK0 ] unsigned long 
 36932 ;;  exp1            1   11[BANK0 ] unsigned char 
 36933 ;;  cntr            1   10[BANK0 ] unsigned char 
 36934 ;; Return value:  Size  Location     Type
 36935 ;;                  4    0[BANK0 ] unsigned long 
 36936 ;; Registers used:
 36937 ;;		wreg, status,2, status,0
 36938 ;; Tracked objects:
 36939 ;;		On entry : 0/0
 36940 ;;		On exit  : 0/0
 36941 ;;		Unchanged: 0/0
 36942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36943 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36944 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36946 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36947 ;;Total ram usage:       12 bytes
 36948 ;; Hardware stack levels used:    1
 36949 ;; Hardware stack levels required when called:    5
 36950 ;; This function calls:
 36951 ;;		Nothing
 36952 ;; This function is called by:
 36953 ;;		_sprintf
 36954 ;; This function uses a non-reentrant model
 36955 ;;
 36956                           
 36957                           	psect	text84
 36958  007A2E                     __ptext84:
 36959                           	opt stack 0
 36960  007A2E                     __div_to_l_:
 36961                           	opt stack 24
 36962                           
 36963                           ; BSR set to: 0
 36964                           ;incstack = 0
 36965  007A2E  0100               	movlb	0	; () banked
 36966  007A30  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 36967  007A32  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 36968  007A34  0100               	movlb	0	; () banked
 36969  007A36  6F6B               	movwf	__div_to_l_@exp1& (0+255),b
 36970  007A38  0100               	movlb	0	; () banked
 36971  007A3A  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 36972  007A3C  A4D8               	btfss	status,2,c
 36973  007A3E  D00A               	goto	l9442
 36974                           
 36975                           ; BSR set to: 0
 36976  007A40  0E00               	movlw	0
 36977  007A42  0100               	movlb	0	; () banked
 36978  007A44  6F60               	movwf	?__div_to_l_& (0+255),b
 36979  007A46  0E00               	movlw	0
 36980  007A48  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 36981  007A4A  0E00               	movlw	0
 36982  007A4C  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 36983  007A4E  0E00               	movlw	0
 36984  007A50  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 36985                           
 36986                           ; BSR set to: 0
 36987  007A52  0012               	return	
 36988  007A54                     l9442:
 36989                           
 36990                           ; BSR set to: 0
 36991  007A54  0100               	movlb	0	; () banked
 36992  007A56  3565               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 36993  007A58  3566               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 36994  007A5A  0100               	movlb	0	; () banked
 36995  007A5C  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 36996  007A5E  0100               	movlb	0	; () banked
 36997  007A60  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 36998  007A62  A4D8               	btfss	status,2,c
 36999  007A64  D00A               	goto	l9448
 37000                           
 37001                           ; BSR set to: 0
 37002  007A66  0E00               	movlw	0
 37003  007A68  0100               	movlb	0	; () banked
 37004  007A6A  6F60               	movwf	?__div_to_l_& (0+255),b
 37005  007A6C  0E00               	movlw	0
 37006  007A6E  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 37007  007A70  0E00               	movlw	0
 37008  007A72  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 37009  007A74  0E00               	movlw	0
 37010  007A76  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 37011                           
 37012                           ; BSR set to: 0
 37013  007A78  0012               	return	
 37014  007A7A                     l9448:
 37015                           
 37016                           ; BSR set to: 0
 37017  007A7A  0100               	movlb	0	; () banked
 37018  007A7C  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 37019                           
 37020                           ; BSR set to: 0
 37021  007A7E  0EFF               	movlw	255
 37022  007A80  0100               	movlb	0	; () banked
 37023  007A82  1760               	andwf	__div_to_l_@f1& (0+255),f,b
 37024  007A84  0EFF               	movlw	255
 37025  007A86  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 37026  007A88  0EFF               	movlw	255
 37027  007A8A  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 37028  007A8C  0E00               	movlw	0
 37029  007A8E  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 37030                           
 37031                           ; BSR set to: 0
 37032  007A90  0100               	movlb	0	; () banked
 37033  007A92  8F65               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 37034  007A94  0EFF               	movlw	255
 37035  007A96  0100               	movlb	0	; () banked
 37036  007A98  1763               	andwf	__div_to_l_@f2& (0+255),f,b
 37037  007A9A  0EFF               	movlw	255
 37038  007A9C  1764               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 37039  007A9E  0EFF               	movlw	255
 37040  007AA0  1765               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 37041  007AA2  0E00               	movlw	0
 37042  007AA4  1766               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 37043                           
 37044                           ; BSR set to: 0
 37045  007AA6  0E00               	movlw	0
 37046  007AA8  0100               	movlb	0	; () banked
 37047  007AAA  6F66               	movwf	__div_to_l_@quot& (0+255),b
 37048  007AAC  0E00               	movlw	0
 37049  007AAE  6F67               	movwf	(__div_to_l_@quot+1)& (0+255),b
 37050  007AB0  0E00               	movlw	0
 37051  007AB2  6F68               	movwf	(__div_to_l_@quot+2)& (0+255),b
 37052  007AB4  0E00               	movlw	0
 37053  007AB6  6F69               	movwf	(__div_to_l_@quot+3)& (0+255),b
 37054                           
 37055                           ; BSR set to: 0
 37056  007AB8  0E7F               	movlw	127
 37057  007ABA  0100               	movlb	0	; () banked
 37058  007ABC  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 37059                           
 37060                           ; BSR set to: 0
 37061  007ABE  0100               	movlb	0	; () banked
 37062  007AC0  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 37063  007AC2  0FA0               	addlw	160
 37064  007AC4  0100               	movlb	0	; () banked
 37065  007AC6  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 37066                           
 37067                           ; BSR set to: 0
 37068  007AC8  0E20               	movlw	32
 37069  007ACA  0100               	movlb	0	; () banked
 37070  007ACC  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 37071  007ACE  D000               	goto	l9462
 37072  007AD0                     l9462:
 37073                           
 37074                           ; BSR set to: 0
 37075  007AD0  0100               	movlb	0	; () banked
 37076  007AD2  90D8               	bcf	status,0,c
 37077  007AD4  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 37078  007AD6  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 37079  007AD8  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 37080  007ADA  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 37081                           
 37082                           ; BSR set to: 0
 37083  007ADC  0100               	movlb	0	; () banked
 37084  007ADE  5163               	movf	__div_to_l_@f2& (0+255),w,b
 37085  007AE0  0100               	movlb	0	; () banked
 37086  007AE2  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
 37087  007AE4  0100               	movlb	0	; () banked
 37088  007AE6  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 37089  007AE8  0100               	movlb	0	; () banked
 37090  007AEA  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 37091  007AEC  0100               	movlb	0	; () banked
 37092  007AEE  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 37093  007AF0  0100               	movlb	0	; () banked
 37094  007AF2  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 37095  007AF4  0100               	movlb	0	; () banked
 37096  007AF6  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 37097  007AF8  0100               	movlb	0	; () banked
 37098  007AFA  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 37099  007AFC  A0D8               	btfss	status,0,c
 37100  007AFE  D013               	goto	l9470
 37101                           
 37102                           ; BSR set to: 0
 37103  007B00  0100               	movlb	0	; () banked
 37104  007B02  5163               	movf	__div_to_l_@f2& (0+255),w,b
 37105  007B04  0100               	movlb	0	; () banked
 37106  007B06  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
 37107  007B08  0100               	movlb	0	; () banked
 37108  007B0A  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 37109  007B0C  0100               	movlb	0	; () banked
 37110  007B0E  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 37111  007B10  0100               	movlb	0	; () banked
 37112  007B12  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 37113  007B14  0100               	movlb	0	; () banked
 37114  007B16  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 37115  007B18  0100               	movlb	0	; () banked
 37116  007B1A  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 37117  007B1C  0100               	movlb	0	; () banked
 37118  007B1E  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 37119                           
 37120                           ; BSR set to: 0
 37121  007B20  0100               	movlb	0	; () banked
 37122  007B22  8166               	bsf	__div_to_l_@quot& (0+255),0,b
 37123  007B24  D000               	goto	l9470
 37124  007B26                     l9470:
 37125                           
 37126                           ; BSR set to: 0
 37127  007B26  0100               	movlb	0	; () banked
 37128  007B28  90D8               	bcf	status,0,c
 37129  007B2A  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
 37130  007B2C  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 37131  007B2E  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 37132  007B30  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 37133                           
 37134                           ; BSR set to: 0
 37135  007B32  0100               	movlb	0	; () banked
 37136  007B34  2F6A               	decfsz	__div_to_l_@cntr& (0+255),f,b
 37137  007B36  D7CC               	goto	l9462
 37138  007B38  D000               	goto	l9474
 37139  007B3A                     l9474:
 37140                           
 37141                           ; BSR set to: 0
 37142  007B3A  0100               	movlb	0	; () banked
 37143  007B3C  AF6B               	btfss	__div_to_l_@exp1& (0+255),7,b
 37144  007B3E  D01B               	goto	l9486
 37145                           
 37146                           ; BSR set to: 0
 37147  007B40  0100               	movlb	0	; () banked
 37148  007B42  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 37149  007B44  0A80               	xorlw	128
 37150  007B46  0F9F               	addlw	159
 37151  007B48  B0D8               	btfsc	status,0,c
 37152  007B4A  D00B               	goto	l9482
 37153                           
 37154                           ; BSR set to: 0
 37155  007B4C  0E00               	movlw	0
 37156  007B4E  0100               	movlb	0	; () banked
 37157  007B50  6F60               	movwf	?__div_to_l_& (0+255),b
 37158  007B52  0E00               	movlw	0
 37159  007B54  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 37160  007B56  0E00               	movlw	0
 37161  007B58  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 37162  007B5A  0E00               	movlw	0
 37163  007B5C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 37164                           
 37165                           ; BSR set to: 0
 37166  007B5E  0012               	return	
 37167                           
 37168                           ; BSR set to: 0
 37169  007B60  D000               	goto	l9482
 37170  007B62                     l9482:
 37171                           
 37172                           ; BSR set to: 0
 37173  007B62  0100               	movlb	0	; () banked
 37174  007B64  90D8               	bcf	status,0,c
 37175  007B66  3369               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 37176  007B68  3368               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 37177  007B6A  3367               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 37178  007B6C  3366               	rrcf	__div_to_l_@quot& (0+255),f,b
 37179                           
 37180                           ; BSR set to: 0
 37181  007B6E  0100               	movlb	0	; () banked
 37182  007B70  3F6B               	incfsz	__div_to_l_@exp1& (0+255),f,b
 37183  007B72  D7F7               	goto	l9482
 37184                           
 37185                           ; BSR set to: 0
 37186  007B74  D01D               	goto	l2921
 37187  007B76                     l9486:
 37188                           
 37189                           ; BSR set to: 0
 37190  007B76  0E1F               	movlw	31
 37191  007B78  0100               	movlb	0	; () banked
 37192  007B7A  656B               	cpfsgt	__div_to_l_@exp1& (0+255),b
 37193  007B7C  D014               	goto	l9494
 37194                           
 37195                           ; BSR set to: 0
 37196  007B7E  0E00               	movlw	0
 37197  007B80  0100               	movlb	0	; () banked
 37198  007B82  6F60               	movwf	?__div_to_l_& (0+255),b
 37199  007B84  0E00               	movlw	0
 37200  007B86  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 37201  007B88  0E00               	movlw	0
 37202  007B8A  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 37203  007B8C  0E00               	movlw	0
 37204  007B8E  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 37205                           
 37206                           ; BSR set to: 0
 37207  007B90  0012               	return	
 37208                           
 37209                           ; BSR set to: 0
 37210  007B92  D009               	goto	l9494
 37211  007B94                     l9492:
 37212                           
 37213                           ; BSR set to: 0
 37214  007B94  0100               	movlb	0	; () banked
 37215  007B96  90D8               	bcf	status,0,c
 37216  007B98  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 37217  007B9A  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 37218  007B9C  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 37219  007B9E  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 37220  007BA0  0100               	movlb	0	; () banked
 37221  007BA2  076B               	decf	__div_to_l_@exp1& (0+255),f,b
 37222  007BA4  D000               	goto	l9494
 37223  007BA6                     l9494:
 37224                           
 37225                           ; BSR set to: 0
 37226  007BA6  0100               	movlb	0	; () banked
 37227  007BA8  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 37228  007BAA  0100               	movlb	0	; () banked
 37229  007BAC  A4D8               	btfss	status,2,c
 37230  007BAE  D7F2               	goto	l9492
 37231  007BB0                     l2921:
 37232                           
 37233                           ; BSR set to: 0
 37234  007BB0  C066  F060         	movff	__div_to_l_@quot,?__div_to_l_
 37235  007BB4  C067  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 37236  007BB8  C068  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 37237  007BBC  C069  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 37238                           
 37239                           ; BSR set to: 0
 37240  007BC0  0012               	return		;funcret
 37241  007BC2                     __end_of__div_to_l_:
 37242                           	opt stack 0
 37243                           tblptru	equ	0xFF8
 37244                           tblptrh	equ	0xFF7
 37245                           tblptrl	equ	0xFF6
 37246                           tablat	equ	0xFF5
 37247                           prodh	equ	0xFF4
 37248                           prodl	equ	0xFF3
 37249                           intcon	equ	0xFF2
 37250                           intcon2	equ	0xFF1
 37251                           indf0	equ	0xFEF
 37252                           postinc0	equ	0xFEE
 37253                           plusw0	equ	0xFEB
 37254                           fsr0h	equ	0xFEA
 37255                           fsr0l	equ	0xFE9
 37256                           wreg	equ	0xFE8
 37257                           indf1	equ	0xFE7
 37258                           postdec1	equ	0xFE5
 37259                           fsr1h	equ	0xFE2
 37260                           fsr1l	equ	0xFE1
 37261                           indf2	equ	0xFDF
 37262                           postinc2	equ	0xFDE
 37263                           postdec2	equ	0xFDD
 37264                           plusw2	equ	0xFDB
 37265                           fsr2h	equ	0xFDA
 37266                           fsr2l	equ	0xFD9
 37267                           status	equ	0xFD8
 37268                           
 37269 ;; *************** function ___lltoft *****************
 37270 ;; Defined at:
 37271 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
 37272 ;; Parameters:    Size  Location     Type
 37273 ;;  c               4    8[BANK0 ] unsigned long 
 37274 ;; Auto vars:     Size  Location     Type
 37275 ;;  exp             1   16[BANK0 ] unsigned char 
 37276 ;; Return value:  Size  Location     Type
 37277 ;;                  3    8[BANK0 ] float 
 37278 ;; Registers used:
 37279 ;;		wreg, status,2, status,0, cstack
 37280 ;; Tracked objects:
 37281 ;;		On entry : 0/0
 37282 ;;		On exit  : 0/0
 37283 ;;		Unchanged: 0/0
 37284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37285 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37287 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37288 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37289 ;;Total ram usage:        9 bytes
 37290 ;; Hardware stack levels used:    1
 37291 ;; Hardware stack levels required when called:    6
 37292 ;; This function calls:
 37293 ;;		___ftpack
 37294 ;; This function is called by:
 37295 ;;		_InitUART
 37296 ;;		_sprintf
 37297 ;; This function uses a non-reentrant model
 37298 ;;
 37299                           
 37300                           	psect	text85
 37301  009E48                     __ptext85:
 37302                           	opt stack 0
 37303  009E48                     ___lltoft:
 37304                           	opt stack 23
 37305                           
 37306                           ; BSR set to: 0
 37307                           ;incstack = 0
 37308  009E48  0E8E               	movlw	142
 37309  009E4A  0100               	movlb	0	; () banked
 37310  009E4C  6F70               	movwf	___lltoft@exp& (0+255),b
 37311  009E4E  D009               	goto	l9614
 37312  009E50                     l9612:
 37313                           
 37314                           ; BSR set to: 0
 37315  009E50  0100               	movlb	0	; () banked
 37316  009E52  90D8               	bcf	status,0,c
 37317  009E54  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 37318  009E56  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 37319  009E58  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
 37320  009E5A  3368               	rrcf	___lltoft@c& (0+255),f,b
 37321  009E5C  0100               	movlb	0	; () banked
 37322  009E5E  2B70               	incf	___lltoft@exp& (0+255),f,b
 37323  009E60  D000               	goto	l9614
 37324  009E62                     l9614:
 37325                           
 37326                           ; BSR set to: 0
 37327  009E62  0E00               	movlw	0
 37328  009E64  0100               	movlb	0	; () banked
 37329  009E66  1568               	andwf	___lltoft@c& (0+255),w,b
 37330  009E68  0100               	movlb	0	; () banked
 37331  009E6A  6F6C               	movwf	??___lltoft& (0+255),b
 37332  009E6C  0E00               	movlw	0
 37333  009E6E  0100               	movlb	0	; () banked
 37334  009E70  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
 37335  009E72  0100               	movlb	0	; () banked
 37336  009E74  6F6D               	movwf	(??___lltoft+1)& (0+255),b
 37337  009E76  0E00               	movlw	0
 37338  009E78  0100               	movlb	0	; () banked
 37339  009E7A  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
 37340  009E7C  0100               	movlb	0	; () banked
 37341  009E7E  6F6E               	movwf	(??___lltoft+2)& (0+255),b
 37342  009E80  0EFF               	movlw	255
 37343  009E82  0100               	movlb	0	; () banked
 37344  009E84  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
 37345  009E86  0100               	movlb	0	; () banked
 37346  009E88  6F6F               	movwf	(??___lltoft+3)& (0+255),b
 37347  009E8A  0100               	movlb	0	; () banked
 37348  009E8C  516C               	movf	??___lltoft& (0+255),w,b
 37349  009E8E  0100               	movlb	0	; () banked
 37350  009E90  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
 37351  009E92  0100               	movlb	0	; () banked
 37352  009E94  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
 37353  009E96  0100               	movlb	0	; () banked
 37354  009E98  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
 37355  009E9A  A4D8               	btfss	status,2,c
 37356  009E9C  D7D9               	goto	l9612
 37357                           
 37358                           ; BSR set to: 0
 37359                           
 37360                           ; BSR set to: 0
 37361  009E9E  C068  F060         	movff	___lltoft@c,___ftpack@arg
 37362  009EA2  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
 37363  009EA6  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
 37364  009EAA  C070  F063         	movff	___lltoft@exp,___ftpack@exp
 37365  009EAE  0E00               	movlw	0
 37366  009EB0  0100               	movlb	0	; () banked
 37367  009EB2  6F64               	movwf	___ftpack@sign& (0+255),b
 37368  009EB4  ECED  F043         	call	___ftpack	;wreg free
 37369  009EB8  C060  F068         	movff	?___ftpack,?___lltoft
 37370  009EBC  C061  F069         	movff	?___ftpack+1,?___lltoft+1
 37371  009EC0  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
 37372  009EC4  0012               	return	
 37373  009EC6  0012               	return		;funcret
 37374  009EC8                     __end_of___lltoft:
 37375                           	opt stack 0
 37376                           tblptru	equ	0xFF8
 37377                           tblptrh	equ	0xFF7
 37378                           tblptrl	equ	0xFF6
 37379                           tablat	equ	0xFF5
 37380                           prodh	equ	0xFF4
 37381                           prodl	equ	0xFF3
 37382                           intcon	equ	0xFF2
 37383                           intcon2	equ	0xFF1
 37384                           indf0	equ	0xFEF
 37385                           postinc0	equ	0xFEE
 37386                           plusw0	equ	0xFEB
 37387                           fsr0h	equ	0xFEA
 37388                           fsr0l	equ	0xFE9
 37389                           wreg	equ	0xFE8
 37390                           indf1	equ	0xFE7
 37391                           postdec1	equ	0xFE5
 37392                           fsr1h	equ	0xFE2
 37393                           fsr1l	equ	0xFE1
 37394                           indf2	equ	0xFDF
 37395                           postinc2	equ	0xFDE
 37396                           postdec2	equ	0xFDD
 37397                           plusw2	equ	0xFDB
 37398                           fsr2h	equ	0xFDA
 37399                           fsr2l	equ	0xFD9
 37400                           status	equ	0xFD8
 37401                           
 37402 ;; *************** function ___llmod *****************
 37403 ;; Defined at:
 37404 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 37405 ;; Parameters:    Size  Location     Type
 37406 ;;  dividend        4   13[BANK0 ] unsigned long 
 37407 ;;  divisor         4   17[BANK0 ] unsigned long 
 37408 ;; Auto vars:     Size  Location     Type
 37409 ;;  counter         1   21[BANK0 ] unsigned char 
 37410 ;; Return value:  Size  Location     Type
 37411 ;;                  4   13[BANK0 ] unsigned long 
 37412 ;; Registers used:
 37413 ;;		wreg, status,2, status,0
 37414 ;; Tracked objects:
 37415 ;;		On entry : 0/0
 37416 ;;		On exit  : 0/0
 37417 ;;		Unchanged: 0/0
 37418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37419 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37420 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37422 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37423 ;;Total ram usage:        9 bytes
 37424 ;; Hardware stack levels used:    1
 37425 ;; Hardware stack levels required when called:    5
 37426 ;; This function calls:
 37427 ;;		Nothing
 37428 ;; This function is called by:
 37429 ;;		_sprintf
 37430 ;; This function uses a non-reentrant model
 37431 ;;
 37432                           
 37433                           	psect	text86
 37434  0098EA                     __ptext86:
 37435                           	opt stack 0
 37436  0098EA                     ___llmod:
 37437                           	opt stack 24
 37438                           
 37439                           ;incstack = 0
 37440  0098EA  0100               	movlb	0	; () banked
 37441  0098EC  5171               	movf	___llmod@divisor& (0+255),w,b
 37442  0098EE  0100               	movlb	0	; () banked
 37443  0098F0  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 37444  0098F2  0100               	movlb	0	; () banked
 37445  0098F4  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 37446  0098F6  0100               	movlb	0	; () banked
 37447  0098F8  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 37448  0098FA  B4D8               	btfsc	status,2,c
 37449  0098FC  D03F               	goto	l3132
 37450                           
 37451                           ; BSR set to: 0
 37452  0098FE  0E01               	movlw	1
 37453  009900  0100               	movlb	0	; () banked
 37454  009902  6F75               	movwf	___llmod@counter& (0+255),b
 37455  009904  D009               	goto	l9600
 37456  009906                     l9598:
 37457                           
 37458                           ; BSR set to: 0
 37459  009906  0100               	movlb	0	; () banked
 37460  009908  90D8               	bcf	status,0,c
 37461  00990A  3771               	rlcf	___llmod@divisor& (0+255),f,b
 37462  00990C  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 37463  00990E  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 37464  009910  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 37465  009912  0100               	movlb	0	; () banked
 37466  009914  2B75               	incf	___llmod@counter& (0+255),f,b
 37467  009916  D000               	goto	l9600
 37468  009918                     l9600:
 37469                           
 37470                           ; BSR set to: 0
 37471  009918  0100               	movlb	0	; () banked
 37472  00991A  BF74               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 37473  00991C  D002               	goto	l9602
 37474  00991E  D7F3               	goto	l9598
 37475                           
 37476                           ; BSR set to: 0
 37477  009920  D000               	goto	l9602
 37478  009922                     l9602:
 37479                           
 37480                           ; BSR set to: 0
 37481  009922  0100               	movlb	0	; () banked
 37482  009924  5171               	movf	___llmod@divisor& (0+255),w,b
 37483  009926  0100               	movlb	0	; () banked
 37484  009928  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 37485  00992A  0100               	movlb	0	; () banked
 37486  00992C  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 37487  00992E  0100               	movlb	0	; () banked
 37488  009930  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 37489  009932  0100               	movlb	0	; () banked
 37490  009934  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 37491  009936  0100               	movlb	0	; () banked
 37492  009938  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 37493  00993A  0100               	movlb	0	; () banked
 37494  00993C  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 37495  00993E  0100               	movlb	0	; () banked
 37496  009940  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 37497  009942  A0D8               	btfss	status,0,c
 37498  009944  D011               	goto	l9606
 37499                           
 37500                           ; BSR set to: 0
 37501  009946  0100               	movlb	0	; () banked
 37502  009948  5171               	movf	___llmod@divisor& (0+255),w,b
 37503  00994A  0100               	movlb	0	; () banked
 37504  00994C  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 37505  00994E  0100               	movlb	0	; () banked
 37506  009950  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 37507  009952  0100               	movlb	0	; () banked
 37508  009954  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 37509  009956  0100               	movlb	0	; () banked
 37510  009958  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 37511  00995A  0100               	movlb	0	; () banked
 37512  00995C  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 37513  00995E  0100               	movlb	0	; () banked
 37514  009960  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 37515  009962  0100               	movlb	0	; () banked
 37516  009964  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 37517  009966  D000               	goto	l9606
 37518  009968                     l9606:
 37519                           
 37520                           ; BSR set to: 0
 37521  009968  0100               	movlb	0	; () banked
 37522  00996A  90D8               	bcf	status,0,c
 37523  00996C  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 37524  00996E  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 37525  009970  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 37526  009972  3371               	rrcf	___llmod@divisor& (0+255),f,b
 37527                           
 37528                           ; BSR set to: 0
 37529  009974  0100               	movlb	0	; () banked
 37530  009976  2F75               	decfsz	___llmod@counter& (0+255),f,b
 37531  009978  D7D4               	goto	l9602
 37532  00997A  D000               	goto	l3132
 37533  00997C                     l3132:
 37534                           
 37535                           ; BSR set to: 0
 37536  00997C  C06D  F06D         	movff	___llmod@dividend,?___llmod
 37537  009980  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 37538  009984  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 37539  009988  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 37540                           
 37541                           ; BSR set to: 0
 37542  00998C  0012               	return		;funcret
 37543  00998E                     __end_of___llmod:
 37544                           	opt stack 0
 37545                           tblptru	equ	0xFF8
 37546                           tblptrh	equ	0xFF7
 37547                           tblptrl	equ	0xFF6
 37548                           tablat	equ	0xFF5
 37549                           prodh	equ	0xFF4
 37550                           prodl	equ	0xFF3
 37551                           intcon	equ	0xFF2
 37552                           intcon2	equ	0xFF1
 37553                           indf0	equ	0xFEF
 37554                           postinc0	equ	0xFEE
 37555                           plusw0	equ	0xFEB
 37556                           fsr0h	equ	0xFEA
 37557                           fsr0l	equ	0xFE9
 37558                           wreg	equ	0xFE8
 37559                           indf1	equ	0xFE7
 37560                           postdec1	equ	0xFE5
 37561                           fsr1h	equ	0xFE2
 37562                           fsr1l	equ	0xFE1
 37563                           indf2	equ	0xFDF
 37564                           postinc2	equ	0xFDE
 37565                           postdec2	equ	0xFDD
 37566                           plusw2	equ	0xFDB
 37567                           fsr2h	equ	0xFDA
 37568                           fsr2l	equ	0xFD9
 37569                           status	equ	0xFD8
 37570                           
 37571 ;; *************** function ___lldiv *****************
 37572 ;; Defined at:
 37573 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 37574 ;; Parameters:    Size  Location     Type
 37575 ;;  dividend        4    0[BANK0 ] unsigned long 
 37576 ;;  divisor         4    4[BANK0 ] unsigned long 
 37577 ;; Auto vars:     Size  Location     Type
 37578 ;;  quotient        4    8[BANK0 ] unsigned long 
 37579 ;;  counter         1   12[BANK0 ] unsigned char 
 37580 ;; Return value:  Size  Location     Type
 37581 ;;                  4    0[BANK0 ] unsigned long 
 37582 ;; Registers used:
 37583 ;;		wreg, status,2, status,0
 37584 ;; Tracked objects:
 37585 ;;		On entry : 0/0
 37586 ;;		On exit  : 0/0
 37587 ;;		Unchanged: 0/0
 37588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37589 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37590 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37592 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37593 ;;Total ram usage:       13 bytes
 37594 ;; Hardware stack levels used:    1
 37595 ;; Hardware stack levels required when called:    5
 37596 ;; This function calls:
 37597 ;;		Nothing
 37598 ;; This function is called by:
 37599 ;;		_InitUART
 37600 ;;		_sprintf
 37601 ;; This function uses a non-reentrant model
 37602 ;;
 37603                           
 37604                           	psect	text87
 37605  009554                     __ptext87:
 37606                           	opt stack 0
 37607  009554                     ___lldiv:
 37608                           	opt stack 24
 37609                           
 37610                           ; BSR set to: 0
 37611                           ;incstack = 0
 37612  009554  0E00               	movlw	0
 37613  009556  0100               	movlb	0	; () banked
 37614  009558  6F68               	movwf	___lldiv@quotient& (0+255),b
 37615  00955A  0E00               	movlw	0
 37616  00955C  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 37617  00955E  0E00               	movlw	0
 37618  009560  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 37619  009562  0E00               	movlw	0
 37620  009564  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 37621                           
 37622                           ; BSR set to: 0
 37623  009566  0100               	movlb	0	; () banked
 37624  009568  5164               	movf	___lldiv@divisor& (0+255),w,b
 37625  00956A  0100               	movlb	0	; () banked
 37626  00956C  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 37627  00956E  0100               	movlb	0	; () banked
 37628  009570  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 37629  009572  0100               	movlb	0	; () banked
 37630  009574  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 37631  009576  B4D8               	btfsc	status,2,c
 37632  009578  D047               	goto	l3122
 37633                           
 37634                           ; BSR set to: 0
 37635  00957A  0E01               	movlw	1
 37636  00957C  0100               	movlb	0	; () banked
 37637  00957E  6F6C               	movwf	___lldiv@counter& (0+255),b
 37638  009580  D009               	goto	l9580
 37639  009582                     l9578:
 37640                           
 37641                           ; BSR set to: 0
 37642  009582  0100               	movlb	0	; () banked
 37643  009584  90D8               	bcf	status,0,c
 37644  009586  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 37645  009588  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 37646  00958A  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 37647  00958C  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 37648  00958E  0100               	movlb	0	; () banked
 37649  009590  2B6C               	incf	___lldiv@counter& (0+255),f,b
 37650  009592  D000               	goto	l9580
 37651  009594                     l9580:
 37652                           
 37653                           ; BSR set to: 0
 37654  009594  0100               	movlb	0	; () banked
 37655  009596  BF67               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 37656  009598  D002               	goto	l9582
 37657  00959A  D7F3               	goto	l9578
 37658                           
 37659                           ; BSR set to: 0
 37660  00959C  D000               	goto	l9582
 37661  00959E                     l9582:
 37662                           
 37663                           ; BSR set to: 0
 37664  00959E  0100               	movlb	0	; () banked
 37665  0095A0  90D8               	bcf	status,0,c
 37666  0095A2  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 37667  0095A4  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 37668  0095A6  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 37669  0095A8  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 37670                           
 37671                           ; BSR set to: 0
 37672  0095AA  0100               	movlb	0	; () banked
 37673  0095AC  5164               	movf	___lldiv@divisor& (0+255),w,b
 37674  0095AE  0100               	movlb	0	; () banked
 37675  0095B0  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 37676  0095B2  0100               	movlb	0	; () banked
 37677  0095B4  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 37678  0095B6  0100               	movlb	0	; () banked
 37679  0095B8  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 37680  0095BA  0100               	movlb	0	; () banked
 37681  0095BC  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 37682  0095BE  0100               	movlb	0	; () banked
 37683  0095C0  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 37684  0095C2  0100               	movlb	0	; () banked
 37685  0095C4  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 37686  0095C6  0100               	movlb	0	; () banked
 37687  0095C8  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 37688  0095CA  A0D8               	btfss	status,0,c
 37689  0095CC  D013               	goto	l9590
 37690                           
 37691                           ; BSR set to: 0
 37692  0095CE  0100               	movlb	0	; () banked
 37693  0095D0  5164               	movf	___lldiv@divisor& (0+255),w,b
 37694  0095D2  0100               	movlb	0	; () banked
 37695  0095D4  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 37696  0095D6  0100               	movlb	0	; () banked
 37697  0095D8  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 37698  0095DA  0100               	movlb	0	; () banked
 37699  0095DC  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 37700  0095DE  0100               	movlb	0	; () banked
 37701  0095E0  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 37702  0095E2  0100               	movlb	0	; () banked
 37703  0095E4  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 37704  0095E6  0100               	movlb	0	; () banked
 37705  0095E8  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 37706  0095EA  0100               	movlb	0	; () banked
 37707  0095EC  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 37708                           
 37709                           ; BSR set to: 0
 37710  0095EE  0100               	movlb	0	; () banked
 37711  0095F0  8168               	bsf	___lldiv@quotient& (0+255),0,b
 37712  0095F2  D000               	goto	l9590
 37713  0095F4                     l9590:
 37714                           
 37715                           ; BSR set to: 0
 37716  0095F4  0100               	movlb	0	; () banked
 37717  0095F6  90D8               	bcf	status,0,c
 37718  0095F8  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 37719  0095FA  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 37720  0095FC  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 37721  0095FE  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 37722                           
 37723                           ; BSR set to: 0
 37724  009600  0100               	movlb	0	; () banked
 37725  009602  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 37726  009604  D7CC               	goto	l9582
 37727  009606  D000               	goto	l3122
 37728  009608                     l3122:
 37729                           
 37730                           ; BSR set to: 0
 37731  009608  C068  F060         	movff	___lldiv@quotient,?___lldiv
 37732  00960C  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 37733  009610  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 37734  009614  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 37735                           
 37736                           ; BSR set to: 0
 37737  009618  0012               	return		;funcret
 37738  00961A                     __end_of___lldiv:
 37739                           	opt stack 0
 37740                           tblptru	equ	0xFF8
 37741                           tblptrh	equ	0xFF7
 37742                           tblptrl	equ	0xFF6
 37743                           tablat	equ	0xFF5
 37744                           prodh	equ	0xFF4
 37745                           prodl	equ	0xFF3
 37746                           intcon	equ	0xFF2
 37747                           intcon2	equ	0xFF1
 37748                           indf0	equ	0xFEF
 37749                           postinc0	equ	0xFEE
 37750                           plusw0	equ	0xFEB
 37751                           fsr0h	equ	0xFEA
 37752                           fsr0l	equ	0xFE9
 37753                           wreg	equ	0xFE8
 37754                           indf1	equ	0xFE7
 37755                           postdec1	equ	0xFE5
 37756                           fsr1h	equ	0xFE2
 37757                           fsr1l	equ	0xFE1
 37758                           indf2	equ	0xFDF
 37759                           postinc2	equ	0xFDE
 37760                           postdec2	equ	0xFDD
 37761                           plusw2	equ	0xFDB
 37762                           fsr2h	equ	0xFDA
 37763                           fsr2l	equ	0xFD9
 37764                           status	equ	0xFD8
 37765                           
 37766 ;; *************** function ___fttol *****************
 37767 ;; Defined at:
 37768 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 37769 ;; Parameters:    Size  Location     Type
 37770 ;;  f1              3   63[BANK0 ] float 
 37771 ;; Auto vars:     Size  Location     Type
 37772 ;;  lval            4   73[BANK0 ] unsigned long 
 37773 ;;  exp1            1   77[BANK0 ] unsigned char 
 37774 ;;  sign1           1   72[BANK0 ] unsigned char 
 37775 ;; Return value:  Size  Location     Type
 37776 ;;                  4   63[BANK0 ] long 
 37777 ;; Registers used:
 37778 ;;		wreg, status,2, status,0
 37779 ;; Tracked objects:
 37780 ;;		On entry : 0/0
 37781 ;;		On exit  : 0/0
 37782 ;;		Unchanged: 0/0
 37783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37784 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37785 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37786 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37787 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37788 ;;Total ram usage:       15 bytes
 37789 ;; Hardware stack levels used:    1
 37790 ;; Hardware stack levels required when called:    5
 37791 ;; This function calls:
 37792 ;;		Nothing
 37793 ;; This function is called by:
 37794 ;;		_Round
 37795 ;;		_InitUART
 37796 ;;		_sprintf
 37797 ;; This function uses a non-reentrant model
 37798 ;;
 37799                           
 37800                           	psect	text88
 37801  0082D4                     __ptext88:
 37802                           	opt stack 0
 37803  0082D4                     ___fttol:
 37804                           	opt stack 24
 37805                           
 37806                           ; BSR set to: 0
 37807                           ;incstack = 0
 37808  0082D4  C0A1  F0A3         	movff	___fttol@f1+2,??___fttol
 37809  0082D8  0100               	movlb	0	; () banked
 37810  0082DA  6BA4               	clrf	(??___fttol+1)& (0+255),b
 37811  0082DC  6BA5               	clrf	(??___fttol+2)& (0+255),b
 37812  0082DE  0100               	movlb	0	; () banked
 37813  0082E0  35A0               	rlcf	(___fttol@f1+1)& (0+255),w,b
 37814  0082E2  0100               	movlb	0	; () banked
 37815  0082E4  37A3               	rlcf	??___fttol& (0+255),f,b
 37816  0082E6  E301               	bnc	u9451
 37817  0082E8  81A4               	bsf	(??___fttol+1)& (0+255),0,b
 37818  0082EA                     u9451:
 37819  0082EA  0100               	movlb	0	; () banked
 37820  0082EC  51A3               	movf	??___fttol& (0+255),w,b
 37821  0082EE  0100               	movlb	0	; () banked
 37822  0082F0  6FAD               	movwf	___fttol@exp1& (0+255),b
 37823  0082F2  0100               	movlb	0	; () banked
 37824  0082F4  51AD               	movf	___fttol@exp1& (0+255),w,b
 37825  0082F6  A4D8               	btfss	status,2,c
 37826  0082F8  D00A               	goto	l9532
 37827                           
 37828                           ; BSR set to: 0
 37829  0082FA  0E00               	movlw	0
 37830  0082FC  0100               	movlb	0	; () banked
 37831  0082FE  6F9F               	movwf	?___fttol& (0+255),b
 37832  008300  0E00               	movlw	0
 37833  008302  6FA0               	movwf	(?___fttol+1)& (0+255),b
 37834  008304  0E00               	movlw	0
 37835  008306  6FA1               	movwf	(?___fttol+2)& (0+255),b
 37836  008308  0E00               	movlw	0
 37837  00830A  6FA2               	movwf	(?___fttol+3)& (0+255),b
 37838                           
 37839                           ; BSR set to: 0
 37840  00830C  0012               	return	
 37841  00830E                     l9532:
 37842                           
 37843                           ; BSR set to: 0
 37844  00830E  0E17               	movlw	23
 37845  008310  0100               	movlb	0	; () banked
 37846  008312  6FA3               	movwf	??___fttol& (0+255),b
 37847  008314  C09F  F0A4         	movff	___fttol@f1,??___fttol+1
 37848  008318  C0A0  F0A5         	movff	___fttol@f1+1,??___fttol+2
 37849  00831C  C0A1  F0A6         	movff	___fttol@f1+2,??___fttol+3
 37850  008320  0100               	movlb	0	; () banked
 37851  008322  29A3               	incf	??___fttol& (0+255),w,b
 37852  008324  0100               	movlb	0	; () banked
 37853  008326  6FA7               	movwf	(??___fttol+4)& (0+255),b
 37854  008328  D005               	goto	u9470
 37855  00832A                     u9475:
 37856  00832A  0100               	movlb	0	; () banked
 37857  00832C  90D8               	bcf	status,0,c
 37858  00832E  33A6               	rrcf	(??___fttol+3)& (0+255),f,b
 37859  008330  33A5               	rrcf	(??___fttol+2)& (0+255),f,b
 37860  008332  33A4               	rrcf	(??___fttol+1)& (0+255),f,b
 37861  008334                     u9470:
 37862  008334  0100               	movlb	0	; () banked
 37863  008336  2FA7               	decfsz	(??___fttol+4)& (0+255),f,b
 37864  008338  D7F8               	goto	u9475
 37865  00833A  0100               	movlb	0	; () banked
 37866  00833C  51A4               	movf	(??___fttol+1)& (0+255),w,b
 37867  00833E  0100               	movlb	0	; () banked
 37868  008340  6FA8               	movwf	___fttol@sign1& (0+255),b
 37869                           
 37870                           ; BSR set to: 0
 37871  008342  0100               	movlb	0	; () banked
 37872  008344  8FA0               	bsf	(___fttol@f1+1)& (0+255),7,b
 37873                           
 37874                           ; BSR set to: 0
 37875  008346  0EFF               	movlw	255
 37876  008348  0100               	movlb	0	; () banked
 37877  00834A  179F               	andwf	___fttol@f1& (0+255),f,b
 37878  00834C  0EFF               	movlw	255
 37879  00834E  0100               	movlb	0	; () banked
 37880  008350  17A0               	andwf	(___fttol@f1+1)& (0+255),f,b
 37881  008352  0E00               	movlw	0
 37882  008354  0100               	movlb	0	; () banked
 37883  008356  17A1               	andwf	(___fttol@f1+2)& (0+255),f,b
 37884                           
 37885                           ; BSR set to: 0
 37886  008358  0100               	movlb	0	; () banked
 37887  00835A  519F               	movf	___fttol@f1& (0+255),w,b
 37888  00835C  0100               	movlb	0	; () banked
 37889  00835E  6FA9               	movwf	___fttol@lval& (0+255),b
 37890  008360  0100               	movlb	0	; () banked
 37891  008362  51A0               	movf	(___fttol@f1+1)& (0+255),w,b
 37892  008364  0100               	movlb	0	; () banked
 37893  008366  6FAA               	movwf	(___fttol@lval+1)& (0+255),b
 37894  008368  0100               	movlb	0	; () banked
 37895  00836A  51A1               	movf	(___fttol@f1+2)& (0+255),w,b
 37896  00836C  0100               	movlb	0	; () banked
 37897  00836E  6FAB               	movwf	(___fttol@lval+2)& (0+255),b
 37898  008370  0100               	movlb	0	; () banked
 37899  008372  6BAC               	clrf	(___fttol@lval+3)& (0+255),b
 37900                           
 37901                           ; BSR set to: 0
 37902  008374  0E8E               	movlw	142
 37903  008376  0100               	movlb	0	; () banked
 37904  008378  5FAD               	subwf	___fttol@exp1& (0+255),f,b
 37905                           
 37906                           ; BSR set to: 0
 37907  00837A  0100               	movlb	0	; () banked
 37908  00837C  AFAD               	btfss	___fttol@exp1& (0+255),7,b
 37909  00837E  D01B               	goto	l9554
 37910                           
 37911                           ; BSR set to: 0
 37912  008380  0100               	movlb	0	; () banked
 37913  008382  51AD               	movf	___fttol@exp1& (0+255),w,b
 37914  008384  0A80               	xorlw	128
 37915  008386  0F8F               	addlw	143
 37916  008388  B0D8               	btfsc	status,0,c
 37917  00838A  D00B               	goto	l9550
 37918                           
 37919                           ; BSR set to: 0
 37920  00838C  0E00               	movlw	0
 37921  00838E  0100               	movlb	0	; () banked
 37922  008390  6F9F               	movwf	?___fttol& (0+255),b
 37923  008392  0E00               	movlw	0
 37924  008394  6FA0               	movwf	(?___fttol+1)& (0+255),b
 37925  008396  0E00               	movlw	0
 37926  008398  6FA1               	movwf	(?___fttol+2)& (0+255),b
 37927  00839A  0E00               	movlw	0
 37928  00839C  6FA2               	movwf	(?___fttol+3)& (0+255),b
 37929                           
 37930                           ; BSR set to: 0
 37931  00839E  0012               	return	
 37932                           
 37933                           ; BSR set to: 0
 37934  0083A0  D000               	goto	l9550
 37935  0083A2                     l9550:
 37936                           
 37937                           ; BSR set to: 0
 37938  0083A2  0100               	movlb	0	; () banked
 37939  0083A4  90D8               	bcf	status,0,c
 37940  0083A6  33AC               	rrcf	(___fttol@lval+3)& (0+255),f,b
 37941  0083A8  33AB               	rrcf	(___fttol@lval+2)& (0+255),f,b
 37942  0083AA  33AA               	rrcf	(___fttol@lval+1)& (0+255),f,b
 37943  0083AC  33A9               	rrcf	___fttol@lval& (0+255),f,b
 37944                           
 37945                           ; BSR set to: 0
 37946  0083AE  0100               	movlb	0	; () banked
 37947  0083B0  3FAD               	incfsz	___fttol@exp1& (0+255),f,b
 37948  0083B2  D7F7               	goto	l9550
 37949                           
 37950                           ; BSR set to: 0
 37951  0083B4  D01F               	goto	l9564
 37952  0083B6                     l9554:
 37953                           
 37954                           ; BSR set to: 0
 37955  0083B6  0E17               	movlw	23
 37956  0083B8  0100               	movlb	0	; () banked
 37957  0083BA  65AD               	cpfsgt	___fttol@exp1& (0+255),b
 37958  0083BC  D014               	goto	l9562
 37959                           
 37960                           ; BSR set to: 0
 37961  0083BE  0E00               	movlw	0
 37962  0083C0  0100               	movlb	0	; () banked
 37963  0083C2  6F9F               	movwf	?___fttol& (0+255),b
 37964  0083C4  0E00               	movlw	0
 37965  0083C6  6FA0               	movwf	(?___fttol+1)& (0+255),b
 37966  0083C8  0E00               	movlw	0
 37967  0083CA  6FA1               	movwf	(?___fttol+2)& (0+255),b
 37968  0083CC  0E00               	movlw	0
 37969  0083CE  6FA2               	movwf	(?___fttol+3)& (0+255),b
 37970                           
 37971                           ; BSR set to: 0
 37972  0083D0  0012               	return	
 37973                           
 37974                           ; BSR set to: 0
 37975  0083D2  D009               	goto	l9562
 37976  0083D4                     l9560:
 37977                           
 37978                           ; BSR set to: 0
 37979  0083D4  0100               	movlb	0	; () banked
 37980  0083D6  90D8               	bcf	status,0,c
 37981  0083D8  37A9               	rlcf	___fttol@lval& (0+255),f,b
 37982  0083DA  37AA               	rlcf	(___fttol@lval+1)& (0+255),f,b
 37983  0083DC  37AB               	rlcf	(___fttol@lval+2)& (0+255),f,b
 37984  0083DE  37AC               	rlcf	(___fttol@lval+3)& (0+255),f,b
 37985  0083E0  0100               	movlb	0	; () banked
 37986  0083E2  07AD               	decf	___fttol@exp1& (0+255),f,b
 37987  0083E4  D000               	goto	l9562
 37988  0083E6                     l9562:
 37989                           
 37990                           ; BSR set to: 0
 37991  0083E6  0100               	movlb	0	; () banked
 37992  0083E8  51AD               	movf	___fttol@exp1& (0+255),w,b
 37993  0083EA  0100               	movlb	0	; () banked
 37994  0083EC  B4D8               	btfsc	status,2,c
 37995  0083EE  D002               	goto	l9564
 37996  0083F0  D7F1               	goto	l9560
 37997                           
 37998                           ; BSR set to: 0
 37999  0083F2  D000               	goto	l9564
 38000  0083F4                     l9564:
 38001                           
 38002                           ; BSR set to: 0
 38003  0083F4  0100               	movlb	0	; () banked
 38004  0083F6  51A8               	movf	___fttol@sign1& (0+255),w,b
 38005  0083F8  0100               	movlb	0	; () banked
 38006  0083FA  B4D8               	btfsc	status,2,c
 38007  0083FC  D00A               	goto	l9568
 38008                           
 38009                           ; BSR set to: 0
 38010  0083FE  0100               	movlb	0	; () banked
 38011  008400  1FAC               	comf	(___fttol@lval+3)& (0+255),f,b
 38012  008402  1FAB               	comf	(___fttol@lval+2)& (0+255),f,b
 38013  008404  1FAA               	comf	(___fttol@lval+1)& (0+255),f,b
 38014  008406  6DA9               	negf	___fttol@lval& (0+255),b
 38015  008408  0E00               	movlw	0
 38016  00840A  23AA               	addwfc	(___fttol@lval+1)& (0+255),f,b
 38017  00840C  23AB               	addwfc	(___fttol@lval+2)& (0+255),f,b
 38018  00840E  23AC               	addwfc	(___fttol@lval+3)& (0+255),f,b
 38019  008410  D000               	goto	l9568
 38020  008412                     l9568:
 38021                           
 38022                           ; BSR set to: 0
 38023  008412  C0A9  F09F         	movff	___fttol@lval,?___fttol
 38024  008416  C0AA  F0A0         	movff	___fttol@lval+1,?___fttol+1
 38025  00841A  C0AB  F0A1         	movff	___fttol@lval+2,?___fttol+2
 38026  00841E  C0AC  F0A2         	movff	___fttol@lval+3,?___fttol+3
 38027  008422  0012               	return	
 38028                           
 38029                           ; BSR set to: 0
 38030                           
 38031                           ; BSR set to: 0
 38032  008424  0012               	return		;funcret
 38033  008426                     __end_of___fttol:
 38034                           	opt stack 0
 38035                           tblptru	equ	0xFF8
 38036                           tblptrh	equ	0xFF7
 38037                           tblptrl	equ	0xFF6
 38038                           tablat	equ	0xFF5
 38039                           prodh	equ	0xFF4
 38040                           prodl	equ	0xFF3
 38041                           intcon	equ	0xFF2
 38042                           intcon2	equ	0xFF1
 38043                           indf0	equ	0xFEF
 38044                           postinc0	equ	0xFEE
 38045                           plusw0	equ	0xFEB
 38046                           fsr0h	equ	0xFEA
 38047                           fsr0l	equ	0xFE9
 38048                           wreg	equ	0xFE8
 38049                           indf1	equ	0xFE7
 38050                           postdec1	equ	0xFE5
 38051                           fsr1h	equ	0xFE2
 38052                           fsr1l	equ	0xFE1
 38053                           indf2	equ	0xFDF
 38054                           postinc2	equ	0xFDE
 38055                           postdec2	equ	0xFDD
 38056                           plusw2	equ	0xFDB
 38057                           fsr2h	equ	0xFDA
 38058                           fsr2l	equ	0xFD9
 38059                           status	equ	0xFD8
 38060                           
 38061 ;; *************** function ___ftsub *****************
 38062 ;; Defined at:
 38063 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
 38064 ;; Parameters:    Size  Location     Type
 38065 ;;  f1              3   63[BANK0 ] float 
 38066 ;;  f2              3   66[BANK0 ] float 
 38067 ;; Auto vars:     Size  Location     Type
 38068 ;;		None
 38069 ;; Return value:  Size  Location     Type
 38070 ;;                  3   63[BANK0 ] float 
 38071 ;; Registers used:
 38072 ;;		wreg, status,2, status,0, cstack
 38073 ;; Tracked objects:
 38074 ;;		On entry : 0/0
 38075 ;;		On exit  : 0/0
 38076 ;;		Unchanged: 0/0
 38077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38078 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38081 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38082 ;;Total ram usage:        6 bytes
 38083 ;; Hardware stack levels used:    1
 38084 ;; Hardware stack levels required when called:    7
 38085 ;; This function calls:
 38086 ;;		___ftadd
 38087 ;; This function is called by:
 38088 ;;		_main
 38089 ;;		_sprintf
 38090 ;; This function uses a non-reentrant model
 38091 ;;
 38092                           
 38093                           	psect	text89
 38094  00A328                     __ptext89:
 38095                           	opt stack 0
 38096  00A328                     ___ftsub:
 38097                           	opt stack 22
 38098                           
 38099                           ; BSR set to: 0
 38100                           ;incstack = 0
 38101  00A328  0100               	movlb	0	; () banked
 38102  00A32A  51A2               	movf	___ftsub@f2& (0+255),w,b
 38103  00A32C  0100               	movlb	0	; () banked
 38104  00A32E  11A3               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 38105  00A330  0100               	movlb	0	; () banked
 38106  00A332  11A4               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 38107  00A334  B4D8               	btfsc	status,2,c
 38108  00A336  D00A               	goto	l9500
 38109                           
 38110                           ; BSR set to: 0
 38111  00A338  0E00               	movlw	0
 38112  00A33A  0100               	movlb	0	; () banked
 38113  00A33C  1BA2               	xorwf	___ftsub@f2& (0+255),f,b
 38114  00A33E  0E00               	movlw	0
 38115  00A340  0100               	movlb	0	; () banked
 38116  00A342  1BA3               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 38117  00A344  0E80               	movlw	128
 38118  00A346  0100               	movlb	0	; () banked
 38119  00A348  1BA4               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 38120  00A34A  D000               	goto	l9500
 38121  00A34C                     l9500:
 38122                           
 38123                           ; BSR set to: 0
 38124  00A34C  C09F  F093         	movff	___ftsub@f1,___ftadd@f1
 38125  00A350  C0A0  F094         	movff	___ftsub@f1+1,___ftadd@f1+1
 38126  00A354  C0A1  F095         	movff	___ftsub@f1+2,___ftadd@f1+2
 38127  00A358  C0A2  F096         	movff	___ftsub@f2,___ftadd@f2
 38128  00A35C  C0A3  F097         	movff	___ftsub@f2+1,___ftadd@f2+1
 38129  00A360  C0A4  F098         	movff	___ftsub@f2+2,___ftadd@f2+2
 38130  00A364  EC1D  F037         	call	___ftadd	;wreg free
 38131  00A368  C093  F09F         	movff	?___ftadd,?___ftsub
 38132  00A36C  C094  F0A0         	movff	?___ftadd+1,?___ftsub+1
 38133  00A370  C095  F0A1         	movff	?___ftadd+2,?___ftsub+2
 38134  00A374  0012               	return	
 38135  00A376  0012               	return		;funcret
 38136  00A378                     __end_of___ftsub:
 38137                           	opt stack 0
 38138                           tblptru	equ	0xFF8
 38139                           tblptrh	equ	0xFF7
 38140                           tblptrl	equ	0xFF6
 38141                           tablat	equ	0xFF5
 38142                           prodh	equ	0xFF4
 38143                           prodl	equ	0xFF3
 38144                           intcon	equ	0xFF2
 38145                           intcon2	equ	0xFF1
 38146                           indf0	equ	0xFEF
 38147                           postinc0	equ	0xFEE
 38148                           plusw0	equ	0xFEB
 38149                           fsr0h	equ	0xFEA
 38150                           fsr0l	equ	0xFE9
 38151                           wreg	equ	0xFE8
 38152                           indf1	equ	0xFE7
 38153                           postdec1	equ	0xFE5
 38154                           fsr1h	equ	0xFE2
 38155                           fsr1l	equ	0xFE1
 38156                           indf2	equ	0xFDF
 38157                           postinc2	equ	0xFDE
 38158                           postdec2	equ	0xFDD
 38159                           plusw2	equ	0xFDB
 38160                           fsr2h	equ	0xFDA
 38161                           fsr2l	equ	0xFD9
 38162                           status	equ	0xFD8
 38163                           
 38164 ;; *************** function ___ftadd *****************
 38165 ;; Defined at:
 38166 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
 38167 ;; Parameters:    Size  Location     Type
 38168 ;;  f1              3   51[BANK0 ] float 
 38169 ;;  f2              3   54[BANK0 ] float 
 38170 ;; Auto vars:     Size  Location     Type
 38171 ;;  exp1            1   62[BANK0 ] unsigned char 
 38172 ;;  exp2            1   61[BANK0 ] unsigned char 
 38173 ;;  sign            1   60[BANK0 ] unsigned char 
 38174 ;; Return value:  Size  Location     Type
 38175 ;;                  3   51[BANK0 ] float 
 38176 ;; Registers used:
 38177 ;;		wreg, status,2, status,0, cstack
 38178 ;; Tracked objects:
 38179 ;;		On entry : 0/0
 38180 ;;		On exit  : 0/0
 38181 ;;		Unchanged: 0/0
 38182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38183 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38184 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38185 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38186 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38187 ;;Total ram usage:       12 bytes
 38188 ;; Hardware stack levels used:    1
 38189 ;; Hardware stack levels required when called:    6
 38190 ;; This function calls:
 38191 ;;		___ftpack
 38192 ;; This function is called by:
 38193 ;;		_main
 38194 ;;		_Round
 38195 ;;		_sprintf
 38196 ;;		___ftsub
 38197 ;; This function uses a non-reentrant model
 38198 ;;
 38199                           
 38200                           	psect	text90
 38201  006E3A                     __ptext90:
 38202                           	opt stack 0
 38203  006E3A                     ___ftadd:
 38204                           	opt stack 22
 38205                           
 38206                           ;incstack = 0
 38207  006E3A  C095  F099         	movff	___ftadd@f1+2,??___ftadd
 38208  006E3E  0100               	movlb	0	; () banked
 38209  006E40  6B9A               	clrf	(??___ftadd+1)& (0+255),b
 38210  006E42  6B9B               	clrf	(??___ftadd+2)& (0+255),b
 38211  006E44  0100               	movlb	0	; () banked
 38212  006E46  3594               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 38213  006E48  0100               	movlb	0	; () banked
 38214  006E4A  3799               	rlcf	??___ftadd& (0+255),f,b
 38215  006E4C  E301               	bnc	u8691
 38216  006E4E  819A               	bsf	(??___ftadd+1)& (0+255),0,b
 38217  006E50                     u8691:
 38218  006E50  0100               	movlb	0	; () banked
 38219  006E52  5199               	movf	??___ftadd& (0+255),w,b
 38220  006E54  0100               	movlb	0	; () banked
 38221  006E56  6F9E               	movwf	___ftadd@exp1& (0+255),b
 38222  006E58  C098  F099         	movff	___ftadd@f2+2,??___ftadd
 38223  006E5C  0100               	movlb	0	; () banked
 38224  006E5E  6B9A               	clrf	(??___ftadd+1)& (0+255),b
 38225  006E60  6B9B               	clrf	(??___ftadd+2)& (0+255),b
 38226  006E62  0100               	movlb	0	; () banked
 38227  006E64  3597               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 38228  006E66  0100               	movlb	0	; () banked
 38229  006E68  3799               	rlcf	??___ftadd& (0+255),f,b
 38230  006E6A  E301               	bnc	u8701
 38231  006E6C  819A               	bsf	(??___ftadd+1)& (0+255),0,b
 38232  006E6E                     u8701:
 38233  006E6E  0100               	movlb	0	; () banked
 38234  006E70  5199               	movf	??___ftadd& (0+255),w,b
 38235  006E72  0100               	movlb	0	; () banked
 38236  006E74  6F9D               	movwf	___ftadd@exp2& (0+255),b
 38237                           
 38238                           ; BSR set to: 0
 38239  006E76  0100               	movlb	0	; () banked
 38240  006E78  519E               	movf	___ftadd@exp1& (0+255),w,b
 38241  006E7A  0100               	movlb	0	; () banked
 38242  006E7C  B4D8               	btfsc	status,2,c
 38243  006E7E  D011               	goto	l2993
 38244                           
 38245                           ; BSR set to: 0
 38246  006E80  0100               	movlb	0	; () banked
 38247  006E82  519D               	movf	___ftadd@exp2& (0+255),w,b
 38248  006E84  0100               	movlb	0	; () banked
 38249  006E86  5D9E               	subwf	___ftadd@exp1& (0+255),w,b
 38250  006E88  B0D8               	btfsc	status,0,c
 38251  006E8A  D012               	goto	l9042
 38252                           
 38253                           ; BSR set to: 0
 38254  006E8C  0100               	movlb	0	; () banked
 38255  006E8E  519E               	movf	___ftadd@exp1& (0+255),w,b
 38256  006E90  0800               	sublw	0
 38257  006E92  0100               	movlb	0	; () banked
 38258  006E94  259D               	addwf	___ftadd@exp2& (0+255),w,b
 38259  006E96  0100               	movlb	0	; () banked
 38260  006E98  6F99               	movwf	??___ftadd& (0+255),b
 38261  006E9A  0E18               	movlw	24
 38262  006E9C  0100               	movlb	0	; () banked
 38263  006E9E  6599               	cpfsgt	??___ftadd& (0+255),b
 38264  006EA0  D007               	goto	l9042
 38265  006EA2                     l2993:
 38266                           
 38267                           ; BSR set to: 0
 38268  006EA2  C096  F093         	movff	___ftadd@f2,?___ftadd
 38269  006EA6  C097  F094         	movff	___ftadd@f2+1,?___ftadd+1
 38270  006EAA  C098  F095         	movff	___ftadd@f2+2,?___ftadd+2
 38271  006EAE  0012               	return	
 38272  006EB0                     l9042:
 38273                           
 38274                           ; BSR set to: 0
 38275  006EB0  0100               	movlb	0	; () banked
 38276  006EB2  519D               	movf	___ftadd@exp2& (0+255),w,b
 38277  006EB4  0100               	movlb	0	; () banked
 38278  006EB6  B4D8               	btfsc	status,2,c
 38279  006EB8  D011               	goto	l2997
 38280                           
 38281                           ; BSR set to: 0
 38282  006EBA  0100               	movlb	0	; () banked
 38283  006EBC  519E               	movf	___ftadd@exp1& (0+255),w,b
 38284  006EBE  0100               	movlb	0	; () banked
 38285  006EC0  5D9D               	subwf	___ftadd@exp2& (0+255),w,b
 38286  006EC2  B0D8               	btfsc	status,0,c
 38287  006EC4  D012               	goto	l9048
 38288                           
 38289                           ; BSR set to: 0
 38290  006EC6  0100               	movlb	0	; () banked
 38291  006EC8  519D               	movf	___ftadd@exp2& (0+255),w,b
 38292  006ECA  0800               	sublw	0
 38293  006ECC  0100               	movlb	0	; () banked
 38294  006ECE  259E               	addwf	___ftadd@exp1& (0+255),w,b
 38295  006ED0  0100               	movlb	0	; () banked
 38296  006ED2  6F99               	movwf	??___ftadd& (0+255),b
 38297  006ED4  0E18               	movlw	24
 38298  006ED6  0100               	movlb	0	; () banked
 38299  006ED8  6599               	cpfsgt	??___ftadd& (0+255),b
 38300  006EDA  D007               	goto	l9048
 38301  006EDC                     l2997:
 38302                           
 38303                           ; BSR set to: 0
 38304  006EDC  C093  F093         	movff	___ftadd@f1,?___ftadd
 38305  006EE0  C094  F094         	movff	___ftadd@f1+1,?___ftadd+1
 38306  006EE4  C095  F095         	movff	___ftadd@f1+2,?___ftadd+2
 38307  006EE8  0012               	return	
 38308  006EEA                     l9048:
 38309                           
 38310                           ; BSR set to: 0
 38311  006EEA  0E06               	movlw	6
 38312  006EEC  0100               	movlb	0	; () banked
 38313  006EEE  6F9C               	movwf	___ftadd@sign& (0+255),b
 38314                           
 38315                           ; BSR set to: 0
 38316  006EF0  0100               	movlb	0	; () banked
 38317  006EF2  AF95               	btfss	(___ftadd@f1+2)& (0+255),7,b
 38318  006EF4  D003               	goto	l9054
 38319                           
 38320                           ; BSR set to: 0
 38321  006EF6  0100               	movlb	0	; () banked
 38322  006EF8  8F9C               	bsf	___ftadd@sign& (0+255),7,b
 38323  006EFA  D000               	goto	l9054
 38324  006EFC                     l9054:
 38325                           
 38326                           ; BSR set to: 0
 38327  006EFC  0100               	movlb	0	; () banked
 38328  006EFE  AF98               	btfss	(___ftadd@f2+2)& (0+255),7,b
 38329  006F00  D002               	goto	l2999
 38330                           
 38331                           ; BSR set to: 0
 38332  006F02  0100               	movlb	0	; () banked
 38333  006F04  8D9C               	bsf	___ftadd@sign& (0+255),6,b
 38334  006F06                     l2999:
 38335                           
 38336                           ; BSR set to: 0
 38337  006F06  0100               	movlb	0	; () banked
 38338  006F08  8F94               	bsf	(___ftadd@f1+1)& (0+255),7,b
 38339                           
 38340                           ; BSR set to: 0
 38341  006F0A  0EFF               	movlw	255
 38342  006F0C  0100               	movlb	0	; () banked
 38343  006F0E  1793               	andwf	___ftadd@f1& (0+255),f,b
 38344  006F10  0EFF               	movlw	255
 38345  006F12  0100               	movlb	0	; () banked
 38346  006F14  1794               	andwf	(___ftadd@f1+1)& (0+255),f,b
 38347  006F16  0E00               	movlw	0
 38348  006F18  0100               	movlb	0	; () banked
 38349  006F1A  1795               	andwf	(___ftadd@f1+2)& (0+255),f,b
 38350  006F1C  0100               	movlb	0	; () banked
 38351  006F1E  8F97               	bsf	(___ftadd@f2+1)& (0+255),7,b
 38352                           
 38353                           ; BSR set to: 0
 38354  006F20  0EFF               	movlw	255
 38355  006F22  0100               	movlb	0	; () banked
 38356  006F24  1796               	andwf	___ftadd@f2& (0+255),f,b
 38357  006F26  0EFF               	movlw	255
 38358  006F28  0100               	movlb	0	; () banked
 38359  006F2A  1797               	andwf	(___ftadd@f2+1)& (0+255),f,b
 38360  006F2C  0E00               	movlw	0
 38361  006F2E  0100               	movlb	0	; () banked
 38362  006F30  1798               	andwf	(___ftadd@f2+2)& (0+255),f,b
 38363                           
 38364                           ; BSR set to: 0
 38365  006F32  0100               	movlb	0	; () banked
 38366  006F34  519D               	movf	___ftadd@exp2& (0+255),w,b
 38367  006F36  0100               	movlb	0	; () banked
 38368  006F38  5D9E               	subwf	___ftadd@exp1& (0+255),w,b
 38369  006F3A  B0D8               	btfsc	status,0,c
 38370  006F3C  D028               	goto	l9074
 38371  006F3E                     l9064:
 38372                           
 38373                           ; BSR set to: 0
 38374  006F3E  0100               	movlb	0	; () banked
 38375  006F40  90D8               	bcf	status,0,c
 38376  006F42  3796               	rlcf	___ftadd@f2& (0+255),f,b
 38377  006F44  3797               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 38378  006F46  3798               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 38379  006F48  0100               	movlb	0	; () banked
 38380  006F4A  079D               	decf	___ftadd@exp2& (0+255),f,b
 38381                           
 38382                           ; BSR set to: 0
 38383  006F4C  0100               	movlb	0	; () banked
 38384  006F4E  519E               	movf	___ftadd@exp1& (0+255),w,b
 38385  006F50  0100               	movlb	0	; () banked
 38386  006F52  199D               	xorwf	___ftadd@exp2& (0+255),w,b
 38387  006F54  B4D8               	btfsc	status,2,c
 38388  006F56  D013               	goto	l9072
 38389                           
 38390                           ; BSR set to: 0
 38391  006F58  0100               	movlb	0	; () banked
 38392  006F5A  079C               	decf	___ftadd@sign& (0+255),f,b
 38393  006F5C  C09C  F099         	movff	___ftadd@sign,??___ftadd
 38394  006F60  0E07               	movlw	7
 38395  006F62  0100               	movlb	0	; () banked
 38396  006F64  1799               	andwf	??___ftadd& (0+255),f,b
 38397  006F66  B4D8               	btfsc	status,2,c
 38398  006F68  D00A               	goto	l9072
 38399  006F6A  D7E9               	goto	l9064
 38400                           
 38401                           ; BSR set to: 0
 38402                           
 38403                           ; BSR set to: 0
 38404  006F6C  D008               	goto	l9072
 38405  006F6E                     l9070:
 38406                           
 38407                           ; BSR set to: 0
 38408  006F6E  0100               	movlb	0	; () banked
 38409  006F70  90D8               	bcf	status,0,c
 38410  006F72  3395               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 38411  006F74  3394               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 38412  006F76  3393               	rrcf	___ftadd@f1& (0+255),f,b
 38413  006F78  0100               	movlb	0	; () banked
 38414  006F7A  2B9E               	incf	___ftadd@exp1& (0+255),f,b
 38415  006F7C  D000               	goto	l9072
 38416  006F7E                     l9072:
 38417                           
 38418                           ; BSR set to: 0
 38419  006F7E  0100               	movlb	0	; () banked
 38420  006F80  519D               	movf	___ftadd@exp2& (0+255),w,b
 38421  006F82  0100               	movlb	0	; () banked
 38422  006F84  199E               	xorwf	___ftadd@exp1& (0+255),w,b
 38423  006F86  B4D8               	btfsc	status,2,c
 38424  006F88  D030               	goto	l3008
 38425  006F8A  D7F1               	goto	l9070
 38426                           
 38427                           ; BSR set to: 0
 38428  006F8C  D02E               	goto	l3008
 38429  006F8E                     l9074:
 38430                           
 38431                           ; BSR set to: 0
 38432  006F8E  0100               	movlb	0	; () banked
 38433  006F90  519E               	movf	___ftadd@exp1& (0+255),w,b
 38434  006F92  0100               	movlb	0	; () banked
 38435  006F94  5D9D               	subwf	___ftadd@exp2& (0+255),w,b
 38436  006F96  B0D8               	btfsc	status,0,c
 38437  006F98  D028               	goto	l3008
 38438  006F9A                     l9076:
 38439                           
 38440                           ; BSR set to: 0
 38441  006F9A  0100               	movlb	0	; () banked
 38442  006F9C  90D8               	bcf	status,0,c
 38443  006F9E  3793               	rlcf	___ftadd@f1& (0+255),f,b
 38444  006FA0  3794               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 38445  006FA2  3795               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 38446  006FA4  0100               	movlb	0	; () banked
 38447  006FA6  079E               	decf	___ftadd@exp1& (0+255),f,b
 38448                           
 38449                           ; BSR set to: 0
 38450  006FA8  0100               	movlb	0	; () banked
 38451  006FAA  519E               	movf	___ftadd@exp1& (0+255),w,b
 38452  006FAC  0100               	movlb	0	; () banked
 38453  006FAE  199D               	xorwf	___ftadd@exp2& (0+255),w,b
 38454  006FB0  B4D8               	btfsc	status,2,c
 38455  006FB2  D013               	goto	l9084
 38456                           
 38457                           ; BSR set to: 0
 38458  006FB4  0100               	movlb	0	; () banked
 38459  006FB6  079C               	decf	___ftadd@sign& (0+255),f,b
 38460  006FB8  C09C  F099         	movff	___ftadd@sign,??___ftadd
 38461  006FBC  0E07               	movlw	7
 38462  006FBE  0100               	movlb	0	; () banked
 38463  006FC0  1799               	andwf	??___ftadd& (0+255),f,b
 38464  006FC2  B4D8               	btfsc	status,2,c
 38465  006FC4  D00A               	goto	l9084
 38466  006FC6  D7E9               	goto	l9076
 38467                           
 38468                           ; BSR set to: 0
 38469                           
 38470                           ; BSR set to: 0
 38471  006FC8  D008               	goto	l9084
 38472  006FCA                     l9082:
 38473                           
 38474                           ; BSR set to: 0
 38475  006FCA  0100               	movlb	0	; () banked
 38476  006FCC  90D8               	bcf	status,0,c
 38477  006FCE  3398               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 38478  006FD0  3397               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 38479  006FD2  3396               	rrcf	___ftadd@f2& (0+255),f,b
 38480  006FD4  0100               	movlb	0	; () banked
 38481  006FD6  2B9D               	incf	___ftadd@exp2& (0+255),f,b
 38482  006FD8  D000               	goto	l9084
 38483  006FDA                     l9084:
 38484                           
 38485                           ; BSR set to: 0
 38486  006FDA  0100               	movlb	0	; () banked
 38487  006FDC  519D               	movf	___ftadd@exp2& (0+255),w,b
 38488  006FDE  0100               	movlb	0	; () banked
 38489  006FE0  199E               	xorwf	___ftadd@exp1& (0+255),w,b
 38490  006FE2  B4D8               	btfsc	status,2,c
 38491  006FE4  D002               	goto	l3008
 38492  006FE6  D7F1               	goto	l9082
 38493                           
 38494                           ; BSR set to: 0
 38495  006FE8  D000               	goto	l3008
 38496  006FEA                     l3008:
 38497                           
 38498                           ; BSR set to: 0
 38499  006FEA  0100               	movlb	0	; () banked
 38500  006FEC  AF9C               	btfss	___ftadd@sign& (0+255),7,b
 38501  006FEE  D012               	goto	l3017
 38502                           
 38503                           ; BSR set to: 0
 38504  006FF0  0EFF               	movlw	255
 38505  006FF2  0100               	movlb	0	; () banked
 38506  006FF4  1B93               	xorwf	___ftadd@f1& (0+255),f,b
 38507  006FF6  0EFF               	movlw	255
 38508  006FF8  0100               	movlb	0	; () banked
 38509  006FFA  1B94               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 38510  006FFC  0EFF               	movlw	255
 38511  006FFE  0100               	movlb	0	; () banked
 38512  007000  1B95               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 38513  007002  0E01               	movlw	1
 38514  007004  0100               	movlb	0	; () banked
 38515  007006  2793               	addwf	___ftadd@f1& (0+255),f,b
 38516  007008  0E00               	movlw	0
 38517  00700A  0100               	movlb	0	; () banked
 38518  00700C  2394               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 38519  00700E  0E00               	movlw	0
 38520  007010  0100               	movlb	0	; () banked
 38521  007012  2395               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 38522  007014                     l3017:
 38523                           
 38524                           ; BSR set to: 0
 38525  007014  0100               	movlb	0	; () banked
 38526  007016  AD9C               	btfss	___ftadd@sign& (0+255),6,b
 38527  007018  D013               	goto	l9090
 38528                           
 38529                           ; BSR set to: 0
 38530  00701A  0EFF               	movlw	255
 38531  00701C  0100               	movlb	0	; () banked
 38532  00701E  1B96               	xorwf	___ftadd@f2& (0+255),f,b
 38533  007020  0EFF               	movlw	255
 38534  007022  0100               	movlb	0	; () banked
 38535  007024  1B97               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 38536  007026  0EFF               	movlw	255
 38537  007028  0100               	movlb	0	; () banked
 38538  00702A  1B98               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 38539  00702C  0E01               	movlw	1
 38540  00702E  0100               	movlb	0	; () banked
 38541  007030  2796               	addwf	___ftadd@f2& (0+255),f,b
 38542  007032  0E00               	movlw	0
 38543  007034  0100               	movlb	0	; () banked
 38544  007036  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 38545  007038  0E00               	movlw	0
 38546  00703A  0100               	movlb	0	; () banked
 38547  00703C  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 38548  00703E  D000               	goto	l9090
 38549  007040                     l9090:
 38550                           
 38551                           ; BSR set to: 0
 38552  007040  0E00               	movlw	0
 38553  007042  0100               	movlb	0	; () banked
 38554  007044  6F9C               	movwf	___ftadd@sign& (0+255),b
 38555                           
 38556                           ; BSR set to: 0
 38557  007046  0100               	movlb	0	; () banked
 38558  007048  5193               	movf	___ftadd@f1& (0+255),w,b
 38559  00704A  0100               	movlb	0	; () banked
 38560  00704C  2796               	addwf	___ftadd@f2& (0+255),f,b
 38561  00704E  0100               	movlb	0	; () banked
 38562  007050  5194               	movf	(___ftadd@f1+1)& (0+255),w,b
 38563  007052  0100               	movlb	0	; () banked
 38564  007054  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 38565  007056  0100               	movlb	0	; () banked
 38566  007058  5195               	movf	(___ftadd@f1+2)& (0+255),w,b
 38567  00705A  0100               	movlb	0	; () banked
 38568  00705C  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 38569                           
 38570                           ; BSR set to: 0
 38571  00705E  0100               	movlb	0	; () banked
 38572  007060  AF98               	btfss	(___ftadd@f2+2)& (0+255),7,b
 38573  007062  D016               	goto	l9100
 38574                           
 38575                           ; BSR set to: 0
 38576  007064  0EFF               	movlw	255
 38577  007066  0100               	movlb	0	; () banked
 38578  007068  1B96               	xorwf	___ftadd@f2& (0+255),f,b
 38579  00706A  0EFF               	movlw	255
 38580  00706C  0100               	movlb	0	; () banked
 38581  00706E  1B97               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 38582  007070  0EFF               	movlw	255
 38583  007072  0100               	movlb	0	; () banked
 38584  007074  1B98               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 38585  007076  0E01               	movlw	1
 38586  007078  0100               	movlb	0	; () banked
 38587  00707A  2796               	addwf	___ftadd@f2& (0+255),f,b
 38588  00707C  0E00               	movlw	0
 38589  00707E  0100               	movlb	0	; () banked
 38590  007080  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 38591  007082  0E00               	movlw	0
 38592  007084  0100               	movlb	0	; () banked
 38593  007086  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 38594                           
 38595                           ; BSR set to: 0
 38596  007088  0E01               	movlw	1
 38597  00708A  0100               	movlb	0	; () banked
 38598  00708C  6F9C               	movwf	___ftadd@sign& (0+255),b
 38599  00708E  D000               	goto	l9100
 38600  007090                     l9100:
 38601                           
 38602                           ; BSR set to: 0
 38603  007090  C096  F060         	movff	___ftadd@f2,___ftpack@arg
 38604  007094  C097  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 38605  007098  C098  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 38606  00709C  C09E  F063         	movff	___ftadd@exp1,___ftpack@exp
 38607  0070A0  C09C  F064         	movff	___ftadd@sign,___ftpack@sign
 38608  0070A4  ECED  F043         	call	___ftpack	;wreg free
 38609  0070A8  C060  F093         	movff	?___ftpack,?___ftadd
 38610  0070AC  C061  F094         	movff	?___ftpack+1,?___ftadd+1
 38611  0070B0  C062  F095         	movff	?___ftpack+2,?___ftadd+2
 38612  0070B4  0012               	return	
 38613  0070B6  0012               	return		;funcret
 38614  0070B8                     __end_of___ftadd:
 38615                           	opt stack 0
 38616                           tblptru	equ	0xFF8
 38617                           tblptrh	equ	0xFF7
 38618                           tblptrl	equ	0xFF6
 38619                           tablat	equ	0xFF5
 38620                           prodh	equ	0xFF4
 38621                           prodl	equ	0xFF3
 38622                           intcon	equ	0xFF2
 38623                           intcon2	equ	0xFF1
 38624                           indf0	equ	0xFEF
 38625                           postinc0	equ	0xFEE
 38626                           plusw0	equ	0xFEB
 38627                           fsr0h	equ	0xFEA
 38628                           fsr0l	equ	0xFE9
 38629                           wreg	equ	0xFE8
 38630                           indf1	equ	0xFE7
 38631                           postdec1	equ	0xFE5
 38632                           fsr1h	equ	0xFE2
 38633                           fsr1l	equ	0xFE1
 38634                           indf2	equ	0xFDF
 38635                           postinc2	equ	0xFDE
 38636                           postdec2	equ	0xFDD
 38637                           plusw2	equ	0xFDB
 38638                           fsr2h	equ	0xFDA
 38639                           fsr2l	equ	0xFD9
 38640                           status	equ	0xFD8
 38641                           
 38642 ;; *************** function ___ftpack *****************
 38643 ;; Defined at:
 38644 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 38645 ;; Parameters:    Size  Location     Type
 38646 ;;  arg             3    0[BANK0 ] unsigned um
 38647 ;;  exp             1    3[BANK0 ] unsigned char 
 38648 ;;  sign            1    4[BANK0 ] unsigned char 
 38649 ;; Auto vars:     Size  Location     Type
 38650 ;;		None
 38651 ;; Return value:  Size  Location     Type
 38652 ;;                  3    0[BANK0 ] float 
 38653 ;; Registers used:
 38654 ;;		wreg, status,2, status,0
 38655 ;; Tracked objects:
 38656 ;;		On entry : 0/0
 38657 ;;		On exit  : 0/0
 38658 ;;		Unchanged: 0/0
 38659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38660 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38662 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38663 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38664 ;;Total ram usage:        8 bytes
 38665 ;; Hardware stack levels used:    1
 38666 ;; Hardware stack levels required when called:    5
 38667 ;; This function calls:
 38668 ;;		Nothing
 38669 ;; This function is called by:
 38670 ;;		___altoft
 38671 ;;		___ftadd
 38672 ;;		___ftdiv
 38673 ;;		___ftmul
 38674 ;;		___lltoft
 38675 ;;		___lwtoft
 38676 ;; This function uses a non-reentrant model
 38677 ;;
 38678                           
 38679                           	psect	text91
 38680  0087DA                     __ptext91:
 38681                           	opt stack 0
 38682  0087DA                     ___ftpack:
 38683                           	opt stack 22
 38684                           
 38685                           ;incstack = 0
 38686  0087DA  0100               	movlb	0	; () banked
 38687  0087DC  5163               	movf	___ftpack@exp& (0+255),w,b
 38688  0087DE  0100               	movlb	0	; () banked
 38689  0087E0  B4D8               	btfsc	status,2,c
 38690  0087E2  D008               	goto	l8966
 38691                           
 38692                           ; BSR set to: 0
 38693  0087E4  0100               	movlb	0	; () banked
 38694  0087E6  5160               	movf	___ftpack@arg& (0+255),w,b
 38695  0087E8  0100               	movlb	0	; () banked
 38696  0087EA  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 38697  0087EC  0100               	movlb	0	; () banked
 38698  0087EE  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 38699  0087F0  A4D8               	btfss	status,2,c
 38700  0087F2  D013               	goto	l8972
 38701  0087F4                     l8966:
 38702                           
 38703                           ; BSR set to: 0
 38704  0087F4  0E00               	movlw	0
 38705  0087F6  0100               	movlb	0	; () banked
 38706  0087F8  6F60               	movwf	?___ftpack& (0+255),b
 38707  0087FA  0E00               	movlw	0
 38708  0087FC  0100               	movlb	0	; () banked
 38709  0087FE  6F61               	movwf	(?___ftpack+1)& (0+255),b
 38710  008800  0E00               	movlw	0
 38711  008802  0100               	movlb	0	; () banked
 38712  008804  6F62               	movwf	(?___ftpack+2)& (0+255),b
 38713                           
 38714                           ; BSR set to: 0
 38715  008806  0012               	return	
 38716                           
 38717                           ; BSR set to: 0
 38718  008808  D008               	goto	l8972
 38719  00880A                     l8970:
 38720                           
 38721                           ; BSR set to: 0
 38722  00880A  0100               	movlb	0	; () banked
 38723  00880C  2B63               	incf	___ftpack@exp& (0+255),f,b
 38724  00880E  0100               	movlb	0	; () banked
 38725  008810  90D8               	bcf	status,0,c
 38726  008812  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 38727  008814  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 38728  008816  3360               	rrcf	___ftpack@arg& (0+255),f,b
 38729  008818  D000               	goto	l8972
 38730  00881A                     l8972:
 38731                           
 38732                           ; BSR set to: 0
 38733  00881A  0E00               	movlw	0
 38734  00881C  0100               	movlb	0	; () banked
 38735  00881E  1560               	andwf	___ftpack@arg& (0+255),w,b
 38736  008820  0100               	movlb	0	; () banked
 38737  008822  6F65               	movwf	??___ftpack& (0+255),b
 38738  008824  0E00               	movlw	0
 38739  008826  0100               	movlb	0	; () banked
 38740  008828  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 38741  00882A  0100               	movlb	0	; () banked
 38742  00882C  6F66               	movwf	(??___ftpack+1)& (0+255),b
 38743  00882E  0EFE               	movlw	254
 38744  008830  0100               	movlb	0	; () banked
 38745  008832  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 38746  008834  0100               	movlb	0	; () banked
 38747  008836  6F67               	movwf	(??___ftpack+2)& (0+255),b
 38748  008838  0100               	movlb	0	; () banked
 38749  00883A  5165               	movf	??___ftpack& (0+255),w,b
 38750  00883C  0100               	movlb	0	; () banked
 38751  00883E  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 38752  008840  0100               	movlb	0	; () banked
 38753  008842  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 38754  008844  B4D8               	btfsc	status,2,c
 38755  008846  D013               	goto	l8978
 38756  008848  D7E0               	goto	l8970
 38757                           
 38758                           ; BSR set to: 0
 38759  00884A  D011               	goto	l8978
 38760  00884C                     l8974:
 38761                           
 38762                           ; BSR set to: 0
 38763  00884C  0100               	movlb	0	; () banked
 38764  00884E  2B63               	incf	___ftpack@exp& (0+255),f,b
 38765                           
 38766                           ; BSR set to: 0
 38767  008850  0E01               	movlw	1
 38768  008852  0100               	movlb	0	; () banked
 38769  008854  2760               	addwf	___ftpack@arg& (0+255),f,b
 38770  008856  0E00               	movlw	0
 38771  008858  0100               	movlb	0	; () banked
 38772  00885A  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 38773  00885C  0E00               	movlw	0
 38774  00885E  0100               	movlb	0	; () banked
 38775  008860  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 38776  008862  0100               	movlb	0	; () banked
 38777  008864  90D8               	bcf	status,0,c
 38778  008866  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 38779  008868  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 38780  00886A  3360               	rrcf	___ftpack@arg& (0+255),f,b
 38781  00886C  D000               	goto	l8978
 38782  00886E                     l8978:
 38783                           
 38784                           ; BSR set to: 0
 38785  00886E  0E00               	movlw	0
 38786  008870  0100               	movlb	0	; () banked
 38787  008872  1560               	andwf	___ftpack@arg& (0+255),w,b
 38788  008874  0100               	movlb	0	; () banked
 38789  008876  6F65               	movwf	??___ftpack& (0+255),b
 38790  008878  0E00               	movlw	0
 38791  00887A  0100               	movlb	0	; () banked
 38792  00887C  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 38793  00887E  0100               	movlb	0	; () banked
 38794  008880  6F66               	movwf	(??___ftpack+1)& (0+255),b
 38795  008882  0EFF               	movlw	255
 38796  008884  0100               	movlb	0	; () banked
 38797  008886  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 38798  008888  0100               	movlb	0	; () banked
 38799  00888A  6F67               	movwf	(??___ftpack+2)& (0+255),b
 38800  00888C  0100               	movlb	0	; () banked
 38801  00888E  5165               	movf	??___ftpack& (0+255),w,b
 38802  008890  0100               	movlb	0	; () banked
 38803  008892  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 38804  008894  0100               	movlb	0	; () banked
 38805  008896  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 38806  008898  B4D8               	btfsc	status,2,c
 38807  00889A  D00A               	goto	l8982
 38808  00889C  D7D7               	goto	l8974
 38809                           
 38810                           ; BSR set to: 0
 38811  00889E  D008               	goto	l8982
 38812  0088A0                     l8980:
 38813                           
 38814                           ; BSR set to: 0
 38815  0088A0  0100               	movlb	0	; () banked
 38816  0088A2  0763               	decf	___ftpack@exp& (0+255),f,b
 38817  0088A4  0100               	movlb	0	; () banked
 38818  0088A6  90D8               	bcf	status,0,c
 38819  0088A8  3760               	rlcf	___ftpack@arg& (0+255),f,b
 38820  0088AA  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 38821  0088AC  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 38822  0088AE  D000               	goto	l8982
 38823  0088B0                     l8982:
 38824                           
 38825                           ; BSR set to: 0
 38826  0088B0  0100               	movlb	0	; () banked
 38827  0088B2  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 38828  0088B4  D005               	goto	l2964
 38829                           
 38830                           ; BSR set to: 0
 38831  0088B6  0E02               	movlw	2
 38832  0088B8  0100               	movlb	0	; () banked
 38833  0088BA  6163               	cpfslt	___ftpack@exp& (0+255),b
 38834  0088BC  D7F1               	goto	l8980
 38835  0088BE  D000               	goto	l2964
 38836  0088C0                     l2964:
 38837                           
 38838                           ; BSR set to: 0
 38839  0088C0  0100               	movlb	0	; () banked
 38840  0088C2  B163               	btfsc	___ftpack@exp& (0+255),0,b
 38841  0088C4  D003               	goto	l8988
 38842                           
 38843                           ; BSR set to: 0
 38844  0088C6  0100               	movlb	0	; () banked
 38845  0088C8  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 38846  0088CA  D000               	goto	l8988
 38847  0088CC                     l8988:
 38848                           
 38849                           ; BSR set to: 0
 38850  0088CC  0100               	movlb	0	; () banked
 38851  0088CE  90D8               	bcf	status,0,c
 38852  0088D0  3363               	rrcf	___ftpack@exp& (0+255),f,b
 38853  0088D2  0100               	movlb	0	; () banked
 38854  0088D4  5163               	movf	___ftpack@exp& (0+255),w,b
 38855  0088D6  0100               	movlb	0	; () banked
 38856  0088D8  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 38857                           
 38858                           ; BSR set to: 0
 38859  0088DA  0100               	movlb	0	; () banked
 38860  0088DC  5164               	movf	___ftpack@sign& (0+255),w,b
 38861  0088DE  0100               	movlb	0	; () banked
 38862  0088E0  B4D8               	btfsc	status,2,c
 38863  0088E2  D003               	goto	l8994
 38864                           
 38865                           ; BSR set to: 0
 38866  0088E4  0100               	movlb	0	; () banked
 38867  0088E6  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 38868  0088E8  D000               	goto	l8994
 38869  0088EA                     l8994:
 38870                           
 38871                           ; BSR set to: 0
 38872  0088EA  C060  F060         	movff	___ftpack@arg,?___ftpack
 38873  0088EE  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 38874  0088F2  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 38875  0088F6  0012               	return	
 38876                           
 38877                           ; BSR set to: 0
 38878                           
 38879                           ; BSR set to: 0
 38880  0088F8  0012               	return		;funcret
 38881  0088FA                     __end_of___ftpack:
 38882                           	opt stack 0
 38883                           tblptru	equ	0xFF8
 38884                           tblptrh	equ	0xFF7
 38885                           tblptrl	equ	0xFF6
 38886                           tablat	equ	0xFF5
 38887                           prodh	equ	0xFF4
 38888                           prodl	equ	0xFF3
 38889                           intcon	equ	0xFF2
 38890                           intcon2	equ	0xFF1
 38891                           indf0	equ	0xFEF
 38892                           postinc0	equ	0xFEE
 38893                           plusw0	equ	0xFEB
 38894                           fsr0h	equ	0xFEA
 38895                           fsr0l	equ	0xFE9
 38896                           wreg	equ	0xFE8
 38897                           indf1	equ	0xFE7
 38898                           postdec1	equ	0xFE5
 38899                           fsr1h	equ	0xFE2
 38900                           fsr1l	equ	0xFE1
 38901                           indf2	equ	0xFDF
 38902                           postinc2	equ	0xFDE
 38903                           postdec2	equ	0xFDD
 38904                           plusw2	equ	0xFDB
 38905                           fsr2h	equ	0xFDA
 38906                           fsr2l	equ	0xFD9
 38907                           status	equ	0xFD8
 38908                           
 38909 ;; *************** function ___ftneg *****************
 38910 ;; Defined at:
 38911 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
 38912 ;; Parameters:    Size  Location     Type
 38913 ;;  f1              3    0[BANK0 ] float 
 38914 ;; Auto vars:     Size  Location     Type
 38915 ;;		None
 38916 ;; Return value:  Size  Location     Type
 38917 ;;                  3    0[BANK0 ] float 
 38918 ;; Registers used:
 38919 ;;		wreg, status,2, status,0
 38920 ;; Tracked objects:
 38921 ;;		On entry : 0/0
 38922 ;;		On exit  : 0/0
 38923 ;;		Unchanged: 0/0
 38924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38925 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38928 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38929 ;;Total ram usage:        3 bytes
 38930 ;; Hardware stack levels used:    1
 38931 ;; Hardware stack levels required when called:    5
 38932 ;; This function calls:
 38933 ;;		Nothing
 38934 ;; This function is called by:
 38935 ;;		_sprintf
 38936 ;; This function uses a non-reentrant model
 38937 ;;
 38938                           
 38939                           	psect	text92
 38940  00A6B6                     __ptext92:
 38941                           	opt stack 0
 38942  00A6B6                     ___ftneg:
 38943                           	opt stack 24
 38944                           
 38945                           ; BSR set to: 0
 38946                           ;incstack = 0
 38947  00A6B6  0100               	movlb	0	; () banked
 38948  00A6B8  5160               	movf	___ftneg@f1& (0+255),w,b
 38949  00A6BA  0100               	movlb	0	; () banked
 38950  00A6BC  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 38951  00A6BE  0100               	movlb	0	; () banked
 38952  00A6C0  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 38953  00A6C2  B4D8               	btfsc	status,2,c
 38954  00A6C4  D009               	goto	l3067
 38955                           
 38956                           ; BSR set to: 0
 38957  00A6C6  0E00               	movlw	0
 38958  00A6C8  0100               	movlb	0	; () banked
 38959  00A6CA  1B60               	xorwf	___ftneg@f1& (0+255),f,b
 38960  00A6CC  0E00               	movlw	0
 38961  00A6CE  0100               	movlb	0	; () banked
 38962  00A6D0  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 38963  00A6D2  0E80               	movlw	128
 38964  00A6D4  0100               	movlb	0	; () banked
 38965  00A6D6  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 38966  00A6D8                     l3067:
 38967                           
 38968                           ; BSR set to: 0
 38969  00A6D8  C060  F060         	movff	___ftneg@f1,?___ftneg
 38970  00A6DC  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
 38971  00A6E0  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
 38972                           
 38973                           ; BSR set to: 0
 38974  00A6E4  0012               	return		;funcret
 38975  00A6E6                     __end_of___ftneg:
 38976                           	opt stack 0
 38977                           tblptru	equ	0xFF8
 38978                           tblptrh	equ	0xFF7
 38979                           tblptrl	equ	0xFF6
 38980                           tablat	equ	0xFF5
 38981                           prodh	equ	0xFF4
 38982                           prodl	equ	0xFF3
 38983                           intcon	equ	0xFF2
 38984                           intcon2	equ	0xFF1
 38985                           indf0	equ	0xFEF
 38986                           postinc0	equ	0xFEE
 38987                           plusw0	equ	0xFEB
 38988                           fsr0h	equ	0xFEA
 38989                           fsr0l	equ	0xFE9
 38990                           wreg	equ	0xFE8
 38991                           indf1	equ	0xFE7
 38992                           postdec1	equ	0xFE5
 38993                           fsr1h	equ	0xFE2
 38994                           fsr1l	equ	0xFE1
 38995                           indf2	equ	0xFDF
 38996                           postinc2	equ	0xFDE
 38997                           postdec2	equ	0xFDD
 38998                           plusw2	equ	0xFDB
 38999                           fsr2h	equ	0xFDA
 39000                           fsr2l	equ	0xFD9
 39001                           status	equ	0xFD8
 39002                           
 39003 ;; *************** function ___ftge *****************
 39004 ;; Defined at:
 39005 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
 39006 ;; Parameters:    Size  Location     Type
 39007 ;;  ff1             3    0[BANK0 ] float 
 39008 ;;  ff2             3    3[BANK0 ] float 
 39009 ;; Auto vars:     Size  Location     Type
 39010 ;;		None
 39011 ;; Return value:  Size  Location     Type
 39012 ;;		None               void
 39013 ;; Registers used:
 39014 ;;		wreg, status,2, status,0
 39015 ;; Tracked objects:
 39016 ;;		On entry : 0/0
 39017 ;;		On exit  : 0/0
 39018 ;;		Unchanged: 0/0
 39019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39020 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39022 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39023 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39024 ;;Total ram usage:        9 bytes
 39025 ;; Hardware stack levels used:    1
 39026 ;; Hardware stack levels required when called:    5
 39027 ;; This function calls:
 39028 ;;		Nothing
 39029 ;; This function is called by:
 39030 ;;		_main
 39031 ;;		_sprintf
 39032 ;; This function uses a non-reentrant model
 39033 ;;
 39034                           
 39035                           	psect	text93
 39036  0092F0                     __ptext93:
 39037                           	opt stack 0
 39038  0092F0                     ___ftge:
 39039                           	opt stack 24
 39040                           
 39041                           ; BSR set to: 0
 39042                           ;incstack = 0
 39043  0092F0  0100               	movlb	0	; () banked
 39044  0092F2  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 39045  0092F4  D01E               	goto	l9508
 39046                           
 39047                           ; BSR set to: 0
 39048  0092F6  C060  F066         	movff	___ftge@ff1,??___ftge
 39049  0092FA  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 39050  0092FE  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 39051  009302  0100               	movlb	0	; () banked
 39052  009304  1F66               	comf	??___ftge& (0+255),f,b
 39053  009306  1F67               	comf	(??___ftge+1)& (0+255),f,b
 39054  009308  1F68               	comf	(??___ftge+2)& (0+255),f,b
 39055  00930A  2B66               	incf	??___ftge& (0+255),f,b
 39056  00930C  0E00               	movlw	0
 39057  00930E  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 39058  009310  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 39059  009312  0E00               	movlw	0
 39060  009314  0100               	movlb	0	; () banked
 39061  009316  2566               	addwf	??___ftge& (0+255),w,b
 39062  009318  0100               	movlb	0	; () banked
 39063  00931A  6F60               	movwf	___ftge@ff1& (0+255),b
 39064  00931C  0E00               	movlw	0
 39065  00931E  0100               	movlb	0	; () banked
 39066  009320  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 39067  009322  0100               	movlb	0	; () banked
 39068  009324  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 39069  009326  0E80               	movlw	128
 39070  009328  0100               	movlb	0	; () banked
 39071  00932A  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 39072  00932C  0100               	movlb	0	; () banked
 39073  00932E  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 39074  009330  D000               	goto	l9508
 39075  009332                     l9508:
 39076                           
 39077                           ; BSR set to: 0
 39078  009332  0100               	movlb	0	; () banked
 39079  009334  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 39080  009336  D01E               	goto	l9512
 39081                           
 39082                           ; BSR set to: 0
 39083  009338  C063  F066         	movff	___ftge@ff2,??___ftge
 39084  00933C  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 39085  009340  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 39086  009344  0100               	movlb	0	; () banked
 39087  009346  1F66               	comf	??___ftge& (0+255),f,b
 39088  009348  1F67               	comf	(??___ftge+1)& (0+255),f,b
 39089  00934A  1F68               	comf	(??___ftge+2)& (0+255),f,b
 39090  00934C  2B66               	incf	??___ftge& (0+255),f,b
 39091  00934E  0E00               	movlw	0
 39092  009350  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 39093  009352  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 39094  009354  0E00               	movlw	0
 39095  009356  0100               	movlb	0	; () banked
 39096  009358  2566               	addwf	??___ftge& (0+255),w,b
 39097  00935A  0100               	movlb	0	; () banked
 39098  00935C  6F63               	movwf	___ftge@ff2& (0+255),b
 39099  00935E  0E00               	movlw	0
 39100  009360  0100               	movlb	0	; () banked
 39101  009362  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 39102  009364  0100               	movlb	0	; () banked
 39103  009366  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 39104  009368  0E80               	movlw	128
 39105  00936A  0100               	movlb	0	; () banked
 39106  00936C  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 39107  00936E  0100               	movlb	0	; () banked
 39108  009370  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 39109  009372  D000               	goto	l9512
 39110  009374                     l9512:
 39111                           
 39112                           ; BSR set to: 0
 39113  009374  0E00               	movlw	0
 39114  009376  0100               	movlb	0	; () banked
 39115  009378  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 39116  00937A  0E00               	movlw	0
 39117  00937C  0100               	movlb	0	; () banked
 39118  00937E  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 39119  009380  0E80               	movlw	128
 39120  009382  0100               	movlb	0	; () banked
 39121  009384  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 39122                           
 39123                           ; BSR set to: 0
 39124  009386  0E00               	movlw	0
 39125  009388  0100               	movlb	0	; () banked
 39126  00938A  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 39127  00938C  0E00               	movlw	0
 39128  00938E  0100               	movlb	0	; () banked
 39129  009390  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 39130  009392  0E80               	movlw	128
 39131  009394  0100               	movlb	0	; () banked
 39132  009396  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 39133  009398  0100               	movlb	0	; () banked
 39134  00939A  5163               	movf	___ftge@ff2& (0+255),w,b
 39135  00939C  0100               	movlb	0	; () banked
 39136  00939E  5D60               	subwf	___ftge@ff1& (0+255),w,b
 39137  0093A0  0100               	movlb	0	; () banked
 39138  0093A2  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 39139  0093A4  0100               	movlb	0	; () banked
 39140  0093A6  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 39141  0093A8  0100               	movlb	0	; () banked
 39142  0093AA  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 39143  0093AC  0100               	movlb	0	; () banked
 39144  0093AE  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 39145  0093B0  B0D8               	btfsc	status,0,c
 39146  0093B2  D002               	goto	l9518
 39147                           
 39148                           ; BSR set to: 0
 39149  0093B4  90D8               	bcf	status,0,c
 39150  0093B6  0012               	return	
 39151  0093B8                     l9518:
 39152                           
 39153                           ; BSR set to: 0
 39154  0093B8  80D8               	bsf	status,0,c
 39155                           
 39156                           ; BSR set to: 0
 39157  0093BA  0012               	return	
 39158                           
 39159                           ; BSR set to: 0
 39160                           
 39161                           ; BSR set to: 0
 39162  0093BC  0012               	return		;funcret
 39163  0093BE                     __end_of___ftge:
 39164                           	opt stack 0
 39165                           tblptru	equ	0xFF8
 39166                           tblptrh	equ	0xFF7
 39167                           tblptrl	equ	0xFF6
 39168                           tablat	equ	0xFF5
 39169                           prodh	equ	0xFF4
 39170                           prodl	equ	0xFF3
 39171                           intcon	equ	0xFF2
 39172                           intcon2	equ	0xFF1
 39173                           indf0	equ	0xFEF
 39174                           postinc0	equ	0xFEE
 39175                           plusw0	equ	0xFEB
 39176                           fsr0h	equ	0xFEA
 39177                           fsr0l	equ	0xFE9
 39178                           wreg	equ	0xFE8
 39179                           indf1	equ	0xFE7
 39180                           postdec1	equ	0xFE5
 39181                           fsr1h	equ	0xFE2
 39182                           fsr1l	equ	0xFE1
 39183                           indf2	equ	0xFDF
 39184                           postinc2	equ	0xFDE
 39185                           postdec2	equ	0xFDD
 39186                           plusw2	equ	0xFDB
 39187                           fsr2h	equ	0xFDA
 39188                           fsr2l	equ	0xFD9
 39189                           status	equ	0xFD8
 39190                           
 39191 ;; *************** function _UARTstring_CONST *****************
 39192 ;; Defined at:
 39193 ;;		line 236 in file "UART.c"
 39194 ;; Parameters:    Size  Location     Type
 39195 ;;  data            2    2[BANK0 ] PTR const unsigned char 
 39196 ;;		 -> STR_178(28), STR_117(13), STR_100(35), STR_98(38), 
 39197 ;;		 -> STR_89(24), STR_86(60), STR_81(32), STR_70(14), 
 39198 ;;		 -> SYNTAX_ERR(14), STR_20(5), STR_17(3), STR_16(6), 
 39199 ;;		 -> STR_15(9), STR_14(20), STR_13(9), STR_8(3), 
 39200 ;;		 -> STR_6(4), CRLN(3), 
 39201 ;; Auto vars:     Size  Location     Type
 39202 ;;		None
 39203 ;; Return value:  Size  Location     Type
 39204 ;;		None               void
 39205 ;; Registers used:
 39206 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39207 ;; Tracked objects:
 39208 ;;		On entry : 0/0
 39209 ;;		On exit  : 0/0
 39210 ;;		Unchanged: 0/0
 39211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39212 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39215 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39216 ;;Total ram usage:        2 bytes
 39217 ;; Hardware stack levels used:    1
 39218 ;; Hardware stack levels required when called:    6
 39219 ;; This function calls:
 39220 ;;		_UARTchar_CONST
 39221 ;; This function is called by:
 39222 ;;		_main
 39223 ;;		_UARTstringCRLN
 39224 ;;		_UARTstringCRLN_CONST
 39225 ;;		_UARTcommandMenu
 39226 ;;		_EnterCommandMode
 39227 ;;		_BluetoothInitialSetup
 39228 ;;		_UseBluetooth
 39229 ;;		_WaitForIRsignal
 39230 ;; This function uses a non-reentrant model
 39231 ;;
 39232                           
 39233                           	psect	text94
 39234  00A684                     __ptext94:
 39235                           	opt stack 0
 39236  00A684                     _UARTstring_CONST:
 39237                           	opt stack 22
 39238                           
 39239                           ;UART.c: 238: while(*data != 0)
 39240                           
 39241                           ; BSR set to: 0
 39242                           ;incstack = 0
 39243  00A684  D00D               	goto	l9644
 39244  00A686                     l9640:
 39245                           
 39246                           ;UART.c: 239: {
 39247                           ;UART.c: 240: UARTchar_CONST(*data);
 39248  00A686  C062  FFF6         	movff	UARTstring_CONST@data,tblptrl
 39249  00A68A  C063  FFF7         	movff	UARTstring_CONST@data+1,tblptrh
 39250  00A68E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 39251  00A68E  6AF8               	clrf	tblptru,c
 39252  00A690                     	endif
 39253  00A690                     	if	0	;tblptru may be non-zero
 39254  00A690                     	endif
 39255  00A690  0008               	tblrd		*
 39256  00A692  50F5               	movf	tablat,w,c
 39257  00A694  EC1E  F054         	call	_UARTchar_CONST
 39258                           
 39259                           ;UART.c: 241: *data++;
 39260  00A698  0100               	movlb	0	; () banked
 39261  00A69A  4B62               	infsnz	UARTstring_CONST@data& (0+255),f,b
 39262  00A69C  2B63               	incf	(UARTstring_CONST@data+1)& (0+255),f,b
 39263  00A69E  D000               	goto	l9644
 39264  00A6A0                     l9644:
 39265  00A6A0  C062  FFF6         	movff	UARTstring_CONST@data,tblptrl
 39266  00A6A4  C063  FFF7         	movff	UARTstring_CONST@data+1,tblptrh
 39267  00A6A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 39268  00A6A8  6AF8               	clrf	tblptru,c
 39269  00A6AA                     	endif
 39270  00A6AA                     	if	0	;tblptru may be non-zero
 39271  00A6AA                     	endif
 39272  00A6AA  0008               	tblrd		*
 39273  00A6AC  50F5               	movf	tablat,w,c
 39274  00A6AE  0900               	iorlw	0
 39275  00A6B0  A4D8               	btfss	status,2,c
 39276  00A6B2  D7E9               	goto	l9640
 39277  00A6B4  0012               	return		;funcret
 39278  00A6B6                     __end_of_UARTstring_CONST:
 39279                           	opt stack 0
 39280                           tblptru	equ	0xFF8
 39281                           tblptrh	equ	0xFF7
 39282                           tblptrl	equ	0xFF6
 39283                           tablat	equ	0xFF5
 39284                           prodh	equ	0xFF4
 39285                           prodl	equ	0xFF3
 39286                           intcon	equ	0xFF2
 39287                           intcon2	equ	0xFF1
 39288                           indf0	equ	0xFEF
 39289                           postinc0	equ	0xFEE
 39290                           plusw0	equ	0xFEB
 39291                           fsr0h	equ	0xFEA
 39292                           fsr0l	equ	0xFE9
 39293                           wreg	equ	0xFE8
 39294                           indf1	equ	0xFE7
 39295                           postdec1	equ	0xFE5
 39296                           fsr1h	equ	0xFE2
 39297                           fsr1l	equ	0xFE1
 39298                           indf2	equ	0xFDF
 39299                           postinc2	equ	0xFDE
 39300                           postdec2	equ	0xFDD
 39301                           plusw2	equ	0xFDB
 39302                           fsr2h	equ	0xFDA
 39303                           fsr2l	equ	0xFD9
 39304                           status	equ	0xFD8
 39305                           
 39306 ;; *************** function _UARTchar_CONST *****************
 39307 ;; Defined at:
 39308 ;;		line 207 in file "UART.c"
 39309 ;; Parameters:    Size  Location     Type
 39310 ;;  data            1    wreg     const unsigned char 
 39311 ;; Auto vars:     Size  Location     Type
 39312 ;;  data            1    0[BANK0 ] const unsigned char 
 39313 ;;  temp            1    1[BANK0 ] unsigned char 
 39314 ;; Return value:  Size  Location     Type
 39315 ;;		None               void
 39316 ;; Registers used:
 39317 ;;		wreg, status,2
 39318 ;; Tracked objects:
 39319 ;;		On entry : 0/0
 39320 ;;		On exit  : 0/0
 39321 ;;		Unchanged: 0/0
 39322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39324 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39326 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39327 ;;Total ram usage:        2 bytes
 39328 ;; Hardware stack levels used:    1
 39329 ;; Hardware stack levels required when called:    5
 39330 ;; This function calls:
 39331 ;;		Nothing
 39332 ;; This function is called by:
 39333 ;;		_main
 39334 ;;		_UARTstring_CONST
 39335 ;;		_UARTstringCRLN_CONST
 39336 ;;		_UseBluetooth
 39337 ;;		_WaitForIRsignal
 39338 ;; This function uses a non-reentrant model
 39339 ;;
 39340                           
 39341                           	psect	text95
 39342  00A83C                     __ptext95:
 39343                           	opt stack 0
 39344  00A83C                     _UARTchar_CONST:
 39345                           	opt stack 22
 39346                           
 39347                           ;incstack = 0
 39348                           ;UARTchar_CONST@data stored from wreg
 39349  00A83C  0100               	movlb	0	; () banked
 39350  00A83E  6F60               	movwf	UARTchar_CONST@data& (0+255),b
 39351                           
 39352                           ; BSR set to: 0
 39353                           ;UART.c: 209: unsigned char temp = data;
 39354  00A840  C060  F061         	movff	UARTchar_CONST@data,UARTchar_CONST@temp
 39355                           
 39356                           ; BSR set to: 0
 39357                           ;UART.c: 210: if(temp != 0)
 39358  00A844  0100               	movlb	0	; () banked
 39359  00A846  5161               	movf	UARTchar_CONST@temp& (0+255),w,b
 39360  00A848  0100               	movlb	0	; () banked
 39361  00A84A  B4D8               	btfsc	status,2,c
 39362  00A84C  0012               	return	
 39363                           
 39364                           ; BSR set to: 0
 39365                           ;UART.c: 211: {
 39366                           ;UART.c: 212: while(!TXSTAbits.TRMT);
 39367  00A84E  D000               	goto	l777
 39368  00A850                     l777:
 39369                           
 39370                           ; BSR set to: 0
 39371  00A850  A2AC               	btfss	4012,1,c	;volatile
 39372  00A852  D7FE               	goto	l777
 39373                           
 39374                           ; BSR set to: 0
 39375                           ;UART.c: 213: TXREG = temp;
 39376  00A854  C061  FFAD         	movff	UARTchar_CONST@temp,4013	;volatile
 39377  00A858  0012               	return	
 39378                           
 39379                           ; BSR set to: 0
 39380                           
 39381                           ; BSR set to: 0
 39382  00A85A  0012               	return		;funcret
 39383  00A85C                     __end_of_UARTchar_CONST:
 39384                           	opt stack 0
 39385                           tblptru	equ	0xFF8
 39386                           tblptrh	equ	0xFF7
 39387                           tblptrl	equ	0xFF6
 39388                           tablat	equ	0xFF5
 39389                           prodh	equ	0xFF4
 39390                           prodl	equ	0xFF3
 39391                           intcon	equ	0xFF2
 39392                           intcon2	equ	0xFF1
 39393                           indf0	equ	0xFEF
 39394                           postinc0	equ	0xFEE
 39395                           plusw0	equ	0xFEB
 39396                           fsr0h	equ	0xFEA
 39397                           fsr0l	equ	0xFE9
 39398                           wreg	equ	0xFE8
 39399                           indf1	equ	0xFE7
 39400                           postdec1	equ	0xFE5
 39401                           fsr1h	equ	0xFE2
 39402                           fsr1l	equ	0xFE1
 39403                           indf2	equ	0xFDF
 39404                           postinc2	equ	0xFDE
 39405                           postdec2	equ	0xFDD
 39406                           plusw2	equ	0xFDB
 39407                           fsr2h	equ	0xFDA
 39408                           fsr2l	equ	0xFD9
 39409                           status	equ	0xFD8
 39410                           
 39411 ;; *************** function _StringContains *****************
 39412 ;; Defined at:
 39413 ;;		line 302 in file "MISC.c"
 39414 ;; Parameters:    Size  Location     Type
 39415 ;;  This            2    0[BANK0 ] PTR const unsigned char 
 39416 ;;		 -> CommandString(100), main@BluetoothString(100), 
 39417 ;;  That            2    2[BANK0 ] PTR const unsigned char 
 39418 ;;		 -> STR_37(2), BluetoothInitialSetup@buf(50), EnterCommandMode@buf(50), 
 39419 ;; Auto vars:     Size  Location     Type
 39420 ;;  i               1    8[BANK0 ] unsigned char 
 39421 ;;  MatchCount      1    7[BANK0 ] unsigned char 
 39422 ;;  MatchAmount     1    6[BANK0 ] unsigned char 
 39423 ;; Return value:  Size  Location     Type
 39424 ;;                  1    wreg      unsigned char 
 39425 ;; Registers used:
 39426 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 39427 ;; Tracked objects:
 39428 ;;		On entry : 0/0
 39429 ;;		On exit  : 0/0
 39430 ;;		Unchanged: 0/0
 39431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39432 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39433 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39434 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39435 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39436 ;;Total ram usage:        9 bytes
 39437 ;; Hardware stack levels used:    1
 39438 ;; Hardware stack levels required when called:    5
 39439 ;; This function calls:
 39440 ;;		Nothing
 39441 ;; This function is called by:
 39442 ;;		_EnterCommandMode
 39443 ;;		_BluetoothInitialSetup
 39444 ;;		_UseBluetooth
 39445 ;; This function uses a non-reentrant model
 39446 ;;
 39447                           
 39448                           	psect	text96
 39449  008574                     __ptext96:
 39450                           	opt stack 0
 39451  008574                     _StringContains:
 39452                           	opt stack 24
 39453                           
 39454                           ;MISC.c: 304: unsigned char MatchCount = 0;
 39455                           
 39456                           ; BSR set to: 0
 39457                           ;incstack = 0
 39458  008574  0E00               	movlw	0
 39459  008576  0100               	movlb	0	; () banked
 39460  008578  6F67               	movwf	StringContains@MatchCount& (0+255),b
 39461                           
 39462                           ;MISC.c: 305: unsigned char MatchAmount = 0;
 39463  00857A  0E00               	movlw	0
 39464  00857C  0100               	movlb	0	; () banked
 39465  00857E  6F66               	movwf	StringContains@MatchAmount& (0+255),b
 39466                           
 39467                           ;MISC.c: 306: unsigned char i = 0;
 39468  008580  0E00               	movlw	0
 39469  008582  0100               	movlb	0	; () banked
 39470  008584  6F68               	movwf	StringContains@i& (0+255),b
 39471                           
 39472                           ;MISC.c: 308: for(i=0;i<254;i++)
 39473  008586  0E00               	movlw	0
 39474  008588  0100               	movlb	0	; () banked
 39475  00858A  6F68               	movwf	StringContains@i& (0+255),b
 39476  00858C                     l10048:
 39477                           
 39478                           ; BSR set to: 0
 39479  00858C  0EFD               	movlw	253
 39480  00858E  0100               	movlb	0	; () banked
 39481  008590  6568               	cpfsgt	StringContains@i& (0+255),b
 39482  008592  D001               	goto	l10052
 39483                           
 39484                           ; BSR set to: 0
 39485  008594  D082               	goto	l10088
 39486  008596                     l10052:
 39487                           
 39488                           ; BSR set to: 0
 39489                           ;MISC.c: 309: {
 39490                           ;MISC.c: 310: if(That[i] == 0)
 39491  008596  0100               	movlb	0	; () banked
 39492  008598  5168               	movf	StringContains@i& (0+255),w,b
 39493  00859A  0D01               	mullw	1
 39494  00859C  C062  F064         	movff	StringContains@That,??_StringContains
 39495  0085A0  C063  F065         	movff	StringContains@That+1,??_StringContains+1
 39496  0085A4  50F3               	movf	prodl,w,c
 39497  0085A6  0100               	movlb	0	; () banked
 39498  0085A8  2764               	addwf	??_StringContains& (0+255),f,b
 39499  0085AA  50F4               	movf	prodh,w,c
 39500  0085AC  0100               	movlb	0	; () banked
 39501  0085AE  2365               	addwfc	(??_StringContains+1)& (0+255),f,b
 39502  0085B0  C064  FFF6         	movff	??_StringContains,tblptrl
 39503  0085B4  C065  FFF7         	movff	??_StringContains+1,tblptrh
 39504  0085B8  0E00               	movlw	low (__mediumconst shr (0+16))
 39505  0085BA  6EF8               	movwf	tblptru,c
 39506  0085BC  0E0F               	movlw	(high __ramtop+-1)
 39507  0085BE  64F7               	cpfsgt	tblptrh,c
 39508  0085C0  D003               	bra	u10297
 39509  0085C2  0008               	tblrd		*
 39510  0085C4  50F5               	movf	tablat,w,c
 39511  0085C6  D005               	bra	u10290
 39512  0085C8                     u10297:
 39513  0085C8  CFF6 FFE9          	movff	tblptrl,fsr0l
 39514  0085CC  CFF7 FFEA          	movff	tblptrh,fsr0h
 39515  0085D0  50EF               	movf	indf0,w,c
 39516  0085D2                     u10290:
 39517  0085D2  0900               	iorlw	0
 39518  0085D4  A4D8               	btfss	status,2,c
 39519  0085D6  D003               	goto	l10056
 39520                           
 39521                           ;MISC.c: 311: {
 39522                           ;MISC.c: 312: MatchAmount = i;
 39523  0085D8  C068  F066         	movff	StringContains@i,StringContains@MatchAmount
 39524                           
 39525                           ;MISC.c: 313: break;
 39526  0085DC  D05E               	goto	l10088
 39527  0085DE                     l10056:
 39528  0085DE  0100               	movlb	0	; () banked
 39529  0085E0  2B68               	incf	StringContains@i& (0+255),f,b
 39530  0085E2  D7D4               	goto	l10048
 39531                           
 39532                           ; BSR set to: 0
 39533                           ;MISC.c: 314: }
 39534                           ;MISC.c: 315: }
 39535                           ;MISC.c: 316: while(*This != 0)
 39536                           
 39537                           ; BSR set to: 0
 39538  0085E4  D05A               	goto	l10088
 39539  0085E6                     l10060:
 39540                           
 39541                           ;MISC.c: 317: {
 39542                           ;MISC.c: 318: if(*This == *That)
 39543  0085E6  C060  FFD9         	movff	StringContains@This,fsr2l
 39544  0085EA  C061  FFDA         	movff	StringContains@This+1,fsr2h
 39545  0085EE  50DF               	movf	indf2,w,c
 39546  0085F0  0100               	movlb	0	; () banked
 39547  0085F2  6F64               	movwf	??_StringContains& (0+255),b
 39548  0085F4  C062  FFF6         	movff	StringContains@That,tblptrl
 39549  0085F8  C063  FFF7         	movff	StringContains@That+1,tblptrh
 39550  0085FC  0E00               	movlw	low (__mediumconst shr (0+16))
 39551  0085FE  6EF8               	movwf	tblptru,c
 39552  008600  0E0F               	movlw	(high __ramtop+-1)
 39553  008602  64F7               	cpfsgt	tblptrh,c
 39554  008604  D003               	bra	u10327
 39555  008606  0008               	tblrd		*
 39556  008608  50F5               	movf	tablat,w,c
 39557  00860A  D005               	bra	u10320
 39558  00860C                     u10327:
 39559  00860C  CFF6 FFE9          	movff	tblptrl,fsr0l
 39560  008610  CFF7 FFEA          	movff	tblptrh,fsr0h
 39561  008614  50EF               	movf	indf0,w,c
 39562  008616                     u10320:
 39563  008616  0100               	movlb	0	; () banked
 39564  008618  1964               	xorwf	??_StringContains& (0+255),w,b
 39565  00861A  A4D8               	btfss	status,2,c
 39566  00861C  D02D               	goto	l10082
 39567                           
 39568                           ; BSR set to: 0
 39569                           ;MISC.c: 319: {
 39570                           ;MISC.c: 320: MatchCount++;
 39571  00861E  0100               	movlb	0	; () banked
 39572  008620  2B67               	incf	StringContains@MatchCount& (0+255),f,b
 39573                           
 39574                           ;MISC.c: 321: That++;
 39575  008622  0100               	movlb	0	; () banked
 39576  008624  4B62               	infsnz	StringContains@That& (0+255),f,b
 39577  008626  2B63               	incf	(StringContains@That+1)& (0+255),f,b
 39578                           
 39579                           ; BSR set to: 0
 39580                           ;MISC.c: 322: if(*That == 0)
 39581  008628  C062  FFF6         	movff	StringContains@That,tblptrl
 39582  00862C  C063  FFF7         	movff	StringContains@That+1,tblptrh
 39583  008630  0E00               	movlw	low (__mediumconst shr (0+16))
 39584  008632  6EF8               	movwf	tblptru,c
 39585  008634  0E0F               	movlw	(high __ramtop+-1)
 39586  008636  64F7               	cpfsgt	tblptrh,c
 39587  008638  D003               	bra	u10347
 39588  00863A  0008               	tblrd		*
 39589  00863C  50F5               	movf	tablat,w,c
 39590  00863E  D005               	bra	u10340
 39591  008640                     u10347:
 39592  008640  CFF6 FFE9          	movff	tblptrl,fsr0l
 39593  008644  CFF7 FFEA          	movff	tblptrh,fsr0h
 39594  008648  50EF               	movf	indf0,w,c
 39595  00864A                     u10340:
 39596  00864A  0900               	iorlw	0
 39597  00864C  A4D8               	btfss	status,2,c
 39598  00864E  D00A               	goto	l10076
 39599                           
 39600                           ;MISC.c: 323: {
 39601                           ;MISC.c: 324: if(MatchAmount == MatchCount)
 39602  008650  0100               	movlb	0	; () banked
 39603  008652  5167               	movf	StringContains@MatchCount& (0+255),w,b
 39604  008654  0100               	movlb	0	; () banked
 39605  008656  1966               	xorwf	StringContains@MatchAmount& (0+255),w,b
 39606  008658  A4D8               	btfss	status,2,c
 39607  00865A  D002               	goto	l10072
 39608                           
 39609                           ; BSR set to: 0
 39610                           ;MISC.c: 325: {
 39611                           ;MISC.c: 326: return 1;
 39612  00865C  0E01               	movlw	1
 39613                           
 39614                           ; BSR set to: 0
 39615  00865E  0012               	return	
 39616  008660                     l10072:
 39617                           
 39618                           ; BSR set to: 0
 39619                           ;MISC.c: 327: }
 39620                           ;MISC.c: 328: return 0;
 39621  008660  0E00               	movlw	0
 39622                           
 39623                           ; BSR set to: 0
 39624  008662  0012               	return	
 39625  008664                     l10076:
 39626                           
 39627                           ;MISC.c: 329: }
 39628                           ;MISC.c: 330: if(*This == 0)
 39629  008664  C060  FFD9         	movff	StringContains@This,fsr2l
 39630  008668  C061  FFDA         	movff	StringContains@This+1,fsr2h
 39631  00866C  50DF               	movf	indf2,w,c
 39632  00866E  A4D8               	btfss	status,2,c
 39633  008670  D010               	goto	l10086
 39634                           
 39635                           ;MISC.c: 331: {
 39636                           ;MISC.c: 332: return 0;
 39637  008672  0E00               	movlw	0
 39638  008674  0012               	return	
 39639                           
 39640                           ;MISC.c: 333: }
 39641                           ;MISC.c: 334: }
 39642  008676  D00D               	goto	l10086
 39643  008678                     l10082:
 39644                           
 39645                           ;MISC.c: 335: else
 39646                           ;MISC.c: 336: {
 39647                           ;MISC.c: 337: That -= MatchCount;
 39648  008678  0100               	movlb	0	; () banked
 39649  00867A  5167               	movf	StringContains@MatchCount& (0+255),w,b
 39650  00867C  0D01               	mullw	1
 39651  00867E  50F3               	movf	prodl,w,c
 39652  008680  0100               	movlb	0	; () banked
 39653  008682  5F62               	subwf	StringContains@That& (0+255),f,b
 39654  008684  50F4               	movf	prodh,w,c
 39655  008686  0100               	movlb	0	; () banked
 39656  008688  5B63               	subwfb	(StringContains@That+1)& (0+255),f,b
 39657                           
 39658                           ; BSR set to: 0
 39659                           ;MISC.c: 338: MatchCount = 0;
 39660  00868A  0E00               	movlw	0
 39661  00868C  0100               	movlb	0	; () banked
 39662  00868E  6F67               	movwf	StringContains@MatchCount& (0+255),b
 39663  008690  D000               	goto	l10086
 39664  008692                     l10086:
 39665                           
 39666                           ;MISC.c: 339: }
 39667                           ;MISC.c: 340: This++;
 39668  008692  0100               	movlb	0	; () banked
 39669  008694  4B60               	infsnz	StringContains@This& (0+255),f,b
 39670  008696  2B61               	incf	(StringContains@This+1)& (0+255),f,b
 39671  008698  D000               	goto	l10088
 39672  00869A                     l10088:
 39673  00869A  C060  FFD9         	movff	StringContains@This,fsr2l
 39674  00869E  C061  FFDA         	movff	StringContains@This+1,fsr2h
 39675  0086A2  50DF               	movf	indf2,w,c
 39676  0086A4  A4D8               	btfss	status,2,c
 39677  0086A6  D79F               	goto	l10060
 39678                           
 39679                           ;MISC.c: 341: }
 39680                           ;MISC.c: 342: return 0;
 39681  0086A8  0E00               	movlw	0
 39682  0086AA  0012               	return	
 39683  0086AC  0012               	return		;funcret
 39684  0086AE                     __end_of_StringContains:
 39685                           	opt stack 0
 39686                           tblptru	equ	0xFF8
 39687                           tblptrh	equ	0xFF7
 39688                           tblptrl	equ	0xFF6
 39689                           tablat	equ	0xFF5
 39690                           prodh	equ	0xFF4
 39691                           prodl	equ	0xFF3
 39692                           intcon	equ	0xFF2
 39693                           intcon2	equ	0xFF1
 39694                           indf0	equ	0xFEF
 39695                           postinc0	equ	0xFEE
 39696                           plusw0	equ	0xFEB
 39697                           fsr0h	equ	0xFEA
 39698                           fsr0l	equ	0xFE9
 39699                           wreg	equ	0xFE8
 39700                           indf1	equ	0xFE7
 39701                           postdec1	equ	0xFE5
 39702                           fsr1h	equ	0xFE2
 39703                           fsr1l	equ	0xFE1
 39704                           indf2	equ	0xFDF
 39705                           postinc2	equ	0xFDE
 39706                           postdec2	equ	0xFDD
 39707                           plusw2	equ	0xFDB
 39708                           fsr2h	equ	0xFDA
 39709                           fsr2l	equ	0xFD9
 39710                           status	equ	0xFD8
 39711                           
 39712 ;; *************** function _ResetBlue *****************
 39713 ;; Defined at:
 39714 ;;		line 120 in file "Bluetooth.c"
 39715 ;; Parameters:    Size  Location     Type
 39716 ;;		None
 39717 ;; Auto vars:     Size  Location     Type
 39718 ;;		None
 39719 ;; Return value:  Size  Location     Type
 39720 ;;		None               void
 39721 ;; Registers used:
 39722 ;;		wreg, status,2, status,0, cstack
 39723 ;; Tracked objects:
 39724 ;;		On entry : 0/0
 39725 ;;		On exit  : 0/0
 39726 ;;		Unchanged: 0/0
 39727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39732 ;;Total ram usage:        0 bytes
 39733 ;; Hardware stack levels used:    1
 39734 ;; Hardware stack levels required when called:    6
 39735 ;; This function calls:
 39736 ;;		_delayUS
 39737 ;; This function is called by:
 39738 ;;		_InitBluetooth
 39739 ;;		_EnterCommandMode
 39740 ;; This function uses a non-reentrant model
 39741 ;;
 39742                           
 39743                           	psect	text97
 39744  009062                     __ptext97:
 39745                           	opt stack 0
 39746  009062                     _ResetBlue:
 39747                           	opt stack 21
 39748                           
 39749                           ;Bluetooth.c: 122: LATA &= ~0x04;
 39750                           
 39751                           ;incstack = 0
 39752  009062  9489               	bcf	3977,2,c	;volatile
 39753                           
 39754                           ;Bluetooth.c: 123: delayUS(50000);
 39755  009064  0E50               	movlw	80
 39756  009066  0100               	movlb	0	; () banked
 39757  009068  6F60               	movwf	delayUS@US& (0+255),b
 39758  00906A  0EC3               	movlw	195
 39759  00906C  6F61               	movwf	(delayUS@US+1)& (0+255),b
 39760  00906E  0E00               	movlw	0
 39761  009070  6F62               	movwf	(delayUS@US+2)& (0+255),b
 39762  009072  0E00               	movlw	0
 39763  009074  6F63               	movwf	(delayUS@US+3)& (0+255),b
 39764  009076  EC3F  F051         	call	_delayUS	;wreg free
 39765                           
 39766                           ;Bluetooth.c: 124: delayUS(50000);
 39767  00907A  0E50               	movlw	80
 39768  00907C  0100               	movlb	0	; () banked
 39769  00907E  6F60               	movwf	delayUS@US& (0+255),b
 39770  009080  0EC3               	movlw	195
 39771  009082  6F61               	movwf	(delayUS@US+1)& (0+255),b
 39772  009084  0E00               	movlw	0
 39773  009086  6F62               	movwf	(delayUS@US+2)& (0+255),b
 39774  009088  0E00               	movlw	0
 39775  00908A  6F63               	movwf	(delayUS@US+3)& (0+255),b
 39776  00908C  EC3F  F051         	call	_delayUS	;wreg free
 39777                           
 39778                           ;Bluetooth.c: 125: delayUS(50000);
 39779  009090  0E50               	movlw	80
 39780  009092  0100               	movlb	0	; () banked
 39781  009094  6F60               	movwf	delayUS@US& (0+255),b
 39782  009096  0EC3               	movlw	195
 39783  009098  6F61               	movwf	(delayUS@US+1)& (0+255),b
 39784  00909A  0E00               	movlw	0
 39785  00909C  6F62               	movwf	(delayUS@US+2)& (0+255),b
 39786  00909E  0E00               	movlw	0
 39787  0090A0  6F63               	movwf	(delayUS@US+3)& (0+255),b
 39788  0090A2  EC3F  F051         	call	_delayUS	;wreg free
 39789                           
 39790                           ;Bluetooth.c: 126: delayUS(50000);
 39791  0090A6  0E50               	movlw	80
 39792  0090A8  0100               	movlb	0	; () banked
 39793  0090AA  6F60               	movwf	delayUS@US& (0+255),b
 39794  0090AC  0EC3               	movlw	195
 39795  0090AE  6F61               	movwf	(delayUS@US+1)& (0+255),b
 39796  0090B0  0E00               	movlw	0
 39797  0090B2  6F62               	movwf	(delayUS@US+2)& (0+255),b
 39798  0090B4  0E00               	movlw	0
 39799  0090B6  6F63               	movwf	(delayUS@US+3)& (0+255),b
 39800  0090B8  EC3F  F051         	call	_delayUS	;wreg free
 39801                           
 39802                           ;Bluetooth.c: 127: delayUS(50000);
 39803  0090BC  0E50               	movlw	80
 39804  0090BE  0100               	movlb	0	; () banked
 39805  0090C0  6F60               	movwf	delayUS@US& (0+255),b
 39806  0090C2  0EC3               	movlw	195
 39807  0090C4  6F61               	movwf	(delayUS@US+1)& (0+255),b
 39808  0090C6  0E00               	movlw	0
 39809  0090C8  6F62               	movwf	(delayUS@US+2)& (0+255),b
 39810  0090CA  0E00               	movlw	0
 39811  0090CC  6F63               	movwf	(delayUS@US+3)& (0+255),b
 39812  0090CE  EC3F  F051         	call	_delayUS	;wreg free
 39813                           
 39814                           ;Bluetooth.c: 128: LATA |= 0x04;
 39815  0090D2  8489               	bsf	3977,2,c	;volatile
 39816                           
 39817                           ;Bluetooth.c: 129: delayUS(50000);
 39818  0090D4  0E50               	movlw	80
 39819  0090D6  0100               	movlb	0	; () banked
 39820  0090D8  6F60               	movwf	delayUS@US& (0+255),b
 39821  0090DA  0EC3               	movlw	195
 39822  0090DC  6F61               	movwf	(delayUS@US+1)& (0+255),b
 39823  0090DE  0E00               	movlw	0
 39824  0090E0  6F62               	movwf	(delayUS@US+2)& (0+255),b
 39825  0090E2  0E00               	movlw	0
 39826  0090E4  6F63               	movwf	(delayUS@US+3)& (0+255),b
 39827  0090E6  EC3F  F051         	call	_delayUS	;wreg free
 39828                           
 39829                           ;Bluetooth.c: 130: delayUS(50000);
 39830  0090EA  0E50               	movlw	80
 39831  0090EC  0100               	movlb	0	; () banked
 39832  0090EE  6F60               	movwf	delayUS@US& (0+255),b
 39833  0090F0  0EC3               	movlw	195
 39834  0090F2  6F61               	movwf	(delayUS@US+1)& (0+255),b
 39835  0090F4  0E00               	movlw	0
 39836  0090F6  6F62               	movwf	(delayUS@US+2)& (0+255),b
 39837  0090F8  0E00               	movlw	0
 39838  0090FA  6F63               	movwf	(delayUS@US+3)& (0+255),b
 39839  0090FC  EC3F  F051         	call	_delayUS	;wreg free
 39840                           
 39841                           ;Bluetooth.c: 131: delayUS(50000);
 39842  009100  0E50               	movlw	80
 39843  009102  0100               	movlb	0	; () banked
 39844  009104  6F60               	movwf	delayUS@US& (0+255),b
 39845  009106  0EC3               	movlw	195
 39846  009108  6F61               	movwf	(delayUS@US+1)& (0+255),b
 39847  00910A  0E00               	movlw	0
 39848  00910C  6F62               	movwf	(delayUS@US+2)& (0+255),b
 39849  00910E  0E00               	movlw	0
 39850  009110  6F63               	movwf	(delayUS@US+3)& (0+255),b
 39851  009112  EC3F  F051         	call	_delayUS	;wreg free
 39852                           
 39853                           ;Bluetooth.c: 132: delayUS(50000);
 39854  009116  0E50               	movlw	80
 39855  009118  0100               	movlb	0	; () banked
 39856  00911A  6F60               	movwf	delayUS@US& (0+255),b
 39857  00911C  0EC3               	movlw	195
 39858  00911E  6F61               	movwf	(delayUS@US+1)& (0+255),b
 39859  009120  0E00               	movlw	0
 39860  009122  6F62               	movwf	(delayUS@US+2)& (0+255),b
 39861  009124  0E00               	movlw	0
 39862  009126  6F63               	movwf	(delayUS@US+3)& (0+255),b
 39863  009128  EC3F  F051         	call	_delayUS	;wreg free
 39864                           
 39865                           ;Bluetooth.c: 133: delayUS(50000);
 39866  00912C  0E50               	movlw	80
 39867  00912E  0100               	movlb	0	; () banked
 39868  009130  6F60               	movwf	delayUS@US& (0+255),b
 39869  009132  0EC3               	movlw	195
 39870  009134  6F61               	movwf	(delayUS@US+1)& (0+255),b
 39871  009136  0E00               	movlw	0
 39872  009138  6F62               	movwf	(delayUS@US+2)& (0+255),b
 39873  00913A  0E00               	movlw	0
 39874  00913C  6F63               	movwf	(delayUS@US+3)& (0+255),b
 39875  00913E  EC3F  F051         	call	_delayUS	;wreg free
 39876  009142  0012               	return		;funcret
 39877  009144                     __end_of_ResetBlue:
 39878                           	opt stack 0
 39879                           tblptru	equ	0xFF8
 39880                           tblptrh	equ	0xFF7
 39881                           tblptrl	equ	0xFF6
 39882                           tablat	equ	0xFF5
 39883                           prodh	equ	0xFF4
 39884                           prodl	equ	0xFF3
 39885                           intcon	equ	0xFF2
 39886                           intcon2	equ	0xFF1
 39887                           indf0	equ	0xFEF
 39888                           postinc0	equ	0xFEE
 39889                           plusw0	equ	0xFEB
 39890                           fsr0h	equ	0xFEA
 39891                           fsr0l	equ	0xFE9
 39892                           wreg	equ	0xFE8
 39893                           indf1	equ	0xFE7
 39894                           postdec1	equ	0xFE5
 39895                           fsr1h	equ	0xFE2
 39896                           fsr1l	equ	0xFE1
 39897                           indf2	equ	0xFDF
 39898                           postinc2	equ	0xFDE
 39899                           postdec2	equ	0xFDD
 39900                           plusw2	equ	0xFDB
 39901                           fsr2h	equ	0xFDA
 39902                           fsr2l	equ	0xFD9
 39903                           status	equ	0xFD8
 39904                           
 39905 ;; *************** function _delayUS *****************
 39906 ;; Defined at:
 39907 ;;		line 53 in file "MISC.c"
 39908 ;; Parameters:    Size  Location     Type
 39909 ;;  US              4    0[BANK0 ] long 
 39910 ;; Auto vars:     Size  Location     Type
 39911 ;;  i               4    5[BANK0 ] long 
 39912 ;; Return value:  Size  Location     Type
 39913 ;;		None               void
 39914 ;; Registers used:
 39915 ;;		wreg, status,2, status,0
 39916 ;; Tracked objects:
 39917 ;;		On entry : 0/0
 39918 ;;		On exit  : 0/0
 39919 ;;		Unchanged: 0/0
 39920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39921 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39922 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39923 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39924 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39925 ;;Total ram usage:        9 bytes
 39926 ;; Hardware stack levels used:    1
 39927 ;; Hardware stack levels required when called:    5
 39928 ;; This function calls:
 39929 ;;		Nothing
 39930 ;; This function is called by:
 39931 ;;		_main
 39932 ;;		_ReadVoltage
 39933 ;;		_InternalADC_Read
 39934 ;;		_UseIRCode
 39935 ;;		_SendNEC_wait
 39936 ;;		_ReadCodeButtons
 39937 ;;		_ResetBlue
 39938 ;;		_EnterCommandMode
 39939 ;;		_BluetoothInitialSetup
 39940 ;;		_UseBluetooth
 39941 ;;		_WaitForIRsignal
 39942 ;;		_CalibrateDelay
 39943 ;; This function uses a non-reentrant model
 39944 ;;
 39945                           
 39946                           	psect	text98
 39947  00A27E                     __ptext98:
 39948                           	opt stack 0
 39949  00A27E                     _delayUS:
 39950                           	opt stack 25
 39951                           
 39952                           ;MISC.c: 55: long i;
 39953                           ;MISC.c: 56: for(i=0; i<US; i += 2)
 39954                           
 39955                           ;incstack = 0
 39956  00A27E  0E00               	movlw	0
 39957  00A280  0100               	movlb	0	; () banked
 39958  00A282  6F65               	movwf	delayUS@i& (0+255),b
 39959  00A284  0E00               	movlw	0
 39960  00A286  6F66               	movwf	(delayUS@i+1)& (0+255),b
 39961  00A288  0E00               	movlw	0
 39962  00A28A  6F67               	movwf	(delayUS@i+2)& (0+255),b
 39963  00A28C  0E00               	movlw	0
 39964  00A28E  6F68               	movwf	(delayUS@i+3)& (0+255),b
 39965  00A290  D008               	goto	l337
 39966  00A292                     l338:
 39967                           
 39968                           ; BSR set to: 0
 39969                           ;MISC.c: 57: {
 39970                           ;MISC.c: 58: __nop();
 39971  00A292  F000               	nop	
 39972  00A294  0E02               	movlw	2
 39973  00A296  0100               	movlb	0	; () banked
 39974  00A298  2765               	addwf	delayUS@i& (0+255),f,b
 39975  00A29A  0E00               	movlw	0
 39976  00A29C  2366               	addwfc	(delayUS@i+1)& (0+255),f,b
 39977  00A29E  2367               	addwfc	(delayUS@i+2)& (0+255),f,b
 39978  00A2A0  2368               	addwfc	(delayUS@i+3)& (0+255),f,b
 39979  00A2A2                     l337:
 39980                           
 39981                           ; BSR set to: 0
 39982  00A2A2  0100               	movlb	0	; () banked
 39983  00A2A4  5160               	movf	delayUS@US& (0+255),w,b
 39984  00A2A6  0100               	movlb	0	; () banked
 39985  00A2A8  5D65               	subwf	delayUS@i& (0+255),w,b
 39986  00A2AA  0100               	movlb	0	; () banked
 39987  00A2AC  5161               	movf	(delayUS@US+1)& (0+255),w,b
 39988  00A2AE  0100               	movlb	0	; () banked
 39989  00A2B0  5966               	subwfb	(delayUS@i+1)& (0+255),w,b
 39990  00A2B2  0100               	movlb	0	; () banked
 39991  00A2B4  5162               	movf	(delayUS@US+2)& (0+255),w,b
 39992  00A2B6  0100               	movlb	0	; () banked
 39993  00A2B8  5967               	subwfb	(delayUS@i+2)& (0+255),w,b
 39994  00A2BA  0100               	movlb	0	; () banked
 39995  00A2BC  5168               	movf	(delayUS@i+3)& (0+255),w,b
 39996  00A2BE  0A80               	xorlw	128
 39997  00A2C0  0100               	movlb	0	; () banked
 39998  00A2C2  6F64               	movwf	??_delayUS& (0+255),b
 39999  00A2C4  0100               	movlb	0	; () banked
 40000  00A2C6  5163               	movf	(delayUS@US+3)& (0+255),w,b
 40001  00A2C8  0A80               	xorlw	128
 40002  00A2CA  0100               	movlb	0	; () banked
 40003  00A2CC  5964               	subwfb	??_delayUS& (0+255),w,b
 40004  00A2CE  A0D8               	btfss	status,0,c
 40005  00A2D0  D7E0               	goto	l338
 40006                           
 40007                           ; BSR set to: 0
 40008                           
 40009                           ; BSR set to: 0
 40010  00A2D2  0012               	return		;funcret
 40011  00A2D4                     __end_of_delayUS:
 40012                           	opt stack 0
 40013                           tblptru	equ	0xFF8
 40014                           tblptrh	equ	0xFF7
 40015                           tblptrl	equ	0xFF6
 40016                           tablat	equ	0xFF5
 40017                           prodh	equ	0xFF4
 40018                           prodl	equ	0xFF3
 40019                           intcon	equ	0xFF2
 40020                           intcon2	equ	0xFF1
 40021                           indf0	equ	0xFEF
 40022                           postinc0	equ	0xFEE
 40023                           plusw0	equ	0xFEB
 40024                           fsr0h	equ	0xFEA
 40025                           fsr0l	equ	0xFE9
 40026                           wreg	equ	0xFE8
 40027                           indf1	equ	0xFE7
 40028                           postdec1	equ	0xFE5
 40029                           fsr1h	equ	0xFE2
 40030                           fsr1l	equ	0xFE1
 40031                           indf2	equ	0xFDF
 40032                           postinc2	equ	0xFDE
 40033                           postdec2	equ	0xFDD
 40034                           plusw2	equ	0xFDB
 40035                           fsr2h	equ	0xFDA
 40036                           fsr2l	equ	0xFD9
 40037                           status	equ	0xFD8
 40038                           
 40039 ;; *************** function _ClearUSART *****************
 40040 ;; Defined at:
 40041 ;;		line 250 in file "UART.c"
 40042 ;; Parameters:    Size  Location     Type
 40043 ;;		None
 40044 ;; Auto vars:     Size  Location     Type
 40045 ;;		None
 40046 ;; Return value:  Size  Location     Type
 40047 ;;		None               void
 40048 ;; Registers used:
 40049 ;;		wreg, status,2, cstack
 40050 ;; Tracked objects:
 40051 ;;		On entry : 0/0
 40052 ;;		On exit  : 0/0
 40053 ;;		Unchanged: 0/0
 40054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40059 ;;Total ram usage:        0 bytes
 40060 ;; Hardware stack levels used:    1
 40061 ;; Hardware stack levels required when called:    6
 40062 ;; This function calls:
 40063 ;;		_ReadUSART
 40064 ;; This function is called by:
 40065 ;;		_main
 40066 ;;		_InitUART
 40067 ;;		_InitBluetooth
 40068 ;;		_EnterCommandMode
 40069 ;;		_BluetoothInitialSetup
 40070 ;;		_UseBluetooth
 40071 ;; This function uses a non-reentrant model
 40072 ;;
 40073                           
 40074                           	psect	text99
 40075  00A984                     __ptext99:
 40076                           	opt stack 0
 40077  00A984                     _ClearUSART:
 40078                           	opt stack 23
 40079                           
 40080                           ;UART.c: 252: RCSTAbits.CREN = 0;
 40081                           
 40082                           ; BSR set to: 0
 40083                           ;incstack = 0
 40084  00A984  98AB               	bcf	4011,4,c	;volatile
 40085                           
 40086                           ;UART.c: 253: RCSTAbits.CREN = 1;
 40087  00A986  88AB               	bsf	4011,4,c	;volatile
 40088                           
 40089                           ;UART.c: 254: ReadUSART();
 40090  00A988  EC58  F054         	call	_ReadUSART	;wreg free
 40091                           
 40092                           ;UART.c: 255: ReadUSART();
 40093  00A98C  EC58  F054         	call	_ReadUSART	;wreg free
 40094                           
 40095                           ;UART.c: 256: ReadUSART();
 40096  00A990  EC58  F054         	call	_ReadUSART	;wreg free
 40097  00A994  0012               	return		;funcret
 40098  00A996                     __end_of_ClearUSART:
 40099                           	opt stack 0
 40100                           tblptru	equ	0xFF8
 40101                           tblptrh	equ	0xFF7
 40102                           tblptrl	equ	0xFF6
 40103                           tablat	equ	0xFF5
 40104                           prodh	equ	0xFF4
 40105                           prodl	equ	0xFF3
 40106                           intcon	equ	0xFF2
 40107                           intcon2	equ	0xFF1
 40108                           indf0	equ	0xFEF
 40109                           postinc0	equ	0xFEE
 40110                           plusw0	equ	0xFEB
 40111                           fsr0h	equ	0xFEA
 40112                           fsr0l	equ	0xFE9
 40113                           wreg	equ	0xFE8
 40114                           indf1	equ	0xFE7
 40115                           postdec1	equ	0xFE5
 40116                           fsr1h	equ	0xFE2
 40117                           fsr1l	equ	0xFE1
 40118                           indf2	equ	0xFDF
 40119                           postinc2	equ	0xFDE
 40120                           postdec2	equ	0xFDD
 40121                           plusw2	equ	0xFDB
 40122                           fsr2h	equ	0xFDA
 40123                           fsr2l	equ	0xFD9
 40124                           status	equ	0xFD8
 40125                           
 40126 ;; *************** function _ReadUSART *****************
 40127 ;; Defined at:
 40128 ;;		line 263 in file "UART.c"
 40129 ;; Parameters:    Size  Location     Type
 40130 ;;		None
 40131 ;; Auto vars:     Size  Location     Type
 40132 ;;  data            1    0[BANK0 ] unsigned char 
 40133 ;; Return value:  Size  Location     Type
 40134 ;;                  1    wreg      unsigned char 
 40135 ;; Registers used:
 40136 ;;		wreg, status,2
 40137 ;; Tracked objects:
 40138 ;;		On entry : 0/0
 40139 ;;		On exit  : 0/0
 40140 ;;		Unchanged: 0/0
 40141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40143 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40145 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40146 ;;Total ram usage:        1 bytes
 40147 ;; Hardware stack levels used:    1
 40148 ;; Hardware stack levels required when called:    5
 40149 ;; This function calls:
 40150 ;;		Nothing
 40151 ;; This function is called by:
 40152 ;;		_ClearUSART
 40153 ;; This function uses a non-reentrant model
 40154 ;;
 40155                           
 40156                           	psect	text100
 40157  00A8B0                     __ptext100:
 40158                           	opt stack 0
 40159  00A8B0                     _ReadUSART:
 40160                           	opt stack 23
 40161                           
 40162                           ;UART.c: 265: unsigned char data;
 40163                           ;UART.c: 267: if(RCSTAbits.OERR)
 40164                           
 40165                           ;incstack = 0
 40166  00A8B0  A2AB               	btfss	4011,1,c	;volatile
 40167  00A8B2  D004               	goto	l798
 40168                           
 40169                           ;UART.c: 268: {
 40170                           ;UART.c: 270: RCSTAbits.CREN = 0;
 40171  00A8B4  98AB               	bcf	4011,4,c	;volatile
 40172                           
 40173                           ;UART.c: 271: RCSTAbits.CREN = 1;
 40174  00A8B6  88AB               	bsf	4011,4,c	;volatile
 40175                           
 40176                           ;UART.c: 272: return 0;
 40177  00A8B8  0E00               	movlw	0
 40178  00A8BA  0012               	return	
 40179  00A8BC                     l798:
 40180                           
 40181                           ;UART.c: 273: }
 40182                           ;UART.c: 275: data = RCREG;
 40183  00A8BC  CFAE F060          	movff	4014,ReadUSART@data	;volatile
 40184                           
 40185                           ;UART.c: 276: return (data);
 40186  00A8C0  0100               	movlb	0	; () banked
 40187  00A8C2  5160               	movf	ReadUSART@data& (0+255),w,b
 40188  00A8C4  0012               	return	
 40189                           
 40190                           ; BSR set to: 0
 40191  00A8C6  0012               	return		;funcret
 40192  00A8C8                     __end_of_ReadUSART:
 40193                           	opt stack 0
 40194                           tblptru	equ	0xFF8
 40195                           tblptrh	equ	0xFF7
 40196                           tblptrl	equ	0xFF6
 40197                           tablat	equ	0xFF5
 40198                           prodh	equ	0xFF4
 40199                           prodl	equ	0xFF3
 40200                           intcon	equ	0xFF2
 40201                           intcon2	equ	0xFF1
 40202                           indf0	equ	0xFEF
 40203                           postinc0	equ	0xFEE
 40204                           plusw0	equ	0xFEB
 40205                           fsr0h	equ	0xFEA
 40206                           fsr0l	equ	0xFE9
 40207                           wreg	equ	0xFE8
 40208                           indf1	equ	0xFE7
 40209                           postdec1	equ	0xFE5
 40210                           fsr1h	equ	0xFE2
 40211                           fsr1l	equ	0xFE1
 40212                           indf2	equ	0xFDF
 40213                           postinc2	equ	0xFDE
 40214                           postdec2	equ	0xFDD
 40215                           plusw2	equ	0xFDB
 40216                           fsr2h	equ	0xFDA
 40217                           fsr2l	equ	0xFD9
 40218                           status	equ	0xFD8
 40219                           
 40220 ;; *************** function _BlueConnected *****************
 40221 ;; Defined at:
 40222 ;;		line 105 in file "Bluetooth.c"
 40223 ;; Parameters:    Size  Location     Type
 40224 ;;		None
 40225 ;; Auto vars:     Size  Location     Type
 40226 ;;		None
 40227 ;; Return value:  Size  Location     Type
 40228 ;;                  1    wreg      unsigned char 
 40229 ;; Registers used:
 40230 ;;		wreg
 40231 ;; Tracked objects:
 40232 ;;		On entry : 0/0
 40233 ;;		On exit  : 0/0
 40234 ;;		Unchanged: 0/0
 40235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40240 ;;Total ram usage:        0 bytes
 40241 ;; Hardware stack levels used:    1
 40242 ;; Hardware stack levels required when called:    5
 40243 ;; This function calls:
 40244 ;;		Nothing
 40245 ;; This function is called by:
 40246 ;;		_main
 40247 ;;		_EnterCommandMode
 40248 ;; This function uses a non-reentrant model
 40249 ;;
 40250                           
 40251                           	psect	text101
 40252  00A9FE                     __ptext101:
 40253                           	opt stack 0
 40254  00A9FE                     _BlueConnected:
 40255                           	opt stack 22
 40256                           
 40257                           ;Bluetooth.c: 108: if((PORTA & 0x02) == 0x02)
 40258                           
 40259                           ;incstack = 0
 40260  00A9FE  A280               	btfss	3968,1,c	;volatile
 40261  00AA00  D002               	goto	l9634
 40262                           
 40263                           ;Bluetooth.c: 109: {
 40264                           ;Bluetooth.c: 110: return 1;
 40265  00AA02  0E01               	movlw	1
 40266  00AA04  0012               	return	
 40267  00AA06                     l9634:
 40268                           
 40269                           ;Bluetooth.c: 111: }
 40270                           ;Bluetooth.c: 112: return 0;
 40271  00AA06  0E00               	movlw	0
 40272  00AA08  0012               	return	
 40273  00AA0A  0012               	return		;funcret
 40274  00AA0C                     __end_of_BlueConnected:
 40275                           	opt stack 0
 40276                           tblptru	equ	0xFF8
 40277                           tblptrh	equ	0xFF7
 40278                           tblptrl	equ	0xFF6
 40279                           tablat	equ	0xFF5
 40280                           prodh	equ	0xFF4
 40281                           prodl	equ	0xFF3
 40282                           intcon	equ	0xFF2
 40283                           intcon2	equ	0xFF1
 40284                           indf0	equ	0xFEF
 40285                           postinc0	equ	0xFEE
 40286                           plusw0	equ	0xFEB
 40287                           fsr0h	equ	0xFEA
 40288                           fsr0l	equ	0xFE9
 40289                           wreg	equ	0xFE8
 40290                           indf1	equ	0xFE7
 40291                           postdec1	equ	0xFE5
 40292                           fsr1h	equ	0xFE2
 40293                           fsr1l	equ	0xFE1
 40294                           indf2	equ	0xFDF
 40295                           postinc2	equ	0xFDE
 40296                           postdec2	equ	0xFDD
 40297                           plusw2	equ	0xFDB
 40298                           fsr2h	equ	0xFDA
 40299                           fsr2l	equ	0xFD9
 40300                           status	equ	0xFD8
 40301                           
 40302 ;; *************** function _BufferCopy *****************
 40303 ;; Defined at:
 40304 ;;		line 217 in file "MISC.c"
 40305 ;; Parameters:    Size  Location     Type
 40306 ;;  from            2    8[BANK0 ] PTR unsigned char 
 40307 ;;		 -> BluetoothInitialSetup@BluetoothVersionLine2(30), BluetoothInitialSetup@BluetoothVersionLine1(30), StringAddEqual
      +@temp(255), Init_System@buf(50), 
 40308 ;;		 -> BluetoothBroadcast(21), ReceivedString(100), 
 40309 ;;  to              2   10[BANK0 ] PTR unsigned char 
 40310 ;;		 -> BluetoothInitialSetup@BroadcastTEMP(21), BluetoothFirmware2(30), BluetoothFirmware1(30), BluetoothBroadcast(21),
      + 
 40311 ;;		 -> ReceivedString(100), main@BroadcastTEMP(21), main@BluetoothString(100), 
 40312 ;;  count           1   12[BANK0 ] unsigned char 
 40313 ;;  shift           1   13[BANK0 ] unsigned char 
 40314 ;; Auto vars:     Size  Location     Type
 40315 ;;  i               1   14[BANK0 ] unsigned char 
 40316 ;; Return value:  Size  Location     Type
 40317 ;;		None               void
 40318 ;; Registers used:
 40319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40320 ;; Tracked objects:
 40321 ;;		On entry : 0/0
 40322 ;;		On exit  : 0/0
 40323 ;;		Unchanged: 0/0
 40324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40325 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40326 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40328 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40329 ;;Total ram usage:        7 bytes
 40330 ;; Hardware stack levels used:    1
 40331 ;; Hardware stack levels required when called:    6
 40332 ;; This function calls:
 40333 ;;		_cleanBuffer
 40334 ;; This function is called by:
 40335 ;;		_main
 40336 ;;		_Init_System
 40337 ;;		_StringAddEqual
 40338 ;;		_BluetoothInitialSetup
 40339 ;;		_UseBluetooth
 40340 ;; This function uses a non-reentrant model
 40341 ;;
 40342                           
 40343                           	psect	text102
 40344  009DBE                     __ptext102:
 40345                           	opt stack 0
 40346  009DBE                     _BufferCopy:
 40347                           	opt stack 22
 40348                           
 40349                           ;MISC.c: 219: unsigned char i=0;
 40350                           
 40351                           ;incstack = 0
 40352  009DBE  0E00               	movlw	0
 40353  009DC0  0100               	movlb	0	; () banked
 40354  009DC2  6F6E               	movwf	BufferCopy@i& (0+255),b
 40355                           
 40356                           ; BSR set to: 0
 40357                           ;MISC.c: 220: cleanBuffer(to,count);
 40358  009DC4  C06A  F060         	movff	BufferCopy@to,cleanBuffer@data
 40359  009DC8  C06B  F061         	movff	BufferCopy@to+1,cleanBuffer@data+1
 40360  009DCC  C06C  F062         	movff	BufferCopy@count,cleanBuffer@count
 40361  009DD0  0100               	movlb	0	; () banked
 40362  009DD2  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 40363  009DD4  ECE6  F050         	call	_cleanBuffer	;wreg free
 40364                           
 40365                           ;MISC.c: 221: for(i = shift; i>0;i--)
 40366  009DD8  C06D  F06E         	movff	BufferCopy@shift,BufferCopy@i
 40367  009DDC                     l10166:
 40368  009DDC  0100               	movlb	0	; () banked
 40369  009DDE  516E               	movf	BufferCopy@i& (0+255),w,b
 40370  009DE0  0100               	movlb	0	; () banked
 40371  009DE2  B4D8               	btfsc	status,2,c
 40372  009DE4  D022               	goto	l10186
 40373  009DE6  D001               	goto	l10170
 40374                           
 40375                           ; BSR set to: 0
 40376  009DE8  D020               	goto	l10186
 40377  009DEA                     l10170:
 40378                           
 40379                           ; BSR set to: 0
 40380                           ;MISC.c: 222: {
 40381                           ;MISC.c: 223: *to = ' ';
 40382  009DEA  C06A  FFD9         	movff	BufferCopy@to,fsr2l
 40383  009DEE  C06B  FFDA         	movff	BufferCopy@to+1,fsr2h
 40384  009DF2  0E20               	movlw	32
 40385  009DF4  6EDF               	movwf	indf2,c
 40386                           
 40387                           ; BSR set to: 0
 40388                           ;MISC.c: 224: to++;
 40389  009DF6  0100               	movlb	0	; () banked
 40390  009DF8  4B6A               	infsnz	BufferCopy@to& (0+255),f,b
 40391  009DFA  2B6B               	incf	(BufferCopy@to+1)& (0+255),f,b
 40392                           
 40393                           ; BSR set to: 0
 40394  009DFC  0100               	movlb	0	; () banked
 40395  009DFE  076E               	decf	BufferCopy@i& (0+255),f,b
 40396  009E00  D7ED               	goto	l10166
 40397                           
 40398                           ; BSR set to: 0
 40399                           ;MISC.c: 225: }
 40400                           ;MISC.c: 226: while(*from != 0 && count >0)
 40401                           
 40402                           ; BSR set to: 0
 40403  009E02  D013               	goto	l10186
 40404  009E04                     l10178:
 40405                           
 40406                           ; BSR set to: 0
 40407                           ;MISC.c: 227: {
 40408                           ;MISC.c: 228: *to = *from;
 40409  009E04  C068  FFD9         	movff	BufferCopy@from,fsr2l
 40410  009E08  C069  FFDA         	movff	BufferCopy@from+1,fsr2h
 40411  009E0C  C06A  FFE1         	movff	BufferCopy@to,fsr1l
 40412  009E10  C06B  FFE2         	movff	BufferCopy@to+1,fsr1h
 40413  009E14  CFDF FFE7          	movff	indf2,indf1
 40414                           
 40415                           ; BSR set to: 0
 40416                           ;MISC.c: 229: from++;
 40417  009E18  0100               	movlb	0	; () banked
 40418  009E1A  4B68               	infsnz	BufferCopy@from& (0+255),f,b
 40419  009E1C  2B69               	incf	(BufferCopy@from+1)& (0+255),f,b
 40420                           
 40421                           ; BSR set to: 0
 40422                           ;MISC.c: 230: to++;
 40423  009E1E  0100               	movlb	0	; () banked
 40424  009E20  4B6A               	infsnz	BufferCopy@to& (0+255),f,b
 40425  009E22  2B6B               	incf	(BufferCopy@to+1)& (0+255),f,b
 40426                           
 40427                           ; BSR set to: 0
 40428                           ;MISC.c: 231: count--;
 40429  009E24  0100               	movlb	0	; () banked
 40430  009E26  076C               	decf	BufferCopy@count& (0+255),f,b
 40431  009E28  D000               	goto	l10186
 40432  009E2A                     l10186:
 40433                           
 40434                           ; BSR set to: 0
 40435  009E2A  C068  FFD9         	movff	BufferCopy@from,fsr2l
 40436  009E2E  C069  FFDA         	movff	BufferCopy@from+1,fsr2h
 40437  009E32  50DF               	movf	indf2,w,c
 40438  009E34  B4D8               	btfsc	status,2,c
 40439  009E36  0012               	return	
 40440                           
 40441                           ; BSR set to: 0
 40442  009E38  0100               	movlb	0	; () banked
 40443  009E3A  516C               	movf	BufferCopy@count& (0+255),w,b
 40444  009E3C  0100               	movlb	0	; () banked
 40445  009E3E  B4D8               	btfsc	status,2,c
 40446  009E40  0012               	return	
 40447  009E42  D7E0               	goto	l10178
 40448                           
 40449                           ; BSR set to: 0
 40450  009E44  0012               	return	
 40451                           
 40452                           ; BSR set to: 0
 40453                           
 40454                           ; BSR set to: 0
 40455  009E46  0012               	return		;funcret
 40456  009E48                     __end_of_BufferCopy:
 40457                           	opt stack 0
 40458                           tblptru	equ	0xFF8
 40459                           tblptrh	equ	0xFF7
 40460                           tblptrl	equ	0xFF6
 40461                           tablat	equ	0xFF5
 40462                           prodh	equ	0xFF4
 40463                           prodl	equ	0xFF3
 40464                           intcon	equ	0xFF2
 40465                           intcon2	equ	0xFF1
 40466                           indf0	equ	0xFEF
 40467                           postinc0	equ	0xFEE
 40468                           plusw0	equ	0xFEB
 40469                           fsr0h	equ	0xFEA
 40470                           fsr0l	equ	0xFE9
 40471                           wreg	equ	0xFE8
 40472                           indf1	equ	0xFE7
 40473                           postdec1	equ	0xFE5
 40474                           fsr1h	equ	0xFE2
 40475                           fsr1l	equ	0xFE1
 40476                           indf2	equ	0xFDF
 40477                           postinc2	equ	0xFDE
 40478                           postdec2	equ	0xFDD
 40479                           plusw2	equ	0xFDB
 40480                           fsr2h	equ	0xFDA
 40481                           fsr2l	equ	0xFD9
 40482                           status	equ	0xFD8
 40483                           
 40484 ;; *************** function _cleanBuffer *****************
 40485 ;; Defined at:
 40486 ;;		line 177 in file "MISC.c"
 40487 ;; Parameters:    Size  Location     Type
 40488 ;;  data            2    0[BANK0 ] PTR unsigned char 
 40489 ;;		 -> UseBluetooth@rfchannelSTR(10), UseBluetooth@buf(100), BluetoothInitialSetup@BluetoothVersionLine2(30), Bluetooth
      +InitialSetup@BluetoothVersionLine1(30), 
 40490 ;;		 -> BluetoothInitialSetup@BroadcastTEMP(21), BluetoothInitialSetup@buf(50), CommandString(100), StringAddEqual@temp(
      +255), 
 40491 ;;		 -> BluetoothFirmware2(30), BluetoothFirmware1(30), BluetoothBroadcast(21), ReceivedString(100), 
 40492 ;;		 -> main@BroadcastTEMP(21), main@BluetoothString(100), main@buf(100), 
 40493 ;;  count           2    2[BANK0 ] int 
 40494 ;; Auto vars:     Size  Location     Type
 40495 ;;  i               1    7[BANK0 ] unsigned char 
 40496 ;; Return value:  Size  Location     Type
 40497 ;;		None               void
 40498 ;; Registers used:
 40499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 40500 ;; Tracked objects:
 40501 ;;		On entry : 0/0
 40502 ;;		On exit  : 0/0
 40503 ;;		Unchanged: 0/0
 40504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40505 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40506 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40507 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40508 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40509 ;;Total ram usage:        8 bytes
 40510 ;; Hardware stack levels used:    1
 40511 ;; Hardware stack levels required when called:    5
 40512 ;; This function calls:
 40513 ;;		Nothing
 40514 ;; This function is called by:
 40515 ;;		_main
 40516 ;;		_Init_System
 40517 ;;		_BufferCopy
 40518 ;;		_StringAddEqual
 40519 ;;		_InitBluetooth
 40520 ;;		_EnterCommandMode
 40521 ;;		_BluetoothInitialSetup
 40522 ;;		_UseBluetooth
 40523 ;; This function uses a non-reentrant model
 40524 ;;
 40525                           
 40526                           	psect	text103
 40527  00A1CC                     __ptext103:
 40528                           	opt stack 0
 40529  00A1CC                     _cleanBuffer:
 40530                           	opt stack 25
 40531                           
 40532                           ;MISC.c: 179: unsigned char i=0;
 40533                           
 40534                           ; BSR set to: 0
 40535                           ;incstack = 0
 40536  00A1CC  0E00               	movlw	0
 40537  00A1CE  0100               	movlb	0	; () banked
 40538  00A1D0  6F67               	movwf	cleanBuffer@i& (0+255),b
 40539                           
 40540                           ;MISC.c: 180: for(i=0; i<count;i++)
 40541  00A1D2  0E00               	movlw	0
 40542  00A1D4  0100               	movlb	0	; () banked
 40543  00A1D6  6F67               	movwf	cleanBuffer@i& (0+255),b
 40544  00A1D8  D010               	goto	l9626
 40545  00A1DA                     l9622:
 40546                           
 40547                           ; BSR set to: 0
 40548                           ;MISC.c: 181: {
 40549                           ;MISC.c: 182: data[i]= 0;
 40550  00A1DA  0100               	movlb	0	; () banked
 40551  00A1DC  5167               	movf	cleanBuffer@i& (0+255),w,b
 40552  00A1DE  0D01               	mullw	1
 40553  00A1E0  50F3               	movf	prodl,w,c
 40554  00A1E2  0100               	movlb	0	; () banked
 40555  00A1E4  2560               	addwf	cleanBuffer@data& (0+255),w,b
 40556  00A1E6  6ED9               	movwf	fsr2l,c
 40557  00A1E8  50F4               	movf	prodh,w,c
 40558  00A1EA  0100               	movlb	0	; () banked
 40559  00A1EC  2161               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
 40560  00A1EE  6EDA               	movwf	fsr2h,c
 40561  00A1F0  0E00               	movlw	0
 40562  00A1F2  6EDF               	movwf	indf2,c
 40563                           
 40564                           ; BSR set to: 0
 40565  00A1F4  0100               	movlb	0	; () banked
 40566  00A1F6  2B67               	incf	cleanBuffer@i& (0+255),f,b
 40567  00A1F8  D000               	goto	l9626
 40568  00A1FA                     l9626:
 40569                           
 40570                           ; BSR set to: 0
 40571  00A1FA  0100               	movlb	0	; () banked
 40572  00A1FC  5167               	movf	cleanBuffer@i& (0+255),w,b
 40573  00A1FE  0100               	movlb	0	; () banked
 40574  00A200  6F64               	movwf	??_cleanBuffer& (0+255),b
 40575  00A202  6B65               	clrf	(??_cleanBuffer+1)& (0+255),b
 40576  00A204  0100               	movlb	0	; () banked
 40577  00A206  5162               	movf	cleanBuffer@count& (0+255),w,b
 40578  00A208  0100               	movlb	0	; () banked
 40579  00A20A  5D64               	subwf	??_cleanBuffer& (0+255),w,b
 40580  00A20C  0100               	movlb	0	; () banked
 40581  00A20E  5165               	movf	(??_cleanBuffer+1)& (0+255),w,b
 40582  00A210  0A80               	xorlw	128
 40583  00A212  0100               	movlb	0	; () banked
 40584  00A214  6F66               	movwf	(??_cleanBuffer+2)& (0+255),b
 40585  00A216  0100               	movlb	0	; () banked
 40586  00A218  5163               	movf	(cleanBuffer@count+1)& (0+255),w,b
 40587  00A21A  0A80               	xorlw	128
 40588  00A21C  0100               	movlb	0	; () banked
 40589  00A21E  5966               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
 40590  00A220  A0D8               	btfss	status,0,c
 40591  00A222  D7DB               	goto	l9622
 40592                           
 40593                           ; BSR set to: 0
 40594                           
 40595                           ; BSR set to: 0
 40596  00A224  0012               	return		;funcret
 40597  00A226                     __end_of_cleanBuffer:
 40598                           	opt stack 0
 40599                           tblptru	equ	0xFF8
 40600                           tblptrh	equ	0xFF7
 40601                           tblptrl	equ	0xFF6
 40602                           tablat	equ	0xFF5
 40603                           prodh	equ	0xFF4
 40604                           prodl	equ	0xFF3
 40605                           intcon	equ	0xFF2
 40606                           intcon2	equ	0xFF1
 40607                           indf0	equ	0xFEF
 40608                           postinc0	equ	0xFEE
 40609                           plusw0	equ	0xFEB
 40610                           fsr0h	equ	0xFEA
 40611                           fsr0l	equ	0xFE9
 40612                           wreg	equ	0xFE8
 40613                           indf1	equ	0xFE7
 40614                           postdec1	equ	0xFE5
 40615                           fsr1h	equ	0xFE2
 40616                           fsr1l	equ	0xFE1
 40617                           indf2	equ	0xFDF
 40618                           postinc2	equ	0xFDE
 40619                           postdec2	equ	0xFDD
 40620                           plusw2	equ	0xFDB
 40621                           fsr2h	equ	0xFDA
 40622                           fsr2l	equ	0xFD9
 40623                           status	equ	0xFD8
 40624                           
 40625 ;; *************** function _BluetoothConfigured *****************
 40626 ;; Defined at:
 40627 ;;		line 429 in file "Bluetooth.c"
 40628 ;; Parameters:    Size  Location     Type
 40629 ;;		None
 40630 ;; Auto vars:     Size  Location     Type
 40631 ;;		None
 40632 ;; Return value:  Size  Location     Type
 40633 ;;                  1    wreg      unsigned char 
 40634 ;; Registers used:
 40635 ;;		wreg, status,2, status,0
 40636 ;; Tracked objects:
 40637 ;;		On entry : 0/0
 40638 ;;		On exit  : 0/0
 40639 ;;		Unchanged: 0/0
 40640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40645 ;;Total ram usage:        0 bytes
 40646 ;; Hardware stack levels used:    1
 40647 ;; Hardware stack levels required when called:    5
 40648 ;; This function calls:
 40649 ;;		Nothing
 40650 ;; This function is called by:
 40651 ;;		_InitBluetooth
 40652 ;; This function uses a non-reentrant model
 40653 ;;
 40654                           
 40655                           	psect	text104
 40656  00A996                     __ptext104:
 40657                           	opt stack 0
 40658  00A996                     _BluetoothConfigured:
 40659                           	opt stack 23
 40660                           
 40661                           ;Bluetooth.c: 431: if(Global1.BlueToothFlag != 1)
 40662                           
 40663                           ; BSR set to: 0
 40664                           ;incstack = 0
 40665  00A996  0102               	movlb	2	; () banked
 40666  00A998  05D5               	decf	_Global1& (0+255),w,b
 40667  00A99A  B4D8               	btfsc	status,2,c
 40668  00A99C  D002               	goto	l10850
 40669                           
 40670                           ; BSR set to: 2
 40671                           ;Bluetooth.c: 432: {
 40672                           ;Bluetooth.c: 433: return 0;
 40673  00A99E  0E00               	movlw	0
 40674                           
 40675                           ; BSR set to: 2
 40676  00A9A0  0012               	return	
 40677  00A9A2                     l10850:
 40678                           
 40679                           ; BSR set to: 2
 40680                           ;Bluetooth.c: 434: }
 40681                           ;Bluetooth.c: 435: return 1;
 40682  00A9A2  0E01               	movlw	1
 40683  00A9A4  0012               	return	
 40684                           
 40685                           ; BSR set to: 2
 40686                           
 40687                           ; BSR set to: 2
 40688  00A9A6  0012               	return		;funcret
 40689  00A9A8                     __end_of_BluetoothConfigured:
 40690                           	opt stack 0
 40691                           tblptru	equ	0xFF8
 40692                           tblptrh	equ	0xFF7
 40693                           tblptrl	equ	0xFF6
 40694                           tablat	equ	0xFF5
 40695                           prodh	equ	0xFF4
 40696                           prodl	equ	0xFF3
 40697                           intcon	equ	0xFF2
 40698                           intcon2	equ	0xFF1
 40699                           indf0	equ	0xFEF
 40700                           postinc0	equ	0xFEE
 40701                           plusw0	equ	0xFEB
 40702                           fsr0h	equ	0xFEA
 40703                           fsr0l	equ	0xFE9
 40704                           wreg	equ	0xFE8
 40705                           indf1	equ	0xFE7
 40706                           postdec1	equ	0xFE5
 40707                           fsr1h	equ	0xFE2
 40708                           fsr1l	equ	0xFE1
 40709                           indf2	equ	0xFDF
 40710                           postinc2	equ	0xFDE
 40711                           postdec2	equ	0xFDD
 40712                           plusw2	equ	0xFDB
 40713                           fsr2h	equ	0xFDA
 40714                           fsr2l	equ	0xFD9
 40715                           status	equ	0xFD8
 40716                           
 40717 ;; *************** function _InitADC *****************
 40718 ;; Defined at:
 40719 ;;		line 135 in file "ADC.c"
 40720 ;; Parameters:    Size  Location     Type
 40721 ;;		None
 40722 ;; Auto vars:     Size  Location     Type
 40723 ;;		None
 40724 ;; Return value:  Size  Location     Type
 40725 ;;		None               void
 40726 ;; Registers used:
 40727 ;;		wreg, status,2, cstack
 40728 ;; Tracked objects:
 40729 ;;		On entry : 0/0
 40730 ;;		On exit  : 0/0
 40731 ;;		Unchanged: 0/0
 40732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40737 ;;Total ram usage:        0 bytes
 40738 ;; Hardware stack levels used:    1
 40739 ;; Hardware stack levels required when called:    6
 40740 ;; This function calls:
 40741 ;;		_ResetADC
 40742 ;; This function is called by:
 40743 ;;		_Init_System
 40744 ;; This function uses a non-reentrant model
 40745 ;;
 40746                           
 40747                           	psect	text105
 40748  00A8F6                     __ptext105:
 40749                           	opt stack 0
 40750  00A8F6                     _InitADC:
 40751                           	opt stack 23
 40752                           
 40753                           ;ADC.c: 137: ResetADC();
 40754                           
 40755                           ; BSR set to: 2
 40756                           ;incstack = 0
 40757  00A8F6  EC06  F055         	call	_ResetADC	;wreg free
 40758                           
 40759                           ;ADC.c: 138: ADCON2bits.ADFM = 1;
 40760  00A8FA  8EC0               	bsf	4032,7,c	;volatile
 40761                           
 40762                           ;ADC.c: 139: ADCON2bits.ACQT = 0x7;
 40763  00A8FC  86C0               	bsf	4032,3,c	;volatile
 40764  00A8FE  88C0               	bsf	4032,4,c	;volatile
 40765  00A900  8AC0               	bsf	4032,5,c	;volatile
 40766                           
 40767                           ;ADC.c: 140: ADCON2bits.ADCS = 0x4;
 40768  00A902  50C0               	movf	4032,w,c	;volatile
 40769  00A904  0BF8               	andlw	-8
 40770  00A906  0904               	iorlw	4
 40771  00A908  6EC0               	movwf	4032,c	;volatile
 40772  00A90A  0012               	return		;funcret
 40773  00A90C                     __end_of_InitADC:
 40774                           	opt stack 0
 40775                           tblptru	equ	0xFF8
 40776                           tblptrh	equ	0xFF7
 40777                           tblptrl	equ	0xFF6
 40778                           tablat	equ	0xFF5
 40779                           prodh	equ	0xFF4
 40780                           prodl	equ	0xFF3
 40781                           intcon	equ	0xFF2
 40782                           intcon2	equ	0xFF1
 40783                           indf0	equ	0xFEF
 40784                           postinc0	equ	0xFEE
 40785                           plusw0	equ	0xFEB
 40786                           fsr0h	equ	0xFEA
 40787                           fsr0l	equ	0xFE9
 40788                           wreg	equ	0xFE8
 40789                           indf1	equ	0xFE7
 40790                           postdec1	equ	0xFE5
 40791                           fsr1h	equ	0xFE2
 40792                           fsr1l	equ	0xFE1
 40793                           indf2	equ	0xFDF
 40794                           postinc2	equ	0xFDE
 40795                           postdec2	equ	0xFDD
 40796                           plusw2	equ	0xFDB
 40797                           fsr2h	equ	0xFDA
 40798                           fsr2l	equ	0xFD9
 40799                           status	equ	0xFD8
 40800                           
 40801 ;; *************** function _ResetADC *****************
 40802 ;; Defined at:
 40803 ;;		line 123 in file "ADC.c"
 40804 ;; Parameters:    Size  Location     Type
 40805 ;;		None
 40806 ;; Auto vars:     Size  Location     Type
 40807 ;;		None
 40808 ;; Return value:  Size  Location     Type
 40809 ;;		None               void
 40810 ;; Registers used:
 40811 ;;		wreg, status,2
 40812 ;; Tracked objects:
 40813 ;;		On entry : 0/0
 40814 ;;		On exit  : 0/0
 40815 ;;		Unchanged: 0/0
 40816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40821 ;;Total ram usage:        0 bytes
 40822 ;; Hardware stack levels used:    1
 40823 ;; Hardware stack levels required when called:    5
 40824 ;; This function calls:
 40825 ;;		Nothing
 40826 ;; This function is called by:
 40827 ;;		_InitADC
 40828 ;; This function uses a non-reentrant model
 40829 ;;
 40830                           
 40831                           	psect	text106
 40832  00AA0C                     __ptext106:
 40833                           	opt stack 0
 40834  00AA0C                     _ResetADC:
 40835                           	opt stack 23
 40836                           
 40837                           ;ADC.c: 125: ADCON0 =0;
 40838                           
 40839                           ;incstack = 0
 40840  00AA0C  0E00               	movlw	0
 40841  00AA0E  6EC2               	movwf	4034,c	;volatile
 40842                           
 40843                           ;ADC.c: 126: ADCON1 =0;
 40844  00AA10  0E00               	movlw	0
 40845  00AA12  6EC1               	movwf	4033,c	;volatile
 40846                           
 40847                           ;ADC.c: 127: ADCON2 =0;
 40848  00AA14  0E00               	movlw	0
 40849  00AA16  6EC0               	movwf	4032,c	;volatile
 40850  00AA18  0012               	return		;funcret
 40851  00AA1A                     __end_of_ResetADC:
 40852                           	opt stack 0
 40853                           tblptru	equ	0xFF8
 40854                           tblptrh	equ	0xFF7
 40855                           tblptrl	equ	0xFF6
 40856                           tablat	equ	0xFF5
 40857                           prodh	equ	0xFF4
 40858                           prodl	equ	0xFF3
 40859                           intcon	equ	0xFF2
 40860                           intcon2	equ	0xFF1
 40861                           indf0	equ	0xFEF
 40862                           postinc0	equ	0xFEE
 40863                           plusw0	equ	0xFEB
 40864                           fsr0h	equ	0xFEA
 40865                           fsr0l	equ	0xFE9
 40866                           wreg	equ	0xFE8
 40867                           indf1	equ	0xFE7
 40868                           postdec1	equ	0xFE5
 40869                           fsr1h	equ	0xFE2
 40870                           fsr1l	equ	0xFE1
 40871                           indf2	equ	0xFDF
 40872                           postinc2	equ	0xFDE
 40873                           postdec2	equ	0xFDD
 40874                           plusw2	equ	0xFDB
 40875                           fsr2h	equ	0xFDA
 40876                           fsr2l	equ	0xFD9
 40877                           status	equ	0xFD8
 40878                           
 40879 ;; *************** function _EEPROMinitialized *****************
 40880 ;; Defined at:
 40881 ;;		line 332 in file "EEPROM.c"
 40882 ;; Parameters:    Size  Location     Type
 40883 ;;		None
 40884 ;; Auto vars:     Size  Location     Type
 40885 ;;		None
 40886 ;; Return value:  Size  Location     Type
 40887 ;;                  1    wreg      unsigned char 
 40888 ;; Registers used:
 40889 ;;		wreg, status,2, status,0
 40890 ;; Tracked objects:
 40891 ;;		On entry : 0/0
 40892 ;;		On exit  : 0/0
 40893 ;;		Unchanged: 0/0
 40894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40899 ;;Total ram usage:        0 bytes
 40900 ;; Hardware stack levels used:    1
 40901 ;; Hardware stack levels required when called:    5
 40902 ;; This function calls:
 40903 ;;		Nothing
 40904 ;; This function is called by:
 40905 ;;		_Init_System
 40906 ;; This function uses a non-reentrant model
 40907 ;;
 40908                           
 40909                           	psect	text107
 40910  00A94C                     __ptext107:
 40911                           	opt stack 0
 40912  00A94C                     _EEPROMinitialized:
 40913                           	opt stack 24
 40914                           
 40915                           ;EEPROM.c: 334: if(Global1.EEPROMinitFlag == 59)
 40916                           
 40917                           ;incstack = 0
 40918  00A94C  0E3B               	movlw	59
 40919  00A94E  0102               	movlb	2	; () banked
 40920  00A950  19F2               	xorwf	(_Global1+29)& (0+255),w,b
 40921  00A952  A4D8               	btfss	status,2,c
 40922  00A954  D002               	goto	l11312
 40923                           
 40924                           ; BSR set to: 2
 40925                           ;EEPROM.c: 335: {
 40926                           ;EEPROM.c: 336: return 1;
 40927  00A956  0E01               	movlw	1
 40928                           
 40929                           ; BSR set to: 2
 40930  00A958  0012               	return	
 40931  00A95A                     l11312:
 40932                           
 40933                           ; BSR set to: 2
 40934                           ;EEPROM.c: 337: }
 40935                           ;EEPROM.c: 338: return 0;
 40936  00A95A  0E00               	movlw	0
 40937  00A95C  0012               	return	
 40938                           
 40939                           ; BSR set to: 2
 40940                           
 40941                           ; BSR set to: 2
 40942  00A95E  0012               	return		;funcret
 40943  00A960                     __end_of_EEPROMinitialized:
 40944                           	opt stack 0
 40945                           tblptru	equ	0xFF8
 40946                           tblptrh	equ	0xFF7
 40947                           tblptrl	equ	0xFF6
 40948                           tablat	equ	0xFF5
 40949                           prodh	equ	0xFF4
 40950                           prodl	equ	0xFF3
 40951                           intcon	equ	0xFF2
 40952                           intcon2	equ	0xFF1
 40953                           indf0	equ	0xFEF
 40954                           postinc0	equ	0xFEE
 40955                           plusw0	equ	0xFEB
 40956                           fsr0h	equ	0xFEA
 40957                           fsr0l	equ	0xFE9
 40958                           wreg	equ	0xFE8
 40959                           indf1	equ	0xFE7
 40960                           postdec1	equ	0xFE5
 40961                           fsr1h	equ	0xFE2
 40962                           fsr1l	equ	0xFE1
 40963                           indf2	equ	0xFDF
 40964                           postinc2	equ	0xFDE
 40965                           postdec2	equ	0xFDD
 40966                           plusw2	equ	0xFDB
 40967                           fsr2h	equ	0xFDA
 40968                           fsr2l	equ	0xFD9
 40969                           status	equ	0xFD8
 40970                           
 40971 ;; *************** function _InitApp *****************
 40972 ;; Defined at:
 40973 ;;		line 64 in file "user.c"
 40974 ;; Parameters:    Size  Location     Type
 40975 ;;		None
 40976 ;; Auto vars:     Size  Location     Type
 40977 ;;		None
 40978 ;; Return value:  Size  Location     Type
 40979 ;;		None               void
 40980 ;; Registers used:
 40981 ;;		wreg, status,2, status,0
 40982 ;; Tracked objects:
 40983 ;;		On entry : 0/0
 40984 ;;		On exit  : 0/0
 40985 ;;		Unchanged: 0/0
 40986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40991 ;;Total ram usage:        0 bytes
 40992 ;; Hardware stack levels used:    1
 40993 ;; Hardware stack levels required when called:    5
 40994 ;; This function calls:
 40995 ;;		Nothing
 40996 ;; This function is called by:
 40997 ;;		_main
 40998 ;; This function uses a non-reentrant model
 40999 ;;
 41000                           
 41001                           	psect	text108
 41002  00A3C0                     __ptext108:
 41003                           	opt stack 0
 41004  00A3C0                     _InitApp:
 41005                           	opt stack 25
 41006                           
 41007                           ;user.c: 66: LATA = 0;
 41008                           
 41009                           ; BSR set to: 2
 41010                           ;incstack = 0
 41011  00A3C0  0E00               	movlw	0
 41012  00A3C2  6E89               	movwf	3977,c	;volatile
 41013                           
 41014                           ;user.c: 67: LATB = 0;
 41015  00A3C4  0E00               	movlw	0
 41016  00A3C6  6E8A               	movwf	3978,c	;volatile
 41017                           
 41018                           ;user.c: 68: LATC = 0;
 41019  00A3C8  0E00               	movlw	0
 41020  00A3CA  6E8B               	movwf	3979,c	;volatile
 41021                           
 41022                           ;user.c: 69: LATA |= 0x04;
 41023  00A3CC  8489               	bsf	3977,2,c	;volatile
 41024                           
 41025                           ;user.c: 71: TRISAbits.TRISA0 = 1;
 41026  00A3CE  8092               	bsf	3986,0,c	;volatile
 41027                           
 41028                           ;user.c: 72: TRISAbits.TRISA1 = 1;
 41029  00A3D0  8292               	bsf	3986,1,c	;volatile
 41030                           
 41031                           ;user.c: 73: TRISAbits.TRISA2 = 0;
 41032  00A3D2  9492               	bcf	3986,2,c	;volatile
 41033                           
 41034                           ;user.c: 74: TRISAbits.TRISA3 = 0;
 41035  00A3D4  9692               	bcf	3986,3,c	;volatile
 41036                           
 41037                           ;user.c: 75: TRISAbits.TRISA4 = 0;
 41038  00A3D6  9892               	bcf	3986,4,c	;volatile
 41039                           
 41040                           ;user.c: 76: TRISAbits.TRISA5 = 0;
 41041  00A3D8  9A92               	bcf	3986,5,c	;volatile
 41042                           
 41043                           ;user.c: 77: TRISCbits.TRISC0 = 1;
 41044  00A3DA  8094               	bsf	3988,0,c	;volatile
 41045                           
 41046                           ;user.c: 78: TRISCbits.TRISC1 = 0;
 41047  00A3DC  9294               	bcf	3988,1,c	;volatile
 41048                           
 41049                           ;user.c: 79: TRISCbits.TRISC2 = 0;
 41050  00A3DE  9494               	bcf	3988,2,c	;volatile
 41051                           
 41052                           ;user.c: 80: TRISCbits.TRISC3 = 0;
 41053  00A3E0  9694               	bcf	3988,3,c	;volatile
 41054                           
 41055                           ;user.c: 81: TRISCbits.TRISC4 = 0;
 41056  00A3E2  9894               	bcf	3988,4,c	;volatile
 41057                           
 41058                           ;user.c: 82: TRISCbits.TRISC5 = 0;
 41059  00A3E4  9A94               	bcf	3988,5,c	;volatile
 41060                           
 41061                           ;user.c: 83: TRISCbits.TRISC6 = 0;
 41062  00A3E6  9C94               	bcf	3988,6,c	;volatile
 41063                           
 41064                           ;user.c: 84: TRISCbits.TRISC7 = 1;
 41065  00A3E8  8E94               	bsf	3988,7,c	;volatile
 41066                           
 41067                           ;user.c: 85: TRISBbits.TRISB0 = 1;
 41068  00A3EA  8093               	bsf	3987,0,c	;volatile
 41069                           
 41070                           ;user.c: 86: TRISBbits.TRISB1 = 1;
 41071  00A3EC  8293               	bsf	3987,1,c	;volatile
 41072                           
 41073                           ;user.c: 87: TRISBbits.TRISB2 = 1;
 41074  00A3EE  8493               	bsf	3987,2,c	;volatile
 41075                           
 41076                           ;user.c: 88: TRISBbits.TRISB3 = 1;
 41077  00A3F0  8693               	bsf	3987,3,c	;volatile
 41078                           
 41079                           ;user.c: 89: TRISBbits.TRISB4 = 1;
 41080  00A3F2  8893               	bsf	3987,4,c	;volatile
 41081                           
 41082                           ;user.c: 90: TRISBbits.TRISB5 = 1;
 41083  00A3F4  8A93               	bsf	3987,5,c	;volatile
 41084                           
 41085                           ;user.c: 93: ANSEL = 0x01;
 41086  00A3F6  0E01               	movlw	1
 41087  00A3F8  6E7E               	movwf	3966,c	;volatile
 41088                           
 41089                           ;user.c: 94: ANSELH = 0x00;
 41090  00A3FA  0E00               	movlw	0
 41091  00A3FC  6E7F               	movwf	3967,c	;volatile
 41092                           
 41093                           ;user.c: 97: INTCON2bits.RBPU = 0;
 41094  00A3FE  9EF1               	bcf	intcon2,7,c	;volatile
 41095                           
 41096                           ;user.c: 99: WPUB = 0x0F;
 41097  00A400  0E0F               	movlw	15
 41098  00A402  6E7C               	movwf	3964,c	;volatile
 41099  00A404  0012               	return		;funcret
 41100  00A406                     __end_of_InitApp:
 41101                           	opt stack 0
 41102                           tblptru	equ	0xFF8
 41103                           tblptrh	equ	0xFF7
 41104                           tblptrl	equ	0xFF6
 41105                           tablat	equ	0xFF5
 41106                           prodh	equ	0xFF4
 41107                           prodl	equ	0xFF3
 41108                           intcon	equ	0xFF2
 41109                           intcon2	equ	0xFF1
 41110                           indf0	equ	0xFEF
 41111                           postinc0	equ	0xFEE
 41112                           plusw0	equ	0xFEB
 41113                           fsr0h	equ	0xFEA
 41114                           fsr0l	equ	0xFE9
 41115                           wreg	equ	0xFE8
 41116                           indf1	equ	0xFE7
 41117                           postdec1	equ	0xFE5
 41118                           fsr1h	equ	0xFE2
 41119                           fsr1l	equ	0xFE1
 41120                           indf2	equ	0xFDF
 41121                           postinc2	equ	0xFDE
 41122                           postdec2	equ	0xFDD
 41123                           plusw2	equ	0xFDB
 41124                           fsr2h	equ	0xFDA
 41125                           fsr2l	equ	0xFD9
 41126                           status	equ	0xFD8
 41127                           
 41128 ;; *************** function _ConfigureOscillator *****************
 41129 ;; Defined at:
 41130 ;;		line 43 in file "system.c"
 41131 ;; Parameters:    Size  Location     Type
 41132 ;;		None
 41133 ;; Auto vars:     Size  Location     Type
 41134 ;;		None
 41135 ;; Return value:  Size  Location     Type
 41136 ;;		None               void
 41137 ;; Registers used:
 41138 ;;		None
 41139 ;; Tracked objects:
 41140 ;;		On entry : 0/0
 41141 ;;		On exit  : 0/0
 41142 ;;		Unchanged: 0/0
 41143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41148 ;;Total ram usage:        0 bytes
 41149 ;; Hardware stack levels used:    1
 41150 ;; Hardware stack levels required when called:    5
 41151 ;; This function calls:
 41152 ;;		Nothing
 41153 ;; This function is called by:
 41154 ;;		_main
 41155 ;; This function uses a non-reentrant model
 41156 ;;
 41157                           
 41158                           	psect	text109
 41159  00AA86                     __ptext109:
 41160                           	opt stack 0
 41161  00AA86                     _ConfigureOscillator:
 41162                           	opt stack 25
 41163                           
 41164                           ;incstack = 0
 41165  00AA86  0012               	return		;funcret
 41166  00AA88                     __end_of_ConfigureOscillator:
 41167                           	opt stack 0
 41168                           tblptru	equ	0xFF8
 41169                           tblptrh	equ	0xFF7
 41170                           tblptrl	equ	0xFF6
 41171                           tablat	equ	0xFF5
 41172                           prodh	equ	0xFF4
 41173                           prodl	equ	0xFF3
 41174                           intcon	equ	0xFF2
 41175                           intcon2	equ	0xFF1
 41176                           indf0	equ	0xFEF
 41177                           postinc0	equ	0xFEE
 41178                           plusw0	equ	0xFEB
 41179                           fsr0h	equ	0xFEA
 41180                           fsr0l	equ	0xFE9
 41181                           wreg	equ	0xFE8
 41182                           indf1	equ	0xFE7
 41183                           postdec1	equ	0xFE5
 41184                           fsr1h	equ	0xFE2
 41185                           fsr1l	equ	0xFE1
 41186                           indf2	equ	0xFDF
 41187                           postinc2	equ	0xFDE
 41188                           postdec2	equ	0xFDD
 41189                           plusw2	equ	0xFDB
 41190                           fsr2h	equ	0xFDA
 41191                           fsr2l	equ	0xFD9
 41192                           status	equ	0xFD8
 41193                           
 41194 ;; *************** function _low_isr *****************
 41195 ;; Defined at:
 41196 ;;		line 607 in file "interrupts.c"
 41197 ;; Parameters:    Size  Location     Type
 41198 ;;		None
 41199 ;; Auto vars:     Size  Location     Type
 41200 ;;  data            1   21[COMRAM] unsigned char 
 41201 ;; Return value:  Size  Location     Type
 41202 ;;		None               void
 41203 ;; Registers used:
 41204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41205 ;; Tracked objects:
 41206 ;;		On entry : 0/0
 41207 ;;		On exit  : 0/0
 41208 ;;		Unchanged: 0/0
 41209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41212 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41213 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41214 ;;Total ram usage:       18 bytes
 41215 ;; Hardware stack levels used:    1
 41216 ;; Hardware stack levels required when called:    4
 41217 ;; This function calls:
 41218 ;;		_EraseScreen
 41219 ;;		_IsCharacter
 41220 ;;		i1_BlueConnected
 41221 ;;		i1_ReadUSART
 41222 ;;		i1_UARTchar
 41223 ;;		i1_UARTchar_CONST
 41224 ;;		i1_UARTstring
 41225 ;;		i1_UARTstring_CONST
 41226 ;; This function is called by:
 41227 ;;		Interrupt level 1
 41228 ;; This function uses a non-reentrant model
 41229 ;;
 41230                           
 41231                           	psect	intcodelo
 41232  000018                     __pintcodelo:
 41233                           	opt stack 0
 41234  000018                     _low_isr:
 41235                           	opt stack 18
 41236                           
 41237                           ;incstack = 0
 41238  000018  CFD8 F005          	movff	status,??_low_isr
 41239  00001C  CFE8 F006          	movff	wreg,??_low_isr+1
 41240  000020  CFE0 F007          	movff	bsr,??_low_isr+2
 41241  000024  CFFA F008          	movff	pclath,??_low_isr+3
 41242  000028  CFFB F009          	movff	pclatu,??_low_isr+4
 41243  00002C  CFE9 F00A          	movff	fsr0l,??_low_isr+5
 41244  000030  CFEA F00B          	movff	fsr0h,??_low_isr+6
 41245  000034  CFE1 F00C          	movff	fsr1l,??_low_isr+7
 41246  000038  CFE2 F00D          	movff	fsr1h,??_low_isr+8
 41247  00003C  CFD9 F00E          	movff	fsr2l,??_low_isr+9
 41248  000040  CFDA F00F          	movff	fsr2h,??_low_isr+10
 41249  000044  CFF3 F010          	movff	prodl,??_low_isr+11
 41250  000048  CFF4 F011          	movff	prodh,??_low_isr+12
 41251  00004C  CFF6 F012          	movff	tblptrl,??_low_isr+13
 41252  000050  CFF7 F013          	movff	tblptrh,??_low_isr+14
 41253  000054  CFF8 F014          	movff	tblptru,??_low_isr+15
 41254  000058  CFF5 F015          	movff	tablat,??_low_isr+16
 41255                           
 41256                           ;interrupts.c: 616: char data = 0;
 41257  00005C  0E00               	movlw	0
 41258  00005E  6E16               	movwf	low_isr@data,c
 41259                           
 41260                           ;interrupts.c: 618: INTCONbits.PEIE = 0;
 41261  000060  9CF2               	bcf	intcon,6,c	;volatile
 41262                           
 41263                           ;interrupts.c: 620: if(PIR1bits.RCIF)
 41264  000062  AA9E               	btfss	3998,5,c	;volatile
 41265  000064  D07F               	goto	i1l1491
 41266                           
 41267                           ;interrupts.c: 621: {
 41268                           ;interrupts.c: 623: data = ReadUSART();
 41269  000066  EC86  F054         	call	i1_ReadUSART	;wreg free
 41270  00006A  6E16               	movwf	low_isr@data,c
 41271                           
 41272                           ;interrupts.c: 625: if(!BlueConnected())
 41273  00006C  EC0D  F055         	call	i1_BlueConnected	;wreg free
 41274  000070  0900               	iorlw	0
 41275  000072  A4D8               	btfss	status,2,c
 41276  000074  D00F               	goto	i1l14398
 41277                           
 41278                           ;interrupts.c: 626: {
 41279                           ;interrupts.c: 627: if(CommandStringPos < (100 - 1))
 41280  000076  0E63               	movlw	99
 41281  000078  603E               	cpfslt	_CommandStringPos,c	;volatile
 41282  00007A  D072               	goto	i1l14442
 41283                           
 41284                           ;interrupts.c: 628: {
 41285                           ;interrupts.c: 629: CommandString[CommandStringPos] = data;
 41286  00007C  503E               	movf	_CommandStringPos,w,c	;volatile
 41287  00007E  0D01               	mullw	1
 41288  000080  0E14               	movlw	low _CommandString
 41289  000082  24F3               	addwf	prodl,w,c
 41290  000084  6ED9               	movwf	fsr2l,c
 41291  000086  0E04               	movlw	high _CommandString
 41292  000088  20F4               	addwfc	prodh,w,c
 41293  00008A  6EDA               	movwf	fsr2h,c
 41294  00008C  C016  FFDF         	movff	low_isr@data,indf2
 41295                           
 41296                           ;interrupts.c: 630: CommandStringPos++;
 41297  000090  2A3E               	incf	_CommandStringPos,f,c	;volatile
 41298                           
 41299                           ;interrupts.c: 631: }
 41300                           ;interrupts.c: 632: }
 41301  000092  D066               	goto	i1l14442
 41302  000094                     i1l14398:
 41303                           
 41304                           ;interrupts.c: 633: else
 41305                           ;interrupts.c: 634: {
 41306                           ;interrupts.c: 635: if(data != '\r' && data != '\n')
 41307  000094  0E0D               	movlw	13
 41308  000096  1816               	xorwf	low_isr@data,w,c
 41309  000098  B4D8               	btfsc	status,2,c
 41310  00009A  D04F               	goto	i1l14432
 41311  00009C  0E0A               	movlw	10
 41312  00009E  1816               	xorwf	low_isr@data,w,c
 41313  0000A0  B4D8               	btfsc	status,2,c
 41314  0000A2  D04B               	goto	i1l14432
 41315                           
 41316                           ;interrupts.c: 636: {
 41317                           ;interrupts.c: 637: if((data == 127 || data == 8) && (ReceivedStringPos > 0))
 41318  0000A4  0E7F               	movlw	127
 41319  0000A6  1816               	xorwf	low_isr@data,w,c
 41320  0000A8  B4D8               	btfsc	status,2,c
 41321  0000AA  D004               	goto	i1l14406
 41322  0000AC  0E08               	movlw	8
 41323  0000AE  1816               	xorwf	low_isr@data,w,c
 41324  0000B0  A4D8               	btfss	status,2,c
 41325  0000B2  D01F               	goto	i1l14418
 41326  0000B4                     i1l14406:
 41327  0000B4  0103               	movlb	3	; () banked
 41328  0000B6  51EB               	movf	_ReceivedStringPos& (0+255),w,b	;volatile
 41329  0000B8  B4D8               	btfsc	status,2,c
 41330  0000BA  D01B               	goto	i1l14418
 41331                           
 41332                           ; BSR set to: 3
 41333                           ;interrupts.c: 638: {
 41334                           ;interrupts.c: 640: EraseScreen(ReceivedStringPos + 1);
 41335  0000BC  0103               	movlb	3	; () banked
 41336  0000BE  29EB               	incf	_ReceivedStringPos& (0+255),w,b	;volatile
 41337  0000C0  ECF7  F053         	call	_EraseScreen
 41338                           
 41339                           ;interrupts.c: 641: ReceivedStringPos--;
 41340  0000C4  0103               	movlb	3	; () banked
 41341  0000C6  07EB               	decf	_ReceivedStringPos& (0+255),f,b	;volatile
 41342                           
 41343                           ; BSR set to: 3
 41344                           ;interrupts.c: 642: ReceivedString[ReceivedStringPos] = '\0';
 41345  0000C8  0103               	movlb	3	; () banked
 41346  0000CA  51EB               	movf	_ReceivedStringPos& (0+255),w,b	;volatile
 41347  0000CC  0D01               	mullw	1
 41348  0000CE  0E78               	movlw	low _ReceivedString
 41349  0000D0  24F3               	addwf	prodl,w,c
 41350  0000D2  6ED9               	movwf	fsr2l,c
 41351  0000D4  0E04               	movlw	high _ReceivedString
 41352  0000D6  20F4               	addwfc	prodh,w,c
 41353  0000D8  6EDA               	movwf	fsr2h,c
 41354  0000DA  0E00               	movlw	0
 41355  0000DC  6EDF               	movwf	indf2,c
 41356                           
 41357                           ; BSR set to: 3
 41358                           ;interrupts.c: 643: UARTchar_CONST('>');
 41359  0000DE  0E3E               	movlw	62
 41360  0000E0  EC4B  F054         	call	i1_UARTchar_CONST
 41361                           
 41362                           ;interrupts.c: 644: UARTstring(ReceivedString);
 41363  0000E4  0E78               	movlw	low _ReceivedString
 41364  0000E6  6E02               	movwf	i1UARTstring@data,c
 41365  0000E8  0E04               	movlw	high _ReceivedString
 41366  0000EA  6E03               	movwf	i1UARTstring@data+1,c
 41367  0000EC  EC0B  F054         	call	i1_UARTstring	;wreg free
 41368                           
 41369                           ;interrupts.c: 645: }
 41370  0000F0  D037               	goto	i1l14442
 41371  0000F2                     i1l14418:
 41372                           
 41373                           ;interrupts.c: 646: else if(ReceivedStringPos < (100 - 2))
 41374  0000F2  0E62               	movlw	98
 41375  0000F4  0103               	movlb	3	; () banked
 41376  0000F6  61EB               	cpfslt	_ReceivedStringPos& (0+255),b	;volatile
 41377  0000F8  D01B               	goto	i1l1500
 41378                           
 41379                           ; BSR set to: 3
 41380                           ;interrupts.c: 647: {
 41381                           ;interrupts.c: 648: if(!NewReceivedString)
 41382  0000FA  0103               	movlb	3	; () banked
 41383  0000FC  51EA               	movf	_NewReceivedString& (0+255),w,b	;volatile
 41384  0000FE  A4D8               	btfss	status,2,c
 41385  000100  D02F               	goto	i1l14442
 41386                           
 41387                           ; BSR set to: 3
 41388                           ;interrupts.c: 649: {
 41389                           ;interrupts.c: 650: if(IsCharacter(data))
 41390  000102  5016               	movf	low_isr@data,w,c
 41391  000104  EC64  F054         	call	_IsCharacter
 41392  000108  0900               	iorlw	0
 41393  00010A  B4D8               	btfsc	status,2,c
 41394  00010C  D029               	goto	i1l14442
 41395                           
 41396                           ;interrupts.c: 651: {
 41397                           ;interrupts.c: 652: UARTchar(data);
 41398  00010E  5016               	movf	low_isr@data,w,c
 41399  000110  EC91  F054         	call	i1_UARTchar
 41400                           
 41401                           ;interrupts.c: 653: ReceivedString[ReceivedStringPos] = data;
 41402  000114  0103               	movlb	3	; () banked
 41403  000116  51EB               	movf	_ReceivedStringPos& (0+255),w,b	;volatile
 41404  000118  0D01               	mullw	1
 41405  00011A  0E78               	movlw	low _ReceivedString
 41406  00011C  24F3               	addwf	prodl,w,c
 41407  00011E  6ED9               	movwf	fsr2l,c
 41408  000120  0E04               	movlw	high _ReceivedString
 41409  000122  20F4               	addwfc	prodh,w,c
 41410  000124  6EDA               	movwf	fsr2h,c
 41411  000126  C016  FFDF         	movff	low_isr@data,indf2
 41412                           
 41413                           ; BSR set to: 3
 41414                           ;interrupts.c: 654: ReceivedStringPos++;
 41415  00012A  0103               	movlb	3	; () banked
 41416  00012C  2BEB               	incf	_ReceivedStringPos& (0+255),f,b	;volatile
 41417                           
 41418                           ; BSR set to: 3
 41419                           ;interrupts.c: 655: }
 41420                           ;interrupts.c: 656: }
 41421                           ;interrupts.c: 657: }
 41422                           
 41423                           ; BSR set to: 3
 41424  00012E  D018               	goto	i1l14442
 41425  000130                     i1l1500:
 41426                           
 41427                           ; BSR set to: 3
 41428                           ;interrupts.c: 658: else
 41429                           ;interrupts.c: 659: {
 41430                           ;interrupts.c: 660: PIE1bits.RCIE = 0;
 41431  000130  9A9D               	bcf	3997,5,c	;volatile
 41432                           
 41433                           ; BSR set to: 3
 41434                           ;interrupts.c: 661: BufferOverflow = 1;
 41435  000132  0E01               	movlw	1
 41436  000134  0103               	movlb	3	; () banked
 41437  000136  6FE9               	movwf	_BufferOverflow& (0+255),b
 41438                           
 41439                           ; BSR set to: 3
 41440                           ;interrupts.c: 662: }
 41441                           ;interrupts.c: 663: }
 41442                           
 41443                           ; BSR set to: 3
 41444  000138  D013               	goto	i1l14442
 41445  00013A                     i1l14432:
 41446                           
 41447                           ;interrupts.c: 664: else if(ReceivedStringPos > 0 && (NewReceivedString == 0))
 41448  00013A  0103               	movlb	3	; () banked
 41449  00013C  51EB               	movf	_ReceivedStringPos& (0+255),w,b	;volatile
 41450  00013E  B4D8               	btfsc	status,2,c
 41451  000140  D00F               	goto	i1l14442
 41452                           
 41453                           ; BSR set to: 3
 41454  000142  0103               	movlb	3	; () banked
 41455  000144  51EA               	movf	_NewReceivedString& (0+255),w,b	;volatile
 41456  000146  A4D8               	btfss	status,2,c
 41457  000148  D00B               	goto	i1l14442
 41458                           
 41459                           ; BSR set to: 3
 41460                           ;interrupts.c: 665: {
 41461                           ;interrupts.c: 666: PIE1bits.RCIE = 0;
 41462  00014A  9A9D               	bcf	3997,5,c	;volatile
 41463                           
 41464                           ; BSR set to: 3
 41465                           ;interrupts.c: 667: UARTstring_CONST(CRLN);
 41466  00014C  0E51               	movlw	low _CRLN
 41467  00014E  6E03               	movwf	i1UARTstring_CONST@data,c
 41468  000150  0EF0               	movlw	high _CRLN
 41469  000152  6E04               	movwf	i1UARTstring_CONST@data+1,c
 41470  000154  EC73  F053         	call	i1_UARTstring_CONST	;wreg free
 41471                           
 41472                           ;interrupts.c: 668: NewReceivedString = 1;
 41473  000158  0E01               	movlw	1
 41474  00015A  0103               	movlb	3	; () banked
 41475  00015C  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
 41476                           
 41477                           ; BSR set to: 3
 41478                           
 41479                           ; BSR set to: 3
 41480  00015E  D000               	goto	i1l14442
 41481  000160                     i1l14442:
 41482                           
 41483                           ;interrupts.c: 669: }
 41484                           ;interrupts.c: 670: }
 41485                           ;interrupts.c: 671: PIR1bits.RCIF = 0;
 41486  000160  9A9E               	bcf	3998,5,c	;volatile
 41487                           
 41488                           ;interrupts.c: 672: }
 41489  000162  D00F               	goto	i1l1506
 41490  000164                     i1l1491:
 41491                           
 41492                           ;interrupts.c: 673: else if(PIR1bits.TMR1IF)
 41493  000164  A09E               	btfss	3998,0,c	;volatile
 41494  000166  D00B               	goto	i1l1507
 41495                           
 41496                           ;interrupts.c: 674: {
 41497                           ;interrupts.c: 675: Timer1_Postscaler++;
 41498  000168  2A49               	incf	_Timer1_Postscaler,f,c
 41499                           
 41500                           ;interrupts.c: 676: if(Timer1_Postscaler == 3)
 41501  00016A  0E03               	movlw	3
 41502  00016C  1849               	xorwf	_Timer1_Postscaler,w,c
 41503  00016E  A4D8               	btfss	status,2,c
 41504  000170  D004               	goto	i1l14452
 41505                           
 41506                           ;interrupts.c: 677: {
 41507                           ;interrupts.c: 678: (LATC &= ~0x04);
 41508  000172  948B               	bcf	3979,2,c	;volatile
 41509                           
 41510                           ;interrupts.c: 679: (LATC &= ~0x02);
 41511  000174  928B               	bcf	3979,1,c	;volatile
 41512                           
 41513                           ;interrupts.c: 680: (T1CONbits.TMR1ON = 0);
 41514  000176  90CD               	bcf	4045,0,c	;volatile
 41515  000178  D000               	goto	i1l14452
 41516  00017A                     i1l14452:
 41517                           
 41518                           ;interrupts.c: 681: }
 41519                           ;interrupts.c: 682: PIR1bits.TMR1IF = 0;
 41520  00017A  909E               	bcf	3998,0,c	;volatile
 41521                           
 41522                           ;interrupts.c: 683: }
 41523  00017C  D002               	goto	i1l1506
 41524  00017E                     i1l1507:
 41525                           
 41526                           ;interrupts.c: 684: else
 41527                           ;interrupts.c: 685: {
 41528                           ;interrupts.c: 687: __nop();
 41529  00017E  F000               	nop	
 41530  000180  D000               	goto	i1l1506
 41531  000182                     i1l1506:
 41532                           
 41533                           ;interrupts.c: 688: }
 41534                           ;interrupts.c: 689: INTCONbits.PEIE = 1;
 41535  000182  8CF2               	bsf	intcon,6,c	;volatile
 41536  000184  C015  FFF5         	movff	??_low_isr+16,tablat
 41537  000188  C014  FFF8         	movff	??_low_isr+15,tblptru
 41538  00018C  C013  FFF7         	movff	??_low_isr+14,tblptrh
 41539  000190  C012  FFF6         	movff	??_low_isr+13,tblptrl
 41540  000194  C011  FFF4         	movff	??_low_isr+12,prodh
 41541  000198  C010  FFF3         	movff	??_low_isr+11,prodl
 41542  00019C  C00F  FFDA         	movff	??_low_isr+10,fsr2h
 41543  0001A0  C00E  FFD9         	movff	??_low_isr+9,fsr2l
 41544  0001A4  C00D  FFE2         	movff	??_low_isr+8,fsr1h
 41545  0001A8  C00C  FFE1         	movff	??_low_isr+7,fsr1l
 41546  0001AC  C00B  FFEA         	movff	??_low_isr+6,fsr0h
 41547  0001B0  C00A  FFE9         	movff	??_low_isr+5,fsr0l
 41548  0001B4  C009  FFFB         	movff	??_low_isr+4,pclatu
 41549  0001B8  C008  FFFA         	movff	??_low_isr+3,pclath
 41550  0001BC  C007  FFE0         	movff	??_low_isr+2,bsr
 41551  0001C0  C006  FFE8         	movff	??_low_isr+1,wreg
 41552  0001C4  C005  FFD8         	movff	??_low_isr,status
 41553  0001C8  0010               	retfie	
 41554  0001CA                     __end_of_low_isr:
 41555                           	opt stack 0
 41556                           pclatu	equ	0xFFB
 41557                           pclath	equ	0xFFA
 41558                           tblptru	equ	0xFF8
 41559                           tblptrh	equ	0xFF7
 41560                           tblptrl	equ	0xFF6
 41561                           tablat	equ	0xFF5
 41562                           prodh	equ	0xFF4
 41563                           prodl	equ	0xFF3
 41564                           intcon	equ	0xFF2
 41565                           intcon2	equ	0xFF1
 41566                           indf0	equ	0xFEF
 41567                           postinc0	equ	0xFEE
 41568                           plusw0	equ	0xFEB
 41569                           fsr0h	equ	0xFEA
 41570                           fsr0l	equ	0xFE9
 41571                           wreg	equ	0xFE8
 41572                           indf1	equ	0xFE7
 41573                           postdec1	equ	0xFE5
 41574                           fsr1h	equ	0xFE2
 41575                           fsr1l	equ	0xFE1
 41576                           bsr	equ	0xFE0
 41577                           indf2	equ	0xFDF
 41578                           postinc2	equ	0xFDE
 41579                           postdec2	equ	0xFDD
 41580                           plusw2	equ	0xFDB
 41581                           fsr2h	equ	0xFDA
 41582                           fsr2l	equ	0xFD9
 41583                           status	equ	0xFD8
 41584                           
 41585 ;; *************** function i1_UARTstring_CONST *****************
 41586 ;; Defined at:
 41587 ;;		line 236 in file "UART.c"
 41588 ;; Parameters:    Size  Location     Type
 41589 ;;  data            2    2[COMRAM] PTR const unsigned char 
 41590 ;;		 -> STR_178(28), STR_117(13), STR_100(35), STR_98(38), 
 41591 ;;		 -> STR_89(24), STR_86(60), STR_81(32), STR_70(14), 
 41592 ;;		 -> SYNTAX_ERR(14), STR_20(5), STR_17(3), STR_16(6), 
 41593 ;;		 -> STR_15(9), STR_14(20), STR_13(9), STR_8(3), 
 41594 ;;		 -> STR_6(4), CRLN(3), 
 41595 ;; Auto vars:     Size  Location     Type
 41596 ;;		None
 41597 ;; Return value:  Size  Location     Type
 41598 ;;		None               void
 41599 ;; Registers used:
 41600 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 41601 ;; Tracked objects:
 41602 ;;		On entry : 0/0
 41603 ;;		On exit  : 0/0
 41604 ;;		Unchanged: 0/0
 41605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41606 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41609 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41610 ;;Total ram usage:        2 bytes
 41611 ;; Hardware stack levels used:    1
 41612 ;; Hardware stack levels required when called:    3
 41613 ;; This function calls:
 41614 ;;		i1_UARTchar_CONST
 41615 ;; This function is called by:
 41616 ;;		_low_isr
 41617 ;; This function uses a non-reentrant model
 41618 ;;
 41619                           
 41620                           	psect	text111
 41621  00A6E6                     __ptext111:
 41622                           	opt stack 0
 41623  00A6E6                     i1_UARTstring_CONST:
 41624                           	opt stack 18
 41625                           
 41626                           ;UART.c: 238: while(*data != 0)
 41627                           
 41628                           ;incstack = 0
 41629  00A6E6  D00C               	goto	i1l13634
 41630  00A6E8                     i1l13630:
 41631                           
 41632                           ;UART.c: 239: {
 41633                           ;UART.c: 240: UARTchar_CONST(*data);
 41634  00A6E8  C003  FFF6         	movff	i1UARTstring_CONST@data,tblptrl
 41635  00A6EC  C004  FFF7         	movff	i1UARTstring_CONST@data+1,tblptrh
 41636  00A6F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 41637  00A6F0  6AF8               	clrf	tblptru,c
 41638  00A6F2                     	endif
 41639  00A6F2                     	if	0	;tblptru may be non-zero
 41640  00A6F2                     	endif
 41641  00A6F2  0008               	tblrd		*
 41642  00A6F4  50F5               	movf	tablat,w,c
 41643  00A6F6  EC4B  F054         	call	i1_UARTchar_CONST
 41644                           
 41645                           ;UART.c: 241: *data++;
 41646  00A6FA  4A03               	infsnz	i1UARTstring_CONST@data,f,c
 41647  00A6FC  2A04               	incf	i1UARTstring_CONST@data+1,f,c
 41648  00A6FE  D000               	goto	i1l13634
 41649  00A700                     i1l13634:
 41650  00A700  C003  FFF6         	movff	i1UARTstring_CONST@data,tblptrl
 41651  00A704  C004  FFF7         	movff	i1UARTstring_CONST@data+1,tblptrh
 41652  00A708                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 41653  00A708  6AF8               	clrf	tblptru,c
 41654  00A70A                     	endif
 41655  00A70A                     	if	0	;tblptru may be non-zero
 41656  00A70A                     	endif
 41657  00A70A  0008               	tblrd		*
 41658  00A70C  50F5               	movf	tablat,w,c
 41659  00A70E  0900               	iorlw	0
 41660  00A710  A4D8               	btfss	status,2,c
 41661  00A712  D7EA               	goto	i1l13630
 41662  00A714  0012               	return		;funcret
 41663  00A716                     __end_ofi1_UARTstring_CONST:
 41664                           	opt stack 0
 41665                           pclatu	equ	0xFFB
 41666                           pclath	equ	0xFFA
 41667                           tblptru	equ	0xFF8
 41668                           tblptrh	equ	0xFF7
 41669                           tblptrl	equ	0xFF6
 41670                           tablat	equ	0xFF5
 41671                           prodh	equ	0xFF4
 41672                           prodl	equ	0xFF3
 41673                           intcon	equ	0xFF2
 41674                           intcon2	equ	0xFF1
 41675                           indf0	equ	0xFEF
 41676                           postinc0	equ	0xFEE
 41677                           plusw0	equ	0xFEB
 41678                           fsr0h	equ	0xFEA
 41679                           fsr0l	equ	0xFE9
 41680                           wreg	equ	0xFE8
 41681                           indf1	equ	0xFE7
 41682                           postdec1	equ	0xFE5
 41683                           fsr1h	equ	0xFE2
 41684                           fsr1l	equ	0xFE1
 41685                           bsr	equ	0xFE0
 41686                           indf2	equ	0xFDF
 41687                           postinc2	equ	0xFDE
 41688                           postdec2	equ	0xFDD
 41689                           plusw2	equ	0xFDB
 41690                           fsr2h	equ	0xFDA
 41691                           fsr2l	equ	0xFD9
 41692                           status	equ	0xFD8
 41693                           
 41694 ;; *************** function i1_UARTchar_CONST *****************
 41695 ;; Defined at:
 41696 ;;		line 207 in file "UART.c"
 41697 ;; Parameters:    Size  Location     Type
 41698 ;;  data            1    wreg     const unsigned char 
 41699 ;; Auto vars:     Size  Location     Type
 41700 ;;  data            1    0[COMRAM] const unsigned char 
 41701 ;;  UARTchar_CON    1    1[COMRAM] unsigned char 
 41702 ;; Return value:  Size  Location     Type
 41703 ;;		None               void
 41704 ;; Registers used:
 41705 ;;		wreg, status,2
 41706 ;; Tracked objects:
 41707 ;;		On entry : 0/0
 41708 ;;		On exit  : 0/0
 41709 ;;		Unchanged: 0/0
 41710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41712 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41715 ;;Total ram usage:        2 bytes
 41716 ;; Hardware stack levels used:    1
 41717 ;; Hardware stack levels required when called:    2
 41718 ;; This function calls:
 41719 ;;		Nothing
 41720 ;; This function is called by:
 41721 ;;		_low_isr
 41722 ;;		i1_UARTstring_CONST
 41723 ;; This function uses a non-reentrant model
 41724 ;;
 41725                           
 41726                           	psect	text112
 41727  00A896                     __ptext112:
 41728                           	opt stack 0
 41729  00A896                     i1_UARTchar_CONST:
 41730                           	opt stack 18
 41731                           
 41732                           ;incstack = 0
 41733                           ;i1UARTchar_CONST@data stored from wreg
 41734  00A896  6E01               	movwf	i1UARTchar_CONST@data,c
 41735                           
 41736                           ;UART.c: 209: unsigned char temp = data;
 41737  00A898  C001  F002         	movff	i1UARTchar_CONST@data,i1UARTchar_CONST@temp
 41738                           
 41739                           ;UART.c: 210: if(temp != 0)
 41740  00A89C  5002               	movf	i1UARTchar_CONST@temp,w,c
 41741  00A89E  B4D8               	btfsc	status,2,c
 41742  00A8A0  0012               	return	
 41743                           
 41744                           ;UART.c: 211: {
 41745                           ;UART.c: 212: while(!TXSTAbits.TRMT);
 41746  00A8A2  D000               	goto	i1l777
 41747  00A8A4                     i1l777:
 41748  00A8A4  A2AC               	btfss	4012,1,c	;volatile
 41749  00A8A6  D7FE               	goto	i1l777
 41750                           
 41751                           ;UART.c: 213: TXREG = temp;
 41752  00A8A8  C002  FFAD         	movff	i1UARTchar_CONST@temp,4013	;volatile
 41753  00A8AC  0012               	return	
 41754  00A8AE  0012               	return		;funcret
 41755  00A8B0                     __end_ofi1_UARTchar_CONST:
 41756                           	opt stack 0
 41757                           pclatu	equ	0xFFB
 41758                           pclath	equ	0xFFA
 41759                           tblptru	equ	0xFF8
 41760                           tblptrh	equ	0xFF7
 41761                           tblptrl	equ	0xFF6
 41762                           tablat	equ	0xFF5
 41763                           prodh	equ	0xFF4
 41764                           prodl	equ	0xFF3
 41765                           intcon	equ	0xFF2
 41766                           intcon2	equ	0xFF1
 41767                           indf0	equ	0xFEF
 41768                           postinc0	equ	0xFEE
 41769                           plusw0	equ	0xFEB
 41770                           fsr0h	equ	0xFEA
 41771                           fsr0l	equ	0xFE9
 41772                           wreg	equ	0xFE8
 41773                           indf1	equ	0xFE7
 41774                           postdec1	equ	0xFE5
 41775                           fsr1h	equ	0xFE2
 41776                           fsr1l	equ	0xFE1
 41777                           bsr	equ	0xFE0
 41778                           indf2	equ	0xFDF
 41779                           postinc2	equ	0xFDE
 41780                           postdec2	equ	0xFDD
 41781                           plusw2	equ	0xFDB
 41782                           fsr2h	equ	0xFDA
 41783                           fsr2l	equ	0xFD9
 41784                           status	equ	0xFD8
 41785                           
 41786 ;; *************** function i1_UARTstring *****************
 41787 ;; Defined at:
 41788 ;;		line 222 in file "UART.c"
 41789 ;; Parameters:    Size  Location     Type
 41790 ;;  data            2    1[COMRAM] PTR unsigned char 
 41791 ;;		 -> UseBluetooth@buf(100), BluetoothInitialSetup@buf(50), ReceivedString(100), 
 41792 ;; Auto vars:     Size  Location     Type
 41793 ;;		None
 41794 ;; Return value:  Size  Location     Type
 41795 ;;		None               void
 41796 ;; Registers used:
 41797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41798 ;; Tracked objects:
 41799 ;;		On entry : 0/0
 41800 ;;		On exit  : 0/0
 41801 ;;		Unchanged: 0/0
 41802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41806 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41807 ;;Total ram usage:        2 bytes
 41808 ;; Hardware stack levels used:    1
 41809 ;; Hardware stack levels required when called:    3
 41810 ;; This function calls:
 41811 ;;		i1_UARTchar
 41812 ;; This function is called by:
 41813 ;;		_low_isr
 41814 ;; This function uses a non-reentrant model
 41815 ;;
 41816                           
 41817                           	psect	text113
 41818  00A816                     __ptext113:
 41819                           	opt stack 0
 41820  00A816                     i1_UARTstring:
 41821                           	opt stack 18
 41822                           
 41823                           ;UART.c: 224: while(*data != 0)
 41824                           
 41825                           ;incstack = 0
 41826  00A816  D00A               	goto	i1l13626
 41827  00A818                     i1l13622:
 41828                           
 41829                           ;UART.c: 225: {
 41830                           ;UART.c: 226: UARTchar(*data);
 41831  00A818  C002  FFD9         	movff	i1UARTstring@data,fsr2l
 41832  00A81C  C003  FFDA         	movff	i1UARTstring@data+1,fsr2h
 41833  00A820  50DF               	movf	indf2,w,c
 41834  00A822  EC91  F054         	call	i1_UARTchar
 41835                           
 41836                           ;UART.c: 227: *data++;
 41837  00A826  4A02               	infsnz	i1UARTstring@data,f,c
 41838  00A828  2A03               	incf	i1UARTstring@data+1,f,c
 41839  00A82A  D000               	goto	i1l13626
 41840  00A82C                     i1l13626:
 41841  00A82C  C002  FFD9         	movff	i1UARTstring@data,fsr2l
 41842  00A830  C003  FFDA         	movff	i1UARTstring@data+1,fsr2h
 41843  00A834  50DF               	movf	indf2,w,c
 41844  00A836  A4D8               	btfss	status,2,c
 41845  00A838  D7EF               	goto	i1l13622
 41846  00A83A  0012               	return		;funcret
 41847  00A83C                     __end_ofi1_UARTstring:
 41848                           	opt stack 0
 41849                           pclatu	equ	0xFFB
 41850                           pclath	equ	0xFFA
 41851                           tblptru	equ	0xFF8
 41852                           tblptrh	equ	0xFF7
 41853                           tblptrl	equ	0xFF6
 41854                           tablat	equ	0xFF5
 41855                           prodh	equ	0xFF4
 41856                           prodl	equ	0xFF3
 41857                           intcon	equ	0xFF2
 41858                           intcon2	equ	0xFF1
 41859                           indf0	equ	0xFEF
 41860                           postinc0	equ	0xFEE
 41861                           plusw0	equ	0xFEB
 41862                           fsr0h	equ	0xFEA
 41863                           fsr0l	equ	0xFE9
 41864                           wreg	equ	0xFE8
 41865                           indf1	equ	0xFE7
 41866                           postdec1	equ	0xFE5
 41867                           fsr1h	equ	0xFE2
 41868                           fsr1l	equ	0xFE1
 41869                           bsr	equ	0xFE0
 41870                           indf2	equ	0xFDF
 41871                           postinc2	equ	0xFDE
 41872                           postdec2	equ	0xFDD
 41873                           plusw2	equ	0xFDB
 41874                           fsr2h	equ	0xFDA
 41875                           fsr2l	equ	0xFD9
 41876                           status	equ	0xFD8
 41877                           
 41878 ;; *************** function i1_ReadUSART *****************
 41879 ;; Defined at:
 41880 ;;		line 263 in file "UART.c"
 41881 ;; Parameters:    Size  Location     Type
 41882 ;;		None
 41883 ;; Auto vars:     Size  Location     Type
 41884 ;;  ReadUSART       1    0[COMRAM] unsigned char 
 41885 ;; Return value:  Size  Location     Type
 41886 ;;                  1    wreg      unsigned char 
 41887 ;; Registers used:
 41888 ;;		wreg, status,2
 41889 ;; Tracked objects:
 41890 ;;		On entry : 0/0
 41891 ;;		On exit  : 0/0
 41892 ;;		Unchanged: 0/0
 41893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41895 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41897 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41898 ;;Total ram usage:        1 bytes
 41899 ;; Hardware stack levels used:    1
 41900 ;; Hardware stack levels required when called:    2
 41901 ;; This function calls:
 41902 ;;		Nothing
 41903 ;; This function is called by:
 41904 ;;		_low_isr
 41905 ;; This function uses a non-reentrant model
 41906 ;;
 41907                           
 41908                           	psect	text114
 41909  00A90C                     __ptext114:
 41910                           	opt stack 0
 41911  00A90C                     i1_ReadUSART:
 41912                           	opt stack 19
 41913                           
 41914                           ;UART.c: 265: unsigned char data;
 41915                           ;UART.c: 267: if(RCSTAbits.OERR)
 41916                           
 41917                           ;incstack = 0
 41918  00A90C  A2AB               	btfss	4011,1,c	;volatile
 41919  00A90E  D004               	goto	i1l798
 41920                           
 41921                           ;UART.c: 268: {
 41922                           ;UART.c: 270: RCSTAbits.CREN = 0;
 41923  00A910  98AB               	bcf	4011,4,c	;volatile
 41924                           
 41925                           ;UART.c: 271: RCSTAbits.CREN = 1;
 41926  00A912  88AB               	bsf	4011,4,c	;volatile
 41927                           
 41928                           ;UART.c: 272: return 0;
 41929  00A914  0E00               	movlw	0
 41930  00A916  0012               	return	
 41931  00A918                     i1l798:
 41932                           
 41933                           ;UART.c: 273: }
 41934                           ;UART.c: 275: data = RCREG;
 41935  00A918  CFAE F001          	movff	4014,i1ReadUSART@data	;volatile
 41936                           
 41937                           ;UART.c: 276: return (data);
 41938  00A91C  5001               	movf	i1ReadUSART@data,w,c
 41939  00A91E  0012               	return	
 41940  00A920  0012               	return		;funcret
 41941  00A922                     __end_ofi1_ReadUSART:
 41942                           	opt stack 0
 41943                           pclatu	equ	0xFFB
 41944                           pclath	equ	0xFFA
 41945                           tblptru	equ	0xFF8
 41946                           tblptrh	equ	0xFF7
 41947                           tblptrl	equ	0xFF6
 41948                           tablat	equ	0xFF5
 41949                           prodh	equ	0xFF4
 41950                           prodl	equ	0xFF3
 41951                           intcon	equ	0xFF2
 41952                           intcon2	equ	0xFF1
 41953                           indf0	equ	0xFEF
 41954                           postinc0	equ	0xFEE
 41955                           plusw0	equ	0xFEB
 41956                           fsr0h	equ	0xFEA
 41957                           fsr0l	equ	0xFE9
 41958                           wreg	equ	0xFE8
 41959                           indf1	equ	0xFE7
 41960                           postdec1	equ	0xFE5
 41961                           fsr1h	equ	0xFE2
 41962                           fsr1l	equ	0xFE1
 41963                           bsr	equ	0xFE0
 41964                           indf2	equ	0xFDF
 41965                           postinc2	equ	0xFDE
 41966                           postdec2	equ	0xFDD
 41967                           plusw2	equ	0xFDB
 41968                           fsr2h	equ	0xFDA
 41969                           fsr2l	equ	0xFD9
 41970                           status	equ	0xFD8
 41971                           
 41972 ;; *************** function i1_BlueConnected *****************
 41973 ;; Defined at:
 41974 ;;		line 105 in file "Bluetooth.c"
 41975 ;; Parameters:    Size  Location     Type
 41976 ;;		None
 41977 ;; Auto vars:     Size  Location     Type
 41978 ;;		None
 41979 ;; Return value:  Size  Location     Type
 41980 ;;                  1    wreg      unsigned char 
 41981 ;; Registers used:
 41982 ;;		wreg
 41983 ;; Tracked objects:
 41984 ;;		On entry : 0/0
 41985 ;;		On exit  : 0/0
 41986 ;;		Unchanged: 0/0
 41987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41992 ;;Total ram usage:        0 bytes
 41993 ;; Hardware stack levels used:    1
 41994 ;; Hardware stack levels required when called:    2
 41995 ;; This function calls:
 41996 ;;		Nothing
 41997 ;; This function is called by:
 41998 ;;		_low_isr
 41999 ;; This function uses a non-reentrant model
 42000 ;;
 42001                           
 42002                           	psect	text115
 42003  00AA1A                     __ptext115:
 42004                           	opt stack 0
 42005  00AA1A                     i1_BlueConnected:
 42006                           	opt stack 19
 42007                           
 42008                           ;Bluetooth.c: 108: if((PORTA & 0x02) == 0x02)
 42009                           
 42010                           ;incstack = 0
 42011  00AA1A  A280               	btfss	3968,1,c	;volatile
 42012  00AA1C  D002               	goto	i1l13668
 42013                           
 42014                           ;Bluetooth.c: 109: {
 42015                           ;Bluetooth.c: 110: return 1;
 42016  00AA1E  0E01               	movlw	1
 42017  00AA20  0012               	return	
 42018  00AA22                     i1l13668:
 42019                           
 42020                           ;Bluetooth.c: 111: }
 42021                           ;Bluetooth.c: 112: return 0;
 42022  00AA22  0E00               	movlw	0
 42023  00AA24  0012               	return	
 42024  00AA26  0012               	return		;funcret
 42025  00AA28                     __end_ofi1_BlueConnected:
 42026                           	opt stack 0
 42027                           pclatu	equ	0xFFB
 42028                           pclath	equ	0xFFA
 42029                           tblptru	equ	0xFF8
 42030                           tblptrh	equ	0xFF7
 42031                           tblptrl	equ	0xFF6
 42032                           tablat	equ	0xFF5
 42033                           prodh	equ	0xFF4
 42034                           prodl	equ	0xFF3
 42035                           intcon	equ	0xFF2
 42036                           intcon2	equ	0xFF1
 42037                           indf0	equ	0xFEF
 42038                           postinc0	equ	0xFEE
 42039                           plusw0	equ	0xFEB
 42040                           fsr0h	equ	0xFEA
 42041                           fsr0l	equ	0xFE9
 42042                           wreg	equ	0xFE8
 42043                           indf1	equ	0xFE7
 42044                           postdec1	equ	0xFE5
 42045                           fsr1h	equ	0xFE2
 42046                           fsr1l	equ	0xFE1
 42047                           bsr	equ	0xFE0
 42048                           indf2	equ	0xFDF
 42049                           postinc2	equ	0xFDE
 42050                           postdec2	equ	0xFDD
 42051                           plusw2	equ	0xFDB
 42052                           fsr2h	equ	0xFDA
 42053                           fsr2l	equ	0xFD9
 42054                           status	equ	0xFD8
 42055                           
 42056 ;; *************** function _IsCharacter *****************
 42057 ;; Defined at:
 42058 ;;		line 129 in file "MISC.c"
 42059 ;; Parameters:    Size  Location     Type
 42060 ;;  data            1    wreg     unsigned char 
 42061 ;; Auto vars:     Size  Location     Type
 42062 ;;  data            1    0[COMRAM] unsigned char 
 42063 ;; Return value:  Size  Location     Type
 42064 ;;                  1    wreg      unsigned char 
 42065 ;; Registers used:
 42066 ;;		wreg, status,2, status,0
 42067 ;; Tracked objects:
 42068 ;;		On entry : 0/0
 42069 ;;		On exit  : 0/0
 42070 ;;		Unchanged: 0/0
 42071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42076 ;;Total ram usage:        1 bytes
 42077 ;; Hardware stack levels used:    1
 42078 ;; Hardware stack levels required when called:    2
 42079 ;; This function calls:
 42080 ;;		Nothing
 42081 ;; This function is called by:
 42082 ;;		_low_isr
 42083 ;; This function uses a non-reentrant model
 42084 ;;
 42085                           
 42086                           	psect	text116
 42087  00A8C8                     __ptext116:
 42088                           	opt stack 0
 42089  00A8C8                     _IsCharacter:
 42090                           	opt stack 19
 42091                           
 42092                           ;incstack = 0
 42093                           ;IsCharacter@data stored from wreg
 42094  00A8C8  6E01               	movwf	IsCharacter@data,c
 42095                           
 42096                           ;MISC.c: 131: if(data >= 32 && data <= 126)
 42097  00A8CA  0E1F               	movlw	31
 42098  00A8CC  6401               	cpfsgt	IsCharacter@data,c
 42099  00A8CE  D005               	goto	i1l13438
 42100  00A8D0  0E7F               	movlw	127
 42101  00A8D2  6001               	cpfslt	IsCharacter@data,c
 42102  00A8D4  D002               	goto	i1l13438
 42103                           
 42104                           ;MISC.c: 132: {
 42105                           ;MISC.c: 133: return 1;
 42106  00A8D6  0E01               	movlw	1
 42107  00A8D8  0012               	return	
 42108  00A8DA                     i1l13438:
 42109                           
 42110                           ;MISC.c: 134: }
 42111                           ;MISC.c: 135: return 0;
 42112  00A8DA  0E00               	movlw	0
 42113  00A8DC  0012               	return	
 42114  00A8DE  0012               	return		;funcret
 42115  00A8E0                     __end_of_IsCharacter:
 42116                           	opt stack 0
 42117                           pclatu	equ	0xFFB
 42118                           pclath	equ	0xFFA
 42119                           tblptru	equ	0xFF8
 42120                           tblptrh	equ	0xFF7
 42121                           tblptrl	equ	0xFF6
 42122                           tablat	equ	0xFF5
 42123                           prodh	equ	0xFF4
 42124                           prodl	equ	0xFF3
 42125                           intcon	equ	0xFF2
 42126                           intcon2	equ	0xFF1
 42127                           indf0	equ	0xFEF
 42128                           postinc0	equ	0xFEE
 42129                           plusw0	equ	0xFEB
 42130                           fsr0h	equ	0xFEA
 42131                           fsr0l	equ	0xFE9
 42132                           wreg	equ	0xFE8
 42133                           indf1	equ	0xFE7
 42134                           postdec1	equ	0xFE5
 42135                           fsr1h	equ	0xFE2
 42136                           fsr1l	equ	0xFE1
 42137                           bsr	equ	0xFE0
 42138                           indf2	equ	0xFDF
 42139                           postinc2	equ	0xFDE
 42140                           postdec2	equ	0xFDD
 42141                           plusw2	equ	0xFDB
 42142                           fsr2h	equ	0xFDA
 42143                           fsr2l	equ	0xFD9
 42144                           status	equ	0xFD8
 42145                           
 42146 ;; *************** function _EraseScreen *****************
 42147 ;; Defined at:
 42148 ;;		line 361 in file "UART.c"
 42149 ;; Parameters:    Size  Location     Type
 42150 ;;  characters      1    wreg     unsigned char 
 42151 ;; Auto vars:     Size  Location     Type
 42152 ;;  characters      1    1[COMRAM] unsigned char 
 42153 ;;  i               1    2[COMRAM] unsigned char 
 42154 ;; Return value:  Size  Location     Type
 42155 ;;		None               void
 42156 ;; Registers used:
 42157 ;;		wreg, status,2, status,0, cstack
 42158 ;; Tracked objects:
 42159 ;;		On entry : 0/0
 42160 ;;		On exit  : 0/0
 42161 ;;		Unchanged: 0/0
 42162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42164 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42167 ;;Total ram usage:        2 bytes
 42168 ;; Hardware stack levels used:    1
 42169 ;; Hardware stack levels required when called:    3
 42170 ;; This function calls:
 42171 ;;		i1_UARTchar
 42172 ;; This function is called by:
 42173 ;;		_low_isr
 42174 ;; This function uses a non-reentrant model
 42175 ;;
 42176                           
 42177                           	psect	text117
 42178  00A7EE                     __ptext117:
 42179                           	opt stack 0
 42180  00A7EE                     _EraseScreen:
 42181                           	opt stack 18
 42182                           
 42183                           ;incstack = 0
 42184                           ;EraseScreen@characters stored from wreg
 42185  00A7EE  6E02               	movwf	EraseScreen@characters,c
 42186                           
 42187                           ;UART.c: 363: unsigned char i;
 42188                           ;UART.c: 365: UARTchar('\r');
 42189  00A7F0  0E0D               	movlw	13
 42190  00A7F2  EC91  F054         	call	i1_UARTchar
 42191                           
 42192                           ;UART.c: 366: for (i = 0; i < characters; i++)
 42193  00A7F6  0E00               	movlw	0
 42194  00A7F8  6E03               	movwf	EraseScreen@i,c
 42195  00A7FA  D005               	goto	i1l13450
 42196  00A7FC                     i1l13446:
 42197                           
 42198                           ;UART.c: 367: {
 42199                           ;UART.c: 368: UARTchar(' ');
 42200  00A7FC  0E20               	movlw	32
 42201  00A7FE  EC91  F054         	call	i1_UARTchar
 42202  00A802  2A03               	incf	EraseScreen@i,f,c
 42203  00A804  D000               	goto	i1l13450
 42204  00A806                     i1l13450:
 42205  00A806  5002               	movf	EraseScreen@characters,w,c
 42206  00A808  5C03               	subwf	EraseScreen@i,w,c
 42207  00A80A  A0D8               	btfss	status,0,c
 42208  00A80C  D7F7               	goto	i1l13446
 42209                           
 42210                           ;UART.c: 369: }
 42211                           ;UART.c: 370: UARTchar('\r');
 42212  00A80E  0E0D               	movlw	13
 42213  00A810  EC91  F054         	call	i1_UARTchar
 42214  00A814  0012               	return		;funcret
 42215  00A816                     __end_of_EraseScreen:
 42216                           	opt stack 0
 42217                           pclatu	equ	0xFFB
 42218                           pclath	equ	0xFFA
 42219                           tblptru	equ	0xFF8
 42220                           tblptrh	equ	0xFF7
 42221                           tblptrl	equ	0xFF6
 42222                           tablat	equ	0xFF5
 42223                           prodh	equ	0xFF4
 42224                           prodl	equ	0xFF3
 42225                           intcon	equ	0xFF2
 42226                           intcon2	equ	0xFF1
 42227                           indf0	equ	0xFEF
 42228                           postinc0	equ	0xFEE
 42229                           plusw0	equ	0xFEB
 42230                           fsr0h	equ	0xFEA
 42231                           fsr0l	equ	0xFE9
 42232                           wreg	equ	0xFE8
 42233                           indf1	equ	0xFE7
 42234                           postdec1	equ	0xFE5
 42235                           fsr1h	equ	0xFE2
 42236                           fsr1l	equ	0xFE1
 42237                           bsr	equ	0xFE0
 42238                           indf2	equ	0xFDF
 42239                           postinc2	equ	0xFDE
 42240                           postdec2	equ	0xFDD
 42241                           plusw2	equ	0xFDB
 42242                           fsr2h	equ	0xFDA
 42243                           fsr2l	equ	0xFD9
 42244                           status	equ	0xFD8
 42245                           
 42246 ;; *************** function i1_UARTchar *****************
 42247 ;; Defined at:
 42248 ;;		line 193 in file "UART.c"
 42249 ;; Parameters:    Size  Location     Type
 42250 ;;  data            1    wreg     unsigned char 
 42251 ;; Auto vars:     Size  Location     Type
 42252 ;;  data            1    0[COMRAM] unsigned char 
 42253 ;; Return value:  Size  Location     Type
 42254 ;;		None               void
 42255 ;; Registers used:
 42256 ;;		wreg, status,2
 42257 ;; Tracked objects:
 42258 ;;		On entry : 0/0
 42259 ;;		On exit  : 0/0
 42260 ;;		Unchanged: 0/0
 42261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42265 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42266 ;;Total ram usage:        1 bytes
 42267 ;; Hardware stack levels used:    1
 42268 ;; Hardware stack levels required when called:    2
 42269 ;; This function calls:
 42270 ;;		Nothing
 42271 ;; This function is called by:
 42272 ;;		_EraseScreen
 42273 ;;		_low_isr
 42274 ;;		i1_UARTstring
 42275 ;; This function uses a non-reentrant model
 42276 ;;
 42277                           
 42278                           	psect	text118
 42279  00A922                     __ptext118:
 42280                           	opt stack 0
 42281  00A922                     i1_UARTchar:
 42282                           	opt stack 18
 42283                           
 42284                           ;incstack = 0
 42285                           ;i1UARTchar@data stored from wreg
 42286  00A922  6E01               	movwf	i1UARTchar@data,c
 42287                           
 42288                           ;UART.c: 195: if(data != 0)
 42289  00A924  5001               	movf	i1UARTchar@data,w,c
 42290  00A926  B4D8               	btfsc	status,2,c
 42291  00A928  0012               	return	
 42292                           
 42293                           ;UART.c: 196: {
 42294                           ;UART.c: 197: while(!TXSTAbits.TRMT);
 42295  00A92A  D000               	goto	i1l770
 42296  00A92C                     i1l770:
 42297  00A92C  A2AC               	btfss	4012,1,c	;volatile
 42298  00A92E  D7FE               	goto	i1l770
 42299                           
 42300                           ;UART.c: 198: TXREG = data;
 42301  00A930  C001  FFAD         	movff	i1UARTchar@data,4013	;volatile
 42302  00A934  0012               	return	
 42303  00A936  0012               	return		;funcret
 42304  00A938                     __end_ofi1_UARTchar:
 42305                           	opt stack 0
 42306                           pclatu	equ	0xFFB
 42307                           pclath	equ	0xFFA
 42308                           tblptru	equ	0xFF8
 42309                           tblptrh	equ	0xFF7
 42310                           tblptrl	equ	0xFF6
 42311                           tablat	equ	0xFF5
 42312                           prodh	equ	0xFF4
 42313                           prodl	equ	0xFF3
 42314                           intcon	equ	0xFF2
 42315                           intcon2	equ	0xFF1
 42316                           indf0	equ	0xFEF
 42317                           postinc0	equ	0xFEE
 42318                           plusw0	equ	0xFEB
 42319                           fsr0h	equ	0xFEA
 42320                           fsr0l	equ	0xFE9
 42321                           wreg	equ	0xFE8
 42322                           indf1	equ	0xFE7
 42323                           postdec1	equ	0xFE5
 42324                           fsr1h	equ	0xFE2
 42325                           fsr1l	equ	0xFE1
 42326                           bsr	equ	0xFE0
 42327                           indf2	equ	0xFDF
 42328                           postinc2	equ	0xFDE
 42329                           postdec2	equ	0xFDD
 42330                           plusw2	equ	0xFDB
 42331                           fsr2h	equ	0xFDA
 42332                           fsr2l	equ	0xFD9
 42333                           status	equ	0xFD8
 42334                           
 42335 ;; *************** function _high_isr *****************
 42336 ;; Defined at:
 42337 ;;		line 59 in file "interrupts.c"
 42338 ;; Parameters:    Size  Location     Type
 42339 ;;		None
 42340 ;; Auto vars:     Size  Location     Type
 42341 ;;  Time0           2   55[COMRAM] unsigned int 
 42342 ;;  IRpin           1   54[COMRAM] unsigned char 
 42343 ;; Return value:  Size  Location     Type
 42344 ;;		None               void
 42345 ;; Registers used:
 42346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42347 ;; Tracked objects:
 42348 ;;		On entry : 0/0
 42349 ;;		On exit  : 0/0
 42350 ;;		Unchanged: 0/0
 42351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42353 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42354 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42355 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42356 ;;Total ram usage:       21 bytes
 42357 ;; Hardware stack levels used:    1
 42358 ;; Hardware stack levels required when called:    1
 42359 ;; This function calls:
 42360 ;;		_IRrawToNEC
 42361 ;;		_ResetTimer3
 42362 ;;		_SetTimer0
 42363 ;;		i2_ReadIRpin
 42364 ;;		i2_ResetTimer0
 42365 ;;		i2_cleanBuffer16bit
 42366 ;; This function is called by:
 42367 ;;		Interrupt level 2
 42368 ;; This function uses a non-reentrant model
 42369 ;;
 42370                           
 42371                           	psect	intcode
 42372  000008                     __pintcode:
 42373                           	opt stack 0
 42374  000008                     _high_isr:
 42375                           	opt stack 18
 42376                           
 42377                           ;incstack = 0
 42378  000008  CFFA F029          	movff	pclath,??_high_isr+4
 42379  00000C  CFFB F02A          	movff	pclatu,??_high_isr+5
 42380  000010  CFE9 F02B          	movff	fsr0l,??_high_isr+6
 42381  000014  EF1F  F029         	goto	int_func
 42382                           pclatu	equ	0xFFB
 42383                           pclath	equ	0xFFA
 42384                           tblptru	equ	0xFF8
 42385                           tblptrh	equ	0xFF7
 42386                           tblptrl	equ	0xFF6
 42387                           tablat	equ	0xFF5
 42388                           prodh	equ	0xFF4
 42389                           prodl	equ	0xFF3
 42390                           intcon	equ	0xFF2
 42391                           intcon2	equ	0xFF1
 42392                           indf0	equ	0xFEF
 42393                           postinc0	equ	0xFEE
 42394                           plusw0	equ	0xFEB
 42395                           fsr0h	equ	0xFEA
 42396                           fsr0l	equ	0xFE9
 42397                           wreg	equ	0xFE8
 42398                           indf1	equ	0xFE7
 42399                           postdec1	equ	0xFE5
 42400                           fsr1h	equ	0xFE2
 42401                           fsr1l	equ	0xFE1
 42402                           bsr	equ	0xFE0
 42403                           indf2	equ	0xFDF
 42404                           postinc2	equ	0xFDE
 42405                           postdec2	equ	0xFDD
 42406                           plusw2	equ	0xFDB
 42407                           fsr2h	equ	0xFDA
 42408                           fsr2l	equ	0xFD9
 42409                           status	equ	0xFD8
 42410                           
 42411                           	psect	intcode_body
 42412  00523E                     __pintcode_body:
 42413                           	opt stack 18
 42414  00523E                     int_func:
 42415                           	opt stack 18
 42416  00523E  CFEA F02C          	movff	fsr0h,??_high_isr+7
 42417  005242  CFE1 F02D          	movff	fsr1l,??_high_isr+8
 42418  005246  CFE2 F02E          	movff	fsr1h,??_high_isr+9
 42419  00524A  CFD9 F02F          	movff	fsr2l,??_high_isr+10
 42420  00524E  CFDA F030          	movff	fsr2h,??_high_isr+11
 42421  005252  CFF3 F031          	movff	prodl,??_high_isr+12
 42422  005256  CFF4 F032          	movff	prodh,??_high_isr+13
 42423  00525A  CFF6 F033          	movff	tblptrl,??_high_isr+14
 42424  00525E  CFF7 F034          	movff	tblptrh,??_high_isr+15
 42425  005262  CFF8 F035          	movff	tblptru,??_high_isr+16
 42426  005266  CFF5 F036          	movff	tablat,??_high_isr+17
 42427                           
 42428                           ;interrupts.c: 68: unsigned char IRpin;
 42429                           ;interrupts.c: 69: unsigned int Time0;
 42430                           ;interrupts.c: 71: INTCONbits.GIE = 0;
 42431  00526A  9EF2               	bcf	intcon,7,c	;volatile
 42432                           
 42433                           ;interrupts.c: 73: if(INTCONbits.RBIF)
 42434  00526C  A0F2               	btfss	intcon,0,c	;volatile
 42435  00526E  D079               	goto	i2l1364
 42436                           
 42437                           ;interrupts.c: 74: {
 42438                           ;interrupts.c: 75: __nop();
 42439  005270  F000               	nop	
 42440                           
 42441                           ;interrupts.c: 76: __nop();
 42442  005272  F000               	nop	
 42443                           
 42444                           ;interrupts.c: 77: IRtimeout = 0;
 42445  005274  0E00               	movlw	0
 42446  005276  0103               	movlb	3	; () banked
 42447  005278  6FF1               	movwf	_IRtimeout& (0+255),b
 42448  00527A  0E00               	movlw	0
 42449  00527C  6FF2               	movwf	(_IRtimeout+1)& (0+255),b
 42450  00527E  0E00               	movlw	0
 42451  005280  6FF3               	movwf	(_IRtimeout+2)& (0+255),b
 42452  005282  0E00               	movlw	0
 42453  005284  6FF4               	movwf	(_IRtimeout+3)& (0+255),b
 42454                           
 42455                           ; BSR set to: 3
 42456                           ;interrupts.c: 78: IRpin = ReadIRpin();
 42457  005286  EC14  F055         	call	i2_ReadIRpin	;wreg free
 42458  00528A  6E37               	movwf	high_isr@IRpin,c
 42459                           
 42460                           ;interrupts.c: 79: if(IRpin != IRpinOLD)
 42461  00528C  5040               	movf	_IRpinOLD,w,c
 42462  00528E  1837               	xorwf	high_isr@IRpin,w,c
 42463  005290  B4D8               	btfsc	status,2,c
 42464  005292  D061               	goto	i2l1365
 42465                           
 42466                           ;interrupts.c: 80: {
 42467                           ;interrupts.c: 81: (T0CONbits.TMR0ON = 1);
 42468  005294  8ED5               	bsf	4053,7,c	;volatile
 42469                           
 42470                           ;interrupts.c: 82: (INTCONbits.TMR0IE = 1);
 42471  005296  8AF2               	bsf	intcon,5,c	;volatile
 42472                           
 42473                           ;interrupts.c: 83: ReceivingIR = 19;
 42474  005298  0E13               	movlw	19
 42475  00529A  6E50               	movwf	_ReceivingIR,c	;volatile
 42476                           
 42477                           ;interrupts.c: 84: IR_New_Code = 0;
 42478  00529C  0E00               	movlw	0
 42479  00529E  0103               	movlb	3	; () banked
 42480  0052A0  6FF0               	movwf	_IR_New_Code& (0+255),b
 42481                           
 42482                           ; BSR set to: 3
 42483                           ;interrupts.c: 85: Time0 = TMR0L;
 42484  0052A2  CFD6 F038          	movff	4054,high_isr@Time0	;volatile
 42485  0052A6  6A39               	clrf	high_isr@Time0+1,c
 42486                           
 42487                           ;interrupts.c: 86: Time0 += (TMR0H << 8);
 42488  0052A8  50D7               	movf	4055,w,c	;volatile
 42489  0052AA  2639               	addwf	high_isr@Time0+1,f,c
 42490                           
 42491                           ; BSR set to: 3
 42492                           ;interrupts.c: 87: if(IRrawCodeNum < 100)
 42493  0052AC  0E64               	movlw	100
 42494  0052AE  6041               	cpfslt	_IRrawCodeNum,c
 42495  0052B0  D04D               	goto	i2l1366
 42496                           
 42497                           ; BSR set to: 3
 42498                           ;interrupts.c: 88: {
 42499                           ;interrupts.c: 89: if((IRrawCodeNum > 0) && (IRrawCodeNum <= 100))
 42500  0052B2  5041               	movf	_IRrawCodeNum,w,c
 42501  0052B4  B4D8               	btfsc	status,2,c
 42502  0052B6  D042               	goto	i2l13976
 42503                           
 42504                           ; BSR set to: 3
 42505  0052B8  0E65               	movlw	101
 42506  0052BA  6041               	cpfslt	_IRrawCodeNum,c
 42507  0052BC  D03F               	goto	i2l13976
 42508                           
 42509                           ; BSR set to: 3
 42510                           ;interrupts.c: 90: {
 42511                           ;interrupts.c: 91: IRRawCode[IRrawCodeNum - 1] = Time0;
 42512  0052BE  0EFE               	movlw	254
 42513  0052C0  6E25               	movwf	??_high_isr& (0+255),c
 42514  0052C2  0EFF               	movlw	255
 42515  0052C4  6E26               	movwf	(??_high_isr+1)& (0+255),c
 42516  0052C6  5041               	movf	_IRrawCodeNum,w,c
 42517  0052C8  6E27               	movwf	(??_high_isr+2)& (0+255),c
 42518  0052CA  6A28               	clrf	(??_high_isr+3)& (0+255),c
 42519  0052CC  90D8               	bcf	status,0,c
 42520  0052CE  3627               	rlcf	??_high_isr+2,f,c
 42521  0052D0  3628               	rlcf	??_high_isr+3,f,c
 42522  0052D2  5025               	movf	??_high_isr,w,c
 42523  0052D4  2627               	addwf	??_high_isr+2,f,c
 42524  0052D6  5026               	movf	??_high_isr+1,w,c
 42525  0052D8  2228               	addwfc	??_high_isr+3,f,c
 42526  0052DA  0E00               	movlw	low _IRRawCode
 42527  0052DC  2427               	addwf	??_high_isr+2,w,c
 42528  0052DE  6ED9               	movwf	fsr2l,c
 42529  0052E0  0E06               	movlw	high _IRRawCode
 42530  0052E2  2028               	addwfc	??_high_isr+3,w,c
 42531  0052E4  6EDA               	movwf	fsr2h,c
 42532  0052E6  C038  FFDE         	movff	high_isr@Time0,postinc2
 42533  0052EA  C039  FFDD         	movff	high_isr@Time0+1,postdec2
 42534                           
 42535                           ; BSR set to: 3
 42536                           ;interrupts.c: 92: if((Time0 <= 21000 && Time0 >= 19000))
 42537  0052EE  0E09               	movlw	9
 42538  0052F0  5C38               	subwf	high_isr@Time0,w,c
 42539  0052F2  0E52               	movlw	82
 42540  0052F4  5839               	subwfb	high_isr@Time0+1,w,c
 42541  0052F6  B0D8               	btfsc	status,0,c
 42542  0052F8  D00A               	goto	i2l13966
 42543                           
 42544                           ; BSR set to: 3
 42545  0052FA  0E38               	movlw	56
 42546  0052FC  5C38               	subwf	high_isr@Time0,w,c
 42547  0052FE  0E4A               	movlw	74
 42548  005300  5839               	subwfb	high_isr@Time0+1,w,c
 42549  005302  A0D8               	btfss	status,0,c
 42550  005304  D004               	goto	i2l13966
 42551                           
 42552                           ; BSR set to: 3
 42553                           ;interrupts.c: 93: {
 42554                           ;interrupts.c: 95: (IOCBbits.IOCB4 = 0);
 42555  005306  987D               	bcf	3965,4,c	;volatile
 42556                           
 42557                           ;interrupts.c: 96: INTCONbits.RBIE = 0;
 42558  005308  96F2               	bcf	intcon,3,c	;volatile
 42559                           
 42560                           ;interrupts.c: 98: INTCONbits.TMR0IF = 1;
 42561  00530A  84F2               	bsf	intcon,2,c	;volatile
 42562                           
 42563                           ;interrupts.c: 99: }
 42564  00530C  D01A               	goto	i2l13978
 42565  00530E                     i2l13966:
 42566                           
 42567                           ; BSR set to: 3
 42568                           ;interrupts.c: 100: else if(Time0 <= 50000 && Time0 >= 45000)
 42569  00530E  0E51               	movlw	81
 42570  005310  5C38               	subwf	high_isr@Time0,w,c
 42571  005312  0EC3               	movlw	195
 42572  005314  5839               	subwfb	high_isr@Time0+1,w,c
 42573  005316  B0D8               	btfsc	status,0,c
 42574  005318  D00E               	goto	i2l13974
 42575                           
 42576                           ; BSR set to: 3
 42577  00531A  0EC8               	movlw	200
 42578  00531C  5C38               	subwf	high_isr@Time0,w,c
 42579  00531E  0EAF               	movlw	175
 42580  005320  5839               	subwfb	high_isr@Time0+1,w,c
 42581  005322  A0D8               	btfss	status,0,c
 42582  005324  D008               	goto	i2l13974
 42583                           
 42584                           ; BSR set to: 3
 42585                           ;interrupts.c: 101: {
 42586                           ;interrupts.c: 103: (IOCBbits.IOCB4 = 0);
 42587  005326  987D               	bcf	3965,4,c	;volatile
 42588                           
 42589                           ;interrupts.c: 104: INTCONbits.RBIE = 0;
 42590  005328  96F2               	bcf	intcon,3,c	;volatile
 42591                           
 42592                           ; BSR set to: 3
 42593                           ;interrupts.c: 106: SetTimer0(0x8FFF);
 42594  00532A  0E8F               	movlw	143
 42595  00532C  6E18               	movwf	SetTimer0@temp+1,c
 42596  00532E  6817               	setf	SetTimer0@temp,c
 42597  005330  EC2F  F055         	call	_SetTimer0	;wreg free
 42598                           
 42599                           ;interrupts.c: 107: }
 42600  005334  D006               	goto	i2l13978
 42601  005336                     i2l13974:
 42602                           
 42603                           ;interrupts.c: 108: else
 42604                           ;interrupts.c: 109: {
 42605                           ;interrupts.c: 110: ResetTimer0();
 42606  005336  EC2A  F055         	call	i2_ResetTimer0	;wreg free
 42607                           
 42608                           ;interrupts.c: 111: }
 42609                           ;interrupts.c: 112: }
 42610  00533A  D003               	goto	i2l13978
 42611  00533C                     i2l13976:
 42612                           
 42613                           ;interrupts.c: 113: else
 42614                           ;interrupts.c: 114: {
 42615                           ;interrupts.c: 115: ResetTimer0();
 42616  00533C  EC2A  F055         	call	i2_ResetTimer0	;wreg free
 42617  005340  D000               	goto	i2l13978
 42618  005342                     i2l13978:
 42619                           
 42620                           ;interrupts.c: 116: }
 42621                           ;interrupts.c: 117: if(IRrawCodeNum <= 100)
 42622  005342  0E65               	movlw	101
 42623  005344  6041               	cpfslt	_IRrawCodeNum,c
 42624  005346  D004               	goto	i2l1374
 42625                           
 42626                           ;interrupts.c: 118: {
 42627                           ;interrupts.c: 119: IRrawCodeNum++;
 42628  005348  2A41               	incf	_IRrawCodeNum,f,c
 42629                           
 42630                           ;interrupts.c: 120: }
 42631                           ;interrupts.c: 121: }
 42632  00534A  D002               	goto	i2l1374
 42633  00534C                     i2l1366:
 42634                           
 42635                           ; BSR set to: 3
 42636                           ;interrupts.c: 122: else
 42637                           ;interrupts.c: 123: {
 42638                           ;interrupts.c: 124: (IOCBbits.IOCB4 = 0);
 42639  00534C  987D               	bcf	3965,4,c	;volatile
 42640                           
 42641                           ;interrupts.c: 125: INTCONbits.RBIE = 0;
 42642  00534E  96F2               	bcf	intcon,3,c	;volatile
 42643  005350                     i2l1374:
 42644                           
 42645                           ;interrupts.c: 126: }
 42646                           ;interrupts.c: 127: IRpinOLD = IRpin;
 42647  005350  C037  F040         	movff	high_isr@IRpin,_IRpinOLD
 42648                           
 42649                           ;interrupts.c: 128: }
 42650  005354  D002               	goto	i2l13982
 42651  005356                     i2l1365:
 42652                           
 42653                           ;interrupts.c: 129: else
 42654                           ;interrupts.c: 130: {
 42655                           ;interrupts.c: 132: __nop();
 42656  005356  F000               	nop	
 42657  005358  D000               	goto	i2l13982
 42658  00535A                     i2l13982:
 42659                           
 42660                           ;interrupts.c: 133: }
 42661                           ;interrupts.c: 135: ReadIRpin();
 42662  00535A  EC14  F055         	call	i2_ReadIRpin	;wreg free
 42663                           
 42664                           ;interrupts.c: 136: INTCONbits.RBIF = 0;
 42665  00535E  90F2               	bcf	intcon,0,c	;volatile
 42666                           
 42667                           ;interrupts.c: 137: }
 42668  005360  D218               	goto	i2l1376
 42669  005362                     i2l1364:
 42670                           
 42671                           ;interrupts.c: 138: else if(INTCONbits.TMR0IF)
 42672  005362  A4F2               	btfss	intcon,2,c	;volatile
 42673  005364  D030               	goto	i2l1377
 42674                           
 42675                           ;interrupts.c: 139: {
 42676                           ;interrupts.c: 141: (INTCONbits.TMR0IE = 0);
 42677  005366  9AF2               	bcf	intcon,5,c	;volatile
 42678                           
 42679                           ;interrupts.c: 142: (T0CONbits.TMR0ON = 0);
 42680  005368  9ED5               	bcf	4053,7,c	;volatile
 42681                           
 42682                           ;interrupts.c: 143: if(IRrawCodeNum >= (4))
 42683  00536A  0E03               	movlw	3
 42684  00536C  6441               	cpfsgt	_IRrawCodeNum,c
 42685  00536E  D00E               	goto	i2l1378
 42686                           
 42687                           ;interrupts.c: 144: {
 42688                           ;interrupts.c: 145: IR_New_Code = IRrawToNEC(IRRawCode, &IR_NEC, 1);
 42689  005370  0E00               	movlw	low _IRRawCode
 42690  005372  6E17               	movwf	IRrawToNEC@Raw,c
 42691  005374  0E06               	movlw	high _IRRawCode
 42692  005376  6E18               	movwf	IRrawToNEC@Raw+1,c
 42693  005378  0EEC               	movlw	low _IR_NEC
 42694  00537A  6E19               	movwf	IRrawToNEC@NEC,c
 42695  00537C  0E03               	movlw	high _IR_NEC
 42696  00537E  6E1A               	movwf	IRrawToNEC@NEC+1,c
 42697  005380  0E01               	movlw	1
 42698  005382  6E1B               	movwf	IRrawToNEC@Invert,c
 42699  005384  ECDB  F032         	call	_IRrawToNEC	;wreg free
 42700  005388  0103               	movlb	3	; () banked
 42701  00538A  6FF0               	movwf	_IR_New_Code& (0+255),b
 42702  00538C                     i2l1378:
 42703                           
 42704                           ;interrupts.c: 146: }
 42705                           ;interrupts.c: 147: cleanBuffer16bit(IRRawCode,100);
 42706  00538C  0E00               	movlw	low _IRRawCode
 42707  00538E  6E17               	movwf	i2cleanBuffer16bit@data,c
 42708  005390  0E06               	movlw	high _IRRawCode
 42709  005392  6E18               	movwf	i2cleanBuffer16bit@data+1,c
 42710  005394  0E00               	movlw	0
 42711  005396  6E1A               	movwf	i2cleanBuffer16bit@count+1,c
 42712  005398  0E64               	movlw	100
 42713  00539A  6E19               	movwf	i2cleanBuffer16bit@count,c
 42714  00539C  EC46  F052         	call	i2_cleanBuffer16bit	;wreg free
 42715                           
 42716                           ;interrupts.c: 148: IRrawCodeNum = 0;
 42717  0053A0  0E00               	movlw	0
 42718  0053A2  6E41               	movwf	_IRrawCodeNum,c
 42719                           
 42720                           ;interrupts.c: 149: if(!IR_New_Code)
 42721  0053A4  0103               	movlb	3	; () banked
 42722  0053A6  51F0               	movf	_IR_New_Code& (0+255),w,b
 42723  0053A8  A4D8               	btfss	status,2,c
 42724  0053AA  D009               	goto	i2l14006
 42725                           
 42726                           ; BSR set to: 3
 42727                           ;interrupts.c: 150: {
 42728                           ;interrupts.c: 151: ReadIRpin();
 42729  0053AC  EC14  F055         	call	i2_ReadIRpin	;wreg free
 42730                           
 42731                           ;interrupts.c: 152: IRpinOLD = ReadIRpin();
 42732  0053B0  EC14  F055         	call	i2_ReadIRpin	;wreg free
 42733  0053B4  6E40               	movwf	_IRpinOLD,c
 42734                           
 42735                           ;interrupts.c: 153: INTCONbits.RBIF = 0;
 42736  0053B6  90F2               	bcf	intcon,0,c	;volatile
 42737                           
 42738                           ;interrupts.c: 154: (IOCBbits.IOCB4 = 1);
 42739  0053B8  887D               	bsf	3965,4,c	;volatile
 42740                           
 42741                           ;interrupts.c: 155: INTCONbits.RBIE = 1;
 42742  0053BA  86F2               	bsf	intcon,3,c	;volatile
 42743  0053BC  D000               	goto	i2l14006
 42744  0053BE                     i2l14006:
 42745                           
 42746                           ;interrupts.c: 156: }
 42747                           ;interrupts.c: 157: ReceivingIR = 13;
 42748  0053BE  0E0D               	movlw	13
 42749  0053C0  6E50               	movwf	_ReceivingIR,c	;volatile
 42750                           
 42751                           ;interrupts.c: 158: INTCONbits.TMR0IF = 0;
 42752  0053C2  94F2               	bcf	intcon,2,c	;volatile
 42753                           
 42754                           ;interrupts.c: 159: }
 42755  0053C4  D1E6               	goto	i2l1376
 42756  0053C6                     i2l1377:
 42757                           
 42758                           ;interrupts.c: 160: else if(PIR1bits.TMR2IF)
 42759  0053C6  A29E               	btfss	3998,1,c	;volatile
 42760  0053C8  D1D1               	goto	i2l1381
 42761                           
 42762                           ;interrupts.c: 161: {
 42763                           ;interrupts.c: 164: Timer2_Postscaler++;
 42764  0053CA  2A4A               	incf	_Timer2_Postscaler,f,c
 42765                           
 42766                           ;interrupts.c: 165: if(RF_IR == 55)
 42767  0053CC  0E37               	movlw	55
 42768  0053CE  184E               	xorwf	_RF_IR,w,c
 42769  0053D0  A4D8               	btfss	status,2,c
 42770  0053D2  D10C               	goto	i2l14244
 42771                           
 42772                           ;interrupts.c: 166: {
 42773                           ;interrupts.c: 168: if(Timer2_Postscaler >= RF_IR_Postscaler)
 42774  0053D4  504F               	movf	_RF_IR_Postscaler,w,c	;volatile
 42775  0053D6  5C4A               	subwf	_Timer2_Postscaler,w,c
 42776  0053D8  A0D8               	btfss	status,0,c
 42777  0053DA  D103               	goto	i2l14240
 42778                           
 42779                           ;interrupts.c: 169: {
 42780                           ;interrupts.c: 170: Timer2_Postscaler = 0;
 42781  0053DC  0E00               	movlw	0
 42782  0053DE  6E4A               	movwf	_Timer2_Postscaler,c
 42783                           
 42784                           ;interrupts.c: 171: if(RFsendCode[RFcodeBit] != 99)
 42785  0053E0  5045               	movf	_RFcodeBit,w,c
 42786  0053E2  0D01               	mullw	1
 42787  0053E4  0E00               	movlw	low _RFsendCode
 42788  0053E6  24F3               	addwf	prodl,w,c
 42789  0053E8  6ED9               	movwf	fsr2l,c
 42790  0053EA  0E04               	movlw	high _RFsendCode
 42791  0053EC  20F4               	addwfc	prodh,w,c
 42792  0053EE  6EDA               	movwf	fsr2h,c
 42793  0053F0  0E63               	movlw	99
 42794  0053F2  18DE               	xorwf	postinc2,w,c
 42795  0053F4  B4D8               	btfsc	status,2,c
 42796  0053F6  D0B3               	goto	i2l14190
 42797                           
 42798                           ;interrupts.c: 172: {
 42799                           ;interrupts.c: 174: if(RFsendFlag)
 42800  0053F8  5047               	movf	_RFsendFlag,w,c	;volatile
 42801  0053FA  B4D8               	btfsc	status,2,c
 42802  0053FC  D0F2               	goto	i2l14240
 42803                           
 42804                           ;interrupts.c: 175: {
 42805                           ;interrupts.c: 176: if(RFsendCode[RFcodeBit] == 0)
 42806  0053FE  5045               	movf	_RFcodeBit,w,c
 42807  005400  0D01               	mullw	1
 42808  005402  0E00               	movlw	low _RFsendCode
 42809  005404  24F3               	addwf	prodl,w,c
 42810  005406  6ED9               	movwf	fsr2l,c
 42811  005408  0E04               	movlw	high _RFsendCode
 42812  00540A  20F4               	addwfc	prodh,w,c
 42813  00540C  6EDA               	movwf	fsr2h,c
 42814  00540E  50DF               	movf	indf2,w,c
 42815  005410  A4D8               	btfss	status,2,c
 42816  005412  D03F               	goto	i2l14082
 42817                           
 42818                           ;interrupts.c: 177: {
 42819                           ;interrupts.c: 179: if(RFConfig == 1)
 42820  005414  0444               	decf	_RFConfig,w,c
 42821  005416  A4D8               	btfss	status,2,c
 42822  005418  D025               	goto	i2l14060
 42823                           
 42824                           ;interrupts.c: 180: {
 42825                           ;interrupts.c: 181: if(RFcodePlace == 1)
 42826  00541A  0446               	decf	_RFcodePlace,w,c
 42827  00541C  A4D8               	btfss	status,2,c
 42828  00541E  D007               	goto	i2l14034
 42829  005420  D077               	goto	i2l14148
 42830  005422                     i2l14030:
 42831                           
 42832                           ;interrupts.c: 184: (PR2 = 8);
 42833  005422  0E08               	movlw	8
 42834  005424                     L26:
 42835  005424  6ECB               	movwf	4043,c	;volatile
 42836  005426  D076               	goto	i2l14152
 42837  005428                     L28:
 42838                           
 42839                           ;interrupts.c: 186: (TMR2 = 0);
 42840  005428  0E00               	movlw	0
 42841  00542A  6ECC               	movwf	4044,c	;volatile
 42842                           
 42843                           ;interrupts.c: 187: }
 42844  00542C  D0DA               	goto	i2l14240
 42845  00542E                     i2l14034:
 42846                           
 42847                           ;interrupts.c: 188: else if(RFcodePlace == 2)
 42848  00542E  0E02               	movlw	2
 42849  005430  1846               	xorwf	_RFcodePlace,w,c
 42850  005432  A4D8               	btfss	status,2,c
 42851  005434  D004               	goto	i2l14042
 42852  005436  D074               	goto	L42
 42853                           
 42854                           ;interrupts.c: 189: {
 42855                           ;interrupts.c: 190: (LATC &= ~0x20);
 42856  005438  D03E               	goto	i2l14090
 42857  00543A                     i2l14040:
 42858                           
 42859                           ;interrupts.c: 192: RFcodePlace++;
 42860  00543A  2A46               	incf	_RFcodePlace,f,c
 42861                           
 42862                           ;interrupts.c: 193: }
 42863  00543C  D0D2               	goto	i2l14240
 42864  00543E                     i2l14042:
 42865                           
 42866                           ;interrupts.c: 194: else if(RFcodePlace == 3)
 42867  00543E  0E03               	movlw	3
 42868  005440  1846               	xorwf	_RFcodePlace,w,c
 42869  005442  A4D8               	btfss	status,2,c
 42870  005444  D002               	goto	i2l14050
 42871  005446  D064               	goto	i2l14148
 42872                           
 42873                           ;interrupts.c: 195: {
 42874                           ;interrupts.c: 196: (LATC |= 0x20);
 42875  005448  D7EC               	goto	i2l14030
 42876  00544A                     i2l14050:
 42877                           
 42878                           ;interrupts.c: 201: else if(RFcodePlace == 4)
 42879  00544A  0E04               	movlw	4
 42880  00544C  1846               	xorwf	_RFcodePlace,w,c
 42881  00544E  A4D8               	btfss	status,2,c
 42882  005450  D004               	goto	i2l1394
 42883                           
 42884                           ;interrupts.c: 202: {
 42885                           ;interrupts.c: 203: (LATC &= ~0x20);
 42886  005452  9A8B               	bcf	3979,5,c	;volatile
 42887                           
 42888                           ;interrupts.c: 204: (PR2 = 24);
 42889  005454  0E18               	movlw	24
 42890  005456  D051               	goto	L27
 42891  005458  D016               	goto	i2l14076
 42892  00545A                     i2l1394:
 42893                           
 42894                           ;interrupts.c: 208: else
 42895                           ;interrupts.c: 209: {
 42896                           ;interrupts.c: 211: (T2CONbits.TMR2ON = 0);
 42897  00545A  94CA               	bcf	4042,2,c	;volatile
 42898  00545C  D07B               	goto	i2l14188
 42899  00545E                     L31:
 42900                           
 42901                           ;interrupts.c: 213: RFsendFlag = 0;
 42902  00545E  0E00               	movlw	0
 42903  005460  6E47               	movwf	_RFsendFlag,c	;volatile
 42904                           
 42905                           ; BSR set to: 0
 42906                           ;interrupts.c: 214: }
 42907                           ;interrupts.c: 215: }
 42908                           
 42909                           ; BSR set to: 0
 42910                           
 42911                           ; BSR set to: 0
 42912                           
 42913                           ; BSR set to: 0
 42914  005462  D0BF               	goto	i2l14240
 42915  005464                     i2l14060:
 42916                           
 42917                           ;interrupts.c: 216: else if(RFConfig == 2)
 42918  005464  0E02               	movlw	2
 42919  005466  1844               	xorwf	_RFConfig,w,c
 42920  005468  A4D8               	btfss	status,2,c
 42921  00546A  D7F7               	goto	i2l1394
 42922                           
 42923                           ;interrupts.c: 217: {
 42924                           ;interrupts.c: 219: if(RFcodePlace == 1)
 42925  00546C  0446               	decf	_RFcodePlace,w,c
 42926  00546E  A4D8               	btfss	status,2,c
 42927  005470  D003               	goto	i2l14070
 42928                           
 42929                           ;interrupts.c: 220: {
 42930                           ;interrupts.c: 221: (LATC |= 0x20);
 42931  005472  8A8B               	bsf	3979,5,c	;volatile
 42932                           
 42933                           ;interrupts.c: 222: (PR2 = 11);
 42934  005474  0E0B               	movlw	11
 42935  005476  D7D6               	goto	L26
 42936  005478                     i2l14070:
 42937                           
 42938                           ;interrupts.c: 226: else if(RFcodePlace == 2)
 42939  005478  0E02               	movlw	2
 42940  00547A  1846               	xorwf	_RFcodePlace,w,c
 42941  00547C  A4D8               	btfss	status,2,c
 42942  00547E  D7ED               	goto	i2l1394
 42943                           
 42944                           ;interrupts.c: 227: {
 42945                           ;interrupts.c: 228: (LATC &= ~0x20);
 42946  005480  9A8B               	bcf	3979,5,c	;volatile
 42947                           
 42948                           ;interrupts.c: 229: (PR2 = 29);
 42949  005482  0E1D               	movlw	29
 42950  005484  D03A               	goto	L27
 42951  005486                     i2l14076:
 42952                           
 42953                           ;interrupts.c: 230: RFcodePlace = 1;
 42954  005486  0E01               	movlw	1
 42955  005488  6E46               	movwf	_RFcodePlace,c
 42956                           
 42957                           ;interrupts.c: 231: RFcodeBit++;
 42958  00548A  2A45               	incf	_RFcodeBit,f,c
 42959                           
 42960                           ; BSR set to: 0
 42961                           ;interrupts.c: 239: }
 42962                           ;interrupts.c: 240: }
 42963                           
 42964                           ; BSR set to: 0
 42965                           
 42966                           ;interrupts.c: 238: RFsendFlag = 0;
 42967                           
 42968                           ;interrupts.c: 237: Sent = 1;
 42969                           
 42970                           ;interrupts.c: 233: else
 42971                           ;interrupts.c: 234: {
 42972                           ;interrupts.c: 236: (T2CONbits.TMR2ON = 0);
 42973                           
 42974                           ;interrupts.c: 232: }
 42975  00548C  D0AA               	goto	i2l14240
 42976                           
 42977                           ;interrupts.c: 241: else
 42978                           ;interrupts.c: 242: {
 42979                           ;interrupts.c: 244: (T2CONbits.TMR2ON = 0);
 42980  00548E  D062               	goto	i2l14188
 42981                           
 42982                           ; BSR set to: 0
 42983                           ;interrupts.c: 247: }
 42984                           ;interrupts.c: 248: }
 42985                           
 42986                           ; BSR set to: 0
 42987                           
 42988                           ;interrupts.c: 246: RFsendFlag = 0;
 42989                           
 42990                           ;interrupts.c: 245: Sent = 1;
 42991  005490  D0A8               	goto	i2l14240
 42992  005492                     i2l14082:
 42993                           
 42994                           ;interrupts.c: 249: else if(RFsendCode[RFcodeBit] == 1)
 42995  005492  5045               	movf	_RFcodeBit,w,c
 42996  005494  0D01               	mullw	1
 42997  005496  0E00               	movlw	low _RFsendCode
 42998  005498  24F3               	addwf	prodl,w,c
 42999  00549A  6ED9               	movwf	fsr2l,c
 43000  00549C  0E04               	movlw	high _RFsendCode
 43001  00549E  20F4               	addwfc	prodh,w,c
 43002  0054A0  6EDA               	movwf	fsr2h,c
 43003  0054A2  04DE               	decf	postinc2,w,c
 43004  0054A4  A4D8               	btfss	status,2,c
 43005  0054A6  D02E               	goto	i2l14144
 43006                           
 43007                           ;interrupts.c: 250: {
 43008                           ;interrupts.c: 251: if(RFConfig == 1)
 43009  0054A8  0444               	decf	_RFConfig,w,c
 43010  0054AA  A4D8               	btfss	status,2,c
 43011  0054AC  D016               	goto	i2l14122
 43012                           
 43013                           ;interrupts.c: 252: {
 43014                           ;interrupts.c: 253: if(RFcodePlace == 1)
 43015  0054AE  0446               	decf	_RFcodePlace,w,c
 43016  0054B0  A4D8               	btfss	status,2,c
 43017  0054B2  D004               	goto	i2l14094
 43018  0054B4  D03C               	goto	L43
 43019  0054B6                     i2l14090:
 43020                           
 43021                           ;interrupts.c: 256: (PR2 = 24);
 43022  0054B6  0E18               	movlw	24
 43023  0054B8  6ECB               	movwf	4043,c	;volatile
 43024  0054BA  D7BF               	goto	i2l14040
 43025  0054BC                     i2l14094:
 43026                           
 43027                           ;interrupts.c: 259: else if(RFcodePlace == 2)
 43028  0054BC  0E02               	movlw	2
 43029  0054BE  1846               	xorwf	_RFcodePlace,w,c
 43030  0054C0  A4D8               	btfss	status,2,c
 43031  0054C2  D031               	goto	i2l14162
 43032                           
 43033                           ;interrupts.c: 260: {
 43034                           ;interrupts.c: 261: (LATC &= ~0x20);
 43035  0054C4  9A8B               	bcf	3979,5,c	;volatile
 43036  0054C6  D7AD               	goto	i2l14030
 43037                           
 43038                           ;interrupts.c: 265: }
 43039                           
 43040                           ;interrupts.c: 264: (TMR2 = 0);
 43041                           
 43042                           ;interrupts.c: 263: RFcodePlace++;
 43043                           
 43044                           ;interrupts.c: 262: (PR2 = 8);
 43045  0054C8  D02E               	goto	i2l14162
 43046                           
 43047                           ;interrupts.c: 267: {
 43048                           ;interrupts.c: 268: (LATC |= 0x20);
 43049                           
 43050                           ;interrupts.c: 266: else if(RFcodePlace == 3)
 43051  0054CA  D7F5               	goto	i2l14090
 43052                           
 43053                           ;interrupts.c: 269: (PR2 = 24);
 43054  0054CC  D7B6               	goto	i2l14040
 43055                           
 43056                           ;interrupts.c: 271: }
 43057                           
 43058                           ;interrupts.c: 270: RFcodePlace++;
 43059  0054CE  D032               	goto	i2l14170
 43060  0054D0                     i2l14114:
 43061                           
 43062                           ;interrupts.c: 275: (PR2 = 8);
 43063  0054D0  0E08               	movlw	8
 43064  0054D2  6ECB               	movwf	4043,c	;volatile
 43065  0054D4  D035               	goto	i2l14176
 43066                           
 43067                           ;interrupts.c: 277: RFcodeBit++;
 43068                           
 43069                           ;interrupts.c: 276: RFcodePlace = 1;
 43070  0054D6  D7A8               	goto	L28
 43071                           
 43072                           ; BSR set to: 0
 43073                           ;interrupts.c: 286: }
 43074                           ;interrupts.c: 287: }
 43075                           
 43076                           ; BSR set to: 0
 43077                           
 43078                           ; BSR set to: 0
 43079                           
 43080                           ; BSR set to: 0
 43081                           
 43082                           ;interrupts.c: 285: RFsendFlag = 0;
 43083                           
 43084                           ;interrupts.c: 284: Sent = 1;
 43085                           
 43086                           ;interrupts.c: 280: else
 43087                           ;interrupts.c: 281: {
 43088                           ;interrupts.c: 283: (T2CONbits.TMR2ON = 0);
 43089                           
 43090                           ;interrupts.c: 279: }
 43091                           
 43092                           ;interrupts.c: 278: (TMR2 = 0);
 43093  0054D8  D084               	goto	i2l14240
 43094  0054DA                     i2l14122:
 43095                           
 43096                           ;interrupts.c: 288: else if(RFConfig == 2)
 43097  0054DA  0E02               	movlw	2
 43098  0054DC  1844               	xorwf	_RFConfig,w,c
 43099  0054DE  A4D8               	btfss	status,2,c
 43100  0054E0  D7BC               	goto	i2l1394
 43101                           
 43102                           ;interrupts.c: 289: {
 43103                           ;interrupts.c: 291: if(RFcodePlace == 1)
 43104  0054E2  0446               	decf	_RFcodePlace,w,c
 43105  0054E4  A4D8               	btfss	status,2,c
 43106  0054E6  D003               	goto	i2l14132
 43107                           
 43108                           ;interrupts.c: 292: {
 43109                           ;interrupts.c: 293: (LATC |= 0x20);
 43110  0054E8  8A8B               	bsf	3979,5,c	;volatile
 43111                           
 43112                           ;interrupts.c: 294: (PR2 = 29);
 43113  0054EA  0E1D               	movlw	29
 43114  0054EC  D79B               	goto	L26
 43115  0054EE                     i2l14132:
 43116                           
 43117                           ;interrupts.c: 298: else if(RFcodePlace == 2)
 43118  0054EE  0E02               	movlw	2
 43119  0054F0  1846               	xorwf	_RFcodePlace,w,c
 43120  0054F2  A4D8               	btfss	status,2,c
 43121  0054F4  D004               	goto	i2l1418
 43122                           
 43123                           ;interrupts.c: 299: {
 43124                           ;interrupts.c: 300: (LATC &= ~0x20);
 43125  0054F6  9A8B               	bcf	3979,5,c	;volatile
 43126                           
 43127                           ;interrupts.c: 301: (PR2 = 11);
 43128  0054F8  0E0B               	movlw	11
 43129  0054FA                     L27:
 43130  0054FA  6ECB               	movwf	4043,c	;volatile
 43131  0054FC  D7C4               	goto	i2l14076
 43132  0054FE                     i2l1418:
 43133                           
 43134                           ;interrupts.c: 305: else
 43135                           ;interrupts.c: 306: {
 43136                           ;interrupts.c: 308: (T2CONbits.TMR2ON = 0);
 43137  0054FE  94CA               	bcf	4042,2,c	;volatile
 43138  005500  D029               	goto	i2l14188
 43139                           
 43140                           ; BSR set to: 0
 43141                           ;interrupts.c: 319: }
 43142                           ;interrupts.c: 320: }
 43143                           
 43144                           ; BSR set to: 0
 43145                           
 43146                           ;interrupts.c: 318: RFsendFlag = 0;
 43147                           
 43148                           ;interrupts.c: 317: Sent = 1;
 43149                           
 43150                           ;interrupts.c: 313: else
 43151                           ;interrupts.c: 314: {
 43152                           ;interrupts.c: 316: (T2CONbits.TMR2ON = 0);
 43153                           
 43154                           ; BSR set to: 0
 43155                           ;interrupts.c: 311: }
 43156                           ;interrupts.c: 312: }
 43157                           
 43158                           ; BSR set to: 0
 43159                           
 43160                           ;interrupts.c: 310: RFsendFlag = 0;
 43161                           
 43162                           ;interrupts.c: 309: Sent = 1;
 43163  005502  D06F               	goto	i2l14240
 43164  005504                     i2l14144:
 43165                           
 43166                           ;interrupts.c: 321: else
 43167                           ;interrupts.c: 322: {
 43168                           ;interrupts.c: 323: if(RFConfig == 1)
 43169  005504  0444               	decf	_RFConfig,w,c
 43170  005506  A4D8               	btfss	status,2,c
 43171  005508  D020               	goto	i2l14182
 43172                           
 43173                           ;interrupts.c: 324: {
 43174                           ;interrupts.c: 326: if(RFcodePlace == 1)
 43175  00550A  0446               	decf	_RFcodePlace,w,c
 43176  00550C  A4D8               	btfss	status,2,c
 43177  00550E  D004               	goto	i2l14154
 43178  005510                     i2l14148:
 43179                           
 43180                           ;interrupts.c: 327: {
 43181                           ;interrupts.c: 328: (LATC |= 0x20);
 43182  005510  8A8B               	bsf	3979,5,c	;volatile
 43183  005512  D787               	goto	i2l14030
 43184  005514                     i2l14152:
 43185                           
 43186                           ;interrupts.c: 330: RFcodePlace++;
 43187  005514  2A46               	incf	_RFcodePlace,f,c
 43188  005516  D788               	goto	L28
 43189  005518                     i2l14154:
 43190                           
 43191                           ;interrupts.c: 333: else if(RFcodePlace == 2)
 43192  005518  0E02               	movlw	2
 43193  00551A  1846               	xorwf	_RFcodePlace,w,c
 43194  00551C  A4D8               	btfss	status,2,c
 43195  00551E  D003               	goto	i2l14162
 43196  005520                     L42:
 43197                           
 43198                           ;interrupts.c: 334: {
 43199                           ;interrupts.c: 335: (LATC &= ~0x20);
 43200  005520  9A8B               	bcf	3979,5,c	;volatile
 43201  005522  D7C9               	goto	i2l14090
 43202                           
 43203                           ;interrupts.c: 336: (PR2 = 24);
 43204  005524  D78A               	goto	i2l14040
 43205  005526                     i2l14162:
 43206                           
 43207                           ;interrupts.c: 339: else if(RFcodePlace == 3)
 43208  005526  0E03               	movlw	3
 43209  005528  1846               	xorwf	_RFcodePlace,w,c
 43210  00552A  A4D8               	btfss	status,2,c
 43211  00552C  D003               	goto	i2l14170
 43212  00552E                     L43:
 43213                           
 43214                           ;interrupts.c: 340: {
 43215                           ;interrupts.c: 341: (LATC |= 0x20);
 43216  00552E  8A8B               	bsf	3979,5,c	;volatile
 43217  005530  D7C2               	goto	i2l14090
 43218                           
 43219                           ;interrupts.c: 342: (PR2 = 24);
 43220  005532  D783               	goto	i2l14040
 43221  005534                     i2l14170:
 43222                           
 43223                           ;interrupts.c: 345: else if(RFcodePlace == 4)
 43224  005534  0E04               	movlw	4
 43225  005536  1846               	xorwf	_RFcodePlace,w,c
 43226  005538  A4D8               	btfss	status,2,c
 43227  00553A  D78F               	goto	i2l1394
 43228                           
 43229                           ;interrupts.c: 346: {
 43230                           ;interrupts.c: 347: (LATC &= ~0x20);
 43231  00553C  9A8B               	bcf	3979,5,c	;volatile
 43232  00553E  D7C8               	goto	i2l14114
 43233  005540                     i2l14176:
 43234                           
 43235                           ;interrupts.c: 349: RFcodePlace = 1;
 43236  005540  0E01               	movlw	1
 43237  005542  6E46               	movwf	_RFcodePlace,c
 43238                           
 43239                           ;interrupts.c: 350: RFcodeBit++;
 43240  005544  2A45               	incf	_RFcodeBit,f,c
 43241  005546  D770               	goto	L28
 43242                           
 43243                           ; BSR set to: 0
 43244                           ;interrupts.c: 359: }
 43245                           ;interrupts.c: 360: }
 43246                           
 43247                           ; BSR set to: 0
 43248                           
 43249                           ; BSR set to: 0
 43250                           
 43251                           ; BSR set to: 0
 43252                           
 43253                           ;interrupts.c: 358: RFsendFlag = 0;
 43254                           
 43255                           ;interrupts.c: 357: Sent = 1;
 43256                           
 43257                           ;interrupts.c: 353: else
 43258                           ;interrupts.c: 354: {
 43259                           ;interrupts.c: 356: (T2CONbits.TMR2ON = 0);
 43260                           
 43261                           ;interrupts.c: 352: }
 43262                           
 43263                           ;interrupts.c: 351: (TMR2 = 0);
 43264  005548  D04C               	goto	i2l14240
 43265  00554A                     i2l14182:
 43266                           
 43267                           ;interrupts.c: 361: else if(RFConfig == 2)
 43268  00554A  0E02               	movlw	2
 43269  00554C  1844               	xorwf	_RFConfig,w,c
 43270  00554E  A4D8               	btfss	status,2,c
 43271  005550  D784               	goto	i2l1394
 43272  005552  D783               	goto	i2l1394
 43273  005554                     i2l14188:
 43274                           
 43275                           ;interrupts.c: 372: Sent = 1;
 43276  005554  0E01               	movlw	1
 43277  005556  0100               	movlb	0	; () banked
 43278  005558  6FFF               	movwf	_Sent& (0+255),b	;volatile
 43279  00555A  D781               	goto	L31
 43280                           
 43281                           ; BSR set to: 0
 43282                           ;interrupts.c: 374: }
 43283                           ;interrupts.c: 375: }
 43284                           ;interrupts.c: 376: }
 43285                           ;interrupts.c: 377: }
 43286                           
 43287                           ; BSR set to: 0
 43288                           
 43289                           ; BSR set to: 0
 43290                           
 43291                           ; BSR set to: 0
 43292                           
 43293                           ; BSR set to: 0
 43294                           
 43295                           ;interrupts.c: 373: RFsendFlag = 0;
 43296  00555C  D042               	goto	i2l14240
 43297  00555E                     i2l14190:
 43298                           
 43299                           ;interrupts.c: 378: else
 43300                           ;interrupts.c: 379: {
 43301                           ;interrupts.c: 381: if(RFcodePlace == 1)
 43302  00555E  0446               	decf	_RFcodePlace,w,c
 43303  005560  A4D8               	btfss	status,2,c
 43304  005562  D016               	goto	i2l14208
 43305                           
 43306                           ;interrupts.c: 382: {
 43307                           ;interrupts.c: 383: if(RFConfig == 1)
 43308  005564  0444               	decf	_RFConfig,w,c
 43309  005566  A4D8               	btfss	status,2,c
 43310  005568  D003               	goto	i2l14198
 43311                           
 43312                           ;interrupts.c: 384: {
 43313                           ;interrupts.c: 385: (LATC |= 0x20);
 43314  00556A  8A8B               	bsf	3979,5,c	;volatile
 43315                           
 43316                           ;interrupts.c: 386: (PR2 = 8);
 43317  00556C  0E08               	movlw	8
 43318  00556E  D006               	goto	L29
 43319  005570                     i2l14198:
 43320                           
 43321                           ;interrupts.c: 388: else if(RFConfig == 2)
 43322  005570  0E02               	movlw	2
 43323  005572  1844               	xorwf	_RFConfig,w,c
 43324  005574  A4D8               	btfss	status,2,c
 43325  005576  D004               	goto	i2l1438
 43326                           
 43327                           ;interrupts.c: 389: {
 43328                           ;interrupts.c: 390: (LATC &= ~0x20);
 43329  005578  9A8B               	bcf	3979,5,c	;volatile
 43330                           
 43331                           ;interrupts.c: 391: (PR2 = 11);
 43332  00557A  0E0B               	movlw	11
 43333  00557C                     L29:
 43334  00557C  6ECB               	movwf	4043,c	;volatile
 43335                           
 43336                           ;interrupts.c: 392: }
 43337  00557E  D005               	goto	i2l1437
 43338  005580                     i2l1438:
 43339                           
 43340                           ;interrupts.c: 393: else
 43341                           ;interrupts.c: 394: {
 43342                           ;interrupts.c: 396: (T2CONbits.TMR2ON = 0);
 43343  005580  94CA               	bcf	4042,2,c	;volatile
 43344                           
 43345                           ;interrupts.c: 397: Sent = 1;
 43346  005582  0E01               	movlw	1
 43347  005584  0100               	movlb	0	; () banked
 43348  005586  6FFF               	movwf	_Sent& (0+255),b	;volatile
 43349  005588  D000               	goto	i2l1437
 43350  00558A                     i2l1437:
 43351                           
 43352                           ;interrupts.c: 398: }
 43353                           ;interrupts.c: 399: (TMR2 = 0);
 43354  00558A  0E00               	movlw	0
 43355  00558C  6ECC               	movwf	4044,c	;volatile
 43356  00558E  D755               	goto	i2l14040
 43357  005590                     i2l14208:
 43358                           
 43359                           ;interrupts.c: 402: else if( RFcodePlace == 2)
 43360  005590  0E02               	movlw	2
 43361  005592  1846               	xorwf	_RFcodePlace,w,c
 43362  005594  A4D8               	btfss	status,2,c
 43363  005596  D01C               	goto	i2l14228
 43364                           
 43365                           ;interrupts.c: 403: {
 43366                           ;interrupts.c: 404: if(RFConfig == 1)
 43367  005598  0444               	decf	_RFConfig,w,c
 43368  00559A  A4D8               	btfss	status,2,c
 43369  00559C  D003               	goto	i2l14216
 43370                           
 43371                           ;interrupts.c: 405: {
 43372                           ;interrupts.c: 406: (LATC &= ~0x20);
 43373  00559E  9A8B               	bcf	3979,5,c	;volatile
 43374                           
 43375                           ;interrupts.c: 407: (PR2 = 250);
 43376  0055A0  0EFA               	movlw	250
 43377  0055A2  D005               	goto	L30
 43378  0055A4                     i2l14216:
 43379                           
 43380                           ;interrupts.c: 409: else if(RFConfig == 2)
 43381  0055A4  0E02               	movlw	2
 43382  0055A6  1844               	xorwf	_RFConfig,w,c
 43383  0055A8  A4D8               	btfss	status,2,c
 43384  0055AA  D003               	goto	i2l1444
 43385                           
 43386                           ;interrupts.c: 410: {
 43387                           ;interrupts.c: 411: (PR2 = 149);
 43388  0055AC  0E95               	movlw	149
 43389  0055AE                     L30:
 43390  0055AE  6ECB               	movwf	4043,c	;volatile
 43391                           
 43392                           ;interrupts.c: 412: }
 43393  0055B0  D005               	goto	i2l14222
 43394  0055B2                     i2l1444:
 43395                           
 43396                           ;interrupts.c: 413: else
 43397                           ;interrupts.c: 414: {
 43398                           ;interrupts.c: 416: (T2CONbits.TMR2ON = 0);
 43399  0055B2  94CA               	bcf	4042,2,c	;volatile
 43400                           
 43401                           ;interrupts.c: 417: Sent = 1;
 43402  0055B4  0E01               	movlw	1
 43403  0055B6  0100               	movlb	0	; () banked
 43404  0055B8  6FFF               	movwf	_Sent& (0+255),b	;volatile
 43405                           
 43406                           ; BSR set to: 0
 43407  0055BA  D000               	goto	i2l14222
 43408  0055BC                     i2l14222:
 43409                           
 43410                           ;interrupts.c: 418: }
 43411                           ;interrupts.c: 419: RFcodePlace++;
 43412  0055BC  2A46               	incf	_RFcodePlace,f,c
 43413                           
 43414                           ;interrupts.c: 420: Sendcount--;
 43415  0055BE  0648               	decf	_Sendcount,f,c	;volatile
 43416                           
 43417                           ;interrupts.c: 421: if(Sendcount)
 43418  0055C0  5048               	movf	_Sendcount,w,c	;volatile
 43419  0055C2  B4D8               	btfsc	status,2,c
 43420  0055C4  D00E               	goto	i2l14240
 43421                           
 43422                           ;interrupts.c: 422: {
 43423                           ;interrupts.c: 424: RFcodePlace = 1;
 43424  0055C6  0E01               	movlw	1
 43425  0055C8  6E46               	movwf	_RFcodePlace,c
 43426                           
 43427                           ;interrupts.c: 425: RFcodeBit = 0;
 43428  0055CA  0E00               	movlw	0
 43429  0055CC  6E45               	movwf	_RFcodeBit,c
 43430                           
 43431                           ;interrupts.c: 426: }
 43432                           ;interrupts.c: 427: }
 43433  0055CE  D009               	goto	i2l14240
 43434  0055D0                     i2l14228:
 43435                           
 43436                           ;interrupts.c: 428: else
 43437                           ;interrupts.c: 429: {
 43438                           ;interrupts.c: 431: ResetTimer3();
 43439  0055D0  EC34  F055         	call	_ResetTimer3	;wreg free
 43440                           
 43441                           ;interrupts.c: 432: PIR2bits.TMR3IF = 0;
 43442  0055D4  92A1               	bcf	4001,1,c	;volatile
 43443                           
 43444                           ;interrupts.c: 433: Timer3_Postscaler = 0;
 43445  0055D6  0E00               	movlw	0
 43446  0055D8  6E4B               	movwf	_Timer3_Postscaler,c
 43447                           
 43448                           ;interrupts.c: 434: (T3CONbits.TMR3ON = 1);
 43449  0055DA  80B1               	bsf	4017,0,c	;volatile
 43450                           
 43451                           ;interrupts.c: 435: (T2CONbits.TMR2ON = 0);
 43452  0055DC  94CA               	bcf	4042,2,c	;volatile
 43453  0055DE  D73F               	goto	L31
 43454                           
 43455                           ;interrupts.c: 436: RFsendFlag = 0;
 43456  0055E0  D000               	goto	i2l14240
 43457  0055E2                     i2l14240:
 43458                           
 43459                           ;interrupts.c: 437: }
 43460                           ;interrupts.c: 438: }
 43461                           ;interrupts.c: 439: }
 43462                           ;interrupts.c: 440: if(RFsendFlag)
 43463  0055E2  5047               	movf	_RFsendFlag,w,c	;volatile
 43464  0055E4  B4D8               	btfsc	status,2,c
 43465  0055E6  D0C0               	goto	i2l14368
 43466                           
 43467                           ;interrupts.c: 441: {
 43468                           ;interrupts.c: 443: (T2CONbits.TMR2ON = 1);
 43469  0055E8  84CA               	bsf	4042,2,c	;volatile
 43470                           
 43471                           ;interrupts.c: 444: }
 43472                           ;interrupts.c: 445: }
 43473  0055EA  D0BE               	goto	i2l14368
 43474  0055EC                     i2l14244:
 43475                           
 43476                           ;interrupts.c: 446: else
 43477                           ;interrupts.c: 447: {
 43478                           ;interrupts.c: 449: if(Timer2_Postscaler >= RF_IR_Postscaler)
 43479  0055EC  504F               	movf	_RF_IR_Postscaler,w,c	;volatile
 43480  0055EE  5C4A               	subwf	_Timer2_Postscaler,w,c
 43481  0055F0  A0D8               	btfss	status,0,c
 43482  0055F2  D0BA               	goto	i2l14368
 43483                           
 43484                           ;interrupts.c: 450: {
 43485                           ;interrupts.c: 451: Timer2_Postscaler = 0;
 43486  0055F4  0E00               	movlw	0
 43487  0055F6  6E4A               	movwf	_Timer2_Postscaler,c
 43488                           
 43489                           ;interrupts.c: 452: if(IRcodePlace == 7)
 43490  0055F8  0E07               	movlw	7
 43491  0055FA  184D               	xorwf	_IRcodePlace,w,c
 43492  0055FC  A4D8               	btfss	status,2,c
 43493  0055FE  D00D               	goto	i2l14260
 43494                           
 43495                           ;interrupts.c: 453: {
 43496                           ;interrupts.c: 454: IRbitPosition = 32;
 43497  005600  0E20               	movlw	32
 43498  005602  6E4C               	movwf	_IRbitPosition,c	;volatile
 43499                           
 43500                           ;interrupts.c: 455: (IRmod = 0);
 43501  005604  0E00               	movlw	0
 43502  005606  0100               	movlb	0	; () banked
 43503  005608  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 43504                           
 43505                           ; BSR set to: 0
 43506                           ;interrupts.c: 456: (LATC &= ~0x08);
 43507  00560A  968B               	bcf	3979,3,c	;volatile
 43508                           
 43509                           ; BSR set to: 0
 43510                           ;interrupts.c: 457: IRcodePlace = 8;
 43511  00560C  0E08               	movlw	8
 43512  00560E  6E4D               	movwf	_IRcodePlace,c
 43513                           
 43514                           ; BSR set to: 0
 43515                           ;interrupts.c: 458: RF_IR_Postscaler = 4;
 43516  005610  0E04               	movlw	4
 43517  005612  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 43518                           
 43519                           ; BSR set to: 0
 43520                           ;interrupts.c: 459: (PR2 = 75);
 43521  005614  0E4B               	movlw	75
 43522  005616  6ECB               	movwf	4043,c	;volatile
 43523                           
 43524                           ;interrupts.c: 460: }
 43525  005618  D0A7               	goto	i2l14368
 43526  00561A                     i2l14260:
 43527                           
 43528                           ;interrupts.c: 461: else if(IRcodePlace == 8 || IRcodePlace == 10)
 43529  00561A  0E08               	movlw	8
 43530  00561C  184D               	xorwf	_IRcodePlace,w,c
 43531  00561E  B4D8               	btfsc	status,2,c
 43532  005620  D004               	goto	i2l14264
 43533  005622  0E0A               	movlw	10
 43534  005624  184D               	xorwf	_IRcodePlace,w,c
 43535  005626  A4D8               	btfss	status,2,c
 43536  005628  D011               	goto	i2l14274
 43537  00562A                     i2l14264:
 43538                           
 43539                           ;interrupts.c: 462: {
 43540                           ;interrupts.c: 463: (IRmod = 1);
 43541  00562A  0E01               	movlw	1
 43542  00562C  0100               	movlb	0	; () banked
 43543  00562E  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 43544                           
 43545                           ;interrupts.c: 464: RF_IR_Postscaler = 1;
 43546  005630  0E01               	movlw	1
 43547  005632  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 43548                           
 43549                           ; BSR set to: 0
 43550                           ;interrupts.c: 465: IRbit = (unsigned char) (IRsendCode & 0x01);
 43551  005634  503A               	movf	_IRsendCode,w,c
 43552  005636  0B01               	andlw	1
 43553  005638  6E3F               	movwf	_IRbit,c
 43554                           
 43555                           ; BSR set to: 0
 43556                           ;interrupts.c: 466: IRsendCode >>= 1;
 43557  00563A  90D8               	bcf	status,0,c
 43558  00563C  323D               	rrcf	_IRsendCode+3,f,c
 43559  00563E  323C               	rrcf	_IRsendCode+2,f,c
 43560  005640  323B               	rrcf	_IRsendCode+1,f,c
 43561  005642  323A               	rrcf	_IRsendCode,f,c
 43562                           
 43563                           ; BSR set to: 0
 43564                           ;interrupts.c: 467: (PR2 = 38);
 43565  005644  0E26               	movlw	38
 43566  005646  6ECB               	movwf	4043,c	;volatile
 43567                           
 43568                           ; BSR set to: 0
 43569                           ;interrupts.c: 468: IRcodePlace = 9;
 43570  005648  0E09               	movlw	9
 43571  00564A  D07A               	goto	L41
 43572  00564C                     i2l14274:
 43573                           
 43574                           ;interrupts.c: 470: else if(IRcodePlace == 9)
 43575  00564C  0E09               	movlw	9
 43576  00564E  184D               	xorwf	_IRcodePlace,w,c
 43577  005650  A4D8               	btfss	status,2,c
 43578  005652  D017               	goto	i2l14296
 43579                           
 43580                           ;interrupts.c: 471: {
 43581                           ;interrupts.c: 472: (IRmod = 0);
 43582  005654  0E00               	movlw	0
 43583  005656  0100               	movlb	0	; () banked
 43584  005658  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 43585                           
 43586                           ; BSR set to: 0
 43587                           ;interrupts.c: 473: (LATC &= ~0x08);
 43588  00565A  968B               	bcf	3979,3,c	;volatile
 43589                           
 43590                           ; BSR set to: 0
 43591                           ;interrupts.c: 474: RF_IR_Postscaler = 1;
 43592  00565C  0E01               	movlw	1
 43593  00565E  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 43594                           
 43595                           ; BSR set to: 0
 43596                           ;interrupts.c: 475: if(IRbit)
 43597  005660  503F               	movf	_IRbit,w,c
 43598  005662  B4D8               	btfsc	status,2,c
 43599  005664  D002               	goto	i2l14286
 43600                           
 43601                           ; BSR set to: 0
 43602                           ;interrupts.c: 476: {
 43603                           ;interrupts.c: 478: (PR2 = 113);
 43604  005666  0E71               	movlw	113
 43605  005668  D001               	goto	L33
 43606  00566A                     i2l14286:
 43607                           
 43608                           ; BSR set to: 0
 43609                           ;interrupts.c: 480: else
 43610                           ;interrupts.c: 481: {
 43611                           ;interrupts.c: 483: (PR2 = 38);
 43612  00566A  0E26               	movlw	38
 43613  00566C                     L33:
 43614  00566C  6ECB               	movwf	4043,c	;volatile
 43615  00566E  D000               	goto	i2l14288
 43616  005670                     i2l14288:
 43617                           
 43618                           ; BSR set to: 0
 43619                           ;interrupts.c: 484: }
 43620                           ;interrupts.c: 485: IRbitPosition--;
 43621  005670  064C               	decf	_IRbitPosition,f,c	;volatile
 43622                           
 43623                           ; BSR set to: 0
 43624                           ;interrupts.c: 486: if(IRbitPosition == 0)
 43625  005672  504C               	movf	_IRbitPosition,w,c	;volatile
 43626  005674  A4D8               	btfss	status,2,c
 43627  005676  D002               	goto	i2l14294
 43628                           
 43629                           ; BSR set to: 0
 43630                           ;interrupts.c: 487: {
 43631                           ;interrupts.c: 488: IRcodePlace = 11;
 43632  005678  0E0B               	movlw	11
 43633  00567A  D062               	goto	L41
 43634  00567C                     i2l14294:
 43635                           
 43636                           ; BSR set to: 0
 43637                           ;interrupts.c: 490: else
 43638                           ;interrupts.c: 491: {
 43639                           ;interrupts.c: 492: IRcodePlace = 10;
 43640  00567C  0E0A               	movlw	10
 43641  00567E  D060               	goto	L41
 43642                           
 43643                           ; BSR set to: 0
 43644                           ;interrupts.c: 493: }
 43645                           ;interrupts.c: 494: }
 43646  005680  D073               	goto	i2l14368
 43647  005682                     i2l14296:
 43648                           
 43649                           ;interrupts.c: 495: else if(IRcodePlace == 11)
 43650  005682  0E0B               	movlw	11
 43651  005684  184D               	xorwf	_IRcodePlace,w,c
 43652  005686  A4D8               	btfss	status,2,c
 43653  005688  D007               	goto	i2l14300
 43654                           
 43655                           ;interrupts.c: 496: {
 43656                           ;interrupts.c: 497: (IRmod = 1);
 43657  00568A  0E01               	movlw	1
 43658  00568C  0100               	movlb	0	; () banked
 43659  00568E  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 43660                           
 43661                           ;interrupts.c: 498: (PR2 = 38);
 43662  005690  0E26               	movlw	38
 43663  005692  6ECB               	movwf	4043,c	;volatile
 43664                           
 43665                           ;interrupts.c: 499: IRcodePlace = 12;
 43666  005694  0E0C               	movlw	12
 43667  005696  D054               	goto	L41
 43668  005698                     i2l14300:
 43669                           
 43670                           ;interrupts.c: 501: else if(IRcodePlace == 12)
 43671  005698  0E0C               	movlw	12
 43672  00569A  184D               	xorwf	_IRcodePlace,w,c
 43673  00569C  A4D8               	btfss	status,2,c
 43674  00569E  D011               	goto	i2l14314
 43675                           
 43676                           ;interrupts.c: 502: {
 43677                           ;interrupts.c: 503: (IRmod = 0);
 43678  0056A0  0E00               	movlw	0
 43679  0056A2  0100               	movlb	0	; () banked
 43680  0056A4  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 43681                           
 43682                           ; BSR set to: 0
 43683                           ;interrupts.c: 504: (LATC &= ~0x08);
 43684  0056A6  968B               	bcf	3979,3,c	;volatile
 43685                           
 43686                           ; BSR set to: 0
 43687                           ;interrupts.c: 505: if(!IRrepeatflag)
 43688  0056A8  5043               	movf	_IRrepeatflag,w,c
 43689  0056AA  A4D8               	btfss	status,2,c
 43690  0056AC  D003               	goto	i2l14312
 43691                           
 43692                           ; BSR set to: 0
 43693                           ;interrupts.c: 506: {
 43694                           ;interrupts.c: 508: IRcodePlace = 13;
 43695  0056AE  0E0D               	movlw	13
 43696  0056B0  6E4D               	movwf	_IRcodePlace,c
 43697  0056B2  D057               	goto	i2l14364
 43698  0056B4                     i2l14312:
 43699                           
 43700                           ; BSR set to: 0
 43701                           ;interrupts.c: 512: else
 43702                           ;interrupts.c: 513: {
 43703                           ;interrupts.c: 514: RF_IR_Postscaler = 11;
 43704  0056B4  0E0B               	movlw	11
 43705  0056B6  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 43706                           
 43707                           ;interrupts.c: 515: (PR2 = 242);
 43708  0056B8  0EF2               	movlw	242
 43709  0056BA  6ECB               	movwf	4043,c	;volatile
 43710                           
 43711                           ;interrupts.c: 516: IRcodePlace = 14;
 43712  0056BC  0E0E               	movlw	14
 43713  0056BE  D040               	goto	L41
 43714                           
 43715                           ; BSR set to: 0
 43716                           ;interrupts.c: 517: }
 43717                           ;interrupts.c: 518: }
 43718  0056C0  D053               	goto	i2l14368
 43719  0056C2                     i2l14314:
 43720                           
 43721                           ;interrupts.c: 519: else if(IRcodePlace == 14 || IRcodePlace == 18)
 43722  0056C2  0E0E               	movlw	14
 43723  0056C4  184D               	xorwf	_IRcodePlace,w,c
 43724  0056C6  B4D8               	btfsc	status,2,c
 43725  0056C8  D004               	goto	i2l14318
 43726  0056CA  0E12               	movlw	18
 43727  0056CC  184D               	xorwf	_IRcodePlace,w,c
 43728  0056CE  A4D8               	btfss	status,2,c
 43729  0056D0  D009               	goto	i2l14320
 43730  0056D2                     i2l14318:
 43731                           
 43732                           ;interrupts.c: 520: {
 43733                           ;interrupts.c: 521: (IRmod = 1);
 43734  0056D2  0E01               	movlw	1
 43735  0056D4  0100               	movlb	0	; () banked
 43736  0056D6  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 43737                           
 43738                           ;interrupts.c: 522: RF_IR_Postscaler = 4;
 43739  0056D8  0E04               	movlw	4
 43740  0056DA  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 43741                           
 43742                           ;interrupts.c: 523: (PR2 = 150);
 43743  0056DC  0E96               	movlw	150
 43744  0056DE  6ECB               	movwf	4043,c	;volatile
 43745                           
 43746                           ;interrupts.c: 524: IRcodePlace = 15;
 43747  0056E0  0E0F               	movlw	15
 43748  0056E2  D02E               	goto	L41
 43749  0056E4                     i2l14320:
 43750                           
 43751                           ;interrupts.c: 526: else if(IRcodePlace == 15)
 43752  0056E4  0E0F               	movlw	15
 43753  0056E6  184D               	xorwf	_IRcodePlace,w,c
 43754  0056E8  A4D8               	btfss	status,2,c
 43755  0056EA  D00A               	goto	i2l14332
 43756                           
 43757                           ;interrupts.c: 527: {
 43758                           ;interrupts.c: 528: (IRmod = 0);
 43759  0056EC  0E00               	movlw	0
 43760  0056EE  0100               	movlb	0	; () banked
 43761  0056F0  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 43762                           
 43763                           ; BSR set to: 0
 43764                           ;interrupts.c: 529: (LATC &= ~0x08);
 43765  0056F2  968B               	bcf	3979,3,c	;volatile
 43766                           
 43767                           ; BSR set to: 0
 43768                           ;interrupts.c: 530: RF_IR_Postscaler = 1;
 43769  0056F4  0E01               	movlw	1
 43770  0056F6  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 43771                           
 43772                           ; BSR set to: 0
 43773                           ;interrupts.c: 531: (PR2 = 149);
 43774  0056F8  0E95               	movlw	149
 43775  0056FA  6ECB               	movwf	4043,c	;volatile
 43776                           
 43777                           ; BSR set to: 0
 43778                           ;interrupts.c: 532: IRcodePlace = 16;
 43779  0056FC  0E10               	movlw	16
 43780  0056FE  D020               	goto	L41
 43781  005700                     i2l14332:
 43782                           
 43783                           ;interrupts.c: 534: else if(IRcodePlace == 16)
 43784  005700  0E10               	movlw	16
 43785  005702  184D               	xorwf	_IRcodePlace,w,c
 43786  005704  A4D8               	btfss	status,2,c
 43787  005706  D009               	goto	i2l14336
 43788                           
 43789                           ;interrupts.c: 535: {
 43790                           ;interrupts.c: 536: (IRmod = 1);
 43791  005708  0E01               	movlw	1
 43792  00570A  0100               	movlb	0	; () banked
 43793  00570C  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 43794                           
 43795                           ;interrupts.c: 537: RF_IR_Postscaler = 1;
 43796  00570E  0E01               	movlw	1
 43797  005710  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 43798                           
 43799                           ;interrupts.c: 538: (PR2 = 38);
 43800  005712  0E26               	movlw	38
 43801  005714  6ECB               	movwf	4043,c	;volatile
 43802                           
 43803                           ;interrupts.c: 539: IRcodePlace = 17;
 43804  005716  0E11               	movlw	17
 43805  005718  D013               	goto	L41
 43806  00571A                     i2l14336:
 43807                           
 43808                           ;interrupts.c: 541: else if(IRcodePlace == 17)
 43809  00571A  0E11               	movlw	17
 43810  00571C  184D               	xorwf	_IRcodePlace,w,c
 43811  00571E  A4D8               	btfss	status,2,c
 43812  005720  D011               	goto	i2l14352
 43813                           
 43814                           ;interrupts.c: 542: {
 43815                           ;interrupts.c: 543: (IRmod = 0);
 43816  005722  0E00               	movlw	0
 43817  005724  0100               	movlb	0	; () banked
 43818  005726  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 43819                           
 43820                           ; BSR set to: 0
 43821                           ;interrupts.c: 544: (LATC &= ~0x08);
 43822  005728  968B               	bcf	3979,3,c	;volatile
 43823                           
 43824                           ; BSR set to: 0
 43825                           ;interrupts.c: 545: RF_IR_Postscaler = 26;
 43826  00572A  0E1A               	movlw	26
 43827  00572C  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 43828                           
 43829                           ; BSR set to: 0
 43830                           ;interrupts.c: 546: (PR2 = 246);
 43831  00572E  0EF6               	movlw	246
 43832  005730  6ECB               	movwf	4043,c	;volatile
 43833                           
 43834                           ; BSR set to: 0
 43835                           ;interrupts.c: 547: IRrepeatAmount--;
 43836  005732  0642               	decf	_IRrepeatAmount,f,c
 43837                           
 43838                           ;interrupts.c: 548: if(IRrepeatAmount)
 43839  005734  5042               	movf	_IRrepeatAmount,w,c
 43840  005736  B4D8               	btfsc	status,2,c
 43841  005738  D002               	goto	i2l14350
 43842                           
 43843                           ; BSR set to: 0
 43844                           ;interrupts.c: 549: {
 43845                           ;interrupts.c: 550: IRcodePlace = 18;
 43846  00573A  0E12               	movlw	18
 43847  00573C  D001               	goto	L41
 43848  00573E                     i2l14350:
 43849                           
 43850                           ; BSR set to: 0
 43851                           ;interrupts.c: 552: else
 43852                           ;interrupts.c: 553: {
 43853                           ;interrupts.c: 554: IRcodePlace = 13;
 43854  00573E  0E0D               	movlw	13
 43855  005740                     L41:
 43856  005740  6E4D               	movwf	_IRcodePlace,c
 43857                           
 43858                           ; BSR set to: 0
 43859                           ;interrupts.c: 555: }
 43860                           ;interrupts.c: 556: }
 43861  005742  D012               	goto	i2l14368
 43862  005744                     i2l14352:
 43863                           
 43864                           ;interrupts.c: 557: else if(IRcodePlace == 13)
 43865  005744  0E0D               	movlw	13
 43866  005746  184D               	xorwf	_IRcodePlace,w,c
 43867  005748  A4D8               	btfss	status,2,c
 43868  00574A  D005               	goto	i2l14358
 43869  00574C  D00A               	goto	i2l14364
 43870  00574E                     i2l14356:
 43871                           
 43872                           ;interrupts.c: 561: Sent = 1;
 43873  00574E  0E01               	movlw	1
 43874  005750  0100               	movlb	0	; () banked
 43875  005752  6FFF               	movwf	_Sent& (0+255),b	;volatile
 43876                           
 43877                           ;interrupts.c: 562: }
 43878  005754  D009               	goto	i2l14368
 43879  005756                     i2l14358:
 43880                           
 43881                           ;interrupts.c: 563: else
 43882                           ;interrupts.c: 564: {
 43883                           ;interrupts.c: 566: (IRmod = 0);
 43884  005756  0E00               	movlw	0
 43885  005758  0100               	movlb	0	; () banked
 43886  00575A  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 43887                           
 43888                           ; BSR set to: 0
 43889                           ;interrupts.c: 567: (LATC &= ~0x08);
 43890  00575C  968B               	bcf	3979,3,c	;volatile
 43891                           
 43892                           ; BSR set to: 0
 43893                           ;interrupts.c: 568: IRcodePlace = 0;
 43894  00575E  0E00               	movlw	0
 43895  005760  6E4D               	movwf	_IRcodePlace,c
 43896  005762                     i2l14364:
 43897                           
 43898                           ; BSR set to: 0
 43899                           ;interrupts.c: 569: (T2CONbits.TMR2ON = 0);
 43900  005762  94CA               	bcf	4042,2,c	;volatile
 43901  005764  D7F4               	goto	i2l14356
 43902                           
 43903                           ; BSR set to: 0
 43904                           
 43905                           ; BSR set to: 0
 43906                           
 43907                           ; BSR set to: 0
 43908                           
 43909                           ; BSR set to: 0
 43910                           
 43911                           ; BSR set to: 0
 43912                           
 43913                           ; BSR set to: 0
 43914                           
 43915                           ; BSR set to: 0
 43916                           
 43917                           ; BSR set to: 0
 43918                           
 43919                           ; BSR set to: 0
 43920                           
 43921                           ; BSR set to: 0
 43922                           
 43923                           ; BSR set to: 0
 43924                           
 43925                           ; BSR set to: 0
 43926                           ;interrupts.c: 570: Sent = 1;
 43927  005766  D000               	goto	i2l14368
 43928  005768                     i2l14368:
 43929                           
 43930                           ;interrupts.c: 571: }
 43931                           ;interrupts.c: 572: }
 43932                           ;interrupts.c: 573: }
 43933                           ;interrupts.c: 574: PIR1bits.TMR2IF = 0;
 43934  005768  929E               	bcf	3998,1,c	;volatile
 43935                           
 43936                           ;interrupts.c: 575: }
 43937  00576A  D013               	goto	i2l1376
 43938  00576C                     i2l1381:
 43939                           
 43940                           ;interrupts.c: 576: else if(PIR2bits.TMR3IF)
 43941  00576C  A2A1               	btfss	4001,1,c	;volatile
 43942  00576E  D00F               	goto	i2l1484
 43943                           
 43944                           ;interrupts.c: 577: {
 43945                           ;interrupts.c: 578: (T3CONbits.TMR3ON = 0);
 43946  005770  90B1               	bcf	4017,0,c	;volatile
 43947                           
 43948                           ;interrupts.c: 579: if(Timer3_Postscaler < 3)
 43949  005772  0E03               	movlw	3
 43950  005774  604B               	cpfslt	_Timer3_Postscaler,c
 43951  005776  D005               	goto	i2l14380
 43952                           
 43953                           ;interrupts.c: 580: {
 43954                           ;interrupts.c: 581: ResetTimer3();
 43955  005778  EC34  F055         	call	_ResetTimer3	;wreg free
 43956                           
 43957                           ;interrupts.c: 582: (T3CONbits.TMR3ON = 1);
 43958  00577C  80B1               	bsf	4017,0,c	;volatile
 43959                           
 43960                           ;interrupts.c: 583: Timer3_Postscaler++;
 43961  00577E  2A4B               	incf	_Timer3_Postscaler,f,c
 43962                           
 43963                           ;interrupts.c: 584: }
 43964  005780  D004               	goto	i2l14382
 43965  005782                     i2l14380:
 43966                           
 43967                           ;interrupts.c: 585: else
 43968                           ;interrupts.c: 586: {
 43969                           ;interrupts.c: 591: Sent = 1;
 43970  005782  0E01               	movlw	1
 43971  005784  0100               	movlb	0	; () banked
 43972  005786  6FFF               	movwf	_Sent& (0+255),b	;volatile
 43973  005788  D000               	goto	i2l14382
 43974  00578A                     i2l14382:
 43975                           
 43976                           ;interrupts.c: 592: }
 43977                           ;interrupts.c: 593: PIR2bits.TMR3IF = 0;
 43978  00578A  92A1               	bcf	4001,1,c	;volatile
 43979                           
 43980                           ;interrupts.c: 594: }
 43981  00578C  D002               	goto	i2l1376
 43982  00578E                     i2l1484:
 43983                           
 43984                           ;interrupts.c: 595: else
 43985                           ;interrupts.c: 596: {
 43986                           ;interrupts.c: 598: __nop();
 43987  00578E  F000               	nop	
 43988  005790  D000               	goto	i2l1376
 43989  005792                     i2l1376:
 43990                           
 43991                           ;interrupts.c: 599: }
 43992                           ;interrupts.c: 600: INTCONbits.GIE = 1;
 43993  005792  8EF2               	bsf	intcon,7,c	;volatile
 43994  005794  C036  FFF5         	movff	??_high_isr+17,tablat
 43995  005798  C035  FFF8         	movff	??_high_isr+16,tblptru
 43996  00579C  C034  FFF7         	movff	??_high_isr+15,tblptrh
 43997  0057A0  C033  FFF6         	movff	??_high_isr+14,tblptrl
 43998  0057A4  C032  FFF4         	movff	??_high_isr+13,prodh
 43999  0057A8  C031  FFF3         	movff	??_high_isr+12,prodl
 44000  0057AC  C030  FFDA         	movff	??_high_isr+11,fsr2h
 44001  0057B0  C02F  FFD9         	movff	??_high_isr+10,fsr2l
 44002  0057B4  C02E  FFE2         	movff	??_high_isr+9,fsr1h
 44003  0057B8  C02D  FFE1         	movff	??_high_isr+8,fsr1l
 44004  0057BC  C02C  FFEA         	movff	??_high_isr+7,fsr0h
 44005  0057C0  C02B  FFE9         	movff	??_high_isr+6,fsr0l
 44006  0057C4  C02A  FFFB         	movff	??_high_isr+5,pclatu
 44007  0057C8  C029  FFFA         	movff	??_high_isr+4,pclath
 44008  0057CC  0011               	retfie		f
 44009  0057CE                     __end_of_high_isr:
 44010                           	opt stack 0
 44011                           pclatu	equ	0xFFB
 44012                           pclath	equ	0xFFA
 44013                           tblptru	equ	0xFF8
 44014                           tblptrh	equ	0xFF7
 44015                           tblptrl	equ	0xFF6
 44016                           tablat	equ	0xFF5
 44017                           prodh	equ	0xFF4
 44018                           prodl	equ	0xFF3
 44019                           intcon	equ	0xFF2
 44020                           intcon2	equ	0xFF1
 44021                           indf0	equ	0xFEF
 44022                           postinc0	equ	0xFEE
 44023                           plusw0	equ	0xFEB
 44024                           fsr0h	equ	0xFEA
 44025                           fsr0l	equ	0xFE9
 44026                           wreg	equ	0xFE8
 44027                           indf1	equ	0xFE7
 44028                           postdec1	equ	0xFE5
 44029                           fsr1h	equ	0xFE2
 44030                           fsr1l	equ	0xFE1
 44031                           bsr	equ	0xFE0
 44032                           indf2	equ	0xFDF
 44033                           postinc2	equ	0xFDE
 44034                           postdec2	equ	0xFDD
 44035                           plusw2	equ	0xFDB
 44036                           fsr2h	equ	0xFDA
 44037                           fsr2l	equ	0xFD9
 44038                           status	equ	0xFD8
 44039                           
 44040 ;; *************** function i2_cleanBuffer16bit *****************
 44041 ;; Defined at:
 44042 ;;		line 191 in file "MISC.c"
 44043 ;; Parameters:    Size  Location     Type
 44044 ;;  data            2   22[COMRAM] PTR unsigned int 
 44045 ;;		 -> IRRawCode(200), 
 44046 ;;  count           2   24[COMRAM] int 
 44047 ;; Auto vars:     Size  Location     Type
 44048 ;;  cleanBuffer1    1   29[COMRAM] unsigned char 
 44049 ;; Return value:  Size  Location     Type
 44050 ;;		None               void
 44051 ;; Registers used:
 44052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44053 ;; Tracked objects:
 44054 ;;		On entry : 0/0
 44055 ;;		On exit  : 0/0
 44056 ;;		Unchanged: 0/0
 44057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44058 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44059 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44060 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44061 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44062 ;;Total ram usage:        8 bytes
 44063 ;; Hardware stack levels used:    1
 44064 ;; This function calls:
 44065 ;;		Nothing
 44066 ;; This function is called by:
 44067 ;;		_high_isr
 44068 ;; This function uses a non-reentrant model
 44069 ;;
 44070                           
 44071                           	psect	text120
 44072  00A48C                     __ptext120:
 44073                           	opt stack 0
 44074  00A48C                     i2_cleanBuffer16bit:
 44075                           	opt stack 18
 44076                           
 44077                           ;MISC.c: 193: unsigned char i=0;
 44078                           
 44079                           ;incstack = 0
 44080  00A48C  0E00               	movlw	0
 44081  00A48E  6E1E               	movwf	i2cleanBuffer16bit@i,c
 44082                           
 44083                           ;MISC.c: 194: for(i=0; i<count;i++)
 44084  00A490  0E00               	movlw	0
 44085  00A492  6E1E               	movwf	i2cleanBuffer16bit@i,c
 44086  00A494  D00E               	goto	i2l13618
 44087  00A496                     i2l13614:
 44088                           
 44089                           ;MISC.c: 195: {
 44090                           ;MISC.c: 196: data[i]= 0;
 44091  00A496  501E               	movf	i2cleanBuffer16bit@i,w,c
 44092  00A498  0D02               	mullw	2
 44093  00A49A  50F3               	movf	prodl,w,c
 44094  00A49C  2417               	addwf	i2cleanBuffer16bit@data,w,c
 44095  00A49E  6ED9               	movwf	fsr2l,c
 44096  00A4A0  50F4               	movf	prodh,w,c
 44097  00A4A2  2018               	addwfc	i2cleanBuffer16bit@data+1,w,c
 44098  00A4A4  6EDA               	movwf	fsr2h,c
 44099  00A4A6  0E00               	movlw	0
 44100  00A4A8  6EDE               	movwf	postinc2,c
 44101  00A4AA  0E00               	movlw	0
 44102  00A4AC  6EDD               	movwf	postdec2,c
 44103  00A4AE  2A1E               	incf	i2cleanBuffer16bit@i,f,c
 44104  00A4B0  D000               	goto	i2l13618
 44105  00A4B2                     i2l13618:
 44106  00A4B2  501E               	movf	i2cleanBuffer16bit@i,w,c
 44107  00A4B4  6E1B               	movwf	??i2_cleanBuffer16bit& (0+255),c
 44108  00A4B6  6A1C               	clrf	(??i2_cleanBuffer16bit+1)& (0+255),c
 44109  00A4B8  5019               	movf	i2cleanBuffer16bit@count,w,c
 44110  00A4BA  5C1B               	subwf	??i2_cleanBuffer16bit,w,c
 44111  00A4BC  501C               	movf	??i2_cleanBuffer16bit+1,w,c
 44112  00A4BE  0A80               	xorlw	128
 44113  00A4C0  6E1D               	movwf	(??i2_cleanBuffer16bit+2)& (0+255),c
 44114  00A4C2  501A               	movf	i2cleanBuffer16bit@count+1,w,c
 44115  00A4C4  0A80               	xorlw	128
 44116  00A4C6  581D               	subwfb	(??i2_cleanBuffer16bit+2)& (0+255),w,c
 44117  00A4C8  A0D8               	btfss	status,0,c
 44118  00A4CA  D7E5               	goto	i2l13614
 44119  00A4CC  0012               	return		;funcret
 44120  00A4CE                     __end_ofi2_cleanBuffer16bit:
 44121                           	opt stack 0
 44122                           pclatu	equ	0xFFB
 44123                           pclath	equ	0xFFA
 44124                           tblptru	equ	0xFF8
 44125                           tblptrh	equ	0xFF7
 44126                           tblptrl	equ	0xFF6
 44127                           tablat	equ	0xFF5
 44128                           prodh	equ	0xFF4
 44129                           prodl	equ	0xFF3
 44130                           intcon	equ	0xFF2
 44131                           intcon2	equ	0xFF1
 44132                           indf0	equ	0xFEF
 44133                           postinc0	equ	0xFEE
 44134                           plusw0	equ	0xFEB
 44135                           fsr0h	equ	0xFEA
 44136                           fsr0l	equ	0xFE9
 44137                           wreg	equ	0xFE8
 44138                           indf1	equ	0xFE7
 44139                           postdec1	equ	0xFE5
 44140                           fsr1h	equ	0xFE2
 44141                           fsr1l	equ	0xFE1
 44142                           bsr	equ	0xFE0
 44143                           indf2	equ	0xFDF
 44144                           postinc2	equ	0xFDE
 44145                           postdec2	equ	0xFDD
 44146                           plusw2	equ	0xFDB
 44147                           fsr2h	equ	0xFDA
 44148                           fsr2l	equ	0xFD9
 44149                           status	equ	0xFD8
 44150                           
 44151 ;; *************** function i2_ResetTimer0 *****************
 44152 ;; Defined at:
 44153 ;;		line 79 in file "Timer.c"
 44154 ;; Parameters:    Size  Location     Type
 44155 ;;		None
 44156 ;; Auto vars:     Size  Location     Type
 44157 ;;		None
 44158 ;; Return value:  Size  Location     Type
 44159 ;;		None               void
 44160 ;; Registers used:
 44161 ;;		wreg, status,2
 44162 ;; Tracked objects:
 44163 ;;		On entry : 0/0
 44164 ;;		On exit  : 0/0
 44165 ;;		Unchanged: 0/0
 44166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44171 ;;Total ram usage:        0 bytes
 44172 ;; Hardware stack levels used:    1
 44173 ;; This function calls:
 44174 ;;		Nothing
 44175 ;; This function is called by:
 44176 ;;		_high_isr
 44177 ;; This function uses a non-reentrant model
 44178 ;;
 44179                           
 44180                           	psect	text121
 44181  00AA54                     __ptext121:
 44182                           	opt stack 0
 44183  00AA54                     i2_ResetTimer0:
 44184                           	opt stack 18
 44185                           
 44186                           ;Timer.c: 85: TMR0H = 0;
 44187                           
 44188                           ;incstack = 0
 44189  00AA54  0E00               	movlw	0
 44190  00AA56  6ED7               	movwf	4055,c	;volatile
 44191                           
 44192                           ;Timer.c: 86: TMR0L = 2;
 44193  00AA58  0E02               	movlw	2
 44194  00AA5A  6ED6               	movwf	4054,c	;volatile
 44195  00AA5C  0012               	return		;funcret
 44196  00AA5E                     __end_ofi2_ResetTimer0:
 44197                           	opt stack 0
 44198                           pclatu	equ	0xFFB
 44199                           pclath	equ	0xFFA
 44200                           tblptru	equ	0xFF8
 44201                           tblptrh	equ	0xFF7
 44202                           tblptrl	equ	0xFF6
 44203                           tablat	equ	0xFF5
 44204                           prodh	equ	0xFF4
 44205                           prodl	equ	0xFF3
 44206                           intcon	equ	0xFF2
 44207                           intcon2	equ	0xFF1
 44208                           indf0	equ	0xFEF
 44209                           postinc0	equ	0xFEE
 44210                           plusw0	equ	0xFEB
 44211                           fsr0h	equ	0xFEA
 44212                           fsr0l	equ	0xFE9
 44213                           wreg	equ	0xFE8
 44214                           indf1	equ	0xFE7
 44215                           postdec1	equ	0xFE5
 44216                           fsr1h	equ	0xFE2
 44217                           fsr1l	equ	0xFE1
 44218                           bsr	equ	0xFE0
 44219                           indf2	equ	0xFDF
 44220                           postinc2	equ	0xFDE
 44221                           postdec2	equ	0xFDD
 44222                           plusw2	equ	0xFDB
 44223                           fsr2h	equ	0xFDA
 44224                           fsr2l	equ	0xFD9
 44225                           status	equ	0xFD8
 44226                           
 44227 ;; *************** function i2_ReadIRpin *****************
 44228 ;; Defined at:
 44229 ;;		line 107 in file "IR.c"
 44230 ;; Parameters:    Size  Location     Type
 44231 ;;		None
 44232 ;; Auto vars:     Size  Location     Type
 44233 ;;		None
 44234 ;; Return value:  Size  Location     Type
 44235 ;;                  1    wreg      unsigned char 
 44236 ;; Registers used:
 44237 ;;		wreg
 44238 ;; Tracked objects:
 44239 ;;		On entry : 0/0
 44240 ;;		On exit  : 0/0
 44241 ;;		Unchanged: 0/0
 44242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44247 ;;Total ram usage:        0 bytes
 44248 ;; Hardware stack levels used:    1
 44249 ;; This function calls:
 44250 ;;		Nothing
 44251 ;; This function is called by:
 44252 ;;		_high_isr
 44253 ;; This function uses a non-reentrant model
 44254 ;;
 44255                           
 44256                           	psect	text122
 44257  00AA28                     __ptext122:
 44258                           	opt stack 0
 44259  00AA28                     i2_ReadIRpin:
 44260                           	opt stack 18
 44261                           
 44262                           ;IR.c: 110: if((PORTB & 0x10) == 0x10)
 44263                           
 44264                           ;incstack = 0
 44265  00AA28  A881               	btfss	3969,4,c	;volatile
 44266  00AA2A  D002               	goto	i2l13658
 44267                           
 44268                           ;IR.c: 111: {
 44269                           ;IR.c: 112: return (1);
 44270  00AA2C  0E01               	movlw	1
 44271                           
 44272                           ;IR.c: 113: }
 44273  00AA2E  0012               	return	
 44274  00AA30                     i2l13658:
 44275                           
 44276                           ;IR.c: 114: else
 44277                           ;IR.c: 115: {
 44278                           ;IR.c: 116: return 0;
 44279  00AA30  0E00               	movlw	0
 44280  00AA32  0012               	return	
 44281  00AA34  0012               	return		;funcret
 44282  00AA36                     __end_ofi2_ReadIRpin:
 44283                           	opt stack 0
 44284                           pclatu	equ	0xFFB
 44285                           pclath	equ	0xFFA
 44286                           tblptru	equ	0xFF8
 44287                           tblptrh	equ	0xFF7
 44288                           tblptrl	equ	0xFF6
 44289                           tablat	equ	0xFF5
 44290                           prodh	equ	0xFF4
 44291                           prodl	equ	0xFF3
 44292                           intcon	equ	0xFF2
 44293                           intcon2	equ	0xFF1
 44294                           indf0	equ	0xFEF
 44295                           postinc0	equ	0xFEE
 44296                           plusw0	equ	0xFEB
 44297                           fsr0h	equ	0xFEA
 44298                           fsr0l	equ	0xFE9
 44299                           wreg	equ	0xFE8
 44300                           indf1	equ	0xFE7
 44301                           postdec1	equ	0xFE5
 44302                           fsr1h	equ	0xFE2
 44303                           fsr1l	equ	0xFE1
 44304                           bsr	equ	0xFE0
 44305                           indf2	equ	0xFDF
 44306                           postinc2	equ	0xFDE
 44307                           postdec2	equ	0xFDD
 44308                           plusw2	equ	0xFDB
 44309                           fsr2h	equ	0xFDA
 44310                           fsr2l	equ	0xFD9
 44311                           status	equ	0xFD8
 44312                           
 44313 ;; *************** function _SetTimer0 *****************
 44314 ;; Defined at:
 44315 ;;		line 94 in file "Timer.c"
 44316 ;; Parameters:    Size  Location     Type
 44317 ;;  temp            2   22[COMRAM] unsigned int 
 44318 ;; Auto vars:     Size  Location     Type
 44319 ;;		None
 44320 ;; Return value:  Size  Location     Type
 44321 ;;		None               void
 44322 ;; Registers used:
 44323 ;;		wreg, status,2
 44324 ;; Tracked objects:
 44325 ;;		On entry : 0/0
 44326 ;;		On exit  : 0/0
 44327 ;;		Unchanged: 0/0
 44328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44329 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44332 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44333 ;;Total ram usage:        2 bytes
 44334 ;; Hardware stack levels used:    1
 44335 ;; This function calls:
 44336 ;;		Nothing
 44337 ;; This function is called by:
 44338 ;;		_high_isr
 44339 ;; This function uses a non-reentrant model
 44340 ;;
 44341                           
 44342                           	psect	text123
 44343  00AA5E                     __ptext123:
 44344                           	opt stack 0
 44345  00AA5E                     _SetTimer0:
 44346                           	opt stack 18
 44347                           
 44348                           ;Timer.c: 100: TMR0H = (temp & 0xFF00)>> 8;;
 44349                           
 44350                           ;incstack = 0
 44351  00AA5E  5018               	movf	SetTimer0@temp+1,w,c
 44352  00AA60  6ED7               	movwf	4055,c	;volatile
 44353                           
 44354                           ;Timer.c: 101: TMR0L = temp & 0xFF;
 44355  00AA62  C017  FFD6         	movff	SetTimer0@temp,4054	;volatile
 44356  00AA66  0012               	return		;funcret
 44357  00AA68                     __end_of_SetTimer0:
 44358                           	opt stack 0
 44359                           pclatu	equ	0xFFB
 44360                           pclath	equ	0xFFA
 44361                           tblptru	equ	0xFF8
 44362                           tblptrh	equ	0xFF7
 44363                           tblptrl	equ	0xFF6
 44364                           tablat	equ	0xFF5
 44365                           prodh	equ	0xFF4
 44366                           prodl	equ	0xFF3
 44367                           intcon	equ	0xFF2
 44368                           intcon2	equ	0xFF1
 44369                           indf0	equ	0xFEF
 44370                           postinc0	equ	0xFEE
 44371                           plusw0	equ	0xFEB
 44372                           fsr0h	equ	0xFEA
 44373                           fsr0l	equ	0xFE9
 44374                           wreg	equ	0xFE8
 44375                           indf1	equ	0xFE7
 44376                           postdec1	equ	0xFE5
 44377                           fsr1h	equ	0xFE2
 44378                           fsr1l	equ	0xFE1
 44379                           bsr	equ	0xFE0
 44380                           indf2	equ	0xFDF
 44381                           postinc2	equ	0xFDE
 44382                           postdec2	equ	0xFDD
 44383                           plusw2	equ	0xFDB
 44384                           fsr2h	equ	0xFDA
 44385                           fsr2l	equ	0xFD9
 44386                           status	equ	0xFD8
 44387                           
 44388 ;; *************** function _ResetTimer3 *****************
 44389 ;; Defined at:
 44390 ;;		line 175 in file "Timer.c"
 44391 ;; Parameters:    Size  Location     Type
 44392 ;;		None
 44393 ;; Auto vars:     Size  Location     Type
 44394 ;;		None
 44395 ;; Return value:  Size  Location     Type
 44396 ;;		None               void
 44397 ;; Registers used:
 44398 ;;		wreg, status,2
 44399 ;; Tracked objects:
 44400 ;;		On entry : 0/0
 44401 ;;		On exit  : 0/0
 44402 ;;		Unchanged: 0/0
 44403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44408 ;;Total ram usage:        0 bytes
 44409 ;; Hardware stack levels used:    1
 44410 ;; This function calls:
 44411 ;;		Nothing
 44412 ;; This function is called by:
 44413 ;;		_high_isr
 44414 ;; This function uses a non-reentrant model
 44415 ;;
 44416                           
 44417                           	psect	text124
 44418  00AA68                     __ptext124:
 44419                           	opt stack 0
 44420  00AA68                     _ResetTimer3:
 44421                           	opt stack 18
 44422                           
 44423                           ;Timer.c: 181: TMR3H = 0;
 44424                           
 44425                           ;incstack = 0
 44426  00AA68  0E00               	movlw	0
 44427  00AA6A  6EB3               	movwf	4019,c	;volatile
 44428                           
 44429                           ;Timer.c: 182: TMR3L = 2;
 44430  00AA6C  0E02               	movlw	2
 44431  00AA6E  6EB2               	movwf	4018,c	;volatile
 44432  00AA70  0012               	return		;funcret
 44433  00AA72                     __end_of_ResetTimer3:
 44434                           	opt stack 0
 44435                           pclatu	equ	0xFFB
 44436                           pclath	equ	0xFFA
 44437                           tblptru	equ	0xFF8
 44438                           tblptrh	equ	0xFF7
 44439                           tblptrl	equ	0xFF6
 44440                           tablat	equ	0xFF5
 44441                           prodh	equ	0xFF4
 44442                           prodl	equ	0xFF3
 44443                           intcon	equ	0xFF2
 44444                           intcon2	equ	0xFF1
 44445                           indf0	equ	0xFEF
 44446                           postinc0	equ	0xFEE
 44447                           plusw0	equ	0xFEB
 44448                           fsr0h	equ	0xFEA
 44449                           fsr0l	equ	0xFE9
 44450                           wreg	equ	0xFE8
 44451                           indf1	equ	0xFE7
 44452                           postdec1	equ	0xFE5
 44453                           fsr1h	equ	0xFE2
 44454                           fsr1l	equ	0xFE1
 44455                           bsr	equ	0xFE0
 44456                           indf2	equ	0xFDF
 44457                           postinc2	equ	0xFDE
 44458                           postdec2	equ	0xFDD
 44459                           plusw2	equ	0xFDB
 44460                           fsr2h	equ	0xFDA
 44461                           fsr2l	equ	0xFD9
 44462                           status	equ	0xFD8
 44463                           
 44464 ;; *************** function _IRrawToNEC *****************
 44465 ;; Defined at:
 44466 ;;		line 125 in file "IR.c"
 44467 ;; Parameters:    Size  Location     Type
 44468 ;;  Raw             2   22[COMRAM] PTR unsigned int 
 44469 ;;		 -> IRRawCode(200), 
 44470 ;;  NEC             2   24[COMRAM] PTR unsigned long 
 44471 ;;		 -> IR_NEC(4), 
 44472 ;;  Invert          1   26[COMRAM] unsigned char 
 44473 ;; Auto vars:     Size  Location     Type
 44474 ;;  NECtemp         4   29[COMRAM] unsigned long 
 44475 ;;  StartBit        1   35[COMRAM] unsigned char 
 44476 ;;  i               1   34[COMRAM] unsigned char 
 44477 ;;  first           1   33[COMRAM] unsigned char 
 44478 ;; Return value:  Size  Location     Type
 44479 ;;                  1    wreg      unsigned char 
 44480 ;; Registers used:
 44481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44482 ;; Tracked objects:
 44483 ;;		On entry : 0/0
 44484 ;;		On exit  : 0/0
 44485 ;;		Unchanged: 0/0
 44486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44487 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44488 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44489 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44490 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44491 ;;Total ram usage:       14 bytes
 44492 ;; Hardware stack levels used:    1
 44493 ;; This function calls:
 44494 ;;		Nothing
 44495 ;; This function is called by:
 44496 ;;		_high_isr
 44497 ;; This function uses a non-reentrant model
 44498 ;;
 44499                           
 44500                           	psect	text125
 44501  0065B6                     __ptext125:
 44502                           	opt stack 0
 44503  0065B6                     _IRrawToNEC:
 44504                           	opt stack 18
 44505                           
 44506                           ;IR.c: 153: unsigned char i;
 44507                           ;IR.c: 154: unsigned char first =0;
 44508                           
 44509                           ;incstack = 0
 44510  0065B6  0E00               	movlw	0
 44511  0065B8  6E22               	movwf	IRrawToNEC@first,c
 44512                           
 44513                           ;IR.c: 155: unsigned char StartBit=100;
 44514  0065BA  0E64               	movlw	100
 44515  0065BC  6E24               	movwf	IRrawToNEC@StartBit,c
 44516                           
 44517                           ;IR.c: 156: unsigned long NECtemp = 0;
 44518  0065BE  0E00               	movlw	0
 44519  0065C0  6E1E               	movwf	IRrawToNEC@NECtemp,c
 44520  0065C2  0E00               	movlw	0
 44521  0065C4  6E1F               	movwf	IRrawToNEC@NECtemp+1,c
 44522  0065C6  0E00               	movlw	0
 44523  0065C8  6E20               	movwf	IRrawToNEC@NECtemp+2,c
 44524  0065CA  0E00               	movlw	0
 44525  0065CC  6E21               	movwf	IRrawToNEC@NECtemp+3,c
 44526                           
 44527                           ;IR.c: 159: for (i =0; i < 100; i++)
 44528  0065CE  0E00               	movlw	0
 44529  0065D0  6E23               	movwf	IRrawToNEC@i,c
 44530  0065D2                     i2l13474:
 44531  0065D2  0E63               	movlw	99
 44532  0065D4  6423               	cpfsgt	IRrawToNEC@i,c
 44533  0065D6  D001               	goto	i2l13478
 44534  0065D8  D021               	goto	i2l13488
 44535  0065DA                     i2l13478:
 44536                           
 44537                           ;IR.c: 160: {
 44538                           ;IR.c: 161: if(Raw[i] >= 4000 && Raw[i] <= 5000 )
 44539  0065DA  5023               	movf	IRrawToNEC@i,w,c
 44540  0065DC  0D02               	mullw	2
 44541  0065DE  50F3               	movf	prodl,w,c
 44542  0065E0  2417               	addwf	IRrawToNEC@Raw,w,c
 44543  0065E2  6ED9               	movwf	fsr2l,c
 44544  0065E4  50F4               	movf	prodh,w,c
 44545  0065E6  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 44546  0065E8  6EDA               	movwf	fsr2h,c
 44547  0065EA  0EA0               	movlw	160
 44548  0065EC  5CDE               	subwf	postinc2,w,c
 44549  0065EE  0E0F               	movlw	15
 44550  0065F0  58DE               	subwfb	postinc2,w,c
 44551  0065F2  A0D8               	btfss	status,0,c
 44552  0065F4  D011               	goto	i2l13484
 44553  0065F6  5023               	movf	IRrawToNEC@i,w,c
 44554  0065F8  0D02               	mullw	2
 44555  0065FA  50F3               	movf	prodl,w,c
 44556  0065FC  2417               	addwf	IRrawToNEC@Raw,w,c
 44557  0065FE  6ED9               	movwf	fsr2l,c
 44558  006600  50F4               	movf	prodh,w,c
 44559  006602  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 44560  006604  6EDA               	movwf	fsr2h,c
 44561  006606  0E89               	movlw	137
 44562  006608  5CDE               	subwf	postinc2,w,c
 44563  00660A  0E13               	movlw	19
 44564  00660C  58DE               	subwfb	postinc2,w,c
 44565  00660E  B0D8               	btfsc	status,0,c
 44566  006610  D003               	goto	i2l13484
 44567                           
 44568                           ;IR.c: 162: {
 44569                           ;IR.c: 164: StartBit = i;
 44570  006612  C023  F024         	movff	IRrawToNEC@i,IRrawToNEC@StartBit
 44571                           
 44572                           ;IR.c: 165: break;
 44573  006616  D002               	goto	i2l13488
 44574  006618                     i2l13484:
 44575  006618  2A23               	incf	IRrawToNEC@i,f,c
 44576  00661A  D7DB               	goto	i2l13474
 44577  00661C                     i2l13488:
 44578                           
 44579                           ;IR.c: 166: }
 44580                           ;IR.c: 167: }
 44581                           ;IR.c: 168: if((100 - StartBit) < 50)
 44582  00661C  5024               	movf	IRrawToNEC@StartBit,w,c
 44583  00661E  6E1C               	movwf	??_IRrawToNEC& (0+255),c
 44584  006620  6A1D               	clrf	(??_IRrawToNEC+1)& (0+255),c
 44585  006622  1E1C               	comf	??_IRrawToNEC,f,c
 44586  006624  1E1D               	comf	??_IRrawToNEC+1,f,c
 44587  006626  4A1C               	infsnz	??_IRrawToNEC,f,c
 44588  006628  2A1D               	incf	??_IRrawToNEC+1,f,c
 44589  00662A  0E64               	movlw	100
 44590  00662C  261C               	addwf	??_IRrawToNEC,f,c
 44591  00662E  0E00               	movlw	0
 44592  006630  221D               	addwfc	??_IRrawToNEC+1,f,c
 44593  006632  BE1D               	btfsc	??_IRrawToNEC+1,7,c
 44594  006634  D006               	goto	i2l13490
 44595  006636  501D               	movf	??_IRrawToNEC+1,w,c
 44596  006638  E106               	bnz	i2l13494
 44597  00663A  0E32               	movlw	50
 44598  00663C  5C1C               	subwf	??_IRrawToNEC,w,c
 44599  00663E  B0D8               	btfsc	status,0,c
 44600  006640  D002               	goto	i2l13494
 44601  006642                     i2l13490:
 44602                           
 44603                           ;IR.c: 169: {
 44604                           ;IR.c: 171: return 0;
 44605  006642  0E00               	movlw	0
 44606  006644  0012               	return	
 44607  006646                     i2l13494:
 44608                           
 44609                           ;IR.c: 172: }
 44610                           ;IR.c: 174: StartBit++;
 44611  006646  2A24               	incf	IRrawToNEC@StartBit,f,c
 44612                           
 44613                           ;IR.c: 175: if(Raw[StartBit] >= 925 && Raw[StartBit] <= 1250 )
 44614  006648  5024               	movf	IRrawToNEC@StartBit,w,c
 44615  00664A  0D02               	mullw	2
 44616  00664C  50F3               	movf	prodl,w,c
 44617  00664E  2417               	addwf	IRrawToNEC@Raw,w,c
 44618  006650  6ED9               	movwf	fsr2l,c
 44619  006652  50F4               	movf	prodh,w,c
 44620  006654  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 44621  006656  6EDA               	movwf	fsr2h,c
 44622  006658  0E9D               	movlw	157
 44623  00665A  5CDE               	subwf	postinc2,w,c
 44624  00665C  0E03               	movlw	3
 44625  00665E  58DE               	subwfb	postinc2,w,c
 44626  006660  A0D8               	btfss	status,0,c
 44627  006662  D04C               	goto	i2l13516
 44628  006664  5024               	movf	IRrawToNEC@StartBit,w,c
 44629  006666  0D02               	mullw	2
 44630  006668  50F3               	movf	prodl,w,c
 44631  00666A  2417               	addwf	IRrawToNEC@Raw,w,c
 44632  00666C  6ED9               	movwf	fsr2l,c
 44633  00666E  50F4               	movf	prodh,w,c
 44634  006670  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 44635  006672  6EDA               	movwf	fsr2h,c
 44636  006674  0EE3               	movlw	227
 44637  006676  5CDE               	subwf	postinc2,w,c
 44638  006678  0E04               	movlw	4
 44639  00667A  58DE               	subwfb	postinc2,w,c
 44640  00667C  B0D8               	btfsc	status,0,c
 44641  00667E  D03E               	goto	i2l13516
 44642                           
 44643                           ;IR.c: 176: {
 44644                           ;IR.c: 178: StartBit++;
 44645  006680  2A24               	incf	IRrawToNEC@StartBit,f,c
 44646                           
 44647                           ;IR.c: 179: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 44648  006682  5024               	movf	IRrawToNEC@StartBit,w,c
 44649  006684  0D02               	mullw	2
 44650  006686  50F3               	movf	prodl,w,c
 44651  006688  2417               	addwf	IRrawToNEC@Raw,w,c
 44652  00668A  6ED9               	movwf	fsr2l,c
 44653  00668C  50F4               	movf	prodh,w,c
 44654  00668E  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 44655  006690  6EDA               	movwf	fsr2h,c
 44656  006692  0E01               	movlw	1
 44657  006694  50DB               	movf	plusw2,w,c
 44658  006696  E104               	bnz	i2u1542_40
 44659  006698  0E7D               	movlw	125
 44660  00669A  5CDE               	subwf	postinc2,w,c
 44661  00669C  A0D8               	btfss	status,0,c
 44662  00669E  D04D               	goto	i2l13524
 44663  0066A0                     i2u1542_40:
 44664  0066A0  5024               	movf	IRrawToNEC@StartBit,w,c
 44665  0066A2  0D02               	mullw	2
 44666  0066A4  50F3               	movf	prodl,w,c
 44667  0066A6  2417               	addwf	IRrawToNEC@Raw,w,c
 44668  0066A8  6ED9               	movwf	fsr2l,c
 44669  0066AA  50F4               	movf	prodh,w,c
 44670  0066AC  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 44671  0066AE  6EDA               	movwf	fsr2h,c
 44672  0066B0  0E59               	movlw	89
 44673  0066B2  5CDE               	subwf	postinc2,w,c
 44674  0066B4  0E02               	movlw	2
 44675  0066B6  58DE               	subwfb	postinc2,w,c
 44676  0066B8  B0D8               	btfsc	status,0,c
 44677  0066BA  D03F               	goto	i2l13524
 44678                           
 44679                           ;IR.c: 180: {
 44680                           ;IR.c: 182: StartBit++;
 44681  0066BC  2A24               	incf	IRrawToNEC@StartBit,f,c
 44682                           
 44683                           ;IR.c: 183: if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 44684  0066BE  5024               	movf	IRrawToNEC@StartBit,w,c
 44685  0066C0  0D02               	mullw	2
 44686  0066C2  50F3               	movf	prodl,w,c
 44687  0066C4  2417               	addwf	IRrawToNEC@Raw,w,c
 44688  0066C6  6ED9               	movwf	fsr2l,c
 44689  0066C8  50F4               	movf	prodh,w,c
 44690  0066CA  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 44691  0066CC  6EDA               	movwf	fsr2h,c
 44692  0066CE  0EC8               	movlw	200
 44693  0066D0  5CDE               	subwf	postinc2,w,c
 44694  0066D2  0EAF               	movlw	175
 44695  0066D4  58DE               	subwfb	postinc2,w,c
 44696  0066D6  A0D8               	btfss	status,0,c
 44697  0066D8  D030               	goto	i2l13524
 44698  0066DA  5024               	movf	IRrawToNEC@StartBit,w,c
 44699  0066DC  0D02               	mullw	2
 44700  0066DE  50F3               	movf	prodl,w,c
 44701  0066E0  2417               	addwf	IRrawToNEC@Raw,w,c
 44702  0066E2  6ED9               	movwf	fsr2l,c
 44703  0066E4  50F4               	movf	prodh,w,c
 44704  0066E6  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 44705  0066E8  6EDA               	movwf	fsr2h,c
 44706  0066EA  0E51               	movlw	81
 44707  0066EC  5CDE               	subwf	postinc2,w,c
 44708  0066EE  0EC3               	movlw	195
 44709  0066F0  58DE               	subwfb	postinc2,w,c
 44710  0066F2  B0D8               	btfsc	status,0,c
 44711  0066F4  D022               	goto	i2l13524
 44712                           
 44713                           ;IR.c: 184: {
 44714                           ;IR.c: 186: return 2;
 44715  0066F6  0E02               	movlw	2
 44716  0066F8  0012               	return	
 44717                           
 44718                           ;IR.c: 187: }
 44719                           ;IR.c: 188: }
 44720                           ;IR.c: 189: }
 44721  0066FA  D01F               	goto	i2l13524
 44722  0066FC                     i2l13516:
 44723                           
 44724                           ;IR.c: 190: else if(Raw[StartBit] < 1750 || Raw[StartBit] > 2750 )
 44725  0066FC  5024               	movf	IRrawToNEC@StartBit,w,c
 44726  0066FE  0D02               	mullw	2
 44727  006700  50F3               	movf	prodl,w,c
 44728  006702  2417               	addwf	IRrawToNEC@Raw,w,c
 44729  006704  6ED9               	movwf	fsr2l,c
 44730  006706  50F4               	movf	prodh,w,c
 44731  006708  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 44732  00670A  6EDA               	movwf	fsr2h,c
 44733  00670C  0ED6               	movlw	214
 44734  00670E  5CDE               	subwf	postinc2,w,c
 44735  006710  0E06               	movlw	6
 44736  006712  58DE               	subwfb	postinc2,w,c
 44737  006714  A0D8               	btfss	status,0,c
 44738  006716  D00E               	goto	i2l13520
 44739  006718  5024               	movf	IRrawToNEC@StartBit,w,c
 44740  00671A  0D02               	mullw	2
 44741  00671C  50F3               	movf	prodl,w,c
 44742  00671E  2417               	addwf	IRrawToNEC@Raw,w,c
 44743  006720  6ED9               	movwf	fsr2l,c
 44744  006722  50F4               	movf	prodh,w,c
 44745  006724  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 44746  006726  6EDA               	movwf	fsr2h,c
 44747  006728  0EBF               	movlw	191
 44748  00672A  5CDE               	subwf	postinc2,w,c
 44749  00672C  0E0A               	movlw	10
 44750  00672E  58DE               	subwfb	postinc2,w,c
 44751  006730  A0D8               	btfss	status,0,c
 44752  006732  D003               	goto	i2l13524
 44753  006734                     i2l13520:
 44754                           
 44755                           ;IR.c: 191: {
 44756                           ;IR.c: 193: return 0;
 44757  006734  0E00               	movlw	0
 44758  006736  0012               	return	
 44759  006738  D000               	goto	i2l13524
 44760  00673A                     i2l13524:
 44761                           
 44762                           ;IR.c: 194: }
 44763                           ;IR.c: 196: StartBit++;
 44764  00673A  2A24               	incf	IRrawToNEC@StartBit,f,c
 44765                           
 44766                           ;IR.c: 197: for(i = StartBit; i < 100;i++)
 44767  00673C  C024  F023         	movff	IRrawToNEC@StartBit,IRrawToNEC@i
 44768  006740                     i2l13528:
 44769  006740  0E63               	movlw	99
 44770  006742  6423               	cpfsgt	IRrawToNEC@i,c
 44771  006744  D001               	goto	i2l13532
 44772  006746  D0CA               	goto	i2l13608
 44773  006748                     i2l13532:
 44774                           
 44775                           ;IR.c: 198: {
 44776                           ;IR.c: 199: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 44777  006748  5024               	movf	IRrawToNEC@StartBit,w,c
 44778  00674A  0D02               	mullw	2
 44779  00674C  50F3               	movf	prodl,w,c
 44780  00674E  2417               	addwf	IRrawToNEC@Raw,w,c
 44781  006750  6ED9               	movwf	fsr2l,c
 44782  006752  50F4               	movf	prodh,w,c
 44783  006754  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 44784  006756  6EDA               	movwf	fsr2h,c
 44785  006758  0E01               	movlw	1
 44786  00675A  50DB               	movf	plusw2,w,c
 44787  00675C  E104               	bnz	i2u1549_40
 44788  00675E  0E7D               	movlw	125
 44789  006760  5CDE               	subwf	postinc2,w,c
 44790  006762  A0D8               	btfss	status,0,c
 44791  006764  D024               	goto	i2l13548
 44792  006766                     i2u1549_40:
 44793  006766  5024               	movf	IRrawToNEC@StartBit,w,c
 44794  006768  0D02               	mullw	2
 44795  00676A  50F3               	movf	prodl,w,c
 44796  00676C  2417               	addwf	IRrawToNEC@Raw,w,c
 44797  00676E  6ED9               	movwf	fsr2l,c
 44798  006770  50F4               	movf	prodh,w,c
 44799  006772  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 44800  006774  6EDA               	movwf	fsr2h,c
 44801  006776  0E59               	movlw	89
 44802  006778  5CDE               	subwf	postinc2,w,c
 44803  00677A  0E02               	movlw	2
 44804  00677C  58DE               	subwfb	postinc2,w,c
 44805  00677E  B0D8               	btfsc	status,0,c
 44806  006780  D016               	goto	i2l13548
 44807                           
 44808                           ;IR.c: 200: {
 44809                           ;IR.c: 201: if(!first)
 44810  006782  5022               	movf	IRrawToNEC@first,w,c
 44811  006784  A4D8               	btfss	status,2,c
 44812  006786  D002               	goto	i2l13540
 44813                           
 44814                           ;IR.c: 202: {
 44815                           ;IR.c: 204: first = 1;
 44816  006788  0E01               	movlw	1
 44817  00678A  D040               	goto	L44
 44818  00678C                     i2l13540:
 44819                           
 44820                           ;IR.c: 206: else
 44821                           ;IR.c: 207: {
 44822                           ;IR.c: 209: first = 0;
 44823  00678C  0E00               	movlw	0
 44824  00678E  6E22               	movwf	IRrawToNEC@first,c
 44825                           
 44826                           ;IR.c: 210: NECtemp <<= 1;
 44827  006790  90D8               	bcf	status,0,c
 44828  006792  361E               	rlcf	IRrawToNEC@NECtemp,f,c
 44829  006794  361F               	rlcf	IRrawToNEC@NECtemp+1,f,c
 44830  006796  3620               	rlcf	IRrawToNEC@NECtemp+2,f,c
 44831  006798  3621               	rlcf	IRrawToNEC@NECtemp+3,f,c
 44832                           
 44833                           ;IR.c: 211: if(!Invert)
 44834  00679A  501B               	movf	IRrawToNEC@Invert,w,c
 44835  00679C  A4D8               	btfss	status,2,c
 44836  00679E  D09B               	goto	i2l13604
 44837                           
 44838                           ;IR.c: 212: {
 44839                           ;IR.c: 213: NECtemp++;
 44840  0067A0  0E01               	movlw	1
 44841  0067A2  261E               	addwf	IRrawToNEC@NECtemp,f,c
 44842  0067A4  0E00               	movlw	0
 44843  0067A6  221F               	addwfc	IRrawToNEC@NECtemp+1,f,c
 44844  0067A8  2220               	addwfc	IRrawToNEC@NECtemp+2,f,c
 44845  0067AA  2221               	addwfc	IRrawToNEC@NECtemp+3,f,c
 44846                           
 44847                           ;IR.c: 214: }
 44848                           ;IR.c: 215: }
 44849                           ;IR.c: 216: }
 44850  0067AC  D094               	goto	i2l13604
 44851  0067AE                     i2l13548:
 44852                           
 44853                           ;IR.c: 217: else if(Raw[StartBit] >= 700 && Raw[StartBit] <= 950)
 44854  0067AE  5024               	movf	IRrawToNEC@StartBit,w,c
 44855  0067B0  0D02               	mullw	2
 44856  0067B2  50F3               	movf	prodl,w,c
 44857  0067B4  2417               	addwf	IRrawToNEC@Raw,w,c
 44858  0067B6  6ED9               	movwf	fsr2l,c
 44859  0067B8  50F4               	movf	prodh,w,c
 44860  0067BA  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 44861  0067BC  6EDA               	movwf	fsr2h,c
 44862  0067BE  0EBC               	movlw	188
 44863  0067C0  5CDE               	subwf	postinc2,w,c
 44864  0067C2  0E02               	movlw	2
 44865  0067C4  58DE               	subwfb	postinc2,w,c
 44866  0067C6  A0D8               	btfss	status,0,c
 44867  0067C8  D026               	goto	i2l13566
 44868  0067CA  5024               	movf	IRrawToNEC@StartBit,w,c
 44869  0067CC  0D02               	mullw	2
 44870  0067CE  50F3               	movf	prodl,w,c
 44871  0067D0  2417               	addwf	IRrawToNEC@Raw,w,c
 44872  0067D2  6ED9               	movwf	fsr2l,c
 44873  0067D4  50F4               	movf	prodh,w,c
 44874  0067D6  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 44875  0067D8  6EDA               	movwf	fsr2h,c
 44876  0067DA  0EB7               	movlw	183
 44877  0067DC  5CDE               	subwf	postinc2,w,c
 44878  0067DE  0E03               	movlw	3
 44879  0067E0  58DE               	subwfb	postinc2,w,c
 44880  0067E2  B0D8               	btfsc	status,0,c
 44881  0067E4  D018               	goto	i2l13566
 44882                           
 44883                           ;IR.c: 218: {
 44884                           ;IR.c: 219: if(first)
 44885  0067E6  5022               	movf	IRrawToNEC@first,w,c
 44886  0067E8  B4D8               	btfsc	status,2,c
 44887  0067EA  D012               	goto	i2l13562
 44888                           
 44889                           ;IR.c: 220: {
 44890                           ;IR.c: 222: NECtemp <<= 1;
 44891  0067EC  90D8               	bcf	status,0,c
 44892  0067EE  361E               	rlcf	IRrawToNEC@NECtemp,f,c
 44893  0067F0  361F               	rlcf	IRrawToNEC@NECtemp+1,f,c
 44894  0067F2  3620               	rlcf	IRrawToNEC@NECtemp+2,f,c
 44895  0067F4  3621               	rlcf	IRrawToNEC@NECtemp+3,f,c
 44896                           
 44897                           ;IR.c: 223: if(Invert)
 44898  0067F6  501B               	movf	IRrawToNEC@Invert,w,c
 44899  0067F8  B4D8               	btfsc	status,2,c
 44900  0067FA  D007               	goto	i2l13560
 44901                           
 44902                           ;IR.c: 224: {
 44903                           ;IR.c: 225: NECtemp++;
 44904  0067FC  0E01               	movlw	1
 44905  0067FE  261E               	addwf	IRrawToNEC@NECtemp,f,c
 44906  006800  0E00               	movlw	0
 44907  006802  221F               	addwfc	IRrawToNEC@NECtemp+1,f,c
 44908  006804  2220               	addwfc	IRrawToNEC@NECtemp+2,f,c
 44909  006806  2221               	addwfc	IRrawToNEC@NECtemp+3,f,c
 44910  006808  D000               	goto	i2l13560
 44911  00680A                     i2l13560:
 44912                           
 44913                           ;IR.c: 226: }
 44914                           ;IR.c: 227: first = 0;
 44915  00680A  0E00               	movlw	0
 44916  00680C                     L44:
 44917  00680C  6E22               	movwf	IRrawToNEC@first,c
 44918                           
 44919                           ;IR.c: 228: }
 44920  00680E  D063               	goto	i2l13604
 44921  006810                     i2l13562:
 44922                           
 44923                           ;IR.c: 229: else
 44924                           ;IR.c: 230: {
 44925                           ;IR.c: 232: return 0;
 44926  006810  0E00               	movlw	0
 44927  006812  0012               	return	
 44928                           
 44929                           ;IR.c: 233: }
 44930                           ;IR.c: 234: }
 44931  006814  D060               	goto	i2l13604
 44932  006816                     i2l13566:
 44933                           
 44934                           ;IR.c: 235: else if(Raw[StartBit] == 0 && first == 1)
 44935  006816  5024               	movf	IRrawToNEC@StartBit,w,c
 44936  006818  0D02               	mullw	2
 44937  00681A  50F3               	movf	prodl,w,c
 44938  00681C  2417               	addwf	IRrawToNEC@Raw,w,c
 44939  00681E  6ED9               	movwf	fsr2l,c
 44940  006820  50F4               	movf	prodh,w,c
 44941  006822  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 44942  006824  6EDA               	movwf	fsr2h,c
 44943  006826  50DE               	movf	postinc2,w,c
 44944  006828  10DE               	iorwf	postinc2,w,c
 44945  00682A  A4D8               	btfss	status,2,c
 44946  00682C  D012               	goto	i2l13578
 44947  00682E  0422               	decf	IRrawToNEC@first,w,c
 44948  006830  A4D8               	btfss	status,2,c
 44949  006832  D00F               	goto	i2l13578
 44950  006834                     i2l13570:
 44951                           
 44952                           ;IR.c: 236: {
 44953                           ;IR.c: 241: *NEC = NECtemp;
 44954  006834  C019  FFD9         	movff	IRrawToNEC@NEC,fsr2l
 44955  006838  C01A  FFDA         	movff	IRrawToNEC@NEC+1,fsr2h
 44956  00683C  C01E  FFDE         	movff	IRrawToNEC@NECtemp,postinc2
 44957  006840  C01F  FFDE         	movff	IRrawToNEC@NECtemp+1,postinc2
 44958  006844  C020  FFDE         	movff	IRrawToNEC@NECtemp+2,postinc2
 44959  006848  C021  FFDE         	movff	IRrawToNEC@NECtemp+3,postinc2
 44960  00684C  D01F               	goto	i2l13584
 44961                           
 44962                           ;IR.c: 242: return 1;
 44963  00684E  0012               	return	
 44964                           
 44965                           ;IR.c: 243: }
 44966  006850  D042               	goto	i2l13604
 44967  006852                     i2l13578:
 44968                           
 44969                           ;IR.c: 244: else if(Raw[StartBit] >= 19000 && Raw[StartBit] <= 21000)
 44970  006852  5024               	movf	IRrawToNEC@StartBit,w,c
 44971  006854  0D02               	mullw	2
 44972  006856  50F3               	movf	prodl,w,c
 44973  006858  2417               	addwf	IRrawToNEC@Raw,w,c
 44974  00685A  6ED9               	movwf	fsr2l,c
 44975  00685C  50F4               	movf	prodh,w,c
 44976  00685E  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 44977  006860  6EDA               	movwf	fsr2h,c
 44978  006862  0E38               	movlw	56
 44979  006864  5CDE               	subwf	postinc2,w,c
 44980  006866  0E4A               	movlw	74
 44981  006868  58DE               	subwfb	postinc2,w,c
 44982  00686A  A0D8               	btfss	status,0,c
 44983  00686C  D012               	goto	i2l13590
 44984  00686E  5024               	movf	IRrawToNEC@StartBit,w,c
 44985  006870  0D02               	mullw	2
 44986  006872  50F3               	movf	prodl,w,c
 44987  006874  2417               	addwf	IRrawToNEC@Raw,w,c
 44988  006876  6ED9               	movwf	fsr2l,c
 44989  006878  50F4               	movf	prodh,w,c
 44990  00687A  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 44991  00687C  6EDA               	movwf	fsr2h,c
 44992  00687E  0E09               	movlw	9
 44993  006880  5CDE               	subwf	postinc2,w,c
 44994  006882  0E52               	movlw	82
 44995  006884  58DE               	subwfb	postinc2,w,c
 44996  006886  B0D8               	btfsc	status,0,c
 44997  006888  D004               	goto	i2l13590
 44998  00688A  D7D4               	goto	i2l13570
 44999  00688C                     i2l13584:
 45000                           
 45001                           ;IR.c: 248: return 1;
 45002  00688C  0E01               	movlw	1
 45003  00688E  0012               	return	
 45004                           
 45005                           ;IR.c: 249: }
 45006  006890  D022               	goto	i2l13604
 45007  006892                     i2l13590:
 45008                           
 45009                           ;IR.c: 250: else if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 45010  006892  5024               	movf	IRrawToNEC@StartBit,w,c
 45011  006894  0D02               	mullw	2
 45012  006896  50F3               	movf	prodl,w,c
 45013  006898  2417               	addwf	IRrawToNEC@Raw,w,c
 45014  00689A  6ED9               	movwf	fsr2l,c
 45015  00689C  50F4               	movf	prodh,w,c
 45016  00689E  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 45017  0068A0  6EDA               	movwf	fsr2h,c
 45018  0068A2  0EC8               	movlw	200
 45019  0068A4  5CDE               	subwf	postinc2,w,c
 45020  0068A6  0EAF               	movlw	175
 45021  0068A8  58DE               	subwfb	postinc2,w,c
 45022  0068AA  A0D8               	btfss	status,0,c
 45023  0068AC  D011               	goto	i2l13600
 45024  0068AE  5024               	movf	IRrawToNEC@StartBit,w,c
 45025  0068B0  0D02               	mullw	2
 45026  0068B2  50F3               	movf	prodl,w,c
 45027  0068B4  2417               	addwf	IRrawToNEC@Raw,w,c
 45028  0068B6  6ED9               	movwf	fsr2l,c
 45029  0068B8  50F4               	movf	prodh,w,c
 45030  0068BA  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 45031  0068BC  6EDA               	movwf	fsr2h,c
 45032  0068BE  0E51               	movlw	81
 45033  0068C0  5CDE               	subwf	postinc2,w,c
 45034  0068C2  0EC3               	movlw	195
 45035  0068C4  58DE               	subwfb	postinc2,w,c
 45036  0068C6  B0D8               	btfsc	status,0,c
 45037  0068C8  D003               	goto	i2l13600
 45038                           
 45039                           ;IR.c: 251: {
 45040                           ;IR.c: 253: return 2;
 45041  0068CA  0E02               	movlw	2
 45042  0068CC  0012               	return	
 45043                           
 45044                           ;IR.c: 254: }
 45045  0068CE  D003               	goto	i2l13604
 45046  0068D0                     i2l13600:
 45047                           
 45048                           ;IR.c: 255: else
 45049                           ;IR.c: 256: {
 45050                           ;IR.c: 257: return 0;
 45051  0068D0  0E00               	movlw	0
 45052  0068D2  0012               	return	
 45053  0068D4  D000               	goto	i2l13604
 45054  0068D6                     i2l13604:
 45055                           
 45056                           ;IR.c: 258: }
 45057                           ;IR.c: 259: StartBit++;
 45058  0068D6  2A24               	incf	IRrawToNEC@StartBit,f,c
 45059  0068D8  2A23               	incf	IRrawToNEC@i,f,c
 45060  0068DA  D732               	goto	i2l13528
 45061  0068DC                     i2l13608:
 45062                           
 45063                           ;IR.c: 260: }
 45064                           ;IR.c: 262: return 0;
 45065  0068DC  0E00               	movlw	0
 45066  0068DE  0012               	return	
 45067  0068E0  0012               	return		;funcret
 45068  0068E2                     __end_of_IRrawToNEC:
 45069                           	opt stack 0
 45070                           pclatu	equ	0xFFB
 45071                           pclath	equ	0xFFA
 45072                           tblptru	equ	0xFF8
 45073                           tblptrh	equ	0xFF7
 45074                           tblptrl	equ	0xFF6
 45075                           tablat	equ	0xFF5
 45076                           prodh	equ	0xFF4
 45077                           prodl	equ	0xFF3
 45078                           intcon	equ	0xFF2
 45079                           intcon2	equ	0xFF1
 45080                           indf0	equ	0xFEF
 45081                           postinc0	equ	0xFEE
 45082                           plusw0	equ	0xFEB
 45083                           fsr0h	equ	0xFEA
 45084                           fsr0l	equ	0xFE9
 45085                           wreg	equ	0xFE8
 45086                           indf1	equ	0xFE7
 45087                           postdec1	equ	0xFE5
 45088                           fsr1h	equ	0xFE2
 45089                           fsr1l	equ	0xFE1
 45090                           bsr	equ	0xFE0
 45091                           indf2	equ	0xFDF
 45092                           postinc2	equ	0xFDE
 45093                           postdec2	equ	0xFDD
 45094                           plusw2	equ	0xFDB
 45095                           fsr2h	equ	0xFDA
 45096                           fsr2l	equ	0xFD9
 45097                           status	equ	0xFD8
 45098                           pclatu	equ	0xFFB
 45099                           pclath	equ	0xFFA
 45100                           tblptru	equ	0xFF8
 45101                           tblptrh	equ	0xFF7
 45102                           tblptrl	equ	0xFF6
 45103                           tablat	equ	0xFF5
 45104                           prodh	equ	0xFF4
 45105                           prodl	equ	0xFF3
 45106                           intcon	equ	0xFF2
 45107                           intcon2	equ	0xFF1
 45108                           indf0	equ	0xFEF
 45109                           postinc0	equ	0xFEE
 45110                           plusw0	equ	0xFEB
 45111                           fsr0h	equ	0xFEA
 45112                           fsr0l	equ	0xFE9
 45113                           wreg	equ	0xFE8
 45114                           indf1	equ	0xFE7
 45115                           postdec1	equ	0xFE5
 45116                           fsr1h	equ	0xFE2
 45117                           fsr1l	equ	0xFE1
 45118                           bsr	equ	0xFE0
 45119                           indf2	equ	0xFDF
 45120                           postinc2	equ	0xFDE
 45121                           postdec2	equ	0xFDD
 45122                           plusw2	equ	0xFDB
 45123                           fsr2h	equ	0xFDA
 45124                           fsr2l	equ	0xFD9
 45125                           status	equ	0xFD8
 45126                           
 45127                           	psect	rparam
 45128  0000                     pclatu	equ	0xFFB
 45129                           pclath	equ	0xFFA
 45130                           tblptru	equ	0xFF8
 45131                           tblptrh	equ	0xFF7
 45132                           tblptrl	equ	0xFF6
 45133                           tablat	equ	0xFF5
 45134                           prodh	equ	0xFF4
 45135                           prodl	equ	0xFF3
 45136                           intcon	equ	0xFF2
 45137                           intcon2	equ	0xFF1
 45138                           indf0	equ	0xFEF
 45139                           postinc0	equ	0xFEE
 45140                           plusw0	equ	0xFEB
 45141                           fsr0h	equ	0xFEA
 45142                           fsr0l	equ	0xFE9
 45143                           wreg	equ	0xFE8
 45144                           indf1	equ	0xFE7
 45145                           postdec1	equ	0xFE5
 45146                           fsr1h	equ	0xFE2
 45147                           fsr1l	equ	0xFE1
 45148                           bsr	equ	0xFE0
 45149                           indf2	equ	0xFDF
 45150                           postinc2	equ	0xFDE
 45151                           postdec2	equ	0xFDD
 45152                           plusw2	equ	0xFDB
 45153                           fsr2h	equ	0xFDA
 45154                           fsr2l	equ	0xFD9
 45155                           status	equ	0xFD8


Data Sizes:
    Strings     4010
    Constant    657
    Data        60
    BSS         635
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      80
    BANK0           160    149     160
    BANK1           256    255     255
    BANK2           256    149     243
    BANK3           256    229     245
    BANK4           256      0     241
    BANK5           256      0     110
    BANK6           256      0     200
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_180(CODE[7]), sprintf@c(BANK0[1]), Frequency(CODE[4]), PCBVersion(CODE[5]), 
		 -> FirmVersion(CODE[9]), BluetoothInitialSetup@BroadcastTEMP(BANK1[21]), GetNumber@temp(BANK0[4]), main@BroadcastTEMP(BANK3[21]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_135(CODE[19]), STR_133(CODE[15]), STR_115(CODE[19]), STR_113(CODE[27]), 
		 -> STR_112(CODE[16]), STR_109(CODE[21]), STR_107(CODE[20]), STR_92(CODE[27]), 
		 -> STR_78(CODE[44]), STR_77(CODE[54]), STR_76(CODE[54]), STR_75(CODE[63]), 
		 -> STR_53(CODE[44]), STR_52(CODE[46]), STR_50(CODE[44]), STR_49(CODE[21]), 
		 -> STR_35(CODE[17]), STR_34(CODE[17]), STR_33(CODE[20]), STR_31(CODE[23]), 
		 -> STR_30(CODE[21]), STR_29(CODE[21]), STR_21(CODE[4]), STR_19(CODE[11]), 
		 -> STR_18(CODE[28]), STR_12(CODE[4]), STR_11(CODE[7]), STR_10(CODE[4]), 
		 -> STR_9(CODE[24]), STR_7(CODE[4]), STR_5(CODE[23]), STR_4(CODE[15]), 
		 -> STR_1(CODE[50]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 100
		 -> UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@buf(BANK1[50]), EnterCommandMode@buf(BANK1[50]), Init_System@buf(BANK1[50]), 
		 -> main@buf(BANK3[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    SendRF_wait@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(CODE[16]), Conf2_ChannelH_3_ON(CODE[16]), Conf2_ChannelH_2_OFF(CODE[16]), Conf2_ChannelH_2_ON(CODE[16]), 
		 -> Conf2_ChannelH_1_OFF(CODE[16]), Conf2_ChannelH_1_ON(CODE[16]), Conf2_ChannelD_OFF(CODE[16]), Conf2_ChannelD_ON(CODE[16]), 
		 -> Conf2_ChannelB_OFF(CODE[16]), Conf2_ChannelB_ON(CODE[16]), Conf1_ChannelF(CODE[12]), Conf1_ChannelE(CODE[12]), 
		 -> Conf1_ChannelD(CODE[12]), 

    SendRF@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(CODE[16]), Conf2_ChannelH_3_ON(CODE[16]), Conf2_ChannelH_2_OFF(CODE[16]), Conf2_ChannelH_2_ON(CODE[16]), 
		 -> Conf2_ChannelH_1_OFF(CODE[16]), Conf2_ChannelH_1_ON(CODE[16]), Conf2_ChannelD_OFF(CODE[16]), Conf2_ChannelD_ON(CODE[16]), 
		 -> Conf2_ChannelB_OFF(CODE[16]), Conf2_ChannelB_ON(CODE[16]), Conf1_ChannelF(CODE[12]), Conf1_ChannelE(CODE[12]), 
		 -> Conf1_ChannelD(CODE[12]), 

    UseBluetooth@String	PTR unsigned char  size(2) Largest target is 100
		 -> main@BluetoothString(BANK3[100]), 

    DecodeNEC@address	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecAddress(BANK2[1]), IRaddress(BANK0[1]), 

    DecodeNEC@command	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecCommand(BANK2[1]), IRcommand(BANK0[1]), 

    UseIRCode@Code	PTR unsigned char  size(2) Largest target is 1
		 -> IR_New_Code(BANK3[1]), 

    IRrawToNEC@NEC	PTR unsigned long  size(2) Largest target is 4
		 -> IR_NEC(BANK3[4]), 

    IRrawToNEC@Raw	PTR unsigned int  size(2) Largest target is 200
		 -> IRRawCode(BANK6[200]), 

    GetEEPROM2@Temp	PTR struct EEdata2 size(2) Largest target is 64
		 -> SyncEEPROMToGlobal@Temp2(BANK0[64]), 

    GetEEPROM1@Temp	PTR struct EEdata size(2) Largest target is 30
		 -> SyncEEPROMToGlobal@Temp1(BANK0[30]), 

    InternalADC_Read@ADCcounts	PTR unsigned int  size(2) Largest target is 2
		 -> ReadVoltage@temp(BANK0[2]), 

    UARTcommandMenu@Desc	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_176(CODE[32]), STR_175(CODE[31]), STR_174(CODE[32]), STR_173(CODE[31]), 
		 -> STR_172(CODE[32]), STR_171(CODE[31]), STR_170(CODE[20]), STR_169(CODE[19]), 
		 -> STR_168(CODE[23]), STR_167(CODE[22]), STR_166(CODE[19]), STR_165(CODE[19]), 
		 -> STR_164(CODE[19]), STR_162(CODE[40]), STR_160(CODE[46]), STR_158(CODE[46]), 
		 -> STR_156(CODE[46]), STR_154(CODE[46]), STR_152(CODE[46]), STR_150(CODE[46]), 
		 -> STR_148(CODE[49]), STR_146(CODE[49]), STR_144(CODE[49]), STR_142(CODE[49]), 
		 -> STR_140(CODE[49]), STR_138(CODE[49]), STR_136(CODE[24]), STR_134(CODE[25]), 
		 -> STR_131(CODE[28]), STR_128(CODE[33]), STR_126(CODE[22]), STR_124(CODE[35]), 
		 -> STR_122(CODE[32]), STR_120(CODE[10]), 

    UARTcommandMenu@Command	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_161(CODE[5]), STR_159(CODE[13]), STR_157(CODE[13]), STR_155(CODE[13]), 
		 -> STR_153(CODE[13]), STR_151(CODE[13]), STR_149(CODE[13]), STR_147(CODE[11]), 
		 -> STR_145(CODE[11]), STR_143(CODE[11]), STR_141(CODE[11]), STR_139(CODE[11]), 
		 -> STR_137(CODE[11]), STR_130(CODE[8]), STR_127(CODE[22]), STR_125(CODE[10]), 
		 -> STR_123(CODE[8]), STR_121(CODE[6]), STR_119(CODE[4]), Conf2_ChannelH_3_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_3_ON_STR(CODE[20]), Conf2_ChannelH_2_OFF_STR(CODE[21]), Conf2_ChannelH_2_ON_STR(CODE[20]), Conf2_ChannelH_1_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_1_ON_STR(CODE[20]), Conf2_ChannelD_OFF_STR(CODE[19]), Conf2_ChannelD_ON_STR(CODE[18]), Conf2_ChannelB_OFF_STR(CODE[19]), 
		 -> Conf2_ChannelB_ON_STR(CODE[18]), Conf1_ChannelF_STR(CODE[15]), Conf1_ChannelE_STR(CODE[15]), Conf1_ChannelD_STR(CODE[15]), 
		 -> UseBluetooth@buf(BANK2[100]), 

    UARTstringCRLN_CONST@data	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_179(CODE[36]), STR_177(CODE[27]), STR_163(CODE[13]), STR_132(CODE[13]), 
		 -> STR_129(CODE[21]), STR_118(CODE[17]), STR_114(CODE[5]), STR_111(CODE[23]), 
		 -> STR_110(CODE[29]), STR_105(CODE[57]), STR_104(CODE[64]), STR_103(CODE[41]), 
		 -> STR_102(CODE[53]), STR_101(CODE[57]), STR_99(CODE[57]), STR_96(CODE[24]), 
		 -> STR_95(CODE[34]), STR_94(CODE[44]), STR_93(CODE[18]), STR_91(CODE[44]), 
		 -> STR_90(CODE[46]), STR_87(CODE[46]), STR_84(CODE[29]), STR_83(CODE[18]), 
		 -> STR_82(CODE[29]), STR_79(CODE[44]), STR_74(CODE[46]), STR_73(CODE[42]), 
		 -> STR_72(CODE[50]), STR_71(CODE[50]), STR_69(CODE[31]), STR_68(CODE[31]), 
		 -> STR_67(CODE[37]), STR_66(CODE[37]), STR_65(CODE[37]), STR_61(CODE[18]), 
		 -> STR_60(CODE[14]), STR_59(CODE[9]), STR_58(CODE[20]), STR_57(CODE[16]), 
		 -> STR_56(CODE[7]), STR_55(CODE[35]), STR_54(CODE[37]), STR_51(CODE[47]), 
		 -> STR_46(CODE[17]), STR_45(CODE[9]), STR_44(CODE[18]), STR_43(CODE[9]), 
		 -> STR_42(CODE[22]), STR_41(CODE[11]), STR_40(CODE[20]), STR_39(CODE[7]), 
		 -> STR_38(CODE[31]), STR_36(CODE[33]), STR_32(CODE[32]), STR_28(CODE[31]), 
		 -> STR_27(CODE[31]), STR_25(CODE[29]), STR_23(CODE[29]), SYNTAX_ERR(CODE[14]), 
		 -> STR_3(CODE[16]), STR_2(CODE[24]), ProjectName(CODE[26]), 

    UARTstringCRLN@data	PTR unsigned char  size(2) Largest target is 100
		 -> UseBluetooth@buf(BANK2[100]), BluetoothFirmware2(BANK5[30]), BluetoothFirmware1(BANK5[30]), main@buf(BANK3[100]), 

    UARTstring_CONST@data	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_178(CODE[28]), STR_117(CODE[13]), STR_100(CODE[35]), STR_98(CODE[38]), 
		 -> STR_89(CODE[24]), STR_86(CODE[60]), STR_81(CODE[32]), STR_70(CODE[14]), 
		 -> SYNTAX_ERR(CODE[14]), STR_20(CODE[5]), STR_17(CODE[3]), STR_16(CODE[6]), 
		 -> STR_15(CODE[9]), STR_14(CODE[20]), STR_13(CODE[9]), STR_8(CODE[3]), 
		 -> STR_6(CODE[4]), CRLN(CODE[3]), 

    UARTstring@data	PTR unsigned char  size(2) Largest target is 100
		 -> UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@buf(BANK1[50]), ReceivedString(BANK4[100]), 

    GetStringAfterComma@result	PTR unsigned char  size(2) Largest target is 10
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    GetStringAfterComma@This	PTR unsigned char  size(2) Largest target is 100
		 -> main@BluetoothString(BANK3[100]), 

    StringAddEqual@Input	PTR unsigned char  size(2) Largest target is 100
		 -> ReceivedString(BANK4[100]), main@BluetoothString(BANK3[100]), 

    GetNumberUnsigned@result	PTR unsigned long  size(2) Largest target is 4
		 -> UseBluetooth@temp(BANK2[4]), UseBluetooth@EnteredNEC(BANK2[4]), 

    GetNumberUnsigned@This	PTR unsigned char  size(2) Largest target is 100
		 -> main@BluetoothString(BANK3[100]), 

    GetNumber@result	PTR long  size(2) Largest target is 4
		 -> UseBluetooth@SerialNumberTEMP(BANK2[4]), 

    GetNumber@This	PTR unsigned char  size(2) Largest target is 100
		 -> ReceivedString(BANK4[100]), 

    lowercaseChar@Input	PTR unsigned char  size(2) Largest target is 1
		 -> GetNumberUnsigned@tempThis(BANK0[1]), GetNumber@tempThis(BANK0[1]), StringContainsCaseInsensitive@tempThat(BANK0[1]), StringContainsCaseInsensitive@tempThis(BANK0[1]), 
		 -> StringMatchCaseInsensitive@tempThat(BANK0[1]), StringMatchCaseInsensitive@tempThis(BANK0[1]), 

    lowercaseString@Input	PTR unsigned char  size(2) Largest target is 10
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    StringContainsCaseInsensitive@This	PTR const unsigned char  size(2) Largest target is 100
		 -> Conf2_Channels(CODE[4]), Conf1_Channels(CODE[4]), CommandString(BANK4[100]), main@BluetoothString(BANK3[100]), 

    StringContainsCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_64(CODE[7]), STR_63(CODE[9]), STR_62(CODE[7]), STR_48(CODE[4]), 
		 -> STR_47(CODE[13]), STR_26(CODE[4]), STR_24(CODE[6]), STR_22(CODE[6]), 
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), BluetoothInitialSetup@buf(BANK1[50]), 

    StringContains@This	PTR const unsigned char  size(2) Largest target is 100
		 -> CommandString(BANK4[100]), main@BluetoothString(BANK3[100]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_37(CODE[2]), BluetoothInitialSetup@buf(BANK1[50]), EnterCommandMode@buf(BANK1[50]), 

    StringMatchCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_108(CODE[8]), STR_106(CODE[8]), STR_97(CODE[22]), STR_85(CODE[10]), 
		 -> STR_80(CODE[6]), Conf2_ChannelH_3_OFF_STR(CODE[21]), Conf2_ChannelH_3_ON_STR(CODE[20]), Conf2_ChannelH_2_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_2_ON_STR(CODE[20]), Conf2_ChannelH_1_OFF_STR(CODE[21]), Conf2_ChannelH_1_ON_STR(CODE[20]), Conf2_ChannelD_OFF_STR(CODE[19]), 
		 -> Conf2_ChannelD_ON_STR(CODE[18]), Conf2_ChannelB_OFF_STR(CODE[19]), Conf2_ChannelB_ON_STR(CODE[18]), Conf1_ChannelF_STR(CODE[15]), 
		 -> Conf1_ChannelE_STR(CODE[15]), Conf1_ChannelD_STR(CODE[15]), 

    StringMatchCaseInsensitive@This	PTR const unsigned char  size(2) Largest target is 100
		 -> main@BluetoothString(BANK3[100]), 

    StringMatch@That	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_116(CODE[4]), STR_88(CODE[5]), 

    StringMatch@This	PTR const unsigned char  size(2) Largest target is 100
		 -> ReceivedString(BANK4[100]), main@BluetoothString(BANK3[100]), 

    BufferCopy@from	PTR unsigned char  size(2) Largest target is 255
		 -> BluetoothInitialSetup@BluetoothVersionLine2(BANK1[30]), BluetoothInitialSetup@BluetoothVersionLine1(BANK1[30]), StringAddEqual@temp(BANK1[255]), Init_System@buf(BANK1[50]), 
		 -> BluetoothBroadcast(BANK4[21]), ReceivedString(BANK4[100]), 

    BufferCopy@to	PTR unsigned char  size(2) Largest target is 100
		 -> BluetoothInitialSetup@BroadcastTEMP(BANK1[21]), BluetoothFirmware2(BANK5[30]), BluetoothFirmware1(BANK5[30]), BluetoothBroadcast(BANK4[21]), 
		 -> ReceivedString(BANK4[100]), main@BroadcastTEMP(BANK3[21]), main@BluetoothString(BANK3[100]), 

    cleanBuffer16bit@data	PTR unsigned int  size(2) Largest target is 200
		 -> IRRawCode(BANK6[200]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 255
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@BluetoothVersionLine2(BANK1[30]), BluetoothInitialSetup@BluetoothVersionLine1(BANK1[30]), 
		 -> BluetoothInitialSetup@BroadcastTEMP(BANK1[21]), BluetoothInitialSetup@buf(BANK1[50]), CommandString(BANK4[100]), StringAddEqual@temp(BANK1[255]), 
		 -> BluetoothFirmware2(BANK5[30]), BluetoothFirmware1(BANK5[30]), BluetoothBroadcast(BANK4[21]), ReceivedString(BANK4[100]), 
		 -> main@BroadcastTEMP(BANK3[21]), main@BluetoothString(BANK3[100]), main@buf(BANK3[100]), 

    IsAlphaNumericString@data	PTR unsigned char  size(2) Largest target is 100
		 -> ReceivedString(BANK4[100]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_IRrawToNEC

Critical Paths under _low_isr in COMRAM

    _low_isr->i1_UARTstring_CONST
    i1_UARTstring_CONST->i1_UARTchar_CONST
    i1_UARTstring->i1_UARTchar
    _EraseScreen->i1_UARTchar

Critical Paths under _main in BANK0

    _main->_UseBluetooth
    _UseIRCode->_SyncGlobalToEEPROM
    _SendRF_Channel->_SendRF_wait
    _ReadCodeButtons->_delayUS
    _UseBluetooth->_SyncEEPROMToGlobal
    _WaitForIRsignal->_delayUS
    _UARTstringCRLN_CONST->_UARTstring_CONST
    _UARTstringCRLN->_UARTstring_CONST
    _UARTcommandMenu->_UARTstring_CONST
    _StringMatchCaseInsensitive->_lowercaseChar
    _StringAddEqual->_BufferCopy
    _SendRF_wait->_SendRF
    _SendNEC_wait->_SendNEC_bytes
    _SendNEC_bytes->_Reverse_4Byte
    _ReadVoltage->___ftmul
    ___lwtoft->___ftpack
    ___ftdiv->___lwtoft
    _InternalADC_Read->_delayUS
    _IsAlphaNumericString->_IsAlphaNumeric
    _IsAlphaNumeric->_IsLetter
    _IsAlphaNumeric->_IsNumber
    _GetNumberUnsigned->___lmul
    _GetNumber->___lmul
    _EncodeNEC->_Reverse_Byte
    _DecodeNEC->_Reverse_Byte
    _Init_System->_SyncEEPROMToGlobal
    _SyncEEPROMToGlobal->_GetEEPROM2
    _GetEEPROM2->_GetMemoryLong
    _GetEEPROM1->_GetMemoryLong
    _SetEEPROMdefault->_SyncGlobalToEEPROM
    _InitUART->_Round
    _Round->___fttol
    ___altoft->___ftpack
    _InitIR->_cleanBuffer16bit
    _InitBluetooth->_SyncGlobalToEEPROM
    _SyncGlobalToEEPROM->_SetEEPROM2
    _SetEEPROM2->_SetMemoryLong
    _SetEEPROM1->_SetMemoryLong
    _SetMemoryLong->_GetMemoryLong
    _GetMemoryLong->_ReadEEPROM_1Byte
    _SetMemoryChar->_GetMemoryChar
    _GetMemoryChar->_ReadEEPROM_1Byte
    _BluetoothInitialSetup->_sprintf
    _UARTstring->_UARTchar
    _StringContainsCaseInsensitive->_lowercaseChar
    _EnterCommandMode->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftadd
    ___ftsub->___ftadd
    ___ftadd->_fround
    _UARTstring_CONST->_UARTchar_CONST
    _ResetBlue->_delayUS
    _ClearUSART->_ReadUSART
    _BufferCopy->_cleanBuffer

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _UseBluetooth->_StringAddEqual
    _InitBluetooth->_BluetoothInitialSetup
    _BluetoothInitialSetup->_EnterCommandMode

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_UseBluetooth

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               229   229      0  783554
                                              0 BANK3    229   229      0
                      _BlueConnected
                         _BufferCopy
                         _ClearUSART
                _ConfigureOscillator
                            _InitApp
                        _Init_System
                         _LEDTimerON
                          _ReadIRpin
                        _ReadVoltage
                           _UARTchar
                     _UARTchar_CONST
                     _UARTstringCRLN
               _UARTstringCRLN_CONST
                   _UARTstring_CONST
                       _UseBluetooth
                          _UseIRCode
                            ___ftadd
                             ___ftge
                            ___ftsub
                        _cleanBuffer
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _UseIRCode                                           12     6      6   26246
                                            134 BANK0     12     6      6
                          _DecodeNEC
                         _LEDTimerON
                    _ReadCodeButtons
                          _ReadIRpin
                     _ReadPushButton
                     _SendRF_Channel
                 _SyncGlobalToEEPROM
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SendRF_Channel                                       1     1      0    7332
                                             13 BANK0      1     1      0
                        _SendRF_wait
 ---------------------------------------------------------------------------------
 (2) _ReadPushButton                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadCodeButtons                                      1     1      0    3593
                                              9 BANK0      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _UseBluetooth                                       152   149      3  361350
                                            146 BANK0      3     0      3
                                              0 BANK2    149   149      0
              _BluetoothInitialSetup
                         _BufferCopy
                         _ClearUSART
                          _DecodeNEC
                          _EncodeNEC
                          _GetNumber
                  _GetNumberUnsigned
                _GetStringAfterComma
               _IsAlphaNumericString
                        _ReadVoltage
                       _SendNEC_wait
                        _SendRF_wait
                         _SetEEPROM2
                     _StringAddEqual
                     _StringContains
      _StringContainsCaseInsensitive
                        _StringMatch
         _StringMatchCaseInsensitive
                 _SyncEEPROMToGlobal
                 _SyncGlobalToEEPROM
                           _UARTchar
                     _UARTchar_CONST
                    _UARTcommandMenu
                         _UARTstring
                     _UARTstringCRLN
               _UARTstringCRLN_CONST
                   _UARTstring_CONST
                    _WaitForIRsignal
                        _cleanBuffer
                            _delayUS
                    _lowercaseString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lowercaseString                                      3     1      2     153
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _WaitForIRsignal                                      1     1      0   21030
                                              9 BANK0      1     1      0
                         _LEDTimerON
                     _UARTchar_CONST
               _UARTstringCRLN_CONST
                   _UARTstring_CONST
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _UARTstringCRLN_CONST                                 2     0      2   10758
                                              4 BANK0      2     0      2
                     _UARTchar_CONST
                   _UARTstring_CONST
 ---------------------------------------------------------------------------------
 (2) _UARTstringCRLN                                       2     0      2    7919
                                              4 BANK0      2     0      2
                           _UARTchar
                   _UARTstring_CONST
 ---------------------------------------------------------------------------------
 (2) _UARTcommandMenu                                     11     7      4   11194
                                              4 BANK0     11     7      4
                           _UARTchar
                   _UARTstring_CONST
 ---------------------------------------------------------------------------------
 (2) _StringMatchCaseInsensitive                           6     2      4    2964
                                              3 BANK0      6     2      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _StringMatch                                          5     1      4     368
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringAddEqual                                     263   261      2   15007
                                             15 BANK0      8     6      2
                                              0 BANK1    255   255      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _SendRF_wait                                          5     0      5    7310
                                              8 BANK0      5     0      5
                         _LEDTimerON
                          _ReadIRpin
                             _SendRF
 ---------------------------------------------------------------------------------
 (4) _SendRF                                               8     3      5     566
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _LEDTimerON                                           0     0      0       0
                        _ResetTimer1
 ---------------------------------------------------------------------------------
 (5) _ResetTimer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SendNEC_wait                                         6     1      5    5081
                                             21 BANK0      6     1      5
                   _CheckReceivingIR
                          _ReadIRpin
                      _SendNEC_bytes
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _SendNEC_bytes                                        5     0      5    1039
                                             16 BANK0      5     0      5
                      _Reverse_4Byte
 ---------------------------------------------------------------------------------
 (4) _Reverse_4Byte                                       16    12      4     823
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (3) _CheckReceivingIR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadVoltage                                          8     5      3   16790
                                             41 BANK0      8     5      3
                   _InternalADC_Read
                  _VoltageDividerOFF
                   _VoltageDividerON
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2234
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    2658
                                             11 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) _VoltageDividerON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _VoltageDividerOFF                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InternalADC_Read                                     6     4      2    3764
                                              9 BANK0      6     4      2
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _IsAlphaNumericString                                 2     0      2     307
                                              2 BANK0      2     0      2
                     _IsAlphaNumeric
 ---------------------------------------------------------------------------------
 (3) _IsAlphaNumeric                                       1     1      0     198
                                              1 BANK0      1     1      0
                           _IsLetter
                           _IsNumber
 ---------------------------------------------------------------------------------
 (4) _IsNumber                                             1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetStringAfterComma                                  8     3      5     532
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _GetNumberUnsigned                                   19    14      5    3036
                                             12 BANK0     19    14      5
                           _IsLetter
                             ___lmul
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _GetNumber                                           20    15      5    2319
                                             12 BANK0     20    15      5
                           _IsLetter
                             ___lmul
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     450
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _IsLetter                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EncodeNEC                                           41    37      4     515
                                              4 BANK0     41    37      4
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (2) _DecodeNEC                                           15     7      8    1243
                                              4 BANK0     15     7      8
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (3) _Reverse_Byte                                         4     4      0     207
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Init_System                                         50    50      0  276048
                                            187 BANK1     50    50      0
                         _BufferCopy
                  _EEPROMinitialized
                            _InitADC
                      _InitBluetooth
                             _InitIR
                         _InitTimers
                           _InitUART
                         _SetEEPROM2
                   _SetEEPROMdefault
                 _SyncEEPROMToGlobal
                 _SyncGlobalToEEPROM
                        _cleanBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _SyncEEPROMToGlobal                                 101   101      0    3960
                                             45 BANK0    101   101      0
                         _GetEEPROM1
                         _GetEEPROM2
 ---------------------------------------------------------------------------------
 (3) _GetEEPROM2                                           8     6      2    1661
                                             37 BANK0      8     6      2
                      _GetMemoryChar
                      _GetMemoryLong
 ---------------------------------------------------------------------------------
 (3) _GetEEPROM1                                           8     6      2    1637
                                             37 BANK0      7     5      2
                      _GetMemoryChar
                      _GetMemoryLong
 ---------------------------------------------------------------------------------
 (2) _SetEEPROMdefault                                     5     5      0   10229
                                            134 BANK0      5     5      0
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (2) _InitUART                                            18    14      4   10863
                                             85 BANK0     18    14      4
                         _ClearUSART
                   _Local_CloseUSART
                          _OpenUSART
                              _Round
                            ___fttol
                            ___lldiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) _Round                                                7     4      3    6633
                                             78 BANK0      7     4      3
                           ___altoft
                            ___ftadd
                            ___fttol
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    2350
                                              8 BANK0     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _Local_CloseUSART                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimers                                           0     0      0       0
                         _InitTimer1
                         _InitTimer2
                         _InitTimer3
 ---------------------------------------------------------------------------------
 (3) _InitTimer3                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitIR                                               0     0      0     295
                         _InitTimer0
                          _ReadIRpin
                        _ResetTimer0
                   _cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (3) _cleanBuffer16bit                                     8     4      4     295
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _ResetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ReadIRpin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitBluetooth                                        0     0      0  171036
                _BluetoothConfigured
              _BluetoothInitialSetup
                         _ClearUSART
                          _ResetBlue
                 _SyncGlobalToEEPROM
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _SyncGlobalToEEPROM                                   1     1      0    9889
                                            133 BANK0      1     1      0
                         _SetEEPROM1
                         _SetEEPROM2
 ---------------------------------------------------------------------------------
 (3) _SetEEPROM2                                          79    11     68    5049
                                             54 BANK0     79    11     68
                      _SetMemoryChar
                      _SetMemoryLong
 ---------------------------------------------------------------------------------
 (3) _SetEEPROM1                                          45    11     34    4815
                                             54 BANK0     44    10     34
                      _SetMemoryChar
                      _SetMemoryLong
 ---------------------------------------------------------------------------------
 (4) _SetMemoryLong                                       17    12      5    2341
                                             37 BANK0     17    12      5
                      _GetMemoryLong
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _GetMemoryLong                                       33    29      4     742
                                              4 BANK0     33    29      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (4) _SetMemoryChar                                        3     2      1    1958
                                             10 BANK0      3     2      1
                      _GetMemoryChar
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _WriteEEPROM_1Byte                                    5     2      3    1008
                                              0 BANK0      5     2      3
                      _EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (6) _EEPROM_UNLOCK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _GetMemoryChar                                        6     2      4     583
                                              4 BANK0      6     2      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (6) _ReadEEPROM_1Byte                                     4     2      2     538
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _BluetoothInitialSetup                              137   137      0  151835
                                            128 BANK0      1     1      0
                                             51 BANK1    136   136      0
                         _BufferCopy
                         _ClearUSART
                   _EnterCommandMode
                     _StringContains
      _StringContainsCaseInsensitive
                         _UARTstring
                   _UARTstring_CONST
                        _cleanBuffer
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _UARTstring                                           2     0      2     383
                                              1 BANK0      2     0      2
                           _UARTchar
 ---------------------------------------------------------------------------------
 (3) _UARTchar                                             1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _StringContainsCaseInsensitive                       11     7      4    2253
                                              3 BANK0     11     7      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (3) _lowercaseChar                                        3     1      2     450
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _EnterCommandMode                                    51    51      0   71672
                                              0 BANK1     51    51      0
                      _BlueConnected
                         _ClearUSART
                          _ResetBlue
                     _StringContains
                   _UARTstring_CONST
                        _cleanBuffer
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             51    37     14   50624
                                             78 BANK0     50    36     14
                        _ReadVoltage (ARG)
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3   10348
                                             41 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3   10150
                                             41 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2335
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4496
                                             26 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1580
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     431
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     574
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    2345
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     671
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     802
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     572
                                             63 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lltoft (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4027
                                             63 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3602
                                             51 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2148
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6    1032
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _UARTstring_CONST                                     2     0      2    6614
                                              2 BANK0      2     0      2
                     _UARTchar_CONST
 ---------------------------------------------------------------------------------
 (4) _UARTchar_CONST                                       2     2      0      67
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StringContains                                       9     5      4    1449
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _ResetBlue                                            0     0      0    3566
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _delayUS                                              9     5      4    3566
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _ClearUSART                                           0     0      0      23
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (3) _ReadUSART                                            1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _BlueConnected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BufferCopy                                           7     1      6    8254
                                              8 BANK0      7     1      6
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (1) _cleanBuffer                                          8     4      4    5723
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _BluetoothConfigured                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
                           _ResetADC
 ---------------------------------------------------------------------------------
 (3) _ResetADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EEPROMinitialized                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                             18    18      0     699
                                              4 COMRAM    18    18      0
                        _EraseScreen
                        _IsCharacter
                    i1_BlueConnected
                        i1_ReadUSART
                         i1_UARTchar
                   i1_UARTchar_CONST
                       i1_UARTstring
                 i1_UARTstring_CONST
 ---------------------------------------------------------------------------------
 (10) i1_UARTstring_CONST                                  2     0      2     138
                                              2 COMRAM     2     0      2
                   i1_UARTchar_CONST
 ---------------------------------------------------------------------------------
 (11) i1_UARTchar_CONST                                    2     2      0      67
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) i1_UARTstring                                        2     0      2     115
                                              1 COMRAM     2     0      2
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (10) i1_ReadUSART                                         1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i1_BlueConnected                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _IsCharacter                                         1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EraseScreen                                         2     2      0      90
                                              1 COMRAM     2     2      0
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (11) i1_UARTchar                                          1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                           21    21      0    1808
                                             36 COMRAM    21    21      0
                         _IRrawToNEC
                        _ResetTimer3
                          _SetTimer0
                        i2_ReadIRpin
                      i2_ResetTimer0
                 i2_cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (13) i2_cleanBuffer16bit                                  8     4      4     143
                                             22 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (13) i2_ResetTimer0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_ReadIRpin                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _SetTimer0                                           2     0      2     108
                                             22 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _ResetTimer3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _IRrawToNEC                                         14     9      5    1400
                                             22 COMRAM    14     9      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueConnected
   _BufferCopy
     _cleanBuffer
   _ClearUSART
     _ReadUSART
   _ConfigureOscillator
   _InitApp
   _Init_System
     _BufferCopy
       _cleanBuffer
     _EEPROMinitialized
     _InitADC
       _ResetADC
     _InitBluetooth
       _BluetoothConfigured
       _BluetoothInitialSetup
         _BufferCopy
           _cleanBuffer
         _ClearUSART
           _ReadUSART
         _EnterCommandMode
           _BlueConnected
           _ClearUSART
             _ReadUSART
           _ResetBlue
             _delayUS
           _StringContains
           _UARTstring_CONST
             _UARTchar_CONST
           _cleanBuffer
           _delayUS
           _sprintf
             _ReadVoltage (ARG)
               _InternalADC_Read
                 _delayUS
               _VoltageDividerOFF
               _VoltageDividerON
               ___ftdiv
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lwtoft
                 ___ftpack
               _delayUS
             ___awdiv (ARG)
               ___awmod (ARG)
             ___ftadd (ARG)
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftge (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftsub (ARG)
               ___ftadd
                 ___ftpack
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftdiv (ARG)
                       ___ftpack
                       ___lwtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftdiv (ARG)
                       ___ftpack
                       ___lwtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
               ___lldiv (ARG)
             ___lltoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             __div_to_l_ (ARG)
             __tdiv_to_l_ (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _isdigit (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _StringContains
         _StringContainsCaseInsensitive
           _lowercaseChar
         _UARTstring
           _UARTchar
         _UARTstring_CONST
           _UARTchar_CONST
         _cleanBuffer
         _delayUS
         _sprintf
           _ReadVoltage (ARG)
             _InternalADC_Read
               _delayUS
             _VoltageDividerOFF
             _VoltageDividerON
             ___ftdiv
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lwtoft
               ___ftpack
             _delayUS
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftsub (ARG)
             ___ftadd
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_ (ARG)
           __tdiv_to_l_ (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _ClearUSART
         _ReadUSART
       _ResetBlue
         _delayUS
       _SyncGlobalToEEPROM
         _SetEEPROM1
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
         _SetEEPROM2
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
       _cleanBuffer
     _InitIR
       _InitTimer0
       _ReadIRpin
       _ResetTimer0
       _cleanBuffer16bit
     _InitTimers
       _InitTimer1
       _InitTimer2
       _InitTimer3
     _InitUART
       _ClearUSART
         _ReadUSART
       _Local_CloseUSART
       _OpenUSART
       _Round
         ___altoft
           ___ftpack
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___fttol
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___lltoft
         ___ftpack
     _SetEEPROM2
       _SetMemoryChar
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
       _SetMemoryLong
         _GetMemoryLong
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
     _SetEEPROMdefault
       _SyncGlobalToEEPROM
         _SetEEPROM1
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
         _SetEEPROM2
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
     _SyncEEPROMToGlobal
       _GetEEPROM1
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
       _GetEEPROM2
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
     _SyncGlobalToEEPROM
       _SetEEPROM1
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
       _SetEEPROM2
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _cleanBuffer
     _sprintf
       _ReadVoltage (ARG)
         _InternalADC_Read
           _delayUS
         _VoltageDividerOFF
         _VoltageDividerON
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft
           ___ftpack
         _delayUS
       ___awdiv (ARG)
         ___awmod (ARG)
       ___ftadd (ARG)
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _LEDTimerON
     _ResetTimer1
   _ReadIRpin
   _ReadVoltage
     _InternalADC_Read
       _delayUS
     _VoltageDividerOFF
     _VoltageDividerON
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lwtoft
       ___ftpack
     _delayUS
   _UARTchar
   _UARTchar_CONST
   _UARTstringCRLN
     _UARTchar
     _UARTstring_CONST
       _UARTchar_CONST
   _UARTstringCRLN_CONST
     _UARTchar_CONST
     _UARTstring_CONST
       _UARTchar_CONST
   _UARTstring_CONST
     _UARTchar_CONST
   _UseBluetooth
     _BluetoothInitialSetup
       _BufferCopy
         _cleanBuffer
       _ClearUSART
         _ReadUSART
       _EnterCommandMode
         _BlueConnected
         _ClearUSART
           _ReadUSART
         _ResetBlue
           _delayUS
         _StringContains
         _UARTstring_CONST
           _UARTchar_CONST
         _cleanBuffer
         _delayUS
         _sprintf
           _ReadVoltage (ARG)
             _InternalADC_Read
               _delayUS
             _VoltageDividerOFF
             _VoltageDividerON
             ___ftdiv
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lwtoft
               ___ftpack
             _delayUS
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftsub (ARG)
             ___ftadd
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_ (ARG)
           __tdiv_to_l_ (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _StringContains
       _StringContainsCaseInsensitive
         _lowercaseChar
       _UARTstring
         _UARTchar
       _UARTstring_CONST
         _UARTchar_CONST
       _cleanBuffer
       _delayUS
       _sprintf
         _ReadVoltage (ARG)
           _InternalADC_Read
             _delayUS
           _VoltageDividerOFF
           _VoltageDividerON
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lwtoft
             ___ftpack
           _delayUS
         ___awdiv (ARG)
           ___awmod (ARG)
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftsub (ARG)
           ___ftadd
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___lltoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_ (ARG)
         __tdiv_to_l_ (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _BufferCopy
       _cleanBuffer
     _ClearUSART
       _ReadUSART
     _DecodeNEC
       _Reverse_Byte
     _EncodeNEC
       _Reverse_Byte
     _GetNumber
       _IsLetter
       ___lmul
       _lowercaseChar
     _GetNumberUnsigned
       _IsLetter
       ___lmul
       _lowercaseChar
     _GetStringAfterComma
     _IsAlphaNumericString
       _IsAlphaNumeric
         _IsLetter
         _IsNumber
     _ReadVoltage
       _InternalADC_Read
         _delayUS
       _VoltageDividerOFF
       _VoltageDividerON
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
       _delayUS
     _SendNEC_wait
       _CheckReceivingIR
       _ReadIRpin
       _SendNEC_bytes
         _Reverse_4Byte
       _delayUS
     _SendRF_wait
       _LEDTimerON
         _ResetTimer1
       _ReadIRpin
       _SendRF
     _SetEEPROM2
       _SetMemoryChar
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
       _SetMemoryLong
         _GetMemoryLong
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
     _StringAddEqual
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _StringContains
     _StringContainsCaseInsensitive
       _lowercaseChar
     _StringMatch
     _StringMatchCaseInsensitive
       _lowercaseChar
     _SyncEEPROMToGlobal
       _GetEEPROM1
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
       _GetEEPROM2
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
     _SyncGlobalToEEPROM
       _SetEEPROM1
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
       _SetEEPROM2
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _UARTchar
     _UARTchar_CONST
     _UARTcommandMenu
       _UARTchar
       _UARTstring_CONST
         _UARTchar_CONST
     _UARTstring
       _UARTchar
     _UARTstringCRLN
       _UARTchar
       _UARTstring_CONST
         _UARTchar_CONST
     _UARTstringCRLN_CONST
       _UARTchar_CONST
       _UARTstring_CONST
         _UARTchar_CONST
     _UARTstring_CONST
       _UARTchar_CONST
     _WaitForIRsignal
       _LEDTimerON
         _ResetTimer1
       _UARTchar_CONST
       _UARTstringCRLN_CONST
         _UARTchar_CONST
         _UARTstring_CONST
           _UARTchar_CONST
       _UARTstring_CONST
         _UARTchar_CONST
       _delayUS
     _cleanBuffer
     _delayUS
     _lowercaseString
     _sprintf
       _ReadVoltage (ARG)
         _InternalADC_Read
           _delayUS
         _VoltageDividerOFF
         _VoltageDividerON
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft
           ___ftpack
         _delayUS
       ___awdiv (ARG)
         ___awmod (ARG)
       ___ftadd (ARG)
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _UseIRCode
     _DecodeNEC
       _Reverse_Byte
     _LEDTimerON
       _ResetTimer1
     _ReadCodeButtons
       _delayUS
     _ReadIRpin
     _ReadPushButton
     _SendRF_Channel
       _SendRF_wait
         _LEDTimerON
           _ResetTimer1
         _ReadIRpin
         _SendRF
     _SyncGlobalToEEPROM
       _SetEEPROM1
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
       _SetEEPROM2
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _delayUS
   ___ftadd
     ___ftpack
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftge
   ___ftsub
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lltoft (ARG)
       ___ftpack
   _cleanBuffer
   _delayUS
   _sprintf
     _ReadVoltage (ARG)
       _InternalADC_Read
         _delayUS
       _VoltageDividerOFF
       _VoltageDividerON
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
       _delayUS
     ___awdiv (ARG)
       ___awmod (ARG)
     ___ftadd (ARG)
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
     ___lltoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_ (ARG)
     __tdiv_to_l_ (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _low_isr (ROOT)
   _EraseScreen
     i1_UARTchar
   _IsCharacter
   i1_BlueConnected
   i1_ReadUSART
   i1_UARTchar
   i1_UARTchar_CONST
   i1_UARTstring
     i1_UARTchar
   i1_UARTstring_CONST
     i1_UARTchar_CONST

 _high_isr (ROOT)
   _IRrawToNEC
   _ResetTimer3
   _SetTimer0
   i2_ReadIRpin
   i2_ResetTimer0
   i2_cleanBuffer16bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      C8      17       78.1%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      6E      15       43.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      F1      13       94.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100     E5      F5      11       95.7%
BITBANK2           100      0       0       8        0.0%
BANK2              100     95      F3       9       94.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FF      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     95      A0       5      100.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      50       1       84.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     5FE      32        0.0%
DATA                 0      0     5FE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Apr 24 18:56:24 2015

                           BufferCopy@shift 006D                          UARTstringCRLN@data 0064  
                    __end_of_Conf1_ChannelD F01F                      __end_of_Conf1_ChannelE F02B  
                    __end_of_Conf1_ChannelF F037                       UseBluetooth@StringPos 00F4  
                              ___altoft@exp 0070                      __end_of_Conf1_Channels F049  
                   __size_of_StringContains 013A                               ??_EraseScreen 0002  
                               _IRcodePlace 004D                               ___altoft@sign 0071  
                      ?_BluetoothConfigured 0001                                ___awdiv@sign 006B  
                       ?_SyncGlobalToEEPROM 0001                                          bsr 000FE0  
                    __end_of_Conf2_Channels F04D                         ___wmul@multiplicand 0070  
                              __CFG_CP0$OFF 000000                                __CFG_CP1$OFF 000000  
                              __CFG_CP2$OFF 000000                                __CFG_CP3$OFF 000000  
                              ___ftadd@exp1 009E                                ___ftadd@exp2 009D  
                               ?_LEDTimerON 0001                          lowercaseChar@Input 0060  
                              ___ftadd@sign 009C                                  _SYNTAX_ERR F005  
                                       l160 4E4A                                         l170 504A  
                                       l337 A2A2                                         l338 A292  
                                       l603 73DC       StringContainsCaseInsensitive@tempThat 006C  
                                       l770 A88A                                         l762 9F22  
                                       l764 9F32                                         l765 9F34  
                                       l758 9EFE       StringContainsCaseInsensitive@tempThis 006B  
                                       l777 A850                                         l882 99FA  
                                       l798 A8BC                                __CFG_CPB$OFF 000000  
                                       _PR2 000FCB                                __CFG_CPD$OFF 000000  
                StringAddEqual@NullPosition 0073                        lowercaseString@Input 0060  
                              IsNumber@data 0060                                  _IRrawToNEC 65B6  
                             _IRbitPosition 004C                         __end_of_IsCharacter A8E0  
                   __size_of_IsAlphaNumeric 0034                                __CFG_BORV$27 000000  
                              ___awmod@sign 0065                                         prod 000FF3  
                                       wreg 000FE8                                  _IRsendCode 003A  
                                _IRsendFlag 00FC                                  _GetEEPROM1 9144  
                                _GetEEPROM2 948A                               main@Connected 03E2  
                             _InitBluetooth A036                                __CFG_LVP$OFF 000000  
                              ___ftdiv@cntr 0074                                ___ftdiv@sign 0079  
                                      l1110 8E38                                        l1104 879A  
                                      l1124 9B5E                                        l1117 8E26  
                                      l2014 46C8                                        l1071 A1A8  
                                      l1151 76C8                                        l2120 1236  
                                      l2033 4B26                                        l1057 A254  
                                      l1065 A8EC                                        l1147 75F2  
                                      l2212 1F3C                                        l3008 6FEA  
                                      l3017 7014                                        l2081 0762  
                                      l3122 9608                                        l3042 7A1C  
                                      l3035 7950                                        l1099 87A6  
                                      l3132 997C                                        l3036 7994  
                                      l3028 829A                                        l2086 098A  
                                      l2079 0706                                        l2192 1BE6  
                                      l2088 09DA                                        l3067 A6D8  
                                      l2356 8F94                                        l2576 3172  
                                      l2921 7BB0                                        l2585 33B8  
                                      l1794 A31E                                        l2964 88C0  
                                      l2993 6EA2                                        l9100 7090  
                                      l9020 A26A                                        l2997 6EDC  
                                      l9110 7EF4                                        l2999 6F06  
                                      l9042 6EB0                                        l9130 7F7E  
                                      l9220 980A                                        l9212 97CC  
                                      l9204 97A6                                        l9140 7FC2  
                                      l9116 7F2E                                        l9070 6F6E  
                                      l9054 6EFC                                        l9214 97DA  
                                      l9134 7F9E                                        l9072 6F7E  
                                      l9064 6F3E                                        l9048 6EEA  
                                      l9160 923E                                        l9216 97E4  
                                      l9224 981A                                        l9208 97B8  
                                      l9144 7FE2                                        l9090 7040  
                                      l9082 6FCA                                        l9074 6F8E  
                                      l9138 7FBA                                        l9084 6FDA  
                                      l9076 6F9A                                        l9500 A34C  
                                      l9172 9274                                        l9228 9830  
                                      l9148 7FFE                                        l9340 5954  
                                      l9422 79CE                                        l9414 79A6  
                                      l9174 9282                                        l9166 9256  
                                      l9326 6B6A                                        l9318 6A76  
                                      l9350 5A56                                        l9512 9374  
                                      l9600 9918                                        l9432 7A00  
                                      l9192 92E4                                        l9184 92BE  
                                      l9176 928C                                        l9602 9922  
                                      l9442 7A54                                        l9434 7A12  
                                      l9426 79E2                                        l9346 5A2A  
                                      l9282 A1BC                                        l9508 9332  
                                      l9532 830E                                        l9612 9E50  
                                      l9188 92CE                                        l9364 5CA4  
                                      l9700 2A30                                        l9622 A1DA  
                                      l9518 93B8                                        l9550 83A2  
                                      l9606 9968                                        l9614 9E62  
                                      l9470 7B26                                        l9462 7AD0  
                                      l9358 5BCE                                        l9640 A686  
                                      l9560 83D4                                        l9448 7A7A  
                                      l9392 78FC                                        l9376 A738  
                                      l9800 2ECE                                        l9712 2A98  
                                      l9704 2A44                                        l9626 A1FA  
                                      l9634 AA06                                        l9562 83E6  
                                      l9554 83B6                                        l9482 7B62  
                                      l9474 7B3A                                        l9386 78C2  
                                      l9810 2F22                                        l9802 2ED4  
                                      l9722 2AE8                                        l9714 2AB6  
                                      l9706 2A5E                                        l9644 A6A0  
                                      l9564 83F4                                        l9580 9594  
                                      l9492 7B94                                        l9660 28A2  
                                      l9590 95F4                                        l9582 959E  
                                      l9494 7BA6                                        l9486 7B76  
                                      l9830 2FDE                                        l9822 2FA4  
                                      l9814 2F28                                        l9806 2EE2  
                                      l9742 2BA6                                        l9718 2AD0  
                                      l9726 2AF0                                        l9662 28BA  
                                      l9654 287E                                        l9568 8412  
                                      l9904 331E                                        l9680 2972  
                                      l9728 2B4A                                        l9656 2894  
                                      l9648 285E                                        l8970 880A  
                                      l9578 9582                                        l9914 3370  
                                      l9850 3070                                        l9818 2F7A  
                                      l9770 2CFA                                        l9906 332E  
                                      l9690 29B2                                        l9674 295E  
                                      l9666 28DC                                        l8980 88A0  
                                      l8972 881A                                        l9932 3406  
                                      l9852 3078                                        l9860 3114  
                                      l9836 2FFA                                        l9844 3030  
                                      l9772 2D10                                        l9692 29BA  
                                      l9676 2964                                        l8982 88B0  
                                      l8974 884C                                        l8966 87F4  
                                      l9598 9906                                        l9942 345A  
                                      l9934 340C                                        l9918 3398  
                                      l9870 3154                                        l9862 3124  
                                      l9846 3044                                        l9838 3014  
                                      l9782 2DA6                                        l9774 2D42  
                                      l9766 2CCA                                        l9758 2C5A  
                                      l9694 29FE                                        l9678 296C  
                                      STR_1 F24D                                        l9952 3476  
                                      l9928 33DA                                        l9792 2E24  
                                      l9776 2D58                                        l9688 29A6  
                                      STR_2 FB99                                        STR_3 FE41  
                                      l8994 88EA                                        l8978 886E  
                                      l9970 350E                                        l9946 3462  
                                      l9938 341A                                        l9962 34BE  
                                      l9882 31AA                                        l9874 3178  
                                      l9794 2E52                                        l9786 2DD4  
                                      l9698 2A24                                        STR_4 FE60  
                                      STR_5 FBF6                                        l8988 88CC  
                                      l9956 34B6                                        l9948 3468  
                                      l9964 34D8                                        l9868 3140  
                                      l9788 2DE0                                        l9796 2E66  
                                      STR_6 FFE0                                        STR_7 FFEC  
                                      l9974 3546                                        l9886 31FC  
                                      STR_8 FFFB                                        STR_9 FB39  
                                      l9984 358C                                        l9992 35C2  
                                      l9976 3552                                        l9896 32F2  
                                      l9994 35CE                                        l9986 3598  
                                      l9898 3302                        ??_SyncGlobalToEEPROM 00E5  
                                      _CRLN F051                                        _LATA 000F89  
                                      _LATB 000F8A                                        _LATC 000F8B  
                                      u9241 789E                                        u8701 6E6E  
                                      u9261 78D8                                        u9451 82EA  
                                      u8901 7ED0                                        u9470 8334  
                                      u9710 2A88                                        u8921 7F0A  
                                      u8691 6E50                                        u9475 832A  
                                      u9717 2A7E                                        u9670 29F4  
                                      u9760 2BEC                                        u9765 2BE0  
                                      u9677 29EA                                        _TMR2 000FCC  
                                      u9980 316A                                        _WPUB 000F7C  
                            ?i2_ResetTimer0 0001                                        _Sent 00FF  
                WriteEEPROM_1Byte@GIEstatus 0063                                  _ClearUSART A984  
                 SetMemoryChar@AddressFirst 006A                                        _main 4C2C  
                              ___ftpack@arg 0060                                ___ftpack@exp 0063  
                                      fsr0h 000FEA                                        fsr1h 000FE2  
                                      indf0 000FEF                                        fsr0l 000FE9  
                                      fsr2h 000FDA                                        indf1 000FE7  
                                      fsr1l 000FE1                                        indf2 000FDF  
                                      fsr2l 000FD9                                  _RFsendCode 0400  
                                _RFsendFlag 0047                                        pclat 000FFA  
                          _UARTstring_CONST A684                                 _RFcodePlace 0046  
                                      prodh 000FF4                         main@BluetoothString 0364  
                                      prodl 000FF3                                        start 01CA  
                             __CFG_IESO$OFF 000000                            Reverse_Byte@This 0063  
                  __end_ofi1_UARTchar_CONST A8B0                                _sprintf$4081 00C2  
                          Reverse_Byte@temp 0062                               __CFG_MCLRE$ON 000000  
                              ___ftmul@cntr 0087                              UARTstring@data 0061  
                               ?i1_UARTchar 0001                                ___param_bank 000010  
                              ___ftmul@sign 0088                             __end_of_InitADC A90C  
                           __end_of_InitApp A406                          i2_cleanBuffer16bit A48C  
     __end_of_StringContainsCaseInsensitive 7888      __size_of_StringContainsCaseInsensitive 01AE  
             _StringContainsCaseInsensitive 76DA                     __size_of_ReadPushButton 000E  
                     ??_BluetoothConfigured 0060                                ___fttol@exp1 00AD  
                      GetNumberUnsigned@Hex 0078                               ??_Init_System 00F2  
                              ___fttol@lval 00A9                        _Conf2_ChannelH_1_OFF EF78  
                         IRrawToNEC@NECtemp 001E                        _Conf2_ChannelH_2_OFF EF98  
                      _Conf2_ChannelH_3_OFF EFB8                                       l10000 35F8  
                                     l10010 36CA                                       l10022 377A  
                                     l10006 362C                                       l10008 3640  
                                     l10016 374C                                       l10024 3794  
                                     l10104 A540                                       l10018 3766  
                                     l10026 37B8                                       l11010 48F0  
                                     l10060 85E6                                       l10052 8596  
                                     l10132 8F6C                                       l10220 8DB4  
                                     l10212 8D9E                                       l10214 8DA4  
                                     l10072 8660                                       l10056 85DE  
                                     l10048 858C                                       l10312 780A  
                                     l11104 4B6A                                       l11032 4970  
                                     l10232 8E2C                                       l10224 8DBE  
                                     l10208 8D94                                       l11200 8258  
                                     l10170 9DEA                                       l10082 8678  
                                     l10322 7852                                       l10402 A7C8  
                                     l10218 8DAE                                       l12002 8AE2  
                                     l12010 8B08                                       l11210 82AC  
                                     l10076 8664                                       l10308 7806  
                                     l10324 785A                                       l10244 8E64  
                                     l10236 8E32                                       l10260 A67E  
                                     l10252 A668                                       l12100 A30A  
                                     l10166 9DDC                                       l10086 8692  
                                     l10318 7838                                       l10406 A7DE  
                                     l11126 4BFC                                       l11054 49F0  
                                     l10430 8728                                       l10422 8712  
                                     l11302 76BC                                       l12022 8902  
                                     l11312 A95A                                       l10088 869A  
                                     l11136 4C26                                       l10432 872E  
                                     l10416 86E6                                       l11304 76C0  
                                     l10256 A67A                                       l11160 9F58  
                                     l12016 8B30                                       l10272 A874  
                                     l12032 8966                                       l11240 A55E  
                                     l12104 A316                                       l12120 6C2C  
                                     l10178 9E04                                       l10186 9E2A  
                                     l10290 774C                                       l10282 76FC  
                                     l10426 871E                                       l11322 8B64  
                                     l10602 A61A                                       l11226 96AA  
                                     l10514 8FA4                                       l12042 89CA  
                                     l12034 896E                                       l12130 6C8A  
                                     l12114 6BC0                                       l11076 4A70  
                                     l10452 87C6                                       l10444 87A0  
                                     l10436 8738                                       l10612 A144  
                                     l11340 8BC8                                       l11324 8B6A  
                                     l11260 7554                                       l11164 9F80  
                                     l10700 99BE                                       l11180 81F6  
                                     l11228 96BE                                       l10532 9024  
                                     l11148 A4F4                                       l12052 8A06  
                                     l12028 8934                                       l11236 A548  
                                     l13012 1976                                       l12140 6CE8  
                                     l12116 6BE4                                       l10470 80C8  
                                     l10286 7744                                       l10278 76F2  
                                     l10198 A9F8                                       l11350 8BE2  
                                     l11334 8BBC                                       l11318 8B5A  
                                     l11270 75E6                                       l12070 98CC  
                                     l12062 9866                                       l11174 81BC  
                                     l10542 9056                                       l10526 8FDA  
                                     l10518 8FB8                                       l11510 9C12  
                                     l12038 897A                                       l13030 19E2  
                                     l13022 19BC                                       l12150 6D46  
                                     l12126 6C60                                       l12118 6C08  
                                     l10608 A120                                       l11352 8BE8  
                                     l11344 8BD2                                       l11328 8B74  
                                     l11280 7600                                       l11272 75EA  
                                     l11264 755E                                       l11600 5DFE  
                                     l10704 99D0                                       l10544 905C  
                                     l10528 8FE2                                       l11504 A030  
                                     l12048 89E8                                       l12240 9D20  
                                     l13040 1A02                                       l12160 6DA4  
                                     l12136 6CBE                                       l10458 802E  
                                     l11098 4AFE                                       l11450 A09C  
                                     l11362 8C42                                       l11346 8BD8  
                                     l11370 8C4E                                       l11338 8BC2  
                                     l11282 7606                                       l11258 754E  
                                     l11610 5E2A                                       l11522 9C66  
                                     l10570 A466                                       l12226 9CD2  
                                     l13122 1BEC                                       l13042 1A24  
                                     l12082 A9C0                                       l12146 6D1C  
                                     l12402 7178                                       l10468 8042  
                                     l10900 4578                                       l10580 9B1C  
                                     l10660 9F02                                       l10652 9EEA  
                                     l10556 9A5C                                       l11356 8BF2  
                                     l10804 951A                                       l10812 9526  
                                     l11292 7620                                       l11700 60D2  
                                     l11620 5E60                                       l11604 5E18  
                                     l10820 9D54                                       l12180 9BA4  
                                     l13300 20EE                                       l13116 1BBC  
                                     l13108 1B8E                                       l13052 1A4A  
                                     l12156 6D7A                                       l12172 6E02  
                                     l12404 717E                                       l10558 9A6E  
                                     l11366 8C48                                       l11286 7610  
                                     l11710 611C                                       l11702 60DA  
                                     l11630 5E7C                                       l12190 9BC4  
                                     l11526 9C6A                                       l10566 A44C  
                                     l11550 A432                                       l12510 03FE  
                                     l12166 6DD8                                       l12430 7212  
                                     l10496 8160                                       l10912 4610  
                                     l10904 45AA                                       l10672 9F26  
                                     l10664 9F0C                                       l10656 9EF4  
                                     l10648 9EDE                                       l10760 91A0  
                                     l10808 9520                                       l11288 7616  
                                     l12360 7D22                                       l12352 7CC8  
                                     l11632 5E84                                       l11800 6304  
                                     l10840 A97E                                       l12192 9BCC  
                                     l12176 9B7A                                       l11528 9C78  
                                     l11544 A408                                       l11552 A43A  
                                     l13216 1E8A                                       l13208 1E64  
                                     l12504 039E                                       l12096 A2FE  
                                     l12440 722C                                       l12408 7188  
                                     l10850 A9A2                                       l10914 4616  
                                     l10922 4628                                       l10754 9190  
                                     l11298 76B6                                       l11714 613A  
                                     l11650 5EDA                                       l11642 5EAA  
                                     l11626 5E66                                       l11810 6326  
                                     l11730 61BE                                       l11722 6184  
                                     l11474 A5D0                                       l12186 9BB8  
                                     l12194 9BD2                                       l11538 9C9E  
                                     l13402 24A0                                       l13162 1D52  
                                     l13074 1AC2                                       l12530 0548  
                                     l12522 04C4                                       l12514 0440  
                                     l12434 721C                                       l12418 71C0  
                                     l10588 9B6C                                       l10668 9F16  
                                     l10772 91FE                                       l10764 91AA  
                                     l10780 9496                                       l11644 5EB2  
                                     l11564 5D3E                                       l11572 5D68  
                                     l11556 5D04                                       l11812 632E  
                                     l11468 A5B8                                       l11476 A5D8  
                                     l10828 9DA2                                       l11900 7348  
                                     l11492 9FFC                                       l11484 9FC0  
                                     l13404 24A6                                       l13252 1F42  
                                     l13084 1B08                                       l12620 0A8C  
                                     l12452 72D8                                       l12436 7222  
                                     l12460 72E4                                       l12428 720C  
                                     l10926 463C                                       l10918 4622  
                                     l10870 44D8                                       l10758 919A  
                                     l10790 94B0                                       l11662 5F8C  
                                     l11638 5E98                                       l11582 5D98  
                                     l11830 6408                                       l11806 6318  
                                     l11742 61F4                                       l10598 A616  
                                     l12198 9BDC                                       l11910 73BE  
                                     l11494 A00A                                       l13246 1F22  
                                     l13238 1EF4                                       l13158 1D2E  
                                     l13174 1D96                                       l12702 0F88  
                                     l12614 099C                                       l12542 060E  
                                     l12534 058A                                       l12526 0506  
                                     l12518 0482                                       l12550 0674  
                                     l10960 479A                                       l10928 4644  
                                     l10776 9204                                       l10792 94B6  
                                     l10784 94A0                                       l11680 5FF4  
                                     l11672 5FB8                                       l11576 5D74  
                                     l11840 6434                                       l10696 99B4  
                                     l11912 73E2                                       l11488 9FF8  
                                     l13408 24B0                                       l13344 22D6  
                                     l13280 200C                                       l13168 1D74  
                                     l12800 12C2                                       l12712 1078  
                                     l12608 097A                                       l12448 72C8  
                                     l12456 72DE                                       l12392 7140  
                                     l12464 72F2                                       l10786 94A6  
                                     l11690 6074                                       l11818 6356  
                                     l11770 6298                                       l11762 625E  
                                     l11754 624A                                       l11738 61E8  
                                     l11922 7410                                       l11906 7384  
                                     l11914 73E8                                       l13418 2510  
                                     l13362 230C                                       l13354 22EC  
                                     l13426 281A                                       l13338 22A2  
                                     l13282 202E                                       l13290 2072  
                                     l12546 0650                                       l12538 05CC  
                                     l12490 031C                                       l12378 70E0  
                                     l10892 4534                                       l10796 94C0  
                                     l11692 60C8                                       l11676 5FD6  
                                     l11668 5F9A                                       l11596 5DDE  
                                     l11588 5DCA                                       l11860 6544  
                                     l11844 6452                                       l11836 6416  
                                     l11748 6218                                       l11924 7418  
                                     l11916 7404                                       l13348 22E0  
                                     l13276 2004                                       l13284 2050  
                                     l12740 114A                                       l12732 1114  
                                     l12724 10D6                                       l12716 109A  
                                     l12652 0D50                                       l12708 103A  
                                     l12556 0690                                       l12388 7136  
                                     l13700 4D1E                                       l11870 6556  
                                     l11782 62C8                                       l11766 627E  
                                     l11934 7470                                       l13358 2302  
                                     l13198 1E1E                                       l12822 1326  
                                     l12718 10A2                                       l12662 0D82  
                                     l12590 0852                                       l12494 035E  
                                     l12486 02DA                                       l10888 452A  
                                     l11848 6470                                       l11792 62EE  
                                     l11776 62AA                                       l11944 74DA  
                                     l11928 744A                                       l13392 2440  
                                     l13368 2318                                       l12904 15B4  
                                     l12840 138E                                       l12832 136C  
                                     l12752 11B2                                       l12744 116C  
                                     l12736 1136                                       l12592 0864  
                                     l13720 4D6C                                       l13704 4D28  
                                     l10986 4868                                       l10898 4570  
                                     l11858 64F0                                       l11786 62E8  
                                     l11970 8A5E                                       l11962 8A4A  
                                     l11938 747C                                       l12922 16B6  
                                     l12914 15E6                                       l12906 15BA  
                                     l12658 0D74                                       l12498 0382  
                                     l10988 4870                                       l11868 654E  
                                     l11948 74E0                                       l11892 7328  
                                     l13388 2436                                       l12924 16F4  
                                     l12908 15CA                                       l12844 13A6  
                                     l13812 503A                                       l13820 504E  
                                     l13740 4DBE                                       l13724 4D76  
                                     l13716 4D62                                       l11878 6598  
                                     l11982 8A9A                                       l11958 8A28  
                                     l12934 1726                                       l12782 1278  
                                     l12790 1298                                       l12766 120C  
                                     l12758 11D4                                       l13910 5230  
                                     l13806 5008                                       l13750 4E10  
                                     l13734 4DAE                                       l13718 4D66  
                                     l11976 8A88                                       l11896 733C  
                                     l11888 731C                                       l12952 1776  
                                     l12872 1452                                       l12864 140A  
                                     l12776 1262                                       l12688 0F12  
                                     l13912 5234                                       l13840 50EA  
                                     l13760 4EA2                                       l12946 1766  
                                     l12786 1286                                       l12858 13F2  
                                     l12698 0F54                                       l13762 4EAA  
                                     l11996 8ACE                                       l11988 8AB8  
                                     l12964 183C                                       l12948 176C  
                                     l12884 14E8                                       l12876 145C  
                                     l12796 12B0                                       l13772 4ECC  
                                     l13756 4E76                                       l13692 4CE0  
                                     l12966 186A                                       l12958 17F8  
                                     l12894 150A                                       l12990 18FE  
                                     l13854 5134                                       l13766 4EB6  
                                     l12976 189C                                       l12888 14EE  
                                     l13872 5174                                       l13696 4D10  
                                     l12898 1522                                       l12986 18DC  
                                     l13778 4F0C                                       l13868 514A  
                                     l13888 51C2                               ??_ReadVoltage 008C  
                                     ?_main 0001                             __end_of___awdiv 92F0  
                                     _EEADR 000FA9                             __end_of___ftadd 70B8  
                                     STR_10 FFF4                                       STR_11 FF9F  
                                     STR_12 FFF4                                       STR_20 FFCC  
                                     STR_21 FFF0                                       STR_13 FF75  
                                     STR_22 FFBA                                       STR_14 FCCE  
                                     STR_30 FC65                                       STR_15 FF6C  
                                     STR_31 FBB1                                       STR_23 FA24  
                                     STR_24 FFC0                                       STR_16 FFB4  
                                     STR_40 FCE2                                       STR_32 F8EF  
                                     STR_17 FFF8                                       STR_41 FF4D  
                                     STR_33 FD0A                                       STR_25 FA41  
                                     STR_34 FC7E                                       STR_26 FFE8  
                                     STR_42 FC23                                       STR_18 FA7B  
                                     STR_50 F572                                       STR_35 F58D  
                                     STR_43 FF7E                                       STR_19 FF00  
                                     STR_27 F90F                                       STR_51 F3A5  
                                     STR_60 FE6F                                       STR_44 FDB8  
                                     STR_28 F92E                                       STR_36 F80D  
                                     STR_52 F3D4                             __end_of___awmod 983C  
                                     STR_53 F572                                       STR_37 FFE6  
                                     STR_45 FF4F                                       STR_61 FDCA  
                                     STR_29 FC7A                                       STR_62 FFAD  
                                     STR_70 FE7D                                       STR_46 FE10  
                                     STR_38 F9E8                                       STR_54 F739  
                                     STR_39 FFA6                                       STR_63 FF87  
                                     STR_47 FEF3                                       STR_55 F782  
                                     STR_71 F1E9                                       STR_56 FFA6  
                                     STR_48 FD42                                       STR_64 FFAD  
                                     STR_80 FFC6                                       STR_72 F21B  
                                     STR_57 FE21                                       STR_49 FC8F  
                                     STR_81 F8CF                                       STR_65 F6EF  
                                     STR_73 F64E                                       STR_66 F6EF  
                                     STR_90 F544                                       STR_58 FD32  
                                     STR_82 FA07                                       STR_74 F516  
                                     STR_59 FF7E                                       STR_83 FDDC  
                                     STR_67 F714                                       STR_91 F5CA  
                                     STR_75 F094                                       STR_84 FA07  
                                     STR_92 FACF                                       STR_68 F9AA  
                                     STR_76 F148                                       STR_93 FDDC  
                                     STR_85 FF58                                       STR_69 F9C9  
                                     STR_77 F17E                                       STR_78 F5F6  
                                     STR_94 F59E                                       STR_86 F0D3  
                                     STR_95 F7EB                                       STR_79 F622  
                                     STR_87 F544                                       STR_88 FFD6  
                                     STR_96 FB51                                       STR_97 FC39  
                                     STR_89 FB69                                       STR_98 F6C9  
                                     STR_99 F10F                             __end_of___ftdiv 82D4  
                       ?i2_cleanBuffer16bit 0017                             __end_of___ftneg A6E6  
                                     _ANSEL 000F7E                             __end_of___lldiv 961A  
                                     u11000 416E                                       u11010 41DA  
                                     u11020 4246                                       u11005 4162  
                                     u11030 42B2                                       u11015 41CE  
                                     u10320 8616                                       u10400 8EB0  
                                     u11040 431E                                       u11025 423A  
                                     u12010 4B62                                       u11050 438A  
                                     u11035 42A6                                       u10340 864A  
                                     u11060 440E                             __end_of___ftmul 8026  
                                     u10405 8EA4                                       u11045 4312  
                                     u10327 860C                                       u11055 437E  
                                     u11065 4402                                       u10290 85D2  
                                     u10347 8640                                       u10700 77F0  
                           ___awdiv@divisor 0068                                       u11341 9AE2  
                                     u12071 8198                                       u10640 7738  
                                     u10297 85C8                             __end_of___llmod 998E  
                                     u11361 9B26                                       u10730 782C  
                           __end_of___ftsub A378                                       u10707 77E6  
                                     u11435 9706                                       u12091 81D2  
                           __end_of___fttol 8426                                       u10805 3912  
                                     u10750 787C                                       u10670 776E  
                                     u12350 8CD8                                       u10647 772E  
                                     u10815 396C                                       u10680 7794  
                                     u10920 3E0E                                       u10737 7822  
                                     u10905 3C96                                       u10825 39C6  
                                     u10930 3E7A                                       u12355 8CCC  
                                     u13235 6474                                       u10915 3CF0  
                                     u10835 3A20                         __end_of_FirmVersion F040  
                                     u10940 3EE6                                       u10757 7872  
                                     u10677 7764                                       u10925 3E02  
                                     u10845 3A7A                                       u10950 3F52  
                   ReadEEPROM_1Byte@address 0060                                       u10687 778A  
                                     u10935 3E6E                                       u10855 3AD4  
                                     u10775 3804                                       u10960 3FBE  
                                     u10945 3EDA                                       u10865 3B2E  
                                     u10785 385E                                       u10970 402A  
                                     u15050 1C52                                       u10955 3F46  
                                     u10875 3B88                                       u10795 38B8  
                                     u13620 98AC                                       u10980 4096  
                                     u13540 8924                                       u14260 06E4  
                                     u10965 3FB2                                       u10885 3BE2  
                                     u15061 1C6C                                       u10990 4102  
                                     u13550 8956                                       u10975 401E  
                                     u10895 3C3C                                       u14351 0AFA  
                                     u14280 0740                                       u13625 98A0  
                                     u10985 408A                                       u12835 5FF8  
                                     u10995 40F6                                       u13547 891A  
                                     u14380 0BFE                                       u13557 894C  
                                     u13881 7CFE                                       i1l770 A92C  
                       __end_of_EraseScreen A816                                       i1l777 A8A4  
                                     i1l798 A918                             ___awdiv@counter 006A  
                                     _RCREG 000FAE                                       _RCSTA 000FAB  
                                     _TMR0H 000FD7                                       _TMR1H 000FCF  
                                     _TMR0L 000FD6                                       _TMR3H 000FB3  
                                     _TMR1L 000FCE                                       _TMR3L 000FB2  
                                     _SPBRG 000FAF                                  _BufferCopy 9DBE  
                                     _PORTA 000F80                                       _PORTB 000F81  
                                     _PORTC 000F82                                       _RF_IR 004E  
                              InitUART@Baud 00B5                                       _IRbit 003F  
                                     _IRmod 00FB                                       _TXREG 000FAD  
                                     _TXSTA 000FAC                         _ConfigureOscillator AA86  
                           __end_of_delayUS A2D4                               __CFG_PWRT$OFF 000000  
                          _InternalADC_Read 998E                               __CFG_WRT0$OFF 000000  
                             __CFG_WRT1$OFF 000000                               __CFG_WRT2$OFF 000000  
                       ___lmul@multiplicand 0064                               __CFG_WRT3$OFF 000000  
                         _NewReceivedString 03EA                                ___lltoft@exp 0070  
                            __CFG_EBTR0$OFF 000000                              __CFG_FCMEN$OFF 000000  
                            ?_InitBluetooth 0001                              __CFG_EBTR1$OFF 000000  
                            __CFG_EBTR2$OFF 000000                              __CFG_EBTR3$OFF 000000  
                                SendRF@Code 0060                                InitUART@temp 00C3  
                              _IRrawCodeNum 0041                                       _Round A0AC  
                             __CFG_WRTB$OFF 000000                       _BluetoothInitialSetup 4446  
                  __end_of_Local_CloseUSART A9D4                               __CFG_WRTC$OFF 000000  
                     __end_of_BlueConnected AA0C                   GetNumberUnsigned@tempThis 007E  
                             __CFG_WRTD$OFF 000000                            ?_lowercaseString 0060  
                          __end_of_UARTchar A896                              __CFG_EBTRB$OFF 000000  
                           __end_of_dpowers EDEB                                       _scale 57CE  
                                SendRF@size 0063                             __end_of_isdigit A744  
                               SetEEPROM1@i 00C0                                 SetEEPROM1@j 00C1  
                               SetEEPROM2@i 00E2                                 SetEEPROM2@j 00E3  
                               SetEEPROM2@k 00E4                               ___ftpack@sign 0064  
                                     main@i 03E3                             __end_of_low_isr 01CA  
                                     tablat 000FF5                            _RF_IR_Postscaler 004F  
                                     plusw0 000FEB                                       plusw2 000FDB  
                               ?_UARTstring 0061                     InternalADC_Read@channel 006E  
                                     status 000FD8                        ??i2_cleanBuffer16bit 001B  
                           __end_of_sprintf 37C8                              __CFG_HFOFST$ON 000000  
               WriteEEPROM_1Byte@PEIEstatus 0064                        __size_of_cleanBuffer 005A  
                       __size_of_LEDTimerON 0012                       __end_of_GetMemoryChar A7C6  
                      ?_ConfigureOscillator 0001                       __end_of_GetMemoryLong 7EBA  
                             ??_SendRF_wait 006D                          StringContains@That 0062  
                        StringContains@This 0060                                __end_of_CRLN F054  
                             high_isr@IRpin 0037                             __initialization 93BE  
                        StringAddEqual@temp 0100                       __end_of_EEPROM_UNLOCK A8F6  
                                _SetEEPROM1 86AE                                  _SetEEPROM2 8D6A  
                          __end_of_IsLetter A684                                  _InitTimer0 A9A8  
                                _InitTimer1 A9E2                          _Conf1_ChannelD_STR EFD8  
                                _InitTimer2 A9D4                                  _InitTimer3 AA40  
                             high_isr@Time0 0038                          _Conf1_ChannelE_STR EFE7  
                        _Conf1_ChannelF_STR EFF6            __end_of_Conf2_ChannelH_1_OFF_STR EE88  
                                _InitTimers A938                                _IRrepeatflag 0043  
                        __size_of_DecodeNEC 00AE                                __end_of_main 523E  
                          __end_of_IsNumber A87A                       __end_of_Reverse_4Byte 4446  
                          ??_UARTstringCRLN 0066                            __end_of_InitUART 8D6A  
          __end_of_Conf2_ChannelH_2_OFF_STR EE9D                      WaitForIRsignal@timeout 0069  
              __size_of_GetStringAfterComma 011E                              GetNumber@count 0078  
          __end_of_Conf2_ChannelH_3_OFF_STR EEB2                                 _IsCharacter A8C8  
                                    ??_main 00F5                       GetNumberUnsigned@This 006C  
                             ___fttol@sign1 00A8                            __end_of_ResetADC AA1A  
                         GetNumber@negative 0077                               __activetblptr 000003  
                     GetNumberUnsigned@temp 007A                          SendRF@RepeatAmount 0064  
                               ?_IRrawToNEC 0017                          __size_of_GetNumber 0486  
                           _WaitForIRsignal 9CA4                        __size_of__tdiv_to_l_ 01A6  
                        __size_of_EncodeNEC 014E                         __end_of_Init_System 7D4A  
                         SetEEPROMdefault@i 00E9                           SetEEPROMdefault@j 00EA  
                         SetEEPROMdefault@k 00E8                       _Conf2_ChannelB_ON_STR EF14  
                BluetoothInitialSetup@first 01B6                               ?_SendNEC_wait 0075  
                               ?_GetEEPROM1 0085                                 ?_GetEEPROM2 0085  
                     _Conf2_ChannelD_ON_STR EF26                      __size_of_SendNEC_bytes 008A  
                                    ?_Round 00AE                         __end_of_ReadVoltage 96D2  
                         GetNumber@tempThis 007B                                  UseIRCode@i 00F1  
                                UseIRCode@j 00F0                              _StringAddEqual 730C  
                                    _ADCON0 000FC2                                      _ADCON1 000FC1  
                                    _ADCON2 000FC0                         __size_ofi1_UARTchar 0016  
                          __end_of___altoft 9AD2                            ___llmod@dividend 006D  
                                    ?_scale 0089                                      STR_100 F7A5  
                                    STR_101 F10F                                      STR_110 FA5E  
                                    STR_102 F1B4                                      STR_111 FBC8  
                                    STR_103 F678                                      STR_120 FF62  
                                    STR_112 FE31                                      STR_104 F054  
                                    STR_105 F10F                                      STR_121 FFC6  
                                    STR_113 FAEA                                      STR_130 FF90  
                                    STR_114 FFDB                                      STR_106 FF90  
                                    STR_122 F8AF                                      _ADRESH 000FC4  
                                    STR_123 F7E3                                      STR_115 FDA5  
                                    STR_107 FD1E                                      STR_131 FA97  
                                    STR_108 F7E3                                      STR_116 FFE4  
                                    STR_132 FE98                                      STR_124 F7C8  
                                    STR_140 F312                                      _EEADRH 000FAA  
                                    STR_125 FF58                                      STR_117 FB13  
                                    STR_141 FF37                                      STR_133 FE51  
                                    STR_109 FCB9                                      STR_118 FDFF  
                                    STR_126 FC4F                                      STR_134 FB20  
                                    STR_150 F430                                      STR_142 F343  
                                    _ADRESL 000FC3                                      STR_119 FFE4  
                                    STR_127 FC39                                      STR_143 FF0B  
                                    STR_151 FECC                                      STR_135 FD92  
                                    STR_136 FB81                                      STR_128 F82E  
                                    STR_160 F4E8                                      STR_152 F48C  
                                    STR_144 F27F                                      STR_161 FFD1  
                                    STR_145 FF21                                      STR_137 FF16  
                                    STR_153 FED9                                      STR_129 FCA4  
                                    STR_170 FCF6                                      STR_162 F6A1  
                                    STR_154 F4BA                                      STR_146 F2E1  
                                    STR_138 F2B0                                      STR_147 FF42  
                                    STR_139 FF2C                                      STR_155 FEA5  
                                    STR_163 FE8B                                      STR_171 F94D  
                                    STR_180 FF98                                      STR_164 FD46  
                                    STR_172 F84F                                      STR_156 F402  
                                    STR_148 F374                                      STR_157 FEBF  
                                    STR_149 FEB2                                      STR_181 FDEE  
                                    STR_165 FD59                                      STR_173 F96C  
                                    _EEDATA 000FA8                                      STR_166 FD6C  
                                    STR_174 F86F                                      STR_158 F45E  
                                    STR_159 FEE6                                      STR_167 FC0D  
                                    STR_175 F98B                                      STR_168 FBDF  
                                    STR_176 F88F                                      STR_169 FD7F  
                                    STR_177 FB05                                      STR_178 FAB3  
                                    STR_179 F75E                                      _EECON2 000FA7  
                          ___awdiv@dividend 0066                             ??i2_ResetTimer0 0017  
                          __end_of___ftpack 88FA                                      _ANSELH 000F7F  
                         ?_VoltageDividerON 0001                       _Conf2_ChannelB_Status 00F5  
                             ??_ResetTimer0 0060                               ??_ResetTimer1 0060  
                             ??_ResetTimer3 0017                            __end_of___lltoft 9EC8  
                                    i1l1500 0130                                      i1l1506 0182  
                                    i1l1507 017E                                      i1l1491 0164  
                                    i2l1418 54FE                                      i2l1444 55B2  
                                    i2l1364 5362                                      i2l1437 558A  
                                    i2l1381 576C                                      i2l1365 5356  
                                    i2l1438 5580                                      i2l1374 5350  
                                    i2l1366 534C                                      i2l1376 5792  
                                    i2l1377 53C6                                      i2l1394 545A  
                                    i2l1378 538C                                      i2l1484 578E  
                            __CFG_WDTEN$OFF 000000                    StringContains@MatchCount 0067  
                                    _TABLAT 000FF5                            __end_of___lwtoft A770  
                        __size_of_ReadUSART 0018                       _Conf2_ChannelD_Status 00F6  
                             SetTimer0@temp 0017                                      _IR_NEC 03EC  
                        __size_of_ReadIRpin 000E                                      _SPBRGH 000FB0  
                        ??_VoltageDividerON 0060                                 ?_ClearUSART 0001  
                            SetMemoryLong@H 0092                              SetMemoryLong@L 0095  
                                 ??_InitADC 0060                                   ??_InitApp 0060  
                     ??_ConfigureOscillator 0060                                      _InitIR A378  
                                    _SendRF 8F72                              __CFG_XINST$OFF 000000  
                           _UARTcommandMenu 88FA                    GetStringAfterComma@count 0067  
                          __end_of__powers_ EE39                               InitUART@spbrg 00C0  
                          __end_of_high_isr 57CE                             _ReadCodeButtons A2D4  
                        __size_of_OpenUSART 007C                              _StringContains 8574  
                                    ___ftge 92F0                                      ___lmul 9F44  
                  SendNEC_wait@RepeatAmount 0079                                      ___wmul A57E  
                __end_of_SyncEEPROMToGlobal 76DA                                   ??___awdiv 006A  
                               _FirmVersion F037                                   ??___ftadd 0099  
                            __CFG_STVREN$ON 000000                                   ??___awmod 0064  
                                 ??___ftdiv 0071                 ?_StringMatchCaseInsensitive 0063  
                                 ??___ftneg 0063                                   ??___lldiv 0068  
                                 ??___ftmul 0080                                 _EraseScreen A7EE  
                                 ??___llmod 0075                                   ??___ftsub 00A5  
                                 ??___fttol 00A3                           cleanBuffer16bit@i 0067  
                        __size_of_SetTimer0 000A                          __size_of_ResetBlue 00E2  
                       __end_of_SendRF_wait A50C                                ?i1_ReadUSART 0001  
                                    _fround 68E2                           ?_SetEEPROMdefault 0001  
                                    clear_0 93C4                                      clear_1 93D0  
                                    clear_2 93DC                                      clear_3 93E8  
                                    clear_4 93F4                                      clear_5 9400  
                                    clear_6 940C                            ___awdiv@quotient 006C  
                                 ??_delayUS 0064                             ___awmod@divisor 0062  
                        __size_of_UseIRCode 0254                             ___awmod@counter 0064  
                        ??_SetEEPROMdefault 00E6                       ___ftmul@f3_as_product 0084  
                       __size_of_UARTstring 0028                             ??_InitBluetooth 00E6  
                            _IsAlphaNumeric A5EC                                 ?_BufferCopy 0068  
                         ?_cleanBuffer16bit 0060                                __pdataCOMRAM 004C  
                                 ??_isdigit 0060                              ??_SendNEC_wait 007A  
                    ?_BluetoothInitialSetup 0001                      __end_of_StringAddEqual 750C  
                              __mediumconst EDC2                              EncodeNEC@temp1 007C  
                            EncodeNEC@temp2 0080                              EncodeNEC@temp3 0084  
                            EncodeNEC@temp4 0088                                ?i2_ReadIRpin 0001  
                                 ??_low_isr 0005                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                        ??_cleanBuffer16bit 0064                          IRrawToNEC@StartBit 0024  
                          _CommandStringPos 003E                       __end_of_lowercaseChar A79C  
                         __end_of_DecodeNEC 98EA                          i1_UARTstring_CONST A6E6  
                                 ??_sprintf 00BC                __end_of_IsAlphaNumericString A5EC  
                           __CFG_FOSC$HSPLL 000000                GetNumberUnsigned@CommaNumber 006E  
                      UARTcommandMenu@place 006E                          UseBluetooth@String 00F2  
                                __accesstop 0060                     __end_of__initialization 9484  
                                ___altoft@c 0068                                  Round@input 00AE  
                           __CFG_PBADEN$OFF 000000                                  ___ftadd@f1 0093  
                                ___ftadd@f2 0096                                  ___ftge@ff1 0060  
                                ___ftge@ff2 0063                         ?i1_UARTstring_CONST 0003  
                        UseBluetooth@device 0285                               ___rparam_used 000001  
             __size_of_UARTstringCRLN_CONST 0042                         StringAddEqual@Input 006F  
                                ___ftdiv@f1 006B                                  ___ftdiv@f2 006E  
                                ___ftdiv@f3 0075                                  ___ftneg@f1 0060  
                         __end_of_GetNumber 6158                      __end_of_StringContains 86AE  
                        UseBluetooth@rfconf 028D                           __end_of_EncodeNEC 8574  
                 __size_of_ReadEEPROM_1Byte 0058                         __end_of_ResetTimer0 AA54  
                       __end_of_ResetTimer1 AA40                         __end_of_ResetTimer3 AA72  
                       __size_of_IRrawToNEC 032C                                  ___ftmul@f1 007A  
                                ___ftmul@f2 007D                               _SendNEC_bytes 9D34  
                                ___ftsub@f1 009F                                  ___ftsub@f2 00A2  
                                ___fttol@f1 009F                                 ?_SetEEPROM1 0096  
                               ?_SetEEPROM2 0096                              __pcstackCOMRAM 0001  
                               ?_InitTimer0 0001                                 ?_InitTimer1 0001  
                               ?_InitTimer2 0001                                 ?_InitTimer3 0001  
                               ?_InitTimers 0001                          _Conf2_ChannelB_OFF EF38  
                        _Conf2_ChannelD_OFF EF58                         __size_of_GetEEPROM1 00DC  
                             __end_of_Round A112                         __size_of_GetEEPROM2 00CA  
                            _ReadPushButton A9B8                      i2cleanBuffer16bit@data 0017  
                              __pidataBANK0 AA88                                __pidataBANK3 AA7D  
                              __pidataBANK5 A620                            main@ConnectedOLD 03E0  
                 __size_of_EnterCommandMode 015C                                  ___lltoft@c 0068  
                                 ?_UARTchar 0001                     __end_of_WaitForIRsignal 9D34  
                             __end_of_scale 5CD2             __end_of_Conf2_ChannelH_1_ON_STR EEC6  
                               _Init_System 7BC2                         SyncEEPROMToGlobal@i 00F0  
                       SyncEEPROMToGlobal@j 00F1                         SyncEEPROMToGlobal@k 00D1  
           __end_of_Conf2_ChannelH_2_ON_STR EEDA             __end_of_Conf2_ChannelH_3_ON_STR EEEE  
                    __end_of_IsAlphaNumeric A620                    _Conf2_ChannelH_1_OFF_STR EE73  
                         __end_of_ReadUSART A8C8                           __end_of_ReadIRpin A9FE  
                             ?i1_UARTstring 0002                                ??_LEDTimerON 0060  
                                ___lwtoft@c 0068                           __end_of_Frequency F051  
                 __size_of_CheckReceivingIR 0012                        ??i1_UARTstring_CONST 0005  
                               _ReadVoltage 961A                    _Conf2_ChannelH_2_OFF_STR EE88  
                           ReadVoltage@temp 008F                         __size_of_ClearUSART 0012  
                  __end_of_UARTstring_CONST A6B6                                  __div_to_l_ 7A2E  
                  _Conf2_ChannelH_3_OFF_STR EE9D                             GetNumber@result 006F  
                           ?_StringAddEqual 006F                                     ??_Round 00B1  
                             ReadUSART@data 0060                           __end_of_OpenUSART 9F44  
                           __div_to_l_@exp1 006B                             __div_to_l_@cntr 006A  
                                   ??_scale 008C                      i1UARTstring_CONST@data 0003  
                                 ?_IsLetter 0001                             __div_to_l_@quot 0066  
                              sprintf@width 00DB                      __size_of_SetMemoryChar 003A  
                                 ?_IsNumber 0001                      GetNumberUnsigned@count 0077  
                         __end_of_SetTimer0 AA68                                  __pbssBANK0 00F5  
                                __pbssBANK2 0295                                  __pbssBANK3 03E5  
                                __pbssBANK4 0400                                  __pbssBANK5 0500  
                                __pbssBANK6 0600                      __size_of_SetMemoryLong 00FA  
                         _EEPROMinitialized A94C                                   ?_InitUART 00B5  
                         __end_of_ResetBlue 9144                     __end_of_UARTcommandMenu 8A18  
                    _Conf2_ChannelB_OFF_STR EEEE                           __end_of_UseIRCode 730C  
                        ReadVoltage@voltage 008C                     __end_of_ReadCodeButtons A328  
                               _ReceivingIR 0050                          ?_EEPROMinitialized 0001  
                             ??_StringMatch 0064                      _Conf2_ChannelD_OFF_STR EF01  
                       __end_of_ProjectName EE73                               __div_to_l_@f1 0060  
                             __div_to_l_@f2 0063                    __size_ofi1_BlueConnected 000E  
                     WriteEEPROM_1Byte@data 0062                                   ?_ResetADC 0001  
                        __end_of_LEDTimerON A972                                     ?_InitIR 0001  
                           ?_StringContains 0060                              ?_SendNEC_bytes 0070  
                    __end_of_ReadPushButton A9C6                    __end_of_InternalADC_Read 9A30  
                       __size_of_BufferCopy 008A                                     ?_SendRF 0060  
                               _SendRF_wait A4CE                    UARTstringCRLN_CONST@data 0064  
                         ?i1_UARTchar_CONST 0001                                ??i1_UARTchar 0001  
                   __size_of_UARTchar_CONST 0020                                     ?___ftge 0060  
                       ??_EEPROMinitialized 0060                                     ?___lmul 0060  
                                   ?___wmul 006E                          ??i1_UARTchar_CONST 0001  
                             ?_Reverse_Byte 0001                                  ??_UARTchar 0060  
                         _VoltageDividerOFF AA82                                   ?___altoft 0068  
                                   ?_fround 0089                              ___lmul@product 0068  
                            ??i1_UARTstring 0004                         GetEEPROM1@Arrayspot 0089  
                                 ?___ftpack 0060                       EnterCommandMode@count 0132  
                           ?_IsAlphaNumeric 0001                       cleanBuffer16bit@count 0062  
                       SetEEPROM1@Arrayspot 00BB                                   ?___lltoft 0068  
                        __end_of_PCBVersion F045                          ?_VoltageDividerOFF 0001  
                 SendNEC_bytes@RepeatAmount 0074                                   ?___lwtoft 0068  
                                   i1l13450 A806                                     i1l13446 A7FC  
                                   i1l13438 A8DA                                     i1l13622 A818  
                                   i1l13630 A6E8                                     i1l14406 00B4  
                                   i1l14432 013A                                     i1l13626 A82C  
                                   i1l13634 A700                                     i1l14418 00F2  
                                   i1l14442 0160                                     i1l14452 017A  
                                   i1l13668 AA22                                     i1l14398 0094  
                                   i2l14030 5422                                     i2l14006 53BE  
                                   i2l14040 543A                                     i2l14114 54D0  
                                   i2l14122 54DA                                     i2l14050 544A  
                                   i2l14042 543E                                     i2l14034 542E  
                                   i2l14300 5698                                     i2l14132 54EE  
                                   i2l14060 5464                                     i2l14222 55BC  
                                   i2l14070 5478                                     i2l13600 68D0  
                                   i2l13520 6734                                     i2l14320 56E4  
                                   i2l14312 56B4                                     i2l14216 55A4  
                                   i2l14208 5590                                     i2l14152 5514  
                                   i2l14144 5504                                     i2l14240 55E2  
                                   i2l14314 56C2                                     i2l14170 5534  
                                   i2l14162 5526                                     i2l14154 5518  
                                   i2l14090 54B6                                     i2l14082 5492  
                                   i2l13604 68D6                                     i2l13540 678C  
                                   i2l13532 6748                                     i2l13524 673A  
                                   i2l13516 66FC                                     i2l14332 5700  
                                   i2l14260 561A                                     i2l14228 55D0  
                                   i2l14148 5510                                     i2l14076 5486  
                                   i2l14244 55EC                                     i2l13614 A496  
                                   i2l14350 573E                                     i2l14318 56D2  
                                   i2l14182 554A                                     i2l14094 54BC  
                                   i2l14190 555E                                     i2l13560 680A  
                                   i2l13608 68DC                                     i2l13528 6740  
                                   i2l14352 5744                                     i2l14336 571A  
                                   i2l14264 562A                                     i2l14176 5540  
                                   i2l13570 6834                                     i2l13562 6810  
                                   i2l13490 6642                                     i2l13474 65D2  
                                   i2l13618 A4B2                                     i2l14274 564C  
                                   i2l13548 67AE                                     i2l13484 6618  
                                   i2l14380 5782                                     i2l14364 5762  
                                   i2l14356 574E                                     i2l14188 5554  
                                   i2l13590 6892                                     i2l13566 6816  
                                   i2l13494 6646                                     i2l13478 65DA  
                                   i2l14382 578A                                     i2l14358 5756  
                                   i2l14294 567C                                     i2l14286 566A  
                                   i2l14198 5570                                     i2l13584 688C  
                                   i2l13488 661C                                     i2l14288 5670  
                                   i2l14296 5682                                     i2l14368 5768  
                                   i2l13578 6852                                     i2l13658 AA30  
                                   i2l13982 535A                                     i2l13974 5336  
                                   i2l13966 530E                                     i2l13976 533C  
                                   i2l13978 5342                            i1UARTstring@data 0002  
                             UseIRCode@Code 00E6                           _ReceivedStringPos 03EB  
                       GetEEPROM2@Arrayspot 0089                                     _TBLPTRH 000FF7  
                                   _TBLPTRL 000FF6                                     _TBLPTRU 000FF8  
                       SetEEPROM2@Arrayspot 00E1                         ??_VoltageDividerOFF 0060  
                           SetMemoryLong@MH 0093                             SetMemoryLong@ML 0094  
                         ?_Local_CloseUSART 0001                   __end_of_EEPROMinitialized A960  
                       __size_of_SetEEPROM1 012C                         __size_of_SetEEPROM2 010E  
                   BluetoothInitialSetup@ok 01B9                         __size_of_InitTimer0 0010  
                       __size_of_InitTimer1 000E                         __size_of_InitTimer2 000E  
                       __size_of_InitTimer3 000A                                  ??_IsLetter 0060  
                       __size_of_InitTimers 0014                                   ?_high_isr 0001  
                        __end_ofi1_UARTchar A938                         _GetStringAfterComma 8A18  
                                ??_IsNumber 0060                        UARTstring_CONST@data 0062  
                        ??_Local_CloseUSART 0060                 __size_of_SyncGlobalToEEPROM 00A0  
                                ??_InitUART 00B9                                 _ResetTimer0 AA4A  
                               _ResetTimer1 AA36                                 _ResetTimer3 AA68  
       __size_of_StringMatchCaseInsensitive 0094                                ??_UARTstring 0063  
                                   _Global1 02D5                                     _Global2 0295  
                                   SendRF@i 0067                               ?_UseBluetooth 00F2  
                                   _InitADC A8F6                                     _InitApp A3C0  
                            UseBluetooth@ok 028A                                 low_isr@data 0016  
               __end_of_BluetoothConfigured A9A8                     UseBluetooth@tempRFArray 028B  
                                ??_ResetADC 0060                              InitUART@config 00C2  
                         __end_of__npowers_ EE12                                     __Hparam 0000  
                                _scale$4080 008C                             ?_ReadPushButton 0001  
                           __size_of_InitIR 0048                                     __Lparam 0000  
                      __end_of_SendNEC_wait 9C10                     __size_of_SendRF_Channel 0280  
                           __size_of_SendRF 00F0                                SendRF@Config 0062  
                 __end_of_VoltageDividerOFF AA86                              ??_Reverse_Byte 0060  
                           __size_of___ftge 00CE                                     ___awdiv 9220  
                           __size_of___lmul 007A                                     ___ftadd 6E3A  
                                   ___awmod 9788                                     ___ftdiv 8182  
                                   ___ftneg A6B6                                     ___lldiv 9554  
                       __end_of_StringMatch A036                        ?_GetStringAfterComma 0060  
                           __size_of___wmul 0038                                     ___ftmul 7EBA  
                                   ___llmod 98EA                                     ___ftsub A328  
                                   ___fttol 82D4                               _SetMemoryChar A50C  
                              ?_IsCharacter 0001                               _SetMemoryLong 8E78  
                          ?_WaitForIRsignal 0001                                  ??___altoft 006C  
                                   __pcinit 93BE                                     _delayUS A27E  
                                ??___ftpack 0065                        _IsAlphaNumericString A5B6  
                           __size_of_fround 02D8                                     __ramtop 1000  
                                ??___lltoft 006C                                     __ptext0 4C2C  
                                   __ptext1 70B8                                     __ptext2 6BBA  
                                   __ptext3 A9B8                                     __ptext4 A2D4  
                                   __ptext5 01CE                                     __ptext6 A406  
                                   __ptext7 9CA4                                     __ptext8 A44A  
                                   __ptext9 A546                                  ??___lwtoft 006B  
                                 _T0CONbits 000FD5                        __size_ofi1_ReadUSART 0016  
                         __end_of_hexpowers EE59                                   _T1CONbits 000FCD  
                               ?__div_to_l_ 0060                    IsAlphaNumericString@data 0062  
                         SetMemoryChar@Data 006C                                     _dpowers EDC3  
                              ??_IRrawToNEC 001C                                   _T2CONbits 000FCA  
                      i1UARTchar_CONST@data 0001                          __end_of_UARTstring A7EE  
                         SetMemoryChar@Test 006B                                     _isdigit A716  
                                 _T3CONbits 000FB1                        i1UARTchar_CONST@temp 0002  
                          ___awmod@dividend 0060                   GetMemoryLong@AddressFirst 0084  
                              ??_GetEEPROM1 0087                                ??_GetEEPROM2 0087  
                                   _low_isr 0018                                DecodeNEC@Nec 0064  
                                   main@buf 0300                                     _sprintf 284E  
                      __size_ofi2_ReadIRpin 000E                                  ??_high_isr 0025  
                            __pintcode_body 523E                                 _ProjectName EE59  
                      end_of_initialization 9484                            SendNEC_wait@code 0075  
                             ??_cleanBuffer 0064                                 _ProductName 053C  
                          ?_UARTcommandMenu 0064                             i1ReadUSART@data 0001  
                              ??_ClearUSART 0061                              ??_UseBluetooth 0200  
                                   int_func 523E          BluetoothInitialSetup@BroadcastTEMP 016F  
                          ?_ReadCodeButtons 0001                 __size_ofi2_cleanBuffer16bit 0042  
                           ??_SendNEC_bytes 0075                    __size_of_lowercaseString 0044  
                                 i2u1542_40 66A0                                   i2u1549_40 6766  
                           ___lldiv@divisor 0064                       EraseScreen@characters 0002  
                        __end_of_SYNTAX_ERR F013                            _ReadEEPROM_1Byte A226  
                           ___lldiv@counter 006C                          __end_of_IRrawToNEC 68E2  
                    main@BluetoothStringPos 03DF                           _GetNumberUnsigned 6158  
                                 _RCSTAbits 000FAB                     SyncEEPROMToGlobal@Temp1 00D2  
                   SyncEEPROMToGlobal@Temp2 0091                                     postdec1 000FE5  
                                   postdec2 000FDD                       ??_GetStringAfterComma 0065  
                          _EnterCommandMode 8026                           main@BroadcastTEMP 03C8  
                                   postinc0 000FEE                                     postinc2 000FDE  
                            ?_SetMemoryChar 006A                   __size_of_VoltageDividerON 0006  
                    __size_of_BlueConnected 000E                                ?_EraseScreen 0001  
                            ?_SetMemoryLong 0085                          __end_of_GetEEPROM1 9220  
                        __end_of_GetEEPROM2 9554                           ??i1_BlueConnected 0001  
                            __tdiv_to_l_@f1 0060                              __tdiv_to_l_@f2 0063  
                        ?_GetNumberUnsigned 006C                                   _IRRawCode 0600  
                     ?_IsAlphaNumericString 0062                               ??__tdiv_to_l_ 0066  
                   ??_BluetoothInitialSetup 00E0                           SetMemoryLong@Data 0085  
                          _CheckReceivingIR A972                           SetMemoryLong@Test 008E  
                         GetMemoryLong@temp 007C                                ??_BufferCopy 006E  
                       ??_GetNumberUnsigned 0071                          __end_of_ClearUSART A996  
                                 _IRaddress 00FD                      __size_of_GetMemoryChar 002A  
                                 _TRISAbits 000F92                                   _TRISBbits 000F93  
                        _SyncEEPROMToGlobal 750C                                   _TRISCbits 000F94  
                            BufferCopy@from 0068                                  main@IRtask 03DD  
                    __size_of_GetMemoryLong 0170                                   _IRcodeBit 00FA  
                __size_of_EEPROMinitialized 0014                      __size_of_EEPROM_UNLOCK 0016  
         StringContainsCaseInsensitive@That 0065           StringContainsCaseInsensitive@This 0063  
                                 _IRcommand 00FE                 __end_of_ConfigureOscillator AA88  
                            _BufferOverflow 03E9                      __size_of_Reverse_4Byte 0C7E  
                 __size_of_SetEEPROMdefault 011E                                   _RFcodeBit 0045  
                       ?_SyncEEPROMToGlobal 0001                       __end_ofi2_ResetTimer0 AA5E  
                         main@Bluetoothtask 03DE                        __end_ofi1_UARTstring A83C  
                                 _DecodeNEC 983C                          GetNumberUnsigned@i 0079  
                               ___ftdiv@exp 0078                  ReadEEPROM_1Byte@PEIEstatus 0063  
                                 _IRtimeout 03F1                                   _TXSTAbits 000FAC  
                 __size_of_cleanBuffer16bit 005E                         UseBluetooth@tempNec 027C  
                               _StringMatch 9FBE                   __end_of_GetNumberUnsigned 65B6  
                       __size_of__div_to_l_ 0194                         UseBluetooth@timeout 028C  
        __end_of_StringMatchCaseInsensitive 9CA4                  _StringMatchCaseInsensitive 9C10  
                       __end_of_cleanBuffer A226                           _Timer1_Postscaler 0049  
                            _UARTchar_CONST A83C                              _IRrepeatAmount 0042  
                              ??_SetEEPROM1 00B8                                ??_SetEEPROM2 00DA  
                        __end_of_BufferCopy 9E48                                 ___ftmul@exp 0083  
                              ??_InitTimer0 0060                                ??_InitTimer1 0060  
                              ??_InitTimer2 0060                                ??_InitTimer3 0060  
                            __end_of_InitIR A3C0                                ??_InitTimers 0060  
                __size_of_VoltageDividerOFF 0004                              __end_of_SendRF 9062  
                       _Conf2_ChannelH_1_ON EF88                         _Conf2_ChannelH_2_ON EFA8  
                       _Conf2_ChannelH_3_ON EFC8                                   _GetNumber 5CD2  
                      SyncGlobalToEEPROM@ok 00E5                                   _EncodeNEC 8426  
            GetStringAfterComma@CommaNumber 0062                              __end_of___ftge 93BE  
                              ?_Init_System 0001                              __end_of___lmul 9FBE  
                   i2cleanBuffer16bit@count 0019                              _ReceivedString 0478  
                            __end_of___wmul A5B6                        ??_SyncEEPROMToGlobal 008D  
                               _BAUDCONbits 000FB8                               __pidataCOMRAM AA78  
                          ??_StringAddEqual 0071                           __size_of_UARTchar 001C  
                              ?_ReadVoltage 0089                              __end_of_fround 6BBA  
              __end_of_UARTstringCRLN_CONST A48C                            IRrawToNEC@Invert 001B  
                         ?_UARTstring_CONST 0062                         start_initialization 93BE  
                                 _ReadUSART A8B0                     __size_of_UARTstringCRLN 0038  
                         _Timer2_Postscaler 004A                                   _ReadIRpin A9F0  
                     __end_of_InitBluetooth A0AC                            UseBluetooth@temp 0290  
                                 _Frequency F04D                         __end_of__tdiv_to_l_ 7A2E  
                        ??_UARTstring_CONST 0064                               GetNumber@This 006C  
                             _BlueConnected A9FE                               GetNumber@temp 007C  
                      __end_of_Reverse_Byte 9788                          __end_of_SetEEPROM1 87DA  
                        __end_of_SetEEPROM2 8E78                          __end_of_InitTimer0 A9B8  
                        __end_of_InitTimer1 A9F0                          __end_of_InitTimer2 A9E2  
                        __end_of_InitTimer3 AA4A                          __end_of_InitTimers A94C  
                          ??_StringContains 0064                                   _OpenUSART 9EC8  
                         __size_of_IsLetter 0032                       __size_of_SendNEC_wait 009E  
                                ?_DecodeNEC 0064                           __size_of_IsNumber 001E  
                           ___llmod@divisor 0071                           __size_of_InitUART 0116  
                           ___llmod@counter 0075                                   _SetTimer0 AA5E  
                    __end_of_UARTchar_CONST A85C                                   _ResetBlue 9062  
                                 _Sendcount 0048                                    ??_InitIR 0068  
                      main@VoltageStatusOLD 03E1                              _SendRF_Channel 6BBA  
                   GetStringAfterComma@This 0060                                ?_SendRF_wait 0068  
                                 _UseIRCode 70B8                               _GetMemoryChar A79C  
                                  ??_SendRF 0065                           _Timer3_Postscaler 004B  
                 StringAddEqual@firstnumber 0074                             ??_SetMemoryChar 006B  
                             _GetMemoryLong 7D4A                           ?_InternalADC_Read 0069  
                           ??_SetMemoryLong 008A                            ??_IsAlphaNumeric 0061  
                                  ??___ftge 0066                           __size_of_ResetADC 000E  
                                  ??___lmul 0068                               _EEPROM_UNLOCK A8E0  
                                  ??___wmul 0072                              GetEEPROM1@Temp 0085  
                            GetEEPROM2@Temp 0085                           ??_lowercaseString 0062  
                                ?_GetNumber 006C                      ??_IsAlphaNumericString 0064  
                        ??_InternalADC_Read 006B                                  ?_EncodeNEC 0064  
                             _Reverse_4Byte 37C8          StringMatchCaseInsensitive@tempThat 0068  
        StringMatchCaseInsensitive@tempThis 0067                      __size_of_lowercaseChar 002C  
                               __pdataBANK0 00FF                                 __pdataBANK3 03F1  
                               __pdataBANK5 053C                            __CFG_LPT1OSC$OFF 000000  
                                  ??_fround 008C                               sprintf@tmpval 00CE  
                       UARTcommandMenu@Desc 0066                        GetNumber@CommaNumber 006E  
                  WriteEEPROM_1Byte@address 0060                        __size_of_IsCharacter 0018  
                      __end_of_UseBluetooth 284E                           __size_of___altoft 00A2  
               __size_ofi1_UARTstring_CONST 0030                                  fround@prec 0092  
                         __size_of___ftpack 0120                   SetMemoryLong@AddressFirst 0089  
                                 Round@temp 00B1                            cleanBuffer@count 0062  
                         __size_of___lltoft 0080                     GetNumberUnsigned@result 006F  
                               __pbssCOMRAM 003A                   __size_ofi1_UARTchar_CONST 001A  
                                ?_ReadUSART 0001              ?_StringContainsCaseInsensitive 0063  
                         __size_of___lwtoft 002C                                  ?_ReadIRpin 0001  
            __end_of_Conf2_ChannelB_OFF_STR EF01                               __pcstackBANK0 0060  
                             __pcstackBANK1 0100                               __pcstackBANK2 0200  
                             __pcstackBANK3 0300                                _SendNEC_wait 9B72  
                         _Conf2_ChannelB_ON EF48                           _Conf2_ChannelD_ON EF68  
                            ?_BlueConnected 0001                                _isdigit$3735 0061  
            __end_of_Conf2_ChannelD_OFF_STR EF14              StringMatchCaseInsensitive@That 0065  
            StringMatchCaseInsensitive@This 0063                    GetNumber@tempCommaNumber 0076  
                   _Conf2_ChannelH_1_ON_STR EEB2                                ?_ResetTimer0 0001  
                              ?_ResetTimer1 0001                                ?_ResetTimer3 0001  
                               _cleanBuffer A1CC                     _Conf2_ChannelH_2_ON_STR EEC6  
                          ??_ReadPushButton 0060                                  ?_OpenUSART 0060  
                   _Conf2_ChannelH_3_ON_STR EEDA                           __size_of_high_isr 57C6  
                               sprintf@flag 00DD                                 sprintf@fval 00D8  
                               sprintf@prec 00CC                      __end_of_SendRF_Channel 6E3A  
                                  ?_InitADC 0001                                    ?_InitApp 0001  
                                ?_SetTimer0 0017                             ?_UARTchar_CONST 0001  
                                ?_ResetBlue 0001                              ?_GetMemoryChar 0064  
                __size_of_GetNumberUnsigned 045E                              ?_GetMemoryLong 0064  
                   _Conf2_ChannelH_1_Status 00F7                                  ?_UseIRCode 00E6  
                   _Conf2_ChannelH_2_Status 00F8                           __CFG_CCP2MX$PORTC 000000  
                   _Conf2_ChannelH_3_Status 00F9                              ?_EEPROM_UNLOCK 0001  
                           SendRF_wait@Code 0068                   __size_of_Local_CloseUSART 000E  
                                 __pintcode 0008                               __pmediumconst EDC2  
                            ?_Reverse_4Byte 0060                            _VoltageDividerON AA72  
                                  ?___awdiv 0066                                   __ptext100 A8B0  
                                 __ptext101 A9FE                                   __ptext102 9DBE  
                                 __ptext111 A6E6                                   __ptext103 A1CC  
                                 __ptext120 A48C                                   __ptext112 A896  
                                 __ptext104 A996                                   __ptext121 AA54  
                                 __ptext113 A816                                   __ptext105 A8F6  
                                 __ptext122 AA28                                   __ptext114 A90C  
                                 __ptext106 AA0C                                   __ptext123 AA5E  
                                 __ptext115 AA1A                                   __ptext107 A94C  
                                 __ptext124 AA68                                   __ptext116 A8C8  
                                 __ptext108 A3C0                                   __ptext125 65B6  
                                 __ptext117 A7EE                                   __ptext109 AA86  
                                  ?___ftadd 0093                                   __ptext118 A922  
                         SendRF_wait@Config 006A                                 IRrawToNEC@i 0023  
                                  ?___awmod 0060                                    ?___ftdiv 006B  
                      cleanBuffer16bit@data 0060                                    ?___ftneg 0060  
                           SendRF_wait@size 006B                                    ?___lldiv 0060  
                                  ?___ftmul 007A                                    ?___llmod 006D  
                                  ?___ftsub 009F                                   __npowers_ EDEB  
                                  ?___fttol 009F                                UseIRCode@NEC 00E8  
                               __pintcodelo 0018                                    ?_delayUS 0060  
              UseBluetooth@SerialNumberTEMP 0280                        __size_of_EraseScreen 0028  
                               __tdiv_to_l_ 7888                      BluetoothInitialSetup@i 01BA  
                    BluetoothInitialSetup@j 01B8                                ??__div_to_l_ 0066  
                         SendRF_wait@amount 006C                               IRrawToNEC@NEC 0019  
                         _WriteEEPROM_1Byte A170                          UARTchar_CONST@data 0060  
                                  ?_isdigit 0001                   __end_of_Conf2_ChannelB_ON EF58  
                 __end_of_Conf2_ChannelD_ON EF78                               IRrawToNEC@Raw 0017  
                             UseBluetooth@i 0294            UseBluetooth@ReceivedStringPosOLD 027B  
                        UARTchar_CONST@temp 0061                    __end_of_ReadEEPROM_1Byte A27E  
                     _BluetoothChangeStatus 03E8                                    ?_low_isr 0001  
                               GetEEPROM1@i 008A                                 GetEEPROM1@j 008B  
                               GetEEPROM2@i 008A                                 GetEEPROM2@j 008B  
                               GetEEPROM2@k 008C                          ?_WriteEEPROM_1Byte 0060  
                            __size_of_Round 0066                                   _hexpowers EE39  
                __end_of_SyncGlobalToEEPROM 9B72                       __size_ofi1_UARTstring 0026  
                  __end_of_EnterCommandMode 8182                                    ?_sprintf 00AE  
                            __size_of_scale 0504                               _lowercaseChar A770  
                  UseBluetooth@rfchannelSTR 0270                            _SetEEPROMdefault 8B36  
                                 delayUS@US 0060                             IsCharacter@data 0001  
                       ??_WriteEEPROM_1Byte 0063                                 ??_DecodeNEC 006C  
                            ___wmul@product 0072                                    _IOCBbits 000F7D  
                           i1_BlueConnected AA1A                    __end_of_CheckReceivingIR A984  
                          _cleanBuffer16bit A112                             ?_SendRF_Channel 0001  
                                  _IPR1bits 000F9F                                    _IPR2bits 000FA2  
                                  _PIE1bits 000F9D                        _UARTstringCRLN_CONST A44A  
                                  _PIE2bits 000FA0                                cleanBuffer@i 0067  
                                  _PIR1bits 000F9E                          __end_of__div_to_l_ 7BC2  
                                  _PIR2bits 000FA1                                    _RCONbits 000FD0  
                          __CFG_WDTPS$32768 000000                              UseIRCode@found 00EF  
                               ??_GetNumber 0071                                 ??_EncodeNEC 0068  
                            DecodeNEC@temp1 0072                              DecodeNEC@temp2 0070  
                            DecodeNEC@temp3 0071                                    _RFConfig 0044  
                                  _UARTchar A87A                ??_StringMatchCaseInsensitive 0067  
                             ??i1_ReadUSART 0001                __size_of_BluetoothConfigured 0012  
                  BluetoothInitialSetup@buf 0184                   ReadEEPROM_1Byte@GIEstatus 0062  
                 __end_of_WriteEEPROM_1Byte A1CC                                  _ADCON0bits 000FC2  
                                _ADCON1bits 000FC1                                  _ADCON2bits 000FC0  
                         ___wmul@multiplier 006E                                i1_UARTstring A816  
                      __size_of_Init_System 0188                                    _IRpinOLD 0040  
            __size_of_BluetoothInitialSetup 07E6                         ReadCodeButtons@temp 0069  
             __end_of_BluetoothInitialSetup 4C2C                       __size_of_Reverse_Byte 00B6  
                            _UARTstringCRLN A546                             ??_BlueConnected 0060  
                               ??_ReadUSART 0060                               ??i2_ReadIRpin 0017  
                      __size_of_ReadVoltage 00B8                                 ??_ReadIRpin 0060  
                  __size_of_WaitForIRsignal 0090                             StringAddEqual@i 0075  
                           StringAddEqual@j 0076                              ?_lowercaseChar 0060  
                         ___lmul@multiplier 0060                                 _INTCON2bits 000FF1  
                                  _IsLetter A652                                   copy_data0 9426  
                                 copy_data1 9446                                   copy_data2 9478  
                                  _IsNumber A85C                  __end_ofi2_cleanBuffer16bit A4CE  
                             _CommandString 0414                                    _InitUART 8C54  
                           UseBluetooth@buf 020C                             UseBluetooth@set 027A  
                               ??_OpenUSART 0062                                GetNumber@Hex 0079  
                           IRrawToNEC@first 0022                             ??_GetMemoryChar 0068  
                           OpenUSART@config 0062                             ??_GetMemoryLong 0068  
                        SendNEC_wait@toggle 007A                       ?_UARTstringCRLN_CONST 0064  
                               ??_SetTimer0 0019                 __end_of_GetStringAfterComma 8B36  
                                _EECON1bits 000FA6                                ?_StringMatch 0060  
                               ??_ResetBlue 0069                            __size_of_InitADC 0016  
                           ??_EEPROM_UNLOCK 0060                                    _ResetADC AA0C  
              BluetoothInitialSetup@Default 01B7                       __end_of_SendNEC_bytes 9DBE  
                          __size_of_InitApp 0046                                    __Hrparam 0000  
                               ??_UseIRCode 00EC                             ??_Reverse_4Byte 0064  
                                  __Lrparam 0000                          __CFG_BOREN$SBORDIS 000000  
                  __size_of_UARTcommandMenu 011E                        __size_of_SendRF_wait 003E  
                     __size_of_UseBluetooth 2680                    __size_of_ReadCodeButtons 0054  
                              _Reverse_Byte 96D2                   InternalADC_Read@ADCcounts 0069  
                         Reverse_4Byte@This 0060                            __size_of___awdiv 00D0  
                          __size_of___ftadd 027E                            __size_of___awmod 00B4  
                          __size_of___ftdiv 0152                             cleanBuffer@data 0060  
                          __size_of___ftneg 0030                            __size_of___lldiv 00C6  
                                  ___altoft 9A30                            __size_of___ftmul 016C  
                          __size_of___llmod 00A4                            __size_of___ftsub 0050  
                          __size_of___fttol 0152                           Reverse_4Byte@temp 006C  
                                  ___ftpack 87DA                  InternalADC_Read@AnaChanSel 006D  
                               _fround$4078 008F                                 _fround$4079 008C  
                                  ___lltoft 9E48                      __end_of_UARTstringCRLN A57E  
                          __size_of_delayUS 0056               __end_of_Conf2_ChannelB_ON_STR EF26  
                                  ___lwtoft A744               __end_of_Conf2_ChannelD_ON_STR EF38  
                         main@VoltageStatus 03E4                                  sprintf@idx 00C5  
                                sprintf@len 00C8                                  sprintf@exp 00D2  
                                sprintf@val 00D4                      UseBluetooth@NecAddress 028E  
                          i1_UARTchar_CONST A896                         __end_ofi1_ReadUSART A922  
                          __size_of_isdigit 002E                      UseBluetooth@NecCommand 028F  
                          __size_of_low_isr 01B2                                    __ptext10 88FA  
                                  __ptext11 9C10                                    __ptext20 37C8  
                                  __ptext12 9FBE                                    __ptext21 A972  
                                  __ptext13 730C                                    __ptext30 A85C  
                                  __ptext22 961A                                    __ptext14 A4CE  
                                  __ptext31 8A18                                    __ptext23 A744  
                                  __ptext15 8F72                                    __ptext40 750C  
                                  __ptext32 6158                                    __ptext24 8182  
                                  __ptext16 A960                                    __ptext41 948A  
                                  __ptext33 5CD2                                    __ptext25 AA72  
                                  __ptext17 AA36                                    __ptext50 AA40  
                                  __ptext42 9144                                    __ptext34 9F44  
                                  __ptext26 AA82                                    __ptext18 9B72  
                                  __ptext51 A9D4                                    __ptext43 8B36  
                                  __ptext35 A652                                    __ptext27 998E  
                                  __ptext19 9D34                                    __ptext60 8D6A  
                                  __ptext52 A9E2                                    __ptext44 8C54  
                                  __ptext36 8426                                    __ptext28 A5B6  
                                  __ptext61 86AE                                    __ptext53 A378  
                                  __ptext45 A0AC                                    __ptext37 983C  
                                  __ptext29 A5EC                                    __ptext70 A7C6  
                                  __ptext62 8E78                                    __ptext54 A112  
                                  __ptext46 9A30                                    __ptext38 96D2  
                                  __ptext71 A87A                                    __ptext63 7D4A  
                                  __ptext55 AA4A                                    __ptext47 9EC8  
                                  __ptext39 7BC2                                    __ptext80 7EBA  
                                  __ptext72 76DA                                    __ptext64 A50C  
                                  __ptext56 A9F0                                    __ptext48 A9C6  
                       EnterCommandMode@buf 0100                                    __ptext81 9788  
                                  __ptext73 A770                                    __ptext65 A170  
                                  __ptext57 A9A8                                    __ptext49 A938  
                                  __ptext90 6E3A                                    __ptext82 9220  
                                  __ptext74 8026                                    __ptext66 A8E0  
                                  __ptext58 A036                                    __ptext91 87DA  
                                  __ptext83 7888                                    __ptext75 284E  
                                  __ptext67 A79C                                    __ptext59 9AD2  
                                  __ptext92 A6B6                                    __ptext84 7A2E  
                                  __ptext76 57CE                                    __ptext68 A226  
                                  __ptext93 92F0                                    __ptext85 9E48  
                                  __ptext77 A716                                    __ptext69 4446  
                         SendNEC_bytes@code 0070                                    __ptext94 A684  
                                  __ptext86 98EA                                    __ptext78 68E2  
                                  __ptext95 A83C                                    __ptext87 9554  
                                  __ptext79 A57E                                    __ptext96 8574  
                                  __ptext88 82D4                                    __ptext97 9062  
                                  __ptext89 A328                     __end_ofi1_BlueConnected AA28  
                                  __ptext98 A27E                                    __ptext99 A984  
                                  __powers_ EE12                                    _high_isr 0008  
                        IsAlphaNumeric@data 0061                  __end_of_Conf1_ChannelD_STR EFE7  
                __end_of_Conf1_ChannelE_STR EFF6                  __end_of_Conf1_ChannelF_STR F005  
                          __size_of_sprintf 0F7A                         __end_ofi2_ReadIRpin AA36  
  StringContainsCaseInsensitive@MatchAmount 0069                             _lowercaseString A406  
                             __size_of_main 0612                       SendRF_Channel@channel 006D  
                            SetEEPROM1@Temp 0096                                _UseBluetooth 01CE  
                                  delayUS@i 0065                              SetEEPROM2@Temp 0096  
                      __size_of_ResetTimer0 000A                        __size_of_ResetTimer1 000A  
                      __size_of_ResetTimer3 000A                   __size_of_UARTstring_CONST 0032  
                            SetEEPROM1@fail 00BC                   GetMemoryChar@AddressFirst 0068  
                            SetEEPROM2@fail 00DD                              SetEEPROM1@burn 00B4  
                            SetEEPROM2@burn 00D6                              SetEEPROM1@temp 00BA  
                            SetEEPROM2@temp 00DC                __size_of_ConfigureOscillator 0002  
                    UseBluetooth@EnteredNEC 0286                            _Local_CloseUSART A9C6  
                           GetMemoryLong@MH 0081                             GetMemoryLong@ML 0082  
                    UseBluetooth@EmptyPlace 0284                                BufferCopy@to 006A  
               __size_of_SyncEEPROMToGlobal 01CE                  __size_of_WriteEEPROM_1Byte 005C  
                                _LEDTimerON A960                             ?_UARTstringCRLN 0064  
                    __size_ofi2_ResetTimer0 000A                             StringContains@i 0068  
                                _INTCONbits 000FF2                   __size_of_InternalADC_Read 00A2  
                            OpenUSART@spbrg 0060                             ??_lowercaseChar 0062  
                              UARTchar@data 0060                             StringMatch@That 0062  
                           StringMatch@This 0060                                    isdigit@c 0062  
                                  scale@scl 008F                            EncodeNEC@address 008C  
                  __end_of_VoltageDividerON AA78                         i2cleanBuffer16bit@i 001E  
              __end_of_Conf2_ChannelH_1_OFF EF88                __end_of_Conf2_ChannelH_2_OFF EFA8  
              __end_of_Conf2_ChannelH_3_OFF EFC8                            ??_UARTchar_CONST 0060  
                                  intlevel1 0000                                    intlevel2 0000  
                                _PCBVersion F040                                   sprintf@ap 00CA  
                                 sprintf@cp 00C6                            __tdiv_to_l_@exp1 006E  
                                 sprintf@sp 00AE                            __tdiv_to_l_@cntr 006D  
                              ?_cleanBuffer 0060          GetStringAfterComma@tempCommaNumber 0066  
                          __tdiv_to_l_@quot 0069                           ??_WaitForIRsignal 0069  
                          EncodeNEC@command 0064                      ??_UARTstringCRLN_CONST 0066  
                          ___lldiv@dividend 0060                                IsLetter@data 0060  
           ??_StringContainsCaseInsensitive 0067     StringContainsCaseInsensitive@MatchCount 006A  
                            _BatteryVoltage 03E5                              GetMemoryChar@H 0069  
                               _IR_New_Code 03F0                                  i1_UARTchar A922  
                            GetMemoryLong@H 0080                              GetMemoryLong@L 0083  
                    __size_of_InitBluetooth 0076                                 BufferCopy@i 006E  
                     __end_of_SetMemoryChar A546                       __end_of_SetMemoryLong 8F72  
                             ??_IsCharacter 0001                               _InitUART$4077 00BD  
                  __end_of_SetEEPROMdefault 8C54                              _Conf1_ChannelD F013  
                            _Conf1_ChannelE F01F                              _Conf1_ChannelF F02B  
                                GetNumber@i 007A                              _Conf1_Channels F045  
                __end_ofi1_UARTstring_CONST A716                                 i1_ReadUSART A90C  
                          DecodeNEC@address 0068               __size_of_IsAlphaNumericString 0036  
                 StringContains@MatchAmount 0066                                ?__tdiv_to_l_ 0060  
                          UARTcommandMenu@i 006D                      UARTcommandMenu@Command 0064  
                         ??_UARTcommandMenu 0068                 __end_of_Conf2_ChannelH_1_ON EF98  
               __end_of_Conf2_ChannelH_2_ON EFB8                 __end_of_Conf2_ChannelH_3_ON EFD8  
                            _Conf2_Channels F049                                    sprintf@c 00DF  
                  __end_of_cleanBuffer16bit A170                                    sprintf@f 00B0  
                          DecodeNEC@command 006A                           ??_ReadCodeButtons 0069  
                          ___lldiv@quotient 0068                                 i2_ReadIRpin AA28  
                         ?_ReadEEPROM_1Byte 0060                                EraseScreen@i 0003  
                   __end_of_lowercaseString A44A            GetNumberUnsigned@tempCommaNumber 0076  
                          ?i1_BlueConnected 0001                     __size_of_StringAddEqual 0200  
                            i1UARTchar@data 0001                            ??_SendRF_Channel 006D  
                        ??_ReadEEPROM_1Byte 0062                           ?_EnterCommandMode 0001  
                __end_of_Conf2_ChannelB_OFF EF48                  __end_of_Conf2_ChannelD_OFF EF68  
                       _BluetoothConfigured A996  BluetoothInitialSetup@BluetoothVersionLine1 0133  
BluetoothInitialSetup@BluetoothVersionLine2 0151                          ??_EnterCommandMode 00E0  
                                _UARTstring A7C6                               i2_ResetTimer0 AA54  
                        _BluetoothBroadcast 04DC                           ?_CheckReceivingIR 0001  
                 GetStringAfterComma@result 0063              StringContainsCaseInsensitive@i 006D  
                        _SyncGlobalToEEPROM 9AD2                              Init_System@buf 01BB  
                        ??_CheckReceivingIR 0060                          _BluetoothFirmware1 0500  
                        _BluetoothFirmware2 051E                             BufferCopy@count 006C  
                      __size_of_StringMatch 0078  
